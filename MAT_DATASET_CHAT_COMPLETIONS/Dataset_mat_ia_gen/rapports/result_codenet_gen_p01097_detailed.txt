================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:10:00
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import math
from collections import deque, defaultdict

# Le problème consiste à sélectionner k cubes parmi n positions candidates pour former un polyèdre connexe avec une surface minimale.
# Chaque cube est un cube axis-aligned de côté s, placé aux coordonnées données.
# La surface totale est calculée comme 6*s*s cubes moins 2*s*s par face commune entre cubes adjacents.
# La condition de connectivité impose que le graphe induit par les cubes sélectionnés est connexe (adjacency = partage d'une face).
# Si aucun choix de k cubes connexes n'est possible, on retourne -1.

# Approche:
# 1) Construire un graphe avec les n positions. Deux positions sont adjacentes si la distance entre leurs coins est exactement s sur une seule coordonnée et identique sur les autres (voisin direct).
# 2) Trouver un sous-ensemble de k positions connexes minimisant la surface = 6*k*s*s - 2*s*s*(nombre d'arêtes internes dans le sous-graphe).
# 3) Maximiser les arêtes internes revient à minimiser la surface parce que chaque arête interne retire 2*s*s à la surface.
# 4) Le problème est équivalent à trouver un "connected induced subgraph" de taille k avec le maximum d'arêtes internes, dans un graphe non pondéré.
#
# Difficultés:
# Le graphe peut avoir jusqu'à 2000 sommets, ce qui est trop grand pour explorer exhaustivement toutes les combinaisons.
# L'énoncé semble complexe, mais en pratique, une méthode BFS/DFS pour générer toutes les composantes connexes jusqu'à taille k pourrait fonctionner.
# Cependant, plusieurs composantes connexes peuvent être nombreuses, donc on doit optimiser.
#
# Stratégie:
# - Parcourir tous les sommets comme points de départ.
# - Utiliser une BFS pour générer tous les ensembles connexes de taille k à partir de ce sommet.
#   - Comme le nombre de combinaisons serait prohibitif, on utilisera une recherche en/à la limite raisonnable:
#     On génère les connexions par niveaux, on sauvegarde les ensembles étendus.
#     Pour le plus grand k (2000), on peut faire uniquement un BFS simple pour exister ou pas (et prendre la surface de la composante connexe minimale approchée).
# - En pratique, on sélectionne une approche plus simple: trouver la plus petite surface parmi les composantes connexes de taille au moins k.
# - Si une composante connexe a taille < k, on ne peut pas choisir k cubes dedans.
# - Sinon, choisir k cubes dans cette composante faisant un sous-graphe connexe minimal pour la surface.
#   - Supposons que la surface diminue quand on prend plus d'arêtes, donc on veut des sous-graphes complets, c'est difficile.
#
# Simplification:
# - Puisque la surface dépend uniquement du nombre d'arêtes dans le sous-graphe, pour minimiser la surface, on cherche à maximiser le nombre d'arêtes internes dans le sous-graphe de taille k.
# - Trouver un sous-graphe connexe avec k sommets et un nombre maximisé d'arêtes internes est NP-difficile.
#
# Solution pragmatique:
# - L'énoncé indique 100 datasets max.
# - Implémenter une recherche heuristique :
#   * Pour chaque composante connexe, si sa taille >= k :
#       - Utiliser BFS pour générer ensembles connexes à partir de chaque sommet mais limité (prune si taille > k).
#       - Calculer surface pour chaque ensemble connexe de taille k rencontré.
#       - Mémoriser la surface minimale.
# - Si aucune configuration trouvée, retourner -1.
#
# Optimisation:
# - Pre-calcul des composantes connexes.
# - Pour chaque composante ayant taille >= k, on tente BFS ou DFS pour trouver aucune à tous les sous-ensembles connexes de taille k : cette approche est exponentielle.
#
# Approche finale:
# - Trouver toutes composantes connexes via BFS.
# - Pour chaque composante connexe de taille >= k:
#   - Parce que les cubes sont sur une grille sparse et conditions du problème, il est probable que la composante soit fortement connectée.
#   - On considère la surface de la composante entière (taille = taille composante):
#     surface = 6*s*s*size - 2*s*s*number_of_edges.
#   - Puis on tente de trouver un sous-graphe connexe de taille k dans cette composante qui minimise la surface.
#
# Heuristique pour sous-graphe connexe:
# - Pour chaque sommet, BFS pour étendre la composante jusqu'à taille k (premiers arrivés suffisent).
# - Calcul surface pour ensemble result.
# - Mémoriser la meilleure surface.
#
# On peut accélérer en prunant par "frontier" minimum et éviter revisiter mêmes ensembles.
#
# Implémentation modérée pour tenir dans le temps et mémoire.


def main():
    input = sys.stdin.readline

    # Directions pour voisinage adjacents (faces communes)
    directions = [(s,0,0) for s in [1]] + [(0,s,0) for s in [1]] + [(0,0,s) for s in [1]]
    # Mais le pas est s, on prendra s variable, donc on fera plus tard

    while True:
        line = input().strip()
        if not line:
            break
        n, k, s = map(int, line.split())
        if n == 0 and k == 0 and s == 0:
            break

        coords = []
        pos_to_id = dict()
        for i in range(n):
            x,y,z = map(int, input().split())
            coords.append((x,y,z))
            pos_to_id[(x,y,z)] = i

        # Construire le graphe: deux cubes sont adjacents s'ils sont à distance s sur une axe et mêmes coord sur les deux autres axes
        adj = [[] for _ in range(n)]

        # Pour accélérer la recherche de voisins, on indexe les positions par coord accessibles
        # Comme s peut être grand, on cherche uniquement sur les dimensions x,y,z avec +s ou -s déplacement sur une coord

        # Construisons un set pour lookup rapide
        pos_set = set(coords)

        for i,(x,y,z) in enumerate(coords):
            # Tester voisins en décalant coord +- s sur chaque axe
            neighbors = [
                (x+s,y,z),
                (x-s,y,z),
                (x,y+s,z),
                (x,y-s,z),
                (x,y,z+s),
                (x,y,z-s)
            ]
            for nx,ny,nz in neighbors:
                if (nx,ny,nz) in pos_set:
                    j = pos_to_id[(nx,ny,nz)]
                    adj[i].append(j)

        # Trouver composantes connexes
        visited = [False]*n
        components = []
        for i in range(n):
            if not visited[i]:
                q = deque([i])
                comp = []
                visited[i] = True
                while q:
                    u = q.popleft()
                    comp.append(u)
                    for w in adj[u]:
                        if not visited[w]:
                            visited[w] = True
                            q.append(w)
                components.append(comp)

        # Fonction pour calculer surface d'un ensemble de cubes
        # Surface = 6*s*s*len - 2*s*s*nombre d'arêtes internes
        def surface(cubes_set):
            # cubes_set : set of node indices
            # Calcul du nombre d'arêtes internes dans le sous-graphe induit
            # Pour chaque cube, compter ses voisins dans cubes_set
            edges = 0
            for u in cubes_set:
                for w in adj[u]:
                    if w in cubes_set and w > u:
                        edges += 1
            return 6*s*s*len(cubes_set) - 2*s*s*edges

        INF = 10**15
        ans = INF

        # Pour chaque composante connexe de taille >= k
        # On fait BFS multi départs pour trouver tous les sous-graphes connexes de taille k
        # BFS avec tuple (ensemble_actuel, frontier)
        # Mais pour k jusqu'à 2000, explorer tous les sous-ensembles est impossible.
        #
        # Implémentation limitée:
        # Pour chaque sommet dans la composante, on fait BFS normale pour grandir aux couches successives
        # On arrête à taille k et on calcule surface
        #
        # Cette méthode ne garantit pas trouver l'ensemble optimum, mais donnera une solution raisonnable.
        # On mémorise la meilleure surface obtenue et on donnera -1 si aucune trouvée.

        for comp in components:
            size_comp = len(comp)
            if size_comp < k:
                continue  # impossible de choisir k cubes dans cette composante

            # Creation d'un sous-graphe pour cette composante pour accélérer
            comp_set = set(comp)
            comp_id_map = {v:i for i,v in enumerate(comp)}
            comp_adj = [[] for _ in range(size_comp)]
            for v in comp:
                vid = comp_id_map[v]
                for w in adj[v]:
                    if w in comp_set:
                        comp_adj[vid].append(comp_id_map[w])

            # BFS depuis chaque sommet de la composante pour générer un sous-ensemble connexe de taille k minimal en surface
            # On limite la recherche, on mémorise le plus petit surface vu

            # NB: Pour éviter explosion mémorielle on évite mémoriser ensembles entiers.
            # Nous faisons un BFS normal:
            # Pendant la BFS, on suit uniquement la distance (nombre de sommets explorés),
            # on s'arrête quand on atteint la taille k.

            for start in range(size_comp):
                visited_bfs = [False]*size_comp
                visited_bfs[start] = True
                q = deque()
                # L'état: (ensemble_actuel, queue_frontier)
                # Simplification: ici on réalise juste un BFS classique pour trouver la composante connexe jusqu'à taille k depuis start
                # On va simplement parcourir le k premiers niveaux.
                #
                # On récupère simplement les premiers k sommets rencontrés et calcule la surface.
                level_nodes = []
                q.append(start)
                while q and len(level_nodes) < k:
                    u = q.popleft()
                    level_nodes.append(u)
                    for w in comp_adj[u]:
                        if not visited_bfs[w]:
                            visited_bfs[w] = True
                            q.append(w)

                if len(level_nodes) == k:
                    # surface des nodes choisis:
                    nodes_set = set(comp[v] for v in level_nodes)
                    cur_surf = surface(nodes_set)
                    if cur_surf < ans:
                        ans = cur_surf

        print(ans if ans != INF else -1)


if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.21183791756629944
    2. '.' → logprob: -2.3368380069732666
    3. '<|end|>' → logprob: -2.8368380069732666
    4. '\' → logprob: -4.7118377685546875
    5. 'newline' → logprob: -5.0868377685546875
    6. 'import' → logprob: -5.0868377685546875
    7. '
' → logprob: -5.7118377685546875
    8. '' → logprob: -5.8368377685546875
    9. '<|end|>' → logprob: -5.8368377685546875
    10. '\r' → logprob: -6.3368377685546875

Token 4: ' math' (ID: 13324)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -1.259079363080673e-05
    2. 'os' → logprob: -11.375012397766113
    3. ' math' → logprob: -14.875012397766113
    4. '"os' → logprob: -15.250012397766113
    5. ' re' → logprob: -15.875012397766113
    6. ' json' → logprob: -16.00001335144043
    7. '_os' → logprob: -17.00001335144043
    8. '	os' → logprob: -17.00001335144043
    9. ' ' → logprob: -17.25001335144043
    10. ' argparse' → logprob: -17.25001335144043

Token 5: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2752407193183899
    2. '\n' → logprob: -2.775240659713745
    3. 'import' → logprob: -3.025240659713745
    4. '<|end|>' → logprob: -3.275240659713745
    5. '\' → logprob: -3.400240659713745
    6. '
' → logprob: -3.650240659713745
    7. '```' → logprob: -4.400240898132324
    8. '

' → logprob: -5.275240898132324
    9. '<|end|>' → logprob: -5.275240898132324
    10. ',' → logprob: -5.900240898132324

Token 6: 'from' (ID: 2845)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.4082861840724945
    2. '\n' → logprob: -2.4082860946655273
    3. 'import' → logprob: -2.5332860946655273
    4. '
' → logprob: -3.0332860946655273
    5. '\' → logprob: -3.4082860946655273
    6. '```' → logprob: -3.6582860946655273
    7. '<|end|>' → logprob: -3.7832860946655273
    8. '

' → logprob: -4.408286094665527
    9. ',' → logprob: -4.533286094665527
    10. '<|end|>' → logprob: -6.158286094665527

Token 7: ' collections' (ID: 22690)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.3692077398300171
    2. ' collections' → logprob: -1.244207739830017
    3. 'os' → logprob: -5.244207859039307
    4. ' typing' → logprob: -5.369207859039307
    5. 'collections' → logprob: -5.869207859039307
    6. ' math' → logprob: -6.244207859039307
    7. ' itertools' → logprob: -6.994207859039307
    8. ' datetime' → logprob: -6.994207859039307
    9. ' ' → logprob: -7.119207859039307
    10. '_' → logprob: -7.619207859039307

Token 8: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.4422348439693451
    2. ' import' → logprob: -1.1922348737716675
    3. '.' → logprob: -2.942234754562378
    4. '<|end|>' → logprob: -7.817234992980957
    5. ' ' → logprob: -7.942234992980957
    6. '.import' → logprob: -9.692234992980957
    7. '.Counter' → logprob: -9.942234992980957
    8. '_' → logprob: -9.942234992980957
    9. '```' → logprob: -10.442234992980957
    10. ' defaultdict' → logprob: -10.567234992980957

Token 9: ' deque' (ID: 90347)
  Prédit: ' defaultdict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.4560529887676239
    2. ' deque' → logprob: -1.7060530185699463
    3. ' abc' → logprob: -2.3310530185699463
    4. 'deque' → logprob: -2.5810530185699463
    5. 'abc' → logprob: -4.581052780151367
    6. ' named' → logprob: -7.706052780151367
    7. 'import' → logprob: -8.331052780151367
    8. 'default' → logprob: -8.456052780151367
    9. ' import' → logprob: -8.581052780151367
    10. ' Counter' → logprob: -8.831052780151367

Token 10: ',' (ID: 11)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.9177452921867371
    2. '
' → logprob: -1.6677453517913818
    3. 'import' → logprob: -1.7927453517913818
    4. '\' → logprob: -2.167745351791382
    5. '

' → logprob: -2.292745351791382
    6. '```' → logprob: -4.792745113372803
    7. '.' → logprob: -5.292745113372803
    8. '<|end|>' → logprob: -5.542745113372803
    9. '' → logprob: -5.667745113372803
    10. ',' → logprob: -6.167745113372803

Token 11: ' defaultdict' (ID: 107098)
  Prédit: ' defaultdict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.29972368478775024
    2. 'default' → logprob: -1.4247236251831055
    3. 'named' → logprob: -4.2997236251831055
    4. ' named' → logprob: -6.2997236251831055
    5. 'Counter' → logprob: -6.5497236251831055
    6. 'Ordered' → logprob: -6.6747236251831055
    7. ' Counter' → logprob: -8.674723625183105
    8. ' Ordered' → logprob: -9.424723625183105
    9. 'deque' → logprob: -10.924723625183105
    10. ' default' → logprob: -12.174723625183105

Token 12: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.1048083305358887
    2. ',' → logprob: -1.7298083305358887
    3. '

' → logprob: -1.7298083305358887
    4. '<|end|>' → logprob: -2.2298083305358887
    5. 'import' → logprob: -2.3548083305358887
    6. '```' → logprob: -2.9798083305358887
    7. '\n' → logprob: -3.4798083305358887
    8. '.' → logprob: -5.354808330535889
    9. '\' → logprob: -5.479808330535889
    10. '<|end|>' → logprob: -5.729808330535889

Token 13: '#' (ID: 2)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.15172617137432098
    2. 'def' → logprob: -2.526726245880127
    3. 'class' → logprob: -3.776726245880127
    4. '#' → logprob: -4.401726245880127
    5. 'from' → logprob: -4.776726245880127
    6. ',' → logprob: -4.776726245880127
    7. '```' → logprob: -5.651726245880127
    8. '`' → logprob: -6.151726245880127
    9. '\' → logprob: -7.401726245880127
    10. '.' → logprob: -7.401726245880127

Token 14: ' Le' (ID: 2018)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.36983054876327515
    2. '#' → logprob: -2.11983060836792
    3. 'class' → logprob: -2.11983060836792
    4. 'import' → logprob: -4.24483060836792
    5. 'Counter' → logprob: -4.24483060836792
    6. 'd' → logprob: -4.49483060836792
    7. '`' → logprob: -5.36983060836792
    8. 'default' → logprob: -5.49483060836792
    9. 'from' → logprob: -5.74483060836792
    10. '\' → logprob: -6.24483060836792

Token 15: ' problème' (ID: 35630)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.326449990272522
    2. 'etcode' → logprob: -1.951449990272522
    3. 'et' → logprob: -3.0764498710632324
    4. 'e' → logprob: -3.3264498710632324
    5. 'vens' → logprob: -3.5764498710632324
    6. 'vel' → logprob: -4.701449871063232
    7. 'etc' → logprob: -4.826449871063232
    8. 'n' → logprob: -6.326449871063232
    9. 'm' → logprob: -6.701449871063232
    10. '#' → logprob: -6.701449871063232

Token 16: ' consiste' (ID: 46504)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.024321457371115685
    2. 's' → logprob: -5.149321556091309
    3. ':' → logprob: -5.399321556091309
    4. ' de' → logprob: -5.399321556091309
    5. ' :' → logprob: -5.649321556091309
    6. ' ' → logprob: -6.524321556091309
    7. '<|end|>' → logprob: -7.024321556091309
    8. ' space' → logprob: -7.274321556091309
    9. ' s' → logprob: -7.649321556091309
    10. ',' → logprob: -8.149321556091309

Token 17: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.16398058831691742
    2. 'à' → logprob: -1.9139806032180786
    3. ' ' → logprob: -5.913980484008789
    4. ' ' → logprob: -7.538980484008789
    5. ''à' → logprob: -8.913980484008789
    6. ' essentiellement' → logprob: -9.288980484008789
    7. '```' → logprob: -9.413980484008789
    8. ' a' → logprob: -9.913980484008789
    9. '#' → logprob: -10.413980484008789
    10. '  ' → logprob: -10.913980484008789

Token 18: ' sélectionner' (ID: 188432)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.47857728600502014
    2. ' résoudre' → logprob: -1.3535772562026978
    3. 'rés' → logprob: -2.6035773754119873
    4. ' trouver' → logprob: -3.9785773754119873
    5. ' rés' → logprob: -4.603577136993408
    6. 'res' → logprob: -5.228577136993408
    7. ' déterminer' → logprob: -6.103577136993408
    8. 'impl' → logprob: -6.103577136993408
    9. 'calcul' → logprob: -6.603577136993408
    10. 'r' → logprob: -6.978577136993408

Token 19: ' k' (ID: 372)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.5004226565361023
    2. 'les' → logprob: -1.375422716140747
    3. 'le' → logprob: -3.250422716140747
    4. ' le' → logprob: -3.875422716140747
    5. ' la' → logprob: -4.125422477722168
    6. 'une' → logprob: -4.125422477722168
    7. ' des' → logprob: -4.375422477722168
    8. ' une' → logprob: -5.000422477722168
    9. 'des' → logprob: -5.000422477722168
    10. ' ' → logprob: -5.125422477722168

Token 20: ' cubes' (ID: 88455)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.711455225944519
    2. '<|end|>' → logprob: -0.711455225944519
    3. '<|end|>' → logprob: -4.336455345153809
    4. ' espaces' → logprob: -6.086455345153809
    5. '_' → logprob: -7.086455345153809
    6. ' tokens' → logprob: -8.086455345153809
    7. ' éléments' → logprob: -8.586455345153809
    8. ' items' → logprob: -9.148955345153809
    9. ' points' → logprob: -9.273955345153809
    10. '-' → logprob: -9.336455345153809

Token 21: ' parmi' (ID: 51713)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.93367600440979
    2. 's' → logprob: -1.93367600440979
    3. ' à' → logprob: -1.93367600440979
    4. ',' → logprob: -2.68367600440979
    5. '.' → logprob: -2.93367600440979
    6. ' pour' → logprob: -3.05867600440979
    7. ' parmi' → logprob: -3.68367600440979
    8. '_' → logprob: -4.058675765991211
    9. ' afin' → logprob: -4.183675765991211
    10. ' de' → logprob: -4.433675765991211

Token 22: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.4466438293457031
    2. 'une' → logprob: -2.446643829345703
    3. 'n' → logprob: -2.571643829345703
    4. ' une' → logprob: -2.946643829345703
    5. 'les' → logprob: -3.571643829345703
    6. ' la' → logprob: -3.821643829345703
    7. 'l' → logprob: -3.821643829345703
    8. ' les' → logprob: -3.946643829345703
    9. 'la' → logprob: -4.321643829345703
    10. ' un' → logprob: -4.696643829345703

Token 23: ' positions' (ID: 15897)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6712002754211426
    2. ' afin' → logprob: -2.6712002754211426
    3. ' en' → logprob: -2.6712002754211426
    4. ' cubes' → logprob: -2.6712002754211426
    5. ' pour' → logprob: -2.7962002754211426
    6. '.' → logprob: -3.1712002754211426
    7. ' de' → logprob: -3.4212002754211426
    8. ' ,' → logprob: -3.6712002754211426
    9. ' tels' → logprob: -3.9212002754211426
    10. 's' → logprob: -4.046200275421143

Token 24: ' candidates' (ID: 18116)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6169153451919556
    2. '.' → logprob: -1.6169153451919556
    3. ' ' → logprob: -1.7419153451919556
    4. ' afin' → logprob: -3.866915225982666
    5. 's' → logprob: -3.991915225982666
    6. ':' → logprob: -4.616915225982666
    7. '```' → logprob: -4.741915225982666
    8. 'pour' → logprob: -5.241915225982666
    9. '#' → logprob: -5.491915225982666
    10. '_' → logprob: -5.741915225982666

Token 25: ' pour' (ID: 1930)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3706771433353424
    2. ' ' → logprob: -1.49567711353302
    3. '.' → logprob: -2.8706772327423096
    4. '#' → logprob: -5.3706769943237305
    5. 's' → logprob: -5.4956769943237305
    6. ' ,' → logprob: -5.6206769943237305
    7. ' afin' → logprob: -5.8706769943237305
    8. '
' → logprob: -6.3706769943237305
    9. ' en' → logprob: -6.4956769943237305
    10. ',
' → logprob: -6.4956769943237305

Token 26: ' former' (ID: 9254)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.8238700032234192
    2. ' minim' → logprob: -1.3238699436187744
    3. ' maxim' → logprob: -1.4488699436187744
    4. 'max' → logprob: -3.0738699436187744
    5. ' max' → logprob: -6.5738701820373535
    6. 'placer' → logprob: -6.6988701820373535
    7. 'optim' → logprob: -6.6988701820373535
    8. ' optimiser' → logprob: -6.6988701820373535
    9. ' couvrir' → logprob: -6.8238701820373535
    10. 'maximize' → logprob: -7.0738701820373535

Token 27: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.8826382756233215
    2. 'une' → logprob: -1.2576382160186768
    3. ' une' → logprob: -1.5076382160186768
    4. 'un' → logprob: -2.7576382160186768
    5. ' la' → logprob: -5.007638454437256
    6. ' ' → logprob: -5.757638454437256
    7. 'la' → logprob: -6.882638454437256
    8. ' des' → logprob: -7.007638454437256
    9. '```' → logprob: -7.132638454437256
    10. 'le' → logprob: -7.257638454437256

Token 28: ' poly' (ID: 14600)
  Prédit: ' cube'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cube' → logprob: -0.2878720760345459
    2. 'cube' → logprob: -2.912872076034546
    3. 's' → logprob: -3.537872076034546
    4. ' solide' → logprob: -4.162872314453125
    5. ' espace' → logprob: -4.412872314453125
    6. ' ensemble' → logprob: -4.412872314453125
    7. ' code' → logprob: -4.537872314453125
    8. '```' → logprob: -4.537872314453125
    9. ' volume' → logprob: -4.662872314453125
    10. ' motif' → logprob: -5.162872314453125

Token 29: 'è' (ID: 957)
  Prédit: 'cube'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cube' → logprob: -0.39761632680892944
    2. 'è' → logprob: -2.147616386413574
    3. 'om' → logprob: -2.772616386413574
    4. 'h' → logprob: -3.272616386413574
    5. 'g' → logprob: -3.522616386413574
    6. 'c' → logprob: -3.647616386413574
    7. 'm' → logprob: -4.897616386413574
    8. 'l' → logprob: -5.022616386413574
    9. 'd' → logprob: -5.522616386413574
    10. 'n' → logprob: -5.772616386413574

Token 30: 'dre' (ID: 54853)
  Prédit: 'dre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dre' → logprob: -0.05801878497004509
    2. 'd' → logprob: -3.058018684387207
    3. 'dr' → logprob: -4.933018684387207
    4. '`' → logprob: -7.558018684387207
    5. 'dra' → logprob: -7.933018684387207
    6. '\' → logprob: -8.058018684387207
    7. '```' → logprob: -8.933018684387207
    8. 'è' → logprob: -8.933018684387207
    9. 'de' → logprob: -9.183018684387207
    10. '\xc2' → logprob: -9.308018684387207

Token 31: ' conn' (ID: 10850)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5519094467163086
    2. ',' → logprob: -1.0519094467163086
    3. 'conv' → logprob: -3.6769094467163086
    4. ' en' → logprob: -4.801909446716309
    5. '```' → logprob: -4.801909446716309
    6. ' ' → logprob: -5.551909446716309
    7. ' convex' → logprob: -5.551909446716309
    8. ' à' → logprob: -5.801909446716309
    9. ' de' → logprob: -5.926909446716309
    10. '_' → logprob: -5.926909446716309

Token 32: 'exe' (ID: 70589)
  Prédit: 'ect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -0.02586384117603302
    2. 'ex' → logprob: -4.2758636474609375
    3. 'e' → logprob: -4.9008636474609375
    4. 'exe' → logprob: -6.2758636474609375
    5. '```' → logprob: -7.0258636474609375
    6. 'ected' → logprob: -7.5258636474609375
    7. 'ec' → logprob: -8.400863647460938
    8. 'exion' → logprob: -8.525863647460938
    9. 'u' → logprob: -9.150863647460938
    10. 'ecu' → logprob: -9.775863647460938

Token 33: ' avec' (ID: 3937)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6600760817527771
    2. ',' → logprob: -0.7850760817527771
    3. '#' → logprob: -5.285076141357422
    4. ':' → logprob: -5.660076141357422
    5. '_' → logprob: -5.910076141357422
    6. 's' → logprob: -5.910076141357422
    7. ',
' → logprob: -6.035076141357422
    8. 'import' → logprob: -6.285076141357422
    9. '
' → logprob: -6.535076141357422
    10. ' ' → logprob: -6.785076141357422

Token 34: ' une' (ID: 2463)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'une' → logprob: -1.0762805938720703
    2. ' k' → logprob: -2.0762805938720703
    3. 'au' → logprob: -2.3262805938720703
    4. '```' → logprob: -2.3262805938720703
    5. ' une' → logprob: -2.5762805938720703
    6. ' un' → logprob: -2.8262805938720703
    7. 'un' → logprob: -3.0762805938720703
    8. ' au' → logprob: -3.5762805938720703
    9. ' la' → logprob: -3.7012805938720703
    10. ' des' → logprob: -3.9512805938720703

Token 35: ' surface' (ID: 9753)
  Prédit: ' surface'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' surface' → logprob: -0.9660512804985046
    2. ' face' → logprob: -1.9660513401031494
    3. 'surface' → logprob: -2.7160513401031494
    4. ' structure' → logprob: -2.8410513401031494
    5. '```' → logprob: -3.4660513401031494
    6. 's' → logprob: -3.5910513401031494
    7. ' volume' → logprob: -3.7160513401031494
    8. ' forme' → logprob: -3.8410513401031494
    9. ' propriété' → logprob: -3.8410513401031494
    10. ' configuration' → logprob: -3.9660513401031494

Token 36: ' minimale' (ID: 143217)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.13958705961704254
    2. ' area' → logprob: -3.389587163925171
    3. ' _' → logprob: -3.514587163925171
    4. '_area' → logprob: -4.264586925506592
    5. ' ' → logprob: -4.389586925506592
    6. 's' → logprob: -5.264586925506592
    7. ' d' → logprob: -5.514586925506592
    8. ' plane' → logprob: -5.514586925506592
    9. '```' → logprob: -5.514586925506592
    10. 'area' → logprob: -6.264586925506592

Token 37: '.
' (ID: 558)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.3454349040985107
    2. '
' → logprob: -1.9704349040985107
    3. '\' → logprob: -2.0954349040985107
    4. '.' → logprob: -2.0954349040985107
    5. '_' → logprob: -2.0954349040985107
    6. 'def' → logprob: -2.8454349040985107
    7. ',' → logprob: -3.2204349040985107
    8. '```' → logprob: -3.9704349040985107
    9. '' → logprob: -4.09543514251709
    10. 'n' → logprob: -4.09543514251709

Token 38: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8790260553359985
    2. '

' → logprob: -2.004025936126709
    3. '#' → logprob: -2.129025936126709
    4. 'def' → logprob: -2.254025936126709
    5. '\' → logprob: -2.504025936126709
    6. ' 

' → logprob: -3.129025936126709
    7. '.' → logprob: -3.254025936126709
    8. '' → logprob: -4.004025936126709
    9. '\n' → logprob: -4.754025936126709
    10. 'import' → logprob: -4.879025936126709

Token 39: ' Chaque' (ID: 94758)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.288672685623169
    2. 'def' → logprob: -1.288672685623169
    3. '
' → logprob: -1.413672685623169
    4. ' 

' → logprob: -3.163672685623169
    5. '

' → logprob: -3.288672685623169
    6. '\' → logprob: -3.663672685623169
    7. '' → logprob: -4.03867244720459
    8. ' 
' → logprob: -4.03867244720459
    9. 'class' → logprob: -4.03867244720459
    10. 'import' → logprob: -4.53867244720459

Token 40: ' cube' (ID: 46822)
  Prédit: ' cube'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cube' → logprob: -0.17054705321788788
    2. 'cube' → logprob: -2.0455470085144043
    3. ' position' → logprob: -5.420547008514404
    4. 'c' → logprob: -5.420547008514404
    5. ' ' → logprob: -5.545547008514404
    6. ' ' → logprob: -5.670547008514404
    7. '_' → logprob: -6.545547008514404
    8. 's' → logprob: -6.545547008514404
    9. 'position' → logprob: -6.670547008514404
    10. ' token' → logprob: -6.920547008514404

Token 41: ' est' (ID: 893)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.29114362597465515
    2. ' possède' → logprob: -2.1661436557769775
    3. ' has' → logprob: -3.6661436557769775
    4. 'a' → logprob: -3.9161436557769775
    5. ' ' → logprob: -3.9161436557769775
    6. 's' → logprob: -4.666143417358398
    7. ' est' → logprob: -5.166143417358398
    8. ' ' → logprob: -5.166143417358398
    9. ' peut' → logprob: -5.291143417358398
    10. 'poss' → logprob: -5.541143417358398

Token 42: ' un' (ID: 537)
  Prédit: 'dé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dé' → logprob: -0.6812807321548462
    2. 're' → logprob: -1.6812807321548462
    3. ' placé' → logprob: -2.8062806129455566
    4. 'position' → logprob: -3.0562806129455566
    5. ' représent' → logprob: -3.1812806129455566
    6. ' déf' → logprob: -3.9312806129455566
    7. ' caractér' → logprob: -4.181280612945557
    8. 'def' → logprob: -4.306280612945557
    9. 'rep' → logprob: -4.681280612945557
    10. 'une' → logprob: -4.806280612945557

Token 43: ' cube' (ID: 46822)
  Prédit: ' point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' point' → logprob: -0.8371490836143494
    2. ' sommet' → logprob: -0.9621490836143494
    3. 'vo' → logprob: -2.587149143218994
    4. ' voisin' → logprob: -3.337149143218994
    5. 'point' → logprob: -3.712149143218994
    6. 'élé' → logprob: -4.462149143218994
    7. ' voxel' → logprob: -5.087149143218994
    8. ' position' → logprob: -5.212149143218994
    9. ' tuple' → logprob: -5.462149143218994
    10. ' cube' → logprob: -5.712149143218994

Token 44: ' axis' (ID: 16300)
  Prédit: ' adjacent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' adjacent' → logprob: -1.0737254619598389
    2. '<|end|>' → logprob: -1.4487254619598389
    3. ' d' → logprob: -2.823725461959839
    4. ',' → logprob: -2.823725461959839
    5. ' de' → logprob: -3.198725461959839
    6. ' placé' → logprob: -3.823725461959839
    7. ' à' → logprob: -3.948725461959839
    8. ' ,' → logprob: -4.073725700378418
    9. ' voisin' → logprob: -4.198725700378418
    10. ' ```' → logprob: -4.198725700378418

Token 45: '-al' (ID: 13254)
  Prédit: '-al'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-al' → logprob: -0.004021764732897282
    2. 'aligned' → logprob: -5.879021644592285
    3. ' aligned' → logprob: -6.754021644592285
    4. '-' → logprob: -11.129021644592285
    5. '-align' → logprob: -11.254021644592285
    6. '_al' → logprob: -11.754021644592285
    7. ' -' → logprob: -12.379021644592285
    8. 'al' → logprob: -12.504021644592285
    9. '-Al' → logprob: -13.629021644592285
    10. '-oriented' → logprob: -13.879021644592285

Token 46: 'igned' (ID: 3626)
  Prédit: 'igned'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'igned' → logprob: -0.0021478813141584396
    2. 'ign' → logprob: -6.502147674560547
    3. '#' → logprob: -8.752147674560547
    4. 'igne' → logprob: -9.127147674560547
    5. 'igné' → logprob: -9.502147674560547
    6. '```' → logprob: -9.502147674560547
    7. 'IGNED' → logprob: -9.627147674560547
    8. 'ing' → logprob: -9.752147674560547
    9. 'i' → logprob: -10.877147674560547
    10. 'gn' → logprob: -11.252147674560547

Token 47: ' de' (ID: 334)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7887387275695801
    2. '.' → logprob: -1.28873872756958
    3. '_' → logprob: -2.41373872756958
    4. '#' → logprob: -2.78873872756958
    5. ' ' → logprob: -3.66373872756958
    6. '<|end|>' → logprob: -3.66373872756958
    7. 's' → logprob: -3.91373872756958
    8. 'import' → logprob: -4.53873872756958
    9. ' ,' → logprob: -4.91373872756958
    10. '[' → logprob: -5.28873872756958

Token 48: ' côté' (ID: 33533)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.937310516834259
    2. 'c' → logprob: -1.1873104572296143
    3. '1' → logprob: -1.5623104572296143
    4. ' unit' → logprob: -3.0623104572296143
    5. ' côté' → logprob: -4.812310695648193
    6. ' c' → logprob: -5.187310695648193
    7. 'unit' → logprob: -5.312310695648193
    8. ' side' → logprob: -5.312310695648193
    9. '```' → logprob: -5.562310695648193
    10. ' edge' → logprob: -5.687310695648193

Token 49: ' s' (ID: 265)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2824682295322418
    2. '1' → logprob: -1.4074681997299194
    3. ' de' → logprob: -7.157468318939209
    4. '=' → logprob: -8.15746784210205
    5. ' length' → logprob: -9.78246784210205
    6. 's' → logprob: -10.15746784210205
    7. ' d' → logprob: -10.15746784210205
    8. 'de' → logprob: -10.40746784210205
    9. 'd' → logprob: -10.90746784210205
    10. 'length' → logprob: -10.90746784210205

Token 50: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2694263458251953
    2. '.' → logprob: -1.5194263458251953
    3. ' =' → logprob: -5.019426345825195
    4. ',' → logprob: -5.644426345825195
    5. ' ' → logprob: -5.769426345825195
    6. 'u' → logprob: -6.894426345825195
    7. '_' → logprob: -7.269426345825195
    8. 'e' → logprob: -7.894426345825195
    9. 's' → logprob: -8.019426345825195
    10. ' .' → logprob: -8.269426345825195

Token 51: ' placé' (ID: 147030)
  Prédit: ' et'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' et' → logprob: -0.7001612186431885
    2. ' ' → logprob: -1.4501612186431885
    3. ' en' → logprob: -2.7001612186431885
    4. 's' → logprob: -3.3251612186431885
    5. 'et' → logprob: -3.7001612186431885
    6. 'import' → logprob: -3.9501612186431885
    7. ' donc' → logprob: -4.075160980224609
    8. ',' → logprob: -4.450160980224609
    9. ' mais' → logprob: -4.700160980224609
    10. '#' → logprob: -4.950160980224609

Token 52: ' aux' (ID: 5850)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.26445287466049194
    2. ' ' → logprob: -1.8894529342651367
    3. 'sur' → logprob: -3.6394529342651367
    4. ' sur' → logprob: -4.014452934265137
    5. ' au' → logprob: -4.139452934265137
    6. ' dans' → logprob: -5.264452934265137
    7. ' aux' → logprob: -5.764452934265137
    8. 'au' → logprob: -5.764452934265137
    9. ' at' → logprob: -6.139452934265137
    10. 's' → logprob: -6.514452934265137

Token 53: ' coordonnées' (ID: 181895)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.6589071750640869
    2. ' positions' → logprob: -0.9089071750640869
    3. 'positions' → logprob: -2.908907175064087
    4. ' ' → logprob: -4.658906936645508
    5. ' coordonnées' → logprob: -4.908906936645508
    6. 'des' → logprob: -5.408906936645508
    7. ' points' → logprob: -7.158906936645508
    8. ' integer' → logprob: -7.533906936645508
    9. ' différentes' → logprob: -8.533906936645508
    10. ' une' → logprob: -8.533906936645508

Token 54: ' données' (ID: 30580)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.06559832394123077
    2. ' des' → logprob: -3.565598249435425
    3. ' ' → logprob: -4.190598487854004
    4. ' x' → logprob: -5.065598487854004
    5. '(x' → logprob: -5.565598487854004
    6. 's' → logprob: -7.065598487854004
    7. 'x' → logprob: -7.190598487854004
    8. '(' → logprob: -7.190598487854004
    9. ' données' → logprob: -7.190598487854004
    10. ' integer' → logprob: -7.315598487854004

Token 55: '.
' (ID: 558)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.1539936363697052
    2. ',' → logprob: -2.028993606567383
    3. ' ,' → logprob: -5.653993606567383
    4. ' ' → logprob: -6.028993606567383
    5. ':' → logprob: -7.153993606567383
    6. ' .' → logprob: -7.403993606567383
    7. 's' → logprob: -7.403993606567383
    8. '#' → logprob: -7.778993606567383
    9. ' 

' → logprob: -7.903993606567383
    10. '\' → logprob: -7.903993606567383

Token 56: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.31757399439811707
    2. '

' → logprob: -2.1925740242004395
    3. 'def' → logprob: -3.3175740242004395
    4. '#' → logprob: -3.3175740242004395
    5. 's' → logprob: -3.6925740242004395
    6. 'import' → logprob: -4.0675740242004395
    7. ' 

' → logprob: -4.0675740242004395
    8. ' 
' → logprob: -4.6925740242004395
    9. '\' → logprob: -5.5675740242004395
    10. '' → logprob: -5.6925740242004395

Token 57: ' La' (ID: 3038)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.15833549201488495
    2. 'import' → logprob: -2.5333354473114014
    3. '
' → logprob: -3.6583354473114014
    4. '#' → logprob: -4.5333356857299805
    5. 's' → logprob: -4.6583356857299805
    6. '

' → logprob: -5.1583356857299805
    7. 'class' → logprob: -5.6583356857299805
    8. '\' → logprob: -5.6583356857299805
    9. ' 

' → logprob: -5.9083356857299805
    10. '```' → logprob: -6.4083356857299805

Token 58: ' surface' (ID: 9753)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.224791169166565
    2. ' surface' → logprob: -1.474791169166565
    3. ' s' → logprob: -1.849791169166565
    4. ' ' → logprob: -2.7247910499572754
    5. ' solution' → logprob: -3.2247910499572754
    6. ' suite' → logprob: -3.3497910499572754
    7. ' prochaine' → logprob: -3.3497910499572754
    8. ' superficie' → logprob: -4.224791049957275
    9. ' #' → logprob: -4.349791049957275
    10. ' suivante' → logprob: -4.474791049957275

Token 59: ' totale' (ID: 52898)
  Prédit: ' totale'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' totale' → logprob: -0.901369035243988
    2. ' =' → logprob: -1.4013690948486328
    3. ' minimale' → logprob: -2.276369094848633
    4. ' ' → logprob: -3.276369094848633
    5. ' est' → logprob: -3.651369094848633
    6. ' s' → logprob: -3.776369094848633
    7. '_' → logprob: -4.026369094848633
    8. 's' → logprob: -4.026369094848633
    9. ' d' → logprob: -4.276369094848633
    10. ' extérieure' → logprob: -4.401369094848633

Token 60: ' est' (ID: 893)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3960088789463043
    2. ' =' → logprob: -1.521008849143982
    3. ' est' → logprob: -3.3960089683532715
    4. ' de' → logprob: -4.8960089683532715
    5. ' du' → logprob: -4.8960089683532715
    6. '_' → logprob: -5.0210089683532715
    7. ' s' → logprob: -5.1460089683532715
    8. ' is' → logprob: -5.1460089683532715
    9. ' totale' → logprob: -5.2710089683532715
    10. ' surface' → logprob: -5.3960089683532715

Token 61: ' calcul' (ID: 7559)
  Prédit: ' calcul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' calcul' → logprob: -0.08784214407205582
    2. ' la' → logprob: -3.2128422260284424
    3. ' ég' → logprob: -3.4628422260284424
    4. 'calcul' → logprob: -4.837841987609863
    5. ' ' → logprob: -5.962841987609863
    6. ' le' → logprob: -7.462841987609863
    7. 'la' → logprob: -8.712841987609863
    8. 'cal' → logprob: -9.087841987609863
    9. '```' → logprob: -9.087841987609863
    10. ' ' → logprob: -9.337841987609863

Token 62: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.07917936891317368
    2. 'é' → logprob: -2.579179286956787
    3. 'e' → logprob: -8.579179763793945
    4. 'lée' → logprob: -10.204179763793945
    5. ' é' → logprob: -10.954179763793945
    6. '#' → logprob: -11.704179763793945
    7. 'és' → logprob: -12.204179763793945
    8. 'ées' → logprob: -12.329179763793945
    9. 'ee' → logprob: -12.454179763793945
    10. 'ated' → logprob: -13.079179763793945

Token 63: ' comme' (ID: 7971)
  Prédit: ' en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.430198609828949
    2. ' comme' → logprob: -2.0551986694335938
    3. ' ' → logprob: -2.3051986694335938
    4. ' par' → logprob: -3.3051986694335938
    5. 'en' → logprob: -3.5551986694335938
    6. 'comme' → logprob: -4.680198669433594
    7. ',' → logprob: -4.805198669433594
    8. 'par' → logprob: -4.930198669433594
    9. '.' → logprob: -4.930198669433594
    10. ' à' → logprob: -5.680198669433594

Token 64: ' ' (ID: 220)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.3774566948413849
    2. 'le' → logprob: -2.0024566650390625
    3. 'la' → logprob: -2.5024566650390625
    4. ' la' → logprob: -3.2524566650390625
    5. ' ' → logprob: -3.3774566650390625
    6. 'l' → logprob: -4.7524566650390625
    7. ' le' → logprob: -5.0024566650390625
    8. 's' → logprob: -6.3774566650390625
    9. '```' → logprob: -6.3774566650390625
    10. ' l' → logprob: -6.5024566650390625

Token 65: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -1.1071425676345825
    2. 'le' → logprob: -1.6071425676345825
    3. 'la' → logprob: -1.7321425676345825
    4. ' ' → logprob: -2.357142448425293
    5. ' la' → logprob: -2.732142448425293
    6. '2' → logprob: -2.982142448425293
    7. 'l' → logprob: -3.482142448425293
    8. 's' → logprob: -4.482142448425293
    9. ' le' → logprob: -4.857142448425293
    10. ' l' → logprob: -5.232142448425293

Token 66: '*s' (ID: 71191)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.01120590791106224
    2. '*' → logprob: -4.511205673217773
    3. '*s' → logprob: -8.886205673217773
    4. '*object' → logprob: -12.011205673217773
    5. '*num' → logprob: -12.511205673217773
    6. ' ' → logprob: -12.636205673217773
    7. ' ' → logprob: -13.761205673217773
    8. ' times' → logprob: -14.136205673217773
    9. '*u' → logprob: -14.136205673217773
    10. '*n' → logprob: -14.261205673217773

Token 67: '*s' (ID: 71191)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.16212360560894012
    2. '*' → logprob: -2.287123680114746
    3. '*s' → logprob: -3.412123680114746
    4. 's' → logprob: -5.287123680114746
    5. ' *' → logprob: -5.787123680114746
    6. '²' → logprob: -6.287123680114746
    7. '<|end|>' → logprob: -6.287123680114746
    8. ' -' → logprob: -7.037123680114746
    9. '-' → logprob: -7.162123680114746
    10. '2' → logprob: -7.162123680114746

Token 68: ' cubes' (ID: 88455)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.3407251238822937
    2. '-' → logprob: -1.3407251834869385
    3. ' ' → logprob: -4.090724945068359
    4. ',' → logprob: -5.715724945068359
    5. ' minus' → logprob: -6.090724945068359
    6. '.' → logprob: -6.590724945068359
    7. '*' → logprob: -7.215724945068359
    8. '+' → logprob: -7.340724945068359
    9. ' ,' → logprob: -7.590724945068359
    10. ' +' → logprob: -7.840724945068359

Token 69: ' moins' (ID: 15924)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5660480260848999
    2. ' -' → logprob: -1.3160480260849
    3. '.' → logprob: -2.5660481452941895
    4. '-' → logprob: -3.8160481452941895
    5. '*' → logprob: -4.1910481452941895
    6. ' *' → logprob: -4.3160481452941895
    7. ',' → logprob: -4.3160481452941895
    8. 's' → logprob: -5.5660481452941895
    9. '[' → logprob: -5.9410481452941895
    10. ' ,' → logprob: -6.4410481452941895

Token 70: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4944106340408325
    2. '2' → logprob: -1.3694106340408325
    3. ' les' → logprob: -2.619410514831543
    4. 'les' → logprob: -3.869410514831543
    5. '6' → logprob: -4.994410514831543
    6. ' l' → logprob: -5.119410514831543
    7. ' la' → logprob: -5.369410514831543
    8. ' the' → logprob: -5.494410514831543
    9. ' le' → logprob: -5.619410514831543
    10. '```' → logprob: -5.619410514831543

Token 71: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.09751561284065247
    2. ' ' → logprob: -2.47251558303833
    3. '```' → logprob: -5.97251558303833
    4. 'l' → logprob: -6.34751558303833
    5. '6' → logprob: -6.84751558303833
    6. 'les' → logprob: -7.72251558303833
    7. 'le' → logprob: -7.97251558303833
    8. 'the' → logprob: -8.097516059875488
    9. 'de' → logprob: -8.347516059875488
    10. ' la' → logprob: -8.472516059875488

Token 72: '*s' (ID: 71191)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.07230836153030396
    2. ' *' → logprob: -3.072308301925659
    3. '*s' → logprob: -3.822308301925659
    4. '*num' → logprob: -7.447308540344238
    5. '*object' → logprob: -8.197308540344238
    6. '<|end|>' → logprob: -8.322308540344238
    7. '*u' → logprob: -8.822308540344238
    8. '*out' → logprob: -10.072308540344238
    9. '*(' → logprob: -10.322308540344238
    10. '**' → logprob: -10.322308540344238

Token 73: '*s' (ID: 71191)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.1818784922361374
    2. '*s' → logprob: -1.8068784475326538
    3. '**' → logprob: -6.556878566741943
    4. 's' → logprob: -8.431878089904785
    5. ' *' → logprob: -8.556878089904785
    6. '***' → logprob: -9.681878089904785
    7. '*u' → logprob: -9.806878089904785
    8. '*object' → logprob: -10.556878089904785
    9. '*num' → logprob: -10.931878089904785
    10. '*x' → logprob: -11.056878089904785

Token 74: ' par' (ID: 686)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.1782892346382141
    2. '*' → logprob: -2.0532891750335693
    3. '<|end|>' → logprob: -3.4282891750335693
    4. ' ' → logprob: -6.928289413452148
    5. ' ' → logprob: -7.053289413452148
    6. 's' → logprob: -8.553289413452148
    7. '```' → logprob: -9.803289413452148
    8. ' ```' → logprob: -9.928289413452148
    9. ' times' → logprob: -10.178289413452148
    10. '*num' → logprob: -10.553289413452148

Token 75: ' face' (ID: 4950)
  Prédit: 'face'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'face' → logprob: -0.1627354919910431
    2. 'c' → logprob: -2.7877354621887207
    3. ' face' → logprob: -2.9127354621887207
    4. 'faces' → logprob: -4.037735462188721
    5. 'cube' → logprob: -4.912735462188721
    6. ' cube' → logprob: -6.162735462188721
    7. 'f' → logprob: -7.037735462188721
    8. ' faces' → logprob: -7.037735462188721
    9. ' ' → logprob: -7.162735462188721
    10. ' côté' → logprob: -7.537735462188721

Token 76: ' commune' (ID: 54652)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.31568247079849243
    2. ' ' → logprob: -2.5656824111938477
    3. ',' → logprob: -3.0656824111938477
    4. '.' → logprob: -3.5656824111938477
    5. 'es' → logprob: -3.8156824111938477
    6. ' adj' → logprob: -3.9406824111938477
    7. ' adjacent' → logprob: -4.440682411193848
    8. 'adj' → logprob: -4.815682411193848
    9. ' s' → logprob: -4.940682411193848
    10. ' ,' → logprob: -5.065682411193848

Token 77: ' entre' (ID: 3853)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6834359765052795
    2. '.' → logprob: -1.1834359169006348
    3. ' ' → logprob: -2.1834359169006348
    4. '#' → logprob: -4.183435916900635
    5. ' ,' → logprob: -4.183435916900635
    6. 's' → logprob: -4.683435916900635
    7. '_' → logprob: -4.933435916900635
    8. ' 

' → logprob: -5.308435916900635
    9. ':' → logprob: -5.558435916900635
    10. '\' → logprob: -5.558435916900635

Token 78: ' cubes' (ID: 88455)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.7315779328346252
    2. 'de' → logprob: -1.6065778732299805
    3. ' deux' → logprob: -1.8565778732299805
    4. ' cubes' → logprob: -1.8565778732299805
    5. '2' → logprob: -6.2315778732299805
    6. ' ' → logprob: -7.1065778732299805
    7. ' two' → logprob: -7.2315778732299805
    8. '```' → logprob: -7.4815778732299805
    9. 'cube' → logprob: -7.7315778732299805
    10. 'two' → logprob: -8.10657787322998

Token 79: ' adj' (ID: 20251)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.4288926124572754
    2. '

' → logprob: -1.4288926124572754
    3. '
' → logprob: -1.4288926124572754
    4. ' 

' → logprob: -1.9288926124572754
    5. ',' → logprob: -3.3038926124572754
    6. ' ' → logprob: -3.6788926124572754
    7. 'def' → logprob: -4.053892612457275
    8. 's' → logprob: -4.803892612457275
    9. '.' → logprob: -4.928892612457275
    10. 'import' → logprob: -4.928892612457275

Token 80: 'ac' (ID: 359)
  Prédit: 'ac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ac' → logprob: -0.43452188372612
    2. 'acent' → logprob: -1.3095219135284424
    3. 'a' → logprob: -3.1845219135284424
    4. 'acency' → logprob: -3.4345219135284424
    5. 'acement' → logprob: -5.934521675109863
    6. 'acen' → logprob: -6.434521675109863
    7. 'ace' → logprob: -6.684521675109863
    8. 'oints' → logprob: -6.934521675109863
    9. '```' → logprob: -7.309521675109863
    10. 'c' → logprob: -7.684521675109863

Token 81: 'ents' (ID: 1094)
  Prédit: 'ents'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ents' → logprob: -0.4365614950656891
    2. 'ent' → logprob: -1.0615614652633667
    3. 'entes' → logprob: -5.686561584472656
    4. 'es' → logprob: -6.811561584472656
    5. 'ente' → logprob: -7.561561584472656
    6. 'e' → logprob: -7.561561584472656
    7. 'ants' → logprob: -7.936561584472656
    8. 'és' → logprob: -8.061561584472656
    9. 't' → logprob: -8.311561584472656
    10. 'ant' → logprob: -8.686561584472656

Token 82: '.
' (ID: 558)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.821287214756012
    2. '

' → logprob: -1.9462871551513672
    3. ' 

' → logprob: -2.321287155151367
    4. '#' → logprob: -2.321287155151367
    5. 's' → logprob: -2.821287155151367
    6. '.' → logprob: -2.946287155151367
    7. ',' → logprob: -3.571287155151367
    8. 'def' → logprob: -3.946287155151367
    9. '' → logprob: -4.321287155151367
    10. 'import' → logprob: -4.696287155151367

Token 83: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.3332922458648682
    2. ' 

' → logprob: -1.5832922458648682
    3. ' ' → logprob: -1.9582922458648682
    4. 'def' → logprob: -2.208292245864868
    5. '

' → logprob: -2.333292245864868
    6. '#' → logprob: -2.708292245864868
    7. 's' → logprob: -3.208292245864868
    8. '' → logprob: -3.958292245864868
    9. ' 
' → logprob: -4.333292007446289
    10. '\' → logprob: -4.333292007446289

Token 84: ' La' (ID: 3038)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.1711809635162354
    2. '

' → logprob: -1.2961809635162354
    3. ' 

' → logprob: -1.6711809635162354
    4. '#' → logprob: -2.4211809635162354
    5. 'def' → logprob: -2.6711809635162354
    6. 's' → logprob: -4.046180725097656
    7. 'd' → logprob: -4.296180725097656
    8. '' → logprob: -4.671180725097656
    9. ' ' → logprob: -4.796180725097656
    10. '\' → logprob: -5.171180725097656

Token 85: ' condition' (ID: 7060)
  Prédit: ' solution'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' solution' → logprob: -0.710677981376648
    2. ' surface' → logprob: -2.4606781005859375
    3. ' tâche' → logprob: -2.5856781005859375
    4. ' suite' → logprob: -2.9606781005859375
    5. ' meilleure' → logprob: -3.4606781005859375
    6. 'def' → logprob: -3.5856781005859375
    7. '#' → logprob: -3.9606781005859375
    8. ' probl' → logprob: -4.2106781005859375
    9. ' question' → logprob: -4.4606781005859375
    10. ' prochaine' → logprob: -4.5856781005859375

Token 86: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.16421964764595032
    2. ' ' → logprob: -2.789219617843628
    3. ' de' → logprob: -2.914219617843628
    4. 'd' → logprob: -4.539219856262207
    5. 's' → logprob: -4.539219856262207
    6. ' est' → logprob: -4.789219856262207
    7. ' s' → logprob: -6.289219856262207
    8. 'est' → logprob: -7.039219856262207
    9. ' que' → logprob: -7.164219856262207
    10. 'de' → logprob: -7.414219856262207

Token 87: ' connect' (ID: 4837)
  Prédit: 'conn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'conn' → logprob: -0.23891812562942505
    2. 'connect' → logprob: -1.7389180660247803
    3. 'connexion' → logprob: -3.6139180660247803
    4. ' conn' → logprob: -5.863918304443359
    5. ' connex' → logprob: -6.238918304443359
    6. ' connect' → logprob: -6.613918304443359
    7. 'contin' → logprob: -6.988918304443359
    8. '_conn' → logprob: -7.988918304443359
    9. 'adj' → logprob: -8.11391830444336
    10. 'con' → logprob: -8.23891830444336

Token 88: 'ivité' (ID: 73445)
  Prédit: 'ivité'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ivité' → logprob: -0.029795151203870773
    2. 'é' → logprob: -4.529795169830322
    3. 'iv' → logprob: -4.779795169830322
    4. 'ivit' → logprob: -5.404795169830322
    5. 'ion' → logprob: -5.654795169830322
    6. 'i' → logprob: -6.904795169830322
    7. 'ivity' → logprob: -7.654795169830322
    8. 'ivi' → logprob: -9.029794692993164
    9. 'ivé' → logprob: -9.029794692993164
    10. 'ed' → logprob: -9.279794692993164

Token 89: ' impose' (ID: 68003)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2984752953052521
    2. ' est' → logprob: -1.4234752655029297
    3. ' ' → logprob: -5.67347526550293
    4. 's' → logprob: -6.04847526550293
    5. ' du' → logprob: -6.04847526550293
    6. 'est' → logprob: -6.42347526550293
    7. ' des' → logprob: -6.67347526550293
    8. ' doit' → logprob: -6.79847526550293
    9. ' is' → logprob: -7.04847526550293
    10. ' de' → logprob: -7.04847526550293

Token 90: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.2721097767353058
    2. ' d' → logprob: -1.7721097469329834
    3. ' de' → logprob: -3.7721097469329834
    4. ' ' → logprob: -4.3971099853515625
    5. 'd' → logprob: -4.5221099853515625
    6. ' un' → logprob: -5.1471099853515625
    7. ' that' → logprob: -5.5221099853515625
    8. ' ' → logprob: -5.7721099853515625
    9. ' une' → logprob: -5.8971099853515625
    10. ' qu' → logprob: -6.5221099853515625

Token 91: ' le' (ID: 505)
  Prédit: ' chaque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.1149667501449585
    2. ' tous' → logprob: -2.864966869354248
    3. ' les' → logprob: -3.614966869354248
    4. 't' → logprob: -4.489966869354248
    5. 'les' → logprob: -5.739966869354248
    6. ' chacun' → logprob: -6.239966869354248
    7. 'cha' → logprob: -6.489966869354248
    8. ' toutes' → logprob: -6.739966869354248
    9. 'le' → logprob: -6.864966869354248
    10. ' le' → logprob: -7.114966869354248

Token 92: ' grap' (ID: 60955)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9258466362953186
    2. ' poly' → logprob: -1.4258465766906738
    3. 'poly' → logprob: -2.425846576690674
    4. 'c' → logprob: -3.175846576690674
    5. 'ensemble' → logprob: -3.675846576690674
    6. ' ensemble' → logprob: -3.925846576690674
    7. ' code' → logprob: -4.050846576690674
    8. ' sélection' → logprob: -4.050846576690674
    9. ' choix' → logprob: -4.050846576690674
    10. ' cube' → logprob: -4.300846576690674

Token 93: 'he' (ID: 273)
  Prédit: 'he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.22755730152130127
    2. 'h' → logprob: -1.7275573015213013
    3. 'aphe' → logprob: -4.602557182312012
    4. 'raph' → logprob: -4.727557182312012
    5. 'hé' → logprob: -6.477557182312012
    6. 'aph' → logprob: -6.727557182312012
    7. 'rap' → logprob: -7.352557182312012
    8. '#' → logprob: -7.602557182312012
    9. 'r' → logprob: -7.852557182312012
    10. 'ph' → logprob: -7.977557182312012

Token 94: ' indu' (ID: 34592)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.22900858521461487
    2. ' du' → logprob: -2.729008674621582
    3. ' est' → logprob: -3.354008674621582
    4. ' de' → logprob: -3.479008674621582
    5. 'du' → logprob: -4.104008674621582
    6. ' indu' → logprob: -4.104008674621582
    7. 'de' → logprob: -4.854008674621582
    8. ' induced' → logprob: -4.979008674621582
    9. ' soit' → logprob: -5.479008674621582
    10. 'des' → logprob: -5.604008674621582

Token 95: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.0017030329909175634
    2. 'ite' → logprob: -7.501703262329102
    3. 't' → logprob: -8.126703262329102
    4. '
' → logprob: -8.751703262329102
    5. 'its' → logprob: -9.126703262329102
    6. '```' → logprob: -9.251703262329102
    7. '#' → logprob: -9.501703262329102
    8. 'isit' → logprob: -9.751703262329102
    9. 'ït' → logprob: -10.439203262329102
    10. 'uit' → logprob: -10.689203262329102

Token 96: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.004939612466841936
    2. ' soit' → logprob: -6.504939556121826
    3. ' des' → logprob: -6.629939556121826
    4. ' sur' → logprob: -6.754939556121826
    5. 'par' → logprob: -7.629939556121826
    6. ' ' → logprob: -8.879940032958984
    7. ' du' → logprob: -9.129940032958984
    8. ' by' → logprob: -9.504940032958984
    9. ' de' → logprob: -10.254940032958984
    10. 'sur' → logprob: -10.254940032958984

Token 97: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.1554141789674759
    2. 'les' → logprob: -2.28041410446167
    3. ' la' → logprob: -3.53041410446167
    4. 'l' → logprob: -5.78041410446167
    5. ' l' → logprob: -5.90541410446167
    6. ' le' → logprob: -6.78041410446167
    7. 'la' → logprob: -6.90541410446167
    8. ' ces' → logprob: -6.90541410446167
    9. 'le' → logprob: -7.15541410446167
    10. 's' → logprob: -7.40541410446167

Token 98: ' cubes' (ID: 88455)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.7806214094161987
    2. ' positions' → logprob: -1.5306214094161987
    3. ' cubes' → logprob: -1.6556214094161987
    4. 'c' → logprob: -2.7806215286254883
    5. ' somm' → logprob: -3.7806215286254883
    6. 's' → logprob: -4.155621528625488
    7. 'som' → logprob: -5.280621528625488
    8. 'k' → logprob: -5.405621528625488
    9. ' points' → logprob: -5.530621528625488
    10. ' selected' → logprob: -5.905621528625488

Token 99: ' sélection' (ID: 43472)
  Prédit: ' soit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' soit' → logprob: -0.3606632947921753
    2. 'so' → logprob: -2.360663414001465
    3. ' sélection' → logprob: -2.610663414001465
    4. ' selected' → logprob: -3.360663414001465
    5. ' est' → logprob: -3.360663414001465
    6. '#' → logprob: -5.110663414001465
    7. 'est' → logprob: -5.110663414001465
    8. ' so' → logprob: -5.235663414001465
    9. 'selected' → logprob: -5.360663414001465
    10. ' soient' → logprob: -5.485663414001465

Token 100: 'nés' (ID: 72145)
  Prédit: 'its'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'its' → logprob: -0.06518528610467911
    2. 's' → logprob: -3.565185308456421
    3. 'is' → logprob: -3.815185308456421
    4. 'ts' → logprob: -5.065185070037842
    5. 'it' → logprob: -5.565185070037842
    6. 'és' → logprob: -6.940185070037842
    7. 'es' → logprob: -7.815185070037842
    8. '#' → logprob: -8.565185546875
    9. '```' → logprob: -8.565185546875
    10. 'ites' → logprob: -8.940185546875

Token 101: ' est' (ID: 893)
  Prédit: ' soit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' soit' → logprob: -0.05045679956674576
    2. ' est' → logprob: -3.4254567623138428
    3. 'so' → logprob: -4.800457000732422
    4. ' puisse' → logprob: -5.800457000732422
    5. ' doit' → logprob: -7.175457000732422
    6. 'est' → logprob: -7.175457000732422
    7. ' soient' → logprob: -7.300457000732422
    8. ' ' → logprob: -7.300457000732422
    9. ' so' → logprob: -7.550457000732422
    10. 's' → logprob: -7.550457000732422

Token 102: ' conn' (ID: 10850)
  Prédit: 'conn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'conn' → logprob: -0.17990416288375854
    2. ' conn' → logprob: -1.9299042224884033
    3. ' connecté' → logprob: -4.554903984069824
    4. 'connect' → logprob: -5.429903984069824
    5. ' connected' → logprob: -6.179903984069824
    6. 'connected' → logprob: -6.929903984069824
    7. ' ' → logprob: -8.179903984069824
    8. ' conex' → logprob: -8.179903984069824
    9. ' connex' → logprob: -8.304903984069824
    10. ' un' → logprob: -8.804903984069824

Token 103: 'exe' (ID: 70589)
  Prédit: 'ect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -0.0032637494150549173
    2. 'exe' → logprob: -6.5032639503479
    3. 'ex' → logprob: -6.8782639503479
    4. 'e' → logprob: -8.128263473510742
    5. 'ected' → logprob: -8.128263473510742
    6. 'exion' → logprob: -10.503263473510742
    7. '
' → logprob: -10.503263473510742
    8. 'ec' → logprob: -10.628263473510742
    9. '#' → logprob: -11.378263473510742
    10. 'ects' → logprob: -12.628263473510742

Token 104: ' (' (ID: 350)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.3177308738231659
    2. '
' → logprob: -1.4427309036254883
    3. 'def' → logprob: -4.192730903625488
    4. 'import' → logprob: -4.692730903625488
    5. '#' → logprob: -5.567730903625488
    6. '.' → logprob: -5.567730903625488
    7. '.

' → logprob: -6.192730903625488
    8. '
' → logprob: -7.442730903625488
    9. ',' → logprob: -8.067730903625488
    10. 's' → logprob: -8.067730903625488

Token 105: 'adj' (ID: 57001)
  Prédit: ').'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ').' → logprob: -0.8224143981933594
    2. ')' → logprob: -1.1974143981933594
    3. ' )' → logprob: -1.8224143981933594
    4. ' ).' → logprob: -2.6974143981933594
    5. ' sur' → logprob: -4.197414398193359
    6. ' et' → logprob: -5.572414398193359
    7. '.' → logprob: -6.072414398193359
    8. ',' → logprob: -6.072414398193359
    9. '#' → logprob: -6.697414398193359
    10. ' en' → logprob: -7.072414398193359

Token 106: 'acency' (ID: 118557)
  Prédit: 'acent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acent' → logprob: -0.4132121205329895
    2. 'ac' → logprob: -1.2882120609283447
    3. 'acency' → logprob: -2.9132120609283447
    4. 'cent' → logprob: -6.475712299346924
    5. 'acement' → logprob: -7.350712299346924
    6. '```' → logprob: -7.413212299346924
    7. 'oints' → logprob: -7.600712299346924
    8. 'oint' → logprob: -7.725712299346924
    9. 'a' → logprob: -7.850712299346924
    10. ')' → logprob: -7.850712299346924

Token 107: ' =' (ID: 314)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -1.2247580289840698
    2. '_list' → logprob: -1.2247580289840698
    3. ')' → logprob: -1.4747580289840698
    4. ' =' → logprob: -3.0997581481933594
    5. 's' → logprob: -3.4747581481933594
    6. 'list' → logprob: -4.099758148193359
    7. ',' → logprob: -4.224758148193359
    8. ' )' → logprob: -4.474758148193359
    9. ' lists' → logprob: -4.724758148193359
    10. ' ' → logprob: -5.099758148193359

Token 108: ' partage' (ID: 70806)
  Prédit: ' defaultdict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -1.417641520500183
    2. ' {' → logprob: -1.667641520500183
    3. ' lambda' → logprob: -1.792641520500183
    4. '{' → logprob: -2.6676416397094727
    5. ' set' → logprob: -2.7926416397094727
    6. 'default' → logprob: -3.1676416397094727
    7. 'lambda' → logprob: -3.2926416397094727
    8. ' [(' → logprob: -3.6676416397094727
    9. ' {(' → logprob: -3.6676416397094727
    10. 'set' → logprob: -3.9176416397094727

Token 109: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.7486817836761475
    2. ' d' → logprob: -1.2486817836761475
    3. ' de' → logprob: -1.4986817836761475
    4. 'de' → logprob: -4.373682022094727
    5. 'ant' → logprob: -6.623682022094727
    6. ' ' → logprob: -6.748682022094727
    7. ' des' → logprob: -7.498682022094727
    8. 'e' → logprob: -7.873682022094727
    9. 'face' → logprob: -8.748682022094727
    10. ' face' → logprob: -8.998682022094727

Token 110: ''une' (ID: 13337)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.7957600951194763
    2. ''une' → logprob: -0.7957600951194763
    3. ''un' → logprob: -3.295760154724121
    4. 'face' → logprob: -4.170760154724121
    5. 'e' → logprob: -4.295760154724121
    6. ' faces' → logprob: -4.795760154724121
    7. 'faces' → logprob: -5.545760154724121
    8. '’une' → logprob: -5.670760154724121
    9. ' une' → logprob: -5.795760154724121
    10. ' face' → logprob: -6.045760154724121

Token 111: ' face' (ID: 4950)
  Prédit: 'face'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'face' → logprob: -0.701927125453949
    2. ' face' → logprob: -0.701927125453949
    3. ' ar' → logprob: -5.326927185058594
    4. ' ' → logprob: -6.201927185058594
    5. ' surface' → logprob: -7.576927185058594
    6. 'ar' → logprob: -7.701927185058594
    7. 'are' → logprob: -8.451927185058594
    8. '_face' → logprob: -8.826927185058594
    9. 'fac' → logprob: -9.201927185058594
    10. 'surface' → logprob: -9.201927185058594

Token 112: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1443375200033188
    2. ').' → logprob: -2.1443374156951904
    3. ' )' → logprob: -4.2693376541137695
    4. ' entre' → logprob: -6.6443376541137695
    5. ' ).' → logprob: -7.1443376541137695
    6. 'e' → logprob: -8.51933765411377
    7. '),' → logprob: -9.01933765411377
    8. ' adj' → logprob: -9.26933765411377
    9. ' ' → logprob: -9.51933765411377
    10. 's' → logprob: -9.51933765411377

Token 113: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.25233468413352966
    2. '
' → logprob: -1.877334713935852
    3. '

' → logprob: -2.8773345947265625
    4. '#' → logprob: -5.7523345947265625
    5. 'import' → logprob: -5.8773345947265625
    6. 's' → logprob: -6.0023345947265625
    7. '\' → logprob: -6.7523345947265625
    8. '```' → logprob: -6.7523345947265625
    9. 'n' → logprob: -7.5023345947265625
    10. '<|end|>' → logprob: -7.8773345947265625

Token 114: ' Si' (ID: 7832)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08468680828809738
    2. '#' → logprob: -3.584686756134033
    3. 'import' → logprob: -3.584686756134033
    4. '
' → logprob: -4.084686756134033
    5. 's' → logprob: -5.834686756134033
    6. 'k' → logprob: -6.209686756134033
    7. '

' → logprob: -6.334686756134033
    8. 'n' → logprob: -6.959686756134033
    9. '```' → logprob: -7.834686756134033
    10. ' def' → logprob: -8.709687232971191

Token 115: ' aucun' (ID: 41678)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' k' → logprob: -1.2099627256393433
    2. ' la' → logprob: -1.2099627256393433
    3. ' len' → logprob: -2.084962844848633
    4. ' vous' → logprob: -2.459962844848633
    5. ' on' → logprob: -3.084962844848633
    6. ' le' → logprob: -3.334962844848633
    7. ' __' → logprob: -3.459962844848633
    8. 'k' → logprob: -3.959962844848633
    9. ' n' → logprob: -4.959962844848633
    10. ' les' → logprob: -5.084962844848633

Token 116: ' choix' (ID: 28642)
  Prédit: ' cube'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cube' → logprob: -0.6954705715179443
    2. 'cube' → logprob: -0.8204705715179443
    3. 'c' → logprob: -4.195470809936523
    4. ' espace' → logprob: -4.695470809936523
    5. ' code' → logprob: -5.070470809936523
    6. '```' → logprob: -5.320470809936523
    7. 'import' → logprob: -5.695470809936523
    8. ' sélection' → logprob: -5.820470809936523
    9. ' solution' → logprob: -6.320470809936523
    10. 'solution' → logprob: -6.320470809936523

Token 117: ' de' (ID: 334)
  Prédit: ' possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' possible' → logprob: -0.7343994379043579
    2. ' n' → logprob: -0.9843994379043579
    3. 'possible' → logprob: -2.6093993186950684
    4. ' de' → logprob: -3.2343993186950684
    5. 'n' → logprob: -3.9843993186950684
    6. 'de' → logprob: -5.859399318695068
    7. ' ne' → logprob: -5.859399318695068
    8. ' optimal' → logprob: -6.359399318695068
    9. ' viable' → logprob: -6.984399318695068
    10. ' d' → logprob: -7.234399318695068

Token 118: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.6725156903266907
    2. ' k' → logprob: -1.047515630722046
    3. ' cubes' → logprob: -2.047515630722046
    4. 'c' → logprob: -5.922515869140625
    5. 's' → logprob: -6.547515869140625
    6. ' sélection' → logprob: -6.672515869140625
    7. ' cube' → logprob: -7.172515869140625
    8. 'cube' → logprob: -7.297515869140625
    9. 'positions' → logprob: -7.922515869140625
    10. 'placement' → logprob: -8.172515869140625

Token 119: ' cubes' (ID: 88455)
  Prédit: ' cubes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cubes' → logprob: -0.008145954459905624
    2. ' cube' → logprob: -5.383145809173584
    3. 'cube' → logprob: -6.758145809173584
    4. 'c' → logprob: -7.508145809173584
    5. ' n' → logprob: -8.258146286010742
    6. '=' → logprob: -8.383146286010742
    7. ' ' → logprob: -8.883146286010742
    8. ' positions' → logprob: -9.258146286010742
    9. ' de' → logprob: -9.320646286010742
    10. 's' → logprob: -9.570646286010742

Token 120: ' connex' (ID: 154480)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.46333494782447815
    2. ' ne' → logprob: -1.9633349180221558
    3. ' possible' → logprob: -2.0883350372314453
    4. 'possible' → logprob: -3.4633350372314453
    5. 'n' → logprob: -3.8383350372314453
    6. 'import' → logprob: -3.9633350372314453
    7. '```' → logprob: -5.213335037231445
    8. ',' → logprob: -5.463335037231445
    9. ' possibles' → logprob: -5.588335037231445
    10. 's' → logprob: -5.838335037231445

Token 121: 'es' (ID: 268)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.220547080039978
    2. '#' → logprob: -1.720547080039978
    3. 's' → logprob: -1.720547080039978
    4. 'ect' → logprob: -2.3455471992492676
    5. 'iste' → logprob: -2.4705471992492676
    6. 'te' → logprob: -3.3455471992492676
    7. 'ent' → logprob: -3.3455471992492676
    8. 't' → logprob: -4.470547199249268
    9. 'è' → logprob: -4.470547199249268
    10. 'ut' → logprob: -5.220547199249268

Token 122: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.20148350298404694
    2. ' ne' → logprob: -2.8264834880828857
    3. ' possible' → logprob: -2.9514834880828857
    4. 'n' → logprob: -3.3264834880828857
    5. 'possible' → logprob: -4.451483726501465
    6. ' possibles' → logprob: -5.201483726501465
    7. ',' → logprob: -5.576483726501465
    8. ' ' → logprob: -6.076483726501465
    9. ' pour' → logprob: -7.076483726501465
    10. ' dans' → logprob: -7.076483726501465

Token 123: ''est' (ID: 6616)
  Prédit: ''ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''ex' → logprob: -0.41673028469085693
    2. ''est' → logprob: -1.166730284690857
    3. ''' → logprob: -3.6667304039001465
    4. ''a' → logprob: -7.4167304039001465
    5. 'est' → logprob: -7.6667304039001465
    6. '’est' → logprob: -7.7917304039001465
    7. 'ex' → logprob: -7.7917304039001465
    8. '’ex' → logprob: -7.9167304039001465
    9. 'a' → logprob: -8.291729927062988
    10. 'e' → logprob: -8.541729927062988

Token 124: ' possible' (ID: 4149)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.2549770772457123
    2. ' possible' → logprob: -1.5049771070480347
    3. ' trouvé' → logprob: -6.129977226257324
    4. '_possible' → logprob: -8.254977226257324
    5. 'tr' → logprob: -9.129977226257324
    6. 'poss' → logprob: -9.254977226257324
    7. ' impossible' → logprob: -9.504977226257324
    8. ' trouv' → logprob: -9.754977226257324
    9. '```' → logprob: -10.004977226257324
    10. 'import' → logprob: -10.129977226257324

Token 125: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003584033576771617
    2. ':' → logprob: -6.003583908081055
    3. ' ,' → logprob: -7.503583908081055
    4. ',
' → logprob: -8.253583908081055
    5. '.' → logprob: -9.003583908081055
    6. ' :' → logprob: -9.503583908081055
    7. '#' → logprob: -11.003583908081055
    8. 'import' → logprob: -11.253583908081055
    9. ' (' → logprob: -11.503583908081055
    10. ':
' → logprob: -11.753583908081055

Token 126: ' on' (ID: 402)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2973824739456177
    2. ' print' → logprob: -1.7973824739456177
    3. ' on' → logprob: -3.172382354736328
    4. '#' → logprob: -3.297382354736328
    5. 'return' → logprob: -5.422382354736328
    6. 'on' → logprob: -5.547382354736328
    7. ' return' → logprob: -6.172382354736328
    8. '   ' → logprob: -7.547382354736328
    9. ' retourner' → logprob: -7.672382354736328
    10. ' #' → logprob: -7.797382354736328

Token 127: ' retourne' (ID: 178818)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.18744812905788422
    2. ' return' → logprob: -2.562448024749756
    3. 'print' → logprob: -3.062448024749756
    4. ' retourne' → logprob: -3.937448024749756
    5. 'return' → logprob: -4.312448024749756
    6. ' ren' → logprob: -5.312448024749756
    7. ' affiche' → logprob: -6.687448024749756
    8. 'raise' → logprob: -6.687448024749756
    9. ' imprime' → logprob: -6.687448024749756
    10. '#' → logprob: -6.812448024749756

Token 128: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5764397382736206
    2. '-' → logprob: -0.8264397382736206
    3. '0' → logprob: -8.57643985748291
    4. ' None' → logprob: -8.95143985748291
    5. ' ' → logprob: -9.07643985748291
    6. 'None' → logprob: -9.95143985748291
    7. ' ' → logprob: -12.57643985748291
    8. ' "' → logprob: -13.38893985748291
    9. ' pas' → logprob: -13.70143985748291
    10. '-l' → logprob: -13.76393985748291

Token 129: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.080963092041202e-06
    2. ' ' → logprob: -12.375004768371582
    3. '"' → logprob: -15.750004768371582
    4. '-' → logprob: -16.3125057220459
    5. '```' → logprob: -16.6250057220459
    6. '2' → logprob: -16.8125057220459
    7. ' ' → logprob: -16.8750057220459
    8. '
' → logprob: -16.8750057220459
    9. '`' → logprob: -17.0000057220459
    10. ''' → logprob: -17.0625057220459

Token 130: '.

' (ID: 364)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09403043240308762
    2. '

' → logprob: -2.8440303802490234
    3. 'def' → logprob: -3.4690303802490234
    4. '
' → logprob: -9.094030380249023
    5. '
 
' → logprob: -9.344030380249023
    6. 'import' → logprob: -9.844030380249023
    7. '


' → logprob: -10.344030380249023
    8. '#' → logprob: -10.344030380249023
    9. 's' → logprob: -10.969030380249023
    10. ' def' → logprob: -11.719030380249023

Token 131: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0002016331272898242
    2. ' def' → logprob: -9.625201225280762
    3. 'n' → logprob: -9.875201225280762
    4. '
' → logprob: -10.125201225280762
    5. 'import' → logprob: -10.750201225280762
    6. 'class' → logprob: -11.875201225280762
    7. '\' → logprob: -12.500201225280762
    8. '```' → logprob: -13.000201225280762
    9. 'ndef' → logprob: -13.250201225280762
    10. ' 
' → logprob: -13.250201225280762

Token 132: ' Appro' (ID: 24145)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0001037815964082256
    2. 'class' → logprob: -9.500103950500488
    3. 'import' → logprob: -11.250103950500488
    4. 'from' → logprob: -11.375103950500488
    5. ' def' → logprob: -12.750103950500488
    6. '#' → logprob: -14.250103950500488
    7. 'n' → logprob: -15.250103950500488
    8. 'de' → logprob: -15.500103950500488
    9. '```' → logprob: -16.250102996826172
    10. 's' → logprob: -16.625102996826172

Token 133: 'che' (ID: 926)
  Prédit: 'ach'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ach' → logprob: -0.7037492990493774
    2. 'che' → logprob: -0.7037492990493774
    3. 'ches' → logprob: -5.578749179840088
    4. 'xim' → logprob: -5.828749179840088
    5. 'x' → logprob: -5.953749179840088
    6. 'ch' → logprob: -7.578749179840088
    7. 'xi' → logprob: -8.203749656677246
    8. '#' → logprob: -9.328749656677246
    9. 'xima' → logprob: -9.578749656677246
    10. 'aches' → logprob: -9.703749656677246

Token 134: ':
' (ID: 734)
  Prédit: ' :'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.556378960609436
    2. ' =' → logprob: -1.306378960609436
    3. ':' → logprob: -2.0563788414001465
    4. 'dfs' → logprob: -4.3063788414001465
    5. ' dfs' → logprob: -6.3063788414001465
    6. ' :
' → logprob: -6.3063788414001465
    7. ' bfs' → logprob: -6.5563788414001465
    8. 'def' → logprob: -7.0563788414001465
    9. ' brute' → logprob: -7.1813788414001465
    10. ' ' → logprob: -7.1813788414001465

Token 135: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.21192298829555511
    2. ' #' → logprob: -2.3369228839874268
    3. ' On' → logprob: -3.2119228839874268
    4. 'On' → logprob: -4.086923122406006
    5. 'def' → logprob: -4.336923122406006
    6. ' Util' → logprob: -4.836923122406006
    7. ' def' → logprob: -5.836923122406006
    8. ' on' → logprob: -6.211923122406006
    9. 'Util' → logprob: -6.211923122406006
    10. 'import' → logprob: -6.586923122406006

Token 136: ' ' (ID: 220)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.2598431706428528
    2. 'from' → logprob: -3.134843111038208
    3. 'def' → logprob: -3.259843111038208
    4. 'Util' → logprob: -3.509843111038208
    5. 'On' → logprob: -3.509843111038208
    6. ' Util' → logprob: -3.884843111038208
    7. ' #' → logprob: -4.009843349456787
    8. 'import' → logprob: -4.259843349456787
    9. ' On' → logprob: -4.384843349456787
    10. ' from' → logprob: -4.884843349456787

Token 137: '1' (ID: 16)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.34762752056121826
    2. '#' → logprob: -1.8476275205612183
    3. 'def' → logprob: -2.472627639770508
    4. 'Util' → logprob: -3.847627639770508
    5. 'On' → logprob: -3.972627639770508
    6. 'import' → logprob: -4.847627639770508
    7. 'Pour' → logprob: -6.972627639770508
    8. 'Dé' → logprob: -7.097627639770508
    9. 'Nous' → logprob: -7.972627639770508
    10. 'B' → logprob: -8.097627639770508

Token 138: ')' (ID: 8)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5789220929145813
    2. '#' → logprob: -1.2039220333099365
    3. ' =' → logprob: -2.7039220333099365
    4. ' #' → logprob: -3.5789220333099365
    5. ':' → logprob: -3.7039220333099365
    6. 'def' → logprob: -4.953922271728516
    7. 'import' → logprob: -5.328922271728516
    8. ' ' → logprob: -6.078922271728516
    9. '=' → logprob: -6.953922271728516
    10. ' import' → logprob: -6.953922271728516

Token 139: ' Constru' (ID: 98396)
  Prédit: ' Gén'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Gén' → logprob: -1.519224762916565
    2. ' Lire' → logprob: -1.644224762916565
    3. 'Lire' → logprob: -1.769224762916565
    4. '#' → logprob: -2.5192246437072754
    5. 'import' → logprob: -2.7692246437072754
    6. 'Lecture' → logprob: -4.019224643707275
    7. 'Dé' → logprob: -4.144224643707275
    8. ' Parc' → logprob: -4.144224643707275
    9. 'On' → logprob: -4.269224643707275
    10. ' On' → logprob: -4.269224643707275

Token 140: 'ire' (ID: 594)
  Prédit: 'ire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ire' → logprob: -0.5882075428962708
    2. 'ct' → logprob: -1.088207483291626
    3. 'it' → logprob: -3.088207483291626
    4. 'ction' → logprob: -3.338207483291626
    5. 'ir' → logprob: -3.963207483291626
    6. 'irt' → logprob: -6.088207721710205
    7. '#' → logprob: -6.338207721710205
    8. 'is' → logprob: -7.338207721710205
    9. 't' → logprob: -7.588207721710205
    10. 'def' → logprob: -7.838207721710205

Token 141: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.5544849634170532
    2. ' le' → logprob: -1.3044849634170532
    3. ' la' → logprob: -2.3044848442077637
    4. 'le' → logprob: -4.054484844207764
    5. ' l' → logprob: -4.804484844207764
    6. ' une' → logprob: -5.179484844207764
    7. ' ' → logprob: -5.304484844207764
    8. ' graph' → logprob: -5.429484844207764
    9. 'graph' → logprob: -5.554484844207764
    10. ' les' → logprob: -6.054484844207764

Token 142: ' grap' (ID: 60955)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.6051372289657593
    2. 'gr' → logprob: -0.9801372289657593
    3. ' grap' → logprob: -2.980137348175049
    4. ' graph' → logprob: -3.605137348175049
    5. '```' → logprob: -7.855137348175049
    6. 'ensemble' → logprob: -10.10513687133789
    7. 'g' → logprob: -10.35513687133789
    8. 'alg' → logprob: -10.73013687133789
    9. ' voisin' → logprob: -10.98013687133789
    10. ' graphique' → logprob: -11.10513687133789

Token 143: 'he' (ID: 273)
  Prédit: 'aphe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aphe' → logprob: -0.7190465331077576
    2. 'he' → logprob: -0.9690465331077576
    3. 'h' → logprob: -2.3440465927124023
    4. 'raph' → logprob: -4.344046592712402
    5. 'aph' → logprob: -4.844046592712402
    6. 'heme' → logprob: -5.719046592712402
    7. 'r' → logprob: -5.844046592712402
    8. '#' → logprob: -6.094046592712402
    9. 'rap' → logprob: -6.219046592712402
    10. 'phe' → logprob: -6.344046592712402

Token 144: ' avec' (ID: 3937)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.31936806440353394
    2. ' où' → logprob: -2.0693681240081787
    3. ' d' → logprob: -2.5693681240081787
    4. ' avec' → logprob: -3.8193681240081787
    5. ',' → logprob: -4.6943678855896
    6. 'où' → logprob: -4.8193678855896
    7. ' ' → logprob: -5.1943678855896
    8. ' de' → logprob: -5.5693678855896
    9. ' G' → logprob: -5.6943678855896
    10. ' en' → logprob: -6.4443678855896

Token 145: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.03299528732895851
    2. 'les' → logprob: -4.532995223999023
    3. ' l' → logprob: -5.282995223999023
    4. ' chaque' → logprob: -6.032995223999023
    5. ' la' → logprob: -6.157995223999023
    6. ' adjacency' → logprob: -6.282995223999023
    7. ' ' → logprob: -6.907995223999023
    8. ' nodes' → logprob: -6.907995223999023
    9. 'the' → logprob: -6.907995223999023
    10. ' le' → logprob: -6.907995223999023

Token 146: ' n' (ID: 297)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -1.0448426008224487
    2. ' positions' → logprob: -1.2948426008224487
    3. ' n' → logprob: -1.4198426008224487
    4. 'n' → logprob: -3.2948427200317383
    5. ' somm' → logprob: -3.4198427200317383
    6. ' noe' → logprob: -3.7948427200317383
    7. 's' → logprob: -4.294842720031738
    8. ' nodes' → logprob: -4.294842720031738
    9. 'nodes' → logprob: -5.544842720031738
    10. ' points' → logprob: -5.669842720031738

Token 147: ' positions' (ID: 15897)
  Prédit: ' positions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' positions' → logprob: -1.1620631217956543
    2. 'positions' → logprob: -1.4120631217956543
    3. ' somm' → logprob: -1.7870631217956543
    4. ' n' → logprob: -2.4120631217956543
    5. ' points' → logprob: -2.4120631217956543
    6. ' noe' → logprob: -2.7870631217956543
    7. ' nodes' → logprob: -4.787063121795654
    8. ' cubes' → logprob: -5.037063121795654
    9. 's' → logprob: -5.162063121795654
    10. 'points' → logprob: -5.412063121795654

Token 148: '.' (ID: 13)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.46738094091415405
    2. '.' → logprob: -2.592381000518799
    3. ':' → logprob: -3.342381000518799
    4. 's' → logprob: -3.467381000518799
    5. 'import' → logprob: -3.592381000518799
    6. ' :' → logprob: -3.592381000518799
    7. 'positions' → logprob: -3.717381000518799
    8. 'adj' → logprob: -4.217381000518799
    9. ' ,' → logprob: -4.342381000518799
    10. 'nodes' → logprob: -4.717381000518799

Token 149: ' Deux' (ID: 92086)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6611276865005493
    2. '
' → logprob: -2.0361275672912598
    3. ',' → logprob: -2.9111275672912598
    4. 'import' → logprob: -2.9111275672912598
    5. ' ' → logprob: -3.1611275672912598
    6. ' #' → logprob: -3.4111275672912598
    7. '```' → logprob: -3.5361275672912598
    8. ' G' → logprob: -3.9111275672912598
    9. ' (' → logprob: -4.16112756729126
    10. '.' → logprob: -4.28612756729126

Token 150: ' positions' (ID: 15897)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.20553629100322723
    2. ' positions' → logprob: -1.7055362462997437
    3. ' cubes' → logprob: -6.330536365509033
    4. 'pos' → logprob: -6.705536365509033
    5. 's' → logprob: -7.705536365509033
    6. 'c' → logprob: -8.830535888671875
    7. ' somm' → logprob: -9.080535888671875
    8. 'n' → logprob: -9.455535888671875
    9. ' noe' → logprob: -9.830535888671875
    10. '_positions' → logprob: -9.830535888671875

Token 151: ' sont' (ID: 5242)
  Prédit: ' sont'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sont' → logprob: -0.41467466950416565
    2. 's' → logprob: -1.1646746397018433
    3. 'adj' → logprob: -4.289674758911133
    4. ' ' → logprob: -5.789674758911133
    5. 'vo' → logprob: -5.914674758911133
    6. ' adj' → logprob: -6.039674758911133
    7. '#' → logprob: -6.164674758911133
    8. 'import' → logprob: -6.914674758911133
    9. 'u' → logprob: -7.664674758911133
    10. ' vois' → logprob: -8.414674758911133

Token 152: ' adj' (ID: 20251)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.017411116510629654
    2. 'connect' → logprob: -4.267411231994629
    3. 'vo' → logprob: -6.142411231994629
    4. ' adj' → logprob: -7.267411231994629
    5. ' connect' → logprob: -8.892411231994629
    6. ' reli' → logprob: -10.017411231994629
    7. 'cons' → logprob: -10.017411231994629
    8. 'conn' → logprob: -10.267411231994629
    9. 'consider' → logprob: -10.642411231994629
    10. ' ' → logprob: -11.267411231994629

Token 153: 'ac' (ID: 359)
  Prédit: 'ac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ac' → logprob: -0.004519008100032806
    2. 'centes' → logprob: -6.254518985748291
    3. 'acency' → logprob: -6.629518985748291
    4. 'oint' → logprob: -7.879518985748291
    5. 'c' → logprob: -8.25451946258545
    6. 'acent' → logprob: -8.62951946258545
    7. '```' → logprob: -9.25451946258545
    8. '=' → logprob: -9.62951946258545
    9. 'a' → logprob: -9.87951946258545
    10. '{' → logprob: -10.37951946258545

Token 154: 'entes' (ID: 5651)
  Prédit: 'entes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'entes' → logprob: -0.03257916867733002
    2. 'nt' → logprob: -4.157578945159912
    3. 'ents' → logprob: -5.532578945159912
    4. 'tes' → logprob: -5.657578945159912
    5. 'es' → logprob: -5.907578945159912
    6. 't' → logprob: -5.907578945159912
    7. 'ent' → logprob: -6.032578945159912
    8. 'n' → logprob: -7.782578945159912
    9. 'centes' → logprob: -8.40757942199707
    10. 'ente' → logprob: -9.28257942199707

Token 155: ' si' (ID: 1784)
  Prédit: ' si'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' si' → logprob: -0.23212802410125732
    2. ' if' → logprob: -1.8571280241012573
    3. ' s' → logprob: -3.607128143310547
    4. ' ' → logprob: -4.357128143310547
    5. 'si' → logprob: -4.857128143310547
    6. ' par' → logprob: -6.732128143310547
    7. 's' → logprob: -6.982128143310547
    8. 'if' → logprob: -7.482128143310547
    9. ' iff' → logprob: -7.982128143310547
    10. ' (' → logprob: -8.857128143310547

Token 156: ' la' (ID: 557)
  Prédit: ' abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' abs' → logprob: -1.2136412858963013
    2. ' elles' → logprob: -1.3386412858963013
    3. ' leur' → logprob: -2.5886411666870117
    4. ' l' → logprob: -2.7136411666870117
    5. ' la' → logprob: -2.7136411666870117
    6. 'leur' → logprob: -2.9636411666870117
    7. ' their' → logprob: -3.0886411666870117
    8. ' ' → logprob: -3.5886411666870117
    9. 'abs' → logprob: -3.7136411666870117
    10. ' leurs' → logprob: -3.9636411666870117

Token 157: ' distance' (ID: 9324)
  Prédit: ' distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' distance' → logprob: -0.9495546221733093
    2. 'distance' → logprob: -0.9495546221733093
    3. 'diff' → logprob: -1.699554681777954
    4. ' différence' → logprob: -3.824554681777954
    5. ' man' → logprob: -5.074554443359375
    6. 'man' → logprob: -5.949554443359375
    7. 'leur' → logprob: -6.324554443359375
    8. ' diff' → logprob: -6.324554443359375
    9. ' norme' → logprob: -6.699554443359375
    10. ' Manhattan' → logprob: -6.824554443359375

Token 158: ' entre' (ID: 3853)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -1.1896576881408691
    2. ' ==' → logprob: -1.3146576881408691
    3. 'man' → logprob: -1.8146576881408691
    4. ' ' → logprob: -2.814657688140869
    5. ' de' → logprob: -3.689657688140869
    6. '=' → logprob: -3.814657688140869
    7. ' Manhattan' → logprob: -3.814657688140869
    8. '_' → logprob: -3.939657688140869
    9. '1' → logprob: -3.939657688140869
    10. ' ég' → logprob: -4.189657688140869

Token 159: ' leurs' (ID: 16348)
  Prédit: 'eux'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'eux' → logprob: -0.6469576358795166
    2. 'leur' → logprob: -1.8969576358795166
    3. 'leurs' → logprob: -2.8969576358795166
    4. ' ' → logprob: -3.2719576358795166
    5. 'eu' → logprob: -3.2719576358795166
    6. 'les' → logprob: -3.3969576358795166
    7. ' elles' → logprob: -3.6469576358795166
    8. 'de' → logprob: -3.7719576358795166
    9. ' eux' → logprob: -4.0219573974609375
    10. 'elles' → logprob: -4.1469573974609375

Token 160: ' coins' (ID: 28969)
  Prédit: ' coordonnées'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' coordonnées' → logprob: -0.1509765237569809
    2. 'coords' → logprob: -3.0259764194488525
    3. 'positions' → logprob: -3.4009764194488525
    4. ' positions' → logprob: -4.275976657867432
    5. 'coord' → logprob: -4.275976657867432
    6. ' vect' → logprob: -5.025976657867432
    7. 'man' → logprob: -5.650976657867432
    8. ' ' → logprob: -5.650976657867432
    9. 'x' → logprob: -5.900976657867432
    10. 'vect' → logprob: -6.275976657867432

Token 161: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.26055312156677246
    2. 'est' → logprob: -1.7605531215667725
    3. ' ==' → logprob: -4.135553359985352
    4. '==' → logprob: -4.135553359985352
    5. ' is' → logprob: -5.760553359985352
    6. 'man' → logprob: -5.760553359985352
    7. ' ' → logprob: -6.135553359985352
    8. '1' → logprob: -6.135553359985352
    9. 'tax' → logprob: -6.260553359985352
    10. 'orth' → logprob: -6.385553359985352

Token 162: ' exactement' (ID: 108701)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.14887307584285736
    2. ' ' → logprob: -2.0238730907440186
    3. 's' → logprob: -5.6488728523254395
    4. ' s' → logprob: -6.5238728523254395
    5. ' exactly' → logprob: -7.6488728523254395
    6. 'exact' → logprob: -8.148873329162598
    7. ' exactement' → logprob: -8.273873329162598
    8. '6' → logprob: -9.398873329162598
    9. '2' → logprob: -11.148873329162598
    10. '   ' → logprob: -11.148873329162598

Token 163: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3912675082683563
    2. ' s' → logprob: -1.1412675380706787
    3. '1' → logprob: -5.6412672996521
    4. ' ' → logprob: -7.1412672996521
    5. '6' → logprob: -10.641267776489258
    6. '2' → logprob: -12.016267776489258
    7. '```' → logprob: -13.391267776489258
    8. '   ' → logprob: -13.578767776489258
    9. '0' → logprob: -13.641267776489258
    10. '`s' → logprob: -13.891267776489258

Token 164: ' sur' (ID: 1512)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3309398591518402
    2. ',' → logprob: -1.7059398889541626
    3. ' en' → logprob: -3.580939769744873
    4. ' ,' → logprob: -3.955939769744873
    5. ' (' → logprob: -3.955939769744873
    6. ' .' → logprob: -5.080939769744873
    7. ' in' → logprob: -5.080939769744873
    8. ' *' → logprob: -5.455939769744873
    9. ' dans' → logprob: -5.455939769744873
    10. '*' → logprob: -5.580939769744873

Token 165: ' une' (ID: 2463)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.6992100477218628
    2. 'une' → logprob: -0.8242100477218628
    3. 'un' → logprob: -3.3242101669311523
    4. ' une' → logprob: -4.449210166931152
    5. ' l' → logprob: -5.074210166931152
    6. ' ' → logprob: -5.699210166931152
    7. 'la' → logprob: -6.699210166931152
    8. 'au' → logprob: -6.824210166931152
    9. ' un' → logprob: -7.199210166931152
    10. 'axe' → logprob: -7.324210166931152

Token 166: ' seule' (ID: 41983)
  Prédit: 'axe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'axe' → logprob: -1.1114819049835205
    2. 'dimension' → logprob: -1.2364819049835205
    3. 'coord' → logprob: -1.9864819049835205
    4. ' seule' → logprob: -2.1114819049835205
    5. 'se' → logprob: -2.9864819049835205
    6. ' dimension' → logprob: -3.6114819049835205
    7. 'ligne' → logprob: -3.8614819049835205
    8. ' coord' → logprob: -5.111481666564941
    9. ' des' → logprob: -5.486481666564941
    10. ' ' → logprob: -5.611481666564941

Token 167: ' coord' (ID: 25819)
  Prédit: ' dimension'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dimension' → logprob: -1.1586263179779053
    2. 'axe' → logprob: -1.1586263179779053
    3. 'dimension' → logprob: -1.1586263179779053
    4. 'coord' → logprob: -3.1586263179779053
    5. ' ' → logprob: -5.408626556396484
    6. ' coord' → logprob: -5.658626556396484
    7. 'ligne' → logprob: -6.283626556396484
    8. 'axis' → logprob: -6.783626556396484
    9. ' ar' → logprob: -6.783626556396484
    10. 'dim' → logprob: -7.533626556396484

Token 168: 'onnée' (ID: 91161)
  Prédit: 'onnée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'onnée' → logprob: -0.0004599823441822082
    2. 'onnées' → logprob: -8.375459671020508
    3. 'on' → logprob: -9.000459671020508
    4. 'onné' → logprob: -9.750459671020508
    5. 'onn' → logprob: -10.750459671020508
    6. 'onne' → logprob: -10.875459671020508
    7. 'onate' → logprob: -12.000459671020508
    8. 'd' → logprob: -15.375459671020508
    9. 'onna' → logprob: -15.375459671020508
    10. ' ' → logprob: -15.750459671020508

Token 169: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.044765956699848175
    2. '.' → logprob: -4.794765949249268
    3. ' et' → logprob: -4.794765949249268
    4. '(s' → logprob: -5.419765949249268
    5. '#' → logprob: -5.544765949249268
    6. 'import' → logprob: -5.669765949249268
    7. 's' → logprob: -5.794765949249268
    8. ' and' → logprob: -5.794765949249268
    9. ' (' → logprob: -5.919765949249268
    10. ')' → logprob: -6.044765949249268

Token 170: ' ident' (ID: 3951)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.055938053876161575
    2. ' ' → logprob: -3.1809380054473877
    3. 'auc' → logprob: -5.430938243865967
    4. 'les' → logprob: -6.055938243865967
    5. ' zéro' → logprob: -6.305938243865967
    6. ' les' → logprob: -6.430938243865967
    7. ' aucune' → logprob: -7.055938243865967
    8. ' zero' → logprob: -8.305937767028809
    9. 'zero' → logprob: -8.555937767028809
    10. 'pas' → logprob: -8.555937767028809

Token 171: 'ique' (ID: 2222)
  Prédit: 'ique'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ique' → logprob: -0.030699459835886955
    2. 'iques' → logprob: -3.6556994915008545
    3. 'ical' → logprob: -5.655699253082275
    4. 'que' → logprob: -8.530699729919434
    5. 'ic' → logprob: -9.155699729919434
    6. 'iq' → logprob: -9.155699729919434
    7. '=' → logprob: -9.655699729919434
    8. 'iqu' → logprob: -10.155699729919434
    9. 'i' → logprob: -10.280699729919434
    10. '1' → logprob: -10.280699729919434

Token 172: ' sur' (ID: 1512)
  Prédit: ' sur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sur' → logprob: -0.20683813095092773
    2. ' aux' → logprob: -2.3318381309509277
    3. 'sur' → logprob: -2.9568381309509277
    4. 's' → logprob: -4.081838130950928
    5. ' on' → logprob: -4.956838130950928
    6. ' à' → logprob: -5.831838130950928
    7. '(s' → logprob: -6.206838130950928
    8. ' en' → logprob: -6.581838130950928
    9. ' au' → logprob: -6.706838130950928
    10. ',' → logprob: -6.831838130950928

Token 173: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.03009432926774025
    2. ' les' → logprob: -3.9050943851470947
    3. 'l' → logprob: -4.905094146728516
    4. ' ' → logprob: -7.405094146728516
    5. '2' → logprob: -7.780094146728516
    6. 't' → logprob: -8.030094146728516
    7. 'de' → logprob: -8.280094146728516
    8. ' deux' → logprob: -8.905094146728516
    9. '```' → logprob: -9.280094146728516
    10. ' l' → logprob: -9.280094146728516

Token 174: ' autres' (ID: 18701)
  Prédit: 'aut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aut' → logprob: -0.12350662052631378
    2. '2' → logprob: -2.998506546020508
    3. 'de' → logprob: -3.623506546020508
    4. ' deux' → logprob: -4.498506546020508
    5. '3' → logprob: -4.623506546020508
    6. ' autres' → logprob: -4.748506546020508
    7. ' ' → logprob: -5.373506546020508
    8. 'aux' → logprob: -6.748506546020508
    9. 'tro' → logprob: -7.123506546020508
    10. ' trois' → logprob: -7.248506546020508

Token 175: ' (' (ID: 350)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.01890230178833
    2. 's' → logprob: -1.01890230178833
    3. ',' → logprob: -1.64390230178833
    4. '(s' → logprob: -3.51890230178833
    5. 'import' → logprob: -3.64390230178833
    6. 'positions' → logprob: -5.39390230178833
    7. 'coordinates' → logprob: -5.64390230178833
    8. '<|end|>' → logprob: -5.89390230178833
    9. 'coords' → logprob: -6.39390230178833
    10. '#' → logprob: -6.39390230178833

Token 176: 'vo' (ID: 1190)
  Prédit: ').'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ').' → logprob: -0.17464065551757812
    2. ')' → logprob: -2.299640655517578
    3. ',' → logprob: -3.674640655517578
    4. ' ).' → logprob: -4.049640655517578
    5. ' )' → logprob: -4.674640655517578
    6. '),' → logprob: -6.299640655517578
    7. '.' → logprob: -6.924640655517578
    8. ').
' → logprob: -6.924640655517578
    9. 'import' → logprob: -7.674640655517578
    10. ' s' → logprob: -7.674640655517578

Token 177: 'isin' (ID: 23933)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.4352952539920807
    2. 'xel' → logprob: -2.560295343399048
    3. 'is' → logprob: -2.810295343399048
    4. 't' → logprob: -3.060295343399048
    5. 'isin' → logprob: -3.435295343399048
    6. 's' → logprob: -4.435295104980469
    7. 'isins' → logprob: -4.435295104980469
    8. 'l' → logprob: -4.685295104980469
    9. 'ies' → logprob: -4.685295104980469
    10. 'ix' → logprob: -4.935295104980469

Token 178: ' direct' (ID: 2823)
  Prédit: 'age'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'age' → logprob: -0.2925567030906677
    2. 'alité' → logprob: -2.6675567626953125
    3. 'es' → logprob: -3.1675567626953125
    4. 's' → logprob: -3.1675567626953125
    5. 'é' → logprob: -3.6675567626953125
    6. 'h' → logprob: -3.9175567626953125
    7. 'ité' → logprob: -4.5425567626953125
    8. 'auté' → logprob: -5.0425567626953125
    9. 'ages' → logprob: -5.0425567626953125
    10. 'al' → logprob: -5.4175567626953125

Token 179: ').
' (ID: 6294)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.1823492795228958
    2. 'es' → logprob: -2.05734920501709
    3. 's' → logprob: -3.55734920501709
    4. ')' → logprob: -5.05734920501709
    5. ' e' → logprob: -7.05734920501709
    6. ' es' → logprob: -7.43234920501709
    7. ' en' → logprob: -7.68234920501709
    8. ').' → logprob: -7.80734920501709
    9. 'é' → logprob: -7.93234920501709
    10. '),' → logprob: -8.43234920501709

Token 180: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.03592858090996742
    2. '
' → logprob: -4.410928726196289
    3. 'import' → logprob: -4.535928726196289
    4. 's' → logprob: -5.035928726196289
    5. '2' → logprob: -6.660928726196289
    6. ',' → logprob: -6.785928726196289
    7. ' #' → logprob: -7.160928726196289
    8. ',
' → logprob: -7.785928726196289
    9. 'positions' → logprob: -8.160928726196289
    10. '\n' → logprob: -8.285928726196289

Token 181: ' ' (ID: 220)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.18762077391147614
    2. '2' → logprob: -2.6876208782196045
    3. 'def' → logprob: -3.3126208782196045
    4. 'positions' → logprob: -3.4376208782196045
    5. 'import' → logprob: -4.437620639801025
    6. ' #' → logprob: -4.812620639801025
    7. 's' → logprob: -5.312620639801025
    8. ' positions' → logprob: -5.687620639801025
    9. '
' → logprob: -6.687620639801025
    10. 'adj' → logprob: -6.812620639801025

Token 182: '2' (ID: 17)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8747290968894958
    2. 'positions' → logprob: -1.3747291564941406
    3. '2' → logprob: -1.4997291564941406
    4. 'adj' → logprob: -2.6247291564941406
    5. 'def' → logprob: -3.7497291564941406
    6. 'visited' → logprob: -5.624729156494141
    7. 'graph' → logprob: -6.749729156494141
    8. 'for' → logprob: -7.124729156494141
    9. 'pos' → logprob: -7.124729156494141
    10. 'neighbors' → logprob: -7.249729156494141

Token 183: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04701896384358406
    2. '#' → logprob: -3.1720190048217773
    3. ' #' → logprob: -6.047019004821777
    4. ' )' → logprob: -6.547019004821777
    5. 'def' → logprob: -9.297019004821777
    6. ' Constru' → logprob: -10.922019004821777
    7. ')#' → logprob: -11.047019004821777
    8. 'Constru' → logprob: -11.047019004821777
    9. ' def' → logprob: -11.422019004821777
    10. ' ' → logprob: -11.547019004821777

Token 184: ' Trou' (ID: 58947)
  Prédit: 'Util'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Util' → logprob: -1.2918745279312134
    2. 'Effect' → logprob: -1.4168745279312134
    3. 'def' → logprob: -2.416874408721924
    4. 'Impl' → logprob: -2.916874408721924
    5. 'Par' → logprob: -3.041874408721924
    6. 'Faire' → logprob: -3.166874408721924
    7. 'Explorer' → logprob: -3.291874408721924
    8. 'Pour' → logprob: -3.291874408721924
    9. 'for' → logprob: -3.666874408721924
    10. 'from' → logprob: -3.916874408721924

Token 185: 'ver' (ID: 445)
  Prédit: 'ver'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ver' → logprob: -0.026324685662984848
    2. 'v' → logprob: -4.02632474899292
    3. 'vé' → logprob: -5.02632474899292
    4. 've' → logprob: -7.15132474899292
    5. 'vez' → logprob: -7.77632474899292
    6. 'ter' → logprob: -8.276324272155762
    7. 'te' → logprob: -10.276324272155762
    8. 'vers' → logprob: -10.776324272155762
    9. 'vre' → logprob: -11.526324272155762
    10. 'VER' → logprob: -12.151324272155762

Token 186: ' un' (ID: 537)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -1.1164029836654663
    2. ' toutes' → logprob: -1.9914029836654663
    3. 'les' → logprob: -2.241403102874756
    4. ' le' → logprob: -2.366403102874756
    5. ' tous' → logprob: -2.366403102874756
    6. ' la' → logprob: -2.741403102874756
    7. ' une' → logprob: -3.116403102874756
    8. ' k' → logprob: -3.116403102874756
    9. ' un' → logprob: -3.491403102874756
    10. 'une' → logprob: -3.991403102874756

Token 187: ' sous' (ID: 14487)
  Prédit: 'ensemble'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ensemble' → logprob: -0.2660965621471405
    2. ' ensemble' → logprob: -1.891096591949463
    3. ' sous' → logprob: -3.141096591949463
    4. 's' → logprob: -3.766096591949463
    5. ' plus' → logprob: -6.266096591949463
    6. 'ense' → logprob: -6.516096591949463
    7. ' subset' → logprob: -6.641096591949463
    8. 'e' → logprob: -6.891096591949463
    9. 'subset' → logprob: -7.016096591949463
    10. ' cluster' → logprob: -7.016096591949463

Token 188: '-' (ID: 12)
  Prédit: 'ensemble'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ensemble' → logprob: -0.2936551570892334
    2. 'graph' → logprob: -1.4186551570892334
    3. 'gr' → logprob: -5.0436553955078125
    4. '-' → logprob: -5.6686553955078125
    5. ' ensemble' → logprob: -6.6686553955078125
    6. 'set' → logprob: -8.043655395507812
    7. '```' → logprob: -8.293655395507812
    8. ' grap' → logprob: -8.543655395507812
    9. '-gr' → logprob: -8.668655395507812
    10. 'ense' → logprob: -8.668655395507812

Token 189: 'ensemble' (ID: 37301)
  Prédit: 'ensemble'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ensemble' → logprob: -0.07492250204086304
    2. 'gr' → logprob: -3.324922561645508
    3. 'graph' → logprob: -3.324922561645508
    4. 'ense' → logprob: -8.699922561645508
    5. 'set' → logprob: -10.199922561645508
    6. '```' → logprob: -11.699922561645508
    7. '-' → logprob: -12.199922561645508
    8. ' ensemble' → logprob: -12.699922561645508
    9. 'g' → logprob: -13.199922561645508
    10. 'gra' → logprob: -13.324922561645508

Token 190: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.006886577233672142
    2. 'de' → logprob: -5.2568864822387695
    3. ' ' → logprob: -7.7568864822387695
    4. ' d' → logprob: -8.00688648223877
    5. 'conn' → logprob: -8.13188648223877
    6. ' conn' → logprob: -8.50688648223877
    7. ' des' → logprob: -9.50688648223877
    8. ' k' → logprob: -9.88188648223877
    9. '```' → logprob: -10.13188648223877
    10. ' connected' → logprob: -10.25688648223877

Token 191: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.2823619842529297
    2. 'k' → logprob: -1.4073619842529297
    3. ' taille' → logprob: -7.90736198425293
    4. ' size' → logprob: -8.15736198425293
    5. 'positions' → logprob: -8.78236198425293
    6. 'size' → logprob: -9.28236198425293
    7. ' cubes' → logprob: -9.40736198425293
    8. ' ' → logprob: -9.90736198425293
    9. ' positions' → logprob: -10.03236198425293
    10. 'c' → logprob: -10.03236198425293

Token 192: ' positions' (ID: 15897)
  Prédit: ' cubes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cubes' → logprob: -0.06477295607328415
    2. ' positions' → logprob: -3.064772844314575
    3. 'positions' → logprob: -4.564773082733154
    4. 'c' → logprob: -6.814773082733154
    5. 'adj' → logprob: -7.439773082733154
    6. 's' → logprob: -7.689773082733154
    7. ' des' → logprob: -7.814773082733154
    8. '_positions' → logprob: -8.064772605895996
    9. ' adjacent' → logprob: -8.064772605895996
    10. ' espaces' → logprob: -8.064772605895996

Token 193: ' connex' (ID: 154480)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 194: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.10140007734298706
    2. 'ect' → logprob: -2.476400136947632
    3. 'tes' → logprob: -4.851399898529053
    4. 'ues' → logprob: -6.351399898529053
    5. 'ves' → logprob: -7.226399898529053
    6. 'ives' → logprob: -7.351399898529053
    7. 'ects' → logprob: -7.976399898529053
    8. 'entes' → logprob: -8.226400375366211
    9. 'e' → logprob: -8.351400375366211
    10. 'ct' → logprob: -9.101400375366211

Token 195: ' minim' (ID: 23874)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.48216870427131653
    2. '.' → logprob: -1.4821686744689941
    3. '#' → logprob: -2.482168674468994
    4. 's' → logprob: -4.482168674468994
    5. ' (' → logprob: -4.607168674468994
    6. 'possible' → logprob: -4.982168674468994
    7. ' parmi' → logprob: -5.107168674468994
    8. ' possible' → logprob: -5.482168674468994
    9. ' par' → logprob: -5.482168674468994
    10. ',
' → logprob: -5.732168674468994

Token 196: 'isant' (ID: 56111)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.107634536921978
    2. 'ales' → logprob: -2.7326345443725586
    3. 'ale' → logprob: -3.8576345443725586
    4. 'alis' → logprob: -5.857634544372559
    5. 'um' → logprob: -6.107634544372559
    6. 'aux' → logprob: -6.107634544372559
    7. 'ais' → logprob: -6.232634544372559
    8. 'a' → logprob: -6.857634544372559
    9. 'iser' → logprob: -7.232634544372559
    10. 'alist' → logprob: -7.607634544372559

Token 197: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.03321797400712967
    2. 'la' → logprob: -3.5332179069519043
    3. ' l' → logprob: -5.908217906951904
    4. 'l' → logprob: -8.283218383789062
    5. ' le' → logprob: -8.658218383789062
    6. 'le' → logprob: -8.783218383789062
    7. ' ' → logprob: -9.283218383789062
    8. ' ' → logprob: -10.283218383789062
    9. ' surface' → logprob: -11.533218383789062
    10. '_la' → logprob: -12.533218383789062

Token 198: ' surface' (ID: 9753)
  Prédit: 'surface'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'surface' → logprob: -0.4875706136226654
    2. ' surface' → logprob: -1.3625706434249878
    3. ' nombre' → logprob: -3.1125705242156982
    4. 's' → logprob: -3.6125705242156982
    5. 'nombre' → logprob: -3.9875705242156982
    6. 'co' → logprob: -4.112570762634277
    7. ' coût' → logprob: -4.362570762634277
    8. ' total' → logprob: -5.737570762634277
    9. 'total' → logprob: -6.362570762634277
    10. 'c' → logprob: -6.737570762634277

Token 199: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5079222321510315
    2. '#' → logprob: -1.7579221725463867
    3. 'def' → logprob: -2.5079221725463867
    4. ',' → logprob: -2.8829221725463867
    5. ':' → logprob: -3.3829221725463867
    6. '
' → logprob: -4.632922172546387
    7. 'import' → logprob: -4.757922172546387
    8. ',
' → logprob: -4.757922172546387
    9. 's' → logprob: -4.882922172546387
    10. '.
' → logprob: -5.007922172546387

Token 200: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0873313695192337
    2. '6' → logprob: -2.5873312950134277
    3. ' k' → logprob: -5.212331295013428
    4. '"' → logprob: -6.837331295013428
    5. 'k' → logprob: -7.962331295013428
    6. ''' → logprob: -8.212331771850586
    7. '```' → logprob: -8.337331771850586
    8. ' '' → logprob: -8.962331771850586
    9. ' (' → logprob: -9.087331771850586
    10. ' "' → logprob: -9.337331771850586

Token 201: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.0038326175417751074
    2. ' ' → logprob: -5.628832817077637
    3. 'k' → logprob: -9.253832817077637
    4. '```' → logprob: -9.878832817077637
    5. '(' → logprob: -10.128832817077637
    6. '`' → logprob: -11.878832817077637
    7. '"' → logprob: -12.003832817077637
    8. 'import' → logprob: -12.128832817077637
    9. 'lambda' → logprob: -12.253832817077637
    10. ''' → logprob: -12.628832817077637

Token 202: '*k' (ID: 81061)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.2147156298160553
    2. '*s' → logprob: -1.714715600013733
    3. ' *' → logprob: -4.339715480804443
    4. '*k' → logprob: -8.964715957641602
    5. '**' → logprob: -12.089715957641602
    6. '*(' → logprob: -12.214715957641602
    7. '*c' → logprob: -12.464715957641602
    8. '*object' → logprob: -12.839715957641602
    9. '*p' → logprob: -12.964715957641602
    10. '*n' → logprob: -13.089715957641602

Token 203: '*s' (ID: 71191)
  Prédit: '*s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*s' → logprob: -0.0038640929851680994
    2. '*' → logprob: -5.628864288330078
    3. ' *' → logprob: -8.503864288330078
    4. '*k' → logprob: -10.003864288330078
    5. '*(' → logprob: -12.628864288330078
    6. 's' → logprob: -12.878864288330078
    7. '*num' → logprob: -13.378864288330078
    8. '*m' → logprob: -13.628864288330078
    9. '*c' → logprob: -14.003864288330078
    10. '*x' → logprob: -14.253864288330078

Token 204: '*s' (ID: 71191)
  Prédit: '*s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*s' → logprob: -0.09215620905160904
    2. '*' → logprob: -2.717156171798706
    3. ' -' → logprob: -4.842156410217285
    4. '-' → logprob: -4.842156410217285
    5. ' *' → logprob: -5.717156410217285
    6. '*k' → logprob: -6.467156410217285
    7. 's' → logprob: -7.967156410217285
    8. '-s' → logprob: -8.342156410217285
    9. '*-' → logprob: -8.717156410217285
    10. '*(' → logprob: -9.342156410217285

Token 205: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5240548849105835
    2. '-' → logprob: -0.8990548849105835
    3. ' ' → logprob: -7.899055004119873
    4. '-s' → logprob: -8.774054527282715
    5. '#' → logprob: -9.274054527282715
    6. 's' → logprob: -9.524054527282715
    7. ',' → logprob: -10.274054527282715
    8. '*' → logprob: -10.524054527282715
    9. ' #' → logprob: -10.524054527282715
    10. ' ' → logprob: -10.524054527282715

Token 206: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.070022352039814
    2. ' ' → logprob: -2.6950223445892334
    3. '12' → logprob: -9.945022583007812
    4. '4' → logprob: -10.945022583007812
    5. '6' → logprob: -11.945022583007812
    6. '```' → logprob: -12.070022583007812
    7. '(' → logprob: -12.695022583007812
    8. '   ' → logprob: -13.195022583007812
    9. ' (' → logprob: -13.945022583007812
    10. '8' → logprob: -14.195022583007812

Token 207: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0025040784385055304
    2. ' ' → logprob: -6.127503871917725
    3. '12' → logprob: -8.377504348754883
    4. '(' → logprob: -10.002504348754883
    5. '```' → logprob: -11.252504348754883
    6. '6' → logprob: -11.502504348754883
    7. '   ' → logprob: -11.627504348754883
    8. '4' → logprob: -12.127504348754883
    9. '  ' → logprob: -13.752504348754883
    10. ' (' → logprob: -14.252504348754883

Token 208: '*s' (ID: 71191)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.38980403542518616
    2. '*s' → logprob: -1.1398040056228638
    3. ' *' → logprob: -6.389803886413574
    4. '*k' → logprob: -7.014803886413574
    5. '*b' → logprob: -10.014803886413574
    6. '*f' → logprob: -10.139803886413574
    7. '*w' → logprob: -10.264803886413574
    8. '*u' → logprob: -10.389803886413574
    9. '*c' → logprob: -10.639803886413574
    10. '*object' → logprob: -10.889803886413574

Token 209: '*s' (ID: 71191)
  Prédit: '*s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*s' → logprob: -0.07436005026102066
    2. '*' → logprob: -2.6993601322174072
    3. '**' → logprob: -5.574359893798828
    4. 's' → logprob: -8.574359893798828
    5. ' *' → logprob: -8.574359893798828
    6. '2' → logprob: -9.199359893798828
    7. '*k' → logprob: -9.574359893798828
    8. '*p' → logprob: -11.824359893798828
    9. '*num' → logprob: -11.949359893798828
    10. '²' → logprob: -12.074359893798828

Token 210: '*(' (ID: 14793)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5933552980422974
    2. '#' → logprob: -1.8433552980422974
    3. 'def' → logprob: -1.9683552980422974
    4. 'import' → logprob: -2.343355178833008
    5. '

' → logprob: -3.843355178833008
    6. 's' → logprob: -4.343355178833008
    7. '.' → logprob: -5.218355178833008
    8. ',' → logprob: -5.718355178833008
    9. ',
' → logprob: -6.093355178833008
    10. '\n' → logprob: -6.468355178833008

Token 211: 'nombre' (ID: 28576)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.773300290107727
    2. 'k' → logprob: -2.1483001708984375
    3. 'nombre' → logprob: -2.2733001708984375
    4. 'number' → logprob: -2.6483001708984375
    5. '(k' → logprob: -2.8983001708984375
    6. 'edges' → logprob: -3.8983001708984375
    7. '(adj' → logprob: -3.8983001708984375
    8. 'len' → logprob: -4.2733001708984375
    9. '(len' → logprob: -4.3983001708984375
    10. '(n' → logprob: -4.3983001708984375

Token 212: ' d' (ID: 272)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.1853100061416626
    2. '_de' → logprob: -1.1853100061416626
    3. ' d' → logprob: -1.8103100061416626
    4. '_adj' → logprob: -2.560309886932373
    5. '_d' → logprob: -3.310309886932373
    6. '_' → logprob: -3.310309886932373
    7. '_faces' → logprob: -3.685309886932373
    8. 'de' → logprob: -3.810309886932373
    9. 'd' → logprob: -5.185309886932373
    10. '_face' → logprob: -5.310309886932373

Token 213: ''ar' (ID: 54307)
  Prédit: 'faces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'faces' → logprob: -0.33476752042770386
    2. '_faces' → logprob: -1.5847675800323486
    3. 'ar' → logprob: -3.2097675800323486
    4. '_ar' → logprob: -4.8347673416137695
    5. 'are' → logprob: -5.0847673416137695
    6. ' faces' → logprob: -5.2097673416137695
    7. ' ar' → logprob: -5.2097673416137695
    8. ''ar' → logprob: -5.7097673416137695
    9. 'adj' → logprob: -5.9597673416137695
    10. '_' → logprob: -5.9597673416137695

Token 214: 'êtes' (ID: 23720)
  Prédit: 'êtes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êtes' → logprob: -0.005088122095912695
    2. 'etes' → logprob: -6.3800883293151855
    3. 'ê' → logprob: -6.6300883293151855
    4. 'tes' → logprob: -7.0050883293151855
    5. '^' → logprob: -8.755087852478027
    6. '\' → logprob: -8.880087852478027
    7. 'ètes' → logprob: -9.130087852478027
    8. 'cs' → logprob: -9.255087852478027
    9. '�' → logprob: -9.380087852478027
    10. '[' → logprob: -9.755087852478027

Token 215: ' internes' (ID: 183434)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adj' → logprob: -1.0667154788970947
    2. ' adj' → logprob: -2.0667154788970947
    3. ')' → logprob: -2.3167154788970947
    4. ' communes' → logprob: -2.4417154788970947
    5. ' entre' → logprob: -2.5667154788970947
    6. '_adj' → logprob: -2.8167154788970947
    7. ' sélection' → logprob: -3.3167154788970947
    8. 'comm' → logprob: -3.3167154788970947
    9. '_comm' → logprob: -3.4417154788970947
    10. ' part' → logprob: -4.191715240478516

Token 216: ' dans' (ID: 2671)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00815364345908165
    2. ' )' → logprob: -4.883153438568115
    3. ' sélection' → logprob: -9.008153915405273
    4. 'adj' → logprob: -9.008153915405273
    5. 'selected' → logprob: -9.758153915405273
    6. ' entre' → logprob: -10.383153915405273
    7. ' selected' → logprob: -10.383153915405273
    8. '),' → logprob: -10.508153915405273
    9. ' adj' → logprob: -10.758153915405273
    10. ')}' → logprob: -10.758153915405273

Token 217: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.8394896984100342
    2. 'l' → logprob: -1.3394896984100342
    3. 'le' → logprob: -2.089489698410034
    4. ' la' → logprob: -2.839489698410034
    5. 'la' → logprob: -2.964489698410034
    6. ' ce' → logprob: -3.589489698410034
    7. ' l' → logprob: -4.464489936828613
    8. 'subset' → logprob: -4.464489936828613
    9. 'cet' → logprob: -5.589489936828613
    10. ')' → logprob: -5.964489936828613

Token 218: ' sous' (ID: 14487)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.40902435779571533
    2. 'gr' → logprob: -1.4090243577957153
    3. 'subset' → logprob: -3.034024238586426
    4. ' sous' → logprob: -3.909024238586426
    5. 'ensemble' → logprob: -4.909024238586426
    6. 'graph' → logprob: -5.034024238586426
    7. 'g' → logprob: -5.159024238586426
    8. 'sé' → logprob: -6.284024238586426
    9. ' grap' → logprob: -8.409024238586426
    10. 'sub' → logprob: -8.409024238586426

Token 219: '-gr' (ID: 18511)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.6533826589584351
    2. '-' → logprob: -1.778382658958435
    3. 'ensemble' → logprob: -2.0283827781677246
    4. 'gr' → logprob: -2.0283827781677246
    5. '_' → logprob: -3.5283827781677246
    6. '_gr' → logprob: -4.403382778167725
    7. 'set' → logprob: -6.403382778167725
    8. '-gr' → logprob: -6.528382778167725
    9. '_graph' → logprob: -6.653382778167725
    10. 'g' → logprob: -7.278382778167725

Token 220: 'aphe' (ID: 98856)
  Prédit: 'aphe'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aphe' → logprob: -0.0018959138542413712
    2. 'aph' → logprob: -6.376895904541016
    3. 'oupe' → logprob: -8.751895904541016
    4. 'ap' → logprob: -10.751895904541016
    5. 'oup' → logprob: -12.001895904541016
    6. 'apho' → logprob: -13.501895904541016
    7. 'afe' → logprob: -13.751895904541016
    8. 'af' → logprob: -13.876895904541016
    9. 'phe' → logprob: -14.251895904541016
    10. 'appe' → logprob: -14.376895904541016

Token 221: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04730701074004173
    2. ' sélection' → logprob: -4.547307014465332
    3. 'selected' → logprob: -4.797307014465332
    4. ').' → logprob: -4.797307014465332
    5. ' selected' → logprob: -4.797307014465332
    6. ' )' → logprob: -5.047307014465332
    7. ' induced' → logprob: -6.922307014465332
    8. '_selected' → logprob: -7.422307014465332
    9. '#' → logprob: -7.797307014465332
    10. ')#' → logprob: -7.797307014465332

Token 222: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8275958299636841
    2. 'def' → logprob: -0.8275958299636841
    3. '
' → logprob: -2.5775957107543945
    4. 's' → logprob: -3.8275957107543945
    5. 'import' → logprob: -4.0775957107543945
    6. ',
' → logprob: -6.3275957107543945
    7. '6' → logprob: -6.4525957107543945
    8. '\' → logprob: -7.0775957107543945
    9. '

' → logprob: -7.2025957107543945
    10. '.' → logprob: -7.3275957107543945

Token 223: ' ' (ID: 220)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2964908182621002
    2. '#' → logprob: -1.6714907884597778
    3. '
' → logprob: -3.6714909076690674
    4. 's' → logprob: -3.7964909076690674
    5. 'import' → logprob: -4.421490669250488
    6. ',' → logprob: -6.796490669250488
    7. ' 
' → logprob: -6.796490669250488
    8. '<|end|>' → logprob: -6.796490669250488
    9. 'n' → logprob: -7.296490669250488
    10. '\' → logprob: -7.421490669250488

Token 224: '3' (ID: 18)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3515283465385437
    2. '#' → logprob: -1.2265284061431885
    3. 's' → logprob: -7.101528167724609
    4. 'import' → logprob: -7.101528167724609
    5. 'class' → logprob: -7.226528167724609
    6. 'from' → logprob: -8.35152816772461
    7. '#
' → logprob: -9.10152816772461
    8. '6' → logprob: -9.22652816772461
    9. 'k' → logprob: -9.97652816772461
    10. '
' → logprob: -9.97652816772461

Token 225: ')' (ID: 8)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.1683880090713501
    2. ' #' → logprob: -1.91838800907135
    3. ')' → logprob: -6.1683878898620605
    4. 'from' → logprob: -6.5433878898620605
    5. 'def' → logprob: -6.9183878898620605
    6. ' def' → logprob: -7.2933878898620605
    7. 'import' → logprob: -7.5433878898620605
    8. ' from' → logprob: -7.7933878898620605
    9. 'Pour' → logprob: -8.793388366699219
    10. ' import' → logprob: -8.918388366699219

Token 226: ' Maxim' (ID: 90641)
  Prédit: 'Util'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Util' → logprob: -0.4598270654678345
    2. '#' → logprob: -1.9598270654678345
    3. ' Util' → logprob: -1.9598270654678345
    4. 'Impl' → logprob: -4.084826946258545
    5. 'Expl' → logprob: -4.459826946258545
    6. 'É' → logprob: -4.459826946258545
    7. 'Explorer' → logprob: -4.459826946258545
    8. 'import' → logprob: -5.334826946258545
    9. ' #' → logprob: -5.584826946258545
    10. 'Tester' → logprob: -6.084826946258545

Token 227: 'iser' (ID: 7466)
  Prédit: 'iser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iser' → logprob: -0.00690434081479907
    2. 'al' → logprob: -5.006904125213623
    3. '```' → logprob: -10.131904602050781
    4. '#' → logprob: -10.381904602050781
    5. 'im' → logprob: -10.506904602050781
    6. 'is' → logprob: -11.506904602050781
    7. 'alyser' → logprob: -11.756904602050781
    8. 'izer' → logprob: -11.881904602050781
    9. 'a' → logprob: -12.006904602050781
    10. 'aiser' → logprob: -12.006904602050781

Token 228: ' les' (ID: 1341)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.2197990119457245
    2. 'le' → logprob: -1.9697990417480469
    3. ' les' → logprob: -3.719799041748047
    4. 'les' → logprob: -4.219799041748047
    5. 'l' → logprob: -4.844799041748047
    6. ' l' → logprob: -4.844799041748047
    7. ' la' → logprob: -6.719799041748047
    8. ' ' → logprob: -7.219799041748047
    9. ' nombre' → logprob: -8.094799041748047
    10. 'nombre' → logprob: -8.094799041748047

Token 229: ' ar' (ID: 646)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.5606331825256348
    2. 'ar' → logprob: -1.1856331825256348
    3. ' nombre' → logprob: -2.1856331825256348
    4. ' ar' → logprob: -5.060633182525635
    5. ' nombres' → logprob: -5.935633182525635
    6. 'edges' → logprob: -7.685633182525635
    7. 'faces' → logprob: -7.935633182525635
    8. ' ' → logprob: -8.060632705688477
    9. ' edges' → logprob: -8.310632705688477
    10. 'b' → logprob: -9.185632705688477

Token 230: 'êtes' (ID: 23720)
  Prédit: 'êtes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êtes' → logprob: -0.010706674307584763
    2. 'ê' → logprob: -4.885706901550293
    3. 'tes' → logprob: -7.135706901550293
    4. 'êt' → logprob: -7.635706901550293
    5. '^' → logprob: -7.760706901550293
    6. 'r' → logprob: -8.135706901550293
    7. 'ête' → logprob: -8.385706901550293
    8. 'êts' → logprob: -8.635706901550293
    9. '�' → logprob: -9.635706901550293
    10. 'es' → logprob: -9.635706901550293

Token 231: ' internes' (ID: 183434)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.641943097114563
    2. 'def' → logprob: -1.391943097114563
    3. ' 
' → logprob: -3.3919429779052734
    4. 's' → logprob: -3.8919429779052734
    5. '

' → logprob: -3.8919429779052734
    6. 'import' → logprob: -4.016942977905273
    7. ',' → logprob: -4.016942977905273
    8. '\' → logprob: -4.016942977905273
    9. '#' → logprob: -4.391942977905273
    10. '.' → logprob: -4.516942977905273

Token 232: ' revient' (ID: 95900)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.21175824105739594
    2. 'def' → logprob: -2.0867581367492676
    3. '

' → logprob: -4.211758136749268
    4. ' 
' → logprob: -4.961758136749268
    5. '\' → logprob: -5.211758136749268
    6. '#' → logprob: -5.336758136749268
    7. ',' → logprob: -5.586758136749268
    8. '
' → logprob: -5.586758136749268
    9. '<|end|>' → logprob: -5.586758136749268
    10. ',
' → logprob: -5.961758136749268

Token 233: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.033980030566453934
    2. 'à' → logprob: -3.408980131149292
    3. ' ' → logprob: -8.783980369567871
    4. ' a' → logprob: -10.158980369567871
    5. ' ' → logprob: -10.283980369567871
    6. ''à' → logprob: -10.283980369567871
    7. '```' → logprob: -10.408980369567871
    8. '’à' → logprob: -11.908980369567871
    9. ' to' → logprob: -12.408980369567871
    10. ' #' → logprob: -12.408980369567871

Token 234: ' minim' (ID: 23874)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -1.0182827711105347
    2. ' maxim' → logprob: -1.1432827711105347
    3. ' minim' → logprob: -1.8932827711105347
    4. 'max' → logprob: -2.143282890319824
    5. ' trouver' → logprob: -4.018282890319824
    6. ' chercher' → logprob: -5.018282890319824
    7. ' max' → logprob: -5.143282890319824
    8. ' sélectionner' → logprob: -5.143282890319824
    9. ' choisir' → logprob: -5.643282890319824
    10. 'chercher' → logprob: -5.893282890319824

Token 235: 'iser' (ID: 7466)
  Prédit: 'ser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ser' → logprob: -0.009547472931444645
    2. 'iser' → logprob: -5.009547710418701
    3. 'm' → logprob: -6.259547710418701
    4. '```' → logprob: -8.134547233581543
    5. 'user' → logprob: -9.009547233581543
    6. '#' → logprob: -9.134547233581543
    7. '``' → logprob: -10.009547233581543
    8. 'zer' → logprob: -10.009547233581543
    9. 's' → logprob: -10.259547233581543
    10. ' ser' → logprob: -10.259547233581543

Token 236: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.2206927090883255
    2. ' l' → logprob: -2.3456926345825195
    3. 'la' → logprob: -2.7206926345825195
    4. 'l' → logprob: -3.7206926345825195
    5. ' ' → logprob: -5.0956926345825195
    6. 'le' → logprob: -6.3456926345825195
    7. ' les' → logprob: -6.8456926345825195
    8. ' ' → logprob: -7.0956926345825195
    9. 'les' → logprob: -7.4706926345825195
    10. ' le' → logprob: -7.5956926345825195

Token 237: ' surface' (ID: 9753)
  Prédit: 'surface'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'surface' → logprob: -0.5240547060966492
    2. ' surface' → logprob: -0.8990547060966492
    3. 's' → logprob: -8.149054527282715
    4. ' superficie' → logprob: -8.774054527282715
    5. '_surface' → logprob: -9.149054527282715
    6. ' frontière' → logprob: -9.649054527282715
    7. 'distance' → logprob: -10.149054527282715
    8. 'sur' → logprob: -10.461554527282715
    9. '(surface' → logprob: -10.461554527282715
    10. 'surf' → logprob: -10.649054527282715

Token 238: ' parce' (ID: 27146)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3042600452899933
    2. 'def' → logprob: -1.929260015487671
    3. '

' → logprob: -3.429260015487671
    4. '#' → logprob: -3.679260015487671
    5. '<|end|>' → logprob: -4.42926025390625
    6. 'import' → logprob: -4.67926025390625
    7. '\' → logprob: -5.05426025390625
    8. '```' → logprob: -5.30426025390625
    9. 's' → logprob: -5.42926025390625
    10. '\n' → logprob: -5.55426025390625

Token 239: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.25152352452278137
    2. ' d' → logprob: -2.126523494720459
    3. ' qu' → logprob: -3.126523494720459
    4. ' ' → logprob: -4.251523494720459
    5. ' à' → logprob: -4.626523494720459
    6. '<|end|>' → logprob: -4.876523494720459
    7. 'que' → logprob: -5.126523494720459
    8. ' =' → logprob: -5.376523494720459
    9. ' de' → logprob: -6.251523494720459
    10. '#' → logprob: -6.376523494720459

Token 240: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.22824999690055847
    2. ' l' → logprob: -2.728250026702881
    3. ' la' → logprob: -3.103250026702881
    4. ' les' → logprob: -3.103250026702881
    5. ' ' → logprob: -4.853250026702881
    6. 'les' → logprob: -5.103250026702881
    7. 'l' → logprob: -5.353250026702881
    8. 'le' → logprob: -5.478250026702881
    9. ' le' → logprob: -5.603250026702881
    10. 'la' → logprob: -5.728250026702881

Token 241: ' ar' (ID: 646)
  Prédit: ' ar'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ar' → logprob: -0.010995353572070599
    2. 'ar' → logprob: -4.635995388031006
    3. ' face' → logprob: -7.885995388031006
    4. 'are' → logprob: -9.135994911193848
    5. 'aré' → logprob: -9.135994911193848
    6. ' are' → logprob: -9.260994911193848
    7. ''ar' → logprob: -9.385994911193848
    8. 'face' → logprob: -9.385994911193848
    9. ' ' → logprob: -9.635994911193848
    10. ' shared' → logprob: -10.010994911193848

Token 242: 'ête' (ID: 16808)
  Prédit: 'ête'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ête' → logprob: -0.17195631563663483
    2. 'ê' → logprob: -2.9219563007354736
    3. '^' → logprob: -3.6719563007354736
    4. '_' → logprob: -4.171956539154053
    5. '#' → logprob: -4.171956539154053
    6. 'êt' → logprob: -5.046956539154053
    7. 'r' → logprob: -5.171956539154053
    8. 't' → logprob: -5.546956539154053
    9. 'êtes' → logprob: -6.046956539154053
    10. 'c' → logprob: -6.171956539154053

Token 243: ' interne' (ID: 59673)
  Prédit: ' part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' part' → logprob: -0.2408144772052765
    2. ' interne' → logprob: -2.490814447402954
    3. ' commune' → logprob: -2.615814447402954
    4. ' partage' → logprob: -4.365814685821533
    5. ' ' → logprob: -4.865814685821533
    6. ' adj' → logprob: -5.240814685821533
    7. ' internal' → logprob: -5.740814685821533
    8. ' est' → logprob: -5.865814685821533
    9. 'adj' → logprob: -6.115814685821533
    10. 'part' → logprob: -6.365814685821533

Token 244: ' retire' (ID: 48410)
  Prédit: ' réduit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' réduit' → logprob: -0.7754735946655273
    2. ' part' → logprob: -1.2754735946655273
    3. ' sup' → logprob: -3.4004735946655273
    4. 'part' → logprob: -3.7754735946655273
    5. ' rédu' → logprob: -4.025473594665527
    6. ' permet' → logprob: -4.275473594665527
    7. ' enl' → logprob: -4.275473594665527
    8. ' partage' → logprob: -4.650473594665527
    9. ' représente' → logprob: -4.650473594665527
    10. 'sup' → logprob: -4.650473594665527

Token 245: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0938379168510437
    2. '2' → logprob: -2.5938379764556885
    3. ' deux' → logprob: -4.343837738037109
    4. ' une' → logprob: -7.468837738037109
    5. ' s' → logprob: -7.968837738037109
    6. ' un' → logprob: -8.34383773803711
    7. ' ' → logprob: -8.46883773803711
    8. ' two' → logprob: -9.59383773803711
    9. ' des' → logprob: -9.84383773803711
    10. ' de' → logprob: -9.84383773803711

Token 246: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.04015417769551277
    2. ' ' → logprob: -3.290154218673706
    3. 'de' → logprob: -6.665153980255127
    4. ' deux' → logprob: -7.915153980255127
    5. '4' → logprob: -9.040154457092285
    6. '   ' → logprob: -9.165154457092285
    7. 'une' → logprob: -9.915154457092285
    8. 'un' → logprob: -10.040154457092285
    9. '6' → logprob: -10.165154457092285
    10. '```' → logprob: -10.415154457092285

Token 247: '*s' (ID: 71191)
  Prédit: '*s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*s' → logprob: -0.3919565677642822
    2. '*' → logprob: -1.5169565677642822
    3. ' *' → logprob: -2.2669565677642822
    4. 's' → logprob: -7.141956329345703
    5. ' s' → logprob: -9.016956329345703
    6. ' *
' → logprob: -10.391956329345703
    7. 'import' → logprob: -10.641956329345703
    8. 'tokens' → logprob: -10.641956329345703
    9. '*c' → logprob: -10.891956329345703
    10. '*u' → logprob: -10.891956329345703

Token 248: '*s' (ID: 71191)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.5945261120796204
    2. '*s' → logprob: -0.8445261120796204
    3. '**' → logprob: -4.219526290893555
    4. 's' → logprob: -6.469526290893555
    5. ' *' → logprob: -7.219526290893555
    6. '*
' → logprob: -8.094526290893555
    7. '²' → logprob: -8.469526290893555
    8. '_s' → logprob: -9.094526290893555
    9. '^' → logprob: -9.344526290893555
    10. '*(' → logprob: -9.594526290893555

Token 249: ' à' (ID: 1221)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7941417098045349
    2. '
' → logprob: -1.0441417694091797
    3. '<|end|>' → logprob: -2.6691417694091797
    4. '

' → logprob: -3.6691417694091797
    5. '#' → logprob: -3.6691417694091797
    6. 's' → logprob: -4.16914176940918
    7. '<|end|>' → logprob: -4.66914176940918
    8. 'import' → logprob: -4.66914176940918
    9. '\' → logprob: -5.04414176940918
    10. ' 
' → logprob: -5.29414176940918

Token 250: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.6349823474884033
    2. ' la' → logprob: -0.7599823474884033
    3. 'l' → logprob: -6.634982109069824
    4. 'surface' → logprob: -7.759982109069824
    5. ' surface' → logprob: -8.509982109069824
    6. ' ' → logprob: -8.759982109069824
    7. ' l' → logprob: -9.384982109069824
    8. ' ' → logprob: -10.259982109069824
    9. 'the' → logprob: -10.259982109069824
    10. '_la' → logprob: -11.134982109069824

Token 251: ' surface' (ID: 9753)
  Prédit: 'surface'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'surface' → logprob: -0.16035258769989014
    2. ' surface' → logprob: -1.9103525876998901
    3. 'surf' → logprob: -10.53535270690918
    4. 's' → logprob: -10.53535270690918
    5. 'sur' → logprob: -10.66035270690918
    6. ' superficie' → logprob: -11.78535270690918
    7. '(surface' → logprob: -12.03535270690918
    8. 'total' → logprob: -12.16035270690918
    9. '_surface' → logprob: -12.16035270690918
    10. 'face' → logprob: -12.66035270690918

Token 252: '.
' (ID: 558)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9328882694244385
    2. 'def' → logprob: -1.1828882694244385
    3. '

' → logprob: -1.6828882694244385
    4. 's' → logprob: -3.4328882694244385
    5. 'import' → logprob: -3.5578882694244385
    6. '#' → logprob: -4.557888031005859
    7. '
' → logprob: -5.307888031005859
    8. '\' → logprob: -5.557888031005859
    9. ' 

' → logprob: -5.682888031005859
    10. ' 
' → logprob: -5.807888031005859

Token 253: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6634331941604614
    2. 'def' → logprob: -0.9134331941604614
    3. '

' → logprob: -3.663433074951172
    4. '<|end|>' → logprob: -3.913433074951172
    5. 's' → logprob: -4.663433074951172
    6. 'import' → logprob: -4.788433074951172
    7. '#' → logprob: -5.038433074951172
    8. '\' → logprob: -5.913433074951172
    9. '<|end|>' → logprob: -6.413433074951172
    10. ' 
' → logprob: -6.413433074951172

Token 254: ' ' (ID: 220)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04800693690776825
    2. '
' → logprob: -3.173007011413574
    3. 's' → logprob: -6.173007011413574
    4. ' 
' → logprob: -7.173007011413574
    5. 'import' → logprob: -7.548007011413574
    6. '

' → logprob: -8.173007011413574
    7. '#' → logprob: -8.298007011413574
    8. 'n' → logprob: -8.298007011413574
    9. 'k' → logprob: -8.548007011413574
    10. ' def' → logprob: -9.298007011413574

Token 255: '4' (ID: 19)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1469908207654953
    2. '#' → logprob: -2.1469907760620117
    3. 'from' → logprob: -5.271990776062012
    4. 'd' → logprob: -5.771990776062012
    5. 's' → logprob: -5.896990776062012
    6. 'import' → logprob: -6.646990776062012
    7. 'n' → logprob: -6.646990776062012
    8. '
' → logprob: -7.146990776062012
    9. ',' → logprob: -7.146990776062012
    10. 'k' → logprob: -7.146990776062012

Token 256: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.019704174250364304
    2. '#' → logprob: -4.019704341888428
    3. ' )' → logprob: -6.894704341888428
    4. ')#' → logprob: -8.14470386505127
    5. 'def' → logprob: -9.51970386505127
    6. ' #' → logprob: -9.51970386505127
    7. 'import' → logprob: -9.64470386505127
    8. ')
' → logprob: -11.89470386505127
    9. '()' → logprob: -12.26970386505127
    10. '')' → logprob: -12.64470386505127

Token 257: ' Le' (ID: 2018)
  Prédit: 'Util'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Util' → logprob: -1.011047601699829
    2. '#' → logprob: -1.261047601699829
    3. ' Util' → logprob: -2.386047601699829
    4. 'import' → logprob: -2.511047601699829
    5. 'from' → logprob: -3.261047601699829
    6. 'Explorer' → logprob: -3.761047601699829
    7. 'Expl' → logprob: -4.26104736328125
    8. ' #' → logprob: -4.76104736328125
    9. 'Faire' → logprob: -4.76104736328125
    10. 'Effect' → logprob: -4.76104736328125

Token 258: ' problème' (ID: 35630)
  Prédit: ' code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' code' → logprob: -0.3545028567314148
    2. ' problème' → logprob: -1.9795029163360596
    3. '#' → logprob: -3.4795029163360596
    4. 'import' → logprob: -3.6045029163360596
    5. ' meilleur' → logprob: -4.6045026779174805
    6. ' #' → logprob: -4.8545026779174805
    7. 'def' → logprob: -4.8545026779174805
    8. ' plus' → logprob: -4.9795026779174805
    9. ' reste' → logprob: -5.1045026779174805
    10. '```' → logprob: -5.1045026779174805

Token 259: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.11643431335687637
    2. '#' → logprob: -3.241434335708618
    3. 'est' → logprob: -3.241434335708618
    4. ' n' → logprob: -4.116434097290039
    5. ' reste' → logprob: -5.741434097290039
    6. ' #' → logprob: -5.866434097290039
    7. ' de' → logprob: -6.366434097290039
    8. ' s' → logprob: -6.366434097290039
    9. ' d' → logprob: -6.991434097290039
    10. ' semble' → logprob: -7.116434097290039

Token 260: ' équ' (ID: 18899)
  Prédit: ' NP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' NP' → logprob: -0.531802773475647
    2. 'NP' → logprob: -0.906802773475647
    3. ' un' → logprob: -5.281802654266357
    4. 'un' → logprob: -6.781802654266357
    5. '#' → logprob: -7.531802654266357
    6. ' connu' → logprob: -7.906802654266357
    7. 'np' → logprob: -8.031803131103516
    8. 'com' → logprob: -8.531803131103516
    9. 'class' → logprob: -9.031803131103516
    10. 'N' → logprob: -9.156803131103516

Token 261: 'ivalent' (ID: 19253)
  Prédit: 'ivalent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ivalent' → logprob: -0.00783741194754839
    2. 'ival' → logprob: -5.507837295532227
    3. 'ilibr' → logprob: -6.382837295532227
    4. 'ual' → logprob: -7.507837295532227
    5. 'i' → logprob: -7.757837295532227
    6. 'al' → logprob: -8.382837295532227
    7. 'u' → logprob: -8.507837295532227
    8. 'iv' → logprob: -8.632837295532227
    9. '```' → logprob: -9.382837295532227
    10. 'ivo' → logprob: -9.507837295532227

Token 262: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.03527330607175827
    2. 'à' → logprob: -3.410273313522339
    3. ''à' → logprob: -7.03527307510376
    4. ' a' → logprob: -8.410273551940918
    5. '’à' → logprob: -9.285273551940918
    6. ' ' → logprob: -9.410273551940918
    7. ' au' → logprob: -9.785273551940918
    8. '```' → logprob: -9.910273551940918
    9. 'au' → logprob: -10.285273551940918
    10. ' to' → logprob: -10.535273551940918

Token 263: ' trouver' (ID: 23195)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.7410719990730286
    2. 'tr' → logprob: -1.7410719394683838
    3. ' un' → logprob: -2.241071939468384
    4. ' trouver' → logprob: -2.991071939468384
    5. 'max' → logprob: -3.116071939468384
    6. ' chercher' → logprob: -3.241071939468384
    7. ' maxim' → logprob: -3.366071939468384
    8. 'une' → logprob: -3.616071939468384
    9. 'chercher' → logprob: -4.116072177886963
    10. 'la' → logprob: -5.241072177886963

Token 264: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.16684243083000183
    2. 'un' → logprob: -2.541842460632324
    3. 'une' → logprob: -3.291842460632324
    4. ' une' → logprob: -3.541842460632324
    5. ' le' → logprob: -5.416842460632324
    6. ' la' → logprob: -6.166842460632324
    7. 'le' → logprob: -8.166842460632324
    8. ' k' → logprob: -8.291842460632324
    9. ' des' → logprob: -8.541842460632324
    10. ' l' → logprob: -8.666842460632324

Token 265: ' "' (ID: 392)
  Prédit: ' sous'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sous' → logprob: -0.4694068133831024
    2. 's' → logprob: -1.9694068431854248
    3. ' connected' → logprob: -2.594406843185425
    4. ' k' → logprob: -3.219406843185425
    5. ' cluster' → logprob: -3.219406843185425
    6. ' ensemble' → logprob: -3.844406843185425
    7. 'ensemble' → logprob: -4.219406604766846
    8. ' clique' → logprob: -4.719406604766846
    9. ' s' → logprob: -5.344406604766846
    10. 'connected' → logprob: -5.719406604766846

Token 266: 'connected' (ID: 26297)
  Prédit: 'connected'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'connected' → logprob: -1.4131611585617065
    2. 'k' → logprob: -1.7881611585617065
    3. ' connected' → logprob: -2.038161277770996
    4. 's' → logprob: -2.163161277770996
    5. ' k' → logprob: -2.288161277770996
    6. 'cluster' → logprob: -2.538161277770996
    7. 'cl' → logprob: -2.788161277770996
    8. 'ensemble' → logprob: -3.288161277770996
    9. ' sous' → logprob: -3.788161277770996
    10. ' cluster' → logprob: -4.288161277770996

Token 267: ' induced' (ID: 57797)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7262563705444336
    2. ' sub' → logprob: -1.8512563705444336
    3. ' subset' → logprob: -1.8512563705444336
    4. ' component' → logprob: -2.2262563705444336
    5. ' _' → logprob: -2.9762563705444336
    6. ' set' → logprob: -4.101256370544434
    7. ' space' → logprob: -4.726256370544434
    8. '"' → logprob: -5.476256370544434
    9. '_sub' → logprob: -6.226256370544434
    10. ' subtree' → logprob: -6.351256370544434

Token 268: ' sub' (ID: 1543)
  Prédit: ' sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sub' → logprob: -0.008446495048701763
    2. ' subset' → logprob: -5.25844669342041
    3. '"' → logprob: -6.88344669342041
    4. ' subtree' → logprob: -6.88344669342041
    5. 'sub' → logprob: -7.13344669342041
    6. '_' → logprob: -9.00844669342041
    7. ' _' → logprob: -9.88344669342041
    8. '_sub' → logprob: -10.00844669342041
    9. ' "' → logprob: -10.50844669342041
    10. ' induced' → logprob: -10.75844669342041

Token 269: 'graph' (ID: 7978)
  Prédit: 'graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.1957000494003296
    2. 'set' → logprob: -1.8207000494003296
    3. '_' → logprob: -5.070700168609619
    4. ' graph' → logprob: -5.320700168609619
    5. ' set' → logprob: -5.695700168609619
    6. ' _' → logprob: -7.070700168609619
    7. 'space' → logprob: -8.445699691772461
    8. 'et' → logprob: -10.320699691772461
    9. '_graph' → logprob: -10.320699691772461
    10. '_set' → logprob: -10.320699691772461

Token 270: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.8335902094841003
    2. ' "' → logprob: -1.2085902690887451
    3. ' _' → logprob: -2.208590269088745
    4. '_' → logprob: -2.833590269088745
    5. ' de' → logprob: -2.958590269088745
    6. ' of' → logprob: -3.333590269088745
    7. ' "_' → logprob: -5.208590030670166
    8. '_"' → logprob: -6.583590030670166
    9. '"_' → logprob: -6.958590030670166
    10. '```' → logprob: -7.333590030670166

Token 271: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.2308609038591385
    2. '_' → logprob: -1.855860948562622
    3. ' _' → logprob: -4.105860710144043
    4. ' of' → logprob: -4.480860710144043
    5. '_de' → logprob: -5.355860710144043
    6. 'de' → logprob: -5.355860710144043
    7. '#' → logprob: -6.480860710144043
    8. '_selected' → logprob: -7.230860710144043
    9. '```' → logprob: -7.480860710144043
    10. ' ' → logprob: -7.730860710144043

Token 272: ' taille' (ID: 41644)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.14018294215202332
    2. 'k' → logprob: -2.5151829719543457
    3. ' taille' → logprob: -3.6401829719543457
    4. ' size' → logprob: -3.8901829719543457
    5. 'size' → logprob: -5.890182971954346
    6. 'tail' → logprob: -8.640182495117188
    7. ' la' → logprob: -9.890182495117188
    8. ' ' → logprob: -9.890182495117188
    9. ' ' → logprob: -10.390182495117188
    10. ' n' → logprob: -10.515182495117188

Token 273: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.07028907537460327
    2. 'k' → logprob: -2.695289134979248
    3. '=k' → logprob: -9.57028865814209
    4. 'exact' → logprob: -9.69528865814209
    5. ' exactly' → logprob: -9.82028865814209
    6. '_k' → logprob: -10.19528865814209
    7. ' exactement' → logprob: -10.57028865814209
    8. ' \(' → logprob: -10.82028865814209
    9. '```' → logprob: -10.82028865814209
    10. ' ' → logprob: -11.07028865814209

Token 274: ' avec' (ID: 3937)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.713980495929718
    2. '<|end|>' → logprob: -1.4639804363250732
    3. ',' → logprob: -2.4639804363250732
    4. ' _' → logprob: -3.0889804363250732
    5. 'import' → logprob: -3.3389804363250732
    6. '<|end|>' → logprob: -3.8389804363250732
    7. '.' → logprob: -3.9639804363250732
    8. '
' → logprob: -4.088980674743652
    9. ' ' → logprob: -4.838980674743652
    10. '```' → logprob: -5.213980674743652

Token 275: ' le' (ID: 505)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.4694085717201233
    2. 'la' → logprob: -1.9694085121154785
    3. 'maximum' → logprob: -2.2194085121154785
    4. '#' → logprob: -3.5944085121154785
    5. 'une' → logprob: -3.5944085121154785
    6. ' maximal' → logprob: -4.2194085121154785
    7. 'un' → logprob: -4.2194085121154785
    8. 'le' → logprob: -4.4694085121154785
    9. ' maximum' → logprob: -4.7194085121154785
    10. 'l' → logprob: -5.3444085121154785

Token 276: ' maximum' (ID: 10562)
  Prédit: 'maximum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'maximum' → logprob: -0.4364549517631531
    2. 'plus' → logprob: -1.8114550113677979
    3. ' maximum' → logprob: -2.561455011367798
    4. 'max' → logprob: -3.311455011367798
    5. 'nombre' → logprob: -3.311455011367798
    6. 'surface' → logprob: -4.436454772949219
    7. 'minimum' → logprob: -4.811454772949219
    8. ' plus' → logprob: -4.811454772949219
    9. ' nombre' → logprob: -5.436454772949219
    10. '#' → logprob: -5.936454772949219

Token 277: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.6530653238296509
    2. ' d' → logprob: -0.9030653238296509
    3. '_d' → logprob: -3.6530652046203613
    4. ' possible' → logprob: -4.528065204620361
    5. 'possible' → logprob: -4.528065204620361
    6. 'de' → logprob: -4.903065204620361
    7. '_' → logprob: -5.153065204620361
    8. ' de' → logprob: -5.528065204620361
    9. '_edges' → logprob: -5.903065204620361
    10. '_possible' → logprob: -6.028065204620361

Token 278: ''ar' (ID: 54307)
  Prédit: 'ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.4010356664657593
    2. ' ar' → logprob: -1.9010356664657593
    3. 'edges' → logprob: -2.151035785675049
    4. ' edges' → logprob: -3.526035785675049
    5. '_edges' → logprob: -4.276035785675049
    6. 'internal' → logprob: -5.026035785675049
    7. ''ar' → logprob: -5.401035785675049
    8. 'adj' → logprob: -5.776035785675049
    9. ' internal' → logprob: -6.026035785675049
    10. 'are' → logprob: -7.526035785675049

Token 279: 'êtes' (ID: 23720)
  Prédit: 'êtes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êtes' → logprob: -0.0002491807099431753
    2. 'ê' → logprob: -9.250248908996582
    3. 'edges' → logprob: -10.000248908996582
    4. 'ètes' → logprob: -10.375248908996582
    5. 'tes' → logprob: -10.875248908996582
    6. 'êts' → logprob: -11.125248908996582
    7. 'ête' → logprob: -11.250248908996582
    8. 'êtres' → logprob: -12.125248908996582
    9. 'êt' → logprob: -12.375248908996582
    10. '^' → logprob: -12.625248908996582

Token 280: ' internes' (ID: 183434)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5569187998771667
    2. '<|end|>' → logprob: -1.5569188594818115
    3. ' ' → logprob: -3.0569188594818115
    4. ' _' → logprob: -3.1819188594818115
    5. ',' → logprob: -4.056918621063232
    6. 'import' → logprob: -4.181918621063232
    7. '```' → logprob: -4.431918621063232
    8. '.' → logprob: -4.431918621063232
    9. '<|end|>' → logprob: -4.681918621063232
    10. ' =' → logprob: -4.931918621063232

Token 281: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5554839372634888
    2. '#' → logprob: -2.680483818054199
    3. '<|end|>' → logprob: -2.680483818054199
    4. 'def' → logprob: -2.805483818054199
    5. '

' → logprob: -3.180483818054199
    6. 'import' → logprob: -3.680483818054199
    7. '_' → logprob: -3.805483818054199
    8. '.' → logprob: -3.930483818054199
    9. ':' → logprob: -4.055483818054199
    10. ' =' → logprob: -4.180483818054199

Token 282: ' dans' (ID: 2671)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8860677480697632
    2. '.' → logprob: -2.1360678672790527
    3. ' #' → logprob: -2.3860678672790527
    4. 'import' → logprob: -2.6360678672790527
    5. ' i' → logprob: -3.0110678672790527
    6. ',' → logprob: -3.0110678672790527
    7. ' c' → logprob: -3.1360678672790527
    8. ' ' → logprob: -3.6360678672790527
    9. '...' → logprob: -3.8860678672790527
    10. ' donc' → logprob: -3.8860678672790527

Token 283: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.23587727546691895
    2. ' le' → logprob: -2.735877275466919
    3. 'un' → logprob: -2.985877275466919
    4. 'le' → logprob: -3.485877275466919
    5. ' la' → logprob: -3.610877275466919
    6. 'la' → logprob: -4.48587703704834
    7. '#' → logprob: -5.48587703704834
    8. ' une' → logprob: -5.73587703704834
    9. ' l' → logprob: -6.11087703704834
    10. 'l' → logprob: -6.11087703704834

Token 284: ' grap' (ID: 60955)
  Prédit: ' grap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' grap' → logprob: -0.5655284523963928
    2. ' graph' → logprob: -1.565528392791748
    3. 'gr' → logprob: -2.190528392791748
    4. 'graph' → logprob: -2.565528392791748
    5. ' hyper' → logprob: -4.690528392791748
    6. ' cube' → logprob: -5.815528392791748
    7. ' espace' → logprob: -5.815528392791748
    8. 'g' → logprob: -5.940528392791748
    9. ' sous' → logprob: -6.440528392791748
    10. '```' → logprob: -6.440528392791748

Token 285: 'he' (ID: 273)
  Prédit: 'he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.16701151430606842
    2. 'h' → logprob: -1.9170114994049072
    3. 'ph' → logprob: -5.667011737823486
    4. 'aphe' → logprob: -6.542011737823486
    5. 'heme' → logprob: -7.292011737823486
    6. '#' → logprob: -7.417011737823486
    7. 'phe' → logprob: -7.792011737823486
    8. 'p' → logprob: -10.792011260986328
    9. '   ' → logprob: -11.667011260986328
    10. ' ' → logprob: -11.792011260986328

Token 286: ' non' (ID: 2893)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -1.0007078647613525
    2. ' donné' → logprob: -1.0007078647613525
    3. ' non' → logprob: -3.1257078647613525
    4. ',' → logprob: -3.1257078647613525
    5. ' de' → logprob: -3.6257078647613525
    6. ' given' → logprob: -3.8757078647613525
    7. 'conn' → logprob: -4.500707626342773
    8. ' à' → logprob: -4.750707626342773
    9. ' d' → logprob: -4.750707626342773
    10. ' conn' → logprob: -4.875707626342773

Token 287: ' pond' (ID: 42367)
  Prédit: 'orient'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'orient' → logprob: -0.06869681179523468
    2. ' orient' → logprob: -2.8186967372894287
    3. 'or' → logprob: -6.193696975708008
    4. ' dirig' → logprob: -6.318696975708008
    5. 'dir' → logprob: -6.443696975708008
    6. 'com' → logprob: -7.693696975708008
    7. 'pond' → logprob: -8.318696975708008
    8. 'b' → logprob: -8.443696975708008
    9. ' complet' → logprob: -9.818696975708008
    10. ' oriented' → logprob: -9.943696975708008

Token 288: 'éré' (ID: 33338)
  Prédit: 'éré'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'éré' → logprob: -0.001739912899211049
    2. 'ér' → logprob: -7.501739978790283
    3. 'érés' → logprob: -7.626739978790283
    4. 'er' → logprob: -9.001739501953125
    5. 'érées' → logprob: -9.501739501953125
    6. 'é' → logprob: -9.626739501953125
    7. 'ré' → logprob: -9.626739501953125
    8. 'ére' → logprob: -10.126739501953125
    9. '__' → logprob: -10.126739501953125
    10. 'érée' → logprob: -10.251739501953125

Token 289: '.
' (ID: 558)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.45175692439079285
    2. '<|end|>' → logprob: -2.0767569541931152
    3. '

' → logprob: -2.5767569541931152
    4. 'def' → logprob: -2.7017569541931152
    5. '#' → logprob: -3.7017569541931152
    6. '\' → logprob: -4.326756954193115
    7. 'import' → logprob: -4.326756954193115
    8. '<|end|>' → logprob: -4.826756954193115
    9. '_' → logprob: -5.076756954193115
    10. '\n' → logprob: -5.326756954193115

Token 290: '#
' (ID: 11240)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0990694761276245
    2. '<|end|>' → logprob: -1.0990694761276245
    3. 'def' → logprob: -1.8490694761276245
    4. '_' → logprob: -3.099069595336914
    5. '[' → logprob: -3.599069595336914
    6. '#' → logprob: -4.224069595336914
    7. 'import' → logprob: -4.349069595336914
    8. '

' → logprob: -4.349069595336914
    9. '<|end|>' → logprob: -4.474069595336914
    10. '[
' → logprob: -4.724069595336914

Token 291: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.003440415021032095
    2. '#' → logprob: -6.7534403800964355
    3. 'import' → logprob: -7.0034403800964355
    4. '
' → logprob: -7.1284403800964355
    5. ' 
' → logprob: -8.753440856933594
    6. 's' → logprob: -8.753440856933594
    7. 'from' → logprob: -10.128440856933594
    8. '```' → logprob: -10.128440856933594
    9. 'n' → logprob: -10.503440856933594
    10. 'k' → logprob: -10.753440856933594

Token 292: ' Difficult' (ID: 184239)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.008365754038095474
    2. '
' → logprob: -6.008365631103516
    3. 'import' → logprob: -6.008365631103516
    4. ' 
' → logprob: -6.883365631103516
    5. ' def' → logprob: -7.508365631103516
    6. '#' → logprob: -7.883365631103516
    7. 'd' → logprob: -8.383365631103516
    8. 's' → logprob: -8.508365631103516
    9. 'de' → logprob: -8.508365631103516
    10. ' ' → logprob: -8.633365631103516

Token 293: 'és' (ID: 1756)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.0960080549120903
    2. 'e' → logprob: -3.096008062362671
    3. '#' → logprob: -3.346008062362671
    4. ')' → logprob: -5.596007823944092
    5. 'import' → logprob: -5.971007823944092
    6. 'és' → logprob: -6.346007823944092
    7. ',' → logprob: -7.096007823944092
    8. '=' → logprob: -8.09600830078125
    9. '```' → logprob: -8.47100830078125
    10. '<|end|>' → logprob: -8.47100830078125

Token 294: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5223470330238342
    2. '<|end|>' → logprob: -1.1473469734191895
    3. ' :' → logprob: -3.2723469734191895
    4. '#' → logprob: -3.7723469734191895
    5. '<|end|>' → logprob: -4.2723469734191895
    6. ',' → logprob: -5.7723469734191895
    7. '...' → logprob: -5.7723469734191895
    8. '.' → logprob: -5.7723469734191895
    9. ':
' → logprob: -6.3973469734191895
    10. ' =' → logprob: -7.3973469734191895

Token 295: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.0014874814078211784
    2. ' #' → logprob: -7.1264872550964355
    3. '<|end|>' → logprob: -7.7514872550964355
    4. 'import' → logprob: -9.376487731933594
    5. ' ' → logprob: -9.751487731933594
    6. '<|end|>' → logprob: -10.376487731933594
    7. '
' → logprob: -10.876487731933594
    8. ' 
' → logprob: -11.376487731933594
    9. '#
' → logprob: -12.126487731933594
    10. ',' → logprob: -12.251487731933594

Token 296: ' Le' (ID: 2018)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.24704276025295258
    2. '<|end|>' → logprob: -1.9970427751541138
    3. ' #' → logprob: -2.872042655944824
    4. ' ' → logprob: -4.122042655944824
    5. '<|end|>' → logprob: -5.622042655944824
    6. 'import' → logprob: -6.122042655944824
    7. 'from' → logprob: -7.372042655944824
    8. ' 
' → logprob: -7.497042655944824
    9. 'The' → logprob: -7.747042655944824
    10. ' Le' → logprob: -8.122042655944824

Token 297: ' grap' (ID: 60955)
  Prédit: ' code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' code' → logprob: -0.5669041275978088
    2. '#' → logprob: -1.816904067993164
    3. ' problem' → logprob: -3.066904067993164
    4. ' ' → logprob: -3.066904067993164
    5. ' ' → logprob: -3.316904067993164
    6. ' #' → logprob: -3.941904067993164
    7. 's' → logprob: -4.441904067993164
    8. '
' → logprob: -4.441904067993164
    9. '

' → logprob: -4.566904067993164
    10. ' next' → logprob: -4.691904067993164

Token 298: 'he' (ID: 273)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.21846556663513184
    2. 'm' → logprob: -2.093465566635132
    3. 'a' → logprob: -3.718465566635132
    4. 'ad' → logprob: -4.468465805053711
    5. 'é' → logprob: -4.968465805053711
    6. 'e' → logprob: -5.218465805053711
    7. 'd' → logprob: -5.718465805053711
    8. ')' → logprob: -6.093465805053711
    9. 'ment' → logprob: -6.468465805053711
    10. '_' → logprob: -6.593465805053711

Token 299: ' peut' (ID: 9216)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.2924507260322571
    2. '#' → logprob: -1.7924506664276123
    3. ' n' → logprob: -3.5424506664276123
    4. ' =' → logprob: -4.292450904846191
    5. ' complet' → logprob: -5.042450904846191
    6. 'est' → logprob: -5.667450904846191
    7. ' #' → logprob: -5.667450904846191
    8. ',' → logprob: -5.792450904846191
    9. ' is' → logprob: -6.167450904846191
    10. ':' → logprob: -6.167450904846191

Token 300: ' avoir' (ID: 16595)
  Prédit: 'être'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'être' → logprob: -0.16012884676456451
    2. ' être' → logprob: -2.0351288318634033
    3. '#' → logprob: -4.410129070281982
    4. 'avoir' → logprob: -6.285129070281982
    5. 'etre' → logprob: -7.535129070281982
    6. ' #' → logprob: -7.785129070281982
    7. ''être' → logprob: -7.785129070281982
    8. 'êtres' → logprob: -8.535128593444824
    9. ' avoir' → logprob: -8.785128593444824
    10. '’être' → logprob: -9.035128593444824

Token 301: ' jusqu' (ID: 21961)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.9792438745498657
    2. 'be' → logprob: -1.4792438745498657
    3. 'jus' → logprob: -1.7292438745498657
    4. 'n' → logprob: -2.354243755340576
    5. 'un' → logprob: -3.104243755340576
    6. 'tr' → logprob: -3.729243755340576
    7. ' jusqu' → logprob: -4.354243755340576
    8. 't' → logprob: -4.604243755340576
    9. 'de' → logprob: -4.979243755340576
    10. '#' → logprob: -5.104243755340576

Token 302: ''à' (ID: 33688)
  Prédit: ''à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''à' → logprob: -0.16931647062301636
    2. 'à' → logprob: -2.169316530227661
    3. ' à' → logprob: -3.544316530227661
    4. '’à' → logprob: -4.419316291809082
    5. '```' → logprob: -8.294316291809082
    6. 'a' → logprob: -8.544316291809082
    7. '`' → logprob: -10.794316291809082
    8. ' ' → logprob: -10.794316291809082
    9. ''a' → logprob: -11.169316291809082
    10. ' a' → logprob: -11.419316291809082

Token 303: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.35097208619117737
    2. '100' → logprob: -1.475972056388855
    3. ' ' → logprob: -2.7259721755981445
    4. '200' → logprob: -7.2259721755981445
    5. '500' → logprob: -7.7259721755981445
    6. '1' → logprob: -7.9759721755981445
    7. '300' → logprob: -9.100972175598145
    8. '250' → logprob: -9.850972175598145
    9. 'n' → logprob: -9.975972175598145
    10. '50' → logprob: -10.100972175598145

Token 304: '200' (ID: 1179)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.26029595732688904
    2. '100' → logprob: -1.5102959871292114
    3. '200' → logprob: -5.260295867919922
    4. '500' → logprob: -6.635295867919922
    5. ' ' → logprob: -7.385295867919922
    6. '1' → logprob: -8.010295867919922
    7. '300' → logprob: -8.135295867919922
    8. '20' → logprob: -8.885295867919922
    9. '250' → logprob: -9.260295867919922
    10. '2' → logprob: -9.510295867919922

Token 305: '0' (ID: 15)
  Prédit: ' nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nodes' → logprob: -1.300484538078308
    2. '0' → logprob: -1.425484538078308
    3. 'nodes' → logprob: -1.925484538078308
    4. '<|end|>' → logprob: -2.4254846572875977
    5. 'n' → logprob: -2.8004846572875977
    6. ' n' → logprob: -2.9254846572875977
    7. ',' → logprob: -3.6754846572875977
    8. '_nodes' → logprob: -3.8004846572875977
    9. ' vertices' → logprob: -4.050484657287598
    10. '000' → logprob: -4.550484657287598

Token 306: ' somm' (ID: 44830)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -1.2062453031539917
    2. ' nodes' → logprob: -1.4562453031539917
    3. ' positions' → logprob: -1.9562453031539917
    4. 'nodes' → logprob: -2.7062454223632812
    5. ' n' → logprob: -2.8312454223632812
    6. 'import' → logprob: -3.0812454223632812
    7. 'n' → logprob: -3.3312454223632812
    8. ',' → logprob: -3.3312454223632812
    9. '```' → logprob: -4.081245422363281
    10. ' vertices' → logprob: -4.206245422363281

Token 307: 'ets' (ID: 1719)
  Prédit: 'ets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ets' → logprob: -0.004394036717712879
    2. 'et' → logprob: -6.004394054412842
    3. 'es' → logprob: -6.379394054412842
    4. 'etes' → logprob: -9.504393577575684
    5. 'è' → logprob: -10.004393577575684
    6. 'ètes' → logprob: -10.004393577575684
    7. 'ettes' → logprob: -11.004393577575684
    8. 'ètres' → logprob: -11.004393577575684
    9. 'e' → logprob: -11.879393577575684
    10. '#' → logprob: -12.879393577575684

Token 308: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.22823813557624817
    2. '

' → logprob: -2.103238105773926
    3. 'def' → logprob: -3.103238105773926
    4. '#' → logprob: -4.603238105773926
    5. '<|end|>' → logprob: -4.978238105773926
    6. 'import' → logprob: -5.228238105773926
    7. '
' → logprob: -5.728238105773926
    8. 's' → logprob: -6.353238105773926
    9. '<|end|>' → logprob: -6.603238105773926
    10. '\n' → logprob: -6.853238105773926

Token 309: ' ce' (ID: 2357)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3901531398296356
    2. ' ce' → logprob: -1.765153169631958
    3. ' donc' → logprob: -2.640153169631958
    4. 'import' → logprob: -3.765153169631958
    5. ' #' → logprob: -4.140152931213379
    6. ' la' → logprob: -5.265152931213379
    7. 'don' → logprob: -5.390152931213379
    8. '...' → logprob: -5.390152931213379
    9. ' et' → logprob: -5.765152931213379
    10. 'ce' → logprob: -6.140152931213379

Token 310: ' qui' (ID: 2780)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.5876908302307129
    2. '#' → logprob: -1.712690830230713
    3. ''est' → logprob: -2.712690830230713
    4. ' code' → logprob: -3.587690830230713
    5. ' ' → logprob: -3.712690830230713
    6. ' #' → logprob: -3.837690830230713
    7. 'n' → logprob: -4.087690830230713
    8. ''' → logprob: -4.587690830230713
    9. 'u' → logprob: -4.587690830230713
    10. '```' → logprob: -4.712690830230713

Token 311: ' est' (ID: 893)
  Prédit: ' rend'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rend' → logprob: -0.20539195835590363
    2. 'rend' → logprob: -2.0803918838500977
    3. ' compl' → logprob: -3.9553918838500977
    4. ' limite' → logprob: -4.205391883850098
    5. ' pose' → logprob: -5.330391883850098
    6. ' est' → logprob: -5.330391883850098
    7. 'pose' → logprob: -6.205391883850098
    8. 'r' → logprob: -6.205391883850098
    9. 'est' → logprob: -6.455391883850098
    10. ' peut' → logprob: -6.580391883850098

Token 312: ' trop' (ID: 14765)
  Prédit: ' trop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' trop' → logprob: -0.531637966632843
    2. ' très' → logprob: -1.5316379070281982
    3. ' difficile' → logprob: -3.0316379070281982
    4. ' un' → logprob: -3.2816379070281982
    5. 'd' → logprob: -4.156638145446777
    6. ' assez' → logprob: -4.281638145446777
    7. ' extrêmement' → logprob: -4.656638145446777
    8. ' complexe' → logprob: -4.781638145446777
    9. ' une' → logprob: -5.156638145446777
    10. ' prohib' → logprob: -5.281638145446777

Token 313: ' grand' (ID: 6363)
  Prédit: ' lourd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lourd' → logprob: -0.14701974391937256
    2. ' volum' → logprob: -2.647019863128662
    3. ' coûte' → logprob: -3.897019863128662
    4. ' gros' → logprob: -4.647019863128662
    5. 'import' → logprob: -4.897019863128662
    6. ' long' → logprob: -5.147019863128662
    7. 'grand' → logprob: -5.272019863128662
    8. 'vol' → logprob: -5.397019863128662
    9. ' important' → logprob: -5.647019863128662
    10. ' grand' → logprob: -6.272019863128662

Token 314: ' pour' (ID: 1930)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 315: ' explorer' (ID: 73961)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.4139450788497925
    2. 'une' → logprob: -1.2889450788497925
    3. ' un' → logprob: -3.163945198059082
    4. 'un' → logprob: -4.163945198059082
    5. ' faire' → logprob: -6.663945198059082
    6. 'faire' → logprob: -7.288945198059082
    7. ' résoudre' → logprob: -7.288945198059082
    8. 'enumer' → logprob: -7.538945198059082
    9. ' brute' → logprob: -7.788945198059082
    10. 'l' → logprob: -8.288945198059082

Token 316: ' exhaust' (ID: 25278)
  Prédit: ' tout'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tout' → logprob: -0.8313523530960083
    2. ' exhaust' → logprob: -1.9563523530960083
    3. ' l' → logprob: -2.2063522338867188
    4. 'tout' → logprob: -2.7063522338867188
    5. ' toute' → logprob: -2.9563522338867188
    6. ' toutes' → logprob: -3.2063522338867188
    7. ' tous' → logprob: -3.8313522338867188
    8. ' complet' → logprob: -3.8313522338867188
    9. 't' → logprob: -4.206352233886719
    10. ' la' → logprob: -4.831352233886719

Token 317: 'ivement' (ID: 37978)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.32913023233413696
    2. 'ivement' → logprob: -1.4541301727294922
    3. 'ive' → logprob: -3.079130172729492
    4. 'ively' → logprob: -7.704130172729492
    5. 'iv' → logprob: -9.704130172729492
    6. '#' → logprob: -9.954130172729492
    7. 't' → logprob: -10.454130172729492
    8. 'f' → logprob: -10.829130172729492
    9. 'ifs' → logprob: -10.829130172729492
    10. '
' → logprob: -10.829130172729492

Token 318: ' toutes' (ID: 17502)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 319: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.046589311212301254
    2. 'les' → logprob: -3.1715893745422363
    3. ' ' → logprob: -6.546589374542236
    4. 'poss' → logprob: -7.546589374542236
    5. ' subsets' → logprob: -8.046588897705078
    6. ' ' → logprob: -8.671588897705078
    7. ' configurations' → logprob: -8.796588897705078
    8. ' possibilités' → logprob: -8.796588897705078
    9. ' le' → logprob: -9.171588897705078
    10. ' comb' → logprob: -9.421588897705078

Token 320: ' comb' (ID: 4134)
  Prédit: ' configurations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' configurations' → logprob: -0.6238381266593933
    2. 'config' → logprob: -1.623838186264038
    3. 'poss' → logprob: -2.748838186264038
    4. 's' → logprob: -2.748838186264038
    5. 'positions' → logprob: -3.373838186264038
    6. 'sé' → logprob: -3.748838186264038
    7. ' comb' → logprob: -3.873838186264038
    8. 'sub' → logprob: -4.498837947845459
    9. 'solutions' → logprob: -4.498837947845459
    10. 'comb' → logprob: -4.873837947845459

Token 321: 'inais' (ID: 42744)
  Prédit: 'inations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inations' → logprob: -0.6266778111457825
    2. 'inais' → logprob: -1.8766777515411377
    3. 'ina' → logprob: -2.1266777515411377
    4. 'in' → logprob: -2.2516777515411377
    5. 'ination' → logprob: -3.3766777515411377
    6. 'ines' → logprob: -4.001677989959717
    7. '```' → logprob: -4.751677989959717
    8. '#' → logprob: -5.251677989959717
    9. 'binations' → logprob: -5.876677989959717
    10. 'utations' → logprob: -6.251677989959717

Token 322: 'ons' (ID: 1808)
  Prédit: 'ons'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ons' → logprob: -0.058622781187295914
    2. 't' → logprob: -3.6836228370666504
    3. 'utions' → logprob: -4.68362283706665
    4. 'ections' → logprob: -4.93362283706665
    5. 'ations' → logprob: -6.05862283706665
    6. ')' → logprob: -6.05862283706665
    7. 'utations' → logprob: -6.30862283706665
    8. 'ts' → logprob: -6.30862283706665
    9. 'n' → logprob: -6.68362283706665
    10. 'on' → logprob: -7.05862283706665

Token 323: '.
' (ID: 558)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6316556334495544
    2. '<|end|>' → logprob: -1.3816556930541992
    3. 'def' → logprob: -3.131655693054199
    4. '<|end|>' → logprob: -3.256655693054199
    5. ',' → logprob: -3.631655693054199
    6. '#' → logprob: -3.631655693054199
    7. '[' → logprob: -4.006655693054199
    8. ':' → logprob: -4.131655693054199
    9. ')' → logprob: -4.131655693054199
    10. 'import' → logprob: -4.256655693054199

Token 324: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5015193223953247
    2. 'def' → logprob: -1.1265193223953247
    3. '

' → logprob: -3.251519203186035
    4. ' 
' → logprob: -4.876519203186035
    5. '#' → logprob: -5.376519203186035
    6. 'import' → logprob: -5.501519203186035
    7. '\' → logprob: -5.501519203186035
    8. 's' → logprob: -5.876519203186035
    9. 'n' → logprob: -6.126519203186035
    10. '<|end|>' → logprob: -7.126519203186035

Token 325: ' L' (ID: 451)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.20902925729751587
    2. '#' → logprob: -2.584029197692871
    3. '
' → logprob: -2.834029197692871
    4. ' 
' → logprob: -3.459029197692871
    5. 'import' → logprob: -4.959029197692871
    6. '\' → logprob: -5.834029197692871
    7. 'n' → logprob: -6.334029197692871
    8. ' ' → logprob: -6.584029197692871
    9. 's' → logprob: -6.834029197692871
    10. '

' → logprob: -6.834029197692871

Token 326: ''' (ID: 6)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.2607567608356476
    2. ' ' → logprob: -1.8857567310333252
    3. ' #' → logprob: -3.135756731033325
    4. '_' → logprob: -4.760756969451904
    5. 'def' → logprob: -5.260756969451904
    6. 'import' → logprob: -5.260756969451904
    7. ' =' → logprob: -5.635756969451904
    8. 's' → logprob: -6.510756969451904
    9. 'n' → logprob: -6.635756969451904
    10. ' def' → logprob: -6.635756969451904

Token 327: 'én' (ID: 3289)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6752365231513977
    2. 'from' → logprob: -1.925236463546753
    3. 'import' → logprob: -2.300236463546753
    4. ' code' → logprob: -2.425236463546753
    5. '```' → logprob: -3.050236463546753
    6. 'def' → logprob: -3.300236463546753
    7. ' problem' → logprob: -4.300236701965332
    8. 'user' → logprob: -4.425236701965332
    9. 'code' → logprob: -5.175236701965332
    10. ' user' → logprob: -5.175236701965332

Token 328: 'oncé' (ID: 59071)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.7041103839874268
    2. 't' → logprob: -0.7041103839874268
    3. 'def' → logprob: -5.829110145568848
    4. 'oncé' → logprob: -6.079110145568848
    5. 'um' → logprob: -6.579110145568848
    6. 'once' → logprob: -6.704110145568848
    7. '#' → logprob: -7.079110145568848
    8. 'ig' → logprob: -8.454110145568848
    9. 'code' → logprob: -8.454110145568848
    10. 'try' → logprob: -8.829110145568848

Token 329: ' semble' (ID: 42899)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.1567420959472656
    2. '#' → logprob: -1.6567420959472656
    3. 'def' → logprob: -2.6567420959472656
    4. '<|end|>' → logprob: -2.6567420959472656
    5. ' continues' → logprob: -2.6567420959472656
    6. '.' → logprob: -2.9067420959472656
    7. ' ' → logprob: -3.5317420959472656
    8. '<|end|>' → logprob: -3.7817420959472656
    9. 'import' → logprob: -3.9067420959472656
    10. ' =' → logprob: -3.9067420959472656

Token 330: ' complexe' (ID: 78615)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.3286838233470917
    2. 'ind' → logprob: -3.078683853149414
    3. 'suggest' → logprob: -3.203683853149414
    4. 's' → logprob: -3.578683853149414
    5. 'ins' → logprob: -4.328683853149414
    6. 'indi' → logprob: -4.453683853149414
    7. 'tr' → logprob: -4.703683853149414
    8. ' in' → logprob: -4.703683853149414
    9. 'impl' → logprob: -4.828683853149414
    10. ' sugg' → logprob: -4.953683853149414

Token 331: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 332: ' mais' (ID: 2899)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.04485725983977318
    2. ' but' → logprob: -4.044857025146484
    3. ' mais' → logprob: -4.919857025146484
    4. 'import' → logprob: -4.919857025146484
    5. ' #' → logprob: -5.794857025146484
    6. 'def' → logprob: -5.919857025146484
    7. ' voici' → logprob: -7.044857025146484
    8. '...' → logprob: -7.419857025146484
    9. ' donc' → logprob: -7.419857025146484
    10. ' 
' → logprob: -7.544857025146484

Token 333: ' en' (ID: 469)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.586376667022705
    2. ' #' → logprob: -1.836376667022705
    3. ' on' → logprob: -1.961376667022705
    4. '#' → logprob: -2.336376667022705
    5. ' il' → logprob: -2.961376667022705
    6. 'import' → logprob: -3.086376667022705
    7. ' l' → logprob: -3.336376667022705
    8. ' continuer' → logprob: -3.461376667022705
    9. ' le' → logprob: -3.586376667022705
    10. ' voici' → logprob: -3.586376667022705

Token 334: ' pratique' (ID: 42780)
  Prédit: 'raison'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raison' → logprob: -0.3800688087940216
    2. ' pratique' → logprob: -2.005068778991699
    3. 'pr' → logprob: -2.755068778991699
    4. ' raison' → logprob: -2.880068778991699
    5. 'python' → logprob: -5.130068778991699
    6. 'practice' → logprob: -5.255068778991699
    7. ' practice' → logprob: -5.255068778991699
    8. 'fait' → logprob: -5.505068778991699
    9. 'suite' → logprob: -5.505068778991699
    10. '```' → logprob: -5.880068778991699

Token 335: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06818048655986786
    2. ' on' → logprob: -3.318180561065674
    3. ' il' → logprob: -4.568180561065674
    4. '#' → logprob: -4.943180561065674
    5. 'import' → logprob: -6.068180561065674
    6. 'on' → logprob: -6.443180561065674
    7. ' la' → logprob: -6.568180561065674
    8. 'nous' → logprob: -6.568180561065674
    9. ' ,' → logprob: -6.693180561065674
    10. ' le' → logprob: -6.818180561065674

Token 336: ' une' (ID: 2463)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.12234076857566833
    2. ' il' → logprob: -2.872340679168701
    3. ' la' → logprob: -3.997340679168701
    4. ' l' → logprob: -4.872340679168701
    5. ' #' → logprob: -5.122340679168701
    6. 'import' → logprob: -5.372340679168701
    7. '#' → logprob: -5.497340679168701
    8. 'on' → logprob: -5.872340679168701
    9. ' continuer' → logprob: -5.997340679168701
    10. ' we' → logprob: -6.497340679168701

Token 337: ' méthode' (ID: 71490)
  Prédit: ' solution'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' solution' → logprob: -1.185780644416809
    2. 'heur' → logprob: -1.185780644416809
    3. ' heur' → logprob: -2.0607805252075195
    4. ' approche' → logprob: -2.5607805252075195
    5. ' heuristic' → logprob: -2.8107805252075195
    6. 'solution' → logprob: -3.0607805252075195
    7. 'appro' → logprob: -3.3107805252075195
    8. 'import' → logprob: -4.8107805252075195
    9. '#' → logprob: -5.3107805252075195
    10. ' BFS' → logprob: -5.5607805252075195

Token 338: ' BFS' (ID: 190016)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.0501877069473267
    2. 'de' → logprob: -2.300187587738037
    3. ' greedy' → logprob: -2.425187587738037
    4. ' heur' → logprob: -2.675187587738037
    5. ' basée' → logprob: -3.050187587738037
    6. 'heur' → logprob: -3.050187587738037
    7. ' naï' → logprob: -3.300187587738037
    8. ' simple' → logprob: -3.675187587738037
    9. 'import' → logprob: -3.800187587738037
    10. ' d' → logprob: -4.050187587738037

Token 339: '/' (ID: 14)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.6902416944503784
    2. ' )' → logprob: -2.565241813659668
    3. ' ' → logprob: -2.690241813659668
    4. '+' → logprob: -2.690241813659668
    5. ',' → logprob: -2.815241813659668
    6. '#' → logprob: -2.815241813659668
    7. '<|end|>' → logprob: -3.065241813659668
    8. ' (' → logprob: -3.315241813659668
    9. ' =' → logprob: -3.315241813659668
    10. ' +' → logprob: -3.440241813659668

Token 340: 'DFS' (ID: 109565)
  Prédit: 'DFS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DFS' → logprob: -0.21018876135349274
    2. ' DFS' → logprob: -2.210188865661621
    3. 'dfs' → logprob: -2.585188865661621
    4. ' dfs' → logprob: -6.210188865661621
    5. 'deque' → logprob: -6.210188865661621
    6. 'DP' → logprob: -9.460188865661621
    7. '```' → logprob: -9.835188865661621
    8. '#' → logprob: -9.960188865661621
    9. 'search' → logprob: -10.085188865661621
    10. 'for' → logprob: -10.210188865661621

Token 341: ' pour' (ID: 1930)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.207231044769287
    2. ' peut' → logprob: -1.582231044769287
    3. ')' → logprob: -1.832231044769287
    4. '#' → logprob: -2.207231044769287
    5. ' )' → logprob: -3.457231044769287
    6. ',' → logprob: -3.582231044769287
    7. ' pour' → logprob: -4.332231044769287
    8. 'de' → logprob: -4.707231044769287
    9. ' #' → logprob: -4.707231044769287
    10. ' possible' → logprob: -4.707231044769287

Token 342: ' génér' (ID: 18939)
  Prédit: ' explorer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' explorer' → logprob: -0.5863902568817139
    2. ' trouver' → logprob: -2.211390256881714
    3. 'tr' → logprob: -2.336390256881714
    4. 'expl' → logprob: -2.586390256881714
    5. ' sélectionner' → logprob: -3.336390256881714
    6. 'l' → logprob: -3.961390256881714
    7. 'chercher' → logprob: -4.336390495300293
    8. 'sé' → logprob: -4.461390495300293
    9. ' génér' → logprob: -4.836390495300293
    10. 'enumer' → logprob: -4.836390495300293

Token 343: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.2034439742565155
    2. 'érer' → logprob: -2.453444004058838
    3. 'rer' → logprob: -3.203444004058838
    4. 'expl' → logprob: -4.328444004058838
    5. 'al' → logprob: -4.953444004058838
    6. 'aler' → logprob: -5.203444004058838
    7. 'ér' → logprob: -5.328444004058838
    8. 'orer' → logprob: -5.328444004058838
    9. 'ner' → logprob: -5.578444004058838
    10. 'iter' → logprob: -5.828444004058838

Token 344: ' toutes' (ID: 17502)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.01983928494155407
    2. ' les' → logprob: -4.394839286804199
    3. ' ' → logprob: -6.144839286804199
    4. ' le' → logprob: -7.019839286804199
    5. 'des' → logprob: -7.144839286804199
    6. ' progressivement' → logprob: -7.269839286804199
    7. ' un' → logprob: -7.394839286804199
    8. ' toutes' → logprob: -7.519839286804199
    9. ' tous' → logprob: -8.2698392868042
    10. ' de' → logprob: -8.5198392868042

Token 345: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.7471491694450378
    2. '_' → logprob: -1.8721492290496826
    3. ' subsets' → logprob: -2.2471492290496826
    4. ' ' → logprob: -2.8721492290496826
    5. ' possible' → logprob: -3.4971492290496826
    6. ' _' → logprob: -3.4971492290496826
    7. ' des' → logprob: -3.6221492290496826
    8. ' possibles' → logprob: -4.1221489906311035
    9. ' voisins' → logprob: -4.2471489906311035
    10. ' comb' → logprob: -4.7471489906311035

Token 346: ' compos' (ID: 14635)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -1.5220954418182373
    2. 'com' → logprob: -1.6470954418182373
    3. 'poss' → logprob: -1.6470954418182373
    4. ' comb' → logprob: -2.3970954418182373
    5. 's' → logprob: -2.7720954418182373
    6. 'vo' → logprob: -3.0220954418182373
    7. 'conn' → logprob: -3.1470954418182373
    8. 'comb' → logprob: -3.2720954418182373
    9. ' sous' → logprob: -3.8970954418182373
    10. 'c' → logprob: -3.8970954418182373

Token 347: 'antes' (ID: 5193)
  Prédit: 'antes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'antes' → logprob: -0.6189950108528137
    2. 'on' → logprob: -1.868994951248169
    3. 'ants' → logprob: -2.743994951248169
    4. 'n' → logprob: -3.118994951248169
    5. 'conn' → logprob: -3.493994951248169
    6. 'ont' → logprob: -3.493994951248169
    7. '#' → logprob: -3.868994951248169
    8. 'ant' → logprob: -4.493995189666748
    9. 'onn' → logprob: -4.493995189666748
    10. '```' → logprob: -4.868995189666748

Token 348: ' connex' (ID: 154480)
  Prédit: 'conn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'conn' → logprob: -0.03166940063238144
    2. 'connect' → logprob: -4.406669616699219
    3. '_conn' → logprob: -4.406669616699219
    4. ' connex' → logprob: -5.281669616699219
    5. 'connected' → logprob: -7.531669616699219
    6. ' conn' → logprob: -7.656669616699219
    7. 'con' → logprob: -9.031669616699219
    8. '_connect' → logprob: -9.281669616699219
    9. 'adj' → logprob: -9.656669616699219
    10. '_connected' → logprob: -9.656669616699219

Token 349: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.13704565167427063
    2. 'ions' → logprob: -3.0120456218719482
    3. 'tes' → logprob: -3.3870456218719482
    4. 'entes' → logprob: -4.637045860290527
    5. 'antes' → logprob: -4.762045860290527
    6. 'e' → logprob: -4.887045860290527
    7. 'ées' → logprob: -5.512045860290527
    8. 'ives' → logprob: -5.637045860290527
    9. 'ion' → logprob: -6.012045860290527
    10. '#' → logprob: -6.262045860290527

Token 350: ' jusqu' (ID: 21961)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0837293863296509
    2. '.' → logprob: -2.2087292671203613
    3. ':' → logprob: -2.3337292671203613
    4. '<|end|>' → logprob: -2.4587292671203613
    5. ')' → logprob: -2.5837292671203613
    6. '#' → logprob: -2.5837292671203613
    7. 'possible' → logprob: -3.5837292671203613
    8. '...' → logprob: -3.5837292671203613
    9. 's' → logprob: -3.7087292671203613
    10. ' possible' → logprob: -3.7087292671203613

Token 351: ''à' (ID: 33688)
  Prédit: ''à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''à' → logprob: -0.0397513322532177
    2. 'à' → logprob: -3.2897512912750244
    3. ''au' → logprob: -6.9147515296936035
    4. '’à' → logprob: -8.039751052856445
    5. ' à' → logprob: -8.164751052856445
    6. 'au' → logprob: -9.664751052856445
    7. ''a' → logprob: -10.664751052856445
    8. 'a' → logprob: -11.164751052856445
    9. ''' → logprob: -12.539751052856445
    10. '_' → logprob: -14.164751052856445

Token 352: ' taille' (ID: 41644)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.2868914306163788
    2. 'tail' → logprob: -1.6618914604187012
    3. 'la' → logprob: -2.911891460418701
    4. 'size' → logprob: -6.036891460418701
    5. 'ta' → logprob: -6.661891460418701
    6. ' k' → logprob: -7.411891460418701
    7. 'une' → logprob: -7.911891460418701
    8. ' taille' → logprob: -8.036890983581543
    9. ' la' → logprob: -9.161890983581543
    10. 't' → logprob: -10.411890983581543

Token 353: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.12714028358459473
    2. 'k' → logprob: -2.1271402835845947
    3. 'max' → logprob: -9.127140045166016
    4. ' maximale' → logprob: -9.877140045166016
    5. ' max' → logprob: -10.877140045166016
    6. '=k' → logprob: -11.752140045166016
    7. '_k' → logprob: -12.627140045166016
    8. ' s' → logprob: -12.627140045166016
    9. 's' → logprob: -12.627140045166016
    10. ' ' → logprob: -13.002140045166016

Token 354: ' pourrait' (ID: 39622)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10326163470745087
    2. ')' → logprob: -3.353261709213257
    3. ',' → logprob: -3.603261709213257
    4. '#' → logprob: -5.103261470794678
    5. '.' → logprob: -5.478261470794678
    6. ' :' → logprob: -5.603261470794678
    7. ' ' → logprob: -5.728261470794678
    8. 'def' → logprob: -5.978261470794678
    9. 's' → logprob: -6.103261470794678
    10. '):' → logprob: -6.353261470794678

Token 355: ' fonctionner' (ID: 153485)
  Prédit: ' être'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' être' → logprob: -0.7670072317123413
    2. ' suff' → logprob: -1.3920072317123413
    3. ' permettre' → logprob: -2.142007350921631
    4. ' continuer' → logprob: -2.767007350921631
    5. 'être' → logprob: -3.017007350921631
    6. '#' → logprob: -4.142007350921631
    7. ' suffice' → logprob: -5.017007350921631
    8. ' be' → logprob: -5.267007350921631
    9. ' #' → logprob: -5.517007350921631
    10. ' aider' → logprob: -5.642007350921631

Token 356: '.
' (ID: 558)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04962858185172081
    2. ':' → logprob: -3.299628496170044
    3. ':
' → logprob: -5.674628734588623
    4. '#' → logprob: -6.174628734588623
    5. 's' → logprob: -6.424628734588623
    6. 'n' → logprob: -7.299628734588623
    7. '```' → logprob: -7.424628734588623
    8. '
' → logprob: -7.549628734588623
    9. 'import' → logprob: -7.549628734588623
    10. '(s' → logprob: -8.174628257751465

Token 357: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.316803514957428
    2. '
' → logprob: -1.6918034553527832
    3. '#' → logprob: -3.941803455352783
    4. ':' → logprob: -4.316803455352783
    5. '

' → logprob: -4.316803455352783
    6. '```' → logprob: -4.441803455352783
    7. 'import' → logprob: -4.816803455352783
    8. ':
' → logprob: -5.316803455352783
    9. 's' → logprob: -5.441803455352783
    10. '\' → logprob: -6.191803455352783

Token 358: ' Cependant' (ID: 74480)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -7.350386295001954e-05
    2. '#' → logprob: -11.375073432922363
    3. 'n' → logprob: -11.500073432922363
    4. '```' → logprob: -11.500073432922363
    5. ' def' → logprob: -12.000073432922363
    6. ' 
' → logprob: -12.125073432922363
    7. 's' → logprob: -12.250073432922363
    8. '
' → logprob: -12.250073432922363
    9. 'class' → logprob: -12.250073432922363
    10. 'import' → logprob: -12.250073432922363

Token 359: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.42046716809272766
    2. '#' → logprob: -1.2954671382904053
    3. ' #' → logprob: -3.7954671382904053
    4. ' ,' → logprob: -4.420467376708984
    5. 'import' → logprob: -5.045467376708984
    6. 'def' → logprob: -5.045467376708984
    7. ' n' → logprob: -5.170467376708984
    8. ' la' → logprob: -5.545467376708984
    9. ' ' → logprob: -6.420467376708984
    10. ' ' → logprob: -6.795467376708984

Token 360: ' plusieurs' (ID: 20875)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.32532480359077454
    2. ' #' → logprob: -2.325324773788452
    3. ' il' → logprob: -2.825324773788452
    4. ' la' → logprob: -2.825324773788452
    5. ' on' → logprob: -4.575325012207031
    6. 'import' → logprob: -4.575325012207031
    7. ' l' → logprob: -4.575325012207031
    8. ' continuer' → logprob: -5.075325012207031
    9. ' je' → logprob: -5.450325012207031
    10. 'il' → logprob: -6.075325012207031

Token 361: ' compos' (ID: 14635)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0143804550170898
    2. 'import' → logprob: -1.7643804550170898
    3. 'def' → logprob: -2.38938045501709
    4. 'appro' → logprob: -2.76438045501709
    5. 'lines' → logprob: -2.76438045501709
    6. 'heur' → logprob: -2.88938045501709
    7. '```' → logprob: -3.13938045501709
    8. ' lignes' → logprob: -3.26438045501709
    9. 'c' → logprob: -4.01438045501709
    10. 'positions' → logprob: -4.13938045501709

Token 362: 'antes' (ID: 5193)
  Prédit: 'ètes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ètes' → logprob: -1.9891252517700195
    2. 'lines' → logprob: -2.1141252517700195
    3. 'l' → logprob: -2.8641252517700195
    4. 'import' → logprob: -2.9891252517700195
    5. 'leted' → logprob: -3.1141252517700195
    6. '#' → logprob: -3.1141252517700195
    7. 't' → logprob: -3.1141252517700195
    8. 'plt' → logprob: -3.2391252517700195
    9. 'ités' → logprob: -3.2391252517700195
    10. 'letes' → logprob: -3.2391252517700195

Token 363: ' connex' (ID: 154480)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 364: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.04549838975071907
    2. 'ues' → logprob: -3.2954983711242676
    3. 'tes' → logprob: -6.170498371124268
    4. '#' → logprob: -6.170498371124268
    5. 'entes' → logprob: -6.920498371124268
    6. 'e' → logprob: -7.670498371124268
    7. 'u' → logprob: -8.045498847961426
    8. 'utes' → logprob: -8.670498847961426
    9. 'ites' → logprob: -9.170498847961426
    10. 'ètes' → logprob: -9.295498847961426

Token 365: ' peuvent' (ID: 21321)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7998328804969788
    2. '#' → logprob: -1.424832820892334
    3. ' def' → logprob: -3.049832820892334
    4. ',' → logprob: -3.174832820892334
    5. ' possible' → logprob: -3.799832820892334
    6. 'import' → logprob: -3.924832820892334
    7. '<|end|>' → logprob: -3.924832820892334
    8. ' continues' → logprob: -4.299832820892334
    9. ' n' → logprob: -4.424832820892334
    10. ' =' → logprob: -4.549832820892334

Token 366: ' être' (ID: 9104)
  Prédit: 'être'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'être' → logprob: -0.6814790368080139
    2. ' être' → logprob: -1.5564789772033691
    3. '#' → logprob: -2.056478977203369
    4. 'ex' → logprob: -2.681478977203369
    5. 'contin' → logprob: -4.556478977203369
    6. 'ne' → logprob: -4.556478977203369
    7. ' ex' → logprob: -4.556478977203369
    8. '```' → logprob: -4.931478977203369
    9. ' appara' → logprob: -5.056478977203369
    10. 'n' → logprob: -5.181478977203369

Token 367: ' nombreuses' (ID: 42613)
  Prédit: 'expl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'expl' → logprob: -0.6972017884254456
    2. 'tr' → logprob: -2.447201728820801
    3. 'import' → logprob: -3.322201728820801
    4. ' trop' → logprob: -3.447201728820801
    5. ' présentes' → logprob: -3.447201728820801
    6. ' explor' → logprob: -3.572201728820801
    7. 'prés' → logprob: -3.822201728820801
    8. 'abs' → logprob: -3.947201728820801
    9. 'dé' → logprob: -4.447201728820801
    10. 'com' → logprob: -4.447201728820801

Token 368: ',' (ID: 11)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9079350233078003
    2. ',' → logprob: -1.0329350233078003
    3. '.' → logprob: -2.40793514251709
    4. 'def' → logprob: -2.53293514251709
    5. 'import' → logprob: -3.53293514251709
    6. '...' → logprob: -4.15793514251709
    7. ':' → logprob: -5.03293514251709
    8. '<|end|>' → logprob: -5.28293514251709
    9. ',
' → logprob: -6.03293514251709
    10. ')' → logprob: -6.40793514251709

Token 369: ' donc' (ID: 14206)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.06894207745790482
    2. '...' → logprob: -4.193942070007324
    3. ' #' → logprob: -4.318942070007324
    4. ' donc' → logprob: -4.818942070007324
    5. ',' → logprob: -4.943942070007324
    6. ' 
' → logprob: -5.693942070007324
    7. 'def' → logprob: -5.818942070007324
    8. 'import' → logprob: -6.068942070007324
    9. ' mais' → logprob: -6.068942070007324
    10. ' so' → logprob: -6.818942070007324

Token 370: ' on' (ID: 402)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0220186710357666
    2. ' une' → logprob: -2.0220186710357666
    3. ' #' → logprob: -2.3970186710357666
    4. ' on' → logprob: -2.3970186710357666
    5. ' continuer' → logprob: -2.5220186710357666
    6. ' il' → logprob: -2.7720186710357666
    7. ' la' → logprob: -3.1470186710357666
    8. 'import' → logprob: -3.3970186710357666
    9. ' un' → logprob: -3.7720186710357666
    10. '...' → logprob: -4.5220184326171875

Token 371: ' doit' (ID: 21822)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8442586660385132
    2. ' #' → logprob: -1.5942586660385132
    3. ' continue' → logprob: -2.8442587852478027
    4. ' n' → logprob: -2.8442587852478027
    5. 'import' → logprob: -3.2192587852478027
    6. ' peut' → logprob: -3.2192587852478027
    7. ' devra' → logprob: -3.5942587852478027
    8. ' pourra' → logprob: -3.7192587852478027
    9. ' peux' → logprob: -3.9692587852478027
    10. 'continue' → logprob: -4.344258785247803

Token 372: ' optimiser' (ID: 195777)
  Prédit: ' continuer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continuer' → logprob: -0.30113106966018677
    2. 'contin' → logprob: -1.676131010055542
    3. ' utiliser' → logprob: -3.551131010055542
    4. ' explorer' → logprob: -4.676131248474121
    5. 'import' → logprob: -4.801131248474121
    6. ' privilég' → logprob: -4.801131248474121
    7. '#' → logprob: -6.176131248474121
    8. ' chercher' → logprob: -6.551131248474121
    9. '```' → logprob: -6.801131248474121
    10. ' limiter' → logprob: -6.801131248474121

Token 373: '.
' (ID: 558)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.37634673714637756
    2. '#' → logprob: -2.3763468265533447
    3. ':' → logprob: -3.1263468265533447
    4. '<|end|>' → logprob: -3.3763468265533447
    5. 'import' → logprob: -3.6263468265533447
    6. '_' → logprob: -3.8763468265533447
    7. ',' → logprob: -3.8763468265533447
    8. '.' → logprob: -4.001346588134766
    9. 'for' → logprob: -4.376346588134766
    10. ')' → logprob: -4.876346588134766

Token 374: '#
' (ID: 11240)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.25672781467437744
    2. '#' → logprob: -3.006727695465088
    3. '
' → logprob: -3.006727695465088
    4. 'import' → logprob: -3.006727695465088
    5. '```' → logprob: -3.506727695465088
    6. '[' → logprob: -4.506727695465088
    7. '\' → logprob: -5.381727695465088
    8. 'n' → logprob: -5.506727695465088
    9. ' 
' → logprob: -5.506727695465088
    10. ')' → logprob: -5.506727695465088

Token 375: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.001875086221843958
    2. 'class' → logprob: -6.876874923706055
    3. 'import' → logprob: -8.251874923706055
    4. 's' → logprob: -8.501874923706055
    5. '#' → logprob: -8.626874923706055
    6. '```' → logprob: -8.876874923706055
    7. 'k' → logprob: -10.876874923706055
    8. 'n' → logprob: -11.251874923706055
    9. ' 
' → logprob: -11.376874923706055
    10. '
' → logprob: -12.376874923706055

Token 376: ' Str' (ID: 5641)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0016170962480828166
    2. '#' → logprob: -7.501616954803467
    3. 'class' → logprob: -7.501616954803467
    4. 'import' → logprob: -8.626617431640625
    5. 's' → logprob: -8.751617431640625
    6. 'from' → logprob: -9.501617431640625
    7. '
' → logprob: -10.126617431640625
    8. 'n' → logprob: -10.501617431640625
    9. '```' → logprob: -11.126617431640625
    10. ' 
' → logprob: -12.501617431640625

Token 377: 'atég' (ID: 25440)
  Prédit: 'ategy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ategy' → logprob: -0.9232245683670044
    2. 'uct' → logprob: -1.0482245683670044
    3. 'atég' → logprob: -2.923224449157715
    4. 'ict' → logprob: -2.923224449157715
    5. 'def' → logprob: -3.298224449157715
    6. 'ing' → logprob: -3.423224449157715
    7. '#' → logprob: -3.548224449157715
    8. 'ateg' → logprob: -3.673224449157715
    9. 'import' → logprob: -4.548224449157715
    10. 'eam' → logprob: -6.173224449157715

Token 378: 'ie' (ID: 396)
  Prédit: 'eg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eg' → logprob: -0.6100293397903442
    2. 'ie' → logprob: -1.2350293397903442
    3. 'ies' → logprob: -3.3600292205810547
    4. 'egy' → logprob: -3.4850292205810547
    5. 'atég' → logprob: -3.6100292205810547
    6. 'ég' → logprob: -3.8600292205810547
    7. 'at' → logprob: -4.110029220581055
    8. 'é' → logprob: -4.735029220581055
    9. 'ategy' → logprob: -4.860029220581055
    10. 'e' → logprob: -4.860029220581055

Token 379: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5310421586036682
    2. ':
' → logprob: -0.9060421586036682
    3. ':

' → logprob: -6.156042098999023
    4. '#' → logprob: -6.531042098999023
    5. ' =' → logprob: -6.656042098999023
    6. '=' → logprob: -6.781042098999023
    7. ' :' → logprob: -6.906042098999023
    8. ' :
' → logprob: -7.656042098999023
    9. 'def' → logprob: -8.281042098999023
    10. 'import' → logprob: -10.031042098999023

Token 380: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.15436075627803802
    2. 'def' → logprob: -2.029360771179199
    3. 'import' → logprob: -4.779360771179199
    4. 'from' → logprob: -6.404360771179199
    5. ' #' → logprob: -7.404360771179199
    6. 'On' → logprob: -8.5293607711792
    7. 's' → logprob: -9.2793607711792
    8. '#
' → logprob: -9.2793607711792
    9. ' 
' → logprob: -9.4043607711792
    10. 'class' → logprob: -9.5293607711792

Token 381: ' -' (ID: 533)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.09621293842792511
    2. '#' → logprob: -2.596212863922119
    3. 'import' → logprob: -4.596212863922119
    4. 'from' → logprob: -5.596212863922119
    5. ' def' → logprob: -6.471212863922119
    6. ' #' → logprob: -7.221212863922119
    7. 's' → logprob: -7.971212863922119
    8. ' 
' → logprob: -8.721213340759277
    9. ' import' → logprob: -8.971213340759277
    10. 'n' → logprob: -9.721213340759277

Token 382: ' Parc' (ID: 68618)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.657749593257904
    2. 'def' → logprob: -0.907749593257904
    3. '#' → logprob: -3.157749652862549
    4. 'import' → logprob: -3.407749652862549
    5. ' from' → logprob: -7.157749652862549
    6. ' def' → logprob: -7.282749652862549
    7. 'positions' → logprob: -7.282749652862549
    8. ' import' → logprob: -8.53274917602539
    9. ' positions' → logprob: -9.40774917602539
    10. 'class' → logprob: -9.40774917602539

Token 383: 'our' (ID: 401)
  Prédit: 'our'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'our' → logprob: -0.31359735131263733
    2. 'ours' → logprob: -1.563597321510315
    3. 'er' → logprob: -3.8135974407196045
    4. 'e' → logprob: -4.688597202301025
    5. 'o' → logprob: -4.938597202301025
    6. 'ourt' → logprob: -4.938597202301025
    7. 'or' → logprob: -5.563597202301025
    8. 'ial' → logprob: -6.688597202301025
    9. 'eur' → logprob: -7.188597202301025
    10. 'orer' → logprob: -7.313597202301025

Token 384: 'ir' (ID: 380)
  Prédit: 'our'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'our' → logprob: -0.04111303389072418
    2. 'er' → logprob: -3.7911131381988525
    3. 'ours' → logprob: -4.416112899780273
    4. 'ir' → logprob: -5.916112899780273
    5. 'u' → logprob: -6.791112899780273
    6. '#' → logprob: -7.666112899780273
    7. 'e' → logprob: -7.791112899780273
    8. 'ur' → logprob: -8.666112899780273
    9. 'r' → logprob: -9.291112899780273
    10. 'court' → logprob: -9.541112899780273

Token 385: ' tous' (ID: 10688)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.7348148226737976
    2. ' les' → logprob: -1.3598148822784424
    3. 'la' → logprob: -2.9848148822784424
    4. 'le' → logprob: -3.2348148822784424
    5. ' la' → logprob: -3.4848148822784424
    6. 'sys' → logprob: -3.7348148822784424
    7. 'all' → logprob: -3.8598148822784424
    8. ' sys' → logprob: -3.9848148822784424
    9. 'range' → logprob: -4.109814643859863
    10. 't' → logprob: -4.359814643859863

Token 386: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.3999479115009308
    2. ' les' → logprob: -1.3999478816986084
    3. 'i' → logprob: -3.6499478816986084
    4. 'positions' → logprob: -3.8999478816986084
    5. ' i' → logprob: -4.8999481201171875
    6. ' voisins' → logprob: -5.1499481201171875
    7. 'le' → logprob: -5.3999481201171875
    8. 'la' → logprob: -5.5249481201171875
    9. 'pos' → logprob: -5.6499481201171875
    10. 'neighbors' → logprob: -6.0249481201171875

Token 387: ' somm' (ID: 44830)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.7336306571960449
    2. 'nodes' → logprob: -1.358630657196045
    3. 'i' → logprob: -1.858630657196045
    4. 'pos' → logprob: -3.483630657196045
    5. ' nodes' → logprob: -3.608630657196045
    6. 'points' → logprob: -4.358630657196045
    7. 'c' → logprob: -4.733630657196045
    8. 'n' → logprob: -4.858630657196045
    9. ' positions' → logprob: -4.983630657196045
    10. 'vertices' → logprob: -5.608630657196045

Token 388: 'ets' (ID: 1719)
  Prédit: 'ets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ets' → logprob: -0.3816634714603424
    2. 'è' → logprob: -2.5066635608673096
    3. 'ètres' → logprob: -2.5066635608673096
    4. 'es' → logprob: -3.0066635608673096
    5. 'êts' → logprob: -3.2566635608673096
    6. 'ètes' → logprob: -3.2566635608673096
    7. 'iers' → logprob: -5.1316633224487305
    8. 'ès' → logprob: -5.7566633224487305
    9. 'et' → logprob: -6.0066633224487305
    10. 'êtres' → logprob: -6.1316633224487305

Token 389: ' comme' (ID: 7971)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3614048957824707
    2. ' for' → logprob: -1.6114048957824707
    3. ',' → logprob: -2.3614048957824707
    4. ':' → logprob: -5.861404895782471
    5. ' en' → logprob: -6.736404895782471
    6. ' in' → logprob: -7.236404895782471
    7. ' =' → logprob: -7.611404895782471
    8. ' ' → logprob: -7.736404895782471
    9. '.' → logprob: -8.111404418945312
    10. '_for' → logprob: -8.111404418945312

Token 390: ' points' (ID: 5571)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'point' → logprob: -0.3427540957927704
    2. 'points' → logprob: -1.8427541255950928
    3. ' point' → logprob: -2.2177541255950928
    4. ' points' → logprob: -3.9677541255950928
    5. 'dé' → logprob: -6.342753887176514
    6. 'd' → logprob: -7.217753887176514
    7. 'depart' → logprob: -7.967753887176514
    8. 'le' → logprob: -8.092754364013672
    9. ' départ' → logprob: -8.342754364013672
    10. 's' → logprob: -8.967754364013672

Token 391: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.7048695683479309
    2. 'de' → logprob: -0.8298695683479309
    3. 'for' → logprob: -2.704869508743286
    4. ' for' → logprob: -7.079869747161865
    5. '_de' → logprob: -7.204869747161865
    6. 'd' → logprob: -7.954869747161865
    7. 's' → logprob: -8.454869270324707
    8. 'à' → logprob: -9.204869270324707
    9. ' à' → logprob: -9.579869270324707
    10. ',' → logprob: -9.579869270324707

Token 392: ' départ' (ID: 32693)
  Prédit: 'dé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dé' → logprob: -0.003692120546475053
    2. 'depart' → logprob: -6.253692150115967
    3. 'vue' → logprob: -7.128692150115967
    4. 'd' → logprob: -7.378692150115967
    5. ' départ' → logprob: -8.128691673278809
    6. 'part' → logprob: -11.253691673278809
    7. 'entrée' → logprob: -12.253691673278809
    8. 'start' → logprob: -12.253691673278809
    9. 'departure' → logprob: -12.503691673278809
    10. '
' → logprob: -12.503691673278809

Token 393: '.
' (ID: 558)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10600879788398743
    2. ',' → logprob: -2.856008768081665
    3. ' for' → logprob: -3.731008768081665
    4. ',
' → logprob: -4.231009006500244
    5. ':' → logprob: -6.356009006500244
    6. ':
' → logprob: -6.856009006500244
    7. ' pour' → logprob: -7.231009006500244
    8. 'pour' → logprob: -7.356009006500244
    9. '.' → logprob: -8.731008529663086
    10. ' ,' → logprob: -10.481008529663086

Token 394: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2845587134361267
    2. ' for' → logprob: -1.4095587730407715
    3. 'def' → logprob: -6.2845587730407715
    4. ':' → logprob: -7.4095587730407715
    5. '```' → logprob: -8.034558296203613
    6. ' def' → logprob: -8.909558296203613
    7. ' 
' → logprob: -9.784558296203613
    8. '#' → logprob: -9.784558296203613
    9. ' ' → logprob: -9.909558296203613
    10. ':
' → logprob: -10.159558296203613

Token 395: ' -' (ID: 533)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.20572692155838013
    2. ' for' → logprob: -1.9557268619537354
    3. 'def' → logprob: -3.5807268619537354
    4. 'visited' → logprob: -4.3307271003723145
    5. ' visited' → logprob: -6.2057271003723145
    6. ' def' → logprob: -7.2057271003723145
    7. 'queue' → logprob: -7.7057271003723145
    8. ' queue' → logprob: -9.455726623535156
    9. '#' → logprob: -9.705726623535156
    10. 'stack' → logprob: -10.455726623535156

Token 396: ' Util' (ID: 13564)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6472224593162537
    2. ' for' → logprob: -0.7722224593162537
    3. ' queue' → logprob: -5.522222518920898
    4. ' visited' → logprob: -5.647222518920898
    5. 'queue' → logprob: -5.897222518920898
    6. 'visited' → logprob: -5.897222518920898
    7. 'from' → logprob: -7.647222518920898
    8. 'def' → logprob: -8.022222518920898
    9. ' stack' → logprob: -9.147222518920898
    10. ' def' → logprob: -9.147222518920898

Token 397: 'iser' (ID: 7466)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.05740395933389664
    2. 'ate' → logprob: -3.432404041290283
    3. 'ize' → logprob: -4.682404041290283
    4. 'iser' → logprob: -5.307404041290283
    5. 't' → logprob: -5.432404041290283
    6. 'ze' → logprob: -6.432404041290283
    7. 'isez' → logprob: -6.682404041290283
    8. 'def' → logprob: -7.682404041290283
    9. 'itize' → logprob: -8.557403564453125
    10. 'ser' → logprob: -8.557403564453125

Token 398: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.33607450127601624
    2. ' deque' → logprob: -2.7110745906829834
    3. ' un' → logprob: -2.9610745906829834
    4. 'une' → logprob: -3.0860745906829834
    5. ' bfs' → logprob: -3.0860745906829834
    6. 'deque' → logprob: -3.5860745906829834
    7. 'B' → logprob: -4.086074352264404
    8. 'b' → logprob: -4.336074352264404
    9. ' BFS' → logprob: -4.836074352264404
    10. 'un' → logprob: -5.586074352264404

Token 399: ' BFS' (ID: 190016)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.07420722395181656
    2. 'from' → logprob: -2.824207305908203
    3. 'queue' → logprob: -4.574207305908203
    4. 'b' → logprob: -7.074207305908203
    5. 'heap' → logprob: -7.324207305908203
    6. 'import' → logprob: -9.324207305908203
    7. 'for' → logprob: -9.449207305908203
    8. ' deque' → logprob: -9.699207305908203
    9. 'def' → logprob: -10.449207305908203
    10. '```' → logprob: -10.449207305908203

Token 400: ' pour' (ID: 1930)
  Prédit: '(queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(queue' → logprob: -0.8841439485549927
    2. 'from' → logprob: -1.8841439485549927
    3. ' (' → logprob: -2.134143829345703
    4. '(' → logprob: -2.634143829345703
    5. 'for' → logprob: -3.009143829345703
    6. ' pour' → logprob: -3.509143829345703
    7. 'deque' → logprob: -4.009143829345703
    8. 'de' → logprob: -4.009143829345703
    9. 'queue' → logprob: -4.509143829345703
    10. ',' → logprob: -4.509143829345703

Token 401: ' génér' (ID: 18939)
  Prédit: ' explorer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' explorer' → logprob: -0.761763870716095
    2. ' trouver' → logprob: -0.886763870716095
    3. ' sélectionner' → logprob: -3.51176381111145
    4. 'expl' → logprob: -3.88676381111145
    5. 'expand' → logprob: -4.511764049530029
    6. ' chaque' → logprob: -4.636764049530029
    7. ' queue' → logprob: -5.261764049530029
    8. ' continuer' → logprob: -5.261764049530029
    9. ' génér' → logprob: -5.636764049530029
    10. ' find' → logprob: -5.761764049530029

Token 402: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.006177752278745174
    2. 'érer' → logprob: -5.38117790222168
    3. 'rer' → logprob: -6.63117790222168
    4. 'ate' → logprob: -9.88117790222168
    5. 'ér' → logprob: -9.88117790222168
    6. 'iter' → logprob: -10.50617790222168
    7. 'ner' → logprob: -10.50617790222168
    8. 'uer' → logprob: -11.63117790222168
    9. 'éer' → logprob: -11.63117790222168
    10. 'errer' → logprob: -12.38117790222168

Token 403: ' tous' (ID: 10688)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.07421363890171051
    2. ' les' → logprob: -3.949213743209839
    3. ' une' → logprob: -4.32421350479126
    4. ' un' → logprob: -4.69921350479126
    5. ' progressivement' → logprob: -4.69921350479126
    6. ' toutes' → logprob: -4.94921350479126
    7. ' tous' → logprob: -5.57421350479126
    8. 'des' → logprob: -5.57421350479126
    9. ' la' → logprob: -6.69921350479126
    10. ' le' → logprob: -7.32421350479126

Token 404: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.09679225087165833
    2. ' des' → logprob: -2.471792221069336
    3. ' possible' → logprob: -5.596792221069336
    4. 'les' → logprob: -6.721792221069336
    5. 'possible' → logprob: -7.346792221069336
    6. ' ' → logprob: -7.346792221069336
    7. ' subsets' → logprob: -8.346792221069336
    8. ' possibles' → logprob: -8.471792221069336
    9. '```' → logprob: -8.846792221069336
    10. '_' → logprob: -8.971792221069336

Token 405: ' ensembles' (ID: 144172)
  Prédit: ' sous'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sous' → logprob: -0.6251726746559143
    2. ' subsets' → logprob: -1.6251726150512695
    3. 's' → logprob: -2.6251726150512695
    4. ' voisins' → logprob: -2.7501726150512695
    5. ' ensembles' → logprob: -2.8751726150512695
    6. ' somm' → logprob: -4.2501726150512695
    7. ' connected' → logprob: -4.5001726150512695
    8. 'sub' → logprob: -4.5001726150512695
    9. ' k' → logprob: -5.0001726150512695
    10. ' voisin' → logprob: -5.8751726150512695

Token 406: ' connex' (ID: 154480)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.1552741527557373
    2. 'de' → logprob: -2.5302741527557373
    3. ' possibles' → logprob: -4.155274391174316
    4. 'conn' → logprob: -4.905274391174316
    5. '_' → logprob: -5.030274391174316
    6. '_connected' → logprob: -5.030274391174316
    7. 's' → logprob: -5.155274391174316
    8. '_conn' → logprob: -6.030274391174316
    9. 'connected' → logprob: -6.155274391174316
    10. ' connected' → logprob: -6.155274391174316

Token 407: 'es' (ID: 268)
  Prédit: 'és'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.7393703460693359
    2. 'es' → logprob: -0.8643703460693359
    3. 'ects' → logprob: -2.989370346069336
    4. 'ets' → logprob: -3.739370346069336
    5. 'ect' → logprob: -4.239370346069336
    6. 'ected' → logprob: -5.614370346069336
    7. 'ifs' → logprob: -6.364370346069336
    8. 'eux' → logprob: -6.739370346069336
    9. 'é' → logprob: -6.864370346069336
    10. 'ions' → logprob: -6.989370346069336

Token 408: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.39581310749053955
    2. ' possibles' → logprob: -2.14581298828125
    3. 'de' → logprob: -2.77081298828125
    4. '_' → logprob: -2.77081298828125
    5. ',' → logprob: -3.89581298828125
    6. ' possible' → logprob: -4.64581298828125
    7. '_possible' → logprob: -5.02081298828125
    8. ' adj' → logprob: -5.27081298828125
    9. 'conn' → logprob: -5.52081298828125
    10. ' voisins' → logprob: -5.64581298828125

Token 409: ' taille' (ID: 41644)
  Prédit: ' taille'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' taille' → logprob: -0.12664750218391418
    2. 'tail' → logprob: -2.626647472381592
    3. ' k' → logprob: -4.126647472381592
    4. 'k' → logprob: -4.251647472381592
    5. ' size' → logprob: -4.751647472381592
    6. 'size' → logprob: -5.626647472381592
    7. ' tailles' → logprob: -6.126647472381592
    8. ' ' → logprob: -6.876647472381592
    9. ' tail' → logprob: -9.12664794921875
    10. ' la' → logprob: -9.37664794921875

Token 410: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.2407086044549942
    2. '1' → logprob: -2.490708589553833
    3. ' ' → logprob: -2.740708589553833
    4. 'k' → logprob: -2.740708589553833
    5. ' i' → logprob: -8.115708351135254
    6. ' up' → logprob: -8.365708351135254
    7. 'exact' → logprob: -8.490708351135254
    8. 's' → logprob: -8.865708351135254
    9. ' possible' → logprob: -8.990708351135254
    10. '```' → logprob: -8.990708351135254

Token 411: ' à' (ID: 1221)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.6658443212509155
    2. '(' → logprob: -1.9158443212509155
    3. ' (' → logprob: -2.165844440460205
    4. 'def' → logprob: -2.165844440460205
    5. '.' → logprob: -2.415844440460205
    6. ':' → logprob: -3.040844440460205
    7. 's' → logprob: -3.415844440460205
    8. '(queue' → logprob: -3.415844440460205
    9. '(
' → logprob: -3.540844440460205
    10. '(s' → logprob: -3.790844440460205

Token 412: ' partir' (ID: 12100)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.05855812504887581
    2. ' partir' → logprob: -3.058558225631714
    3. 'sé' → logprob: -5.933557987213135
    4. 'aj' → logprob: -6.183557987213135
    5. 'expl' → logprob: -6.683557987213135
    6. ' part' → logprob: -7.183557987213135
    7. ' explorer' → logprob: -7.433557987213135
    8. 'grand' → logprob: -8.558558464050293
    9. ' sélectionner' → logprob: -8.683558464050293
    10. ' chaque' → logprob: -8.933558464050293

Token 413: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.4188816249370575
    2. ' chaque' → logprob: -1.4188816547393799
    3. 'de' → logprob: -3.16888165473938
    4. ' ce' → logprob: -3.79388165473938
    5. ' le' → logprob: -4.793881416320801
    6. ' d' → logprob: -5.418881416320801
    7. ' chacun' → logprob: -5.418881416320801
    8. ' du' → logprob: -5.418881416320801
    9. ' des' → logprob: -5.793881416320801
    10. ' each' → logprob: -6.293881416320801

Token 414: ' ce' (ID: 2357)
  Prédit: ' chaque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.07548011094331741
    2. ' ce' → logprob: -3.2004802227020264
    3. ' chacun' → logprob: -3.9504802227020264
    4. 'ch' → logprob: -5.700479984283447
    5. ' each' → logprob: -5.950479984283447
    6. 'l' → logprob: -6.825479984283447
    7. ' cet' → logprob: -7.200479984283447
    8. 'cha' → logprob: -7.450479984283447
    9. ' chac' → logprob: -7.450479984283447
    10. ' la' → logprob: -7.575479984283447

Token 415: ' sommet' (ID: 130502)
  Prédit: ' point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' point' → logprob: -0.00848869513720274
    2. 'u' → logprob: -6.258488655090332
    3. ' ' → logprob: -6.508488655090332
    4. 'point' → logprob: -6.883488655090332
    5. ' position' → logprob: -7.508488655090332
    6. 's' → logprob: -7.883488655090332
    7. ' token' → logprob: -7.883488655090332
    8. ' points' → logprob: -8.133488655090332
    9. ' sommet' → logprob: -8.133488655090332
    10. ' ' → logprob: -8.258488655090332

Token 416: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8225148916244507
    2. 'def' → logprob: -1.8225148916244507
    3. '.' → logprob: -1.9475148916244507
    4. ',' → logprob: -2.0725150108337402
    5. '(' → logprob: -3.5725150108337402
    6. '(
' → logprob: -4.19751501083374
    7. ':
' → logprob: -4.19751501083374
    8. 's' → logprob: -4.32251501083374
    9. ',
' → logprob: -4.44751501083374
    10. '
' → logprob: -5.32251501083374

Token 417: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.058792054653167725
    2. '(
' → logprob: -4.0587921142578125
    3. ':' → logprob: -4.5587921142578125
    4. '#' → logprob: -4.8087921142578125
    5. ':
' → logprob: -4.8087921142578125
    6. '```' → logprob: -5.4337921142578125
    7. '
' → logprob: -5.9337921142578125
    8. '(' → logprob: -6.1837921142578125
    9. 'visited' → logprob: -6.9337921142578125
    10. ')' → logprob: -7.6837921142578125

Token 418: '  ' (ID: 256)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.11466524749994278
    2. ':' → logprob: -3.2396652698516846
    3. 'visited' → logprob: -3.8646652698516846
    4. '(
' → logprob: -4.3646650314331055
    5. '(' → logprob: -5.1146650314331055
    6. 'for' → logprob: -5.1146650314331055
    7. '#' → logprob: -5.1146650314331055
    8. 'from' → logprob: -6.1146650314331055
    9. '
' → logprob: -6.1146650314331055
    10. ')' → logprob: -6.3646650314331055

Token 419: ' -' (ID: 533)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.0737608671188354
    2. ':' → logprob: -1.3237608671188354
    3. '#' → logprob: -1.9487608671188354
    4. '   ' → logprob: -2.698760986328125
    5. ')' → logprob: -2.948760986328125
    6. 'for' → logprob: -3.448760986328125
    7. ',' → logprob: -3.573760986328125
    8. ' ' → logprob: -3.948760986328125
    9. 'visited' → logprob: -5.198760986328125
    10. 'from' → logprob: -5.448760986328125

Token 420: ' Comme' (ID: 53252)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.8707998991012573
    2. 'for' → logprob: -1.9957998991012573
    3. ' visited' → logprob: -2.245800018310547
    4. 'visited' → logprob: -2.620800018310547
    5. ' for' → logprob: -2.745800018310547
    6. ' queue' → logprob: -2.870800018310547
    7. ' from' → logprob: -2.870800018310547
    8. 'queue' → logprob: -3.120800018310547
    9. '#' → logprob: -4.620800018310547
    10. 'Pour' → logprob: -5.370800018310547

Token 421: ' le' (ID: 505)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -1.2223377227783203
    2. ' on' → logprob: -1.4723377227783203
    3. ' la' → logprob: -1.4723377227783203
    4. ' l' → logprob: -2.4723377227783203
    5. 'la' → logprob: -2.9723377227783203
    6. ' le' → logprob: -3.0973377227783203
    7. 'on' → logprob: -4.47233772277832
    8. 'le' → logprob: -4.72233772277832
    9. 'les' → logprob: -4.84733772277832
    10. ' il' → logprob: -5.22233772277832

Token 422: ' nombre' (ID: 9733)
  Prédit: ' code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' code' → logprob: -0.040232960134744644
    2. 's' → logprob: -4.915233135223389
    3. 'code' → logprob: -5.665233135223389
    4. '#' → logprob: -5.665233135223389
    5. ' next' → logprob: -5.790233135223389
    6. 'u' → logprob: -5.915233135223389
    7. ' ' → logprob: -6.165233135223389
    8. ' queue' → logprob: -6.165233135223389
    9. ' premier' → logprob: -6.540233135223389
    10. '```' → logprob: -6.665233135223389

Token 423: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.3869868814945221
    2. '_' → logprob: -1.6369868516921997
    3. ' d' → logprob: -3.1369869709014893
    4. ' ' → logprob: -3.5119869709014893
    5. ' _' → logprob: -3.8869869709014893
    6. ' des' → logprob: -4.51198673248291
    7. '_de' → logprob: -4.63698673248291
    8. ' s' → logprob: -6.01198673248291
    9. ' est' → logprob: -6.63698673248291
    10. ' ' → logprob: -7.01198673248291

Token 424: ' comb' (ID: 4134)
  Prédit: ' somm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' somm' → logprob: -1.0567888021469116
    2. ' voisins' → logprob: -1.4317888021469116
    3. 'vo' → logprob: -2.306788921356201
    4. 'positions' → logprob: -2.806788921356201
    5. 'c' → logprob: -3.056788921356201
    6. ' tokens' → logprob: -3.181788921356201
    7. ' cubes' → logprob: -3.681788921356201
    8. 'tokens' → logprob: -3.681788921356201
    9. ' positions' → logprob: -3.806788921356201
    10. 's' → logprob: -4.056788921356201

Token 425: 'inais' (ID: 42744)
  Prédit: 'ina'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ina' → logprob: -0.7368829250335693
    2. 'ination' → logprob: -1.7368829250335693
    3. 'inais' → logprob: -2.6118829250335693
    4. '_' → logprob: -2.8618829250335693
    5. 'in' → logprob: -2.8618829250335693
    6. 'i' → logprob: -2.9868829250335693
    7. 'iné' → logprob: -3.1118829250335693
    8. 'inations' → logprob: -3.6118829250335693
    9. '#' → logprob: -4.736883163452148
    10. ')' → logprob: -5.236883163452148

Token 426: 'ons' (ID: 1808)
  Prédit: 'ons'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ons' → logprob: -0.09136271476745605
    2. 'ts' → logprob: -2.966362714767456
    3. 't' → logprob: -3.591362714767456
    4. 'ets' → logprob: -6.091362953186035
    5. 'és' → logprob: -6.216362953186035
    6. 'sons' → logprob: -6.591362953186035
    7. 'ètes' → logprob: -7.966362953186035
    8. '#' → logprob: -7.966362953186035
    9. 'étés' → logprob: -8.466362953186035
    10. 'nts' → logprob: -8.466362953186035

Token 427: ' serait' (ID: 35762)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.22300457954406738
    2. ' de' → logprob: -2.4730045795440674
    3. '_' → logprob: -3.2230045795440674
    4. ' s' → logprob: -3.4730045795440674
    5. ' is' → logprob: -4.473004341125488
    6. ' ' → logprob: -5.098004341125488
    7. ' _' → logprob: -5.473004341125488
    8. 's' → logprob: -5.598004341125488
    9. ' possible' → logprob: -5.973004341125488
    10. ' limité' → logprob: -5.973004341125488

Token 428: ' prohib' (ID: 24748)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.7915727496147156
    2. ' trop' → logprob: -1.9165728092193604
    3. 't' → logprob: -2.1665728092193604
    4. 'expl' → logprob: -2.6665728092193604
    5. 'astr' → logprob: -3.0415728092193604
    6. ' énorme' → logprob: -3.5415728092193604
    7. ' exponent' → logprob: -3.7915728092193604
    8. 'tr' → logprob: -4.166572570800781
    9. ' prohib' → logprob: -4.166572570800781
    10. 'én' → logprob: -4.166572570800781

Token 429: 'itif' (ID: 94904)
  Prédit: 'lé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lé' → logprob: -0.9787664413452148
    2. 'ité' → logprob: -1.6037664413452148
    3. 'é' → logprob: -2.103766441345215
    4. 'itif' → logprob: -2.603766441345215
    5. 'it' → logprob: -2.853766441345215
    6. 'itive' → logprob: -3.728766441345215
    7. 'ib' → logprob: -3.853766441345215
    8. 'limit' → logprob: -4.103766441345215
    9. '_' → logprob: -4.228766441345215
    10. 'lig' → logprob: -4.603766441345215

Token 430: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0843241885304451
    2. ' ,' → logprob: -2.9593241214752197
    3. ' de' → logprob: -3.7093241214752197
    4. ' d' → logprob: -6.084324359893799
    5. ' ' → logprob: -7.834324359893799
    6. 'de' → logprob: -7.959324359893799
    7. ' dans' → logprob: -8.08432388305664
    8. ' ' → logprob: -8.95932388305664
    9. '_' → logprob: -9.20932388305664
    10. ' )' → logprob: -9.20932388305664

Token 431: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.19486239552497864
    2. ' continuer' → logprob: -1.8198623657226562
    3. ' #' → logprob: -5.944862365722656
    4. ' utiliser' → logprob: -6.069862365722656
    5. ' nous' → logprob: -6.444862365722656
    6. ' ' → logprob: -6.569862365722656
    7. '#' → logprob: -6.694862365722656
    8. 'on' → logprob: -6.944862365722656
    9. ' essayer' → logprob: -7.319862365722656
    10. ' il' → logprob: -7.444862365722656

Token 432: ' utilis' (ID: 18688)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.1499304324388504
    2. ' peut' → logprob: -3.774930477142334
    3. ' continuer' → logprob: -3.899930477142334
    4. ' peux' → logprob: -4.274930477142334
    5. ' continues' → logprob: -4.399930477142334
    6. ' can' → logprob: -4.524930477142334
    7. ' pourra' → logprob: -4.649930477142334
    8. ' continu' → logprob: -4.649930477142334
    9. ' n' → logprob: -5.149930477142334
    10. ' iter' → logprob: -5.649930477142334

Token 433: 'era' (ID: 2060)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.5847566723823547
    2. 'er' → logprob: -0.8347566723823547
    3. 't' → logprob: -5.209756851196289
    4. 'era' → logprob: -6.334756851196289
    5. 'ent' → logprob: -6.959756851196289
    6. 'et' → logprob: -8.709756851196289
    7. 'te' → logprob: -8.959756851196289
    8. 'é' → logprob: -9.084756851196289
    9. '#' → logprob: -9.959756851196289
    10. 'erez' → logprob: -10.834756851196289

Token 434: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.7593251466751099
    2. 'une' → logprob: -0.7593251466751099
    3. ' un' → logprob: -3.2593250274658203
    4. 'un' → logprob: -3.7593250274658203
    5. 'la' → logprob: -8.25932502746582
    6. ' uniquement' → logprob: -8.25932502746582
    7. 'l' → logprob: -8.63432502746582
    8. ' plutôt' → logprob: -8.63432502746582
    9. ''une' → logprob: -8.63432502746582
    10. '```' → logprob: -8.63432502746582

Token 435: ' recherche' (ID: 24975)
  Prédit: 'heur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heur' → logprob: -0.3183034658432007
    2. 'heap' → logprob: -1.8183034658432007
    3. 'deque' → logprob: -3.1933035850524902
    4. 'priority' → logprob: -3.6933035850524902
    5. 'pr' → logprob: -4.31830358505249
    6. 'queue' → logprob: -4.81830358505249
    7. ' heuristic' → logprob: -4.81830358505249
    8. ' heur' → logprob: -5.44330358505249
    9. 'b' → logprob: -5.81830358505249
    10. 'best' → logprob: -5.94330358505249

Token 436: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.8931357860565186
    2. 'en' → logprob: -1.8931357860565186
    3. ' par' → logprob: -2.3931357860565186
    4. 'limit' → logprob: -2.6431357860565186
    5. ' limitée' → logprob: -2.7681357860565186
    6. 'par' → logprob: -3.6431357860565186
    7. ' limité' → logprob: -4.143136024475098
    8. 'à' → logprob: -4.518136024475098
    9. ' de' → logprob: -4.518136024475098
    10. 'de' → logprob: -4.643136024475098

Token 437: '/' (ID: 14)
  Prédit: 'large'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'large' → logprob: -0.16841118037700653
    2. 'bread' → logprob: -2.6684112548828125
    3. 'width' → logprob: -3.4184112548828125
    4. 'b' → logprob: -4.1684112548828125
    5. 'pro' → logprob: -4.5434112548828125
    6. 'queue' → logprob: -5.1684112548828125
    7. ' largeur' → logprob: -5.2934112548828125
    8. ' breadth' → logprob: -5.5434112548828125
    9. 'depth' → logprob: -5.7934112548828125
    10. 'prof' → logprob: -5.9184112548828125

Token 438: 'à' (ID: 708)
  Prédit: 'pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pro' → logprob: -0.08423259109258652
    2. 'large' → logprob: -2.5842325687408447
    3. 'prof' → logprob: -5.334232807159424
    4. 'queue' → logprob: -9.209232330322266
    5. 'bread' → logprob: -9.209232330322266
    6. '```' → logprob: -9.834232330322266
    7. 'pr' → logprob: -10.084232330322266
    8. 'width' → logprob: -10.209232330322266
    9. '_pro' → logprob: -10.459232330322266
    10. ' largeur' → logprob: -10.459232330322266

Token 439: ' la' (ID: 557)
  Prédit: 'large'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'large' → logprob: -0.01860358752310276
    2. 'pro' → logprob: -4.018603801727295
    3. 'prof' → logprob: -8.268603324890137
    4. 'larg' → logprob: -9.893603324890137
    5. ' largeur' → logprob: -9.893603324890137
    6. '_large' → logprob: -10.393603324890137
    7. 'width' → logprob: -10.518603324890137
    8. 'bread' → logprob: -11.143603324890137
    9. 'Large' → logprob: -12.893603324890137
    10. 'b' → logprob: -12.893603324890137

Token 440: ' limite' (ID: 48939)
  Prédit: 'large'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'large' → logprob: -0.0027242754586040974
    2. 'pro' → logprob: -6.3777241706848145
    3. 'prof' → logprob: -7.8777241706848145
    4. 'larg' → logprob: -8.502724647521973
    5. 'bread' → logprob: -8.627724647521973
    6. ' largeur' → logprob: -8.877724647521973
    7. 'width' → logprob: -9.752724647521973
    8. 'b' → logprob: -10.877724647521973
    9. ' large' → logprob: -11.377724647521973
    10. '_large' → logprob: -11.502724647521973

Token 441: ' raisonn' (ID: 144705)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.3356651067733765
    2. ' du' → logprob: -1.8356651067733765
    3. ' de' → logprob: -2.210665225982666
    4. 'd' → logprob: -2.335665225982666
    5. 'de' → logprob: -2.335665225982666
    6. ' d' → logprob: -2.710665225982666
    7. 'du' → logprob: -3.085665225982666
    8. '-b' → logprob: -3.335665225982666
    9. '```' → logprob: -4.085665225982666
    10. ' limitée' → logprob: -4.085665225982666

Token 442: 'able' (ID: 562)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.05125590041279793
    2. ' de' → logprob: -4.176255702972412
    3. 'ite' → logprob: -4.426255702972412
    4. 'de' → logprob: -4.676255702972412
    5. ' e' → logprob: -6.301255702972412
    6. ' of' → logprob: -6.301255702972412
    7. ' d' → logprob: -6.551255702972412
    8. 'ité' → logprob: -6.676255702972412
    9. 'aire' → logprob: -6.926255702972412
    10. 'def' → logprob: -7.051255702972412

Token 443: ':
' (ID: 734)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.25719818472862244
    2. ' de' → logprob: -2.7571980953216553
    3. 'de' → logprob: -3.0071980953216553
    4. ' d' → logprob: -3.1321980953216553
    5. 'd' → logprob: -4.382198333740234
    6. ',' → logprob: -4.507198333740234
    7. 'es' → logprob: -5.757198333740234
    8. '_depth' → logprob: -6.007198333740234
    9. ' of' → logprob: -6.132198333740234
    10. ' des' → logprob: -6.194698333740234

Token 444: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.4524990320205688
    2. ' ' → logprob: -1.5774990320205688
    3. '   ' → logprob: -2.5774989128112793
    4. '_' → logprob: -2.5774989128112793
    5. ' (' → logprob: -2.8274989128112793
    6. 'for' → logprob: -3.3274989128112793
    7. ' #' → logprob: -3.5774989128112793
    8. ' for' → logprob: -3.7024989128112793
    9. '(' → logprob: -3.9524989128112793
    10. 'def' → logprob: -4.077498912811279

Token 445: '    ' (ID: 257)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6067109107971191
    2. 'def' → logprob: -1.4817109107971191
    3. ' #' → logprob: -2.856710910797119
    4. ' def' → logprob: -3.481710910797119
    5. 'from' → logprob: -3.481710910797119
    6. ' for' → logprob: -3.731710910797119
    7. ' queue' → logprob: -4.481710910797119
    8. 'for' → logprob: -4.731710910797119
    9. ' from' → logprob: -4.856710910797119
    10. ' max' → logprob: -4.856710910797119

Token 446: ' On' (ID: 2160)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0289852619171143
    2. 'max' → logprob: -1.5289852619171143
    3. ' max' → logprob: -1.6539852619171143
    4. ' #' → logprob: -3.0289852619171143
    5. 'for' → logprob: -3.2789852619171143
    6. 'limit' → logprob: -3.9039852619171143
    7. 'while' → logprob: -4.028985023498535
    8. ' while' → logprob: -4.153985023498535
    9. ' for' → logprob: -4.153985023498535
    10. ' limit' → logprob: -4.653985023498535

Token 447: ' gén' (ID: 15330)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.808819591999054
    2. ' continuer' → logprob: -2.933819532394409
    3. 'def' → logprob: -3.058819532394409
    4. '#' → logprob: -3.058819532394409
    5. 'continue' → logprob: -3.183819532394409
    6. ' continu' → logprob: -3.558819532394409
    7. ' peut' → logprob: -3.683819532394409
    8. ' n' → logprob: -3.683819532394409
    9. ' #' → logprob: -3.933819532394409
    10. 'limit' → logprob: -4.058819770812988

Token 448: 'ère' (ID: 4346)
  Prédit: 'ère'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ère' → logprob: -0.2385169416666031
    2. 'def' → logprob: -2.2385170459747314
    3. 'er' → logprob: -3.1135170459747314
    4. 'r' → logprob: -3.9885170459747314
    5. 'èr' → logprob: -4.488516807556152
    6. 'érer' → logprob: -5.113516807556152
    7. '```' → logprob: -5.488516807556152
    8. 'f' → logprob: -5.738516807556152
    9. 'ere' → logprob: -5.738516807556152
    10. 'for' → logprob: -6.863516807556152

Token 449: ' les' (ID: 1341)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.15338017046451569
    2. ' une' → logprob: -3.0283801555633545
    3. ' les' → logprob: -3.0283801555633545
    4. ' un' → logprob: -4.403380393981934
    5. ' la' → logprob: -5.278380393981934
    6. ' possible' → logprob: -5.528380393981934
    7. ' de' → logprob: -6.278380393981934
    8. ' ' → logprob: -6.278380393981934
    9. ' seulement' → logprob: -6.528380393981934
    10. ' uniquement' → logprob: -6.528380393981934

Token 450: ' connex' (ID: 154480)
  Prédit: ' premiers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' premiers' → logprob: -1.2116177082061768
    2. ' ensembles' → logprob: -1.3366177082061768
    3. ' voisins' → logprob: -1.7116177082061768
    4. ' k' → logprob: -3.2116177082061768
    5. 'sets' → logprob: -3.7116177082061768
    6. ' sets' → logprob: -3.7116177082061768
    7. ' next' → logprob: -3.9616177082061768
    8. ' subsets' → logprob: -4.211617469787598
    9. ' plus' → logprob: -4.336617469787598
    10. ' candidats' → logprob: -4.336617469787598

Token 451: 'ions' (ID: 756)
  Prédit: 'ions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ions' → logprob: -0.6407215595245361
    2. 'ections' → logprob: -1.1407215595245361
    3. 'ect' → logprob: -2.515721559524536
    4. 'es' → logprob: -3.265721559524536
    5. 'ected' → logprob: -4.515721321105957
    6. 'ects' → logprob: -4.765721321105957
    7. 'ex' → logprob: -5.140721321105957
    8. 'ctions' → logprob: -6.515721321105957
    9. 'ion' → logprob: -6.640721321105957
    10. '```' → logprob: -6.640721321105957

Token 452: ' par' (ID: 686)
  Prédit: ' possibles'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' possibles' → logprob: -0.3429221212863922
    2. 's' → logprob: -2.3429222106933594
    3. ' supplémentaires' → logprob: -3.3429222106933594
    4. ' possible' → logprob: -4.217922210693359
    5. ' à' → logprob: -4.592922210693359
    6. ' suivantes' → logprob: -4.592922210693359
    7. ',' → logprob: -4.842922210693359
    8. ' s' → logprob: -4.842922210693359
    9. 'exp' → logprob: -5.217922210693359
    10. ' entre' → logprob: -5.217922210693359

Token 453: ' niveaux' (ID: 88262)
  Prédit: 'niveau'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'niveau' → logprob: -1.525400161743164
    2. 'b' → logprob: -1.900400161743164
    3. 'B' → logprob: -2.775400161743164
    4. 'aj' → logprob: -3.025400161743164
    5. 'une' → logprob: -3.150400161743164
    6. ' BFS' → logprob: -3.150400161743164
    7. 'layers' → logprob: -3.150400161743164
    8. 'c' → logprob: -3.150400161743164
    9. ' niveau' → logprob: -3.400400161743164
    10. ' niveaux' → logprob: -3.775400161743164

Token 454: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.2031776905059814
    2. 'def' → logprob: -1.4531776905059814
    3. ' =' → logprob: -1.8281776905059814
    4. ':' → logprob: -2.9531776905059814
    5. '
' → logprob: -3.0781776905059814
    6. ',
' → logprob: -3.5781776905059814
    7. '#' → logprob: -3.7031776905059814
    8. 's' → logprob: -4.078177452087402
    9. 'de' → logprob: -4.078177452087402
    10. '.' → logprob: -4.203177452087402

Token 455: ' on' (ID: 402)
  Prédit: ' en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.18993861973285675
    2. 'en' → logprob: -2.439938545227051
    3. '#' → logprob: -2.814938545227051
    4. ' on' → logprob: -4.564938545227051
    5. ' et' → logprob: -5.314938545227051
    6. ' mais' → logprob: -5.939938545227051
    7. ' #' → logprob: -6.439938545227051
    8. 'on' → logprob: -6.689938545227051
    9. 'et' → logprob: -6.814938545227051
    10. 'mais' → logprob: -7.439938545227051

Token 456: ' sauveg' (ID: 133494)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.8741918802261353
    2. 'continue' → logprob: -0.8741918802261353
    3. 'expand' → logprob: -2.8741917610168457
    4. 'expl' → logprob: -2.9991917610168457
    5. ' ajoute' → logprob: -4.499191761016846
    6. 'limit' → logprob: -4.749191761016846
    7. 'contin' → logprob: -4.874191761016846
    8. ' explore' → logprob: -4.999191761016846
    9. 'aj' → logprob: -5.124191761016846
    10. ' limite' → logprob: -5.499191761016846

Token 457: 'arde' (ID: 11236)
  Prédit: 'arde'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arde' → logprob: -0.45378610491752625
    2. 'de' → logprob: -1.3287861347198486
    3. 'r' → logprob: -3.0787861347198486
    4. '#' → logprob: -4.2037858963012695
    5. 'rd' → logprob: -4.9537858963012695
    6. 'd' → logprob: -5.0787858963012695
    7. 'def' → logprob: -5.5787858963012695
    8. 'e' → logprob: -6.2037858963012695
    9. '_' → logprob: -6.2037858963012695
    10. '=' → logprob: -6.5787858963012695

Token 458: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.3238413333892822
    2. ' uniquement' → logprob: -2.3238413333892822
    3. 'les' → logprob: -3.0738413333892822
    4. ' des' → logprob: -3.0738413333892822
    5. ' l' → logprob: -3.8238413333892822
    6. ' seulement' → logprob: -4.323841094970703
    7. '_' → logprob: -4.948841094970703
    8. ' la' → logprob: -5.323841094970703
    9. 'des' → logprob: -5.448841094970703
    10. ' only' → logprob: -5.698841094970703

Token 459: ' ensembles' (ID: 144172)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -2.2694637775421143
    2. ' ensembles' → logprob: -2.2694637775421143
    3. 'me' → logprob: -2.5194637775421143
    4. 'sets' → logprob: -2.6444637775421143
    5. ' meilleurs' → logprob: -2.7694637775421143
    6. 'front' → logprob: -2.7694637775421143
    7. 'best' → logprob: -3.0194637775421143
    8. ' best' → logprob: -3.0194637775421143
    9. ' voisins' → logprob: -3.0194637775421143
    10. 'ense' → logprob: -3.2694637775421143

Token 460: ' ét' (ID: 4976)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.2328720092773438
    2. ',' → logprob: -1.9828720092773438
    3. 's' → logprob: -2.2328720092773438
    4. '_possible' → logprob: -2.3578720092773438
    5. '<|end|>' → logprob: -3.3578720092773438
    6. '_s' → logprob: -3.6078720092773438
    7. ' =' → logprob: -3.8578720092773438
    8. ' de' → logprob: -3.9828720092773438
    9. 'possible' → logprob: -3.9828720092773438
    10. '_selected' → logprob: -4.107872009277344

Token 461: 'endus' (ID: 93004)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.570868194103241
    2. 'endue' → logprob: -2.1958682537078857
    3. 'endus' → logprob: -2.4458682537078857
    4. 'endu' → logprob: -2.5708682537078857
    5. 'at' → logprob: -3.5708682537078857
    6. 'êt' → logprob: -3.9458682537078857
    7. 'ats' → logprob: -4.320868015289307
    8. 'anches' → logprob: -4.570868015289307
    9. '#' → logprob: -4.570868015289307
    10. '```' → logprob: -5.070868015289307

Token 462: '.
' (ID: 558)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5622685551643372
    2. 's' → logprob: -2.4372684955596924
    3. 'de' → logprob: -3.3122684955596924
    4. '_' → logprob: -3.4372684955596924
    5. ' ,' → logprob: -3.4372684955596924
    6. ' de' → logprob: -3.5622684955596924
    7. 'es' → logprob: -3.5622684955596924
    8. ' =' → logprob: -3.8122684955596924
    9. '.' → logprob: -4.0622687339782715
    10. '_possible' → logprob: -4.5622687339782715

Token 463: '#' (ID: 2)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.2389832735061646
    2. ')' → logprob: -1.8639832735061646
    3. '(' → logprob: -2.238983154296875
    4. '#' → logprob: -2.238983154296875
    5. 'def' → logprob: -2.488983154296875
    6. '[' → logprob: -2.613983154296875
    7. ',' → logprob: -3.238983154296875
    8. '   ' → logprob: -3.613983154296875
    9. ' ' → logprob: -3.863983154296875
    10. ']' → logprob: -4.363983154296875

Token 464: '    ' (ID: 257)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.969464123249054
    2. '_' → logprob: -2.094464063644409
    3. ')' → logprob: -2.219464063644409
    4. '[' → logprob: -2.594464063644409
    5. 'def' → logprob: -2.594464063644409
    6. ',' → logprob: -2.719464063644409
    7. '(' → logprob: -2.969464063644409
    8. ']' → logprob: -3.594464063644409
    9. ' ' → logprob: -4.219464302062988
    10. 'for' → logprob: -4.594464302062988

Token 465: ' Pour' (ID: 13931)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.30822819471359253
    2. 'visited' → logprob: -2.4332282543182373
    3. 'from' → logprob: -2.8082282543182373
    4. 'for' → logprob: -3.5582282543182373
    5. 'max' → logprob: -3.5582282543182373
    6. ' #' → logprob: -3.9332282543182373
    7. ' visited' → logprob: -4.933228015899658
    8. ' for' → logprob: -5.058228015899658
    9. 'def' → logprob: -5.183228015899658
    10. ' max' → logprob: -5.308228015899658

Token 466: ' le' (ID: 505)
  Prédit: ' chaque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.02365642413496971
    2. ' ' → logprob: -5.023656368255615
    3. ' _' → logprob: -5.398656368255615
    4. ' each' → logprob: -5.523656368255615
    5. 'each' → logprob: -5.773656368255615
    6. 'ch' → logprob: -6.898656368255615
    7. ' ch' → logprob: -7.023656368255615
    8. ' l' → logprob: -7.648656368255615
    9. ' token' → logprob: -7.773656368255615
    10. 'token' → logprob: -8.398656845092773

Token 467: ' plus' (ID: 2932)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.8665487766265869
    2. ' next' → logprob: -1.491548776626587
    3. '_' → logprob: -2.991548776626587
    4. ' code' → logprob: -3.116548776626587
    5. ' prochain' → logprob: -3.241548776626587
    6. 'niveau' → logprob: -3.616548776626587
    7. ' premier' → logprob: -3.866548776626587
    8. 'next' → logprob: -4.116548538208008
    9. ' niveau' → logprob: -4.116548538208008
    10. ' s' → logprob: -4.491548538208008

Token 468: ' grand' (ID: 6363)
  Prédit: 'pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pro' → logprob: -0.1955273151397705
    2. 'import' → logprob: -2.3205273151397705
    3. '```' → logprob: -3.1955273151397705
    4. 's' → logprob: -5.070527076721191
    5. '-pro' → logprob: -5.195527076721191
    6. ' proche' → logprob: -5.695527076721191
    7. 'important' → logprob: -6.070527076721191
    8. '_pro' → logprob: -6.070527076721191
    9. 'prox' → logprob: -6.070527076721191
    10. 'possible' → logprob: -6.570527076721191

Token 469: ' k' (ID: 372)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.7804979085922241
    2. 'ensemble' → logprob: -1.9054979085922241
    3. ' nombre' → logprob: -2.0304980278015137
    4. 's' → logprob: -2.2804980278015137
    5. 'n' → logprob: -3.4054980278015137
    6. 'niveau' → logprob: -4.030498027801514
    7. 'é' → logprob: -4.405498027801514
    8. ' ensemble' → logprob: -4.405498027801514
    9. 'k' → logprob: -4.780498027801514
    10. 'c' → logprob: -4.780498027801514

Token 470: ' (' (ID: 350)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8725923895835876
    2. ',' → logprob: -1.3725924491882324
    3. ' possible' → logprob: -2.2475924491882324
    4. ' =' → logprob: -3.1225924491882324
    5. 'possible' → logprob: -3.3725924491882324
    6. ')' → logprob: -3.4975924491882324
    7. '_possible' → logprob: -3.6225924491882324
    8. '<|end|>' → logprob: -3.9975924491882324
    9. ' ' → logprob: -4.622592449188232
    10. 'k' → logprob: -4.747592449188232

Token 471: '200' (ID: 1179)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7881832718849182
    2. ' =' → logprob: -1.5381832122802734
    3. '),' → logprob: -2.2881832122802734
    4. ')' → logprob: -2.9131832122802734
    5. ' ),' → logprob: -2.9131832122802734
    6. ' +' → logprob: -3.4131832122802734
    7. '+' → logprob: -4.038183212280273
    8. ' )' → logprob: -4.163183212280273
    9. ' in' → logprob: -5.038183212280273
    10. ' <=' → logprob: -5.163183212280273

Token 472: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.008932563476264477
    2. ' )' → logprob: -5.258932590484619
    3. ')' → logprob: -5.633932590484619
    4. ' ),' → logprob: -10.383932113647461
    5. ' )
' → logprob: -10.508932113647461
    6. '),' → logprob: -11.633932113647461
    7. '000' → logprob: -11.758932113647461
    8. ')
' → logprob: -12.008932113647461
    9. '
' → logprob: -12.133932113647461
    10. ' 
' → logprob: -12.258932113647461

Token 473: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01838497444987297
    2. '):' → logprob: -4.51838493347168
    3. '),' → logprob: -5.51838493347168
    4. ' )' → logprob: -6.26838493347168
    5. '0' → logprob: -7.64338493347168
    6. ',' → logprob: -8.26838493347168
    7. '):
' → logprob: -8.39338493347168
    8. '+' → logprob: -8.89338493347168
    9. ')
' → logprob: -10.39338493347168
    10. ':' → logprob: -10.64338493347168

Token 474: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.23722361028194427
    2. '#' → logprob: -1.8622236251831055
    3. ' #' → logprob: -3.1122236251831055
    4. ' continuer' → logprob: -5.4872236251831055
    5. 'on' → logprob: -6.3622236251831055
    6. ' pass' → logprob: -7.1122236251831055
    7. ' ' → logprob: -7.3622236251831055
    8. ' nous' → logprob: -7.3622236251831055
    9. 'pass' → logprob: -7.3622236251831055
    10. ' continue' → logprob: -7.9872236251831055

Token 475: ' peut' (ID: 9216)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.5433892011642456
    2. 'continue' → logprob: -1.9183892011642456
    3. '#' → logprob: -2.418389320373535
    4. ' #' → logprob: -3.418389320373535
    5. 'contin' → logprob: -3.418389320373535
    6. ' n' → logprob: -3.793389320373535
    7. ' continuer' → logprob: -4.418389320373535
    8. ' peux' → logprob: -4.793389320373535
    9. ' ne' → logprob: -4.918389320373535
    10. ' return' → logprob: -5.043389320373535

Token 476: ' faire' (ID: 8119)
  Prédit: ' continuer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continuer' → logprob: -0.3663635849952698
    2. ' limiter' → logprob: -2.241363525390625
    3. ' utiliser' → logprob: -2.366363525390625
    4. ' essayer' → logprob: -4.116363525390625
    5. ' commencer' → logprob: -4.241363525390625
    6. 'contin' → logprob: -4.241363525390625
    7. ' stopper' → logprob: -4.616363525390625
    8. ' explorer' → logprob: -4.991363525390625
    9. ' stock' → logprob: -5.991363525390625
    10. ' return' → logprob: -6.116363525390625

Token 477: ' uniquement' (ID: 65527)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.9565310478210449
    2. 'un' → logprob: -1.831531047821045
    3. ' une' → logprob: -1.831531047821045
    4. '```' → logprob: -2.956531047821045
    5. ' un' → logprob: -3.081531047821045
    6. 'import' → logprob: -3.206531047821045
    7. 'pass' → logprob: -3.456531047821045
    8. 'max' → logprob: -3.831531047821045
    9. 'que' → logprob: -4.331531047821045
    10. 'des' → logprob: -4.956531047821045

Token 478: ' un' (ID: 537)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.3974282145500183
    2. 'une' → logprob: -1.897428274154663
    3. ' un' → logprob: -2.147428274154663
    4. 'un' → logprob: -4.022428035736084
    5. ' la' → logprob: -4.772428035736084
    6. ' l' → logprob: -5.272428035736084
    7. ' par' → logprob: -5.522428035736084
    8. ' quelques' → logprob: -5.647428035736084
    9. ' a' → logprob: -5.897428035736084
    10. 'k' → logprob: -6.022428035736084

Token 479: ' BFS' (ID: 190016)
  Prédit: ' BFS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' BFS' → logprob: -0.5114662647247314
    2. ' bfs' → logprob: -1.7614662647247314
    3. 'b' → logprob: -3.1364662647247314
    4. 'B' → logprob: -3.6364662647247314
    5. 'prem' → logprob: -3.7614662647247314
    6. 'e' → logprob: -4.011466026306152
    7. 'heur' → logprob: -4.136466026306152
    8. ' best' → logprob: -4.761466026306152
    9. ' heuristic' → logprob: -4.761466026306152
    10. ' partial' → logprob: -4.886466026306152

Token 480: ' simple' (ID: 4705)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2892027795314789
    2. 'def' → logprob: -2.2892026901245117
    3. '(' → logprob: -3.1642026901245117
    4. ')' → logprob: -3.7892026901245117
    5. '#' → logprob: -4.164202690124512
    6. '_' → logprob: -4.414202690124512
    7. '\' → logprob: -4.664202690124512
    8. ',' → logprob: -4.914202690124512
    9. '(
' → logprob: -5.039202690124512
    10. '
' → logprob: -5.289202690124512

Token 481: ' pour' (ID: 1930)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.09448661655187607
    2. '
' → logprob: -3.344486713409424
    3. '#' → logprob: -4.469486713409424
    4. 's' → logprob: -4.594486713409424
    5. 'import' → logprob: -4.844486713409424
    6. '

' → logprob: -5.094486713409424
    7. ':
' → logprob: -5.594486713409424
    8. 'k' → logprob: -5.719486713409424
    9. ':' → logprob: -5.719486713409424
    10. '(s' → logprob: -6.094486713409424

Token 482: ' ex' (ID: 513)
  Prédit: ' trouver'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' trouver' → logprob: -1.3239089250564575
    2. ' k' → logprob: -1.4489089250564575
    3. 'k' → logprob: -1.5739089250564575
    4. 'tr' → logprob: -2.823908805847168
    5. 'l' → logprob: -3.073908805847168
    6. ' chaque' → logprob: -3.573908805847168
    7. 'le' → logprob: -3.823908805847168
    8. ' l' → logprob: -4.073908805847168
    9. ' obtenir' → logprob: -4.573908805847168
    10. 'la' → logprob: -4.698908805847168

Token 483: 'ister' (ID: 1947)
  Prédit: 'plorer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'plorer' → logprob: -0.3732866942882538
    2. 'pl' → logprob: -1.6232867240905762
    3. 'plore' → logprob: -2.373286724090576
    4. 'p' → logprob: -4.748286724090576
    5. 'pand' → logprob: -5.248286724090576
    6. 'haust' → logprob: -5.623286724090576
    7. 'plo' → logprob: -6.623286724090576
    8. 'ploit' → logprob: -7.123286724090576
    9. 't' → logprob: -8.123286247253418
    10. 'tract' → logprob: -8.248286247253418

Token 484: ' ou' (ID: 2031)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.13898947834968567
    2. ':' → logprob: -2.8889894485473633
    3. '#' → logprob: -3.8889894485473633
    4. '```' → logprob: -4.513989448547363
    5. 'import' → logprob: -4.638989448547363
    6. '
' → logprob: -5.013989448547363
    7. 's' → logprob: -5.138989448547363
    8. '(s' → logprob: -5.638989448547363
    9. ':
' → logprob: -5.888989448547363
    10. '

' → logprob: -6.013989448547363

Token 485: ' pas' (ID: 2173)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.8813156485557556
    2. 'return' → logprob: -1.6313157081604004
    3. ' vérifier' → logprob: -2.6313157081604004
    4. 'non' → logprob: -2.7563157081604004
    5. ' non' → logprob: -3.1313157081604004
    6. 'ret' → logprob: -3.8813157081604004
    7. ' print' → logprob: -4.0063157081604
    8. 'im' → logprob: -4.1313157081604
    9. ' retourner' → logprob: -4.1313157081604
    10. ' impr' → logprob: -4.2563157081604

Token 486: ' (' (ID: 350)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.17280052602291107
    2. '
' → logprob: -2.0478005409240723
    3. '

' → logprob: -4.172800540924072
    4. 'import' → logprob: -4.922800540924072
    5. '\' → logprob: -6.922800540924072
    6. 's' → logprob: -6.922800540924072
    7. '```' → logprob: -7.047800540924072
    8. '#' → logprob: -7.172800540924072
    9. 'k' → logprob: -7.297800540924072
    10. '\n' → logprob: -7.547800540924072

Token 487: 'et' (ID: 292)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.629187285900116
    2. ' )' → logprob: -1.7541873455047607
    3. ').' → logprob: -1.8791873455047607
    4. '),' → logprob: -2.5041873455047607
    5. ' ),' → logprob: -3.8791873455047607
    6. ' ).' → logprob: -4.629187107086182
    7. ',' → logprob: -5.129187107086182
    8. ' k' → logprob: -5.504187107086182
    9. ' la' → logprob: -6.379187107086182
    10. '.' → logprob: -6.504187107086182

Token 488: ' prendre' (ID: 24257)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ret' → logprob: -0.8724370002746582
    2. 'return' → logprob: -1.1224370002746582
    3. 'print' → logprob: -2.122437000274658
    4. 'im' → logprob: -2.747437000274658
    5. ' retourner' → logprob: -4.497437000274658
    6. 'calcul' → logprob: -4.497437000274658
    7. 'pas' → logprob: -4.622437000274658
    8. 'ren' → logprob: -4.747437000274658
    9. ' impr' → logprob: -5.997437000274658
    10. 'aff' → logprob: -5.997437000274658

Token 489: ' la' (ID: 557)
  Prédit: ' seulement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' seulement' → logprob: -1.3417472839355469
    2. ' la' → logprob: -1.5917472839355469
    3. ' le' → logprob: -2.216747283935547
    4. 'le' → logprob: -2.716747283935547
    5. ' une' → logprob: -2.716747283935547
    6. ' ' → logprob: -2.716747283935547
    7. ' uniquement' → logprob: -3.091747283935547
    8. 'une' → logprob: -3.466747283935547
    9. 'la' → logprob: -3.591747283935547
    10. ' l' → logprob: -3.591747283935547

Token 490: ' surface' (ID: 9753)
  Prédit: 'surface'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'surface' → logprob: -0.25527164340019226
    2. ' surface' → logprob: -1.8802716732025146
    3. 's' → logprob: -4.1302714347839355
    4. ' s' → logprob: -4.6302714347839355
    5. 'prem' → logprob: -4.8802714347839355
    6. 'best' → logprob: -5.5052714347839355
    7. 'minimum' → logprob: -5.6302714347839355
    8. 'face' → logprob: -6.0052714347839355
    9. ' minimal' → logprob: -6.1302714347839355
    10. 'first' → logprob: -6.2552714347839355

Token 491: ' de' (ID: 334)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006316127721220255
    2. ' )' → logprob: -5.631316184997559
    3. '=' → logprob: -7.256316184997559
    4. '):' → logprob: -7.506316184997559
    5. ',' → logprob: -8.256316184997559
    6. '),' → logprob: -8.381316184997559
    7. '.' → logprob: -8.881316184997559
    8. ':' → logprob: -9.131316184997559
    9. ' ' → logprob: -9.381316184997559
    10. ' =' → logprob: -9.381316184997559

Token 492: ' la' (ID: 557)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.5878434777259827
    2. 'k' → logprob: -1.087843418121338
    3. ' la' → logprob: -3.212843418121338
    4. 'la' → logprob: -4.087843418121338
    5. 'l' → logprob: -4.212843418121338
    6. ' ' → logprob: -4.212843418121338
    7. ' l' → logprob: -4.337843418121338
    8. '6' → logprob: -5.837843418121338
    9. ' ce' → logprob: -6.962843418121338
    10. ' s' → logprob: -7.587843418121338

Token 493: ' compos' (ID: 14635)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.9625892043113708
    2. ' solution' → logprob: -2.0875892639160156
    3. 'solution' → logprob: -2.2125892639160156
    4. ' plus' → logprob: -2.9625892639160156
    5. 'prem' → logprob: -3.0875892639160156
    6. 'k' → logprob: -3.2125892639160156
    7. ' k' → logprob: -3.4625892639160156
    8. 's' → logprob: -3.5875892639160156
    9. 'cube' → logprob: -3.5875892639160156
    10. 'surface' → logprob: -4.462589263916016

Token 494: 'ante' (ID: 2116)
  Prédit: 'ité'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ité' → logprob: -1.5126034021377563
    2. 'e' → logprob: -1.7626034021377563
    3. 'position' → logprob: -2.387603282928467
    4. 'ite' → logprob: -2.387603282928467
    5. 'ition' → logprob: -2.637603282928467
    6. 'pos' → logprob: -2.762603282928467
    7. 'ection' → logprob: -3.262603282928467
    8. 'ète' → logprob: -3.387603282928467
    9. ')' → logprob: -3.512603282928467
    10. 'é' → logprob: -3.762603282928467

Token 495: ' conn' (ID: 10850)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3148009777069092
    2. '_selected' → logprob: -2.064800977706909
    3. '_' → logprob: -3.439800977706909
    4. '_connected' → logprob: -3.939800977706909
    5. 'conn' → logprob: -4.439801216125488
    6. 'selected' → logprob: -4.564801216125488
    7. '),' → logprob: -4.689801216125488
    8. '_conn' → logprob: -4.689801216125488
    9. ' selected' → logprob: -5.189801216125488
    10. ').' → logprob: -5.189801216125488

Token 496: 'exe' (ID: 70589)
  Prédit: 'ect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -0.602153480052948
    2. 'exe' → logprob: -0.977153480052948
    3. 'n' → logprob: -2.9771535396575928
    4. 'ex' → logprob: -4.102153301239014
    5. 'ected' → logprob: -5.352153301239014
    6. 'nect' → logprob: -5.852153301239014
    7. 'ness' → logprob: -8.477153778076172
    8. 'exion' → logprob: -8.977153778076172
    9. 'exit' → logprob: -9.352153778076172
    10. '#' → logprob: -9.852153778076172

Token 497: ' minimale' (ID: 143217)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07224393635988235
    2. 'def' → logprob: -4.447244167327881
    3. ' )' → logprob: -4.572244167327881
    4. '):' → logprob: -4.572244167327881
    5. ':' → logprob: -5.322244167327881
    6. ',' → logprob: -5.322244167327881
    7. '
' → logprob: -5.572244167327881
    8. '.' → logprob: -5.697244167327881
    9. '_' → logprob: -5.947244167327881
    10. ').' → logprob: -6.447244167327881

Token 498: ' appro' (ID: 3153)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14734672009944916
    2. ':' → logprob: -2.8973467350006104
    3. ' ' → logprob: -4.397346496582031
    4. '_' → logprob: -4.522346496582031
    5. '
' → logprob: -4.522346496582031
    6. '#' → logprob: -4.772346496582031
    7. ' )' → logprob: -5.272346496582031
    8. ',' → logprob: -5.397346496582031
    9. '<|end|>' → logprob: -5.522346496582031
    10. '=' → logprob: -5.772346496582031

Token 499: 'ch' (ID: 332)
  Prédit: 'ch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -1.0587000846862793
    2. 'che' → logprob: -1.4337000846862793
    3. 'x' → logprob: -1.5587000846862793
    4. 'xim' → logprob: -2.3087000846862793
    5. 'ché' → logprob: -2.8087000846862793
    6. 'ach' → logprob: -3.4337000846862793
    7. 'def' → logprob: -6.808700084686279
    8. 's' → logprob: -6.933700084686279
    9. 'chee' → logprob: -6.933700084686279
    10. 'visionnement' → logprob: -6.933700084686279

Token 500: 'ée' (ID: 2894)
  Prédit: 'imation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imation' → logprob: -1.0384618043899536
    2. 'ation' → logprob: -1.5384618043899536
    3. 'im' → logprob: -1.9134618043899536
    4. 'ch' → logprob: -2.538461685180664
    5. 'ché' → logprob: -3.288461685180664
    6. 'ach' → logprob: -3.413461685180664
    7. 'xim' → logprob: -3.663461685180664
    8. 'é' → logprob: -3.788461685180664
    9. 'ée' → logprob: -3.913461685180664
    10. 'import' → logprob: -4.538461685180664

Token 501: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3309568166732788
    2. '):' → logprob: -2.5809569358825684
    3. ':' → logprob: -2.9559569358825684
    4. '.' → logprob: -3.7059569358825684
    5. 'def' → logprob: -3.7059569358825684
    6. '):
' → logprob: -3.9559569358825684
    7. ' )' → logprob: -3.9559569358825684
    8. ').' → logprob: -4.330956935882568
    9. '#' → logprob: -4.830956935882568
    10. ',' → logprob: -4.830956935882568

Token 502: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.17254264652729034
    2. '(
' → logprob: -2.5475425720214844
    3. '
' → logprob: -3.1725425720214844
    4. ':' → logprob: -4.672542572021484
    5. '(' → logprob: -4.797542572021484
    6. ':
' → logprob: -5.297542572021484
    7. 'import' → logprob: -5.422542572021484
    8. '(n' → logprob: -6.297542572021484
    9. ',
' → logprob: -6.797542572021484
    10. '\' → logprob: -6.922542572021484

Token 503: ' -' (ID: 533)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.05166691914200783
    2. '
' → logprob: -4.551666736602783
    3. '(
' → logprob: -4.551666736602783
    4. '#' → logprob: -5.801666736602783
    5. '\' → logprob: -5.801666736602783
    6. ')' → logprob: -5.801666736602783
    7. ':' → logprob: -5.926666736602783
    8. '(' → logprob: -5.926666736602783
    9. 'import' → logprob: -6.301666736602783
    10. 's' → logprob: -6.301666736602783

Token 504: ' En' (ID: 2130)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0003178273618686944
    2. 'import' → logprob: -8.875317573547363
    3. '#' → logprob: -9.250317573547363
    4. 'k' → logprob: -10.750317573547363
    5. 'from' → logprob: -10.875317573547363
    6. ' def' → logprob: -11.125317573547363
    7. 'n' → logprob: -11.750317573547363
    8. 'class' → logprob: -12.125317573547363
    9. 's' → logprob: -12.250317573547363
    10. '```' → logprob: -12.625317573547363

Token 505: ' pratique' (ID: 42780)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.037900660187006
    2. 'suite' → logprob: -4.412900447845459
    3. ' def' → logprob: -4.912900447845459
    4. 'continue' → logprob: -5.537900447845459
    5. 't' → logprob: -6.412900447845459
    6. 'from' → logprob: -6.787900447845459
    7. '```' → logprob: -6.912900447845459
    8. ' continu' → logprob: -7.037900447845459
    9. 'f' → logprob: -7.162900447845459
    10. 'import' → logprob: -7.287900447845459

Token 506: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7267515659332275
    2. 'def' → logprob: -1.3517515659332275
    3. ',' → logprob: -1.6017515659332275
    4. ':
' → logprob: -3.9767515659332275
    5. '#' → logprob: -4.101751327514648
    6. ' def' → logprob: -4.851751327514648
    7. ',
' → logprob: -5.476751327514648
    8. '
' → logprob: -6.101751327514648
    9. ' :' → logprob: -6.726751327514648
    10. ' on' → logprob: -6.976751327514648

Token 507: ' on' (ID: 402)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.037514589726924896
    2. ' on' → logprob: -4.287514686584473
    3. ' def' → logprob: -5.037514686584473
    4. '#' → logprob: -5.662514686584473
    5. ' n' → logprob: -5.912514686584473
    6. 'import' → logprob: -5.912514686584473
    7. 'n' → logprob: -6.162514686584473
    8. ' #' → logprob: -7.162514686584473
    9. 'pass' → logprob: -7.287514686584473
    10. ' s' → logprob: -7.662514686584473

Token 508: ' sélection' (ID: 43472)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.7262119650840759
    2. 'def' → logprob: -1.9762120246887207
    3. 'continue' → logprob: -2.2262120246887207
    4. ' def' → logprob: -2.6012120246887207
    5. 'contin' → logprob: -3.2262120246887207
    6. '_continue' → logprob: -3.9762120246887207
    7. ' continuer' → logprob: -4.226212024688721
    8. ' will' → logprob: -4.351212024688721
    9. '_' → logprob: -4.476212024688721
    10. ' .' → logprob: -4.601212024688721

Token 509: 'ne' (ID: 611)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.06629478931427
    2. 'ne' → logprob: -1.56629478931427
    3. 'ner' → logprob: -1.94129478931427
    4. 'e' → logprob: -1.94129478931427
    5. 'n' → logprob: -2.5662946701049805
    6. 'a' → logprob: -3.3162946701049805
    7. 'er' → logprob: -3.8162946701049805
    8. 'nera' → logprob: -5.0662946701049805
    9. 'né' → logprob: -5.6912946701049805
    10. ' _' → logprob: -5.6912946701049805

Token 510: ' une' (ID: 2463)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -1.2465686798095703
    2. ' les' → logprob: -1.7465686798095703
    3. ' une' → logprob: -2.3715686798095703
    4. ' uniquement' → logprob: -2.4965686798095703
    5. 'une' → logprob: -2.7465686798095703
    6. ' des' → logprob: -2.7465686798095703
    7. 'un' → logprob: -2.9965686798095703
    8. ' le' → logprob: -3.6215686798095703
    9. ' seulement' → logprob: -3.7465686798095703
    10. ' ' → logprob: -3.7465686798095703

Token 511: ' approche' (ID: 102373)
  Prédit: ' subset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' subset' → logprob: -0.47482866048812866
    2. ' partie' → logprob: -2.7248287200927734
    3. ' ' → logprob: -3.4748287200927734
    4. ' position' → logprob: -3.4748287200927734
    5. 'position' → logprob: -3.4748287200927734
    6. ' sous' → logprob: -3.8498287200927734
    7. 'subset' → logprob: -3.8498287200927734
    8. ' liste' → logprob: -4.474828720092773
    9. ' petite' → logprob: -4.599828720092773
    10. 's' → logprob: -4.724828720092773

Token 512: ' plus' (ID: 2932)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8138559460639954
    2. ' =' → logprob: -1.4388558864593506
    3. 'def' → logprob: -1.4388558864593506
    4. '=' → logprob: -4.18885612487793
    5. 'import' → logprob: -4.31385612487793
    6. 's' → logprob: -4.93885612487793
    7. ' :' → logprob: -5.43885612487793
    8. '.' → logprob: -5.56385612487793
    9. '#' → logprob: -5.68885612487793
    10. ' s' → logprob: -5.81385612487793

Token 513: ' simple' (ID: 4705)
  Prédit: 'simple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'simple' → logprob: -0.33070752024650574
    2. 'pr' → logprob: -2.330707550048828
    3. 'heur' → logprob: -2.455707550048828
    4. 'optim' → logprob: -3.080707550048828
    5. '```' → logprob: -4.330707550048828
    6. 'gre' → logprob: -4.830707550048828
    7. 'mod' → logprob: -5.455707550048828
    8. ' simple' → logprob: -5.705707550048828
    9. 'br' → logprob: -5.705707550048828
    10. 'import' → logprob: -6.205707550048828

Token 514: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7166370153427124
    2. 'def' → logprob: -1.0916370153427124
    3. ':
' → logprob: -2.591637134552002
    4. ':

' → logprob: -3.466637134552002
    5. 'import' → logprob: -3.591637134552002
    6. '
' → logprob: -4.341637134552002
    7. '

' → logprob: -4.716637134552002
    8. 's' → logprob: -5.216637134552002
    9. '```' → logprob: -5.216637134552002
    10. '#' → logprob: -5.591637134552002

Token 515: ' trouver' (ID: 23195)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08849821239709854
    2. 'import' → logprob: -3.088498115539551
    3. ' def' → logprob: -4.463498115539551
    4. '#' → logprob: -4.713498115539551
    5. ' import' → logprob: -5.713498115539551
    6. 'n' → logprob: -5.838498115539551
    7. ' pass' → logprob: -6.088498115539551
    8. 's' → logprob: -6.213498115539551
    9. ' #' → logprob: -6.463498115539551
    10. 'pass' → logprob: -6.588498115539551

Token 516: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.0627076625823975
    2. ' un' → logprob: -1.6877076625823975
    3. 'une' → logprob: -1.9377076625823975
    4. 'la' → logprob: -2.4377076625823975
    5. 'les' → logprob: -2.5627076625823975
    6. ' une' → logprob: -2.8127076625823975
    7. ' les' → logprob: -3.5627076625823975
    8. 'un' → logprob: -3.8127076625823975
    9. ' le' → logprob: -4.062707901000977
    10. 'le' → logprob: -4.437707901000977

Token 517: ' plus' (ID: 2932)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.8583247661590576
    2. ' plus' → logprob: -1.1083247661590576
    3. ' meilleure' → logprob: -2.4833247661590576
    4. 'me' → logprob: -2.9833247661590576
    5. 'conn' → logprob: -3.2333247661590576
    6. 'surface' → logprob: -4.108325004577637
    7. ' surface' → logprob: -4.233325004577637
    8. 'connected' → logprob: -4.608325004577637
    9. 'com' → logprob: -5.483325004577637
    10. ' connected' → logprob: -5.608325004577637

Token 518: ' petite' (ID: 28119)
  Prédit: 'gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'gr' → logprob: -1.3039332628250122
    2. 'conn' → logprob: -1.5539332628250122
    3. ' grande' → logprob: -2.1789331436157227
    4. 'import' → logprob: -2.5539331436157227
    5. 'compact' → logprob: -2.5539331436157227
    6. 'pro' → logprob: -3.1789331436157227
    7. 'pet' → logprob: -3.4289331436157227
    8. 'bonne' → logprob: -3.6789331436157227
    9. 'connected' → logprob: -4.303933143615723
    10. 'grand' → logprob: -4.553933143615723

Token 519: ' surface' (ID: 9753)
  Prédit: ' surface'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' surface' → logprob: -0.7069978713989258
    2. 'surface' → logprob: -0.8319978713989258
    3. 'conn' → logprob: -3.831997871398926
    4. 'com' → logprob: -4.956997871398926
    5. 'cube' → logprob: -5.081997871398926
    6. ' boîte' → logprob: -5.331997871398926
    7. '   ' → logprob: -5.831997871398926
    8. 'c' → logprob: -5.956997871398926
    9. 's' → logprob: -5.956997871398926
    10. ' ' → logprob: -6.081997871398926

Token 520: ' parmi' (ID: 51713)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.39264169335365295
    2. '_possible' → logprob: -2.14264178276062
    3. 'def' → logprob: -2.39264178276062
    4. ' possible' → logprob: -3.26764178276062
    5. ':' → logprob: -3.76764178276062
    6. ' =' → logprob: -4.767641544342041
    7. '

' → logprob: -5.142641544342041
    8. 'surface' → logprob: -5.517641544342041
    9. '_surface' → logprob: -5.517641544342041
    10. ' minimale' → logprob: -5.892641544342041

Token 521: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.8217617273330688
    2. 'les' → logprob: -1.0717617273330688
    3. 't' → logprob: -2.3217616081237793
    4. ' des' → logprob: -2.8217616081237793
    5. ' toutes' → logprob: -3.4467616081237793
    6. ' tous' → logprob: -4.946761608123779
    7. 'des' → logprob: -5.071761608123779
    8. 'une' → logprob: -5.696761608123779
    9. ' celles' → logprob: -5.946761608123779
    10. 'l' → logprob: -6.196761608123779

Token 522: ' compos' (ID: 14635)
  Prédit: 'conn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'conn' → logprob: -0.8809447884559631
    2. 'positions' → logprob: -1.5059447288513184
    3. 'c' → logprob: -1.7559447288513184
    4. 'com' → logprob: -2.0059447288513184
    5. 'connected' → logprob: -4.755944728851318
    6. 'pos' → logprob: -5.130944728851318
    7. ' positions' → logprob: -5.380944728851318
    8. 's' → logprob: -5.380944728851318
    9. 'vo' → logprob: -5.505944728851318
    10. ' ensembles' → logprob: -5.630944728851318

Token 523: 'antes' (ID: 5193)
  Prédit: 'plets'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'plets' → logprob: -1.2609587907791138
    2. 'ets' → logprob: -1.3859587907791138
    3. 'ités' → logprob: -2.885958671569824
    4. 'ites' → logprob: -3.010958671569824
    5. 'et' → logprob: -3.260958671569824
    6. 'p' → logprob: -3.260958671569824
    7. 'plet' → logprob: -3.510958671569824
    8. 'pet' → logprob: -3.760958671569824
    9. 'positions' → logprob: -4.010958671569824
    10. 'tes' → logprob: -4.135958671569824

Token 524: ' connex' (ID: 154480)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.021669533103704453
    2. 'import' → logprob: -4.771669387817383
    3. '
' → logprob: -5.646669387817383
    4. '#' → logprob: -5.896669387817383
    5. '

' → logprob: -6.646669387817383
    6. '```' → logprob: -7.021669387817383
    7. 'class' → logprob: -7.146669387817383
    8. 'n' → logprob: -7.271669387817383
    9. ' =' → logprob: -7.771669387817383
    10. ' def' → logprob: -8.271669387817383

Token 525: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.005867878440767527
    2. 'utes' → logprob: -6.380867958068848
    3. 'ues' → logprob: -6.505867958068848
    4. 'tes' → logprob: -6.755867958068848
    5. 'ect' → logprob: -7.005867958068848
    6. 'ex' → logprob: -8.755867958068848
    7. 'ites' → logprob: -9.380867958068848
    8. 'e' → logprob: -9.505867958068848
    9. 'entes' → logprob: -9.630867958068848
    10. '#' → logprob: -10.005867958068848

Token 526: ' de' (ID: 334)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.166429802775383
    2. 'n' → logprob: -3.0414297580718994
    3. '
' → logprob: -3.1664297580718994
    4. 'import' → logprob: -3.7914297580718994
    5. 's' → logprob: -4.0414299964904785
    6. '

' → logprob: -4.9164299964904785
    7. 'positions' → logprob: -5.1664299964904785
    8. '```' → logprob: -6.4164299964904785
    9. ':' → logprob: -6.7914299964904785
    10. '#' → logprob: -6.7914299964904785

Token 527: ' taille' (ID: 41644)
  Prédit: 'tail'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tail' → logprob: -0.016380608081817627
    2. ' taille' → logprob: -5.141380786895752
    3. 'cha' → logprob: -6.016380786895752
    4. 'ta' → logprob: -6.141380786895752
    5. 'la' → logprob: -6.266380786895752
    6. 't' → logprob: -6.766380786895752
    7. 'k' → logprob: -7.016380786895752
    8. 'size' → logprob: -7.891380786895752
    9. 'dimension' → logprob: -8.391380310058594
    10. 'import' → logprob: -8.766380310058594

Token 528: ' au' (ID: 2791)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.576633632183075
    2. 'k' → logprob: -0.826633632183075
    3. 'exact' → logprob: -7.701633453369141
    4. ' exact' → logprob: -9.95163345336914
    5. '_k' → logprob: -10.07663345336914
    6. ' au' → logprob: -10.82663345336914
    7. '=k' → logprob: -11.07663345336914
    8. 'import' → logprob: -11.32663345336914
    9. ' s' → logprob: -11.82663345336914
    10. ' ' → logprob: -11.82663345336914

Token 529: ' moins' (ID: 15924)
  Prédit: 'moins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'moins' → logprob: -0.0007788925431668758
    2. 'mo' → logprob: -7.875778675079346
    3. 'plus' → logprob: -8.625779151916504
    4. ' moins' → logprob: -9.500779151916504
    5. 'm' → logprob: -9.875779151916504
    6. 'max' → logprob: -10.500779151916504
    7. 'minimum' → logprob: -11.000779151916504
    8. 'menos' → logprob: -11.375779151916504
    9. 'less' → logprob: -12.000779151916504
    10. 'p' → logprob: -12.000779151916504

Token 530: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.25237756967544556
    2. ' k' → logprob: -1.5023775100708008
    3. '=k' → logprob: -8.0023775100708
    4. '=' → logprob: -9.5023775100708
    5. ' ' → logprob: -11.2523775100708
    6. ' =' → logprob: -11.5023775100708
    7. '1' → logprob: -12.1273775100708
    8. '```' → logprob: -12.2523775100708
    9. '  ' → logprob: -14.0023775100708
    10. '_k' → logprob: -14.1273775100708

Token 531: '.
' (ID: 558)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4349699318408966
    2. '
' → logprob: -1.3099699020385742
    3. '

' → logprob: -3.434969902038574
    4. 'n' → logprob: -4.059969902038574
    5. 'import' → logprob: -4.559969902038574
    6. '#' → logprob: -5.184969902038574
    7. 's' → logprob: -5.809969902038574
    8. ':' → logprob: -5.934969902038574
    9. ':
' → logprob: -5.934969902038574
    10. '\' → logprob: -6.309969902038574

Token 532: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3168933689594269
    2. '
' → logprob: -2.8168933391571045
    3. 'n' → logprob: -2.9418933391571045
    4. '(n' → logprob: -2.9418933391571045
    5. '(
' → logprob: -3.5668933391571045
    6. '```' → logprob: -4.316893577575684
    7. 'import' → logprob: -4.441893577575684
    8. ':
' → logprob: -4.566893577575684
    9. ':' → logprob: -4.691893577575684
    10. '(' → logprob: -4.941893577575684

Token 533: ' -' (ID: 533)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03842494264245033
    2. 'n' → logprob: -4.288424968719482
    3. '
' → logprob: -4.288424968719482
    4. 'import' → logprob: -5.038424968719482
    5. '```' → logprob: -7.038424968719482
    6. '(n' → logprob: -7.538424968719482
    7. 's' → logprob: -7.788424968719482
    8. '\' → logprob: -7.913424968719482
    9. '

' → logprob: -8.163424491882324
    10. '(
' → logprob: -8.538424491882324

Token 534: ' Si' (ID: 7832)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.006033315323293209
    2. '
' → logprob: -6.131033420562744
    3. 'import' → logprob: -6.381033420562744
    4. 'n' → logprob: -7.506033420562744
    5. '#' → logprob: -8.006032943725586
    6. 'k' → logprob: -8.381032943725586
    7. 's' → logprob: -8.381032943725586
    8. '```' → logprob: -8.381032943725586
    9. ' 
' → logprob: -8.631032943725586
    10. ' def' → logprob: -9.006032943725586

Token 535: ' une' (ID: 2463)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.33795225620269775
    2. ' len' → logprob: -1.8379522562026978
    3. 'k' → logprob: -2.337952136993408
    4. 'len' → logprob: -4.087952136993408
    5. ' __' → logprob: -4.962952136993408
    6. ' not' → logprob: -6.212952136993408
    7. '__' → logprob: -6.462952136993408
    8. ' n' → logprob: -7.337952136993408
    9. ' la' → logprob: -7.337952136993408
    10. ' True' → logprob: -7.587952136993408

Token 536: ' compos' (ID: 14635)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.45302915573120117
    2. 'n' → logprob: -2.953029155731201
    3. '
' → logprob: -3.578029155731201
    4. 'def' → logprob: -3.828029155731201
    5. ' compos' → logprob: -3.828029155731201
    6. 'conn' → logprob: -3.953029155731201
    7. ' =' → logprob: -4.078029155731201
    8. 'comp' → logprob: -4.078029155731201
    9. '_com' → logprob: -4.203029155731201
    10. '_' → logprob: -4.453029155731201

Token 537: 'ante' (ID: 2116)
  Prédit: 'ponent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ponent' → logprob: -0.7354813814163208
    2. 'ont' → logprob: -1.7354813814163208
    3. 'on' → logprob: -1.9854813814163208
    4. 'onent' → logprob: -2.6104812622070312
    5. 'pos' → logprob: -3.2354812622070312
    6. 'plete' → logprob: -3.8604812622070312
    7. ')' → logprob: -4.110481262207031
    8. 'ète' → logprob: -4.485481262207031
    9. 'plet' → logprob: -4.985481262207031
    10. '#' → logprob: -5.110481262207031

Token 538: ' conn' (ID: 10850)
  Prédit: 'conn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'conn' → logprob: -0.04398871958255768
    2. ' conn' → logprob: -3.7939887046813965
    3. '_conn' → logprob: -3.9189887046813965
    4. ' est' → logprob: -8.418989181518555
    5. 'est' → logprob: -8.918989181518555
    6. ' =' → logprob: -9.418989181518555
    7. ' n' → logprob: -9.543989181518555
    8. ' connex' → logprob: -10.543989181518555
    9. '.conn' → logprob: -10.918989181518555
    10. 'connect' → logprob: -11.293989181518555

Token 539: 'exe' (ID: 70589)
  Prédit: 'ect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -0.3675936460494995
    2. 'exe' → logprob: -2.242593765258789
    3. 'ex' → logprob: -2.492593765258789
    4. '#' → logprob: -3.992593765258789
    5. 'n' → logprob: -3.992593765258789
    6. 'nect' → logprob: -4.617593765258789
    7. 'ected' → logprob: -4.617593765258789
    8. '```' → logprob: -4.742593765258789
    9. '=' → logprob: -5.242593765258789
    10. 'in' → logprob: -5.492593765258789

Token 540: ' a' (ID: 261)
  Prédit: 'conn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'conn' → logprob: -0.2658292353153229
    2. ' est' → logprob: -2.39082932472229
    3. 'est' → logprob: -2.64082932472229
    4. ' n' → logprob: -4.015829086303711
    5. '_conn' → logprob: -4.140829086303711
    6. 'de' → logprob: -4.515829086303711
    7. ' de' → logprob: -4.890829086303711
    8. 's' → logprob: -5.890829086303711
    9. ' conn' → logprob: -6.015829086303711
    10. ' a' → logprob: -6.390829086303711

Token 541: ' taille' (ID: 41644)
  Prédit: 'tail'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tail' → logprob: -0.3517696261405945
    2. 'size' → logprob: -1.6017696857452393
    3. 'une' → logprob: -2.6017696857452393
    4. 't' → logprob: -4.97676944732666
    5. ' taille' → logprob: -5.47676944732666
    6. 's' → logprob: -5.60176944732666
    7. 'sa' → logprob: -6.10176944732666
    8. ' une' → logprob: -6.85176944732666
    9. 'au' → logprob: -7.22676944732666
    10. 'ta' → logprob: -7.97676944732666

Token 542: ' <' (ID: 464)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.6547646522521973
    2. '>=' → logprob: -0.9047646522521973
    3. ' au' → logprob: -3.6547646522521973
    4. ' <' → logprob: -3.9047646522521973
    5. '>' → logprob: -4.529764652252197
    6. 'au' → logprob: -5.279764652252197
    7. '<' → logprob: -6.279764652252197
    8. ' suffis' → logprob: -6.529764652252197
    9. ' ' → logprob: -6.654764652252197
    10. 'strict' → logprob: -6.654764652252197

Token 543: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.018151700496673584
    2. ' k' → logprob: -4.018151760101318
    3. ' ' → logprob: -13.39315128326416
    4. ' ' → logprob: -15.51815128326416
    5. '=k' → logprob: -16.768152236938477
    6. '```' → logprob: -17.393152236938477
    7. '  ' → logprob: -17.643152236938477
    8. '   ' → logprob: -17.893152236938477
    9. '=' → logprob: -18.018152236938477
    10. '	k' → logprob: -18.143152236938477

Token 544: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05167733505368233
    2. ':' → logprob: -3.0516772270202637
    3. ' ,' → logprob: -6.676677227020264
    4. ':,' → logprob: -7.926677227020264
    5. ' continue' → logprob: -8.051677703857422
    6. ':
' → logprob: -8.676677703857422
    7. ' alors' → logprob: -8.926677703857422
    8. '>' → logprob: -9.301677703857422
    9. 'continue' → logprob: -9.301677703857422
    10. '>,' → logprob: -9.426677703857422

Token 545: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.3683378994464874
    2. 'on' → logprob: -1.868337869644165
    3. '#' → logprob: -3.118337869644165
    4. 'return' → logprob: -3.618337869644165
    5. 'contin' → logprob: -3.743337869644165
    6. '   ' → logprob: -3.993337869644165
    7. ' continuer' → logprob: -4.118338108062744
    8. 'continue' → logprob: -4.493338108062744
    9. ' return' → logprob: -5.368338108062744
    10. 'print' → logprob: -6.118338108062744

Token 546: ' ne' (ID: 453)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.045696549117565155
    2. 'p' → logprob: -4.29569673538208
    3. 'ignore' → logprob: -4.54569673538208
    4. ' continue' → logprob: -4.54569673538208
    5. 'return' → logprob: -5.54569673538208
    6. 'contin' → logprob: -6.17069673538208
    7. 'ret' → logprob: -6.54569673538208
    8. 'skip' → logprob: -7.04569673538208
    9. 'pass' → logprob: -8.295696258544922
    10. 'continu' → logprob: -8.420696258544922

Token 547: ' peut' (ID: 9216)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.525316059589386
    2. ' continue' → logprob: -1.6503159999847412
    3. 'p' → logprob: -2.650315999984741
    4. 'pe' → logprob: -2.650315999984741
    5. 'pas' → logprob: -2.900315999984741
    6. 'return' → logprob: -5.27531623840332
    7. ' peut' → logprob: -5.52531623840332
    8. ' pas' → logprob: -6.40031623840332
    9. '   ' → logprob: -6.65031623840332
    10. 'contin' → logprob: -6.77531623840332

Token 548: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.11367153376340866
    2. ' pas' → logprob: -2.2386715412139893
    3. ' rien' → logprob: -8.61367130279541
    4. 'l' → logprob: -8.98867130279541
    5. ' ' → logprob: -9.11367130279541
    6. 'la' → logprob: -9.36367130279541
    7. ' l' → logprob: -9.48867130279541
    8. ' jamais' → logprob: -10.11367130279541
    9. 'p' → logprob: -10.23867130279541
    10. '   ' → logprob: -10.61367130279541

Token 549: ' choisir' (ID: 47004)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.19963647425174713
    2. 'contin' → logprob: -2.449636459350586
    3. 'sé' → logprob: -3.949636459350586
    4. ' continuer' → logprob: -4.324636459350586
    5. ' pas' → logprob: -4.449636459350586
    6. '#' → logprob: -4.824636459350586
    7. 'select' → logprob: -4.824636459350586
    8. 'faire' → logprob: -4.824636459350586
    9. 'tr' → logprob: -5.199636459350586
    10. ' sélectionner' → logprob: -5.574636459350586

Token 550: ' k' (ID: 372)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.07847823947668076
    2. ' pas' → logprob: -2.8284783363342285
    3. 'que' → logprob: -4.9534783363342285
    4. 'r' → logprob: -6.2034783363342285
    5. ' que' → logprob: -6.4534783363342285
    6. '#' → logprob: -6.5784783363342285
    7. 'import' → logprob: -6.8284783363342285
    8. 'def' → logprob: -7.8284783363342285
    9. '```' → logprob: -8.07847785949707
    10. 't' → logprob: -8.57847785949707

Token 551: ' cubes' (ID: 88455)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.3771061599254608
    2. ' positions' → logprob: -2.877106189727783
    3. '_positions' → logprob: -2.877106189727783
    4. 'import' → logprob: -3.252106189727783
    5. 's' → logprob: -3.627106189727783
    6. 'def' → logprob: -3.752106189727783
    7. '
' → logprob: -4.127106189727783
    8. '#' → logprob: -4.127106189727783
    9. '```' → logprob: -4.252106189727783
    10. 'cube' → logprob: -4.502106189727783

Token 552: ' dedans' (ID: 183499)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.852394163608551
    2. 'def' → logprob: -0.852394163608551
    3. '

' → logprob: -3.2273941040039062
    4. 'n' → logprob: -3.7273941040039062
    5. 'import' → logprob: -3.7273941040039062
    6. '```' → logprob: -4.102394104003906
    7. 's' → logprob: -4.602394104003906
    8. ':' → logprob: -4.602394104003906
    9. '#' → logprob: -5.477394104003906
    10. 'k' → logprob: -5.727394104003906

Token 553: '.
' (ID: 558)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.10934494435787201
    2. '
' → logprob: -3.109344959259033
    3. 'n' → logprob: -3.484344959259033
    4. '

' → logprob: -4.859344959259033
    5. 'import' → logprob: -4.984344959259033
    6. '\' → logprob: -5.734344959259033
    7. '```' → logprob: -5.734344959259033
    8. 's' → logprob: -5.984344959259033
    9. '\n' → logprob: -6.609344959259033
    10. '#' → logprob: -6.859344959259033

Token 554: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2299114465713501
    2. '
' → logprob: -2.6049113273620605
    3. '\' → logprob: -3.6049113273620605
    4. '[' → logprob: -4.4799113273620605
    5. '[n' → logprob: -4.6049113273620605
    6. 'n' → logprob: -4.7299113273620605
    7. 'import' → logprob: -4.7299113273620605
    8. ':' → logprob: -4.7299113273620605
    9. '[
' → logprob: -4.7299113273620605
    10. '\n' → logprob: -4.8549113273620605

Token 555: ' -' (ID: 533)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.017621729522943497
    2. 'import' → logprob: -4.2676215171813965
    3. 'class' → logprob: -6.2676215171813965
    4. '```' → logprob: -7.3926215171813965
    5. '#' → logprob: -7.7676215171813965
    6. 'n' → logprob: -8.017621994018555
    7. 'from' → logprob: -8.892621994018555
    8. 's' → logprob: -10.892621994018555
    9. '
' → logprob: -11.017621994018555
    10. 'ndef' → logprob: -13.267621994018555

Token 556: ' Sinon' (ID: 154924)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.02883281372487545
    2. 'positions' → logprob: -3.7788329124450684
    3. '#' → logprob: -5.653832912445068
    4. 'visited' → logprob: -7.153832912445068
    5. 'import' → logprob: -8.02883243560791
    6. 'class' → logprob: -8.40383243560791
    7. '
' → logprob: -8.77883243560791
    8. 'n' → logprob: -8.90383243560791
    9. 'graph' → logprob: -9.02883243560791
    10. 'pos' → logprob: -9.27883243560791

Token 557: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1175553798675537
    2. '#' → logprob: -1.4925553798675537
    3. ' on' → logprob: -1.4925553798675537
    4. ',' → logprob: -2.3675553798675537
    5. ':' → logprob: -2.7425553798675537
    6. ' continuer' → logprob: -3.6175553798675537
    7. '    ' → logprob: -5.117555618286133
    8. ' #' → logprob: -5.242555618286133
    9. 'on' → logprob: -5.492555618286133
    10. 'for' → logprob: -5.867555618286133

Token 558: ' choisir' (ID: 47004)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.4180437922477722
    2. '#' → logprob: -1.793043851852417
    3. 'on' → logprob: -1.918043851852417
    4. 'for' → logprob: -4.043043613433838
    5. ' for' → logprob: -5.918043613433838
    6. ' #' → logprob: -6.043043613433838
    7. ' continuer' → logprob: -6.168043613433838
    8. 'contin' → logprob: -7.168043613433838
    9. 'chercher' → logprob: -7.668043613433838
    10. '   ' → logprob: -7.793043613433838

Token 559: ' k' (ID: 372)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -1.4375773668289185
    2. ' les' → logprob: -1.5625773668289185
    3. 'k' → logprob: -1.6875773668289185
    4. ' k' → logprob: -1.8125773668289185
    5. 'un' → logprob: -2.687577247619629
    6. ' parmi' → logprob: -3.062577247619629
    7. 'exact' → logprob: -3.812577247619629
    8. ' un' → logprob: -3.937577247619629
    9. 'une' → logprob: -4.312577247619629
    10. 'le' → logprob: -4.812577247619629

Token 560: ' cubes' (ID: 88455)
  Prédit: ' cubes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cubes' → logprob: -0.3815862238407135
    2. 'positions' → logprob: -2.3815863132476807
    3. ' positions' → logprob: -2.6315863132476807
    4. ' =' → logprob: -3.3815863132476807
    5. '_positions' → logprob: -4.006586074829102
    6. '_c' → logprob: -4.006586074829102
    7. ' parmi' → logprob: -4.131586074829102
    8. '```' → logprob: -4.881586074829102
    9. ' voisins' → logprob: -5.506586074829102
    10. 'c' → logprob: -5.506586074829102

Token 561: ' dans' (ID: 2671)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.623034119606018
    2. '
' → logprob: -2.2480340003967285
    3. ':' → logprob: -2.6230340003967285
    4. 'def' → logprob: -2.6230340003967285
    5. 'selected' → logprob: -2.7480340003967285
    6. ',' → logprob: -2.7480340003967285
    7. 'from' → logprob: -2.8730340003967285
    8. 'import' → logprob: -2.8730340003967285
    9. '.' → logprob: -3.1230340003967285
    10. 'positions' → logprob: -3.1230340003967285

Token 562: ' cette' (ID: 7696)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.6784959435462952
    2. ' cette' → logprob: -0.9284959435462952
    3. 'c' → logprob: -2.9284958839416504
    4. ' la' → logprob: -3.1784958839416504
    5. 'celle' → logprob: -7.17849588394165
    6. 'ces' → logprob: -7.55349588394165
    7. 'l' → logprob: -8.178496360778809
    8. 'le' → logprob: -9.053496360778809
    9. 'les' → logprob: -9.053496360778809
    10. ' celle' → logprob: -9.428496360778809

Token 563: ' compos' (ID: 14635)
  Prédit: ' compos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' compos' → logprob: -0.19939656555652618
    2. 'com' → logprob: -1.8243966102600098
    3. ' même' → logprob: -4.57439661026001
    4. ' comp' → logprob: -5.19939661026001
    5. 'comp' → logprob: -6.57439661026001
    6. '_com' → logprob: -6.94939661026001
    7. ' com' → logprob: -8.074396133422852
    8. ' ' → logprob: -9.074396133422852
    9. ' ' → logprob: -9.199396133422852
    10. 'composition' → logprob: -9.449396133422852

Token 564: 'ante' (ID: 2116)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -1.0031534433364868
    2. 'ente' → logprob: -1.3781534433364868
    3. 'onte' → logprob: -1.6281534433364868
    4. 'ante' → logprob: -2.2531533241271973
    5. 'onn' → logprob: -3.8781533241271973
    6. 'onent' → logprob: -4.253153324127197
    7. 'ation' → logprob: -4.753153324127197
    8. 'om' → logprob: -4.878153324127197
    9. 'omp' → logprob: -5.003153324127197
    10. 'ont' → logprob: -5.253153324127197

Token 565: ' faisant' (ID: 67003)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4558274447917938
    2. '
' → logprob: -2.080827474594116
    3. '

' → logprob: -2.580827474594116
    4. ':
' → logprob: -2.705827474594116
    5. ':' → logprob: -3.705827474594116
    6. 's' → logprob: -4.205827236175537
    7. ':

' → logprob: -4.330827236175537
    8. '\' → logprob: -4.705827236175537
    9. 'import' → logprob: -4.705827236175537
    10. '```' → logprob: -5.205827236175537

Token 566: ' un' (ID: 537)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.0378382205963135
    2. 'part' → logprob: -1.2878382205963135
    3. ' partie' → logprob: -1.7878382205963135
    4. ' l' → logprob: -3.0378382205963135
    5. 'une' → logprob: -3.1628382205963135
    6. 'le' → logprob: -3.1628382205963135
    7. '```' → logprob: -3.5378382205963135
    8. 'un' → logprob: -4.537837982177734
    9. 'au' → logprob: -5.537837982177734
    10. 'la' → logprob: -5.537837982177734

Token 567: ' sous' (ID: 14487)
  Prédit: 'ensemble'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ensemble' → logprob: -0.6408786773681641
    2. 'cluster' → logprob: -1.515878677368164
    3. 'cube' → logprob: -2.765878677368164
    4. 'chain' → logprob: -3.640878677368164
    5. 'bloc' → logprob: -3.765878677368164
    6. 's' → logprob: -3.765878677368164
    7. 'connected' → logprob: -4.015878677368164
    8. 'surface' → logprob: -4.390878677368164
    9. '```' → logprob: -4.390878677368164
    10. 'max' → logprob: -4.765878677368164

Token 568: '-gr' (ID: 18511)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5251966714859009
    2. '_' → logprob: -1.2751966714859009
    3. 'ensemble' → logprob: -2.4001965522766113
    4. 'graph' → logprob: -5.025196552276611
    5. '_-' → logprob: -5.150196552276611
    6. ' -' → logprob: -5.150196552276611
    7. ' _' → logprob: -5.400196552276611
    8. '#' → logprob: -5.900196552276611
    9. '_set' → logprob: -6.150196552276611
    10. ' ensemble' → logprob: -6.525196552276611

Token 569: 'aphe' (ID: 98856)
  Prédit: 'aph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aph' → logprob: -0.11963731795549393
    2. 'aphe' → logprob: -2.7446372509002686
    3. 'oup' → logprob: -3.1196372509002686
    4. '#' → logprob: -6.619637489318848
    5. 'oupe' → logprob: -6.869637489318848
    6. 'p' → logprob: -7.994637489318848
    7. 'apho' → logprob: -8.869637489318848
    8. 'ap' → logprob: -8.994637489318848
    9. 'ade' → logprob: -9.119637489318848
    10. 'a' → logprob: -9.119637489318848

Token 570: ' conn' (ID: 10850)
  Prédit: ' induced'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' induced' → logprob: -0.6112105846405029
    2. 'ind' → logprob: -1.361210584640503
    3. 'conn' → logprob: -2.611210584640503
    4. 'selected' → logprob: -3.611210584640503
    5. '#' → logprob: -3.861210584640503
    6. ' indu' → logprob: -4.111210823059082
    7. ' sélection' → logprob: -4.986210823059082
    8. '_selected' → logprob: -4.986210823059082
    9. '_ind' → logprob: -5.111210823059082
    10. '[ind' → logprob: -5.361210823059082

Token 571: 'exe' (ID: 70589)
  Prédit: 'ect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -0.5247332453727722
    2. 'exe' → logprob: -1.024733304977417
    3. 'ex' → logprob: -3.024733304977417
    4. 'ected' → logprob: -8.024733543395996
    5. '#' → logprob: -8.899733543395996
    6. 'exion' → logprob: -9.399733543395996
    7. 'e' → logprob: -9.899733543395996
    8. '```' → logprob: -9.899733543395996
    9. 'exit' → logprob: -10.899733543395996
    10. 'nect' → logprob: -11.149733543395996

Token 572: ' minimal' (ID: 19957)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.0370018482208252
    2. ':
' → logprob: -1.4120018482208252
    3. '
' → logprob: -1.6620018482208252
    4. ':' → logprob: -2.037001848220825
    5. ' =' → logprob: -4.162001609802246
    6. 'import' → logprob: -5.037001609802246
    7. 'n' → logprob: -5.037001609802246
    8. '\' → logprob: -5.287001609802246
    9. 's' → logprob: -5.287001609802246
    10. '

' → logprob: -5.412001609802246

Token 573: ' pour' (ID: 1930)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3876953125
    2. '
' → logprob: -1.2626953125
    3. ':
' → logprob: -4.5126953125
    4. ':' → logprob: -5.5126953125
    5. 's' → logprob: -5.5126953125
    6. '

' → logprob: -5.6376953125
    7. 'import' → logprob: -5.6376953125
    8. 'n' → logprob: -5.6376953125
    9. ',
' → logprob: -6.0126953125
    10. '```' → logprob: -7.1376953125

Token 574: ' la' (ID: 557)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.12818026542663574
    2. ' minim' → logprob: -2.5031802654266357
    3. 'max' → logprob: -4.503180503845215
    4. 'l' → logprob: -4.878180503845215
    5. 'la' → logprob: -4.878180503845215
    6. 'avoir' → logprob: -6.128180503845215
    7. ' maxim' → logprob: -6.128180503845215
    8. ' la' → logprob: -6.628180503845215
    9. 'lim' → logprob: -7.003180503845215
    10. ' l' → logprob: -7.128180503845215

Token 575: ' surface' (ID: 9753)
  Prédit: 'surface'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'surface' → logprob: -0.5307973027229309
    2. ' surface' → logprob: -1.1557972431182861
    3. 's' → logprob: -3.155797243118286
    4. ' solution' → logprob: -4.530797481536865
    5. 'solution' → logprob: -4.905797481536865
    6. ' s' → logprob: -4.905797481536865
    7. 'distance' → logprob: -5.530797481536865
    8. ' #' → logprob: -5.655797481536865
    9. '#' → logprob: -5.905797481536865
    10. 'surf' → logprob: -6.280797481536865

Token 576: '.
' (ID: 558)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.18668296933174133
    2. 'import' → logprob: -2.811682939529419
    3. ':' → logprob: -3.561682939529419
    4. '
' → logprob: -3.811682939529419
    5. ':
' → logprob: -4.186683177947998
    6. '\' → logprob: -4.311683177947998
    7. 'n' → logprob: -4.811683177947998
    8. 's' → logprob: -5.061683177947998
    9. '

' → logprob: -5.186683177947998
    10. '#' → logprob: -5.561683177947998

Token 577: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.18145295977592468
    2. '
' → logprob: -2.681452989578247
    3. 'import' → logprob: -3.431452989578247
    4. '```' → logprob: -3.556452989578247
    5. ':
' → logprob: -4.681452751159668
    6. 's' → logprob: -4.806452751159668
    7. ':' → logprob: -4.931452751159668
    8. '

' → logprob: -6.181452751159668
    9. '#' → logprob: -6.431452751159668
    10. 'n' → logprob: -6.431452751159668

Token 578: '  ' (ID: 256)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.02264675498008728
    2. 'import' → logprob: -4.397646903991699
    3. '
' → logprob: -5.897646903991699
    4. 's' → logprob: -6.397646903991699
    5. '```' → logprob: -6.522646903991699
    6. 'class' → logprob: -6.647646903991699
    7. '#' → logprob: -7.022646903991699
    8. 'from' → logprob: -7.272646903991699
    9. 'n' → logprob: -7.772646903991699
    10. '

' → logprob: -7.897646903991699

Token 579: ' -' (ID: 533)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5709583759307861
    2. '#' → logprob: -1.4459583759307861
    3. '
' → logprob: -2.820958375930786
    4. ':' → logprob: -2.945958375930786
    5. '```' → logprob: -3.320958375930786
    6. 'import' → logprob: -4.070958137512207
    7. ':
' → logprob: -4.695958137512207
    8. 's' → logprob: -5.070958137512207
    9. ',' → logprob: -6.195958137512207
    10. ')' → logprob: -6.320958137512207

Token 580: ' Supp' (ID: 20631)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3326949179172516
    2. ' #' → logprob: -2.0826950073242188
    3. 'def' → logprob: -2.5826950073242188
    4. 'import' → logprob: -3.7076950073242188
    5. 'from' → logprob: -4.332695007324219
    6. ' def' → logprob: -4.457695007324219
    7. '   ' → logprob: -4.832695007324219
    8. ' for' → logprob: -5.332695007324219
    9. ' ' → logprob: -5.832695007324219
    10. 'for' → logprob: -6.082695007324219

Token 581: 'os' (ID: 365)
  Prédit: 'lement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lement' → logprob: -0.8926191329956055
    2. 'lé' → logprob: -0.8926191329956055
    3. 'l' → logprob: -2.7676191329956055
    4. '#' → logprob: -3.5176191329956055
    5. 'os' → logprob: -4.5176191329956055
    6. 'ément' → logprob: -4.7676191329956055
    7. 'pl' → logprob: -5.0176191329956055
    8. 'lu' → logprob: -5.1426191329956055
    9. 'lus' → logprob: -5.3926191329956055
    10. 'lim' → logprob: -5.5176191329956055

Token 582: 'ons' (ID: 1808)
  Prédit: 'os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'os' → logprob: -0.05197841674089432
    2. 'ose' → logprob: -3.551978349685669
    3. 'oser' → logprob: -5.051978588104248
    4. '#' → logprob: -5.676978588104248
    5. 'é' → logprob: -5.926978588104248
    6. 'posé' → logprob: -6.301978588104248
    7. 'osing' → logprob: -6.426978588104248
    8. 'poser' → logprob: -6.801978588104248
    9. 'osed' → logprob: -7.176978588104248
    10. 'pos' → logprob: -7.176978588104248

Token 583: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.11774618178606033
    2. ' on' → logprob: -2.992746114730835
    3. ' ' → logprob: -4.617746353149414
    4. '   ' → logprob: -4.867746353149414
    5. ' =' → logprob: -4.992746353149414
    6. 'que' → logprob: -5.367746353149414
    7. ' qu' → logprob: -5.617746353149414
    8. 'on' → logprob: -6.117746353149414
    9. ' la' → logprob: -6.117746353149414
    10. ' une' → logprob: -6.117746353149414

Token 584: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.8971754908561707
    2. ' on' → logprob: -1.0221755504608154
    3. ' k' → logprob: -2.0221755504608154
    4. 'on' → logprob: -4.147175312042236
    5. ' l' → logprob: -4.147175312042236
    6. ' nous' → logprob: -4.397175312042236
    7. 'k' → logprob: -4.647175312042236
    8. ' le' → logprob: -4.897175312042236
    9. ' les' → logprob: -5.272175312042236
    10. 'la' → logprob: -5.397175312042236

Token 585: ' surface' (ID: 9753)
  Prédit: ' solution'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' solution' → logprob: -1.5095839500427246
    2. ' #' → logprob: -2.5095839500427246
    3. '#' → logprob: -2.6345839500427246
    4. 'com' → logprob: -2.8845839500427246
    5. ' taille' → logprob: -3.3845839500427246
    6. ' suite' → logprob: -3.3845839500427246
    7. ' s' → logprob: -3.3845839500427246
    8. ' ' → logprob: -3.3845839500427246
    9. ' sélection' → logprob: -3.3845839500427246
    10. ' def' → logprob: -3.6345839500427246

Token 586: ' dim' (ID: 6051)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4641309380531311
    2. ' minimale' → logprob: -1.8391308784484863
    3. ' est' → logprob: -2.5891308784484863
    4. ' +=' → logprob: -3.7141308784484863
    5. '#' → logprob: -3.7141308784484863
    6. '=' → logprob: -3.8391308784484863
    7. ' #' → logprob: -4.089130878448486
    8. ' totale' → logprob: -4.214130878448486
    9. ' minimal' → logprob: -4.839130878448486
    10. ' s' → logprob: -5.214130878448486

Token 587: 'inue' (ID: 9329)
  Prédit: 'inue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inue' → logprob: -0.14232924580574036
    2. '=' → logprob: -2.517329216003418
    3. 'it' → logprob: -3.517329216003418
    4. ' =' → logprob: -5.517329216003418
    5. 'ite' → logprob: -5.517329216003418
    6. 'ine' → logprob: -5.767329216003418
    7. 'e' → logprob: -6.392329216003418
    8. 'ité' → logprob: -7.017329216003418
    9. 'inie' → logprob: -7.017329216003418
    10. 'i' → logprob: -7.142329216003418

Token 588: ' quand' (ID: 18026)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.41802978515625
    2. ' progressivement' → logprob: -1.41802978515625
    3. ' d' → logprob: -2.16802978515625
    4. 'e' → logprob: -2.29302978515625
    5. ' de' → logprob: -2.29302978515625
    6. ' avec' → logprob: -3.91802978515625
    7. 'nt' → logprob: -4.04302978515625
    8. '=' → logprob: -4.16802978515625
    9. 's' → logprob: -4.54302978515625
    10. 'de' → logprob: -4.66802978515625

Token 589: ' on' (ID: 402)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.09438346326351166
    2. ' on' → logprob: -2.594383478164673
    3. 'k' → logprob: -5.094383239746094
    4. 'l' → logprob: -5.344383239746094
    5. ''on' → logprob: -5.844383239746094
    6. 'la' → logprob: -7.844383239746094
    7. 'le' → logprob: -8.344383239746094
    8. ' ' → logprob: -8.594383239746094
    9. ' l' → logprob: -9.219383239746094
    10. ' k' → logprob: -9.594383239746094

Token 590: ' prend' (ID: 37463)
  Prédit: 'aj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'aj' → logprob: -0.24118761718273163
    2. 'expl' → logprob: -3.491187572479248
    3. 'part' → logprob: -3.866187572479248
    4. 'expand' → logprob: -3.866187572479248
    5. 'sup' → logprob: -3.991187572479248
    6. 'ret' → logprob: -4.116187572479248
    7. ' ajoute' → logprob: -4.366187572479248
    8. 'agr' → logprob: -4.616187572479248
    9. 'en' → logprob: -4.616187572479248
    10. 'cho' → logprob: -4.991187572479248

Token 591: ' plus' (ID: 2932)
  Prédit: ' plus'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' plus' → logprob: -1.0639598369598389
    2. ' des' → logprob: -1.3139598369598389
    3. ' les' → logprob: -2.063959836959839
    4. 'plus' → logprob: -2.688959836959839
    5. ' un' → logprob: -2.813959836959839
    6. 'un' → logprob: -3.438959836959839
    7. ' une' → logprob: -4.438960075378418
    8. 'les' → logprob: -4.563960075378418
    9. 'une' → logprob: -4.688960075378418
    10. 'des' → logprob: -4.938960075378418

Token 592: ' d' (ID: 272)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.28690609335899353
    2. 'de' → logprob: -1.661906123161316
    3. 'ieurs' → logprob: -4.0369062423706055
    4. '+' → logprob: -4.4119062423706055
    5. '_de' → logprob: -5.1619062423706055
    6. '```' → logprob: -5.2869062423706055
    7. 'import' → logprob: -5.5369062423706055
    8. ' cubes' → logprob: -5.7869062423706055
    9. ' +' → logprob: -6.5369062423706055
    10. '   ' → logprob: -6.6619062423706055

Token 593: ''ar' (ID: 54307)
  Prédit: ''un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''un' → logprob: -0.6319005489349365
    2. 'e' → logprob: -1.8819005489349365
    3. 'adj' → logprob: -2.2569005489349365
    4. 'es' → logprob: -2.6319005489349365
    5. ''une' → logprob: -3.5069005489349365
    6. 'un' → logprob: -3.7569005489349365
    7. ''' → logprob: -4.131900787353516
    8. ' un' → logprob: -4.631900787353516
    9. ' adj' → logprob: -4.631900787353516
    10. ''ad' → logprob: -4.881900787353516

Token 594: 'êtes' (ID: 23720)
  Prédit: 'êtes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êtes' → logprob: -0.01164611428976059
    2. 'r' → logprob: -5.511646270751953
    3. 'c' → logprob: -6.011646270751953
    4. 'g' → logprob: -7.011646270751953
    5. 'cs' → logprob: -7.011646270751953
    6. 'êt' → logprob: -7.636646270751953
    7. 'ètes' → logprob: -7.636646270751953
    8. 'ête' → logprob: -7.761646270751953
    9. 'edges' → logprob: -8.136646270751953
    10. 'êtres' → logprob: -8.636646270751953

Token 595: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.1227961778640747
    2. ':' → logprob: -1.6227961778640747
    3. ':
' → logprob: -1.7477961778640747
    4. '
' → logprob: -2.497796058654785
    5. '_positions' → logprob: -2.747796058654785
    6. '#' → logprob: -3.497796058654785
    7. '

' → logprob: -3.997796058654785
    8. 'import' → logprob: -4.122796058654785
    9. ' =' → logprob: -4.497796058654785
    10. 's' → logprob: -4.747796058654785

Token 596: ' donc' (ID: 14206)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.10029713064432144
    2. ' #' → logprob: -3.225297212600708
    3. ' ' → logprob: -3.850297212600708
    4. ' mais' → logprob: -5.350296974182129
    5. ',' → logprob: -5.475296974182129
    6. ' donc' → logprob: -5.600296974182129
    7. ' on' → logprob: -6.100296974182129
    8. ' et' → logprob: -6.350296974182129
    9. ' s' → logprob: -6.350296974182129
    10. '...' → logprob: -6.475296974182129

Token 597: ' on' (ID: 402)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6457012891769409
    2. ' on' → logprob: -1.020701289176941
    3. ' #' → logprob: -2.7707014083862305
    4. 'on' → logprob: -3.3957014083862305
    5. ' la' → logprob: -4.6457014083862305
    6. 'import' → logprob: -7.1457014083862305
    7. '   ' → logprob: -7.1457014083862305
    8. ' ' → logprob: -7.3957014083862305
    9. 'le' → logprob: -7.3957014083862305
    10. 'la' → logprob: -7.5207014083862305

Token 598: ' veut' (ID: 41653)
  Prédit: ' peux'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' peux' → logprob: -1.4385863542556763
    2. '#' → logprob: -1.5635863542556763
    3. 'pour' → logprob: -2.1885862350463867
    4. ' #' → logprob: -2.4385862350463867
    5. ' continue' → logprob: -2.5635862350463867
    6. ' pour' → logprob: -2.6885862350463867
    7. ' pourra' → logprob: -3.1885862350463867
    8. ' peut' → logprob: -3.6885862350463867
    9. 'continue' → logprob: -4.188586235046387
    10. 'contin' → logprob: -4.313586235046387

Token 599: ' des' (ID: 731)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.0615227222442627
    2. 'prendre' → logprob: -2.0615227222442627
    3. ' maxim' → logprob: -2.5615227222442627
    4. ' prendre' → logprob: -2.9365227222442627
    5. 'expl' → logprob: -3.1865227222442627
    6. 'une' → logprob: -3.3115227222442627
    7. ' choisir' → logprob: -3.5615227222442627
    8. ' explorer' → logprob: -3.5615227222442627
    9. ' privilég' → logprob: -3.8115227222442627
    10. 'tr' → logprob: -3.9365227222442627

Token 600: ' sous' (ID: 14487)
  Prédit: 'ense'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ense' → logprob: -1.3457958698272705
    2. 'c' → logprob: -1.4707958698272705
    3. 'positions' → logprob: -1.9707958698272705
    4. 's' → logprob: -2.3457958698272705
    5. 'clusters' → logprob: -2.8457958698272705
    6. ' ensembles' → logprob: -3.5957958698272705
    7. 'structures' → logprob: -3.7207958698272705
    8. ' somm' → logprob: -3.9707958698272705
    9. 'group' → logprob: -4.095795631408691
    10. ' sous' → logprob: -4.345795631408691

Token 601: '-' (ID: 12)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.09039817750453949
    2. 'set' → logprob: -3.715398073196411
    3. '_graph' → logprob: -3.840398073196411
    4. 'graph' → logprob: -4.09039831161499
    5. ' _' → logprob: -4.59039831161499
    6. 'sets' → logprob: -5.09039831161499
    7. '_set' → logprob: -5.84039831161499
    8. '_sets' → logprob: -7.09039831161499
    9. '-' → logprob: -7.34039831161499
    10. 'ensemble' → logprob: -7.46539831161499

Token 602: 'graph' (ID: 7978)
  Prédit: 'graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.07273907959461212
    2. 'ense' → logprob: -3.0727391242980957
    3. 'gr' → logprob: -4.447739124298096
    4. 'graphs' → logprob: -5.447739124298096
    5. '-' → logprob: -5.947739124298096
    6. '_graph' → logprob: -5.947739124298096
    7. 'ensemble' → logprob: -6.947739124298096
    8. '_' → logprob: -7.447739124298096
    9. 'sets' → logprob: -7.947739124298096
    10. ' graph' → logprob: -8.072738647460938

Token 603: 'es' (ID: 268)
  Prédit: 'raph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'raph' → logprob: -0.028577281162142754
    2. 'rap' → logprob: -4.4035773277282715
    3. 'r' → logprob: -4.7785773277282715
    4. 'h' → logprob: -6.5285773277282715
    5. 'ets' → logprob: -6.5285773277282715
    6. 'aph' → logprob: -6.5285773277282715
    7. 'aphe' → logprob: -6.9035773277282715
    8. '_' → logprob: -7.9035773277282715
    9. '#' → logprob: -8.778576850891113
    10. 's' → logprob: -8.903576850891113

Token 604: ' comple' (ID: 2149)
  Prédit: 'conn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'conn' → logprob: -0.5423767566680908
    2. '_selected' → logprob: -2.417376756668091
    3. ' =' → logprob: -2.917376756668091
    4. '_conn' → logprob: -3.042376756668091
    5. '#' → logprob: -3.792376756668091
    6. 'selected' → logprob: -4.042376518249512
    7. ',' → logprob: -4.042376518249512
    8. 'import' → logprob: -4.042376518249512
    9. 'ind' → logprob: -4.167376518249512
    10. 'adj' → logprob: -4.417376518249512

Token 605: 'ts' (ID: 1561)
  Prédit: 'ts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ts' → logprob: -0.002066637622192502
    2. 't' → logprob: -6.252066612243652
    3. 'tes' → logprob: -9.252066612243652
    4. '```' → logprob: -10.627066612243652
    5. 's' → logprob: -12.627066612243652
    6. 'ets' → logprob: -13.127066612243652
    7. 'te' → logprob: -13.252066612243652
    8. '#' → logprob: -13.252066612243652
    9. ' ts' → logprob: -13.502066612243652
    10. 'tsi' → logprob: -14.127066612243652

Token 606: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.23064444959163666
    2. '
' → logprob: -2.480644464492798
    3. ':
' → logprob: -2.855644464492798
    4. ':' → logprob: -4.230644226074219
    5. '

' → logprob: -4.730644226074219
    6. '#' → logprob: -4.730644226074219
    7. '```' → logprob: -5.105644226074219
    8. '\' → logprob: -5.230644226074219
    9. 'import' → logprob: -5.230644226074219
    10. 's' → logprob: -5.730644226074219

Token 607: ' c' (ID: 274)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.08075372874736786
    2. ' #' → logprob: -3.455753803253174
    3. ' ' → logprob: -5.205753803253174
    4. 'def' → logprob: -5.330753803253174
    5. ',' → logprob: -5.705753803253174
    6. 'import' → logprob: -5.705753803253174
    7. ')' → logprob: -5.705753803253174
    8. ' s' → logprob: -5.830753803253174
    9. '...' → logprob: -6.330753803253174
    10. 's' → logprob: -6.330753803253174

Token 608: ''est' (ID: 6616)
  Prédit: 'om'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'om' → logprob: -1.1028255224227905
    2. 'omme' → logprob: -1.4778255224227905
    3. 'ar' → logprob: -2.35282564163208
    4. 'omm' → logprob: -2.72782564163208
    5. 'on' → logprob: -2.85282564163208
    6. ''est' → logprob: -2.97782564163208
    7. 'ont' → logprob: -3.22782564163208
    8. 'omp' → logprob: -3.35282564163208
    9. 'onn' → logprob: -3.72782564163208
    10. '-à' → logprob: -4.22782564163208

Token 609: ' difficile' (ID: 42473)
  Prédit: '-à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-à' → logprob: -0.26514965295791626
    2. ' à' → logprob: -3.0151495933532715
    3. ' possible' → logprob: -3.1401495933532715
    4. 'à' → logprob: -3.3901495933532715
    5. 'possible' → logprob: -3.6401495933532715
    6. ' une' → logprob: -4.5151495933532715
    7. ' probablement' → logprob: -4.8901495933532715
    8. '#' → logprob: -5.2651495933532715
    9. 'moins' → logprob: -5.3901495933532715
    10. 'une' → logprob: -5.5151495933532715

Token 610: '.
' (ID: 558)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.1101911067962646
    2. 'import' → logprob: -1.7351911067962646
    3. ':' → logprob: -2.1101911067962646
    4. '
' → logprob: -2.2351911067962646
    5. '#' → logprob: -2.4851911067962646
    6. ':
' → logprob: -2.4851911067962646
    7. '```' → logprob: -3.9851911067962646
    8. ',' → logprob: -4.235191345214844
    9. '.' → logprob: -4.235191345214844
    10. '

' → logprob: -4.485191345214844

Token 611: '#
' (ID: 11240)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.041456699371338
    2. ':
' → logprob: -1.166456699371338
    3. '
' → logprob: -1.791456699371338
    4. ':' → logprob: -2.041456699371338
    5. '```' → logprob: -4.791456699371338
    6. '#' → logprob: -4.916456699371338
    7. 'import' → logprob: -5.791456699371338
    8. '\' → logprob: -6.041456699371338
    9. '

' → logprob: -6.166456699371338
    10. ',
' → logprob: -6.291456699371338

Token 612: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.250083327293396
    2. 'import' → logprob: -2.3750834465026855
    3. '#' → logprob: -2.6250834465026855
    4. 'n' → logprob: -3.7500834465026855
    5. '```' → logprob: -4.1250834465026855
    6. 'positions' → logprob: -5.3750834465026855
    7. 's' → logprob: -5.6250834465026855
    8. '
' → logprob: -6.7500834465026855
    9. ' 
' → logprob: -6.7500834465026855
    10. '\n' → logprob: -7.2500834465026855

Token 613: ' Simpl' (ID: 92258)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.013251050375401974
    2. 'class' → logprob: -4.513250827789307
    3. 'import' → logprob: -6.513250827789307
    4. 's' → logprob: -8.138251304626465
    5. '#' → logprob: -8.513251304626465
    6. 'n' → logprob: -9.013251304626465
    7. '```' → logprob: -9.888251304626465
    8. 'from' → logprob: -10.513251304626465
    9. 'k' → logprob: -11.013251304626465
    10. 'positions' → logprob: -13.388251304626465

Token 614: 'ification' (ID: 3166)
  Prédit: 'ification'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ification' → logprob: -0.03191005438566208
    2. 'ified' → logprob: -4.281909942626953
    3. 'ifié' → logprob: -5.031909942626953
    4. '#' → logprob: -5.781909942626953
    5. 'ify' → logprob: -5.906909942626953
    6. 'if' → logprob: -6.656909942626953
    7. 'import' → logprob: -7.031909942626953
    8. 'e' → logprob: -7.031909942626953
    9. 'ité' → logprob: -7.656909942626953
    10. 'ifie' → logprob: -7.906909942626953

Token 615: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05659985914826393
    2. 'import' → logprob: -3.9315998554229736
    3. 'def' → logprob: -4.181600093841553
    4. '#' → logprob: -4.681600093841553
    5. ':
' → logprob: -5.306600093841553
    6. ' :' → logprob: -6.056600093841553
    7. ' =' → logprob: -7.556600093841553
    8. '```' → logprob: -7.556600093841553
    9. ':

' → logprob: -8.056599617004395
    10. '.' → logprob: -8.056599617004395

Token 616: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.0528690367937088
    2. 'def' → logprob: -3.3028690814971924
    3. 'import' → logprob: -4.302868843078613
    4. 'n' → logprob: -7.677868843078613
    5. 's' → logprob: -8.677868843078613
    6. 'from' → logprob: -9.177868843078613
    7. '#
' → logprob: -9.177868843078613
    8. ' #' → logprob: -9.552868843078613
    9. 'class' → logprob: -9.677868843078613
    10. '
' → logprob: -9.927868843078613

Token 617: ' -' (ID: 533)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.11631505191326141
    2. '#' → logprob: -2.3663151264190674
    3. 'import' → logprob: -4.741314888000488
    4. 'class' → logprob: -5.616314888000488
    5. 'from' → logprob: -6.866314888000488
    6. 'n' → logprob: -6.991314888000488
    7. ' def' → logprob: -7.866314888000488
    8. '
' → logprob: -7.991314888000488
    9. 's' → logprob: -8.116314888000488
    10. ' #' → logprob: -8.616314888000488

Token 618: ' Puis' (ID: 87717)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4895744025707245
    2. 'On' → logprob: -1.1145744323730469
    3. 'import' → logprob: -4.239574432373047
    4. 'def' → logprob: -4.364574432373047
    5. 'from' → logprob: -5.114574432373047
    6. 'Pour' → logprob: -5.364574432373047
    7. 'Constru' → logprob: -5.614574432373047
    8. 'Nous' → logprob: -5.739574432373047
    9. ' on' → logprob: -6.114574432373047
    10. 'Contin' → logprob: -6.364574432373047

Token 619: 'que' (ID: 1126)
  Prédit: 'our'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'our' → logprob: -0.9841974973678589
    2. '#' → logprob: -1.1091974973678589
    3. 'def' → logprob: -1.8591974973678589
    4. 'ours' → logprob: -2.9841976165771484
    5. 'uis' → logprob: -3.3591976165771484
    6. 'ro' → logprob: -3.8591976165771484
    7. 'r' → logprob: -4.734197616577148
    8. 's' → logprob: -5.109197616577148
    9. 'ur' → logprob: -5.359197616577148
    10. 'u' → logprob: -6.234197616577148

Token 620: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.2953182458877563
    2. 'le' → logprob: -1.7953182458877563
    3. ' les' → logprob: -2.170318126678467
    4. 'la' → logprob: -2.295318126678467
    5. ' le' → logprob: -2.420318126678467
    6. 'les' → logprob: -2.670318126678467
    7. ' on' → logprob: -2.920318126678467
    8. '#' → logprob: -3.295318126678467
    9. 'on' → logprob: -3.545318126678467
    10. ' nous' → logprob: -3.670318126678467

Token 621: ' surface' (ID: 9753)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4211330711841583
    2. 'plus' → logprob: -2.546133041381836
    3. 'tail' → logprob: -3.046133041381836
    4. 'import' → logprob: -3.296133041381836
    5. 'mé' → logprob: -3.421133041381836
    6. 'position' → logprob: -3.796133041381836
    7. 's' → logprob: -3.921133041381836
    8. 'surface' → logprob: -4.296133041381836
    9. 'problem' → logprob: -4.421133041381836
    10. 'me' → logprob: -4.546133041381836

Token 622: ' dépend' (ID: 68660)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.3193410634994507
    2. ' =' → logprob: -1.4443410634994507
    3. '#' → logprob: -1.6943410634994507
    4. ' est' → logprob: -1.9443410634994507
    5. ' minimale' → logprob: -2.8193411827087402
    6. 'est' → logprob: -3.0693411827087402
    7. '-' → logprob: -5.06934118270874
    8. 'max' → logprob: -5.19434118270874
    9. 'de' → logprob: -5.19434118270874
    10. 'def' → logprob: -5.31934118270874

Token 623: ' uniquement' (ID: 65527)
  Prédit: ' uniquement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' uniquement' → logprob: -0.09681779891252518
    2. ' seulement' → logprob: -3.9718177318573
    3. ' essentiellement' → logprob: -4.221817970275879
    4. ' des' → logprob: -4.346817970275879
    5. ' de' → logprob: -4.596817970275879
    6. ' principalement' → logprob: -4.721817970275879
    7. ' du' → logprob: -4.971817970275879
    8. ' surtout' → logprob: -4.971817970275879
    9. 'uni' → logprob: -5.096817970275879
    10. 'de' → logprob: -6.471817970275879

Token 624: ' du' (ID: 1462)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.7722190022468567
    2. ' de' → logprob: -2.022218942642212
    3. 'de' → logprob: -2.147218942642212
    4. ' sur' → logprob: -2.522218942642212
    5. 'des' → logprob: -2.647218942642212
    6. ' du' → logprob: -2.772218942642212
    7. 'sur' → logprob: -3.147218942642212
    8. 'du' → logprob: -3.897218942642212
    9. ' uniquement' → logprob: -5.397219181060791
    10. 'import' → logprob: -5.397219181060791

Token 625: ' nombre' (ID: 9733)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.7383402585983276
    2. 'nombre' → logprob: -1.1133402585983276
    3. ' nombre' → logprob: -2.113340377807617
    4. ' k' → logprob: -3.863340377807617
    5. 's' → logprob: -4.363340377807617
    6. 'c' → logprob: -4.738340377807617
    7. 'la' → logprob: -4.863340377807617
    8. '#' → logprob: -5.738340377807617
    9. 'cube' → logprob: -6.113340377807617
    10. 'l' → logprob: -6.238340377807617

Token 626: ' d' (ID: 272)
  Prédit: '_de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_de' → logprob: -0.8151162266731262
    2. ' de' → logprob: -1.5651161670684814
    3. '_des' → logprob: -2.5651161670684814
    4. 'de' → logprob: -2.5651161670684814
    5. 'des' → logprob: -2.8151161670684814
    6. '_' → logprob: -2.9401161670684814
    7. ' des' → logprob: -2.9401161670684814
    8. '_d' → logprob: -4.3151164054870605
    9. ' d' → logprob: -4.9401164054870605
    10. 'd' → logprob: -6.3151164054870605

Token 627: ''ar' (ID: 54307)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.6806817054748535
    2. ' cubes' → logprob: -1.3056817054748535
    3. '_c' → logprob: -2.3056817054748535
    4. 'ar' → logprob: -3.8056817054748535
    5. 'positions' → logprob: -3.8056817054748535
    6. '_' → logprob: -4.1806817054748535
    7. ' ar' → logprob: -4.4306817054748535
    8. ' somm' → logprob: -4.6806817054748535
    9. 's' → logprob: -4.8056817054748535
    10. '_s' → logprob: -4.8056817054748535

Token 628: 'êtes' (ID: 23720)
  Prédit: 'êtes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êtes' → logprob: -0.09793951362371445
    2. 'ê' → logprob: -2.9729394912719727
    3. 'êt' → logprob: -4.472939491271973
    4. 'r' → logprob: -4.847939491271973
    5. 't' → logprob: -5.472939491271973
    6. 'êts' → logprob: -5.972939491271973
    7. '^' → logprob: -5.972939491271973
    8. 'g' → logprob: -6.597939491271973
    9. 'î' → logprob: -6.722939491271973
    10. '_' → logprob: -7.097939491271973

Token 629: ' dans' (ID: 2671)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.417531818151474
    2. ',' → logprob: -2.167531728744507
    3. ' _' → logprob: -2.292531728744507
    4. ' ' → logprob: -3.042531728744507
    5. ' ,' → logprob: -3.292531728744507
    6. ')' → logprob: -4.417531967163086
    7. ' )' → logprob: -5.042531967163086
    8. '  ' → logprob: -5.792531967163086
    9. 's' → logprob: -6.292531967163086
    10. '_s' → logprob: -6.417531967163086

Token 630: ' le' (ID: 505)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -1.0967063903808594
    2. 'la' → logprob: -1.4717063903808594
    3. 'l' → logprob: -1.5967063903808594
    4. ' la' → logprob: -2.2217063903808594
    5. ' le' → logprob: -2.5967063903808594
    6. ' l' → logprob: -3.4717063903808594
    7. 'les' → logprob: -4.971706390380859
    8. 'selected' → logprob: -5.221706390380859
    9. ' selected' → logprob: -6.971706390380859
    10. 'c' → logprob: -7.221706390380859

Token 631: ' sous' (ID: 14487)
  Prédit: 'gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gr' → logprob: -0.6390732526779175
    2. 's' → logprob: -1.1390732526779175
    3. 'graph' → logprob: -2.389073371887207
    4. ' sous' → logprob: -3.514073371887207
    5. ' grap' → logprob: -4.889073371887207
    6. 'sub' → logprob: -5.514073371887207
    7. 'g' → logprob: -5.514073371887207
    8. 'subset' → logprob: -5.514073371887207
    9. 'sé' → logprob: -5.639073371887207
    10. ' graph' → logprob: -6.389073371887207

Token 632: '-gr' (ID: 18511)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.09200127422809601
    2. 'graph' → logprob: -3.46700119972229
    3. '_graph' → logprob: -3.46700119972229
    4. '-' → logprob: -4.342001438140869
    5. '_gr' → logprob: -5.717001438140869
    6. ' _' → logprob: -6.092001438140869
    7. 'ensemble' → logprob: -6.467001438140869
    8. '_g' → logprob: -6.592001438140869
    9. 'set' → logprob: -6.842001438140869
    10. '_set' → logprob: -7.592001438140869

Token 633: 'aphe' (ID: 98856)
  Prédit: 'aphe'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aphe' → logprob: -0.3927498161792755
    2. 'aph' → logprob: -1.1427497863769531
    3. 'ap' → logprob: -6.142749786376953
    4. '#' → logprob: -6.267749786376953
    5. 'def' → logprob: -8.017749786376953
    6. '   ' → logprob: -8.017749786376953
    7. '`' → logprob: -8.892749786376953
    8. '_' → logprob: -9.142749786376953
    9. 'p' → logprob: -9.392749786376953
    10. 'ph' → logprob: -9.517749786376953

Token 634: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08996246010065079
    2. ' ,' → logprob: -2.8399624824523926
    3. '_selected' → logprob: -5.089962482452393
    4. ' selected' → logprob: -5.214962482452393
    5. 'selected' → logprob: -5.339962482452393
    6. '#' → logprob: -6.089962482452393
    7. '.' → logprob: -6.839962482452393
    8. ',
' → logprob: -6.839962482452393
    9. ' s' → logprob: -7.214962482452393
    10. ' sélection' → logprob: -7.339962482452393

Token 635: ' pour' (ID: 1930)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.07426144182682037
    2. ' #' → logprob: -2.824261426925659
    3. ' on' → logprob: -4.824261665344238
    4. ' ' → logprob: -6.074261665344238
    5. ' s' → logprob: -7.199261665344238
    6. ' ' → logprob: -8.824261665344238
    7. 'def' → logprob: -8.949261665344238
    8. 'import' → logprob: -8.949261665344238
    9. ' we' → logprob: -8.949261665344238
    10. ',' → logprob: -9.074261665344238

Token 636: ' minim' (ID: 23874)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.7769753336906433
    2. 'l' → logprob: -1.026975393295288
    3. 'les' → logprob: -3.651975393295288
    4. 'une' → logprob: -3.776975393295288
    5. ' k' → logprob: -3.901975393295288
    6. '#' → logprob: -4.151975154876709
    7. 'le' → logprob: -4.276975154876709
    8. ' le' → logprob: -4.276975154876709
    9. ' #' → logprob: -4.401975154876709
    10. ' chaque' → logprob: -4.526975154876709

Token 637: 'iser' (ID: 7466)
  Prédit: 'iser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iser' → logprob: -0.5216401815414429
    2. 'um' → logprob: -1.0216401815414429
    3. 'al' → logprob: -3.7716403007507324
    4. '#' → logprob: -5.271640300750732
    5. 'a' → logprob: -5.271640300750732
    6. '```' → logprob: -6.271640300750732
    7. 'umer' → logprob: -6.521640300750732
    8. 'ale' → logprob: -6.896640300750732
    9. 'izer' → logprob: -7.021640300750732
    10. 'alité' → logprob: -7.021640300750732

Token 638: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.19102130830287933
    2. 'la' → logprob: -2.066021203994751
    3. 'l' → logprob: -4.19102144241333
    4. ' l' → logprob: -4.31602144241333
    5. '_la' → logprob: -4.81602144241333
    6. 'le' → logprob: -5.56602144241333
    7. ' le' → logprob: -5.81602144241333
    8. '_' → logprob: -6.81602144241333
    9. '_l' → logprob: -7.31602144241333
    10. '_le' → logprob: -7.56602144241333

Token 639: ' surface' (ID: 9753)
  Prédit: 'surface'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'surface' → logprob: -0.2258436530828476
    2. ' surface' → logprob: -1.6008436679840088
    3. 's' → logprob: -8.72584342956543
    4. '_surface' → logprob: -9.22584342956543
    5. 'surf' → logprob: -9.97584342956543
    6. ' ' → logprob: -10.60084342956543
    7. 'face' → logprob: -10.97584342956543
    8. 'sur' → logprob: -10.97584342956543
    9. 'distance' → logprob: -11.22584342956543
    10. '#' → logprob: -11.72584342956543

Token 640: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.015343865379691124
    2. ' ,' → logprob: -4.76534366607666
    3. '#' → logprob: -5.64034366607666
    4. ' =' → logprob: -7.26534366607666
    5. ' #' → logprob: -7.51534366607666
    6. 'import' → logprob: -8.14034366607666
    7. ':' → logprob: -8.64034366607666
    8. 's' → logprob: -8.76534366607666
    9. 'def' → logprob: -8.76534366607666
    10. ' s' → logprob: -8.89034366607666

Token 641: ' on' (ID: 402)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.007242291234433651
    2. ' on' → logprob: -5.632242202758789
    3. ' il' → logprob: -6.507242202758789
    4. ' #' → logprob: -6.632242202758789
    5. 'on' → logprob: -7.507242202758789
    6. 'il' → logprob: -8.382242202758789
    7. ' nous' → logprob: -11.257242202758789
    8. 'nous' → logprob: -11.257242202758789
    9. 'import' → logprob: -12.007242202758789
    10. ' ' → logprob: -13.382242202758789

Token 642: ' cherche' (ID: 52345)
  Prédit: 'pe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pe' → logprob: -0.42936596274375916
    2. '#' → logprob: -1.3043659925460815
    3. 'cherche' → logprob: -3.554365873336792
    4. 'pr' → logprob: -4.429366111755371
    5. ' peut' → logprob: -4.554366111755371
    6. 'va' → logprob: -5.054366111755371
    7. 'do' → logprob: -5.679366111755371
    8. 'cho' → logprob: -5.804366111755371
    9. 'import' → logprob: -6.054366111755371
    10. 'dev' → logprob: -6.429366111755371

Token 643: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.29923754930496216
    2. ' un' → logprob: -2.1742374897003174
    3. ' des' → logprob: -3.0492374897003174
    4. 'à' → logprob: -3.7992374897003174
    5. ' une' → logprob: -3.9242374897003174
    6. ' la' → logprob: -4.4242377281188965
    7. ' simplement' → logprob: -4.4242377281188965
    8. ' de' → logprob: -4.7992377281188965
    9. ' a' → logprob: -5.4242377281188965
    10. ' les' → logprob: -6.0492377281188965

Token 644: ' maxim' (ID: 29045)
  Prédit: 'prendre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prendre' → logprob: -1.0431991815567017
    2. 'aj' → logprob: -1.6681991815567017
    3. 'max' → logprob: -1.7931991815567017
    4. 'tr' → logprob: -2.793199062347412
    5. ' prendre' → logprob: -2.793199062347412
    6. 'cho' → logprob: -3.418199062347412
    7. 'sé' → logprob: -3.793199062347412
    8. '#' → logprob: -3.793199062347412
    9. 'pr' → logprob: -4.793199062347412
    10. 'min' → logprob: -4.793199062347412

Token 645: 'iser' (ID: 7466)
  Prédit: 'iser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iser' → logprob: -0.005899641662836075
    2. 'izer' → logprob: -5.380899429321289
    3. 'al' → logprob: -7.505899429321289
    4. 'er' → logprob: -8.130899429321289
    5. 'is' → logprob: -8.880899429321289
    6. 'aiser' → logprob: -9.255899429321289
    7. 'ize' → logprob: -9.880899429321289
    8. '#' → logprob: -10.505899429321289
    9. 'a' → logprob: -11.005899429321289
    10. 'ser' → logprob: -11.130899429321289

Token 646: ' le' (ID: 505)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.9074843525886536
    2. ' le' → logprob: -1.6574842929840088
    3. 'les' → logprob: -1.7824842929840088
    4. 'le' → logprob: -2.032484292984009
    5. 'l' → logprob: -2.782484292984009
    6. ' l' → logprob: -4.157484531402588
    7. ' la' → logprob: -4.282484531402588
    8. 'la' → logprob: -5.157484531402588
    9. 'len' → logprob: -5.532484531402588
    10. ' len' → logprob: -6.657484531402588

Token 647: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.7027846574783325
    2. 'nombre' → logprob: -0.7027846574783325
    3. 'adj' → logprob: -6.077784538269043
    4. 'edges' → logprob: -6.077784538269043
    5. 'nb' → logprob: -7.327784538269043
    6. ' edges' → logprob: -7.452784538269043
    7. ' nb' → logprob: -7.577784538269043
    8. ' nombres' → logprob: -7.827784538269043
    9. 'number' → logprob: -8.202784538269043
    10. ' number' → logprob: -8.202784538269043

Token 648: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.031772296875715256
    2. 'd' → logprob: -4.031772136688232
    3. '_d' → logprob: -5.031772136688232
    4. ' de' → logprob: -5.531772136688232
    5. '_' → logprob: -6.656772136688232
    6. ' ' → logprob: -7.906772136688232
    7. ' of' → logprob: -8.28177261352539
    8. 'de' → logprob: -8.28177261352539
    9. ' des' → logprob: -8.78177261352539
    10. '_de' → logprob: -8.90677261352539

Token 649: ''ar' (ID: 54307)
  Prédit: '_edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_edges' → logprob: -0.4107278883457184
    2. '_' → logprob: -1.410727858543396
    3. ' edges' → logprob: -3.7857279777526855
    4. '_ar' → logprob: -4.1607279777526855
    5. ' ar' → logprob: -4.2857279777526855
    6. 'edges' → logprob: -4.4107279777526855
    7. 'ar' → logprob: -4.7857279777526855
    8. ' _' → logprob: -5.4107279777526855
    9. '_are' → logprob: -5.7857279777526855
    10. '_neighbors' → logprob: -6.1607279777526855

Token 650: 'êtes' (ID: 23720)
  Prédit: 'êtes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êtes' → logprob: -0.0017328945687040687
    2. 'ê' → logprob: -7.00173282623291
    3. 'tes' → logprob: -7.75173282623291
    4. 'êts' → logprob: -9.62673282623291
    5. 'ètes' → logprob: -9.62673282623291
    6. 'ête' → logprob: -9.75173282623291
    7. 'êt' → logprob: -10.12673282623291
    8. 'êtres' → logprob: -10.37673282623291
    9. 't' → logprob: -11.00173282623291
    10. '^' → logprob: -11.25173282623291

Token 651: ' internes' (ID: 183434)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9019805788993835
    2. ')' → logprob: -1.2769806385040283
    3. '<|end|>' → logprob: -2.4019806385040283
    4. ' ' → logprob: -3.0269806385040283
    5. 'import' → logprob: -3.2769806385040283
    6. ',' → logprob: -3.6519806385040283
    7. 's' → logprob: -4.026980400085449
    8. '<|end|>' → logprob: -4.401980400085449
    9. ' =' → logprob: -4.526980400085449
    10. 'def' → logprob: -4.651980400085449

Token 652: ' dans' (ID: 2671)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6658145189285278
    2. ':' → logprob: -1.1658145189285278
    3. ':
' → logprob: -3.2908143997192383
    4. ' =' → logprob: -4.040814399719238
    5. '
' → logprob: -4.165814399719238
    6. '[' → logprob: -4.415814399719238
    7. '#' → logprob: -4.540814399719238
    8. 'import' → logprob: -4.665814399719238
    9. '(s' → logprob: -5.040814399719238
    10. 's' → logprob: -5.040814399719238

Token 653: ' le' (ID: 505)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -1.1905735731124878
    2. 'la' → logprob: -1.1905735731124878
    3. ' la' → logprob: -1.5655735731124878
    4. ' le' → logprob: -2.1905736923217773
    5. 'l' → logprob: -3.4405736923217773
    6. 'selected' → logprob: -4.690573692321777
    7. ' un' → logprob: -5.315573692321777
    8. ' l' → logprob: -5.315573692321777
    9. 'the' → logprob: -5.690573692321777
    10. 'un' → logprob: -5.815573692321777

Token 654: ' sous' (ID: 14487)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.41692978143692017
    2. ' sous' → logprob: -1.2919297218322754
    3. 'sub' → logprob: -3.4169297218322754
    4. 'subset' → logprob: -4.291929721832275
    5. 'ensemble' → logprob: -4.791929721832275
    6. '#' → logprob: -6.291929721832275
    7. '_s' → logprob: -6.541929721832275
    8. ' subset' → logprob: -6.541929721832275
    9. ' ensemble' → logprob: -6.916929721832275
    10. '_' → logprob: -7.291929721832275

Token 655: '-gr' (ID: 18511)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6723408699035645
    2. '_gr' → logprob: -0.9223408699035645
    3. '_graph' → logprob: -3.5473408699035645
    4. '-' → logprob: -3.7973408699035645
    5. '_-' → logprob: -4.2973408699035645
    6. 'graph' → logprob: -4.7973408699035645
    7. '_g' → logprob: -4.9223408699035645
    8. '-gr' → logprob: -5.7973408699035645
    9. '_s' → logprob: -6.1723408699035645
    10. '-_' → logprob: -6.1723408699035645

Token 656: 'aphe' (ID: 98856)
  Prédit: 'aphe'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aphe' → logprob: -0.07920822501182556
    2. 'aph' → logprob: -2.5792081356048584
    3. 'ap' → logprob: -8.329208374023438
    4. '_' → logprob: -10.704208374023438
    5. 'apho' → logprob: -10.829208374023438
    6. '#' → logprob: -10.954208374023438
    7. 'app' → logprob: -13.204208374023438
    8. '_ap' → logprob: -13.454208374023438
    9. 'a' → logprob: -13.704208374023438
    10. '```' → logprob: -13.829208374023438

Token 657: ' de' (ID: 334)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9136002659797668
    2. 'def' → logprob: -0.9136002659797668
    3. ':
' → logprob: -2.538600206375122
    4. '
' → logprob: -2.663600206375122
    5. '

' → logprob: -4.413600444793701
    6. '\' → logprob: -4.663600444793701
    7. 'import' → logprob: -4.788600444793701
    8. '[' → logprob: -5.788600444793701
    9. '\n' → logprob: -6.538600444793701
    10. ',' → logprob: -6.663600444793701

Token 658: ' taille' (ID: 41644)
  Prédit: 'tail'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tail' → logprob: -0.42785415053367615
    2. 'k' → logprob: -1.8028541803359985
    3. ' taille' → logprob: -2.302854061126709
    4. 'la' → logprob: -3.302854061126709
    5. ' k' → logprob: -4.302854061126709
    6. 's' → logprob: -4.552854061126709
    7. 'c' → logprob: -5.052854061126709
    8. 'size' → logprob: -5.802854061126709
    9. 'conn' → logprob: -6.052854061126709
    10. 'ta' → logprob: -6.302854061126709

Token 659: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.11298799514770508
    2. 'k' → logprob: -2.237987995147705
    3. '```' → logprob: -10.487987518310547
    4. ' _' → logprob: -10.862987518310547
    5. ' ' → logprob: -10.987987518310547
    6. '`' → logprob: -11.112987518310547
    7. ' ' → logprob: -11.112987518310547
    8. ' `' → logprob: -11.237987518310547
    9. '_k' → logprob: -11.237987518310547
    10. ' chosen' → logprob: -11.862987518310547

Token 660: '.
' (ID: 558)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.14650855958461761
    2. ':' → logprob: -3.1465084552764893
    3. '
' → logprob: -3.2715084552764893
    4. 'import' → logprob: -4.146508693695068
    5. '[' → logprob: -4.771508693695068
    6. '\' → logprob: -5.146508693695068
    7. '

' → logprob: -5.771508693695068
    8. ':
' → logprob: -6.021508693695068
    9. '[
' → logprob: -6.146508693695068
    10. '```' → logprob: -6.396508693695068

Token 661: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7574563026428223
    2. 'def' → logprob: -1.2574563026428223
    3. ':' → logprob: -1.8824563026428223
    4. ':
' → logprob: -2.8824563026428223
    5. '

' → logprob: -4.757456302642822
    6. '```' → logprob: -5.007456302642822
    7. 'import' → logprob: -5.757456302642822
    8. '(s' → logprob: -5.882456302642822
    9. '\' → logprob: -5.882456302642822
    10. '[' → logprob: -6.382456302642822

Token 662: ' -' (ID: 533)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5461233854293823
    2. '
' → logprob: -1.2961233854293823
    3. '

' → logprob: -2.546123504638672
    4. 'import' → logprob: -3.546123504638672
    5. '\' → logprob: -4.546123504638672
    6. 's' → logprob: -4.921123504638672
    7. '\n' → logprob: -5.296123504638672
    8. '```' → logprob: -5.546123504638672
    9. ':' → logprob: -5.921123504638672
    10. 'n' → logprob: -6.421123504638672

Token 663: ' Trou' (ID: 58947)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0575556717813015
    2. '#' → logprob: -3.557555675506592
    3. 'import' → logprob: -3.807555675506592
    4. 'from' → logprob: -5.557555675506592
    5. 'class' → logprob: -7.307555675506592
    6. 's' → logprob: -8.557555198669434
    7. '
' → logprob: -8.932555198669434
    8. '```' → logprob: -9.057555198669434
    9. 'n' → logprob: -9.682555198669434
    10. ' def' → logprob: -10.057555198669434

Token 664: 'ver' (ID: 445)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.5379735231399536
    2. '_' → logprob: -1.9129735231399536
    3. ')' → logprob: -2.037973403930664
    4. '=' → logprob: -2.787973403930664
    5. ' d' → logprob: -3.037973403930664
    6. ' #' → logprob: -3.287973403930664
    7. ' ' → logprob: -3.287973403930664
    8. ' max' → logprob: -3.412973403930664
    9. ' )' → logprob: -3.412973403930664
    10. 'er' → logprob: -3.537973403930664

Token 665: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.9511429071426392
    2. '_' → logprob: -1.2011429071426392
    3. ' le' → logprob: -2.2011427879333496
    4. ' _' → logprob: -3.4511427879333496
    5. 'le' → logprob: -3.7011427879333496
    6. '_le' → logprob: -3.7011427879333496
    7. ' la' → logprob: -4.07614278793335
    8. ' ' → logprob: -4.32614278793335
    9. ' des' → logprob: -4.32614278793335
    10. ' une' → logprob: -4.45114278793335

Token 666: ' sous' (ID: 14487)
  Prédit: ' connected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' connected' → logprob: -1.0128575563430786
    2. 'connected' → logprob: -1.0128575563430786
    3. 's' → logprob: -1.8878575563430786
    4. ' sous' → logprob: -2.887857437133789
    5. 'sub' → logprob: -4.512857437133789
    6. 'cl' → logprob: -5.262857437133789
    7. '_connected' → logprob: -5.262857437133789
    8. 'subset' → logprob: -5.262857437133789
    9. ' maximal' → logprob: -5.637857437133789
    10. '```' → logprob: -5.762857437133789

Token 667: '-gr' (ID: 18511)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0607965849339962
    2. ' _' → logprob: -3.9357964992523193
    3. '_graph' → logprob: -4.435796737670898
    4. '-' → logprob: -4.560796737670898
    5. 'graph' → logprob: -5.060796737670898
    6. '_-' → logprob: -5.185796737670898
    7. '#' → logprob: -6.810796737670898
    8. '_s' → logprob: -7.685796737670898
    9. '_set' → logprob: -7.935796737670898
    10. 'set' → logprob: -7.935796737670898

Token 668: 'aphe' (ID: 98856)
  Prédit: 'aphe'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aphe' → logprob: -0.08029739558696747
    2. 'aph' → logprob: -2.5802974700927734
    3. 'ap' → logprob: -7.955297470092773
    4. '#' → logprob: -8.205297470092773
    5. '_' → logprob: -8.205297470092773
    6. 'ép' → logprob: -10.205297470092773
    7. 'oupe' → logprob: -10.205297470092773
    8. 'aphore' → logprob: -10.330297470092773
    9. 'raph' → logprob: -10.455297470092773
    10. ')' → logprob: -10.580297470092773

Token 669: ' conn' (ID: 10850)
  Prédit: ' induced'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' induced' → logprob: -1.2372599840164185
    2. ' de' → logprob: -1.3622599840164185
    3. '_ind' → logprob: -2.362259864807129
    4. '_' → logprob: -2.362259864807129
    5. '_conn' → logprob: -3.487259864807129
    6. ' _' → logprob: -3.487259864807129
    7. ' complet' → logprob: -3.612259864807129
    8. 'conn' → logprob: -3.987259864807129
    9. 'de' → logprob: -4.112259864807129
    10. ' maximal' → logprob: -4.362259864807129

Token 670: 'exe' (ID: 70589)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3510584235191345
    2. 'ect' → logprob: -1.4760584831237793
    3. '_sub' → logprob: -4.976058483123779
    4. 'n' → logprob: -4.976058483123779
    5. 'ex' → logprob: -5.101058483123779
    6. 'exe' → logprob: -5.101058483123779
    7. '#' → logprob: -5.476058483123779
    8. '```' → logprob: -5.851058483123779
    9. '\' → logprob: -5.976058483123779
    10. 'x' → logprob: -6.101058483123779

Token 671: ' avec' (ID: 3937)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4932677149772644
    2. ' de' → logprob: -1.6182677745819092
    3. ' induced' → logprob: -2.868267774581909
    4. 'de' → logprob: -3.368267774581909
    5. ' _' → logprob: -3.868267774581909
    6. '_ind' → logprob: -4.36826753616333
    7. '_de' → logprob: -4.74326753616333
    8. '```' → logprob: -4.86826753616333
    9. ')' → logprob: -5.24326753616333
    10. '   ' → logprob: -5.36826753616333

Token 672: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0445687435567379
    2. ' k' → logprob: -3.4195687770843506
    3. 'la' → logprob: -6.1695685386657715
    4. 'une' → logprob: -6.1695685386657715
    5. 'exact' → logprob: -6.5445685386657715
    6. 'le' → logprob: -6.7945685386657715
    7. '#' → logprob: -6.7945685386657715
    8. ' exactement' → logprob: -7.0445685386657715
    9. 'max' → logprob: -7.4195685386657715
    10. 'au' → logprob: -7.9195685386657715

Token 673: ' somm' (ID: 44830)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.8128420114517212
    2. '_' → logprob: -1.4378420114517212
    3. '_nodes' → logprob: -2.6878418922424316
    4. ' de' → logprob: -2.8128418922424316
    5. '_edges' → logprob: -2.9378418922424316
    6. '_vertices' → logprob: -3.6878418922424316
    7. '_de' → logprob: -3.6878418922424316
    8. '_size' → logprob: -3.8128418922424316
    9. '_s' → logprob: -4.312841892242432
    10. '_subset' → logprob: -4.937841892242432

Token 674: 'ets' (ID: 1719)
  Prédit: 'ètes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ètes' → logprob: -0.43490585684776306
    2. 'è' → logprob: -1.3099058866500854
    3. 'ect' → logprob: -3.184905767440796
    4. 'ects' → logprob: -4.684906005859375
    5. 'êtes' → logprob: -4.809906005859375
    6. 'ets' → logprob: -4.934906005859375
    7. 'èces' → logprob: -5.934906005859375
    8. 'ètres' → logprob: -6.309906005859375
    9. 'ex' → logprob: -6.434906005859375
    10. '`' → logprob: -6.559906005859375

Token 675: ' et' (ID: 859)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5899495482444763
    2. ':' → logprob: -1.089949607849121
    3. '=' → logprob: -2.964949607849121
    4. 's' → logprob: -4.589949607849121
    5. ' ' → logprob: -4.964949607849121
    6. 'def' → logprob: -5.089949607849121
    7. ',' → logprob: -5.214949607849121
    8. 'import' → logprob: -5.339949607849121
    9. '_' → logprob: -5.464949607849121
    10. '#' → logprob: -5.714949607849121

Token 676: ' un' (ID: 537)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.9999679923057556
    2. 'max' → logprob: -1.3749680519104004
    3. 'au' → logprob: -1.3749680519104004
    4. ' le' → logprob: -3.4999680519104004
    5. 'un' → logprob: -3.6249680519104004
    6. 'maximum' → logprob: -4.2499680519104
    7. ' au' → logprob: -4.3749680519104
    8. '#' → logprob: -4.4999680519104
    9. 'k' → logprob: -5.3749680519104
    10. 'la' → logprob: -5.4999680519104

Token 677: ' nombre' (ID: 9733)
  Prédit: ' maximum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' maximum' → logprob: -1.0210399627685547
    2. 'maximum' → logprob: -1.0210399627685547
    3. 'nombre' → logprob: -1.6460399627685547
    4. ' nombre' → logprob: -3.0210399627685547
    5. 'e' → logprob: -3.7710399627685547
    6. 'max' → logprob: -4.396039962768555
    7. ' maximal' → logprob: -7.646039962768555
    8. '#' → logprob: -8.021039962768555
    9. 'grand' → logprob: -8.146039962768555
    10. ' max' → logprob: -8.271039962768555

Token 678: ' maxim' (ID: 29045)
  Prédit: ' maximal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' maximal' → logprob: -1.145146131515503
    2. '_' → logprob: -1.520146131515503
    3. ' _' → logprob: -1.895146131515503
    4. ' de' → logprob: -2.145146131515503
    5. '_max' → logprob: -2.145146131515503
    6. ' max' → logprob: -3.395146131515503
    7. ' d' → logprob: -3.895146131515503
    8. ' maximum' → logprob: -4.645146369934082
    9. '_de' → logprob: -5.270146369934082
    10. ' maximale' → logprob: -5.895146369934082

Token 679: 'isé' (ID: 30065)
  Prédit: '_edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_edges' → logprob: -0.4089469909667969
    2. '_' → logprob: -1.2839469909667969
    3. ' d' → logprob: -4.158946990966797
    4. '_max' → logprob: -5.033946990966797
    5. ' de' → logprob: -5.283946990966797
    6. ' maximal' → logprob: -5.658946990966797
    7. '_d' → logprob: -5.783946990966797
    8. ' ' → logprob: -6.033946990966797
    9. ' _' → logprob: -6.158946990966797
    10. ')' → logprob: -6.158946990966797

Token 680: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.3357148766517639
    2. '_' → logprob: -1.7107148170471191
    3. '_d' → logprob: -2.585714817047119
    4. 'd' → logprob: -4.960714817047119
    5. '_max' → logprob: -5.210714817047119
    6. ' maximal' → logprob: -5.460714817047119
    7. ' de' → logprob: -5.835714817047119
    8. '_de' → logprob: -5.960714817047119
    9. ' _' → logprob: -6.335714817047119
    10. ' ' → logprob: -6.585714817047119

Token 681: ''ar' (ID: 54307)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.05377715080976486
    2. '_edges' → logprob: -3.9287772178649902
    3. '_ar' → logprob: -4.55377721786499
    4. ' ar' → logprob: -4.55377721786499
    5. 'ar' → logprob: -4.67877721786499
    6. '_faces' → logprob: -7.42877721786499
    7. '_are' → logprob: -7.55377721786499
    8. ' _' → logprob: -7.55377721786499
    9. ' ' → logprob: -9.303776741027832
    10. 'edges' → logprob: -9.428776741027832

Token 682: 'êtes' (ID: 23720)
  Prédit: 'êtes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êtes' → logprob: -0.05604502186179161
    2. 'ê' → logprob: -3.0560450553894043
    3. 'êt' → logprob: -5.806045055389404
    4. 'êts' → logprob: -6.556045055389404
    5. 'ête' → logprob: -7.681045055389404
    6. '^' → logprob: -7.931045055389404
    7. 'êtres' → logprob: -7.931045055389404
    8. 'ô' → logprob: -8.056044578552246
    9. '�' → logprob: -8.431044578552246
    10. 'â' → logprob: -8.431044578552246

Token 683: ' internes' (ID: 183434)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7637669444084167
    2. 'import' → logprob: -2.1387670040130615
    3. ':' → logprob: -2.2637670040130615
    4. 'def' → logprob: -2.5137670040130615
    5. '=' → logprob: -2.7637670040130615
    6. '_positions' → logprob: -3.8887670040130615
    7. ')' → logprob: -4.013766765594482
    8. 's' → logprob: -4.013766765594482
    9. '#' → logprob: -4.513766765594482
    10. '.' → logprob: -4.513766765594482

Token 684: ' est' (ID: 893)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.1968859434127808
    2. 'def' → logprob: -2.1968860626220703
    3. '_' → logprob: -2.1968860626220703
    4. '[' → logprob: -2.5718860626220703
    5. 'import' → logprob: -2.9468860626220703
    6. ',' → logprob: -3.1968860626220703
    7. '<|end|>' → logprob: -3.1968860626220703
    8. ' =' → logprob: -3.3218860626220703
    9. '\' → logprob: -3.3218860626220703
    10. '
' → logprob: -3.6968860626220703

Token 685: ' NP' (ID: 80027)
  Prédit: ' NP'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' NP' → logprob: -0.3075306713581085
    2. ' un' → logprob: -1.9325306415557861
    3. 'NP' → logprob: -2.307530641555786
    4. 'd' → logprob: -5.307530879974365
    5. ' très' → logprob: -6.057530879974365
    6. 'un' → logprob: -6.182530879974365
    7. ' une' → logprob: -6.307530879974365
    8. '#' → logprob: -6.557530879974365
    9. ' impossible' → logprob: -6.807530879974365
    10. ' difficile' → logprob: -6.932530879974365

Token 686: '-d' (ID: 2469)
  Prédit: ' hard'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' hard' → logprob: -0.9736101031303406
    2. 'com' → logprob: -1.3486101627349854
    3. '-hard' → logprob: -1.7236101627349854
    4. '-com' → logprob: -2.2236101627349854
    5. ' complet' → logprob: -3.7236101627349854
    6. '_' → logprob: -4.098609924316406
    7. '#' → logprob: -4.848609924316406
    8. '-' → logprob: -4.973609924316406
    9. 'hard' → logprob: -5.223609924316406
    10. 'complete' → logprob: -5.973609924316406

Token 687: 'iffic' (ID: 36489)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.5932604670524597
    2. 'P' → logprob: -1.3432605266571045
    3. 'complete' → logprob: -2.3432605266571045
    4. 'e' → logprob: -4.718260288238525
    5. '_complete' → logprob: -4.718260288238525
    6. 'hard' → logprob: -4.718260288238525
    7. 'C' → logprob: -4.718260288238525
    8. 'Complete' → logprob: -4.843260288238525
    9. 'éf' → logprob: -4.968260288238525
    10. ' hard' → logprob: -5.093260288238525

Token 688: 'ile' (ID: 554)
  Prédit: 'ic'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ic' → logprob: -0.5535684823989868
    2. 'ile' → logprob: -1.3035684823989868
    3. 'é' → logprob: -3.1785683631896973
    4. 'ique' → logprob: -3.5535683631896973
    5. 'ulte' → logprob: -3.6785683631896973
    6. '#' → logprob: -4.553568363189697
    7. 'í' → logprob: -4.928568363189697
    8. 'icul' → logprob: -5.428568363189697
    9. 'if' → logprob: -5.553568363189697
    10. 'ue' → logprob: -5.553568363189697

Token 689: '.
' (ID: 558)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7007783651351929
    2. '\' → logprob: -2.7007784843444824
    3. 'def' → logprob: -2.7007784843444824
    4. '[' → logprob: -2.8257784843444824
    5. ':' → logprob: -2.8257784843444824
    6. '
' → logprob: -2.9507784843444824
    7. 'import' → logprob: -3.4507784843444824
    8. '#' → logprob: -3.9507784843444824
    9. '\n' → logprob: -3.9507784843444824
    10. ')' → logprob: -4.200778484344482

Token 690: '#
' (ID: 11240)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8682976961135864
    2. '
' → logprob: -0.9932976961135864
    3. 'def' → logprob: -3.493297576904297
    4. ':' → logprob: -3.618297576904297
    5. '\n' → logprob: -3.743297576904297
    6. 'import' → logprob: -3.993297576904297
    7. '\' → logprob: -4.368297576904297
    8. '(
' → logprob: -4.368297576904297
    9. '.' → logprob: -4.368297576904297
    10. '[' → logprob: -4.618297576904297

Token 691: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.07114464789628983
    2. 'import' → logprob: -3.1961445808410645
    3. '#' → logprob: -4.8211445808410645
    4. '\' → logprob: -5.0711445808410645
    5. '```' → logprob: -5.5711445808410645
    6. '
' → logprob: -5.9461445808410645
    7. '\n' → logprob: -5.9461445808410645
    8. 'k' → logprob: -6.8211445808410645
    9. ':' → logprob: -7.1961445808410645
    10. 'n' → logprob: -7.3211445808410645

Token 692: ' Solution' (ID: 20858)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.010131670162081718
    2. 'import' → logprob: -5.1351318359375
    3. '#' → logprob: -5.7601318359375
    4. 'class' → logprob: -8.0101318359375
    5. '\' → logprob: -8.8851318359375
    6. '```' → logprob: -9.0101318359375
    7. 'n' → logprob: -9.3851318359375
    8. ' def' → logprob: -9.6351318359375
    9. ' 
' → logprob: -9.7601318359375
    10. 's' → logprob: -9.7601318359375

Token 693: ' prag' (ID: 65918)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4323822259902954
    2. ':' → logprob: -1.5573822259902954
    3. 'def' → logprob: -2.057382106781006
    4. 's' → logprob: -5.682382106781006
    5. ' :' → logprob: -5.682382106781006
    6. 'import' → logprob: -6.932382106781006
    7. '```' → logprob: -6.932382106781006
    8. '=' → logprob: -7.182382106781006
    9. ':
' → logprob: -7.307382106781006
    10. '_' → logprob: -7.432382106781006

Token 694: 'mat' (ID: 8872)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3993833661079407
    2. 'ément' → logprob: -1.649383306503296
    3. 'ématique' → logprob: -3.399383306503296
    4. 'ation' → logprob: -3.524383306503296
    5. 'e' → logprob: -4.399383544921875
    6. 'ème' → logprob: -4.524383544921875
    7. '```' → logprob: -5.149383544921875
    8. 'ète' → logprob: -5.274383544921875
    9. 'import' → logprob: -5.399383544921875
    10. '
' → logprob: -5.524383544921875

Token 695: 'ique' (ID: 2222)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.054958000779151917
    2. 'é' → logprob: -3.9299581050872803
    3. 'aire' → logprob: -4.429957866668701
    4. 'y' → logprob: -4.929957866668701
    5. 'ary' → logprob: -5.554957866668701
    6. 'ed' → logprob: -5.804957866668701
    7. 'ée' → logprob: -6.429957866668701
    8. 'ation' → logprob: -6.429957866668701
    9. 'ate' → logprob: -7.054957866668701
    10. 'ité' → logprob: -7.679957866668701

Token 696: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.013568513095378876
    2. 'def' → logprob: -5.38856840133667
    3. ' :' → logprob: -5.38856840133667
    4. ':
' → logprob: -5.88856840133667
    5. '#' → logprob: -7.76356840133667
    6. ',' → logprob: -8.263568878173828
    7. 'import' → logprob: -8.888568878173828
    8. ':def' → logprob: -9.263568878173828
    9. ' :
' → logprob: -9.263568878173828
    10. '```' → logprob: -9.888568878173828

Token 697: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2275523692369461
    2. '#' → logprob: -1.7275524139404297
    3. 'import' → logprob: -4.10255241394043
    4. '```' → logprob: -5.85255241394043
    5. '
' → logprob: -6.22755241394043
    6. 'k' → logprob: -6.47755241394043
    7. 'for' → logprob: -6.85255241394043
    8. ' def' → logprob: -8.22755241394043
    9. ' #' → logprob: -8.22755241394043
    10. 'class' → logprob: -8.85255241394043

Token 698: ' -' (ID: 533)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04099953547120094
    2. '#' → logprob: -3.4159996509552
    3. 'import' → logprob: -5.290999412536621
    4. '
' → logprob: -6.915999412536621
    5. ' def' → logprob: -7.540999412536621
    6. 'from' → logprob: -8.165999412536621
    7. ' #' → logprob: -9.165999412536621
    8. '```' → logprob: -9.415999412536621
    9. 'class' → logprob: -9.665999412536621
    10. 'n' → logprob: -10.415999412536621

Token 699: ' L' (ID: 451)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08218178153038025
    2. '#' → logprob: -2.957181692123413
    3. 'from' → logprob: -3.957181692123413
    4. 'import' → logprob: -5.207181930541992
    5. '
' → logprob: -6.957181930541992
    6. ' def' → logprob: -7.582181930541992
    7. 'n' → logprob: -8.707181930541992
    8. 'contin' → logprob: -9.207181930541992
    9. 'On' → logprob: -9.332181930541992
    10. 'continue' → logprob: -9.457181930541992

Token 700: ''' (ID: 6)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9492902159690857
    2. 'imit' → logprob: -1.5742902755737305
    3. 'ine' → logprob: -1.5742902755737305
    4. 'i' → logprob: -2.1992902755737305
    5. 'e' → logprob: -3.8242902755737305
    6. 'imited' → logprob: -4.0742902755737305
    7. '
' → logprob: -4.9492902755737305
    8. 'imiter' → logprob: -5.4492902755737305
    9. 'im' → logprob: -5.8242902755737305
    10. 'ines' → logprob: -5.9492902755737305

Token 701: 'én' (ID: 3289)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.005255933851003647
    2. '#' → logprob: -5.880255699157715
    3. '
' → logprob: -7.005255699157715
    4. 'import' → logprob: -7.880255699157715
    5. ' def' → logprob: -7.880255699157715
    6. 'n' → logprob: -7.880255699157715
    7. 'from' → logprob: -10.005255699157715
    8. '```' → logprob: -10.005255699157715
    9. 'ndef' → logprob: -10.130255699157715
    10. ')' → logprob: -10.505255699157715

Token 702: 'oncé' (ID: 59071)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.4203625917434692
    2. 'ine' → logprob: -1.7953625917434692
    3. '_
' → logprob: -1.7953625917434692
    4. 'n' → logprob: -2.5453624725341797
    5. '
' → logprob: -2.7953624725341797
    6. '"""
' → logprob: -2.9203624725341797
    7. 'x' → logprob: -3.0453624725341797
    8. '#
' → logprob: -3.7953624725341797
    9. '#' → logprob: -3.7953624725341797
    10. ''''
' → logprob: -4.04536247253418

Token 703: ' indique' (ID: 97324)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7007078528404236
    2. ':' → logprob: -1.3257079124450684
    3. '#' → logprob: -2.2007079124450684
    4. ' ' → logprob: -3.8257079124450684
    5. '=' → logprob: -3.9507079124450684
    6. ''' → logprob: -4.325707912445068
    7. '.' → logprob: -4.825707912445068
    8. '_' → logprob: -4.825707912445068
    9. ' :' → logprob: -5.075707912445068
    10. '<|end|>' → logprob: -5.075707912445068

Token 704: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.6973869800567627
    2. ''' → logprob: -1.9473869800567627
    3. '#' → logprob: -2.0723869800567627
    4. ':' → logprob: -2.1973869800567627
    5. ' :' → logprob: -2.1973869800567627
    6. ' #' → logprob: -2.6973869800567627
    7. ' de' → logprob: -3.1973869800567627
    8. ' que' → logprob: -3.5723869800567627
    9. ' la' → logprob: -3.9473869800567627
    10. ' continuer' → logprob: -3.9473869800567627

Token 705: '100' (ID: 1353)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.01565128192305565
    2. 'import' → logprob: -5.515651226043701
    3. '```' → logprob: -6.015651226043701
    4. '#' → logprob: -6.265651226043701
    5. '"' → logprob: -6.390651226043701
    6. ' def' → logprob: -6.890651226043701
    7. 'n' → logprob: -7.265651226043701
    8. 'lambda' → logprob: -7.640651226043701
    9. '""' → logprob: -7.890651226043701
    10. ' ' → logprob: -7.890651226043701

Token 706: ' datasets' (ID: 57711)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3078576922416687
    2. 'k' → logprob: -2.1828577518463135
    3. 'def' → logprob: -3.4328577518463135
    4. ':' → logprob: -4.307857513427734
    5. ' ' → logprob: -4.307857513427734
    6. ')' → logprob: -4.432857513427734
    7. '
' → logprob: -4.557857513427734
    8. '00' → logprob: -4.557857513427734
    9. '000' → logprob: -4.682857513427734
    10. '#' → logprob: -4.807857513427734

Token 707: ' max' (ID: 2999)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.569342851638794
    2. ':' → logprob: -1.944342851638794
    3. '
' → logprob: -2.694342851638794
    4. 'import' → logprob: -2.819342851638794
    5. ':
' → logprob: -3.694342851638794
    6. ' =' → logprob: -3.819342851638794
    7. '#' → logprob: -3.819342851638794
    8. '

' → logprob: -3.944342851638794
    9. ',' → logprob: -4.444342613220215
    10. '\' → logprob: -4.569342613220215

Token 708: '.
' (ID: 558)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.15040141344070435
    2. ':' → logprob: -2.4004013538360596
    3. 'import' → logprob: -3.9004013538360596
    4. '\' → logprob: -5.650401592254639
    5. ' ' → logprob: -5.775401592254639
    6. '#' → logprob: -6.025401592254639
    7. '
' → logprob: -6.025401592254639
    8. ':
' → logprob: -6.650401592254639
    9. ' def' → logprob: -6.650401592254639
    10. '```' → logprob: -6.650401592254639

Token 709: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.305996298789978
    2. '_' → logprob: -1.555996298789978
    3. '
' → logprob: -2.1809964179992676
    4. '\' → logprob: -2.3059964179992676
    5. '[' → logprob: -2.4309964179992676
    6. '[
' → logprob: -3.1809964179992676
    7. 'import' → logprob: -3.3059964179992676
    8. '(' → logprob: -3.5559964179992676
    9. '(
' → logprob: -3.9309964179992676
    10. ' =' → logprob: -4.055996417999268

Token 710: ' -' (ID: 533)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.47312337160110474
    2. '
' → logprob: -1.47312331199646
    3. 'import' → logprob: -3.47312331199646
    4. '(
' → logprob: -4.223123550415039
    5. '[
' → logprob: -4.223123550415039
    6. '\' → logprob: -4.348123550415039
    7. '

' → logprob: -4.348123550415039
    8. '[' → logprob: -4.598123550415039
    9. '(' → logprob: -5.223123550415039
    10. ')' → logprob: -5.348123550415039

Token 711: ' Impl' (ID: 144563)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2685334384441376
    2. '#' → logprob: -1.64353346824646
    3. 'import' → logprob: -4.268533229827881
    4. '
' → logprob: -4.643533229827881
    5. ' def' → logprob: -5.643533229827881
    6. 'for' → logprob: -6.018533229827881
    7. 'max' → logprob: -6.643533229827881
    8. ' #' → logprob: -6.643533229827881
    9. '```' → logprob: -6.643533229827881
    10. 'input' → logprob: -7.268533229827881

Token 712: 'ément' (ID: 17645)
  Prédit: 'ement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ement' → logprob: -0.4165615439414978
    2. 'ort' → logprob: -1.9165616035461426
    3. 'ément' → logprob: -2.6665616035461426
    4. 'import' → logprob: -2.9165616035461426
    5. 'ements' → logprob: -3.5415616035461426
    6. '```' → logprob: -3.9165616035461426
    7. 'def' → logprob: -4.416561603546143
    8. 'orts' → logprob: -5.541561603546143
    9. '#' → logprob: -6.166561603546143
    10. 'em' → logprob: -7.291561603546143

Token 713: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.7270320057868958
    2. 'def' → logprob: -0.8520320057868958
    3. 'ent' → logprob: -2.602031946182251
    4. 'ment' → logprob: -4.72703218460083
    5. 'ate' → logprob: -5.22703218460083
    6. 'import' → logprob: -7.60203218460083
    7. 'ation' → logprob: -7.97703218460083
    8. '#' → logprob: -8.227031707763672
    9. 'e' → logprob: -8.852031707763672
    10. '```' → logprob: -9.227031707763672

Token 714: ' une' (ID: 2463)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.008078204467892647
    2. ' def' → logprob: -5.508078098297119
    3. '```' → logprob: -6.383078098297119
    4. 'import' → logprob: -7.758078098297119
    5. 'for' → logprob: -8.008078575134277
    6. ' a' → logprob: -8.383078575134277
    7. 'class' → logprob: -8.758078575134277
    8. 'a' → logprob: -8.883078575134277
    9. '
' → logprob: -9.258078575134277
    10. '\' → logprob: -9.258078575134277

Token 715: ' recherche' (ID: 24975)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.02734815515577793
    2. 'b' → logprob: -4.777348041534424
    3. ' def' → logprob: -5.152348041534424
    4. 'class' → logprob: -5.277348041534424
    5. '```' → logprob: -5.777348041534424
    6. ' BFS' → logprob: -7.152348041534424
    7. ' bfs' → logprob: -7.277348041534424
    8. 'heur' → logprob: -7.777348041534424
    9. 'from' → logprob: -7.902348041534424
    10. 'B' → logprob: -8.277348518371582

Token 716: ' heur' (ID: 186395)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.399161458015442
    2. 'en' → logprob: -1.649161458015442
    3. ' en' → logprob: -1.649161458015442
    4. '#' → logprob: -2.7741613388061523
    5. ' de' → logprob: -3.5241613388061523
    6. 'de' → logprob: -3.5241613388061523
    7. 'in' → logprob: -3.5241613388061523
    8. 'import' → logprob: -3.6491613388061523
    9. 'b' → logprob: -4.149161338806152
    10. 'à' → logprob: -4.524161338806152

Token 717: 'istique' (ID: 66596)
  Prédit: 'istique'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'istique' → logprob: -0.35409271717071533
    2. 'istic' → logprob: -1.2290927171707153
    3. 'istics' → logprob: -6.354092597961426
    4. 'istiques' → logprob: -6.729092597961426
    5. '#' → logprob: -6.854092597961426
    6. '```' → logprob: -7.354092597961426
    7. '   ' → logprob: -8.479092597961426
    8. 'istiche' → logprob: -8.854092597961426
    9. 'istica' → logprob: -9.604092597961426
    10. 'u' → logprob: -9.979092597961426

Token 718: ' :
' (ID: 10039)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.10202902555465698
    2. '
' → logprob: -2.9770290851593018
    3. 'import' → logprob: -4.352028846740723
    4. ':' → logprob: -4.602028846740723
    5. ':
' → logprob: -5.852028846740723
    6. '(
' → logprob: -5.977028846740723
    7. '

' → logprob: -5.977028846740723
    8. '\' → logprob: -5.977028846740723
    9. ' def' → logprob: -5.977028846740723
    10. '```' → logprob: -6.602028846740723

Token 719: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4795237183570862
    2. '#' → logprob: -1.9795236587524414
    3. 'import' → logprob: -2.3545236587524414
    4. ' def' → logprob: -3.9795236587524414
    5. '```' → logprob: -3.9795236587524414
    6. 'for' → logprob: -4.354523658752441
    7. '(
' → logprob: -4.354523658752441
    8. ' 
' → logprob: -4.479523658752441
    9. ' #' → logprob: -4.729523658752441
    10. ' ' → logprob: -4.729523658752441

Token 720: '  ' (ID: 256)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0735771432518959
    2. '#' → logprob: -3.6985771656036377
    3. ' def' → logprob: -4.198576927185059
    4. 'import' → logprob: -4.448576927185059
    5. 'for' → logprob: -4.698576927185059
    6. '```' → logprob: -5.573576927185059
    7. ' for' → logprob: -5.948576927185059
    8. ' #' → logprob: -6.823576927185059
    9. 'class' → logprob: -7.573576927185059
    10. ' n' → logprob: -8.073576927185059

Token 721: ' *' (ID: 425)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.31498125195503235
    2. '#' → logprob: -1.43998122215271
    3. 'import' → logprob: -4.439981460571289
    4. 'for' → logprob: -4.439981460571289
    5. 'from' → logprob: -5.689981460571289
    6. ' def' → logprob: -6.939981460571289
    7. ' #' → logprob: -7.189981460571289
    8. '```' → logprob: -7.314981460571289
    9. 'while' → logprob: -7.564981460571289
    10. ' for' → logprob: -7.689981460571289

Token 722: ' Pour' (ID: 13931)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6223226189613342
    2. 'from' → logprob: -0.9973226189613342
    3. '#' → logprob: -3.6223225593566895
    4. 'import' → logprob: -3.7473225593566895
    5. 'for' → logprob: -3.9973225593566895
    6. ' def' → logprob: -4.8723225593566895
    7. ' from' → logprob: -5.3723225593566895
    8. 'deque' → logprob: -5.3723225593566895
    9. 'queue' → logprob: -5.8723225593566895
    10. ' for' → logprob: -6.6223225593566895

Token 723: ' chaque' (ID: 21194)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.8123961091041565
    2. '_' → logprob: -1.1873960494995117
    3. 'i' → logprob: -2.6873960494995117
    4. ' i' → logprob: -2.8123960494995117
    5. ' line' → logprob: -3.6873960494995117
    6. 'each' → logprob: -3.8123960494995117
    7. ' chaque' → logprob: -4.437396049499512
    8. ' each' → logprob: -4.687396049499512
    9. ' cube' → logprob: -5.312396049499512
    10. ' s' → logprob: -5.437396049499512

Token 724: ' compos' (ID: 14635)
  Prédit: ' sommet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sommet' → logprob: -1.5849790573120117
    2. 'position' → logprob: -1.8349790573120117
    3. 'pos' → logprob: -2.4599790573120117
    4. ' position' → logprob: -2.7099790573120117
    5. ' node' → logprob: -2.7099790573120117
    6. ' test' → logprob: -2.9599790573120117
    7. 'node' → logprob: -3.0849790573120117
    8. 'point' → logprob: -3.2099790573120117
    9. 'dataset' → logprob: -3.4599790573120117
    10. ' dataset' → logprob: -3.4599790573120117

Token 725: 'ante' (ID: 2116)
  Prédit: 'ponent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ponent' → logprob: -1.3178602457046509
    2. 'pos' → logprob: -1.8178602457046509
    3. 'position' → logprob: -1.9428602457046509
    4. 'ant' → logprob: -1.9428602457046509
    5. 'def' → logprob: -2.8178601264953613
    6. ')' → logprob: -3.4428601264953613
    7. 'n' → logprob: -3.8178601264953613
    8. '#' → logprob: -3.8178601264953613
    9. 'et' → logprob: -3.9428601264953613
    10. 'e' → logprob: -4.067860126495361

Token 726: ' conn' (ID: 10850)
  Prédit: 'conn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'conn' → logprob: -0.003394683124497533
    2. '_conn' → logprob: -5.753394603729248
    3. ' conn' → logprob: -9.128395080566406
    4. 'connect' → logprob: -10.628395080566406
    5. 'connected' → logprob: -11.003395080566406
    6. 'c' → logprob: -11.378395080566406
    7. '
' → logprob: -11.503395080566406
    8. 'con' → logprob: -11.628395080566406
    9. '_connected' → logprob: -12.128395080566406
    10. 'class' → logprob: -12.503395080566406

Token 727: 'exe' (ID: 70589)
  Prédit: 'ect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -0.15801380574703217
    2. 'ex' → logprob: -2.6580138206481934
    3. 'ected' → logprob: -4.033013820648193
    4. '#' → logprob: -4.158013820648193
    5. '
' → logprob: -4.783013820648193
    6. 'om' → logprob: -5.158013820648193
    7. 'exe' → logprob: -5.283013820648193
    8. '```' → logprob: -5.658013820648193
    9. 'n' → logprob: -5.783013820648193
    10. 'x' → logprob: -5.783013820648193

Token 728: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.3015811443328857
    2. '_conn' → logprob: -1.3015811443328857
    3. 'conn' → logprob: -1.5515811443328857
    4. ':' → logprob: -2.1765811443328857
    5. '_connected' → logprob: -3.9265811443328857
    6. ':
' → logprob: -4.051581382751465
    7. '_cont' → logprob: -4.176581382751465
    8. '_selected' → logprob: -4.551581382751465
    9. ' ,' → logprob: -4.801581382751465
    10. '_' → logprob: -4.801581382751465

Token 729: ' si' (ID: 1784)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3952890634536743
    2. 'on' → logprob: -2.0202889442443848
    3. ' on' → logprob: -2.3952889442443848
    4. 'contin' → logprob: -4.145288944244385
    5. ' #' → logprob: -4.270288944244385
    6. 'tr' → logprob: -4.270288944244385
    7. ' continuer' → logprob: -4.395288944244385
    8. 'for' → logprob: -4.895288944244385
    9. ' explorer' → logprob: -5.145288944244385
    10. ' essayer' → logprob: -5.270288944244385

Token 730: ' sa' (ID: 880)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.033203333616256714
    2. ' len' → logprob: -4.033203125
    3. ' sa' → logprob: -5.158203125
    4. 'la' → logprob: -5.533203125
    5. 'tail' → logprob: -6.408203125
    6. ' la' → logprob: -6.783203125
    7. 'sa' → logprob: -6.783203125
    8. 'size' → logprob: -8.158203125
    9. '#' → logprob: -8.533203125
    10. ' elle' → logprob: -8.783203125

Token 731: ' taille' (ID: 41644)
  Prédit: 'tail'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tail' → logprob: -0.3180766999721527
    2. 'size' → logprob: -1.443076729774475
    3. ' taille' → logprob: -3.4430766105651855
    4. ' size' → logprob: -6.5680766105651855
    5. 'len' → logprob: -7.1930766105651855
    6. '#' → logprob: -7.3180766105651855
    7. '```' → logprob: -7.6930766105651855
    8. 'ta' → logprob: -8.693077087402344
    9. 't' → logprob: -8.693077087402344
    10. 'import' → logprob: -9.193077087402344

Token 732: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.6951180100440979
    2. '>=' → logprob: -0.6951180100440979
    3. '>' → logprob: -7.320117950439453
    4. '≥' → logprob: -7.695117950439453
    5. '<=' → logprob: -8.445117950439453
    6. ' <=' → logprob: -8.445117950439453
    7. ' >' → logprob: -8.820117950439453
    8. ' <' → logprob: -9.320117950439453
    9. ' est' → logprob: -9.445117950439453
    10. ' ≥' → logprob: -10.445117950439453

Token 733: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.03804263845086098
    2. ' k' → logprob: -3.2880425453186035
    3. '```' → logprob: -14.288043022155762
    4. ' ' → logprob: -15.413043022155762
    5. '   ' → logprob: -15.913043022155762
    6. ' ' → logprob: -15.913043022155762
    7. '	k' → logprob: -17.163042068481445
    8. '`' → logprob: -17.538042068481445
    9. '  ' → logprob: -17.788042068481445
    10. '_k' → logprob: -18.538042068481445

Token 734: ' :
' (ID: 10039)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1050901710987091
    2. ':
' → logprob: -2.8550901412963867
    3. ',' → logprob: -3.2300901412963867
    4. ' :' → logprob: -7.355090141296387
    5. '```' → logprob: -7.855090141296387
    6. ',
' → logprob: -8.230090141296387
    7. ' ' → logprob: -8.730090141296387
    8. '
' → logprob: -8.855090141296387
    9. '#' → logprob: -8.980090141296387
    10. '>' → logprob: -9.230090141296387

Token 735: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.04056417569518089
    2. '   ' → logprob: -4.290564060211182
    3. ' #' → logprob: -4.290564060211182
    4. ' on' → logprob: -5.290564060211182
    5. '       ' → logprob: -6.665564060211182
    6. 'for' → logprob: -6.790564060211182
    7. ' ' → logprob: -6.915564060211182
    8. '```' → logprob: -7.040564060211182
    9. ' continuer' → logprob: -7.290564060211182
    10. '    ' → logprob: -7.540564060211182

Token 736: '      ' (ID: 1699)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.27566033601760864
    2. ' #' → logprob: -1.7756602764129639
    3. '   ' → logprob: -3.025660276412964
    4. 'for' → logprob: -5.025660514831543
    5. ' for' → logprob: -5.525660514831543
    6. '    ' → logprob: -6.150660514831543
    7. ' on' → logprob: -6.275660514831543
    8. ' ' → logprob: -6.525660514831543
    9. ' continuer' → logprob: -6.525660514831543
    10. '       ' → logprob: -6.900660514831543

Token 737: ' -' (ID: 533)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.51313316822052
    2. '       ' → logprob: -1.63813316822052
    3. ' on' → logprob: -2.5131330490112305
    4. ' #' → logprob: -3.5131330490112305
    5. '     ' → logprob: -3.5131330490112305
    6. '   ' → logprob: -4.1381330490112305
    7. '      ' → logprob: -4.5131330490112305
    8. 'on' → logprob: -4.7631330490112305
    9. '    ' → logprob: -4.8881330490112305
    10. '           ' → logprob: -5.3881330490112305

Token 738: ' Util' (ID: 13564)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.119956612586975
    2. '       ' → logprob: -1.494956612586975
    3. ' on' → logprob: -2.4949564933776855
    4. ' #' → logprob: -2.4949564933776855
    5. '        ' → logprob: -3.3699564933776855
    6. 'for' → logprob: -3.4949564933776855
    7. 'on' → logprob: -3.4949564933776855
    8. 'On' → logprob: -3.8699564933776855
    9. 'contin' → logprob: -3.9949564933776855
    10. '      ' → logprob: -4.1199564933776855

Token 739: 'iser' (ID: 7466)
  Prédit: 'ser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ser' → logprob: -0.024804068729281425
    2. 'se' → logprob: -3.89980411529541
    3. 'iser' → logprob: -6.77480411529541
    4. 't' → logprob: -7.14980411529541
    5. '```' → logprob: -7.39980411529541
    6. 's' → logprob: -7.64980411529541
    7. '#' → logprob: -7.64980411529541
    8. 'ses' → logprob: -8.89980411529541
    9. 'sé' → logprob: -8.89980411529541
    10. 'ter' → logprob: -9.02480411529541

Token 740: ' BFS' (ID: 190016)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.028735166415572166
    2. 'un' → logprob: -4.153735160827637
    3. ' une' → logprob: -4.528735160827637
    4. ' un' → logprob: -7.028735160827637
    5. '```' → logprob: -7.528735160827637
    6. 'deque' → logprob: -9.028735160827637
    7. 'a' → logprob: -9.778735160827637
    8. 'import' → logprob: -9.778735160827637
    9. 'la' → logprob: -9.903735160827637
    10. 'B' → logprob: -11.028735160827637

Token 741: ' pour' (ID: 1930)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.599808692932129
    2. '(s' → logprob: -1.974808692932129
    3. 'from' → logprob: -2.224808692932129
    4. ' pour' → logprob: -2.849808692932129
    5. '(
' → logprob: -3.099808692932129
    6. 'def' → logprob: -3.224808692932129
    7. ' =' → logprob: -3.349808692932129
    8. ')' → logprob: -3.349808692932129
    9. 'pour' → logprob: -3.474808692932129
    10. 'de' → logprob: -3.724808692932129

Token 742: ' génér' (ID: 18939)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.5098764896392822
    2. ' explorer' → logprob: -1.6348764896392822
    3. 'expl' → logprob: -2.1348764896392822
    4. ' trouver' → logprob: -3.1348764896392822
    5. ' parcour' → logprob: -3.8848764896392822
    6. ' visiter' → logprob: -5.634876251220703
    7. ' sélectionner' → logprob: -5.759876251220703
    8. 'chercher' → logprob: -6.009876251220703
    9. 'sé' → logprob: -6.634876251220703
    10. 'voir' → logprob: -6.759876251220703

Token 743: 'er' (ID: 259)
  Prédit: 'iter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iter' → logprob: -0.22733643651008606
    2. 'chercher' → logprob: -2.4773364067077637
    3. 'er' → logprob: -3.6023364067077637
    4. 'ouvrir' → logprob: -4.477336406707764
    5. 'érer' → logprob: -4.602336406707764
    6. 'import' → logprob: -4.852336406707764
    7. 'velop' → logprob: -5.602336406707764
    8. 'voir' → logprob: -5.852336406707764
    9. 'plorer' → logprob: -5.852336406707764
    10. 'encer' → logprob: -5.977336406707764

Token 744: ' ensembles' (ID: 144172)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.8128206133842468
    2. 'une' → logprob: -1.3128206729888916
    3. 'des' → logprob: -2.1878206729888916
    4. 'les' → logprob: -2.6878206729888916
    5. 'un' → logprob: -2.8128206729888916
    6. ' un' → logprob: -4.1878204345703125
    7. ' les' → logprob: -4.6878204345703125
    8. ' une' → logprob: -5.1878204345703125
    9. ' tous' → logprob: -5.3128204345703125
    10. 'all' → logprob: -5.9378204345703125

Token 745: ' connex' (ID: 154480)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.640365719795227
    2. 'conn' → logprob: -1.765365719795227
    3. ' de' → logprob: -2.1403656005859375
    4. '_conn' → logprob: -2.7653656005859375
    5. '```' → logprob: -3.2653656005859375
    6. 's' → logprob: -4.1403656005859375
    7. '_connected' → logprob: -4.6403656005859375
    8. 'adj' → logprob: -5.1403656005859375
    9. ' =' → logprob: -5.6403656005859375
    10. 'connected' → logprob: -5.8903656005859375

Token 746: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.10115565359592438
    2. 'és' → logprob: -3.1011557579040527
    3. 'ets' → logprob: -3.6011557579040527
    4. 'ects' → logprob: -4.351155757904053
    5. 's' → logprob: -5.851155757904053
    6. 'ect' → logprob: -6.476155757904053
    7. 'ions' → logprob: -6.601155757904053
    8. 'e' → logprob: -6.851155757904053
    9. '```' → logprob: -7.101155757904053
    10. 'ifs' → logprob: -7.351155757904053

Token 747: ' à' (ID: 1221)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.4072991609573364
    2. 'de' → logprob: -1.5322991609573364
    3. ' de' → logprob: -2.282299041748047
    4. '_' → logprob: -2.532299041748047
    5. '(s' → logprob: -2.532299041748047
    6. '_de' → logprob: -2.907299041748047
    7. '```' → logprob: -3.157299041748047
    8. '_s' → logprob: -3.907299041748047
    9. '_conn' → logprob: -4.157299041748047
    10. '
' → logprob: -4.657299041748047

Token 748: ' partir' (ID: 12100)
  Prédit: 'tail'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tail' → logprob: -0.08585074543952942
    2. ' taille' → logprob: -3.585850715637207
    3. 'k' → logprob: -3.710850715637207
    4. 'part' → logprob: -3.835850715637207
    5. ' partir' → logprob: -5.585850715637207
    6. 'size' → logprob: -6.335850715637207
    7. 'ta' → logprob: -6.960850715637207
    8. ' k' → logprob: -7.460850715637207
    9. ' size' → logprob: -8.085850715637207
    10. 'l' → logprob: -8.460850715637207

Token 749: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -1.0811423063278198
    2. 'd' → logprob: -1.7061423063278198
    3. ' chaque' → logprob: -1.9561423063278198
    4. ' de' → logprob: -2.0811424255371094
    5. 'du' → logprob: -2.5811424255371094
    6. ' d' → logprob: -3.2061424255371094
    7. '#' → logprob: -3.5811424255371094
    8. ' du' → logprob: -3.7061424255371094
    9. 'un' → logprob: -4.706142425537109
    10. 'le' → logprob: -4.956142425537109

Token 750: ' chaque' (ID: 21194)
  Prédit: 'cha'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cha' → logprob: -0.9607950448989868
    2. 'ch' → logprob: -1.3357950448989868
    3. ' chaque' → logprob: -1.3357950448989868
    4. 'un' → logprob: -3.9607949256896973
    5. 'le' → logprob: -4.585794925689697
    6. 'la' → logprob: -4.585794925689697
    7. 'each' → logprob: -4.835794925689697
    8. 'som' → logprob: -4.960794925689697
    9. 's' → logprob: -5.085794925689697
    10. 'c' → logprob: -5.085794925689697

Token 751: ' sommet' (ID: 130502)
  Prédit: ' sommet'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sommet' → logprob: -0.6051722764968872
    2. 'som' → logprob: -0.8551722764968872
    3. 's' → logprob: -4.230172157287598
    4. 'no' → logprob: -5.480172157287598
    5. ' noe' → logprob: -5.855172157287598
    6. ' somm' → logprob: -7.105172157287598
    7. ' som' → logprob: -7.230172157287598
    8. 'node' → logprob: -7.230172157287598
    9. 'position' → logprob: -7.355172157287598
    10. 'vertex' → logprob: -7.605172157287598

Token 752: ' mais' (ID: 2899)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.46707066893577576
    2. '_' → logprob: -1.8420706987380981
    3. ',' → logprob: -2.9670705795288086
    4. ' =' → logprob: -3.5920705795288086
    5. ')' → logprob: -3.9670705795288086
    6. '(' → logprob: -4.092070579528809
    7. '(
' → logprob: -4.217070579528809
    8. ':' → logprob: -4.467070579528809
    9. 's' → logprob: -4.592070579528809
    10. ' ' → logprob: -4.717070579528809

Token 753: ' limité' (ID: 135767)
  Prédit: ' limité'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' limité' → logprob: -1.525528907775879
    2. '#' → logprob: -1.900528907775879
    3. ' limiter' → logprob: -2.275528907775879
    4. 'sans' → logprob: -2.400528907775879
    5. ' #' → logprob: -2.775528907775879
    6. ' pas' → logprob: -3.025528907775879
    7. ' sans' → logprob: -3.025528907775879
    8. 'limit' → logprob: -3.150528907775879
    9. ' continuer' → logprob: -3.650528907775879
    10. ' uniquement' → logprob: -3.900528907775879

Token 754: ' (' (ID: 350)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.8715847730636597
    2. 'à' → logprob: -1.1215847730636597
    3. '```' → logprob: -1.9965847730636597
    4. '_' → logprob: -3.621584892272949
    5. '=' → logprob: -4.246584892272949
    6. ')' → logprob: -4.621584892272949
    7. ' aux' → logprob: -4.746584892272949
    8. ' =' → logprob: -4.871584892272949
    9. '_par' → logprob: -4.996584892272949
    10. ',' → logprob: -5.496584892272949

Token 755: 'pr' (ID: 638)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.36916497349739075
    2. ' )' → logprob: -2.2441649436950684
    3. 'à' → logprob: -2.3691649436950684
    4. ' à' → logprob: -3.4941649436950684
    5. 'max' → logprob: -3.8691649436950684
    6. '```' → logprob: -4.869164943695068
    7. ' aux' → logprob: -4.869164943695068
    8. '),' → logprob: -5.119164943695068
    9. ' max' → logprob: -5.369164943695068
    10. 'aux' → logprob: -5.494164943695068

Token 756: 'une' (ID: 2561)
  Prédit: 'ef'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ef' → logprob: -0.8449470400810242
    2. '#' → logprob: -2.094947099685669
    3. 'int' → logprob: -2.594947099685669
    4. 'op' → logprob: -2.719947099685669
    5. 'éc' → logprob: -2.844947099685669
    6. 'ec' → logprob: -2.844947099685669
    7. 'éf' → logprob: -2.969947099685669
    8. 'é' → logprob: -3.719947099685669
    9. 'ep' → logprob: -4.21994686126709
    10. 'une' → logprob: -4.46994686126709

Token 757: ' si' (ID: 1784)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06898102164268494
    2. 'd' → logprob: -3.8189809322357178
    3. 'e' → logprob: -3.9439809322357178
    4. '=' → logprob: -5.193981170654297
    5. ' )' → logprob: -5.318981170654297
    6. 'r' → logprob: -5.568981170654297
    7. 's' → logprob: -6.068981170654297
    8. ')
' → logprob: -6.193981170654297
    9. 'ing' → logprob: -6.568981170654297
    10. ' ' → logprob: -7.568981170654297

Token 758: ' taille' (ID: 41644)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.9002231955528259
    2. 'depth' → logprob: -1.5252232551574707
    3. ' la' → logprob: -1.9002232551574707
    4. ' depth' → logprob: -2.4002232551574707
    5. ' len' → logprob: -2.7752232551574707
    6. 'la' → logprob: -4.025223255157471
    7. 'l' → logprob: -4.900223255157471
    8. 'le' → logprob: -5.275223255157471
    9. 'not' → logprob: -5.525223255157471
    10. 'k' → logprob: -5.650223255157471

Token 759: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.20600160956382751
    2. ' >' → logprob: -1.83100163936615
    3. '>=' → logprob: -5.0810017585754395
    4. ' >=' → logprob: -5.5810017585754395
    5. ' dépass' → logprob: -5.7060017585754395
    6. 'ex' → logprob: -5.8310017585754395
    7. ' <=' → logprob: -6.0810017585754395
    8. '<=' → logprob: -6.0810017585754395
    9. ' dépasse' → logprob: -6.3310017585754395
    10. ')' → logprob: -7.3310017585754395

Token 760: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.6339017152786255
    2. 'k' → logprob: -0.7589017152786255
    3. '100' → logprob: -7.508901596069336
    4. ' ' → logprob: -7.758901596069336
    5. '50' → logprob: -9.258901596069336
    6. '10' → logprob: -9.633901596069336
    7. '20' → logprob: -10.008901596069336
    8. ' ' → logprob: -10.383901596069336
    9. '1' → logprob: -10.633901596069336
    10. '```' → logprob: -11.383901596069336

Token 761: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.024803252890706062
    2. ' )' → logprob: -4.149803161621094
    3. '):' → logprob: -5.274803161621094
    4. ' or' → logprob: -7.524803161621094
    5. '_' → logprob: -7.524803161621094
    6. ',' → logprob: -8.149803161621094
    7. '_)' → logprob: -8.399803161621094
    8. '=' → logprob: -8.524803161621094
    9. ' ' → logprob: -8.649803161621094
    10. '):
' → logprob: -8.899803161621094

Token 762: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2598095238208771
    2. '(
' → logprob: -2.5098094940185547
    3. '
' → logprob: -3.0098094940185547
    4. ':
' → logprob: -3.2598094940185547
    5. ':' → logprob: -3.7598094940185547
    6. '\' → logprob: -4.759809494018555
    7. '(' → logprob: -5.259809494018555
    8. '[
' → logprob: -5.884809494018555
    9. ' def' → logprob: -6.134809494018555
    10. '[' → logprob: -6.259809494018555

Token 763: '      ' (ID: 1699)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8000519275665283
    2. 'def' → logprob: -1.4250519275665283
    3. '(' → logprob: -2.3000519275665283
    4. '[' → logprob: -3.3000519275665283
    5. '(
' → logprob: -3.4250519275665283
    6. '
' → logprob: -3.5500519275665283
    7. ' =' → logprob: -3.8000519275665283
    8. '\' → logprob: -4.425051689147949
    9. '#' → logprob: -4.925051689147949
    10. ''' → logprob: -5.050051689147949

Token 764: ' -' (ID: 533)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -2.1185874938964844
    2. '   ' → logprob: -2.2435874938964844
    3. 'def' → logprob: -2.3685874938964844
    4. ')' → logprob: -2.3685874938964844
    5. '       ' → logprob: -2.3685874938964844
    6. ' ' → logprob: -2.4935874938964844
    7. '(
' → logprob: -2.6185874938964844
    8. ':' → logprob: -3.2435874938964844
    9. '(' → logprob: -3.4935874938964844
    10. 'for' → logprob: -3.7435874938964844

Token 765: ' Calcul' (ID: 57243)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4853613078594208
    2. 'for' → logprob: -1.4853613376617432
    3. '      ' → logprob: -3.485361337661743
    4. 'continue' → logprob: -3.735361337661743
    5. 'contin' → logprob: -3.860361337661743
    6. ' #' → logprob: -3.860361337661743
    7. '       ' → logprob: -3.985361337661743
    8. ' for' → logprob: -5.360361099243164
    9. 'def' → logprob: -5.485361099243164
    10. 'keep' → logprob: -5.735361099243164

Token 766: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.30197298526763916
    2. 'ate' → logprob: -1.4269729852676392
    3. '#' → logprob: -4.30197286605835
    4. 'ulate' → logprob: -5.92697286605835
    5. 'def' → logprob: -6.67697286605835
    6. 'iter' → logprob: -7.67697286605835
    7. ')' → logprob: -8.051973342895508
    8. 'ateur' → logprob: -8.176973342895508
    9. 'ating' → logprob: -8.301973342895508
    10. 'import' → logprob: -8.426973342895508

Token 767: ' surface' (ID: 9753)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.33463871479034424
    2. ' l' → logprob: -2.8346385955810547
    3. ' _' → logprob: -2.8346385955810547
    4. '_' → logprob: -2.9596385955810547
    5. ' les' → logprob: -3.4596385955810547
    6. ' le' → logprob: -3.9596385955810547
    7. ' des' → logprob: -4.459638595581055
    8. '_le' → logprob: -4.459638595581055
    9. 'le' → logprob: -5.084638595581055
    10. '```' → logprob: -5.459638595581055

Token 768: ' pour' (ID: 1930)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.5413224697113037
    2. ' =' → logprob: -1.6663224697113037
    3. '(' → logprob: -2.1663224697113037
    4. ':' → logprob: -2.2913224697113037
    5. '_' → logprob: -2.5413224697113037
    6. '(
' → logprob: -2.9163224697113037
    7. '=' → logprob: -3.1663224697113037
    8. ',' → logprob: -3.4163224697113037
    9. ')' → logprob: -3.4163224697113037
    10. '
' → logprob: -4.041322708129883

Token 769: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.034449346363544464
    2. ' l' → logprob: -5.159449577331543
    3. ' les' → logprob: -5.159449577331543
    4. 'les' → logprob: -5.284449577331543
    5. ' each' → logprob: -5.534449577331543
    6. 'ensemble' → logprob: -6.034449577331543
    7. 'each' → logprob: -6.159449577331543
    8. 'l' → logprob: -6.284449577331543
    9. 'ces' → logprob: -6.534449577331543
    10. ' la' → logprob: -6.909449577331543

Token 770: ' ensemble' (ID: 33081)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.39036673307418823
    2. 'ensemble' → logprob: -1.640366792678833
    3. ')' → logprob: -3.015366792678833
    4. ' _' → logprob: -3.640366792678833
    5. ' ensemble' → logprob: -3.640366792678833
    6. 'subset' → logprob: -5.140366554260254
    7. ' )' → logprob: -5.390366554260254
    8. ' ' → logprob: -6.640366554260254
    9. 'ense' → logprob: -6.890366554260254
    10. ' subset' → logprob: -6.890366554260254

Token 771: ' conn' (ID: 10850)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8506352305412292
    2. ':' → logprob: -1.975635290145874
    3. 'def' → logprob: -2.225635290145874
    4. '=' → logprob: -2.475635290145874
    5. '_' → logprob: -2.725635290145874
    6. '(' → logprob: -3.225635290145874
    7. '[' → logprob: -3.850635290145874
    8. 'import' → logprob: -4.100635051727295
    9. ',' → logprob: -4.350635051727295
    10. ' ' → logprob: -4.350635051727295

Token 772: 'exe' (ID: 70589)
  Prédit: 'ect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ect' → logprob: -0.5542548894882202
    2. 'ected' → logprob: -1.8042548894882202
    3. ')' → logprob: -2.1792550086975098
    4. '_' → logprob: -3.0542550086975098
    5. 'e' → logprob: -3.5542550086975098
    6. 'u' → logprob: -3.8042550086975098
    7. 's' → logprob: -4.17925500869751
    8. 'n' → logprob: -5.42925500869751
    9. '))' → logprob: -5.55425500869751
    10. 'ection' → logprob: -5.92925500869751

Token 773: ' de' (ID: 334)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.1602169275283813
    2. '_' → logprob: -1.5352169275283813
    3. '(' → logprob: -1.7852169275283813
    4. 'def' → logprob: -2.410216808319092
    5. ':' → logprob: -3.160216808319092
    6. '[' → logprob: -3.285216808319092
    7. '(
' → logprob: -4.035216808319092
    8. '=' → logprob: -4.035216808319092
    9. 's' → logprob: -4.410216808319092
    10. ',' → logprob: -4.660216808319092

Token 774: ' taille' (ID: 41644)
  Prédit: ' taille'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' taille' → logprob: -0.5957170128822327
    2. ' k' → logprob: -1.470716953277588
    3. ' size' → logprob: -2.345716953277588
    4. 'size' → logprob: -3.220716953277588
    5. 'tail' → logprob: -3.220716953277588
    6. 'k' → logprob: -3.970716953277588
    7. ' ' → logprob: -4.720716953277588
    8. '_' → logprob: -5.595716953277588
    9. ' la' → logprob: -6.095716953277588
    10. ' _' → logprob: -6.220716953277588

Token 775: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -1.086449384689331
    2. 'k' → logprob: -1.836449384689331
    3. '+' → logprob: -2.086449384689331
    4. ' <=' → logprob: -2.211449384689331
    5. ' +' → logprob: -2.211449384689331
    6. ' ==' → logprob: -2.961449384689331
    7. ' ' → logprob: -3.711449384689331
    8. '<=' → logprob: -4.08644962310791
    9. '=' → logprob: -4.33644962310791
    10. ' =' → logprob: -4.58644962310791

Token 776: ' rencontré' (ID: 141085)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1133895292878151
    2. '
' → logprob: -3.863389492034912
    3. ' =' → logprob: -3.988389492034912
    4. '(s' → logprob: -4.238389492034912
    5. ':' → logprob: -4.363389492034912
    6. 's' → logprob: -4.988389492034912
    7. ' def' → logprob: -5.238389492034912
    8. ':
' → logprob: -5.363389492034912
    9. '(
' → logprob: -5.363389492034912
    10. 'import' → logprob: -5.988389492034912

Token 777: '.
' (ID: 558)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0581929050385952
    2. ':
' → logprob: -3.6831929683685303
    3. '
' → logprob: -4.433192729949951
    4. ':' → logprob: -4.558192729949951
    5. '(s' → logprob: -6.308192729949951
    6. '\' → logprob: -6.683192729949951
    7. 's' → logprob: -6.808192729949951
    8. '(
' → logprob: -7.058192729949951
    9. ' def' → logprob: -7.308192729949951
    10. '\n' → logprob: -7.308192729949951

Token 778: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.30022355914115906
    2. '(
' → logprob: -2.1752235889434814
    3. '(' → logprob: -2.5502235889434814
    4. '\' → logprob: -3.8002235889434814
    5. ':' → logprob: -4.175223350524902
    6. '
' → logprob: -5.675223350524902
    7. ' def' → logprob: -5.925223350524902
    8. '[' → logprob: -6.050223350524902
    9. '\n' → logprob: -6.050223350524902
    10. '#' → logprob: -6.175223350524902

Token 779: '      ' (ID: 1699)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.068374752998352
    2. '(' → logprob: -2.1933746337890625
    3. '\n' → logprob: -2.3183746337890625
    4. '\' → logprob: -2.4433746337890625
    5. '(
' → logprob: -2.4433746337890625
    6. '
' → logprob: -2.5683746337890625
    7. 'import' → logprob: -3.9433746337890625
    8. ':' → logprob: -3.9433746337890625
    9. ' =' → logprob: -3.9433746337890625
    10. '[' → logprob: -4.1933746337890625

Token 780: ' -' (ID: 533)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.2954728305339813
    2. '       ' → logprob: -2.1704728603363037
    3. ':' → logprob: -3.7954728603363037
    4. 'for' → logprob: -3.9204728603363037
    5. ':
' → logprob: -4.045472621917725
    6. 'def' → logprob: -4.420472621917725
    7. '   ' → logprob: -4.545472621917725
    8. '#
' → logprob: -4.670472621917725
    9. 'import' → logprob: -4.920472621917725
    10. '           ' → logprob: -5.170472621917725

Token 781: ' M' (ID: 391)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.0677616074681282
    2. 'contin' → logprob: -3.4427616596221924
    3. '       ' → logprob: -4.567761421203613
    4. ' #' → logprob: -5.192761421203613
    5. 'import' → logprob: -5.567761421203613
    6. 'stock' → logprob: -6.067761421203613
    7. 'continue' → logprob: -6.567761421203613
    8. ' stock' → logprob: -6.567761421203613
    9. 'Contin' → logprob: -6.942761421203613
    10. 'return' → logprob: -7.192761421203613

Token 782: 'ém' (ID: 4135)
  Prédit: 'ax'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ax' → logprob: -0.7991245985031128
    2. 'e' → logprob: -1.2991245985031128
    3. 'é' → logprob: -2.2991247177124023
    4. 'in' → logprob: -2.4241247177124023
    5. 'et' → logprob: -3.4241247177124023
    6. '#' → logprob: -3.6741247177124023
    7. 'a' → logprob: -5.174124717712402
    8. 'emor' → logprob: -5.799124717712402
    9. 'ean' → logprob: -6.174124717712402
    10. 'em' → logprob: -6.174124717712402

Token 783: 'or' (ID: 267)
  Prédit: 'oire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oire' → logprob: -0.8928173780441284
    2. 'o' → logprob: -1.0178173780441284
    3. 'é' → logprob: -3.142817497253418
    4. 'or' → logprob: -3.267817497253418
    5. 'ory' → logprob: -3.392817497253418
    6. 'ó' → logprob: -3.392817497253418
    7. '```' → logprob: -4.017817497253418
    8. 'emo' → logprob: -4.267817497253418
    9. 'oir' → logprob: -4.767817497253418
    10. 'ém' → logprob: -4.767817497253418

Token 784: 'iser' (ID: 7466)
  Prédit: 'ize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ize' → logprob: -0.1271233856678009
    2. 'iser' → logprob: -2.6271233558654785
    3. 'ise' → logprob: -3.8771233558654785
    4. 'is' → logprob: -4.2521233558654785
    5. 'izer' → logprob: -5.6271233558654785
    6. 'er' → logprob: -5.8771233558654785
    7. '#' → logprob: -7.2521233558654785
    8. 'y' → logprob: -7.2521233558654785
    9. 'e' → logprob: -7.3771233558654785
    10. 'ized' → logprob: -7.3771233558654785

Token 785: ' la' (ID: 557)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3064981698989868
    2. ' _' → logprob: -2.6814980506896973
    3. '```' → logprob: -3.8064980506896973
    4. '_le' → logprob: -3.9314980506896973
    5. ' le' → logprob: -4.056498050689697
    6. ')' → logprob: -4.056498050689697
    7. 'le' → logprob: -4.181498050689697
    8. ' =' → logprob: -4.306498050689697
    9. ' la' → logprob: -4.431498050689697
    10. 'ensemble' → logprob: -4.681498050689697

Token 786: ' surface' (ID: 9753)
  Prédit: ' best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' best' → logprob: -0.7625505924224854
    2. 'best' → logprob: -1.5125505924224854
    3. ' meilleure' → logprob: -1.7625505924224854
    4. ' meilleur' → logprob: -3.1375505924224854
    5. 'me' → logprob: -3.2625505924224854
    6. '_best' → logprob: -4.012550354003906
    7. ' minimal' → logprob: -4.387550354003906
    8. ' surface' → logprob: -5.137550354003906
    9. '_' → logprob: -5.512550354003906
    10. ' minimum' → logprob: -5.637550354003906

Token 787: ' minimale' (ID: 143217)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.1117769479751587
    2. '_' → logprob: -1.7367769479751587
    3. ',' → logprob: -2.236776828765869
    4. ':' → logprob: -2.361776828765869
    5. ' =' → logprob: -2.861776828765869
    6. '(
' → logprob: -2.986776828765869
    7. '(' → logprob: -3.736776828765869
    8. ')' → logprob: -3.736776828765869
    9. '=' → logprob: -3.986776828765869
    10. '
' → logprob: -4.236776828765869

Token 788: '.
' (ID: 558)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.0100699663162231
    2. ':' → logprob: -1.3850699663162231
    3. '
' → logprob: -2.1350698471069336
    4. ' =' → logprob: -2.6350698471069336
    5. '\n' → logprob: -3.2600698471069336
    6. '\' → logprob: -3.6350698471069336
    7. '_' → logprob: -4.010069847106934
    8. '(
' → logprob: -4.135069847106934
    9. '=' → logprob: -4.510069847106934
    10. '

' → logprob: -4.510069847106934

Token 789: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.1871110200881958
    2. '
' → logprob: -1.4371110200881958
    3. '\n' → logprob: -2.5621109008789062
    4. '\' → logprob: -2.5621109008789062
    5. '(' → logprob: -2.6871109008789062
    6. '(
' → logprob: -2.8121109008789062
    7. ':' → logprob: -3.3121109008789062
    8. ' =' → logprob: -3.9371109008789062
    9. 'import' → logprob: -4.187110900878906
    10. '

' → logprob: -4.187110900878906

Token 790: ' -' (ID: 533)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.01065089926123619
    2. '
' → logprob: -5.135651111602783
    3. 'import' → logprob: -5.885651111602783
    4. '(
' → logprob: -7.885651111602783
    5. '\' → logprob: -8.385650634765625
    6. ':
' → logprob: -8.760650634765625
    7. ' def' → logprob: -8.885650634765625
    8. '

' → logprob: -9.010650634765625
    9. 'n' → logprob: -9.010650634765625
    10. '(n' → logprob: -9.260650634765625

Token 791: ' Si' (ID: 7832)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0005882986588403583
    2. 'import' → logprob: -8.125588417053223
    3. '
' → logprob: -9.250588417053223
    4. 'from' → logprob: -9.500588417053223
    5. ' def' → logprob: -10.000588417053223
    6. '#' → logprob: -10.125588417053223
    7. ')' → logprob: -11.375588417053223
    8. 'for' → logprob: -12.000588417053223
    9. '```' → logprob: -12.125588417053223
    10. ' 
' → logprob: -12.875588417053223

Token 792: ' aucune' (ID: 51173)
  Prédit: ' minimal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' minimal' → logprob: -0.4493420720100403
    2. ' surface' → logprob: -1.6993420124053955
    3. ' not' → logprob: -2.8243420124053955
    4. ' aucune' → logprob: -3.8243420124053955
    5. ' len' → logprob: -3.9493420124053955
    6. ' la' → logprob: -4.449342250823975
    7. ' aucun' → logprob: -4.449342250823975
    8. 'surface' → logprob: -4.574342250823975
    9. ' result' → logprob: -5.199342250823975
    10. ' min' → logprob: -5.324342250823975

Token 793: ' configuration' (ID: 12282)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.7193161249160767
    2. '_' → logprob: -1.9693161249160767
    3. 'n' → logprob: -2.469316005706787
    4. ' solution' → logprob: -3.094316005706787
    5. 'ensemble' → logprob: -3.469316005706787
    6. 'position' → logprob: -3.719316005706787
    7. 'solution' → logprob: -3.719316005706787
    8. '
' → logprob: -4.344316005706787
    9. '```' → logprob: -4.344316005706787
    10. 'result' → logprob: -4.594316005706787

Token 794: ' trouv' (ID: 40254)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.21395979821681976
    2. 'n' → logprob: -2.4639596939086914
    3. '_possible' → logprob: -3.2139596939086914
    4. '_' → logprob: -3.8389596939086914
    5. ' trouv' → logprob: -4.088959693908691
    6. 'possible' → logprob: -5.088959693908691
    7. ' possible' → logprob: -5.463959693908691
    8. '_ret' → logprob: -5.963959693908691
    9. '_n' → logprob: -6.463959693908691
    10. ' trouvé' → logprob: -6.588959693908691

Token 795: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.20666082203388214
    2. 'e' → logprob: -1.8316608667373657
    3. 'é' → logprob: -3.706660747528076
    4. 'ie' → logprob: -6.581660747528076
    5. 'ee' → logprob: -8.081661224365234
    6. '=' → logprob: -8.956661224365234
    7. 'n' → logprob: -10.206661224365234
    8. 'ue' → logprob: -10.331661224365234
    9. '==' → logprob: -11.206661224365234
    10. 'е' → logprob: -11.206661224365234

Token 796: ',' (ID: 11)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -1.0641181468963623
    2. ',' → logprob: -1.1891181468963623
    3. ':' → logprob: -1.3141181468963623
    4. 'n' → logprob: -2.8141181468963623
    5. ' ,' → logprob: -5.439118385314941
    6. 'e' → logprob: -6.189118385314941
    7. ':
' → logprob: -6.189118385314941
    8. ' ' → logprob: -6.439118385314941
    9. ' =' → logprob: -6.564118385314941
    10. ' ne' → logprob: -6.814118385314941

Token 797: ' retourner' (ID: 116656)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.23540383577346802
    2. ' print' → logprob: -1.6104037761688232
    3. 'return' → logprob: -5.235404014587402
    4. ' return' → logprob: -6.110404014587402
    5. ' retourner' → logprob: -6.610404014587402
    6. '   ' → logprob: -7.235404014587402
    7. ' on' → logprob: -8.985404014587402
    8. '#' → logprob: -9.735404014587402
    9. ' afficher' → logprob: -9.985404014587402
    10. 'ret' → logprob: -10.485404014587402

Token 798: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.00044437398901209235
    2. '-' → logprob: -7.750444412231445
    3. ' ' → logprob: -11.500444412231445
    4. '```' → logprob: -13.875444412231445
    5. ' ' → logprob: -14.375444412231445
    6. ' ```' → logprob: -14.750444412231445
    7. '`' → logprob: -14.875444412231445
    8. ' `' → logprob: -14.875444412231445
    9. 'n' → logprob: -15.562944412231445
    10. '	' → logprob: -16.375444412231445

Token 799: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.531315314830863e-06
    2. '```' → logprob: -13.750003814697266
    3. '>' → logprob: -13.875003814697266
    4. ' ' → logprob: -13.875003814697266
    5. '-' → logprob: -15.000003814697266
    6. '=' → logprob: -16.750003814697266
    7. ' -' → logprob: -17.375003814697266
    8. '.' → logprob: -17.750003814697266
    9. '>
' → logprob: -17.750003814697266
    10. '">' → logprob: -18.000003814697266

Token 800: '.
' (ID: 558)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.17018552124500275
    2. '
' → logprob: -2.0451855659484863
    3. '

' → logprob: -4.920185565948486
    4. '\n' → logprob: -5.295185565948486
    5. 'import' → logprob: -5.420185565948486
    6. '\' → logprob: -5.795185565948486
    7. '
' → logprob: -6.670185565948486
    8. '
 
' → logprob: -6.920185565948486
    9. '```' → logprob: -7.295185565948486
    10. 's' → logprob: -7.295185565948486

Token 801: '#
' (ID: 11240)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5674011707305908
    2. '
' → logprob: -1.1924011707305908
    3. '\n' → logprob: -3.067401170730591
    4. '

' → logprob: -3.942401170730591
    5. '\' → logprob: -4.067400932312012
    6. '(s' → logprob: -4.817400932312012
    7. 'import' → logprob: -4.817400932312012
    8. 's' → logprob: -4.942400932312012
    9. '(
' → logprob: -5.567400932312012
    10. ':' → logprob: -5.692400932312012

Token 802: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.007185718510299921
    2. 'class' → logprob: -5.007185935974121
    3. '```' → logprob: -8.882185935974121
    4. 's' → logprob: -9.257185935974121
    5. '
' → logprob: -9.382185935974121
    6. 'import' → logprob: -9.507185935974121
    7. 'n' → logprob: -9.632185935974121
    8. '#' → logprob: -12.632185935974121
    9. 'k' → logprob: -12.882185935974121
    10. ' def' → logprob: -13.132185935974121

Token 803: ' Optim' (ID: 38267)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.000476190383778885
    2. 'class' → logprob: -8.125475883483887
    3. 'n' → logprob: -8.875475883483887
    4. 't' → logprob: -11.125475883483887
    5. 'T' → logprob: -11.500475883483887
    6. 'import' → logprob: -12.250475883483887
    7. 'k' → logprob: -12.625475883483887
    8. 's' → logprob: -12.875475883483887
    9. '
' → logprob: -13.375475883483887
    10. 'input' → logprob: -14.000475883483887

Token 804: 'isation' (ID: 6993)
  Prédit: 'isation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isation' → logprob: -0.5577513575553894
    2. 'ization' → logprob: -1.0577514171600342
    3. '#' → logprob: -3.307751417160034
    4. 'import' → logprob: -3.557751417160034
    5. '```' → logprob: -5.307751178741455
    6. 'def' → logprob: -5.557751178741455
    7. 'al' → logprob: -6.057751178741455
    8. 'isé' → logprob: -6.807751178741455
    9. 'izations' → logprob: -7.057751178741455
    10. 'isations' → logprob: -7.557751178741455

Token 805: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2638389468193054
    2. ' =' → logprob: -2.01383900642395
    3. '#' → logprob: -3.76383900642395
    4. ' :' → logprob: -4.013838768005371
    5. 'def' → logprob: -4.513838768005371
    6. 'import' → logprob: -4.638838768005371
    7. '=' → logprob: -4.763838768005371
    8. ':
' → logprob: -5.138838768005371
    9. '<|end|>' → logprob: -5.263838768005371
    10. 's' → logprob: -5.513838768005371

Token 806: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.001638885005377233
    2. 'import' → logprob: -6.626638889312744
    3. ' #' → logprob: -8.751638412475586
    4. 'from' → logprob: -10.251638412475586
    5. 'def' → logprob: -10.376638412475586
    6. 'for' → logprob: -10.501638412475586
    7. '
' → logprob: -10.876638412475586
    8. '```' → logprob: -11.126638412475586
    9. 's' → logprob: -12.001638412475586
    10. '#
' → logprob: -12.251638412475586

Token 807: ' -' (ID: 533)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3849841058254242
    2. 'from' → logprob: -1.5099841356277466
    3. 'def' → logprob: -3.134984016418457
    4. 'import' → logprob: -3.134984016418457
    5. 'visited' → logprob: -5.759984016418457
    6. 'for' → logprob: -6.009984016418457
    7. '
' → logprob: -6.384984016418457
    8. 'max' → logprob: -6.634984016418457
    9. ' from' → logprob: -7.384984016418457
    10. ' #' → logprob: -8.009984016418457

Token 808: ' Pre' (ID: 4659)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.3423808515071869
    2. '#' → logprob: -1.7173808813095093
    3. 'import' → logprob: -2.7173807621002197
    4. 'On' → logprob: -4.092381000518799
    5. 'def' → logprob: -4.467381000518799
    6. 'Util' → logprob: -5.342381000518799
    7. 'for' → logprob: -5.467381000518799
    8. 'Pour' → logprob: -5.967381000518799
    9. 'max' → logprob: -7.092381000518799
    10. 'on' → logprob: -7.217381000518799

Token 809: '-cal' (ID: 84920)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.7236523032188416
    2. 'cision' → logprob: -1.5986523628234863
    3. 'processing' → logprob: -1.7236523628234863
    4. 'dict' → logprob: -3.2236523628234863
    5. 'cis' → logprob: -3.4736523628234863
    6. 'd' → logprob: -4.598652362823486
    7. 'vious' → logprob: -4.723652362823486
    8. 'process' → logprob: -4.848652362823486
    9. 'fix' → logprob: -5.098652362823486
    10. 'compute' → logprob: -5.348652362823486

Token 810: 'cul' (ID: 2885)
  Prédit: 'ss'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ss' → logprob: -0.4260498285293579
    2. 'd' → logprob: -1.551049828529358
    3. 'c' → logprob: -3.1760497093200684
    4. 'def' → logprob: -3.1760497093200684
    5. 'nd' → logprob: -3.8010497093200684
    6. 'n' → logprob: -5.551049709320068
    7. 'ded' → logprob: -5.676049709320068
    8. 'dig' → logprob: -6.051049709320068
    9. 's' → logprob: -6.051049709320068
    10. 'ced' → logprob: -6.176049709320068

Token 811: ' des' (ID: 731)
  Prédit: 'ation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ation' → logprob: -1.8359659910202026
    2. 'ated' → logprob: -1.8359659910202026
    3. 'te' → logprob: -1.9609659910202026
    4. 'culate' → logprob: -2.460966110229492
    5. 'culation' → logprob: -2.585966110229492
    6. '   ' → logprob: -2.710966110229492
    7. 'lation' → logprob: -3.210966110229492
    8. 'culated' → logprob: -3.210966110229492
    9. 'er' → logprob: -3.335966110229492
    10. 'ate' → logprob: -3.335966110229492

Token 812: ' compos' (ID: 14635)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.6207175254821777
    2. ' voisins' → logprob: -1.9957175254821777
    3. 'neighbors' → logprob: -2.2457175254821777
    4. 'vo' → logprob: -2.4957175254821777
    5. 'adj' → logprob: -2.6207175254821777
    6. ' positions' → logprob: -3.7457175254821777
    7. ' voisin' → logprob: -4.495717525482178
    8. ' neighbors' → logprob: -4.995717525482178
    9. ' adjacency' → logprob: -5.245717525482178
    10. 'l' → logprob: -5.870717525482178

Token 813: 'antes' (ID: 5193)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5321677327156067
    2. 'put' → logprob: -2.032167673110962
    3. '#' → logprob: -2.657167673110962
    4. 'puted' → logprob: -2.907167673110962
    5. 'ponents' → logprob: -3.032167673110962
    6. 'putation' → logprob: -4.282167911529541
    7. 'nt' → logprob: -4.407167911529541
    8. 'pu' → logprob: -4.782167911529541
    9. 'positions' → logprob: -5.032167911529541
    10. 'u' → logprob: -5.157167911529541

Token 814: ' connex' (ID: 154480)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3605884909629822
    2. '=' → logprob: -2.360588550567627
    3. 'components' → logprob: -2.860588550567627
    4. ' =' → logprob: -3.110588550567627
    5. '#' → logprob: -3.610588550567627
    6. 'conn' → logprob: -4.360588550567627
    7. '_components' → logprob: -4.610588550567627
    8. '_connected' → logprob: -4.860588550567627
    9. '_conn' → logprob: -4.985588550567627
    10. '=
' → logprob: -5.360588550567627

Token 815: 'es' (ID: 268)
  Prédit: 'conn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'conn' → logprob: -0.2777040898799896
    2. 'entes' → logprob: -1.777704119682312
    3. 'ents' → logprob: -4.152704238891602
    4. 'n' → logprob: -4.652704238891602
    5. 'on' → logprob: -4.652704238891602
    6. 'onnes' → logprob: -5.277704238891602
    7. '_conn' → logprob: -5.402704238891602
    8. 'onn' → logprob: -5.527704238891602
    9. 'antes' → logprob: -6.027704238891602
    10. 'connected' → logprob: -6.027704238891602

Token 816: '.
' (ID: 558)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.05983682721853256
    2. '
' → logprob: -3.4348368644714355
    3. ':
' → logprob: -4.6848368644714355
    4. 'import' → logprob: -4.9348368644714355
    5. '\' → logprob: -6.4348368644714355
    6. 'from' → logprob: -6.6848368644714355
    7. '

' → logprob: -6.8098368644714355
    8. 'n' → logprob: -7.1848368644714355
    9. 'class' → logprob: -7.1848368644714355
    10. ':' → logprob: -7.4348368644714355

Token 817: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.14949557185173035
    2. '
' → logprob: -2.5244956016540527
    3. 'import' → logprob: -3.6494956016540527
    4. '

' → logprob: -4.274495601654053
    5. 's' → logprob: -4.899495601654053
    6. '```' → logprob: -5.524495601654053
    7. 'from' → logprob: -6.649495601654053
    8. 'class' → logprob: -6.649495601654053
    9. '\' → logprob: -7.149495601654053
    10. '(s' → logprob: -7.399495601654053

Token 818: ' -' (ID: 533)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.023082289844751358
    2. '
' → logprob: -4.523082256317139
    3. 'import' → logprob: -5.773082256317139
    4. 'n' → logprob: -6.398082256317139
    5. '#' → logprob: -6.523082256317139
    6. 'class' → logprob: -6.773082256317139
    7. 'from' → logprob: -7.023082256317139
    8. 's' → logprob: -7.273082256317139
    9. 'visited' → logprob: -7.523082256317139
    10. '\' → logprob: -7.648082256317139

Token 819: ' Pour' (ID: 13931)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0220184326171875
    2. 'from' → logprob: -1.0220184326171875
    3. 'for' → logprob: -2.1470184326171875
    4. 'def' → logprob: -2.2720184326171875
    5. 'visited' → logprob: -3.5220184326171875
    6. 'import' → logprob: -4.3970184326171875
    7. 'Build' → logprob: -5.5220184326171875
    8. 'Constru' → logprob: -5.5220184326171875
    9. 'build' → logprob: -5.8970184326171875
    10. '
' → logprob: -7.1470184326171875

Token 820: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.05844299495220184
    2. 'cha' → logprob: -3.808443069458008
    3. 'ch' → logprob: -4.433443069458008
    4. 'each' → logprob: -4.808443069458008
    5. ' comp' → logprob: -6.308443069458008
    6. 'c' → logprob: -6.433443069458008
    7. 'comp' → logprob: -6.433443069458008
    8. 'component' → logprob: -6.933443069458008
    9. 'com' → logprob: -7.058443069458008
    10. 'part' → logprob: -7.058443069458008

Token 821: ' compos' (ID: 14635)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.08647840470075607
    2. ' compos' → logprob: -2.5864784717559814
    3. 'component' → logprob: -5.961478233337402
    4. 'c' → logprob: -6.086478233337402
    5. 'comp' → logprob: -6.336478233337402
    6. 'cc' → logprob: -7.836478233337402
    7. 'conn' → logprob: -8.086478233337402
    8. '#' → logprob: -9.211478233337402
    9. 'connected' → logprob: -10.461478233337402
    10. '
' → logprob: -10.711478233337402

Token 822: 'ante' (ID: 2116)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.1758272349834442
    2. 'ponent' → logprob: -2.1758272647857666
    3. '#' → logprob: -4.4258270263671875
    4. 'ité' → logprob: -4.8008270263671875
    5. 'ante' → logprob: -5.6758270263671875
    6. 'ponente' → logprob: -5.6758270263671875
    7. 'onent' → logprob: -5.9258270263671875
    8. 'on' → logprob: -5.9258270263671875
    9. '
' → logprob: -6.0508270263671875
    10. 'def' → logprob: -6.0508270263671875

Token 823: ' ayant' (ID: 45436)
  Prédit: 'conn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'conn' → logprob: -0.6354941129684448
    2. '_conn' → logprob: -0.7604941129684448
    3. '_' → logprob: -7.635494232177734
    4. '_size' → logprob: -7.760494232177734
    5. '_connected' → logprob: -7.885494232177734
    6. ' =' → logprob: -8.385494232177734
    7. '#' → logprob: -8.385494232177734
    8. 'def' → logprob: -8.635494232177734
    9. '_connect' → logprob: -9.260494232177734
    10. ':' → logprob: -9.385494232177734

Token 824: ' taille' (ID: 41644)
  Prédit: 'tail'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tail' → logprob: -0.010024980641901493
    2. 'une' → logprob: -5.1350250244140625
    3. '>' → logprob: -6.3850250244140625
    4. 'au' → logprob: -6.6350250244140625
    5. 'size' → logprob: -7.7600250244140625
    6. '#' → logprob: -8.135025024414062
    7. 'plus' → logprob: -9.010025024414062
    8. 't' → logprob: -9.010025024414062
    9. '>=' → logprob: -10.635025024414062
    10. ' taille' → logprob: -10.760025024414062

Token 825: ' >=' (ID: 5064)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.3143610954284668
    2. '>=' → logprob: -1.3143610954284668
    3. ' >' → logprob: -7.689361095428467
    4. ' >=' → logprob: -8.189361572265625
    5. '<=' → logprob: -8.439361572265625
    6. '≥' → logprob: -9.564361572265625
    7. '<' → logprob: -9.689361572265625
    8. 'au' → logprob: -12.064361572265625
    9. 'sup' → logprob: -12.564361572265625
    10. '#' → logprob: -13.814361572265625

Token 826: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0004885728703811765
    2. ' k' → logprob: -7.625488758087158
    3. ' ' → logprob: -15.25048828125
    4. '```' → logprob: -15.75048828125
    5. '
' → logprob: -16.75048828125
    6. '`' → logprob: -17.62548828125
    7. '   ' → logprob: -18.00048828125
    8. '_k' → logprob: -18.62548828125
    9. 'к' → logprob: -19.12548828125
    10. '2' → logprob: -19.37548828125

Token 827: ',' (ID: 11)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.4204670786857605
    2. ',' → logprob: -1.7954671382904053
    3. ':' → logprob: -2.0454671382904053
    4. '#' → logprob: -3.7954671382904053
    5. ',
' → logprob: -3.9204671382904053
    6. 'def' → logprob: -6.170466899871826
    7. 'for' → logprob: -7.295466899871826
    8. 'import' → logprob: -8.545467376708984
    9. '```' → logprob: -8.545467376708984
    10. '#
' → logprob: -8.545467376708984

Token 828: ' on' (ID: 402)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.9226989150047302
    2. '#' → logprob: -1.172698974609375
    3. ' on' → logprob: -1.922698974609375
    4. 'faire' → logprob: -3.172698974609375
    5. 'tr' → logprob: -3.797698974609375
    6. ' explorer' → logprob: -3.922698974609375
    7. ' continuer' → logprob: -4.172698974609375
    8. 'contin' → logprob: -4.422698974609375
    9. 'expl' → logprob: -4.672698974609375
    10. ' effectuer' → logprob: -5.297698974609375

Token 829: ' tente' (ID: 75234)
  Prédit: 'expl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'expl' → logprob: -0.4102727472782135
    2. 'pe' → logprob: -2.2852728366851807
    3. 'fait' → logprob: -2.6602728366851807
    4. 'continue' → logprob: -3.0352728366851807
    5. 'tr' → logprob: -4.160272598266602
    6. '#' → logprob: -4.160272598266602
    7. 'effect' → logprob: -4.160272598266602
    8. 'cal' → logprob: -4.410272598266602
    9. 'cherche' → logprob: -4.910272598266602
    10. 'util' → logprob: -4.910272598266602

Token 830: ' BFS' (ID: 190016)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.7136483788490295
    2. ' d' → logprob: -1.0886483192443848
    3. 'de' → logprob: -2.4636483192443848
    4. 'une' → logprob: -2.8386483192443848
    5. ' de' → logprob: -3.8386483192443848
    6. ' une' → logprob: -5.338648319244385
    7. 'un' → logprob: -6.838648319244385
    8. '    ' → logprob: -7.088648319244385
    9. ' un' → logprob: -8.088648796081543
    10. '   ' → logprob: -8.088648796081543

Token 831: ' ou' (ID: 2031)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5988456606864929
    2. '(
' → logprob: -1.8488457202911377
    3. ':' → logprob: -2.2238457202911377
    4. '_' → logprob: -3.2238457202911377
    5. '(' → logprob: -3.3488457202911377
    6. '(s' → logprob: -3.8488457202911377
    7. '
' → logprob: -3.9738457202911377
    8. ':
' → logprob: -4.348845481872559
    9. ' =' → logprob: -4.723845481872559
    10. '#' → logprob: -5.223845481872559

Token 832: ' DFS' (ID: 115767)
  Prédit: 'DFS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DFS' → logprob: -0.6149133443832397
    2. ' DFS' → logprob: -1.4899133443832397
    3. 'dfs' → logprob: -1.8649133443832397
    4. 'import' → logprob: -3.7399134635925293
    5. '#' → logprob: -3.8649134635925293
    6. 'heap' → logprob: -5.364913463592529
    7. 'une' → logprob: -5.364913463592529
    8. ' dfs' → logprob: -5.614913463592529
    9. '```' → logprob: -5.739913463592529
    10. 'deque' → logprob: -5.989913463592529

Token 833: ' pour' (ID: 1930)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1908227503299713
    2. '(
' → logprob: -2.4408228397369385
    3. ':
' → logprob: -3.5658228397369385
    4. ':' → logprob: -4.065822601318359
    5. 'for' → logprob: -4.815822601318359
    6. 's' → logprob: -4.815822601318359
    7. '(' → logprob: -5.190822601318359
    8. '(s' → logprob: -5.565822601318359
    9. 'from' → logprob: -5.940822601318359
    10. 'import' → logprob: -6.315822601318359

Token 834: ' trouver' (ID: 23195)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.8956131935119629
    2. ' explorer' → logprob: -1.520613193511963
    3. ' trouver' → logprob: -1.520613193511963
    4. 'expl' → logprob: -2.145613193511963
    5. ' génér' → logprob: -5.145613193511963
    6. 'g' → logprob: -5.145613193511963
    7. 'enumer' → logprob: -5.145613193511963
    8. ' sélectionner' → logprob: -5.145613193511963
    9. 'sé' → logprob: -6.270613193511963
    10. 'chercher' → logprob: -6.270613193511963

Token 835: ' aucune' (ID: 51173)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.8690860867500305
    2. 'les' → logprob: -1.7440860271453857
    3. 'des' → logprob: -2.2440860271453857
    4. 'k' → logprob: -2.4940860271453857
    5. ' k' → logprob: -2.4940860271453857
    6. 'un' → logprob: -2.8690860271453857
    7. 'une' → logprob: -3.4940860271453857
    8. 'le' → logprob: -4.494086265563965
    9. ' un' → logprob: -4.744086265563965
    10. ' les' → logprob: -4.869086265563965

Token 836: ' à' (ID: 1221)
  Prédit: 'ensemble'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ensemble' → logprob: -1.2133747339248657
    2. 'ense' → logprob: -1.3383747339248657
    3. 's' → logprob: -1.9633747339248657
    4. 'conn' → logprob: -2.463374614715576
    5. 'plus' → logprob: -3.963374614715576
    6. 'subset' → logprob: -3.963374614715576
    7. 'c' → logprob: -4.463374614715576
    8. 'com' → logprob: -4.588374614715576
    9. ' ensembles' → logprob: -4.588374614715576
    10. '#' → logprob: -4.588374614715576

Token 837: ' tous' (ID: 10688)
  Prédit: 'tail'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tail' → logprob: -0.7804006338119507
    2. 'part' → logprob: -2.0304007530212402
    3. 'k' → logprob: -2.4054007530212402
    4. 'tr' → logprob: -2.9054007530212402
    5. 'gr' → logprob: -3.0304007530212402
    6. 'large' → logprob: -3.0304007530212402
    7. 'grand' → logprob: -3.5304007530212402
    8. 'atte' → logprob: -3.9054007530212402
    9. 't' → logprob: -4.78040075302124
    10. 'prof' → logprob: -5.03040075302124

Token 838: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.03936174139380455
    2. ' les' → logprob: -5.414361953735352
    3. 'ensemble' → logprob: -5.539361953735352
    4. 'es' → logprob: -5.664361953735352
    5. 's' → logprob: -6.289361953735352
    6. '#' → logprob: -6.414361953735352
    7. '```' → logprob: -6.414361953735352
    8. 'c' → logprob: -6.539361953735352
    9. 'une' → logprob: -6.539361953735352
    10. 'aj' → logprob: -6.539361953735352

Token 839: ' sous' (ID: 14487)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.359061360359192
    2. 'som' → logprob: -1.609061360359192
    3. 'vo' → logprob: -1.859061360359192
    4. 'k' → logprob: -2.1090612411499023
    5. ' somm' → logprob: -2.6090612411499023
    6. 'c' → logprob: -2.9840612411499023
    7. 'niveau' → logprob: -3.8590612411499023
    8. 'n' → logprob: -3.9840612411499023
    9. 'moins' → logprob: -4.484061241149902
    10. ' voisins' → logprob: -4.734061241149902

Token 840: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.4563894271850586
    2. '_' → logprob: -1.7063894271850586
    3. '_graph' → logprob: -2.4563894271850586
    4. 'graph' → logprob: -3.2063894271850586
    5. 'ense' → logprob: -3.8313894271850586
    6. 'ensemble' → logprob: -4.831389427185059
    7. '_com' → logprob: -5.206389427185059
    8. 'sets' → logprob: -5.831389427185059
    9. '_j' → logprob: -5.831389427185059
    10. '_c' → logprob: -6.081389427185059

Token 841: 'ense' (ID: 1603)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.09674593061208725
    2. 'gr' → logprob: -2.4717459678649902
    3. 'graphs' → logprob: -5.59674596786499
    4. 'ense' → logprob: -5.72174596786499
    5. 'ensemble' → logprob: -8.221745491027832
    6. 'com' → logprob: -8.721745491027832
    7. '_graph' → logprob: -9.096745491027832
    8. 'group' → logprob: -9.471745491027832
    9. 'grp' → logprob: -10.471745491027832
    10. 's' → logprob: -10.596745491027832

Token 842: 'mbles' (ID: 60383)
  Prédit: 'ts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ts' → logprob: -0.11341029405593872
    2. 't' → logprob: -2.363410234451294
    3. 'mbles' → logprob: -4.863410472869873
    4. 'nts' → logprob: -6.488410472869873
    5. 'mb' → logprob: -6.863410472869873
    6. 'quences' → logprob: -7.113410472869873
    7. 'mble' → logprob: -7.988410472869873
    8. 'n' → logprob: -8.113409996032715
    9. 'tu' → logprob: -8.488409996032715
    10. 'm' → logprob: -8.738409996032715

Token 843: ' connex' (ID: 154480)
  Prédit: 'conn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'conn' → logprob: -0.755713701248169
    2. 'def' → logprob: -2.380713701248169
    3. 'possible' → logprob: -2.505713701248169
    4. 'de' → logprob: -2.630713701248169
    5. '_conn' → logprob: -3.130713701248169
    6. '#' → logprob: -3.255713701248169
    7. 's' → logprob: -3.505713701248169
    8. 'des' → logprob: -3.630713701248169
    9. ' possibles' → logprob: -4.13071346282959
    10. 'dans' → logprob: -4.63071346282959

Token 844: 'es' (ID: 268)
  Prédit: 'ect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ect' → logprob: -0.8829094171524048
    2. 'ects' → logprob: -1.7579094171524048
    3. 'ets' → logprob: -2.2579092979431152
    4. 'écut' → logprob: -2.3829092979431152
    5. 'ected' → logprob: -3.5079092979431152
    6. 'é' → logprob: -3.6329092979431152
    7. '```' → logprob: -3.8829092979431152
    8. 'x' → logprob: -4.132909297943115
    9. 'e' → logprob: -4.257909297943115
    10. 't' → logprob: -4.757909297943115

Token 845: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'de' → logprob: -1.0241721868515015
    2. 'def' → logprob: -1.6491721868515015
    3. 'possible' → logprob: -2.399172306060791
    4. 's' → logprob: -2.899172306060791
    5. ',' → logprob: -3.399172306060791
    6. '#' → logprob: -3.774172306060791
    7. ':' → logprob: -3.774172306060791
    8. '_possible' → logprob: -3.899172306060791
    9. 'for' → logprob: -4.024172306060791
    10. 'of' → logprob: -4.024172306060791

Token 846: ' taille' (ID: 41644)
  Prédit: 'tail'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tail' → logprob: -0.07151150703430176
    2. 'k' → logprob: -2.8215115070343018
    3. ' taille' → logprob: -5.071511268615723
    4. ' k' → logprob: -6.196511268615723
    5. 'size' → logprob: -7.821511268615723
    6. 'ta' → logprob: -8.321511268615723
    7. 'tails' → logprob: -9.446511268615723
    8. 'la' → logprob: -9.696511268615723
    9. '```' → logprob: -9.696511268615723
    10. 't' → logprob: -9.946511268615723

Token 847: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.18514157831668854
    2. ' k' → logprob: -1.8101415634155273
    3. 'exact' → logprob: -5.560141563415527
    4. '=k' → logprob: -8.185141563415527
    5. 'sup' → logprob: -8.310141563415527
    6. ' au' → logprob: -8.560141563415527
    7. 'max' → logprob: -8.685141563415527
    8. ' exact' → logprob: -8.685141563415527
    9. 'au' → logprob: -9.185141563415527
    10. '<=' → logprob: -9.685141563415527

Token 848: ' :' (ID: 712)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.09261716902256012
    2. ':' → logprob: -3.2176172733306885
    3. ':
' → logprob: -3.3426172733306885
    4. 's' → logprob: -5.967617034912109
    5. '(s' → logprob: -6.092617034912109
    6. 'import' → logprob: -6.217617034912109
    7. '
' → logprob: -7.217617034912109
    8. '(
' → logprob: -7.342617034912109
    9. ' =' → logprob: -7.592617034912109
    10. '```' → logprob: -7.592617034912109

Token 849: ' cette' (ID: 7696)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.19763495028018951
    2. '#' → logprob: -2.1976349353790283
    3. ' def' → logprob: -3.4476349353790283
    4. 'import' → logprob: -4.072635173797607
    5. '```' → logprob: -5.822635173797607
    6. ':' → logprob: -5.947635173797607
    7. '
' → logprob: -6.572635173797607
    8. ' #' → logprob: -6.572635173797607
    9. 's' → logprob: -6.697635173797607
    10. ' pass' → logprob: -6.822635173797607

Token 850: ' approche' (ID: 102373)
  Prédit: ' code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' code' → logprob: -1.4116307497024536
    2. ' space' → logprob: -2.036630630493164
    3. '_' → logprob: -2.536630630493164
    4. ' ' → logprob: -2.536630630493164
    5. '#' → logprob: -2.661630630493164
    6. ' _' → logprob: -3.036630630493164
    7. ' ' → logprob: -3.286630630493164
    8. ' part' → logprob: -3.286630630493164
    9. ' recherche' → logprob: -3.411630630493164
    10. ' #' → logprob: -3.661630630493164

Token 851: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.9473366141319275
    2. '#' → logprob: -2.0723366737365723
    3. ' ne' → logprob: -2.4473366737365723
    4. ' n' → logprob: -2.6973366737365723
    5. ' s' → logprob: -2.9473366737365723
    6. ' continue' → logprob: -3.3223366737365723
    7. ' sera' → logprob: -3.8223366737365723
    8. ' complète' → logprob: -3.8223366737365723
    9. 's' → logprob: -4.072336673736572
    10. 'est' → logprob: -4.197336673736572

Token 852: ' exponent' (ID: 51159)
  Prédit: 'im'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'im' → logprob: -0.07135400921106339
    2. 'in' → logprob: -3.1963539123535156
    3. 'import' → logprob: -4.696353912353516
    4. 't' → logprob: -5.196353912353516
    5. 'tr' → logprob: -5.571353912353516
    6. 'too' → logprob: -5.946353912353516
    7. 'inut' → logprob: -6.446353912353516
    8. '```' → logprob: -7.071353912353516
    9. 'compl' → logprob: -7.196353912353516
    10. 'ex' → logprob: -7.946353912353516

Token 853: 'ielle' (ID: 22380)
  Prédit: 'ielle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ielle' → logprob: -0.019204385578632355
    2. 'iale' → logprob: -5.019204616546631
    3. 'iel' → logprob: -5.644204616546631
    4. 'i' → logprob: -5.894204616546631
    5. 'iellement' → logprob: -6.519204616546631
    6. '#' → logprob: -7.144204616546631
    7. '}' → logprob: -7.269204616546631
    8. 'nelle' → logprob: -7.644204616546631
    9. '```' → logprob: -7.769204616546631
    10. 'ial' → logprob: -8.144204139709473

Token 854: '.
' (ID: 558)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1514020413160324
    2. 'import' → logprob: -2.901401996612549
    3. ' =' → logprob: -3.901401996612549
    4. ':' → logprob: -4.151401996612549
    5. '
' → logprob: -4.901401996612549
    6. '\' → logprob: -5.526401996612549
    7. ' def' → logprob: -5.651401996612549
    8. 's' → logprob: -5.776401996612549
    9. '(' → logprob: -6.026401996612549
    10. '

' → logprob: -6.151401996612549

Token 855: '#
' (ID: 11240)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8025239706039429
    2. 'import' → logprob: -2.1775240898132324
    3. 'def' → logprob: -2.4275240898132324
    4. '[' → logprob: -2.4275240898132324
    5. '
' → logprob: -2.8025240898132324
    6. ':' → logprob: -3.3025240898132324
    7. '```' → logprob: -3.3025240898132324
    8. '<|end|>' → logprob: -3.8025240898132324
    9. ')' → logprob: -4.052524089813232
    10. '[
' → logprob: -4.177524089813232

Token 856: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.030375609174370766
    2. 'import' → logprob: -3.7803757190704346
    3. '```' → logprob: -6.1553754806518555
    4. '
' → logprob: -6.2803754806518555
    5. '#' → logprob: -6.4053754806518555
    6. 'class' → logprob: -7.7803754806518555
    7. 'n' → logprob: -8.155375480651855
    8. 'k' → logprob: -8.780375480651855
    9. '\' → logprob: -8.905375480651855
    10. '

' → logprob: -9.280375480651855

Token 857: ' Appro' (ID: 24145)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.007741609122604132
    2. 'import' → logprob: -5.132741451263428
    3. 'class' → logprob: -7.257741451263428
    4. 'n' → logprob: -8.007741928100586
    5. '#' → logprob: -8.257741928100586
    6. 'from' → logprob: -8.632741928100586
    7. '
' → logprob: -8.757741928100586
    8. '\' → logprob: -9.257741928100586
    9. '\n' → logprob: -10.757741928100586
    10. '```' → logprob: -10.882741928100586

Token 858: 'che' (ID: 926)
  Prédit: 'ach'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ach' → logprob: -0.0644444078207016
    2. 'x' → logprob: -3.5644443035125732
    3. 'def' → logprob: -3.9394443035125732
    4. '#' → logprob: -4.439444541931152
    5. 'cess' → logprob: -7.689444541931152
    6. 'val' → logprob: -8.064444541931152
    7. 's' → logprob: -8.314444541931152
    8. 'aching' → logprob: -8.564444541931152
    9. 'blem' → logprob: -8.564444541931152
    10. 'ch' → logprob: -8.689444541931152

Token 859: ' finale' (ID: 37759)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.44769105315208435
    2. 'def' → logprob: -1.0726910829544067
    3. ' =' → logprob: -5.072690963745117
    4. ' :' → logprob: -5.197690963745117
    5. 'import' → logprob: -5.572690963745117
    6. ':def' → logprob: -6.447690963745117
    7. '=' → logprob: -7.572690963745117
    8. '#' → logprob: -8.322690963745117
    9. ':
' → logprob: -8.322690963745117
    10. ' def' → logprob: -8.572690963745117

Token 860: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004895838908851147
    2. 'def' → logprob: -5.8798956871032715
    3. 'import' → logprob: -7.3798956871032715
    4. ':def' → logprob: -7.5048956871032715
    5. ':
' → logprob: -7.6298956871032715
    6. ' :' → logprob: -7.8798956871032715
    7. ' =' → logprob: -10.87989616394043
    8. ':

' → logprob: -11.50489616394043
    9. '=' → logprob: -12.00489616394043
    10. '```' → logprob: -12.37989616394043

Token 861: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.008905034512281418
    2. 'import' → logprob: -5.383904933929443
    3. '#' → logprob: -6.008904933929443
    4. 'class' → logprob: -6.758904933929443
    5. 'from' → logprob: -8.008905410766602
    6. '```' → logprob: -9.133905410766602
    7. 'pass' → logprob: -9.508905410766602
    8. ' def' → logprob: -9.508905410766602
    9. 'n' → logprob: -10.133905410766602
    10. '
' → logprob: -11.508905410766602

Token 862: ' -' (ID: 533)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.025648439303040504
    2. '#' → logprob: -3.900648355484009
    3. 'import' → logprob: -5.400648593902588
    4. 'class' → logprob: -8.40064811706543
    5. 'pass' → logprob: -8.77564811706543
    6. 'from' → logprob: -9.02564811706543
    7. ' def' → logprob: -10.15064811706543
    8. '
' → logprob: -10.77564811706543
    9. '```' → logprob: -12.15064811706543
    10. 'n' → logprob: -12.27564811706543

Token 863: ' Trou' (ID: 58947)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2447059452533722
    2. '#' → logprob: -2.11970591545105
    3. 'from' → logprob: -2.86970591545105
    4. 'import' → logprob: -3.36970591545105
    5. 'On' → logprob: -5.869706153869629
    6. 'Util' → logprob: -6.744706153869629
    7. 'Pour' → logprob: -7.619706153869629
    8. '
' → logprob: -8.244706153869629
    9. 'for' → logprob: -8.369706153869629
    10. 'Dé' → logprob: -8.994706153869629

Token 864: 'ver' (ID: 445)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.08434062451124191
    2. 'def' → logprob: -3.9593405723571777
    3. 't' → logprob: -4.334340572357178
    4. 'ter' → logprob: -4.584340572357178
    5. 'ite' → logprob: -5.084340572357178
    6. 'te' → logprob: -5.459340572357178
    7. 'tes' → logprob: -5.584340572357178
    8. 'e' → logprob: -5.709340572357178
    9. 'ée' → logprob: -5.709340572357178
    10. 'ver' → logprob: -5.959340572357178

Token 865: ' toutes' (ID: 17502)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.09868644177913666
    2. 'une' → logprob: -3.598686456680298
    3. ' les' → logprob: -3.598686456680298
    4. 'la' → logprob: -4.223686218261719
    5. 'def' → logprob: -4.848686218261719
    6. ' la' → logprob: -5.598686218261719
    7. '#' → logprob: -5.723686218261719
    8. 'le' → logprob: -5.973686218261719
    9. 'connected' → logprob: -6.098686218261719
    10. 'des' → logprob: -6.598686218261719

Token 866: ' compos' (ID: 14635)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.5087897777557373
    2. '_' → logprob: -1.1337897777557373
    3. '_com' → logprob: -3.1337897777557373
    4. 'com' → logprob: -4.508790016174316
    5. '_conn' → logprob: -5.008790016174316
    6. '_connected' → logprob: -5.133790016174316
    7. '_components' → logprob: -5.508790016174316
    8. 'conn' → logprob: -6.008790016174316
    9. 'la' → logprob: -7.133790016174316
    10. ' les' → logprob: -7.258790016174316

Token 867: 'antes' (ID: 5193)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.42579591274261475
    2. 'ont' → logprob: -2.4257960319519043
    3. 'ponents' → logprob: -2.8007960319519043
    4. 'def' → logprob: -3.1757960319519043
    5. 'onent' → logprob: -3.5507960319519043
    6. 'ponent' → logprob: -3.6757960319519043
    7. 'onn' → logprob: -3.6757960319519043
    8. 'n' → logprob: -3.9257960319519043
    9. 'onnes' → logprob: -4.175796031951904
    10. 'conn' → logprob: -5.175796031951904

Token 868: ' connex' (ID: 154480)
  Prédit: 'conn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'conn' → logprob: -0.10032646358013153
    2. '_conn' → logprob: -2.3503265380859375
    3. 'connect' → logprob: -10.600326538085938
    4. '#' → logprob: -10.975326538085938
    5. '_connect' → logprob: -11.100326538085938
    6. ' connex' → logprob: -11.225326538085938
    7. '(conn' → logprob: -11.475326538085938
    8. ' =' → logprob: -11.725326538085938
    9. '_' → logprob: -11.850326538085938
    10. '```' → logprob: -12.100326538085938

Token 869: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.00762745039537549
    2. 'ect' → logprob: -6.007627487182617
    3. 'conn' → logprob: -6.257627487182617
    4. 'ues' → logprob: -7.257627487182617
    5. 'entes' → logprob: -7.382627487182617
    6. 'ex' → logprob: -7.507627487182617
    7. '_conn' → logprob: -8.132627487182617
    8. 'nes' → logprob: -8.382627487182617
    9. 'n' → logprob: -8.632627487182617
    10. 's' → logprob: -8.882627487182617

Token 870: ' via' (ID: 4493)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.1841964721679688
    2. ' =' → logprob: -1.1841964721679688
    3. 'def' → logprob: -2.0591964721679688
    4. 'conn' → logprob: -2.4341964721679688
    5. 'graph' → logprob: -3.1841964721679688
    6. '#' → logprob: -3.8091964721679688
    7. '=
' → logprob: -3.8091964721679688
    8. ':
' → logprob: -3.8091964721679688
    9. 'G' → logprob: -4.309196472167969
    10. 'import' → logprob: -5.184196472167969

Token 871: ' BFS' (ID: 190016)
  Prédit: 'DFS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'DFS' → logprob: -1.426692247390747
    2. 'la' → logprob: -1.801692247390747
    3. 'union' → logprob: -1.801692247390747
    4. 'B' → logprob: -2.551692247390747
    5. 'connected' → logprob: -2.801692247390747
    6. 'une' → logprob: -2.926692247390747
    7. 'sys' → logprob: -3.176692247390747
    8. 'b' → logprob: -3.176692247390747
    9. 'Union' → logprob: -3.301692247390747
    10. 'def' → logprob: -3.801692247390747

Token 872: '.
' (ID: 558)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2023315131664276
    2. '#' → logprob: -2.82733154296875
    3. '(n' → logprob: -4.20233154296875
    4. '
' → logprob: -4.20233154296875
    5. 'for' → logprob: -4.20233154296875
    6. 'from' → logprob: -4.57733154296875
    7. 'visited' → logprob: -4.57733154296875
    8. 'import' → logprob: -4.70233154296875
    9. ',
' → logprob: -4.82733154296875
    10. ':
' → logprob: -5.20233154296875

Token 873: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7738981246948242
    2. 'visited' → logprob: -1.1488981246948242
    3. '#' → logprob: -1.8988981246948242
    4. '
' → logprob: -3.273898124694824
    5. 'for' → logprob: -4.398898124694824
    6. 'from' → logprob: -5.023898124694824
    7. 'positions' → logprob: -5.023898124694824
    8. 'components' → logprob: -5.898898124694824
    9. 's' → logprob: -6.273898124694824
    10. 'import' → logprob: -7.648898124694824

Token 874: ' -' (ID: 533)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3137527406215668
    2. 'visited' → logprob: -1.4387527704238892
    3. '#' → logprob: -3.5637526512145996
    4. 'for' → logprob: -6.3137526512146
    5. 'components' → logprob: -7.5637526512146
    6. '
' → logprob: -7.6887526512146
    7. 'positions' → logprob: -8.438753128051758
    8. ' visited' → logprob: -8.438753128051758
    9. 'from' → logprob: -8.688753128051758
    10. 'n' → logprob: -10.188753128051758

Token 875: ' Pour' (ID: 13931)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.39828091859817505
    2. 'Pour' → logprob: -1.7732808589935303
    3. 'for' → logprob: -1.8982808589935303
    4. 'For' → logprob: -5.898281097412109
    5. 'pour' → logprob: -6.023281097412109
    6. 'class' → logprob: -7.523281097412109
    7. 'tr' → logprob: -7.523281097412109
    8. 'Pr' → logprob: -7.898281097412109
    9. 'Calcul' → logprob: -8.39828109741211
    10. 'T' → logprob: -8.52328109741211

Token 876: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.09212185442447662
    2. 'ch' → logprob: -3.2171218395233154
    3. 'cha' → logprob: -3.7171218395233154
    4. 'com' → logprob: -4.9671220779418945
    5. 'each' → logprob: -4.9671220779418945
    6. ' chacune' → logprob: -5.4671220779418945
    7. ' ch' → logprob: -6.7171220779418945
    8. ' each' → logprob: -6.9671220779418945
    9. ' comp' → logprob: -6.9671220779418945
    10. 'component' → logprob: -7.2171220779418945

Token 877: ' compos' (ID: 14635)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.18087302148342133
    2. ' compos' → logprob: -1.8058730363845825
    3. 'comp' → logprob: -7.680872917175293
    4. 'component' → logprob: -7.805872917175293
    5. 'c' → logprob: -9.180872917175293
    6. '#' → logprob: -9.180872917175293
    7. 'conn' → logprob: -11.055872917175293
    8. ' comp' → logprob: -11.305872917175293
    9. 'composition' → logprob: -12.430872917175293
    10. ' component' → logprob: -12.930872917175293

Token 878: 'ante' (ID: 2116)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -1.0716899633407593
    2. 'on' → logprob: -1.1966899633407593
    3. 'onn' → logprob: -1.4466899633407593
    4. 'om' → logprob: -2.946690082550049
    5. 'onent' → logprob: -3.821690082550049
    6. 'ponent' → logprob: -4.321690082550049
    7. 'ont' → logprob: -4.571690082550049
    8. 'omp' → logprob: -5.446690082550049
    9. 'onte' → logprob: -5.571690082550049
    10. 'onne' → logprob: -5.571690082550049

Token 879: ' conn' (ID: 10850)
  Prédit: 'conn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'conn' → logprob: -0.170923113822937
    2. ',' → logprob: -2.6709232330322266
    3. 'de' → logprob: -3.2959232330322266
    4. '_conn' → logprob: -3.5459232330322266
    5. ' de' → logprob: -4.420923233032227
    6. '#' → logprob: -6.170923233032227
    7. 'ayant' → logprob: -6.420923233032227
    8. 'avec' → logprob: -6.795923233032227
    9. ':' → logprob: -7.295923233032227
    10. 'con' → logprob: -7.545923233032227

Token 880: 'exe' (ID: 70589)
  Prédit: 'ect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -0.8985503911972046
    2. 'n' → logprob: -1.0235503911972046
    3. 'exe' → logprob: -3.148550510406494
    4. 'on' → logprob: -3.648550510406494
    5. 'onne' → logprob: -4.148550510406494
    6. 's' → logprob: -4.148550510406494
    7. 'ue' → logprob: -4.273550510406494
    8. 'u' → logprob: -4.273550510406494
    9. '#' → logprob: -4.273550510406494
    10. 'nect' → logprob: -4.523550510406494

Token 881: ' de' (ID: 334)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2276555746793747
    2. 'conn' → logprob: -1.8526555299758911
    3. ' de' → logprob: -4.477655410766602
    4. 'de' → logprob: -4.727655410766602
    5. ':
' → logprob: -5.602655410766602
    6. '#' → logprob: -5.977655410766602
    7. ':' → logprob: -5.977655410766602
    8. ' ,' → logprob: -6.227655410766602
    9. 'with' → logprob: -6.352655410766602
    10. 'c' → logprob: -6.352655410766602

Token 882: ' taille' (ID: 41644)
  Prédit: 'tail'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tail' → logprob: -1.8550976164988242e-05
    2. 'ta' → logprob: -12.250018119812012
    3. '#' → logprob: -12.625018119812012
    4. ' taille' → logprob: -12.750018119812012
    5. 'la' → logprob: -13.125018119812012
    6. 'size' → logprob: -13.750018119812012
    7. 'tails' → logprob: -13.750018119812012
    8. 'import' → logprob: -13.750018119812012
    9. 't' → logprob: -14.000018119812012
    10. 'gr' → logprob: -14.625018119812012

Token 883: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.05684608593583107
    2. ' >=' → logprob: -3.0568461418151855
    3. '≥' → logprob: -5.4318461418151855
    4. 'au' → logprob: -6.0568461418151855
    5. ' au' → logprob: -6.9318461418151855
    6. '>' → logprob: -7.8068461418151855
    7. '<=' → logprob: -9.931845664978027
    8. 'sup' → logprob: -10.806845664978027
    9. ' ≥' → logprob: -11.556845664978027
    10. ' >' → logprob: -11.681845664978027

Token 884: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0017025562701746821
    2. ' k' → logprob: -6.376702785491943
    3. ' ' → logprob: -16.1267032623291
    4. '```' → logprob: -16.2517032623291
    5. '   ' → logprob: -16.3767032623291
    6. '  ' → logprob: -18.2517032623291
    7. '`' → logprob: -18.7517032623291
    8. '
' → logprob: -18.8767032623291
    9. '	k' → logprob: -19.3767032623291
    10. '    ' → logprob: -19.5017032623291

Token 885: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6024522185325623
    2. ':' → logprob: -0.9774522185325623
    3. ',' → logprob: -2.602452278137207
    4. '   ' → logprob: -7.352452278137207
    5. ',
' → logprob: -7.477452278137207
    6. '#' → logprob: -7.852452278137207
    7. ':

' → logprob: -8.852452278137207
    8. ' :
' → logprob: -9.477452278137207
    9. 'def' → logprob: -9.727452278137207
    10. ':
' → logprob: -9.852452278137207

Token 886: '#' (ID: 2)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04165266081690788
    2. '#' → logprob: -3.4166526794433594
    3. '```' → logprob: -5.916652679443359
    4. ' #' → logprob: -6.666652679443359
    5. '   ' → logprob: -7.291652679443359
    6. '    ' → logprob: -7.291652679443359
    7. 'for' → logprob: -7.541652679443359
    8. 'def' → logprob: -7.666652679443359
    9. '       ' → logprob: -7.666652679443359
    10. ' continuer' → logprob: -8.29165267944336

Token 887: '  ' (ID: 256)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7091954946517944
    2. '   ' → logprob: -0.8341954946517944
    3. ' #' → logprob: -3.334195613861084
    4. 'tr' → logprob: -4.209195613861084
    5. ' continuer' → logprob: -5.334195613861084
    6. ' tr' → logprob: -5.584195613861084
    7. 'def' → logprob: -6.084195613861084
    8. ' effectuer' → logprob: -6.209195613861084
    9. 'faire' → logprob: -6.959195613861084
    10. '```' → logprob: -7.084195613861084

Token 888: ' -' (ID: 533)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.08289974927902222
    2. '   ' → logprob: -3.707899808883667
    3. 'tr' → logprob: -3.957899808883667
    4. ' #' → logprob: -4.582899570465088
    5. 'for' → logprob: -5.207899570465088
    6. 'def' → logprob: -5.582899570465088
    7. 'contin' → logprob: -5.582899570465088
    8. 'faire' → logprob: -6.207899570465088
    9. 'effect' → logprob: -6.707899570465088
    10. 'expl' → logprob: -6.832899570465088

Token 889: ' Parce' (ID: 119112)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8844800591468811
    2. 'tr' → logprob: -1.8844799995422363
    3. ' Trier' → logprob: -1.8844799995422363
    4. 'for' → logprob: -2.7594799995422363
    5. 'import' → logprob: -3.2594799995422363
    6. ' #' → logprob: -3.7594799995422363
    7. ' for' → logprob: -4.259479999542236
    8. ' tr' → logprob: -4.384479999542236
    9. 'Pour' → logprob: -4.509479999542236
    10. 'extra' → logprob: -4.634479999542236

Token 890: ' que' (ID: 661)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.0324288047850132
    2. 'que' → logprob: -3.532428741455078
    3. ' que' → logprob: -6.532428741455078
    4. 'r' → logprob: -8.282428741455078
    5. '  ' → logprob: -8.782428741455078
    6. 'à' → logprob: -8.907428741455078
    7. ' #' → logprob: -8.907428741455078
    8. 'qu' → logprob: -9.157428741455078
    9. '-' → logprob: -9.157428741455078
    10. 'n' → logprob: -10.032428741455078

Token 891: ' les' (ID: 1341)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.9759088158607483
    2. 'le' → logprob: -1.4759087562561035
    3. 'c' → logprob: -1.8509087562561035
    4. 'l' → logprob: -3.3509087562561035
    5. 'les' → logprob: -3.4759087562561035
    6. 'on' → logprob: -3.7259087562561035
    7. ' la' → logprob: -3.7259087562561035
    8. ' c' → logprob: -3.8509087562561035
    9. 'k' → logprob: -4.1009087562561035
    10. 'cela' → logprob: -4.2259087562561035

Token 892: ' cubes' (ID: 88455)
  Prédit: ' somm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' somm' → logprob: -1.3606953620910645
    2. 'plus' → logprob: -2.1106953620910645
    3. 'positions' → logprob: -2.2356953620910645
    4. 's' → logprob: -2.6106953620910645
    5. 'com' → logprob: -2.8606953620910645
    6. 'c' → logprob: -2.9856953620910645
    7. ' plus' → logprob: -3.2356953620910645
    8. 'conn' → logprob: -3.2356953620910645
    9. 'som' → logprob: -3.4856953620910645
    10. ' voisins' → logprob: -3.7356953620910645

Token 893: ' sont' (ID: 5242)
  Prédit: ' sont'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sont' → logprob: -1.079071044921875
    2. 's' → logprob: -1.204071044921875
    3. '#' → logprob: -1.579071044921875
    4. 'adj' → logprob: -2.954071044921875
    5. ' #' → logprob: -4.204071044921875
    6. ' de' → logprob: -4.204071044921875
    7. ' voisins' → logprob: -4.204071044921875
    8. ' peuvent' → logprob: -4.454071044921875
    9. ' adj' → logprob: -4.954071044921875
    10. ' ne' → logprob: -5.079071044921875

Token 894: ' sur' (ID: 1512)
  Prédit: 'plac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'plac' → logprob: -1.606099009513855
    2. 'align' → logprob: -1.731099009513855
    3. 'adj' → logprob: -2.2310991287231445
    4. 'sou' → logprob: -2.6060991287231445
    5. 'pro' → logprob: -2.8560991287231445
    6. 't' → logprob: -3.1060991287231445
    7. 'dans' → logprob: -3.2310991287231445
    8. 'compact' → logprob: -3.2310991287231445
    9. 'asse' → logprob: -3.8560991287231445
    10. ' ' → logprob: -3.9810991287231445

Token 895: ' une' (ID: 2463)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.1869378238916397
    2. 'la' → logprob: -2.4369378089904785
    3. 'le' → logprob: -3.8119378089904785
    4. 'un' → logprob: -4.1869378089904785
    5. 'des' → logprob: -4.1869378089904785
    6. 'les' → logprob: -4.1869378089904785
    7. ' une' → logprob: -5.0619378089904785
    8. 'au' → logprob: -6.4369378089904785
    9. 'l' → logprob: -6.5619378089904785
    10. 'gr' → logprob: -6.6869378089904785

Token 896: ' grille' (ID: 99153)
  Prédit: 'gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gr' → logprob: -0.7446072101593018
    2. ' même' → logprob: -1.6196072101593018
    3. 'ligne' → logprob: -1.9946072101593018
    4. 'm' → logprob: -1.9946072101593018
    5. ' ' → logprob: -4.119606971740723
    6. ' grille' → logprob: -4.494606971740723
    7. 'single' → logprob: -4.994606971740723
    8. 'unique' → logprob: -5.619606971740723
    9. 'se' → logprob: -5.744606971740723
    10. 'grid' → logprob: -6.119606971740723

Token 897: ' sparse' (ID: 70531)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.048089414834976196
    2. '#' → logprob: -3.4230895042419434
    3. ',
' → logprob: -5.173089504241943
    4. ' en' → logprob: -6.173089504241943
    5. 'en' → logprob: -6.548089504241943
    6. '3' → logprob: -6.673089504241943
    7. '#,' → logprob: -7.423089504241943
    8. ' ' → logprob: -7.548089504241943
    9. 'import' → logprob: -7.798089504241943
    10. ' (' → logprob: -7.923089504241943

Token 898: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08669976890087128
    2. ',
' → logprob: -2.7116997241973877
    3. '#' → logprob: -4.711699962615967
    4. 'import' → logprob: -5.836699962615967
    5. ' ,' → logprob: -6.836699962615967
    6. ' (' → logprob: -7.086699962615967
    7. ':' → logprob: -7.211699962615967
    8. '```' → logprob: -7.586699962615967
    9. ':
' → logprob: -7.961699962615967
    10. '
' → logprob: -9.211699485778809

Token 899: ' conditions' (ID: 6409)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0082998275756836
    2. '  ' → logprob: -1.5082998275756836
    3. '#' → logprob: -1.7582998275756836
    4. ' #' → logprob: -3.2582998275756836
    5. 'que' → logprob: -3.3832998275756836
    6. 'les' → logprob: -3.8832998275756836
    7. '   ' → logprob: -3.8832998275756836
    8. 'import' → logprob: -4.008299827575684
    9. 's' → logprob: -4.383299827575684
    10. 'adj' → logprob: -4.633299827575684

Token 900: ' du' (ID: 1462)
  Prédit: 'strict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'strict' → logprob: -0.5933352708816528
    2. 'de' → logprob: -1.4683352708816528
    3. ' strict' → logprob: -2.5933351516723633
    4. ' de' → logprob: -3.4683351516723633
    5. 'd' → logprob: -3.5933351516723633
    6. '#' → logprob: -3.8433351516723633
    7. 'import' → logprob: -3.9683351516723633
    8. 'for' → logprob: -4.468335151672363
    9. 's' → logprob: -4.843335151672363
    10. '=' → logprob: -5.468335151672363

Token 901: ' problème' (ID: 35630)
  Prédit: 'gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gr' → logprob: -0.6934674382209778
    2. 'vo' → logprob: -1.818467378616333
    3. 'graph' → logprob: -1.818467378616333
    4. 'pro' → logprob: -2.318467378616333
    5. 'proble' → logprob: -4.068467617034912
    6. ' problème' → logprob: -4.318467617034912
    7. '```' → logprob: -4.568467617034912
    8. ' voisin' → logprob: -4.818467617034912
    9. ' graph' → logprob: -4.943467617034912
    10. ' grap' → logprob: -5.318467617034912

Token 902: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08352795988321304
    2. '#' → logprob: -3.4585280418395996
    3. ',
' → logprob: -3.5835280418395996
    4. ':' → logprob: -4.8335280418396
    5. '```' → logprob: -5.3335280418396
    6. ' ,' → logprob: -6.2085280418396
    7. 's' → logprob: -6.8335280418396
    8. 'import' → logprob: -6.9585280418396
    9. ':
' → logprob: -7.0835280418396
    10. '...' → logprob: -7.4585280418396

Token 903: ' il' (ID: 1793)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.0039319987408816814
    2. 'on' → logprob: -6.128931999206543
    3. ' #' → logprob: -7.253931999206543
    4. ' on' → logprob: -8.253931999206543
    5. '   ' → logprob: -8.378931999206543
    6. ' ' → logprob: -8.378931999206543
    7. '  ' → logprob: -9.003931999206543
    8. '```' → logprob: -9.378931999206543
    9. 'contin' → logprob: -10.253931999206543
    10. 'import' → logprob: -10.628931999206543

Token 904: ' est' (ID: 893)
  Prédit: 'est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.21441476047039032
    2. '#' → logprob: -2.8394148349761963
    3. ' est' → logprob: -2.8394148349761963
    4. ' reste' → logprob: -4.214414596557617
    5. 'rest' → logprob: -4.589414596557617
    6. 'f' → logprob: -4.714414596557617
    7. 'n' → logprob: -4.839414596557617
    8. 'reste' → logprob: -4.964414596557617
    9. ' n' → logprob: -5.339414596557617
    10. '```' → logprob: -5.839414596557617

Token 905: ' probable' (ID: 32954)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.21399031579494476
    2. 'prob' → logprob: -1.963990330696106
    3. '#' → logprob: -4.838990211486816
    4. 'pe' → logprob: -4.838990211486816
    5. 'sou' → logprob: -4.838990211486816
    6. '```' → logprob: -5.088990211486816
    7. ' possible' → logprob: -5.213990211486816
    8. ' probable' → logprob: -5.588990211486816
    9. 'd' → logprob: -5.838990211486816
    10. 'plus' → logprob: -6.338990211486816

Token 906: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.753288984298706
    2. 'que' → logprob: -0.878288984298706
    3. ' possible' → logprob: -3.378288984298706
    4. 'qu' → logprob: -4.003289222717285
    5. ' qu' → logprob: -4.378289222717285
    6. '#' → logprob: -4.503289222717285
    7. 'd' → logprob: -4.628289222717285
    8. 'possible' → logprob: -4.753289222717285
    9. 'import' → logprob: -5.378289222717285
    10. '   ' → logprob: -5.503289222717285

Token 907: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.7797390222549438
    2. 'les' → logprob: -1.0297390222549438
    3. 'le' → logprob: -2.4047389030456543
    4. 'l' → logprob: -3.6547389030456543
    5. 'on' → logprob: -3.6547389030456543
    6. ' la' → logprob: -4.029738903045654
    7. '#' → logprob: -5.029738903045654
    8. 'the' → logprob: -5.529738903045654
    9. ' les' → logprob: -5.904738903045654
    10. '```' → logprob: -6.154738903045654

Token 908: ' compos' (ID: 14635)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'plus' → logprob: -1.607791543006897
    2. 'tail' → logprob: -1.732791543006897
    3. 'surface' → logprob: -1.732791543006897
    4. '#' → logprob: -1.857791543006897
    5. 'me' → logprob: -1.982791543006897
    6. 'best' → logprob: -4.107791423797607
    7. ' surface' → logprob: -4.232791423797607
    8. ' #' → logprob: -4.482791423797607
    9. ' plus' → logprob: -4.482791423797607
    10. ' meilleure' → logprob: -4.607791423797607

Token 909: 'ante' (ID: 2116)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.8165565133094788
    2. 'om' → logprob: -1.441556453704834
    3. 'ont' → logprob: -2.441556453704834
    4. 'onent' → logprob: -2.691556453704834
    5. 'pos' → logprob: -3.066556453704834
    6. 'ponent' → logprob: -3.441556453704834
    7. 'omp' → logprob: -3.441556453704834
    8. 'onte' → logprob: -4.066556453704834
    9. 'onn' → logprob: -4.941556453704834
    10. 'e' → logprob: -4.941556453704834

Token 910: ' soit' (ID: 17293)
  Prédit: 'conn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'conn' → logprob: -0.20361699163913727
    2. 'so' → logprob: -2.3286170959472656
    3. ' soit' → logprob: -2.9536170959472656
    4. 'est' → logprob: -4.953617095947266
    5. '#' → logprob: -5.078617095947266
    6. 'con' → logprob: -5.203617095947266
    7. 's' → logprob: -5.953617095947266
    8. ' conn' → logprob: -6.328617095947266
    9. 'n' → logprob: -6.578617095947266
    10. ' est' → logprob: -7.203617095947266

Token 911: ' fortement' (ID: 111297)
  Prédit: 'conn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'conn' → logprob: -0.3016010522842407
    2. 'pl' → logprob: -2.801600933074951
    3. 'pet' → logprob: -2.801600933074951
    4. 'connect' → logprob: -3.176600933074951
    5. 'asse' → logprob: -3.551600933074951
    6. 'dense' → logprob: -4.176600933074951
    7. 'compact' → logprob: -4.551600933074951
    8. 'une' → logprob: -5.301600933074951
    9. 'sou' → logprob: -5.676600933074951
    10. ' assez' → logprob: -5.676600933074951

Token 912: ' connect' (ID: 4837)
  Prédit: 'connect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'connect' → logprob: -0.14535969495773315
    2. 'conn' → logprob: -2.020359754562378
    3. 'connected' → logprob: -6.895359516143799
    4. 'dense' → logprob: -7.145359516143799
    5. '```' → logprob: -8.520359992980957
    6. 'inter' → logprob: -9.395359992980957
    7. ' connect' → logprob: -9.520359992980957
    8. 'c' → logprob: -9.645359992980957
    9. 'struct' → logprob: -9.645359992980957
    10. '#' → logprob: -9.895359992980957

Token 913: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.17498016357421875
    2. 'ed' → logprob: -2.4249801635742188
    3. 'é' → logprob: -2.6749801635742188
    4. 'ées' → logprob: -6.549980163574219
    5. 'e' → logprob: -7.049980163574219
    6. 'és' → logprob: -7.924980163574219
    7. 'd' → logprob: -8.924980163574219
    8. 'ion' → logprob: -9.674980163574219
    9. 'if' → logprob: -9.924980163574219
    10. 'ive' → logprob: -10.299980163574219

Token 914: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.567863941192627
    2. ':
' → logprob: -1.942863941192627
    3. 'import' → logprob: -2.317863941192627
    4. ',' → logprob: -2.942863941192627
    5. 'def' → logprob: -3.067863941192627
    6. '#' → logprob: -3.317863941192627
    7. ',
' → logprob: -4.067863941192627
    8. '.' → logprob: -4.442863941192627
    9. 's' → logprob: -4.692863941192627
    10. '```' → logprob: -4.942863941192627

Token 915: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6879338622093201
    2. ':' → logprob: -1.9379339218139648
    3. 'import' → logprob: -2.062933921813965
    4. '#' → logprob: -2.062933921813965
    5. '```' → logprob: -3.937933921813965
    6. '
' → logprob: -4.062933921813965
    7. ':
' → logprob: -4.187933921813965
    8. ',' → logprob: -4.812933921813965
    9. '[' → logprob: -4.937933921813965
    10. 's' → logprob: -5.062933921813965

Token 916: '  ' (ID: 256)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.44227859377861023
    2. '#' → logprob: -1.5672786235809326
    3. '
' → logprob: -2.4422786235809326
    4. 'import' → logprob: -3.9422786235809326
    5. ':
' → logprob: -4.4422783851623535
    6. '```' → logprob: -4.5672783851623535
    7. ':' → logprob: -5.5672783851623535
    8. ',
' → logprob: -6.1922783851623535
    9. 'for' → logprob: -6.4422783851623535
    10. '

' → logprob: -6.4422783851623535

Token 917: ' -' (ID: 533)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.012287826277315617
    2. 'for' → logprob: -5.637287616729736
    3. '#
' → logprob: -6.012287616729736
    4. 'def' → logprob: -6.137287616729736
    5. '```' → logprob: -6.637287616729736
    6. '
' → logprob: -7.012287616729736
    7. ' #' → logprob: -7.262287616729736
    8. '   ' → logprob: -8.637288093566895
    9. '``' → logprob: -9.012288093566895
    10. 'import' → logprob: -9.012288093566895

Token 918: ' On' (ID: 2160)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.1993114948272705
    2. 'On' → logprob: -1.8243114948272705
    3. 'Pour' → logprob: -4.824311256408691
    4. 'Util' → logprob: -6.074311256408691
    5. 'on' → logprob: -6.699311256408691
    6. 'from' → logprob: -7.199311256408691
    7. ' ' → logprob: -7.199311256408691
    8. 'for' → logprob: -7.199311256408691
    9. 'Contin' → logprob: -7.324311256408691
    10. 'Faire' → logprob: -7.699311256408691

Token 919: ' considère' (ID: 176437)
  Prédit: 'pe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pe' → logprob: -0.11381931602954865
    2. 'pour' → logprob: -3.7388193607330322
    3. 'va' → logprob: -3.8638193607330322
    4. '#' → logprob: -4.363819122314453
    5. 'continue' → logprob: -4.863819122314453
    6. 'expl' → logprob: -4.863819122314453
    7. 'tr' → logprob: -5.613819122314453
    8. ' peut' → logprob: -5.613819122314453
    9. ' pe' → logprob: -5.613819122314453
    10. 'continu' → logprob: -6.488819122314453

Token 920: ' la' (ID: 557)
  Prédit: ' seulement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' seulement' → logprob: -1.0804921388626099
    2. ' uniquement' → logprob: -1.7054921388626099
    3. 'une' → logprob: -1.9554921388626099
    4. 'les' → logprob: -2.3304920196533203
    5. ' les' → logprob: -2.9554920196533203
    6. ' la' → logprob: -3.5804920196533203
    7. 'la' → logprob: -3.8304920196533203
    8. 'que' → logprob: -3.9554920196533203
    9. ' une' → logprob: -3.9554920196533203
    10. ' simplement' → logprob: -3.9554920196533203

Token 921: ' surface' (ID: 9753)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.3790840804576874
    2. 'tail' → logprob: -2.3790841102600098
    3. 'queue' → logprob: -3.6290841102600098
    4. 'liste' → logprob: -3.6290841102600098
    5. '#' → logprob: -4.00408411026001
    6. 'me' → logprob: -4.00408411026001
    7. 'com' → logprob: -4.37908411026001
    8. 'mé' → logprob: -4.62908411026001
    9. 'composition' → logprob: -4.75408411026001
    10. 'position' → logprob: -4.87908411026001

Token 922: ' de' (ID: 334)
  Prédit: ' minimale'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' minimale' → logprob: -0.6050042510032654
    2. ' =' → logprob: -1.3550043106079102
    3. '_min' → logprob: -1.9800043106079102
    4. 'min' → logprob: -4.35500431060791
    5. ' minimal' → logprob: -4.48000431060791
    6. 'minimum' → logprob: -4.60500431060791
    7. ' minimum' → logprob: -5.35500431060791
    8. 'def' → logprob: -5.48000431060791
    9. ' à' → logprob: -5.98000431060791
    10. '#' → logprob: -6.35500431060791

Token 923: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.41623061895370483
    2. 'l' → logprob: -1.7912306785583496
    3. ' la' → logprob: -2.5412306785583496
    4. 'les' → logprob: -3.6662306785583496
    5. ' l' → logprob: -4.04123067855835
    6. 'c' → logprob: -4.54123067855835
    7. 'une' → logprob: -4.66623067855835
    8. '#' → logprob: -5.29123067855835
    9. 'ses' → logprob: -5.41623067855835
    10. ' ses' → logprob: -5.54123067855835

Token 924: ' compos' (ID: 14635)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.3563779294490814
    2. 'com' → logprob: -1.3563779592514038
    3. ' plus' → logprob: -3.6063778400421143
    4. ' compos' → logprob: -5.856378078460693
    5. 'c' → logprob: -6.231378078460693
    6. 'k' → logprob: -6.231378078460693
    7. 'composition' → logprob: -6.606378078460693
    8. 's' → logprob: -6.856378078460693
    9. 'prem' → logprob: -7.106378078460693
    10. 'me' → logprob: -7.106378078460693

Token 925: 'ante' (ID: 2116)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.6341548562049866
    2. 'ont' → logprob: -2.009154796600342
    3. 'ponent' → logprob: -2.259154796600342
    4. 'nte' → logprob: -2.634154796600342
    5. 'n' → logprob: -3.134154796600342
    6. 'on' → logprob: -3.634154796600342
    7. 'position' → logprob: -4.009154796600342
    8. 'ité' → logprob: -4.384154796600342
    9. 'onn' → logprob: -4.634154796600342
    10. 'nt' → logprob: -4.759154796600342

Token 926: ' entière' (ID: 61583)
  Prédit: '_conn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_conn' → logprob: -0.34761035442352295
    2. ' =' → logprob: -2.5976104736328125
    3. '_' → logprob: -2.9726104736328125
    4. 'conn' → logprob: -3.3476104736328125
    5. '_size' → logprob: -3.7226104736328125
    6. '_total' → logprob: -3.9726104736328125
    7. '_com' → logprob: -4.0976104736328125
    8. '_selected' → logprob: -4.4726104736328125
    9. 's' → logprob: -4.9726104736328125
    10. '_connect' → logprob: -5.0976104736328125

Token 927: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8684608936309814
    2. ' =' → logprob: -1.3684608936309814
    3. 'import' → logprob: -2.3684608936309814
    4. 'def' → logprob: -2.8684608936309814
    5. 's' → logprob: -3.2434608936309814
    6. ',' → logprob: -3.4934608936309814
    7. '
' → logprob: -4.243460655212402
    8. '#' → logprob: -4.618460655212402
    9. ' complète' → logprob: -4.618460655212402
    10. ':
' → logprob: -4.743460655212402

Token 928: 'tail' (ID: 20472)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.3593721389770508
    2. '#' → logprob: -1.7343721389770508
    3. 'la' → logprob: -1.7343721389770508
    4. ' #' → logprob: -2.109372138977051
    5. ' k' → logprob: -2.859372138977051
    6. ' la' → logprob: -2.859372138977051
    7. 'com' → logprob: -3.359372138977051
    8. 'conn' → logprob: -4.234372138977051
    9. ')' → logprob: -4.359372138977051
    10. 'tail' → logprob: -4.609372138977051

Token 929: 'le' (ID: 282)
  Prédit: 'ce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ce' → logprob: -1.657742977142334
    2. 'e' → logprob: -2.032742977142334
    3. 'te' → logprob: -2.157742977142334
    4. 'u' → logprob: -2.157742977142334
    5. '#' → logprob: -2.407742977142334
    6. '  ' → logprob: -3.032742977142334
    7. ' =' → logprob: -3.532742977142334
    8. '   ' → logprob: -3.532742977142334
    9. 'me' → logprob: -3.782742977142334
    10. ')' → logprob: -3.782742977142334

Token 930: ' =' (ID: 314)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -1.302687168121338
    2. ')' → logprob: -1.427687168121338
    3. ' -' → logprob: -1.927687168121338
    4. ' )' → logprob: -3.052687168121338
    5. '>=' → logprob: -3.177687168121338
    6. ' =' → logprob: -3.177687168121338
    7. 'de' → logprob: -3.802687168121338
    8. '```' → logprob: -3.927687168121338
    9. ' _' → logprob: -4.177687168121338
    10. ' ' → logprob: -4.177687168121338

Token 931: ' taille' (ID: 41644)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.28226256370544434
    2. ' k' → logprob: -1.4072625637054443
    3. ' len' → logprob: -7.407262802124023
    4. ' n' → logprob: -8.657262802124023
    5. 'len' → logprob: -9.157262802124023
    6. 'n' → logprob: -9.782262802124023
    7. ' ' → logprob: -10.032262802124023
    8. 'c' → logprob: -10.907262802124023
    9. '`' → logprob: -11.282262802124023
    10. '```' → logprob: -11.407262802124023

Token 932: ' compos' (ID: 14635)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1450323462486267
    2. ' )' → logprob: -3.0200324058532715
    3. ' de' → logprob: -3.5200324058532715
    4. 'de' → logprob: -4.0200324058532715
    5. ',' → logprob: -4.7700324058532715
    6. ' >=' → logprob: -5.3950324058532715
    7. '),' → logprob: -5.6450324058532715
    8. '>=' → logprob: -6.2700324058532715
    9. ' du' → logprob: -6.5200324058532715
    10. ' ' → logprob: -6.5200324058532715

Token 933: 'ante' (ID: 2116)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.18555517494678497
    2. 'ante' → logprob: -2.0605552196502686
    3. 'ponent' → logprob: -4.4355549812316895
    4. 'conn' → logprob: -5.5605549812316895
    5. 'import' → logprob: -5.6855549812316895
    6. '#' → logprob: -5.6855549812316895
    7. 'onn' → logprob: -6.1855549812316895
    8. 's' → logprob: -6.3105549812316895
    9. 'ite' → logprob: -6.4355549812316895
    10. '
' → logprob: -6.5605549812316895

Token 934: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0700494796037674
    2. '),' → logprob: -3.695049524307251
    3. ' )' → logprob: -3.820049524307251
    4. ',' → logprob: -5.070049285888672
    5. '):' → logprob: -5.695049285888672
    6. ')#' → logprob: -6.695049285888672
    7. ')+' → logprob: -6.820049285888672
    8. ' +' → logprob: -7.195049285888672
    9. ' ' → logprob: -7.195049285888672
    10. '#' → logprob: -7.320049285888672

Token 935: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4533165991306305
    2. ' s' → logprob: -2.7033166885375977
    3. ' =' → logprob: -2.7033166885375977
    4. '```' → logprob: -2.8283166885375977
    5. ' #' → logprob: -3.0783166885375977
    6. ',' → logprob: -3.7033166885375977
    7. ' if' → logprob: -4.078316688537598
    8. 'def' → logprob: -4.203316688537598
    9. '   ' → logprob: -5.328316688537598
    10. ')' → logprob: -5.328316688537598

Token 936: '    ' (ID: 257)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.2609407901763916
    2. ' =' → logprob: -2.7609407901763916
    3. '```' → logprob: -3.3859407901763916
    4. ' #' → logprob: -4.1359405517578125
    5. 'def' → logprob: -4.2609405517578125
    6. '=' → logprob: -4.6359405517578125
    7. ',' → logprob: -4.6359405517578125
    8. 's' → logprob: -4.8859405517578125
    9. ' s' → logprob: -4.8859405517578125
    10. ')' → logprob: -4.8859405517578125

Token 937: ' surface' (ID: 9753)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.01522459089756012
    2. 'if' → logprob: -5.640224456787109
    3. '   ' → logprob: -5.765224456787109
    4. ' #' → logprob: -6.015224456787109
    5. '```' → logprob: -6.390224456787109
    6. ' ' → logprob: -7.140224456787109
    7. ' if' → logprob: -7.640224456787109
    8. 'si' → logprob: -7.765224456787109
    9. '=' → logprob: -8.14022445678711
    10. '-' → logprob: -8.26522445678711

Token 938: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08052905648946762
    2. '=' → logprob: -2.705528974533081
    3. '   ' → logprob: -5.33052921295166
    4. '_' → logprob: -6.58052921295166
    5. '_total' → logprob: -7.20552921295166
    6. ')' → logprob: -7.58052921295166
    7. '_min' → logprob: -8.33052921295166
    8. ' ' → logprob: -8.33052921295166
    9. ',' → logprob: -8.45552921295166
    10. 's' → logprob: -8.45552921295166

Token 939: ' ' (ID: 220)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.014238844625651836
    2. ' ' → logprob: -4.2642388343811035
    3. '(' → logprob: -10.639239311218262
    4. '   ' → logprob: -10.639239311218262
    5. '`' → logprob: -11.264239311218262
    6. ' (' → logprob: -11.889239311218262
    7. '```' → logprob: -12.389239311218262
    8. '    ' → logprob: -13.889239311218262
    9. '           ' → logprob: -14.389239311218262
    10. '#' → logprob: -15.014239311218262

Token 940: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -5.6100132496794686e-05
    2. ' ' → logprob: -10.250056266784668
    3. '(' → logprob: -11.375056266784668
    4. '`' → logprob: -12.375056266784668
    5. '```' → logprob: -13.000056266784668
    6. '   ' → logprob: -13.375056266784668
    7. 'lambda' → logprob: -15.125056266784668
    8. '
' → logprob: -15.125056266784668
    9. 'max' → logprob: -16.00005531311035
    10. 'def' → logprob: -17.00005531311035

Token 941: '*s' (ID: 71191)
  Prédit: '*k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*k' → logprob: -0.31750258803367615
    2. '*' → logprob: -1.3175026178359985
    3. '*s' → logprob: -5.942502498626709
    4. ' *' → logprob: -6.442502498626709
    5. '*c' → logprob: -12.942502975463867
    6. '*(' → logprob: -13.067502975463867
    7. '*j' → logprob: -13.942502975463867
    8. '*t' → logprob: -14.067502975463867
    9. '*K' → logprob: -14.192502975463867
    10. '*l' → logprob: -14.317502975463867

Token 942: '*s' (ID: 71191)
  Prédit: '*s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*s' → logprob: -0.23763255774974823
    2. '*k' → logprob: -1.8626325130462646
    3. '*' → logprob: -2.9876325130462646
    4. ' *' → logprob: -5.237632751464844
    5. '*(' → logprob: -8.237632751464844
    6. '**' → logprob: -9.862632751464844
    7. '*c' → logprob: -10.112632751464844
    8. 's' → logprob: -10.487632751464844
    9. '```' → logprob: -10.987632751464844
    10. '*
' → logprob: -11.112632751464844

Token 943: '*' (ID: 9)
  Prédit: '*k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*k' → logprob: -0.34880128502845764
    2. '*' → logprob: -1.4738012552261353
    3. ' *' → logprob: -2.973801374435425
    4. '*s' → logprob: -5.223801136016846
    5. '*(' → logprob: -5.723801136016846
    6. ' -' → logprob: -6.098801136016846
    7. '*c' → logprob: -6.473801136016846
    8. '*n' → logprob: -7.973801136016846
    9. '*num' → logprob: -8.223801612854004
    10. '*t' → logprob: -8.598801612854004

Token 944: 'size' (ID: 4461)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.030518991872668266
    2. 'k' → logprob: -3.6555190086364746
    3. 'com' → logprob: -6.780519008636475
    4. 'size' → logprob: -6.905519008636475
    5. 'tail' → logprob: -7.530519008636475
    6. 'component' → logprob: -7.905519008636475
    7. 'n' → logprob: -8.280518531799316
    8. 'c' → logprob: -8.280518531799316
    9. 'comp' → logprob: -8.405518531799316
    10. ' len' → logprob: -8.530518531799316

Token 945: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.014910129830241203
    2. '-' → logprob: -4.8899102210998535
    3. '#' → logprob: -5.2649102210998535
    4. ' #' → logprob: -6.7649102210998535
    5. ' ' → logprob: -8.514909744262695
    6. '   ' → logprob: -8.514909744262695
    7. '```' → logprob: -9.139909744262695
    8. 'def' → logprob: -9.389909744262695
    9. '
' → logprob: -9.764909744262695
    10. ')' → logprob: -10.014909744262695

Token 946: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0160544291138649
    2. ' ' → logprob: -4.141054630279541
    3. '6' → logprob: -11.641054153442383
    4. '(' → logprob: -12.641054153442383
    5. '   ' → logprob: -13.141054153442383
    6. '```' → logprob: -13.141054153442383
    7. '`' → logprob: -13.391054153442383
    8. ' (' → logprob: -14.141054153442383
    9. '12' → logprob: -14.516054153442383
    10. ' ' → logprob: -15.016054153442383

Token 947: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.782141569303349e-05
    2. ' ' → logprob: -9.25009822845459
    3. '```' → logprob: -13.87509822845459
    4. '   ' → logprob: -15.00009822845459
    5. '(' → logprob: -15.50009822845459
    6. '6' → logprob: -16.250097274780273
    7. '12' → logprob: -16.750097274780273
    8. '4' → logprob: -17.500097274780273
    9. '  ' → logprob: -18.125097274780273
    10. '`' → logprob: -18.375097274780273

Token 948: '*s' (ID: 71191)
  Prédit: '*s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*s' → logprob: -0.008690441958606243
    2. '*' → logprob: -4.758690357208252
    3. ' *' → logprob: -9.75869083404541
    4. '**' → logprob: -12.13369083404541
    5. '*(' → logprob: -12.25869083404541
    6. '```' → logprob: -12.75869083404541
    7. 's' → logprob: -12.88369083404541
    8. '*k' → logprob: -14.75869083404541
    9. '*out' → logprob: -15.25869083404541
    10. '*num' → logprob: -15.38369083404541

Token 949: '*s' (ID: 71191)
  Prédit: '*s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*s' → logprob: -0.033853501081466675
    2. '*' → logprob: -3.408853530883789
    3. '**' → logprob: -9.283853530883789
    4. 's' → logprob: -9.783853530883789
    5. ' *' → logprob: -11.158853530883789
    6. '*w' → logprob: -12.283853530883789
    7. '*u' → logprob: -12.408853530883789
    8. '*(' → logprob: -12.533853530883789
    9. '*c' → logprob: -12.658853530883789
    10. '*j' → logprob: -12.783853530883789

Token 950: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.004165656864643097
    2. '*num' → logprob: -5.6291656494140625
    3. '*(' → logprob: -7.8791656494140625
    4. '*out' → logprob: -9.629165649414062
    5. '**' → logprob: -10.129165649414062
    6. ' *' → logprob: -10.754165649414062
    7. '*c' → logprob: -10.879165649414062
    8. '*n' → logprob: -12.004165649414062
    9. '*m' → logprob: -12.129165649414062
    10. '*object' → logprob: -12.129165649414062

Token 951: 'number' (ID: 8096)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.28837594389915466
    2. 'edges' → logprob: -2.5383758544921875
    3. 'adj' → logprob: -3.4133758544921875
    4. '(sum' → logprob: -3.6633758544921875
    5. 'internal' → logprob: -3.9133758544921875
    6. 'm' → logprob: -3.9133758544921875
    7. 'max' → logprob: -4.6633758544921875
    8. 'len' → logprob: -4.7883758544921875
    9. '(m' → logprob: -4.7883758544921875
    10. '(edges' → logprob: -5.0383758544921875

Token 952: '_of' (ID: 8023)
  Prédit: '_edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -0.18007661402225494
    2. '_of' → logprob: -2.4300765991210938
    3. '_' → logprob: -2.8050765991210938
    4. '_ar' → logprob: -5.180076599121094
    5. 'd' → logprob: -6.055076599121094
    6. '_d' → logprob: -6.305076599121094
    7. '_neighbors' → logprob: -6.680076599121094
    8. '_de' → logprob: -6.680076599121094
    9. '_faces' → logprob: -6.680076599121094
    10. '_vertices' → logprob: -7.055076599121094

Token 953: '_edges' (ID: 68870)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.038359664380550385
    2. '_edges' → logprob: -4.288359642028809
    3. ' edges' → logprob: -4.288359642028809
    4. 'internal' → logprob: -4.663359642028809
    5. ' internal' → logprob: -7.788359642028809
    6. '_internal' → logprob: -9.038359642028809
    7. 'ar' → logprob: -9.163359642028809
    8. 'adj' → logprob: -9.538359642028809
    9. '(edges' → logprob: -11.913359642028809
    10. '```' → logprob: -12.038359642028809

Token 954: '.
' (ID: 558)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.21323934197425842
    2. 'import' → logprob: -2.8382394313812256
    3. '
' → logprob: -2.9632394313812256
    4. 's' → logprob: -3.8382394313812256
    5. 'def' → logprob: -4.4632391929626465
    6. '```' → logprob: -4.8382391929626465
    7. '#
' → logprob: -5.3382391929626465
    8. 'from' → logprob: -5.4632391929626465
    9. ')' → logprob: -5.7132391929626465
    10. ',' → logprob: -5.8382391929626465

Token 955: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8570611476898193
    2. '#' → logprob: -1.3570611476898193
    3. '(
' → logprob: -2.4820611476898193
    4. '\' → logprob: -3.4820611476898193
    5. '
' → logprob: -3.6070611476898193
    6. 'import' → logprob: -3.6070611476898193
    7. '(' → logprob: -3.7320611476898193
    8. '#
' → logprob: -3.8570611476898193
    9. ' =' → logprob: -4.107061386108398
    10. '```' → logprob: -4.357061386108398

Token 956: '  ' (ID: 256)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.940098226070404
    2. 'def' → logprob: -1.0650982856750488
    3. '#' → logprob: -2.690098285675049
    4. '```' → logprob: -2.940098285675049
    5. '\n' → logprob: -3.190098285675049
    6. 'import' → logprob: -3.315098285675049
    7. '#
' → logprob: -4.065098285675049
    8. '\' → logprob: -4.190098285675049
    9. '

' → logprob: -5.190098285675049
    10. '`
' → logprob: -5.440098285675049

Token 957: ' -' (ID: 533)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.008650618605315685
    2. '#
' → logprob: -5.008650779724121
    3. '
' → logprob: -7.258650779724121
    4. ' ' → logprob: -7.758650779724121
    5. ' #' → logprob: -8.633650779724121
    6. '   ' → logprob: -8.758650779724121
    7. '=' → logprob: -9.383650779724121
    8. 'import' → logprob: -9.883650779724121
    9. '-' (adapté à ' -') → logprob: -9.883650779724121
    10. '```' → logprob: -10.008650779724121

Token 958: ' Puis' (ID: 87717)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.04361620172858238
    2. 'On' → logprob: -3.79361629486084
    3. 'Si' → logprob: -4.79361629486084
    4. 'if' → logprob: -4.79361629486084
    5. 'for' → logprob: -7.54361629486084
    6. 'Pour' → logprob: -7.91861629486084
    7. 'return' → logprob: -8.04361629486084
    8. ' #' → logprob: -8.04361629486084
    9. 'Calcul' → logprob: -8.29361629486084
    10. '
' → logprob: -8.66861629486084

Token 959: ' on' (ID: 402)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.41490834951400757
    2. 'on' → logprob: -1.6649084091186523
    3. ' on' → logprob: -2.4149084091186523
    4. ' #' → logprob: -3.6649084091186523
    5. ' for' → logprob: -4.414908409118652
    6. 'for' → logprob: -4.664908409118652
    7. 'ens' → logprob: -5.914908409118652
    8. '   ' → logprob: -5.914908409118652
    9. '```' → logprob: -6.039908409118652
    10. 'def' → logprob: -7.039908409118652

Token 960: ' tente' (ID: 75234)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7980225682258606
    2. 'pe' → logprob: -1.1730225086212158
    3. 'pr' → logprob: -3.298022508621216
    4. 'essa' → logprob: -3.298022508621216
    5. 'pour' → logprob: -3.548022508621216
    6. 'print' → logprob: -3.923022508621216
    7. 'pro' → logprob: -3.923022508621216
    8. 'p' → logprob: -4.548022747039795
    9. 'continue' → logprob: -4.548022747039795
    10. ' #' → logprob: -4.673022747039795

Token 961: ' de' (ID: 334)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.7932021021842957
    2. ' d' → logprob: -1.4182021617889404
    3. 'une' → logprob: -1.9182021617889404
    4. 'de' → logprob: -2.1682021617889404
    5. ' de' → logprob: -3.7932021617889404
    6. '```' → logprob: -4.543201923370361
    7. '#' → logprob: -5.168201923370361
    8. ' une' → logprob: -6.793201923370361
    9. ' quelques' → logprob: -7.293201923370361
    10. 'un' → logprob: -7.418201923370361

Token 962: ' trouver' (ID: 23195)
  Prédit: 'prendre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prendre' → logprob: -0.6900767087936401
    2. 'tr' → logprob: -1.1900767087936401
    3. 'sé' → logprob: -3.5650768280029297
    4. 'approx' → logprob: -4.19007682800293
    5. 'ré' → logprob: -4.19007682800293
    6. 're' → logprob: -4.31507682800293
    7. 'appro' → logprob: -4.44007682800293
    8. ' prendre' → logprob: -4.56507682800293
    9. 'faire' → logprob: -4.56507682800293
    10. 'select' → logprob: -4.69007682800293

Token 963: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -1.112642765045166
    2. 'un' → logprob: -1.237642765045166
    3. 'une' → logprob: -1.862642765045166
    4. 'k' → logprob: -2.737642765045166
    5. ' k' → logprob: -2.737642765045166
    6. ' une' → logprob: -3.112642765045166
    7. ' des' → logprob: -3.362642765045166
    8. '#' → logprob: -5.737642765045166
    9. 'subset' → logprob: -5.862642765045166
    10. '```' → logprob: -6.112642765045166

Token 964: ' sous' (ID: 14487)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.15731856226921082
    2. 'plus' → logprob: -2.532318592071533
    3. ' sous' → logprob: -3.782318592071533
    4. 'subset' → logprob: -4.157318592071533
    5. 'k' → logprob: -4.782318592071533
    6. 'ensemble' → logprob: -5.157318592071533
    7. '```' → logprob: -5.157318592071533
    8. 'me' → logprob: -6.157318592071533
    9. 'connected' → logprob: -6.532318592071533
    10. 'under' → logprob: -7.282318592071533

Token 965: '-gr' (ID: 18511)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.05455351248383522
    2. '_graph' → logprob: -4.429553508758545
    3. '-' → logprob: -4.554553508758545
    4. '#' → logprob: -4.804553508758545
    5. '_gr' → logprob: -5.179553508758545
    6. '_-' → logprob: -5.554553508758545
    7. 'graph' → logprob: -5.679553508758545
    8. '_g' → logprob: -6.304553508758545
    9. '_set' → logprob: -6.804553508758545
    10. 'ensemble' → logprob: -6.804553508758545

Token 966: 'aphe' (ID: 98856)
  Prédit: 'oupe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oupe' → logprob: -0.2675411105155945
    2. 'oup' → logprob: -1.8925411701202393
    3. 'aphe' → logprob: -2.6425411701202393
    4. 'aph' → logprob: -4.76754093170166
    5. '```' → logprob: -7.26754093170166
    6. 'âce' → logprob: -7.39254093170166
    7. 'roupe' → logprob: -7.64254093170166
    8. 'o' → logprob: -8.14254093170166
    9. '#' → logprob: -8.26754093170166
    10. 'ou' → logprob: -8.64254093170166

Token 967: ' conn' (ID: 10850)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.514336884021759
    2. '_conn' → logprob: -1.6393368244171143
    3. 'conn' → logprob: -1.8893368244171143
    4. ' conn' → logprob: -3.5143368244171143
    5. ' _' → logprob: -4.389337062835693
    6. '_ind' → logprob: -5.389337062835693
    7. ' induced' → logprob: -5.639337062835693
    8. '_connected' → logprob: -6.764337062835693
    9. '_connect' → logprob: -7.014337062835693
    10. 'ind' → logprob: -7.264337062835693

Token 968: 'exe' (ID: 70589)
  Prédit: 'ect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -0.007409038953483105
    2. 'nect' → logprob: -6.38240909576416
    3. 'u' → logprob: -6.50740909576416
    4. '#' → logprob: -7.25740909576416
    5. '```' → logprob: -7.38240909576416
    6. 'exe' → logprob: -7.50740909576416
    7. 'ext' → logprob: -7.63240909576416
    8. 'n' → logprob: -8.13240909576416
    9. 'x' → logprob: -8.25740909576416
    10. 'ex' → logprob: -8.38240909576416

Token 969: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.6692167520523071
    2. '_' → logprob: -1.2942167520523071
    3. ' induced' → logprob: -2.5442166328430176
    4. ' _' → logprob: -2.7942166328430176
    5. 'de' → logprob: -3.5442166328430176
    6. '_de' → logprob: -4.419216632843018
    7. '_ind' → logprob: -5.419216632843018
    8. ' conn' → logprob: -5.544216632843018
    9. ' minimal' → logprob: -6.044216632843018
    10. '_conn' → logprob: -6.044216632843018

Token 970: ' taille' (ID: 41644)
  Prédit: 'tail'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tail' → logprob: -0.4369730055332184
    2. ' taille' → logprob: -1.186972975730896
    3. 'k' → logprob: -3.4369730949401855
    4. ' k' → logprob: -4.8119730949401855
    5. 'size' → logprob: -5.0619730949401855
    6. ' size' → logprob: -7.4369730949401855
    7. 'la' → logprob: -7.4369730949401855
    8. '```' → logprob: -7.9369730949401855
    9. 's' → logprob: -8.311972618103027
    10. 'ta' → logprob: -9.436972618103027

Token 971: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.2281283587217331
    2. 'k' → logprob: -1.6031283140182495
    3. ' inf' → logprob: -7.603128433227539
    4. '=k' → logprob: -7.853128433227539
    5. ' au' → logprob: -8.228128433227539
    6. 'exact' → logprob: -8.478128433227539
    7. ' inférieur' → logprob: -8.603128433227539
    8. ' moindre' → logprob: -8.728128433227539
    9. '=' → logprob: -8.853128433227539
    10. ' exactly' → logprob: -8.978128433227539

Token 972: ' dans' (ID: 2671)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.21528176963329315
    2. ',' → logprob: -3.2152817249298096
    3. 'def' → logprob: -3.2152817249298096
    4. '_' → logprob: -4.090281963348389
    5. '```' → logprob: -4.090281963348389
    6. ' =' → logprob: -4.215281963348389
    7. '[' → logprob: -4.715281963348389
    8. '.' → logprob: -4.965281963348389
    9. ':
' → logprob: -4.965281963348389
    10. '#' → logprob: -4.965281963348389

Token 973: ' cette' (ID: 7696)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.451312780380249
    2. ' cette' → logprob: -1.326312780380249
    3. ' la' → logprob: -2.701312780380249
    4. 'c' → logprob: -3.576312780380249
    5. 'une' → logprob: -7.201313018798828
    6. 'l' → logprob: -8.076313018798828
    7. '```' → logprob: -8.201313018798828
    8. 'celle' → logprob: -8.326313018798828
    9. 'le' → logprob: -8.576313018798828
    10. '#' → logprob: -8.826313018798828

Token 974: ' compos' (ID: 14635)
  Prédit: ' compos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' compos' → logprob: -0.3960418701171875
    2. 'com' → logprob: -1.1460418701171875
    3. ' même' → logprob: -5.2710418701171875
    4. '_com' → logprob: -6.8960418701171875
    5. ' com' → logprob: -7.5210418701171875
    6. ' comp' → logprob: -7.7710418701171875
    7. 'comp' → logprob: -7.8960418701171875
    8. ' ' → logprob: -8.021041870117188
    9. ' composition' → logprob: -8.396041870117188
    10. '#' → logprob: -8.396041870117188

Token 975: 'ante' (ID: 2116)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.03445984050631523
    2. 'on' → logprob: -4.784460067749023
    3. 'ponent' → logprob: -4.909460067749023
    4. 'ont' → logprob: -5.034460067749023
    5. 'pon' → logprob: -5.409460067749023
    6. '#' → logprob: -5.909460067749023
    7. 'onte' → logprob: -6.909460067749023
    8. 'ponente' → logprob: -7.159460067749023
    9. 'onn' → logprob: -7.534460067749023
    10. 'os' → logprob: -7.659460067749023

Token 976: ' qui' (ID: 2780)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.41285213828086853
    2. 'def' → logprob: -1.412852168083191
    3. ':
' → logprob: -3.4128520488739014
    4. ' =' → logprob: -4.2878522872924805
    5. '[' → logprob: -4.4128522872924805
    6. '(s' → logprob: -5.2878522872924805
    7. 'import' → logprob: -5.4128522872924805
    8. ',' → logprob: -5.5378522872924805
    9. 's' → logprob: -5.9128522872924805
    10. '```' → logprob: -6.0378522872924805

Token 977: ' minimise' (ID: 148032)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.2704906463623047
    2. ' est' → logprob: -1.6454906463623047
    3. 'min' → logprob: -2.3954906463623047
    4. ' n' → logprob: -2.6454906463623047
    5. ' minim' → logprob: -2.6454906463623047
    6. ' minimize' → logprob: -2.8954906463623047
    7. ' minimise' → logprob: -3.0204906463623047
    8. ' ne' → logprob: -3.6454906463623047
    9. ' a' → logprob: -3.8954906463623047
    10. '```' → logprob: -4.145490646362305

Token 978: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.022726934403181076
    2. ' l' → logprob: -3.8977270126342773
    3. 'la' → logprob: -6.397727012634277
    4. 'l' → logprob: -8.022727012634277
    5. ' le' → logprob: -9.897727012634277
    6. '_la' → logprob: -10.272727012634277
    7. ' sa' → logprob: -10.522727012634277
    8. ' ' → logprob: -11.272727012634277
    9. ' ' → logprob: -11.397727012634277
    10. ' the' → logprob: -11.522727012634277

Token 979: ' surface' (ID: 9753)
  Prédit: 'surface'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'surface' → logprob: -0.18001329898834229
    2. ' surface' → logprob: -1.8050132989883423
    3. '_surface' → logprob: -8.305013656616211
    4. 's' → logprob: -11.805013656616211
    5. 'surf' → logprob: -13.055013656616211
    6. ' ' → logprob: -13.305013656616211
    7. '```' → logprob: -13.430013656616211
    8. 'sur' → logprob: -13.430013656616211
    9. '(surface' → logprob: -13.555013656616211
    10. 'distance' → logprob: -13.680013656616211

Token 980: '.
' (ID: 558)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3629574179649353
    2. '(
' → logprob: -1.86295747756958
    3. '(' → logprob: -3.11295747756958
    4. ':
' → logprob: -3.48795747756958
    5. '
' → logprob: -3.73795747756958
    6. ':' → logprob: -3.86295747756958
    7. '\' → logprob: -4.61295747756958
    8. 'import' → logprob: -5.48795747756958
    9. '(s' → logprob: -6.36295747756958
    10. '(def' → logprob: -6.48795747756958

Token 981: '#
' (ID: 11240)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.12050221115350723
    2. '#' → logprob: -2.620502233505249
    3. 'import' → logprob: -4.24550199508667
    4. '```' → logprob: -4.49550199508667
    5. '
' → logprob: -4.99550199508667
    6. '\' → logprob: -5.74550199508667
    7. ':' → logprob: -6.87050199508667
    8. ' def' → logprob: -7.49550199508667
    9. '(
' → logprob: -7.99550199508667
    10. '[' → logprob: -7.99550199508667

Token 982: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.010387478396296501
    2. 'import' → logprob: -5.010387420654297
    3. '
' → logprob: -6.135387420654297
    4. 'class' → logprob: -6.760387420654297
    5. '```' → logprob: -9.260387420654297
    6. '#' → logprob: -10.135387420654297
    7. '

' → logprob: -10.135387420654297
    8. 'from' → logprob: -10.135387420654297
    9. 'n' → logprob: -10.385387420654297
    10. 's' → logprob: -10.385387420654297

Token 983: ' He' (ID: 1679)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00022809267102275044
    2. 'class' → logprob: -8.625227928161621
    3. 'import' → logprob: -10.125227928161621
    4. '#' → logprob: -12.250227928161621
    5. '
' → logprob: -13.250227928161621
    6. 'n' → logprob: -14.625227928161621
    7. 's' → logprob: -14.750227928161621
    8. 'from' → logprob: -14.750227928161621
    9. 'input' → logprob: -15.875227928161621
    10. 'k' → logprob: -15.875227928161621

Token 984: 'ur' (ID: 330)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06342220306396484
    2. '#' → logprob: -3.063422203063965
    3. 'lp' → logprob: -5.688422203063965
    4. 'ight' → logprob: -5.688422203063965
    5. 'l' → logprob: -6.313422203063965
    6. 'ur' → logprob: -6.438422203063965
    7. 'llo' → logprob: -6.938422203063965
    8. 'uristic' → logprob: -7.313422203063965
    9. 're' → logprob: -7.563422203063965
    10. 'ader' → logprob: -7.563422203063965

Token 985: 'istique' (ID: 66596)
  Prédit: 'istique'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'istique' → logprob: -0.11196371167898178
    2. 'istic' → logprob: -2.7369637489318848
    3. '#' → logprob: -3.7369637489318848
    4. 'istiques' → logprob: -4.736963748931885
    5. 'istics' → logprob: -5.236963748931885
    6. 'st' → logprob: -7.236963748931885
    7. 'rist' → logprob: -7.361963748931885
    8. 't' → logprob: -7.986963748931885
    9. 's' → logprob: -8.361963272094727
    10. 'istiche' → logprob: -8.486963272094727

Token 986: ' pour' (ID: 1930)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2448621541261673
    2. 'def' → logprob: -1.6198621988296509
    3. ' =' → logprob: -5.119862079620361
    4. ' :' → logprob: -5.119862079620361
    5. ' def' → logprob: -6.494862079620361
    6. ':
' → logprob: -6.494862079620361
    7. '#' → logprob: -6.744862079620361
    8. 's' → logprob: -7.244862079620361
    9. ':def' → logprob: -7.494862079620361
    10. '
' → logprob: -7.994862079620361

Token 987: ' sous' (ID: 14487)
  Prédit: 'cho'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cho' → logprob: -1.5613861083984375
    2. ' la' → logprob: -2.0613861083984375
    3. ' continuer' → logprob: -2.1863861083984375
    4. ' sélectionner' → logprob: -2.4363861083984375
    5. 'la' → logprob: -2.5613861083984375
    6. 'l' → logprob: -2.9363861083984375
    7. ' trouver' → logprob: -3.0613861083984375
    8. 'contin' → logprob: -3.1863861083984375
    9. ' l' → logprob: -3.3113861083984375
    10. ' choisir' → logprob: -3.4363861083984375

Token 988: '-gr' (ID: 18511)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.10174351185560226
    2. '_graph' → logprob: -2.601743459701538
    3. '#' → logprob: -4.226743698120117
    4. '_gr' → logprob: -5.601743698120117
    5. 'gr' → logprob: -6.226743698120117
    6. '-gr' → logprob: -6.726743698120117
    7. 'gra' → logprob: -8.226743698120117
    8. '_g' → logprob: -8.476743698120117
    9. '-' → logprob: -8.726743698120117
    10. 'graphs' → logprob: -8.851743698120117

Token 989: 'aphe' (ID: 98856)
  Prédit: 'raph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'raph' → logprob: -0.1695621907711029
    2. 'graph' → logprob: -2.6695621013641357
    3. '_' → logprob: -4.044562339782715
    4. 'r' → logprob: -4.169562339782715
    5. '_graph' → logprob: -4.669562339782715
    6. 'rá' → logprob: -4.919562339782715
    7. '_sub' → logprob: -5.794562339782715
    8. '   ' → logprob: -6.044562339782715
    9. '#' → logprob: -6.294562339782715
    10. 't' → logprob: -6.419562339782715

Token 990: ' conn' (ID: 10850)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.643429160118103
    2. ' =' → logprob: -1.018429160118103
    3. '#' → logprob: -3.0184292793273926
    4. '_' → logprob: -4.768429279327393
    5. ' #' → logprob: -4.893429279327393
    6. 's' → logprob: -4.893429279327393
    7. '_size' → logprob: -5.018429279327393
    8. ':' → logprob: -5.268429279327393
    9. 'import' → logprob: -5.393429279327393
    10. '_selection' → logprob: -6.393429279327393

Token 991: 'exe' (ID: 70589)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ex' → logprob: -1.0275044441223145
    2. 'ect' → logprob: -1.1525044441223145
    3. 'ected' → logprob: -2.1525044441223145
    4. 'n' → logprob: -2.6525044441223145
    5. 'x' → logprob: -3.0275044441223145
    6. 'ection' → logprob: -3.1525044441223145
    7. 'exion' → logprob: -3.9025044441223145
    8. 'e' → logprob: -4.9025044441223145
    9. 'nect' → logprob: -5.1525044441223145
    10. 'ext' → logprob: -6.0275044441223145

Token 992: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.21825897693634033
    2. ' :' → logprob: -2.093258857727051
    3. 'def' → logprob: -3.843258857727051
    4. ':
' → logprob: -3.968258857727051
    5. ' :
' → logprob: -5.093258857727051
    6. ' =' → logprob: -5.468258857727051
    7. '#' → logprob: -5.843258857727051
    8. ' def' → logprob: -5.968258857727051
    9. ' #' → logprob: -6.218258857727051
    10. '_' → logprob: -6.218258857727051

Token 993: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.008824922144412994
    2. 'def' → logprob: -4.758824825286865
    3. ' #' → logprob: -9.633825302124023
    4. '
' → logprob: -10.008825302124023
    5. 'import' → logprob: -10.133825302124023
    6. 'from' → logprob: -11.133825302124023
    7. '#
' → logprob: -11.258825302124023
    8. 'for' → logprob: -11.258825302124023
    9. '```' → logprob: -11.758825302124023
    10. ' def' → logprob: -11.883825302124023

Token 994: ' -' (ID: 533)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.23182883858680725
    2. 'def' → logprob: -1.6068288087844849
    3. ' #' → logprob: -5.981828689575195
    4. 'import' → logprob: -5.981828689575195
    5. 'from' → logprob: -7.981828689575195
    6. '
' → logprob: -8.106828689575195
    7. ' def' → logprob: -8.356828689575195
    8. 'class' → logprob: -8.606828689575195
    9. '```' → logprob: -8.856828689575195
    10. '#
' → logprob: -10.231828689575195

Token 995: ' Pour' (ID: 13931)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7507631182670593
    2. '#' → logprob: -1.250763177871704
    3. 'from' → logprob: -1.750763177871704
    4. 'import' → logprob: -3.375763177871704
    5. 'On' → logprob: -3.875763177871704
    6. 'Pour' → logprob: -5.250762939453125
    7. 'Util' → logprob: -6.250762939453125
    8. 'for' → logprob: -7.000762939453125
    9. 'Faire' → logprob: -7.125762939453125
    10. '
' → logprob: -7.500762939453125

Token 996: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.22306229174137115
    2. ' commencer' → logprob: -3.47306227684021
    3. ' trouver' → logprob: -3.47306227684021
    4. 'each' → logprob: -4.348062515258789
    5. 'une' → logprob: -4.348062515258789
    6. 't' → logprob: -4.473062515258789
    7. 'part' → logprob: -4.473062515258789
    8. 'cho' → logprob: -4.973062515258789
    9. ' choisir' → logprob: -5.223062515258789
    10. ' sélectionner' → logprob: -5.598062515258789

Token 997: ' sommet' (ID: 130502)
  Prédit: ' sommet'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sommet' → logprob: -1.2653671503067017
    2. ' node' → logprob: -1.5153671503067017
    3. 'node' → logprob: -1.7653671503067017
    4. 'pos' → logprob: -2.640367031097412
    5. 'position' → logprob: -3.265367031097412
    6. 'i' → logprob: -3.640367031097412
    7. 'som' → logprob: -3.640367031097412
    8. '_' → logprob: -4.140367031097412
    9. ' position' → logprob: -4.390367031097412
    10. 'neighbor' → logprob: -4.390367031097412

Token 998: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1328411102294922
    2. ' in' → logprob: -1.7578411102294922
    3. ':' → logprob: -2.007841110229492
    4. '_selected' → logprob: -2.257841110229492
    5. 'in' → logprob: -3.132841110229492
    6. ' selected' → logprob: -3.507841110229492
    7. 'u' → logprob: -3.882841110229492
    8. 'selected' → logprob: -3.882841110229492
    9. '_neighbors' → logprob: -4.382841110229492
    10. ' u' → logprob: -4.507841110229492

Token 999: ' BFS' (ID: 190016)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.5305437445640564
    2. ' faire' → logprob: -1.7805438041687012
    3. ' lancer' → logprob: -2.530543804168701
    4. 'on' → logprob: -3.030543804168701
    5. 'faire' → logprob: -3.155543804168701
    6. '#' → logprob: -4.030543804168701
    7. ' effectuer' → logprob: -4.530543804168701
    8. ' ' → logprob: -4.655543804168701
    9. ' #' → logprob: -5.030543804168701
    10. ' dém' → logprob: -5.530543804168701

Token 1000: ' pour' (ID: 1930)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09350520372390747
    2. '(
' → logprob: -2.9685051441192627
    3. ' (' → logprob: -4.218505382537842
    4. '(s' → logprob: -5.093505382537842
    5. '(start' → logprob: -6.218505382537842
    6. 'for' → logprob: -6.343505382537842
    7. '#' → logprob: -6.593505382537842
    8. '(node' → logprob: -6.718505382537842
    9. 'from' → logprob: -6.843505382537842
    10. '(queue' → logprob: -6.968505382537842

Token 1001: ' ét' (ID: 4976)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.6501343250274658
    2. ' trouver' → logprob: -1.2751343250274658
    3. ' explorer' → logprob: -2.025134325027466
    4. 'expl' → logprob: -3.400134325027466
    5. ' visiter' → logprob: -4.900134086608887
    6. ' parcour' → logprob: -5.650134086608887
    7. ' sélectionner' → logprob: -5.900134086608887
    8. ' génér' → logprob: -5.900134086608887
    9. 'chercher' → logprob: -6.025134086608887
    10. 'g' → logprob: -6.400134086608887

Token 1002: 'endre' (ID: 9574)
  Prédit: 'endre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'endre' → logprob: -9.531813702778891e-05
    2. 're' → logprob: -9.75009536743164
    3. 'end' → logprob: -11.25009536743164
    4. 'udier' → logprob: -12.75009536743164
    5. 'endr' → logprob: -13.00009536743164
    6. 'andre' → logprob: -13.25009536743164
    7. 'tre' → logprob: -13.25009536743164
    8. 'indre' → logprob: -13.37509536743164
    9. 'aler' → logprob: -13.62509536743164
    10. 'endres' → logprob: -13.62509536743164

Token 1003: ' la' (ID: 557)
  Prédit: ' jusqu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' jusqu' → logprob: -1.0998271703720093
    2. ' la' → logprob: -1.8498271703720093
    3. ' le' → logprob: -2.599827289581299
    4. ' progressivement' → logprob: -2.849827289581299
    5. ' de' → logprob: -2.974827289581299
    6. ' l' → logprob: -3.224827289581299
    7. ' à' → logprob: -3.599827289581299
    8. ' d' → logprob: -3.724827289581299
    9. ' un' → logprob: -3.849827289581299
    10. ' au' → logprob: -3.849827289581299

Token 1004: ' compos' (ID: 14635)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' k' → logprob: -1.124314308166504
    2. ' taille' → logprob: -2.249314308166504
    3. ' plus' → logprob: -2.624314308166504
    4. 'k' → logprob: -2.749314308166504
    5. '   ' → logprob: -2.749314308166504
    6. ' subset' → logprob: -2.749314308166504
    7. ' queue' → logprob: -2.999314308166504
    8. 'queue' → logprob: -2.999314308166504
    9. ' ' → logprob: -3.249314308166504
    10. 'plus' → logprob: -3.874314308166504

Token 1005: 'ante' (ID: 2116)
  Prédit: 'ète'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ète' → logprob: -1.207350730895996
    2. 'te' → logprob: -1.707350730895996
    3. 'nte' → logprob: -1.957350730895996
    4. 't' → logprob: -2.707350730895996
    5. 'on' → logprob: -3.457350730895996
    6. 'ont' → logprob: -3.457350730895996
    7. 'ponent' → logprob: -3.582350730895996
    8. 'p' → logprob: -3.832350730895996
    9. 'et' → logprob: -4.207350730895996
    10. 'onte' → logprob: -4.332350730895996

Token 1006: ' jusqu' (ID: 21961)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.45102253556251526
    2. '_' → logprob: -1.5760225057601929
    3. '(
' → logprob: -2.7010226249694824
    4. '(' → logprob: -3.5760226249694824
    5. ' =' → logprob: -4.201022624969482
    6. '_
' → logprob: -5.076022624969482
    7. '#' → logprob: -5.576022624969482
    8. '
' → logprob: -5.701022624969482
    9. '=' → logprob: -5.701022624969482
    10. ' (' → logprob: -5.826022624969482

Token 1007: ''à' (ID: 33688)
  Prédit: ''à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''à' → logprob: -0.012429474852979183
    2. 'à' → logprob: -4.512429237365723
    3. ''au' → logprob: -6.762429237365723
    4. '’à' → logprob: -9.012429237365723
    5. 'au' → logprob: -9.762429237365723
    6. '`' → logprob: -10.637429237365723
    7. ''a' → logprob: -11.262429237365723
    8. 'a' → logprob: -12.637429237365723
    9. ''' → logprob: -12.762429237365723
    10. '```' → logprob: -14.387429237365723

Token 1008: ' taille' (ID: 41644)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.048426106572151184
    2. 'tail' → logprob: -3.2984261512756348
    3. 'size' → logprob: -5.173426151275635
    4. 'la' → logprob: -5.673426151275635
    5. 'atte' → logprob: -7.673426151275635
    6. ' k' → logprob: -8.048425674438477
    7. 'ta' → logprob: -8.673425674438477
    8. ' taille' → logprob: -9.673425674438477
    9. 'at' → logprob: -10.423425674438477
    10. 'distance' → logprob: -10.548425674438477

Token 1009: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.46571582555770874
    2. 'k' → logprob: -1.0907158851623535
    3. '+' → logprob: -4.2157158851623535
    4. ' +' → logprob: -4.8407158851623535
    5. '```' → logprob: -5.3407158851623535
    6. '+k' → logprob: -6.7157158851623535
    7. ' ' → logprob: -6.8407158851623535
    8. '`' → logprob: -6.9657158851623535
    9. '=' → logprob: -7.0907158851623535
    10. ' =' → logprob: -7.3407158851623535

Token 1010: ' (' (ID: 350)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04412195086479187
    2. '(
' → logprob: -4.044121742248535
    3. ':
' → logprob: -4.794121742248535
    4. '
' → logprob: -5.294121742248535
    5. '(s' → logprob: -5.419121742248535
    6. '(' → logprob: -6.169121742248535
    7. ':' → logprob: -6.794121742248535
    8. '(n' → logprob: -6.919121742248535
    9. ' def' → logprob: -7.169121742248535
    10. '\' → logprob: -7.669121742248535

Token 1011: 'prem' (ID: 76294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2449161857366562
    2. ' )' → logprob: -2.9949162006378174
    3. ',' → logprob: -3.1199162006378174
    4. '),' → logprob: -3.2449162006378174
    5. ')
' → logprob: -4.119915962219238
    6. '#' → logprob: -4.244915962219238
    7. '):
' → logprob: -4.994915962219238
    8. '```' → logprob: -5.119915962219238
    9. '.' → logprob: -5.494915962219238
    10. ').' → logprob: -5.744915962219238

Token 1012: 'iers' (ID: 11012)
  Prédit: 'ière'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ière' → logprob: -0.2754744291305542
    2. 'i' → logprob: -2.2754745483398438
    3. 'ier' → logprob: -2.9004745483398438
    4. ')' → logprob: -3.5254745483398438
    5. '```' → logprob: -3.7754745483398438
    6. 'e' → logprob: -5.400474548339844
    7. 'é' → logprob: -5.525474548339844
    8. 'iere' → logprob: -5.775474548339844
    9. 't' → logprob: -5.900474548339844
    10. 'def' → logprob: -6.025474548339844

Token 1013: ' arriv' (ID: 32213)
  Prédit: ' voisins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' voisins' → logprob: -0.6238678693771362
    2. ' )' → logprob: -1.8738678693771362
    3. ')' → logprob: -2.248867988586426
    4. ' neighbors' → logprob: -2.623867988586426
    5. ' tokens' → logprob: -3.123867988586426
    6. ' voisin' → logprob: -4.373867988586426
    7. ' ' → logprob: -4.498867988586426
    8. 'neighbors' → logprob: -4.498867988586426
    9. '_' → logprob: -4.998867988586426
    10. ' _' → logprob: -5.248867988586426

Token 1014: 'és' (ID: 1756)
  Prédit: 'ée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.1283414363861084
    2. 'ées' → logprob: -2.2533414363861084
    3. 'es' → logprob: -4.8783416748046875
    4. 'é' → logprob: -5.6283416748046875
    5. 'e' → logprob: -6.0033416748046875
    6. 'és' → logprob: -6.8783416748046875
    7. '```' → logprob: -8.128341674804688
    8. 'ee' → logprob: -9.253341674804688
    9. 'ies' → logprob: -9.628341674804688
    10. 'er' → logprob: -10.003341674804688

Token 1015: ' suff' (ID: 9490)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05052423104643822
    2. ' )' → logprob: -4.4255242347717285
    3. 'és' → logprob: -5.0505242347717285
    4. 'e' → logprob: -5.0505242347717285
    5. '):' → logprob: -5.0505242347717285
    6. '),' → logprob: -5.3005242347717285
    7. ',' → logprob: -5.9255242347717285
    8. 's' → logprob: -6.0505242347717285
    9. 'es' → logprob: -6.5505242347717285
    10. ' ' → logprob: -7.1755242347717285

Token 1016: 'isent' (ID: 68781)
  Prédit: 'ront'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ront' → logprob: -0.1992034763097763
    2. 'is' → logprob: -2.5742034912109375
    3. 'isent' → logprob: -3.1992034912109375
    4. 'u' → logprob: -4.4492034912109375
    5. 'r' → logprob: -4.5742034912109375
    6. 'ient' → logprob: -4.9492034912109375
    7. 'icients' → logprob: -5.9492034912109375
    8. 'i' → logprob: -6.0742034912109375
    9. 'ont' → logprob: -6.1992034912109375
    10. 'ivent' → logprob: -6.1992034912109375

Token 1017: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8404901027679443
    2. ',' → logprob: -1.8404901027679443
    3. ':' → logprob: -2.2154901027679443
    4. ' puis' → logprob: -2.9654901027679443
    5. '#' → logprob: -3.2154901027679443
    6. '):' → logprob: -3.9654901027679443
    7. '.' → logprob: -4.090490341186523
    8. 'import' → logprob: -4.090490341186523
    9. ' (' → logprob: -4.215490341186523
    10. '```' → logprob: -4.215490341186523

Token 1018: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0069784484803676605
    2. '
' → logprob: -5.756978511810303
    3. 'import' → logprob: -6.131978511810303
    4. ':
' → logprob: -7.756978511810303
    5. 'n' → logprob: -8.381978034973145
    6. '(n' → logprob: -8.381978034973145
    7. '(
' → logprob: -8.631978034973145
    8. 'class' → logprob: -9.506978034973145
    9. '```' → logprob: -9.881978034973145
    10. '

' → logprob: -10.006978034973145

Token 1019: ' -' (ID: 533)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.032593365758657455
    2. '(
' → logprob: -4.157593250274658
    3. '(n' → logprob: -5.282593250274658
    4. ':
' → logprob: -5.532593250274658
    5. '
' → logprob: -6.032593250274658
    6. 'import' → logprob: -6.532593250274658
    7. ':' → logprob: -6.532593250274658
    8. '(' → logprob: -7.782593250274658
    9. 'n' → logprob: -8.032593727111816
    10. 's' → logprob: -8.157593727111816

Token 1020: ' Calcul' (ID: 57243)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5937243700027466
    2. 'def' → logprob: -1.5937243700027466
    3. 'visited' → logprob: -2.218724250793457
    4. '#' → logprob: -2.593724250793457
    5. 'from' → logprob: -3.093724250793457
    6. 'queue' → logprob: -5.218724250793457
    7. '-' → logprob: -5.593724250793457
    8. 'import' → logprob: -7.343724250793457
    9. 'best' → logprob: -7.343724250793457
    10. ' for' → logprob: -7.343724250793457

Token 1021: ' surface' (ID: 9753)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.28426414728164673
    2. 'ate' → logprob: -1.409264087677002
    3. 'ons' → logprob: -6.909264087677002
    4. 'ateur' → logprob: -7.284264087677002
    5. '#' → logprob: -8.28426456451416
    6. 'def' → logprob: -8.53426456451416
    7. 'ation' → logprob: -8.53426456451416
    8. 'e' → logprob: -8.90926456451416
    9. 'r' → logprob: -9.03426456451416
    10. '   ' → logprob: -9.15926456451416

Token 1022: ' pour' (ID: 1930)
  Prédit: '(
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(
' → logprob: -0.48314058780670166
    2. 'def' → logprob: -1.1081405878067017
    3. '(' → logprob: -3.733140468597412
    4. ':
' → logprob: -4.108140468597412
    5. '
' → logprob: -5.233140468597412
    6. ':' → logprob: -6.358140468597412
    7. '\' → logprob: -6.858140468597412
    8. '(n' → logprob: -7.358140468597412
    9. '()
' → logprob: -7.733140468597412
    10. '(def' → logprob: -7.733140468597412

Token 1023: ' ensemble' (ID: 33081)
  Prédit: ' chaque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.025708507746458054
    2. 'cet' → logprob: -4.9007086753845215
    3. ' cet' → logprob: -5.2757086753845215
    4. ' ce' → logprob: -5.5257086753845215
    5. ' l' → logprob: -6.1507086753845215
    6. ' cette' → logprob: -6.4007086753845215
    7. 'l' → logprob: -6.4007086753845215
    8. 'ce' → logprob: -6.9007086753845215
    9. 'ces' → logprob: -7.5257086753845215
    10. 'cha' → logprob: -7.6507086753845215

Token 1024: ' result' (ID: 1534)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9924461841583252
    2. 'def' → logprob: -2.117446184158325
    3. '_' → logprob: -2.242446184158325
    4. '_selected' → logprob: -2.492446184158325
    5. 's' → logprob: -2.742446184158325
    6. '(
' → logprob: -3.367446184158325
    7. '
' → logprob: -3.867446184158325
    8. '=' → logprob: -4.242445945739746
    9. '_nodes' → logprob: -4.242445945739746
    10. '_set' → logprob: -4.742445945739746

Token 1025: '.
' (ID: 558)
  Prédit: '(
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(
' → logprob: -1.5256004333496094
    2. 'e' → logprob: -1.7756004333496094
    3. '[
' → logprob: -2.1506004333496094
    4. ' =' → logprob: -2.2756004333496094
    5. 'eur' → logprob: -2.5256004333496094
    6. 's' → logprob: -2.9006004333496094
    7. '[' → logprob: -3.2756004333496094
    8. '{
' → logprob: -4.400600433349609
    9. 'é' → logprob: -4.525600433349609
    10. ')' → logprob: -4.650600433349609

Token 1026: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.05698448047041893
    2. '(
' → logprob: -3.6819844245910645
    3. ':
' → logprob: -4.1819844245910645
    4. '
' → logprob: -4.8069844245910645
    5. ':' → logprob: -6.3069844245910645
    6. '(' → logprob: -6.5569844245910645
    7. '(s' → logprob: -6.6819844245910645
    8. '(n' → logprob: -7.5569844245910645
    9. '\' → logprob: -8.431984901428223
    10. '#' → logprob: -8.806984901428223

Token 1027: ' -' (ID: 533)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.10237880051136017
    2. ':
' → logprob: -3.1023788452148438
    3. '(
' → logprob: -3.2273788452148438
    4. '
' → logprob: -4.977378845214844
    5. ':' → logprob: -5.977378845214844
    6. '(' → logprob: -7.102378845214844
    7. '(s' → logprob: -7.352378845214844
    8. ':

' → logprob: -8.227378845214844
    9. '(n' → logprob: -8.477378845214844
    10. ' def' → logprob: -8.852378845214844

Token 1028: ' M' (ID: 391)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2670615315437317
    2. '#' → logprob: -1.767061471939087
    3. ' for' → logprob: -3.767061471939087
    4. 'min' → logprob: -4.767061710357666
    5. 'best' → logprob: -5.017061710357666
    6. 'import' → logprob: -5.267061710357666
    7. 'from' → logprob: -5.392061710357666
    8. 'Pour' → logprob: -6.392061710357666
    9. ' #' → logprob: -6.767061710357666
    10. 'max' → logprob: -6.767061710357666

Token 1029: 'ém' (ID: 4135)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.772843599319458
    2. 'e' → logprob: -1.397843599319458
    3. 'é' → logprob: -1.897843599319458
    4. 'a' → logprob: -2.897843599319458
    5. 'ax' → logprob: -3.147843599319458
    6. 'i' → logprob: -3.772843599319458
    7. '#' → logprob: -4.647843360900879
    8. 'ethod' → logprob: -6.397843360900879
    9. 'o' → logprob: -6.522843360900879
    10. '=' → logprob: -6.647843360900879

Token 1030: 'or' (ID: 267)
  Prédit: 'oire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oire' → logprob: -0.18687959015369415
    2. 'é' → logprob: -2.3118796348571777
    3. '```' → logprob: -3.8118796348571777
    4. 'oir' → logprob: -3.8118796348571777
    5. 'o' → logprob: -4.936879634857178
    6. 'ém' → logprob: -5.311879634857178
    7. 'e' → logprob: -5.686879634857178
    8. 'or' → logprob: -6.686879634857178
    9. 'def' → logprob: -6.811879634857178
    10. 'ize' → logprob: -7.061879634857178

Token 1031: 'iser' (ID: 7466)
  Prédit: 'iser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iser' → logprob: -0.09065047651529312
    2. 'r' → logprob: -2.7156505584716797
    3. 'izer' → logprob: -5.34065055847168
    4. 'is' → logprob: -5.34065055847168
    5. 'er' → logprob: -5.59065055847168
    6. 'ir' → logprob: -5.71565055847168
    7. 'ise' → logprob: -6.46565055847168
    8. 'ize' → logprob: -7.21565055847168
    9. 'ris' → logprob: -7.34065055847168
    10. 'rise' → logprob: -8.34065055847168

Token 1032: ' la' (ID: 557)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8071361184120178
    2. '_' → logprob: -1.182136058807373
    3. '(' → logprob: -2.307136058807373
    4. ':' → logprob: -3.807136058807373
    5. '```' → logprob: -3.807136058807373
    6. '(
' → logprob: -3.932136058807373
    7. '=' → logprob: -4.057136058807373
    8. ' =' → logprob: -4.432136058807373
    9. '`' → logprob: -4.932136058807373
    10. ''' → logprob: -4.932136058807373

Token 1033: ' meilleure' (ID: 52387)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.5788139700889587
    2. ' minimale' → logprob: -1.7038140296936035
    3. 'best' → logprob: -2.3288140296936035
    4. 'minimum' → logprob: -2.4538140296936035
    5. 'minimal' → logprob: -3.9538140296936035
    6. ' minimal' → logprob: -3.9538140296936035
    7. 'me' → logprob: -4.3288140296936035
    8. '_min' → logprob: -5.2038140296936035
    9. ' best' → logprob: -5.3288140296936035
    10. 'surface' → logprob: -5.8288140296936035

Token 1034: ' surface' (ID: 9753)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06339378654956818
    2. '
' → logprob: -3.1883938312530518
    3. '(
' → logprob: -4.813393592834473
    4. ':
' → logprob: -5.563393592834473
    5. '\' → logprob: -6.938393592834473
    6. '(s' → logprob: -7.063393592834473
    7. '(' → logprob: -7.063393592834473
    8. '(n' → logprob: -7.188393592834473
    9. ' def' → logprob: -7.313393592834473
    10. 'import' → logprob: -7.438393592834473

Token 1035: '.
' (ID: 558)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.48830071091651917
    2. '(
' → logprob: -1.4883006811141968
    3. '
' → logprob: -3.1133008003234863
    4. ':
' → logprob: -3.2383008003234863
    5. ':' → logprob: -4.113300800323486
    6. '(' → logprob: -4.113300800323486
    7. '(n' → logprob: -4.738300800323486
    8. '(s' → logprob: -4.988300800323486
    9. 'import' → logprob: -5.863300800323486
    10. '\' → logprob: -5.863300800323486

Token 1036: '#
' (ID: 11240)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0020186901092529297
    2. '
' → logprob: -6.877018928527832
    3. '(
' → logprob: -8.877018928527832
    4. 'import' → logprob: -8.877018928527832
    5. '(n' → logprob: -8.877018928527832
    6. 'n' → logprob: -9.002018928527832
    7. ':
' → logprob: -9.502018928527832
    8. '\' → logprob: -10.002018928527832
    9. '(s' → logprob: -10.127018928527832
    10. 'k' → logprob: -10.127018928527832

Token 1037: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.002980552613735199
    2. 'import' → logprob: -6.502980709075928
    3. 'n' → logprob: -7.377980709075928
    4. '
' → logprob: -7.877980709075928
    5. 't' → logprob: -8.75298023223877
    6. 'class' → logprob: -9.37798023223877
    7. '(n' → logprob: -9.75298023223877
    8. 'from' → logprob: -10.12798023223877
    9. 'T' → logprob: -10.62798023223877
    10. '```' → logprob: -11.00298023223877

Token 1038: ' On' (ID: 2160)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0013623781269416213
    2. 'class' → logprob: -6.751362323760986
    3. 'import' → logprob: -9.126362800598145
    4. '
' → logprob: -10.126362800598145
    5. 'n' → logprob: -10.376362800598145
    6. 'from' → logprob: -12.501362800598145
    7. '```' → logprob: -12.751362800598145
    8. 'T' → logprob: -13.251362800598145
    9. 't' → logprob: -13.876362800598145
    10. '#' → logprob: -14.001362800598145

Token 1039: ' peut' (ID: 9216)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.22022587060928345
    2. '
' → logprob: -2.8452258110046387
    3. ' continue' → logprob: -3.3452258110046387
    4. 'continue' → logprob: -3.9702258110046387
    5. ' def' → logprob: -4.095225811004639
    6. '#' → logprob: -4.220225811004639
    7. '_' → logprob: -4.470225811004639
    8. ' va' → logprob: -4.470225811004639
    9. 'for' → logprob: -5.095225811004639
    10. ' #' → logprob: -5.845225811004639

Token 1040: ' accél' (ID: 152966)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3838822841644287
    2. ' continue' → logprob: -1.6338822841644287
    3. 'continue' → logprob: -2.2588822841644287
    4. ' continuer' → logprob: -4.758882522583008
    5. ' def' → logprob: -6.008882522583008
    6. ' proceed' → logprob: -7.383882522583008
    7. ':
' → logprob: -7.508882522583008
    8. '#' → logprob: -7.508882522583008
    9. 'define' → logprob: -7.508882522583008
    10. 'simulate' → logprob: -7.508882522583008

Token 1041: 'érer' (ID: 29097)
  Prédit: 'érer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érer' → logprob: -1.0148415565490723
    2. 'él' → logprob: -1.3898415565490723
    3. 'eler' → logprob: -1.5148415565490723
    4. 'er' → logprob: -2.2648415565490723
    5. 'é' → logprob: -3.3898415565490723
    6. 'è' → logprob: -3.7648415565490723
    7. 'erer' → logprob: -6.389841556549072
    8. 'e' → logprob: -6.389841556549072
    9. 'éder' → logprob: -6.639841556549072
    10. 'élé' → logprob: -7.389841556549072

Token 1042: ' en' (ID: 469)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8030422329902649
    2. '=' → logprob: -1.6780421733856201
    3. '```' → logprob: -2.05304217338562
    4. '(
' → logprob: -2.42804217338562
    5. 'import' → logprob: -3.55304217338562
    6. ':' → logprob: -3.67804217338562
    7. ' =' → logprob: -4.178042411804199
    8. '`' → logprob: -4.803042411804199
    9. '_' → logprob: -4.928042411804199
    10. ':
' → logprob: -5.053042411804199

Token 1043: ' pr' (ID: 550)
  Prédit: 'lim'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lim' → logprob: -0.4788197875022888
    2. 'pr' → logprob: -2.2288198471069336
    3. 'b' → logprob: -3.7288198471069336
    4. 'tr' → logprob: -3.8538198471069336
    5. 'util' → logprob: -3.8538198471069336
    6. 'limit' → logprob: -3.8538198471069336
    7. ' continuer' → logprob: -4.103819847106934
    8. 'contin' → logprob: -4.103819847106934
    9. 'prendre' → logprob: -4.853819847106934
    10. 'memo' → logprob: -4.978819847106934

Token 1044: 'un' (ID: 373)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.6751245260238647
    2. 'oc' → logprob: -1.8001245260238647
    3. '#' → logprob: -1.9251245260238647
    4. 'e' → logprob: -2.5501246452331543
    5. 'ec' → logprob: -3.8001246452331543
    6. 'ess' → logprob: -4.050124645233154
    7. 'def' → logprob: -5.050124645233154
    8. 'o' → logprob: -5.300124645233154
    9. 'é' → logprob: -5.550124645233154
    10. 'ogram' → logprob: -5.675124645233154

Token 1045: 'ant' (ID: 493)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.31621718406677246
    2. 'uning' → logprob: -2.3162171840667725
    3. 'n' → logprob: -2.9412171840667725
    4. 'e' → logprob: -3.1912171840667725
    5. 'unning' → logprob: -3.8162171840667725
    6. 'nt' → logprob: -4.566217422485352
    7. 'un' → logprob: -4.816217422485352
    8. 'ne' → logprob: -4.941217422485352
    9. 'é' → logprob: -5.066217422485352
    10. '#' → logprob: -5.191217422485352

Token 1046: ' par' (ID: 686)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0329484939575195
    2. '(
' → logprob: -1.7829484939575195
    3. '(' → logprob: -1.9079484939575195
    4. 'def' → logprob: -2.0329484939575195
    5. ':' → logprob: -3.1579484939575195
    6. '[' → logprob: -3.6579484939575195
    7. ' (' → logprob: -3.7829484939575195
    8. ' =' → logprob: -4.4079484939575195
    9. '=' → logprob: -4.6579484939575195
    10. '#' → logprob: -4.6579484939575195

Token 1047: ' "' (ID: 392)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -1.588109016418457
    2. 'len' → logprob: -1.838109016418457
    3. 'l' → logprob: -2.338109016418457
    4. 'le' → logprob: -2.463109016418457
    5. ' la' → logprob: -2.713109016418457
    6. 'continue' → logprob: -3.088109016418457
    7. '```' → logprob: -3.463109016418457
    8. 'k' → logprob: -3.838109016418457
    9. 'nombre' → logprob: -3.838109016418457
    10. 'i' → logprob: -3.963109016418457

Token 1048: 'front' (ID: 10313)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -1.1177375316619873
    2. '#' → logprob: -2.3677375316619873
    3. 'distance' → logprob: -2.3677375316619873
    4. 'visited' → logprob: -2.7427375316619873
    5. 'k' → logprob: -3.2427375316619873
    6. 'neighbors' → logprob: -3.2427375316619873
    7. 'la' → logprob: -3.4927375316619873
    8. 'max' → logprob: -3.4927375316619873
    9. 'best' → logprob: -3.8677375316619873
    10. 'continue' → logprob: -3.8677375316619873

Token 1049: 'ier' (ID: 905)
  Prédit: 'ier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ier' → logprob: -0.00021951000962872058
    2. 'iers' → logprob: -8.875219345092773
    3. 'i' → logprob: -10.000219345092773
    4. 'ière' → logprob: -11.125219345092773
    5. 'iert' → logprob: -12.500219345092773
    6. 'ie' → logprob: -12.750219345092773
    7. 'iere' → logprob: -13.375219345092773
    8. '```' → logprob: -13.375219345092773
    9. 'IER' → logprob: -13.625219345092773
    10. ' i' → logprob: -13.875219345092773

Token 1050: '"' (ID: 1)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3345401883125305
    2. ')' → logprob: -1.9595401287078857
    3. 'e' → logprob: -3.2095401287078857
    4. 's' → logprob: -3.3345401287078857
    5. ' ' → logprob: -4.334540367126465
    6. '[' → logprob: -4.459540367126465
    7. ' _' → logprob: -5.209540367126465
    8. '_size' → logprob: -5.459540367126465
    9. '```' → logprob: -5.459540367126465
    10. ' )' → logprob: -5.834540367126465

Token 1051: ' minimum' (ID: 11085)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.10763400048017502
    2. '(
' → logprob: -2.8576340675354004
    3. '(n' → logprob: -4.6076340675354
    4. '
' → logprob: -4.9826340675354
    5. 'import' → logprob: -5.1076340675354
    6. ':
' → logprob: -5.2326340675354
    7. 'n' → logprob: -5.7326340675354
    8. '(' → logprob: -5.8576340675354
    9. ':' → logprob: -5.9826340675354
    10. '\' → logprob: -7.1076340675354

Token 1052: ' et' (ID: 859)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.05238044261932373
    2. '(
' → logprob: -4.052380561828613
    3. '
' → logprob: -4.302380561828613
    4. '\' → logprob: -5.177380561828613
    5. 'import' → logprob: -5.927380561828613
    6. ':
' → logprob: -6.177380561828613
    7. '(' → logprob: -6.177380561828613
    8. '(n' → logprob: -6.427380561828613
    9. ':' → logprob: -6.552380561828613
    10. '\n' → logprob: -6.927380561828613

Token 1053: ' éviter' (ID: 64013)
  Prédit: 'limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'limit' → logprob: -1.1619739532470703
    2. '#' → logprob: -1.9119739532470703
    3. 'lim' → logprob: -2.0369739532470703
    4. 'en' → logprob: -2.7869739532470703
    5. '"' → logprob: -2.9119739532470703
    6. 'continu' → logprob: -2.9119739532470703
    7. 'tri' → logprob: -3.0369739532470703
    8. 'max' → logprob: -3.0369739532470703
    9. 'tail' → logprob: -3.1619739532470703
    10. 'continue' → logprob: -4.16197395324707

Token 1054: ' revis' (ID: 19497)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.3275996446609497
    2. 'for' → logprob: -1.9525996446609497
    3. 'def' → logprob: -2.32759952545166
    4. 'neighbors' → logprob: -2.82759952545166
    5. '(
' → logprob: -3.20259952545166
    6. 'import' → logprob: -3.32759952545166
    7. 'range' → logprob: -3.45259952545166
    8. 'n' → logprob: -3.57759952545166
    9. ':' → logprob: -3.70259952545166
    10. '_' → logprob: -3.82759952545166

Token 1055: 'iter' (ID: 2340)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.35626354813575745
    2. 'e' → logprob: -1.481263518333435
    3. 'erse' → logprob: -3.8562636375427246
    4. 'ers' → logprob: -4.731263637542725
    5. 'ed' → logprob: -4.856263637542725
    6. 'ew' → logprob: -5.481263637542725
    7. 'erv' → logprob: -5.606263637542725
    8. 'es' → logprob: -5.856263637542725
    9. 'ered' → logprob: -5.856263637542725
    10. 'ited' → logprob: -6.356263637542725

Token 1056: ' mêmes' (ID: 71634)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9255557656288147
    2. '(
' → logprob: -0.9255557656288147
    3. 'def' → logprob: -1.67555570602417
    4. ':' → logprob: -5.30055570602417
    5. '[' → logprob: -5.80055570602417
    6. '[
' → logprob: -6.17555570602417
    7. 'import' → logprob: -6.42555570602417
    8. '\' → logprob: -6.80055570602417
    9. ' def' → logprob: -7.17555570602417
    10. '=' → logprob: -7.42555570602417

Token 1057: ' ensembles' (ID: 144172)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.01719600521028042
    2. '_nodes' → logprob: -5.142196178436279
    3. '_states' → logprob: -5.892196178436279
    4. '_neighbors' → logprob: -6.517196178436279
    5. 'ensemble' → logprob: -6.767196178436279
    6. '_sets' → logprob: -7.142196178436279
    7. '_set' → logprob: -7.392196178436279
    8. 'sets' → logprob: -8.017195701599121
    9. '```' → logprob: -8.142195701599121
    10. ' _' → logprob: -8.142195701599121

Token 1058: '.
' (ID: 558)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5618853569030762
    2. '(
' → logprob: -1.1868853569030762
    3. '(' → logprob: -3.311885356903076
    4. ':
' → logprob: -3.436885356903076
    5. ':' → logprob: -3.686885356903076
    6. '
' → logprob: -5.436885356903076
    7. '\' → logprob: -5.686885356903076
    8. '[' → logprob: -6.061885356903076
    9. ' =' → logprob: -6.061885356903076
    10. '[
' → logprob: -6.061885356903076

Token 1059: '#
' (ID: 11240)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.02523168921470642
    2. '
' → logprob: -4.025231838226318
    3. 'import' → logprob: -5.900231838226318
    4. '(
' → logprob: -6.900231838226318
    5. '\' → logprob: -7.275231838226318
    6. 'n' → logprob: -7.650231838226318
    7. ':
' → logprob: -7.775231838226318
    8. '(n' → logprob: -7.900231838226318
    9. '```' → logprob: -8.40023136138916
    10. '

' → logprob: -8.77523136138916

Token 1060: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.011511418968439102
    2. '
' → logprob: -5.636511325836182
    3. 'import' → logprob: -5.636511325836182
    4. 'n' → logprob: -6.636511325836182
    5. '```' → logprob: -6.886511325836182
    6. '\' → logprob: -7.136511325836182
    7. '\n' → logprob: -7.886511325836182
    8. 'k' → logprob: -8.76151180267334
    9. '(n' → logprob: -8.88651180267334
    10. 'class' → logprob: -9.13651180267334

Token 1061: ' Impl' (ID: 144563)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0005817461642436683
    2. 'n' → logprob: -7.875581741333008
    3. 'import' → logprob: -9.125581741333008
    4. 'class' → logprob: -10.750581741333008
    5. '
' → logprob: -11.125581741333008
    6. 'from' → logprob: -11.375581741333008
    7. '```' → logprob: -11.625581741333008
    8. '#' → logprob: -12.000581741333008
    9. 't' → logprob: -12.000581741333008
    10. ' def' → logprob: -12.000581741333008

Token 1062: 'ément' (ID: 17645)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2470034509897232
    2. 'mentation' → logprob: -1.622003436088562
    3. 'ement' → logprob: -5.247003555297852
    4. 'entation' → logprob: -5.372003555297852
    5. 'ément' → logprob: -5.997003555297852
    6. 'ented' → logprob: -6.247003555297852
    7. 'ment' → logprob: -6.372003555297852
    8. 'import' → logprob: -6.872003555297852
    9. 'mented' → logprob: -6.872003555297852
    10. '```' → logprob: -6.997003555297852

Token 1063: 'ation' (ID: 387)
  Prédit: 'ment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ment' → logprob: -0.7236281037330627
    2. 'def' → logprob: -0.7236281037330627
    3. 'ent' → logprob: -4.223628044128418
    4. 'mentation' → logprob: -4.598628044128418
    5. 'entation' → logprob: -6.098628044128418
    6. 'ented' → logprob: -6.973628044128418
    7. 'nt' → logprob: -7.473628044128418
    8. '```' → logprob: -8.223628044128418
    9. ' ment' → logprob: -8.473628044128418
    10. 'mented' → logprob: -8.473628044128418

Token 1064: ' mod' (ID: 1812)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3921704888343811
    2. ':
' → logprob: -1.5171704292297363
    3. ':' → logprob: -2.5171704292297363
    4. '(
' → logprob: -4.267170429229736
    5. '(' → logprob: -6.017170429229736
    6. '
' → logprob: -6.142170429229736
    7. ' def' → logprob: -7.267170429229736
    8. '\' → logprob: -7.517170429229736
    9. '(n' → logprob: -7.517170429229736
    10. '(def' → logprob: -7.642170429229736

Token 1065: 'érée' (ID: 113219)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.33175918459892273
    2. 'if' → logprob: -2.456759214401245
    3. 'ifiée' → logprob: -3.081759214401245
    4. '```' → logprob: -3.081759214401245
    5. 'ifié' → logprob: -3.831759214401245
    6. 'ified' → logprob: -4.331758975982666
    7. '#' → logprob: -4.331758975982666
    8. 'import' → logprob: -4.581758975982666
    9. 'é' → logprob: -4.581758975982666
    10. 'èle' → logprob: -4.581758975982666

Token 1066: ' pour' (ID: 1930)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.14439459145069122
    2. '(
' → logprob: -2.644394636154175
    3. '
' → logprob: -4.269394397735596
    4. ':
' → logprob: -4.394394397735596
    5. 'import' → logprob: -5.019394397735596
    6. '(n' → logprob: -5.269394397735596
    7. '\n' → logprob: -5.394394397735596
    8. '(' → logprob: -5.644394397735596
    9. ':' → logprob: -5.644394397735596
    10. '```' → logprob: -5.769394397735596

Token 1067: ' tenir' (ID: 57709)
  Prédit: ' continuer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continuer' → logprob: -1.1854112148284912
    2. ' main' → logprob: -2.935411214828491
    3. 'main' → logprob: -2.935411214828491
    4. '_' → logprob: -3.060411214828491
    5. 'final' → logprob: -3.060411214828491
    6. 'i' → logprob: -3.060411214828491
    7. 'contin' → logprob: -3.060411214828491
    8. 'def' → logprob: -3.435411214828491
    9. 't' → logprob: -3.435411214828491
    10. 'l' → logprob: -3.560411214828491

Token 1068: ' dans' (ID: 2671)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5995922088623047
    2. 'def' → logprob: -1.9745922088623047
    3. '```' → logprob: -2.4745922088623047
    4. '=' → logprob: -2.7245922088623047
    5. '_' → logprob: -3.9745922088623047
    6. ')' → logprob: -3.9745922088623047
    7. ':
' → logprob: -3.9745922088623047
    8. '`' → logprob: -3.9745922088623047
    9. 'n' → logprob: -5.099592208862305
    10. ' =' → logprob: -5.224592208862305

Token 1069: ' le' (ID: 505)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.612291693687439
    2. '```' → logprob: -1.112291693687439
    3. 'le' → logprob: -2.8622918128967285
    4. 'les' → logprob: -2.9872918128967285
    5. 'une' → logprob: -4.4872918128967285
    6. 'temps' → logprob: -6.2372918128967285
    7. 'def' → logprob: -6.6122918128967285
    8. 'lim' → logprob: -6.7372918128967285
    9. '
' → logprob: -6.8622918128967285
    10. '``' → logprob: -7.1122918128967285

Token 1070: ' temps' (ID: 11160)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0725654810667038
    2. ' range' → logprob: -3.6975655555725098
    3. '```' → logprob: -4.32256555557251
    4. 'def' → logprob: -4.69756555557251
    5. 'limit' → logprob: -5.69756555557251
    6. 'n' → logprob: -5.82256555557251
    7. '\n' → logprob: -6.44756555557251
    8. '
' → logprob: -6.69756555557251
    9. 'sys' → logprob: -7.19756555557251
    10. '``' → logprob: -7.19756555557251

Token 1071: ' et' (ID: 859)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.18996119499206543
    2. '
' → logprob: -2.3149611949920654
    3. ':
' → logprob: -3.6899611949920654
    4. 'import' → logprob: -4.4399614334106445
    5. ':' → logprob: -4.9399614334106445
    6. '(
' → logprob: -5.4399614334106445
    7. '

' → logprob: -5.9399614334106445
    8. ',
' → logprob: -6.0649614334106445
    9. '(n' → logprob: -6.0649614334106445
    10. '\' → logprob: -6.1899614334106445

Token 1072: ' mémoire' (ID: 79071)
  Prédit: 'memory'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'memory' → logprob: -1.2882169485092163
    2. 'perform' → logprob: -1.7882169485092163
    3. '```' → logprob: -2.038217067718506
    4. 'l' → logprob: -2.413217067718506
    5. 'la' → logprob: -2.538217067718506
    6. 'mé' → logprob: -2.788217067718506
    7. 'es' → logprob: -2.913217067718506
    8. 'lim' → logprob: -3.538217067718506
    9. 'com' → logprob: -4.163217067718506
    10. ' mémoire' → logprob: -4.288217067718506

Token 1073: '.


' (ID: 8525)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.01374712772667408
    2. 'n' → logprob: -5.013747215270996
    3. 'import' → logprob: -5.763747215270996
    4. '
' → logprob: -7.013747215270996
    5. 'class' → logprob: -7.013747215270996
    6. 't' → logprob: -7.763747215270996
    7. 'if' → logprob: -7.888747215270996
    8. '(n' → logprob: -8.513747215270996
    9. 's' → logprob: -8.763747215270996
    10. 'from' → logprob: -9.013747215270996

Token 1074: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0019479141337797046
    2. 'n' → logprob: -6.62694787979126
    3. 'import' → logprob: -8.001948356628418
    4. 'class' → logprob: -8.876948356628418
    5. '
' → logprob: -9.501948356628418
    6. 'T' → logprob: -10.751948356628418
    7. 't' → logprob: -11.501948356628418
    8. '\n' → logprob: -11.501948356628418
    9. '\' → logprob: -11.876948356628418
    10. '```' → logprob: -12.001948356628418

Token 1075: ' main' (ID: 2758)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' → logprob: -0.257328599691391
    2. 'main' → logprob: -2.007328510284424
    3. ' solve' → logprob: -3.007328510284424
    4. ' main' → logprob: -3.257328510284424
    5. 'read' → logprob: -6.382328510284424
    6. 'def' → logprob: -6.632328510284424
    7. 'find' → logprob: -8.007328987121582
    8. 'compute' → logprob: -8.382328987121582
    9. 'parse' → logprob: -8.382328987121582
    10. 'min' → logprob: -9.007328987121582

Token 1076: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.005275380332022905
    2. '():
' → logprob: -5.255275249481201
    3. '()' → logprob: -10.75527572631836
    4. '(' → logprob: -11.50527572631836
    5. ' ():' → logprob: -11.88027572631836
    6. ':' → logprob: -13.88027572631836
    7. '():

' → logprob: -14.50527572631836
    8. '():
' → logprob: -14.75527572631836
    9. 'def' → logprob: -14.75527572631836
    10. '(
' → logprob: -15.00527572631836

Token 1077: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0028408952057361603
    2. '```' → logprob: -6.127840995788574
    3. '    
' → logprob: -8.627840995788574
    4. 'import' → logprob: -9.127840995788574
    5. '	s' → logprob: -9.252840995788574
    6. '	import' → logprob: -9.502840995788574
    7. '	n' → logprob: -10.502840995788574
    8. '	sys' → logprob: -10.752840995788574
    9. '   ' → logprob: -11.252840995788574
    10. ' import' → logprob: -11.252840995788574

Token 1078: ' input' (ID: 3422)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2201371043920517
    2. ' import' → logprob: -2.345137119293213
    3. 'import' → logprob: -2.345137119293213
    4. ' input' → logprob: -5.595137119293213
    5. ' n' → logprob: -7.220137119293213
    6. 'n' → logprob: -7.220137119293213
    7. 'input' (adapté à ' input') → logprob: -7.720137119293213
    8. '	import' → logprob: -8.470136642456055
    9. '	n' → logprob: -10.220136642456055
    10. '	input' → logprob: -11.345136642456055

Token 1079: ' =' (ID: 314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.005716658663004637
    2. '_line' → logprob: -5.880716800689697
    3. '().' → logprob: -7.380716800689697
    4. '_token' → logprob: -7.755716800689697
    5. '_tokens' → logprob: -7.880716800689697
    6. '())' → logprob: -8.255716323852539
    7. ' ()' → logprob: -8.380716323852539
    8. '_data' → logprob: -8.505716323852539
    9. '()
' → logprob: -8.505716323852539
    10. '_' → logprob: -8.755716323852539

Token 1080: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.20164409279823303
    2. ' sys' → logprob: -1.7016440629959106
    3. 'input' → logprob: -8.451643943786621
    4. ' input' → logprob: -11.701643943786621
    5. '	sys' → logprob: -12.201643943786621
    6. '=sys' → logprob: -12.951643943786621
    7. '   ' → logprob: -14.451643943786621
    8. '(sys' → logprob: -14.451643943786621
    9. 'lambda' → logprob: -14.701643943786621
    10. ' ' → logprob: -16.576644897460938

Token 1081: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.28558599948883057
    2. '.' → logprob: -1.4105859994888306
    3. '.readline' → logprob: -5.660585880279541
    4. '.stdout' → logprob: -7.785585880279541
    5. '.std' → logprob: -8.4105863571167
    6. '.argv' → logprob: -9.5355863571167
    7. '.__' → logprob: -9.9105863571167
    8. '.read' → logprob: -10.2855863571167
    9. '().' → logprob: -10.5355863571167
    10. '.next' → logprob: -10.6605863571167

Token 1082: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.000487276294734329
    2. '.' → logprob: -7.750487327575684
    3. '.read' → logprob: -11.125487327575684
    4. '().' → logprob: -11.500487327575684
    5. 'read' → logprob: -11.500487327575684
    6. '
' → logprob: -11.625487327575684
    7. '.readlines' → logprob: -12.500487327575684
    8. ' readline' → logprob: -12.500487327575684
    9. '=' → logprob: -13.625487327575684
    10. ' =' → logprob: -13.750487327575684

Token 1083: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2746275067329407
    2. '()' → logprob: -1.774627447128296
    3. '()
' → logprob: -2.899627447128296
    4. 'tokens' → logprob: -5.774627685546875
    5. '():' → logprob: -5.774627685546875
    6. '
' → logprob: -5.899627685546875
    7. 'def' → logprob: -6.274627685546875
    8. '().' → logprob: -6.649627685546875
    9. 's' → logprob: -7.649627685546875
    10. '():
' → logprob: -7.649627685546875

Token 1084: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04923420026898384
    2. 'n' → logprob: -3.04923415184021
    3. '	n' → logprob: -8.049234390258789
    4. 't' → logprob: -8.674234390258789
    5. 'def' → logprob: -9.424234390258789
    6. ' n' → logprob: -10.049234390258789
    7. '
' → logprob: -11.299234390258789
    8. '```' → logprob: -11.549234390258789
    9. '    
' → logprob: -11.799234390258789
    10. '(n' → logprob: -13.674234390258789

Token 1085: ' #' (ID: 1069)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.1277511715888977
    2. 'T' → logprob: -2.127751111984253
    3. 'n' → logprob: -7.127751350402832
    4. '   ' → logprob: -11.002751350402832
    5. ' t' → logprob: -13.377751350402832
    6. '
' → logprob: -14.377751350402832
    7. ' T' → logprob: -14.502751350402832
    8. 'tn' → logprob: -15.252751350402832
    9. '#' (adapté à ' #') → logprob: -15.377751350402832
    10. 'nt' → logprob: -16.752750396728516

Token 1086: ' Directions' (ID: 85422)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.6335855722427368
    2. 'n' → logprob: -0.8835855722427368
    3. 'T' → logprob: -2.8835854530334473
    4. ' t' → logprob: -10.258585929870605
    5. ' n' → logprob: -11.758585929870605
    6. ' T' → logprob: -11.758585929870605
    7. 'nb' → logprob: -11.758585929870605
    8. '#' → logprob: -11.883585929870605
    9. '   ' → logprob: -11.883585929870605
    10. 'nt' → logprob: -12.383585929870605

Token 1087: ' pour' (ID: 1930)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.012119431979954243
    2. '=' → logprob: -5.012119293212891
    3. 's' → logprob: -5.512119293212891
    4. 'dire' → logprob: -7.762119293212891
    5. ':' → logprob: -8.26211929321289
    6. '   ' → logprob: -8.76211929321289
    7. 'D' → logprob: -8.76211929321289
    8. '4' → logprob: -9.76211929321289
    9. 'd' → logprob: -10.13711929321289
    10. '=[
' → logprob: -10.26211929321289

Token 1088: ' voisin' (ID: 145411)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[(' → logprob: -1.0747365951538086
    2. '[
' → logprob: -1.8247365951538086
    3. 'dire' → logprob: -1.9497365951538086
    4. '[' → logprob: -2.4497365951538086
    5. 'adj' → logprob: -2.9497365951538086
    6. 'neighbors' → logprob: -2.9497365951538086
    7. 'dx' → logprob: -3.0747365951538086
    8. '((' → logprob: -4.199736595153809
    9. '(' → logprob: -4.199736595153809
    10. ' dx' → logprob: -4.449736595153809

Token 1089: 'age' (ID: 477)
  Prédit: 'ages'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ages' → logprob: -0.6164560914039612
    2. 'age' → logprob: -0.9914560914039612
    3. 's' → logprob: -2.8664560317993164
    4. 'es' → logprob: -3.6164560317993164
    5. 'hood' → logprob: -5.366456031799316
    6. 'sage' → logprob: -8.741456031799316
    7. '=' → logprob: -9.241456031799316
    8. 'e' → logprob: -9.366456031799316
    9. 'h' → logprob: -9.866456031799316
    10. '   ' → logprob: -10.366456031799316

Token 1090: ' adj' (ID: 20251)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.039376404136419296
    2. 'dire' → logprob: -4.039376258850098
    3. 'dirs' → logprob: -5.414376258850098
    4. '=' → logprob: -5.414376258850098
    5. 's' → logprob: -5.539376258850098
    6. 'dx' → logprob: -6.414376258850098
    7. '   ' → logprob: -6.539376258850098
    8. ' directions' → logprob: -7.164376258850098
    9. 'd' → logprob: -7.164376258850098
    10. '[
' → logprob: -7.289376258850098

Token 1091: 'ac' (ID: 359)
  Prédit: 'acent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acent' → logprob: -0.27101463079452515
    2. 'ac' → logprob: -2.27101469039917
    3. ' =' → logprob: -2.89601469039917
    4. 'acency' → logprob: -3.02101469039917
    5. '=' → logprob: -4.14601469039917
    6. '   ' → logprob: -5.02101469039917
    7. '=[' → logprob: -6.89601469039917
    8. '[]' → logprob: -7.02101469039917
    9. 'dx' → logprob: -7.14601469039917
    10. '```' → logprob: -7.27101469039917

Token 1092: 'ents' (ID: 1094)
  Prédit: 'ents'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ents' → logprob: -0.7812720537185669
    2. 'entes' → logprob: -0.7812720537185669
    3. 'ent' → logprob: -2.5312719345092773
    4. 'ente' → logprob: -6.031271934509277
    5. 'es' → logprob: -7.156271934509277
    6. '   ' → logprob: -7.906271934509277
    7. '```' → logprob: -8.156271934509277
    8. 'nt' → logprob: -8.906271934509277
    9. '#' → logprob: -9.031271934509277
    10. 'def' → logprob: -9.281271934509277

Token 1093: ' (' (ID: 350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10117504000663757
    2. 'dire' → logprob: -2.85117506980896
    3. 'D' → logprob: -4.726174831390381
    4. 'dirs' → logprob: -5.226174831390381
    5. ' directions' → logprob: -5.601174831390381
    6. 's' → logprob: -5.726174831390381
    7. '=' → logprob: -5.976174831390381
    8. 'dx' → logprob: -6.226174831390381
    9. 'DIR' → logprob: -6.476174831390381
    10. ':' → logprob: -6.726174831390381

Token 1094: 'faces' (ID: 11952)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.09168785810470581
    2. '[
' → logprob: -2.8416879177093506
    3. '(' → logprob: -3.8416879177093506
    4. '[' → logprob: -4.9666876792907715
    5. '6' → logprob: -8.84168815612793
    6. '(-' → logprob: -8.96668815612793
    7. '1' → logprob: -8.96668815612793
    8. ' [(' → logprob: -8.96668815612793
    9. 'dx' → logprob: -9.59168815612793
    10. '   ' → logprob: -9.71668815612793

Token 1095: ' communes' (ID: 93157)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5669155120849609
    2. '=' → logprob: -1.316915512084961
    3. ')' → logprob: -2.191915512084961
    4. ':' → logprob: -3.941915512084961
    5. ')
' → logprob: -4.566915512084961
    6. '6' → logprob: -4.941915512084961
    7. '   ' → logprob: -5.066915512084961
    8. '):' → logprob: -6.191915512084961
    9. ' ' → logprob: -6.316915512084961
    10. '):
' → logprob: -6.691915512084961

Token 1096: ')
' (ID: 446)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5060753226280212
    2. '=' → logprob: -1.506075382232666
    3. ')' → logprob: -2.256075382232666
    4. ')
' → logprob: -3.631075382232666
    5. ':' → logprob: -4.131075382232666
    6. '   ' → logprob: -4.131075382232666
    7. '):
' → logprob: -5.881075382232666
    8. 's' → logprob: -6.006075382232666
    9. '):' → logprob: -6.506075382232666
    10. ':
' → logprob: -7.131075382232666

Token 1097: '   ' (ID: 271)
  Prédit: 'dirs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dirs' → logprob: -0.7165058255195618
    2. 'dire' → logprob: -1.466505765914917
    3. 'DIR' → logprob: -1.841505765914917
    4. 'D' → logprob: -2.466505765914917
    5. '   ' → logprob: -3.466505765914917
    6. 'neighbors' → logprob: -5.841506004333496
    7. 'dx' → logprob: -6.591506004333496
    8. 'adj' → logprob: -7.591506004333496
    9. 'd' → logprob: -7.716506004333496
    10. '[
' → logprob: -8.216506004333496

Token 1098: ' directions' (ID: 24921)
  Prédit: 'dirs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dirs' → logprob: -0.2851453721523285
    2. 'dire' → logprob: -1.5351454019546509
    3. 'DIR' → logprob: -4.035145282745361
    4. 'D' → logprob: -4.285145282745361
    5. 'neighbors' → logprob: -7.285145282745361
    6. 'dx' → logprob: -8.03514575958252
    7. 'd' → logprob: -9.66014575958252
    8. ' directions' → logprob: -10.16014575958252
    9. 'adj' → logprob: -10.28514575958252
    10. 'dir' → logprob: -10.53514575958252

Token 1099: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1602301150560379
    2. '=' → logprob: -1.9102301597595215
    3. '   ' → logprob: -13.410229682922363
    4. '=[' → logprob: -13.535229682922363
    5. ' ' → logprob: -13.785229682922363
    6. '=[
' → logprob: -14.035229682922363
    7. ' =[' → logprob: -14.535229682922363
    8. ' =
' → logprob: -15.410229682922363
    9. '=
' → logprob: -15.535229682922363
    10. ':' → logprob: -15.535229682922363

Token 1100: ' [(' (ID: 43900)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.39166340231895447
    2. '[
' → logprob: -1.1416634321212769
    3. '[' → logprob: -5.391663551330566
    4. ' [(' → logprob: -8.641663551330566
    5. ' [
' → logprob: -10.141663551330566
    6. '[[' → logprob: -11.891663551330566
    7. ' [' → logprob: -12.891663551330566
    8. '[((' → logprob: -13.891663551330566
    9. '[\' → logprob: -15.516663551330566
    10. '["' → logprob: -18.76666259765625

Token 1101: 's' (ID: 82)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.5027299822540954e-05
    2. ' ' → logprob: -9.875055313110352
    3. '0' → logprob: -12.625055313110352
    4. '-' → logprob: -15.750055313110352
    5. '(' → logprob: -17.00005531311035
    6. 's' → logprob: -18.25005531311035
    7. '   ' → logprob: -18.25005531311035
    8. '  ' → logprob: -19.87505531311035
    9. '
' → logprob: -20.25005531311035
    10. ' -' → logprob: -20.37505531311035

Token 1102: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07224803417921066
    2. '0' → logprob: -3.5722479820251465
    3. '=' → logprob: -3.6972479820251465
    4. '1' → logprob: -4.6972479820251465
    5. ' ,' → logprob: -5.4472479820251465
    6. '[' → logprob: -7.0722479820251465
    7. '   ' → logprob: -7.3222479820251465
    8. ' ' → logprob: -7.9472479820251465
    9. ',
' → logprob: -8.072248458862305
    10. '(' → logprob: -8.072248458862305

Token 1103: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.157039049663581e-05
    2. ' ' → logprob: -9.875051498413086
    3. '1' → logprob: -17.500051498413086
    4. '   ' → logprob: -17.625051498413086
    5. '  ' → logprob: -17.875051498413086
    6. '
' → logprob: -18.000051498413086
    7. ')' → logprob: -18.750051498413086
    8. '-' → logprob: -19.250051498413086
    9. '```' → logprob: -19.250051498413086
    10. ' ' → logprob: -19.750051498413086

Token 1104: ',' (ID: 11)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.6264474391937256
    2. ',' → logprob: -0.8764474391937256
    3. '),(' → logprob: -3.1264474391937256
    4. '0' → logprob: -5.501447677612305
    5. '),
' → logprob: -7.001447677612305
    6. ')' → logprob: -8.626447677612305
    7. ' ),' → logprob: -9.626447677612305
    8. ' ,' → logprob: -9.751447677612305
    9. ',),' → logprob: -10.001447677612305
    10. '
' → logprob: -11.251447677612305

Token 1105: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.750003814697266
    3. 's' → logprob: -14.750003814697266
    4. '-' → logprob: -17.750003814697266
    5. '
' → logprob: -18.000003814697266
    6. '-s' → logprob: -18.000003814697266
    7. '   ' → logprob: -18.875003814697266
    8. '  ' → logprob: -19.125003814697266
    9. '```' → logprob: -20.000003814697266
    10. '1' → logprob: -20.125003814697266

Token 1106: ')' (ID: 8)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.17004302144050598
    2. '),
' → logprob: -2.2950429916381836
    3. '),(' → logprob: -2.9200429916381836
    4. ')' → logprob: -7.170042991638184
    5. ',' → logprob: -7.420042991638184
    6. ' ),' → logprob: -9.295042991638184
    7. ',),' → logprob: -9.420042991638184
    8. '   ' → logprob: -10.170042991638184
    9. ',),
' → logprob: -10.545042991638184
    10. ' ),
' → logprob: -10.670042991638184

Token 1107: ' for' (ID: 395)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05812429264187813
    2. '),' → logprob: -3.683124303817749
    3. ',
' → logprob: -4.30812406539917
    4. ')' → logprob: -4.93312406539917
    5. ' ,' → logprob: -5.30812406539917
    6. '),(' → logprob: -5.68312406539917
    7. '   ' → logprob: -7.30812406539917
    8. '),
' → logprob: -8.058124542236328
    9. ',(' → logprob: -8.308124542236328
    10. ',),' → logprob: -8.433124542236328

Token 1108: ' s' (ID: 265)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.7320446372032166
    2. '_' → logprob: -1.4820446968078613
    3. 's' → logprob: -2.1070446968078613
    4. '_i' → logprob: -2.7320446968078613
    5. 'i' → logprob: -2.8570446968078613
    6. ' s' → logprob: -3.9820446968078613
    7. ' _' → logprob: -4.107044696807861
    8. ' i' → logprob: -5.107044696807861
    9. '0' → logprob: -5.732044696807861
    10. ' ' → logprob: -6.732044696807861

Token 1109: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.32049331068992615
    2. ' in' → logprob: -1.3204933404922485
    3. '1' → logprob: -5.320493221282959
    4. 's' → logprob: -6.945493221282959
    5. ' s' → logprob: -7.320493221282959
    6. '0' → logprob: -8.695493698120117
    7. ',' → logprob: -8.820493698120117
    8. ')' → logprob: -8.945493698120117
    9. ' ' → logprob: -9.945493698120117
    10. 'for' → logprob: -10.570493698120117

Token 1110: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7365212440490723
    2. '[-' → logprob: -1.3615212440490723
    3. 'range' → logprob: -1.6115212440490723
    4. '1' → logprob: -3.1115212440490723
    5. '(' → logprob: -4.361521244049072
    6. ' range' → logprob: -5.361521244049072
    7. '(-' → logprob: -5.986521244049072
    8. ' [' → logprob: -8.486520767211914
    9. '-' → logprob: -8.736520767211914
    10. 's' → logprob: -9.111520767211914

Token 1111: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.008763829246163368
    2. '-' → logprob: -4.758763790130615
    3. ' ' → logprob: -8.883764266967773
    4. ' -' → logprob: -12.633764266967773
    5. '0' → logprob: -12.758764266967773
    6. '(' → logprob: -13.508764266967773
    7. '(-' → logprob: -14.258764266967773
    8. '   ' → logprob: -14.383764266967773
    9. 's' → logprob: -14.508764266967773
    10. '+' → logprob: -14.758764266967773

Token 1112: ']]' (ID: 8928)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.41877466440200806
    2. ']]' → logprob: -1.2937746047973633
    3. ',' → logprob: -3.4187746047973633
    4. ']+' → logprob: -3.7937746047973633
    5. '],' → logprob: -5.168774604797363
    6. ')]' → logprob: -5.543774604797363
    7. ']],' → logprob: -6.543774604797363
    8. '],[' → logprob: -8.168774604797363
    9. ' ]' → logprob: -8.668774604797363
    10. '])+' → logprob: -8.668774604797363

Token 1113: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.1235461235046387
    2. ',' → logprob: -1.2485461235046387
    3. ']' → logprob: -1.2485461235046387
    4. ' +' → logprob: -3.1235461235046387
    5. ']+' → logprob: -3.7485461235046387
    6. '[' → logprob: -4.373546123504639
    7. '+[' → logprob: -5.123546123504639
    8. ',
' → logprob: -5.623546123504639
    9. '[(' → logprob: -5.748546123504639
    10. ')+' → logprob: -6.498546123504639

Token 1114: ' [(' (ID: 43900)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.0026823030784726143
    2. '[' → logprob: -6.002682209014893
    3. ' [(' → logprob: -8.62768268585205
    4. '[
' → logprob: -11.00268268585205
    5. '[((' → logprob: -12.00268268585205
    6. ' [' → logprob: -12.50268268585205
    7. '   ' → logprob: -14.50268268585205
    8. ' ' → logprob: -15.75268268585205
    9. '  ' → logprob: -16.752681732177734
    10. '      ' → logprob: -16.877681732177734

Token 1115: '0' (ID: 15)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6577562093734741
    2. '0' → logprob: -0.7827562093734741
    3. '(-' → logprob: -4.157756328582764
    4. '-' → logprob: -5.282756328582764
    5. '1' → logprob: -6.157756328582764
    6. ' (' → logprob: -7.032756328582764
    7. ' ' → logprob: -7.782756328582764
    8. '(s' → logprob: -8.407755851745605
    9. 's' → logprob: -8.407755851745605
    10. '   ' → logprob: -9.532755851745605

Token 1116: ',s' (ID: 20379)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005126546137034893
    2. ',s' → logprob: -5.380126476287842
    3. '1' → logprob: -8.130126953125
    4. ',-' → logprob: -8.755126953125
    5. 's' → logprob: -10.255126953125
    6. '0' → logprob: -12.005126953125
    7. ',
' → logprob: -12.380126953125
    8. ' ,' → logprob: -12.755126953125
    9. '
' → logprob: -13.380126953125
    10. ',(' → logprob: -14.880126953125

Token 1117: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00041327282087877393
    2. ',-' → logprob: -8.125412940979004
    3. 'for' → logprob: -9.875412940979004
    4. '1' → logprob: -10.000412940979004
    5. ' ,' → logprob: -11.625412940979004
    6. ' for' → logprob: -12.625412940979004
    7. ')' → logprob: -12.750412940979004
    8. '-' → logprob: -13.750412940979004
    9. 's' → logprob: -14.125412940979004
    10. ',s' → logprob: -14.250412940979004

Token 1118: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.007232470437884331
    2. '0' → logprob: -5.007232666015625
    3. '-' → logprob: -7.632232666015625
    4. '[' → logprob: -10.882232666015625
    5. ' ' → logprob: -12.007232666015625
    6. 's' → logprob: -13.007232666015625
    7. 'for' → logprob: -13.757232666015625
    8. '+' → logprob: -14.007232666015625
    9. '
' → logprob: -14.132232666015625
    10. '(' → logprob: -14.507232666015625

Token 1119: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3029019832611084
    2. 'for' → logprob: -1.4279019832611084
    3. ' for' → logprob: -4.4279022216796875
    4. ',' → logprob: -4.8029022216796875
    5. ',s' → logprob: -6.9279022216796875
    6. 's' → logprob: -8.927902221679688
    7. '[' → logprob: -10.052902221679688
    8. '(s' → logprob: -10.177902221679688
    9. ' )' → logprob: -10.427902221679688
    10. '   ' → logprob: -10.802902221679688

Token 1120: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2032867670059204
    2. ' for' → logprob: -1.7032867670059204
    3. ',' → logprob: -6.328286647796631
    4. '   ' → logprob: -10.453287124633789
    5. ')' → logprob: -10.828287124633789
    6. '	for' → logprob: -11.703287124633789
    7. ']' → logprob: -11.953287124633789
    8. ' ,' → logprob: -12.578287124633789
    9. ',(' → logprob: -12.828287124633789
    10. '[' → logprob: -12.953287124633789

Token 1121: ' s' (ID: 265)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1029149666428566
    2. 's' → logprob: -2.352915048599243
    3. ' [' → logprob: -6.227914810180664
    4. ' s' → logprob: -7.852914810180664
    5. '[-' → logprob: -8.102914810180664
    6. '1' → logprob: -11.227914810180664
    7. '[s' → logprob: -11.352914810180664
    8. '(' → logprob: -12.352914810180664
    9. '[
' → logprob: -12.602914810180664
    10. '{' → logprob: -13.352914810180664

Token 1122: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.01422109454870224
    2. ' in' → logprob: -4.26422119140625
    3. 's' → logprob: -10.26422119140625
    4. '[-' → logprob: -12.26422119140625
    5. '```' → logprob: -12.63922119140625
    6. ' ' → logprob: -12.76422119140625
    7. '
' → logprob: -12.88922119140625
    8. '[' → logprob: -13.13922119140625
    9. 'for' → logprob: -13.13922119140625
    10. '   ' → logprob: -13.38922119140625

Token 1123: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.000568402698263526
    2. '[-' → logprob: -7.500568389892578
    3. ' [' → logprob: -11.500568389892578
    4. '1' → logprob: -12.875568389892578
    5. '(' → logprob: -13.000568389892578
    6. '[
' → logprob: -15.750568389892578
    7. '   ' → logprob: -16.875568389892578
    8. '{' → logprob: -17.250568389892578
    9. '[[' → logprob: -17.500568389892578
    10. '
' → logprob: -17.625568389892578

Token 1124: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00026181264547631145
    2. '-' → logprob: -8.250262260437012
    3. ' ' → logprob: -14.625262260437012
    4. '
' → logprob: -16.000261306762695
    5. ' -' → logprob: -17.125261306762695
    6. '   ' → logprob: -17.375261306762695
    7. '+' → logprob: -17.625261306762695
    8. '0' → logprob: -18.000261306762695
    9. '[' → logprob: -18.000261306762695
    10. '[-' → logprob: -18.500261306762695

Token 1125: ']]' (ID: 8928)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.003288701642304659
    2. ']+' → logprob: -5.878288745880127
    3. ',' → logprob: -7.878288745880127
    4. ',(' → logprob: -9.378288269042969
    5. ' ]' → logprob: -12.003288269042969
    6. ')]' → logprob: -12.128288269042969
    7. ']]' → logprob: -12.878288269042969
    8. '(' → logprob: -13.378288269042969
    9. '],' → logprob: -13.753288269042969
    10. '()]' → logprob: -13.753288269042969

Token 1126: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.47627997398376465
    2. ' +' → logprob: -0.9762799739837646
    3. '[(' → logprob: -6.726280212402344
    4. '+[' → logprob: -7.601280212402344
    5. '+(' → logprob: -8.476280212402344
    6. '   ' → logprob: -8.851280212402344
    7. ']+' → logprob: -10.351280212402344
    8. ']' → logprob: -10.851280212402344
    9. ',' → logprob: -11.101280212402344
    10. ' [(' → logprob: -11.226280212402344

Token 1127: ' [(' (ID: 43900)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -1.0683535037969705e-05
    2. '[' → logprob: -11.50001049041748
    3. ' [(' → logprob: -14.62501049041748
    4. '(' → logprob: -17.375011444091797
    5. '[
' → logprob: -18.125011444091797
    6. '[-' → logprob: -20.250011444091797
    7. '   ' → logprob: -20.500011444091797
    8. '[((' → logprob: -21.125011444091797
    9. '([(' → logprob: -21.250011444091797
    10. ' ' → logprob: -22.125011444091797

Token 1128: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0011730826226994395
    2. '(' → logprob: -6.75117301940918
    3. ' ' → logprob: -13.62617301940918
    4. '1' → logprob: -14.12617301940918
    5. ' (' → logprob: -14.25117301940918
    6. '   ' → logprob: -15.75117301940918
    7. '-' → logprob: -15.87617301940918
    8. '(-' → logprob: -17.25117301940918
    9. '
' → logprob: -17.75117301940918
    10. '```' → logprob: -17.87617301940918

Token 1129: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04725118353962898
    2. ',s' → logprob: -3.6722512245178223
    3. 's' → logprob: -4.547251224517822
    4. '0' → logprob: -4.672251224517822
    5. '1' → logprob: -7.172251224517822
    6. ' ,' → logprob: -12.172250747680664
    7. ',-' → logprob: -12.547250747680664
    8. '
' → logprob: -13.422250747680664
    9. ',
' → logprob: -13.422250747680664
    10. ' ' → logprob: -13.547250747680664

Token 1130: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3204447627067566
    2. '1' → logprob: -1.3204448223114014
    3. 's' → logprob: -4.945444583892822
    4. '-' → logprob: -10.44544506072998
    5. ' ' → logprob: -12.07044506072998
    6. '-s' → logprob: -12.69544506072998
    7. '
' → logprob: -13.69544506072998
    8. '```' → logprob: -14.32044506072998
    9. '   ' → logprob: -14.57044506072998
    10. ' s' → logprob: -14.57044506072998

Token 1131: ',s' (ID: 20379)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03254294767975807
    2. '[' → logprob: -3.7825429439544678
    3. ',' → logprob: -5.032543182373047
    4. '1' → logprob: -6.657543182373047
    5. ' for' → logprob: -6.657543182373047
    6. 's' → logprob: -9.782543182373047
    7. '[s' → logprob: -10.782543182373047
    8. ',[' → logprob: -11.032543182373047
    9. '(' → logprob: -11.157543182373047
    10. '[-' → logprob: -11.282543182373047

Token 1132: ')' (ID: 8)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1825711578130722
    2. ')' → logprob: -2.1825711727142334
    3. ' for' → logprob: -2.9325711727142334
    4. ']' → logprob: -7.807570934295654
    5. '[' → logprob: -8.557571411132812
    6. '   ' → logprob: -8.682571411132812
    7. ')]' → logprob: -9.932571411132812
    8. ' ' → logprob: -11.682571411132812
    9. '  ' → logprob: -12.182571411132812
    10. '       ' → logprob: -12.307571411132812

Token 1133: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5760143399238586
    2. 'for' → logprob: -0.8260143399238586
    3. '[' → logprob: -9.701014518737793
    4. ']' → logprob: -12.326014518737793
    5. '   ' → logprob: -12.701014518737793
    6. ' in' → logprob: -12.826014518737793
    7. ')' → logprob: -13.701014518737793
    8. '	for' → logprob: -14.451014518737793
    9. '[-' → logprob: -14.701014518737793
    10. 'in' → logprob: -15.076014518737793

Token 1134: ' s' (ID: 265)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0035791685804724693
    2. 's' → logprob: -5.878579139709473
    3. ' [' → logprob: -7.378579139709473
    4. '1' → logprob: -8.878579139709473
    5. ' s' → logprob: -12.628579139709473
    6. '(' → logprob: -13.003579139709473
    7. '[-' → logprob: -13.378579139709473
    8. '[
' → logprob: -13.878579139709473
    9. '   ' → logprob: -14.378579139709473
    10. '[s' → logprob: -14.753579139709473

Token 1135: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.9001060128211975
    2. '[' → logprob: -1.0251059532165527
    3. ' in' → logprob: -1.5251059532165527
    4. ' [' → logprob: -4.150105953216553
    5. '[-' → logprob: -7.525105953216553
    6. '1' → logprob: -8.525106430053711
    7. '(' → logprob: -8.650106430053711
    8. 'for' → logprob: -8.775106430053711
    9. 's' → logprob: -9.275106430053711
    10. '   ' → logprob: -10.150106430053711

Token 1136: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.800739018013701e-05
    2. ' [' → logprob: -9.8750581741333
    3. '[-' → logprob: -12.1250581741333
    4. '1' → logprob: -13.7500581741333
    5. '[
' → logprob: -17.000057220458984
    6. '(' → logprob: -18.250057220458984
    7. '{' → logprob: -18.375057220458984
    8. '   ' → logprob: -18.500057220458984
    9. ' ' → logprob: -19.000057220458984
    10. '
' → logprob: -19.625057220458984

Token 1137: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.375000953674316
    3. '-' → logprob: -15.250000953674316
    4. '   ' → logprob: -18.0
    5. ']' → logprob: -19.0
    6. '
' → logprob: -19.375
    7. '  ' → logprob: -19.625
    8. '+' → logprob: -20.375
    9. '[' → logprob: -20.625
    10. '(' → logprob: -20.75

Token 1138: ']]
' (ID: 29446)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.16363558173179626
    2. ')]' → logprob: -2.538635492324829
    3. ']]' → logprob: -2.663635492324829
    4. '])]' → logprob: -7.163635730743408
    5. ',' → logprob: -7.663635730743408
    6. ']]]' → logprob: -8.41363525390625
    7. ']]
' → logprob: -8.91363525390625
    8. ']+' → logprob: -9.16363525390625
    9. '],' → logprob: -9.16363525390625
    10. '])' → logprob: -9.41363525390625

Token 1139: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06224439665675163
    2. 'for' → logprob: -3.937244415283203
    3. '
' → logprob: -4.562244415283203
    4. '```' → logprob: -4.937244415283203
    5. ',' → logprob: -5.062244415283203
    6. ' for' → logprob: -5.812244415283203
    7. '#' → logprob: -5.812244415283203
    8. ')' → logprob: -6.187244415283203
    9. '[' → logprob: -6.687244415283203
    10. '    
' → logprob: -6.937244415283203

Token 1140: ' #' (ID: 1069)
  Prédit: 'dire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dire' → logprob: -0.543988823890686
    2. '   ' → logprob: -1.918988823890686
    3. 'def' → logprob: -1.918988823890686
    4. '#' (adapté à ' #') → logprob: -3.0439887046813965
    5. 'for' → logprob: -3.6689887046813965
    6. 'n' → logprob: -4.6689887046813965
    7. 'positions' → logprob: -4.6689887046813965
    8. 's' → logprob: -5.1689887046813965
    9. '=' → logprob: -5.2939887046813965
    10. '(' → logprob: -5.6689887046813965

Token 1141: ' Mais' (ID: 13880)
  Prédit: 'dire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dire' → logprob: -0.0351494662463665
    2. '#' → logprob: -3.785149574279785
    3. 'def' → logprob: -5.535149574279785
    4. ' directions' → logprob: -6.410149574279785
    5. 's' → logprob: -6.660149574279785
    6. '[]' → logprob: -7.035149574279785
    7. '[' → logprob: -7.285149574279785
    8. 'for' → logprob: -7.535149574279785
    9. 'positions' → logprob: -7.660149574279785
    10. '   ' → logprob: -7.910149574279785

Token 1142: ' le' (ID: 505)
  Prédit: 'dire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dire' → logprob: -0.042337462306022644
    2. '#' → logprob: -4.292337417602539
    3. '[
' → logprob: -4.917337417602539
    4. '[' → logprob: -4.917337417602539
    5. '[]' → logprob: -5.417337417602539
    6. 's' → logprob: -5.917337417602539
    7. '[]
' → logprob: -6.042337417602539
    8. ' directions' → logprob: -7.292337417602539
    9. '[(' → logprob: -7.542337417602539
    10. 'def' → logprob: -7.792337417602539

Token 1143: ' pas' (ID: 2173)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3944071829319
    2. '#' → logprob: -1.7694071531295776
    3. 'dire' → logprob: -2.519407272338867
    4. ' directions' → logprob: -3.394407272338867
    5. ' s' → logprob: -4.394407272338867
    6. 'len' → logprob: -4.519407272338867
    7. '=' → logprob: -6.144407272338867
    8. 'True' → logprob: -6.394407272338867
    9. ' =' → logprob: -6.519407272338867
    10. '
' → logprob: -6.769407272338867

Token 1144: ' est' (ID: 893)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011419965885579586
    2. ' =' → logprob: -4.761419773101807
    3. ' n' → logprob: -7.136419773101807
    4. 's' → logprob: -7.386419773101807
    5. '=
' → logprob: -7.511419773101807
    6. 'n' → logprob: -8.011420249938965
    7. ' s' → logprob: -9.011420249938965
    8. ' est' → logprob: -9.261420249938965
    9. '#' → logprob: -9.386420249938965
    10. 'dire' → logprob: -10.136420249938965

Token 1145: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.5855889320373535
    2. 's' → logprob: -0.8355889320373535
    3. '1' → logprob: -5.3355889320373535
    4. ' (' → logprob: -6.0855889320373535
    5. '(' → logprob: -6.8355889320373535
    6. ' ' → logprob: -7.3355889320373535
    7. '(s' → logprob: -7.4605889320373535
    8. '[' → logprob: -10.210588455200195
    9. '   ' → logprob: -10.710588455200195
    10. '`s' → logprob: -11.210588455200195

Token 1146: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12618938088417053
    2. '=' → logprob: -2.3761894702911377
    3. 's' → logprob: -5.126189231872559
    4. ',' → logprob: -5.126189231872559
    5. 'def' → logprob: -5.251189231872559
    6. '#' → logprob: -6.126189231872559
    7. '   ' → logprob: -6.501189231872559
    8. '
' → logprob: -7.251189231872559
    9. '=s' → logprob: -7.626189231872559
    10. ')' → logprob: -7.751189231872559

Token 1147: ' on' (ID: 402)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.9190479516983032
    2. ' s' → logprob: -1.5440479516983032
    3. 's' → logprob: -1.6690479516983032
    4. 'not' → logprob: -2.4190478324890137
    5. '#' → logprob: -3.4190478324890137
    6. '   ' → logprob: -4.044047832489014
    7. '[' → logprob: -4.544047832489014
    8. ' pas' → logprob: -4.544047832489014
    9. ' donc' → logprob: -5.294047832489014
    10. ' ' → logprob: -5.419047832489014

Token 1148: ' prendra' (ID: 199464)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.37935787439346313
    2. ' =' → logprob: -1.2543578147888184
    3. '.append' → logprob: -4.129357814788818
    4. 's' → logprob: -5.379357814788818
    5. '[' → logprob: -6.629357814788818
    6. ' s' → logprob: -6.629357814788818
    7. '#' → logprob: -6.629357814788818
    8. '=
' → logprob: -7.004357814788818
    9. '+=' → logprob: -7.379357814788818
    10. '.extend' → logprob: -7.379357814788818

Token 1149: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.35205140709877014
    2. ' [' → logprob: -2.2270514965057373
    3. 's' → logprob: -3.1020514965057373
    4. '[' → logprob: -3.6020514965057373
    5. '[s' → logprob: -3.7270514965057373
    6. '[(' → logprob: -3.8520514965057373
    7. ' [(' → logprob: -3.8520514965057373
    8. ' range' → logprob: -3.9770514965057373
    9. 'range' → logprob: -4.727051258087158
    10. ' la' → logprob: -5.352051258087158

Token 1150: ' variable' (ID: 11076)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.18362373113632202
    2. ' =' → logprob: -1.9336237907409668
    3. '=[]' → logprob: -5.433623790740967
    4. '=[' → logprob: -5.808623790740967
    5. '[' → logprob: -5.933623790740967
    6. 's' → logprob: -6.183623790740967
    7. '   ' → logprob: -6.433623790740967
    8. ',' → logprob: -6.683623790740967
    9. '=s' → logprob: -6.933623790740967
    10. '=
' → logprob: -7.058623790740967

Token 1151: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.2828011512756348
    2. ' =' → logprob: -1.5328011512756348
    3. 's' → logprob: -1.7828011512756348
    4. 'def' → logprob: -2.0328011512756348
    5. '=' → logprob: -2.7828011512756348
    6. '#' → logprob: -3.2828011512756348
    7. 'import' → logprob: -3.5328011512756348
    8. ',' → logprob: -4.657801151275635
    9. '<|end|>' → logprob: -4.907801151275635
    10. '(s' → logprob: -5.032801151275635

Token 1152: ' donc' (ID: 14206)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4168280363082886
    2. ' s' → logprob: -1.6668280363082886
    3. '   ' → logprob: -3.291828155517578
    4. 'def' → logprob: -3.291828155517578
    5. '#' → logprob: -3.541828155517578
    6. '    
' → logprob: -4.666828155517578
    7. '
' → logprob: -4.791828155517578
    8. ' 
' → logprob: -4.916828155517578
    9. 'import' → logprob: -5.916828155517578
    10. '```' → logprob: -6.166828155517578

Token 1153: ' on' (ID: 402)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7861700654029846
    2. '#' → logprob: -1.9111700057983398
    3. 's' → logprob: -2.16117000579834
    4. '[]' → logprob: -2.41117000579834
    5. 'dire' → logprob: -2.91117000579834
    6. ' s' → logprob: -3.03617000579834
    7. ' directions' → logprob: -3.91117000579834
    8. '[' → logprob: -4.16117000579834
    9. '   ' → logprob: -4.53617000579834
    10. '[]
' → logprob: -5.16117000579834

Token 1154: ' fera' (ID: 69827)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05350813269615173
    2. ' =' → logprob: -3.1785080432891846
    3. '=
' → logprob: -5.678508281707764
    4. '.append' → logprob: -6.303508281707764
    5. '#' → logprob: -6.428508281707764
    6. '+=' → logprob: -6.678508281707764
    7. 's' → logprob: -6.928508281707764
    8. '.extend' → logprob: -8.053507804870605
    9. '=[]' → logprob: -8.928507804870605
    10. ' s' → logprob: -9.053507804870605

Token 1155: ' plus' (ID: 2932)
  Prédit: 'dire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dire' → logprob: -0.6382369995117188
    2. '[(' → logprob: -1.8882369995117188
    3. ' directions' → logprob: -2.0132369995117188
    4. ' [(' → logprob: -3.3882369995117188
    5. '[]' → logprob: -3.5132369995117188
    6. 'def' → logprob: -3.8882369995117188
    7. 'lambda' → logprob: -4.013236999511719
    8. 's' → logprob: -4.013236999511719
    9. ' lambda' → logprob: -4.263236999511719
    10. '[s' → logprob: -4.388236999511719

Token 1156: ' tard' (ID: 30225)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12423881143331528
    2. '+=' → logprob: -2.6242387294769287
    3. 's' → logprob: -4.374238967895508
    4. '=
' → logprob: -5.124238967895508
    5. 'dire' → logprob: -5.499238967895508
    6. '[]' → logprob: -5.749238967895508
    7. '=[]' → logprob: -5.874238967895508
    8. '+' → logprob: -5.999238967895508
    9. '+
' → logprob: -6.124238967895508
    10. '[' → logprob: -6.249238967895508

Token 1157: '

' (ID: 279)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5393012762069702
    2. 'def' → logprob: -1.9143012762069702
    3. 'dire' → logprob: -2.1643013954162598
    4. '#' → logprob: -2.6643013954162598
    5. ' =' → logprob: -3.6643013954162598
    6. '=' → logprob: -3.7893013954162598
    7. '(s' → logprob: -4.41430139541626
    8. ' directions' → logprob: -5.16430139541626
    9. '```' → logprob: -6.16430139541626
    10. '(' → logprob: -6.53930139541626

Token 1158: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4096699655056
    2. 'def' → logprob: -1.5346699953079224
    3. '
' → logprob: -2.659669876098633
    4. 's' → logprob: -3.909669876098633
    5. '    
' → logprob: -4.534669876098633
    6. 'import' → logprob: -4.784669876098633
    7. 'n' → logprob: -5.409669876098633
    8. '#' → logprob: -5.784669876098633
    9. '```' → logprob: -6.659669876098633
    10. 'k' → logprob: -7.659669876098633

Token 1159: ' while' (ID: 2049)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5048360824584961
    2. 'def' → logprob: -1.129836082458496
    3. 'n' → logprob: -3.254836082458496
    4. '   ' → logprob: -4.379836082458496
    5. '#' → logprob: -4.629836082458496
    6. 'import' → logprob: -4.879836082458496
    7. '    
' → logprob: -6.754836082458496
    8. '```' → logprob: -7.254836082458496
    9. 'line' → logprob: -7.879836082458496
    10. 'input' → logprob: -8.004836082458496

Token 1160: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.07228983938694
    2. 'True' → logprob: -2.6972899436950684
    3. '(True' → logprob: -6.947289943695068
    4. ' ' → logprob: -7.947289943695068
    5. ' line' → logprob: -8.69728946685791
    6. ' (' → logprob: -8.82228946685791
    7. 'tokens' → logprob: -9.19728946685791
    8. ' not' → logprob: -9.44728946685791
    9. ' len' → logprob: -9.57228946685791
    10. '   ' → logprob: -9.57228946685791

Token 1161: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0323572158813477
    2. '():
' → logprob: -1.0323572158813477
    3. ':
' → logprob: -1.7823572158813477
    4. '():' → logprob: -2.9073572158813477
    5. '   ' → logprob: -3.7823572158813477
    6. '       ' → logprob: -3.9073572158813477
    7. '(line' → logprob: -5.407357215881348
    8. ' line' → logprob: -6.157357215881348
    9. ' :' → logprob: -6.157357215881348
    10. '<|end|>' → logprob: -6.282357215881348

Token 1162: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006576461251825094
    2. 'line' → logprob: -5.3815765380859375
    3. ' line' → logprob: -6.3815765380859375
    4. '    
' → logprob: -9.006576538085938
    5. '       ' → logprob: -9.256576538085938
    6. 'try' → logprob: -10.881576538085938
    7. '	line' → logprob: -11.381576538085938
    8. 'token' → logprob: -12.631576538085938
    9. '```' → logprob: -12.881576538085938
    10. '(line' → logprob: -13.131576538085938

Token 1163: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' (adapté à ' line') → logprob: -0.014938433654606342
    2. '   ' → logprob: -4.5149383544921875
    3. ' line' → logprob: -5.7649383544921875
    4. 'try' → logprob: -7.2649383544921875
    5. 'n' → logprob: -11.139938354492188
    6. '	line' → logprob: -11.389938354492188
    7. '       ' → logprob: -11.764938354492188
    8. '    
' → logprob: -12.514938354492188
    9. '```' → logprob: -13.014938354492188
    10. '
' → logprob: -13.139938354492188

Token 1164: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3143249750137329
    2. '=' → logprob: -1.314324975013733
    3. 'tokens' → logprob: -7.689324855804443
    4. '=line' → logprob: -8.814325332641602
    5. 'token' → logprob: -9.189325332641602
    6. '_tokens' → logprob: -9.439325332641602
    7. '   ' → logprob: -9.689325332641602
    8. '_token' → logprob: -9.689325332641602
    9. '=
' → logprob: -10.814325332641602
    10. '=input' → logprob: -11.439325332641602

Token 1165: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.03464788943529129
    2. 'sys' → logprob: -3.7846479415893555
    3. ' input' → logprob: -4.6596479415893555
    4. ' sys' → logprob: -6.2846479415893555
    5. '   ' → logprob: -13.284647941589355
    6. '=input' → logprob: -14.659647941589355
    7. '(input' → logprob: -15.659647941589355
    8. '(sys' → logprob: -15.659647941589355
    9. '=sys' → logprob: -15.659647941589355
    10. 'import' → logprob: -16.03464698791504

Token 1166: '().' (ID: 1454)
  Prédit: '()
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.11545077711343765
    2. '()' → logprob: -2.615450859069824
    3. '().' → logprob: -3.365450859069824
    4. '       ' → logprob: -7.865450859069824
    5. '.strip' → logprob: -8.115450859069824
    6. ' =' → logprob: -8.615450859069824
    7. '=' → logprob: -9.115450859069824
    8. '.rstrip' → logprob: -9.740450859069824
    9. '()
' → logprob: -9.990450859069824
    10. '():
' → logprob: -10.240450859069824

Token 1167: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -4.8590300139039755e-05
    2. 'rstrip' → logprob: -10.250048637390137
    3. 'split' → logprob: -11.250048637390137
    4. ' strip' → logprob: -16.37504768371582
    5. 'decode' → logprob: -18.50004768371582
    6. '.strip' → logprob: -20.00004768371582
    7. '(strip' → logprob: -20.00004768371582
    8. '_strip' → logprob: -20.62504768371582
    9. 'skip' → logprob: -20.87504768371582
    10. 'replace' → logprob: -21.50004768371582

Token 1168: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3188183307647705
    2. 'if' → logprob: -1.6938183307647705
    3. ' if' → logprob: -3.5688183307647705
    4. '=' → logprob: -4.568818092346191
    5. ' =' → logprob: -4.568818092346191
    6. '        
' → logprob: -4.818818092346191
    7. ':' → logprob: -5.068818092346191
    8. '
' → logprob: -5.568818092346191
    9. ':
' → logprob: -5.568818092346191
    10. '<|end|>' → logprob: -5.818818092346191

Token 1169: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.33206111192703247
    2. 'if' → logprob: -1.4570610523223877
    3. ' if' → logprob: -3.0820610523223877
    4. '   ' → logprob: -6.207061290740967
    5. '<|end|>' → logprob: -7.457061290740967
    6. '        
' → logprob: -7.957061290740967
    7. '```' → logprob: -8.707060813903809
    8. '
' → logprob: -8.707060813903809
    9. 'If' → logprob: -8.832060813903809
    10. '#' → logprob: -9.207060813903809

Token 1170: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.00044223200529813766
    2. ' if' → logprob: -8.250442504882812
    3. '       ' → logprob: -8.625442504882812
    4. '	if' → logprob: -14.250442504882812
    5. 'If' → logprob: -14.875442504882812
    6. '   ' → logprob: -16.375442504882812
    7. '```' → logprob: -16.500442504882812
    8. '#' → logprob: -16.625442504882812
    9. ';if' → logprob: -16.875442504882812
    10. '
' → logprob: -17.375442504882812

Token 1171: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.009187625721096992
    2. ' not' → logprob: -5.009187698364258
    3. 'line' → logprob: -6.009187698364258
    4. ' line' → logprob: -11.259187698364258
    5. '#line' → logprob: -16.009187698364258
    6. '(line' → logprob: -16.759187698364258
    7. '!' → logprob: -16.884187698364258
    8. '
' → logprob: -17.259187698364258
    9. '   ' → logprob: -18.259187698364258
    10. '```' → logprob: -18.259187698364258

Token 1172: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -3.547789674485102e-05
    2. ' line' → logprob: -10.250035285949707
    3. '(line' → logprob: -17.875036239624023
    4. '
' → logprob: -19.500036239624023
    5. '	line' → logprob: -20.625036239624023
    6. '#line' → logprob: -21.750036239624023
    7. '```' → logprob: -22.125036239624023
    8. '_line' → logprob: -22.250036239624023
    9. 'len' → logprob: -22.500036239624023
    10. '   ' → logprob: -22.500036239624023

Token 1173: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.20220918953418732
    2. ':' → logprob: -1.702209234237671
    3. '   ' → logprob: -8.70220947265625
    4. '=' → logprob: -8.70220947265625
    5. '():
' → logprob: -8.82720947265625
    6. ' or' → logprob: -8.95220947265625
    7. '):
' → logprob: -9.95220947265625
    8. '==' → logprob: -9.95220947265625
    9. '       ' → logprob: -10.07720947265625
    10. ':return' → logprob: -11.32720947265625

Token 1174: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10367278009653091
    2. '           ' → logprob: -2.353672742843628
    3. 'break' → logprob: -6.228672981262207
    4. '```' → logprob: -7.978672981262207
    5. 'continue' → logprob: -8.228672981262207
    6. ':' → logprob: -8.478672981262207
    7. ' break' → logprob: -8.603672981262207
    8. ':
' → logprob: -8.853672981262207
    9. '   ' → logprob: -9.228672981262207
    10. ',' → logprob: -9.603672981262207

Token 1175: ' break' (ID: 2338)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.33897823095321655
    2. 'break' (adapté à ' break') → logprob: -1.3389782905578613
    3. '           ' → logprob: -4.088978290557861
    4. '       ' → logprob: -4.963978290557861
    5. 'try' → logprob: -6.838978290557861
    6. ' continue' → logprob: -8.338977813720703
    7. '```' → logprob: -9.338977813720703
    8. 'if' → logprob: -9.463977813720703
    9. ' break' → logprob: -9.963977813720703
    10. '   ' → logprob: -10.463977813720703

Token 1176: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004766411148011684
    2. 'n' → logprob: -5.879766464233398
    3. '        
' → logprob: -7.129766464233398
    4. '
' → logprob: -7.504766464233398
    5. 's' → logprob: -8.629766464233398
    6. '   ' → logprob: -8.754766464233398
    7. ' n' → logprob: -9.379766464233398
    8. '```' → logprob: -9.504766464233398
    9. '(n' → logprob: -10.754766464233398
    10. 'tokens' → logprob: -11.004766464233398

Token 1177: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0025961112696677446
    2. '   ' → logprob: -6.377595901489258
    3. 'n' → logprob: -8.002595901489258
    4. '        
' → logprob: -8.127595901489258
    5. '
' → logprob: -9.002595901489258
    6. 's' → logprob: -10.002595901489258
    7. '```' → logprob: -10.252595901489258
    8. 'k' → logprob: -11.252595901489258
    9. 'tokens' → logprob: -11.627595901489258
    10. 'def' → logprob: -12.002595901489258

Token 1178: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.00047166430158540606
    2. '       ' → logprob: -8.000472068786621
    3. 'parts' → logprob: -9.750472068786621
    4. 'k' → logprob: -10.125472068786621
    5. ' n' → logprob: -11.375472068786621
    6. 'x' → logprob: -12.250472068786621
    7. '   ' → logprob: -12.625472068786621
    8. '        
' → logprob: -12.625472068786621
    9. '#' → logprob: -12.750472068786621
    10. '
' → logprob: -13.125472068786621

Token 1179: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0025052670389413834
    2. ' ,' → logprob: -6.502505302429199
    3. ' =' → logprob: -7.627505302429199
    4. '=' → logprob: -8.2525053024292
    5. ',k' → logprob: -8.7525053024292
    6. ')' → logprob: -10.6275053024292
    7. ',n' → logprob: -11.5025053024292
    8. 'tokens' → logprob: -11.5025053024292
    9. ',s' → logprob: -11.6275053024292
    10. ',int' → logprob: -12.2525053024292

Token 1180: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0011717714369297028
    2. ' k' → logprob: -6.751171588897705
    3. ' ' → logprob: -14.876172065734863
    4. 's' → logprob: -15.376172065734863
    5. ' 
' → logprob: -15.501172065734863
    6. '   ' → logprob: -16.001171112060547
    7. '  ' → logprob: -16.001171112060547
    8. '    ' → logprob: -16.126171112060547
    9. '    
' → logprob: -16.376171112060547
    10. '=' → logprob: -16.501171112060547

Token 1181: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.24436885118484497
    2. ' =' → logprob: -1.6193687915802002
    3. ',' → logprob: -3.9943687915802
    4. '=line' → logprob: -7.994369029998779
    5. ',line' → logprob: -12.119368553161621
    6. 'line' → logprob: -12.744368553161621
    7. ' ,' → logprob: -12.994368553161621
    8. 'token' → logprob: -13.494368553161621
    9. '=input' → logprob: -13.744368553161621
    10. '=int' → logprob: -13.744368553161621

Token 1182: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.029765760526061058
    2. ' s' → logprob: -3.5297658443450928
    3. ' =' → logprob: -11.779766082763672
    4. '=' → logprob: -12.404766082763672
    5. ' ' → logprob: -13.529766082763672
    6. '   ' → logprob: -14.279766082763672
    7. '=s' → logprob: -15.404766082763672
    8. ',' → logprob: -15.529766082763672
    9. '       ' → logprob: -15.779766082763672
    10. '_s' → logprob: -15.779766082763672

Token 1183: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759665369987488
    2. '=' → logprob: -0.8259665369987488
    3. ',' → logprob: -10.825966835021973
    4. '=line' → logprob: -12.950966835021973
    5. '=int' → logprob: -13.075966835021973
    6. ')' → logprob: -13.575966835021973
    7. ' ' → logprob: -14.950966835021973
    8. '=input' → logprob: -15.575966835021973
    9. '   ' → logprob: -15.700966835021973
    10. ')=' → logprob: -15.950966835021973

Token 1184: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.20141500234603882
    2. ' map' → logprob: -1.7014150619506836
    3. 'line' → logprob: -13.576415061950684
    4. ' line' → logprob: -15.701415061950684
    5. '	map' → logprob: -15.826415061950684
    6. 'list' → logprob: -16.451414108276367
    7. '   ' → logprob: -17.451414108276367
    8. '_map' → logprob: -17.951414108276367
    9. '(map' → logprob: -17.951414108276367
    10. ' ' → logprob: -17.951414108276367

Token 1185: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0008464370621368289
    2. 'int' → logprob: -7.2508463859558105
    3. '[int' → logprob: -9.250846862792969
    4. '(str' → logprob: -10.500846862792969
    5. '(lambda' → logprob: -12.250846862792969
    6. '=int' → logprob: -12.500846862792969
    7. '(' → logprob: -14.000846862792969
    8. '<int' → logprob: -14.125846862792969
    9. ',int' → logprob: -14.750846862792969
    10. '(tuple' → logprob: -14.875846862792969

Token 1186: ',' (ID: 11)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.7193523049354553
    2. ')' → logprob: -1.0943522453308105
    3. 'line' → logprob: -2.7193522453308105
    4. ',' → logprob: -2.7193522453308105
    5. ',line' → logprob: -3.7193522453308105
    6. '[line' → logprob: -4.4693522453308105
    7. '#line' → logprob: -5.2193522453308105
    8. '=line' → logprob: -6.5943522453308105
    9. 'token' → logprob: -6.7193522453308105
    10. '(),' → logprob: -7.4693522453308105

Token 1187: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.0002658655575942248
    2. ' line' → logprob: -8.250266075134277
    3. '   ' → logprob: -13.625266075134277
    4. 'input' → logprob: -13.625266075134277
    5. '(line' → logprob: -14.125266075134277
    6. '       ' → logprob: -14.500266075134277
    7. '           ' → logprob: -14.750266075134277
    8. '[line' → logprob: -14.750266075134277
    9. '=line' → logprob: -17.12526512145996
    10. '	line' → logprob: -17.50026512145996

Token 1188: '.split' (ID: 10347)
  Prédit: '.split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.0006986152729950845
    2. '().' → logprob: -7.375698566436768
    3. '.readline' → logprob: -10.750699043273926
    4. '.strip' → logprob: -10.875699043273926
    5. '.' → logprob: -11.250699043273926
    6. '   ' → logprob: -11.625699043273926
    7. ' .' → logprob: -12.750699043273926
    8. '.rstrip' → logprob: -13.250699043273926
    9. 'split' → logprob: -13.875699043273926
    10. '[' → logprob: -13.875699043273926

Token 1189: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.21787939965724945
    2. '())' → logprob: -1.7178794145584106
    3. '())
' → logprob: -4.592879295349121
    4. ')
' → logprob: -5.592879295349121
    5. '()' → logprob: -6.217879295349121
    6. '')' → logprob: -9.342879295349121
    7. '('' → logprob: -9.342879295349121
    8. '()
' → logprob: -9.842879295349121
    9. '   ' → logprob: -10.217879295349121
    10. '()[' → logprob: -10.217879295349121

Token 1190: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006603225599974394
    2. 'if' → logprob: -6.006603240966797
    3. 'positions' → logprob: -6.256603240966797
    4. '```' → logprob: -6.631603240966797
    5. '        
' → logprob: -7.756603240966797
    6. 'points' → logprob: -8.256603240966797
    7. ' if' → logprob: -9.756603240966797
    8. '   ' → logprob: -10.881603240966797
    9. '
' → logprob: -11.006603240966797
    10. 'tokens' → logprob: -11.131603240966797

Token 1191: ' if' (ID: 538)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.21055620908737183
    2. 'points' → logprob: -2.2105562686920166
    3. '       ' → logprob: -2.7105562686920166
    4. 'if' (adapté à ' if') → logprob: -4.7105560302734375
    5. 'coords' → logprob: -5.5855560302734375
    6. ' positions' → logprob: -8.085556030273438
    7. 'pos' → logprob: -8.835556030273438
    8. 'coordinates' → logprob: -9.085556030273438
    9. 'c' → logprob: -9.210556030273438
    10. '```' → logprob: -9.210556030273438

Token 1192: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.038044821470975876
    2. 'n' → logprob: -3.2880449295043945
    3. '(n' → logprob: -12.913044929504395
    4. '       ' → logprob: -14.413044929504395
    5. ' not' → logprob: -15.163044929504395
    6. '	n' → logprob: -16.163043975830078
    7. '        ' → logprob: -17.663043975830078
    8. ' (' → logprob: -17.788043975830078
    9. ' ' → logprob: -17.913043975830078
    10. 'not' → logprob: -18.663043975830078

Token 1193: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5763072371482849
    2. '==' → logprob: -0.8263072371482849
    3. '<=' → logprob: -8.45130729675293
    4. ' <=' → logprob: -9.20130729675293
    5. '=' → logprob: -10.45130729675293
    6. '<' → logprob: -11.95130729675293
    7. ' <' → logprob: -12.70130729675293
    8. '==
' → logprob: -13.07630729675293
    9. '   ' → logprob: -13.32630729675293
    10. '>' → logprob: -13.32630729675293

Token 1194: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. '
' → logprob: -20.125
    4. 'k' → logprob: -20.75
    5. 's' → logprob: -20.875
    6. '۰' → logprob: -20.875
    7. '   ' → logprob: -20.875
    8. '=' → logprob: -21.125
    9. 'n' → logprob: -22.25
    10. '```' → logprob: -22.875

Token 1195: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '=' → logprob: -18.125001907348633
    4. 'n' → logprob: -20.375001907348633
    5. '۰' → logprob: -21.250001907348633
    6. '   ' → logprob: -21.375001907348633
    7. 's' → logprob: -21.500001907348633
    8. '  ' → logprob: -21.500001907348633
    9. '
' → logprob: -21.500001907348633
    10. 'o' → logprob: -21.875001907348633

Token 1196: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.18067342042922974
    2. 'and' → logprob: -1.805673360824585
    3. ':' → logprob: -7.555673599243164
    4. ':
' → logprob: -8.805673599243164
    5. '       ' → logprob: -9.055673599243164
    6. '	and' → logprob: -10.055673599243164
    7. '           ' → logprob: -10.305673599243164
    8. '   ' → logprob: -10.555673599243164
    9. ' ' → logprob: -11.305673599243164
    10. ' or' → logprob: -12.180673599243164

Token 1197: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.00861456897109747
    2. ' k' → logprob: -4.758614540100098
    3. '	k' → logprob: -17.008615493774414
    4. '  ' → logprob: -18.133615493774414
    5. '   ' → logprob: -18.383615493774414
    6. ' ' → logprob: -19.383615493774414
    7. ' ' → logprob: -19.383615493774414
    8. '
' → logprob: -19.758615493774414
    9. '_k' → logprob: -20.258615493774414
    10. '    ' → logprob: -21.758615493774414

Token 1198: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.4290919005870819
    2. '==' → logprob: -1.0540919303894043
    3. '=' → logprob: -8.554091453552246
    4. ',' → logprob: -9.554091453552246
    5. ' ' → logprob: -10.054091453552246
    6. '0' → logprob: -10.804091453552246
    7. '<|end|>' → logprob: -11.304091453552246
    8. '==
' → logprob: -11.679091453552246
    9. ' =' → logprob: -11.804091453552246
    10. '>' → logprob: -11.929091453552246

Token 1199: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001584850688232109
    2. ' ' → logprob: -8.750158309936523
    3. '<|end|>' → logprob: -19.500158309936523
    4. '```' → logprob: -20.000158309936523
    5. '۰' → logprob: -20.625158309936523
    6. '<|end|>' → logprob: -20.750158309936523
    7. '   ' → logprob: -21.125158309936523
    8. ' ' → logprob: -21.375158309936523
    9. '
' → logprob: -21.375158309936523
    10. '=' → logprob: -21.625158309936523

Token 1200: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.15310683415737e-05
    2. ' ' → logprob: -10.750021934509277
    3. '<|end|>' → logprob: -17.50002098083496
    4. '<|end|>' → logprob: -19.25002098083496
    5. '۰' → logprob: -20.12502098083496
    6. 's' → logprob: -20.25002098083496
    7. '```' → logprob: -21.00002098083496
    8. '  ' → logprob: -21.25002098083496
    9. '=' → logprob: -21.75002098083496
    10. '   ' → logprob: -21.75002098083496

Token 1201: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.007649341132491827
    2. 'and' → logprob: -4.8826494216918945
    3. '0' → logprob: -10.132649421691895
    4. '	and' → logprob: -13.757649421691895
    5. ' и' → logprob: -14.507649421691895
    6. '<|end|>' → logprob: -14.507649421691895
    7. ' ' → logprob: -14.757649421691895
    8. 'そして' → logprob: -15.507649421691895
    9. '==' → logprob: -15.632649421691895
    10. '<|end|>' → logprob: -16.382648468017578

Token 1202: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.000505730917211622
    2. ' s' → logprob: -7.7505059242248535
    3. '0' → logprob: -9.500505447387695
    4. ' ' → logprob: -16.500505447387695
    5. '   ' → logprob: -17.625505447387695
    6. '       ' → logprob: -18.250505447387695
    7. '     ' → logprob: -20.250505447387695
    8. '  ' → logprob: -20.625505447387695
    9. '           ' → logprob: -21.000505447387695
    10. '	s' → logprob: -21.000505447387695

Token 1203: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.14291159808635712
    2. '==' → logprob: -2.017911672592163
    3. ')==' → logprob: -9.017911911010742
    4. '=' → logprob: -9.892911911010742
    5. ']==' → logprob: -11.017911911010742
    6. ')' → logprob: -11.142911911010742
    7. '()==' → logprob: -11.767911911010742
    8. '0' → logprob: -11.892911911010742
    9. ' =' → logprob: -12.642911911010742
    10. ' ' → logprob: -13.017911911010742

Token 1204: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. '
' → logprob: -18.125
    4. '   ' → logprob: -18.125
    5. '۰' → logprob: -18.75
    6. '```' → logprob: -19.25
    7. '  ' → logprob: -19.875
    8. ' ' → logprob: -20.625
    9. '
' → logprob: -20.75
    10. 'import' → logprob: -20.8125

Token 1205: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. '۰' → logprob: -18.750001907348633
    4. '   ' → logprob: -20.000001907348633
    5. '०' → logprob: -21.250001907348633
    6. '০' → logprob: -21.375001907348633
    7. ' ' → logprob: -22.125001907348633
    8. '٠' → logprob: -22.250001907348633
    9. '=' → logprob: -22.500001907348633
    10. '０' → logprob: -22.625001907348633

Token 1206: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.12417195737361908
    2. ':' → logprob: -2.2491719722747803
    3. '           ' → logprob: -4.499171733856201
    4. ':return' → logprob: -9.37417221069336
    5. '       ' → logprob: -9.74917221069336
    6. '():
' → logprob: -11.99917221069336
    7. '):
' → logprob: -12.37417221069336
    8. '		' → logprob: -12.87417221069336
    9. ':
' → logprob: -13.62417221069336
    10. ',' → logprob: -13.74917221069336

Token 1207: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0069776177406311035
    2. ':' → logprob: -5.631977558135986
    3. ':
' → logprob: -5.881977558135986
    4. '       ' → logprob: -7.631977558135986
    5. '<|end|>' → logprob: -10.631978034973145
    6. ',' → logprob: -11.131978034973145
    7. '		' → logprob: -11.756978034973145
    8. '	       ' → logprob: -11.881978034973145
    9. '   ' → logprob: -11.881978034973145
    10. '```' → logprob: -12.006978034973145

Token 1208: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.47559770941734314
    2. 'return' → logprob: -0.9755977392196655
    3. '           ' → logprob: -6.725597858428955
    4. ' break' → logprob: -8.975597381591797
    5. '       ' → logprob: -9.100597381591797
    6. ' return' → logprob: -9.725597381591797
    7. '	break' → logprob: -10.975597381591797
    8. '	return' → logprob: -13.600597381591797
    9. '               ' → logprob: -13.850597381591797
    10. '		' → logprob: -14.100597381591797

Token 1209: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009855368174612522
    2. '        
' → logprob: -5.384855270385742
    3. '
' → logprob: -5.509855270385742
    4. '```' → logprob: -7.384855270385742
    5. '<|end|>' → logprob: -8.759855270385742
    6. '   ' → logprob: -8.759855270385742
    7. 'import' → logprob: -8.884855270385742
    8. '    
' → logprob: -10.759855270385742
    9. 'from' → logprob: -11.259855270385742
    10. '<|end|>' → logprob: -11.509855270385742

Token 1210: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.021794117987155914
    2. 'positions' → logprob: -4.021794319152832
    3. '        
' → logprob: -6.021794319152832
    4. '```' → logprob: -7.646794319152832
    5. '   ' → logprob: -8.521794319152832
    6. 'import' → logprob: -8.896794319152832
    7. ' positions' → logprob: -8.896794319152832
    8. '
' → logprob: -9.146794319152832
    9. 'points' → logprob: -10.146794319152832
    10. 'pos' → logprob: -10.896794319152832

Token 1211: ' coords' (ID: 53253)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.11294061690568924
    2. 'points' → logprob: -2.737940549850464
    3. '       ' → logprob: -3.237940549850464
    4. 'coords' (adapté à ' coords') → logprob: -6.237940788269043
    5. 'pos' → logprob: -8.112940788269043
    6. 'c' → logprob: -8.237940788269043
    7. ' positions' → logprob: -8.612940788269043
    8. 'pts' → logprob: -10.612940788269043
    9. 'coordinates' → logprob: -10.737940788269043
    10. '```' → logprob: -10.862940788269043

Token 1212: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04347752779722214
    2. '=' → logprob: -3.1684775352478027
    3. '   ' → logprob: -8.668477058410645
    4. 's' → logprob: -8.668477058410645
    5. '       ' → logprob: -10.293477058410645
    6. '	' → logprob: -10.918477058410645
    7. ',' → logprob: -10.918477058410645
    8. '    ' → logprob: -11.668477058410645
    9. ')' → logprob: -11.793477058410645
    10. '        ' → logprob: -12.043477058410645

Token 1213: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.005912677384912968
    2. '[n' → logprob: -6.255912780761719
    3. ' [' → logprob: -6.505912780761719
    4. '[int' → logprob: -7.255912780761719
    5. '[]
' → logprob: -8.005912780761719
    6. '[]' → logprob: -8.005912780761719
    7. '[array' → logprob: -8.630912780761719
    8. '[x' → logprob: -9.380912780761719
    9. '[s' → logprob: -9.380912780761719
    10. '[input' → logprob: -9.630912780761719

Token 1214: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.027275074273347855
    2. 'for' → logprob: -3.7772750854492188
    3. ' for' → logprob: -5.527275085449219
    4. '	for' → logprob: -10.777275085449219
    5. '<|end|>' → logprob: -12.402275085449219
    6. '           ' → logprob: -12.652275085449219
    7. '[' → logprob: -12.652275085449219
    8. '	' → logprob: -13.027275085449219
    9. '   ' → logprob: -13.277275085449219
    10. '
' → logprob: -13.402275085449219

Token 1215: ' pos' (ID: 1253)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0005283685750328004
    2. ' for' → logprob: -8.125528335571289
    3. '       ' → logprob: -8.375528335571289
    4. '	for' → logprob: -13.750528335571289
    5. '
' → logprob: -14.375528335571289
    6. '   ' → logprob: -16.12552833557129
    7. '        
' → logprob: -17.00052833557129
    8. '[' → logprob: -17.37552833557129
    9. ' ' → logprob: -18.00052833557129
    10. 'while' → logprob: -18.37552833557129

Token 1216: '_to' (ID: 5089)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.32764559984207153
    2. '=' → logprob: -1.5776455402374268
    3. 's' → logprob: -2.8276455402374268
    4. '   ' → logprob: -5.452645778656006
    5. '       ' → logprob: -6.327645778656006
    6. '_tokens' → logprob: -6.452645778656006
    7. 'itions' → logprob: -6.577645778656006
    8. '=[]
' → logprob: -7.327645778656006
    9. 'sible' → logprob: -7.827645778656006
    10. '=[]' → logprob: -7.952645778656006

Token 1217: '_id' (ID: 1537)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.008924885652959347
    2. 'idx' → logprob: -4.758924961090088
    3. 'id' → logprob: -8.25892448425293
    4. 'indice' → logprob: -10.50892448425293
    5. 'pos' → logprob: -11.50892448425293
    6. 'indices' → logprob: -12.38392448425293
    7. 'ind' → logprob: -12.75892448425293
    8. 'coord' → logprob: -13.00892448425293
    9. '_index' → logprob: -13.13392448425293
    10. 'coords' → logprob: -13.50892448425293

Token 1218: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04859315976500511
    2. ' =' → logprob: -3.048593044281006
    3. '={}' → logprob: -12.423593521118164
    4. '={' → logprob: -14.548593521118164
    5. '={}
' → logprob: -15.173593521118164
    6. '[' → logprob: -15.173593521118164
    7. '{' → logprob: -15.548593521118164
    8. '{}' → logprob: -15.548593521118164
    9. '=
' → logprob: -15.673593521118164
    10. '＝' → logprob: -16.673593521118164

Token 1219: ' dict' (ID: 11878)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.0003156817110721022
    2. 'dict' → logprob: -8.25031566619873
    3. '{}
' → logprob: -10.00031566619873
    4. ' {}' → logprob: -11.75031566619873
    5. 'default' → logprob: -14.25031566619873
    6. '{' → logprob: -15.37531566619873
    7. '{}

' → logprob: -15.87531566619873
    8. ' dict' → logprob: -15.87531566619873
    9. '{})' → logprob: -18.250316619873047
    10. '{},' → logprob: -18.500316619873047

Token 1220: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3880191147327423
    2. '()
' → logprob: -1.63801908493042
    3. ' =' → logprob: -2.76301908493042
    4. '       ' → logprob: -2.88801908493042
    5. '=' → logprob: -4.88801908493042
    6. '   ' → logprob: -8.388019561767578
    7. '()

' → logprob: -9.138019561767578
    8. '        
' → logprob: -9.138019561767578
    9. '={}
' → logprob: -9.888019561767578
    10. '[]
' → logprob: -10.013019561767578

Token 1221: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005858635529875755
    2. 'for' → logprob: -5.380858421325684
    3. ' for' → logprob: -7.255858421325684
    4. '```' → logprob: -8.005858421325684
    5. '
' → logprob: -9.130858421325684
    6. '        
' → logprob: -9.755858421325684
    7. '   ' → logprob: -11.880858421325684
    8. '	' → logprob: -12.005858421325684
    9. '``' → logprob: -12.505858421325684
    10. '{' → logprob: -12.755858421325684

Token 1222: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.08030761778354645
    2. '       ' → logprob: -2.580307722091675
    3. ' for' → logprob: -6.580307483673096
    4. '	for' → logprob: -11.580307960510254
    5. 'next' → logprob: -11.830307960510254
    6. '        
' → logprob: -12.580307960510254
    7. '
' → logprob: -12.830307960510254
    8. '   ' → logprob: -12.955307960510254
    9. '```' → logprob: -13.330307960510254
    10. 'For' → logprob: -14.205307960510254

Token 1223: ' i' (ID: 575)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.008844422176480293
    2. '_i' → logprob: -4.758844375610352
    3. ' _' → logprob: -8.883844375610352
    4. '_range' → logprob: -9.758844375610352
    5. 'i' → logprob: -10.758844375610352
    6. '_
' → logprob: -12.633844375610352
    7. ' i' → logprob: -12.883844375610352
    8. '_id' → logprob: -13.383844375610352
    9. '   ' → logprob: -13.633844375610352
    10. '_idx' → logprob: -13.758844375610352

Token 1224: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.023272735998034477
    2. 'in' → logprob: -3.773272752761841
    3. '_' → logprob: -11.273272514343262
    4. ',' → logprob: -12.398272514343262
    5. 'n' → logprob: -12.773272514343262
    6. '_in' → logprob: -13.398272514343262
    7. ' _' → logprob: -13.773272514343262
    8. 'range' → logprob: -13.773272514343262
    9. '```' → logprob: -14.148272514343262
    10. '   ' → logprob: -14.148272514343262

Token 1225: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.000553151941858232
    2. ' range' → logprob: -7.500553131103516
    3. '	range' → logprob: -17.000553131103516
    4. '   ' → logprob: -18.250553131103516
    5. 'n' → logprob: -19.125553131103516
    6. 'in' → logprob: -19.250553131103516
    7. 'rang' → logprob: -19.500553131103516
    8. 'r' → logprob: -19.750553131103516
    9. '_' → logprob: -19.750553131103516
    10. '0' → logprob: -19.750553131103516

Token 1226: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.3139556050300598
    2. 'n' → logprob: -1.313955545425415
    3. '       ' → logprob: -7.938955783843994
    4. ' n' → logprob: -8.688955307006836
    5. '	n' → logprob: -9.688955307006836
    6. '   ' → logprob: -9.938955307006836
    7. 'int' → logprob: -10.938955307006836
    8. 'range' → logprob: -10.938955307006836
    9. '           ' → logprob: -12.313955307006836
    10. '(' → logprob: -12.438955307006836

Token 1227: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.007012783084064722
    2. '):' → logprob: -5.382012844085693
    3. '       ' → logprob: -6.132012844085693
    4. '   ' → logprob: -9.132012367248535
    5. '():
' → logprob: -10.007012367248535
    6. '):
' → logprob: -10.882012367248535
    7. '()):
' → logprob: -10.882012367248535
    8. '           ' → logprob: -12.257012367248535
    9. ':
' → logprob: -12.632012367248535
    10. ')' → logprob: -12.757012367248535

Token 1228: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00023083435371518135
    2. ' line' → logprob: -8.75023078918457
    3. '	       ' → logprob: -10.75023078918457
    4. '            
' → logprob: -10.87523078918457
    5. '```' → logprob: -11.37523078918457
    6. 'line' → logprob: -12.50023078918457
    7. '   ' → logprob: -13.37523078918457
    8. '#line' → logprob: -13.62523078918457
    9. '
' → logprob: -13.75023078918457
    10. '	line' → logprob: -13.87523078918457

Token 1229: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.2983514964580536
    2. ' x' → logprob: -1.923351526260376
    3. '           ' → logprob: -2.798351526260376
    4. 'line' → logprob: -3.923351526260376
    5. 'coords' → logprob: -4.173351287841797
    6. ' line' → logprob: -4.923351287841797
    7. 'xyz' → logprob: -5.798351287841797
    8. ' coords' → logprob: -6.298351287841797
    9. 'xy' → logprob: -6.923351287841797
    10. '   ' → logprob: -7.173351287841797

Token 1230: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03718925639986992
    2. ',y' → logprob: -3.412189245223999
    3. ' ,' → logprob: -6.287189483642578
    4. ',x' → logprob: -6.787189483642578
    5. '_,' → logprob: -8.787189483642578
    6. '=' → logprob: -9.662189483642578
    7. ' =' → logprob: -9.787189483642578
    8. ',int' → logprob: -10.037189483642578
    9. ',line' → logprob: -10.787189483642578
    10. ',user' → logprob: -11.037189483642578

Token 1231: ',z' (ID: 54920)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5517425537109375
    2. ',y' → logprob: -1.1767425537109375
    3. ',z' → logprob: -2.1767425537109375
    4. ',x' → logprob: -6.5517425537109375
    5. ',w' → logprob: -7.5517425537109375
    6. '=' → logprob: -9.051742553710938
    7. ' ,' → logprob: -9.551742553710938
    8. ',line' → logprob: -10.176742553710938
    9. ' =' → logprob: -10.551742553710938
    10. ',int' → logprob: -10.551742553710938

Token 1232: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22632716596126556
    2. '=' → logprob: -1.6013271808624268
    3. '=line' → logprob: -7.226326942443848
    4. '=input' → logprob: -9.726326942443848
    5. '=int' → logprob: -9.851326942443848
    6. ',' → logprob: -10.101326942443848
    7. ')' → logprob: -12.351326942443848
    8. '=
' → logprob: -12.601326942443848
    9. ')=' → logprob: -13.101326942443848
    10. '           ' → logprob: -13.101326942443848

Token 1233: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.02326434850692749
    2. ' map' → logprob: -3.7732644081115723
    3. '           ' → logprob: -10.898263931274414
    4. '	map' → logprob: -15.523263931274414
    5. '   ' → logprob: -16.398263931274414
    6. '(map' → logprob: -17.773263931274414
    7. '[' → logprob: -17.898263931274414
    8. 'tuple' → logprob: -18.023263931274414
    9. ' ' → logprob: -18.148263931274414
    10. '  ' → logprob: -18.148263931274414

Token 1234: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0015061709564179182
    2. 'int' → logprob: -6.501506328582764
    3. '[int' → logprob: -12.751505851745605
    4. '=int' → logprob: -15.001505851745605
    5. '(' → logprob: -15.501505851745605
    6. '   ' → logprob: -16.126506805419922
    7. '<int' → logprob: -16.751506805419922
    8. '(
' → logprob: -16.876506805419922
    9. '(str' → logprob: -17.001506805419922
    10. '
' → logprob: -17.251506805419922

Token 1235: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.4804359972476959
    2. ',' → logprob: -0.9804359674453735
    3. '(input' → logprob: -5.230435848236084
    4. 'input' → logprob: -7.230435848236084
    5. '(' → logprob: -9.230436325073242
    6. '(),' → logprob: -9.605436325073242
    7. ',line' → logprob: -10.605436325073242
    8. '   ' → logprob: -10.730436325073242
    9. ' ,' → logprob: -10.855436325073242
    10. '=input' → logprob: -12.105436325073242

Token 1236: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -3.607391408877447e-05
    2. ' input' → logprob: -10.250036239624023
    3. '           ' → logprob: -15.375036239624023
    4. 'line' → logprob: -15.500036239624023
    5. 'sys' → logprob: -15.875036239624023
    6. '(input' → logprob: -17.125036239624023
    7. '   ' → logprob: -17.375036239624023
    8. '       ' → logprob: -18.125036239624023
    9. '               ' → logprob: -18.750036239624023
    10. '<input' → logprob: -18.750036239624023

Token 1237: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.1994775377388578e-05
    2. '.readline' → logprob: -11.875012397766113
    3. '()' → logprob: -13.125012397766113
    4. '   ' → logprob: -13.875012397766113
    5. '       ' → logprob: -14.500012397766113
    6. '()).' → logprob: -14.500012397766113
    7. '()
' → logprob: -14.625012397766113
    8. '().__' → logprob: -15.375012397766113
    9. '           ' → logprob: -15.750012397766113
    10. '.' → logprob: -16.500011444091797

Token 1238: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.23291417956352234
    2. 'strip' → logprob: -1.6079142093658447
    3. 'rstrip' → logprob: -5.232913970947266
    4. 'read' → logprob: -6.232913970947266
    5. '.readline' → logprob: -9.482913970947266
    6. '().' → logprob: -10.607913970947266
    7. '_split' → logprob: -10.982913970947266
    8. '()' → logprob: -11.482913970947266
    9. ' readline' → logprob: -11.732913970947266
    10. ')' → logprob: -12.232913970947266

Token 1239: '())
' (ID: 4574)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.18629814684391022
    2. '())
' → logprob: -1.936298131942749
    3. ')' → logprob: -3.811298131942749
    4. '       ' → logprob: -6.186298370361328
    5. '())' → logprob: -6.811298370361328
    6. '           ' → logprob: -8.811298370361328
    7. '()' → logprob: -9.061298370361328
    8. '   ' → logprob: -9.936298370361328
    9. '()
' → logprob: -10.186298370361328
    10. '[' → logprob: -10.811298370361328

Token 1240: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -5.1093578804284334e-05
    2. '       ' → logprob: -11.125051498413086
    3. '<|end|>' → logprob: -11.125051498413086
    4. '```' → logprob: -12.125051498413086
    5. '
' → logprob: -12.375051498413086
    6. '   ' → logprob: -13.125051498413086
    7. '<|end|>' → logprob: -13.375051498413086
    8. ',' → logprob: -13.500051498413086
    9. 'coords' → logprob: -13.625051498413086
    10. '            
' → logprob: -13.750051498413086

Token 1241: ' coords' (ID: 53253)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007088776677846909
    2. 'pos' → logprob: -5.757088661193848
    3. 'coords' (adapté à ' coords') → logprob: -5.757088661193848
    4. ' coords' → logprob: -8.007088661193848
    5. '       ' → logprob: -8.132088661193848
    6. ' pos' → logprob: -9.757088661193848
    7. '   ' → logprob: -10.007088661193848
    8. '               ' → logprob: -11.882088661193848
    9. '
' → logprob: -14.132088661193848
    10. '	       ' → logprob: -14.257088661193848

Token 1242: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.001246185740455985
    2. '.' → logprob: -7.001245975494385
    3. '[i' → logprob: -8.876246452331543
    4. '.app' → logprob: -10.001246452331543
    5. ' .' → logprob: -10.751246452331543
    6. '           ' → logprob: -10.876246452331543
    7. ' =' → logprob: -11.126246452331543
    8. ').' → logprob: -11.251246452331543
    9. '[x' → logprob: -11.751246452331543
    10. '[' → logprob: -11.876246452331543

Token 1243: '((' (ID: 2054)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.013907026499509811
    2. ' (' → logprob: -4.513906955718994
    3. '((' → logprob: -6.388906955718994
    4. '(' → logprob: -6.763906955718994
    5. '   ' → logprob: -10.888907432556152
    6. '
' → logprob: -14.513907432556152
    7. '(tuple' → logprob: -15.138907432556152
    8. '(
' → logprob: -15.263907432556152
    9. '```' → logprob: -15.388907432556152
    10. '       ' → logprob: -16.513906478881836

Token 1244: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.5048530030981055e-06
    2. ' x' → logprob: -13.500001907348633
    3. ')x' → logprob: -16.000001907348633
    4. '	x' → logprob: -18.625001907348633
    5. '           ' → logprob: -19.375001907348633
    6. '               ' → logprob: -20.500001907348633
    7. '(x' → logprob: -20.875001907348633
    8. '
' → logprob: -21.250001907348633
    9. '   ' → logprob: -21.250001907348633
    10. '"x' → logprob: -21.250001907348633

Token 1245: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.05500967428088188
    2. ',' → logprob: -2.930009603500366
    3. ' ,' → logprob: -9.055009841918945
    4. ',
' → logprob: -12.430009841918945
    5. ',x' → logprob: -13.180009841918945
    6. ',Y' → logprob: -13.805009841918945
    7. '   ' → logprob: -14.805009841918945
    8. ',user' → logprob: -15.180009841918945
    9. ',i' → logprob: -15.305009841918945
    10. '+' → logprob: -15.430009841918945

Token 1246: ',z' (ID: 54920)
  Prédit: ',z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',z' → logprob: -4.251091377227567e-05
    2. ',' → logprob: -10.125042915344238
    3. ' ,' → logprob: -14.125042915344238
    4. ',x' → logprob: -14.625042915344238
    5. 'z' → logprob: -14.625042915344238
    6. ',Z' → logprob: -15.000042915344238
    7. ',y' → logprob: -15.750042915344238
    8. '           ' → logprob: -16.000041961669922
    9. '       ' → logprob: -17.750041961669922
    10. ',
' → logprob: -17.875041961669922

Token 1247: '))
' (ID: 2210)
  Prédit: '))
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))
' → logprob: -0.2045142948627472
    2. '))' → logprob: -1.7045142650604248
    3. '           ' → logprob: -5.829514503479004
    4. '       ' → logprob: -9.454514503479004
    5. ' ))
' → logprob: -10.704514503479004
    6. '               ' → logprob: -11.204514503479004
    7. '));' → logprob: -11.579514503479004
    8. '                   ' → logprob: -12.079514503479004
    9. ')' → logprob: -12.079514503479004
    10. ' ))' → logprob: -12.454514503479004

Token 1248: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002511808415874839
    2. '       ' → logprob: -6.002511978149414
    3. '
' → logprob: -11.127511978149414
    4. '   ' → logprob: -11.627511978149414
    5. '```' → logprob: -11.877511978149414
    6. '<|end|>' → logprob: -13.127511978149414
    7. '	       ' → logprob: -13.752511978149414
    8. 'pos' → logprob: -14.502511978149414
    9. ',' → logprob: -15.252511978149414
    10. ' for' → logprob: -15.502511978149414

Token 1249: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' (adapté à ' pos') → logprob: -0.03694262355566025
    2. '       ' → logprob: -4.036942481994629
    3. '           ' → logprob: -4.036942481994629
    4. ' pos' → logprob: -7.036942481994629
    5. '   ' → logprob: -9.536942481994629
    6. '```' → logprob: -12.161942481994629
    7. '	pos' → logprob: -12.161942481994629
    8. '
' → logprob: -13.036942481994629
    9. '	   ' → logprob: -14.411942481994629
    10. '               ' → logprob: -14.911942481994629

Token 1250: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -1.981667537620524e-06
    2. 's' → logprob: -14.750001907348633
    3. '```' → logprob: -15.250001907348633
    4. 'To' → logprob: -16.250001907348633
    5. '=_' → logprob: -16.250001907348633
    6. 'e' → logprob: -16.250001907348633
    7. '_t' → logprob: -16.375001907348633
    8. 'to' → logprob: -16.375001907348633
    9. '_TO' → logprob: -16.625001907348633
    10. ')' → logprob: -16.750001907348633

Token 1251: '_id' (ID: 1537)
  Prédit: 'id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.5136673450469971
    2. '_id' → logprob: -1.013667345046997
    3. 'pos' → logprob: -3.263667345046997
    4. 'coords' → logprob: -7.638667106628418
    5. 'coord' → logprob: -10.138667106628418
    6. '(x' → logprob: -11.638667106628418
    7. '[(' → logprob: -11.638667106628418
    8. '((' → logprob: -11.763667106628418
    9. '_pos' → logprob: -11.888667106628418
    10. '[pos' → logprob: -13.263667106628418

Token 1252: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.017327353358268738
    2. '[pos' → logprob: -4.267327308654785
    3. '[' → logprob: -5.767327308654785
    4. '=' → logprob: -11.767327308654785
    5. '(coords' → logprob: -12.017327308654785
    6. 'coords' → logprob: -12.142327308654785
    7. '[((' → logprob: -12.392327308654785
    8. '[x' → logprob: -12.517327308654785
    9. '[position' → logprob: -14.142327308654785
    10. 'pos' → logprob: -14.392327308654785

Token 1253: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.981667537620524e-06
    2. ' x' → logprob: -13.250001907348633
    3. ')x' → logprob: -15.875001907348633
    4. 'coords' → logprob: -17.500001907348633
    5. '(x' → logprob: -17.625001907348633
    6. '
' → logprob: -19.250001907348633
    7. ')' → logprob: -19.250001907348633
    8. '	x' → logprob: -20.000001907348633
    9. ' ' → logprob: -20.125001907348633
    10. '   ' → logprob: -20.375001907348633

Token 1254: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.02493756264448166
    2. ',' → logprob: -3.774937629699707
    3. ' ,' → logprob: -6.774937629699707
    4. ',x' → logprob: -7.649937629699707
    5. ',i' → logprob: -10.524937629699707
    6. ')]' → logprob: -10.899937629699707
    7. ')' → logprob: -11.399937629699707
    8. ',z' → logprob: -12.899937629699707
    9. ',
' → logprob: -13.399937629699707
    10. '   ' → logprob: -13.399937629699707

Token 1255: ',z' (ID: 54920)
  Prédit: ',z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',z' → logprob: -0.006767230574041605
    2. 'z' → logprob: -5.006767272949219
    3. ',' → logprob: -9.881767272949219
    4. ')' → logprob: -15.631767272949219
    5. '	z' → logprob: -15.756767272949219
    6. ',
' → logprob: -16.38176727294922
    7. ' ,' → logprob: -16.50676727294922
    8. '
' → logprob: -16.50676727294922
    9. ')]' → logprob: -17.00676727294922
    10. '       ' → logprob: -17.13176727294922

Token 1256: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0028600357472896576
    2. ')' → logprob: -6.252860069274902
    3. ']' → logprob: -7.002860069274902
    4. ']=' → logprob: -11.752860069274902
    5. ')=' → logprob: -11.752860069274902
    6. '])' → logprob: -13.252860069274902
    7. ' )' → logprob: -13.377860069274902
    8. '       ' → logprob: -13.627860069274902
    9. '   ' → logprob: -14.252860069274902
    10. '           ' → logprob: -14.877860069274902

Token 1257: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0025037210434675217
    2. ' =' → logprob: -6.002503871917725
    3. '=i' → logprob: -10.502503395080566
    4. ')=' → logprob: -15.377503395080566
    5. ']=' → logprob: -15.627503395080566
    6. '=
' → logprob: -15.752503395080566
    7. ')' → logprob: -17.002504348754883
    8. ']' → logprob: -18.127504348754883
    9. '=len' → logprob: -18.127504348754883
    10. '＝' → logprob: -18.502504348754883

Token 1258: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -7.493430894101039e-05
    2. ' i' → logprob: -9.500075340270996
    3. '	i' → logprob: -18.87507438659668
    4. '           ' → logprob: -19.50007438659668
    5. '   ' → logprob: -20.25007438659668
    6. '       ' → logprob: -20.75007438659668
    7. '
' → logprob: -21.87507438659668
    8. '{i' → logprob: -23.00007438659668
    9. '         ' → logprob: -23.12507438659668
    10. ' ' → logprob: -23.75007438659668

Token 1259: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7101007103919983
    2. '       ' → logprob: -0.7101007103919983
    3. '        
' → logprob: -4.2101006507873535
    4. '```' → logprob: -6.8351006507873535
    5. 'adj' → logprob: -8.585101127624512
    6. 'import' → logprob: -8.585101127624512
    7. '    
' → logprob: -9.335101127624512
    8. '            
' → logprob: -9.460101127624512
    9. '		
' → logprob: -9.835101127624512
    10. 'neighbors' → logprob: -9.835101127624512

Token 1260: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15750321745872498
    2. '
' → logprob: -2.157503128051758
    3. '        
' → logprob: -3.782503128051758
    4. '```' → logprob: -5.657503128051758
    5. 'dire' → logprob: -6.407503128051758
    6. '		
' → logprob: -7.157503128051758
    7. '   ' → logprob: -8.157503128051758
    8. '	' → logprob: -8.532503128051758
    9. '    
' → logprob: -8.782503128051758
    10. 'import' → logprob: -9.032503128051758

Token 1261: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5602540373802185
    2. 'dire' → logprob: -1.5602540969848633
    3. 'adj' → logprob: -1.6852540969848633
    4. '
' → logprob: -3.9352540969848633
    5. '#' (adapté à ' #') → logprob: -4.560254096984863
    6. '        
' → logprob: -6.810254096984863
    7. 'neighbors' → logprob: -7.185254096984863
    8. 'graph' → logprob: -7.685254096984863
    9. '```' → logprob: -7.810254096984863
    10. 'dirs' → logprob: -8.560254096984863

Token 1262: ' Constru' (ID: 98396)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.18549200892448425
    2. '       ' → logprob: -2.5604920387268066
    3. 'dire' → logprob: -3.0604920387268066
    4. '#' → logprob: -3.9354920387268066
    5. 'graph' → logprob: -4.060492038726807
    6. 'neighbors' → logprob: -5.310492038726807
    7. 'edges' → logprob: -6.435492038726807
    8. '
' → logprob: -7.310492038726807
    9. 'dirs' → logprob: -7.810492038726807
    10. '```' → logprob: -7.935492038726807

Token 1263: 'ire' (ID: 594)
  Prédit: 'ire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ire' → logprob: -0.3264082968235016
    2. 'ct' → logprob: -1.5764082670211792
    3. 'ction' → logprob: -3.0764083862304688
    4. '#' → logprob: -4.576408386230469
    5. '       ' → logprob: -5.701408386230469
    6. 'ir' → logprob: -6.076408386230469
    7. '   ' → logprob: -6.326408386230469
    8. 'uire' → logprob: -6.576408386230469
    9. 'cter' → logprob: -6.951408386230469
    10. '```' → logprob: -7.076408386230469

Token 1264: ' le' (ID: 505)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.4746093153953552
    2. 'graph' → logprob: -0.9746093153953552
    3. 'edges' → logprob: -8.849609375
    4. '```' → logprob: -9.224609375
    5. 'g' → logprob: -9.474609375
    6. ' graph' → logprob: -9.974609375
    7. 'neighbors' → logprob: -10.349609375
    8. '       ' → logprob: -10.474609375
    9. '#' → logprob: -10.599609375
    10. 'gr' → logprob: -10.724609375

Token 1265: ' grap' (ID: 60955)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.5769156813621521
    2. 'adj' → logprob: -0.8269156813621521
    3. 'neighbors' → logprob: -7.076915740966797
    4. 'gr' → logprob: -10.201915740966797
    5. 'edges' → logprob: -10.201915740966797
    6. 'g' → logprob: -10.951915740966797
    7. 'default' → logprob: -11.576915740966797
    8. '```' → logprob: -11.701915740966797
    9. '#' → logprob: -12.076915740966797
    10. 'graphs' → logprob: -12.951915740966797

Token 1266: 'he' (ID: 273)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.5586596727371216
    2. 'he' → logprob: -1.0586596727371216
    3. 'ph' → logprob: -3.183659553527832
    4. 'aphe' → logprob: -3.808659553527832
    5. 'phe' → logprob: -4.558659553527832
    6. '       ' → logprob: -5.683659553527832
    7. '   ' → logprob: -6.933659553527832
    8. '#' → logprob: -7.058659553527832
    9. '```' → logprob: -8.808659553527832
    10. 'heme' → logprob: -8.933659553527832

Token 1267: ':' (ID: 25)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.7981141805648804
    2. '       ' → logprob: -1.2981141805648804
    3. 'graph' → logprob: -1.2981141805648804
    4. 'edges' → logprob: -6.04811429977417
    5. 'neighbors' → logprob: -7.29811429977417
    6. '```' → logprob: -8.048113822937012
    7. '        
' → logprob: -9.173113822937012
    8. '
' → logprob: -9.173113822937012
    9. ' graph' → logprob: -10.173113822937012
    10. ' adjacency' → logprob: -10.173113822937012

Token 1268: ' deux' (ID: 10301)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.25547873973846436
    2. 'adj' → logprob: -1.6304787397384644
    3. '       ' → logprob: -3.755478858947754
    4. 'edges' → logprob: -6.130478858947754
    5. ' graph' → logprob: -6.380478858947754
    6. '```' → logprob: -6.755478858947754
    7. 'neighbors' → logprob: -7.380478858947754
    8. '
' → logprob: -8.130478858947754
    9. ' adjacency' → logprob: -9.755478858947754
    10. '        
' → logprob: -10.005478858947754

Token 1269: ' cubes' (ID: 88455)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.4162101745605469
    2. 'for' → logprob: -2.166210174560547
    3. 'points' → logprob: -2.791210174560547
    4. 'nodes' → logprob: -2.791210174560547
    5. 'c' → logprob: -3.166210174560547
    6. 'coords' → logprob: -4.291210174560547
    7. '(x' → logprob: -4.916210174560547
    8. ' positions' → logprob: -5.041210174560547
    9. 'pos' → logprob: -5.291210174560547
    10. 's' → logprob: -5.291210174560547

Token 1270: ' sont' (ID: 5242)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.18461762368679047
    2. 'adj' → logprob: -2.059617519378662
    3. ' sont' → logprob: -3.309617519378662
    4. 'are' → logprob: -7.059617519378662
    5. 'vo' → logprob: -7.684617519378662
    6. 'éta' → logprob: -7.809617519378662
    7. ' are' → logprob: -7.809617519378662
    8. '#' → logprob: -8.05961799621582
    9. 'for' → logprob: -8.05961799621582
    10. ' adj' → logprob: -8.55961799621582

Token 1271: ' adj' (ID: 20251)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.0004152993205934763
    2. 'vo' → logprob: -8.500414848327637
    3. 'connect' → logprob: -9.125414848327637
    4. '#' → logprob: -10.500414848327637
    5. 'aj' → logprob: -11.125414848327637
    6. 'consider' → logprob: -11.250414848327637
    7. 'import' → logprob: -11.500414848327637
    8. ' voisins' → logprob: -12.000414848327637
    9. 'conn' → logprob: -12.500414848327637
    10. '_adj' → logprob: -12.625414848327637

Token 1272: 'ac' (ID: 359)
  Prédit: 'ac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ac' → logprob: -0.1259649097919464
    2. 'ents' → logprob: -2.875964879989624
    3. 'c' → logprob: -3.625964879989624
    4. 'oints' → logprob: -4.125965118408203
    5. 'acent' → logprob: -4.500965118408203
    6. '       ' → logprob: -6.250965118408203
    7. '=' → logprob: -6.500965118408203
    8. '   ' → logprob: -6.750965118408203
    9. 'anc' → logprob: -7.750965118408203
    10. 'cent' → logprob: -7.875965118408203

Token 1273: 'ents' (ID: 1094)
  Prédit: 'ents'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ents' → logprob: -0.010514064691960812
    2. 'ac' → logprob: -5.385514259338379
    3. 'c' → logprob: -5.510514259338379
    4. 'd' → logprob: -8.260514259338379
    5. 'ent' → logprob: -8.510514259338379
    6. 'cent' → logprob: -8.510514259338379
    7. 'acent' → logprob: -8.510514259338379
    8. 'nts' → logprob: -8.510514259338379
    9. 'oints' → logprob: -9.010514259338379
    10. '#' → logprob: -9.635514259338379

Token 1274: ' s' (ID: 265)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4583205282688141
    2. ' =' → logprob: -1.7083204984664917
    3. 'adj' → logprob: -2.2083206176757812
    4. '=' → logprob: -3.5833206176757812
    5. '```' → logprob: -4.208320617675781
    6. ',' → logprob: -4.333320617675781
    7. 'graph' → logprob: -5.708320617675781
    8. '
' → logprob: -6.208320617675781
    9. ' adj' → logprob: -6.208320617675781
    10. ' avec' → logprob: -6.333320617675781

Token 1275: ''ils' (ID: 41108)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.1107887029647827
    2. '       ' → logprob: -1.4857887029647827
    3. '=' → logprob: -2.1107888221740723
    4. 'ont' → logprob: -2.1107888221740723
    5. ''ils' → logprob: -2.1107888221740723
    6. '   ' → logprob: -3.7357888221740723
    7. '=(' → logprob: -4.610788822174072
    8. 'si' → logprob: -5.110788822174072
    9. ' =' → logprob: -5.235788822174072
    10. '           ' → logprob: -5.235788822174072

Token 1276: ' sont' (ID: 5242)
  Prédit: 'ont'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ont' → logprob: -0.4391433894634247
    2. 'diff' → logprob: -1.689143419265747
    3. 'adj' → logprob: -2.314143419265747
    4. 's' → logprob: -2.939143419265747
    5. 'dist' → logprob: -5.064143180847168
    6. 'for' → logprob: -6.439143180847168
    7. 'x' → logprob: -6.564143180847168
    8. 'd' → logprob: -6.814143180847168
    9. '#' → logprob: -6.939143180847168
    10. '(x' → logprob: -7.189143180847168

Token 1277: ' à' (ID: 1221)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.17731815576553345
    2. 'à' → logprob: -2.9273180961608887
    3. 'dist' → logprob: -2.9273180961608887
    4. 'vo' → logprob: -3.1773180961608887
    5. 'exact' → logprob: -4.927318096160889
    6. 'au' → logprob: -6.302318096160889
    7. 'dans' → logprob: -7.177318096160889
    8. ' voisins' → logprob: -7.177318096160889
    9. 'connect' → logprob: -7.677318096160889
    10. 'plac' → logprob: -7.927318096160889

Token 1278: ' distance' (ID: 9324)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.4858010411262512
    2. '(' → logprob: -1.1108009815216064
    3. '(x' → logprob: -3.9858009815216064
    4. 's' → logprob: -4.1108012199401855
    5. ' (' → logprob: -4.4858012199401855
    6. '(
' → logprob: -5.7358012199401855
    7. 'distance' → logprob: -6.3608012199401855
    8. '(distance' → logprob: -6.3608012199401855
    9. '   ' → logprob: -7.6108012199401855
    10. ' ' → logprob: -7.8608012199401855

Token 1279: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.020571550354361534
    2. '(s' → logprob: -4.645571708679199
    3. '(' → logprob: -5.270571708679199
    4. 'exact' → logprob: -5.645571708679199
    5. '   ' → logprob: -7.395571708679199
    6. ' s' → logprob: -7.520571708679199
    7. '
' → logprob: -8.3955717086792
    8. ' (' → logprob: -8.5205717086792
    9. '1' → logprob: -8.7705717086792
    10. '(
' → logprob: -9.0205717086792

Token 1280: ' sur' (ID: 1512)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16517895460128784
    2. 'sur' → logprob: -2.2901790142059326
    3. ',' → logprob: -3.7901790142059326
    4. 'dans' → logprob: -4.4151787757873535
    5. 'in' → logprob: -6.0401787757873535
    6. ' dans' → logprob: -6.2901787757873535
    7. ' sur' → logprob: -6.2901787757873535
    8. '```' → logprob: -6.6651787757873535
    9. '=' → logprob: -6.7901787757873535
    10. 'en' → logprob: -6.9151787757873535

Token 1281: ' une' (ID: 2463)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.39777231216430664
    2. '1' → logprob: -1.5227723121643066
    3. 'un' → logprob: -2.2727723121643066
    4. 'l' → logprob: -6.147772312164307
    5. 'x' → logprob: -7.022772312164307
    6. '   ' → logprob: -7.147772312164307
    7. 'la' → logprob: -7.772772312164307
    8. 'exact' → logprob: -7.772772312164307
    9. ' une' → logprob: -8.022771835327148
    10. 's' → logprob: -8.147771835327148

Token 1282: ' axe' (ID: 105247)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.31470707058906555
    2. 'axe' → logprob: -2.189707040786743
    3. 'coord' → logprob: -2.689707040786743
    4. 'x' → logprob: -3.189707040786743
    5. '(' → logprob: -4.439707279205322
    6. '(x' → logprob: -4.564707279205322
    7. ' seule' → logprob: -4.689707279205322
    8. 'unique' → logprob: -5.314707279205322
    9. 'single' → logprob: -5.439707279205322
    10. 'uni' → logprob: -5.939707279205322

Token 1283: ' et' (ID: 859)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14560621976852417
    2. 'for' → logprob: -3.145606279373169
    3. ',' → logprob: -3.770606279373169
    4. 'sur' → logprob: -4.27060604095459
    5. 'dx' → logprob: -4.52060604095459
    6. 'dans' → logprob: -4.52060604095459
    7. 'x' → logprob: -5.14560604095459
    8. 'en' → logprob: -5.39560604095459
    9. '   ' → logprob: -5.39560604095459
    10. '           ' → logprob: -5.77060604095459

Token 1284: ' mêmes' (ID: 71634)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5453951358795166
    2. 'r' → logprob: -1.2953951358795166
    3. 'auc' → logprob: -3.0453951358795166
    4. 'exact' → logprob: -3.6703951358795166
    5. 'se' → logprob: -4.1703948974609375
    6. '   ' → logprob: -4.4203948974609375
    7. 'z' → logprob: -4.6703948974609375
    8. 'pas' → logprob: -4.6703948974609375
    9. '(' → logprob: -5.6703948974609375
    10. 'les' → logprob: -5.7953948974609375

Token 1285: ' coord' (ID: 25819)
  Prédit: 'coord'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coord' → logprob: -0.15792320668697357
    2. 'coords' → logprob: -2.4079232215881348
    3. ' coordonnées' → logprob: -4.782923221588135
    4. 'x' → logprob: -4.782923221588135
    5. ',' → logprob: -5.032923221588135
    6. '(coord' → logprob: -5.282923221588135
    7. '(x' → logprob: -5.282923221588135
    8. '   ' → logprob: -5.407923221588135
    9. 'co' → logprob: -5.782923221588135
    10. 'coordinates' → logprob: -6.032923221588135

Token 1286: ' sur' (ID: 1512)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.074113130569458
    2. 'onnées' → logprob: -1.074113130569458
    3. '       ' → logprob: -2.199113130569458
    4. 'nées' → logprob: -2.949113130569458
    5. '               ' → logprob: -3.449113130569458
    6. 'x' → logprob: -3.824113130569458
    7. '   ' → logprob: -4.324112892150879
    8. 'onnée' → logprob: -4.824112892150879
    9. '(x' → logprob: -4.949112892150879
    10. '          ' → logprob: -5.074112892150879

Token 1287: ' les' (ID: 1341)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.6910274624824524
    2. 'les' → logprob: -0.9410274624824524
    3. '1' → logprob: -2.4410274028778076
    4. 'une' → logprob: -4.816027641296387
    5. 'un' → logprob: -4.941027641296387
    6. 'aut' → logprob: -6.316027641296387
    7. '```' → logprob: -7.316027641296387
    8. 'c' → logprob: -7.941027641296387
    9. 't' → logprob: -7.941027641296387
    10. '(' → logprob: -7.941027641296387

Token 1288: ' deux' (ID: 10301)
  Prédit: 'aut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aut' → logprob: -0.3656215965747833
    2. 'de' → logprob: -1.240621566772461
    3. '2' → logprob: -4.115621566772461
    4. ' deux' → logprob: -8.490621566772461
    5. ' ' → logprob: -8.990621566772461
    6. '3' → logprob: -9.740621566772461
    7. '   ' → logprob: -9.740621566772461
    8. 'other' → logprob: -10.240621566772461
    9. 'aux' → logprob: -10.240621566772461
    10. 'tro' → logprob: -10.365621566772461

Token 1289: ' autres' (ID: 18701)
  Prédit: 'axes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'axes' → logprob: -0.5137157440185547
    2. '       ' → logprob: -1.6387157440185547
    3. 'x' → logprob: -2.1387157440185547
    4. 'for' → logprob: -3.0137157440185547
    5. 'axe' → logprob: -4.763715744018555
    6. 'ax' → logprob: -4.888715744018555
    7. 'axis' → logprob: -5.388715744018555
    8. '
' → logprob: -5.638715744018555
    9. 'dx' → logprob: -6.013715744018555
    10. ',' → logprob: -6.138715744018555

Token 1290: ' axes' (ID: 51760)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.930996298789978
    2. 'adj' → logprob: -1.180996298789978
    3. '
' → logprob: -1.805996298789978
    4. 'graph' → logprob: -2.0559964179992676
    5. 'edges' → logprob: -5.805996417999268
    6. '        
' → logprob: -6.555996417999268
    7. '```' → logprob: -6.805996417999268
    8. '   ' → logprob: -7.930996417999268
    9. 'neighbors' → logprob: -9.05599594116211
    10. '_adj' → logprob: -9.55599594116211

Token 1291: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.030908724293112755
    2. '
' → logprob: -3.5309088230133057
    3. '        
' → logprob: -7.655908584594727
    4. 'adj' → logprob: -7.905908584594727
    5. '```' → logprob: -8.905908584594727
    6. 'graph' → logprob: -9.280908584594727
    7. 'edges' → logprob: -10.530908584594727
    8. 'neighbors' → logprob: -10.655908584594727
    9. '   ' → logprob: -11.280908584594727
    10. 'import' → logprob: -12.405908584594727

Token 1292: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04973169416189194
    2. '
' → logprob: -3.174731731414795
    3. '        
' → logprob: -5.674731731414795
    4. 'adj' → logprob: -6.049731731414795
    5. 'neighbors' → logprob: -8.424731254577637
    6. '```' → logprob: -8.549731254577637
    7. 'graph' → logprob: -8.799731254577637
    8. 'edges' → logprob: -8.799731254577637
    9. '    
' → logprob: -10.174731254577637
    10. '   ' → logprob: -10.299731254577637

Token 1293: ' adj' (ID: 20251)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' (adapté à ' adj') → logprob: -0.4743407964706421
    2. '       ' → logprob: -1.224340796470642
    3. 'graph' → logprob: -2.5993409156799316
    4. 'dire' → logprob: -5.224340915679932
    5. 'neighbors' → logprob: -6.099340915679932
    6. 'edges' → logprob: -6.724340915679932
    7. '
' → logprob: -8.849340438842773
    8. 'dirs' → logprob: -8.974340438842773
    9. '        
' → logprob: -9.099340438842773
    10. '```' → logprob: -9.349340438842773

Token 1294: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12698447704315186
    2. '=' → logprob: -2.1269845962524414
    3. '=[' → logprob: -10.251984596252441
    4. '=[]' → logprob: -11.751984596252441
    5. 'acency' → logprob: -12.751984596252441
    6. ':' → logprob: -13.126984596252441
    7. '[' → logprob: -13.251984596252441
    8. '=[]
' → logprob: -13.376984596252441
    9. '={}' → logprob: -13.626984596252441
    10. '=[[' → logprob: -13.876984596252441

Token 1295: ' [[]' (ID: 182908)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0008151084766723216
    2. 'default' → logprob: -7.500814914703369
    3. ' [[]' → logprob: -8.250815391540527
    4. ' [' → logprob: -14.500815391540527
    5. '[n' → logprob: -15.875815391540527
    6. '{' → logprob: -16.12581443786621
    7. '   ' → logprob: -16.25081443786621
    8. ' defaultdict' → logprob: -16.75081443786621
    9. '[[' → logprob: -17.12581443786621
    10. '[len' → logprob: -17.25081443786621

Token 1296: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.15148472785949707
    2. ' for' → logprob: -2.026484727859497
    3. '(n' → logprob: -5.526484489440918
    4. '       ' → logprob: -5.901484489440918
    5. ']' → logprob: -7.026484489440918
    6. '(' → logprob: -7.901484489440918
    7. '           ' → logprob: -8.526484489440918
    8. '=' → logprob: -8.776484489440918
    9. '   ' → logprob: -9.651484489440918
    10. '.append' → logprob: -9.776484489440918

Token 1297: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.006049551069736481
    2. '_range' → logprob: -5.631049633026123
    3. 'range' → logprob: -6.756049633026123
    4. ' range' → logprob: -7.131049633026123
    5. '_i' → logprob: -7.881049633026123
    6. 'i' → logprob: -9.506049156188965
    7. 'in' → logprob: -12.131049156188965
    8. ' _' → logprob: -12.256049156188965
    9. ' in' → logprob: -12.756049156188965
    10. '_x' → logprob: -12.756049156188965

Token 1298: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.06371048837900162
    2. 'range' → logprob: -3.0637104511260986
    3. ' in' → logprob: -4.313710689544678
    4. 'i' → logprob: -6.688710689544678
    5. ' range' → logprob: -7.938710689544678
    6. '_' → logprob: -11.18871021270752
    7. 'n' → logprob: -12.81371021270752
    8. ' ' → logprob: -12.93871021270752
    9. 'x' → logprob: -13.56371021270752
    10. ' i' → logprob: -14.18871021270752

Token 1299: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0002613358374219388
    2. ' range' → logprob: -8.250261306762695
    3. '_range' → logprob: -17.625261306762695
    4. '   ' → logprob: -17.750261306762695
    5. '_' → logprob: -18.250261306762695
    6. '(range' → logprob: -18.750261306762695
    7. '	range' → logprob: -19.875261306762695
    8. 'i' → logprob: -20.250261306762695
    9. '
' → logprob: -20.375261306762695
    10. ' ' → logprob: -20.750261306762695

Token 1300: '(n' (ID: 2406)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -2.696889623621246e-06
    2. '(n' → logprob: -13.50000286102295
    3. ' n' → logprob: -13.75000286102295
    4. '   ' → logprob: -16.375001907348633
    5. '       ' → logprob: -16.875001907348633
    6. '	n' → logprob: -17.750001907348633
    7. '           ' → logprob: -17.875001907348633
    8. ')n' → logprob: -19.250001907348633
    9. '_n' → logprob: -21.125001907348633
    10. '
' → logprob: -21.250001907348633

Token 1301: ')]

' (ID: 56882)
  Prédit: ')]
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]
' → logprob: -0.3905760645866394
    2. ')]' → logprob: -1.1405761241912842
    3. '       ' → logprob: -5.890575885772705
    4. ')]

' → logprob: -7.140575885772705
    5. ')]
' → logprob: -9.140576362609863
    6. '   ' → logprob: -11.140576362609863
    7. ')' → logprob: -11.390576362609863
    8. ' )' → logprob: -12.640576362609863
    9. '           ' → logprob: -14.265576362609863
    10. ']' → logprob: -14.265576362609863

Token 1302: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.044046442955732346
    2. 'for' → logprob: -3.169046401977539
    3. 'dire' → logprob: -7.669046401977539
    4. ' for' → logprob: -8.294046401977539
    5. '	for' → logprob: -9.169046401977539
    6. '```' → logprob: -9.919046401977539
    7. '   ' → logprob: -10.044046401977539
    8. '
' → logprob: -10.169046401977539
    9. '        
' → logprob: -10.419046401977539
    10. '	' → logprob: -10.419046401977539

Token 1303: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1603415161371231
    2. '       ' → logprob: -1.910341501235962
    3. ' for' → logprob: -9.785341262817383
    4. 'dire' → logprob: -9.910341262817383
    5. '	for' → logprob: -12.660341262817383
    6. '
' → logprob: -13.410341262817383
    7. '        
' → logprob: -13.410341262817383
    8. 'dirs' → logprob: -13.910341262817383
    9. '```' → logprob: -14.160341262817383
    10. 'positions' → logprob: -14.285341262817383

Token 1304: ' Pour' (ID: 13931)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.003215857082977891
    2. '       ' → logprob: -6.003215789794922
    3. 'dire' → logprob: -7.503215789794922
    4. 'offset' → logprob: -9.628215789794922
    5. ' for' → logprob: -10.628215789794922
    6. 'axes' → logprob: -10.628215789794922
    7. 'dirs' → logprob: -10.753215789794922
    8. 'dx' → logprob: -11.003215789794922
    9. 'd' → logprob: -11.628215789794922
    10. '
' → logprob: -11.878215789794922

Token 1305: ' accél' (ID: 152966)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5709844827651978
    2. 'x' → logprob: -1.0709844827651978
    3. '(x' → logprob: -3.570984363555908
    4. 'coord' → logprob: -3.570984363555908
    5. 'dx' → logprob: -4.070984363555908
    6. 'd' → logprob: -5.320984363555908
    7. 'delta' → logprob: -5.820984363555908
    8. '(i' → logprob: -6.445984363555908
    9. '_i' → logprob: -6.695984363555908
    10. 'pos' → logprob: -6.820984363555908

Token 1306: 'érer' (ID: 29097)
  Prédit: 'érer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érer' → logprob: -0.004457416478544474
    2. 'er' → logprob: -6.004457473754883
    3. 'rer' → logprob: -7.129457473754883
    4. 'erer' → logprob: -7.254457473754883
    5. '       ' → logprob: -8.254457473754883
    6. 'éré' → logprob: -8.879457473754883
    7. '           ' → logprob: -10.754457473754883
    8. 'ération' → logprob: -11.004457473754883
    9. 'é' → logprob: -12.379457473754883
    10. 'érés' → logprob: -12.379457473754883

Token 1307: ' la' (ID: 557)
  Prédit: 'coord'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coord' → logprob: -0.27137094736099243
    2. 'coords' → logprob: -1.8963708877563477
    3. 'for' → logprob: -3.2713708877563477
    4. 'pos' → logprob: -3.7713708877563477
    5. '       ' → logprob: -4.771370887756348
    6. 'positions' → logprob: -5.021370887756348
    7. 'from' → logprob: -5.396370887756348
    8. 'index' → logprob: -6.646370887756348
    9. 'coordinate' → logprob: -6.896370887756348
    10. 'x' → logprob: -7.021370887756348

Token 1308: ' recherche' (ID: 24975)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.48278993368148804
    2. 'coords' → logprob: -0.982789933681488
    3. '#' → logprob: -5.732789993286133
    4. 'coord' → logprob: -6.732789993286133
    5. 'x' → logprob: -6.732789993286133
    6. 'positions' → logprob: -6.857789993286133
    7. 'pos' → logprob: -7.732789993286133
    8. 'i' → logprob: -7.857789993286133
    9. 'c' → logprob: -8.107789993286133
    10. 'cube' → logprob: -8.732789993286133

Token 1309: ' de' (ID: 334)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07096666842699051
    2. 'for' → logprob: -2.8209667205810547
    3. 'coords' → logprob: -5.070966720581055
    4. 'positions' → logprob: -6.695966720581055
    5. ' for' → logprob: -7.820966720581055
    6. 'coord' → logprob: -8.320966720581055
    7. 'dict' → logprob: -8.695966720581055
    8. 'pos' → logprob: -9.070966720581055
    9. 'points' → logprob: -9.445966720581055
    10. 'x' → logprob: -9.695966720581055

Token 1310: ' voisins' (ID: 166720)
  Prédit: 'coords'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coords' → logprob: -0.6082599759101868
    2. 'coord' → logprob: -1.233259916305542
    3. 'pos' → logprob: -2.233259916305542
    4. 'neighbors' → logprob: -3.858259916305542
    5. 'x' → logprob: -4.233260154724121
    6. 'positions' → logprob: -4.608260154724121
    7. 'i' → logprob: -5.608260154724121
    8. 'adj' → logprob: -6.108260154724121
    9. 'c' → logprob: -6.858260154724121
    10. '(' → logprob: -7.233260154724121

Token 1311: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.31436407566070557
    2. 'for' → logprob: -1.4393640756607056
    3. 'coord' → logprob: -4.439363956451416
    4. 'coords' → logprob: -4.564363956451416
    5. 'positions' → logprob: -5.689363956451416
    6. 'pos' → logprob: -6.689363956451416
    7. 'from' → logprob: -7.189363956451416
    8. 'index' → logprob: -7.314363956451416
    9. 'dict' → logprob: -7.564363956451416
    10. 'coordinate' → logprob: -7.689363956451416

Token 1312: ' on' (ID: 402)
  Prédit: 'coord'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coord' → logprob: -0.4301089644432068
    2. 'coords' → logprob: -1.4301090240478516
    3. 'for' → logprob: -2.9301090240478516
    4. 'pos' → logprob: -3.4301090240478516
    5. 'positions' → logprob: -4.305109024047852
    6. '       ' → logprob: -5.930109024047852
    7. 'points' → logprob: -6.305109024047852
    8. 'from' → logprob: -6.430109024047852
    9. 'coordinate' → logprob: -6.430109024047852
    10. ' coord' → logprob: -7.805109024047852

Token 1313: ' index' (ID: 3472)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.014064891263842583
    2. '#' → logprob: -5.014064788818359
    3. 'import' → logprob: -6.014064788818359
    4. '       ' → logprob: -6.639064788818359
    5. 'from' → logprob: -6.889064788818359
    6. 'def' → logprob: -8.01406478881836
    7. ' for' → logprob: -8.13906478881836
    8. 'importe' → logprob: -9.01406478881836
    9. 'continue' → logprob: -9.13906478881836
    10. '...' → logprob: -9.13906478881836

Token 1314: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.8450385332107544
    2. 'coords' → logprob: -0.8450385332107544
    3. '=' → logprob: -3.720038414001465
    4. 'er' → logprob: -3.970038414001465
    5. 'positions' → logprob: -3.970038414001465
    6. 'adj' → logprob: -4.345038414001465
    7. '       ' → logprob: -4.470038414001465
    8. ' =' → logprob: -4.595038414001465
    9. 'for' → logprob: -5.220038414001465
    10. '{}' → logprob: -5.970038414001465

Token 1315: ' les' (ID: 1341)
  Prédit: 'coords'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coords' → logprob: -0.020100103691220284
    2. 'x' → logprob: -4.895100116729736
    3. 'default' → logprob: -5.895100116729736
    4. '{
' → logprob: -5.895100116729736
    5. 'par' → logprob: -6.645100116729736
    6. 'coord' → logprob: -7.020100116729736
    7. '{x' → logprob: -7.395100116729736
    8. 'for' → logprob: -7.520100116729736
    9. '
' → logprob: -7.520100116729736
    10. '{' → logprob: -7.520100116729736

Token 1316: ' positions' (ID: 15897)
  Prédit: 'coords'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coords' → logprob: -0.15233033895492554
    2. 'x' → logprob: -2.2773303985595703
    3. 'positions' → logprob: -3.6523303985595703
    4. 'coord' → logprob: -5.27733039855957
    5. 'points' → logprob: -5.77733039855957
    6. 'for' → logprob: -6.02733039855957
    7. 'pos' → logprob: -7.52733039855957
    8. 'c' → logprob: -7.65233039855957
    9. 'xs' → logprob: -8.15233039855957
    10. 'from' → logprob: -8.52733039855957

Token 1317: ' par' (ID: 686)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.2937161922454834
    2. 'x' → logprob: -1.4187161922454834
    3. 'par' → logprob: -1.4187161922454834
    4. 'by' → logprob: -2.5437161922454834
    5. 'coord' → logprob: -3.0437161922454834
    6. 'coords' → logprob: -3.5437161922454834
    7. 'index' → logprob: -3.6687161922454834
    8. 'axis' → logprob: -4.1687164306640625
    9. 'positions' → logprob: -5.0437164306640625
    10. 'axes' → logprob: -5.0437164306640625

Token 1318: ' coord' (ID: 25819)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.03324796259403229
    2. 'coord' → logprob: -4.158247947692871
    3. 'coordinate' → logprob: -5.033247947692871
    4. 'dimension' → logprob: -5.283247947692871
    5. 'default' → logprob: -6.908247947692871
    6. 'coordinates' → logprob: -7.283247947692871
    7. 'axe' → logprob: -7.283247947692871
    8. 'xyz' → logprob: -7.408247947692871
    9. 'coords' → logprob: -7.533247947692871
    10. 'lambda' → logprob: -7.658247947692871

Token 1319: ' accessibles' (ID: 156723)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0033049776684492826
    2. '       ' → logprob: -6.753304958343506
    3. 'for' → logprob: -7.378304958343506
    4. '{x' → logprob: -8.128305435180664
    5. '
' → logprob: -8.753305435180664
    6. 'z' → logprob: -9.253305435180664
    7. 'xyz' → logprob: -9.253305435180664
    8. '{' → logprob: -9.253305435180664
    9. '```' → logprob: -9.378305435180664
    10. 'import' → logprob: -9.378305435180664

Token 1320: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.39682134985923767
    2. 'x' → logprob: -1.14682137966156
    3. 'par' → logprob: -5.27182149887085
    4. 'from' → logprob: -6.77182149887085
    5. 'coord' → logprob: -7.27182149887085
    6. '
' → logprob: -7.52182149887085
    7. 'by' → logprob: -7.77182149887085
    8. 'coords' → logprob: -7.89682149887085
    9. 'import' → logprob: -8.396821022033691
    10. '```' → logprob: -8.646821022033691

Token 1321: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012001125141978264
    2. 'x' → logprob: -7.001200199127197
    3. '```' → logprob: -9.126199722290039
    4. '        
' → logprob: -9.376199722290039
    5. '
' → logprob: -9.626199722290039
    6. 'from' → logprob: -10.751199722290039
    7. 'indexes' → logprob: -13.501199722290039
    8. 'import' → logprob: -13.751199722290039
    9. 'for' → logprob: -14.126199722290039
    10. '#' → logprob: -14.376199722290039

Token 1322: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5293936729431152
    2. 'x' → logprob: -1.0293936729431152
    3. 'from' → logprob: -3.2793936729431152
    4. 'coord' → logprob: -5.154393672943115
    5. 'coords' → logprob: -5.654393672943115
    6. 'xs' → logprob: -5.779393672943115
    7. 'index' → logprob: -6.904393672943115
    8. 'by' → logprob: -7.029393672943115
    9. 'xp' → logprob: -8.279394149780273
    10. 'import' → logprob: -8.404394149780273

Token 1323: ' Comme' (ID: 53252)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.27168866991996765
    2. '       ' → logprob: -2.02168869972229
    3. 'coord' → logprob: -3.27168869972229
    4. 'coords' → logprob: -3.64668869972229
    5. 'index' → logprob: -4.021688461303711
    6. 'xs' → logprob: -4.896688461303711
    7. 'xyz' → logprob: -6.146688461303711
    8. 'axis' → logprob: -6.146688461303711
    9. 'from' → logprob: -6.271688461303711
    10. 'axes' → logprob: -6.521688461303711

Token 1324: ' s' (ID: 265)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5998579859733582
    2. 'coords' → logprob: -1.099858045578003
    3. 'coord' → logprob: -2.724858045578003
    4. 's' → logprob: -4.599857807159424
    5. '#' → logprob: -4.724857807159424
    6. 'len' → logprob: -4.724857807159424
    7. 'default' → logprob: -5.724857807159424
    8. 'pos' → logprob: -5.974857807159424
    9. '
' → logprob: -6.349857807159424
    10. 'xs' → logprob: -6.599857807159424

Token 1325: ' peut' (ID: 9216)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06651626527309418
    2. ' =' → logprob: -3.816516160964966
    3. '>' → logprob: -4.691516399383545
    4. 'is' → logprob: -5.441516399383545
    5. '!=' → logprob: -5.816516399383545
    6. '#' → logprob: -6.191516399383545
    7. 'for' → logprob: -6.316516399383545
    8. '
' → logprob: -6.441516399383545
    9. '```' → logprob: -6.566516399383545
    10. ' is' → logprob: -6.691516399383545

Token 1326: ' être' (ID: 9104)
  Prédit: 'var'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'var' → logprob: -0.15012958645820618
    2. 'vary' → logprob: -2.400129556655884
    3. 'être' → logprob: -3.400129556655884
    4. 'vari' → logprob: -4.900129795074463
    5. 'changer' → logprob: -5.775129795074463
    6. ' varier' → logprob: -5.775129795074463
    7. 'be' → logprob: -8.400129318237305
    8. '>' → logprob: -8.400129318237305
    9. 'avoir' → logprob: -8.525129318237305
    10. '#' → logprob: -8.525129318237305

Token 1327: ' grand' (ID: 6363)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.567881166934967
    2. 'plus' → logprob: -1.6928811073303223
    3. 'grand' → logprob: -1.6928811073303223
    4. 'diff' → logprob: -4.067881107330322
    5. 'sup' → logprob: -4.317881107330322
    6. 'variable' → logprob: -4.317881107330322
    7. 'any' → logprob: -5.192881107330322
    8. 'var' → logprob: -5.692881107330322
    9. 'import' → logprob: -6.067881107330322
    10. 'large' → logprob: -6.692881107330322

Token 1328: ',' (ID: 11)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.9161275625228882
    2. '       ' → logprob: -0.9161275625228882
    3. ',' → logprob: -2.4161276817321777
    4. 'index' → logprob: -3.2911276817321777
    5. 'coords' → logprob: -4.041127681732178
    6. '#' → logprob: -4.166127681732178
    7. '
' → logprob: -4.791127681732178
    8. 'coord' → logprob: -5.166127681732178
    9. 'indexes' → logprob: -5.166127681732178
    10. 'for' → logprob: -5.541127681732178

Token 1329: ' on' (ID: 402)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.8808929324150085
    2. 'coords' → logprob: -1.6308929920196533
    3. '       ' → logprob: -2.0058929920196533
    4. 'coord' → logprob: -2.6308929920196533
    5. 'index' → logprob: -2.8808929920196533
    6. '#' → logprob: -3.3808929920196533
    7. 'for' → logprob: -3.5058929920196533
    8. 'indices' → logprob: -4.380892753601074
    9. 'indexes' → logprob: -4.505892753601074
    10. 'axes' → logprob: -4.630892753601074

Token 1330: ' cherche' (ID: 52345)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.2406916618347168
    2. 'for' → logprob: -1.3656916618347168
    3. '       ' → logprob: -1.6156916618347168
    4. 'continue' → logprob: -1.6156916618347168
    5. 'from' → logprob: -4.115691661834717
    6. 'index' → logprob: -4.740691661834717
    7. '
' → logprob: -5.240691661834717
    8. '...' → logprob: -5.740691661834717
    9. 'import' → logprob: -5.740691661834717
    10. 'pour' → logprob: -5.865691661834717

Token 1331: ' uniquement' (ID: 65527)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.9869271516799927
    2. 'for' → logprob: -1.7369271516799927
    3. 'par' → logprob: -1.8619271516799927
    4. 'dans' → logprob: -2.361927032470703
    5. '       ' → logprob: -2.611927032470703
    6. 'des' → logprob: -3.736927032470703
    7. '```' → logprob: -3.861927032470703
    8. 'sur' → logprob: -4.736927032470703
    9. 'à' → logprob: -4.986927032470703
    10. 'pour' → logprob: -5.111927032470703

Token 1332: ' sur' (ID: 1512)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5037749409675598
    2. 'x' → logprob: -2.628774881362915
    3. '       ' → logprob: -3.128774881362915
    4. 'dx' → logprob: -3.253774881362915
    5. 'dire' → logprob: -3.378774881362915
    6. 'dans' → logprob: -3.378774881362915
    7. 'adj' → logprob: -3.503774881362915
    8. 'coord' → logprob: -3.753774881362915
    9. 'neighbors' → logprob: -4.003775119781494
    10. '   ' → logprob: -4.628775119781494

Token 1333: ' les' (ID: 1341)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.225666880607605
    2. '[-' → logprob: -1.225666880607605
    3. '[(' → logprob: -1.600666880607605
    4. '[
' → logprob: -1.850666880607605
    5. 'range' → logprob: -3.8506669998168945
    6. 'x' → logprob: -3.9756669998168945
    7. '[x' → logprob: -5.4756669998168945
    8. '(' → logprob: -6.4756669998168945
    9. '   ' → logprob: -6.6006669998168945
    10. '[[' → logprob: -6.6006669998168945

Token 1334: ' dimensions' (ID: 23995)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5154030919075012
    2. 'axes' → logprob: -2.3904030323028564
    3. '[
' → logprob: -2.3904030323028564
    4. '[' → logprob: -2.7654030323028564
    5. 'coords' → logprob: -3.1404030323028564
    6. '[-' → logprob: -3.5154030323028564
    7. '[x' → logprob: -3.8904030323028564
    8. 'dire' → logprob: -4.0154032707214355
    9. 'c' → logprob: -4.3904032707214355
    10. '[(' → logprob: -5.0154032707214355

Token 1335: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.4051430821418762
    2. 'for' → logprob: -1.5301430225372314
    3. '       ' → logprob: -2.5301430225372314
    4. 'coords' → logprob: -4.2801432609558105
    5. '#' → logprob: -4.9051432609558105
    6. 'coord' → logprob: -6.1551432609558105
    7. 'axes' → logprob: -6.4051432609558105
    8. 'dims' → logprob: -6.4051432609558105
    9. '
' → logprob: -6.6551432609558105
    10. '=' → logprob: -7.0301432609558105

Token 1336: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.3750948905944824
    2. '       ' → logprob: -1.3750948905944824
    3. 'for' → logprob: -1.5000948905944824
    4. ' =' → logprob: -2.7500948905944824
    5. '=' → logprob: -2.7500948905944824
    6. 'x' → logprob: -3.0000948905944824
    7. '
' → logprob: -3.2500948905944824
    8. '#' → logprob: -4.125094890594482
    9. 'coords' → logprob: -4.250094890594482
    10. ',
' → logprob: -5.500094890594482

Token 1337: ',z' (ID: 54920)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6821222305297852
    2. ',z' → logprob: -1.4321222305297852
    3. ',y' → logprob: -1.6821222305297852
    4. 'z' → logprob: -2.807122230529785
    5. 'y' → logprob: -6.557122230529785
    6. '
' → logprob: -6.682122230529785
    7. ',x' → logprob: -6.807122230529785
    8. 'et' → logprob: -6.932122230529785
    9. '=' → logprob: -7.432122230529785
    10. '       ' → logprob: -7.557122230529785

Token 1338: ' avec' (ID: 3937)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06849223375320435
    2. 'x' → logprob: -3.0684921741485596
    3. 'for' → logprob: -4.943492412567139
    4. 'index' → logprob: -5.943492412567139
    5. '
' → logprob: -6.068492412567139
    6. 'coords' → logprob: -6.568492412567139
    7. 'from' → logprob: -6.693492412567139
    8. 'import' → logprob: -7.193492412567139
    9. '```' → logprob: -7.318492412567139
    10. 'indexes' → logprob: -7.443492412567139

Token 1339: ' +' (ID: 659)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.2165268212556839
    2. '[' → logprob: -2.091526746749878
    3. '1' → logprob: -3.966526746749878
    4. '-' → logprob: -4.591526985168457
    5. 'offset' → logprob: -5.216526985168457
    6. '{-' → logprob: -5.466526985168457
    7. '[
' → logprob: -5.591526985168457
    8. '[(' → logprob: -5.591526985168457
    9. '{' → logprob: -5.716526985168457
    10. 's' → logprob: -5.966526985168457

Token 1340: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.870248019695282
    2. '[-' → logprob: -1.2452480792999268
    3. '-s' → logprob: -1.8702480792999268
    4. '-' → logprob: -2.2452480792999268
    5. '1' → logprob: -3.8702480792999268
    6. '[' → logprob: -5.245247840881348
    7. '(-' → logprob: -6.495247840881348
    8. '[
' → logprob: -6.620247840881348
    9. '[s' → logprob: -7.370247840881348
    10. '
' → logprob: -7.620247840881348

Token 1341: ' ou' (ID: 2031)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.34774693846702576
    2. 'for' → logprob: -1.3477469682693481
    3. '
' → logprob: -4.722746849060059
    4. ',' → logprob: -4.722746849060059
    5. 'x' → logprob: -5.347746849060059
    6. ' for' → logprob: -5.847746849060059
    7. '```' → logprob: -5.972746849060059
    8. '+' → logprob: -6.472746849060059
    9. '        
' → logprob: -7.472746849060059
    10. 'dx' → logprob: -8.222746849060059

Token 1342: ' -' (ID: 533)
  Prédit: '-s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-s' → logprob: -0.0001628956088097766
    2. ' -' → logprob: -9.125163078308105
    3. '-' → logprob: -10.000163078308105
    4. '-S' → logprob: -12.875163078308105
    5. ' ' → logprob: -13.125163078308105
    6. '0' → logprob: -13.250163078308105
    7. '−' → logprob: -14.500163078308105
    8. '-xs' → logprob: -14.875163078308105
    9. '```' → logprob: -15.250163078308105
    10. 's' → logprob: -15.500163078308105

Token 1343: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.019899824634194374
    2. '1' → logprob: -4.019899845123291
    3. '[s' → logprob: -7.144899845123291
    4. '[' → logprob: -7.519899845123291
    5. 'dire' → logprob: -9.644899368286133
    6. '(s' → logprob: -9.769899368286133
    7. '[(' → logprob: -10.269899368286133
    8. '   ' → logprob: -10.519899368286133
    9. '{s' → logprob: -10.519899368286133
    10. ' s' → logprob: -10.644899368286133

Token 1344: ' déplacement' (ID: 138449)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04229782149195671
    2. 'for' → logprob: -3.292297840118408
    3. '
' → logprob: -5.917297840118408
    4. '        
' → logprob: -7.167297840118408
    5. 'dire' → logprob: -8.04229736328125
    6. '```' → logprob: -9.41729736328125
    7. 'indices' → logprob: -10.04229736328125
    8. ' for' → logprob: -10.29229736328125
    9. '#' → logprob: -10.41729736328125
    10. 'offset' → logprob: -10.66729736328125

Token 1345: ' sur' (ID: 1512)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01041874848306179
    2. 'for' → logprob: -4.635418891906738
    3. '
' → logprob: -7.635418891906738
    4. '```' → logprob: -9.260418891906738
    5. '        
' → logprob: -10.260418891906738
    6. ' for' → logprob: -10.885418891906738
    7. 'dire' → logprob: -12.010418891906738
    8. 'from' → logprob: -12.135418891906738
    9. 'import' → logprob: -12.510418891906738
    10. 'indices' → logprob: -13.135418891906738

Token 1346: ' une' (ID: 2463)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.009313887916505337
    2. 'x' → logprob: -4.884314060211182
    3. '[' → logprob: -7.259314060211182
    4. '   ' → logprob: -8.509313583374023
    5. 'une' → logprob: -9.009313583374023
    6. '
' → logprob: -9.384313583374023
    7. '3' → logprob: -9.509313583374023
    8. '[-' → logprob: -9.509313583374023
    9. ' ' → logprob: -9.634313583374023
    10. '0' → logprob: -10.134313583374023

Token 1347: ' coord' (ID: 25819)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1604899168014526
    2. 'dimension' → logprob: -1.7854899168014526
    3. 'coord' → logprob: -1.9104899168014526
    4. 'axe' → logprob: -2.035490036010742
    5. '[' → logprob: -2.535490036010742
    6. 'axis' → logprob: -3.285490036010742
    7. 'dim' → logprob: -3.660490036010742
    8. '[
' → logprob: -3.785490036010742
    9. 'coordinate' → logprob: -3.910490036010742
    10. '   ' → logprob: -4.285490036010742

Token 1348: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016596943140029907
    2. 'for' → logprob: -4.266596794128418
    3. '
' → logprob: -6.141596794128418
    4. '        
' → logprob: -9.391596794128418
    5. 'indices' → logprob: -10.516596794128418
    6. 'dire' → logprob: -10.516596794128418
    7. ',' → logprob: -10.766596794128418
    8. 'positions' → logprob: -10.766596794128418
    9. '```' → logprob: -11.141596794128418
    10. ' for' → logprob: -11.266596794128418

Token 1349: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.051409680396318436
    2. 'for' → logprob: -3.0514097213745117
    3. '
' → logprob: -6.426409721374512
    4. 'dire' → logprob: -7.426409721374512
    5. '        
' → logprob: -7.676409721374512
    6. ' for' → logprob: -9.801409721374512
    7. 'offset' → logprob: -11.176409721374512
    8. '	for' → logprob: -11.301409721374512
    9. 'dirs' → logprob: -11.301409721374512
    10. '```' → logprob: -11.676409721374512

Token 1350: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.02106448821723461
    2. '       ' → logprob: -4.646064281463623
    3. 'offset' → logprob: -4.646064281463623
    4. 'dx' → logprob: -7.396064281463623
    5. 'axes' → logprob: -8.146064758300781
    6. 'dire' → logprob: -8.646064758300781
    7. 'dims' → logprob: -9.646064758300781
    8. 'coords' → logprob: -9.771064758300781
    9. 'd' → logprob: -9.896064758300781
    10. '```' → logprob: -10.021064758300781

Token 1351: ' Constru' (ID: 98396)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5030953884124756
    2. '       ' → logprob: -1.2530953884124756
    3. 'offset' → logprob: -2.3780953884124756
    4. 'axes' → logprob: -5.253095626831055
    5. 'dx' → logprob: -5.503095626831055
    6. 'dims' → logprob: -6.753095626831055
    7. 'coords' → logprob: -6.878095626831055
    8. 'x' → logprob: -7.003095626831055
    9. 'dire' → logprob: -7.253095626831055
    10. '#' → logprob: -7.628095626831055

Token 1352: 'isons' (ID: 47841)
  Prédit: 'ct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ct' → logprob: -0.7493258118629456
    2. 'cter' → logprob: -0.8743258118629456
    3. '       ' → logprob: -2.374325752258301
    4. 'iter' → logprob: -5.249325752258301
    5. 'ire' → logprob: -5.749325752258301
    6. 'cte' → logprob: -5.999325752258301
    7. 'ction' → logprob: -6.499325752258301
    8. '#' → logprob: -6.874325752258301
    9. 'cture' → logprob: -7.249325752258301
    10. '   ' → logprob: -7.624325752258301

Token 1353: ' un' (ID: 537)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6948879957199097
    2. 'pos' → logprob: -1.8198879957199097
    3. 'coord' → logprob: -1.8198879957199097
    4. 'from' → logprob: -2.944888114929199
    5. 'for' → logprob: -3.694888114929199
    6. 'default' → logprob: -3.819888114929199
    7. 'index' → logprob: -3.944888114929199
    8. '       ' → logprob: -4.069888114929199
    9. 'coords' → logprob: -4.944888114929199
    10. '   ' → logprob: -5.069888114929199

Token 1354: ' set' (ID: 920)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'default' → logprob: -0.6561490893363953
    2. 'from' → logprob: -1.03114914894104
    3. 'pos' → logprob: -2.65614914894104
    4. 'coord' → logprob: -3.40614914894104
    5. 'for' → logprob: -5.156148910522461
    6. 'index' → logprob: -5.531148910522461
    7. 'x' → logprob: -6.031148910522461
    8. 'd' → logprob: -6.406148910522461
    9. 'coords' → logprob: -6.656148910522461
    10. 'dict' → logprob: -6.656148910522461

Token 1355: ' pour' (ID: 1930)
  Prédit: 'coords'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coords' → logprob: -0.2697821259498596
    2. 'positions' → logprob: -2.269782066345215
    3. 'coord' → logprob: -2.769782066345215
    4. 'pos' → logprob: -2.894782066345215
    5. '       ' → logprob: -4.769782066345215
    6. 'set' → logprob: -6.644782066345215
    7. '(coords' → logprob: -6.644782066345215
    8. 'of' → logprob: -7.269782066345215
    9. ' =' → logprob: -7.394782066345215
    10. 'points' → logprob: -7.394782066345215

Token 1356: ' lookup' (ID: 37342)
  Prédit: 'coords'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coords' → logprob: -0.06272672116756439
    2. 'positions' → logprob: -3.5627267360687256
    3. 'pos' → logprob: -3.6877267360687256
    4. 'coord' → logprob: -5.4377264976501465
    5. 'lookup' → logprob: -6.6877264976501465
    6. 'fast' → logprob: -7.3127264976501465
    7. 'O' → logprob: -7.9377264976501465
    8. ' coords' → logprob: -8.187726974487305
    9. 'quick' → logprob: -8.687726974487305
    10. 'rapid' → logprob: -9.437726974487305

Token 1357: ' rapide' (ID: 44887)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.36425864696502686
    2. 'pos' → logprob: -1.9892586469650269
    3. 'coords' → logprob: -1.9892586469650269
    4. 'coord' → logprob: -3.8642587661743164
    5. 'points' → logprob: -5.489258766174316
    6. '```' → logprob: -6.239258766174316
    7. 'position' → logprob: -6.864258766174316
    8. '       ' → logprob: -6.989258766174316
    9. 'seen' → logprob: -7.239258766174316
    10. '   ' → logprob: -7.864258766174316

Token 1358: '
' (ID: 198)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.04418810456991196
    2. 'pos' → logprob: -3.9191880226135254
    3. 'coords' → logprob: -4.169188022613525
    4. 'points' → logprob: -5.919188022613525
    5. 'coord' → logprob: -6.419188022613525
    6. '       ' → logprob: -6.794188022613525
    7. 'seen' → logprob: -7.294188022613525
    8. 'visited' → logprob: -7.419188022613525
    9. 'position' → logprob: -7.919188022613525
    10. '   ' → logprob: -8.419188499450684

Token 1359: '       ' (ID: 309)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.3502303659915924
    2. '       ' → logprob: -2.1002304553985596
    3. 'pos' → logprob: -2.2252304553985596
    4. 'coords' → logprob: -3.1002304553985596
    5. 'coord' → logprob: -4.4752302169799805
    6. 'points' → logprob: -5.9752302169799805
    7. '   ' → logprob: -6.7252302169799805
    8. 'position' → logprob: -6.9752302169799805
    9. 'cube' → logprob: -7.1002302169799805
    10. 'visited' → logprob: -7.1002302169799805

Token 1360: ' pos' (ID: 1253)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.4259963929653168
    2. 'pos' (adapté à ' pos') → logprob: -1.3009964227676392
    3. 'coord' → logprob: -3.1759963035583496
    4. 'coords' → logprob: -3.8009963035583496
    5. 'points' → logprob: -5.05099630355835
    6. 'position' → logprob: -6.42599630355835
    7. '   ' → logprob: -6.67599630355835
    8. 'cube' → logprob: -7.92599630355835
    9. 'point' → logprob: -8.800996780395508
    10. 's' → logprob: -8.925996780395508

Token 1361: '_set' (ID: 5451)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.232933908700943
    2. '_set' → logprob: -2.48293399810791
    3. ' =' → logprob: -2.60793399810791
    4. 'set' → logprob: -3.23293399810791
    5. '=set' → logprob: -4.85793399810791
    6. 's' → logprob: -6.10793399810791
    7. '_positions' → logprob: -7.60793399810791
    8. '_to' → logprob: -8.48293399810791
    9. 'pos' → logprob: -9.48293399810791
    10. '   ' → logprob: -9.60793399810791

Token 1362: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0619862861931324
    2. '=' → logprob: -2.811986207962036
    3. '=set' → logprob: -10.936985969543457
    4. '={(' → logprob: -15.186985969543457
    5. '   ' → logprob: -15.436985969543457
    6. '=
' → logprob: -15.936985969543457
    7. '       ' → logprob: -16.311986923217773
    8. ' =
' → logprob: -16.311986923217773
    9. '={' → logprob: -17.811986923217773
    10. 'set' → logprob: -17.811986923217773

Token 1363: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.0009118211455643177
    2. ' set' → logprob: -7.000911712646484
    3. '{' → logprob: -15.125911712646484
    4. '       ' → logprob: -17.250911712646484
    5. '	set' → logprob: -17.250911712646484
    6. '   ' → logprob: -17.500911712646484
    7. '(set' → logprob: -17.750911712646484
    8. '=set' → logprob: -18.250911712646484
    9. 'pos' → logprob: -19.125911712646484
    10. ')set' → logprob: -21.125911712646484

Token 1364: '(coords' (ID: 151745)
  Prédit: '(coords'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(coords' → logprob: -0.07945665717124939
    2. 'coords' → logprob: -2.5794565677642822
    3. '       ' → logprob: -7.579456806182861
    4. ' coords' → logprob: -10.454456329345703
    5. '(coord' → logprob: -11.954456329345703
    6. '   ' → logprob: -12.579456329345703
    7. '           ' → logprob: -12.954456329345703
    8. '((' → logprob: -13.079456329345703
    9. '```' → logprob: -13.204456329345703
    10. '.coords' → logprob: -13.579456329345703

Token 1365: ')

' (ID: 1029)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.4860244691371918
    2. ')' → logprob: -0.9860244989395142
    3. '       ' → logprob: -4.486024379730225
    4. ')

' → logprob: -7.486024379730225
    5. '   ' → logprob: -10.736024856567383
    6. ')
' → logprob: -11.111024856567383
    7. '
' → logprob: -13.361024856567383
    8. ' )
' → logprob: -13.486024856567383
    9. ')


' → logprob: -13.486024856567383
    10. '      ' → logprob: -13.611024856567383

Token 1366: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23440730571746826
    2. 'for' → logprob: -1.6094073057174683
    3. '
' → logprob: -4.859407424926758
    4. '        
' → logprob: -7.234407424926758
    5. '```' → logprob: -8.109407424926758
    6. ' for' → logprob: -9.109407424926758
    7. '#' → logprob: -11.109407424926758
    8. '	for' → logprob: -11.109407424926758
    9. 'x' → logprob: -12.484407424926758
    10. 'dire' → logprob: -12.609407424926758

Token 1367: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03866765648126602
    2. 'for' (adapté à ' for') → logprob: -3.288667678833008
    3. '
' → logprob: -7.538667678833008
    4. '        
' → logprob: -9.663667678833008
    5. ' for' → logprob: -11.288667678833008
    6. 'dire' → logprob: -12.163667678833008
    7. '```' → logprob: -12.663667678833008
    8. '	for' → logprob: -13.038667678833008
    9. '   ' → logprob: -13.038667678833008
    10. '#' → logprob: -13.788667678833008

Token 1368: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.006180356722325087
    2. ' i' → logprob: -5.506180286407471
    3. '   ' → logprob: -6.506180286407471
    4. 'u' → logprob: -8.256180763244629
    5. 'x' → logprob: -8.506180763244629
    6. '(i' → logprob: -10.006180763244629
    7. '       ' → logprob: -10.631180763244629
    8. ' (' → logprob: -10.756180763244629
    9. '0' → logprob: -10.881180763244629
    10. 'idx' → logprob: -11.506180763244629

Token 1369: ',(' (ID: 27243)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06766780465841293
    2. 'in' → logprob: -3.3176677227020264
    3. ',' → logprob: -3.6926677227020264
    4. '       ' → logprob: -6.6926679611206055
    5. '   ' → logprob: -7.4426679611206055
    6. '=' → logprob: -7.8176679611206055
    7. '0' → logprob: -7.9426679611206055
    8. ' ,' → logprob: -7.9426679611206055
    9. ' =' → logprob: -8.192667961120605
    10. ':
' → logprob: -8.567667961120605

Token 1370: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00011844364780699834
    2. 'coords' → logprob: -10.000118255615234
    3. '       ' → logprob: -10.625118255615234
    4. '   ' → logprob: -11.625118255615234
    5. ')x' → logprob: -11.625118255615234
    6. 'xi' → logprob: -11.625118255615234
    7. ')' → logprob: -11.875118255615234
    8. ' x' → logprob: -12.500118255615234
    9. '           ' → logprob: -12.875118255615234
    10. '(x' → logprob: -13.500118255615234

Token 1371: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.004699022509157658
    2. ',' → logprob: -5.379699230194092
    3. ' ,' → logprob: -9.504698753356934
    4. ',x' → logprob: -13.504698753356934
    5. '-' → logprob: -14.129698753356934
    6. ',
' → logprob: -14.379698753356934
    7. '   ' → logprob: -14.629698753356934
    8. ' ' → logprob: -15.004698753356934
    9. ',Y' → logprob: -15.754698753356934
    10. ',w' → logprob: -16.12969970703125

Token 1372: ',z' (ID: 54920)
  Prédit: ',z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',z' → logprob: -0.000522650487255305
    2. ',' → logprob: -7.875522613525391
    3. ',y' → logprob: -9.25052261352539
    4. ',x' → logprob: -10.62552261352539
    5. ',w' → logprob: -11.00052261352539
    6. ' ,' → logprob: -12.87552261352539
    7. 'z' → logprob: -13.87552261352539
    8. ',u' → logprob: -14.50052261352539
    9. ',Z' → logprob: -14.62552261352539
    10. ',j' → logprob: -15.50052261352539

Token 1373: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.894790981779806e-05
    2. ' )' → logprob: -10.750048637390137
    3. '   ' → logprob: -11.125048637390137
    4. '       ' → logprob: -12.375048637390137
    5. ')
' → logprob: -12.500048637390137
    6. '):
' → logprob: -13.500048637390137
    7. ' in' → logprob: -14.250048637390137
    8. '),' → logprob: -14.750048637390137
    9. '  ' → logprob: -15.375048637390137
    10. '):' → logprob: -15.625048637390137

Token 1374: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0951656922698021
    2. 'in' → logprob: -3.595165729522705
    3. 'for' → logprob: -3.595165729522705
    4. ':' → logprob: -3.970165729522705
    5. ' for' → logprob: -5.220165729522705
    6. '       ' → logprob: -5.845165729522705
    7. ':
' → logprob: -5.845165729522705
    8. '   ' → logprob: -5.845165729522705
    9. ',' → logprob: -6.220165729522705
    10. ' ' → logprob: -8.970165252685547

Token 1375: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.011872662231326103
    2. 'coords' → logprob: -5.0118727684021
    3. ' enumerate' → logprob: -5.3868727684021
    4. 'pos' → logprob: -7.8868727684021
    5. 'range' → logprob: -9.386872291564941
    6. 'in' → logprob: -10.136872291564941
    7. '   ' → logprob: -11.136872291564941
    8. '[(' → logprob: -11.261872291564941
    9. 'coordinates' → logprob: -11.886872291564941
    10. ' ' → logprob: -12.511872291564941

Token 1376: '(coords' (ID: 151745)
  Prédit: 'coords'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coords' → logprob: -0.0007491135620512068
    2. ' coords' → logprob: -7.500749111175537
    3. '(coords' → logprob: -8.750749588012695
    4. ')' → logprob: -11.375749588012695
    5. '   ' → logprob: -11.375749588012695
    6. 'coordinates' → logprob: -12.375749588012695
    7. 'pos' → logprob: -12.500749588012695
    8. '       ' → logprob: -13.000749588012695
    9. 'coord' → logprob: -13.375749588012695
    10. '           ' → logprob: -14.000749588012695

Token 1377: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.006577758118510246
    2. '       ' → logprob: -5.756577968597412
    3. '):' → logprob: -5.881577968597412
    4. '           ' → logprob: -7.506577968597412
    5. '):
' → logprob: -10.631577491760254
    6. '   ' → logprob: -11.506577491760254
    7. ':
' → logprob: -12.131577491760254
    8. ':' → logprob: -12.631577491760254
    9. '          ' → logprob: -13.006577491760254
    10. ')' → logprob: -13.381577491760254

Token 1378: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0012648787815123796
    2. '   ' → logprob: -6.751265048980713
    3. '```' → logprob: -10.501264572143555
    4. 'for' → logprob: -10.626264572143555
    5. '	       ' → logprob: -11.126264572143555
    6. ' for' → logprob: -11.376264572143555
    7. '       ' → logprob: -11.376264572143555
    8. '	   ' → logprob: -13.626264572143555
    9. '            
' → logprob: -14.376264572143555
    10. '         ' → logprob: -14.751264572143555

Token 1379: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.048891305923461914
    2. 'for' → logprob: -3.048891305923462
    3. ' for' → logprob: -8.548891067504883
    4. '   ' → logprob: -9.548891067504883
    5. '       ' → logprob: -10.298891067504883
    6. '	for' → logprob: -13.423891067504883
    7. '               ' → logprob: -13.548891067504883
    8. '	       ' → logprob: -13.923891067504883
    9. '		' → logprob: -14.548891067504883
    10. ' ' → logprob: -15.423891067504883

Token 1380: ' Tester' (ID: 106986)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.005753391422331333
    2. '           ' → logprob: -5.255753517150879
    3. '       ' → logprob: -7.755753517150879
    4. ' for' → logprob: -9.505753517150879
    5. '	for' → logprob: -11.630753517150879
    6. '   ' → logprob: -12.255753517150879
    7. '               ' → logprob: -14.130753517150879
    8. '	       ' → logprob: -14.630753517150879
    9. 'dire' → logprob: -14.755753517150879
    10. '		' → logprob: -15.130753517150879

Token 1381: ' voisins' (ID: 166720)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.027488267049193382
    2. '           ' → logprob: -4.2774882316589355
    3. '(x' → logprob: -5.6524882316589355
    4. ' for' → logprob: -5.6524882316589355
    5. 'dx' → logprob: -5.9024882316589355
    6. '[(' → logprob: -7.2774882316589355
    7. 'x' → logprob: -7.5274882316589355
    8. '   ' → logprob: -7.6524882316589355
    9. '(' → logprob: -8.027488708496094
    10. 'dire' → logprob: -8.027488708496094

Token 1382: ' en' (ID: 469)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6054657697677612
    2. ' for' → logprob: -1.1054657697677612
    3. 'for' → logprob: -2.105465888977051
    4. '[' → logprob: -7.480465888977051
    5. '[
' → logprob: -8.85546588897705
    6. '	for' → logprob: -8.98046588897705
    7. '            
' → logprob: -9.10546588897705
    8. '[-' → logprob: -9.98046588897705
    9. '	       ' → logprob: -10.23046588897705
    10. '		' → logprob: -10.23046588897705

Token 1383: ' dé' (ID: 2393)
  Prédit: '[x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.27900615334510803
    2. '[(' → logprob: -1.9040061235427856
    3. '(x' → logprob: -2.654006242752075
    4. '[-' → logprob: -4.529006004333496
    5. '[' → logprob: -4.779006004333496
    6. '(-' → logprob: -6.779006004333496
    7. 'for' → logprob: -6.904006004333496
    8. 'x' → logprob: -7.279006004333496
    9. '(' → logprob: -7.404006004333496
    10. '[
' → logprob: -7.779006004333496

Token 1384: 'cal' (ID: 5842)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.5428413152694702
    2. '[-' → logprob: -1.6678413152694702
    3. '[(' → logprob: -2.2928414344787598
    4. 'x' → logprob: -3.2928414344787598
    5. 'placements' → logprob: -3.5428414344787598
    6. '[' → logprob: -3.6678414344787598
    7. '[x' → logprob: -4.16784143447876
    8. 'fin' → logprob: -5.16784143447876
    9. '[
' → logprob: -5.91784143447876
    10. '(-' → logprob: -6.16784143447876

Token 1385: 'ant' (ID: 493)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.01584126241505146
    2. 'x' → logprob: -5.015841484069824
    3. 'ts' → logprob: -5.890841484069824
    4. '   ' → logprob: -6.765841484069824
    5. 'cal' → logprob: -6.890841484069824
    6. 'tx' → logprob: -7.265841484069824
    7. '(x' → logprob: -7.390841484069824
    8. 'tant' → logprob: -7.890841484069824
    9. '±' → logprob: -8.140841484069824
    10. '(t' → logprob: -8.265841484069824

Token 1386: ' coord' (ID: 25819)
  Prédit: '(-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.76453697681427
    2. '(' → logprob: -1.38953697681427
    3. '(x' → logprob: -1.88953697681427
    4. '           ' → logprob: -2.7645368576049805
    5. 'x' → logprob: -4.1395368576049805
    6. '[(' → logprob: -4.2645368576049805
    7. ' (' → logprob: -4.5145368576049805
    8. '   ' → logprob: -5.1395368576049805
    9. '1' → logprob: -5.1395368576049805
    10. '-' → logprob: -5.6395368576049805

Token 1387: ' +-' (ID: 175886)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.035098671913147
    2. '           ' → logprob: -1.785098671913147
    3. '[-' → logprob: -2.4100985527038574
    4. 'in' → logprob: -2.4100985527038574
    5. '(-' → logprob: -2.7850985527038574
    6. '[
' → logprob: -2.9100985527038574
    7. 'x' → logprob: -2.9100985527038574
    8. ' in' → logprob: -3.1600985527038574
    9. ' for' → logprob: -3.7850985527038574
    10. '[' → logprob: -4.285098552703857

Token 1388: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00024500858853571117
    2. ' s' → logprob: -9.750245094299316
    3. '(s' → logprob: -10.125245094299316
    4. '   ' → logprob: -10.125245094299316
    5. '[s' → logprob: -10.125245094299316
    6. '[' → logprob: -10.500245094299316
    7. '{s' → logprob: -10.625245094299316
    8. '(' → logprob: -12.500245094299316
    9. '{' → logprob: -13.000245094299316
    10. '1' → logprob: -13.000245094299316

Token 1389: ' sur' (ID: 1512)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0551983118057251
    2. ' for' → logprob: -3.1801981925964355
    3. 'for' → logprob: -4.4301981925964355
    4. '		' → logprob: -9.555198669433594
    5. ',' → logprob: -10.180198669433594
    6. '[' → logprob: -10.305198669433594
    7. '	       ' → logprob: -11.055198669433594
    8. '	for' → logprob: -11.180198669433594
    9. '       ' → logprob: -11.430198669433594
    10. '   ' → logprob: -12.305198669433594

Token 1390: ' chaque' (ID: 21194)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7178912162780762
    2. 'x' → logprob: -0.8428912162780762
    3. '[' → logprob: -2.592891216278076
    4. '3' → logprob: -6.467891216278076
    5. 'range' → logprob: -6.467891216278076
    6. '   ' → logprob: -6.967891216278076
    7. '[x' → logprob: -6.967891216278076
    8. '1' → logprob: -7.092891216278076
    9. ' ' → logprob: -8.842891693115234
    10. '[
' → logprob: -8.967891693115234

Token 1391: ' axe' (ID: 105247)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.30765625834465027
    2. '0' → logprob: -2.1826562881469727
    3. '(x' → logprob: -3.0576562881469727
    4. 'x' → logprob: -3.6826562881469727
    5. 'axis' → logprob: -3.6826562881469727
    6. '[' → logprob: -3.8076562881469727
    7. 'axe' → logprob: -4.807656288146973
    8. ' (' → logprob: -5.682656288146973
    9. 'dimension' → logprob: -5.807656288146973
    10. '(axis' → logprob: -5.932656288146973

Token 1392: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.015337172895669937
    2. 'for' → logprob: -4.265336990356445
    3. ' for' → logprob: -6.765336990356445
    4. '       ' → logprob: -12.015336990356445
    5. '		' → logprob: -12.140336990356445
    6. '               ' → logprob: -13.015336990356445
    7. ',' → logprob: -13.390336990356445
    8. '   ' → logprob: -13.515336990356445
    9. '	       ' → logprob: -13.890336990356445
    10. '	for' → logprob: -14.015336990356445

Token 1393: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00047928967978805304
    2. ' for' → logprob: -8.250479698181152
    3. 'for' → logprob: -8.625479698181152
    4. '               ' → logprob: -10.625479698181152
    5. '	       ' → logprob: -12.250479698181152
    6. '		' → logprob: -12.750479698181152
    7. '```' → logprob: -12.875479698181152
    8. '       ' → logprob: -13.625479698181152
    9. '   ' → logprob: -14.500479698181152
    10. '                   ' → logprob: -14.625479698181152

Token 1394: ' neighbors' (ID: 31655)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10129635035991669
    2. 'for' → logprob: -2.3512964248657227
    3. ' for' → logprob: -6.851296424865723
    4. '       ' → logprob: -11.851296424865723
    5. '		' → logprob: -11.976296424865723
    6. '   ' → logprob: -11.976296424865723
    7. '	for' → logprob: -12.226296424865723
    8. '               ' → logprob: -12.601296424865723
    9. '	       ' → logprob: -13.476296424865723
    10. '[' → logprob: -15.351296424865723

Token 1395: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.030071420595049858
    2. '=' → logprob: -3.655071496963501
    3. 'for' → logprob: -6.905071258544922
    4. '_x' → logprob: -7.155071258544922
    5. 'x' → logprob: -7.280071258544922
    6. '           ' → logprob: -8.030071258544922
    7. '=[' → logprob: -8.405071258544922
    8. '   ' → logprob: -9.030071258544922
    9. '=(' → logprob: -9.280071258544922
    10. '_offsets' → logprob: -9.405071258544922

Token 1396: ' [
' (ID: 4240)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.10029271990060806
    2. '[
' → logprob: -2.350292682647705
    3. '[' → logprob: -10.475293159484863
    4. '[((' → logprob: -10.475293159484863
    5. '[]
' → logprob: -11.100293159484863
    6. ' [(' → logprob: -11.600293159484863
    7. '   ' → logprob: -13.100293159484863
    8. '           ' → logprob: -13.600293159484863
    9. '[]' → logprob: -14.225293159484863
    10. '[x' → logprob: -14.350293159484863

Token 1397: '               ' (ID: 506)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.04565591365098953
    2. '           ' → logprob: -3.5456559658050537
    3. '               ' → logprob: -5.170655727386475
    4. '   ' → logprob: -5.295655727386475
    5. ' (' → logprob: -5.295655727386475
    6. '       ' → logprob: -10.170656204223633
    7. '(' → logprob: -11.295656204223633
    8. ' ' → logprob: -11.420656204223633
    9. '                   ' → logprob: -12.795656204223633
    10. '  ' → logprob: -13.045656204223633

Token 1398: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0014858200447633862
    2. ' (' → logprob: -7.126485824584961
    3. '           ' → logprob: -8.001485824584961
    4. '   ' → logprob: -8.001485824584961
    5. '       ' → logprob: -12.376485824584961
    6. '(' (adapté à ' (') → logprob: -12.626485824584961
    7. ' ' → logprob: -14.001485824584961
    8. '               ' → logprob: -14.001485824584961
    9. '  ' → logprob: -14.126485824584961
    10. '          ' → logprob: -14.626485824584961

Token 1399: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.0280383548888494e-06
    2. ' x' → logprob: -14.250000953674316
    3. '(x' → logprob: -15.000000953674316
    4. '   ' → logprob: -18.625001907348633
    5. ')x' → logprob: -19.875001907348633
    6. '{x' → logprob: -21.000001907348633
    7. '	x' → logprob: -21.125001907348633
    8. '           ' → logprob: -21.375001907348633
    9. '"x' → logprob: -21.500001907348633
    10. ''x' → logprob: -22.375001907348633

Token 1400: '+s' (ID: 155947)
  Prédit: '+s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+s' → logprob: -0.12601986527442932
    2. '+' → logprob: -2.3760199546813965
    3. '-s' → logprob: -4.5010199546813965
    4. ' +' → logprob: -4.7510199546813965
    5. ',' → logprob: -6.1260199546813965
    6. '+x' → logprob: -6.7510199546813965
    7. '-' → logprob: -7.2510199546813965
    8. 's' → logprob: -7.8760199546813965
    9. ' -' → logprob: -8.251019477844238
    10. ',s' → logprob: -8.376019477844238

Token 1401: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.1434183269739151
    2. ',' → logprob: -2.018418312072754
    3. ' ,' → logprob: -7.268418312072754
    4. '),' → logprob: -11.643418312072754
    5. ',
' → logprob: -11.768418312072754
    6. '           ' → logprob: -11.893418312072754
    7. '   ' → logprob: -12.393418312072754
    8. '  ' → logprob: -12.893418312072754
    9. '          ' → logprob: -13.018418312072754
    10. '       ' → logprob: -13.143418312072754

Token 1402: ',z' (ID: 54920)
  Prédit: ',z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',z' → logprob: -0.02688535861670971
    2. ',y' → logprob: -4.026885509490967
    3. ',' → logprob: -4.776885509490967
    4. ',x' → logprob: -8.901885032653809
    5. ',s' → logprob: -10.276885032653809
    6. '-' → logprob: -10.401885032653809
    7. ' ,' → logprob: -10.776885032653809
    8. 'z' → logprob: -11.276885032653809
    9. '   ' → logprob: -12.151885032653809
    10. '       ' → logprob: -12.276885032653809

Token 1403: '),
' (ID: 2313)
  Prédit: '),
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),
' → logprob: -0.09606253355741501
    2. '),' → logprob: -2.471062421798706
    3. '               ' → logprob: -5.596062660217285
    4. '),(' → logprob: -6.471062660217285
    5. ')' → logprob: -6.846062660217285
    6. '           ' → logprob: -7.471062660217285
    7. '                   ' → logprob: -9.846062660217285
    8. '),
' → logprob: -10.096062660217285
    9. ',' → logprob: -10.846062660217285
    10. ' ),
' → logprob: -10.846062660217285

Token 1404: '               ' (ID: 506)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.4914664328098297
    2. '               ' → logprob: -0.9914664030075073
    3. ' (' → logprob: -4.116466522216797
    4. '           ' → logprob: -7.616466522216797
    5. '              ' → logprob: -8.116466522216797
    6. '                   ' → logprob: -10.241466522216797
    7. '                ' → logprob: -10.241466522216797
    8. '             ' → logprob: -10.616466522216797
    9. '            ' → logprob: -10.991466522216797
    10. '   ' → logprob: -10.991466522216797

Token 1405: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.00115307851228863
    2. ' (' → logprob: -7.501152992248535
    3. '               ' → logprob: -7.501152992248535
    4. 'x' → logprob: -10.001152992248535
    5. '              ' → logprob: -13.876152992248535
    6. '   ' → logprob: -14.501152992248535
    7. '           ' → logprob: -15.126152992248535
    8. '                ' → logprob: -16.12615394592285
    9. '(' (adapté à ' (') → logprob: -16.50115394592285
    10. '                   ' → logprob: -16.50115394592285

Token 1406: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -4.36574100604048e-06
    2. '(x' → logprob: -12.500004768371582
    3. ' x' → logprob: -14.375004768371582
    4. '   ' → logprob: -20.125003814697266
    5. '               ' → logprob: -21.125003814697266
    6. ')x' → logprob: -21.125003814697266
    7. '"x' → logprob: -21.625003814697266
    8. '	x' → logprob: -21.875003814697266
    9. '           ' → logprob: -21.875003814697266
    10. '{x' → logprob: -22.000003814697266

Token 1407: '-s' (ID: 2011)
  Prédit: '-s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-s' → logprob: -0.00196110550314188
    2. ',' → logprob: -7.3769612312316895
    3. 's' → logprob: -7.3769612312316895
    4. ',y' → logprob: -7.7519612312316895
    5. ' -' → logprob: -8.751960754394531
    6. 'y' → logprob: -9.626960754394531
    7. '+s' → logprob: -11.001960754394531
    8. '   ' → logprob: -11.376960754394531
    9. '-' → logprob: -11.626960754394531
    10. ',s' → logprob: -12.626960754394531

Token 1408: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -5.2166411478538066e-05
    2. ',' → logprob: -10.000052452087402
    3. ' ,' → logprob: -12.000052452087402
    4. 'y' → logprob: -15.875052452087402
    5. '           ' → logprob: -16.125051498413086
    6. ',
' → logprob: -16.375051498413086
    7. '       ' → logprob: -16.625051498413086
    8. '               ' → logprob: -17.000051498413086
    9. ',z' → logprob: -17.000051498413086
    10. '   ' → logprob: -17.250051498413086

Token 1409: ',z' (ID: 54920)
  Prédit: ',z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',z' → logprob: -5.919942486798391e-05
    2. ',' → logprob: -10.500059127807617
    3. ',y' → logprob: -10.875059127807617
    4. 'z' → logprob: -12.125059127807617
    5. ',s' → logprob: -12.375059127807617
    6. ' ,' → logprob: -13.875059127807617
    7. '           ' → logprob: -14.625059127807617
    8. '               ' → logprob: -14.875059127807617
    9. '   ' → logprob: -15.250059127807617
    10. '       ' → logprob: -15.500059127807617

Token 1410: '),
' (ID: 2313)
  Prédit: '),
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),
' → logprob: -0.015875285491347313
    2. '               ' → logprob: -4.515875339508057
    3. '           ' → logprob: -5.890875339508057
    4. '),' → logprob: -6.265875339508057
    5. '              ' → logprob: -9.515874862670898
    6. '),(' → logprob: -10.515874862670898
    7. '          ' → logprob: -11.515874862670898
    8. '                   ' → logprob: -11.890874862670898
    9. '   ' → logprob: -12.265874862670898
    10. '),
' → logprob: -12.390874862670898

Token 1411: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.07895885407924652
    2. '(x' → logprob: -2.578958749771118
    3. ' (' → logprob: -9.953958511352539
    4. '           ' → logprob: -11.578958511352539
    5. '(' → logprob: -11.828958511352539
    6. '              ' → logprob: -12.953958511352539
    7. '                   ' → logprob: -13.453958511352539
    8. '   ' → logprob: -14.703958511352539
    9. '                ' → logprob: -15.328958511352539
    10. '             ' → logprob: -15.828958511352539

Token 1412: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.002859797328710556
    2. '               ' → logprob: -5.877859592437744
    3. ' (' → logprob: -9.877860069274902
    4. 'x' → logprob: -13.252860069274902
    5. '(' (adapté à ' (') → logprob: -14.377860069274902
    6. '              ' → logprob: -14.377860069274902
    7. '   ' → logprob: -15.252860069274902
    8. '                   ' → logprob: -15.377860069274902
    9. '           ' → logprob: -15.752860069274902
    10. '                ' → logprob: -16.502859115600586

Token 1413: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -9.968312951968983e-06
    2. ' x' → logprob: -12.000009536743164
    3. '(x' → logprob: -12.500009536743164
    4. '       ' → logprob: -19.125009536743164
    5. '   ' → logprob: -19.250009536743164
    6. 'y' → logprob: -19.250009536743164
    7. '	x' → logprob: -19.875009536743164
    8. '{x' → logprob: -19.875009536743164
    9. '           ' → logprob: -20.000009536743164
    10. '```' → logprob: -20.250009536743164

Token 1414: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -7.040457421680912e-05
    2. ',' → logprob: -9.875070571899414
    3. ' ,' → logprob: -11.875070571899414
    4. ',s' → logprob: -12.250070571899414
    5. ' ' → logprob: -12.750070571899414
    6. '   ' → logprob: -12.875070571899414
    7. 'y' → logprob: -14.750070571899414
    8. ',
' → logprob: -14.875070571899414
    9. '+' → logprob: -15.250070571899414
    10. '       ' → logprob: -15.625070571899414

Token 1415: '+s' (ID: 155947)
  Prédit: '+s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+s' → logprob: -0.0004752367385663092
    2. '+' → logprob: -8.00047492980957
    3. 's' → logprob: -9.12547492980957
    4. '+y' → logprob: -11.62547492980957
    5. '-s' → logprob: -12.50047492980957
    6. '   ' → logprob: -12.50047492980957
    7. ',s' → logprob: -12.62547492980957
    8. 'z' → logprob: -12.87547492980957
    9. ',' → logprob: -13.00047492980957
    10. '+h' → logprob: -13.37547492980957

Token 1416: ',z' (ID: 54920)
  Prédit: ',z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',z' → logprob: -0.20201051235198975
    2. ',y' → logprob: -1.7020105123519897
    3. ',' → logprob: -7.577010631561279
    4. ',x' → logprob: -9.827010154724121
    5. ' ,' → logprob: -11.327010154724121
    6. ',s' → logprob: -11.702010154724121
    7. ',
' → logprob: -13.452010154724121
    8. ',v' → logprob: -13.577010154724121
    9. ',k' → logprob: -13.827010154724121
    10. ',j' → logprob: -13.952010154724121

Token 1417: '),
' (ID: 2313)
  Prédit: '),
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),
' → logprob: -0.010239633731544018
    2. '               ' → logprob: -4.760239601135254
    3. '           ' → logprob: -6.885239601135254
    4. '),' → logprob: -7.635239601135254
    5. ',' → logprob: -10.760239601135254
    6. '              ' → logprob: -10.885239601135254
    7. '   ' → logprob: -11.260239601135254
    8. '),(' → logprob: -11.260239601135254
    9. '(x' → logprob: -11.510239601135254
    10. '),
' → logprob: -11.885239601135254

Token 1418: '               ' (ID: 506)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.003186267102137208
    2. '               ' → logprob: -5.753186225891113
    3. ' (' → logprob: -12.503186225891113
    4. '(' → logprob: -13.128186225891113
    5. '                   ' → logprob: -13.878186225891113
    6. 'x' → logprob: -14.003186225891113
    7. '           ' → logprob: -14.003186225891113
    8. '   ' → logprob: -16.25318717956543
    9. '              ' → logprob: -16.62818717956543
    10. '```' → logprob: -17.25318717956543

Token 1419: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.018152514472603798
    2. 'x' → logprob: -4.018152713775635
    3. ' (' → logprob: -13.393152236938477
    4. '(' (adapté à ' (') → logprob: -14.143152236938477
    5. ' x' → logprob: -16.768152236938477
    6. '           ' → logprob: -16.768152236938477
    7. '   ' → logprob: -16.893152236938477
    8. '[x' → logprob: -17.143152236938477
    9. '       ' → logprob: -17.268152236938477
    10. '{x' → logprob: -17.643152236938477

Token 1420: 'x' (ID: 87)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.029765060171484947
    2. 'x' → logprob: -3.5297651290893555
    3. ' y' → logprob: -12.029765129089355
    4. '(y' → logprob: -12.279765129089355
    5. '(x' → logprob: -12.779765129089355
    6. '   ' → logprob: -15.279765129089355
    7. '(' → logprob: -15.404765129089355
    8. '0' → logprob: -16.02976417541504
    9. '```' → logprob: -16.40476417541504
    10. '       ' → logprob: -16.52976417541504

Token 1421: ',y' (ID: 16103)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.013663990423083305
    2. '-s' → logprob: -4.5136637687683105
    3. ',y' → logprob: -6.0136637687683105
    4. ',' → logprob: -9.013664245605469
    5. ' y' → logprob: -10.888664245605469
    6. 's' → logprob: -11.263664245605469
    7. '-y' → logprob: -11.763664245605469
    8. '```' → logprob: -12.888664245605469
    9. '(y' → logprob: -14.388664245605469
    10. ' ' → logprob: -14.388664245605469

Token 1422: '-s' (ID: 2011)
  Prédit: '-s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-s' → logprob: -0.019921911880373955
    2. '+s' → logprob: -4.394921779632568
    3. 'z' → logprob: -6.019921779632568
    4. ',' → logprob: -6.019921779632568
    5. 's' → logprob: -6.644921779632568
    6. ',z' → logprob: -7.019921779632568
    7. ',s' → logprob: -8.519922256469727
    8. '+' → logprob: -9.394922256469727
    9. '   ' → logprob: -10.769922256469727
    10. ',
' → logprob: -11.894922256469727

Token 1423: ',z' (ID: 54920)
  Prédit: ',z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',z' → logprob: -7.226628895296017e-06
    2. ',' → logprob: -12.250007629394531
    3. ' ,' → logprob: -13.625007629394531
    4. 'z' → logprob: -14.625007629394531
    5. ',x' → logprob: -15.250007629394531
    6. '(z' → logprob: -16.12500762939453
    7. ',y' → logprob: -16.50000762939453
    8. ',Z' → logprob: -16.87500762939453
    9. '   ' → logprob: -17.12500762939453
    10. '	z' → logprob: -17.62500762939453

Token 1424: '),
' (ID: 2313)
  Prédit: '),
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),
' → logprob: -0.09907216578722
    2. ',' → logprob: -3.224072217941284
    3. '               ' → logprob: -4.224071979522705
    4. '),' → logprob: -4.474071979522705
    5. ',(' → logprob: -4.849071979522705
    6. ',y' → logprob: -5.224071979522705
    7. ',z' → logprob: -5.224071979522705
    8. ')' → logprob: -5.474071979522705
    9. '           ' → logprob: -6.474071979522705
    10. ',x' → logprob: -6.849071979522705

Token 1425: '               ' (ID: 506)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.06611409038305283
    2. '               ' → logprob: -2.8161141872406006
    3. '(' → logprob: -5.5661139488220215
    4. '           ' → logprob: -8.81611442565918
    5. ' (' → logprob: -8.94111442565918
    6. '                   ' → logprob: -11.44111442565918
    7. 'x' → logprob: -11.56611442565918
    8. '```' → logprob: -12.19111442565918
    9. '   ' → logprob: -12.94111442565918
    10. '              ' → logprob: -13.19111442565918

Token 1426: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -7.302704761968926e-05
    2. '               ' → logprob: -9.875073432922363
    3. 'x' → logprob: -11.625073432922363
    4. ' (' → logprob: -11.750073432922363
    5. '           ' → logprob: -12.875073432922363
    6. '                   ' → logprob: -13.750073432922363
    7. '(' (adapté à ' (') → logprob: -14.125073432922363
    8. '              ' → logprob: -15.625073432922363
    9. '             ' → logprob: -16.750072479248047
    10. '                ' → logprob: -17.500072479248047

Token 1427: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -6.749814019713085e-06
    2. '(x' → logprob: -12.000006675720215
    3. ' x' → logprob: -14.500006675720215
    4. '{x' → logprob: -18.87500762939453
    5. '0' → logprob: -20.00000762939453
    6. '(' → logprob: -20.25000762939453
    7. '"x' → logprob: -20.62500762939453
    8. ')x' → logprob: -20.75000762939453
    9. '	x' → logprob: -20.87500762939453
    10. ' (' → logprob: -21.62500762939453

Token 1428: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -3.750436007976532e-05
    2. ',' → logprob: -10.75003719329834
    3. ',z' → logprob: -11.25003719329834
    4. ' ,' → logprob: -13.25003719329834
    5. ',x' → logprob: -14.62503719329834
    6. ',(' → logprob: -14.87503719329834
    7. 'y' → logprob: -15.37503719329834
    8. ',
' → logprob: -16.375038146972656
    9. '   ' → logprob: -16.875038146972656
    10. ' ' → logprob: -17.250038146972656

Token 1429: ',z' (ID: 54920)
  Prédit: ',z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',z' → logprob: -0.06061294674873352
    2. '+' → logprob: -3.560612916946411
    3. '+s' → logprob: -3.560612916946411
    4. ',s' → logprob: -6.43561315536499
    5. ',' → logprob: -8.310612678527832
    6. ',y' → logprob: -10.435612678527832
    7. ',x' → logprob: -10.685612678527832
    8. 'z' → logprob: -10.810612678527832
    9. '+,' → logprob: -11.560612678527832
    10. '+x' → logprob: -11.685612678527832

Token 1430: '+s' (ID: 155947)
  Prédit: '+s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+s' → logprob: -0.00038586699520237744
    2. '+' → logprob: -7.875385761260986
    3. ' +' → logprob: -12.250386238098145
    4. '+
' → logprob: -15.500386238098145
    5. '+t' → logprob: -15.625386238098145
    6. '+p' → logprob: -15.750386238098145
    7. '+w' → logprob: -16.500385284423828
    8. '+h' → logprob: -16.625385284423828
    9. '+x' → logprob: -16.750385284423828
    10. '-s' → logprob: -16.750385284423828

Token 1431: '),
' (ID: 2313)
  Prédit: '),
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),
' → logprob: -0.0397578626871109
    2. '),' → logprob: -3.4147579669952393
    3. '           ' → logprob: -5.53975772857666
    4. '               ' → logprob: -6.41475772857666
    5. ')' → logprob: -7.91475772857666
    6. '),
' → logprob: -9.41475772857666
    7. '          ' → logprob: -10.66475772857666
    8. '              ' → logprob: -11.28975772857666
    9. '),

' → logprob: -11.66475772857666
    10. ')
' → logprob: -11.78975772857666

Token 1432: '               ' (ID: 506)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.019279109314084053
    2. '               ' → logprob: -4.0192790031433105
    3. '           ' → logprob: -7.1442790031433105
    4. '(' → logprob: -8.269279479980469
    5. 'x' → logprob: -10.144279479980469
    6. ' (' → logprob: -10.519279479980469
    7. '                   ' → logprob: -11.894279479980469
    8. '              ' → logprob: -12.644279479980469
    9. '   ' → logprob: -12.894279479980469
    10. '             ' → logprob: -13.394279479980469

Token 1433: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.4530375003814697
    2. 'z' → logprob: -1.2030375003814697
    3. '(z' → logprob: -2.9530375003814697
    4. 'x' → logprob: -4.453037261962891
    5. ' (' → logprob: -8.82803726196289
    6. '   ' → logprob: -10.57803726196289
    7. '(' (adapté à ' (') → logprob: -10.95303726196289
    8. ' z' → logprob: -12.95303726196289
    9. '(y' → logprob: -12.95303726196289
    10. '       ' → logprob: -13.20303726196289

Token 1434: 'x' (ID: 87)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.004084693267941475
    2. 'x' → logprob: -5.504084587097168
    3. 'y' → logprob: -12.504084587097168
    4. ' z' → logprob: -14.004084587097168
    5. '(x' → logprob: -14.129084587097168
    6. '(z' → logprob: -14.379084587097168
    7. '   ' → logprob: -15.379084587097168
    8. '(' → logprob: -16.879085540771484
    9. '```' → logprob: -17.379085540771484
    10. '       ' → logprob: -17.629085540771484

Token 1435: ',y' (ID: 16103)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.20484741032123566
    2. 'z' → logprob: -1.7048474550247192
    3. '-s' → logprob: -5.95484733581543
    4. '-z' → logprob: -7.95484733581543
    5. ',y' → logprob: -8.07984733581543
    6. ' y' → logprob: -10.07984733581543
    7. 's' → logprob: -10.70484733581543
    8. ',' → logprob: -10.82984733581543
    9. '-y' → logprob: -11.07984733581543
    10. ' ' → logprob: -11.32984733581543

Token 1436: ',z' (ID: 54920)
  Prédit: '-s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-s' → logprob: -0.00022833107504993677
    2. '-z' → logprob: -8.750227928161621
    3. 'z' → logprob: -9.875227928161621
    4. '+s' → logprob: -12.000227928161621
    5. ' -' → logprob: -12.250227928161621
    6. '+' → logprob: -13.125227928161621
    7. '```' → logprob: -13.500227928161621
    8. 's' → logprob: -13.875227928161621
    9. ' ' → logprob: -14.125227928161621
    10. '-' → logprob: -14.250227928161621

Token 1437: '-s' (ID: 2011)
  Prédit: '-s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-s' → logprob: -2.696889623621246e-06
    2. ' -' → logprob: -13.37500286102295
    3. '-' → logprob: -14.37500286102295
    4. '-
' → logprob: -15.75000286102295
    5. '+s' → logprob: -15.75000286102295
    6. '
' → logprob: -17.125001907348633
    7. '```' → logprob: -17.125001907348633
    8. ' ' → logprob: -17.250001907348633
    9. ')' → logprob: -17.250001907348633
    10. '−' → logprob: -17.500001907348633

Token 1438: ')
' (ID: 446)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2505914568901062
    2. ')' → logprob: -1.875591516494751
    3. ')
' → logprob: -3.125591516494751
    4. ')]
' → logprob: -4.625591278076172
    5. ')]' → logprob: -5.250591278076172
    6. '),
' → logprob: -5.625591278076172
    7. '       ' → logprob: -6.000591278076172
    8. '               ' → logprob: -6.500591278076172
    9. '):
' → logprob: -7.125591278076172
    10. ']
' → logprob: -8.000591278076172

Token 1439: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0004907185211777687
    2. '       ' → logprob: -9.00049114227295
    3. '<|end|>' → logprob: -9.25049114227295
    4. ':
' → logprob: -9.87549114227295
    5. '<|end|>' → logprob: -9.87549114227295
    6. '```' → logprob: -10.50049114227295
    7. 'for' → logprob: -10.62549114227295
    8. ':' → logprob: -10.87549114227295
    9. '):
' → logprob: -11.00049114227295
    10. ' for' → logprob: -11.12549114227295

Token 1440: ' ]
' (ID: 10213)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.029740996658802032
    2. ']
' (adapté à ' ]
') → logprob: -3.654741048812866
    3. ']:
' → logprob: -6.279740810394287
    4. '):
' → logprob: -7.029740810394287
    5. '       ' → logprob: -8.154741287231445
    6. ']' → logprob: -8.404741287231445
    7. ':
' → logprob: -9.529741287231445
    8. 'for' → logprob: -10.529741287231445
    9. ']

' → logprob: -11.404741287231445
    10. ')
' → logprob: -11.529741287231445

Token 1441: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005243598949164152
    2. 'for' → logprob: -5.25524377822876
    3. ' for' → logprob: -12.255243301391602
    4. '       ' → logprob: -12.380243301391602
    5. '```' → logprob: -14.255243301391602
    6. '               ' → logprob: -16.5052433013916
    7. '   ' → logprob: -16.7552433013916
    8. '	       ' → logprob: -16.8802433013916
    9. '          ' → logprob: -17.6302433013916
    10. '		' → logprob: -18.0052433013916

Token 1442: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.1049664244055748
    2. '           ' → logprob: -2.354966402053833
    3. '       ' → logprob: -5.354966640472412
    4. ' for' → logprob: -10.729966163635254
    5. '```' → logprob: -13.729966163635254
    6. '   ' → logprob: -14.729966163635254
    7. '	for' → logprob: -15.104966163635254
    8. '               ' → logprob: -16.35496711730957
    9. '            
' → logprob: -17.35496711730957
    10. 'For' → logprob: -17.47996711730957

Token 1443: ' nx' (ID: 50118)
  Prédit: 'nbr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nbr' → logprob: -0.7963396310806274
    2. 'nb' → logprob: -1.0463396310806274
    3. 'nx' → logprob: -2.296339511871338
    4. 'neighbor' → logprob: -2.546339511871338
    5. 'pos' → logprob: -4.546339511871338
    6. 'n' → logprob: -5.421339511871338
    7. 'nei' → logprob: -6.671339511871338
    8. 'npos' → logprob: -7.421339511871338
    9. 'nt' → logprob: -7.796339511871338
    10. 'nr' → logprob: -7.921339511871338

Token 1444: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0025024134665727615
    2. ',n' → logprob: -6.00250244140625
    3. ' ,' → logprob: -10.87750244140625
    4. '_,' → logprob: -12.12750244140625
    5. ',_' → logprob: -13.87750244140625
    6. ',
' → logprob: -14.12750244140625
    7. ',y' → logprob: -15.75250244140625
    8. ',#' → logprob: -15.87750244140625
    9. ',(' → logprob: -16.00250244140625
    10. '```' → logprob: -16.50250244140625

Token 1445: 'ny' (ID: 3008)
  Prédit: 'ny'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -1.3544423381972592e-05
    2. ' ny' → logprob: -11.25001335144043
    3. '   ' → logprob: -15.75001335144043
    4. 'nyi' → logprob: -16.37501335144043
    5. 'Ny' → logprob: -16.87501335144043
    6. '    ' → logprob: -17.75001335144043
    7. 'n' → logprob: -18.50001335144043
    8. 'NY' → logprob: -18.62501335144043
    9. 'y' → logprob: -18.62501335144043
    10. '     ' → logprob: -18.75001335144043

Token 1446: ',n' (ID: 18103)
  Prédit: ',n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',n' → logprob: -0.005945391021668911
    2. ',' → logprob: -5.130945205688477
    3. ',z' → logprob: -11.755945205688477
    4. ' ,' → logprob: -11.880945205688477
    5. '(n' → logprob: -13.630945205688477
    6. ',N' → logprob: -15.255945205688477
    7. '[n' → logprob: -16.255945205688477
    8. '.nz' → logprob: -16.255945205688477
    9. '(nx' → logprob: -16.505945205688477
    10. '<n' → logprob: -16.630945205688477

Token 1447: 'z' (ID: 89)
  Prédit: 'z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.22717440128326416
    2. ',z' → logprob: -1.6021744012832642
    3. ',n' → logprob: -6.977174282073975
    4. ',' → logprob: -8.227174758911133
    5. 'nz' → logprob: -8.227174758911133
    6. '(nx' → logprob: -10.102174758911133
    7. '=' → logprob: -10.352174758911133
    8. '=z' → logprob: -10.477174758911133
    9. '   ' → logprob: -10.727174758911133
    10. '(z' → logprob: -10.852174758911133

Token 1448: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3919081389904022
    2. 'in' → logprob: -1.1419081687927246
    3. ')' → logprob: -6.016908168792725
    4. '               ' → logprob: -6.516908168792725
    5. '           ' → logprob: -7.141908168792725
    6. '):
' → logprob: -9.266907691955566
    7. ',' → logprob: -9.391907691955566
    8. '            ' → logprob: -10.391907691955566
    9. '```' → logprob: -10.641907691955566
    10. '              ' → logprob: -11.266907691955566

Token 1449: ' neighbors' (ID: 31655)
  Prédit: 'neighbors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbors' → logprob: -0.001961701549589634
    2. ' neighbors' → logprob: -6.501961708068848
    3. 'pos' → logprob: -8.501961708068848
    4. '[(' → logprob: -8.626961708068848
    5. '
' → logprob: -10.626961708068848
    6. '[
' → logprob: -11.501961708068848
    7. '[' → logprob: -11.751961708068848
    8. '(ne' → logprob: -12.001961708068848
    9. 'neighbor' → logprob: -12.626961708068848
    10. 'nx' → logprob: -12.876961708068848

Token 1450: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01447103638201952
    2. ':' → logprob: -5.014471054077148
    3. ':
' → logprob: -5.014471054077148
    4. ' if' → logprob: -7.639471054077148
    5. 'if' → logprob: -8.889471054077148
    6. '	           ' → logprob: -9.264471054077148
    7. ' in' → logprob: -9.639471054077148
    8. ',' → logprob: -9.639471054077148
    9. '):
' → logprob: -9.639471054077148
    10. '<|end|>' → logprob: -10.264471054077148

Token 1451: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.021225454285740852
    2. 'if' → logprob: -4.146225452423096
    3. ' if' → logprob: -5.271225452423096
    4. '```' → logprob: -11.146225929260254
    5. '	           ' → logprob: -11.271225929260254
    6. 'token' → logprob: -12.521225929260254
    7. '           ' → logprob: -12.646225929260254
    8. 'tokens' → logprob: -13.271225929260254
    9. '                   ' → logprob: -14.271225929260254
    10. '		       ' → logprob: -14.271225929260254

Token 1452: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.11410140246152878
    2. ' if' → logprob: -2.6141014099121094
    3. '               ' → logprob: -3.3641014099121094
    4. '                   ' → logprob: -12.86410140991211
    5. '	if' → logprob: -14.36410140991211
    6. 'If' → logprob: -14.48910140991211
    7. 'idx' → logprob: -14.73910140991211
    8. 'pos' → logprob: -14.98910140991211
    9. '           ' → logprob: -15.11410140991211
    10. 'id' → logprob: -15.11410140991211

Token 1453: ' (' (ID: 350)
  Prédit: '(nx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nx' → logprob: -0.011145558208227158
    2. ' (' → logprob: -4.51114559173584
    3. '(n' → logprob: -9.63614559173584
    4. '           ' → logprob: -11.38614559173584
    5. '   ' → logprob: -11.76114559173584
    6. '       ' → logprob: -12.51114559173584
    7. '(pos' → logprob: -12.63614559173584
    8. '               ' → logprob: -13.38614559173584
    9. '                   ' → logprob: -13.63614559173584
    10. '(x' → logprob: -14.51114559173584

Token 1454: 'nx' (ID: 45103)
  Prédit: 'nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.00043579499470070004
    2. '(nx' → logprob: -7.750435829162598
    3. ' nx' → logprob: -13.000435829162598
    4. '
' → logprob: -14.375435829162598
    5. '                   ' → logprob: -14.375435829162598
    6. '   ' → logprob: -14.500435829162598
    7. '           ' → logprob: -14.750435829162598
    8. '               ' → logprob: -14.875435829162598
    9. 'npos' → logprob: -16.00043487548828
    10. 'pos' → logprob: -16.12543487548828

Token 1455: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.2948405128554441e-05
    2. ' ,' → logprob: -12.12501335144043
    3. ',
' → logprob: -12.37501335144043
    4. ',n' → logprob: -13.25001335144043
    5. ',y' → logprob: -14.00001335144043
    6. '
' → logprob: -15.50001335144043
    7. '<|end|>' → logprob: -16.75001335144043
    8. '```' → logprob: -16.87501335144043
    9. '           ' → logprob: -17.12501335144043
    10. '<|end|>' → logprob: -17.25001335144043

Token 1456: 'ny' (ID: 3008)
  Prédit: 'ny'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -1.981667537620524e-06
    2. ' ny' → logprob: -13.625001907348633
    3. '   ' → logprob: -14.500001907348633
    4. 'n' → logprob: -16.250001907348633
    5. '
' → logprob: -16.750001907348633
    6. 'nyi' → logprob: -16.875001907348633
    7. 'nz' → logprob: -18.250001907348633
    8. ''ny' → logprob: -18.875001907348633
    9. 'ney' → logprob: -18.875001907348633
    10. 'nyt' → logprob: -19.000001907348633

Token 1457: ',n' (ID: 18103)
  Prédit: ',n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',n' → logprob: -3.380904672667384e-05
    2. 'nz' → logprob: -10.875033378601074
    3. ',z' → logprob: -11.500033378601074
    4. ',' → logprob: -12.500033378601074
    5. '.nz' → logprob: -15.375033378601074
    6. 'z' → logprob: -15.500033378601074
    7. '<n' → logprob: -15.875033378601074
    8. '(n' → logprob: -16.25003433227539
    9. ' nz' → logprob: -16.37503433227539
    10. '
' → logprob: -16.75003433227539

Token 1458: 'z' (ID: 89)
  Prédit: 'z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.00020377879263833165
    2. 'nz' → logprob: -8.500204086303711
    3. 'zs' → logprob: -16.62520408630371
    4. '   ' → logprob: -16.87520408630371
    5. ' nz' → logprob: -16.87520408630371
    6. 'xz' → logprob: -17.25020408630371
    7. '
' → logprob: -17.62520408630371
    8. ''z' → logprob: -17.75020408630371
    9. 'cz' → logprob: -17.75020408630371
    10. 'x' → logprob: -17.87520408630371

Token 1459: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03833270072937012
    2. 'in' → logprob: -3.28833270072937
    3. ' in' → logprob: -8.28833293914795
    4. '               ' → logprob: -10.91333293914795
    5. ' )' → logprob: -11.53833293914795
    6. '                   ' → logprob: -12.28833293914795
    7. 'In' → logprob: -13.53833293914795
    8. '           ' → logprob: -13.66333293914795
    9. '            ' → logprob: -14.66333293914795
    10. '                ' → logprob: -14.66333293914795

Token 1460: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.005236717872321606
    2. ' in' → logprob: -5.255236625671387
    3. ')' → logprob: -14.130236625671387
    4. '                   ' → logprob: -14.380236625671387
    5. '               ' → logprob: -14.380236625671387
    6. '```' → logprob: -15.005236625671387
    7. '           ' → logprob: -15.505236625671387
    8. '_in' → logprob: -15.630236625671387
    9. 'In' → logprob: -15.880236625671387
    10. '	in' → logprob: -16.505237579345703

Token 1461: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -3.7697225252486533e-06
    2. ' pos' → logprob: -12.500003814697266
    3. '           ' → logprob: -17.875003814697266
    4. '   ' → logprob: -20.250003814697266
    5. '	pos' → logprob: -20.375003814697266
    6. '```' → logprob: -20.750003814697266
    7. '(pos' → logprob: -21.000003814697266
    8. 'position' → logprob: -21.375003814697266
    9. '       ' → logprob: -21.500003814697266
    10. '               ' → logprob: -21.750003814697266

Token 1462: '_set' (ID: 5451)
  Prédit: '_set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_set' → logprob: -0.4740804135799408
    2. '_to' → logprob: -0.9740804433822632
    3. 'set' → logprob: -13.224080085754395
    4. 'pos' → logprob: -14.974080085754395
    5. ')set' → logprob: -15.099080085754395
    6. '   ' → logprob: -15.224080085754395
    7. '           ' → logprob: -15.599080085754395
    8. '               ' → logprob: -15.974080085754395
    9. '_pos' → logprob: -16.34908103942871
    10. 'to' → logprob: -16.47408103942871

Token 1463: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.4003593623638153
    2. ':' → logprob: -1.7753593921661377
    3. '                   ' → logprob: -2.0253593921661377
    4. ' and' → logprob: -3.6503593921661377
    5. 'and' → logprob: -6.400359153747559
    6. '               ' → logprob: -7.525359153747559
    7. '):
' → logprob: -8.400359153747559
    8. '```' → logprob: -9.650359153747559
    9. '                       ' → logprob: -11.150359153747559
    10. ',' → logprob: -11.275359153747559

Token 1464: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.003257450181990862
    2. 'adj' → logprob: -5.7532572746276855
    3. ' adj' → logprob: -9.878257751464844
    4. '                       ' → logprob: -11.753257751464844
    5. 'pos' → logprob: -11.878257751464844
    6. '```' → logprob: -12.253257751464844
    7. '               ' → logprob: -12.378257751464844
    8. '                  ' → logprob: -12.628257751464844
    9. '                 ' → logprob: -15.253257751464844
    10. '				' → logprob: -15.503257751464844

Token 1465: ' j' (ID: 441)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.002632969059050083
    2. '                   ' → logprob: -6.002633094787598
    3. 'j' (adapté à ' j') → logprob: -8.877633094787598
    4. ' adj' → logprob: -11.377633094787598
    5. 'uid' → logprob: -13.377633094787598
    6. 'idx' → logprob: -13.502633094787598
    7. '   ' → logprob: -13.752633094787598
    8. '               ' → logprob: -14.002633094787598
    9. '                       ' → logprob: -14.377633094787598
    10. 'jid' → logprob: -15.502633094787598

Token 1466: ' =' (ID: 314)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.3630785644054413
    2. '.append' → logprob: -1.6130785942077637
    3. 'adj' → logprob: -2.6130785942077637
    4. ' =' → logprob: -5.113078594207764
    5. ' adj' → logprob: -5.113078594207764
    6. '                       ' → logprob: -5.363078594207764
    7. '=' → logprob: -5.488078594207764
    8. '               ' → logprob: -5.613078594207764
    9. '           ' → logprob: -6.613078594207764
    10. '.' → logprob: -6.738078594207764

Token 1467: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.001937558175995946
    2. ' pos' → logprob: -6.251937389373779
    3. '                   ' → logprob: -11.626937866210938
    4. '[pos' → logprob: -17.251937866210938
    5. '(pos' → logprob: -18.626937866210938
    6. 'position' → logprob: -18.751937866210938
    7. '	pos' → logprob: -19.001937866210938
    8. '               ' → logprob: -19.126937866210938
    9. '                       ' → logprob: -19.251937866210938
    10. '           ' → logprob: -19.501937866210938

Token 1468: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -5.037835580878891e-05
    2. 'to' → logprob: -10.75005054473877
    3. 'i' → logprob: -11.25005054473877
    4. 'To' → logprob: -12.25005054473877
    5. 'j' → logprob: -13.12505054473877
    6. '```' → logprob: -13.12505054473877
    7. '   ' → logprob: -13.75005054473877
    8. 't' → logprob: -13.87505054473877
    9. '_TO' → logprob: -13.87505054473877
    10. '       ' → logprob: -14.62505054473877

Token 1469: '_id' (ID: 1537)
  Prédit: '(nx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nx' → logprob: -1.1492078304290771
    2. '[(' → logprob: -1.2742078304290771
    3. '(n' → logprob: -2.149207830429077
    4. 'id' → logprob: -2.149207830429077
    5. '_id' → logprob: -2.649207830429077
    6. '[n' → logprob: -2.774207830429077
    7. 'i' → logprob: -4.649208068847656
    8. '```' → logprob: -5.274208068847656
    9. '((' → logprob: -5.899208068847656
    10. 'nx' → logprob: -5.899208068847656

Token 1470: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.013204234652221203
    2. '(n' → logprob: -5.388204097747803
    3. '(nx' → logprob: -5.388204097747803
    4. '[n' → logprob: -5.763204097747803
    5. '[' → logprob: -7.888204097747803
    6. '[
' → logprob: -8.388204574584961
    7. '((' → logprob: -9.513204574584961
    8. '(' → logprob: -9.888204574584961
    9. '                   ' → logprob: -10.013204574584961
    10. '```' → logprob: -11.138204574584961

Token 1471: 'nx' (ID: 45103)
  Prédit: 'nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -4.847109812544659e-05
    2. '(nx' → logprob: -10.250048637390137
    3. ' nx' → logprob: -11.250048637390137
    4. 'n' → logprob: -17.87504768371582
    5. '
' → logprob: -18.37504768371582
    6. '   ' → logprob: -18.37504768371582
    7. 'nj' → logprob: -19.12504768371582
    8. 'nv' → logprob: -20.12504768371582
    9. 'ny' → logprob: -20.12504768371582
    10. 'nw' → logprob: -20.37504768371582

Token 1472: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.85235276655294e-05
    2. ',n' → logprob: -9.875088691711426
    3. ' ,' → logprob: -10.875088691711426
    4. ',j' → logprob: -11.500088691711426
    5. ',y' → logprob: -13.250088691711426
    6. '(nx' → logprob: -13.250088691711426
    7. 'ny' → logprob: -14.250088691711426
    8. 'j' → logprob: -14.375088691711426
    9. ',
' → logprob: -14.375088691711426
    10. '[' → logprob: -14.375088691711426

Token 1473: 'ny' (ID: 3008)
  Prédit: 'ny'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -0.002094945637509227
    2. 'nx' → logprob: -6.252094745635986
    3. ' ny' → logprob: -9.252095222473145
    4. 'n' → logprob: -11.127095222473145
    5. 'nj' → logprob: -11.127095222473145
    6. '
' → logprob: -11.627095222473145
    7. 'nz' → logprob: -11.752095222473145
    8. '(n' → logprob: -12.377095222473145
    9. '(nx' → logprob: -12.502095222473145
    10. '   ' → logprob: -12.877095222473145

Token 1474: ',n' (ID: 18103)
  Prédit: 'nz'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nz' → logprob: -0.021302467212080956
    2. ',n' → logprob: -4.146302700042725
    3. 'ny' → logprob: -5.771302700042725
    4. '[n' → logprob: -7.771302700042725
    5. ',' → logprob: -7.896302700042725
    6. 'z' → logprob: -8.646302223205566
    7. 'nj' → logprob: -8.646302223205566
    8. ',j' → logprob: -8.771302223205566
    9. ')]' → logprob: -8.896302223205566
    10. 'nx' → logprob: -8.896302223205566

Token 1475: 'z' (ID: 89)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.17889340221881866
    2. 'i' → logprob: -2.3038933277130127
    3. ')]
' → logprob: -3.4288933277130127
    4. 'j' → logprob: -4.303893566131592
    5. 'z' → logprob: -5.303893566131592
    6. '])' → logprob: -5.553893566131592
    7. ')' → logprob: -6.053893566131592
    8. 'x' → logprob: -6.428893566131592
    9. ']' → logprob: -6.803893566131592
    10. 'w' → logprob: -7.303893566131592

Token 1476: ')]
' (ID: 11587)
  Prédit: ']
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -1.0109750032424927
    2. ')]' → logprob: -1.6359750032424927
    3. ']' → logprob: -1.8859750032424927
    4. ')]
' → logprob: -2.010974884033203
    5. ')' → logprob: -2.510974884033203
    6. '                   ' → logprob: -3.135974884033203
    7. ')
' → logprob: -3.510974884033203
    8. '               ' → logprob: -7.635974884033203
    9. '])
' → logprob: -8.260974884033203
    10. '])' → logprob: -8.385974884033203

Token 1477: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.06521252542734146
    2. '                       ' → logprob: -2.8152124881744385
    3. 'adj' → logprob: -5.940212726593018
    4. '```' → logprob: -7.565212726593018
    5. ' adj' → logprob: -9.94021224975586
    6. '               ' → logprob: -10.44021224975586
    7. '                           ' → logprob: -12.44021224975586
    8. '       ' → logprob: -13.19021224975586
    9. '``' → logprob: -13.94021224975586
    10. 'Adj' → logprob: -13.94021224975586

Token 1478: ' adj' (ID: 20251)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' (adapté à ' adj') → logprob: -0.006818027701228857
    2. '                   ' → logprob: -5.006817817687988
    3. '                       ' → logprob: -10.131817817687988
    4. '           ' → logprob: -10.381817817687988
    5. ' adj' → logprob: -10.756817817687988
    6. '               ' → logprob: -12.256817817687988
    7. '```' → logprob: -13.006817817687988
    8. 'if' → logprob: -13.131817817687988
    9. '       ' → logprob: -14.256817817687988
    10. '                           ' → logprob: -14.756817817687988

Token 1479: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.106736039626412e-05
    2. '                   ' → logprob: -10.500031471252441
    3. '[j' → logprob: -12.875031471252441
    4. 'i' → logprob: -14.875031471252441
    5. '```' → logprob: -15.500031471252441
    6. '               ' → logprob: -15.625031471252441
    7. '           ' → logprob: -16.250030517578125
    8. '                       ' → logprob: -17.000030517578125
    9. '[' → logprob: -17.375030517578125
    10. '                    
' → logprob: -18.625030517578125

Token 1480: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.1009899377822876
    2. '.append' → logprob: -2.350989818572998
    3. ').' → logprob: -7.725989818572998
    4. '                   ' → logprob: -8.225990295410156
    5. '.' → logprob: -10.475990295410156
    6. '           ' → logprob: -11.350990295410156
    7. ' ].' → logprob: -11.850990295410156
    8. 'append' → logprob: -12.100990295410156
    9. '                       ' → logprob: -12.725990295410156
    10. ']' → logprob: -12.850990295410156

Token 1481: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -4.320199877838604e-07
    2. '.append' → logprob: -15.5
    3. ' append' → logprob: -16.0
    4. '_append' → logprob: -19.5
    5. 'app' → logprob: -21.25
    6. 'Append' → logprob: -21.5
    7. '	append' → logprob: -22.5
    8. 'add' → logprob: -23.125
    9. 'appen' → logprob: -25.75
    10. ' Append' → logprob: -26.125

Token 1482: '(j' (ID: 4997)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.002600387902930379
    2. ' j' → logprob: -6.002600193023682
    3. '(j' → logprob: -9.00260066986084
    4. ' (' → logprob: -13.75260066986084
    5. ')' → logprob: -15.25260066986084
    6. '	j' → logprob: -15.87760066986084
    7. '                   ' → logprob: -16.502599716186523
    8. '(' → logprob: -16.752599716186523
    9. '```' → logprob: -17.002599716186523
    10. '   ' → logprob: -17.252599716186523

Token 1483: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002263046189909801
    2. '                   ' → logprob: -8.500226020812988
    3. '               ' → logprob: -11.750226020812988
    4. ')
' → logprob: -12.000226020812988
    5. '           ' → logprob: -12.125226020812988
    6. ' )' → logprob: -13.375226020812988
    7. '       ' → logprob: -13.875226020812988
    8. '                       ' → logprob: -15.500226020812988
    9. '   ' → logprob: -15.750226020812988
    10. '),' → logprob: -16.250226974487305

Token 1484: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23478811979293823
    2. '                   ' → logprob: -2.484788179397583
    3. '```' → logprob: -3.234788179397583
    4. '
' → logprob: -3.359788179397583
    5. '<|end|>' → logprob: -3.734788179397583
    6. '           ' → logprob: -3.984788179397583
    7. '               ' → logprob: -5.609787940979004
    8. 'for' → logprob: -5.984787940979004
    9. '#' → logprob: -6.359787940979004
    10. '        
' → logprob: -7.859787940979004

Token 1485: ' #' (ID: 1069)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.008555116131901741
    2. '       ' → logprob: -5.133554935455322
    3. '#' (adapté à ' #') → logprob: -6.258554935455322
    4. 'from' → logprob: -8.00855541229248
    5. '```' → logprob: -8.38355541229248
    6. ' visited' → logprob: -9.63355541229248
    7. '
' → logprob: -10.75855541229248
    8. 'vis' → logprob: -11.00855541229248
    9. 'seen' → logprob: -11.50855541229248
    10. 'import' → logprob: -11.63355541229248

Token 1486: ' Trou' (ID: 58947)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.006434456445276737
    2. '       ' → logprob: -5.131434440612793
    3. '#' → logprob: -8.256434440612793
    4. 'def' → logprob: -9.631434440612793
    5. 'components' → logprob: -10.131434440612793
    6. 'seen' → logprob: -10.256434440612793
    7. 'com' → logprob: -10.256434440612793
    8. ' visited' → logprob: -10.631434440612793
    9. 'vis' → logprob: -11.381434440612793
    10. '```' → logprob: -11.381434440612793

Token 1487: 'ver' (ID: 445)
  Prédit: 'ver'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ver' → logprob: -0.11537949740886688
    2. 'v' → logprob: -3.115379571914673
    3. 've' → logprob: -3.490379571914673
    4. 'vez' → logprob: -4.240379333496094
    5. 'te' → logprob: -4.865379333496094
    6. '#' → logprob: -5.490379333496094
    7. '       ' → logprob: -5.615379333496094
    8. 'ves' → logprob: -6.490379333496094
    9. 'vé' → logprob: -7.615379333496094
    10. 'vers' → logprob: -8.615379333496094

Token 1488: ' compos' (ID: 14635)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.36630988121032715
    2. 'components' → logprob: -1.9913098812103271
    3. 'com' → logprob: -2.241309881210327
    4. 'connected' → logprob: -3.491309881210327
    5. 'all' → logprob: -4.741310119628906
    6. '#' → logprob: -4.741310119628906
    7. 'les' → logprob: -5.116310119628906
    8. 'vis' → logprob: -5.866310119628906
    9. '```' → logprob: -6.366310119628906
    10. 'component' → logprob: -6.991310119628906

Token 1489: 'antes' (ID: 5193)
  Prédit: 'antes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'antes' → logprob: -0.04331887140870094
    2. 'conn' → logprob: -4.168318748474121
    3. '#' → logprob: -5.043318748474121
    4. 'on' → logprob: -5.418318748474121
    5. 'pos' → logprob: -5.793318748474121
    6. '_conn' → logprob: -5.793318748474121
    7. '```' → logprob: -6.668318748474121
    8. 'ponents' → logprob: -6.918318748474121
    9. 'n' → logprob: -6.918318748474121
    10. 'ant' → logprob: -7.043318748474121

Token 1490: ' connex' (ID: 154480)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.003920364659279585
    2. 'vis' → logprob: -6.253920555114746
    3. 'conn' → logprob: -6.503920555114746
    4. '```' → logprob: -8.378920555114746
    5. ' visited' → logprob: -9.003920555114746
    6. '       ' → logprob: -10.753920555114746
    7. '   ' → logprob: -11.128920555114746
    8. 'components' → logprob: -11.128920555114746
    9. 'vist' → logprob: -11.128920555114746
    10. '
' → logprob: -11.753920555114746

Token 1491: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.0034897157456725836
    2. 'entes' → logprob: -6.6284894943237305
    3. 'tes' → logprob: -6.6284894943237305
    4. 'ect' → logprob: -7.8784894943237305
    5. 'ex' → logprob: -9.00348949432373
    6. 'conn' → logprob: -9.37848949432373
    7. 'ives' → logprob: -9.62848949432373
    8. 'nes' → logprob: -10.12848949432373
    9. 'onnes' → logprob: -10.62848949432373
    10. 'iv' → logprob: -11.12848949432373

Token 1492: '
' (ID: 198)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -2.081584716506768e-05
    2. ' visited' → logprob: -11.500020980834961
    3. '       ' → logprob: -12.000020980834961
    4. 'vis' → logprob: -13.250020980834961
    5. 'seen' → logprob: -13.625020980834961
    6. '
' → logprob: -14.125020980834961
    7. '```' → logprob: -14.625020980834961
    8. 'def' → logprob: -15.375020980834961
    9. '        
' → logprob: -16.50002098083496
    10. 'used' → logprob: -16.62502098083496

Token 1493: '       ' (ID: 309)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.005326485726982355
    2. '       ' → logprob: -5.255326271057129
    3. ' visited' → logprob: -9.880326271057129
    4. 'vis' → logprob: -11.005326271057129
    5. '```' → logprob: -11.380326271057129
    6. 'seen' → logprob: -12.005326271057129
    7. '        
' → logprob: -12.880326271057129
    8. '
' → logprob: -13.005326271057129
    9. 'used' → logprob: -14.130326271057129
    10. 'def' → logprob: -14.755326271057129

Token 1494: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' (adapté à ' visited') → logprob: -5.32392441527918e-05
    2. '       ' → logprob: -10.250053405761719
    3. ' visited' → logprob: -12.250053405761719
    4. 'seen' → logprob: -12.250053405761719
    5. '
' → logprob: -12.500053405761719
    6. '   ' → logprob: -13.375053405761719
    7. 'def' → logprob: -13.625053405761719
    8. 'vis' → logprob: -14.250053405761719
    9. '        
' → logprob: -14.375053405761719
    10. 'used' → logprob: -15.000053405761719

Token 1495: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.023275645449757576
    2. ' =' → logprob: -3.77327561378479
    3. '=[' → logprob: -10.648275375366211
    4. '=set' → logprob: -12.273275375366211
    5. '[' → logprob: -14.648275375366211
    6. '=[]' → logprob: -14.898275375366211
    7. '```' → logprob: -15.023275375366211
    8. '_=' → logprob: -15.648275375366211
    9. '=
' → logprob: -16.02327537536621
    10. '=[]
' → logprob: -16.52327537536621

Token 1496: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00018971276585943997
    2. ' [' → logprob: -8.750189781188965
    3. 'set' → logprob: -11.000189781188965
    4. '[n' → logprob: -12.625189781188965
    5. '[int' → logprob: -13.250189781188965
    6. '[start' → logprob: -13.375189781188965
    7. '[len' → logprob: -13.750189781188965
    8. '[s' → logprob: -13.875189781188965
    9. '[node' → logprob: -14.000189781188965
    10. '[i' → logprob: -14.250189781188965

Token 1497: 'False' (ID: 8168)
  Prédit: 'False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -1.8624639324116288e-06
    2. ' False' → logprob: -13.250001907348633
    3. '   ' → logprob: -16.750001907348633
    4. '0' → logprob: -18.000001907348633
    5. '(False' → logprob: -21.000001907348633
    6. '       ' → logprob: -21.625001907348633
    7. '=False' → logprob: -22.875001907348633
    8. '           ' → logprob: -23.125001907348633
    9. '    ' → logprob: -23.375001907348633
    10. '.False' → logprob: -24.125001907348633

Token 1498: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5030330419540405
    2. ' for' → logprob: -1.6280330419540405
    3. 'for' → logprob: -1.7530330419540405
    4. ']*' → logprob: -4.12803316116333
    5. '       ' → logprob: -5.12803316116333
    6. '[' → logprob: -6.62803316116333
    7. ']+' → logprob: -7.62803316116333
    8. '```' → logprob: -7.62803316116333
    9. '           ' → logprob: -8.378032684326172
    10. ',' → logprob: -8.503032684326172

Token 1499: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -4.320199877838604e-07
    2. ' n' → logprob: -15.75
    3. '(n' → logprob: -16.25
    4. '```' → logprob: -16.5
    5. '   ' → logprob: -17.875
    6. '       ' → logprob: -19.0
    7. '
' → logprob: -19.0
    8. 'len' → logprob: -19.75
    9. '           ' → logprob: -20.75
    10. ')n' → logprob: -21.0

Token 1500: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.18868061900138855
    2. '       ' → logprob: -2.438680648803711
    3. 'def' → logprob: -2.563680648803711
    4. '
' → logprob: -5.938680648803711
    5. '   ' → logprob: -6.188680648803711
    6. ' for' → logprob: -6.688680648803711
    7. '```' → logprob: -6.813680648803711
    8. 'stack' → logprob: -8.438680648803711
    9. 'queue' → logprob: -8.938680648803711
    10. 'from' → logprob: -9.188680648803711

Token 1501: '       ' (ID: 309)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7840395569801331
    2. 'for' → logprob: -0.7840395569801331
    3. '       ' → logprob: -2.5340394973754883
    4. 'components' → logprob: -5.159039497375488
    5. 'from' → logprob: -7.159039497375488
    6. '   ' → logprob: -7.534039497375488
    7. '```' → logprob: -8.409039497375488
    8. 'stack' → logprob: -9.034039497375488
    9. 'queue' → logprob: -9.659039497375488
    10. ' for' → logprob: -10.784039497375488

Token 1502: ' components' (ID: 10674)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.21441888809204102
    2. 'components' (adapté à ' components') → logprob: -1.714418888092041
    3. 'for' → logprob: -4.464418888092041
    4. 'com' → logprob: -6.839418888092041
    5. '       ' → logprob: -8.964418411254883
    6. 'from' → logprob: -9.089418411254883
    7. 'component' → logprob: -9.714418411254883
    8. 'comp' → logprob: -11.714418411254883
    9. '```' → logprob: -11.839418411254883
    10. 'import' → logprob: -12.339418411254883

Token 1503: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5059939026832581
    2. ' =' → logprob: -1.0059938430786133
    3. '=[]' → logprob: -3.5059938430786133
    4. '=[]
' → logprob: -6.880993843078613
    5. '.append' → logprob: -9.255993843078613
    6. '=[' → logprob: -9.505993843078613
    7. '=[]
' → logprob: -9.880993843078613
    8. '```' → logprob: -10.630993843078613
    9. '=True' → logprob: -10.630993843078613
    10. '[]' → logprob: -10.755993843078613

Token 1504: ' []
' (ID: 8911)
  Prédit: '[]
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]
' → logprob: -0.0666973888874054
    2. '[]' → logprob: -3.316697359085083
    3. '[]

' → logprob: -3.566697359085083
    4. '[]"' → logprob: -15.691697120666504
    5. ' []
' → logprob: -16.19169807434082
    6. '   ' → logprob: -17.81669807434082
    7. '[],' → logprob: -18.31669807434082
    8. '[];
' → logprob: -18.56669807434082
    9. '[
' → logprob: -18.56669807434082
    10. '[][]' → logprob: -18.56669807434082

Token 1505: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04017834737896919
    2. 'for' → logprob: -3.6651782989501953
    3. 'def' → logprob: -4.790178298950195
    4. '```' → logprob: -5.290178298950195
    5. '   ' → logprob: -8.665178298950195
    6. ' for' → logprob: -8.665178298950195
    7. 'from' → logprob: -10.540178298950195
    8. '        
' → logprob: -11.040178298950195
    9. '           ' → logprob: -11.165178298950195
    10. '
' → logprob: -11.290178298950195

Token 1506: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.16084851324558258
    2. 'def' → logprob: -1.9108484983444214
    3. 'from' → logprob: -8.160848617553711
    4. '       ' → logprob: -8.285848617553711
    5. '
' → logprob: -10.160848617553711
    6. '```' → logprob: -10.160848617553711
    7. ' for' → logprob: -12.410848617553711
    8. '        
' → logprob: -12.535848617553711
    9. 'import' → logprob: -14.035848617553711
    10. '   ' → logprob: -15.160848617553711

Token 1507: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.17232030630111694
    2. 'u' → logprob: -2.4223203659057617
    3. 'v' → logprob: -2.6723203659057617
    4. 'node' → logprob: -8.047320365905762
    5. 'idx' → logprob: -9.297320365905762
    6. 'start' → logprob: -10.672320365905762
    7. ' i' → logprob: -10.672320365905762
    8. ' u' → logprob: -12.047320365905762
    9. '
' → logprob: -12.047320365905762
    10. ' v' → logprob: -12.547320365905762

Token 1508: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01606733538210392
    2. 'in' → logprob: -4.1410675048828125
    3. '_' → logprob: -12.016067504882812
    4. '_in' → logprob: -12.266067504882812
    5. 'range' → logprob: -12.641067504882812
    6. '[' → logprob: -12.891067504882812
    7. '	in' → logprob: -13.266067504882812
    8. 'In' → logprob: -13.391067504882812
    9. '   ' → logprob: -13.516067504882812
    10. '```' → logprob: -13.641067504882812

Token 1509: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.676292231422849e-05
    2. ' range' → logprob: -11.000017166137695
    3. '   ' → logprob: -19.750017166137695
    4. '
' → logprob: -20.625017166137695
    5. 'visited' → logprob: -21.250017166137695
    6. ' ' → logprob: -21.875017166137695
    7. '	range' → logprob: -22.000017166137695
    8. '  ' → logprob: -22.250017166137695
    9. '(range' → logprob: -22.375017166137695
    10. '```' → logprob: -22.500017166137695

Token 1510: '(n' (ID: 2406)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -2.7610454708337784e-05
    2. '(n' → logprob: -11.125027656555176
    3. 'range' → logprob: -11.750027656555176
    4. ' n' → logprob: -12.875027656555176
    5. '
' → logprob: -13.500027656555176
    6. '   ' → logprob: -14.625027656555176
    7. '```' → logprob: -15.625027656555176
    8. '       ' → logprob: -15.875027656555176
    9. ')' → logprob: -16.50002670288086
    10. '(' → logprob: -16.62502670288086

Token 1511: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.0020070301834493876
    2. '       ' → logprob: -6.502007007598877
    3. ':
' → logprob: -7.877007007598877
    4. ']:
' → logprob: -11.127007484436035
    5. '):' → logprob: -11.127007484436035
    6. '           ' → logprob: -11.252007484436035
    7. '():
' → logprob: -11.377007484436035
    8. '   ' → logprob: -11.377007484436035
    9. ''):
' → logprob: -11.627007484436035
    10. ')' → logprob: -11.877007484436035

Token 1512: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003094412386417389
    2. '       ' → logprob: -6.12809419631958
    3. '   ' → logprob: -7.75309419631958
    4. ' if' → logprob: -8.503094673156738
    5. '```' → logprob: -9.128094673156738
    6. '	       ' → logprob: -9.878094673156738
    7. 'if' → logprob: -10.003094673156738
    8. '<|end|>' → logprob: -10.878094673156738
    9. '	   ' → logprob: -11.503094673156738
    10. '<|end|>' → logprob: -11.503094673156738

Token 1513: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.03821774572134018
    2. '           ' → logprob: -4.038217544555664
    3. ' if' → logprob: -4.038217544555664
    4. '       ' → logprob: -6.163217544555664
    5. '```' → logprob: -9.163217544555664
    6. '   ' → logprob: -10.788217544555664
    7. '	if' → logprob: -13.038217544555664
    8. 'If' → logprob: -13.663217544555664
    9. '               ' → logprob: -13.788217544555664
    10. '
' → logprob: -13.788217544555664

Token 1514: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.0001831565605243668
    2. ' not' → logprob: -8.75018310546875
    3. '           ' → logprob: -11.50018310546875
    4. 'visited' → logprob: -12.00018310546875
    5. '   ' → logprob: -12.37518310546875
    6. '
' → logprob: -12.75018310546875
    7. '(not' → logprob: -14.87518310546875
    8. '!' → logprob: -15.25018310546875
    9. '       ' → logprob: -15.37518310546875
    10. '	not' → logprob: -15.75018310546875

Token 1515: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -5.848420551046729e-05
    2. ' visited' → logprob: -9.7500581741333
    3. '   ' → logprob: -16.000059127807617
    4. '
' → logprob: -17.750059127807617
    5. '```' → logprob: -17.750059127807617
    6. '       ' → logprob: -19.125059127807617
    7. ' ' → logprob: -20.125059127807617
    8. 'Visited' → logprob: -20.250059127807617
    9. '           ' → logprob: -20.500059127807617
    10. '  ' → logprob: -20.750059127807617

Token 1516: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.5861724831629544e-05
    2. '[' → logprob: -10.750056266784668
    3. ':
' → logprob: -10.750056266784668
    4. '[
' → logprob: -12.125056266784668
    5. 'i' → logprob: -12.750056266784668
    6. '```' → logprob: -13.375056266784668
    7. '(i' → logprob: -13.500056266784668
    8. 'and' → logprob: -14.875056266784668
    9. '   ' → logprob: -15.250056266784668
    10. '       ' → logprob: -15.375056266784668

Token 1517: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.00543284323066473
    2. ':
' → logprob: -5.630432605743408
    3. '):
' → logprob: -7.005432605743408
    4. '():
' → logprob: -7.880432605743408
    5. '           ' → logprob: -9.255433082580566
    6. '']:
' → logprob: -9.505433082580566
    7. '       ' → logprob: -9.755433082580566
    8. ']' → logprob: -9.755433082580566
    9. ':' → logprob: -10.005433082580566
    10. ']):
' → logprob: -10.130433082580566

Token 1518: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0066200424917042255
    2. '```' → logprob: -5.131619930267334
    3. '           ' → logprob: -7.881619930267334
    4. ':
' → logprob: -9.506620407104492
    5. '       ' → logprob: -9.631620407104492
    6. ',' → logprob: -9.881620407104492
    7. '``' → logprob: -11.006620407104492
    8. '{
' → logprob: -11.256620407104492
    9. ':' → logprob: -11.381620407104492
    10. '
' → logprob: -11.631620407104492

Token 1519: ' q' (ID: 2335)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.011329801753163338
    2. 'stack' → logprob: -4.761329650878906
    3. 'q' (adapté à ' q') → logprob: -6.511329650878906
    4. ' queue' → logprob: -7.261329650878906
    5. '               ' → logprob: -8.636329650878906
    6. 'que' → logprob: -8.886329650878906
    7. 'dq' → logprob: -9.386329650878906
    8. '           ' → logprob: -10.011329650878906
    9. 'deque' → logprob: -10.136329650878906
    10. '   ' → logprob: -11.136329650878906

Token 1520: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.24788732826709747
    2. ' =' → logprob: -1.997887372970581
    3. '.append' → logprob: -2.497887372970581
    4. '=[]' → logprob: -7.372887134552002
    5. 'deque' → logprob: -8.74788761138916
    6. '=[]
' → logprob: -8.99788761138916
    7. '=[' → logprob: -9.12288761138916
    8. '=True' → logprob: -9.37288761138916
    9. '```' → logprob: -9.37288761138916
    10. '=[
' → logprob: -9.74788761138916

Token 1521: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -1.306760805164231e-05
    2. ' deque' → logprob: -11.25001335144043
    3. '   ' → logprob: -17.37501335144043
    4. '[' → logprob: -17.50001335144043
    5. 'Deque' → logprob: -19.37501335144043
    6. '[(' → logprob: -19.87501335144043
    7. 'de' → logprob: -20.50001335144043
    8. '       ' → logprob: -20.50001335144043
    9. '           ' → logprob: -21.75001335144043
    10. 'collections' → logprob: -21.87501335144043

Token 1522: '([' (ID: 5194)
  Prédit: '(['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.0017521760892122984
    2. '()
' → logprob: -6.5017523765563965
    3. '[i' → logprob: -8.376751899719238
    4. '([(' → logprob: -11.376751899719238
    5. '()' → logprob: -12.376751899719238
    6. '[' → logprob: -13.001751899719238
    7. '[(' → logprob: -14.126751899719238
    8. '[j' → logprob: -15.751751899719238
    9. '.append' → logprob: -16.001752853393555
    10. '   ' → logprob: -16.376752853393555

Token 1523: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.747814349073451e-05
    2. '                   ' → logprob: -11.500017166137695
    3. '               ' → logprob: -12.375017166137695
    4. '(i' → logprob: -13.625017166137695
    5. ' i' → logprob: -13.875017166137695
    6. '[i' → logprob: -14.375017166137695
    7. '   ' → logprob: -16.250017166137695
    8. '           ' → logprob: -16.375017166137695
    9. '                       ' → logprob: -16.625017166137695
    10. '{i' → logprob: -17.125017166137695

Token 1524: '])
' (ID: 5169)
  Prédit: '])
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])
' → logprob: -0.0005023968406021595
    2. '               ' → logprob: -7.875502586364746
    3. '])' → logprob: -9.625502586364746
    4. '                   ' → logprob: -10.750502586364746
    5. '       ' → logprob: -11.500502586364746
    6. '           ' → logprob: -11.625502586364746
    7. '()])
' → logprob: -12.375502586364746
    8. ')
' → logprob: -12.750502586364746
    9. '])
' → logprob: -13.375502586364746
    10. ']);' → logprob: -13.375502586364746

Token 1525: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.009422775357961655
    2. 'visited' → logprob: -4.759422779083252
    3. '           ' → logprob: -7.759422779083252
    4. 'while' → logprob: -8.259422302246094
    5. '       ' → logprob: -10.384422302246094
    6. '```' → logprob: -10.509422302246094
    7. '                   ' → logprob: -10.634422302246094
    8. '   ' → logprob: -10.759422302246094
    9. '			' → logprob: -12.009422302246094
    10. ' visited' → logprob: -12.134422302246094

Token 1526: ' comp' (ID: 1050)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.00688503822311759
    2. '               ' → logprob: -5.006885051727295
    3. '           ' → logprob: -9.631884574890137
    4. 'while' → logprob: -10.131884574890137
    5. '   ' → logprob: -10.631884574890137
    6. '       ' → logprob: -10.881884574890137
    7. '                   ' → logprob: -11.131884574890137
    8. ' visited' → logprob: -12.256884574890137
    9. '```' → logprob: -13.506884574890137
    10. '
' → logprob: -15.631884574890137

Token 1527: ' =' (ID: 314)
  Prédit: '_size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_size' → logprob: -0.597809910774231
    2. 'size' → logprob: -1.472809910774231
    3. ' =' → logprob: -2.2228097915649414
    4. 'onent' → logprob: -2.9728097915649414
    5. 'visited' → logprob: -4.472809791564941
    6. '=' → logprob: -4.847809791564941
    7. 's' → logprob: -5.097809791564941
    8. 'ont' → logprob: -5.347809791564941
    9. '=[]' → logprob: -5.472809791564941
    10. 'on' → logprob: -5.472809791564941

Token 1528: ' []
' (ID: 8911)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.06429462134838104
    2. '[]
' → logprob: -2.8142945766448975
    3. '[' → logprob: -6.564294815063477
    4. '[]' → logprob: -7.314294815063477
    5. ' [' → logprob: -9.064294815063477
    6. '[j' → logprob: -9.814294815063477
    7. 'deque' → logprob: -10.564294815063477
    8. '[])
' → logprob: -11.689294815063477
    9. '[int' → logprob: -12.064294815063477
    10. ' []
' → logprob: -12.064294815063477

Token 1529: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.05106866732239723
    2. 'while' → logprob: -3.1760687828063965
    3. ' while' → logprob: -4.9260687828063965
    4. '```' → logprob: -7.8010687828063965
    5. '                   ' → logprob: -8.551068305969238
    6. '	while' → logprob: -10.051068305969238
    7. '
' → logprob: -10.426068305969238
    8. '   ' → logprob: -10.801068305969238
    9. 'While' → logprob: -11.551068305969238
    10. '                ' → logprob: -11.551068305969238

Token 1530: ' visited' (ID: 18416)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.7416236400604248
    2. 'visited' (adapté à ' visited') → logprob: -0.7416236400604248
    3. '               ' → logprob: -3.241623640060425
    4. '                   ' → logprob: -4.866623878479004
    5. ' while' → logprob: -8.116623878479004
    6. ' visited' → logprob: -9.366623878479004
    7. '
' → logprob: -10.241623878479004
    8. '```' → logprob: -10.366623878479004
    9. '   ' → logprob: -10.741623878479004
    10. '       ' → logprob: -11.616623878479004

Token 1531: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.011972317472100258
    2. '[' → logprob: -4.886972427368164
    3. '[q' → logprob: -5.761972427368164
    4. '=True' → logprob: -7.511972427368164
    5. '.append' → logprob: -8.761972427368164
    6. ' =' → logprob: -9.261972427368164
    7. '=False' → logprob: -9.761972427368164
    8. '[token' → logprob: -9.761972427368164
    9. '```' → logprob: -10.136972427368164
    10. '[I' → logprob: -10.511972427368164

Token 1532: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.009221524931490421
    2. ']=' → logprob: -4.75922155380249
    3. '=True' → logprob: -8.009221076965332
    4. '=' → logprob: -8.884221076965332
    5. ' =' → logprob: -10.509221076965332
    6. '[i' → logprob: -10.884221076965332
    7. '       ' → logprob: -11.134221076965332
    8. '[' → logprob: -11.134221076965332
    9. '=False' → logprob: -11.259221076965332
    10. ']==' → logprob: -11.259221076965332

Token 1533: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014383031986653805
    2. '=True' → logprob: -4.389382839202881
    3. ' =' → logprob: -6.389382839202881
    4. '[' → logprob: -9.264383316040039
    5. '=False' → logprob: -10.014383316040039
    6. '=
' → logprob: -10.889383316040039
    7. ']=' → logprob: -11.139383316040039
    8. '           ' → logprob: -12.389383316040039
    9. '```' → logprob: -12.764383316040039
    10. '[
' → logprob: -13.514383316040039

Token 1534: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -5.836499985889532e-05
    2. ' True' → logprob: -9.7500581741333
    3. '   ' → logprob: -19.375059127807617
    4. '(True' → logprob: -19.500059127807617
    5. '=True' → logprob: -20.875059127807617
    6. '           ' → logprob: -21.000059127807617
    7. '1' → logprob: -21.000059127807617
    8. '               ' → logprob: -22.000059127807617
    9. '
' → logprob: -22.375059127807617
    10. '       ' → logprob: -22.500059127807617

Token 1535: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3824087083339691
    2. '	while' → logprob: -2.007408618927002
    3. '
' → logprob: -2.632408618927002
    4. ' while' → logprob: -3.257408618927002
    5. 'while' → logprob: -4.382408618927002
    6. '```' → logprob: -4.382408618927002
    7. '	           ' → logprob: -4.757408618927002
    8. '                   ' → logprob: -5.132408618927002
    9. '<|end|>' → logprob: -5.132408618927002
    10. '	               ' → logprob: -5.257408618927002

Token 1536: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.15757378935813904
    2. '	while' → logprob: -2.032573699951172
    3. 'while' → logprob: -4.907573699951172
    4. '```' → logprob: -6.032573699951172
    5. ' while' → logprob: -6.532573699951172
    6. '	           ' → logprob: -6.782573699951172
    7. '       ' → logprob: -7.407573699951172
    8. '			' → logprob: -7.532573699951172
    9. '		       ' → logprob: -7.907573699951172
    10. '
' → logprob: -8.532573699951172

Token 1537: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.007698075845837593
    2. ' while' → logprob: -5.632698059082031
    3. '	while' → logprob: -5.632698059082031
    4. '               ' → logprob: -8.007698059082031
    5. '```' → logprob: -9.507698059082031
    6. '   ' → logprob: -9.632698059082031
    7. '       ' → logprob: -10.882698059082031
    8. '
' → logprob: -11.882698059082031
    9. '                   ' → logprob: -12.007698059082031
    10. '           ' → logprob: -13.632698059082031

Token 1538: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -7.779520092299208e-05
    2. ' q' → logprob: -9.500078201293945
    3. '   ' → logprob: -13.625078201293945
    4. '                   ' → logprob: -14.375078201293945
    5. '               ' → logprob: -14.500078201293945
    6. 'len' → logprob: -14.875078201293945
    7. '           ' → logprob: -16.125078201293945
    8. '       ' → logprob: -16.625078201293945
    9. '	q' → logprob: -16.625078201293945
    10. '
' → logprob: -18.250078201293945

Token 1539: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.013420915231108665
    2. ':' → logprob: -4.388421058654785
    3. '.p' → logprob: -8.013421058654785
    4. '```' → logprob: -8.388421058654785
    5. '.append' → logprob: -8.763421058654785
    6. '):
' → logprob: -9.513421058654785
    7. 'p' → logprob: -10.513421058654785
    8. '                   ' → logprob: -10.888421058654785
    9. 'opleft' → logprob: -11.138421058654785
    10. '=' → logprob: -11.388421058654785

Token 1540: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0203293114900589
    2. 'u' → logprob: -4.895329475402832
    3. '		           ' → logprob: -5.520329475402832
    4. '   ' → logprob: -5.645329475402832
    5. '	               ' → logprob: -6.395329475402832
    6. '```' → logprob: -6.645329475402832
    7. ' u' → logprob: -7.645329475402832
    8. 'v' → logprob: -7.770329475402832
    9. 'node' → logprob: -8.645329475402832
    10. 't' → logprob: -9.145329475402832

Token 1541: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' (adapté à ' u') → logprob: -0.002466621110215783
    2. ' u' → logprob: -6.252466678619385
    3. 'v' → logprob: -7.877466678619385
    4. 'node' → logprob: -9.252466201782227
    5. '   ' → logprob: -10.127466201782227
    6. 'cur' → logprob: -11.377466201782227
    7. 'curr' → logprob: -12.252466201782227
    8. 'current' → logprob: -12.752466201782227
    9. '                   ' → logprob: -13.627466201782227
    10. '	u' → logprob: -13.877466201782227

Token 1542: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.32289421558380127
    2. '=' → logprob: -1.3228942155838013
    3. '=u' → logprob: -5.822894096374512
    4. '.append' → logprob: -5.947894096374512
    5. '=q' → logprob: -6.322894096374512
    6. '=p' → logprob: -7.322894096374512
    7. '   ' → logprob: -7.447894096374512
    8. '                   ' → logprob: -7.697894096374512
    9. '       ' → logprob: -8.322894096374512
    10. '.pop' → logprob: -10.072894096374512

Token 1543: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -2.7848862373502925e-05
    2. ' q' → logprob: -10.500027656555176
    3. '                   ' → logprob: -15.125027656555176
    4. '	q' → logprob: -17.375028610229492
    5. '                       ' → logprob: -18.500028610229492
    6. '   ' → logprob: -19.000028610229492
    7. 'deque' → logprob: -19.250028610229492
    8. '                    ' → logprob: -20.125028610229492
    9. '               ' → logprob: -20.375028610229492
    10. 'queue' → logprob: -20.625028610229492

Token 1544: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.00036846695002168417
    2. '.pop' → logprob: -8.000368118286133
    3. '.append' → logprob: -10.875368118286133
    4. '=' → logprob: -11.875368118286133
    5. '.' → logprob: -12.750368118286133
    6. '.dequeue' → logprob: -13.375368118286133
    7. '   ' → logprob: -13.875368118286133
    8. '       ' → logprob: -15.000368118286133
    9. 'p' → logprob: -15.000368118286133
    10. '```' → logprob: -15.625368118286133

Token 1545: 'opleft' (ID: 182170)
  Prédit: 'opleft'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'opleft' → logprob: -5.860340752406046e-05
    2. 'op' → logprob: -10.0000581741333
    3. '```' → logprob: -11.5000581741333
    4. 'ople' → logprob: -13.8750581741333
    5. 'append' → logprob: -14.1250581741333
    6. '   ' → logprob: -14.5000581741333
    7. 'opped' → logprob: -15.5000581741333
    8. 'opl' → logprob: -16.125059127807617
    9. 'p' → logprob: -16.250059127807617
    10. '       ' → logprob: -17.125059127807617

Token 1546: '()
' (ID: 1234)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0021085054613649845
    2. 'for' → logprob: -6.752108573913574
    3. '               ' → logprob: -7.502108573913574
    4. '
' → logprob: -8.252108573913574
    5. '           ' → logprob: -9.752108573913574
    6. ':
' → logprob: -11.252108573913574
    7. '                    
' → logprob: -11.502108573913574
    8. '```' → logprob: -12.002108573913574
    9. '       ' → logprob: -12.127108573913574
    10. ')
' → logprob: -12.252108573913574

Token 1547: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0020918536465615034
    2. '               ' → logprob: -6.877091884613037
    3. 'comp' → logprob: -7.002091884613037
    4. '           ' → logprob: -9.252091407775879
    5. '       ' → logprob: -10.877091407775879
    6. '```' → logprob: -11.252091407775879
    7. '   ' → logprob: -11.502091407775879
    8. '                       ' → logprob: -12.127091407775879
    9. '(comp' → logprob: -13.877091407775879
    10. '
' → logprob: -13.877091407775879

Token 1548: ' comp' (ID: 1050)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' (adapté à ' comp') → logprob: -3.523948907968588e-05
    2. '                   ' → logprob: -11.125035285949707
    3. '               ' → logprob: -11.500035285949707
    4. ' comp' → logprob: -11.875035285949707
    5. '```' → logprob: -13.625035285949707
    6. '	comp' → logprob: -14.125035285949707
    7. '           ' → logprob: -14.625035285949707
    8. '       ' → logprob: -14.750035285949707
    9. '   ' → logprob: -15.000035285949707
    10. '                       ' → logprob: -16.37503433227539

Token 1549: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0003305784775875509
    2. 'append' → logprob: -9.000330924987793
    3. '.' → logprob: -9.375330924987793
    4. '                   ' → logprob: -10.000330924987793
    5. '               ' → logprob: -11.750330924987793
    6. '=' → logprob: -11.750330924987793
    7. '.extend' → logprob: -11.875330924987793
    8. '_append' → logprob: -12.125330924987793
    9. '```' → logprob: -12.250330924987793
    10. ' =' → logprob: -12.375330924987793

Token 1550: '(u' (ID: 17057)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.31327390670776367
    2. '(u' → logprob: -1.3132739067077637
    3. ' u' → logprob: -11.688274383544922
    4. '[u' → logprob: -12.813274383544922
    5. '	u' → logprob: -14.563274383544922
    6. '   ' → logprob: -15.063274383544922
    7. '(' → logprob: -15.938274383544922
    8. '(
' → logprob: -16.688274383544922
    9. '=u' → logprob: -17.063274383544922
    10. '
' → logprob: -17.563274383544922

Token 1551: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.009962541982531548
    2. '                   ' → logprob: -4.634962558746338
    3. ')' → logprob: -8.75996208190918
    4. '               ' → logprob: -10.38496208190918
    5. '           ' → logprob: -11.88496208190918
    6. '       ' → logprob: -12.25996208190918
    7. '   ' → logprob: -13.13496208190918
    8. '')
' → logprob: -14.13496208190918
    9. '                       ' → logprob: -14.13496208190918
    10. '
' → logprob: -14.25996208190918

Token 1552: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00027897433028556406
    2. '```' → logprob: -8.875279426574707
    3. '               ' → logprob: -9.625279426574707
    4. '           ' → logprob: -10.375279426574707
    5. '
' → logprob: -10.625279426574707
    6. '                    
' → logprob: -12.000279426574707
    7. '		           ' → logprob: -12.250279426574707
    8. '       ' → logprob: -13.250279426574707
    9. '   ' → logprob: -14.000279426574707
    10. '                       ' → logprob: -14.125279426574707

Token 1553: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -9.729906196298543e-06
    2. '                   ' → logprob: -11.875009536743164
    3. ' for' → logprob: -13.000009536743164
    4. '```' → logprob: -15.500009536743164
    5. '           ' → logprob: -16.375009536743164
    6. '               ' → logprob: -16.625009536743164
    7. '	for' → logprob: -17.625009536743164
    8. '                    
' → logprob: -18.875009536743164
    9. '
' → logprob: -19.125009536743164
    10. '   ' → logprob: -19.375009536743164

Token 1554: ' w' (ID: 286)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.001192490803077817
    2. 'w' → logprob: -6.751192569732666
    3. ' v' → logprob: -10.751192092895508
    4. 'vv' → logprob: -15.001192092895508
    5. 'vw' → logprob: -15.126192092895508
    6. ' w' → logprob: -16.126192092895508
    7. '	v' → logprob: -16.501192092895508
    8. 'wv' → logprob: -17.126192092895508
    9. 'vj' → logprob: -17.126192092895508
    10. '(v' → logprob: -17.501192092895508

Token 1555: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3132705092430115
    2. 'in' → logprob: -1.3132705688476562
    3. '	in' → logprob: -12.063270568847656
    4. 'w' → logprob: -13.313270568847656
    5. 'In' → logprob: -14.938270568847656
    6. '   ' → logprob: -15.563270568847656
    7. ' ' → logprob: -15.938270568847656
    8. 'import' → logprob: -16.188270568847656
    9. '```' → logprob: -16.188270568847656
    10. 'n' → logprob: -16.688270568847656

Token 1556: ' adj' (ID: 20251)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -6.2729995988775045e-06
    2. ' adj' → logprob: -12.000006675720215
    3. '   ' → logprob: -19.3750057220459
    4. '(adj' → logprob: -19.7500057220459
    5. 'range' → logprob: -20.8750057220459
    6. '           ' → logprob: -21.2500057220459
    7. 'ad' → logprob: -21.3750057220459
    8. 'adm' → logprob: -22.2500057220459
    9. '                   ' → logprob: -22.5000057220459
    10. '       ' → logprob: -22.7500057220459

Token 1557: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -1.9385402993066236e-05
    2. 'u' → logprob: -11.125019073486328
    3. '[w' → logprob: -12.375019073486328
    4. '(u' → logprob: -16.375019073486328
    5. 'w' → logprob: -16.375019073486328
    6. '                   ' → logprob: -17.250019073486328
    7. '```' → logprob: -17.375019073486328
    8. '[' → logprob: -17.375019073486328
    9. '               ' → logprob: -17.750019073486328
    10. '	u' → logprob: -18.000019073486328

Token 1558: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.0282498337328434
    2. '                       ' → logprob: -3.903249740600586
    3. ':
' → logprob: -5.403249740600586
    4. '                   ' → logprob: -6.153249740600586
    5. '):
' → logprob: -7.153249740600586
    6. '():
' → logprob: -9.153249740600586
    7. ']:' → logprob: -10.528249740600586
    8. '               ' → logprob: -11.028249740600586
    9. ']):
' → logprob: -11.028249740600586
    10. '']:
' → logprob: -11.153249740600586

Token 1559: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.00015121731848921627
    2. 'if' → logprob: -9.125151634216309
    3. '```' → logprob: -10.750151634216309
    4. ' if' → logprob: -11.125151634216309
    5. '                   ' → logprob: -13.250151634216309
    6. '                      ' → logprob: -13.750151634216309
    7. '                     ' → logprob: -14.250151634216309
    8. '                           ' → logprob: -14.250151634216309
    9. '					' → logprob: -15.000151634216309
    10. '	                   ' → logprob: -15.125151634216309

Token 1560: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.7082479596138
    2. '                           ' → logprob: -0.9582479596138
    3. ' if' → logprob: -2.2082479000091553
    4. '                       ' → logprob: -4.958248138427734
    5. '                               ' → logprob: -5.708248138427734
    6. '```' → logprob: -5.708248138427734
    7. '   ' → logprob: -9.708248138427734
    8. '
' → logprob: -9.708248138427734
    9. '``' → logprob: -9.833248138427734
    10. '                            ' → logprob: -10.458248138427734

Token 1561: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.008615872822701931
    2. ' not' → logprob: -4.758615970611572
    3. '(not' → logprob: -14.383615493774414
    4. '                       ' → logprob: -15.133615493774414
    5. '                   ' → logprob: -15.258615493774414
    6. '	not' → logprob: -16.008615493774414
    7. '   ' → logprob: -17.008615493774414
    8. '!' → logprob: -17.258615493774414
    9. '                           ' → logprob: -17.633615493774414
    10. '```' → logprob: -18.133615493774414

Token 1562: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -2.45848218582978e-06
    2. ' visited' → logprob: -13.00000286102295
    3. '                   ' → logprob: -17.125001907348633
    4. '           ' → logprob: -17.250001907348633
    5. '   ' → logprob: -18.375001907348633
    6. '               ' → logprob: -18.500001907348633
    7. '
' → logprob: -18.500001907348633
    8. '       ' → logprob: -18.875001907348633
    9. '                       ' → logprob: -18.875001907348633
    10. '                           ' → logprob: -19.875001907348633

Token 1563: '[w' (ID: 94341)
  Prédit: '[w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[w' → logprob: -6.704273118884885e-07
    2. 'w' → logprob: -14.750000953674316
    3. '[' → logprob: -16.625
    4. '                       ' → logprob: -17.125
    5. '```' → logprob: -17.375
    6. '(w' → logprob: -17.5
    7. '               ' → logprob: -17.875
    8. '   ' → logprob: -18.375
    9. '<w' → logprob: -18.375
    10. '       ' → logprob: -18.5

Token 1564: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.0006582272471860051
    2. ':
' → logprob: -8.12565803527832
    3. '                           ' → logprob: -9.37565803527832
    4. ']]:
' → logprob: -10.00065803527832
    5. '                       ' → logprob: -10.12565803527832
    6. ']:
' → logprob: -10.37565803527832
    7. ']:' → logprob: -10.50065803527832
    8. ']' → logprob: -10.62565803527832
    9. '']:
' → logprob: -10.75065803527832
    10. '"]:
' → logprob: -11.00065803527832

Token 1565: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.034470196813344955
    2. '                       ' → logprob: -3.5344700813293457
    3. '```' → logprob: -5.909470081329346
    4. '                               ' → logprob: -6.534470081329346
    5. '                   ' → logprob: -9.159470558166504
    6. '=True' → logprob: -9.409470558166504
    7. '                          ' → logprob: -9.784470558166504
    8. '                            ' → logprob: -9.909470558166504
    9. '               ' → logprob: -10.034470558166504
    10. '<|end|>' → logprob: -10.159470558166504

Token 1566: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' (adapté à ' visited') → logprob: -0.01607484370470047
    2. ' visited' → logprob: -4.6410746574401855
    3. '                               ' → logprob: -5.7660746574401855
    4. '                           ' → logprob: -6.7660746574401855
    5. 'True' → logprob: -6.8910746574401855
    6. '```' → logprob: -7.0160746574401855
    7. ' True' → logprob: -9.641075134277344
    8. '                       ' → logprob: -11.266075134277344
    9. '               ' → logprob: -12.391075134277344
    10. '                             ' → logprob: -12.891075134277344

Token 1567: '[w' (ID: 94341)
  Prédit: '[w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[w' → logprob: -1.7432603272027336e-06
    2. 'w' → logprob: -13.500001907348633
    3. '```' → logprob: -16.875001907348633
    4. '[' → logprob: -17.000001907348633
    5. '                           ' → logprob: -17.250001907348633
    6. '                               ' → logprob: -18.125001907348633
    7. '[u' → logprob: -18.375001907348633
    8. '	w' → logprob: -18.500001907348633
    9. '                       ' → logprob: -18.750001907348633
    10. '<w' → logprob: -19.000001907348633

Token 1568: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.14812283217906952
    2. '[w' → logprob: -2.273122787475586
    3. ']=' → logprob: -3.523122787475586
    4. '[u' → logprob: -5.398122787475586
    5. 'w' → logprob: -8.398122787475586
    6. '                           ' → logprob: -9.148122787475586
    7. ']:
' → logprob: -9.398122787475586
    8. '                       ' → logprob: -9.773122787475586
    9. ']==' → logprob: -10.148122787475586
    10. '                               ' → logprob: -10.273122787475586

Token 1569: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.024055801331996918
    2. ' =' → logprob: -4.0240559577941895
    3. '=True' → logprob: -5.2740559577941895
    4. ']=' → logprob: -7.6490559577941895
    5. ']' → logprob: -8.899055480957031
    6. '                           ' → logprob: -9.774055480957031
    7. '=False' → logprob: -10.399055480957031
    8. '                               ' → logprob: -11.274055480957031
    9. '=
' → logprob: -11.399055480957031
    10. '```' → logprob: -11.524055480957031

Token 1570: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0015034328680485487
    2. ' True' → logprob: -6.5015034675598145
    3. '(True' → logprob: -14.126502990722656
    4. '1' → logprob: -15.626502990722656
    5. '=True' → logprob: -16.251502990722656
    6. '[' → logprob: -16.376502990722656
    7. 'true' → logprob: -18.626502990722656
    8. '_true' → logprob: -18.876502990722656
    9. '.True' → logprob: -19.251502990722656
    10. 'TRUE' → logprob: -19.626502990722656

Token 1571: '
' (ID: 198)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.0021506191696971655
    2. '                               ' → logprob: -6.502150535583496
    3. '                       ' → logprob: -8.502150535583496
    4. 'q' → logprob: -9.127150535583496
    5. ' q' → logprob: -9.127150535583496
    6. '```' → logprob: -9.752150535583496
    7. ',' → logprob: -10.002150535583496
    8. '
' → logprob: -10.627150535583496
    9. '                            ' → logprob: -10.752150535583496
    10. '						' → logprob: -10.877150535583496

Token 1572: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.0004589094896800816
    2. '                       ' → logprob: -8.375458717346191
    3. '```' → logprob: -9.375458717346191
    4. '                               ' → logprob: -9.500458717346191
    5. '						' → logprob: -10.250458717346191
    6. '                            ' → logprob: -12.000458717346191
    7. '	                       ' → logprob: -12.250458717346191
    8. '                   ' → logprob: -12.500458717346191
    9. '                          ' → logprob: -12.750458717346191
    10. ',' → logprob: -13.125458717346191

Token 1573: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' (adapté à ' q') → logprob: -1.4736459888808895e-05
    2. ' q' → logprob: -12.250014305114746
    3. '                           ' → logprob: -12.250014305114746
    4. '```' → logprob: -12.375014305114746
    5. '                               ' → logprob: -14.625014305114746
    6. '                                   ' → logprob: -15.125014305114746
    7. '``' → logprob: -16.750015258789062
    8. '	q' → logprob: -16.875015258789062
    9. '_q' → logprob: -17.125015258789062
    10. '
' → logprob: -18.500015258789062

Token 1574: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -9.269565634895116e-05
    2. 'append' → logprob: -9.750092506408691
    3. '                           ' → logprob: -11.625092506408691
    4. '.enqueue' → logprob: -11.750092506408691
    5. '.p' → logprob: -12.375092506408691
    6. '.extend' → logprob: -13.000092506408691
    7. '```' → logprob: -13.000092506408691
    8. '.push' → logprob: -13.500092506408691
    9. '                               ' → logprob: -13.625092506408691
    10. '_append' → logprob: -13.875092506408691

Token 1575: '(w' (ID: 7420)
  Prédit: '(w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -5.204720582696609e-05
    2. 'w' → logprob: -9.875052452087402
    3. '(' → logprob: -15.375052452087402
    4. '[w' → logprob: -16.000051498413086
    5. '(
' → logprob: -16.625051498413086
    6. '	w' → logprob: -16.750051498413086
    7. '((' → logprob: -17.125051498413086
    8. '<w' → logprob: -17.125051498413086
    9. '([' → logprob: -19.125051498413086
    10. ' w' → logprob: -19.625051498413086

Token 1576: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.022733455523848534
    2. 'w' → logprob: -4.272733688354492
    3. ')
' → logprob: -5.147733688354492
    4. '(w' → logprob: -6.897733688354492
    5. '[w' → logprob: -7.022733688354492
    6. '                           ' → logprob: -8.022733688354492
    7. '                       ' → logprob: -8.647733688354492
    8. ',w' → logprob: -9.647733688354492
    9. '])' → logprob: -10.022733688354492
    10. '               ' → logprob: -10.397733688354492

Token 1577: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.08111806958913803
    2. '                           ' → logprob: -3.206118106842041
    3. '```' → logprob: -4.081118106842041
    4. '
' → logprob: -4.331118106842041
    5. '       ' → logprob: -5.456118106842041
    6. '                       ' → logprob: -6.456118106842041
    7. '                   ' → logprob: -6.831118106842041
    8. '<|end|>' → logprob: -9.206117630004883
    9. '           ' → logprob: -9.331117630004883
    10. '                            
' → logprob: -9.706117630004883

Token 1578: ' components' (ID: 10674)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007769882213324308
    2. 'components' (adapté à ' components') → logprob: -5.00777006149292
    3. '               ' → logprob: -7.00777006149292
    4. '```' → logprob: -9.007769584655762
    5. ' components' → logprob: -10.882769584655762
    6. '#' → logprob: -13.382769584655762
    7. '           ' → logprob: -13.382769584655762
    8. '   ' → logprob: -13.632769584655762
    9. '
' → logprob: -14.007769584655762
    10. '      ' → logprob: -14.257769584655762

Token 1579: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00010759611177491024
    2. '.' → logprob: -9.625107765197754
    3. '               ' → logprob: -10.500107765197754
    4. '                   ' → logprob: -12.500107765197754
    5. '           ' → logprob: -12.875107765197754
    6. 'append' → logprob: -13.000107765197754
    7. '```' → logprob: -13.375107765197754
    8. ' .' → logprob: -14.250107765197754
    9. '       ' → logprob: -14.625107765197754
    10. 'Append' → logprob: -14.750107765197754

Token 1580: '(comp' (ID: 60272)
  Prédit: '(comp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(comp' → logprob: -2.1008713702030946e-06
    2. '(' → logprob: -13.750001907348633
    3. 'comp' → logprob: -14.375001907348633
    4. '   ' → logprob: -15.625001907348633
    5. '((' → logprob: -16.250001907348633
    6. '	comp' → logprob: -17.500001907348633
    7. '(cont' → logprob: -17.625001907348633
    8. '       ' → logprob: -18.000001907348633
    9. '           ' → logprob: -18.250001907348633
    10. '               ' → logprob: -18.750001907348633

Token 1581: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00039849523454904556
    2. '       ' → logprob: -7.875398635864258
    3. ')
' → logprob: -11.375398635864258
    4. '<|end|>' → logprob: -13.125398635864258
    5. '               ' → logprob: -13.625398635864258
    6. '           ' → logprob: -14.125398635864258
    7. '   ' → logprob: -14.250398635864258
    8. '```' → logprob: -14.625398635864258
    9. '())' → logprob: -15.000398635864258
    10. ' )' → logprob: -15.125398635864258

Token 1582: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0029349105898290873
    2. '```' → logprob: -6.37793493270874
    3. 'best' → logprob: -7.50293493270874
    4. '   ' → logprob: -8.127934455871582
    5. '        
' → logprob: -8.877934455871582
    6. '#' → logprob: -9.377934455871582
    7. '
' → logprob: -9.752934455871582
    8. 'import' → logprob: -10.627934455871582
    9. 'min' → logprob: -10.752934455871582
    10. 'def' → logprob: -11.002934455871582

Token 1583: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.40941160917282104
    2. 'best' → logprob: -1.1594116687774658
    3. 'result' → logprob: -4.909411430358887
    4. 'def' → logprob: -5.159411430358887
    5. '#' (adapté à ' #') → logprob: -5.784411430358887
    6. 'min' → logprob: -5.784411430358887
    7. 'results' → logprob: -7.284411430358887
    8. '   ' → logprob: -7.659411430358887
    9. 'res' → logprob: -7.784411430358887
    10. '```' → logprob: -7.784411430358887

Token 1584: ' Fonction' (ID: 189149)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.043439075350761414
    2. 'min' → logprob: -4.043438911437988
    3. '       ' → logprob: -4.793438911437988
    4. 'res' → logprob: -5.043438911437988
    5. 'result' → logprob: -5.293438911437988
    6. 'ans' → logprob: -5.793438911437988
    7. 'def' → logprob: -6.668438911437988
    8. 'answer' → logprob: -7.543438911437988
    9. '   ' → logprob: -8.668438911437988
    10. 'minimal' → logprob: -9.793438911437988

Token 1585: ' pour' (ID: 1930)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0076403445564210415
    2. 'calculate' → logprob: -5.757640361785889
    3. 'surface' → logprob: -5.757640361785889
    4. 'compute' → logprob: -7.132640361785889
    5. 'calc' → logprob: -8.63263988494873
    6. '_surface' → logprob: -9.50763988494873
    7. ' def' → logprob: -9.63263988494873
    8. 'to' → logprob: -10.63263988494873
    9. ' surface' → logprob: -10.63263988494873
    10. '#' → logprob: -10.75763988494873

Token 1586: ' calcul' (ID: 7559)
  Prédit: 'calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'calcul' → logprob: -0.0595661997795105
    2. 'calc' → logprob: -3.5595662593841553
    3. 'compute' → logprob: -3.8095662593841553
    4. 'calculate' → logprob: -5.309566020965576
    5. 'cal' → logprob: -6.809566020965576
    6. 'def' → logprob: -7.184566020965576
    7. 'comput' → logprob: -9.059566497802734
    8. 'Calcul' → logprob: -9.059566497802734
    9. 'count' → logprob: -9.434566497802734
    10. 'comp' → logprob: -9.934566497802734

Token 1587: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.012661506421864033
    2. 'def' → logprob: -4.387661457061768
    3. 'ate' → logprob: -9.137661933898926
    4. '#' → logprob: -11.637661933898926
    5. 'cul' → logprob: -12.262661933898926
    6. 'culate' → logprob: -12.762661933898926
    7. 'uer' → logprob: -12.762661933898926
    8. '
' → logprob: -12.887661933898926
    9. 'ating' → logprob: -12.887661933898926
    10. 'calcul' → logprob: -13.012661933898926

Token 1588: ' surface' (ID: 9753)
  Prédit: 'surface'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'surface' → logprob: -0.40201011300086975
    2. 'def' → logprob: -1.6520100831985474
    3. 'la' → logprob: -2.527010202407837
    4. 'le' → logprob: -3.777010202407837
    5. 'nombre' → logprob: -4.902009963989258
    6. 'calculate' → logprob: -5.027009963989258
    7. '#' → logprob: -5.402009963989258
    8. 'count' → logprob: -5.777009963989258
    9. 'len' → logprob: -6.027009963989258
    10. 'compute' → logprob: -6.027009963989258

Token 1589: ' d' (ID: 272)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.004094308707863092
    2. '       ' → logprob: -5.879094123840332
    3. '   ' → logprob: -6.879094123840332
    4. '```' → logprob: -8.879094123840332
    5. ' def' → logprob: -9.379094123840332
    6. '
' → logprob: -10.504094123840332
    7. '	def' → logprob: -12.254094123840332
    8. '        
' → logprob: -13.754094123840332
    9. '``' → logprob: -13.879094123840332
    10. '(def' → logprob: -15.004094123840332

Token 1590: ''un' (ID: 9788)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.2507858276367188
    2. ''un' → logprob: -1.7507858276367188
    3. 'ef' → logprob: -1.8757858276367188
    4. 'def' → logprob: -1.8757858276367188
    5. 'une' → logprob: -2.7507858276367188
    6. 'un' → logprob: -3.0007858276367188
    7. ''une' → logprob: -3.6257858276367188
    8. 'u' → logprob: -3.8757858276367188
    9. ''ensemble' → logprob: -4.000785827636719
    10. '```' → logprob: -4.750785827636719

Token 1591: ' ensemble' (ID: 33081)
  Prédit: 'ensemble'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ensemble' → logprob: -0.04909029230475426
    2. 'subset' → logprob: -3.1740903854370117
    3. '#' → logprob: -5.924090385437012
    4. 's' → logprob: -6.299090385437012
    5. 'sub' → logprob: -6.924090385437012
    6. 'def' → logprob: -8.049090385437012
    7. '```' → logprob: -8.924090385437012
    8. 'ense' → logprob: -9.924090385437012
    9. 'set' → logprob: -10.299090385437012
    10. '
' → logprob: -11.424090385437012

Token 1592: ' de' (ID: 334)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.005327674560248852
    2. '```' → logprob: -5.2553277015686035
    3. '``' → logprob: -9.755327224731445
    4. '
' → logprob: -11.255327224731445
    5. '_def' → logprob: -12.255327224731445
    6. '#' → logprob: -12.505327224731445
    7. '(
' → logprob: -12.755327224731445
    8. ' def' → logprob: -12.755327224731445
    9. '       ' → logprob: -13.130327224731445
    10. '   ' → logprob: -13.755327224731445

Token 1593: ' cubes' (ID: 88455)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.07395041733980179
    2. 'nodes' → logprob: -2.8239505290985107
    3. 'indices' → logprob: -5.448950290679932
    4. 'vertices' → logprob: -5.698950290679932
    5. 'som' → logprob: -6.573950290679932
    6. 'points' → logprob: -7.573950290679932
    7. 'verts' → logprob: -7.823950290679932
    8. '#' → logprob: -7.823950290679932
    9. '```' → logprob: -7.948950290679932
    10. 'c' → logprob: -8.19895076751709

Token 1594: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0036963969469070435
    2. '
' → logprob: -6.753696441650391
    3. '       ' → logprob: -6.753696441650391
    4. '   ' → logprob: -7.003696441650391
    5. '```' → logprob: -7.878696441650391
    6. ' def' → logprob: -9.75369644165039
    7. '``' → logprob: -12.62869644165039
    8. '        
' → logprob: -12.75369644165039
    9. '	def' → logprob: -13.00369644165039
    10. '    
' → logprob: -14.87869644165039

Token 1595: '       ' (ID: 309)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.029902637004852295
    2. '```' → logprob: -3.779902696609497
    3. '
' → logprob: -5.154902458190918
    4. '``' → logprob: -7.404902458190918
    5. '   ' → logprob: -9.529902458190918
    6. '(
' → logprob: -9.654902458190918
    7. '       ' → logprob: -10.279902458190918
    8. ' def' → logprob: -10.529902458190918
    9. '(' → logprob: -11.279902458190918
    10. '#' → logprob: -11.904902458190918

Token 1596: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.002327363472431898
    2. '```' → logprob: -6.8773274421691895
    3. '   ' → logprob: -7.0023274421691895
    4. '       ' → logprob: -8.377326965332031
    5. '
' → logprob: -9.252326965332031
    6. ' def' → logprob: -10.002326965332031
    7. '``' → logprob: -11.502326965332031
    8. '	def' → logprob: -13.627326965332031
    9. '    
' → logprob: -14.877326965332031
    10. '        
' → logprob: -15.002326965332031

Token 1597: ' Surface' (ID: 46665)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0001414426224073395
    2. '       ' → logprob: -9.625141143798828
    3. '
' → logprob: -9.875141143798828
    4. '   ' → logprob: -11.125141143798828
    5. '#' → logprob: -12.000141143798828
    6. '```' → logprob: -13.375141143798828
    7. ' def' → logprob: -13.625141143798828
    8. '	def' → logprob: -15.875141143798828
    9. '``' → logprob: -17.000141143798828
    10. '        
' → logprob: -17.375141143798828

Token 1598: ' =' (ID: 314)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.023959200829267502
    2. ' =' → logprob: -5.148959159851074
    3. '
' → logprob: -5.398959159851074
    4. '```' → logprob: -5.523959159851074
    5. '=' → logprob: -5.773959159851074
    6. '   ' → logprob: -6.398959159851074
    7. ' def' → logprob: -6.773959159851074
    8. '_def' → logprob: -7.398959159851074
    9. '(
' → logprob: -7.773959159851074
    10. '_size' → logprob: -8.023959159851074

Token 1599: ' ' (ID: 220)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.11777489632368088
    2. 'lambda' → logprob: -2.2427749633789062
    3. 'def' → logprob: -5.617774963378906
    4. '```' → logprob: -6.992774963378906
    5. ' lambda' → logprob: -8.242774963378906
    6. '(lambda' → logprob: -10.242774963378906
    7. '   ' → logprob: -10.367774963378906
    8. ' ' → logprob: -10.867774963378906
    9. '
' → logprob: -11.367774963378906
    10. '`' → logprob: -11.867774963378906

Token 1600: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.34221673011779785
    2. 'lambda' → logprob: -1.4672167301177979
    3. 'def' → logprob: -2.842216730117798
    4. '```' → logprob: -8.217216491699219
    5. '   ' → logprob: -8.842216491699219
    6. '(lambda' → logprob: -8.842216491699219
    7. 'len' → logprob: -9.092216491699219
    8. ' lambda' → logprob: -9.092216491699219
    9. '(' → logprob: -9.592216491699219
    10. '
' → logprob: -10.592216491699219

Token 1601: '*s' (ID: 71191)
  Prédit: '*s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*s' → logprob: -0.2525184154510498
    2. '*' → logprob: -1.5025184154510498
    3. '*k' → logprob: -7.877518653869629
    4. ' *' → logprob: -8.502518653869629
    5. '*(' → logprob: -13.377518653869629
    6. '*c' → logprob: -13.502518653869629
    7. '*u' → logprob: -14.627518653869629
    8. '```' → logprob: -14.752518653869629
    9. '*w' → logprob: -14.877518653869629
    10. '*a' → logprob: -15.002518653869629

Token 1602: '*s' (ID: 71191)
  Prédit: '*s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*s' → logprob: -0.25631171464920044
    2. '*' → logprob: -2.1313116550445557
    3. '*k' → logprob: -2.2563116550445557
    4. '*c' → logprob: -6.881311893463135
    5. ' *' → logprob: -7.631311893463135
    6. '*n' → logprob: -8.131311416625977
    7. '```' → logprob: -8.131311416625977
    8. '*u' → logprob: -8.506311416625977
    9. '*(' → logprob: -9.381311416625977
    10. '*num' → logprob: -9.756311416625977

Token 1603: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.010475479997694492
    2. ' *' → logprob: -4.6354756355285645
    3. '*k' → logprob: -7.8854756355285645
    4. '*num' → logprob: -8.760475158691406
    5. '```' → logprob: -9.510475158691406
    6. '*(' → logprob: -10.260475158691406
    7. '#' → logprob: -10.885475158691406
    8. '*c' → logprob: -11.510475158691406
    9. '*l' → logprob: -11.760475158691406
    10. '*x' → logprob: -12.010475158691406

Token 1604: 'len' (ID: 3303)
  Prédit: 'len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.00043698702938854694
    2. '(len' → logprob: -8.000436782836914
    3. 'k' → logprob: -9.250436782836914
    4. '```' → logprob: -12.500436782836914
    5. ' len' → logprob: -13.625436782836914
    6. 'def' → logprob: -14.875436782836914
    7. '[len' → logprob: -17.000436782836914
    8. '	len' → logprob: -17.250436782836914
    9. '=len' → logprob: -17.375436782836914
    10. '<len' → logprob: -18.375436782836914

Token 1605: ' -' (ID: 533)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8015666007995605
    2. '(selected' → logprob: -1.4265666007995605
    3. '(set' → logprob: -2.0515666007995605
    4. '(selection' → logprob: -3.0515666007995605
    5. '(sub' → logprob: -3.4265666007995605
    6. 'subset' → logprob: -3.8015666007995605
    7. '(en' → logprob: -3.9265666007995605
    8. 'ensemble' → logprob: -4.4265666007995605
    9. '(c' → logprob: -4.5515666007995605
    10. '(nodes' → logprob: -4.9265666007995605

Token 1606: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.09126076102256775
    2. '(' → logprob: -2.7162606716156006
    3. 'def' → logprob: -4.59126091003418
    4. 'lambda' → logprob: -5.46626091003418
    5. '(lambda' → logprob: -6.34126091003418
    6. '   ' → logprob: -6.71626091003418
    7. ' ' → logprob: -6.84126091003418
    8. '6' → logprob: -6.84126091003418
    9. '```' → logprob: -7.46626091003418
    10. ' (' → logprob: -7.84126091003418

Token 1607: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.010194102302193642
    2. '(' → logprob: -4.635194301605225
    3. '   ' → logprob: -9.010193824768066
    4. ' ' → logprob: -9.260193824768066
    5. '```' → logprob: -9.260193824768066
    6. 'def' → logprob: -9.510193824768066
    7. ' (' → logprob: -11.385193824768066
    8. '6' → logprob: -11.760193824768066
    9. 'len' → logprob: -11.885193824768066
    10. '(
' → logprob: -12.385193824768066

Token 1608: '*s' (ID: 71191)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.1805451661348343
    2. '*s' → logprob: -1.9305452108383179
    3. ' *' → logprob: -3.9305450916290283
    4. '*w' → logprob: -9.05554485321045
    5. '*(' → logprob: -9.43054485321045
    6. '*l' → logprob: -9.68054485321045
    7. '```' → logprob: -9.93054485321045
    8. '*c' → logprob: -10.18054485321045
    9. '*out' → logprob: -10.43054485321045
    10. '*num' → logprob: -10.55554485321045

Token 1609: '*s' (ID: 71191)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.03853047639131546
    2. '*s' → logprob: -3.2885305881500244
    3. ' *' → logprob: -9.038530349731445
    4. '<|end|>' → logprob: -9.163530349731445
    5. '**' → logprob: -10.038530349731445
    6. '*object' → logprob: -10.288530349731445
    7. '*num' → logprob: -10.288530349731445
    8. '*(' → logprob: -10.538530349731445
    9. '*f' → logprob: -11.163530349731445
    10. '*w' → logprob: -11.288530349731445

Token 1610: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.0016755410470068455
    2. '*num' → logprob: -6.751675605773926
    3. '*(' → logprob: -8.001675605773926
    4. ' *' → logprob: -9.376675605773926
    5. '*out' → logprob: -10.876675605773926
    6. '*object' → logprob: -10.876675605773926
    7. '*m' → logprob: -11.001675605773926
    8. '**' → logprob: -11.876675605773926
    9. '*
' → logprob: -12.376675605773926
    10. '```' → logprob: -12.376675605773926

Token 1611: 'nombre' (ID: 28576)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.17526672780513763
    2. '(sum' → logprob: -2.300266742706299
    3. 'edges' → logprob: -3.800266742706299
    4. '(len' → logprob: -4.300266742706299
    5. 'len' → logprob: -4.300266742706299
    6. '(' → logprob: -6.050266742706299
    7. '(edges' → logprob: -6.050266742706299
    8. '(
' → logprob: -6.300266742706299
    9. '((' → logprob: -6.800266742706299
    10. 'def' → logprob: -7.425266742706299

Token 1612: ' d' (ID: 272)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2082594335079193
    2. '_of' → logprob: -2.708259344100952
    3. '_edges' → logprob: -2.708259344100952
    4. '_adj' → logprob: -3.333259344100952
    5. '_de' → logprob: -5.458259582519531
    6. '_neighbors' → logprob: -5.583259582519531
    7. '_d' → logprob: -6.333259582519531
    8. ' _' → logprob: -6.708259582519531
    9. '_internal' → logprob: -6.708259582519531
    10. '_ad' → logprob: -6.958259582519531

Token 1613: ''ar' (ID: 54307)
  Prédit: '_edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_edges' → logprob: -0.11740660667419434
    2. '_ar' → logprob: -2.7424066066741943
    3. '_' → logprob: -3.6174066066741943
    4. '_are' → logprob: -4.867406845092773
    5. 'ar' → logprob: -5.117406845092773
    6. '_internal' → logprob: -6.742406845092773
    7. '_adj' → logprob: -6.867406845092773
    8. 'edges' → logprob: -7.242406845092773
    9. '_faces' → logprob: -7.242406845092773
    10. 'are' → logprob: -7.992406845092773

Token 1614: 'êtes' (ID: 23720)
  Prédit: 'êtes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êtes' → logprob: -0.014034564606845379
    2. 'edges' → logprob: -4.389034748077393
    3. 'es' → logprob: -8.139034271240234
    4. '_edges' → logprob: -8.139034271240234
    5. 'cs' → logprob: -8.389034271240234
    6. 'r' → logprob: -9.139034271240234
    7. 'êts' → logprob: -9.514034271240234
    8. 't' → logprob: -9.764034271240234
    9. ' edges' → logprob: -9.764034271240234
    10. 'ètes' → logprob: -9.764034271240234

Token 1615: ' internes' (ID: 183434)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.02524610236287117
    2. '
' → logprob: -4.1502461433410645
    3. '```' → logprob: -4.7752461433410645
    4. '``' → logprob: -8.275245666503906
    5. '#' → logprob: -8.650245666503906
    6. '       ' → logprob: -8.775245666503906
    7. '(
' → logprob: -10.275245666503906
    8. ' def' → logprob: -10.525245666503906
    9. '_def' → logprob: -10.525245666503906
    10. '(def' → logprob: -11.775245666503906

Token 1616: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4344538748264313
    2. 'def' → logprob: -1.4344538450241089
    3. '
' → logprob: -2.1844539642333984
    4. '```' → logprob: -6.684453964233398
    5. '        
' → logprob: -8.559453964233398
    6. '   ' → logprob: -9.184453964233398
    7. '#' → logprob: -11.059453964233398
    8. '``' → logprob: -11.309453964233398
    9. ' def' → logprob: -11.559453964233398
    10. '       
' → logprob: -13.184453964233398

Token 1617: '       ' (ID: 309)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08529482781887054
    2. '
' → logprob: -3.210294723510742
    3. '       ' → logprob: -3.210294723510742
    4. '```' → logprob: -7.585294723510742
    5. '   ' → logprob: -8.460294723510742
    6. '        
' → logprob: -8.585294723510742
    7. ' def' → logprob: -9.960294723510742
    8. '#' → logprob: -9.960294723510742
    9. '#
' → logprob: -11.085294723510742
    10. '``' → logprob: -11.210294723510742

Token 1618: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.06830307841300964
    2. '       ' → logprob: -3.068303108215332
    3. '
' → logprob: -4.068303108215332
    4. '   ' → logprob: -6.068303108215332
    5. '```' → logprob: -9.568303108215332
    6. '        
' → logprob: -10.693303108215332
    7. ' def' → logprob: -12.318303108215332
    8. '    
' → logprob: -12.943303108215332
    9. '	def' → logprob: -14.568303108215332
    10. '``' → logprob: -14.568303108215332

Token 1619: ' surface' (ID: 9753)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.4928741157054901
    2. 'calc' → logprob: -1.7428741455078125
    3. 'surface' → logprob: -1.7428741455078125
    4. 'calculate' → logprob: -3.2428741455078125
    5. 'get' → logprob: -10.367874145507812
    6. 'surf' → logprob: -12.492874145507812
    7. 'count' → logprob: -12.742874145507812
    8. ' calc' → logprob: -13.117874145507812
    9. 'cal' → logprob: -13.242874145507812
    10. 'def' → logprob: -13.992874145507812

Token 1620: '(c' (ID: 2410)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6791309118270874
    2. '(set' → logprob: -0.8041309118270874
    3. '(sub' → logprob: -4.179131031036377
    4. '(nodes' → logprob: -4.804131031036377
    5. '(en' → logprob: -4.929131031036377
    6. '(s' → logprob: -5.429131031036377
    7. '(S' → logprob: -6.054131031036377
    8. '(es' → logprob: -6.804131031036377
    9. '(vertices' → logprob: -6.929131031036377
    10. '(Set' → logprob: -7.304131031036377

Token 1621: 'ubes' (ID: 68551)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.8339208364486694
    2. 'def' → logprob: -1.0839208364486694
    3. 'om' → logprob: -2.958920955657959
    4. 'o' → logprob: -3.708920955657959
    5. 'omp' → logprob: -3.833920955657959
    6. '=set' → logprob: -3.958920955657959
    7. 'ubes' → logprob: -4.083920955657959
    8. '_set' → logprob: -4.333920955657959
    9. 'ont' → logprob: -4.583920955657959
    10. 'ub' → logprob: -4.708920955657959

Token 1622: '_set' (ID: 5451)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3984273672103882
    2. '):
' → logprob: -1.1484273672103882
    3. ',' → logprob: -4.773427486419678
    4. '):
' → logprob: -6.898427486419678
    5. ')' → logprob: -7.273427486419678
    6. '   ' → logprob: -7.398427486419678
    7. '(c' → logprob: -8.14842700958252
    8. ',c' → logprob: -9.27342700958252
    9. '       ' → logprob: -9.77342700958252
    10. '):

' → logprob: -9.89842700958252

Token 1623: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0731625184416771
    2. '):
' → logprob: -2.69816255569458
    3. ',' → logprob: -6.19816255569458
    4. ')' → logprob: -7.69816255569458
    5. '(c' → logprob: -7.69816255569458
    6. '):
' → logprob: -8.823162078857422
    7. '   ' → logprob: -9.573162078857422
    8. ' ):' → logprob: -11.698162078857422
    9. ',c' → logprob: -11.698162078857422
    10. '):

' → logprob: -11.698162078857422

Token 1624: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10392103344202042
    2. '           ' → logprob: -3.2289209365844727
    3. '   ' → logprob: -3.6039209365844727
    4. ':' → logprob: -4.353920936584473
    5. '```' → logprob: -5.478920936584473
    6. '(' → logprob: -5.853920936584473
    7. '        
' → logprob: -5.853920936584473
    8. '        ' → logprob: -6.103920936584473
    9. '    
' → logprob: -6.228920936584473
    10. ':
' → logprob: -6.853920936584473

Token 1625: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9462157487869263
    2. '   ' → logprob: -1.3212157487869263
    3. '       ' → logprob: -1.6962157487869263
    4. 'count' → logprob: -2.3212156295776367
    5. 'edges' → logprob: -3.3212156295776367
    6. ' edges' → logprob: -5.321215629577637
    7. 'n' → logprob: -5.696215629577637
    8. ' count' → logprob: -5.821215629577637
    9. 'cnt' → logprob: -5.946215629577637
    10. 'return' → logprob: -5.946215629577637

Token 1626: ' cubes' (ID: 88455)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.5792033076286316
    2. 'count' → logprob: -1.8292033672332764
    3. '       ' → logprob: -1.9542033672332764
    4. 'edge' → logprob: -2.2042033672332764
    5. 'cnt' → logprob: -4.329203128814697
    6. '   ' → logprob: -4.954203128814697
    7. 'e' → logprob: -6.454203128814697
    8. '           ' → logprob: -6.579203128814697
    9. '```' → logprob: -7.204203128814697
    10. 'internal' → logprob: -7.204203128814697

Token 1627: '_set' (ID: 5451)
  Prédit: '_set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_set' → logprob: -0.25198590755462646
    2. '_ids' → logprob: -2.376986026763916
    3. '_count' → logprob: -3.001986026763916
    4. '_' → logprob: -4.001986026763916
    5. ' =' → logprob: -4.251986026763916
    6. '_edges' → logprob: -4.501986026763916
    7. '_list' → logprob: -4.501986026763916
    8. '_indices' → logprob: -5.501986026763916
    9. '_positions' → logprob: -6.001986026763916
    10. '_nodes' → logprob: -6.126986026763916

Token 1628: ' :' (ID: 712)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0955502912402153
    2. '=' → logprob: -2.720550298690796
    3. ':' → logprob: -5.095550060272217
    4. ')' → logprob: -5.095550060272217
    5. '):' → logprob: -5.470550060272217
    6. '):
' → logprob: -6.470550060272217
    7. '   ' → logprob: -6.470550060272217
    8. '.' → logprob: -6.470550060272217
    9. ',' → logprob: -7.595550060272217
    10. '_tokens' → logprob: -7.720550060272217

Token 1629: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.006168036255985498
    2. ' set' → logprob: -5.756167888641357
    3. 'c' → logprob: -5.881167888641357
    4. '{' → logprob: -9.506168365478516
    5. '   ' → logprob: -10.256168365478516
    6. '       ' → logprob: -10.631168365478516
    7. '```' → logprob: -10.631168365478516
    8. 'list' → logprob: -11.256168365478516
    9. 'fro' → logprob: -12.006168365478516
    10. ')' → logprob: -12.006168365478516

Token 1630: ' of' (ID: 328)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(c' → logprob: -1.0520695447921753
    2. ')' → logprob: -1.4270695447921753
    3. '(
' → logprob: -2.427069664001465
    4. '(' → logprob: -2.552069664001465
    5. ':' → logprob: -3.177069664001465
    6. '):
' → logprob: -3.302069664001465
    7. ' =' → logprob: -3.302069664001465
    8. '):' → logprob: -3.552069664001465
    9. ',' → logprob: -3.677069664001465
    10. '=' → logprob: -4.052069664001465

Token 1631: ' node' (ID: 4596)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0005442153196781874
    2. 'c' → logprob: -8.250544548034668
    3. 'ints' → logprob: -8.250544548034668
    4. ' int' → logprob: -11.500544548034668
    5. 'inte' → logprob: -12.250544548034668
    6. '   ' → logprob: -12.875544548034668
    7. '[int' → logprob: -13.250544548034668
    8. 'indices' → logprob: -14.625544548034668
    9. ')' → logprob: -14.750544548034668
    10. '```' → logprob: -14.750544548034668

Token 1632: ' indices' (ID: 30378)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -1.1120456457138062
    2. '):' → logprob: -1.2370456457138062
    3. 's' → logprob: -2.6120457649230957
    4. 'tokens' → logprob: -2.6120457649230957
    5. ')' → logprob: -2.9870457649230957
    6. '
' → logprob: -3.7370457649230957
    7. ',' → logprob: -3.8620457649230957
    8. '_tokens' → logprob: -4.112045764923096
    9. ':' → logprob: -4.237045764923096
    10. '   ' → logprob: -4.487045764923096

Token 1633: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6524292230606079
    2. ':
' → logprob: -2.1524291038513184
    3. '       ' → logprob: -2.1524291038513184
    4. '   ' → logprob: -2.7774291038513184
    5. '):
' → logprob: -3.1524291038513184
    6. ' =' → logprob: -3.1524291038513184
    7. '):' → logprob: -3.4024291038513184
    8. '```' → logprob: -3.6524291038513184
    9. ',' → logprob: -4.902429103851318
    10. ')' → logprob: -5.277429103851318

Token 1634: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3494563400745392
    2. '       ' → logprob: -1.5994563102722168
    3. '           ' → logprob: -2.599456310272217
    4. '               ' → logprob: -5.599456310272217
    5. '    
' → logprob: -5.974456310272217
    6. ')' → logprob: -6.099456310272217
    7. '    ' → logprob: -6.224456310272217
    8. '(' → logprob: -6.224456310272217
    9. '            ' → logprob: -6.849456310272217
    10. '        ' → logprob: -7.849456310272217

Token 1635: ' #' (ID: 1069)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -1.1582965850830078
    2. 'edges' → logprob: -1.2832965850830078
    3. '       ' → logprob: -1.7832965850830078
    4. '           ' → logprob: -2.783296585083008
    5. 'cnt' → logprob: -2.783296585083008
    6. '   ' → logprob: -2.908296585083008
    7. 'edge' → logprob: -3.033296585083008
    8. 'e' → logprob: -5.533296585083008
    9. 'ans' → logprob: -6.408296585083008
    10. ' edges' → logprob: -6.533296585083008

Token 1636: ' Calcul' (ID: 57243)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.2676504850387573
    2. 'edge' → logprob: -2.392650604248047
    3. 'count' → logprob: -3.142650604248047
    4. '       ' → logprob: -3.267650604248047
    5. '           ' → logprob: -3.767650604248047
    6. 'cnt' → logprob: -3.892650604248047
    7. '   ' → logprob: -4.517650604248047
    8. 'internal' → logprob: -6.142650604248047
    9. 'adj' → logprob: -6.267650604248047
    10. 'e' → logprob: -7.017650604248047

Token 1637: ' du' (ID: 1462)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5823586583137512
    2. 'edges' → logprob: -1.4573585987091064
    3. '   ' → logprob: -2.4573585987091064
    4. 'count' → logprob: -2.8323585987091064
    5. ' edges' → logprob: -3.5823585987091064
    6. 'edge' → logprob: -4.8323588371276855
    7. '               ' → logprob: -5.2073588371276855
    8. 'cnt' → logprob: -5.8323588371276855
    9. '=' → logprob: -5.9573588371276855
    10. '#' → logprob: -5.9573588371276855

Token 1638: ' nombre' (ID: 9733)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -1.5347392559051514
    2. 'nb' → logprob: -1.6597392559051514
    3. 'cnt' → logprob: -1.6597392559051514
    4. 'edges' → logprob: -1.6597392559051514
    5. 'nombre' → logprob: -2.6597392559051514
    6. 'internal' → logprob: -3.4097392559051514
    7. 'nbr' → logprob: -3.6597392559051514
    8. 'adj' → logprob: -3.9097392559051514
    9. 'neighbors' → logprob: -4.0347394943237305
    10. 'total' → logprob: -4.1597394943237305

Token 1639: ' d' (ID: 272)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.04584662243723869
    2. '<|end|>' → logprob: -4.545846462249756
    3. ' _' → logprob: -4.670846462249756
    4. '_edges' → logprob: -5.420846462249756
    5. '_of' → logprob: -5.670846462249756
    6. '_d' → logprob: -5.670846462249756
    7. '_des' → logprob: -6.295846462249756
    8. ' d' → logprob: -6.670846462249756
    9. ')' → logprob: -6.795846462249756
    10. ' of' → logprob: -6.920846462249756

Token 1640: ''ar' (ID: 54307)
  Prédit: '_edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_edges' → logprob: -0.7968863248825073
    2. ' ' → logprob: -1.4218863248825073
    3. '_' → logprob: -2.421886444091797
    4. 'edges' → logprob: -2.671886444091797
    5. 'ar' → logprob: -3.046886444091797
    6. '```' → logprob: -3.546886444091797
    7. 'internal' → logprob: -4.796886444091797
    8. '_neighbors' → logprob: -4.796886444091797
    9. ' edges' → logprob: -4.921886444091797
    10. ' _' → logprob: -5.546886444091797

Token 1641: 'êtes' (ID: 23720)
  Prédit: 'êtes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êtes' → logprob: -5.5027299822540954e-05
    2. 'ètes' → logprob: -10.250055313110352
    3. 'ê' → logprob: -12.625055313110352
    4. 'êts' → logprob: -12.750055313110352
    5. 'êtres' → logprob: -13.000055313110352
    6. 'etes' → logprob: -13.125055313110352
    7. 'edges' → logprob: -13.250055313110352
    8. '_edges' → logprob: -13.250055313110352
    9. 'cs' → logprob: -13.375055313110352
    10. '^' → logprob: -14.250055313110352

Token 1642: ' internes' (ID: 183434)
  Prédit: '_inter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_inter' → logprob: -0.31225958466529846
    2. 'intern' → logprob: -2.6872596740722656
    3. 'inter' → logprob: -2.8122596740722656
    4. '_internal' → logprob: -2.9372596740722656
    5. '_in' → logprob: -3.0622596740722656
    6. ' =' → logprob: -4.437259674072266
    7. 'internal' → logprob: -4.687259674072266
    8. '   ' → logprob: -5.437259674072266
    9. '_int' → logprob: -5.812259674072266
    10. ' interne' → logprob: -6.062259674072266

Token 1643: ' dans' (ID: 2671)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7483340501785278
    2. '=' → logprob: -1.6233340501785278
    3. ' =' → logprob: -1.7483340501785278
    4. 'count' → logprob: -2.8733339309692383
    5. 'internal' → logprob: -2.9983339309692383
    6. 'edges' → logprob: -3.8733339309692383
    7. '   ' → logprob: -4.748333930969238
    8. 'inter' → logprob: -5.123333930969238
    9. 'cnt' → logprob: -5.998333930969238
    10. '
' → logprob: -6.373333930969238

Token 1644: ' le' (ID: 505)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -3.523948907968588e-05
    2. '```' → logprob: -11.375035285949707
    3. 'adj' → logprob: -11.500035285949707
    4. '   ' → logprob: -12.000035285949707
    5. ' cubes' → logprob: -12.375035285949707
    6. '
' → logprob: -13.375035285949707
    7. '           ' → logprob: -14.500035285949707
    8. '       ' → logprob: -15.250035285949707
    9. 'cub' → logprob: -15.250035285949707
    10. '``' → logprob: -15.500035285949707

Token 1645: ' sous' (ID: 14487)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.004376955330371857
    2. ' cubes' → logprob: -5.6293768882751465
    3. ')' → logprob: -7.5043768882751465
    4. 'surface' → logprob: -9.754377365112305
    5. 'cube' → logprob: -9.879377365112305
    6. ' c' → logprob: -10.129377365112305
    7. ')c' → logprob: -10.879377365112305
    8. 'set' → logprob: -11.004377365112305
    9. '{' → logprob: -12.004377365112305
    10. 'adj' → logprob: -12.379377365112305

Token 1646: '-gr' (ID: 18511)
  Prédit: '_set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_set' → logprob: -0.695819616317749
    2. '_' → logprob: -0.820819616317749
    3. 'graph' → logprob: -3.945819616317749
    4. '_c' → logprob: -4.070819854736328
    5. '_graph' → logprob: -4.320819854736328
    6. 'set' → logprob: -5.195819854736328
    7. '_edges' → logprob: -6.195819854736328
    8. ' _' → logprob: -7.070819854736328
    9. ')' → logprob: -7.195819854736328
    10. '_)' → logprob: -7.945819854736328

Token 1647: 'aphe' (ID: 98856)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.04729700833559036
    2. 'set' → logprob: -3.7972970008850098
    3. 'raph' → logprob: -4.17229700088501
    4. '{' → logprob: -5.42229700088501
    5. '{
' → logprob: -6.67229700088501
    6. 'gr' → logprob: -7.79729700088501
    7. 'fro' → logprob: -7.92229700088501
    8. 'g' → logprob: -8.172297477722168
    9. 'graphs' → logprob: -8.672297477722168
    10. 'cube' → logprob: -8.672297477722168

Token 1648: ' indu' (ID: 34592)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006911918055266142
    2. 'count' → logprob: -5.756911754608154
    3. 'edges' → logprob: -7.131911754608154
    4. ' =' → logprob: -7.381911754608154
    5. '   ' → logprob: -7.506911754608154
    6. ' edges' → logprob: -7.506911754608154
    7. '       ' → logprob: -8.756912231445312
    8. '
' → logprob: -8.756912231445312
    9. '(edges' → logprob: -9.131912231445312
    10. ' count' → logprob: -9.381912231445312

Token 1649: 'it' (ID: 278)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.34870514273643494
    2. 't' → logprob: -1.9737051725387573
    3. 'raph' → logprob: -2.7237050533294678
    4. 'ré' → logprob: -3.7237050533294678
    5. '   ' → logprob: -4.348705291748047
    6. '       ' → logprob: -4.473705291748047
    7. 'rée' → logprob: -4.848705291748047
    8. 'rie' → logprob: -5.723705291748047
    9. 'set' → logprob: -5.723705291748047
    10. 're' → logprob: -6.348705291748047

Token 1650: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.37593820691108704
    2. '       ' → logprob: -3.1259381771087646
    3. '   ' → logprob: -3.2509381771087646
    4. ':' → logprob: -3.2509381771087646
    5. 'edges' → logprob: -3.3759381771087646
    6. '
' → logprob: -3.3759381771087646
    7. ' edges' → logprob: -4.000938415527344
    8. ':
' → logprob: -4.000938415527344
    9. '(edges' → logprob: -4.000938415527344
    10. ' =' → logprob: -4.500938415527344

Token 1651: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007460273336619139
    2. '       ' → logprob: -5.757460117340088
    3. 'count' → logprob: -6.507460117340088
    4. '   ' → logprob: -6.632460117340088
    5. ' edges' → logprob: -7.632460117340088
    6. 'edges' → logprob: -7.882460117340088
    7. ' count' → logprob: -8.632460594177246
    8. '               ' → logprob: -8.757460594177246
    9. 'ar' → logprob: -10.632460594177246
    10. '```' → logprob: -10.757460594177246

Token 1652: ' #' (ID: 1069)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.8095207810401917
    2. 'edges' → logprob: -1.1845207214355469
    3. '           ' → logprob: -2.184520721435547
    4. 'cnt' → logprob: -2.309520721435547
    5. '   ' → logprob: -4.184520721435547
    6. 'edge' → logprob: -4.309520721435547
    7. ' edges' → logprob: -5.559520721435547
    8. ' cnt' → logprob: -6.934520721435547
    9. 'ans' → logprob: -7.059520721435547
    10. ' count' → logprob: -7.059520721435547

Token 1653: ' Pour' (ID: 13931)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5657437443733215
    2. 'count' → logprob: -1.0657436847686768
    3. 'edges' → logprob: -3.1907436847686768
    4. '   ' → logprob: -4.315743923187256
    5. ' count' → logprob: -4.565743923187256
    6. 'edge' → logprob: -5.065743923187256
    7. '       ' → logprob: -5.440743923187256
    8. 'cnt' → logprob: -5.440743923187256
    9. ' edges' → logprob: -5.940743923187256
    10. '               ' → logprob: -6.940743923187256

Token 1654: ' chaque' (ID: 21194)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.0829845666885376
    2. 'node' → logprob: -2.582984447479248
    3. 'cube' → logprob: -6.207984447479248
    4. 'c' → logprob: -7.207984447479248
    5. '```' → logprob: -7.707984447479248
    6. 'v' → logprob: -8.457984924316406
    7. 'i' → logprob: -8.582984924316406
    8. '   ' → logprob: -8.957984924316406
    9. 'idx' → logprob: -9.707984924316406
    10. ' u' → logprob: -9.707984924316406

Token 1655: ' cube' (ID: 46822)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.0012424940941855311
    2. 'node' → logprob: -6.751242637634277
    3. 'cube' → logprob: -9.876242637634277
    4. '```' → logprob: -11.876242637634277
    5. ' u' → logprob: -12.001242637634277
    6. 'c' → logprob: -12.376242637634277
    7. 'v' → logprob: -13.001242637634277
    8. '
' → logprob: -14.251242637634277
    9. '   ' → logprob: -15.001242637634277
    10. ' node' → logprob: -15.876242637634277

Token 1656: ',' (ID: 11)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.1450730860233307
    2. ' in' → logprob: -2.645073175430298
    3. ' u' → logprob: -3.145073175430298
    4. 'in' → logprob: -4.145072937011719
    5. 'i' → logprob: -6.020072937011719
    6. '```' → logprob: -7.395072937011719
    7. ',' → logprob: -7.520072937011719
    8. 'v' → logprob: -7.645072937011719
    9. ' i' → logprob: -7.895072937011719
    10. 'c' → logprob: -8.770072937011719

Token 1657: ' compter' (ID: 81694)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5211160778999329
    2. ' for' → logprob: -1.521116018295288
    3. '           ' → logprob: -2.771116018295288
    4. '```' → logprob: -3.271116018295288
    5. '   ' → logprob: -3.396116018295288
    6. '               ' → logprob: -4.521116256713867
    7. '       ' → logprob: -4.646116256713867
    8. 'count' → logprob: -4.896116256713867
    9. ' on' → logprob: -5.271116256713867
    10. ' compter' → logprob: -5.771116256713867

Token 1658: ' ses' (ID: 6707)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.6085736751556396
    2. '   ' → logprob: -1.9835736751556396
    3. ''' → logprob: -2.7335736751556396
    4. ' for' → logprob: -2.7335736751556396
    5. 'neighbors' → logprob: -2.7335736751556396
    6. ' '' → logprob: -3.1085736751556396
    7. '1' → logprob: -3.2335736751556396
    8. ' c' → logprob: -3.4835736751556396
    9. 'adj' → logprob: -3.4835736751556396
    10. 'for' → logprob: -3.4835736751556396

Token 1659: ' voisins' (ID: 166720)
  Prédit: 'neighbors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbors' → logprob: -0.32168230414390564
    2. 'vo' → logprob: -1.946682333946228
    3. ' voisins' → logprob: -2.5716822147369385
    4. 'adj' → logprob: -2.9466822147369385
    5. ' neighbors' → logprob: -6.196682453155518
    6. 'neighbor' → logprob: -7.071682453155518
    7. 'edges' → logprob: -9.19668197631836
    8. '```' → logprob: -9.82168197631836
    9. 'nbr' → logprob: -10.07168197631836
    10. '_neighbors' → logprob: -10.32168197631836

Token 1660: ' dans' (ID: 2671)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9127566814422607
    2. 'in' → logprob: -1.0377566814422607
    3. 'dans' → logprob: -2.0377566814422607
    4. '               ' → logprob: -3.2877566814422607
    5. 'for' → logprob: -3.6627566814422607
    6. 'c' → logprob: -4.16275691986084
    7. '```' → logprob: -4.66275691986084
    8. ' in' → logprob: -4.91275691986084
    9. '                   ' → logprob: -5.16275691986084
    10. '       ' → logprob: -6.03775691986084

Token 1661: ' cubes' (ID: 88455)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.029813097789883614
    2. ' cubes' → logprob: -3.529813051223755
    3. '```' → logprob: -10.029812812805176
    4. '   ' → logprob: -12.029812812805176
    5. ')c' → logprob: -12.779812812805176
    6. '``' → logprob: -13.279812812805176
    7. ' c' → logprob: -13.404812812805176
    8. '	c' → logprob: -13.654812812805176
    9. 'cube' → logprob: -13.779812812805176
    10. ' ' → logprob: -13.779812812805176

Token 1662: '_set' (ID: 5451)
  Prédit: '_set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_set' → logprob: -0.010322360321879387
    2. '_' → logprob: -5.385322570800781
    3. '       ' → logprob: -6.260322570800781
    4. ' _' → logprob: -7.135322570800781
    5. ')' → logprob: -7.510322570800781
    6. '```' → logprob: -8.010322570800781
    7. '   ' → logprob: -8.135322570800781
    8. ')_' → logprob: -8.260322570800781
    9. '_SET' → logprob: -8.510322570800781
    10. '._' → logprob: -8.510322570800781

Token 1663: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0038495976477861404
    2. 'count' → logprob: -6.378849506378174
    3. '       ' → logprob: -7.003849506378174
    4. '               ' → logprob: -7.753849506378174
    5. '   ' → logprob: -8.253849983215332
    6. '
' → logprob: -8.253849983215332
    7. '```' → logprob: -9.628849983215332
    8. 'for' → logprob: -10.503849983215332
    9. '                   ' → logprob: -10.628849983215332
    10. 'edges' → logprob: -11.003849983215332

Token 1664: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.34032052755355835
    2. '```' → logprob: -2.215320587158203
    3. ' for' → logprob: -2.715320587158203
    4. '               ' → logprob: -3.340320587158203
    5. 'for' → logprob: -3.715320587158203
    6. '       ' → logprob: -4.090320587158203
    7. ':' → logprob: -5.465320587158203
    8. '                   ' → logprob: -5.715320587158203
    9. '            ' → logprob: -5.715320587158203
    10. '(' → logprob: -5.840320587158203

Token 1665: ' edges' (ID: 22569)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.6011207103729248
    2. '           ' → logprob: -1.6011207103729248
    3. 'cnt' → logprob: -2.351120710372925
    4. '   ' → logprob: -2.851120710372925
    5. ' count' → logprob: -3.726120710372925
    6. '               ' → logprob: -3.976120710372925
    7. '       ' → logprob: -4.226120948791504
    8. 'edges' (adapté à ' edges') → logprob: -4.351120948791504
    9. ' cnt' → logprob: -4.851120948791504
    10. ' res' → logprob: -5.351120948791504

Token 1666: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6990913152694702
    2. '_count' → logprob: -0.6990913152694702
    3. '=' → logprob: -6.07409143447876
    4. '_in' → logprob: -6.94909143447876
    5. 'count' → logprob: -7.32409143447876
    6. '_' → logprob: -7.32409143447876
    7. '_counter' → logprob: -7.57409143447876
    8. '_cnt' → logprob: -7.94909143447876
    9. '_counts' → logprob: -9.574090957641602
    10. '_internal' → logprob: -9.824090957641602

Token 1667: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00014966767048463225
    2. ' ' → logprob: -9.000149726867676
    3. 'sum' → logprob: -10.625149726867676
    4. ' sum' → logprob: -14.375149726867676
    5. '           ' → logprob: -14.875149726867676
    6. '   ' → logprob: -15.125149726867676
    7. '       ' → logprob: -15.250149726867676
    8. 'edges' → logprob: -15.625149726867676
    9. '         ' → logprob: -16.62514877319336
    10. '     ' → logprob: -16.75014877319336

Token 1668: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.008669880218803883
    2. 'sum' → logprob: -4.758669853210449
    3. ' ' → logprob: -10.13366985321045
    4. ' sum' → logprob: -12.00866985321045
    5. '   ' → logprob: -12.13366985321045
    6. '
' → logprob: -14.38366985321045
    7. '       ' → logprob: -14.38366985321045
    8. '(sum' → logprob: -14.75866985321045
    9. '     ' → logprob: -15.00866985321045
    10. '         ' → logprob: -15.38366985321045

Token 1669: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.27934330701828003
    2. '       ' → logprob: -2.404343366622925
    3. ' for' → logprob: -2.529343366622925
    4. 'for' → logprob: -3.779343366622925
    5. '
' → logprob: -4.029343128204346
    6. '               ' → logprob: -4.279343128204346
    7. '                   ' → logprob: -6.029343128204346
    8. '   ' → logprob: -6.154343128204346
    9. ')' → logprob: -6.279343128204346
    10. ' 
' → logprob: -6.279343128204346

Token 1670: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16312462091445923
    2. 'for' → logprob: -2.4131245613098145
    3. '           ' → logprob: -3.2881245613098145
    4. ' for' → logprob: -3.7881245613098145
    5. '   ' → logprob: -7.7881245613098145
    6. '
' → logprob: -7.9131245613098145
    7. '               ' → logprob: -9.288125038146973
    8. ' ' → logprob: -9.788125038146973
    9. '                   ' → logprob: -10.913125038146973
    10. '```' → logprob: -10.913125038146973

Token 1671: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0009972022380679846
    2. '           ' → logprob: -7.000997066497803
    3. '       ' → logprob: -10.125997543334961
    4. ' for' → logprob: -10.250997543334961
    5. 'visited' → logprob: -12.125997543334961
    6. '   ' → logprob: -12.500997543334961
    7. '	for' → logprob: -14.500997543334961
    8. '
' → logprob: -15.250997543334961
    9. '               ' → logprob: -15.250997543334961
    10. '```' → logprob: -15.750997543334961

Token 1672: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.0010135184274986386
    2. 'node' → logprob: -7.50101375579834
    3. ' u' → logprob: -8.00101375579834
    4. 'cube' → logprob: -9.75101375579834
    5. 'v' → logprob: -9.87601375579834
    6. 'c' → logprob: -11.75101375579834
    7. '   ' → logprob: -12.50101375579834
    8. ' node' → logprob: -12.75101375579834
    9. 'i' → logprob: -14.37601375579834
    10. ' cube' → logprob: -15.25101375579834

Token 1673: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.011056192219257355
    2. 'in' → logprob: -4.511056423187256
    3. 'u' → logprob: -13.636055946350098
    4. ',' → logprob: -13.886055946350098
    5. ' ' → logprob: -13.886055946350098
    6. '```' → logprob: -14.011055946350098
    7. '	in' → logprob: -14.136055946350098
    8. 'c' → logprob: -14.136055946350098
    9. 's' → logprob: -14.886055946350098
    10. '   ' → logprob: -15.261055946350098

Token 1674: ' cubes' (ID: 88455)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0003049570368602872
    2. ' cubes' → logprob: -8.12530517578125
    3. '   ' → logprob: -11.87530517578125
    4. ')c' → logprob: -14.37530517578125
    5. 'cub' → logprob: -14.75030517578125
    6. 'cube' → logprob: -14.87530517578125
    7. '```' → logprob: -15.87530517578125
    8. ' c' → logprob: -16.00030517578125
    9. '       ' → logprob: -16.37530517578125
    10. '	c' → logprob: -16.50030517578125

Token 1675: '_set' (ID: 5451)
  Prédit: '_set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_set' → logprob: -0.0007057601469568908
    2. 'in' → logprob: -8.37570571899414
    3. '_in' → logprob: -9.12570571899414
    4. '_' → logprob: -9.12570571899414
    5. ' in' → logprob: -9.62570571899414
    6. ' _' → logprob: -10.50070571899414
    7. '_SET' → logprob: -10.62570571899414
    8. 'set' → logprob: -10.62570571899414
    9. '   ' → logprob: -10.87570571899414
    10. ' ' → logprob: -10.87570571899414

Token 1676: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20807765424251556
    2. ':
' → logprob: -2.5830776691436768
    3. '               ' → logprob: -2.9580776691436768
    4. '       ' → logprob: -4.083077430725098
    5. '   ' → logprob: -4.083077430725098
    6. '           ' → logprob: -4.333077430725098
    7. '<|end|>' → logprob: -4.833077430725098
    8. 'for' → logprob: -7.333077430725098
    9. ' for' → logprob: -7.458077430725098
    10. '                   ' → logprob: -7.458077430725098

Token 1677: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.02002895250916481
    2. ' for' → logprob: -4.020029067993164
    3. 'for' → logprob: -6.770029067993164
    4. '```' → logprob: -8.270029067993164
    5. '   ' → logprob: -8.520029067993164
    6. '           ' → logprob: -9.395029067993164
    7. '       ' → logprob: -10.020029067993164
    8. ' edges' → logprob: -10.145029067993164
    9. 'edges' → logprob: -10.395029067993164
    10. '	           ' → logprob: -10.645029067993164

Token 1678: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.044520292431116104
    2. ' for' → logprob: -3.419520378112793
    3. '                   ' → logprob: -5.419520378112793
    4. '               ' → logprob: -5.544520378112793
    5. '   ' → logprob: -6.169520378112793
    6. 'edges' → logprob: -8.419520378112793
    7. '           ' → logprob: -9.919520378112793
    8. '       ' → logprob: -10.169520378112793
    9. '	for' → logprob: -10.794520378112793
    10. '```' → logprob: -10.919520378112793

Token 1679: ' w' (ID: 286)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.008625093847513199
    2. ' v' → logprob: -4.758625030517578
    3. 'w' → logprob: -11.508625030517578
    4. ' w' → logprob: -15.508625030517578
    5. 'adj' → logprob: -15.508625030517578
    6. '	v' → logprob: -16.758625030517578
    7. '   ' → logprob: -17.883625030517578
    8. 'vj' → logprob: -19.883625030517578
    9. ' adj' → logprob: -20.008625030517578
    10. 'vw' → logprob: -20.258625030517578

Token 1680: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2014441341161728
    2. 'in' → logprob: -1.701444149017334
    3. '	in' → logprob: -10.826443672180176
    4. '<|end|>' → logprob: -13.326443672180176
    5. 'if' → logprob: -13.451443672180176
    6. '                   ' → logprob: -13.576443672180176
    7. ' ' → logprob: -14.076443672180176
    8. ' if' → logprob: -14.201443672180176
    9. '<|end|>' → logprob: -14.451443672180176
    10. ' в' → logprob: -14.701443672180176

Token 1681: ' adj' (ID: 20251)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.00020616286201402545
    2. ' adj' → logprob: -8.500205993652344
    3. '   ' → logprob: -13.250205993652344
    4. 'c' → logprob: -14.125205993652344
    5. '(adj' → logprob: -16.500205993652344
    6. '           ' → logprob: -18.000205993652344
    7. 'cub' → logprob: -18.125205993652344
    8. '       ' → logprob: -18.625205993652344
    9. ' cubes' → logprob: -18.875205993652344
    10. ' ' → logprob: -18.875205993652344

Token 1682: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.10021809488534927
    2. 'u' → logprob: -2.3502180576324463
    3. '[c' → logprob: -12.100217819213867
    4. '[' → logprob: -12.725217819213867
    5. ' u' → logprob: -13.600217819213867
    6. '[
' → logprob: -14.225217819213867
    7. 'c' → logprob: -15.225217819213867
    8. '	u' → logprob: -15.475217819213867
    9. '(u' → logprob: -15.600217819213867
    10. '
' → logprob: -15.975217819213867

Token 1683: ']:
' (ID: 22152)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.1303284466266632
    2. '):
' → logprob: -2.630328416824341
    3. 'if' → logprob: -3.880328416824341
    4. '):' → logprob: -4.88032865524292
    5. ':
' → logprob: -5.13032865524292
    6. '               ' → logprob: -5.13032865524292
    7. ':' → logprob: -5.25532865524292
    8. '```' → logprob: -6.63032865524292
    9. ']:
' → logprob: -6.63032865524292
    10. ' if' → logprob: -7.63032865524292

Token 1684: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -8.900034299585968e-05
    2. 'if' → logprob: -10.500088691711426
    3. '		           ' → logprob: -11.125088691711426
    4. ' if' → logprob: -11.250088691711426
    5. '                       ' → logprob: -11.750088691711426
    6. '               ' → logprob: -12.250088691711426
    7. '				' → logprob: -12.500088691711426
    8. '	               ' → logprob: -12.500088691711426
    9. '```' → logprob: -12.500088691711426
    10. '                           ' → logprob: -13.125088691711426

Token 1685: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.19004419445991516
    2. '                       ' → logprob: -1.9400441646575928
    3. '                   ' → logprob: -3.6900441646575928
    4. ' if' → logprob: -5.440044403076172
    5. '                           ' → logprob: -10.815044403076172
    6. '	                   ' → logprob: -10.940044403076172
    7. '               ' → logprob: -11.315044403076172
    8. '                               ' → logprob: -12.815044403076172
    9. '	               ' → logprob: -13.065044403076172
    10. '                     ' → logprob: -13.440044403076172

Token 1686: ' w' (ID: 286)
  Prédit: ' w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.3868723213672638
    2. 'w' → logprob: -1.1368722915649414
    3. '                    ' → logprob: -14.511872291564941
    4. '                   ' → logprob: -14.886872291564941
    5. 'u' → logprob: -16.011873245239258
    6. '                ' → logprob: -16.636873245239258
    7. '	w' → logprob: -16.761873245239258
    8. ' u' → logprob: -17.011873245239258
    9. '(w' → logprob: -17.136873245239258
    10. '                       ' → logprob: -17.636873245239258

Token 1687: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4779098927974701
    2. 'in' → logprob: -0.9779099225997925
    3. ' u' → logprob: -6.727910041809082
    4. ' <' → logprob: -6.727910041809082
    5. '<u' → logprob: -7.477910041809082
    6. 'u' → logprob: -7.977910041809082
    7. '<' → logprob: -8.602910041809082
    8. ' >' → logprob: -8.727910041809082
    9. '>' → logprob: -9.477910041809082
    10. '<|end|>' → logprob: -10.602910041809082

Token 1688: ' cubes' (ID: 88455)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.00023095356300473213
    2. ' cubes' → logprob: -8.37523078918457
    3. 'cub' → logprob: -15.50023078918457
    4. '```' → logprob: -16.62523078918457
    5. 'cube' → logprob: -18.12523078918457
    6. ' ' → logprob: -18.12523078918457
    7. 'cups' → logprob: -18.25023078918457
    8. '   ' → logprob: -18.37523078918457
    9. '	c' → logprob: -18.37523078918457
    10. ')c' → logprob: -19.00023078918457

Token 1689: '_set' (ID: 5451)
  Prédit: '_set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_set' → logprob: -0.0009943449404090643
    2. 'c' → logprob: -7.1259942054748535
    3. '_sets' → logprob: -9.625994682312012
    4. 'set' → logprob: -10.125994682312012
    5. '_c' → logprob: -10.125994682312012
    6. 'Set' → logprob: -10.875994682312012
    7. '_SET' → logprob: -11.625994682312012
    8. 's' → logprob: -13.000994682312012
    9. '{' → logprob: -13.125994682312012
    10. 'sets' → logprob: -13.125994682312012

Token 1690: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.026156537234783173
    2. 'and' → logprob: -3.901156425476074
    3. '<|end|>' → logprob: -5.901156425476074
    4. '                       ' → logprob: -6.526156425476074
    5. '                    ' → logprob: -8.026156425476074
    6. '                        ' → logprob: -8.151156425476074
    7. '                               ' → logprob: -8.901156425476074
    8. '<|end|>' → logprob: -8.901156425476074
    9. '                   ' → logprob: -9.651156425476074
    10. ')' → logprob: -9.776156425476074

Token 1691: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.13248282670974731
    2. 'u' → logprob: -2.1324827671051025
    3. ' w' → logprob: -5.382483005523682
    4. ' u' → logprob: -7.007483005523682
    5. '                   ' → logprob: -10.382482528686523
    6. '                       ' → logprob: -12.507482528686523
    7. '                           ' → logprob: -13.507482528686523
    8. '   ' → logprob: -14.132482528686523
    9. '                               ' → logprob: -15.257482528686523
    10. '                    ' → logprob: -15.507482528686523

Token 1692: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.0620909258723259
    2. ' >' → logprob: -2.8120908737182617
    3. '<u' → logprob: -9.812090873718262
    4. 'u' → logprob: -10.062090873718262
    5. ' u' → logprob: -11.312090873718262
    6. ' <' → logprob: -11.812090873718262
    7. '<' → logprob: -12.937090873718262
    8. 'and' → logprob: -13.437090873718262
    9. ' ' → logprob: -14.187090873718262
    10. '[u' → logprob: -14.437090873718262

Token 1693: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.0002614550176076591
    2. ' u' → logprob: -8.250261306762695
    3. '	u' → logprob: -16.875261306762695
    4. '[u' → logprob: -17.500261306762695
    5. '_u' → logprob: -19.125261306762695
    6. '<u' → logprob: -19.375261306762695
    7. '(u' → logprob: -20.250261306762695
    8. '=u' → logprob: -20.375261306762695
    9. '   ' → logprob: -20.750261306762695
    10. '                   ' → logprob: -21.250261306762695

Token 1694: ':
' (ID: 734)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0816149041056633
    2. ':
' → logprob: -2.9566149711608887
    3. '                   ' → logprob: -3.9566149711608887
    4. ':' → logprob: -5.456614971160889
    5. '):
' → logprob: -6.581614971160889
    6. '                           ' → logprob: -7.831614971160889
    7. '               ' → logprob: -8.20661449432373
    8. '                               ' → logprob: -8.33161449432373
    9. '```' → logprob: -8.83161449432373
    10. '<|end|>' → logprob: -9.33161449432373

Token 1695: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.00015693542081862688
    2. '                           ' → logprob: -9.750157356262207
    3. '                   ' → logprob: -10.125157356262207
    4. 'edges' → logprob: -10.875157356262207
    5. ' edges' → logprob: -11.625157356262207
    6. '                               ' → logprob: -11.625157356262207
    7. '                        ' → logprob: -12.250157356262207
    8. '                      ' → logprob: -12.500157356262207
    9. '                        
' → logprob: -12.750157356262207
    10. '```' → logprob: -13.250157356262207

Token 1696: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' (adapté à ' edges') → logprob: -0.0041173421777784824
    2. ' edges' → logprob: -5.879117488861084
    3. '                           ' → logprob: -7.504117488861084
    4. '1' → logprob: -8.129117012023926
    5. '                               ' → logprob: -8.504117012023926
    6. '                                   ' → logprob: -9.254117012023926
    7. '                       ' → logprob: -9.754117012023926
    8. '                   ' → logprob: -9.754117012023926
    9. '               ' → logprob: -10.754117012023926
    10. '           ' → logprob: -11.504117012023926

Token 1697: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.08940722048282623
    2. ' +=' → logprob: -2.714407205581665
    3. '                           ' → logprob: -4.089407444000244
    4. '                       ' → logprob: -6.339407444000244
    5. ']+=' → logprob: -7.964407444000244
    6. '+' → logprob: -9.089406967163086
    7. '           ' → logprob: -9.839406967163086
    8. '```' → logprob: -9.839406967163086
    9. '                               ' → logprob: -10.214406967163086
    10. '               ' → logprob: -10.339406967163086

Token 1698: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -13.875000953674316
    3. '   ' → logprob: -18.750001907348633
    4. '           ' → logprob: -19.750001907348633
    5. '```' → logprob: -20.250001907348633
    6. '                   ' → logprob: -20.750001907348633
    7. '                       ' → logprob: -21.000001907348633
    8. '0' → logprob: -21.375001907348633
    9. '               ' → logprob: -22.125001907348633
    10. '       ' → logprob: -22.125001907348633

Token 1699: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.125
    3. '0' → logprob: -18.25
    4. '```' → logprob: -18.375
    5. '   ' → logprob: -19.625
    6. '+' → logprob: -20.75
    7. '           ' → logprob: -21.125
    8. '2' → logprob: -21.25
    9. '
' → logprob: -22.625
    10. '       ' → logprob: -22.75

Token 1700: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.013011747971177101
    2. 'return' → logprob: -5.513011932373047
    3. '<|end|>' → logprob: -5.888011932373047
    4. '
' → logprob: -6.013011932373047
    5. '<|end|>' → logprob: -6.763011932373047
    6. ' return' → logprob: -7.138011932373047
    7. '               ' → logprob: -7.763011932373047
    8. ')' → logprob: -8.013011932373047
    9. '```' → logprob: -8.513011932373047
    10. '       ' → logprob: -8.638011932373047

Token 1701: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005749725736677647
    2. '
' → logprob: -5.880749702453613
    3. 'return' → logprob: -6.880749702453613
    4. '<|end|>' → logprob: -7.130749702453613
    5. '<|end|>' → logprob: -8.255749702453613
    6. ' return' → logprob: -8.505749702453613
    7. '               ' → logprob: -8.630749702453613
    8. '       ' → logprob: -9.255749702453613
    9. '                   ' → logprob: -9.505749702453613
    10. ')' → logprob: -9.630749702453613

Token 1702: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007034920156002045
    2. '       ' → logprob: -5.757034778594971
    3. 'return' (adapté à ' return') → logprob: -5.757034778594971
    4. '
' → logprob: -7.632034778594971
    5. '```' → logprob: -9.632035255432129
    6. ' return' → logprob: -9.757035255432129
    7. '               ' → logprob: -10.507035255432129
    8. '   ' → logprob: -10.632035255432129
    9. '                       ' → logprob: -11.257035255432129
    10. ')' → logprob: -13.007035255432129

Token 1703: ' ' (ID: 220)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.0005548207554966211
    2. ' ' → logprob: -7.500555038452148
    3. '   ' → logprob: -13.250555038452148
    4. '           ' → logprob: -17.50055503845215
    5. '(' → logprob: -18.62555503845215
    6. '       ' → logprob: -19.25055503845215
    7. '0' → logprob: -19.87555503845215
    8. '     ' → logprob: -20.00055503845215
    9. '    ' → logprob: -20.12555503845215
    10. '```' → logprob: -20.50055503845215

Token 1704: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -5.512236498361744e-07
    2. '(' → logprob: -14.875000953674316
    3. '   ' → logprob: -17.25
    4. ' ' → logprob: -17.5
    5. 'int' → logprob: -17.875
    6. '36' → logprob: -18.125
    7. '24' → logprob: -18.125
    8. '12' → logprob: -19.375
    9. '```' → logprob: -20.25
    10. '600' → logprob: -20.75

Token 1705: '*s' (ID: 71191)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.10026447474956512
    2. '*s' → logprob: -2.350264549255371
    3. ' *' → logprob: -9.850264549255371
    4. '*(' → logprob: -13.350264549255371
    5. '*u' → logprob: -14.850264549255371
    6. '*p' → logprob: -14.975264549255371
    7. '*w' → logprob: -14.975264549255371
    8. '*S' → logprob: -15.100264549255371
    9. '*v' → logprob: -15.225264549255371
    10. '*out' → logprob: -15.225264549255371

Token 1706: '*s' (ID: 71191)
  Prédit: '*s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*s' → logprob: -0.0011841575615108013
    2. '*' → logprob: -6.751183986663818
    3. '**' → logprob: -11.876184463500977
    4. ' *' → logprob: -12.876184463500977
    5. 's' → logprob: -13.126184463500977
    6. '*self' → logprob: -14.501184463500977
    7. '```' → logprob: -15.001184463500977
    8. '*(' → logprob: -15.251184463500977
    9. '*object' → logprob: -15.626184463500977
    10. '   ' → logprob: -15.626184463500977

Token 1707: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.0015042672166600823
    2. ' *' → logprob: -6.501504421234131
    3. '*(' → logprob: -14.126503944396973
    4. '```' → logprob: -14.626503944396973
    5. '*l' → logprob: -15.126503944396973
    6. '*num' → logprob: -15.251503944396973
    7. '**' → logprob: -16.87650489807129
    8. '*k' → logprob: -17.00150489807129
    9. '<len' → logprob: -17.12650489807129
    10. '   ' → logprob: -17.25150489807129

Token 1708: 'len' (ID: 3303)
  Prédit: 'len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -1.306760805164231e-05
    2. '(len' → logprob: -11.25001335144043
    3. ' len' → logprob: -17.12501335144043
    4. '```' → logprob: -18.25001335144043
    5. '[len' → logprob: -19.00001335144043
    6. '
' → logprob: -19.62501335144043
    7. '	len' → logprob: -21.00001335144043
    8. '=len' → logprob: -22.25001335144043
    9. ',len' → logprob: -22.75001335144043
    10. '<len' → logprob: -23.12501335144043

Token 1709: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.00013035668234806508
    2. 'c' → logprob: -9.000130653381348
    3. '(' → logprob: -13.000130653381348
    4. ' (' → logprob: -13.125130653381348
    5. '(
' → logprob: -13.250130653381348
    6. ' cubes' → logprob: -14.625130653381348
    7. ' c' → logprob: -15.875130653381348
    8. ')c' → logprob: -16.25012969970703
    9. '	c' → logprob: -17.00012969970703
    10. '```' → logprob: -17.25012969970703

Token 1710: 'ubes' (ID: 68551)
  Prédit: 'ubes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ubes' → logprob: -0.060072366148233414
    2. '(c' → logprob: -3.310072422027588
    3. 'c' → logprob: -3.935072422027588
    4. '_c' → logprob: -7.060072422027588
    5. '{' → logprob: -8.06007194519043
    6. 'u' → logprob: -8.31007194519043
    7. 'ub' → logprob: -8.56007194519043
    8. ')c' → logprob: -9.18507194519043
    9. ')' → logprob: -9.31007194519043
    10. 's' → logprob: -9.31007194519043

Token 1711: '_set' (ID: 5451)
  Prédit: '_set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_set' → logprob: -0.0010078003397211432
    2. '_sets' → logprob: -8.251008033752441
    3. '_c' → logprob: -8.376008033752441
    4. '{' → logprob: -8.876008033752441
    5. ')' → logprob: -9.126008033752441
    6. '(c' → logprob: -9.501008033752441
    7. 'c' → logprob: -10.001008033752441
    8. ')c' → logprob: -10.001008033752441
    9. ')set' → logprob: -10.626008033752441
    10. 'set' → logprob: -10.626008033752441

Token 1712: ')' (ID: 8)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.02685251459479332
    2. ')' → logprob: -4.026852607727051
    3. '-' → logprob: -4.776852607727051
    4. ')-' → logprob: -9.27685260772705
    5. '           ' → logprob: -9.77685260772705
    6. ' ' → logprob: -11.02685260772705
    7. '          ' → logprob: -11.15185260772705
    8. ' )' → logprob: -11.40185260772705
    9. '   ' → logprob: -11.52685260772705
    10. '            ' → logprob: -12.02685260772705

Token 1713: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0015703336102887988
    2. '-' → logprob: -6.501570224761963
    3. '           ' → logprob: -10.876570701599121
    4. ' ' → logprob: -11.376570701599121
    5. '            ' → logprob: -11.751570701599121
    6. ' ' → logprob: -12.376570701599121
    7. '   ' → logprob: -12.376570701599121
    8. '          ' → logprob: -12.376570701599121
    9. '```' → logprob: -12.876570701599121
    10. '        ' → logprob: -13.001570701599121

Token 1714: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.002805110299959779
    2. ' ' → logprob: -5.877805233001709
    3. '```' → logprob: -15.62780475616455
    4. '   ' → logprob: -16.502805709838867
    5. ' ' → logprob: -17.377805709838867
    6. '(' → logprob: -17.877805709838867
    7. '`' → logprob: -19.127805709838867
    8. '6' → logprob: -19.127805709838867
    9. '
' → logprob: -20.002805709838867
    10. '``' → logprob: -20.002805709838867

Token 1715: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.531315314830863e-06
    2. ' ' → logprob: -12.750003814697266
    3. '```' → logprob: -15.000003814697266
    4. '(' → logprob: -15.375003814697266
    5. '   ' → logprob: -16.250003814697266
    6. '4' → logprob: -17.625003814697266
    7. ' ' → logprob: -17.625003814697266
    8. '``' → logprob: -18.500003814697266
    9. '`' → logprob: -18.750003814697266
    10. '
' → logprob: -18.875003814697266

Token 1716: '*s' (ID: 71191)
  Prédit: '*s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*s' → logprob: -0.006718452088534832
    2. '*' → logprob: -5.006718635559082
    3. ' *' → logprob: -12.881718635559082
    4. 's' → logprob: -15.631718635559082
    5. '*(' → logprob: -15.756718635559082
    6. '**' → logprob: -16.506717681884766
    7. '*out' → logprob: -17.506717681884766
    8. '```' → logprob: -17.631717681884766
    9. '*p' → logprob: -17.756717681884766
    10. '*u' → logprob: -18.006717681884766

Token 1717: '*s' (ID: 71191)
  Prédit: '*s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*s' → logprob: -0.0009120595059357584
    2. '*' → logprob: -7.000912189483643
    3. ''*' → logprob: -15.750911712646484
    4. 's' → logprob: -16.375911712646484
    5. ' *' → logprob: -16.500911712646484
    6. '*(' → logprob: -16.500911712646484
    7. '```' → logprob: -16.500911712646484
    8. '**' → logprob: -16.625911712646484
    9. '*\' → logprob: -18.500911712646484
    10. '*p' → logprob: -18.625911712646484

Token 1718: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.0005581548321060836
    2. ' *' → logprob: -7.500558376312256
    3. '*(' → logprob: -13.000557899475098
    4. '(edges' → logprob: -13.000557899475098
    5. 'edges' → logprob: -14.625557899475098
    6. '**' → logprob: -15.750557899475098
    7. ' edges' → logprob: -16.250558853149414
    8. '_edges' → logprob: -18.000558853149414
    9. '```' → logprob: -18.250558853149414
    10. '.edges' → logprob: -18.750558853149414

Token 1719: 'edges' (ID: 39127)
  Prédit: 'edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -1.306760805164231e-05
    2. ' edges' → logprob: -11.25001335144043
    3. '(edges' → logprob: -18.37501335144043
    4. '.edges' → logprob: -19.37501335144043
    5. '
' → logprob: -19.62501335144043
    6. 's' → logprob: -20.62501335144043
    7. 'len' → logprob: -20.75001335144043
    8. 'surface' → logprob: -21.00001335144043
    9. '_edges' → logprob: -21.62501335144043
    10. '```' → logprob: -22.00001335144043

Token 1720: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.15977615118026733
    2. '<|end|>' → logprob: -2.159776210784912
    3. '       ' → logprob: -4.409776210784912
    4. '    
' → logprob: -5.159776210784912
    5. '        
' → logprob: -5.159776210784912
    6. '

' → logprob: -5.659776210784912
    7. '<|end|>' → logprob: -6.284776210784912
    8. '  
' → logprob: -6.534776210784912
    9. '   ' → logprob: -7.159776210784912
    10. ')' → logprob: -7.909776210784912

Token 1721: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3853592574596405
    2. '       ' → logprob: -1.260359287261963
    3. '        
' → logprob: -3.635359287261963
    4. '<|end|>' → logprob: -4.885359287261963
    5. '```' → logprob: -7.010359287261963
    6. '

' → logprob: -7.760359287261963
    7. '    
' → logprob: -8.510358810424805
    8. '<|end|>' → logprob: -8.510358810424805
    9. '   ' → logprob: -8.760358810424805
    10. 'import' → logprob: -9.135358810424805

Token 1722: ' INF' (ID: 69196)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.05220700427889824
    2. '       ' → logprob: -3.6772069931030273
    3. 'min' → logprob: -4.177206993103027
    4. 'result' → logprob: -5.052206993103027
    5. 'answer' → logprob: -6.552206993103027
    6. 'res' → logprob: -6.677206993103027
    7. ' best' → logprob: -8.052206993103027
    8. 'ans' → logprob: -8.427206993103027
    9. 'minimum' → logprob: -8.552206993103027
    10. 'minimal' → logprob: -9.052206993103027

Token 1723: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4748085141181946
    2. '=' → logprob: -0.9748085141181946
    3. ')' → logprob: -7.599808692932129
    4. '<|end|>' → logprob: -9.474808692932129
    5. '_' → logprob: -10.224808692932129
    6. '=
' → logprob: -10.974808692932129
    7. ',' → logprob: -10.974808692932129
    8. '=int' → logprob: -11.099808692932129
    9. ':' → logprob: -11.349808692932129
    10. '<|end|>' → logprob: -11.474808692932129

Token 1724: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -5.438573680294212e-06
    2. 'float' → logprob: -12.500005722045898
    3. ' ' → logprob: -13.500005722045898
    4. 'int' → logprob: -15.125005722045898
    5. '   ' → logprob: -17.8750057220459
    6. '1' → logprob: -19.1250057220459
    7. '100' → logprob: -19.8750057220459
    8. ' float' → logprob: -21.1250057220459
    9. '       ' → logprob: -21.2500057220459
    10. '           ' → logprob: -21.3750057220459

Token 1725: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -8.537868779967539e-06
    2. 'float' → logprob: -12.250008583068848
    3. 'int' → logprob: -12.500008583068848
    4. '1' → logprob: -17.87500762939453
    5. ' ' → logprob: -18.62500762939453
    6. '100' → logprob: -21.62500762939453
    7. '(' → logprob: -22.37500762939453
    8. '   ' → logprob: -22.50000762939453
    9. '999' → logprob: -23.50000762939453
    10. '
' → logprob: -23.50000762939453

Token 1726: '**' (ID: 410)
  Prédit: '8'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -1.1399089097976685
    2. '6' → logprob: -1.2649089097976685
    3. '9' → logprob: -1.5149089097976685
    4. '000' → logprob: -2.764908790588379
    5. '7' → logprob: -2.889908790588379
    6. '**' → logprob: -4.014908790588379
    7. '4' → logprob: -4.389908790588379
    8. '10' → logprob: -4.889908790588379
    9. '00' → logprob: -5.014908790588379
    10. '0' → logprob: -5.264908790588379

Token 1727: '15' (ID: 1055)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.008778243325650692
    2. '15' → logprob: -4.758778095245361
    3. '18' → logprob: -8.75877857208252
    4. '12' → logprob: -12.25877857208252
    5. '10' → logprob: -13.50877857208252
    6. '14' → logprob: -15.75877857208252
    7. '7' → logprob: -16.008777618408203
    8. '13' → logprob: -16.383777618408203
    9. '16' → logprob: -16.633777618408203
    10. '09' → logprob: -19.633777618408203

Token 1728: '
' (ID: 198)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.8148518800735474
    2. 'best' → logprob: -1.0648518800735474
    3. '       ' → logprob: -1.8148518800735474
    4. 'result' → logprob: -3.439851760864258
    5. 'answer' → logprob: -4.939851760864258
    6. 'res' → logprob: -5.814851760864258
    7. 'minimum' → logprob: -6.564851760864258
    8. '```' → logprob: -6.689851760864258
    9. 'minimal' → logprob: -6.689851760864258
    10. 'for' → logprob: -7.064851760864258

Token 1729: '       ' (ID: 309)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.5116732120513916
    2. '       ' → logprob: -1.0116732120513916
    3. 'min' → logprob: -3.5116732120513916
    4. 'result' → logprob: -5.6366729736328125
    5. 'answer' → logprob: -6.5116729736328125
    6. 'res' → logprob: -7.0116729736328125
    7. ' best' → logprob: -8.136672973632812
    8. '	best' → logprob: -8.636672973632812
    9. 'ans' → logprob: -8.886672973632812
    10. 'minimum' → logprob: -9.136672973632812

Token 1730: ' ans' (ID: 3345)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.08986614644527435
    2. 'res' → logprob: -2.5898661613464355
    3. 'ans' (adapté à ' ans') → logprob: -4.8398661613464355
    4. 'answer' → logprob: -6.5898661613464355
    5. 'result' → logprob: -7.0898661613464355
    6. 'min' → logprob: -7.3398661613464355
    7. '       ' → logprob: -8.839865684509277
    8. ' best' → logprob: -12.464865684509277
    9. '   ' → logprob: -13.464865684509277
    10. 'minimum' → logprob: -15.339865684509277

Token 1731: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20141470432281494
    2. '=' → logprob: -1.701414704322815
    3. ',' → logprob: -14.826415061950684
    4. ' =
' → logprob: -15.576415061950684
    5. ')' → logprob: -15.701415061950684
    6. '_' → logprob: -15.701415061950684
    7. '=
' → logprob: -15.826415061950684
    8. '=None' → logprob: -16.076414108276367
    9. '<|end|>' → logprob: -16.576414108276367
    10. '_=' → logprob: -16.951414108276367

Token 1732: ' INF' (ID: 69196)
  Prédit: 'INF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'INF' → logprob: -0.0027663595974445343
    2. ' INF' → logprob: -6.002766132354736
    3. '-' → logprob: -8.377766609191895
    4. '-INF' → logprob: -10.002766609191895
    5. ' -' → logprob: -11.127766609191895
    6. '_INF' → logprob: -14.377766609191895
    7. '   ' → logprob: -16.002765655517578
    8. 'inf' → logprob: -16.877765655517578
    9. 'None' → logprob: -16.877765655517578
    10. 'IN' → logprob: -17.002765655517578

Token 1733: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6026650667190552
    2. 'for' → logprob: -1.4776650667190552
    3. ' for' → logprob: -1.7276650667190552
    4. '
' → logprob: -3.8526649475097656
    5. '<|end|>' → logprob: -3.9776649475097656
    6. '        
' → logprob: -6.102664947509766
    7. '```' → logprob: -6.477664947509766
    8. '<|end|>' → logprob: -6.852664947509766
    9. '	for' → logprob: -7.102664947509766
    10. ',' → logprob: -7.977664947509766

Token 1734: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.653645396232605
    2. 'for' → logprob: -0.778645396232605
    3. ' for' → logprob: -4.0286455154418945
    4. '	for' → logprob: -6.7786455154418945
    5. '```' → logprob: -7.0286455154418945
    6. '
' → logprob: -7.4036455154418945
    7. '	' → logprob: -8.778645515441895
    8. '        
' → logprob: -8.778645515441895
    9. '	   ' → logprob: -10.403645515441895
    10. '   ' → logprob: -11.028645515441895

Token 1735: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.023780757561326027
    2. '       ' → logprob: -3.7737808227539062
    3. '```' → logprob: -7.773780822753906
    4. ' for' → logprob: -9.398780822753906
    5. '
' → logprob: -10.523780822753906
    6. '	for' → logprob: -13.023780822753906
    7. '        
' → logprob: -13.648780822753906
    8. '``' → logprob: -14.023780822753906
    9. '#' (adapté à ' #') → logprob: -15.023780822753906
    10. '   ' → logprob: -16.398780822753906

Token 1736: ' Pour' (ID: 13931)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.006811053026467562
    2. '       ' → logprob: -5.006811141967773
    3. ' for' → logprob: -9.506811141967773
    4. '```' → logprob: -11.006811141967773
    5. '
' → logprob: -12.506811141967773
    6. '	for' → logprob: -14.631811141967773
    7. '#' → logprob: -15.256811141967773
    8. '        
' → logprob: -15.881811141967773
    9. '   ' → logprob: -16.131811141967773
    10. '``' → logprob: -16.506811141967773

Token 1737: ' chaque' (ID: 21194)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.0028620585799217224
    2. 'component' → logprob: -6.127861976623535
    3. 'c' → logprob: -8.377861976623535
    4. 'i' → logprob: -8.502861976623535
    5. ' comp' → logprob: -8.502861976623535
    6. 'each' → logprob: -11.752861976623535
    7. '_comp' → logprob: -11.877861976623535
    8. 'com' → logprob: -12.752861976623535
    9. '   ' → logprob: -12.752861976623535
    10. 'part' → logprob: -12.752861976623535

Token 1738: ' compos' (ID: 14635)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.0003464289184194058
    2. 'component' → logprob: -8.000346183776855
    3. ' comp' → logprob: -11.625346183776855
    4. 'c' → logprob: -13.500346183776855
    5. '   ' → logprob: -14.875346183776855
    6. 'com' → logprob: -16.500347137451172
    7. 'cmp' → logprob: -16.875347137451172
    8. '	comp' → logprob: -17.000347137451172
    9. 'Comp' → logprob: -18.250347137451172
    10. '       ' → logprob: -18.625347137451172

Token 1739: 'ante' (ID: 2116)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.3764767348766327
    2. 'ante' → logprob: -1.626476764678955
    3. 'ponent' → logprob: -2.501476764678955
    4. '   ' → logprob: -4.376476764678955
    5. 'ponente' → logprob: -4.626476764678955
    6. '
' → logprob: -6.251476764678955
    7. '           ' → logprob: -6.876476764678955
    8. 'for' → logprob: -6.876476764678955
    9. '#' → logprob: -6.876476764678955
    10. 'ant' → logprob: -7.001476764678955

Token 1740: ' conn' (ID: 10850)
  Prédit: 'conn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'conn' → logprob: -0.03893690183758736
    2. 'con' → logprob: -4.788937091827393
    3. ':
' → logprob: -5.163937091827393
    4. 'in' → logprob: -5.413937091827393
    5. 'comp' → logprob: -5.413937091827393
    6. '       ' → logprob: -5.538937091827393
    7. ' in' → logprob: -5.788937091827393
    8. ',' → logprob: -6.288937091827393
    9. ':' → logprob: -6.288937091827393
    10. 'c' → logprob: -6.913937091827393

Token 1741: 'exe' (ID: 70589)
  Prédit: 'exe'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exe' → logprob: -0.01886250637471676
    2. 'n' → logprob: -4.393862724304199
    3. 'ect' → logprob: -5.518862724304199
    4. '   ' → logprob: -7.393862724304199
    5. 'ex' → logprob: -7.768862724304199
    6. 'inue' → logprob: -9.2688627243042
    7. '       ' → logprob: -9.2688627243042
    8. '#' → logprob: -9.3938627243042
    9. 'enue' → logprob: -9.5188627243042
    10. '=' → logprob: -9.5188627243042

Token 1742: ' de' (ID: 334)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6546012759208679
    2. ':' → logprob: -1.2796013355255127
    3. ' in' → logprob: -2.5296013355255127
    4. '       ' → logprob: -2.7796013355255127
    5. ',' → logprob: -3.6546013355255127
    6. 'in' → logprob: -4.029601097106934
    7. '```' → logprob: -4.654601097106934
    8. '           ' → logprob: -5.904601097106934
    9. 'comp' → logprob: -6.529601097106934
    10. '   ' → logprob: -7.779601097106934

Token 1743: ' taille' (ID: 41644)
  Prédit: 'tail'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tail' → logprob: -0.005437350831925869
    2. 'size' → logprob: -5.50543737411499
    3. 'com' → logprob: -7.75543737411499
    4. '   ' → logprob: -8.255436897277832
    5. ' taille' → logprob: -8.505436897277832
    6. 'component' → logprob: -9.255436897277832
    7. 'ta' → logprob: -9.255436897277832
    8. '       ' → logprob: -9.880436897277832
    9. 'comp' → logprob: -10.005436897277832
    10. 'components' → logprob: -10.005436897277832

Token 1744: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.001443568617105484
    2. ' >=' → logprob: -6.751443386077881
    3. '>' → logprob: -9.126443862915039
    4. '≥' → logprob: -10.001443862915039
    5. '   ' → logprob: -10.626443862915039
    6. 'in' → logprob: -10.751443862915039
    7. '       ' → logprob: -11.251443862915039
    8. '=' → logprob: -11.501443862915039
    9. ' in' → logprob: -11.751443862915039
    10. ']>=' → logprob: -11.751443862915039

Token 1745: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -4.36574100604048e-06
    2. ' k' → logprob: -12.375004768371582
    3. '       ' → logprob: -17.000003814697266
    4. '```' → logprob: -17.125003814697266
    5. '   ' → logprob: -18.250003814697266
    6. '           ' → logprob: -19.125003814697266
    7. '
' → logprob: -20.375003814697266
    8. 'к' → logprob: -21.000003814697266
    9. '               ' → logprob: -21.375003814697266
    10. '`' → logprob: -21.750003814697266

Token 1746: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3828125
    2. ':
' → logprob: -1.5078125
    3. ':' → logprob: -2.5078125
    4. '           ' → logprob: -4.5078125
    5. ',' → logprob: -5.6328125
    6. 'for' → logprob: -9.0078125
    7. '):
' → logprob: -9.1328125
    8. ' for' → logprob: -9.2578125
    9. '```' → logprob: -9.5078125
    10. '   ' → logprob: -9.6328125

Token 1747: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00735672889277339
    2. ':
' → logprob: -5.757356643676758
    3. '           ' → logprob: -6.257356643676758
    4. ':' → logprob: -6.257356643676758
    5. '   ' → logprob: -8.882356643676758
    6. 'for' → logprob: -9.257356643676758
    7. ',' → logprob: -10.257356643676758
    8. ' for' → logprob: -10.257356643676758
    9. '```' → logprob: -10.632356643676758
    10. '):
' → logprob: -12.632356643676758

Token 1748: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10313412547111511
    2. 'for' → logprob: -2.3531341552734375
    3. ' for' → logprob: -5.8531341552734375
    4. '```' → logprob: -10.228134155273438
    5. '   ' → logprob: -11.728134155273438
    6. '           ' → logprob: -12.103134155273438
    7. '	for' → logprob: -13.728134155273438
    8. '        
' → logprob: -14.353134155273438
    9. '
' → logprob: -15.478134155273438
    10. ',' → logprob: -15.853134155273438

Token 1749: ' On' (ID: 2160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.47461119294166565
    2. '       ' → logprob: -0.9746111631393433
    3. ' for' → logprob: -7.974611282348633
    4. '```' → logprob: -8.849611282348633
    5. '   ' → logprob: -10.224611282348633
    6. '           ' → logprob: -12.099611282348633
    7. '	for' → logprob: -13.599611282348633
    8. '        
' → logprob: -13.974611282348633
    9. '``' → logprob: -14.224611282348633
    10. '#' → logprob: -14.474611282348633

Token 1750: ' fait' (ID: 7473)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.005500310566276312
    2. ' for' → logprob: -6.130500316619873
    3. '       ' → logprob: -6.255500316619873
    4. 'pour' → logprob: -7.380500316619873
    5. '#' → logprob: -7.755500316619873
    6. 'import' → logprob: -9.005499839782715
    7. '```' → logprob: -9.255499839782715
    8. 'continue' → logprob: -10.130499839782715
    9. ':' → logprob: -10.630499839782715
    10. '
' → logprob: -11.130499839782715

Token 1751: ' BFS' (ID: 190016)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3955174386501312
    2. ' i' → logprob: -1.6455174684524536
    3. ' for' → logprob: -2.520517349243164
    4. 'i' → logprob: -3.395517349243164
    5. '```' → logprob: -4.520517349243164
    6. '   ' → logprob: -5.270517349243164
    7. '       ' → logprob: -5.770517349243164
    8. '           ' → logprob: -8.520517349243164
    9. '    ' → logprob: -9.520517349243164
    10. '        
' → logprob: -9.770517349243164

Token 1752: ' multi' (ID: 12151)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.774459719657898
    2. 'pour' → logprob: -1.899459719657898
    3. 'for' → logprob: -2.1494598388671875
    4. 'from' → logprob: -2.7744598388671875
    5. ' pour' → logprob: -2.7744598388671875
    6. 'dep' → logprob: -3.2744598388671875
    7. ' for' → logprob: -3.2744598388671875
    8. 'à' → logprob: -3.6494598388671875
    9. ' depuis' → logprob: -4.1494598388671875
    10. ' from' → logprob: -5.0244598388671875

Token 1753: ' départ' (ID: 32693)
  Prédit: 'ple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ple' → logprob: -0.6354650855064392
    2. 'plex' → logprob: -1.260465145111084
    3. 'pl' → logprob: -2.635465145111084
    4. 'plier' → logprob: -3.260465145111084
    5. 'plic' → logprob: -3.885465145111084
    6. 'plet' → logprob: -4.385465145111084
    7. 'for' → logprob: -4.510465145111084
    8. 'ply' → logprob: -4.885465145111084
    9. 'ples' → logprob: -5.385465145111084
    10. 'p' → logprob: -5.760465145111084

Token 1754: 's' (ID: 82)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4970502555370331
    2. '       ' → logprob: -1.2470502853393555
    3. 'from' → logprob: -2.6220502853393555
    4. ' for' → logprob: -4.1220502853393555
    5. 'pour' → logprob: -4.9970502853393555
    6. ' pour' → logprob: -5.7470502853393555
    7. '(' → logprob: -7.3720502853393555
    8. ' from' → logprob: -7.4970502853393555
    9. '```' → logprob: -7.7470502853393555
    10. 'de' → logprob: -7.9970502853393555

Token 1755: ' pour' (ID: 1930)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5034451484680176
    2. 'for' → logprob: -1.0034451484680176
    3. 'from' → logprob: -3.7534451484680176
    4. ' for' → logprob: -5.878445148468018
    5. '```' → logprob: -6.753445148468018
    6. '
' → logprob: -7.628445148468018
    7. ':
' → logprob: -8.25344467163086
    8. '           ' → logprob: -8.62844467163086
    9. ':' → logprob: -9.37844467163086
    10. ',' → logprob: -9.37844467163086

Token 1756: ' trouver' (ID: 23195)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5411940813064575
    2. ' trouver' → logprob: -1.9161940813064575
    3. 'u' → logprob: -2.416193962097168
    4. 'v' → logprob: -3.041193962097168
    5. 'comp' → logprob: -3.791193962097168
    6. 'node' → logprob: -3.791193962097168
    7. 'tr' → logprob: -4.041193962097168
    8. 'chercher' → logprob: -4.416193962097168
    9. 'com' → logprob: -4.666193962097168
    10. ' i' → logprob: -4.916193962097168

Token 1757: ' tous' (ID: 10688)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'une' → logprob: -1.0611324310302734
    2. '#' → logprob: -1.4361324310302734
    3. 'des' → logprob: -1.6861324310302734
    4. 'un' → logprob: -2.6861324310302734
    5. 'les' → logprob: -2.6861324310302734
    6. 'le' → logprob: -3.6861324310302734
    7. 'la' → logprob: -4.311132431030273
    8. 'sub' → logprob: -4.561132431030273
    9. ' des' → logprob: -4.561132431030273
    10. 'sets' → logprob: -5.061132431030273

Token 1758: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.51999831199646
    2. 'conn' → logprob: -1.51999831199646
    3. 'ense' → logprob: -3.14499831199646
    4. '#' → logprob: -3.26999831199646
    5. 's' → logprob: -4.019998550415039
    6. '```' → logprob: -4.394998550415039
    7. 'connected' → logprob: -4.519998550415039
    8. 'sets' → logprob: -4.644998550415039
    9. 'poss' → logprob: -4.894998550415039
    10. 'c' → logprob: -5.019998550415039

Token 1759: ' sous' (ID: 14487)
  Prédit: 'ense'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ense' → logprob: -0.4933222532272339
    2. 's' → logprob: -1.1183222532272339
    3. 'k' → logprob: -4.118322372436523
    4. 'c' → logprob: -4.243322372436523
    5. 'ensemble' → logprob: -4.868322372436523
    6. 'sub' → logprob: -4.993322372436523
    7. 'som' → logprob: -5.243322372436523
    8. 'sets' → logprob: -5.993322372436523
    9. 'conn' → logprob: -6.118322372436523
    10. 'poss' → logprob: -6.618322372436523

Token 1760: '-' (ID: 12)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3365747034549713
    2. '-' → logprob: -1.961574673652649
    3. 'ense' → logprob: -2.7115747928619385
    4. 'sets' → logprob: -3.2115747928619385
    5. 'conn' → logprob: -5.211574554443359
    6. '_conn' → logprob: -5.461574554443359
    7. 'ensemble' → logprob: -5.586574554443359
    8. '_graph' → logprob: -5.836574554443359
    9. '_con' → logprob: -5.961574554443359
    10. 'graph' → logprob: -6.086574554443359

Token 1761: 'graph' (ID: 7978)
  Prédit: 'ense'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ense' → logprob: -0.24331699311733246
    2. 'graph' → logprob: -1.8683170080184937
    3. 'sets' → logprob: -4.118317127227783
    4. 'conn' → logprob: -4.243317127227783
    5. 'graphs' → logprob: -4.368317127227783
    6. 'ensemble' → logprob: -4.618317127227783
    7. '```' → logprob: -5.868317127227783
    8. 'connected' → logprob: -6.243317127227783
    9. 'gr' → logprob: -6.368317127227783
    10. '_graph' → logprob: -8.243316650390625

Token 1762: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.020244624465703964
    2. 'conn' → logprob: -4.895244598388672
    3. 'raph' → logprob: -5.645244598388672
    4. 's' → logprob: -6.395244598388672
    5. 'e' → logprob: -6.895244598388672
    6. 'èmes' → logprob: -7.145244598388672
    7. 'connected' → logprob: -7.770244598388672
    8. 'ets' → logprob: -8.020244598388672
    9. 'sets' → logprob: -8.020244598388672
    10. 'ects' → logprob: -8.020244598388672

Token 1763: ' connex' (ID: 154480)
  Prédit: 'conn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'conn' → logprob: -0.011903055012226105
    2. '#' → logprob: -5.511903285980225
    3. '       ' → logprob: -5.636903285980225
    4. 'de' → logprob: -6.886903285980225
    5. 'connect' → logprob: -7.386903285980225
    6. '_conn' → logprob: -7.386903285980225
    7. '```' → logprob: -7.886903285980225
    8. ' connex' → logprob: -8.136902809143066
    9. 'con' → logprob: -8.261902809143066
    10. '
' → logprob: -8.511902809143066

Token 1764: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.5050062537193298
    2. 'ect' → logprob: -1.7550063133239746
    3. 'és' → logprob: -2.1300063133239746
    4. 'ects' → logprob: -3.1300063133239746
    5. 'ets' → logprob: -3.2550063133239746
    6. 'ives' → logprob: -5.505006313323975
    7. 'ected' → logprob: -5.630006313323975
    8. 'ections' → logprob: -5.755006313323975
    9. 'ective' → logprob: -5.880006313323975
    10. 'et' → logprob: -6.255006313323975

Token 1765: ' de' (ID: 334)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.31128013134002686
    2. '#' → logprob: -2.3112802505493164
    3. 'de' → logprob: -3.1862802505493164
    4. 'à' → logprob: -3.1862802505493164
    5. 'pour' → logprob: -3.9362802505493164
    6. 'for' → logprob: -4.061280250549316
    7. 'from' → logprob: -4.311280250549316
    8. 'dep' → logprob: -4.311280250549316
    9. ',' → logprob: -5.561280250549316
    10. 'dans' → logprob: -6.061280250549316

Token 1766: ' taille' (ID: 41644)
  Prédit: 'tail'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tail' → logprob: -0.022336814552545547
    2. 'size' → logprob: -4.397336959838867
    3. 'k' → logprob: -5.647336959838867
    4. '#' → logprob: -5.897336959838867
    5. '```' → logprob: -6.272336959838867
    6. ' taille' → logprob: -6.647336959838867
    7. 'ta' → logprob: -8.647336959838867
    8. 'exact' → logprob: -9.897336959838867
    9. '``' → logprob: -10.772336959838867
    10. 'tails' → logprob: -11.272336959838867

Token 1767: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.02283075824379921
    2. ' k' → logprob: -3.8978307247161865
    3. '```' → logprob: -6.397830963134766
    4. '#' → logprob: -8.522830963134766
    5. '=k' → logprob: -8.897830963134766
    6. '
' → logprob: -9.397830963134766
    7. 'exact' → logprob: -9.647830963134766
    8. '=' → logprob: -9.772830963134766
    9. '``' → logprob: -11.022830963134766
    10. '1' → logprob: -11.397830963134766

Token 1768: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00476569589227438
    2. ',' → logprob: -5.879765510559082
    3. 'from' → logprob: -7.129765510559082
    4. ':' → logprob: -8.254765510559082
    5. '
' → logprob: -8.254765510559082
    6. 'import' → logprob: -8.379765510559082
    7. ':
' → logprob: -9.004765510559082
    8. '```' → logprob: -9.504765510559082
    9. 'for' → logprob: -9.629765510559082
    10. '#' → logprob: -10.129765510559082

Token 1769: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0001302374730585143
    2. ',' → logprob: -9.125130653381348
    3. 'import' → logprob: -12.000130653381348
    4. '#' → logprob: -12.500130653381348
    5. '```' → logprob: -12.500130653381348
    6. ' for' → logprob: -13.375130653381348
    7. 'from' → logprob: -13.750130653381348
    8. '
' → logprob: -13.750130653381348
    9. '        
' → logprob: -14.250130653381348
    10. ':' → logprob: -14.375130653381348

Token 1770: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011434697546064854
    2. 'for' → logprob: -4.511434555053711
    3. '```' → logprob: -8.511434555053711
    4. ' for' → logprob: -9.386434555053711
    5. '
' → logprob: -10.011434555053711
    6. 'from' → logprob: -10.636434555053711
    7. '        
' → logprob: -10.761434555053711
    8. '           ' → logprob: -12.761434555053711
    9. '   ' → logprob: -12.761434555053711
    10. 'import' → logprob: -13.011434555053711

Token 1771: ' BFS' (ID: 190016)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000477620807942003
    2. 'for' → logprob: -8.00047779083252
    3. 'from' → logprob: -9.12547779083252
    4. 'import' → logprob: -10.75047779083252
    5. '
' → logprob: -12.12547779083252
    6. '```' → logprob: -12.50047779083252
    7. '        
' → logprob: -13.50047779083252
    8. '#' → logprob: -14.75047779083252
    9. ' for' → logprob: -15.00047779083252
    10. '   ' → logprob: -15.12547779083252

Token 1772: ' avec' (ID: 3937)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7507795095443726
    2. '_queue' → logprob: -1.2507795095443726
    3. 'from' → logprob: -2.375779628753662
    4. '   ' → logprob: -3.000779628753662
    5. '       ' → logprob: -3.750779628753662
    6. 'for' → logprob: -4.000779628753662
    7. '=' → logprob: -4.000779628753662
    8. 's' → logprob: -5.375779628753662
    9. '_from' → logprob: -5.750779628753662
    10. 'def' → logprob: -5.750779628753662

Token 1773: ' tuple' (ID: 31311)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.08206065744161606
    2. 'queue' → logprob: -2.7070605754852295
    3. 'collections' → logprob: -4.957060813903809
    4. 'start' → logprob: -6.957060813903809
    5. 'state' → logprob: -7.082060813903809
    6. ' queue' → logprob: -7.457060813903809
    7. 'visited' → logprob: -7.457060813903809
    8. ' deque' → logprob: -7.582060813903809
    9. '(queue' → logprob: -8.082060813903809
    10. 'node' → logprob: -8.207060813903809

Token 1774: ' (' (ID: 350)
  Prédit: '(u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.262178510427475
    2. '(' → logprob: -1.8871785402297974
    3. '(queue' → logprob: -3.012178421020508
    4. '=' → logprob: -5.012178421020508
    5. '(
' → logprob: -5.262178421020508
    6. '(node' → logprob: -5.637178421020508
    7. ' (' → logprob: -5.887178421020508
    8. ' =' → logprob: -6.012178421020508
    9. '(current' → logprob: -6.512178421020508
    10. '(n' → logprob: -6.637178421020508

Token 1775: 'ensemble' (ID: 37301)
  Prédit: 'fro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fro' → logprob: -0.19051241874694824
    2. '(f' → logprob: -1.9405124187469482
    3. '(u' → logprob: -3.9405124187469482
    4. '(c' → logprob: -5.815512657165527
    5. '(' → logprob: -5.815512657165527
    6. ' fro' → logprob: -7.190512657165527
    7. '(
' → logprob: -7.565512657165527
    8. 'tuple' → logprob: -8.065512657165527
    9. '(current' → logprob: -8.190512657165527
    10. 'c' → logprob: -8.565512657165527

Token 1776: '_act' (ID: 67104)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07372653484344482
    2. ',
' → logprob: -3.6987266540527344
    3. '(f' → logprob: -3.6987266540527344
    4. ')' → logprob: -4.948726654052734
    5. ',f' → logprob: -5.948726654052734
    6. 'fro' → logprob: -5.948726654052734
    7. ' ,' → logprob: -6.198726654052734
    8. '(' → logprob: -6.573726654052734
    9. '(c' → logprob: -7.698726654052734
    10. '),' → logprob: -7.698726654052734

Token 1777: 'uel' (ID: 4619)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13549622893333435
    2. ')' → logprob: -3.135496139526367
    3. '(' → logprob: -4.635496139526367
    4. 'é' → logprob: -4.760496139526367
    5. 'e' → logprob: -4.885496139526367
    6. 'ected' → logprob: -4.885496139526367
    7. 'ed' → logprob: -5.260496139526367
    8. '(),' → logprob: -5.385496139526367
    9. 's' → logprob: -5.385496139526367
    10. ' ,' → logprob: -5.885496139526367

Token 1778: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.054109569638967514
    2. ',
' → logprob: -4.054109573364258
    3. ' ,' → logprob: -4.554109573364258
    4. ')' → logprob: -4.804109573364258
    5. ',f' → logprob: -5.304109573364258
    6. '(f' → logprob: -6.179109573364258
    7. 'fro' → logprob: -6.304109573364258
    8. '_f' → logprob: -6.429109573364258
    9. '_' → logprob: -6.804109573364258
    10. ')_' → logprob: -7.554109573364258

Token 1779: ' frontier' (ID: 100238)
  Prédit: 'front'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'front' → logprob: -0.7212631106376648
    2. 'fro' → logprob: -0.9712631106376648
    3. 'len' → logprob: -2.9712631702423096
    4. 'tuple' → logprob: -4.0962629318237305
    5. 'u' → logprob: -4.3462629318237305
    6. ' frontier' → logprob: -4.5962629318237305
    7. 'last' → logprob: -4.7212629318237305
    8. ' fro' → logprob: -4.9712629318237305
    9. ' front' → logprob: -5.4712629318237305
    10. 'neighbors' → logprob: -5.5962629318237305

Token 1780: ')
' (ID: 446)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07355853915214539
    2. ')' → logprob: -3.1985585689544678
    3. ' ,' → logprob: -4.448558330535889
    4. ',
' → logprob: -5.698558330535889
    5. '=' → logprob: -5.823558330535889
    6. '_' → logprob: -6.698558330535889
    7. '```' → logprob: -6.698558330535889
    8. '[' → logprob: -6.823558330535889
    9. '):
' → logprob: -6.823558330535889
    10. ' (' → logprob: -6.823558330535889

Token 1781: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7421854734420776
    2. ',' → logprob: -1.1171854734420776
    3. '           ' → logprob: -2.867185592651367
    4. '(' → logprob: -3.867185592651367
    5. ' =' → logprob: -3.867185592651367
    6. ')' → logprob: -4.117185592651367
    7. '=' → logprob: -4.117185592651367
    8. '               ' → logprob: -4.367185592651367
    9. '```' → logprob: -4.742185592651367
    10. '[' → logprob: -4.867185592651367

Token 1782: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1237061619758606
    2. 'from' → logprob: -2.623706102371216
    3. ' from' → logprob: -4.623706340789795
    4. 'queue' → logprob: -4.748706340789795
    5. '
' → logprob: -4.873706340789795
    6. ' queue' → logprob: -5.123706340789795
    7. '   ' → logprob: -5.623706340789795
    8. '```' → logprob: -5.873706340789795
    9. ',' → logprob: -6.998706340789795
    10. 'for' → logprob: -7.123706340789795

Token 1783: ' Mais' (ID: 13880)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5924860835075378
    2. 'from' → logprob: -0.9674860835075378
    3. 'queue' → logprob: -2.8424861431121826
    4. '```' → logprob: -6.0924859046936035
    5. 'visited' → logprob: -6.4674859046936035
    6. '   ' → logprob: -6.4674859046936035
    7. ' from' → logprob: -7.4674859046936035
    8. 'b' → logprob: -7.5924859046936035
    9. ' queue' → logprob: -7.8424859046936035
    10. 'q' → logprob: -8.092486381530762

Token 1784: ' pour' (ID: 1930)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.04681570455431938
    2. '(
' → logprob: -4.171815872192383
    3. ' #' → logprob: -4.671815872192383
    4. 'len' → logprob: -5.546815872192383
    5. '(' → logprob: -5.921815872192383
    6. '       ' → logprob: -6.546815872192383
    7. ' (' → logprob: -6.546815872192383
    8. ' not' → logprob: -6.921815872192383
    9. 'not' → logprob: -7.171815872192383
    10. ' (
' → logprob: -7.296815872192383

Token 1785: ' k' (ID: 372)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.33905187249183655
    2. 'i' → logprob: -1.8390518426895142
    3. 'len' → logprob: -3.5890519618988037
    4. 'ensemble' → logprob: -4.214051723480225
    5. 'raison' → logprob: -4.339051723480225
    6. ' _' → logprob: -4.589051723480225
    7. 'u' → logprob: -5.089051723480225
    8. 'l' → logprob: -5.464051723480225
    9. 'subset' → logprob: -5.464051723480225
    10. 'reason' → logprob: -5.714051723480225

Token 1786: ' jusqu' (ID: 21961)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<=' → logprob: -1.0200146436691284
    2. '>' → logprob: -1.1450146436691284
    3. ' <=' → logprob: -1.7700146436691284
    4. ' >' → logprob: -2.395014762878418
    5. '=' → logprob: -3.895014762878418
    6. '==' → logprob: -4.645014762878418
    7. '```' → logprob: -4.645014762878418
    8. '<' → logprob: -5.520014762878418
    9. ' ==' → logprob: -5.645014762878418
    10. ')' → logprob: -5.645014762878418

Token 1787: ''à' (ID: 33688)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.22331427037715912
    2. ' <=' → logprob: -3.0983142852783203
    3. ' <' → logprob: -3.5983142852783203
    4. '<=' → logprob: -3.7233142852783203
    5. '       ' → logprob: -4.09831428527832
    6. ' =' → logprob: -4.09831428527832
    7. '100' → logprob: -4.22331428527832
    8. ' à' → logprob: -4.84831428527832
    9. '```' → logprob: -4.97331428527832
    10. ' k' → logprob: -4.97331428527832

Token 1788: ' ' (ID: 220)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.3713112771511078
    2. '200' → logprob: -1.8713113069534302
    3. '100' → logprob: -2.6213111877441406
    4. ' ' → logprob: -3.9963111877441406
    5. ' k' → logprob: -3.9963111877441406
    6. '10' → logprob: -4.621311187744141
    7. '20' → logprob: -4.621311187744141
    8. '1' → logprob: -5.121311187744141
    9. '2' → logprob: -5.371311187744141
    10. '```' → logprob: -5.371311187744141

Token 1789: '200' (ID: 1179)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.5945911407470703
    2. '200' → logprob: -1.3445911407470703
    3. '1' → logprob: -2.3445911407470703
    4. '100' → logprob: -3.3445911407470703
    5. '10' → logprob: -4.09459114074707
    6. '20' → logprob: -4.71959114074707
    7. '2' → logprob: -4.96959114074707
    8. ' ' → logprob: -4.96959114074707
    9. '=' → logprob: -5.21959114074707
    10. '50' → logprob: -6.21959114074707

Token 1790: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004801240866072476
    2. '       ' → logprob: -9.625479698181152
    3. ',' → logprob: -9.750479698181152
    4. ')' → logprob: -10.125479698181152
    5. '{
' → logprob: -10.250479698181152
    6. ':
' → logprob: -10.375479698181152
    7. '#' → logprob: -10.375479698181152
    8. '000' → logprob: -10.500479698181152
    9. '
' → logprob: -10.750479698181152
    10. 'k' → logprob: -10.875479698181152

Token 1791: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24896343052387238
    2. ',' → logprob: -2.7489633560180664
    3. ':
' → logprob: -3.1239633560180664
    4. ':' → logprob: -3.8739633560180664
    5. '```' → logprob: -4.498963356018066
    6. '=' → logprob: -4.748963356018066
    7. '   ' → logprob: -4.748963356018066
    8. '           ' → logprob: -4.873963356018066
    9. ',
' → logprob: -4.873963356018066
    10. ' if' → logprob: -4.998963356018066

Token 1792: ' explorer' (ID: 73961)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.12387120723724365
    2. ' #' → logprob: -2.498871326446533
    3. ' continue' → logprob: -4.498871326446533
    4. '       ' → logprob: -5.373871326446533
    5. 'continue' → logprob: -5.998871326446533
    6. ':
' → logprob: -6.373871326446533
    7. '           ' → logprob: -6.498871326446533
    8. ' on' → logprob: -6.873871326446533
    9. ':' → logprob: -6.998871326446533
    10. ' n' → logprob: -7.123871326446533

Token 1793: ' tous' (ID: 10688)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -1.0476539134979248
    2. 'com' → logprob: -1.4226539134979248
    3. ' complet' → logprob: -1.9226539134979248
    4. '```' → logprob: -3.547653913497925
    5. ' all' → logprob: -3.922653913497925
    6. ' exhaust' → logprob: -4.047654151916504
    7. 't' → logprob: -4.172654151916504
    8. 'just' → logprob: -4.297654151916504
    9. 'only' → logprob: -4.547654151916504
    10. 'explicit' → logprob: -4.922654151916504

Token 1794: ' les' (ID: 1341)
  Prédit: '_possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_possible' → logprob: -1.1916824579238892
    2. 'possible' → logprob: -2.0666823387145996
    3. ' possible' → logprob: -2.1916823387145996
    4. ')' → logprob: -2.3166823387145996
    5. ' possibles' → logprob: -2.6916823387145996
    6. '_' → logprob: -3.3166823387145996
    7. '```' → logprob: -3.5666823387145996
    8. 'com' → logprob: -3.6916823387145996
    9. 'les' → logprob: -3.8166823387145996
    10. ' est' → logprob: -4.0666823387146

Token 1795: ' sous' (ID: 14487)
  Prédit: 'ense'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ense' → logprob: -1.5592663288116455
    2. ' subsets' → logprob: -1.8092663288116455
    3. ' voisins' → logprob: -2.0592663288116455
    4. ')' → logprob: -2.1842663288116455
    5. ' ensembles' → logprob: -2.1842663288116455
    6. 'sets' → logprob: -2.8092663288116455
    7. 'ensemble' → logprob: -3.1842663288116455
    8. 'neighbors' → logprob: -3.1842663288116455
    9. 's' → logprob: -4.059266090393066
    10. 'sub' → logprob: -4.184266090393066

Token 1796: '-' (ID: 12)
  Prédit: 'sets'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sets' → logprob: -1.141025424003601
    2. '_' → logprob: -1.516025424003601
    3. '_graph' → logprob: -1.891025424003601
    4. 'graph' → logprob: -2.7660255432128906
    5. 'graphs' → logprob: -3.0160255432128906
    6. '-' → logprob: -3.2660255432128906
    7. '```' → logprob: -3.6410255432128906
    8. '       ' → logprob: -3.8910255432128906
    9. 'set' → logprob: -4.516025543212891
    10. '[
' → logprob: -4.641025543212891

Token 1797: 'ense' (ID: 1603)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.13839735090732574
    2. 'graphs' → logprob: -2.638397455215454
    3. 'ense' → logprob: -3.013397455215454
    4. 'gr' → logprob: -5.388397216796875
    5. '_graph' → logprob: -6.013397216796875
    6. '```' → logprob: -8.013397216796875
    7. 'ensemble' → logprob: -8.138397216796875
    8. 'sets' → logprob: -8.138397216796875
    9. '
' → logprob: -8.888397216796875
    10. ' graph' → logprob: -9.138397216796875

Token 1798: 'mbles' (ID: 60383)
  Prédit: 'ts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ts' → logprob: -0.40382522344589233
    2. 't' → logprob: -1.153825283050537
    3. 'sets' → logprob: -5.028825283050537
    4. 'ets' → logprob: -5.778825283050537
    5. 'mbles' → logprob: -5.778825283050537
    6. 'ments' → logprob: -7.278825283050537
    7. '(t' → logprob: -7.778825283050537
    8. 'tu' → logprob: -7.903825283050537
    9. 'quences' → logprob: -8.153824806213379
    10. 'ense' → logprob: -8.153824806213379

Token 1799: ' est' (ID: 893)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.18278846144676208
    2. '```' → logprob: -3.182788372039795
    3. ' est' → logprob: -3.682788372039795
    4. ',' → logprob: -3.682788372039795
    5. ')' → logprob: -3.807788372039795
    6. '_' → logprob: -4.932788372039795
    7. 'n' → logprob: -5.057788372039795
    8. '       ' → logprob: -5.182788372039795
    9. 'est' → logprob: -5.432788372039795
    10. ' is' → logprob: -5.432788372039795

Token 1800: ' impossible' (ID: 19786)
  Prédit: 'im'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'im' → logprob: -0.057218559086322784
    2. 'in' → logprob: -3.182218551635742
    3. 'pro' → logprob: -4.932218551635742
    4. ' impossible' → logprob: -5.432218551635742
    5. 'inf' → logprob: -7.057218551635742
    6. '```' → logprob: -7.307218551635742
    7. 'inut' → logprob: -8.557218551635742
    8. 'import' → logprob: -9.557218551635742
    9. 'imb' → logprob: -9.557218551635742
    10. '#' → logprob: -9.682218551635742

Token 1801: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005414704326540232
    2. '
' → logprob: -5.5054144859313965
    3. '        
' → logprob: -7.1304144859313965
    4. ',' → logprob: -8.255414962768555
    5. '#' → logprob: -9.380414962768555
    6. '<|end|>' → logprob: -9.755414962768555
    7. 'import' → logprob: -10.380414962768555
    8. '           ' → logprob: -10.755414962768555
    9. '<|end|>' → logprob: -11.255414962768555
    10. '   ' → logprob: -11.505414962768555

Token 1802: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007501808926463127
    2. '```' → logprob: -5.507501602172852
    3. '
' → logprob: -5.882501602172852
    4. '        
' → logprob: -7.882501602172852
    5. '#' → logprob: -9.507501602172852
    6. '``' → logprob: -10.007501602172852
    7. '           ' → logprob: -10.382501602172852
    8. '   ' → logprob: -10.507501602172852
    9. '`' → logprob: -10.882501602172852
    10. 'import' → logprob: -11.757501602172852

Token 1803: ' #
' (ID: 21888)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.028216686099767685
    2. '
' → logprob: -3.653216600418091
    3. '```' → logprob: -6.90321683883667
    4. '#' → logprob: -7.65321683883667
    5. '        
' → logprob: -8.903216361999512
    6. 'import' → logprob: -9.028216361999512
    7. 'from' → logprob: -9.278216361999512
    8. 'for' → logprob: -10.028216361999512
    9. '   ' → logprob: -10.903216361999512
    10. '``' → logprob: -11.153216361999512

Token 1804: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08034700155258179
    2. '#' → logprob: -2.5803470611572266
    3. '```' → logprob: -7.080347061157227
    4. '
' → logprob: -7.580347061157227
    5. '        
' → logprob: -10.080347061157227
    6. '   ' → logprob: -11.080347061157227
    7. '``' → logprob: -11.455347061157227
    8. 'import' → logprob: -11.705347061157227
    9. 'continue' → logprob: -11.955347061157227
    10. 'for' → logprob: -12.080347061157227

Token 1805: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3886319398880005
    2. '#' (adapté à ' #') → logprob: -1.1386319398880005
    3. 'for' → logprob: -6.888631820678711
    4. '```' → logprob: -7.638631820678711
    5. '
' → logprob: -9.263631820678711
    6. 'import' → logprob: -9.763631820678711
    7. '   ' → logprob: -10.138631820678711
    8. 'continue' → logprob: -10.888631820678711
    9. 'from' → logprob: -11.013631820678711
    10. '        
' → logprob: -11.513631820678711

Token 1806: ' Impl' (ID: 144563)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5386761426925659
    2. 'for' → logprob: -1.788676142692566
    3. '#' → logprob: -1.913676142692566
    4. 'if' → logprob: -3.1636762619018555
    5. 'from' → logprob: -3.1636762619018555
    6. '```' → logprob: -5.0386762619018555
    7. 'visited' → logprob: -6.1636762619018555
    8. 'queue' → logprob: -6.2886762619018555
    9. 'max' → logprob: -6.4136762619018555
    10. 'import' → logprob: -6.4136762619018555

Token 1807: 'ément' (ID: 17645)
  Prédit: 'ément'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ément' → logprob: -0.00781966745853424
    2. 'mentation' → logprob: -5.632819652557373
    3. 'ement' → logprob: -6.507819652557373
    4. 'entation' → logprob: -6.632819652557373
    5. '       ' → logprob: -7.507819652557373
    6. '```' → logprob: -8.382820129394531
    7. '   ' → logprob: -8.757820129394531
    8. 'lement' → logprob: -9.257820129394531
    9. 'def' → logprob: -9.382820129394531
    10. 'é' → logprob: -9.882820129394531

Token 1808: 'ation' (ID: 387)
  Prédit: 'ment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ment' → logprob: -0.10527441650629044
    2. 'mented' → logprob: -3.4802744388580322
    3. 'mentation' → logprob: -3.8552744388580322
    4. '       ' → logprob: -4.105274200439453
    5. 'def' → logprob: -4.480274200439453
    6. 'ément' → logprob: -4.605274200439453
    7. 'ement' → logprob: -5.855274200439453
    8. 'ented' → logprob: -6.230274200439453
    9. '
' → logprob: -6.980274200439453
    10. 'import' → logprob: -6.980274200439453

Token 1809: ' limitée' (ID: 173749)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23542870581150055
    2. '```' → logprob: -2.110428810119629
    3. '#' → logprob: -3.360428810119629
    4. 'import' → logprob: -3.985428810119629
    5. ':
' → logprob: -4.860428810119629
    6. '
' → logprob: -5.110428810119629
    7. '=' → logprob: -5.360428810119629
    8. ':' → logprob: -5.485428810119629
    9. '``' → logprob: -5.610428810119629
    10. ' =' → logprob: -5.610428810119629

Token 1810: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3572756052017212
    2. ':' → logprob: -1.6072756052017212
    3. ':
' → logprob: -2.8572754859924316
    4. '```' → logprob: -4.232275485992432
    5. '   ' → logprob: -4.982275485992432
    6. '#' → logprob: -6.107275485992432
    7. '(
' → logprob: -6.232275485992432
    8. '
' → logprob: -6.232275485992432
    9. ' :' → logprob: -6.232275485992432
    10. '...' → logprob: -6.357275485992432

Token 1811: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005180051666684449
    2. '```' → logprob: -7.625517845153809
    3. '
' → logprob: -11.250517845153809
    4. '#' → logprob: -11.500517845153809
    5. '   ' → logprob: -13.375517845153809
    6. '        
' → logprob: -13.500517845153809
    7. 'for' → logprob: -13.750517845153809
    8. '``' → logprob: -13.875517845153809
    9. '           ' → logprob: -14.125517845153809
    10. 'import' → logprob: -14.125517845153809

Token 1812: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014402302913367748
    2. 'for' → logprob: -4.764402389526367
    3. '```' → logprob: -5.639402389526367
    4. ' for' → logprob: -6.639402389526367
    5. '
' → logprob: -8.264402389526367
    6. '        
' → logprob: -8.514402389526367
    7. '   ' → logprob: -8.889402389526367
    8. 'import' → logprob: -10.014402389526367
    9. '#' (adapté à ' #') → logprob: -10.014402389526367
    10. '           ' → logprob: -10.139402389526367

Token 1813: ' Pour' (ID: 13931)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3906172215938568
    2. 'for' → logprob: -1.3906172513961792
    3. '#' → logprob: -3.2656171321868896
    4. 'from' → logprob: -3.7656171321868896
    5. '```' → logprob: -5.390617370605469
    6. 'import' → logprob: -6.015617370605469
    7. 'visited' → logprob: -6.390617370605469
    8. 'if' → logprob: -6.515617370605469
    9. 'max' → logprob: -7.015617370605469
    10. '   ' → logprob: -7.765617370605469

Token 1814: ' chaque' (ID: 21194)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1347062885761261
    2. 'comp' → logprob: -2.3847062587738037
    3. 'u' → logprob: -4.634706497192383
    4. '#' → logprob: -5.009706497192383
    5. 'each' → logprob: -5.509706497192383
    6. 'start' → logprob: -6.259706497192383
    7. 'com' → logprob: -6.384706497192383
    8. 'c' → logprob: -6.509706497192383
    9. ' chaque' → logprob: -6.884706497192383
    10. 'ch' → logprob: -6.884706497192383

Token 1815: ' sommet' (ID: 130502)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.592003345489502
    2. 'i' → logprob: -0.842003345489502
    3. 'component' → logprob: -4.467003345489502
    4. '#' → logprob: -6.342003345489502
    5. 'node' → logprob: -6.967003345489502
    6. 'start' → logprob: -7.842003345489502
    7. 'for' → logprob: -7.967003345489502
    8. ' comp' → logprob: -8.342002868652344
    9. '   ' → logprob: -8.592002868652344
    10. 'c' → logprob: -8.842002868652344

Token 1816: ' dans' (ID: 2671)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2413080632686615
    2. 'in' → logprob: -2.2413079738616943
    3. 'i' → logprob: -2.8663079738616943
    4. ',' → logprob: -3.4913079738616943
    5. 'u' → logprob: -4.741308212280273
    6. ' i' → logprob: -5.116308212280273
    7. '```' → logprob: -6.116308212280273
    8. ' u' → logprob: -6.866308212280273
    9. ':
' → logprob: -6.991308212280273
    10. '       ' → logprob: -8.241308212280273

Token 1817: ' la' (ID: 557)
  Prédit: 'components'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'components' → logprob: -0.1662662774324417
    2. 'comp' → logprob: -2.1662662029266357
    3. 'component' → logprob: -3.2912662029266357
    4. 'range' → logprob: -7.291266441345215
    5. '   ' → logprob: -8.791266441345215
    6. 'la' → logprob: -9.541266441345215
    7. '       ' → logprob: -9.666266441345215
    8. 'com' → logprob: -9.666266441345215
    9. ' components' → logprob: -9.791266441345215
    10. '           ' → logprob: -9.791266441345215

Token 1818: ' compos' (ID: 14635)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.22996827960014343
    2. 'component' → logprob: -1.6049683094024658
    3. 'components' → logprob: -6.229968070983887
    4. 'for' → logprob: -6.604968070983887
    5. '       ' → logprob: -7.854968070983887
    6. 'range' → logprob: -8.354968070983887
    7. '           ' → logprob: -8.854968070983887
    8. '   ' → logprob: -8.979968070983887
    9. '```' → logprob: -9.479968070983887
    10. 'com' → logprob: -9.604968070983887

Token 1819: 'ante' (ID: 2116)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.9662440419197083
    2. 'ponent' → logprob: -0.9662440419197083
    3. 'on' → logprob: -2.3412439823150635
    4. 'ponente' → logprob: -3.3412439823150635
    5. 'pon' → logprob: -3.4662439823150635
    6. 'ponents' → logprob: -4.216244220733643
    7. 'for' → logprob: -4.591244220733643
    8. '#' → logprob: -5.091244220733643
    9. 'onent' → logprob: -5.466244220733643
    10. 'ont' → logprob: -5.716244220733643

Token 1820: ',' (ID: 11)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6582227349281311
    2. '       ' → logprob: -1.2832226753234863
    3. 'comp' → logprob: -2.7832226753234863
    4. ':' → logprob: -3.1582226753234863
    5. '           ' → logprob: -3.7832226753234863
    6. 'in' → logprob: -4.158222675323486
    7. ' in' → logprob: -4.533222675323486
    8. 'i' → logprob: -4.658222675323486
    9. ',' → logprob: -4.658222675323486
    10. 'for' → logprob: -4.783222675323486

Token 1821: ' on' (ID: 402)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3708018660545349
    2. '           ' → logprob: -2.2458019256591797
    3. 'for' → logprob: -2.6208019256591797
    4. '```' → logprob: -3.1208019256591797
    5. ' for' → logprob: -3.7458019256591797
    6. 'visited' → logprob: -4.24580192565918
    7. 'queue' → logprob: -4.49580192565918
    8. 'q' → logprob: -4.87080192565918
    9. '   ' → logprob: -4.87080192565918
    10. 'start' → logprob: -5.24580192565918

Token 1822: ' fait' (ID: 7473)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.2595691680908203
    2. 'f' → logprob: -1.6345691680908203
    3. 'expl' → logprob: -2.1345691680908203
    4. '```' → logprob: -2.5095691680908203
    5. '       ' → logprob: -2.8845691680908203
    6. 'continue' → logprob: -3.2595691680908203
    7. '#' → logprob: -3.6345691680908203
    8. 'contin' → logprob: -3.7595691680908203
    9. 'faire' → logprob: -4.13456916809082
    10. 'B' → logprob: -4.13456916809082

Token 1823: ' BFS' (ID: 190016)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.39675793051719666
    2. 'b' → logprob: -1.771757960319519
    3. '```' → logprob: -2.3967578411102295
    4. '       ' → logprob: -3.3967578411102295
    5. '   ' → logprob: -4.396758079528809
    6. ' BFS' → logprob: -4.771758079528809
    7. ' bfs' → logprob: -5.146758079528809
    8. 'deque' → logprob: -6.271758079528809
    9. 'for' → logprob: -6.646758079528809
    10. '           ' → logprob: -7.021758079528809

Token 1824: ' normale' (ID: 57494)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3992359936237335
    2. 'for' → logprob: -1.7742359638214111
    3. 'from' → logprob: -2.274235963821411
    4. ' for' → logprob: -4.27423620223999
    5. '           ' → logprob: -4.64923620223999
    6. '(' → logprob: -4.89923620223999
    7. '```' → logprob: -5.02423620223999
    8. '   ' → logprob: -6.02423620223999
    9. '(
' → logprob: -6.39923620223999
    10. ' (' → logprob: -6.89923620223999

Token 1825: ' pour' (ID: 1930)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4113779067993164
    2. 'for' → logprob: -1.6613779067993164
    3. '(i' → logprob: -2.4113779067993164
    4. ' for' → logprob: -3.9113779067993164
    5. 'from' → logprob: -4.411377906799316
    6. '```' → logprob: -4.661377906799316
    7. '(' → logprob: -5.286377906799316
    8. '   ' → logprob: -5.911377906799316
    9. 'def' → logprob: -6.536377906799316
    10. ' (' → logprob: -6.911377906799316

Token 1826: ' grand' (ID: 6363)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.7989040613174438
    2. 'tr' → logprob: -1.9239040613174438
    3. ' trouver' → logprob: -2.4239039421081543
    4. 's' → logprob: -2.7989039421081543
    5. 'atte' → logprob: -3.5489039421081543
    6. 'chercher' → logprob: -3.5489039421081543
    7. 'u' → logprob: -3.6739039421081543
    8. '   ' → logprob: -3.6739039421081543
    9. 'ét' → logprob: -4.173903942108154
    10. 'expl' → logprob: -4.548903942108154

Token 1827: 'ir' (ID: 380)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.011749029159546
    2. '```' → logprob: -1.136749029159546
    3. 'k' → logprob: -2.011749029159546
    4. ' k' → logprob: -3.136749029159546
    5. ' n' → logprob: -3.261749029159546
    6. 'max' → logprob: -3.511749029159546
    7. ' max' → logprob: -4.261749267578125
    8. '   ' → logprob: -4.386749267578125
    9. '
' → logprob: -5.136749267578125
    10. '``' → logprob: -5.386749267578125

Token 1828: ' aux' (ID: 5850)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.1550867557525635
    2. ' jusqu' → logprob: -1.2800867557525635
    3. 'de' → logprob: -2.6550867557525635
    4. '       ' → logprob: -2.7800867557525635
    5. '```' → logprob: -2.9050867557525635
    6. 'jus' → logprob: -3.4050867557525635
    7. 'à' → logprob: -3.5300867557525635
    8. ' (' → logprob: -3.6550867557525635
    9. '(u' → logprob: -3.6550867557525635
    10. 'd' → logprob: -4.030086517333984

Token 1829: ' couches' (ID: 103376)
  Prédit: 'vo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vo' → logprob: -1.1999895572662354
    2. 'k' → logprob: -1.3249895572662354
    3. 'plus' → logprob: -1.4499895572662354
    4. 'max' → logprob: -2.6999895572662354
    5. 'front' → logprob: -3.3249895572662354
    6. 'som' → logprob: -3.6999895572662354
    7. 'maximum' → logprob: -4.199989318847656
    8. 'lim' → logprob: -4.699989318847656
    9. 'moins' → logprob: -4.699989318847656
    10. 'c' → logprob: -4.824989318847656

Token 1830: ' success' (ID: 3505)
  Prédit: 'jus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'jus' → logprob: -0.4023708999156952
    2. '       ' → logprob: -1.6523709297180176
    3. '```' → logprob: -3.1523709297180176
    4. 'success' → logprob: -3.4023709297180176
    5. 'su' → logprob: -4.027370929718018
    6. ' jusqu' → logprob: -4.402370929718018
    7. 'pour' → logprob: -5.152370929718018
    8. ',' → logprob: -5.277370929718018
    9. 'sup' → logprob: -5.652370929718018
    10. 'for' → logprob: -5.652370929718018

Token 1831: 'ives' (ID: 2264)
  Prédit: 'ions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ions' → logprob: -0.4669993221759796
    2. 'ives' → logprob: -1.9669992923736572
    3. 'ion' → logprob: -2.5919992923736572
    4. '```' → logprob: -2.9669992923736572
    5. '       ' → logprob: -3.3419992923736572
    6. 'entes' → logprob: -4.341999530792236
    7. ' suivantes' → logprob: -4.841999530792236
    8. 'ivement' → logprob: -5.091999530792236
    9. '   ' → logprob: -5.466999530792236
    10. 'layers' → logprob: -5.591999530792236

Token 1832: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007902114652097225
    2. '```' → logprob: -5.257902145385742
    3. ',' → logprob: -6.507902145385742
    4. '           ' → logprob: -7.757902145385742
    5. 'for' → logprob: -8.507902145385742
    6. '
' → logprob: -9.382902145385742
    7. '(' → logprob: -9.507902145385742
    8. ' (' → logprob: -9.507902145385742
    9. 'from' → logprob: -9.507902145385742
    10. '``' → logprob: -10.257902145385742

Token 1833: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004857266612816602
    2. '```' → logprob: -8.12548542022705
    3. ',' → logprob: -9.12548542022705
    4. '           ' → logprob: -10.37548542022705
    5. 'for' → logprob: -11.62548542022705
    6. '
' → logprob: -11.62548542022705
    7. ' for' → logprob: -12.12548542022705
    8. ' (' → logprob: -12.12548542022705
    9. '(' → logprob: -12.37548542022705
    10. '   ' → logprob: -12.62548542022705

Token 1834: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0014934380305930972
    2. '```' → logprob: -7.126493453979492
    3. ',' → logprob: -8.376493453979492
    4. '           ' → logprob: -8.626493453979492
    5. 'for' → logprob: -9.126493453979492
    6. '
' → logprob: -9.751493453979492
    7. ' for' → logprob: -9.751493453979492
    8. '   ' → logprob: -11.751493453979492
    9. ' ' → logprob: -11.876493453979492
    10. '``' → logprob: -12.001493453979492

Token 1835: ' On' (ID: 2160)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0021784543059766293
    2. 'for' → logprob: -6.75217866897583
    3. '```' → logprob: -7.62717866897583
    4. '           ' → logprob: -7.75217866897583
    5. ' for' → logprob: -9.752178192138672
    6. '   ' → logprob: -11.252178192138672
    7. '               ' → logprob: -12.252178192138672
    8. '
' → logprob: -12.377178192138672
    9. 'from' → logprob: -13.002178192138672
    10. 'import' → logprob: -13.252178192138672

Token 1836: ' arr' (ID: 1724)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.2987297475337982
    2. 'for' → logprob: -2.423729658126831
    3. 'contin' → logprob: -3.548729658126831
    4. '#' → logprob: -3.923729658126831
    5. 'limit' → logprob: -3.923729658126831
    6. 'lim' → logprob: -4.17372989654541
    7. '       ' → logprob: -4.17372989654541
    8. 'n' → logprob: -4.17372989654541
    9. '```' → logprob: -4.67372989654541
    10. 'continu' → logprob: -4.92372989654541

Token 1837: 'ête' (ID: 16808)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.922335147857666
    2. 'rive' → logprob: -1.422335147857666
    3. 'ive' → logprob: -1.797335147857666
    4. 'ête' → logprob: -1.922335147857666
    5. 'êt' → logprob: -3.422335147857666
    6. 'ète' → logprob: -5.922335147857666
    7. 'ivée' → logprob: -6.422335147857666
    8. 'êter' → logprob: -6.547335147857666
    9. 'î' → logprob: -6.672335147857666
    10. '       ' → logprob: -6.672335147857666

Token 1838: ' à' (ID: 1221)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.22210752964019775
    2. 'd' → logprob: -2.222107410430908
    3. 'la' → logprob: -2.972107410430908
    4. 'de' → logprob: -4.972107410430908
    5. 'à' → logprob: -4.972107410430908
    6. ' ici' → logprob: -5.722107410430908
    7. ' dès' → logprob: -5.847107410430908
    8. '```' → logprob: -5.847107410430908
    9. 'au' → logprob: -5.972107410430908
    10. 'une' → logprob: -6.222107410430908

Token 1839: ' taille' (ID: 41644)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.023921603336930275
    2. 'tail' → logprob: -4.273921489715576
    3. 'size' → logprob: -5.398921489715576
    4. 'la' → logprob: -5.898921489715576
    5. ' k' → logprob: -7.023921489715576
    6. ' taille' → logprob: -8.148921966552734
    7. ' size' → logprob: -8.648921966552734
    8. 's' → logprob: -9.023921966552734
    9. 'l' → logprob: -9.148921966552734
    10. 'une' → logprob: -9.273921966552734

Token 1840: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.02709711343050003
    2. ' k' → logprob: -4.527097225189209
    3. '=' → logprob: -4.902097225189209
    4. '```' → logprob: -5.902097225189209
    5. ' =' → logprob: -6.152097225189209
    6. '<=' → logprob: -7.027097225189209
    7. '=k' → logprob: -7.277097225189209
    8. ' <=' → logprob: -7.402097225189209
    9. '+' → logprob: -8.15209674835205
    10. '==' → logprob: -8.65209674835205

Token 1841: ' et' (ID: 859)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000630947935860604
    2. '           ' → logprob: -8.000631332397461
    3. ',' → logprob: -9.125631332397461
    4. ' for' → logprob: -9.750631332397461
    5. '```' → logprob: -10.500631332397461
    6. '
' → logprob: -10.625631332397461
    7. '               ' → logprob: -11.250631332397461
    8. 'for' → logprob: -11.250631332397461
    9. '   ' → logprob: -11.375631332397461
    10. '        
' → logprob: -11.875631332397461

Token 1842: ' on' (ID: 402)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -1.4173399209976196
    2. ' calc' → logprob: -1.6673399209976196
    3. 'calcul' → logprob: -1.6673399209976196
    4. 'calculate' → logprob: -1.7923399209976196
    5. 'calc' → logprob: -2.54233980178833
    6. 'cal' → logprob: -2.91733980178833
    7. ' continue' → logprob: -3.54233980178833
    8. ' calculate' → logprob: -4.16733980178833
    9. '       ' → logprob: -4.41733980178833
    10. 'contin' → logprob: -4.79233980178833

Token 1843: ' calc' (ID: 25691)
  Prédit: 'cal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cal' → logprob: -0.3318157196044922
    2. 'calc' → logprob: -2.081815719604492
    3. 'calcul' → logprob: -2.206815719604492
    4. 'calculate' → logprob: -3.331815719604492
    5. '       ' → logprob: -6.206815719604492
    6. '```' → logprob: -6.331815719604492
    7. 'print' → logprob: -6.331815719604492
    8. 'continue' → logprob: -6.706815719604492
    9. 'compute' → logprob: -6.956815719604492
    10. ' calc' → logprob: -7.206815719604492

Token 1844: 'ule' (ID: 1601)
  Prédit: 'ule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ule' → logprob: -0.00042054426739923656
    2. '       ' → logprob: -8.875420570373535
    3. 'ul' → logprob: -9.250420570373535
    4. 'continue' → logprob: -9.750420570373535
    5. 'cule' → logprob: -10.375420570373535
    6. 'ulate' → logprob: -10.750420570373535
    7. 'ure' → logprob: -11.125420570373535
    8. '```' → logprob: -11.875420570373535
    9. 'ulé' → logprob: -12.000420570373535
    10. 'èle' → logprob: -12.250420570373535

Token 1845: ' surface' (ID: 9753)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8368808627128601
    2. '(' → logprob: -1.7118809223175049
    3. 'for' → logprob: -2.711880922317505
    4. '(
' → logprob: -2.836880922317505
    5. '           ' → logprob: -2.961880922317505
    6. '```' → logprob: -3.336880922317505
    7. '(u' → logprob: -3.836880922317505
    8. '               ' → logprob: -3.961880922317505
    9. 'l' → logprob: -4.461880683898926
    10. '
' → logprob: -4.461880683898926

Token 1846: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000628683075774461
    2. '           ' → logprob: -7.750628471374512
    3. '
' → logprob: -10.000628471374512
    4. ' for' → logprob: -10.125628471374512
    5. 'for' → logprob: -10.500628471374512
    6. ',' → logprob: -10.875628471374512
    7. '        
' → logprob: -11.125628471374512
    8. '```' → logprob: -11.500628471374512
    9. '               ' → logprob: -11.625628471374512
    10. '   ' → logprob: -11.875628471374512

Token 1847: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -4.513339445111342e-05
    2. '           ' → logprob: -10.875044822692871
    3. '```' → logprob: -11.000044822692871
    4. '
' → logprob: -11.875044822692871
    5. ',' → logprob: -14.000044822692871
    6. 'for' → logprob: -14.750044822692871
    7. '        
' → logprob: -15.000044822692871
    8. '   ' → logprob: -15.000044822692871
    9. 'import' → logprob: -15.000044822692871
    10. '               ' → logprob: -16.125045776367188

Token 1848: ' #
' (ID: 21888)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.5690089639974758e-05
    2. '           ' → logprob: -11.500015258789062
    3. '
' → logprob: -12.875015258789062
    4. '```' → logprob: -13.750015258789062
    5. 'for' → logprob: -14.000015258789062
    6. '   ' → logprob: -14.875015258789062
    7. 'import' → logprob: -15.125015258789062
    8. ',' → logprob: -16.250015258789062
    9. '        
' → logprob: -16.375015258789062
    10. ' for' → logprob: -16.375015258789062

Token 1849: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.652451464906335e-05
    2. '```' → logprob: -11.250016212463379
    3. '
' → logprob: -13.500016212463379
    4. '   ' → logprob: -14.125016212463379
    5. 'import' → logprob: -14.125016212463379
    6. '        
' → logprob: -15.000016212463379
    7. '           ' → logprob: -16.125017166137695
    8. 'for' → logprob: -16.250017166137695
    9. 'from' → logprob: -17.875017166137695
    10. ',' → logprob: -18.625017166137695

Token 1850: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.3425219549390022e-05
    2. '```' → logprob: -11.75001335144043
    3. 'for' → logprob: -13.00001335144043
    4. 'import' → logprob: -13.62501335144043
    5. '
' → logprob: -13.87501335144043
    6. '   ' → logprob: -14.50001335144043
    7. '        
' → logprob: -15.25001335144043
    8. '           ' → logprob: -15.37501335144043
    9. ' for' → logprob: -17.00001335144043
    10. 'from' → logprob: -17.50001335144043

Token 1851: ' Cette' (ID: 27383)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.048694219440221786
    2. 'for' → logprob: -3.048694133758545
    3. ' for' → logprob: -10.173694610595703
    4. '```' → logprob: -10.173694610595703
    5. '
' → logprob: -10.798694610595703
    6. '        
' → logprob: -12.798694610595703
    7. 'import' → logprob: -12.798694610595703
    8. '           ' → logprob: -13.173694610595703
    9. '   ' → logprob: -13.423694610595703
    10. 'from' → logprob: -14.673694610595703

Token 1852: ' méthode' (ID: 71490)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9015870690345764
    2. '       ' → logprob: -2.0265870094299316
    3. 'for' → logprob: -2.0265870094299316
    4. 'appro' → logprob: -3.1515870094299316
    5. 'def' → logprob: -3.2765870094299316
    6. '#' → logprob: -3.2765870094299316
    7. ' approach' → logprob: -3.2765870094299316
    8. '   ' → logprob: -3.2765870094299316
    9. ' for' → logprob: -4.151587009429932
    10. '```' → logprob: -4.151587009429932

Token 1853: ' ne' (ID: 453)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24633438885211945
    2. '#' → logprob: -2.3713343143463135
    3. ':' → logprob: -3.7463343143463135
    4. 'est' → logprob: -3.9963343143463135
    5. 'def' → logprob: -4.496334552764893
    6. 'import' → logprob: -4.621334552764893
    7. ' continues' → logprob: -4.621334552764893
    8. ':
' → logprob: -4.746334552764893
    9. ' est' → logprob: -5.121334552764893
    10. ' n' → logprob: -5.121334552764893

Token 1854: ' garantit' (ID: 182078)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.1023513078689575
    2. 'est' → logprob: -1.7273513078689575
    3. 'sera' → logprob: -2.102351188659668
    4. '       ' → logprob: -2.227351188659668
    5. 'pas' → logprob: -2.477351188659668
    6. '```' → logprob: -2.727351188659668
    7. 'pe' → logprob: -4.102351188659668
    8. 'pour' → logprob: -4.352351188659668
    9. 's' → logprob: -4.602351188659668
    10. 'reste' → logprob: -4.852351188659668

Token 1855: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.21203310787677765
    2. ' pas' → logprob: -1.9620331525802612
    3. 'de' → logprob: -4.087033271789551
    4. 'd' → logprob: -4.837033271789551
    5. 'la' → logprob: -4.837033271789551
    6. '       ' → logprob: -5.462033271789551
    7. ' la' → logprob: -5.587033271789551
    8. ' de' → logprob: -6.087033271789551
    9. ' seulement' → logprob: -6.212033271789551
    10. 'une' → logprob: -6.837033271789551

Token 1856: ' trouver' (ID: 23195)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.38966599106788635
    2. 'de' → logprob: -1.764665961265564
    3. 'l' → logprob: -2.8896660804748535
    4. 'd' → logprob: -3.3896660804748535
    5. '       ' → logprob: -3.7646660804748535
    6. 'une' → logprob: -4.5146660804748535
    7. ' de' → logprob: -5.0146660804748535
    8. 'le' → logprob: -5.1396660804748535
    9. ' la' → logprob: -5.1396660804748535
    10. 'optimal' → logprob: -5.7646660804748535

Token 1857: ' l' (ID: 305)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.22949807345867157
    2. 'le' → logprob: -1.854498028755188
    3. ' la' → logprob: -3.7294981479644775
    4. 't' → logprob: -5.104497909545898
    5. 'les' → logprob: -5.104497909545898
    6. 'l' → logprob: -5.354497909545898
    7. 'une' → logprob: -6.354497909545898
    8. '```' → logprob: -6.479497909545898
    9. ' le' → logprob: -6.979497909545898
    10. 'exact' → logprob: -7.104497909545898

Token 1858: ''ensemble' (ID: 79341)
  Prédit: ''ensemble'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''ensemble' → logprob: -0.1824871450662613
    2. 'e' → logprob: -2.4324872493743896
    3. 'ensemble' → logprob: -3.1824872493743896
    4. 'a' → logprob: -4.0574870109558105
    5. ''' → logprob: -5.1824870109558105
    6. '’ensemble' → logprob: -5.8074870109558105
    7. 'me' → logprob: -6.3074870109558105
    8. ''intégr' → logprob: -6.4324870109558105
    9. 'optimal' → logprob: -7.3074870109558105
    10. ''ex' → logprob: -7.3074870109558105

Token 1859: ' optimum' (ID: 62227)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.37732288241386414
    2. 'com' → logprob: -2.2523229122161865
    3. '```' → logprob: -2.7523229122161865
    4. 'de' → logprob: -4.002322673797607
    5. ' complet' → logprob: -4.002322673797607
    6. 'u' → logprob: -4.252322673797607
    7. 'conn' → logprob: -4.877322673797607
    8. '   ' → logprob: -5.127322673797607
    9. '_' → logprob: -5.252322673797607
    10. '(u' → logprob: -5.377322673797607

Token 1860: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -3.893480243277736e-05
    2. '```' → logprob: -11.375039100646973
    3. 'import' → logprob: -11.500039100646973
    4. '           ' → logprob: -12.375039100646973
    5. '        
' → logprob: -12.625039100646973
    6. '
' → logprob: -12.750039100646973
    7. ',' → logprob: -13.125039100646973
    8. 'for' → logprob: -13.250039100646973
    9. ' for' → logprob: -13.500039100646973
    10. '   ' → logprob: -14.125039100646973

Token 1861: ' mais' (ID: 2899)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05570220202207565
    2. '#' → logprob: -3.8057022094726562
    3. 'mais' → logprob: -4.055702209472656
    4. ' mais' → logprob: -4.555702209472656
    5. '```' → logprob: -6.305702209472656
    6. 'but' → logprob: -6.930702209472656
    7. ' but' → logprob: -7.555702209472656
    8. '           ' → logprob: -8.430702209472656
    9. ' #' → logprob: -9.055702209472656
    10. '   ' → logprob: -9.180702209472656

Token 1862: ' donnera' (ID: 188715)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.1577787548303604
    2. '       ' → logprob: -2.407778739929199
    3. 'est' → logprob: -3.907778739929199
    4. ' #' → logprob: -5.032778739929199
    5. 'don' → logprob: -5.032778739929199
    6. ' permet' → logprob: -5.282778739929199
    7. 'continue' → logprob: -5.782778739929199
    8. 'per' → logprob: -6.532778739929199
    9. '```' → logprob: -6.532778739929199
    10. ' permettra' → logprob: -6.657778739929199

Token 1863: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.33887699246406555
    2. ' un' → logprob: -1.7138769626617432
    3. 'une' → logprob: -2.463876962661743
    4. 'un' → logprob: -3.838876962661743
    5. ' a' → logprob: -8.338876724243164
    6. ' au' → logprob: -9.838876724243164
    7. 'a' → logprob: -9.838876724243164
    8. '```' → logprob: -9.963876724243164
    9. ' ' → logprob: -10.088876724243164
    10. '_' → logprob: -10.338876724243164

Token 1864: ' solution' (ID: 7578)
  Prédit: ' bonne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bonne' → logprob: -1.2024104595184326
    2. 'prem' → logprob: -1.3274104595184326
    3. ' approximation' → logprob: -1.5774104595184326
    4. 'approx' → logprob: -2.0774104595184326
    5. 'bonne' → logprob: -3.8274104595184326
    6. ' première' → logprob: -4.452410697937012
    7. '
' → logprob: -4.577410697937012
    8. 'appro' → logprob: -4.952410697937012
    9. ' approxim' → logprob: -4.952410697937012
    10. ' solution' → logprob: -5.077410697937012

Token 1865: ' raisonn' (ID: 144705)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.021148646250367165
    2. '```' → logprob: -5.146148681640625
    3. ':' → logprob: -5.521148681640625
    4. ' for' → logprob: -5.771148681640625
    5. ')' → logprob: -6.896148681640625
    6. '.' → logprob: -6.896148681640625
    7. ',' → logprob: -7.021148681640625
    8. '           ' → logprob: -7.146148681640625
    9. '   ' → logprob: -7.146148681640625
    10. 'import' → logprob: -7.896148681640625

Token 1866: 'able' (ID: 562)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12037752568721771
    2. ' )' → logprob: -2.745377540588379
    3. '```' → logprob: -4.370377540588379
    4. 'e' → logprob: -4.745377540588379
    5. '       ' → logprob: -5.370377540588379
    6. '   ' → logprob: -5.495377540588379
    7. ' ]' → logprob: -6.370377540588379
    8. ' first' → logprob: -6.620377540588379
    9. ']' → logprob: -6.620377540588379
    10. 'é' → logprob: -6.995377540588379

Token 1867: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010580566013231874
    2. '        
' → logprob: -7.501058101654053
    3. '
' → logprob: -7.751058101654053
    4. '<|end|>' → logprob: -10.501057624816895
    5. ',' → logprob: -11.251057624816895
    6. 'import' → logprob: -11.501057624816895
    7. ' for' → logprob: -11.626057624816895
    8. '```' → logprob: -12.251057624816895
    9. '.' → logprob: -12.876057624816895
    10. '<|end|>' → logprob: -13.251057624816895

Token 1868: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -2.3438327843905427e-05
    2. '```' → logprob: -11.50002384185791
    3. '
' → logprob: -12.00002384185791
    4. '        
' → logprob: -12.62502384185791
    5. '   ' → logprob: -12.87502384185791
    6. 'import' → logprob: -14.12502384185791
    7. '           ' → logprob: -15.75002384185791
    8. '<|end|>' → logprob: -16.000022888183594
    9. ' for' → logprob: -16.375022888183594
    10. 'for' → logprob: -16.500022888183594

Token 1869: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -2.618001053633634e-05
    2. '
' → logprob: -11.000025749206543
    3. '```' → logprob: -12.250025749206543
    4. '        
' → logprob: -13.125025749206543
    5. 'import' → logprob: -13.500025749206543
    6. 'for' → logprob: -14.125025749206543
    7. ' for' → logprob: -15.375025749206543
    8. '   ' → logprob: -16.12502670288086
    9. '           ' → logprob: -16.25002670288086
    10. ',' → logprob: -17.12502670288086

Token 1870: ' On' (ID: 2160)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006283254479058087
    2. 'for' → logprob: -8.000628471374512
    3. '```' → logprob: -9.000628471374512
    4. ' for' → logprob: -9.375628471374512
    5. '
' → logprob: -9.625628471374512
    6. '        
' → logprob: -11.875628471374512
    7. '           ' → logprob: -12.375628471374512
    8. 'import' → logprob: -12.750628471374512
    9. '   ' → logprob: -12.750628471374512
    10. 'from' → logprob: -14.500628471374512

Token 1871: ' mém' (ID: 136981)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.673635721206665
    2. '       ' → logprob: -1.423635721206665
    3. 'for' → logprob: -2.298635721206665
    4. 'contin' → logprob: -3.173635721206665
    5. 'continu' → logprob: -3.923635721206665
    6. '#' → logprob: -4.298635482788086
    7. 'limit' → logprob: -4.673635482788086
    8. 'n' → logprob: -4.798635482788086
    9. ' continue' → logprob: -5.298635482788086
    10. 'import' → logprob: -5.298635482788086

Token 1872: 'or' (ID: 267)
  Prédit: 'moire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'moire' → logprob: -0.9056288003921509
    2. 'mo' → logprob: -1.4056288003921509
    3. 'or' → logprob: -1.5306288003921509
    4. 'oire' → logprob: -3.0306286811828613
    5. 'orie' → logprob: -3.7806286811828613
    6. 'ém' → logprob: -4.405628681182861
    7. 'mor' → logprob: -4.405628681182861
    8. 'ory' → logprob: -4.530628681182861
    9. '   ' → logprob: -5.405628681182861
    10. 'oriz' → logprob: -6.030628681182861

Token 1873: 'ise' (ID: 1096)
  Prédit: 'ise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ise' → logprob: -0.052813172340393066
    2. 'is' → logprob: -3.4278130531311035
    3. 'iser' → logprob: -4.6778130531311035
    4. 'ize' → logprob: -4.9278130531311035
    5. 'sera' → logprob: -8.177813529968262
    6. 'isa' → logprob: -8.427813529968262
    7. 'rise' → logprob: -8.427813529968262
    8. '```' → logprob: -8.427813529968262
    9. 'aise' → logprob: -8.802813529968262
    10. 'se' → logprob: -8.802813529968262

Token 1874: ' la' (ID: 557)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2310316115617752
    2. '   ' → logprob: -2.856031656265259
    3. ' la' → logprob: -3.731031656265259
    4. '    ' → logprob: -3.856031656265259
    5. 'best' → logprob: -3.981031656265259
    6. ' le' → logprob: -4.35603141784668
    7. ' for' → logprob: -4.35603141784668
    8. 'for' → logprob: -5.10603141784668
    9. 'min' → logprob: -5.23103141784668
    10. 'le' → logprob: -5.23103141784668

Token 1875: ' meilleure' (ID: 52387)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.050084274262189865
    2. 'for' → logprob: -3.925084352493286
    3. 'minimum' → logprob: -4.675084114074707
    4. 'me' → logprob: -5.050084114074707
    5. 'min' → logprob: -5.300084114074707
    6. ' best' → logprob: -6.175084114074707
    7. 'minimal' → logprob: -7.050084114074707
    8. 'ans' → logprob: -7.175084114074707
    9. '       ' → logprob: -7.300084114074707
    10. 'import' → logprob: -7.300084114074707

Token 1876: ' surface' (ID: 9753)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9280885457992554
    2. '```' → logprob: -1.5530885457992554
    3. '_surface' → logprob: -2.553088665008545
    4. '   ' → logprob: -2.678088665008545
    5. '
' → logprob: -2.803088665008545
    6. ' surface' → logprob: -3.553088665008545
    7. 'surface' → logprob: -3.678088665008545
    8. '_token' → logprob: -4.053088665008545
    9. '           ' → logprob: -4.303088665008545
    10. 'possible' → logprob: -4.428088665008545

Token 1877: ' obten' (ID: 28150)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0035887870471924543
    2. '
' → logprob: -5.753588676452637
    3. '        
' → logprob: -8.253588676452637
    4. ',' → logprob: -10.003588676452637
    5. ' for' → logprob: -10.003588676452637
    6. '           ' → logprob: -11.378588676452637
    7. '
' → logprob: -11.753588676452637
    8. 'import' → logprob: -11.878588676452637
    9. '```' → logprob: -12.253588676452637
    10. '.' → logprob: -12.253588676452637

Token 1878: 'ue' (ID: 466)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.046127717941999435
    2. '           ' → logprob: -3.7961277961730957
    3. '               ' → logprob: -4.046127796173096
    4. 'for' → logprob: -6.296127796173096
    5. '   ' → logprob: -7.421127796173096
    6. '                   ' → logprob: -7.796127796173096
    7. 'ur' → logprob: -8.046127319335938
    8. '```' → logprob: -8.171127319335938
    9. ' for' → logprob: -8.546127319335938
    10. 'u' → logprob: -8.546127319335938

Token 1879: ' et' (ID: 859)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004167297447565943
    2. '
' → logprob: -8.25041675567627
    3. '        
' → logprob: -9.12541675567627
    4. ' for' → logprob: -11.12541675567627
    5. 'import' → logprob: -11.37541675567627
    6. ',' → logprob: -11.62541675567627
    7. '```' → logprob: -12.75041675567627
    8. '<|end|>' → logprob: -12.75041675567627
    9. 'for' → logprob: -13.25041675567627
    10. '           ' → logprob: -13.87541675567627

Token 1880: ' on' (ID: 402)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.27415814995765686
    2. ' continue' → logprob: -1.6491581201553345
    3. '       ' → logprob: -4.024158000946045
    4. 'print' → logprob: -4.524158000946045
    5. 'contin' → logprob: -4.649158000946045
    6. '_continue' → logprob: -6.024158000946045
    7. 'continu' → logprob: -6.274158000946045
    8. '#' → logprob: -7.274158000946045
    9. 'aff' → logprob: -7.399158000946045
    10. ' print' → logprob: -7.649158000946045

Token 1881: ' donnera' (ID: 188715)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.10597997158765793
    2. 'contin' → logprob: -2.4809799194335938
    3. ' continue' → logprob: -4.855979919433594
    4. 'continu' → logprob: -5.105979919433594
    5. ' continues' → logprob: -6.855979919433594
    6. '#' → logprob: -7.355979919433594
    7. '_continue' → logprob: -7.730979919433594
    8. 'print' → logprob: -8.230979919433594
    9. '       ' → logprob: -8.730979919433594
    10. '
' → logprob: -9.355979919433594

Token 1882: ' -' (ID: 533)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5354128479957581
    2. 'la' → logprob: -1.9104127883911133
    3. 'le' → logprob: -2.1604127883911133
    4. 'ans' → logprob: -3.0354127883911133
    5. ' la' → logprob: -4.035412788391113
    6. 'l' → logprob: -4.035412788391113
    7. ' print' → logprob: -4.160412788391113
    8. '```' → logprob: -4.160412788391113
    9. ' le' → logprob: -4.660412788391113
    10. '(ans' → logprob: -5.285412788391113

Token 1883: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00024763107649050653
    2. '=' → logprob: -9.750247955322266
    3. 'ans' → logprob: -9.875247955322266
    4. '   ' → logprob: -10.125247955322266
    5. ' ' → logprob: -10.750247955322266
    6. '```' → logprob: -10.750247955322266
    7. '           ' → logprob: -11.250247955322266
    8. '       ' → logprob: -11.250247955322266
    9. ' ans' → logprob: -11.750247955322266
    10. '
' → logprob: -12.125247955322266

Token 1884: ' si' (ID: 1784)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0035025496035814285
    2. ' for' → logprob: -7.128502368927002
    3. '```' → logprob: -7.128502368927002
    4. ' if' → logprob: -7.878502368927002
    5. 'for' → logprob: -8.00350284576416
    6. '<|end|>' → logprob: -8.25350284576416
    7. '           ' → logprob: -8.50350284576416
    8. ',' → logprob: -8.87850284576416
    9. '        
' → logprob: -9.00350284576416
    10. '   ' → logprob: -9.25350284576416

Token 1885: ' aucune' (ID: 51173)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0008504862780682743
    2. ' ans' → logprob: -7.875850677490234
    3. 'not' → logprob: -8.875850677490234
    4. 'False' → logprob: -9.125850677490234
    5. '```' → logprob: -9.375850677490234
    6. '   ' → logprob: -10.125850677490234
    7. 'True' → logprob: -10.750850677490234
    8. 'len' → logprob: -11.250850677490234
    9. 'auc' → logprob: -11.625850677490234
    10. 'answer' → logprob: -12.000850677490234

Token 1886: ' trouv' (ID: 40254)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.31330204010009766
    2. '
' → logprob: -1.6883020401000977
    3. '           ' → logprob: -4.313302040100098
    4. ':
' → logprob: -4.563302040100098
    5. ':' → logprob: -4.688302040100098
    6. 'n' → logprob: -4.813302040100098
    7. 'found' → logprob: -4.938302040100098
    8. '```' → logprob: -5.063302040100098
    9. '   ' → logprob: -5.813302040100098
    10. 'possible' → logprob: -5.938302040100098

Token 1887: 'ée' (ID: 2894)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.7857595086097717
    2. '_found' → logprob: -1.785759449005127
    3. 'found' → logprob: -2.410759449005127
    4. ' found' → logprob: -2.535759449005127
    5. 'ée' → logprob: -2.660759449005127
    6. 'é' → logprob: -2.785759449005127
    7. 'es' → logprob: -3.785759449005127
    8. '```' → logprob: -4.660759449005127
    9. 'ue' → logprob: -5.285759449005127
    10. 'est' → logprob: -5.660759449005127

Token 1888: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0014557128306478262
    2. '
' → logprob: -6.876455783843994
    3. '        
' → logprob: -8.251455307006836
    4. '```' → logprob: -9.251455307006836
    5. 'import' → logprob: -10.626455307006836
    6. 'for' → logprob: -11.376455307006836
    7. ' for' → logprob: -11.376455307006836
    8. '<|end|>' → logprob: -11.876455307006836
    9. ',' → logprob: -12.251455307006836
    10. '           ' → logprob: -13.376455307006836

Token 1889: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -4.954393079970032e-05
    2. '```' → logprob: -10.500049591064453
    3. 'for' → logprob: -11.000049591064453
    4. '   ' → logprob: -13.375049591064453
    5. 'import' → logprob: -13.500049591064453
    6. ' for' → logprob: -14.000049591064453
    7. '        
' → logprob: -14.250049591064453
    8. '
' → logprob: -14.875049591064453
    9. '           ' → logprob: -15.750049591064453
    10. 'from' → logprob: -15.875049591064453

Token 1890: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.160594642162323
    2. 'for' (adapté à ' for') → logprob: -1.9105947017669678
    3. '```' → logprob: -8.410594940185547
    4. ' for' → logprob: -9.160594940185547
    5. '
' → logprob: -10.535594940185547
    6. '        
' → logprob: -12.160594940185547
    7. 'import' → logprob: -12.285594940185547
    8. '	for' → logprob: -13.160594940185547
    9. '   ' → logprob: -13.285594940185547
    10. 'from' → logprob: -13.660594940185547

Token 1891: ' comp' (ID: 1050)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.006789858918637037
    2. ' comp' → logprob: -5.006789684295654
    3. 'component' → logprob: -9.506790161132812
    4. 'c' → logprob: -15.881790161132812
    5. ' component' → logprob: -17.631790161132812
    6. '	comp' → logprob: -18.131790161132812
    7. '   ' → logprob: -18.881790161132812
    8. 'Comp' → logprob: -20.756790161132812
    9. 'components' → logprob: -20.881790161132812
    10. 'com' → logprob: -20.881790161132812

Token 1892: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.045110248029232025
    2. 'in' → logprob: -3.2951102256774902
    3. '_size' → logprob: -5.42011022567749
    4. 'size' → logprob: -6.54511022567749
    5. '       ' → logprob: -8.170110702514648
    6. '   ' → logprob: -8.170110702514648
    7. '_in' → logprob: -9.545110702514648
    8. '_' → logprob: -9.670110702514648
    9. '_len' → logprob: -9.795110702514648
    10. 'en' → logprob: -10.045110702514648

Token 1893: ' components' (ID: 10674)
  Prédit: 'components'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'components' → logprob: -0.00905708596110344
    2. ' components' → logprob: -5.38405704498291
    3. 'comp' → logprob: -5.50905704498291
    4. 'range' → logprob: -9.25905704498291
    5. ' comp' → logprob: -9.25905704498291
    6. '
' → logprob: -9.88405704498291
    7. '[' → logprob: -10.63405704498291
    8. '   ' → logprob: -10.75905704498291
    9. ' comps' → logprob: -11.00905704498291
    10. 'component' → logprob: -11.63405704498291

Token 1894: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6345952153205872
    2. ':' → logprob: -0.7595952153205872
    3. '           ' → logprob: -6.5095953941345215
    4. '       ' → logprob: -8.884594917297363
    5. '):
' → logprob: -9.009594917297363
    6. ',' → logprob: -9.134594917297363
    7. ':

' → logprob: -10.259594917297363
    8. '=' → logprob: -11.009594917297363
    9. '```' → logprob: -11.384594917297363
    10. '():
' → logprob: -11.509594917297363

Token 1895: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002186307217925787
    2. ' for' → logprob: -6.877186298370361
    3. '```' → logprob: -7.252186298370361
    4. '       ' → logprob: -8.37718677520752
    5. '   ' → logprob: -8.75218677520752
    6. 'for' → logprob: -10.25218677520752
    7. ' if' → logprob: -11.25218677520752
    8. ',' → logprob: -12.87718677520752
    9. '         ' → logprob: -14.25218677520752
    10. '#' → logprob: -14.62718677520752

Token 1896: ' size' (ID: 2349)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12699949741363525
    2. 'if' → logprob: -2.1269993782043457
    3. 'size' (adapté à ' size') → logprob: -9.876999855041504
    4. ' if' → logprob: -11.626999855041504
    5. '```' → logprob: -12.626999855041504
    6. '   ' → logprob: -12.876999855041504
    7. 'length' → logprob: -13.001999855041504
    8. 'from' → logprob: -13.376999855041504
    9. 'import' → logprob: -14.501999855041504
    10. '       ' → logprob: -15.501999855041504

Token 1897: '_comp' (ID: 34754)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8236818313598633
    2. '=' → logprob: -0.9486818313598633
    3. '>=' → logprob: -2.0736818313598633
    4. ' >=' → logprob: -3.0736818313598633
    5. '=len' → logprob: -7.073681831359863
    6. ' in' → logprob: -8.198681831359863
    7. '           ' → logprob: -8.698681831359863
    8. '≥' → logprob: -9.198681831359863
    9. '=size' → logprob: -9.323681831359863
    10. 'in' → logprob: -9.698681831359863

Token 1898: ' =' (ID: 314)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.13409797847270966
    2. ' =' → logprob: -2.8840980529785156
    3. '>=' → logprob: -3.0090980529785156
    4. '=' → logprob: -4.634098052978516
    5. ' <' → logprob: -5.009098052978516
    6. ' <=' → logprob: -6.634098052978516
    7. '           ' → logprob: -7.134098052978516
    8. '   ' → logprob: -8.009098052978516
    9. ' ==' → logprob: -8.259098052978516
    10. '       ' → logprob: -8.509098052978516

Token 1899: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0009164590737782419
    2. ' len' → logprob: -7.000916481018066
    3. '           ' → logprob: -12.250916481018066
    4. '(len' → logprob: -15.750916481018066
    5. '[len' → logprob: -18.75091552734375
    6. '               ' → logprob: -19.37591552734375
    7. '=len' → logprob: -19.50091552734375
    8. '	len' → logprob: -19.87591552734375
    9. ',len' → logprob: -20.00091552734375
    10. '   ' → logprob: -20.87591552734375

Token 1900: '(comp' (ID: 60272)
  Prédit: '(comp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(comp' → logprob: -0.07889088988304138
    2. 'comp' → logprob: -2.578890800476074
    3. ' comp' → logprob: -13.828890800476074
    4. '	comp' → logprob: -15.828890800476074
    5. '(com' → logprob: -16.57889175415039
    6. '_comp' → logprob: -16.95389175415039
    7. 'Comp' → logprob: -18.70389175415039
    8. '(' → logprob: -19.82889175415039
    9. '.comp' → logprob: -19.95389175415039
    10. '           ' → logprob: -21.32889175415039

Token 1901: ')
' (ID: 446)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2619391083717346
    2. ')
' → logprob: -1.6369390487670898
    3. '
' → logprob: -3.51193904876709
    4. ')' → logprob: -5.51193904876709
    5. '):
' → logprob: -6.38693904876709
    6. ':
' → logprob: -9.13693904876709
    7. '       ' → logprob: -10.26193904876709
    8. '               ' → logprob: -10.88693904876709
    9. '            
' → logprob: -11.13693904876709
    10. '<|end|>' → logprob: -11.13693904876709

Token 1902: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00013512482109945267
    2. '       ' → logprob: -9.37513542175293
    3. 'if' → logprob: -10.75013542175293
    4. '```' → logprob: -11.12513542175293
    5. '   ' → logprob: -11.62513542175293
    6. ' if' → logprob: -12.50013542175293
    7. '               ' → logprob: -14.62513542175293
    8. '	       ' → logprob: -15.25013542175293
    9. '
' → logprob: -15.75013542175293
    10. '		' → logprob: -15.75013542175293

Token 1903: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.4743090867996216
    2. '           ' → logprob: -0.9743090867996216
    3. ' if' → logprob: -8.974308967590332
    4. '```' → logprob: -9.349308967590332
    5. '       ' → logprob: -11.224308967590332
    6. '   ' → logprob: -13.099308967590332
    7. '
' → logprob: -14.349308967590332
    8. '               ' → logprob: -14.474308967590332
    9. 'import' → logprob: -14.974308967590332
    10. 'for' → logprob: -15.224308967590332

Token 1904: ' size' (ID: 2349)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.00325388484634459
    2. ' size' → logprob: -5.753253936767578
    3. '           ' → logprob: -9.503253936767578
    4. 'k' → logprob: -13.753253936767578
    5. '               ' → logprob: -15.628253936767578
    6. '(size' → logprob: -16.878253936767578
    7. '   ' → logprob: -17.128253936767578
    8. 'len' → logprob: -17.253253936767578
    9. 'score' → logprob: -17.253253936767578
    10. 'not' → logprob: -18.003253936767578

Token 1905: '_comp' (ID: 34754)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.2961558401584625
    2. ' >=' → logprob: -2.0461559295654297
    3. '<' → logprob: -2.2961559295654297
    4. ' <' → logprob: -3.6711559295654297
    5. '           ' → logprob: -8.67115592956543
    6. '<int' → logprob: -8.79615592956543
    7. '<size' → logprob: -8.92115592956543
    8. '   ' → logprob: -9.54615592956543
    9. '==' → logprob: -9.92115592956543
    10. '>' → logprob: -10.17115592956543

Token 1906: ' <' (ID: 464)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.4277021586894989
    2. '>=' → logprob: -1.6777021884918213
    3. ' <' → logprob: -1.9277021884918213
    4. '<' → logprob: -4.177701950073242
    5. '<int' → logprob: -9.052701950073242
    6. '           ' → logprob: -9.677701950073242
    7. '```' → logprob: -10.302701950073242
    8. '>' → logprob: -10.427701950073242
    9. '<size' → logprob: -11.052701950073242
    10. '<n' → logprob: -11.302701950073242

Token 1907: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0004309076175559312
    2. ' k' → logprob: -7.750431060791016
    3. '           ' → logprob: -15.250431060791016
    4. '               ' → logprob: -19.250431060791016
    5. '	k' → logprob: -20.000431060791016
    6. '```' → logprob: -20.375431060791016
    7. '   ' → logprob: -20.750431060791016
    8. '            ' → logprob: -21.125431060791016
    9. '{k' → logprob: -21.375431060791016
    10. ' к' → logprob: -22.250431060791016

Token 1908: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.705735445022583
    2. ':' → logprob: -1.205735445022583
    3. ':
' → logprob: -1.830735445022583
    4. '           ' → logprob: -3.830735445022583
    5. 'continue' → logprob: -4.205735206604004
    6. ' continue' → logprob: -4.705735206604004
    7. ' continues' → logprob: -8.205735206604004
    8. '	continue' → logprob: -8.455735206604004
    9. '_continue' → logprob: -8.705735206604004
    10. '	           ' → logprob: -10.330735206604004

Token 1909: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00015038289711810648
    2. 'continue' → logprob: -9.375150680541992
    3. ' continue' → logprob: -10.375150680541992
    4. '           ' → logprob: -10.500150680541992
    5. '	           ' → logprob: -12.750150680541992
    6. '	continue' → logprob: -13.375150680541992
    7. '		       ' → logprob: -14.625150680541992
    8. '   ' → logprob: -14.750150680541992
    9. '_continue' → logprob: -14.875150680541992
    10. '	       ' → logprob: -14.875150680541992

Token 1910: ' continue' (ID: 4901)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.8155487179756165
    2. 'continue' (adapté à ' continue') → logprob: -0.8155487179756165
    3. '           ' → logprob: -2.1905486583709717
    4. ' continue' → logprob: -6.065548896789551
    5. '	continue' → logprob: -7.815548896789551
    6. '```' → logprob: -8.19054889678955
    7. '	       ' → logprob: -9.19054889678955
    8. '	           ' → logprob: -9.31554889678955
    9. '   ' → logprob: -9.56554889678955
    10. '_continue' → logprob: -9.94054889678955

Token 1911: ' ' (ID: 220)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03592696413397789
    2. '
' → logprob: -3.4109270572662354
    3. '```' → logprob: -6.785926818847656
    4. '       ' → logprob: -7.410926818847656
    5. '            
' → logprob: -8.285926818847656
    6. 'import' → logprob: -9.285926818847656
    7. ' for' → logprob: -9.535926818847656
    8. '        
' → logprob: -10.035926818847656
    9. 'for' → logprob: -10.285926818847656
    10. '   ' → logprob: -11.910926818847656

Token 1912: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0031338706612586975
    2. '```' → logprob: -6.378133773803711
    3. '
' → logprob: -7.503133773803711
    4. ' for' → logprob: -8.253133773803711
    5. 'for' → logprob: -8.253133773803711
    6. '            
' → logprob: -8.378133773803711
    7. '       ' → logprob: -9.628133773803711
    8. '               ' → logprob: -10.878133773803711
    9. '   ' → logprob: -12.003133773803711
    10. '	       ' → logprob: -12.253133773803711

Token 1913: ' impossible' (ID: 19786)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9224367737770081
    2. 'continue' → logprob: -0.9224367737770081
    3. 'for' → logprob: -2.6724367141723633
    4. 'visited' → logprob: -2.9224367141723633
    5. '#' → logprob: -3.7974367141723633
    6. ' continue' → logprob: -4.047436714172363
    7. '```' → logprob: -4.672436714172363
    8. ' for' → logprob: -5.047436714172363
    9. 'best' → logprob: -5.422436714172363
    10. 'start' → logprob: -5.547436714172363

Token 1914: ' de' (ID: 334)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0018965097842738032
    2. '
' → logprob: -6.376896381378174
    3. '            
' → logprob: -8.751896858215332
    4. 'import' → logprob: -11.501896858215332
    5. '        
' → logprob: -11.626896858215332
    6. '```' → logprob: -12.126896858215332
    7. '       ' → logprob: -12.501896858215332
    8. '    
' → logprob: -13.626896858215332
    9. '<|end|>' → logprob: -13.626896858215332
    10. ',' → logprob: -14.126896858215332

Token 1915: ' choisir' (ID: 47004)
  Prédit: 'cho'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cho' → logprob: -0.44078370928764343
    2. 'former' → logprob: -1.4407837390899658
    3. 'sé' → logprob: -2.940783739089966
    4. 'prendre' → logprob: -3.065783739089966
    5. 'avoir' → logprob: -4.690783500671387
    6. ' choisir' → logprob: -5.565783500671387
    7. 'form' → logprob: -6.815783500671387
    8. 'select' → logprob: -6.940783500671387
    9. 'faire' → logprob: -7.065783500671387
    10. 'contin' → logprob: -7.065783500671387

Token 1916: ' k' (ID: 372)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06680121272802353
    2. '```' → logprob: -3.5668013095855713
    3. 'continue' → logprob: -3.6918013095855713
    4. 'contin' → logprob: -5.441801071166992
    5. '               ' → logprob: -5.566801071166992
    6. 'for' → logprob: -6.566801071166992
    7. '
' → logprob: -7.441801071166992
    8. ' continuer' → logprob: -7.941801071166992
    9. 'continued' → logprob: -8.816801071166992
    10. 'la' → logprob: -8.941801071166992

Token 1917: ' cubes' (ID: 88455)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.11147106438875198
    2. ' cubes' → logprob: -2.486471176147461
    3. '           ' → logprob: -4.236471176147461
    4. '       ' → logprob: -6.111471176147461
    5. 'tokens' → logprob: -6.361471176147461
    6. '
' → logprob: -6.361471176147461
    7. '```' → logprob: -7.486471176147461
    8. '_c' → logprob: -8.111471176147461
    9. '               ' → logprob: -8.361471176147461
    10. 'cube' → logprob: -8.611471176147461

Token 1918: ' dans' (ID: 2671)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0008706060471013188
    2. '
' → logprob: -7.500870704650879
    3. '            
' → logprob: -8.375870704650879
    4. '```' → logprob: -9.875870704650879
    5. 'import' → logprob: -11.250870704650879
    6. '        
' → logprob: -11.750870704650879
    7. '       ' → logprob: -13.000870704650879
    8. '    
' → logprob: -13.375870704650879
    9. '           
' → logprob: -13.625870704650879
    10. '               ' → logprob: -13.625870704650879

Token 1919: ' cette' (ID: 7696)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.009674042463302612
    2. 'la' → logprob: -5.384674072265625
    3. 'celle' → logprob: -6.259674072265625
    4. 'ce' → logprob: -6.884674072265625
    5. 'cet' → logprob: -6.884674072265625
    6. 'une' → logprob: -7.759674072265625
    7. 'comp' → logprob: -8.384674072265625
    8. 'cela' → logprob: -9.009674072265625
    9. 'com' → logprob: -9.634674072265625
    10. ' cette' → logprob: -9.884674072265625

Token 1920: ' compos' (ID: 14635)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.00911497138440609
    2. 'comp' → logprob: -4.759114742279053
    3. ' compos' → logprob: -8.134115219116211
    4. 'component' → logprob: -8.634115219116211
    5. 'composition' → logprob: -10.884115219116211
    6. '#' → logprob: -12.759115219116211
    7. ' comp' → logprob: -13.259115219116211
    8. 'compl' → logprob: -13.884115219116211
    9. '   ' → logprob: -14.009115219116211
    10. 'compose' → logprob: -14.259115219116211

Token 1921: 'ante' (ID: 2116)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -1.300463080406189
    2. 'ponente' → logprob: -1.300463080406189
    3. 'p' → logprob: -2.0504631996154785
    4. 'on' → logprob: -2.0504631996154785
    5. 'pon' → logprob: -2.5504631996154785
    6. 'ponent' → logprob: -2.5504631996154785
    7. 'ante' → logprob: -3.8004631996154785
    8. 'op' → logprob: -4.9254631996154785
    9. 'pone' → logprob: -6.6754631996154785
    10. '
' → logprob: -6.8004631996154785

Token 1922: '

' (ID: 279)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.021190200001001358
    2. '
' → logprob: -3.8961901664733887
    3. '            
' → logprob: -7.771190166473389
    4. 'import' → logprob: -9.521190643310547
    5. 'for' → logprob: -9.896190643310547
    6. 'from' → logprob: -10.146190643310547
    7. '```' → logprob: -11.271190643310547
    8. 'adj' → logprob: -11.646190643310547
    9. '       ' → logprob: -11.896190643310547
    10. 'else' → logprob: -12.521190643310547

Token 1923: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0009655343601480126
    2. '       ' → logprob: -7.625965595245361
    3. '```' → logprob: -8.000965118408203
    4. 'for' → logprob: -9.375965118408203
    5. '
' → logprob: -11.125965118408203
    6. 'import' → logprob: -11.375965118408203
    7. ' for' → logprob: -11.625965118408203
    8. '   ' → logprob: -11.625965118408203
    9. '            
' → logprob: -12.125965118408203
    10. 'from' → logprob: -12.875965118408203

Token 1924: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8459504246711731
    2. 'for' → logprob: -1.2209503650665283
    3. 'comp' → logprob: -1.7209503650665283
    4. 'id' → logprob: -2.7209503650665283
    5. 'adj' → logprob: -4.720950603485107
    6. 'pos' → logprob: -4.970950603485107
    7. '#' (adapté à ' #') → logprob: -5.220950603485107
    8. 'degree' → logprob: -5.845950603485107
    9. 'node' → logprob: -6.720950603485107
    10. 'def' → logprob: -7.220950603485107

Token 1925: ' Creation' (ID: 62645)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.9092665314674377
    2. 'for' → logprob: -1.284266471862793
    3. 'best' → logprob: -2.159266471862793
    4. '           ' → logprob: -2.909266471862793
    5. 'id' → logprob: -3.159266471862793
    6. 'pos' → logprob: -3.409266471862793
    7. 'adj' → logprob: -3.909266471862793
    8. 'node' → logprob: -4.409266471862793
    9. '#' → logprob: -4.409266471862793
    10. 'deg' → logprob: -5.034266471862793

Token 1926: ' d' (ID: 272)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01773884706199169
    2. 'id' → logprob: -5.2677388191223145
    3. ' =' → logprob: -6.3927388191223145
    4. 'comp' → logprob: -6.3927388191223145
    5. '_id' → logprob: -6.6427388191223145
    6. 'index' → logprob: -7.1427388191223145
    7. 'de' → logprob: -7.2677388191223145
    8. '```' → logprob: -7.3927388191223145
    9. 'd' → logprob: -7.6427388191223145
    10. '=' → logprob: -7.6427388191223145

Token 1927: ''un' (ID: 9788)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.6601741909980774
    2. 'set' → logprob: -1.5351741313934326
    3. 'a' → logprob: -1.9101741313934326
    4. ' set' → logprob: -3.9101741313934326
    5. 'e' → logprob: -4.035174369812012
    6. 'adj' → logprob: -4.035174369812012
    7. ' a' → logprob: -4.660174369812012
    8. '       ' → logprob: -5.160174369812012
    9. 'range' → logprob: -5.410174369812012
    10. 'default' → logprob: -5.410174369812012

Token 1928: ' sous' (ID: 14487)
  Prédit: 'id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.8181904554367065
    2. 'sub' → logprob: -1.3181904554367065
    3. 'set' → logprob: -2.068190574645996
    4. 'pos' → logprob: -2.693190574645996
    5. 'dist' → logprob: -3.693190574645996
    6. 'index' → logprob: -4.318190574645996
    7. 'subset' → logprob: -4.318190574645996
    8. 'comp' → logprob: -4.443190574645996
    9. 'queue' → logprob: -5.068190574645996
    10. 'def' → logprob: -5.193190574645996

Token 1929: '-gr' (ID: 18511)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.055268242955207825
    2. 'adj' → logprob: -3.1802682876586914
    3. '           ' → logprob: -4.680268287658691
    4. '#' → logprob: -6.680268287658691
    5. 'comp' → logprob: -6.930268287658691
    6. 'gr' → logprob: -8.555268287658691
    7. '_adj' → logprob: -8.930268287658691
    8. '       ' → logprob: -9.180268287658691
    9. 'g' → logprob: -9.305268287658691
    10. 'set' → logprob: -10.305268287658691

Token 1930: 'aphe' (ID: 98856)
  Prédit: 'aphe'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aphe' → logprob: -0.0022400659509003162
    2. 'aph' → logprob: -6.127240180969238
    3. 'ap' → logprob: -10.127240180969238
    4. 'phe' → logprob: -12.377240180969238
    5. 'apho' → logprob: -12.752240180969238
    6. '   ' → logprob: -13.377240180969238
    7. 'ph' → logprob: -13.752240180969238
    8. 'apha' → logprob: -14.252240180969238
    9. '#' → logprob: -14.377240180969238
    10. '```' → logprob: -14.502240180969238

Token 1931: ' pour' (ID: 1930)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04525278881192207
    2. 'comp' → logprob: -3.420252799987793
    3. 'adj' → logprob: -4.670252799987793
    4. 'sub' → logprob: -6.795252799987793
    5. ' comp' → logprob: -7.545252799987793
    6. ' adj' → logprob: -9.170252799987793
    7. ' =' → logprob: -9.295252799987793
    8. 'subset' → logprob: -9.795252799987793
    9. ' sub' → logprob: -10.545252799987793
    10. '=' → logprob: -10.545252799987793

Token 1932: ' cette' (ID: 7696)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.06313742697238922
    2. ' comp' → logprob: -3.5631375312805176
    3. 'u' → logprob: -4.188137531280518
    4. 'idx' → logprob: -5.188137531280518
    5. 'this' → logprob: -5.813137531280518
    6. 'i' → logprob: -6.063137531280518
    7. 'adj' → logprob: -6.313137531280518
    8. 'id' → logprob: -7.063137531280518
    9. 'sub' → logprob: -7.563137531280518
    10. 'node' → logprob: -8.06313705444336

Token 1933: ' compos' (ID: 14635)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.38873520493507385
    2. ' compos' → logprob: -1.3887351751327515
    3. 'comp' → logprob: -2.763735294342041
    4. ' comp' → logprob: -5.388735294342041
    5. 'component' → logprob: -5.513735294342041
    6. 'composition' → logprob: -7.763735294342041
    7. '#' → logprob: -8.513734817504883
    8. ' compon' → logprob: -9.513734817504883
    9. ' component' → logprob: -9.638734817504883
    10. '   ' → logprob: -10.388734817504883

Token 1934: 'ante' (ID: 2116)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.5037434101104736
    2. 'ante' → logprob: -2.2537434101104736
    3. 'on' → logprob: -2.6287434101104736
    4. '   ' → logprob: -3.1287434101104736
    5. 'one' → logprob: -3.1287434101104736
    6. 'com' → logprob: -3.2537434101104736
    7. 'onte' → logprob: -4.0037431716918945
    8. 'aphe' → logprob: -4.6287431716918945
    9. 'h' → logprob: -5.0037431716918945
    10. '#' → logprob: -5.0037431716918945

Token 1935: ' pour' (ID: 1930)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0034686902072280645
    2. 'comp' → logprob: -5.8784685134887695
    3. 'sub' → logprob: -8.12846851348877
    4. 'adj' → logprob: -8.12846851348877
    5. 'subset' → logprob: -11.37846851348877
    6. ' comp' → logprob: -11.50346851348877
    7. ' sub' → logprob: -11.87846851348877
    8. '		' → logprob: -12.12846851348877
    9. '            
' → logprob: -12.12846851348877
    10. '#' → logprob: -12.62846851348877

Token 1936: ' accél' (ID: 152966)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6375579237937927
    2. 'adj' → logprob: -2.5125579833984375
    3. 'fac' → logprob: -2.5125579833984375
    4. 'acc' → logprob: -2.7625579833984375
    5. 'optim' → logprob: -3.2625579833984375
    6. 'l' → logprob: -3.3875579833984375
    7. 'fast' → logprob: -3.5125579833984375
    8. 'u' → logprob: -3.6375579833984375
    9. 'len' → logprob: -4.1375579833984375
    10. ' faciliter' → logprob: -4.2625579833984375

Token 1937: 'érer' (ID: 29097)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.25778090953826904
    2. 'érer' → logprob: -1.507780909538269
    3. 'rer' → logprob: -5.757781028747559
    4. 'erer' → logprob: -6.257781028747559
    5. 'ér' → logprob: -7.507781028747559
    6. 'arer' → logprob: -9.632781028747559
    7. 'orer' → logprob: -10.507781028747559
    8. 'éer' → logprob: -10.632781028747559
    9. 'errer' → logprob: -11.007781028747559
    10. 'ation' → logprob: -11.632781028747559

Token 1938: '
' (ID: 198)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.49722540378570557
    2. 'sub' → logprob: -1.1222254037857056
    3. 'id' → logprob: -3.872225284576416
    4. '           ' → logprob: -4.622225284576416
    5. 'index' → logprob: -4.997225284576416
    6. 'indices' → logprob: -5.247225284576416
    7. 'idx' → logprob: -5.372225284576416
    8. 'subset' → logprob: -5.622225284576416
    9. ' comp' → logprob: -5.747225284576416
    10. 'local' → logprob: -5.872225284576416

Token 1939: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6181227564811707
    2. 'comp' → logprob: -0.9931227564811707
    3. 'sub' → logprob: -2.4931228160858154
    4. 'adj' → logprob: -5.743122577667236
    5. ' comp' → logprob: -6.993122577667236
    6. 'subset' → logprob: -6.993122577667236
    7. 'id' → logprob: -7.118122577667236
    8. ' sub' → logprob: -7.368122577667236
    9. 'local' → logprob: -7.868122577667236
    10. 'idx' → logprob: -7.993122577667236

Token 1940: ' comp' (ID: 1050)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.5337103605270386
    2. 'comp' (adapté à ' comp') → logprob: -1.0337103605270386
    3. 'id' → logprob: -3.533710479736328
    4. '           ' → logprob: -4.783710479736328
    5. 'index' → logprob: -4.783710479736328
    6. 'local' → logprob: -5.408710479736328
    7. 'idx' → logprob: -6.033710479736328
    8. 'adj' → logprob: -6.783710479736328
    9. 'indices' → logprob: -6.908710479736328
    10. 'mapping' → logprob: -7.158710479736328

Token 1941: '_set' (ID: 5451)
  Prédit: '_set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_set' → logprob: -0.24733594059944153
    2. '_id' → logprob: -1.9973359107971191
    3. '_index' → logprob: -3.497335910797119
    4. '_idx' → logprob: -4.122335910797119
    5. 'set' → logprob: -4.497335910797119
    6. '_adj' → logprob: -4.497335910797119
    7. '_ids' → logprob: -4.997335910797119
    8. '_indices' → logprob: -5.747335910797119
    9. '_nodes' → logprob: -6.247335910797119
    10. 'index' → logprob: -7.372335910797119

Token 1942: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0381464883685112
    2. ' =' → logprob: -3.288146495819092
    3. '=set' → logprob: -9.163146018981934
    4. 'set' → logprob: -15.913146018981934
    5. '           ' → logprob: -17.78814697265625
    6. '=
' → logprob: -18.41314697265625
    7. '_set' → logprob: -18.66314697265625
    8. '＝' → logprob: -19.28814697265625
    9. '={' → logprob: -20.03814697265625
    10. '       ' → logprob: -20.66314697265625

Token 1943: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -1.9361264946837764e-07
    2. ' set' → logprob: -16.25
    3. '{' → logprob: -21.0
    4. '=set' → logprob: -23.0
    5. '	set' → logprob: -23.25
    6. '   ' → logprob: -24.375
    7. '(set' → logprob: -24.875
    8. 'Set' → logprob: -26.125
    9. '#set' → logprob: -26.625
    10. 'fro' → logprob: -26.75

Token 1944: '(comp' (ID: 60272)
  Prédit: '(comp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(comp' → logprob: -0.03804229199886322
    2. 'comp' → logprob: -3.2880423069000244
    3. '	comp' → logprob: -14.663042068481445
    4. ' comp' → logprob: -14.913042068481445
    5. '```' → logprob: -18.538042068481445
    6. '.comp' → logprob: -18.788042068481445
    7. '_comp' → logprob: -18.913042068481445
    8. ')' → logprob: -18.913042068481445
    9. '(com' → logprob: -19.038042068481445
    10. '   ' → logprob: -19.163042068481445

Token 1945: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.016552509739995003
    2. ')' → logprob: -4.141552448272705
    3. '           ' → logprob: -8.016552925109863
    4. ')
' → logprob: -8.641552925109863
    5. ')

' → logprob: -11.891552925109863
    6. '       ' → logprob: -12.516552925109863
    7. ' )
' → logprob: -14.266552925109863
    8. '   ' → logprob: -15.641552925109863
    9. ')

' → logprob: -16.266551971435547
    10. '```' → logprob: -16.891551971435547

Token 1946: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07819638401269913
    2. 'comp' → logprob: -2.7031962871551514
    3. 'adj' → logprob: -4.8281965255737305
    4. 'sub' → logprob: -9.20319652557373
    5. ' comp' → logprob: -9.57819652557373
    6. ' adj' → logprob: -11.20319652557373
    7. '```' → logprob: -11.95319652557373
    8. '		' → logprob: -12.20319652557373
    9. '	comp' → logprob: -12.57819652557373
    10. '#' → logprob: -12.82819652557373

Token 1947: ' comp' (ID: 1050)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' (adapté à ' comp') → logprob: -0.45513394474983215
    2. 'adj' → logprob: -1.8301339149475098
    3. 'for' → logprob: -2.3301339149475098
    4. '           ' → logprob: -2.4551339149475098
    5. 'id' → logprob: -4.95513391494751
    6. '#' → logprob: -5.70513391494751
    7. 'degree' → logprob: -6.08013391494751
    8. 'sub' → logprob: -6.20513391494751
    9. 'dist' → logprob: -6.33013391494751
    10. 'from' → logprob: -7.20513391494751

Token 1948: '_id' (ID: 1537)
  Prédit: '_adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_adj' → logprob: -0.19047637283802032
    2. '_id' → logprob: -2.315476417541504
    3. '_idx' → logprob: -3.815476417541504
    4. '_ids' → logprob: -3.815476417541504
    5. '_indices' → logprob: -4.690476417541504
    6. '_index' → logprob: -5.065476417541504
    7. '_map' → logprob: -5.190476417541504
    8. '_to' → logprob: -5.815476417541504
    9. '_pos' → logprob: -5.940476417541504
    10. '_set' → logprob: -6.565476417541504

Token 1949: '_map' (ID: 11824)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31336045265197754
    2. '=' → logprob: -1.3133604526519775
    3. '_map' → logprob: -9.438360214233398
    4. 'x' → logprob: -11.688360214233398
    5. 'map' → logprob: -13.063360214233398
    6. '_to' → logprob: -13.438360214233398
    7. '_mapping' → logprob: -13.813360214233398
    8. 's' → logprob: -13.938360214233398
    9. 'mapping' → logprob: -14.313360214233398
    10. '={}' → logprob: -14.438360214233398

Token 1950: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.005233882926404476
    2. ' =' → logprob: -5.2552337646484375
    3. '=
' → logprob: -16.255233764648438
    4. '   ' → logprob: -19.130233764648438
    5. '={' → logprob: -19.255233764648438
    6. '[' → logprob: -20.130233764648438
    7. '＝' → logprob: -20.255233764648438
    8. '{' → logprob: -20.380233764648438
    9. '={}' → logprob: -20.505233764648438
    10. '={}
' → logprob: -20.755233764648438

Token 1951: ' {' (ID: 354)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.0013911888236179948
    2. '{}
' → logprob: -7.501391410827637
    3. '{}' → logprob: -7.751391410827637
    4. 'dict' → logprob: -8.001391410827637
    5. '{id' → logprob: -9.751391410827637
    6. '{i' → logprob: -11.501391410827637
    7. '{x' → logprob: -13.501391410827637
    8. ' {' → logprob: -13.501391410827637
    9. ' dict' → logprob: -14.501391410827637
    10. '{sub' → logprob: -15.001391410827637

Token 1952: 'v' (ID: 85)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.22582681477069855
    2. 'v' → logprob: -1.7258268594741821
    3. 'node' → logprob: -3.7258267402648926
    4. 'old' → logprob: -10.97582721710205
    5. 'comp' → logprob: -12.60082721710205
    6. 'x' → logprob: -13.60082721710205
    7. 'idx' → logprob: -14.10082721710205
    8. ' u' → logprob: -14.60082721710205
    9. 'c' → logprob: -14.85082721710205
    10. ' node' → logprob: -15.22582721710205

Token 1953: ':i' (ID: 34041)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.023228120058774948
    2. ':i' → logprob: -3.898228168487549
    3. ':v' → logprob: -6.898228168487549
    4. ':index' → logprob: -7.023228168487549
    5. ':u' → logprob: -7.773228168487549
    6. 'for' → logprob: -9.14822769165039
    7. '[i' → logprob: -9.39822769165039
    8. '[v' → logprob: -10.02322769165039
    9. '[u' → logprob: -10.52322769165039
    10. 'v' → logprob: -10.77322769165039

Token 1954: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.693411111831665
    2. 'for' → logprob: -0.693411111831665
    3. ':' → logprob: -9.568410873413086
    4. '	for' → logprob: -9.693410873413086
    5. 'v' → logprob: -10.068410873413086
    6. '           ' → logprob: -10.318410873413086
    7. '       ' → logprob: -11.193410873413086
    8. '               ' → logprob: -11.818410873413086
    9. '   ' → logprob: -11.943410873413086
    10. '=' → logprob: -12.568410873413086

Token 1955: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.009784188121557236
    2. 'v' → logprob: -4.63478422164917
    3. ' i' → logprob: -10.634783744812012
    4. '(i' → logprob: -13.509783744812012
    5. ',i' → logprob: -14.259783744812012
    6. 'idx' → logprob: -14.259783744812012
    7. '	i' → logprob: -14.759783744812012
    8. 'iiv' → logprob: -15.884783744812012
    9. '{i' → logprob: -15.884783744812012
    10. ' v' → logprob: -16.259784698486328

Token 1956: ',v' (ID: 30680)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.030056046321988106
    2. 'in' → logprob: -3.7800559997558594
    3. 'enumer' → logprob: -6.030055999755859
    4. ',' → logprob: -6.155055999755859
    5. 'i' → logprob: -6.655055999755859
    6. ',v' → logprob: -7.530055999755859
    7. ' in' → logprob: -7.905055999755859
    8. ' v' → logprob: -9.90505599975586
    9. ',i' → logprob: -12.15505599975586
    10. 'comp' → logprob: -12.53005599975586

Token 1957: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.03411322087049484
    2. 'enumer' → logprob: -4.03411340713501
    3. ' in' → logprob: -4.15911340713501
    4. 'v' → logprob: -8.534112930297852
    5. ' enumerate' → logprob: -11.659112930297852
    6. ',v' → logprob: -13.034112930297852
    7. 'en' → logprob: -13.034112930297852
    8. 'enum' → logprob: -13.284112930297852
    9. ',' → logprob: -14.034112930297852
    10. 'i' → logprob: -14.159112930297852

Token 1958: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -1.0445127372804563e-05
    2. ' enumerate' → logprob: -11.50001049041748
    3. 'enum' → logprob: -16.250009536743164
    4. '
' → logprob: -16.625009536743164
    5. 'v' → logprob: -17.250009536743164
    6. 'range' → logprob: -17.375009536743164
    7. '```' → logprob: -18.625009536743164
    8. 'en' → logprob: -19.125009536743164
    9. 'zip' → logprob: -19.750009536743164
    10. 'Enumer' → logprob: -20.125009536743164

Token 1959: '(comp' (ID: 60272)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -1.2664456789934775e-06
    2. ' comp' → logprob: -14.375000953674316
    3. '(comp' → logprob: -14.750000953674316
    4. 'enumer' → logprob: -15.500000953674316
    5. '	comp' → logprob: -17.625001907348633
    6. '
' → logprob: -19.500001907348633
    7. 'com' → logprob: -19.875001907348633
    8. '.comp' → logprob: -20.750001907348633
    9. 'zip' → logprob: -21.125001907348633
    10. 'cap' → logprob: -21.250001907348633

Token 1960: ')}
' (ID: 19324)
  Prédit: ')}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')}' → logprob: -0.0013360745506361127
    2. ')}
' → logprob: -6.626336097717285
    3. ')' → logprob: -12.251336097717285
    4. '   ' → logprob: -13.876336097717285
    5. ')}}' → logprob: -13.876336097717285
    6. ');}' → logprob: -14.001336097717285
    7. ')}

' → logprob: -14.251336097717285
    8. '}' → logprob: -14.251336097717285
    9. ')}
' → logprob: -14.626336097717285
    10. '       ' → logprob: -15.751336097717285

Token 1961: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11840556561946869
    2. 'adj' → logprob: -2.36840558052063
    3. '```' → logprob: -4.493405342102051
    4. 'comp' → logprob: -5.493405342102051
    5. ' adj' → logprob: -6.118405342102051
    6. 'n' → logprob: -8.11840534210205
    7. ' comp' → logprob: -10.36840534210205
    8. '		' → logprob: -10.49340534210205
    9. '``' → logprob: -10.61840534210205
    10. 'for' → logprob: -10.86840534210205

Token 1962: ' comp' (ID: 1050)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' (adapté à ' comp') → logprob: -0.001106875017285347
    2. '           ' → logprob: -8.001107215881348
    3. 'adj' → logprob: -8.001107215881348
    4. 'sub' → logprob: -8.376107215881348
    5. 'for' → logprob: -9.001107215881348
    6. 'n' → logprob: -10.751107215881348
    7. '#' → logprob: -10.876107215881348
    8. 'inv' → logprob: -11.251107215881348
    9. '```' → logprob: -11.501107215881348
    10. ' comp' → logprob: -11.876107215881348

Token 1963: '_adj' (ID: 117293)
  Prédit: '_adj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_adj' → logprob: -0.3503398597240448
    2. 'adj' → logprob: -1.2253398895263672
    3. 'size' → logprob: -6.850339889526367
    4. '_size' → logprob: -7.850339889526367
    5. 'n' → logprob: -8.350339889526367
    6. 'Adj' → logprob: -9.975339889526367
    7. '_deg' → logprob: -10.850339889526367
    8. '_len' → logprob: -10.850339889526367
    9. 'deg' → logprob: -11.100339889526367
    10. '_ad' → logprob: -11.600339889526367

Token 1964: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.006718332413583994
    2. ' =' → logprob: -5.006718158721924
    3. '=[' → logprob: -13.631718635559082
    4. '=[]' → logprob: -13.756718635559082
    5. '[' → logprob: -14.631718635559082
    6. '=
' → logprob: -16.381717681884766
    7. '=[[' → logprob: -17.256717681884766
    8. '=[]
' → logprob: -17.756717681884766
    9. '={}' → logprob: -18.381717681884766
    10. ']=' → logprob: -18.381717681884766

Token 1965: ' [[]' (ID: 182908)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00021712594025302678
    2. ' [[]' → logprob: -8.75021743774414
    3. '[[' → logprob: -9.75021743774414
    4. '[
' → logprob: -16.12521743774414
    5. '[]
' → logprob: -16.25021743774414
    6. '[]' → logprob: -16.25021743774414
    7. '[['' → logprob: -16.75021743774414
    8. '   ' → logprob: -18.50021743774414
    9. '[len' → logprob: -19.75021743774414
    10. '[][]' → logprob: -19.87521743774414

Token 1966: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.003306516446173191
    2. ' for' → logprob: -5.7533063888549805
    3. '           ' → logprob: -9.75330638885498
    4. '               ' → logprob: -9.87830638885498
    5. '[v' → logprob: -12.25330638885498
    6. '                   ' → logprob: -12.37830638885498
    7. '       ' → logprob: -12.62830638885498
    8. '[' → logprob: -13.87830638885498
    9. '          ' → logprob: -13.87830638885498
    10. '              ' → logprob: -14.00330638885498

Token 1967: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.07668206840753555
    2. '_i' → logprob: -2.7016820907592773
    3. 'i' → logprob: -5.951682090759277
    4. '_v' → logprob: -6.326682090759277
    5. '_range' → logprob: -6.576682090759277
    6. ' _' → logprob: -8.451682090759277
    7. '_in' → logprob: -8.701682090759277
    8. '_=' → logprob: -8.701682090759277
    9. '_comp' → logprob: -8.951682090759277
    10. 'v' → logprob: -9.826682090759277

Token 1968: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5153837203979492
    2. 'i' → logprob: -1.6403837203979492
    3. 'in' → logprob: -1.6403837203979492
    4. ' in' → logprob: -4.640383720397949
    5. ' range' → logprob: -5.390383720397949
    6. '_' → logprob: -7.640383720397949
    7. ' i' → logprob: -10.26538372039795
    8. 'v' → logprob: -10.89038372039795
    9. 'size' → logprob: -10.89038372039795
    10. '0' → logprob: -11.01538372039795

Token 1969: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0009714908665046096
    2. ' range' → logprob: -7.00097131729126
    3. 'size' → logprob: -9.750971794128418
    4. '(range' → logprob: -13.625971794128418
    5. 'len' → logprob: -15.125971794128418
    6. '   ' → logprob: -16.5009708404541
    7. '
' → logprob: -16.7509708404541
    8. ' ' → logprob: -16.8759708404541
    9. '	range' → logprob: -17.8759708404541
    10. '(size' → logprob: -18.2509708404541

Token 1970: '(size' (ID: 15192)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.01332445815205574
    2. 'len' → logprob: -4.38832426071167
    3. '(size' → logprob: -7.51332426071167
    4. ' size' → logprob: -8.763324737548828
    5. '   ' → logprob: -10.388324737548828
    6. '(len' → logprob: -10.388324737548828
    7. 'range' → logprob: -10.513324737548828
    8. 'length' → logprob: -11.513324737548828
    9. ' ' → logprob: -12.888324737548828
    10. '       ' → logprob: -13.013324737548828

Token 1971: '_comp' (ID: 34754)
  Prédit: '_comp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_comp' → logprob: -0.012202809564769268
    2. 'comp' → logprob: -4.887202739715576
    3. '(comp' → logprob: -5.637202739715576
    4. 'size' → logprob: -8.012203216552734
    5. '(size' → logprob: -8.137203216552734
    6. '           ' → logprob: -8.887203216552734
    7. '=' → logprob: -9.012203216552734
    8. '=size' → logprob: -10.137203216552734
    9. '       ' → logprob: -10.512203216552734
    10. 's' → logprob: -11.387203216552734

Token 1972: ')]
' (ID: 11587)
  Prédit: ')]
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]
' → logprob: -0.013116340152919292
    2. ')]' → logprob: -4.388116359710693
    3. ')]
' → logprob: -8.263115882873535
    4. ')]

' → logprob: -8.763115882873535
    5. '           ' → logprob: -9.388115882873535
    6. ']
' → logprob: -10.138115882873535
    7. ']' → logprob: -10.138115882873535
    8. '       ' → logprob: -11.388115882873535
    9. ']]
' → logprob: -11.888115882873535
    10. ')' → logprob: -12.263115882873535

Token 1973: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0011274790158495307
    2. 'for' → logprob: -6.876127243041992
    3. ' for' → logprob: -9.626127243041992
    4. '       ' → logprob: -10.751127243041992
    5. '   ' → logprob: -12.376127243041992
    6. '```' → logprob: -13.751127243041992
    7. '
' → logprob: -14.251127243041992
    8. '            
' → logprob: -14.501127243041992
    9. '               ' → logprob: -15.001127243041992
    10. '		' → logprob: -15.126127243041992

Token 1974: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.4741520285606384
    2. '           ' → logprob: -0.9741520285606384
    3. ' for' → logprob: -9.724151611328125
    4. '       ' → logprob: -11.724151611328125
    5. '```' → logprob: -12.349151611328125
    6. '   ' → logprob: -13.099151611328125
    7. '               ' → logprob: -14.849151611328125
    8. '``' → logprob: -16.224151611328125
    9. '            
' → logprob: -16.474151611328125
    10. '	for' → logprob: -16.599151611328125

Token 1975: ' v' (ID: 323)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.4827359616756439
    2. 'v' → logprob: -0.9827359914779663
    3. 'i' → logprob: -5.107736110687256
    4. 'idx' → logprob: -5.982736110687256
    5. '   ' → logprob: -10.982735633850098
    6. 'index' → logprob: -11.607735633850098
    7. ' u' → logprob: -12.607735633850098
    8. '_v' → logprob: -12.982735633850098
    9. ' v' → logprob: -13.107735633850098
    10. '(u' → logprob: -13.107735633850098

Token 1976: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.04941257834434509
    2. ' in' → logprob: -3.049412488937378
    3. 'v' → logprob: -7.674412727355957
    4. 'u' → logprob: -8.174412727355957
    5. 'comp' → logprob: -10.674412727355957
    6. 'i' → logprob: -11.049412727355957
    7. ',' → logprob: -11.674412727355957
    8. '   ' → logprob: -12.174412727355957
    9. ')' → logprob: -12.924412727355957
    10. 'for' → logprob: -13.049412727355957

Token 1977: ' comp' (ID: 1050)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.00020830852736253291
    2. 'range' → logprob: -8.500207901000977
    3. ' comp' → logprob: -13.375207901000977
    4. 'v' → logprob: -13.375207901000977
    5. 'com' → logprob: -14.250207901000977
    6. '[' → logprob: -15.375207901000977
    7. '	comp' → logprob: -16.000207901000977
    8. '(comp' → logprob: -16.500207901000977
    9. 'enumer' → logprob: -16.500207901000977
    10. 'component' → logprob: -16.750207901000977

Token 1978: ':
' (ID: 734)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.7433410882949829
    2. ':
' → logprob: -0.9933410882949829
    3. ':' → logprob: -2.6183409690856934
    4. 'comp' → logprob: -3.6183409690856934
    5. '       ' → logprob: -4.368340969085693
    6. '           ' → logprob: -4.618340969085693
    7. 'for' → logprob: -4.618340969085693
    8. ' in' → logprob: -4.868340969085693
    9. '   ' → logprob: -5.243340969085693
    10. 'v' → logprob: -5.493340969085693

Token 1979: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.010719881393015385
    2. 'for' → logprob: -5.1357197761535645
    3. '   ' → logprob: -5.6357197761535645
    4. ' for' → logprob: -6.8857197761535645
    5. '       ' → logprob: -9.010720252990723
    6. '           ' → logprob: -10.385720252990723
    7. 'v' → logprob: -11.135720252990723
    8. '```' → logprob: -11.385720252990723
    9. '                   ' → logprob: -12.385720252990723
    10. 'idx' → logprob: -13.510720252990723

Token 1980: ' vid' (ID: 11217)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7679781913757324
    2. 'for' → logprob: -0.7679781913757324
    3. '                   ' → logprob: -3.0179781913757324
    4. ' for' → logprob: -4.517978191375732
    5. 'v' → logprob: -5.017978191375732
    6. 'idx' → logprob: -6.017978191375732
    7. '               ' → logprob: -6.767978191375732
    8. '       ' → logprob: -7.517978191375732
    9. 'u' → logprob: -7.517978191375732
    10. '           ' → logprob: -7.642978191375732

Token 1981: ' =' (ID: 314)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5970579385757446
    2. '=' → logprob: -1.2220579385757446
    3. ' =' → logprob: -2.597057819366455
    4. 'v' → logprob: -3.222057819366455
    5. 'd' → logprob: -3.472057819366455
    6. '_id' → logprob: -5.722057819366455
    7. 'id' → logprob: -5.972057819366455
    8. '=v' → logprob: -6.472057819366455
    9. '_idx' → logprob: -7.847057819366455
    10. 'dx' → logprob: -7.972057819366455

Token 1982: ' comp' (ID: 1050)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -1.1994775377388578e-05
    2. ' comp' → logprob: -11.375012397766113
    3. 'v' → logprob: -15.375012397766113
    4. 'com' → logprob: -16.000011444091797
    5. '	comp' → logprob: -16.375011444091797
    6. '(comp' → logprob: -16.625011444091797
    7. 'pos' → logprob: -17.875011444091797
    8. '.comp' → logprob: -18.500011444091797
    9. '{' → logprob: -18.625011444091797
    10. '           ' → logprob: -18.875011444091797

Token 1983: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -4.966313281329349e-05
    2. 'id' → logprob: -10.625049591064453
    3. 'v' → logprob: -11.125049591064453
    4. '[v' → logprob: -12.250049591064453
    5. '[
' → logprob: -13.625049591064453
    6. '[' → logprob: -13.875049591064453
    7. 'comp' → logprob: -14.125049591064453
    8. '   ' → logprob: -14.250049591064453
    9. 'd' → logprob: -14.375049591064453
    10. '```' → logprob: -14.625049591064453

Token 1984: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -6.611323624383658e-05
    2. '[v' → logprob: -10.500065803527832
    3. 'map' → logprob: -11.375065803527832
    4. 'v' → logprob: -11.750065803527832
    5. ' =' → logprob: -11.750065803527832
    6. '_id' → logprob: -13.125065803527832
    7. '_to' → logprob: -13.250065803527832
    8. '_set' → logprob: -13.375065803527832
    9. '=v' → logprob: -13.375065803527832
    10. '=' → logprob: -13.750065803527832

Token 1985: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.001515100128017366
    2. 'v' → logprob: -6.501514911651611
    3. '(v' → logprob: -11.37651538848877
    4. '=v' → logprob: -15.37651538848877
    5. ',v' → logprob: -15.50151538848877
    6. ' v' → logprob: -15.87651538848877
    7. '```' → logprob: -16.001514434814453
    8. ' =' → logprob: -16.126514434814453
    9. '[' → logprob: -16.251514434814453
    10. ')v' → logprob: -16.251514434814453

Token 1986: ']
' (ID: 1592)
  Prédit: '].'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.248703271150589
    2. ']' → logprob: -1.8737032413482666
    3. ']
' → logprob: -2.8737032413482666
    4. 'for' → logprob: -5.748703479766846
    5. ']=' → logprob: -5.998703479766846
    6. '               ' → logprob: -6.373703479766846
    7. '                   ' → logprob: -7.498703479766846
    8. ']:
' → logprob: -7.498703479766846
    9. 'append' → logprob: -7.623703479766846
    10. 'v' → logprob: -7.623703479766846

Token 1987: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6990657448768616
    2. 'for' → logprob: -0.6990657448768616
    3. ' for' → logprob: -5.449065685272217
    4. '                   ' → logprob: -7.074065685272217
    5. '```' → logprob: -8.074066162109375
    6. '   ' → logprob: -8.199066162109375
    7. '           ' → logprob: -8.824066162109375
    8. '       ' → logprob: -11.574066162109375
    9. '	for' → logprob: -12.574066162109375
    10. '                ' → logprob: -12.949066162109375

Token 1988: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -4.894790981779806e-05
    2. '               ' → logprob: -10.125048637390137
    3. ' for' → logprob: -12.500048637390137
    4. '                   ' → logprob: -13.125048637390137
    5. '```' → logprob: -13.500048637390137
    6. '   ' → logprob: -14.000048637390137
    7. '           ' → logprob: -14.625048637390137
    8. '	for' → logprob: -15.500048637390137
    9. '``' → logprob: -16.250049591064453
    10. '       ' → logprob: -16.375049591064453

Token 1989: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.00024358915106859058
    2. 'u' → logprob: -8.375243186950684
    3. 'nbr' → logprob: -12.250243186950684
    4. 'wv' → logprob: -13.125243186950684
    5. ' w' → logprob: -13.250243186950684
    6. 'neighbor' → logprob: -13.750243186950684
    7. 'adj' → logprob: -14.000243186950684
    8. '   ' → logprob: -14.000243186950684
    9. 'nei' → logprob: -14.500243186950684
    10. 'nv' → logprob: -14.500243186950684

Token 1990: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6931659579277039
    2. ' in' → logprob: -0.6931659579277039
    3. 'w' → logprob: -11.81816577911377
    4. 'v' → logprob: -12.19316577911377
    5. ' ' → logprob: -13.06816577911377
    6. '```' → logprob: -14.31816577911377
    7. '   ' → logprob: -14.81816577911377
    8. ' ' → logprob: -15.06816577911377
    9. '...' → logprob: -15.31816577911377
    10. '	in' → logprob: -15.31816577911377

Token 1991: ' adj' (ID: 20251)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.024048931896686554
    2. 'adj' → logprob: -3.7740490436553955
    3. 'v' → logprob: -7.899048805236816
    4. '[' → logprob: -8.649048805236816
    5. '[v' → logprob: -8.774048805236816
    6. 'w' → logprob: -10.024048805236816
    7. ' comp' → logprob: -11.149048805236816
    8. 'pos' → logprob: -12.024048805236816
    9. ' adj' → logprob: -12.149048805236816
    10. '[w' → logprob: -12.149048805236816

Token 1992: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.018785635009407997
    2. 'v' → logprob: -4.64378547668457
    3. '[w' → logprob: -4.89378547668457
    4. 'w' → logprob: -6.51878547668457
    5. '[' → logprob: -11.64378547668457
    6. '(v' → logprob: -13.01878547668457
    7. '```' → logprob: -13.26878547668457
    8. '[u' → logprob: -13.51878547668457
    9. ')v' → logprob: -14.01878547668457
    10. '	v' → logprob: -14.39378547668457

Token 1993: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.8408395648002625
    2. '):
' → logprob: -0.9658395648002625
    3. 'if' → logprob: -2.4658396244049072
    4. '                   ' → logprob: -3.0908396244049072
    5. '               ' → logprob: -3.9658396244049072
    6. '):' → logprob: -4.590839385986328
    7. ' if' → logprob: -4.715839385986328
    8. ']:' → logprob: -5.090839385986328
    9. 'w' → logprob: -5.465839385986328
    10. ':
' → logprob: -5.715839385986328

Token 1994: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -6.599403423024341e-05
    2. '                       ' → logprob: -10.500065803527832
    3. ' if' → logprob: -11.125065803527832
    4. 'v' → logprob: -12.375065803527832
    5. '           ' → logprob: -13.000065803527832
    6. '               ' → logprob: -13.000065803527832
    7. '		           ' → logprob: -13.000065803527832
    8. '                  ' → logprob: -13.375065803527832
    9. '                           ' → logprob: -13.375065803527832
    10. '                    ' → logprob: -13.625065803527832

Token 1995: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.010064402595162392
    2. '                       ' → logprob: -4.635064601898193
    3. ' if' → logprob: -8.385064125061035
    4. '                   ' → logprob: -10.260064125061035
    5. 'w' → logprob: -11.135064125061035
    6. '```' → logprob: -11.135064125061035
    7. 'wj' → logprob: -12.885064125061035
    8. '                           ' → logprob: -12.885064125061035
    9. 'wv' → logprob: -13.135064125061035
    10. '       ' → logprob: -13.260064125061035

Token 1996: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.0013785678893327713
    2. ' w' → logprob: -6.626378536224365
    3. 'comp' → logprob: -9.876379013061523
    4. ' comp' → logprob: -14.626379013061523
    5. 'pos' → logprob: -14.876379013061523
    6. '   ' → logprob: -15.501379013061523
    7. '(w' → logprob: -16.251379013061523
    8. '	w' → logprob: -17.376379013061523
    9. '```' → logprob: -17.501379013061523
    10. '    ' → logprob: -17.751379013061523

Token 1997: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.63261878490448
    2. 'in' → logprob: -0.75761878490448
    3. 'not' → logprob: -12.50761890411377
    4. '[in' → logprob: -12.88261890411377
    5. 'w' → logprob: -13.50761890411377
    6. 'v' → logprob: -13.50761890411377
    7. ' not' → logprob: -13.50761890411377
    8. '[' → logprob: -13.50761890411377
    9. 'import' → logprob: -13.63261890411377
    10. '_in' → logprob: -14.25761890411377

Token 1998: ' comp' (ID: 1050)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -4.008129963040119e-06
    2. ' comp' → logprob: -13.125003814697266
    3. 'pos' → logprob: -13.500003814697266
    4. '	comp' → logprob: -14.875003814697266
    5. 'com' → logprob: -15.625003814697266
    6. '```' → logprob: -16.625003814697266
    7. '(comp' → logprob: -17.375003814697266
    8. '.comp' → logprob: -18.000003814697266
    9. '   ' → logprob: -18.500003814697266
    10. 'compl' → logprob: -19.125003814697266

Token 1999: '_set' (ID: 5451)
  Prédit: '_set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_set' → logprob: -0.029832525178790092
    2. 'set' → logprob: -3.529832601547241
    3. 'comp' → logprob: -10.65483283996582
    4. '_id' → logprob: -10.77983283996582
    5. 'Set' → logprob: -11.40483283996582
    6. '   ' → logprob: -12.40483283996582
    7. 'id' → logprob: -12.52983283996582
    8. ')set' → logprob: -12.52983283996582
    9. '           ' → logprob: -13.15483283996582
    10. '[' → logprob: -13.40483283996582

Token 2000: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.09320029616355896
    2. ':' → logprob: -3.218200206756592
    3. '                       ' → logprob: -3.218200206756592
    4. '                   ' → logprob: -5.343200206756592
    5. '):
' → logprob: -6.843200206756592
    6. ' and' → logprob: -6.843200206756592
    7. 'and' → logprob: -7.718200206756592
    8. '<|end|>' → logprob: -7.843200206756592
    9. '       ' → logprob: -8.09320068359375
    10. ',' → logprob: -8.84320068359375

Token 2001: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0010898546315729618
    2. '                   ' → logprob: -7.876090049743652
    3. ' w' → logprob: -8.751090049743652
    4. 'comp' → logprob: -8.751090049743652
    5. '	                   ' → logprob: -9.626090049743652
    6. '<|end|>' → logprob: -9.751090049743652
    7. '```' → logprob: -10.376090049743652
    8. 'w' → logprob: -10.501090049743652
    9. '                           ' → logprob: -10.501090049743652
    10. '                      ' → logprob: -10.626090049743652

Token 2002: ' comp' (ID: 1050)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' (adapté à ' comp') → logprob: -0.002770405262708664
    2. ' comp' → logprob: -7.12777042388916
    3. 'wj' → logprob: -7.25277042388916
    4. '                       ' → logprob: -8.00277042388916
    5. '                           ' → logprob: -8.25277042388916
    6. 'cw' → logprob: -8.37777042388916
    7. 'wv' → logprob: -9.12777042388916
    8. '	comp' → logprob: -10.12777042388916
    9. 'wk' → logprob: -10.25277042388916
    10. 'wid' → logprob: -10.25277042388916

Token 2003: '_adj' (ID: 117293)
  Prédit: 'id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.0454229898750782
    2. 'vid' → logprob: -4.5454230308532715
    3. 'wid' → logprob: -4.5454230308532715
    4. '_id' → logprob: -4.6704230308532715
    5. 'w' → logprob: -5.1704230308532715
    6. 'wd' → logprob: -5.7954230308532715
    7. 'adj' → logprob: -6.2954230308532715
    8. '_w' → logprob: -6.2954230308532715
    9. '_vid' → logprob: -7.6704230308532715
    10. '_adj' → logprob: -8.170422554016113

Token 2004: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.550411151489243e-05
    2. 'comp' → logprob: -10.125055313110352
    3. '           ' → logprob: -12.750055313110352
    4. '               ' → logprob: -12.875055313110352
    5. '   ' → logprob: -13.000055313110352
    6. '       ' → logprob: -13.125055313110352
    7. 'vid' → logprob: -13.125055313110352
    8. '[v' → logprob: -14.000055313110352
    9. '                   ' → logprob: -14.375055313110352
    10. '          ' → logprob: -15.375055313110352

Token 2005: 'vid' (ID: 1429)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.20143672823905945
    2. '[' → logprob: -1.7014367580413818
    3. '(comp' → logprob: -11.451436996459961
    4. '{' → logprob: -12.701436996459961
    5. 'vid' → logprob: -12.951436996459961
    6. 'com' → logprob: -13.451436996459961
    7. ' comp' → logprob: -13.576436996459961
    8. 'cmp' → logprob: -13.701436996459961
    9. '[
' → logprob: -13.951436996459961
    10. 'c' → logprob: -14.701436996459961

Token 2006: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.5775183439254761
    2. '.append' → logprob: -0.8275183439254761
    3. ').' → logprob: -6.827518463134766
    4. 'append' → logprob: -8.452518463134766
    5. '.' → logprob: -8.577518463134766
    6. '[' → logprob: -10.702518463134766
    7. '                   ' → logprob: -10.827518463134766
    8. '[].' → logprob: -12.327518463134766
    9. '>.' → logprob: -12.327518463134766
    10. '.app' → logprob: -12.452518463134766

Token 2007: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -1.2664456789934775e-06
    2. 'appen' → logprob: -14.000000953674316
    3. ' append' → logprob: -15.000000953674316
    4. '.append' → logprob: -16.750001907348633
    5. 'app' → logprob: -17.750001907348633
    6. '_append' → logprob: -19.000001907348633
    7. 'Append' → logprob: -19.875001907348633
    8. '	append' → logprob: -20.000001907348633
    9. '```' → logprob: -20.375001907348633
    10. 'add' → logprob: -20.875001907348633

Token 2008: '(comp' (ID: 60272)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.0001129602751461789
    2. '(comp' → logprob: -9.250112533569336
    3. ' comp' → logprob: -11.000112533569336
    4. '	comp' → logprob: -16.750112533569336
    5. 'com' → logprob: -17.750112533569336
    6. 'cmp' → logprob: -20.250112533569336
    7. '.comp' → logprob: -21.000112533569336
    8. 'compl' → logprob: -21.125112533569336
    9. '   ' → logprob: -21.750112533569336
    10. '(' → logprob: -22.000112533569336

Token 2009: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -3.9292415749514475e-05
    2. 'w' → logprob: -10.625039100646973
    3. 'id' → logprob: -11.750039100646973
    4. 'v' → logprob: -12.500039100646973
    5. '[w' → logprob: -14.000039100646973
    6. '[v' → logprob: -14.500039100646973
    7. 's' → logprob: -15.250039100646973
    8. '(w' → logprob: -15.375039100646973
    9. 'map' → logprob: -15.625039100646973
    10. '_map' → logprob: -15.750039100646973

Token 2010: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -0.0001887591351987794
    2. 'map' → logprob: -8.625188827514648
    3. 'Map' → logprob: -12.125188827514648
    4. 'w' → logprob: -13.375188827514648
    5. 'id' → logprob: -15.250188827514648
    6. 'm' → logprob: -15.250188827514648
    7. 'v' → logprob: -15.375188827514648
    8. ')' → logprob: -15.375188827514648
    9. '_MAP' → logprob: -15.375188827514648
    10. '_id' → logprob: -15.500188827514648

Token 2011: '[w' (ID: 94341)
  Prédit: '[w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[w' → logprob: -0.0003936152206733823
    2. '(w' → logprob: -7.875393390655518
    3. 'w' → logprob: -11.250393867492676
    4. '<w' → logprob: -15.625393867492676
    5. '[(' → logprob: -16.75039291381836
    6. '{' → logprob: -17.00039291381836
    7. '```' → logprob: -17.25039291381836
    8. '[' → logprob: -17.37539291381836
    9. '[
' → logprob: -17.50039291381836
    10. '	w' → logprob: -17.50039291381836

Token 2012: '])

' (ID: 21045)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0012920241570100188
    2. '])
' → logprob: -6.7512922286987305
    3. ')' → logprob: -9.75129222869873
    4. '           ' → logprob: -10.87629222869873
    5. '                   ' → logprob: -11.75129222869873
    6. '       ' → logprob: -11.87629222869873
    7. ')]' → logprob: -12.12629222869873
    8. '               ' → logprob: -12.12629222869873
    9. '])

' → logprob: -12.25129222869873
    10. ')])' → logprob: -12.62629222869873

Token 2013: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00041970983147621155
    2. '
' → logprob: -8.125419616699219
    3. 'import' → logprob: -9.500419616699219
    4. '       ' → logprob: -10.625419616699219
    5. 'from' → logprob: -11.500419616699219
    6. 'for' → logprob: -12.000419616699219
    7. '```' → logprob: -12.500419616699219
    8. '   ' → logprob: -12.625419616699219
    9. '            
' → logprob: -14.500419616699219
    10. '               ' → logprob: -15.000419616699219

Token 2014: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2085573375225067
    2. '           ' → logprob: -1.708557367324829
    3. ' for' → logprob: -5.70855712890625
    4. '```' → logprob: -6.08355712890625
    5. 'from' → logprob: -6.70855712890625
    6. 'import' → logprob: -8.33355712890625
    7. '       ' → logprob: -10.58355712890625
    8. '``' → logprob: -11.58355712890625
    9. 'best' → logprob: -11.70855712890625
    10. '   ' → logprob: -12.45855712890625

Token 2015: ' BFS' (ID: 190016)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.026301106438040733
    2. 'best' → logprob: -3.776301145553589
    3. '           ' → logprob: -6.40130090713501
    4. 'from' → logprob: -7.15130090713501
    5. 'min' → logprob: -8.151301383972168
    6. 'visited' → logprob: -8.901301383972168
    7. 'import' → logprob: -9.151301383972168
    8. 'def' → logprob: -9.776301383972168
    9. '       ' → logprob: -11.651301383972168
    10. ' for' → logprob: -12.401301383972168

Token 2016: ' depuis' (ID: 16277)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0004601015243679285
    2. ' for' → logprob: -8.250459671020508
    3. 'for' → logprob: -9.125459671020508
    4. 'import' → logprob: -10.000459671020508
    5. '
' → logprob: -11.125459671020508
    6. 'from' → logprob: -11.500459671020508
    7. '		' → logprob: -11.625459671020508
    8. ' from' → logprob: -12.500459671020508
    9. '               ' → logprob: -13.375459671020508
    10. '       ' → logprob: -13.750459671020508

Token 2017: ' chaque' (ID: 21194)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.040370479226112366
    2. 'u' → logprob: -3.540370464324951
    3. 'v' → logprob: -4.665370464324951
    4. 'for' → logprob: -7.915370464324951
    5. 'node' → logprob: -8.41537094116211
    6. 'i' → logprob: -8.91537094116211
    7. 'vertex' → logprob: -9.04037094116211
    8. '   ' → logprob: -9.79037094116211
    9. 'src' → logprob: -9.91537094116211
    10. 'source' → logprob: -10.29037094116211

Token 2018: ' sommet' (ID: 130502)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -1.105244755744934
    2. 'som' → logprob: -1.480244755744934
    3. 'start' → logprob: -1.480244755744934
    4. 'node' → logprob: -2.1052446365356445
    5. 'v' → logprob: -2.6052446365356445
    6. 'vertex' → logprob: -4.6052446365356445
    7. ' sommet' → logprob: -5.3552446365356445
    8. 's' → logprob: -6.8552446365356445
    9. 'no' → logprob: -7.2302446365356445
    10. 'src' → logprob: -7.8552446365356445

Token 2019: ' de' (ID: 334)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0008532279753126204
    2. ' for' → logprob: -7.500853061676025
    3. 'for' → logprob: -8.125853538513184
    4. 'import' → logprob: -12.750853538513184
    5. '		' → logprob: -15.000853538513184
    6. '```' → logprob: -15.125853538513184
    7. ',' → logprob: -15.250853538513184
    8. '               ' → logprob: -15.875853538513184
    9. '	       ' → logprob: -16.125852584838867
    10. 'from' → logprob: -16.375852584838867

Token 2020: ' la' (ID: 557)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.09054365754127502
    2. 'comp' → logprob: -2.465543746948242
    3. ' range' → logprob: -7.340543746948242
    4. 'la' → logprob: -7.340543746948242
    5. '0' → logprob: -8.715543746948242
    6. '```' → logprob: -10.340543746948242
    7. 'com' → logprob: -10.465543746948242
    8. 'size' → logprob: -10.590543746948242
    9. '   ' → logprob: -11.590543746948242
    10. ' comp' → logprob: -11.840543746948242

Token 2021: ' compos' (ID: 14635)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.002023804932832718
    2. 'comp' → logprob: -6.252023696899414
    3. ' range' → logprob: -10.377023696899414
    4. '```' → logprob: -11.127023696899414
    5. 'com' → logprob: -11.252023696899414
    6. 'for' → logprob: -11.627023696899414
    7. 'rang' → logprob: -12.002023696899414
    8. '0' → logprob: -12.127023696899414
    9. 'component' → logprob: -12.252023696899414
    10. '   ' → logprob: -13.502023696899414

Token 2022: 'ante' (ID: 2116)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.40179193019866943
    2. 'pon' → logprob: -2.026792049407959
    3. 'p' → logprob: -2.901792049407959
    4. 'ponente' → logprob: -3.151792049407959
    5. 'ponent' → logprob: -3.401792049407959
    6. 'on' → logprob: -4.151792049407959
    7. 'ante' → logprob: -4.276792049407959
    8. 'ente' → logprob: -5.151792049407959
    9. 'pone' → logprob: -5.151792049407959
    10. 'onte' → logprob: -5.651792049407959

Token 2023: ' pour' (ID: 1930)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006116729229688644
    2. 'for' → logprob: -5.63111686706543
    3. ' for' → logprob: -6.00611686706543
    4. 'import' → logprob: -10.38111686706543
    5. '       ' → logprob: -11.75611686706543
    6. '```' → logprob: -12.75611686706543
    7. 'from' → logprob: -13.13111686706543
    8. '   ' → logprob: -13.75611686706543
    9. '               ' → logprob: -14.13111686706543
    10. '	       ' → logprob: -14.38111686706543

Token 2024: ' génér' (ID: 18939)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.09315632283687592
    2. ' range' → logprob: -3.718156337738037
    3. 'start' → logprob: -3.718156337738037
    4. 'find' → logprob: -4.468156337738037
    5. 'for' → logprob: -4.843156337738037
    6. 'i' → logprob: -5.468156337738037
    7. ' trouver' → logprob: -6.218156337738037
    8. '```' → logprob: -6.468156337738037
    9. 'expand' → logprob: -6.593156337738037
    10. 'v' → logprob: -6.718156337738037

Token 2025: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.00666078832000494
    2. 'iter' → logprob: -5.8816609382629395
    3. 'érer' → logprob: -6.6316609382629395
    4. 'chercher' → logprob: -6.7566609382629395
    5. '```' → logprob: -8.006660461425781
    6. 'e' → logprob: -8.881660461425781
    7. 'enumer' → logprob: -8.881660461425781
    8. 'ate' → logprob: -9.631660461425781
    9. 'import' → logprob: -9.881660461425781
    10. 'ér' → logprob: -9.881660461425781

Token 2026: ' un' (ID: 537)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comp' → logprob: -1.117417335510254
    2. 'range' → logprob: -1.867417335510254
    3. 'size' → logprob: -2.242417335510254
    4. '0' → logprob: -2.492417335510254
    5. 'k' → logprob: -2.867417335510254
    6. 'i' → logprob: -3.117417335510254
    7. 'start' → logprob: -3.242417335510254
    8. 'for' → logprob: -3.742417335510254
    9. 'que' → logprob: -4.117417335510254
    10. '   ' → logprob: -4.367417335510254

Token 2027: ' sous' (ID: 14487)
  Prédit: 'subset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'subset' → logprob: -0.33819106221199036
    2. 'queue' → logprob: -1.588191032409668
    3. 'deque' → logprob: -3.963191032409668
    4. 'ensemble' → logprob: -4.463191032409668
    5. 'sub' → logprob: -4.713191032409668
    6. 'set' → logprob: -4.838191032409668
    7. 'connected' → logprob: -5.338191032409668
    8. 'visited' → logprob: -5.713191032409668
    9. 'k' → logprob: -5.963191032409668
    10. '```' → logprob: -5.963191032409668

Token 2028: '-' (ID: 12)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.013859412632882595
    2. 'ensemble' → logprob: -5.263859272003174
    3. '-' → logprob: -5.513859272003174
    4. 'gr' → logprob: -6.388859272003174
    5. '-gr' → logprob: -6.763859272003174
    6. '_graph' → logprob: -7.638859272003174
    7. '```' → logprob: -7.888859272003174
    8. '_gr' → logprob: -8.513859748840332
    9. '-set' → logprob: -9.138859748840332
    10. '   ' → logprob: -9.263859748840332

Token 2029: 'ensemble' (ID: 37301)
  Prédit: 'gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gr' → logprob: -0.25956910848617554
    2. 'graph' → logprob: -1.5095691680908203
    3. 'ensemble' → logprob: -4.88456916809082
    4. '```' → logprob: -10.25956916809082
    5. 'set' → logprob: -12.38456916809082
    6. 'g' → logprob: -13.00956916809082
    7. 'som' → logprob: -13.75956916809082
    8. '
' → logprob: -14.13456916809082
    9. 'ense' → logprob: -14.38456916809082
    10. 'com' → logprob: -14.50956916809082

Token 2030: ' conn' (ID: 10850)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11737598478794098
    2. '```' → logprob: -3.2423760890960693
    3. 'for' → logprob: -3.8673760890960693
    4. ' de' → logprob: -4.74237585067749
    5. ' for' → logprob: -4.99237585067749
    6. ' (' → logprob: -5.49237585067749
    7. '               ' → logprob: -5.61737585067749
    8. 'de' → logprob: -5.99237585067749
    9. ',' → logprob: -6.11737585067749
    10. '(
' → logprob: -6.11737585067749

Token 2031: 'exe' (ID: 70589)
  Prédit: 'exe'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exe' → logprob: -0.008171500638127327
    2. 'ect' → logprob: -5.133171558380127
    3. 'ex' → logprob: -6.508171558380127
    4. 'n' → logprob: -8.758171081542969
    5. '```' → logprob: -8.883171081542969
    6. 'nect' → logprob: -9.383171081542969
    7. 'exec' → logprob: -10.258171081542969
    8. 'exp' → logprob: -10.383171081542969
    9. '   ' → logprob: -10.508171081542969
    10. '\' → logprob: -10.633171081542969

Token 2032: ' de' (ID: 334)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007110913284122944
    2. 'for' → logprob: -5.257111072540283
    3. ' for' → logprob: -6.382111072540283
    4. 'import' → logprob: -9.882110595703125
    5. '```' → logprob: -10.507110595703125
    6. ',' → logprob: -11.132110595703125
    7. 'à' → logprob: -11.257110595703125
    8. '       ' → logprob: -11.507110595703125
    9. ' pour' → logprob: -12.132110595703125
    10. '   ' → logprob: -12.132110595703125

Token 2033: ' taille' (ID: 41644)
  Prédit: 'tail'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tail' → logprob: -0.0059936209581792355
    2. 'size' → logprob: -5.755993843078613
    3. 'k' → logprob: -6.630993843078613
    4. ' taille' → logprob: -7.505993843078613
    5. 'ta' → logprob: -7.630993843078613
    6. '   ' → logprob: -8.755993843078613
    7. 'la' → logprob: -8.880993843078613
    8. 'c' → logprob: -10.005993843078613
    9. 'tails' → logprob: -10.505993843078613
    10. 't' → logprob: -11.005993843078613

Token 2034: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0005440961103886366
    2. ' k' → logprob: -7.75054407119751
    3. '```' → logprob: -9.500544548034668
    4. '
' → logprob: -11.500544548034668
    5. '1' → logprob: -11.625544548034668
    6. 'exact' → logprob: -12.000544548034668
    7. '{k' → logprob: -12.625544548034668
    8. '=k' → logprob: -13.500544548034668
    9. '``' → logprob: -13.625544548034668
    10. '_k' → logprob: -13.750544548034668

Token 2035: ' minimal' (ID: 19957)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.282920129597187e-05
    2. '
' → logprob: -12.500012397766113
    3. ' for' → logprob: -12.625012397766113
    4. 'for' → logprob: -13.125012397766113
    5. 'import' → logprob: -13.625012397766113
    6. ',' → logprob: -14.375012397766113
    7. '       ' → logprob: -14.500012397766113
    8. '            
' → logprob: -14.875012397766113
    9. '               ' → logprob: -15.250012397766113
    10. '<|end|>' → logprob: -15.250012397766113

Token 2036: ' en' (ID: 469)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0002887490263674408
    2. '
' → logprob: -8.375288963317871
    3. ' for' → logprob: -10.875288963317871
    4. '       ' → logprob: -11.500288963317871
    5. 'for' → logprob: -11.625288963317871
    6. 'import' → logprob: -11.750288963317871
    7. ',' → logprob: -12.250288963317871
    8. '            
' → logprob: -13.000288963317871
    9. '               ' → logprob: -13.750288963317871
    10. '   ' → logprob: -14.125288963317871

Token 2037: ' surface' (ID: 9753)
  Prédit: 'surface'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'surface' → logprob: -0.030420931056141853
    2. 'nombre' → logprob: -4.405420780181885
    3. 'tail' → logprob: -4.780420780181885
    4. 'distance' → logprob: -4.905420780181885
    5. ' surface' → logprob: -6.905420780181885
    6. 'term' → logprob: -8.780421257019043
    7. 'termin' → logprob: -9.030421257019043
    8. '```' → logprob: -9.155421257019043
    9. 'pro' → logprob: -9.780421257019043
    10. 'terms' → logprob: -9.780421257019043

Token 2038: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -5.9153885558771435e-06
    2. ' for' → logprob: -13.500005722045898
    3. '       ' → logprob: -13.500005722045898
    4. 'for' → logprob: -13.875005722045898
    5. 'import' → logprob: -14.000005722045898
    6. '
' → logprob: -14.250005722045898
    7. '               ' → logprob: -16.1250057220459
    8. '          ' → logprob: -16.2500057220459
    9. ',' → logprob: -16.3750057220459
    10. '            
' → logprob: -16.3750057220459

Token 2039: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00018041854491457343
    2. '       ' → logprob: -8.8751802444458
    3. 'for' → logprob: -11.3751802444458
    4. '```' → logprob: -11.3751802444458
    5. '   ' → logprob: -12.3751802444458
    6. ' for' → logprob: -12.6251802444458
    7. '		' → logprob: -12.6251802444458
    8. 'import' → logprob: -13.3751802444458
    9. '	       ' → logprob: -13.3751802444458
    10. '               ' → logprob: -13.5001802444458

Token 2040: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0008082019630819559
    2. 'for' → logprob: -7.250808238983154
    3. ' for' → logprob: -9.375807762145996
    4. '       ' → logprob: -11.625807762145996
    5. '               ' → logprob: -13.250807762145996
    6. '   ' → logprob: -13.875807762145996
    7. '```' → logprob: -13.875807762145996
    8. 'import' → logprob: -15.125807762145996
    9. 'from' → logprob: -15.750807762145996
    10. '          ' → logprob: -15.875807762145996

Token 2041: ' On' (ID: 2160)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.000777707842644304
    2. 'for' → logprob: -7.250777721405029
    3. ' for' → logprob: -9.750777244567871
    4. '```' → logprob: -12.125777244567871
    5. '       ' → logprob: -13.375777244567871
    6. 'import' → logprob: -13.750777244567871
    7. '               ' → logprob: -14.375777244567871
    8. 'from' → logprob: -15.250777244567871
    9. '   ' → logprob: -15.875777244567871
    10. '		' → logprob: -16.000778198242188

Token 2042: ' limite' (ID: 48939)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07938068360090256
    2. 'import' → logprob: -3.454380750656128
    3. '       ' → logprob: -3.704380750656128
    4. '           ' → logprob: -5.454380512237549
    5. 'from' → logprob: -5.704380512237549
    6. ' for' → logprob: -5.954380512237549
    7. '```' → logprob: -6.579380512237549
    8. 'can' → logprob: -7.204380512237549
    9. 'range' → logprob: -7.204380512237549
    10. '   ' → logprob: -7.329380512237549

Token 2043: ' la' (ID: 557)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.4669567346572876
    2. '```' → logprob: -1.4669567346572876
    3. 'la' → logprob: -2.216956615447998
    4. ' la' → logprob: -2.466956615447998
    5. '               ' → logprob: -2.966956615447998
    6. 'le' → logprob: -3.341956615447998
    7. 'k' → logprob: -3.341956615447998
    8. 'l' → logprob: -3.341956615447998
    9. 'for' → logprob: -3.716956615447998
    10. 'max' → logprob: -3.841956615447998

Token 2044: ' recherche' (ID: 24975)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.09020038694143295
    2. 'queue' → logprob: -3.340200424194336
    3. 'range' → logprob: -3.965200424194336
    4. '```' → logprob: -4.590200424194336
    5. 'import' → logprob: -5.215200424194336
    6. ' for' → logprob: -5.340200424194336
    7. 'depth' → logprob: -6.090200424194336
    8. '   ' → logprob: -6.340200424194336
    9. 'pro' → logprob: -6.340200424194336
    10. 'size' → logprob: -6.715200424194336

Token 2045: ',' (ID: 11)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.7151622772216797
    2. '           ' → logprob: -1.5901622772216797
    3. '       ' → logprob: -1.8401622772216797
    4. 'à' → logprob: -2.3401622772216797
    5. '```' → logprob: -4.09016227722168
    6. ' =' → logprob: -5.21516227722168
    7. ' to' → logprob: -5.21516227722168
    8. ':' → logprob: -5.46516227722168
    9. ':
' → logprob: -5.59016227722168
    10. ' aux' → logprob: -5.59016227722168

Token 2046: ' on' (ID: 402)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.8141557574272156
    2. '           ' → logprob: -1.0641558170318604
    3. '       ' → logprob: -1.9391558170318604
    4. 'for' → logprob: -3.8141558170318604
    5. '               ' → logprob: -4.189155578613281
    6. ' for' → logprob: -4.814155578613281
    7. '                   ' → logprob: -5.314155578613281
    8. ' ' → logprob: -6.189155578613281
    9. 'max' → logprob: -6.314155578613281
    10. '
' → logprob: -6.314155578613281

Token 2047: ' mém' (ID: 136981)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.2400360107421875
    2. 'for' → logprob: -1.2400360107421875
    3. 'continue' → logprob: -1.4900360107421875
    4. '       ' → logprob: -3.1150360107421875
    5. ' continue' → logprob: -3.3650360107421875
    6. ' for' → logprob: -3.8650360107421875
    7. '   ' → logprob: -4.2400360107421875
    8. 'contin' → logprob: -4.3650360107421875
    9. '```' → logprob: -4.9900360107421875
    10. 'expl' → logprob: -5.4900360107421875

Token 2048: 'or' (ID: 267)
  Prédit: 'or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.023238837718963623
    2. 'oire' → logprob: -5.398238658905029
    3. 'ory' → logprob: -5.773238658905029
    4. 'ém' → logprob: -6.148238658905029
    5. 'orie' → logprob: -6.148238658905029
    6. 'mor' → logprob: -6.273238658905029
    7. 'oris' → logprob: -6.648238658905029
    8. '```' → logprob: -6.773238658905029
    9. 'orit' → logprob: -6.898238658905029
    10. 'rise' → logprob: -7.273238658905029

Token 2049: 'ise' (ID: 1096)
  Prédit: 'ise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ise' → logprob: -0.5707144737243652
    2. 'ize' → logprob: -0.9457144737243652
    3. 'aise' → logprob: -3.5707144737243652
    4. 'is' → logprob: -4.945714473724365
    5. 'iser' → logprob: -6.070714473724365
    6. 'oise' → logprob: -6.445714473724365
    7. 'izes' → logprob: -7.070714473724365
    8. 'ilise' → logprob: -7.570714473724365
    9. 'isere' → logprob: -7.695714473724365
    10. 'ase' → logprob: -7.820714473724365

Token 2050: ' le' (ID: 505)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -1.125293493270874
    2. '```' → logprob: -1.250293493270874
    3. '           ' → logprob: -2.250293493270874
    4. ' visited' → logprob: -3.375293493270874
    5. '               ' → logprob: -3.625293493270874
    6. '       ' → logprob: -3.875293493270874
    7. '                   ' → logprob: -4.000293731689453
    8. '   ' → logprob: -4.000293731689453
    9. ' la' → logprob: -4.125293731689453
    10. 'max' → logprob: -4.500293731689453

Token 2051: ' plus' (ID: 2932)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.028102878481149673
    2. ' best' → logprob: -4.778102874755859
    3. 'min' → logprob: -5.403102874755859
    4. 'me' → logprob: -5.653102874755859
    5. 'visited' → logprob: -5.778102874755859
    6. 'queue' → logprob: -6.153102874755859
    7. 'next' → logprob: -6.153102874755859
    8. 'import' → logprob: -7.153102874755859
    9. 'minimum' → logprob: -7.653102874755859
    10. '```' → logprob: -7.653102874755859

Token 2052: ' petit' (ID: 20577)
  Prédit: 'pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pro' → logprob: -0.002294182777404785
    2. 'court' → logprob: -7.377294063568115
    3. '```' → logprob: -7.377294063568115
    4. 'prox' → logprob: -7.627294063568115
    5. '_pro' → logprob: -8.752294540405273
    6. 'prob' → logprob: -9.002294540405273
    7. 'pet' → logprob: -9.377294540405273
    8. '
' → logprob: -10.752294540405273
    9. 'c' → logprob: -11.002294540405273
    10. 'près' → logprob: -11.002294540405273

Token 2053: ' surface' (ID: 9753)
  Prédit: 'surface'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'surface' → logprob: -0.19660554826259613
    2. ' surface' → logprob: -1.9466055631637573
    3. 'ans' → logprob: -4.321605682373047
    4. ' ans' → logprob: -4.696605682373047
    5. '_surface' → logprob: -5.446605682373047
    6. '```' → logprob: -6.196605682373047
    7. 'distance' → logprob: -6.821605682373047
    8. 'token' → logprob: -7.071605682373047
    9. 'sur' → logprob: -7.071605682373047
    10. 'cost' → logprob: -7.321605682373047

Token 2054: ' vu' (ID: 12005)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12061645090579987
    2. '       ' → logprob: -2.4956164360046387
    3. '
' → logprob: -4.495616436004639
    4. 'found' → logprob: -5.870616436004639
    5. '               ' → logprob: -5.995616436004639
    6. ' =' → logprob: -5.995616436004639
    7. '```' → logprob: -6.120616436004639
    8. 'possible' → logprob: -6.370616436004639
    9. ' for' → logprob: -6.620616436004639
    10. 'for' → logprob: -6.745616436004639

Token 2055: '

' (ID: 279)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03196559101343155
    2. '
' → logprob: -3.656965494155884
    3. '       ' → logprob: -5.656965732574463
    4. '```' → logprob: -6.781965732574463
    5. 'for' → logprob: -8.531965255737305
    6. '            
' → logprob: -8.781965255737305
    7. ' for' → logprob: -9.156965255737305
    8. ',' → logprob: -9.156965255737305
    9. ' =' → logprob: -9.406965255737305
    10. '               ' → logprob: -9.406965255737305

Token 2056: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -8.661626634420827e-05
    2. '       ' → logprob: -10.250086784362793
    3. 'for' → logprob: -10.500086784362793
    4. '
' → logprob: -11.000086784362793
    5. 'import' → logprob: -13.000086784362793
    6. '```' → logprob: -13.000086784362793
    7. '   ' → logprob: -13.875086784362793
    8. '               ' → logprob: -14.250086784362793
    9. ' for' → logprob: -14.750086784362793
    10. 'from' → logprob: -15.875086784362793

Token 2057: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06294893473386765
    2. 'for' → logprob: -2.8129489421844482
    3. '```' → logprob: -7.937948703765869
    4. 'from' → logprob: -8.062949180603027
    5. ' for' → logprob: -8.687949180603027
    6. 'import' → logprob: -9.187949180603027
    7. '       ' → logprob: -10.812949180603027
    8. '               ' → logprob: -12.312949180603027
    9. '
' → logprob: -12.312949180603027
    10. '   ' → logprob: -12.562949180603027

Token 2058: ' NB' (ID: 68568)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2066400647163391
    2. '           ' → logprob: -1.7066400051116943
    3. '       ' → logprob: -5.956640243530273
    4. 'best' → logprob: -6.206640243530273
    5. ' for' → logprob: -8.456640243530273
    6. 'visited' → logprob: -9.331640243530273
    7. 'import' → logprob: -9.581640243530273
    8. '   ' → logprob: -9.706640243530273
    9. '
' → logprob: -9.956640243530273
    10. '```' → logprob: -10.206640243530273

Token 2059: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.29836538434028625
    2. '       ' → logprob: -2.673365354537964
    3. '=' → logprob: -2.923365354537964
    4. ':' → logprob: -3.673365354537964
    5. 'for' → logprob: -3.673365354537964
    6. '```' → logprob: -3.673365354537964
    7. '
' → logprob: -3.923365354537964
    8. '           ' → logprob: -4.423365592956543
    9. '_' → logprob: -4.923365592956543
    10. ':
' → logprob: -5.048365592956543

Token 2060: ' Pour' (ID: 13931)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -1.1345767974853516
    2. '           ' → logprob: -1.3845767974853516
    3. ' for' → logprob: -1.7595767974853516
    4. 'for' → logprob: -2.1345767974853516
    5. '```' → logprob: -2.7595767974853516
    6. '
' → logprob: -3.5095767974853516
    7. '       ' → logprob: -4.509576797485352
    8. 'import' → logprob: -4.759576797485352
    9. 'from' → logprob: -5.134576797485352
    10. ' visited' → logprob: -5.259576797485352

Token 2061: ' éviter' (ID: 64013)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.16270855069160461
    2. 'u' → logprob: -2.7877085208892822
    3. ' v' → logprob: -3.4127085208892822
    4. 'vid' → logprob: -3.5377085208892822
    5. 'start' → logprob: -4.662708759307861
    6. 'i' → logprob: -5.412708759307861
    7. ' u' → logprob: -5.912708759307861
    8. 'comp' → logprob: -5.912708759307861
    9. ' start' → logprob: -6.412708759307861
    10. ' vid' → logprob: -6.662708759307861

Token 2062: ' explosion' (ID: 53199)
  Prédit: ' continuer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continuer' → logprob: -1.5963690280914307
    2. 'visited' → logprob: -2.0963690280914307
    3. '```' → logprob: -2.4713690280914307
    4. 'v' → logprob: -3.0963690280914307
    5. ' la' → logprob: -3.0963690280914307
    6. ' rép' → logprob: -3.0963690280914307
    7. 'i' → logprob: -3.2213690280914307
    8. ' visiter' → logprob: -3.5963690280914307
    9. 'w' → logprob: -3.7213690280914307
    10. 'import' → logprob: -3.8463690280914307

Token 2063: ' mém' (ID: 136981)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.165043592453003
    2. ' des' → logprob: -1.290043592453003
    3. 'de' → logprob: -1.790043592453003
    4. 'des' → logprob: -1.915043592453003
    5. 'expl' → logprob: -4.040043830871582
    6. ',' → logprob: -4.040043830871582
    7. 'd' → logprob: -4.790043830871582
    8. 's' → logprob: -5.040043830871582
    9. ' du' → logprob: -5.040043830871582
    10. '<|end|>' → logprob: -5.290043830871582

Token 2064: 'or' (ID: 267)
  Prédit: 'oire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'oire' → logprob: -0.6204115152359009
    2. 'ory' → logprob: -0.8704115152359009
    3. 'moire' → logprob: -4.245411396026611
    4. '
' → logprob: -4.370411396026611
    5. '   ' → logprob: -5.245411396026611
    6. 'orie' → logprob: -5.495411396026611
    7. '```' → logprob: -6.495411396026611
    8. '       ' → logprob: -6.745411396026611
    9. '               ' → logprob: -7.370411396026611
    10. '        
' → logprob: -7.745411396026611

Token 2065: 'ielle' (ID: 22380)
  Prédit: 'oire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'oire' → logprob: -0.05547679588198662
    2. 'ory' → logprob: -3.0554769039154053
    3. 'ry' → logprob: -6.180476665496826
    4. '```' → logprob: -6.305476665496826
    5. 'o' → logprob: -8.430477142333984
    6. '        
' → logprob: -8.430477142333984
    7. '       ' → logprob: -8.555477142333984
    8. 'oir' → logprob: -8.680477142333984
    9. '   ' → logprob: -8.805477142333984
    10. '
' → logprob: -8.805477142333984

Token 2066: ' on' (ID: 402)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.30470800399780273
    2. ',' → logprob: -1.5547080039978027
    3. ':' → logprob: -4.679708003997803
    4. ',
' → logprob: -4.679708003997803
    5. '#' → logprob: -4.929708003997803
    6. ':
' → logprob: -5.304708003997803
    7. '       ' → logprob: -5.429708003997803
    8. '               ' → logprob: -6.179708003997803
    9. '            
' → logprob: -6.179708003997803
    10. '
' → logprob: -6.429708003997803

Token 2067: ' év' (ID: 23692)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -1.0480672121047974
    2. ' continue' → logprob: -1.9230672121047974
    3. '#' → logprob: -2.298067092895508
    4. 'contin' → logprob: -2.673067092895508
    5. 'lim' → logprob: -3.173067092895508
    6. 'limit' → logprob: -3.423067092895508
    7. 'for' → logprob: -3.673067092895508
    8. '           ' → logprob: -3.798067092895508
    9. 'n' → logprob: -3.798067092895508
    10. '```' → logprob: -4.173067092895508

Token 2068: 'ite' (ID: 651)
  Prédit: 'iter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iter' → logprob: -0.3854843080043793
    2. 'it' → logprob: -2.135484218597412
    3. 'ité' → logprob: -3.135484218597412
    4. 'ite' → logprob: -3.510484218597412
    5. '   ' → logprob: -4.385484218597412
    6. 'm' → logprob: -4.510484218597412
    7. 'itera' → logprob: -4.510484218597412
    8. 'ém' → logprob: -4.760484218597412
    9. 'iterr' → logprob: -5.135484218597412
    10. 'é' → logprob: -5.260484218597412

Token 2069: ' mém' (ID: 136981)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.7702133059501648
    2. 'de' → logprob: -1.8952133655548096
    3. 'expl' → logprob: -2.0202133655548096
    4. 'contin' → logprob: -2.5202133655548096
    5. 'exp' → logprob: -3.1452133655548096
    6. ' de' → logprob: -3.5202133655548096
    7. 'les' → logprob: -4.6452131271362305
    8. '```' → logprob: -4.6452131271362305
    9. 'stock' → logprob: -4.8952131271362305
    10. '       ' → logprob: -5.0202131271362305

Token 2070: 'or' (ID: 267)
  Prédit: 'or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.14850947260856628
    2. '   ' → logprob: -3.2735095024108887
    3. 'oris' → logprob: -3.2735095024108887
    4. '                   ' → logprob: -4.398509502410889
    5. '               ' → logprob: -4.898509502410889
    6. 'ory' → logprob: -5.023509502410889
    7. '       ' → logprob: -5.148509502410889
    8. '```' → logprob: -5.523509502410889
    9. 'ém' → logprob: -6.398509502410889
    10. '
' → logprob: -6.398509502410889

Token 2071: 'iser' (ID: 7466)
  Prédit: 'iser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iser' → logprob: -0.01274919230490923
    2. 'isé' → logprob: -4.512749195098877
    3. 'isés' → logprob: -7.262749195098877
    4. 'isées' → logprob: -8.137748718261719
    5. 'isée' → logprob: -8.262748718261719
    6. 'izer' → logprob: -8.387748718261719
    7. 'ser' → logprob: -10.012748718261719
    8. 'is' → logprob: -10.387748718261719
    9. '
' → logprob: -10.387748718261719
    10. '```' → logprob: -11.012748718261719

Token 2072: ' ensembles' (ID: 144172)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -1.2668620347976685
    2. 'sets' → logprob: -2.266861915588379
    3. 'd' → logprob: -2.391861915588379
    4. 'states' → logprob: -3.016861915588379
    5. '```' → logprob: -3.141861915588379
    6. 'state' → logprob: -3.391861915588379
    7. 'contin' → logprob: -3.391861915588379
    8. ')' → logprob: -3.891861915588379
    9. ' sets' → logprob: -3.891861915588379
    10. 'deque' → logprob: -4.016861915588379

Token 2073: ' ent' (ID: 1121)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.018485860899090767
    2. '       ' → logprob: -4.268486022949219
    3. '
' → logprob: -6.018486022949219
    4. '            
' → logprob: -7.268486022949219
    5. ',' → logprob: -8.143486022949219
    6. '   ' → logprob: -8.268486022949219
    7. '        
' → logprob: -9.393486022949219
    8. '```' → logprob: -9.393486022949219
    9. ',
' → logprob: -9.518486022949219
    10. 'for' → logprob: -9.518486022949219

Token 2074: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.0260475967079401
    2. 'ières' → logprob: -4.026047706604004
    3. 'i' → logprob: -5.526047706604004
    4. 'ier' → logprob: -5.901047706604004
    5. 'ière' → logprob: -7.026047706604004
    6. 'ires' → logprob: -9.026047706604004
    7. '```' → logprob: -9.901047706604004
    8. '
' → logprob: -10.901047706604004
    9. 'ieres' → logprob: -11.026047706604004
    10. '   ' → logprob: -11.651047706604004

Token 2075: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.26314017176628113
    2. '           ' → logprob: -2.2631402015686035
    3. '```' → logprob: -3.1381402015686035
    4. '   ' → logprob: -4.1381402015686035
    5. '
' → logprob: -4.3881402015686035
    6. ',' → logprob: -4.7631402015686035
    7. ':' → logprob: -4.8881402015686035
    8. ',
' → logprob: -5.3881402015686035
    9. 'for' → logprob: -5.3881402015686035
    10. ')' → logprob: -5.5131402015686035

Token 2076: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00913245975971222
    2. 'for' → logprob: -5.884132385253906
    3. '```' → logprob: -6.134132385253906
    4. '       ' → logprob: -6.384132385253906
    5. '               ' → logprob: -7.009132385253906
    6. ' for' → logprob: -7.009132385253906
    7. '
' → logprob: -8.759132385253906
    8. '                   ' → logprob: -9.009132385253906
    9. '`' → logprob: -9.384132385253906
    10. 'v' → logprob: -10.259132385253906

Token 2077: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16071189939975739
    2. ' for' → logprob: -2.5357120037078857
    3. 'for' → logprob: -3.2857120037078857
    4. '```' → logprob: -4.035711765289307
    5. '       ' → logprob: -4.785711765289307
    6. '
' → logprob: -6.285711765289307
    7. '               ' → logprob: -7.035711765289307
    8. '   ' → logprob: -7.660711765289307
    9. '``' → logprob: -7.660711765289307
    10. '            
' → logprob: -8.035712242126465

Token 2078: ' Nous' (ID: 20193)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3091766834259033
    2. 'for' → logprob: -1.5591766834259033
    3. '       ' → logprob: -3.9341766834259033
    4. '```' → logprob: -4.059176445007324
    5. ' for' → logprob: -4.809176445007324
    6. 'visited' → logprob: -5.934176445007324
    7. '               ' → logprob: -6.434176445007324
    8. '
' → logprob: -6.559176445007324
    9. 'v' → logprob: -6.809176445007324
    10. 'from' → logprob: -7.059176445007324

Token 2079: ' faisons' (ID: 168808)
  Prédit: ' allons'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' allons' → logprob: -0.5663973689079285
    2. ' continuer' → logprob: -2.3163974285125732
    3. ' continu' → logprob: -2.8163974285125732
    4. '#' → logprob: -3.3163974285125732
    5. '       ' → logprob: -3.6913974285125732
    6. '           ' → logprob: -3.9413974285125732
    7. ' utilis' → logprob: -4.066397190093994
    8. 'n' → logprob: -4.316397190093994
    9. '```' → logprob: -4.316397190093994
    10. '   ' → logprob: -4.441397190093994

Token 2080: ' un' (ID: 537)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.06043218448758125
    2. 'un' → logprob: -3.685432195663452
    3. ' une' → logprob: -4.435431957244873
    4. ' uniquement' → logprob: -5.810431957244873
    5. ' simplement' → logprob: -5.935431957244873
    6. 'simple' → logprob: -5.935431957244873
    7. ' seulement' → logprob: -6.060431957244873
    8. ' un' → logprob: -6.310431957244873
    9. 'uni' → logprob: -6.310431957244873
    10. '```' → logprob: -6.810431957244873

Token 2081: ' BFS' (ID: 190016)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2897471785545349
    2. 'simple' → logprob: -2.5397472381591797
    3. ' for' → logprob: -2.7897472381591797
    4. 'queue' → logprob: -3.0397472381591797
    5. '```' → logprob: -4.53974723815918
    6. 'b' → logprob: -4.66474723815918
    7. 'from' → logprob: -4.78974723815918
    8. 'deque' → logprob: -5.03974723815918
    9. 'B' → logprob: -5.16474723815918
    10. ' simple' → logprob: -5.28974723815918

Token 2082: ' normal' (ID: 6078)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.659732699394226
    2. '           ' → logprob: -2.5347328186035156
    3. 'à' → logprob: -2.7847328186035156
    4. ',' → logprob: -2.7847328186035156
    5. '(
' → logprob: -2.7847328186035156
    6. '(' → logprob: -2.9097328186035156
    7. ' à' → logprob: -3.2847328186035156
    8. ' for' → logprob: -3.2847328186035156
    9. '(u' → logprob: -3.5347328186035156
    10. 'from' → logprob: -3.5347328186035156

Token 2083: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.18193665146827698
    2. 'for' → logprob: -2.056936740875244
    3. ' for' → logprob: -3.681936740875244
    4. '       ' → logprob: -5.056936740875244
    5. '
' → logprob: -6.556936740875244
    6. '   ' → logprob: -6.931936740875244
    7. '```' → logprob: -6.931936740875244
    8. '()' → logprob: -7.306936740875244
    9. ',' → logprob: -7.431936740875244
    10. 'import' → logprob: -8.306936264038086

Token 2084: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08545222878456116
    2. '```' → logprob: -2.9604523181915283
    3. 'for' → logprob: -3.7104523181915283
    4. ' for' → logprob: -5.710452079772949
    5. '       ' → logprob: -6.460452079772949
    6. '               ' → logprob: -7.835452079772949
    7. '``' → logprob: -8.58545207977295
    8. '   ' → logprob: -9.08545207977295
    9. '                   ' → logprob: -10.83545207977295
    10. '            
' → logprob: -11.58545207977295

Token 2085: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6369300484657288
    2. '           ' → logprob: -1.011929988861084
    3. ' for' → logprob: -2.261929988861084
    4. '```' → logprob: -6.136929988861084
    5. '       ' → logprob: -7.511929988861084
    6. '               ' → logprob: -8.761930465698242
    7. '   ' → logprob: -8.761930465698242
    8. '
' → logprob: -8.886930465698242
    9. '``' → logprob: -9.511930465698242
    10. '#' (adapté à ' #') → logprob: -10.136930465698242

Token 2086: ' Pendant' (ID: 83743)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.18466131389141083
    2. '           ' → logprob: -2.434661388397217
    3. ' for' → logprob: -3.059661388397217
    4. '```' → logprob: -3.559661388397217
    5. '       ' → logprob: -6.059661388397217
    6. '``' → logprob: -7.184661388397217
    7. 'visited' → logprob: -7.184661388397217
    8. '   ' → logprob: -7.434661388397217
    9. '
' → logprob: -7.934661388397217
    10. '               ' → logprob: -8.434660911560059

Token 2087: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.2407698780298233
    2. 'que' → logprob: -2.115769863128662
    3. 'le' → logprob: -3.365769863128662
    4. 'l' → logprob: -3.615769863128662
    5. ' que' → logprob: -4.365769863128662
    6. ' la' → logprob: -4.990769863128662
    7. ' chaque' → logprob: -5.740769863128662
    8. '           ' → logprob: -5.990769863128662
    9. 'cha' → logprob: -6.490769863128662
    10. '   ' → logprob: -7.240769863128662

Token 2088: ' BFS' (ID: 190016)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 're' → logprob: -0.5626893639564514
    2. 'expl' → logprob: -2.0626893043518066
    3. 'for' → logprob: -2.6876893043518066
    4. '#' → logprob: -2.6876893043518066
    5. 'construction' → logprob: -3.4376893043518066
    6. 'while' → logprob: -3.9376893043518066
    7. 'bou' → logprob: -3.9376893043518066
    8. 'queue' → logprob: -4.437689304351807
    9. '
' → logprob: -4.562689304351807
    10. 'b' → logprob: -4.812689304351807

Token 2089: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.4714583158493042
    2. '           ' → logprob: -1.4714583158493042
    3. '(u' → logprob: -1.8464583158493042
    4. ':' → logprob: -2.7214584350585938
    5. ':
' → logprob: -2.8464584350585938
    6. ' =' → logprob: -2.9714584350585938
    7. 'for' → logprob: -3.4714584350585938
    8. '
' → logprob: -3.9714584350585938
    9. ',
' → logprob: -4.096458435058594
    10. '```' → logprob: -4.221458435058594

Token 2090: ' on' (ID: 402)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.3268030881881714
    2. ' on' → logprob: -2.576803207397461
    3. '           ' → logprob: -2.701803207397461
    4. 'visited' → logprob: -2.826803207397461
    5. 'for' → logprob: -4.076803207397461
    6. '#' → logprob: -4.076803207397461
    7. 'queue' → logprob: -4.701803207397461
    8. 'current' → logprob: -5.201803207397461
    9. 'pour' → logprob: -5.826803207397461
    10. '```' → logprob: -5.826803207397461

Token 2091: ' suit' (ID: 15170)
  Prédit: 'expl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'expl' → logprob: -0.6176325678825378
    2. 'vis' → logprob: -2.3676326274871826
    3. 'g' → logprob: -2.4926326274871826
    4. 'expand' → logprob: -2.6176326274871826
    5. 'continue' → logprob: -3.3676326274871826
    6. 'aj' → logprob: -3.9926326274871826
    7. 'visited' → logprob: -3.9926326274871826
    8. 'util' → logprob: -4.1176323890686035
    9. 'ét' → logprob: -4.2426323890686035
    10. 'n' → logprob: -4.3676323890686035

Token 2092: ' uniquement' (ID: 65527)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.4313774108886719
    2. 'le' → logprob: -1.8063774108886719
    3. 'les' → logprob: -2.556377410888672
    4. 'l' → logprob: -2.931377410888672
    5. '```' → logprob: -3.806377410888672
    6. ' la' → logprob: -4.556377410888672
    7. 'une' → logprob: -6.056377410888672
    8. 'visited' → logprob: -6.181377410888672
    9. 'que' → logprob: -6.306377410888672
    10. ' uniquement' → logprob: -6.306377410888672

Token 2093: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.30814674496650696
    2. 'le' → logprob: -2.4331467151641846
    3. 'les' → logprob: -2.5581467151641846
    4. 'une' → logprob: -2.6831467151641846
    5. 'l' → logprob: -4.058146953582764
    6. 'queue' → logprob: -5.308146953582764
    7. 'un' → logprob: -5.433146953582764
    8. 'que' → logprob: -6.808146953582764
    9. ' la' → logprob: -7.183146953582764
    10. 'quel' → logprob: -7.308146953582764

Token 2094: ' distance' (ID: 9324)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.7900498509407043
    2. 'front' → logprob: -1.0400497913360596
    3. ' queue' → logprob: -3.0400497913360596
    4. 'current' → logprob: -3.2900497913360596
    5. 'distance' → logprob: -4.040050029754639
    6. 'size' → logprob: -4.165050029754639
    7. 'next' → logprob: -4.290050029754639
    8. 'tail' → logprob: -4.665050029754639
    9. '```' → logprob: -4.915050029754639
    10. 'dist' → logprob: -5.415050029754639

Token 2095: ' (' (ID: 350)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.6915340423583984
    2. 'from' → logprob: -1.9415340423583984
    3. '_to' → logprob: -2.3165340423583984
    4. '(u' → logprob: -2.4415340423583984
    5. '```' → logprob: -2.6915340423583984
    6. '[u' → logprob: -2.8165340423583984
    7. '_u' → logprob: -3.1915340423583984
    8. 'u' → logprob: -3.1915340423583984
    9. '
' → logprob: -3.4415340423583984
    10. 'à' → logprob: -3.5665340423583984

Token 2096: 'nombre' (ID: 28576)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09013503789901733
    2. ' )' → logprob: -3.590135097503662
    3. '1' → logprob: -4.215135097503662
    4. '),' → logprob: -5.215135097503662
    5. ')
' → logprob: -5.215135097503662
    6. '):
' → logprob: -5.590135097503662
    7. 'u' → logprob: -5.715135097503662
    8. '+' → logprob: -5.965135097503662
    9. 'à' → logprob: -6.090135097503662
    10. ',' → logprob: -6.215135097503662

Token 2097: ' de' (ID: 334)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10865383595228195
    2. ' of' → logprob: -3.9836537837982178
    3. ' de' → logprob: -3.9836537837982178
    4. 'de' → logprob: -4.233654022216797
    5. 'of' → logprob: -4.358654022216797
    6. '=' → logprob: -5.233654022216797
    7. '_' → logprob: -5.358654022216797
    8. '_of' → logprob: -5.358654022216797
    9. '_de' → logprob: -5.733654022216797
    10. 'd' → logprob: -6.108654022216797

Token 2098: ' somm' (ID: 44830)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.2522894144058228
    2. 'c' → logprob: -1.3772894144058228
    3. ' somm' → logprob: -1.3772894144058228
    4. 'som' → logprob: -2.752289295196533
    5. 'steps' → logprob: -3.002289295196533
    6. 'nodes' → logprob: -3.252289295196533
    7. 'no' → logprob: -4.252289295196533
    8. ' noe' → logprob: -4.752289295196533
    9. ' cubes' → logprob: -5.002289295196533
    10. 'n' → logprob: -5.127289295196533

Token 2099: 'ets' (ID: 1719)
  Prédit: 'ets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ets' → logprob: -0.5829694271087646
    2. 'êtres' → logprob: -1.9579694271087646
    3. 'ètres' → logprob: -2.2079694271087646
    4. 'è' → logprob: -3.0829694271087646
    5. 'és' → logprob: -3.4579694271087646
    6. 'ettes' → logprob: -3.8329694271087646
    7. 'ètes' → logprob: -3.8329694271087646
    8. 'êts' → logprob: -4.457969665527344
    9. 'et' → logprob: -4.457969665527344
    10. 'e' → logprob: -4.707969665527344

Token 2100: ' explor' (ID: 51034)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06783635914325714
    2. '+' → logprob: -4.317836284637451
    3. ' )' → logprob: -4.567836284637451
    4. ' à' → logprob: -5.317836284637451
    5. 'aj' → logprob: -5.567836284637451
    6. 'from' → logprob: -5.817836284637451
    7. 'à' → logprob: -6.067836284637451
    8. '),' → logprob: -6.067836284637451
    9. 'visited' → logprob: -6.067836284637451
    10. ' parcour' → logprob: -6.317836284637451

Token 2101: 'és' (ID: 1756)
  Prédit: 'pl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pl' → logprob: -1.293491244316101
    2. 'és' → logprob: -1.293491244316101
    3. '
' → logprob: -2.7934913635253906
    4. 'érés' → logprob: -3.1684913635253906
    5. 'ités' → logprob: -3.1684913635253906
    6. '   ' → logprob: -3.2934913635253906
    7. 'ion' → logprob: -3.2934913635253906
    8. ')' → logprob: -3.5434913635253906
    9. 'is' → logprob: -4.043491363525391
    10. '```' → logprob: -4.043491363525391

Token 2102: '),
' (ID: 2313)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1444360613822937
    2. '+' → logprob: -3.6444361209869385
    3. '),' → logprob: -3.6444361209869385
    4. 'dans' → logprob: -3.8944361209869385
    5. 'par' → logprob: -4.269435882568359
    6. ')+' → logprob: -4.894435882568359
    7. 'visited' → logprob: -5.019435882568359
    8. 'plus' → logprob: -5.144435882568359
    9. ')
' → logprob: -5.519435882568359
    10. 'aj' → logprob: -5.644435882568359

Token 2103: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3483256995677948
    2. '#' → logprob: -1.3483257293701172
    3. '       ' → logprob: -4.223325729370117
    4. ' #' → logprob: -4.723325729370117
    5. '```' → logprob: -5.348325729370117
    6. '               ' → logprob: -6.348325729370117
    7. '   ' → logprob: -6.848325729370117
    8. ',' → logprob: -7.598325729370117
    9. '                   ' → logprob: -8.098325729370117
    10. 'à' → logprob: -8.098325729370117

Token 2104: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.32275548577308655
    2. '#' (adapté à ' #') → logprob: -1.3227554559707642
    3. '       ' → logprob: -5.197755336761475
    4. ' #' → logprob: -6.822755336761475
    5. '```' → logprob: -6.822755336761475
    6. '   ' → logprob: -7.697755336761475
    7. '               ' → logprob: -7.822755336761475
    8. 'et' → logprob: -8.572755813598633
    9. ' et' → logprob: -9.572755813598633
    10. 'à' → logprob: -9.572755813598633

Token 2105: ' on' (ID: 402)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.394002228975296
    2. '           ' → logprob: -1.2690021991729736
    3. 'on' → logprob: -4.519002437591553
    4. 'et' → logprob: -4.644002437591553
    5. ' #' → logprob: -5.019002437591553
    6. 'pas' → logprob: -5.769002437591553
    7. ' on' → logprob: -6.394002437591553
    8. '```' → logprob: -6.394002437591553
    9. 'la' → logprob: -6.519002437591553
    10. '               ' → logprob: -6.769002437591553

Token 2106: ' s' (ID: 265)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.17288726568222046
    2. ' continue' → logprob: -2.7978873252868652
    3. 'contin' → logprob: -4.047887325286865
    4. 'expl' → logprob: -4.672887325286865
    5. 'n' → logprob: -5.297887325286865
    6. 's' → logprob: -5.297887325286865
    7. 'continu' → logprob: -5.547887325286865
    8. '_continue' → logprob: -5.672887325286865
    9. 'vis' → logprob: -5.797887325286865
    10. 'append' → logprob: -5.922887325286865

Token 2107: ''arr' (ID: 49695)
  Prédit: 'uit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uit' → logprob: -0.11150689423084259
    2. 'e' → logprob: -3.611506938934326
    3. 'uis' → logprob: -4.236506938934326
    4. 'uite' → logprob: -4.361506938934326
    5. 'u' → logprob: -4.861506938934326
    6. ''use' → logprob: -5.611506938934326
    7. 'ur' → logprob: -5.611506938934326
    8. 'ait' → logprob: -5.611506938934326
    9. ''arr' → logprob: -5.986506938934326
    10. 't' → logprob: -6.111506938934326

Token 2108: 'ête' (ID: 16808)
  Prédit: 'ête'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ête' → logprob: -0.0074838148429989815
    2. 'êt' → logprob: -5.257483959197998
    3. 'ète' → logprob: -6.257483959197998
    4. 'ê' → logprob: -8.75748348236084
    5. 'êtes' → logprob: -9.25748348236084
    6. 'êter' → logprob: -10.50748348236084
    7. 'ete' → logprob: -11.38248348236084
    8. 'êche' → logprob: -11.63248348236084
    9. 'êts' → logprob: -11.75748348236084
    10. 'être' → logprob: -12.38248348236084

Token 2109: ' quand' (ID: 18026)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.36009106040000916
    2. ' à' → logprob: -1.9850910902023315
    3. 'au' → logprob: -2.360090970993042
    4. ' dès' → logprob: -3.110090970993042
    5. '```' → logprob: -5.360091209411621
    6. '=' → logprob: -5.610091209411621
    7. 'd' → logprob: -5.860091209411621
    8. '           ' → logprob: -5.985091209411621
    9. '   ' → logprob: -6.610091209411621
    10. ' au' → logprob: -6.610091209411621

Token 2110: ' on' (ID: 402)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.27280640602111816
    2. 'la' → logprob: -2.147806406021118
    3. ' distance' → logprob: -2.647806406021118
    4. 'on' → logprob: -4.772806167602539
    5. 'dist' → logprob: -4.897806167602539
    6. 'depth' → logprob: -4.897806167602539
    7. 'le' → logprob: -4.897806167602539
    8. ' la' → logprob: -5.022806167602539
    9. 'len' → logprob: -5.272806167602539
    10. 'size' → logprob: -6.647806167602539

Token 2111: ' atteint' (ID: 104876)
  Prédit: 'atte'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atte' → logprob: -0.09919600188732147
    2. ' atteint' → logprob: -2.474195957183838
    3. 'arr' → logprob: -5.974195957183838
    4. ' atte' → logprob: -5.974195957183838
    5. 'at' → logprob: -6.474195957183838
    6. 'tr' → logprob: -6.724195957183838
    7. ' arrive' → logprob: -7.224195957183838
    8. 'a' → logprob: -8.224196434020996
    9. '_at' → logprob: -8.474196434020996
    10. '```' → logprob: -8.849196434020996

Token 2112: ' la' (ID: 557)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.045326508581638336
    2. 'la' → logprob: -3.1703264713287354
    3. 'size' → logprob: -7.1703267097473145
    4. 'tail' → logprob: -7.4203267097473145
    5. ' k' → logprob: -7.7953267097473145
    6. ' la' → logprob: -8.295326232910156
    7. 't' → logprob: -8.670326232910156
    8. ' taille' → logprob: -10.170326232910156
    9. 'ta' → logprob: -10.795326232910156
    10. 'le' → logprob: -11.420326232910156

Token 2113: ' taille' (ID: 41644)
  Prédit: 'tail'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tail' → logprob: -0.013792982324957848
    2. 'k' → logprob: -4.888792991638184
    3. ' taille' → logprob: -5.513792991638184
    4. 'size' → logprob: -6.263792991638184
    5. 't' → logprob: -10.138792991638184
    6. ' size' → logprob: -10.388792991638184
    7. '```' → logprob: -10.388792991638184
    8. 'ta' → logprob: -10.513792991638184
    9. ' ' → logprob: -10.763792991638184
    10. 'plus' → logprob: -11.638792991638184

Token 2114: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.07158076018095016
    2. ' k' → logprob: -2.696580648422241
    3. '```' → logprob: -6.94658088684082
    4. ' de' → logprob: -8.19658088684082
    5. 'de' → logprob: -9.32158088684082
    6. '+' → logprob: -9.44658088684082
    7. ' of' → logprob: -9.82158088684082
    8. '`' → logprob: -10.44658088684082
    9. '1' → logprob: -10.57158088684082
    10. '=' → logprob: -10.69658088684082

Token 2115: '.

' (ID: 364)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0044271512888371944
    2. '
' → logprob: -6.129426956176758
    3. '       ' → logprob: -6.504426956176758
    4. ',' → logprob: -8.754426956176758
    5. '               ' → logprob: -9.504426956176758
    6. '   ' → logprob: -9.504426956176758
    7. ' =' → logprob: -9.629426956176758
    8. ' for' → logprob: -9.629426956176758
    9. ':' → logprob: -10.254426956176758
    10. '```' → logprob: -10.254426956176758

Token 2116: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0013239304535090923
    2. '
' → logprob: -6.876323699951172
    3. '       ' → logprob: -8.251323699951172
    4. '```' → logprob: -11.251323699951172
    5. 'for' → logprob: -11.751323699951172
    6. '            
' → logprob: -12.751323699951172
    7. '   ' → logprob: -13.001323699951172
    8. '               ' → logprob: -13.626323699951172
    9. ' for' → logprob: -13.876323699951172
    10. ',' → logprob: -14.501323699951172

Token 2117: ' for' (ID: 395)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004227747209370136
    2. 'for' (adapté à ' for') → logprob: -5.754227638244629
    3. '       ' → logprob: -7.379227638244629
    4. ' for' → logprob: -8.254227638244629
    5. '```' → logprob: -8.879227638244629
    6. '   ' → logprob: -11.254227638244629
    7. '               ' → logprob: -11.879227638244629
    8. '
' → logprob: -13.129227638244629
    9. '		' → logprob: -13.879227638244629
    10. '                   ' → logprob: -14.129227638244629

Token 2118: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.22374477982521057
    2. 'u' → logprob: -2.4737448692321777
    3. 'v' → logprob: -2.5987448692321777
    4. ' start' → logprob: -3.2237448692321777
    5. ' u' → logprob: -6.848744869232178
    6. ' v' → logprob: -7.348744869232178
    7. 'comp' → logprob: -8.72374439239502
    8. '   ' → logprob: -9.47374439239502
    9. 'vid' → logprob: -10.72374439239502
    10. ' comp' → logprob: -10.84874439239502

Token 2119: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.14397072792053223
    2. 'in' → logprob: -2.0189707279205322
    3. '_id' → logprob: -8.518970489501953
    4. '   ' → logprob: -8.518970489501953
    5. '_in' → logprob: -8.768970489501953
    6. '    ' → logprob: -8.893970489501953
    7. '_' → logprob: -9.018970489501953
    8. ' _' → logprob: -9.143970489501953
    9. '```' → logprob: -9.518970489501953
    10. ' ' → logprob: -9.768970489501953

Token 2120: ' range' (ID: 3352)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.051951490342617035
    2. 'range' → logprob: -3.0519514083862305
    3. ' comp' → logprob: -6.0519514083862305
    4. ' range' → logprob: -6.9269514083862305
    5. '   ' → logprob: -12.05195140838623
    6. 'com' → logprob: -12.17695140838623
    7. 'component' → logprob: -12.67695140838623
    8. '(comp' → logprob: -12.92695140838623
    9. '	comp' → logprob: -13.17695140838623
    10. 'components' → logprob: -13.17695140838623

Token 2121: '(size' (ID: 15192)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.012064074166119099
    2. ' size' → logprob: -5.262063980102539
    3. '(size' → logprob: -5.637063980102539
    4. 'len' → logprob: -5.887063980102539
    5. '           ' → logprob: -8.512063980102539
    6. '0' → logprob: -9.137063980102539
    7. '(len' → logprob: -9.637063980102539
    8. ')' → logprob: -10.637063980102539
    9. '               ' → logprob: -10.762063980102539
    10. '(' → logprob: -11.262063980102539

Token 2122: '_comp' (ID: 34754)
  Prédit: '_comp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_comp' → logprob: -0.0025668602902442217
    2. '):
' → logprob: -6.627566814422607
    3. '(comp' → logprob: -7.002566814422607
    4. '):' → logprob: -8.752567291259766
    5. '           ' → logprob: -9.502567291259766
    6. '(_' → logprob: -10.627567291259766
    7. '_' → logprob: -11.002567291259766
    8. 'comp' → logprob: -11.252567291259766
    9. ')' → logprob: -11.377567291259766
    10. '       ' → logprob: -12.127567291259766

Token 2123: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.0028775110840797424
    2. '           ' → logprob: -6.252877712249756
    3. '):' → logprob: -7.377877712249756
    4. ':
' → logprob: -8.377877235412598
    5. '               ' → logprob: -10.127877235412598
    6. '       ' → logprob: -11.127877235412598
    7. '):

' → logprob: -11.627877235412598
    8. '```' → logprob: -12.002877235412598
    9. '):
' → logprob: -12.127877235412598
    10. ':' → logprob: -12.127877235412598

Token 2124: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4340352714061737
    2. '               ' → logprob: -1.184035301208496
    3. '       ' → logprob: -3.184035301208496
    4. '   ' → logprob: -5.684035301208496
    5. '```' → logprob: -6.934035301208496
    6. '
' → logprob: -9.059035301208496
    7. '                   ' → logprob: -9.934035301208496
    8. '	       ' → logprob: -10.809035301208496
    9. 'q' → logprob: -11.059035301208496
    10. '            
' → logprob: -11.559035301208496

Token 2125: ' visited' (ID: 18416)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0011324746301397681
    2. 'q' → logprob: -7.376132488250732
    3. '                   ' → logprob: -8.251132011413574
    4. 'visited' (adapté à ' visited') → logprob: -9.376132011413574
    5. 'queue' → logprob: -9.751132011413574
    6. '           ' → logprob: -10.251132011413574
    7. '   ' → logprob: -10.501132011413574
    8. 'from' → logprob: -11.126132011413574
    9. 'dist' → logprob: -11.501132011413574
    10. '```' → logprob: -12.376132011413574

Token 2126: '_b' (ID: 1535)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3968283236026764
    2. ' =' → logprob: -1.146828293800354
    3. '=[' → logprob: -5.3968281745910645
    4. '=set' → logprob: -5.5218281745910645
    5. '[start' → logprob: -7.3968281745910645
    6. '[' → logprob: -7.6468281745910645
    7. '```' → logprob: -10.396828651428223
    8. ' =[' → logprob: -10.396828651428223
    9. '=True' → logprob: -10.521828651428223
    10. '=start' → logprob: -10.646828651428223

Token 2127: 'fs' (ID: 6469)
  Prédit: 'fs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fs' → logprob: -0.4761737883090973
    2. 'FS' → logprob: -2.1011738777160645
    3. ' =' → logprob: -2.2261738777160645
    4. '=' → logprob: -2.3511738777160645
    5. '[' → logprob: -3.8511738777160645
    6. '=[' → logprob: -4.2261738777160645
    7. '=[]' → logprob: -4.9761738777160645
    8. '=True' → logprob: -5.2261738777160645
    9. '       ' → logprob: -6.7261738777160645
    10. '.append' → logprob: -7.3511738777160645

Token 2128: ' =' (ID: 314)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.1309821605682373
    2. ' =' → logprob: -1.3809821605682373
    3. '[start' → logprob: -1.5059821605682373
    4. '=' → logprob: -2.0059821605682373
    5. '[' → logprob: -2.7559821605682373
    6. '=[' → logprob: -6.505982398986816
    7. '                   ' → logprob: -6.630982398986816
    8. '           ' → logprob: -7.255982398986816
    9. '              ' → logprob: -7.755982398986816
    10. '```' → logprob: -7.880982398986816

Token 2129: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.006059028673917055
    2. '{' → logprob: -5.256059169769287
    3. 'set' → logprob: -7.381059169769287
    4. ' [' → logprob: -8.756058692932129
    5. '[-' → logprob: -11.256058692932129
    6. '[s' → logprob: -11.506058692932129
    7. '[k' → logprob: -12.881058692932129
    8. '[min' → logprob: -12.881058692932129
    9. '[int' → logprob: -13.006058692932129
    10. '   ' → logprob: -13.381058692932129

Token 2130: 'False' (ID: 8168)
  Prédit: 'False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -1.6240566083070007e-06
    2. ' False' → logprob: -13.750001907348633
    3. '0' → logprob: -14.500001907348633
    4. 'True' → logprob: -18.125001907348633
    5. '   ' → logprob: -18.500001907348633
    6. '(False' → logprob: -19.250001907348633
    7. '           ' → logprob: -19.750001907348633
    8. '       ' → logprob: -21.375001907348633
    9. '               ' → logprob: -22.000001907348633
    10. '=False' → logprob: -22.125001907348633

Token 2131: ']*' (ID: 18579)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4574592411518097
    2. ']' → logprob: -1.0824592113494873
    3. 'for' → logprob: -4.707459449768066
    4. ']*' → logprob: -5.082459449768066
    5. '][' → logprob: -5.207459449768066
    6. '[start' → logprob: -6.332459449768066
    7. '                ' → logprob: -6.582459449768066
    8. ' for' → logprob: -6.582459449768066
    9. '           ' → logprob: -7.457459449768066
    10. '                   ' → logprob: -7.457459449768066

Token 2132: 'size' (ID: 4461)
  Prédit: '(size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(size' → logprob: -0.3934803903102875
    2. 'size' → logprob: -1.1434804201126099
    3. 'k' → logprob: -5.64348030090332
    4. '(' → logprob: -6.89348030090332
    5. '(k' → logprob: -7.39348030090332
    6. '               ' → logprob: -7.51848030090332
    7. '                   ' → logprob: -8.76848030090332
    8. '1' → logprob: -8.89348030090332
    9. ' (' → logprob: -9.51848030090332
    10. ' size' → logprob: -9.64348030090332

Token 2133: '_comp' (ID: 34754)
  Prédit: '_comp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_comp' → logprob: -0.037454426288604736
    2. 'size' → logprob: -3.41245436668396
    3. 'comp' → logprob: -5.787454605102539
    4. '               ' → logprob: -7.912454605102539
    5. '(size' → logprob: -8.537454605102539
    6. 'Comp' → logprob: -10.162454605102539
    7. '           ' → logprob: -10.537454605102539
    8. '   ' → logprob: -10.537454605102539
    9. '_size' → logprob: -11.037454605102539
    10. '
' → logprob: -11.412454605102539

Token 2134: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0024034816306084394
    2. 'visited' → logprob: -6.502403259277344
    3. ' visited' → logprob: -8.252403259277344
    4. '
' → logprob: -8.752403259277344
    5. '	           ' → logprob: -9.252403259277344
    6. '                
' → logprob: -9.877403259277344
    7. '<|end|>' → logprob: -10.127403259277344
    8. '                   ' → logprob: -10.252403259277344
    9. '                ' → logprob: -10.377403259277344
    10. '		       ' → logprob: -10.502403259277344

Token 2135: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0003115095605608076
    2. '```' → logprob: -8.625311851501465
    3. 'visited' → logprob: -9.250311851501465
    4. '       ' → logprob: -11.250311851501465
    5. '           ' → logprob: -11.500311851501465
    6. '                   ' → logprob: -12.125311851501465
    7. '   ' → logprob: -12.750311851501465
    8. '			' → logprob: -14.000311851501465
    9. '	           ' → logprob: -14.000311851501465
    10. ' visited' → logprob: -14.250311851501465

Token 2136: ' visited' (ID: 18416)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.46502017974853516
    2. '               ' → logprob: -1.2150201797485352
    3. 'from' → logprob: -3.590020179748535
    4. 'visited' (adapté à ' visited') → logprob: -3.715020179748535
    5. 'queue' → logprob: -3.965020179748535
    6. 'deque' → logprob: -6.340020179748535
    7. 'dq' → logprob: -6.590020179748535
    8. '```' → logprob: -7.590020179748535
    9. 'que' → logprob: -8.590020179748535
    10. 'dist' → logprob: -8.840020179748535

Token 2137: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.006601683329790831
    2. '[start' → logprob: -5.131601810455322
    3. '               ' → logprob: -7.881601810455322
    4. '[' → logprob: -9.131601333618164
    5. 'b' → logprob: -9.131601333618164
    6. 'visited' → logprob: -10.881601333618164
    7. '[b' → logprob: -11.506601333618164
    8. ' =' → logprob: -11.756601333618164
    9. '```' → logprob: -12.131601333618164
    10. '                   ' → logprob: -12.131601333618164

Token 2138: 'fs' (ID: 6469)
  Prédit: 'fs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fs' → logprob: -0.0029253026004880667
    2. 'FS' → logprob: -5.877925395965576
    3. '_fs' → logprob: -10.002924919128418
    4. 'f' → logprob: -10.377924919128418
    5. '=' → logprob: -11.252924919128418
    6. ' =' → logprob: -11.502924919128418
    7. '[' → logprob: -11.752924919128418
    8. '_f' → logprob: -13.127924919128418
    9. 'fsi' → logprob: -13.127924919128418
    10. '   ' → logprob: -13.377924919128418

Token 2139: '[start' (ID: 62179)
  Prédit: '[start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[start' → logprob: -0.14691971242427826
    2. '[' → logprob: -2.6469197273254395
    3. '               ' → logprob: -3.0219197273254395
    4. '=' → logprob: -4.7719197273254395
    5. '=True' → logprob: -5.0219197273254395
    6. ' =' → logprob: -7.3969197273254395
    7. '[s' → logprob: -7.5219197273254395
    8. '```' → logprob: -8.396919250488281
    9. '=False' → logprob: -9.271919250488281
    10. '[v' → logprob: -9.521919250488281

Token 2140: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2945033013820648
    2. ' =' → logprob: -1.9195033311843872
    3. ']' → logprob: -2.5445032119750977
    4. '               ' → logprob: -4.044503211975098
    5. '=True' → logprob: -4.794503211975098
    6. ']=' → logprob: -5.544503211975098
    7. '           ' → logprob: -9.169503211975098
    8. '                ' → logprob: -10.544503211975098
    9. '                   ' → logprob: -10.669503211975098
    10. ')' → logprob: -11.544503211975098

Token 2141: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014623886905610561
    2. ' =' → logprob: -4.639624118804932
    3. '               ' → logprob: -5.514624118804932
    4. '=True' → logprob: -7.264624118804932
    5. '           ' → logprob: -10.014623641967773
    6. '              ' → logprob: -10.139623641967773
    7. '                   ' → logprob: -11.014623641967773
    8. '                ' → logprob: -11.889623641967773
    9. '            ' → logprob: -12.264623641967773
    10. 'visited' → logprob: -12.764623641967773

Token 2142: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -7.941850526549388e-06
    2. ' True' → logprob: -11.750007629394531
    3. '(True' → logprob: -18.87500762939453
    4. '1' → logprob: -19.25000762939453
    5. '=True' → logprob: -20.25000762939453
    6. '
' → logprob: -20.62500762939453
    7. '0' → logprob: -21.37500762939453
    8. '```' → logprob: -22.37500762939453
    9. 'False' → logprob: -22.62500762939453
    10. '   ' → logprob: -22.62500762939453

Token 2143: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00047071068547666073
    2. 'q' → logprob: -8.000471115112305
    3. '```' → logprob: -9.625471115112305
    4. '       ' → logprob: -10.750471115112305
    5. '			' → logprob: -11.375471115112305
    6. 'from' → logprob: -11.625471115112305
    7. '		       ' → logprob: -12.250471115112305
    8. '	           ' → logprob: -12.375471115112305
    9. '
' → logprob: -12.625471115112305
    10. '                   ' → logprob: -12.625471115112305

Token 2144: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -8.184812031686306e-05
    2. 'q' → logprob: -10.375082015991211
    3. '       ' → logprob: -10.500082015991211
    4. 'from' → logprob: -12.250082015991211
    5. '           ' → logprob: -12.500082015991211
    6. 'queue' → logprob: -12.750082015991211
    7. '			' → logprob: -13.000082015991211
    8. '```' → logprob: -13.250082015991211
    9. '	           ' → logprob: -13.500082015991211
    10. '		       ' → logprob: -13.500082015991211

Token 2145: ' q' (ID: 2335)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.7395487427711487
    2. 'queue' → logprob: -1.239548683166504
    3. 'q' (adapté à ' q') → logprob: -1.489548683166504
    4. '               ' → logprob: -4.989548683166504
    5. 'dq' → logprob: -7.489548683166504
    6. 'que' → logprob: -8.489548683166504
    7. 'deque' → logprob: -10.364548683166504
    8. ' from' → logprob: -10.989548683166504
    9. '           ' → logprob: -11.489548683166504
    10. '```' → logprob: -11.489548683166504

Token 2146: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22924208641052246
    2. '=' → logprob: -1.6042420864105225
    3. '               ' → logprob: -5.854242324829102
    4. '.append' → logprob: -7.479242324829102
    5. 'deque' → logprob: -8.479242324829102
    6. '                   ' → logprob: -9.854242324829102
    7. '           ' → logprob: -10.104242324829102
    8. '   ' → logprob: -10.604242324829102
    9. '                ' → logprob: -11.354242324829102
    10. '              ' → logprob: -11.479242324829102

Token 2147: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -5.848420551046729e-05
    2. ' deque' → logprob: -9.7500581741333
    3. '[(' → logprob: -15.8750581741333
    4. '   ' → logprob: -17.500059127807617
    5. 'collections' → logprob: -20.125059127807617
    6. ' ' → logprob: -20.250059127807617
    7. 'Deque' → logprob: -20.500059127807617
    8. 'de' → logprob: -20.875059127807617
    9. '       ' → logprob: -21.625059127807617
    10. '
' → logprob: -22.125059127807617

Token 2148: '()
' (ID: 1234)
  Prédit: '([('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([(' → logprob: -0.2821764349937439
    2. '([' → logprob: -1.5321764945983887
    3. '[(' → logprob: -3.5321764945983887
    4. '()
' → logprob: -8.03217601776123
    5. '[' → logprob: -9.15717601776123
    6. '([[' → logprob: -9.65717601776123
    7. '[[' → logprob: -10.65717601776123
    8. '[((' → logprob: -11.03217601776123
    9. '()' → logprob: -11.78217601776123
    10. '   ' → logprob: -12.90717601776123

Token 2149: '               ' (ID: 506)
  Prédit: '(start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(start' → logprob: -0.4796822965145111
    2. '               ' → logprob: -0.9796823263168335
    3. '(' → logprob: -5.604682445526123
    4. 'q' → logprob: -7.354682445526123
    5. '[start' → logprob: -7.604682445526123
    6. '(q' → logprob: -7.604682445526123
    7. 'start' → logprob: -9.729681968688965
    8. '                   ' → logprob: -10.104681968688965
    9. ' (' → logprob: -10.354681968688965
    10. '   ' → logprob: -10.604681968688965

Token 2150: ' #' (ID: 1069)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.6392629146575928
    2. '(start' → logprob: -0.8892629146575928
    3. '([' → logprob: -3.8892629146575928
    4. '(' → logprob: -3.8892629146575928
    5. '(q' → logprob: -4.014263153076172
    6. '               ' → logprob: -7.264263153076172
    7. '((' → logprob: -7.264263153076172
    8. '([(' → logprob: -8.264263153076172
    9. '([],' → logprob: -8.514263153076172
    10. '   ' → logprob: -8.639263153076172

Token 2151: ' L' (ID: 451)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.2113979209971149e-05
    2. '               ' → logprob: -12.875012397766113
    3. '(start' → logprob: -12.875012397766113
    4. ' q' → logprob: -13.125012397766113
    5. '(' → logprob: -13.250012397766113
    6. '(q' → logprob: -13.875012397766113
    7. '([' → logprob: -14.500012397766113
    8. '[(' → logprob: -14.875012397766113
    9. '   ' → logprob: -15.250012397766113
    10. '([(' → logprob: -15.250012397766113

Token 2152: ''état' (ID: 116357)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.3073202967643738
    2. '(start' → logprob: -1.5573203563690186
    3. '[start' → logprob: -4.0573201179504395
    4. '(q' → logprob: -4.6823201179504395
    5. 'start' → logprob: -4.8073201179504395
    6. ' (' → logprob: -5.5573201179504395
    7. '(' → logprob: -5.5573201179504395
    8. ' q' → logprob: -6.0573201179504395
    9. '(
' → logprob: -6.6823201179504395
    10. '[(' → logprob: -6.9323201179504395

Token 2153: ':' (ID: 25)
  Prédit: '(start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(start' → logprob: -0.17965348064899445
    2. 'q' → logprob: -2.5546534061431885
    3. ' (' → logprob: -3.5546534061431885
    4. '=' → logprob: -4.304653644561768
    5. '               ' → logprob: -4.304653644561768
    6. '(' → logprob: -4.554653644561768
    7. ' =' → logprob: -4.929653644561768
    8. '(state' → logprob: -6.054653644561768
    9. '(q' → logprob: -6.429653644561768
    10. ' q' → logprob: -6.554653644561768

Token 2154: ' (' (ID: 350)
  Prédit: '(start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(start' → logprob: -0.0006542971823364496
    2. '([' → logprob: -7.375654220581055
    3. '(' → logprob: -11.125654220581055
    4. ' (' → logprob: -12.625654220581055
    5. '[start' → logprob: -12.750654220581055
    6. '   ' → logprob: -13.125654220581055
    7. '((' → logprob: -14.250654220581055
    8. '([],' → logprob: -14.250654220581055
    9. 'start' → logprob: -14.375654220581055
    10. '({' → logprob: -15.000654220581055

Token 2155: 'ensemble' (ID: 37301)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.006216132082045078
    2. '(start' → logprob: -6.256216049194336
    3. 'visited' → logprob: -6.756216049194336
    4. 'current' → logprob: -7.131216049194336
    5. '[start' → logprob: -7.131216049194336
    6. 'node' → logprob: -7.381216049194336
    7. ' start' → logprob: -8.256216049194336
    8. 'vertex' → logprob: -8.756216049194336
    9. '{' → logprob: -9.131216049194336
    10. 'vid' → logprob: -9.506216049194336

Token 2156: '_act' (ID: 67104)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.26836517453193665
    2. 'current' → logprob: -3.0183651447296143
    3. '[' → logprob: -3.2683651447296143
    4. 'size' → logprob: -3.6433651447296143
    5. '[start' → logprob: -3.8933651447296143
    6. ' ,' → logprob: -4.393365383148193
    7. '[current' → logprob: -4.768365383148193
    8. '{' → logprob: -4.893365383148193
    9. 'start' → logprob: -5.143365383148193
    10. ' current' → logprob: -5.143365383148193

Token 2157: 'uel' (ID: 4619)
  Prédit: 'uel'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uel' → logprob: -0.00878356397151947
    2. 'ual' → logprob: -5.383783340454102
    3. 'u' → logprob: -6.258783340454102
    4. ',' → logprob: -6.883783340454102
    5. 'if' → logprob: -7.758783340454102
    6. ')' → logprob: -8.258783340454102
    7. 'uelle' → logprob: -8.883783340454102
    8. '```' → logprob: -9.758783340454102
    9. '[' → logprob: -10.258783340454102
    10. 'uellement' → logprob: -10.633783340454102

Token 2158: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01346089318394661
    2. ' ,' → logprob: -4.763461112976074
    3. ',
' → logprob: -6.388461112976074
    4. ')' → logprob: -6.513461112976074
    5. '[start' → logprob: -7.138461112976074
    6. '[' → logprob: -8.138461112976074
    7. ',start' → logprob: -9.138461112976074
    8. '               ' → logprob: -9.513461112976074
    9. ',size' → logprob: -9.638461112976074
    10. '{' → logprob: -9.638461112976074

Token 2159: ' queue' (ID: 13661)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.7062662243843079
    2. '[start' → logprob: -0.8312662243843079
    3. 'visited' → logprob: -3.456266164779663
    4. '{' → logprob: -3.706266164779663
    5. 'len' → logprob: -4.956266403198242
    6. '[' → logprob: -5.581266403198242
    7. '1' → logprob: -7.456266403198242
    8. 'fro' → logprob: -7.706266403198242
    9. ' start' → logprob: -7.956266403198242
    10. '[s' → logprob: -8.081266403198242

Token 2160: '_front' (ID: 56078)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2009589672088623
    2. ',' → logprob: -1.7009589672088623
    3. '=' → logprob: -1.8259589672088623
    4. '=[' → logprob: -2.7009589672088623
    5. '([' → logprob: -2.8259589672088623
    6. '[' → logprob: -2.9509589672088623
    7. '([(' → logprob: -3.3259589672088623
    8. '[(' → logprob: -3.5759589672088623
    9. 'size' → logprob: -3.7009589672088623
    10. ' =' → logprob: -4.325959205627441

Token 2161: 'ier' (ID: 905)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'size' → logprob: -1.4887408018112183
    2. 'ont' → logprob: -1.7387408018112183
    3. ')' → logprob: -2.113740921020508
    4. ',' → logprob: -2.363740921020508
    5. 'ront' → logprob: -2.613740921020508
    6. '[(' → logprob: -2.988740921020508
    7. 'u' → logprob: -3.113740921020508
    8. '[' → logprob: -3.363740921020508
    9. '               ' → logprob: -3.363740921020508
    10. '```' → logprob: -4.113740921020508

Token 2162: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2152177393436432
    2. ',' → logprob: -1.8402177095413208
    3. '[' → logprob: -3.8402178287506104
    4. ' ,' → logprob: -5.590217590332031
    5. ')
' → logprob: -6.090217590332031
    6. ' )' → logprob: -6.215217590332031
    7. '=' → logprob: -7.090217590332031
    8. '```' → logprob: -7.590217590332031
    9. '_' → logprob: -7.840217590332031
    10. ',
' → logprob: -7.965217590332031

Token 2163: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.8379536271095276
    2. '(' → logprob: -1.0879535675048828
    3. '(start' → logprob: -2.462953567504883
    4. ' (' → logprob: -2.712953567504883
    5. '```' → logprob: -3.212953567504883
    6. ',' → logprob: -3.837953567504883
    7. '(
' → logprob: -4.837953567504883
    8. '[' → logprob: -6.337953567504883
    9. '[start' → logprob: -7.087953567504883
    10. '``' → logprob: -7.212953567504883

Token 2164: ' #' (ID: 1069)
  Prédit: '(start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(start' → logprob: -0.06718181818723679
    2. ' (' → logprob: -3.4421818256378174
    3. '(' → logprob: -3.8171818256378174
    4. '               ' → logprob: -5.442181587219238
    5. 'start' → logprob: -6.192181587219238
    6. '[start' → logprob: -6.317181587219238
    7. '(q' → logprob: -7.317181587219238
    8. '([' → logprob: -8.067181587219238
    9. 'q' → logprob: -8.067181587219238
    10. '(n' → logprob: -8.442181587219238

Token 2165: ' Simpl' (ID: 92258)
  Prédit: '(start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(start' → logprob: -0.02376062422990799
    2. '(' → logprob: -5.273760795593262
    3. '               ' → logprob: -5.273760795593262
    4. 'start' → logprob: -5.398760795593262
    5. ' (' → logprob: -5.773760795593262
    6. '[start' → logprob: -5.773760795593262
    7. '([' → logprob: -7.273760795593262
    8. 'q' → logprob: -7.773760795593262
    9. 'deque' → logprob: -8.398760795593262
    10. '((' → logprob: -8.648760795593262

Token 2166: 'ification' (ID: 3166)
  Prédit: 'ified'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ified' → logprob: -0.8271105885505676
    2. 'ify' → logprob: -1.0771105289459229
    3. '               ' → logprob: -1.9521105289459229
    4. '       ' → logprob: -4.327110767364502
    5. 'ifié' → logprob: -4.327110767364502
    6. 'e' → logprob: -4.827110767364502
    7. 'ifier' → logprob: -4.952110767364502
    8. 'if' → logprob: -4.952110767364502
    9. '           ' → logprob: -5.202110767364502
    10. '                   ' → logprob: -5.452110767364502

Token 2167: ':' (ID: 25)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.17556233704090118
    2. 'q' → logprob: -2.5505623817443848
    3. ' (' → logprob: -3.5505623817443848
    4. ' =' → logprob: -4.175562381744385
    5. '(' → logprob: -4.675562381744385
    6. ' q' → logprob: -4.800562381744385
    7. '=' → logprob: -5.550562381744385
    8. '(
' → logprob: -5.675562381744385
    9. '(start' → logprob: -5.675562381744385
    10. ',' → logprob: -6.300562381744385

Token 2168: ' ici' (ID: 27994)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.060402221977710724
    2. 'deque' → logprob: -3.1854021549224854
    3. '(q' → logprob: -4.8104023933410645
    4. ' q' → logprob: -5.0604023933410645
    5. '               ' → logprob: -7.3104023933410645
    6. ' (' → logprob: -7.4354023933410645
    7. '   ' → logprob: -7.8104023933410645
    8. '```' → logprob: -8.435401916503906
    9. ' deque' → logprob: -8.685401916503906
    10. '(' → logprob: -8.935401916503906

Token 2169: ' on' (ID: 402)
  Prédit: ' q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' q' → logprob: -0.6192614436149597
    2. 'q' → logprob: -0.8692614436149597
    3. '               ' → logprob: -4.119261264801025
    4. ' (' → logprob: -4.244261264801025
    5. '(q' → logprob: -5.494261264801025
    6. 'deque' → logprob: -5.744261264801025
    7. ' deque' → logprob: -7.619261264801025
    8. '(' → logprob: -7.744261264801025
    9. '(None' → logprob: -8.119261741638184
    10. '()' → logprob: -8.119261741638184

Token 2170: ' réalise' (ID: 153079)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.39761069416999817
    2. 'append' → logprob: -1.1476106643676758
    3. 'q' → logprob: -5.522610664367676
    4. 'continue' → logprob: -6.522610664367676
    5. ' append' → logprob: -7.022610664367676
    6. '.enqueue' → logprob: -7.147610664367676
    7. 'enqueue' → logprob: -7.647610664367676
    8. '   ' → logprob: -7.897610664367676
    9. '.extend' → logprob: -7.897610664367676
    10. '       ' → logprob: -8.147610664367676

Token 2171: ' juste' (ID: 31553)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.3587076961994171
    2. 'q' → logprob: -1.4837076663970947
    3. ' deque' → logprob: -3.7337076663970947
    4. ' q' → logprob: -4.108707904815674
    5. 'simple' → logprob: -4.608707904815674
    6. '(q' → logprob: -5.233707904815674
    7. 'b' → logprob: -5.608707904815674
    8. 'a' → logprob: -6.108707904815674
    9. '```' → logprob: -6.108707904815674
    10. 'visited' → logprob: -6.233707904815674

Token 2172: ' un' (ID: 537)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.7935842871665955
    2. 'une' → logprob: -1.4185843467712402
    3. 'b' → logprob: -2.1685843467712402
    4. 'un' → logprob: -2.5435843467712402
    5. ' q' → logprob: -3.2935843467712402
    6. 'a' → logprob: -4.16858434677124
    7. 'deque' → logprob: -4.41858434677124
    8. '(q' → logprob: -4.54358434677124
    9. 'B' → logprob: -4.91858434677124
    10. ' une' → logprob: -5.16858434677124

Token 2173: ' BFS' (ID: 190016)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.20449484884738922
    2. 'B' → logprob: -2.3294949531555176
    3. 'q' → logprob: -2.8294949531555176
    4. 'simple' → logprob: -3.9544949531555176
    5. 'deque' → logprob: -5.829494953155518
    6. 'for' → logprob: -6.079494953155518
    7. 'standard' → logprob: -6.579494953155518
    8. 'queue' → logprob: -6.954494953155518
    9. 'bread' → logprob: -7.204494953155518
    10. 'normal' → logprob: -8.20449447631836

Token 2174: ' classique' (ID: 76895)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7511031627655029
    2. '(start' → logprob: -0.7511031627655029
    3. ' (' → logprob: -4.126103401184082
    4. '(' → logprob: -5.001103401184082
    5. '(queue' → logprob: -5.126103401184082
    6. ' =' → logprob: -5.126103401184082
    7. 'start' → logprob: -5.876103401184082
    8. '[start' → logprob: -5.876103401184082
    9. '((' → logprob: -6.001103401184082
    10. ' for' → logprob: -6.501103401184082

Token 2175: ' pour' (ID: 1930)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.06369315832853317
    2. 'q' → logprob: -4.188693046569824
    3. '(start' → logprob: -4.313693046569824
    4. '(q' → logprob: -4.563693046569824
    5. '(' → logprob: -4.688693046569824
    6. ',' → logprob: -5.938693046569824
    7. ' (' → logprob: -5.938693046569824
    8. '(
' → logprob: -6.438693046569824
    9. '(queue' → logprob: -6.688693046569824
    10. '```' → logprob: -6.688693046569824

Token 2176: ' trouver' (ID: 23195)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tr' → logprob: -1.1066992282867432
    2. 'expl' → logprob: -1.6066992282867432
    3. 's' → logprob: -2.731699228286743
    4. 'k' → logprob: -2.856699228286743
    5. 'v' → logprob: -2.981699228286743
    6. 'la' → logprob: -3.231699228286743
    7. 'front' → logprob: -3.481699228286743
    8. 'expand' → logprob: -3.731699228286743
    9. 'chercher' → logprob: -3.981699228286743
    10. 'start' → logprob: -3.981699228286743

Token 2177: ' la' (ID: 557)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.0164114236831665
    2. 'neighbors' → logprob: -2.016411304473877
    3. 'une' → logprob: -2.266411304473877
    4. 'le' → logprob: -2.516411304473877
    5. 'les' → logprob: -2.641411304473877
    6. 'la' → logprob: -2.766411304473877
    7. 'un' → logprob: -2.766411304473877
    8. 'connected' → logprob: -3.016411304473877
    9. 'sets' → logprob: -4.391411304473877
    10. 'a' → logprob: -4.766411304473877

Token 2178: ' compos' (ID: 14635)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -1.3674830198287964
    2. 'plus' → logprob: -1.8674830198287964
    3. 'connected' → logprob: -1.9924830198287964
    4. 'prem' → logprob: -2.117483139038086
    5. 'first' → logprob: -2.742483139038086
    6. ' next' → logprob: -2.742483139038086
    7. 'k' → logprob: -3.242483139038086
    8. 'sub' → logprob: -3.742483139038086
    9. 'subset' → logprob: -4.117483139038086
    10. ' first' → logprob: -4.242483139038086

Token 2179: 'ante' (ID: 2116)
  Prédit: 'ète'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ète' → logprob: -0.26474303007125854
    2. ')' → logprob: -2.6397430896759033
    3. 'e' → logprob: -3.1397430896759033
    4. 'p' → logprob: -4.139742851257324
    5. 'ete' → logprob: -4.389742851257324
    6. 'et' → logprob: -4.514742851257324
    7. 'eté' → logprob: -4.514742851257324
    8. 'é' → logprob: -5.389742851257324
    9. 'ponent' → logprob: -5.389742851257324
    10. '```' → logprob: -5.639742851257324

Token 2180: ' conn' (ID: 10850)
  Prédit: 'conn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'conn' → logprob: -0.34016504883766174
    2. 'vo' → logprob: -2.840165138244629
    3. 'simple' → logprob: -3.090165138244629
    4. '_simple' → logprob: -3.215165138244629
    5. 'adj' → logprob: -3.340165138244629
    6. '_conn' → logprob: -3.465165138244629
    7. ',' → logprob: -4.465165138244629
    8. '```' → logprob: -4.715165138244629
    9. ' adj' → logprob: -5.090165138244629
    10. '(s' → logprob: -5.090165138244629

Token 2181: 'exe' (ID: 70589)
  Prédit: 'exe'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exe' → logprob: -0.5812233686447144
    2. 'ect' → logprob: -1.4562233686447144
    3. 'n' → logprob: -1.8312233686447144
    4. 'ex' → logprob: -3.956223487854004
    5. 'nect' → logprob: -4.831223487854004
    6. 'ected' → logprob: -5.206223487854004
    7. '```' → logprob: -5.581223487854004
    8. 'p' → logprob: -6.331223487854004
    9. '
' → logprob: -6.831223487854004
    10. 'exp' → logprob: -7.081223487854004

Token 2182: ' jusqu' (ID: 21961)
  Prédit: '(start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(start' → logprob: -1.5132652521133423
    2. '```' → logprob: -2.1382651329040527
    3. 'de' → logprob: -2.2632651329040527
    4. ',' → logprob: -2.7632651329040527
    5. '               ' → logprob: -3.1382651329040527
    6. 'b' → logprob: -3.1382651329040527
    7. 'simple' → logprob: -3.1382651329040527
    8. ' (' → logprob: -3.1382651329040527
    9. '_simple' → logprob: -3.6382651329040527
    10. 'deque' → logprob: -3.6382651329040527

Token 2183: ''à' (ID: 33688)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.5783675909042358
    2. ''à' → logprob: -0.8283675909042358
    3. '’à' → logprob: -6.578367710113525
    4. 'size' → logprob: -7.703367710113525
    5. ''au' → logprob: -8.578367233276367
    6. 'au' → logprob: -8.953367233276367
    7. 'a' → logprob: -9.703367233276367
    8. ' à' → logprob: -10.203367233276367
    9. '```' → logprob: -10.578367233276367
    10. '`' → logprob: -10.578367233276367

Token 2184: ' taille' (ID: 41644)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.5209162831306458
    2. 'tail' → logprob: -1.020916223526001
    3. 'size' → logprob: -3.145916223526001
    4. 'ta' → logprob: -6.27091646194458
    5. ' taille' → logprob: -7.77091646194458
    6. 't' → logprob: -9.145915985107422
    7. 'la' → logprob: -9.395915985107422
    8. 'distance' → logprob: -10.270915985107422
    9. ' k' → logprob: -10.645915985107422
    10. '#' → logprob: -10.770915985107422

Token 2185: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.008146785199642181
    2. ' k' → logprob: -4.8831467628479
    3. '```' → logprob: -8.258147239685059
    4. '1' → logprob: -9.133147239685059
    5. '
' → logprob: -9.633147239685059
    6. '=k' → logprob: -10.258147239685059
    7. '=' → logprob: -10.383147239685059
    8. ' =' → logprob: -12.008147239685059
    9. '_k' → logprob: -12.133147239685059
    10. '``' → logprob: -12.133147239685059

Token 2186: ' depuis' (ID: 16277)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.016666354611516
    2. 'q' → logprob: -5.266666412353516
    3. '(q' → logprob: -5.391666412353516
    4. ',' → logprob: -5.766666412353516
    5. ' (' → logprob: -6.891666412353516
    6. ' q' → logprob: -7.266666412353516
    7. '()' → logprob: -8.266666412353516
    8. '```' → logprob: -8.516666412353516
    9. ' with' → logprob: -8.641666412353516
    10. '()
' → logprob: -8.641666412353516

Token 2187: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.009618435986340046
    2. ' start' → logprob: -5.009618282318115
    3. '[start' → logprob: -6.384618282318115
    4. 'le' → logprob: -7.634618282318115
    5. 'visited' → logprob: -9.009618759155273
    6. '   ' → logprob: -9.384618759155273
    7. 'the' → logprob: -9.384618759155273
    8. '	start' → logprob: -9.759618759155273
    9. 'comp' → logprob: -9.884618759155273
    10. '(start' → logprob: -9.884618759155273

Token 2188: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0001310719089815393
    2. 'q' → logprob: -10.500130653381348
    3. ',' → logprob: -11.125130653381348
    4. '   ' → logprob: -11.250130653381348
    5. '(q' → logprob: -11.250130653381348
    6. '()' → logprob: -11.375130653381348
    7. '```' → logprob: -11.500130653381348
    8. ')' → logprob: -12.250130653381348
    9. '                
' → logprob: -12.250130653381348
    10. '
' → logprob: -12.375130653381348

Token 2189: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0012353454949334264
    2. '```' → logprob: -7.376235485076904
    3. 'q' → logprob: -7.876235485076904
    4. ' q' → logprob: -9.126235008239746
    5. ' (' → logprob: -10.626235008239746
    6. '                
' → logprob: -11.126235008239746
    7. ',' → logprob: -11.251235008239746
    8. '                   ' → logprob: -11.501235008239746
    9. '(
' → logprob: -11.501235008239746
    10. '``' → logprob: -11.751235008239746

Token 2190: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5772227644920349
    2. 'q' → logprob: -0.8272227644920349
    3. ' q' → logprob: -7.20222282409668
    4. '(q' → logprob: -9.07722282409668
    5. '   ' → logprob: -9.32722282409668
    6. '                
' → logprob: -9.95222282409668
    7. 'queue' → logprob: -10.07722282409668
    8. '```' → logprob: -10.07722282409668
    9. 'deque' → logprob: -10.07722282409668
    10. '       ' → logprob: -10.57722282409668

Token 2191: ' On' (ID: 2160)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.481752872467041
    2. 'q' → logprob: -0.981752872467041
    3. ' q' → logprob: -5.106752872467041
    4. '(q' → logprob: -7.731752872467041
    5. '   ' → logprob: -8.481752395629883
    6. '```' → logprob: -8.731752395629883
    7. ' (' → logprob: -9.231752395629883
    8. 'deque' → logprob: -9.356752395629883
    9. '           ' → logprob: -9.731752395629883
    10. '                   ' → logprob: -9.731752395629883

Token 2192: ' va' (ID: 3423)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.658952534198761
    2. 'append' → logprob: -1.1589524745941162
    3. 'enqueue' → logprob: -2.908952474594116
    4. '.append' → logprob: -3.283952474594116
    5. '               ' → logprob: -3.283952474594116
    6. 'en' → logprob: -4.783952713012695
    7. ' q' → logprob: -5.158952713012695
    8. 'app' → logprob: -5.908952713012695
    9. 'que' → logprob: -6.033952713012695
    10. '           ' → logprob: -6.033952713012695

Token 2193: ' simplement' (ID: 45065)
  Prédit: 'append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'append' → logprob: -1.0454312562942505
    2. 'expand' → logprob: -1.5454312562942505
    3. 'q' → logprob: -2.045431137084961
    4. 'continue' → logprob: -2.045431137084961
    5. 'add' → logprob: -3.670431137084961
    6. '                   ' → logprob: -3.920431137084961
    7. '               ' → logprob: -4.170431137084961
    8. 'enqueue' → logprob: -4.170431137084961
    9. 'contin' → logprob: -4.295431137084961
    10. 'extend' → logprob: -4.295431137084961

Token 2194: ' parcour' (ID: 130642)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.2588220536708832
    2. 'expand' → logprob: -1.7588220834732056
    3. 'extend' → logprob: -4.383821964263916
    4. 'expl' → logprob: -4.758821964263916
    5. 'queue' → logprob: -5.008821964263916
    6. 'append' → logprob: -5.133821964263916
    7. ' q' → logprob: -5.758821964263916
    8. 'continue' → logprob: -6.008821964263916
    9. 'enqueue' → logprob: -6.133821964263916
    10. 'faire' → logprob: -6.258821964263916

Token 2195: 'ir' (ID: 380)
  Prédit: 'ir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ir' → logprob: -0.0025398707948625088
    2. '
' → logprob: -6.62753963470459
    3. 'er' → logprob: -7.62753963470459
    4. 're' → logprob: -8.37753963470459
    5. '               ' → logprob: -8.87753963470459
    6. '```' → logprob: -9.75253963470459
    7. 'r' → logprob: -10.37753963470459
    8. 'ire' → logprob: -10.50253963470459
    9. '()' → logprob: -10.62753963470459
    10. '(
' → logprob: -10.87753963470459

Token 2196: ' le' (ID: 505)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.35553818941116333
    2. 'q' → logprob: -1.8555381298065186
    3. 'neighbors' → logprob: -2.7305381298065186
    4. ' adj' → logprob: -3.4805381298065186
    5. ' q' → logprob: -4.355538368225098
    6. ' neighbors' → logprob: -5.105538368225098
    7. 'la' → logprob: -5.605538368225098
    8. ' la' → logprob: -5.855538368225098
    9. 'le' → logprob: -5.980538368225098
    10. 'the' → logprob: -6.105538368225098

Token 2197: ' k' (ID: 372)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.7911933064460754
    2. 'adj' → logprob: -1.2911932468414307
    3. 'queue' → logprob: -2.0411932468414307
    4. 'graph' → logprob: -3.0411932468414307
    5. 'neighbors' → logprob: -3.5411932468414307
    6. 'q' → logprob: -3.6661932468414307
    7. 'deque' → logprob: -4.41619348526001
    8. 'front' → logprob: -4.91619348526001
    9. '```' → logprob: -5.66619348526001
    10. 'plus' → logprob: -6.16619348526001

Token 2198: ' premiers' (ID: 59140)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.658715009689331
    2. '```' → logprob: -1.908715009689331
    3. '               ' → logprob: -2.283715009689331
    4. 'neighbors' → logprob: -2.408715009689331
    5. '   ' → logprob: -2.908715009689331
    6. '=' → logprob: -3.033715009689331
    7. '-size' → logprob: -3.158715009689331
    8. '-' → logprob: -3.283715009689331
    9. 'e' → logprob: -3.408715009689331
    10. 'adj' → logprob: -3.533715009689331

Token 2199: ' niveaux' (ID: 88262)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nodes' → logprob: -0.6965063214302063
    2. ' nodes' → logprob: -1.8215062618255615
    3. 'neighbors' → logprob: -2.0715062618255615
    4. 'tokens' → logprob: -3.0715062618255615
    5. 'adj' → logprob: -3.4465062618255615
    6. 'vertices' → logprob: -3.4465062618255615
    7. ' voisins' → logprob: -3.5715062618255615
    8. ' neighbors' → logprob: -4.571506500244141
    9. '(nodes' → logprob: -4.571506500244141
    10. ')' → logprob: -4.821506500244141

Token 2200: '.
' (ID: 558)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.010208841413259506
    2. ',' → logprob: -5.135208606719971
    3. ',
' → logprob: -7.135208606719971
    4. '```' → logprob: -7.135208606719971
    5. '
' → logprob: -7.510208606719971
    6. ' (' → logprob: -7.510208606719971
    7. '                
' → logprob: -8.385209083557129
    8. ':
' → logprob: -8.510209083557129
    9. '                   ' → logprob: -8.760209083557129
    10. '``' → logprob: -9.135209083557129

Token 2201: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01768520660698414
    2. '```' → logprob: -4.142685413360596
    3. 'q' → logprob: -6.767685413360596
    4. '``' → logprob: -9.017684936523438
    5. '                
' → logprob: -9.267684936523438
    6. '                   ' → logprob: -10.017684936523438
    7. '`' → logprob: -10.017684936523438
    8. ' q' → logprob: -10.142684936523438
    9. '                ' → logprob: -10.267684936523438
    10. '			' → logprob: -10.517684936523438

Token 2202: ' #
' (ID: 21888)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.20355387032032013
    2. 'q' → logprob: -1.7035539150238037
    3. ' q' → logprob: -6.703553676605225
    4. 'depth' → logprob: -8.953554153442383
    5. 'queue' → logprob: -9.078554153442383
    6. '```' → logprob: -9.203554153442383
    7. 'deque' → logprob: -9.453554153442383
    8. '   ' → logprob: -9.703554153442383
    9. '                
' → logprob: -9.828554153442383
    10. 'front' → logprob: -10.203554153442383

Token 2203: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00011963568249484524
    2. 'q' → logprob: -10.00011920928955
    3. '                
' → logprob: -10.37511920928955
    4. '```' → logprob: -11.00011920928955
    5. '                ' → logprob: -11.50011920928955
    6. '
' → logprob: -12.62511920928955
    7. '                   ' → logprob: -12.75011920928955
    8. '   ' → logprob: -13.12511920928955
    9. ' q' → logprob: -13.50011920928955
    10. '           ' → logprob: -13.62511920928955

Token 2204: ' #' (ID: 1069)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.6979205012321472
    2. '               ' → logprob: -0.6979205012321472
    3. 'u' → logprob: -6.697920322418213
    4. 'front' → logprob: -7.322920322418213
    5. ' q' → logprob: -7.447920322418213
    6. 'queue' → logprob: -7.697920322418213
    7. '   ' → logprob: -7.822920322418213
    8. '                
' → logprob: -8.072920799255371
    9. '#' (adapté à ' #') → logprob: -8.572920799255371
    10. 'deque' → logprob: -8.947920799255371

Token 2205: ' On' (ID: 2160)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.46848180890083313
    2. '               ' → logprob: -1.0934817790985107
    3. ' q' → logprob: -4.46848201751709
    4. 'queue' → logprob: -4.84348201751709
    5. 'front' → logprob: -5.21848201751709
    6. '```' → logprob: -6.21848201751709
    7. 'depth' → logprob: -6.46848201751709
    8. 'current' → logprob: -6.84348201751709
    9. 'deque' → logprob: -6.96848201751709
    10. 'u' → logprob: -7.09348201751709

Token 2206: ' récup' (ID: 62856)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.3385084271430969
    2. 'append' → logprob: -1.3385083675384521
    3. '.extend' → logprob: -4.588508605957031
    4. 'q' → logprob: -5.463508605957031
    5. '.enqueue' → logprob: -5.588508605957031
    6. 'enqueue' → logprob: -6.713508605957031
    7. 'continue' → logprob: -7.213508605957031
    8. 'extend' → logprob: -7.338508605957031
    9. '_append' → logprob: -7.463508605957031
    10. '   ' → logprob: -7.463508605957031

Token 2207: 'ère' (ID: 4346)
  Prédit: 'ère'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ère' → logprob: -1.3146311044692993
    2. '               ' → logprob: -1.4396311044692993
    3. 'e' → logprob: -1.6896311044692993
    4. 'ra' → logprob: -2.4396309852600098
    5. '                   ' → logprob: -2.5646309852600098
    6. 'er' → logprob: -3.0646309852600098
    7. 'èr' → logprob: -3.9396309852600098
    8. 'era' → logprob: -4.18963098526001
    9. 'p' → logprob: -4.81463098526001
    10. 'pe' → logprob: -5.18963098526001

Token 2208: ' simplement' (ID: 45065)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.8440850973129272
    2. '[u' → logprob: -1.8440850973129272
    3. '[start' → logprob: -2.094085216522217
    4. 'deque' → logprob: -2.594085216522217
    5. '(start' → logprob: -3.094085216522217
    6. '   ' → logprob: -3.219085216522217
    7. 'q' → logprob: -3.219085216522217
    8. '[' → logprob: -3.344085216522217
    9. 'visited' → logprob: -3.719085216522217
    10. ' [' → logprob: -4.094085216522217

Token 2209: ' les' (ID: 1341)
  Prédit: '(start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(start' → logprob: -1.9603526592254639
    2. 'q' → logprob: -2.210352659225464
    3. 'visited' → logprob: -2.335352659225464
    4. '   ' → logprob: -2.460352659225464
    5. 'start' → logprob: -2.460352659225464
    6. '[start' → logprob: -2.585352659225464
    7. 'adj' → logprob: -2.585352659225464
    8. 'len' → logprob: -3.335352659225464
    9. 'neighbors' → logprob: -3.585352659225464
    10. '[u' → logprob: -3.710352659225464

Token 2210: ' premiers' (ID: 59140)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nodes' → logprob: -1.1084544658660889
    2. 'dist' → logprob: -1.4834544658660889
    3. 'visited' → logprob: -1.7334544658660889
    4. 'q' → logprob: -3.108454465866089
    5. 'node' → logprob: -3.483454465866089
    6. 'c' → logprob: -3.483454465866089
    7. 'to' → logprob: -3.858454465866089
    8. 'u' → logprob: -4.233454704284668
    9. 'queue' → logprob: -4.358454704284668
    10. 'level' → logprob: -4.483454704284668

Token 2211: ' k' (ID: 372)
  Prédit: 'neighbors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbors' → logprob: -1.139289379119873
    2. ' voisins' → logprob: -1.764289379119873
    3. 'k' → logprob: -2.264289379119873
    4. ' neighbors' → logprob: -2.389289379119873
    5. 'nodes' → logprob: -2.764289379119873
    6. ' nodes' → logprob: -2.764289379119873
    7. ' k' → logprob: -2.889289379119873
    8. 'vo' → logprob: -3.889289379119873
    9. 'visited' → logprob: -4.139289379119873
    10. 'q' → logprob: -4.139289379119873

Token 2212: ' somm' (ID: 44830)
  Prédit: ' nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nodes' → logprob: -0.7075597047805786
    2. 'nodes' → logprob: -1.9575597047805786
    3. ' vertices' → logprob: -2.332559585571289
    4. ' somm' → logprob: -2.582559585571289
    5. 'visited' → logprob: -3.082559585571289
    6. ' tokens' → logprob: -3.207559585571289
    7. 'vertices' → logprob: -3.457559585571289
    8. 'tokens' → logprob: -3.707559585571289
    9. ' voisins' → logprob: -4.207559585571289
    10. ' visited' → logprob: -4.332559585571289

Token 2213: 'ets' (ID: 1719)
  Prédit: 'ets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ets' → logprob: -0.029648886993527412
    2. 'êtres' → logprob: -4.279648780822754
    3. 'êts' → logprob: -5.154648780822754
    4. 'ètres' → logprob: -5.529648780822754
    5. 'ètes' → logprob: -6.404648780822754
    6. 'et' → logprob: -6.654648780822754
    7. 'è' → logprob: -6.779648780822754
    8. 'és' → logprob: -8.279648780822754
    9. '```' → logprob: -8.904648780822754
    10. 'etés' → logprob: -9.029648780822754

Token 2214: ' rencontr' (ID: 49751)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.02760968543589115
    2. 'visited' → logprob: -5.527609825134277
    3. ' (' → logprob: -5.777609825134277
    4. ' =' → logprob: -5.902609825134277
    5. ',' → logprob: -6.027609825134277
    6. '```' → logprob: -6.027609825134277
    7. ' dans' → logprob: -6.777609825134277
    8. ' en' → logprob: -6.902609825134277
    9. 'b' → logprob: -6.902609825134277
    10. ' que' → logprob: -7.152609825134277

Token 2215: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -1.0554672479629517
    2. 'us' → logprob: -1.1804672479629517
    3. 's' → logprob: -1.5554672479629517
    4. '```' → logprob: -3.805467128753662
    5. 'u' → logprob: -4.180467128753662
    6. ',' → logprob: -4.180467128753662
    7. 'es' → logprob: -4.680467128753662
    8. ' dans' → logprob: -5.055467128753662
    9. 'ues' → logprob: -5.055467128753662
    10. '               ' → logprob: -5.305467128753662

Token 2216: ' et' (ID: 859)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.009087099693715572
    2. ',' → logprob: -5.009087085723877
    3. ' (' → logprob: -6.634087085723877
    4. ',
' → logprob: -7.759087085723877
    5. 'q' → logprob: -9.009087562561035
    6. '```' → logprob: -9.134087562561035
    7. '                
' → logprob: -9.384087562561035
    8. ' q' → logprob: -9.759087562561035
    9. '(' → logprob: -9.884087562561035
    10. '
' → logprob: -10.259087562561035

Token 2217: ' calc' (ID: 25691)
  Prédit: 'calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calcul' → logprob: -0.42805054783821106
    2. ' calc' → logprob: -2.8030505180358887
    3. 'calculate' → logprob: -3.3030505180358887
    4. ' ajoute' → logprob: -3.4280505180358887
    5. 'calc' → logprob: -3.5530505180358887
    6. 'les' → logprob: -3.9280505180358887
    7. 'aj' → logprob: -4.053050518035889
    8. ' les' → logprob: -4.303050518035889
    9. 'compute' → logprob: -4.303050518035889
    10. 'cal' → logprob: -4.303050518035889

Token 2218: 'ule' (ID: 1601)
  Prédit: 'ule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ule' → logprob: -0.5481312274932861
    2. 'uler' → logprob: -1.1731312274932861
    3. 'ul' → logprob: -2.423131227493286
    4. 'ulé' → logprob: -4.173130989074707
    5. 'ulate' → logprob: -5.548130989074707
    6. 'u' → logprob: -6.923130989074707
    7. '```' → logprob: -7.048130989074707
    8. '       ' → logprob: -7.173130989074707
    9. 'ulated' → logprob: -7.673130989074707
    10. 'ules' → logprob: -7.923130989074707

Token 2219: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.6667584180831909
    2. ' la' → logprob: -1.041758418083191
    3. 'leur' → logprob: -2.6667585372924805
    4. ' leur' → logprob: -3.6667585372924805
    5. 'surface' → logprob: -3.9167585372924805
    6. 'le' → logprob: -5.0417585372924805
    7. ' surface' → logprob: -5.7917585372924805
    8. 'l' → logprob: -5.7917585372924805
    9. '```' → logprob: -6.5417585372924805
    10. '(surface' → logprob: -6.7917585372924805

Token 2220: ' surface' (ID: 9753)
  Prédit: 'surface'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'surface' → logprob: -0.10028290003538132
    2. ' surface' → logprob: -2.350282907485962
    3. 'token' → logprob: -10.850282669067383
    4. '```' → logprob: -11.225282669067383
    5. 'space' → logprob: -11.850282669067383
    6. 'distance' → logprob: -11.975282669067383
    7. ' superficie' → logprob: -12.225282669067383
    8. 's' → logprob: -12.600282669067383
    9. ' token' → logprob: -12.975282669067383
    10. '_surface' → logprob: -13.225282669067383

Token 2221: '.
' (ID: 558)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -6.945094355614856e-05
    2. ',' → logprob: -11.250069618225098
    3. '```' → logprob: -11.500069618225098
    4. '(
' → logprob: -11.625069618225098
    5. '                
' → logprob: -11.625069618225098
    6. ' (' → logprob: -12.250069618225098
    7. '
' → logprob: -12.250069618225098
    8. '()' → logprob: -12.375069618225098
    9. '(' → logprob: -12.750069618225098
    10. ',
' → logprob: -13.000069618225098

Token 2222: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0003787184541579336
    2. '
' → logprob: -8.500378608703613
    3. '                
' → logprob: -9.000378608703613
    4. '```' → logprob: -10.125378608703613
    5. '                ' → logprob: -13.125378608703613
    6. 'q' → logprob: -13.500378608703613
    7. '              ' → logprob: -13.625378608703613
    8. '`' → logprob: -13.625378608703613
    9. '       ' → logprob: -13.625378608703613
    10. '           ' → logprob: -13.750378608703613

Token 2223: ' level' (ID: 3211)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.007122988346964121
    2. 'q' → logprob: -6.007122993469238
    3. '```' → logprob: -6.507122993469238
    4. ' q' → logprob: -6.757122993469238
    5. 'front' → logprob: -7.507122993469238
    6. '                
' → logprob: -8.507122993469238
    7. '
' → logprob: -9.007122993469238
    8. '   ' → logprob: -9.132122993469238
    9. 'vertices' → logprob: -9.257122993469238
    10. 'current' → logprob: -9.507122993469238

Token 2224: '_nodes' (ID: 34593)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0229656845331192
    2. '=' → logprob: -4.272965908050537
    3. 's' → logprob: -5.647965908050537
    4. '               ' → logprob: -6.647965908050537
    5. '_sizes' → logprob: -6.772965908050537
    6. '_size' → logprob: -7.272965908050537
    7. ',' → logprob: -7.522965908050537
    8. '```' → logprob: -8.147965431213379
    9. '_nodes' → logprob: -8.647965431213379
    10. '_levels' → logprob: -8.772965431213379

Token 2225: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023416096344590187
    2. '=' → logprob: -3.773416042327881
    3. '=[]' → logprob: -9.773416519165039
    4. ',' → logprob: -10.273416519165039
    5. '=[]
' → logprob: -10.398416519165039
    6. '=[' → logprob: -11.273416519165039
    7. '.append' → logprob: -11.523416519165039
    8. '=[
' → logprob: -12.523416519165039
    9. '               ' → logprob: -12.648416519165039
    10. '```' → logprob: -12.773416519165039

Token 2226: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.32861214876174927
    2. 'deque' → logprob: -1.4536120891571045
    3. ' [' → logprob: -3.7036120891571045
    4. '[start' → logprob: -4.578612327575684
    5. '[s' → logprob: -5.703612327575684
    6. '{' → logprob: -5.953612327575684
    7. '   ' → logprob: -6.203612327575684
    8. ' deque' → logprob: -6.703612327575684
    9. '[current' → logprob: -8.328612327575684
    10. '[cur' → logprob: -8.703612327575684

Token 2227: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0005072805215604603
    2. '```' → logprob: -8.375507354736328
    3. 'q' → logprob: -9.625507354736328
    4. '			' → logprob: -9.875507354736328
    5. '       ' → logprob: -10.500507354736328
    6. ',' → logprob: -10.625507354736328
    7. '                   ' → logprob: -10.750507354736328
    8. 'for' → logprob: -10.875507354736328
    9. '                
' → logprob: -11.125507354736328
    10. '		       ' → logprob: -11.625507354736328

Token 2228: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' (adapté à ' q') → logprob: -0.06621953099966049
    2. '               ' → logprob: -2.8162195682525635
    3. 'level' → logprob: -6.191219329833984
    4. ' q' → logprob: -7.316219329833984
    5. 'queue' → logprob: -7.941219329833984
    6. 'visited' → logprob: -8.441219329833984
    7. 'while' → logprob: -8.566219329833984
    8. '                
' → logprob: -8.816219329833984
    9. 'deque' → logprob: -9.191219329833984
    10. '   ' → logprob: -9.441219329833984

Token 2229: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0002681304467841983
    2. '.' → logprob: -9.25026798248291
    3. '.p' → logprob: -9.87526798248291
    4. '=' → logprob: -10.12526798248291
    5. 'append' → logprob: -10.12526798248291
    6. '.extend' → logprob: -10.75026798248291
    7. '               ' → logprob: -12.00026798248291
    8. '   ' → logprob: -12.75026798248291
    9. '```' → logprob: -12.87526798248291
    10. '.enqueue' → logprob: -13.37526798248291

Token 2230: '(start' (ID: 20008)
  Prédit: '(start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(start' → logprob: -0.048673324286937714
    2. 'start' → logprob: -3.048673391342163
    3. '((' → logprob: -9.673673629760742
    4. ' start' → logprob: -12.173673629760742
    5. ' (' → logprob: -12.298673629760742
    6. '[start' → logprob: -12.423673629760742
    7. '(' → logprob: -12.548673629760742
    8. '               ' → logprob: -12.673673629760742
    9. '   ' → logprob: -14.423673629760742
    10. '(
' → logprob: -14.548673629760742

Token 2231: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.4764691889286041
    2. ')' → logprob: -0.9764691591262817
    3. '               ' → logprob: -6.226469039916992
    4. '):
' → logprob: -8.726469039916992
    5. ',' → logprob: -9.351469039916992
    6. '[' → logprob: -10.851469039916992
    7. ')
' → logprob: -10.976469039916992
    8. '       ' → logprob: -11.476469039916992
    9. ')

' → logprob: -11.601469039916992
    10. '           ' → logprob: -11.726469039916992

Token 2232: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0035233369562774897
    2. 'while' → logprob: -6.003523349761963
    3. '```' → logprob: -7.753523349761963
    4. '       ' → logprob: -8.003522872924805
    5. '
' → logprob: -9.128522872924805
    6. ' while' → logprob: -9.378522872924805
    7. '           ' → logprob: -10.253522872924805
    8. '   ' → logprob: -10.878522872924805
    9. '                   ' → logprob: -11.503522872924805
    10. '	while' → logprob: -11.628522872924805

Token 2233: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.12538520991802216
    2. '               ' → logprob: -2.250385284423828
    3. ' while' → logprob: -4.750385284423828
    4. 'level' → logprob: -6.250385284423828
    5. '                   ' → logprob: -7.375385284423828
    6. 'visited' → logprob: -8.000385284423828
    7. '```' → logprob: -8.125385284423828
    8. 'count' → logprob: -9.000385284423828
    9. '
' → logprob: -9.125385284423828
    10. '0' → logprob: -9.625385284423828

Token 2234: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.009837077930569649
    2. 'len' → logprob: -4.6348371505737305
    3. ' q' → logprob: -9.63483715057373
    4. 'level' → logprob: -12.25983715057373
    5. '   ' → logprob: -12.38483715057373
    6. ' len' → logprob: -12.50983715057373
    7. 'True' → logprob: -14.00983715057373
    8. '       ' → logprob: -14.50983715057373
    9. '
' → logprob: -14.75983715057373
    10. '	q' → logprob: -15.25983715057373

Token 2235: ' and' (ID: 326)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.016272947192192078
    2. ':' → logprob: -4.141273021697998
    3. '                   ' → logprob: -9.14127254486084
    4. ' and' → logprob: -9.76627254486084
    5. '               ' → logprob: -10.39127254486084
    6. '):
' → logprob: -11.14127254486084
    7. '```' → logprob: -11.64127254486084
    8. '   ' → logprob: -12.64127254486084
    9. 'and' → logprob: -12.76627254486084
    10. '           ' → logprob: -13.26627254486084

Token 2236: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -3.8889261304575484e-06
    2. ' len' → logprob: -12.500003814697266
    3. '(len' → logprob: -16.125003814697266
    4. '	len' → logprob: -19.625003814697266
    5. 'level' → logprob: -20.000003814697266
    6. '               ' → logprob: -20.625003814697266
    7. '
' → logprob: -20.875003814697266
    8. '   ' → logprob: -21.875003814697266
    9. '           ' → logprob: -22.250003814697266
    10. 'length' → logprob: -22.375003814697266

Token 2237: '(level' (ID: 51690)
  Prédit: '(level'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(level' → logprob: -0.0011722482740879059
    2. 'level' → logprob: -6.751172065734863
    3. '[level' → logprob: -13.376172065734863
    4. ' level' → logprob: -14.751172065734863
    5. 'q' → logprob: -17.00117301940918
    6. '(' → logprob: -17.25117301940918
    7. ' (' → logprob: -17.50117301940918
    8. '	level' → logprob: -17.75117301940918
    9. '(q' → logprob: -18.62617301940918
    10. '(
' → logprob: -19.37617301940918

Token 2238: '_nodes' (ID: 34593)
  Prédit: '_nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_nodes' → logprob: -0.0007418495370075107
    2. 'level' → logprob: -7.625741958618164
    3. '(level' → logprob: -8.500741958618164
    4. '_level' → logprob: -10.875741958618164
    5. '[level' → logprob: -12.000741958618164
    6. 'nodes' → logprob: -12.125741958618164
    7. '_tokens' → logprob: -12.625741958618164
    8. '(nodes' → logprob: -12.750741958618164
    9. '```' → logprob: -12.875741958618164
    10. '+' → logprob: -13.375741958618164

Token 2239: ')' (ID: 8)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.576687753200531
    2. '<' → logprob: -0.826687753200531
    3. ')' → logprob: -7.951687812805176
    4. ')<' → logprob: -8.576687812805176
    5. '<len' → logprob: -9.076687812805176
    6. '<size' → logprob: -10.826687812805176
    7. '<n' → logprob: -11.576687812805176
    8. '()<' → logprob: -11.701687812805176
    9. '<int' → logprob: -11.826687812805176
    10. '<w' → logprob: -11.951687812805176

Token 2240: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.2021826058626175
    2. ' <' → logprob: -1.702182650566101
    3. '<len' → logprob: -7.952182769775391
    4. '<size' → logprob: -9.20218276977539
    5. '<n' → logprob: -9.57718276977539
    6. '<u' → logprob: -10.45218276977539
    7. '<int' → logprob: -10.45218276977539
    8. '<w' → logprob: -10.45218276977539
    9. '<s' → logprob: -10.57718276977539
    10. '!=' → logprob: -10.82718276977539

Token 2241: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -5.512236498361744e-07
    2. ' k' → logprob: -14.625000953674316
    3. '{k' → logprob: -20.0
    4. '```' → logprob: -20.875
    5. '	k' → logprob: -21.75
    6. '   ' → logprob: -22.0
    7. '
' → logprob: -22.375
    8. '=k' → logprob: -22.5
    9. 'к' → logprob: -22.75
    10. ' к' → logprob: -22.875

Token 2242: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.004742210730910301
    2. ':' → logprob: -5.75474214553833
    3. '):
' → logprob: -7.25474214553833
    4. '                   ' → logprob: -7.50474214553833
    5. ' :
' → logprob: -9.379742622375488
    6. '               ' → logprob: -10.004742622375488
    7. ')' → logprob: -10.504742622375488
    8. ' and' → logprob: -10.629742622375488
    9. '   ' → logprob: -10.754742622375488
    10. '=' → logprob: -10.754742622375488

Token 2243: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.6000171899795532
    2. 'u' → logprob: -0.8500171899795532
    3. ' u' → logprob: -4.225017070770264
    4. '   ' → logprob: -5.100017070770264
    5. 'v' → logprob: -6.350017070770264
    6. '	u' → logprob: -7.725017070770264
    7. 'node' → logprob: -8.225017547607422
    8. '               ' → logprob: -8.850017547607422
    9. '```' → logprob: -8.850017547607422
    10. '(u' → logprob: -9.850017547607422

Token 2244: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' (adapté à ' u') → logprob: -0.0010955691104754806
    2. ' u' → logprob: -7.001095771789551
    3. '                   ' → logprob: -9.37609577178955
    4. 'v' → logprob: -9.50109577178955
    5. 'node' → logprob: -11.12609577178955
    6. '   ' → logprob: -12.00109577178955
    7. '                       ' → logprob: -13.50109577178955
    8. '```' → logprob: -14.25109577178955
    9. '	u' → logprob: -14.62609577178955
    10. 'current' → logprob: -14.75109577178955

Token 2245: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12698280811309814
    2. '=' → logprob: -2.1269826889038086
    3. '=q' → logprob: -9.876982688903809
    4. ')' → logprob: -14.251982688903809
    5. '=u' → logprob: -14.751982688903809
    6. '                   ' → logprob: -14.876982688903809
    7. '
' → logprob: -15.001982688903809
    8. '=
' → logprob: -15.376982688903809
    9. ':' → logprob: -16.001983642578125
    10. ' =
' → logprob: -16.126983642578125

Token 2246: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.00020354038861114532
    2. ' q' → logprob: -8.500203132629395
    3. '	q' → logprob: -18.12520408630371
    4. 'level' → logprob: -18.62520408630371
    5. '   ' → logprob: -20.75020408630371
    6. '_q' → logprob: -20.75020408630371
    7. 'queue' → logprob: -21.25020408630371
    8. '
' → logprob: -21.75020408630371
    9. ' ' → logprob: -22.37520408630371
    10. 'u' → logprob: -22.62520408630371

Token 2247: '.p' (ID: 1201)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4333450198173523
    2. '.append' → logprob: -1.558345079421997
    3. ' =' → logprob: -2.808345079421997
    4. ')' → logprob: -3.058345079421997
    5. 'q' → logprob: -5.183344841003418
    6. '.pop' → logprob: -5.308344841003418
    7. '                   ' → logprob: -5.308344841003418
    8. '.' → logprob: -5.433344841003418
    9. '=q' → logprob: -5.808344841003418
    10. ':
' → logprob: -6.933344841003418

Token 2248: 'opleft' (ID: 182170)
  Prédit: 'opleft'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'opleft' → logprob: -0.0022028323728591204
    2. 'op' → logprob: -6.127202987670898
    3. 'p' → logprob: -11.377202987670898
    4. '```' → logprob: -13.127202987670898
    5. 'ople' → logprob: -13.752202987670898
    6. 'append' → logprob: -14.002202987670898
    7. 'opped' → logprob: -14.627202987670898
    8. 'oplevel' → logprob: -14.877202987670898
    9. 'pop' → logprob: -15.002202987670898
    10. 'opt' → logprob: -15.752202987670898

Token 2249: '()
' (ID: 1234)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.02369321510195732
    2. '
' → logprob: -4.023693084716797
    3. '               ' → logprob: -5.773693084716797
    4. '                    
' → logprob: -6.898693084716797
    5. '                       ' → logprob: -8.023693084716797
    6. 'level' → logprob: -8.648693084716797
    7. '```' → logprob: -9.148693084716797
    8. ',' → logprob: -9.523693084716797
    9. ')
' → logprob: -9.523693084716797
    10. ')' → logprob: -9.523693084716797

Token 2250: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.007511387579143047
    2. '               ' → logprob: -5.757511615753174
    3. 'level' → logprob: -6.257511615753174
    4. ' level' → logprob: -6.882511615753174
    5. '                       ' → logprob: -7.632511615753174
    6. '   ' → logprob: -7.757511615753174
    7. '           ' → logprob: -8.382511138916016
    8. '       ' → logprob: -8.757511138916016
    9. '```' → logprob: -10.507511138916016
    10. '				' → logprob: -10.632511138916016

Token 2251: ' level' (ID: 3211)
  Prédit: 'level'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'level' (adapté à ' level') → logprob: -3.857719275401905e-05
    2. '                   ' → logprob: -10.250038146972656
    3. '   ' → logprob: -13.250038146972656
    4. ' level' → logprob: -13.625038146972656
    5. '               ' → logprob: -15.875038146972656
    6. '                       ' → logprob: -17.750038146972656
    7. '	level' → logprob: -18.125038146972656
    8. '(level' → logprob: -18.375038146972656
    9. '       ' → logprob: -18.500038146972656
    10. '           ' → logprob: -18.625038146972656

Token 2252: '_nodes' (ID: 34593)
  Prédit: '_nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_nodes' → logprob: -6.704273118884885e-07
    2. 'nodes' → logprob: -15.125000953674316
    3. '_tokens' → logprob: -15.875000953674316
    4. '   ' → logprob: -17.375
    5. '                   ' → logprob: -18.25
    6. '_' → logprob: -18.25
    7. '               ' → logprob: -18.25
    8. '```' → logprob: -18.375
    9. '_vertices' → logprob: -18.75
    10. '_node' → logprob: -18.875

Token 2253: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00021629150433000177
    2. '.' → logprob: -8.500216484069824
    3. '.extend' → logprob: -11.625216484069824
    4. ' .' → logprob: -13.500216484069824
    5. 'append' → logprob: -13.500216484069824
    6. '                   ' → logprob: -14.750216484069824
    7. '.app' → logprob: -14.875216484069824
    8. '.Append' → logprob: -16.375215530395508
    9. '                       ' → logprob: -17.375215530395508
    10. '               ' → logprob: -17.500215530395508

Token 2254: '(u' (ID: 17057)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.0011745095252990723
    2. '(u' → logprob: -6.751174449920654
    3. ' u' → logprob: -12.376174926757812
    4. '(' → logprob: -16.751174926757812
    5. '	u' → logprob: -17.001174926757812
    6. '[u' → logprob: -17.126174926757812
    7. '(
' → logprob: -18.251174926757812
    8. '
' → logprob: -19.501174926757812
    9. '   ' → logprob: -19.501174926757812
    10. '_u' → logprob: -20.626174926757812

Token 2255: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006895938888192177
    2. ')
' → logprob: -5.006896018981934
    3. '                   ' → logprob: -9.006896018981934
    4. '               ' → logprob: -10.506896018981934
    5. '<|end|>' → logprob: -11.631896018981934
    6. ' )' → logprob: -12.006896018981934
    7. '       ' → logprob: -12.131896018981934
    8. '           ' → logprob: -12.756896018981934
    9. '
' → logprob: -14.006896018981934
    10. '')' → logprob: -14.131896018981934

Token 2256: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.01560621801763773
    2. '               ' → logprob: -4.26560640335083
    3. 'for' → logprob: -6.64060640335083
    4. '           ' → logprob: -9.265605926513672
    5. '```' → logprob: -10.390605926513672
    6. '   ' → logprob: -12.640605926513672
    7. '                       ' → logprob: -13.015605926513672
    8. '       ' → logprob: -13.265605926513672
    9. ' for' → logprob: -13.890605926513672
    10. '
' → logprob: -14.390605926513672

Token 2257: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -4.251091377227567e-05
    2. '               ' → logprob: -10.250042915344238
    3. '                   ' → logprob: -12.250042915344238
    4. ' for' → logprob: -13.000042915344238
    5. '   ' → logprob: -17.000041961669922
    6. '           ' → logprob: -17.375041961669922
    7. '	for' → logprob: -18.250041961669922
    8. '```' → logprob: -19.375041961669922
    9. '       ' → logprob: -19.625041961669922
    10. '
' → logprob: -19.625041961669922

Token 2258: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.1014835461974144
    2. 'v' → logprob: -2.3514835834503174
    3. 'nv' → logprob: -7.351483345031738
    4. 'vw' → logprob: -8.351483345031738
    5. 'nbr' → logprob: -8.351483345031738
    6. 'nei' → logprob: -9.726483345031738
    7. 'nw' → logprob: -10.101483345031738
    8. 'nx' → logprob: -10.601483345031738
    9. 'wv' → logprob: -11.226483345031738
    10. 'vv' → logprob: -11.976483345031738

Token 2259: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03367370739579201
    2. 'in' → logprob: -3.4086737632751465
    3. '	in' → logprob: -11.158673286437988
    4. '                   ' → logprob: -11.908673286437988
    5. '   ' → logprob: -12.908673286437988
    6. '    ' → logprob: -13.908673286437988
    7. '```' → logprob: -14.408673286437988
    8. '                    ' → logprob: -14.658673286437988
    9. '                       ' → logprob: -15.158673286437988
    10. 'if' → logprob: -15.283673286437988

Token 2260: ' comp' (ID: 1050)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: 0.0
    2. ' comp' → logprob: -16.75
    3. 'com' → logprob: -19.875
    4. '(comp' → logprob: -20.125
    5. '	comp' → logprob: -20.25
    6. 'cmp' → logprob: -22.625
    7. '   ' → logprob: -23.0
    8. 'compl' → logprob: -23.0
    9. '
' → logprob: -23.0
    10. 'adj' → logprob: -23.5

Token 2261: '_adj' (ID: 117293)
  Prédit: '_adj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_adj' → logprob: -4.3822154111694545e-05
    2. '[u' → logprob: -10.750043869018555
    3. 'adj' → logprob: -11.375043869018555
    4. '_ad' → logprob: -12.125043869018555
    5. '[w' → logprob: -13.125043869018555
    6. 'Adj' → logprob: -13.750043869018555
    7. '[' → logprob: -14.375043869018555
    8. '   ' → logprob: -14.750043869018555
    9. '```' → logprob: -14.750043869018555
    10. '[v' → logprob: -15.375043869018555

Token 2262: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -1.0921942703134846e-05
    2. 'u' → logprob: -12.00001049041748
    3. '(u' → logprob: -12.87501049041748
    4. '```' → logprob: -14.50001049041748
    5. '               ' → logprob: -14.75001049041748
    6. '[' → logprob: -15.00001049041748
    7. '   ' → logprob: -15.12501049041748
    8. '           ' → logprob: -15.25001049041748
    9. '                   ' → logprob: -15.50001049041748
    10. '[v' → logprob: -16.000011444091797

Token 2263: ']:
' (ID: 22152)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.5913218259811401
    2. '):
' → logprob: -1.3413218259811401
    3. ']:
' → logprob: -2.5913219451904297
    4. ':
' → logprob: -2.7163219451904297
    5. '                   ' → logprob: -3.5913219451904297
    6. ':' → logprob: -5.46632194519043
    7. 'if' → logprob: -5.59132194519043
    8. '               ' → logprob: -6.34132194519043
    9. '():
' → logprob: -6.34132194519043
    10. '```' → logprob: -6.71632194519043

Token 2264: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -2.165027217415627e-05
    2. '```' → logprob: -11.500021934509277
    3. '                      ' → logprob: -12.625021934509277
    4. '                           ' → logprob: -12.625021934509277
    5. '                        ' → logprob: -13.875021934509277
    6. 'if' → logprob: -14.000021934509277
    7. '                     ' → logprob: -14.125021934509277
    8. '                               ' → logprob: -14.625021934509277
    9. '                   ' → logprob: -15.000021934509277
    10. '       ' → logprob: -15.125021934509277

Token 2265: ' if' (ID: 538)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.10250231623649597
    2. '                       ' → logprob: -3.3525023460388184
    3. 'if' (adapté à ' if') → logprob: -3.4775023460388184
    4. ' if' → logprob: -3.6025023460388184
    5. '```' → logprob: -5.977502346038818
    6. '                               ' → logprob: -6.977502346038818
    7. '                   ' → logprob: -8.22750186920166
    8. '           ' → logprob: -8.97750186920166
    9. ' not' → logprob: -9.22750186920166
    10. '``' → logprob: -9.35250186920166

Token 2266: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.1269301027059555
    2. ' not' → logprob: -2.126929998397827
    3. '(not' → logprob: -13.251930236816406
    4. '                       ' → logprob: -15.751930236816406
    5. '	not' → logprob: -16.751930236816406
    6. 'visited' → logprob: -17.001930236816406
    7. '                           ' → logprob: -17.001930236816406
    8. '                               ' → logprob: -17.876930236816406
    9. '_not' → logprob: -18.376930236816406
    10. '                   ' → logprob: -18.876930236816406

Token 2267: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.0002613358374219388
    2. ' visited' → logprob: -8.250261306762695
    3. '   ' → logprob: -19.375261306762695
    4. '```' → logprob: -19.625261306762695
    5. '           ' → logprob: -19.875261306762695
    6. '
' → logprob: -20.125261306762695
    7. 'visible' → logprob: -20.500261306762695
    8. '                   ' → logprob: -20.625261306762695
    9. '       ' → logprob: -21.000261306762695
    10. '               ' → logprob: -21.125261306762695

Token 2268: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -1.735893965815194e-05
    2. '[w' → logprob: -11.250017166137695
    3. 'w' → logprob: -13.250017166137695
    4. 'b' → logprob: -14.125017166137695
    5. '_w' → logprob: -14.250017166137695
    6. '                   ' → logprob: -15.000017166137695
    7. '       ' → logprob: -15.375017166137695
    8. '               ' → logprob: -16.000017166137695
    9. '```' → logprob: -16.000017166137695
    10. '   ' → logprob: -16.375017166137695

Token 2269: 'fs' (ID: 6469)
  Prédit: 'fs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fs' → logprob: -2.2200749754119897e-06
    2. 'b' → logprob: -13.750001907348633
    3. '_b' → logprob: -14.750001907348633
    4. 'FS' → logprob: -15.000001907348633
    5. 'f' → logprob: -16.125001907348633
    6. '_fs' → logprob: -16.625001907348633
    7. ' bfs' → logprob: -16.625001907348633
    8. 'bs' → logprob: -16.750001907348633
    9. 'efs' → logprob: -17.000001907348633
    10. 'q' → logprob: -17.125001907348633

Token 2270: '[w' (ID: 94341)
  Prédit: '[w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[w' → logprob: -0.0002043748099822551
    2. '                       ' → logprob: -9.125204086303711
    3. '[' → logprob: -10.125204086303711
    4. '                           ' → logprob: -10.250204086303711
    5. '               ' → logprob: -12.250204086303711
    6. '           ' → logprob: -12.500204086303711
    7. '                               ' → logprob: -12.625204086303711
    8. '                   ' → logprob: -12.750204086303711
    9. 'w' → logprob: -13.375204086303711
    10. '```' → logprob: -14.000204086303711

Token 2271: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.09771737456321716
    2. '                           ' → logprob: -2.84771728515625
    3. '                       ' → logprob: -3.72271728515625
    4. ':
' → logprob: -4.97271728515625
    5. ']:' → logprob: -7.22271728515625
    6. '                   ' → logprob: -7.34771728515625
    7. '']:
' → logprob: -7.59771728515625
    8. '"]:
' → logprob: -7.59771728515625
    9. '                               ' → logprob: -7.97271728515625
    10. '):
' → logprob: -7.97271728515625

Token 2272: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.0016470879781991243
    2. '                               ' → logprob: -6.751646995544434
    3. '                       ' → logprob: -7.876646995544434
    4. '```' → logprob: -9.626646995544434
    5. '                            ' → logprob: -11.251646995544434
    6. '                   ' → logprob: -12.251646995544434
    7. '                            
' → logprob: -13.126646995544434
    8. '               ' → logprob: -13.751646995544434
    9. '                        ' → logprob: -13.751646995544434
    10. '                          ' → logprob: -13.751646995544434

Token 2273: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' (adapté à ' visited') → logprob: -0.2843541204929352
    2. ' visited' → logprob: -1.5343540906906128
    3. '                               ' → logprob: -4.159354209899902
    4. '                           ' → logprob: -4.159354209899902
    5. '                                   ' → logprob: -7.784354209899902
    6. '                            ' → logprob: -9.284354209899902
    7. '```' → logprob: -9.534354209899902
    8. '                             ' → logprob: -10.784354209899902
    9. '           ' → logprob: -11.284354209899902
    10. '                   ' → logprob: -11.784354209899902

Token 2274: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -1.2352385965641588e-05
    2. '                           ' → logprob: -12.125012397766113
    3. 'b' → logprob: -13.125012397766113
    4. '                   ' → logprob: -14.125012397766113
    5. '                       ' → logprob: -14.125012397766113
    6. '               ' → logprob: -14.250012397766113
    7. '   ' → logprob: -14.250012397766113
    8. '           ' → logprob: -14.750012397766113
    9. '                               ' → logprob: -14.750012397766113
    10. '       ' → logprob: -14.875012397766113

Token 2275: 'fs' (ID: 6469)
  Prédit: 'fs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fs' → logprob: -0.0007020648336037993
    2. '_fs' → logprob: -7.750701904296875
    3. 'FS' → logprob: -8.250701904296875
    4. '_b' → logprob: -12.125701904296875
    5. '_f' → logprob: -12.500701904296875
    6. 'fsm' → logprob: -15.125701904296875
    7. 'f' → logprob: -15.375701904296875
    8. 'fsi' → logprob: -15.750701904296875
    9. 'qs' → logprob: -16.625701904296875
    10. 'fst' → logprob: -16.625701904296875

Token 2276: '[w' (ID: 94341)
  Prédit: '[w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[w' → logprob: -0.32288479804992676
    2. '                           ' → logprob: -1.4478847980499268
    3. '=True' → logprob: -3.5728847980499268
    4. ' =' → logprob: -5.322884559631348
    5. '                               ' → logprob: -5.447884559631348
    6. '=' → logprob: -6.572884559631348
    7. '               ' → logprob: -7.572884559631348
    8. '                       ' → logprob: -7.822884559631348
    9. '                            ' → logprob: -8.072884559631348
    10. ' True' → logprob: -8.447884559631348

Token 2277: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07641284912824631
    2. ' =' → logprob: -3.7014129161834717
    3. '=True' → logprob: -3.7014129161834717
    4. '[w' → logprob: -4.201412677764893
    5. '                           ' → logprob: -5.576412677764893
    6. ']' → logprob: -6.451412677764893
    7. '[u' → logprob: -6.451412677764893
    8. '                               ' → logprob: -6.826412677764893
    9. ']=' → logprob: -7.201412677764893
    10. '=w' → logprob: -8.70141315460205

Token 2278: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.007922452874481678
    2. '=True' → logprob: -5.257922649383545
    3. ' =' → logprob: -6.007922649383545
    4. '                           ' → logprob: -8.632922172546387
    5. '                               ' → logprob: -10.132922172546387
    6. 'True' → logprob: -12.757922172546387
    7. '=
' → logprob: -13.007922172546387
    8. '                       ' → logprob: -14.007922172546387
    9. '                            ' → logprob: -14.632922172546387
    10. '=False' → logprob: -14.882922172546387

Token 2279: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.004084808751940727
    2. ' True' → logprob: -5.504084587097168
    3. '                           ' → logprob: -12.004084587097168
    4. '                               ' → logprob: -16.254085540771484
    5. '(True' → logprob: -16.504085540771484
    6. '=True' → logprob: -18.379085540771484
    7. '                            ' → logprob: -18.379085540771484
    8. 'true' → logprob: -18.504085540771484
    9. '                                   ' → logprob: -18.879085540771484
    10. '1' → logprob: -18.879085540771484

Token 2280: '
' (ID: 198)
  Prédit: '                               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.20490975677967072
    2. '                           ' → logprob: -1.7049098014831543
    3. '							' → logprob: -6.079909801483154
    4. '						' → logprob: -8.079909324645996
    5. '```' → logprob: -8.079909324645996
    6. '                                   ' → logprob: -8.704909324645996
    7. ',' → logprob: -9.204909324645996
    8. '                            ' → logprob: -9.579909324645996
    9. '                             ' → logprob: -9.829909324645996
    10. 'q' → logprob: -10.454909324645996

Token 2281: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.0038254910614341497
    2. '                               ' → logprob: -5.753825664520264
    3. '```' → logprob: -8.003825187683105
    4. '						' → logprob: -9.003825187683105
    5. '                            ' → logprob: -9.753825187683105
    6. '                                   ' → logprob: -9.878825187683105
    7. '                       ' → logprob: -11.128825187683105
    8. '	                       ' → logprob: -11.253825187683105
    9. '                            
' → logprob: -11.878825187683105
    10. '							' → logprob: -12.003825187683105

Token 2282: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' (adapté à ' q') → logprob: -0.0011827271664515138
    2. ' q' → logprob: -7.501182556152344
    3. '                               ' → logprob: -7.876182556152344
    4. '                                   ' → logprob: -9.126182556152344
    5. '                           ' → logprob: -9.501182556152344
    6. '	q' → logprob: -10.001182556152344
    7. '```' → logprob: -11.751182556152344
    8. '                                       ' → logprob: -12.126182556152344
    9. '   ' → logprob: -13.501182556152344
    10. '                   ' → logprob: -14.126182556152344

Token 2283: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0010927118128165603
    2. 'append' → logprob: -6.876092910766602
    3. '                           ' → logprob: -10.001092910766602
    4. '                               ' → logprob: -12.126092910766602
    5. 'q' → logprob: -12.376092910766602
    6. '.' → logprob: -13.126092910766602
    7. '                                   ' → logprob: -13.876092910766602
    8. ' append' → logprob: -14.876092910766602
    9. '```' → logprob: -15.001092910766602
    10. '.enqueue' → logprob: -15.126092910766602

Token 2284: '(w' (ID: 7420)
  Prédit: '(w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -0.10026868432760239
    2. 'w' → logprob: -2.350268602371216
    3. ' w' → logprob: -10.350268363952637
    4. '                           ' → logprob: -10.975268363952637
    5. ' (' → logprob: -11.725268363952637
    6. '(' → logprob: -12.975268363952637
    7. '                               ' → logprob: -13.975268363952637
    8. '#w' → logprob: -14.725268363952637
    9. '<w' → logprob: -14.975268363952637
    10. ''w' → logprob: -15.225268363952637

Token 2285: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00017290872347075492
    2. '                           ' → logprob: -9.62517261505127
    3. '())' → logprob: -10.37517261505127
    4. '<|end|>' → logprob: -10.50017261505127
    5. ')
' → logprob: -10.62517261505127
    6. ')return' → logprob: -12.50017261505127
    7. '```' → logprob: -12.75017261505127
    8. '           ' → logprob: -13.00017261505127
    9. '                       ' → logprob: -13.50017261505127
    10. '(' → logprob: -13.75017261505127

Token 2286: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -6.098748053773306e-05
    2. '           ' → logprob: -10.12506103515625
    3. '```' → logprob: -11.00006103515625
    4. '
' → logprob: -13.12506103515625
    5. '                   ' → logprob: -14.00006103515625
    6. '       ' → logprob: -14.12506103515625
    7. '                
' → logprob: -15.25006103515625
    8. 'if' → logprob: -16.37506103515625
    9. '                           ' → logprob: -16.50006103515625
    10. '            
' → logprob: -16.75006103515625

Token 2287: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0021432433277368546
    2. 'if' (adapté à ' if') → logprob: -6.252143383026123
    3. '           ' → logprob: -8.502142906188965
    4. ' if' → logprob: -12.127142906188965
    5. '                   ' → logprob: -13.252142906188965
    6. '       ' → logprob: -13.627142906188965
    7. 'import' → logprob: -13.752142906188965
    8. '   ' → logprob: -14.377142906188965
    9. '```' → logprob: -14.377142906188965
    10. '
' → logprob: -15.377142906188965

Token 2288: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.6931729912757874
    2. ' len' → logprob: -0.6931729912757874
    3. '               ' → logprob: -10.6931734085083
    4. '(len' → logprob: -12.8181734085083
    5. '                   ' → logprob: -15.6931734085083
    6. '                ' → logprob: -16.568172454833984
    7. '              ' → logprob: -17.193172454833984
    8. '           ' → logprob: -17.943172454833984
    9. '=len' → logprob: -18.693172454833984
    10. '            ' → logprob: -18.943172454833984

Token 2289: '(level' (ID: 51690)
  Prédit: '(level'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(level' → logprob: -1.9361264946837764e-07
    2. 'level' → logprob: -15.875
    3. '(' → logprob: -17.375
    4. '[level' → logprob: -18.625
    5. ' (' → logprob: -19.0
    6. '(
' → logprob: -20.625
    7. '(layer' → logprob: -21.625
    8. '	level' → logprob: -22.25
    9. '(line' → logprob: -22.875
    10. '(depth' → logprob: -23.5

Token 2290: '_nodes' (ID: 34593)
  Prédit: '(level'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(level' → logprob: -0.10029789805412292
    2. '_nodes' → logprob: -2.3502979278564453
    3. 'level' → logprob: -10.100297927856445
    4. '[level' → logprob: -10.475297927856445
    5. '               ' → logprob: -11.100297927856445
    6. 'nodes' → logprob: -13.475297927856445
    7. '           ' → logprob: -13.475297927856445
    8. '(nodes' → logprob: -13.725297927856445
    9. 'Nodes' → logprob: -13.725297927856445
    10. '(' → logprob: -15.100297927856445

Token 2291: ')' (ID: 8)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6248478293418884
    2. ' ==' → logprob: -0.8748478293418884
    3. ')' → logprob: -3.124847888946533
    4. ')==' → logprob: -5.624847888946533
    5. '<' → logprob: -9.624847412109375
    6. ' <' → logprob: -9.874847412109375
    7. '```' → logprob: -10.999847412109375
    8. '()==' → logprob: -11.124847412109375
    9. ']==' → logprob: -11.749847412109375
    10. '==
' → logprob: -11.874847412109375

Token 2292: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.002278127009049058
    2. ' ==' → logprob: -6.1272783279418945
    3. '==
' → logprob: -9.877278327941895
    4. ')==' → logprob: -10.502278327941895
    5. ']==' → logprob: -12.252278327941895
    6. '===' → logprob: -13.252278327941895
    7. '()==' → logprob: -13.377278327941895
    8. ')' → logprob: -13.377278327941895
    9. '=' → logprob: -13.502278327941895
    10. '>=' → logprob: -13.502278327941895

Token 2293: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0005530327325686812
    2. ' k' → logprob: -7.500553131103516
    3. '               ' → logprob: -17.375553131103516
    4. '                   ' → logprob: -17.625553131103516
    5. '	k' → logprob: -18.750553131103516
    6. ' к' → logprob: -19.000553131103516
    7. '{k' → logprob: -19.625553131103516
    8. '   ' → logprob: -20.250553131103516
    9. '                       ' → logprob: -20.500553131103516
    10. '                           ' → logprob: -20.625553131103516

Token 2294: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.007657977286726236
    2. ':' → logprob: -5.007658004760742
    3. '                   ' → logprob: -7.382658004760742
    4. '):
' → logprob: -8.632658004760742
    5. '               ' → logprob: -9.132658004760742
    6. ':

' → logprob: -12.007658004760742
    7. '():
' → logprob: -12.007658004760742
    8. '                       ' → logprob: -12.132658004760742
    9. '```' → logprob: -12.882658004760742
    10. ' :
' → logprob: -12.882658004760742

Token 2295: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00014191943046171218
    2. '```' → logprob: -9.875142097473145
    3. '               ' → logprob: -10.000142097473145
    4. 'surface' → logprob: -11.500142097473145
    5. 'u' → logprob: -11.750142097473145
    6. '
' → logprob: -12.375142097473145
    7. '   ' → logprob: -12.375142097473145
    8. '                    
' → logprob: -12.500142097473145
    9. '                       ' → logprob: -12.500142097473145
    10. 'c' → logprob: -13.500142097473145

Token 2296: ' #' (ID: 1069)
  Prédit: 'subset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'subset' → logprob: -0.9338346123695374
    2. 'cur' → logprob: -1.6838345527648926
    3. 'curr' → logprob: -2.3088345527648926
    4. 'c' → logprob: -2.8088345527648926
    5. 'ans' → logprob: -2.9338345527648926
    6. 'sub' → logprob: -2.9338345527648926
    7. 'current' → logprob: -3.0588345527648926
    8. 'surface' → logprob: -3.0588345527648926
    9. '                   ' → logprob: -4.308834552764893
    10. 'nodes' → logprob: -4.558834552764893

Token 2297: ' surface' (ID: 9753)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -1.4755810499191284
    2. 'ans' → logprob: -1.7255810499191284
    3. 'cur' → logprob: -1.9755810499191284
    4. 'subset' → logprob: -2.100581169128418
    5. 'surface' → logprob: -2.475581169128418
    6. 'sub' → logprob: -2.725581169128418
    7. 'current' → logprob: -2.975581169128418
    8. 'curr' → logprob: -3.350581169128418
    9. 'c' → logprob: -3.350581169128418
    10. 'sur' → logprob: -4.600581169128418

Token 2298: ' des' (ID: 731)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1041700541973114
    2. 'ans' → logprob: -3.354170083999634
    3. 'val' → logprob: -3.604170083999634
    4. ' =' → logprob: -4.354169845581055
    5. 'surface' → logprob: -5.104169845581055
    6. '_val' → logprob: -5.854169845581055
    7. 's' → logprob: -5.979169845581055
    8. 'cur' → logprob: -6.354169845581055
    9. 'sur' → logprob: -6.354169845581055
    10. 'surf' → logprob: -6.479169845581055

Token 2299: ' nodes' (ID: 15749)
  Prédit: 'level'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'level' → logprob: -0.04951026663184166
    2. 'set' → logprob: -3.2995102405548096
    3. '{' → logprob: -4.674510478973389
    4. '{
' → logprob: -7.049510478973389
    5. '[level' → logprob: -7.299510478973389
    6. '   ' → logprob: -9.17451000213623
    7. 'c' → logprob: -9.54951000213623
    8. 'comp' → logprob: -9.79951000213623
    9. 'node' → logprob: -9.92451000213623
    10. ' level' → logprob: -10.04951000213623

Token 2300: ' cho' (ID: 2552)
  Prédit: '_set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_set' → logprob: -0.6780286431312561
    2. '=' → logprob: -1.5530285835266113
    3. ' =' → logprob: -2.0530285835266113
    4. '_nodes' → logprob: -2.8030285835266113
    5. '                   ' → logprob: -3.3030285835266113
    6. '_c' → logprob: -4.303028583526611
    7. 'set' → logprob: -4.553028583526611
    8. '_val' → logprob: -4.678028583526611
    9. '               ' → logprob: -5.053028583526611
    10. 'nodes' → logprob: -6.053028583526611

Token 2301: 'isis' (ID: 11352)
  Prédit: 'isis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isis' → logprob: -0.22279158234596252
    2. 'is' → logprob: -1.8477915525436401
    3. 'isen' → logprob: -4.22279167175293
    4. 'sis' → logprob: -4.72279167175293
    5. 's' → logprob: -4.84779167175293
    6. 'sen' → logprob: -5.59779167175293
    7. 'isin' → logprob: -6.84779167175293
    8. 'isent' → logprob: -6.97279167175293
    9. 'ises' → logprob: -7.59779167175293
    10. 'isie' → logprob: -7.84779167175293

Token 2302: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.02786199562251568
    2. 'c' → logprob: -4.527862071990967
    3. 'nodes' → logprob: -4.777862071990967
    4. 'selected' → logprob: -6.527862071990967
    5. ' =' → logprob: -7.027862071990967
    6. '```' → logprob: -7.152862071990967
    7. '               ' → logprob: -7.402862071990967
    8. 'set' → logprob: -7.402862071990967
    9. 'node' → logprob: -7.527862071990967
    10. '   ' → logprob: -7.527862071990967

Token 2303: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0049803052097558975
    2. 'ans' → logprob: -5.504980087280273
    3. '                       ' → logprob: -8.254980087280273
    4. '               ' → logprob: -8.379980087280273
    5. 'surface' → logprob: -9.004980087280273
    6. '   ' → logprob: -9.254980087280273
    7. '```' → logprob: -9.379980087280273
    8. '           ' → logprob: -11.379980087280273
    9. 'current' → logprob: -11.379980087280273
    10. 'area' → logprob: -11.504980087280273

Token 2304: ' nodes' (ID: 15749)
  Prédit: 'subset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'subset' → logprob: -0.9267444610595703
    2. 'c' → logprob: -2.1767444610595703
    3. '                   ' → logprob: -2.1767444610595703
    4. 'curr' → logprob: -2.4267444610595703
    5. 'current' → logprob: -2.8017444610595703
    6. 'ans' → logprob: -2.9267444610595703
    7. 'nodes' (adapté à ' nodes') → logprob: -3.0517444610595703
    8. 'selected' → logprob: -3.1767444610595703
    9. 'cur' → logprob: -3.3017444610595703
    10. 'sub' → logprob: -3.9267444610595703

Token 2305: '_set' (ID: 5451)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0951615646481514
    2. ' =' → logprob: -3.0951616764068604
    3. '_set' → logprob: -3.2201616764068604
    4. '=set' → logprob: -5.220161437988281
    5. '```' → logprob: -9.845161437988281
    6. '_nodes' → logprob: -10.470161437988281
    7. 'set' → logprob: -10.470161437988281
    8. '   ' → logprob: -11.970161437988281
    9. '_SET' → logprob: -12.345161437988281
    10. '_subset' → logprob: -12.845161437988281

Token 2306: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6114588379859924
    2. '=' → logprob: -0.8614588379859924
    3. '=set' → logprob: -3.3614587783813477
    4. '={' → logprob: -8.486458778381348
    5. 'set' → logprob: -13.111458778381348
    6. '{' → logprob: -13.486458778381348
    7. '={
' → logprob: -14.986458778381348
    8. '                   ' → logprob: -14.986458778381348
    9. '(set' → logprob: -15.111458778381348
    10. ' ={' → logprob: -15.611458778381348

Token 2307: ' set' (ID: 920)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.4740804135799408
    2. 'set' → logprob: -0.9740804433822632
    3. '{sub' → logprob: -13.974080085754395
    4. '{s' → logprob: -14.474080085754395
    5. '{x' → logprob: -14.599080085754395
    6. ' set' → logprob: -14.974080085754395
    7. '{
' → logprob: -15.349080085754395
    8. ' {' → logprob: -15.599080085754395
    9. '(set' → logprob: -15.599080085754395
    10. '{i' → logprob: -15.599080085754395

Token 2308: '(comp' (ID: 60272)
  Prédit: '(level'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(level' → logprob: -0.010430543683469296
    2. '(comp' → logprob: -5.135430335998535
    3. '([' → logprob: -5.885430335998535
    4. 'level' → logprob: -6.760430335998535
    5. 'comp' → logprob: -9.135430335998535
    6. '(node' → logprob: -9.260430335998535
    7. '[level' → logprob: -9.260430335998535
    8. '(' → logprob: -9.385430335998535
    9. '(nodes' → logprob: -9.385430335998535
    10. '(
' → logprob: -10.385430335998535

Token 2309: '[v' (ID: 36561)
  Prédit: '_nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_nodes' → logprob: -0.5458704233169556
    2. '(level' → logprob: -1.4208704233169556
    3. '[level' → logprob: -2.045870304107666
    4. 'level' → logprob: -3.045870304107666
    5. 'nodes' → logprob: -6.545870304107666
    6. 'node' → logprob: -8.670870780944824
    7. '[node' → logprob: -8.795870780944824
    8. '(nodes' → logprob: -8.920870780944824
    9. '(node' → logprob: -9.295870780944824
    10. ')' → logprob: -9.420870780944824

Token 2310: ']' (ID: 60)
  Prédit: '_nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_nodes' → logprob: -0.09505826979875565
    2. 'nodes' → logprob: -3.4700582027435303
    3. ']' → logprob: -3.7200582027435303
    4. '])' → logprob: -3.8450582027435303
    5. 'level' → logprob: -4.970058441162109
    6. 'for' → logprob: -5.845058441162109
    7. '])
' → logprob: -6.720058441162109
    8. 'odes' → logprob: -7.220058441162109
    9. '_ids' → logprob: -7.595058441162109
    10. '   ' → logprob: -7.970058441162109

Token 2311: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9181002974510193
    2. ')' → logprob: -1.293100357055664
    3. '[level' → logprob: -2.418100357055664
    4. 'nodes' → logprob: -3.043100357055664
    5. '])' → logprob: -3.168100357055664
    6. '[v' → logprob: -3.293100357055664
    7. '(nodes' → logprob: -4.043100357055664
    8. ' for' → logprob: -4.043100357055664
    9. ']' → logprob: -4.168100357055664
    10. '(level' → logprob: -4.293100357055664

Token 2312: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.1472419600977446e-06
    2. ' v' → logprob: -14.500000953674316
    3. 'level' → logprob: -14.875000953674316
    4. '	v' → logprob: -15.750000953674316
    5. 'comp' → logprob: -17.750001907348633
    6. '
' → logprob: -18.250001907348633
    7. '$v' → logprob: -18.375001907348633
    8. '[v' → logprob: -18.500001907348633
    9. 'vq' → logprob: -19.000001907348633
    10. ')v' → logprob: -19.250001907348633

Token 2313: ' in' (ID: 306)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.027746636420488358
    2. 'in' → logprob: -3.6527466773986816
    3. ' in' → logprob: -6.652746677398682
    4. ' v' → logprob: -8.902746200561523
    5. '   ' → logprob: -12.027746200561523
    6. 'level' → logprob: -12.777746200561523
    7. ',v' → logprob: -12.777746200561523
    8. '_v' → logprob: -13.902746200561523
    9. '[v' → logprob: -14.152746200561523
    10. '
' → logprob: -14.152746200561523

Token 2314: ' level' (ID: 3211)
  Prédit: 'level'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'level' → logprob: -8.061054359131958e-06
    2. ' level' → logprob: -11.750007629394531
    3. '[level' → logprob: -15.875007629394531
    4. '(level' → logprob: -18.75000762939453
    5. '   ' → logprob: -18.75000762939453
    6. '
' → logprob: -19.50000762939453
    7. '	level' → logprob: -19.87500762939453
    8. 'layer' → logprob: -20.50000762939453
    9. ' ' → logprob: -20.50000762939453
    10. 'range' → logprob: -20.75000762939453

Token 2315: '_nodes' (ID: 34593)
  Prédit: '_nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_nodes' → logprob: -0.00023750975378789008
    2. '   ' → logprob: -9.500237464904785
    3. '_ids' → logprob: -9.875237464904785
    4. 'nodes' → logprob: -10.000237464904785
    5. '_id' → logprob: -11.625237464904785
    6. 'level' → logprob: -11.625237464904785
    7. ')' → logprob: -11.750237464904785
    8. 'range' → logprob: -12.000237464904785
    9. '
' → logprob: -12.625237464904785
    10. 'id' → logprob: -13.000237464904785

Token 2316: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.5124863982200623
    2. '                   ' → logprob: -1.262486457824707
    3. ')' → logprob: -2.137486457824707
    4. '                  ' → logprob: -10.512486457824707
    5. '               ' → logprob: -10.762486457824707
    6. '                       ' → logprob: -11.512486457824707
    7. ')

' → logprob: -12.387486457824707
    8. '                    ' → logprob: -12.512486457824707
    9. ' )
' → logprob: -12.637486457824707
    10. '           ' → logprob: -12.637486457824707

Token 2317: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -3.309382373117842e-05
    2. '               ' → logprob: -11.500033378601074
    3. '           ' → logprob: -11.875033378601074
    4. '```' → logprob: -12.250033378601074
    5. '       ' → logprob: -12.875033378601074
    6. '   ' → logprob: -13.125033378601074
    7. 'ans' → logprob: -13.375033378601074
    8. '                       ' → logprob: -13.500033378601074
    9. 'surface' → logprob: -13.625033378601074
    10. '
' → logprob: -13.750033378601074

Token 2318: ' cur' (ID: 4396)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.15612450242042542
    2. '                   ' → logprob: -2.1561245918273926
    3. 'surface' → logprob: -3.6561245918273926
    4. 'print' → logprob: -7.281124591827393
    5. 'surf' → logprob: -7.406124591827393
    6. 'res' → logprob: -7.906124591827393
    7. 'sur' → logprob: -8.031124114990234
    8. '               ' → logprob: -8.531124114990234
    9. '                       ' → logprob: -8.656124114990234
    10. ' ans' → logprob: -8.781124114990234

Token 2319: '_s' (ID: 1278)
  Prédit: '_surface'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_surface' → logprob: -0.19881367683410645
    2. 'surface' → logprob: -1.8238136768341064
    3. '_sur' → logprob: -4.698813438415527
    4. 'urface' → logprob: -6.323813438415527
    5. '_cur' → logprob: -6.448813438415527
    6. 'cur' → logprob: -6.698813438415527
    7. '=' → logprob: -6.823813438415527
    8. '```' → logprob: -6.823813438415527
    9. '_ans' → logprob: -7.573813438415527
    10. 'sur' → logprob: -7.573813438415527

Token 2320: 'urf' (ID: 37959)
  Prédit: 'urface'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'urface' → logprob: -0.0007755621336400509
    2. 'urf' → logprob: -7.750775337219238
    3. 'surface' → logprob: -8.500775337219238
    4. 'ur' → logprob: -9.000775337219238
    5. '_surface' → logprob: -11.625775337219238
    6. 'cur' → logprob: -12.500775337219238
    7. '=' → logprob: -12.750775337219238
    8. 'uf' → logprob: -13.000775337219238
    9. 'et' → logprob: -15.750775337219238
    10. ' surface' → logprob: -16.375776290893555

Token 2321: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014004243537783623
    2. ' =' → logprob: -4.639004230499268
    3. '                   ' → logprob: -5.514004230499268
    4. 'cur' → logprob: -9.139004707336426
    5. '                  ' → logprob: -11.014004707336426
    6. '               ' → logprob: -11.014004707336426
    7. '_cur' → logprob: -11.514004707336426
    8. '=
' → logprob: -11.639004707336426
    9. '                       ' → logprob: -12.014004707336426
    10. ')=' → logprob: -12.139004707336426

Token 2322: ' surface' (ID: 9753)
  Prédit: 'surface'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'surface' → logprob: -0.0015062900492921472
    2. ' surface' → logprob: -6.501506328582764
    3. '                   ' → logprob: -12.501505851745605
    4. '(surface' → logprob: -15.126505851745605
    5. 'surf' → logprob: -18.876506805419922
    6. '                    ' → logprob: -18.876506805419922
    7. 'urface' → logprob: -19.001506805419922
    8. '.surface' → logprob: -19.001506805419922
    9. '   ' → logprob: -19.126506805419922
    10. '               ' → logprob: -19.251506805419922

Token 2323: '(nodes' (ID: 86139)
  Prédit: '(nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nodes' → logprob: -8.180258191714529e-06
    2. '(' → logprob: -12.750008583068848
    3. '(
' → logprob: -12.875008583068848
    4. '(cur' → logprob: -13.750008583068848
    5. 'nodes' → logprob: -14.750008583068848
    6. '(node' → logprob: -15.000008583068848
    7. '(tokens' → logprob: -15.500008583068848
    8. ' (' → logprob: -16.12500762939453
    9. '```' → logprob: -16.12500762939453
    10. '(n' → logprob: -16.37500762939453

Token 2324: '_set' (ID: 5451)
  Prédit: '_set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_set' → logprob: -0.006355804391205311
    2. '_nodes' → logprob: -5.6313557624816895
    3. 'nodes' → logprob: -6.7563557624816895
    4. 'set' → logprob: -7.1313557624816895
    5. '(nodes' → logprob: -8.381356239318848
    6. ')set' → logprob: -8.881356239318848
    7. ')' → logprob: -9.131356239318848
    8. '               ' → logprob: -9.631356239318848
    9. '                   ' → logprob: -9.631356239318848
    10. 's' → logprob: -9.881356239318848

Token 2325: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0010124455438926816
    2. ')
' → logprob: -7.126012325286865
    3. '                   ' → logprob: -8.501012802124023
    4. '               ' → logprob: -12.751012802124023
    5. ' )' → logprob: -14.876012802124023
    6. '                       ' → logprob: -15.251012802124023
    7. '           ' → logprob: -15.376012802124023
    8. '       ' → logprob: -15.751012802124023
    9. '   ' → logprob: -15.751012802124023
    10. ')
' → logprob: -16.251012802124023

Token 2326: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00019567293929867446
    2. '```' → logprob: -9.125195503234863
    3. '               ' → logprob: -10.125195503234863
    4. '           ' → logprob: -10.500195503234863
    5. 'if' → logprob: -11.250195503234863
    6. '                       ' → logprob: -13.000195503234863
    7. '       ' → logprob: -13.375195503234863
    8. '                  ' → logprob: -14.125195503234863
    9. '   ' → logprob: -14.750195503234863
    10. '``' → logprob: -15.250195503234863

Token 2327: ' if' (ID: 538)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.38710516691207886
    2. 'if' (adapté à ' if') → logprob: -1.1371052265167236
    3. 'ans' → logprob: -8.512104988098145
    4. ' if' → logprob: -11.387104988098145
    5. '               ' → logprob: -11.387104988098145
    6. '           ' → logprob: -12.387104988098145
    7. '                       ' → logprob: -12.387104988098145
    8. '```' → logprob: -13.887104988098145
    9. '                           ' → logprob: -15.012104988098145
    10. '                  ' → logprob: -15.137104988098145

Token 2328: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -3.607391408877447e-05
    2. ' cur' → logprob: -10.250036239624023
    3. '                   ' → logprob: -14.500036239624023
    4. '                       ' → logprob: -15.875036239624023
    5. '                           ' → logprob: -18.500036239624023
    6. '                               ' → logprob: -19.875036239624023
    7. '   ' → logprob: -20.125036239624023
    8. '               ' → logprob: -20.625036239624023
    9. '_cur' → logprob: -21.250036239624023
    10. '	cur' → logprob: -21.250036239624023

Token 2329: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.0002724217774812132
    2. 'cur' → logprob: -8.500272750854492
    3. 's' → logprob: -11.125272750854492
    4. 'ans' → logprob: -11.750272750854492
    5. '   ' → logprob: -11.875272750854492
    6. '<' → logprob: -12.125272750854492
    7. ' <' → logprob: -12.125272750854492
    8. '<s' → logprob: -12.750272750854492
    9. '(cur' → logprob: -12.875272750854492
    10. '                   ' → logprob: -12.875272750854492

Token 2330: 'urf' (ID: 37959)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.21185614168643951
    2. '<' → logprob: -1.8368561267852783
    3. 'ur' → logprob: -4.586856365203857
    4. 'urf' → logprob: -4.836856365203857
    5. 'ans' → logprob: -5.461856365203857
    6. '<s' → logprob: -5.961856365203857
    7. '<u' → logprob: -6.711856365203857
    8. '(cur' → logprob: -6.961856365203857
    9. '   ' → logprob: -6.961856365203857
    10. '[cur' → logprob: -7.086856365203857

Token 2331: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.0009211080614477396
    2. ' <' → logprob: -7.000921249389648
    3. '<int' → logprob: -12.625921249389648
    4. '<std' → logprob: -13.500921249389648
    5. '<|end|>' → logprob: -14.375921249389648
    6. '<size' → logprob: -14.750921249389648
    7. '[cur' → logprob: -15.125921249389648
    8. '[' → logprob: -15.250921249389648
    9. '<uint' → logprob: -15.250921249389648
    10. '<context' → logprob: -15.375921249389648

Token 2332: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -3.547789674485102e-05
    2. ' ans' → logprob: -10.250035285949707
    3. '                   ' → logprob: -18.000036239624023
    4. '	ans' → logprob: -19.000036239624023
    5. '(ans' → logprob: -19.125036239624023
    6. 'cur' → logprob: -19.125036239624023
    7. '
' → logprob: -19.250036239624023
    8. '               ' → logprob: -19.750036239624023
    9. '           ' → logprob: -20.000036239624023
    10. '                           ' → logprob: -20.000036239624023

Token 2333: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9776194095611572
    2. ':
' → logprob: -1.1026194095611572
    3. '=' → logprob: -1.3526194095611572
    4. '                       ' → logprob: -3.6026194095611572
    5. '                   ' → logprob: -6.227619171142578
    6. '                           ' → logprob: -7.102619171142578
    7. ' =' → logprob: -7.352619171142578
    8. '):
' → logprob: -7.477619171142578
    9. '==' → logprob: -7.727619171142578
    10. '                               ' → logprob: -7.852619171142578

Token 2334: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.034526627510786057
    2. '                   ' → logprob: -4.284526824951172
    3. 'ans' → logprob: -4.409526824951172
    4. '                           ' → logprob: -5.034526824951172
    5. '                               ' → logprob: -7.034526824951172
    6. '               ' → logprob: -8.659526824951172
    7. '```' → logprob: -9.034526824951172
    8. ' ans' → logprob: -9.409526824951172
    9. '                                   ' → logprob: -10.159526824951172
    10. '                        
' → logprob: -10.284526824951172

Token 2335: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -3.607391408877447e-05
    2. '                           ' → logprob: -10.500036239624023
    3. '                       ' → logprob: -12.500036239624023
    4. ' ans' → logprob: -12.750036239624023
    5. '                               ' → logprob: -14.375036239624023
    6. '                   ' → logprob: -14.500036239624023
    7. '(ans' → logprob: -15.000036239624023
    8. '```' → logprob: -16.000036239624023
    9. '	ans' → logprob: -16.125036239624023
    10. '           ' → logprob: -16.250036239624023

Token 2336: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.4140441635390744e-05
    2. ' =' → logprob: -11.375014305114746
    3. '=
' → logprob: -13.375014305114746
    4. '.=' → logprob: -15.000014305114746
    5. '+=' → logprob: -15.250014305114746
    6. '=True' → logprob: -16.50001335144043
    7. '==' → logprob: -16.62501335144043
    8. ')=' → logprob: -16.62501335144043
    9. '|=
' → logprob: -16.87501335144043
    10. '*=' → logprob: -17.00001335144043

Token 2337: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -3.128163257315464e-07
    2. ' cur' → logprob: -15.5
    3. '(cur' → logprob: -23.5
    4. '	cur' → logprob: -23.5
    5. '_cur' → logprob: -24.25
    6. '[cur' → logprob: -24.5
    7. '                   ' → logprob: -24.75
    8. 'Cur' → logprob: -25.375
    9. 'curr' → logprob: -25.5
    10. '               ' → logprob: -26.375

Token 2338: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.002558188047260046
    2. 'surf' → logprob: -6.25255823135376
    3. 's' → logprob: -7.75255823135376
    4. 'urf' → logprob: -8.752557754516602
    5. 'cur' → logprob: -10.502557754516602
    6. 'sur' → logprob: -11.877557754516602
    7. 'ans' → logprob: -12.252557754516602
    8. 'ur' → logprob: -14.377557754516602
    9. 'Surf' → logprob: -14.752557754516602
    10. '_sur' → logprob: -15.252557754516602

Token 2339: 'urf' (ID: 37959)
  Prédit: 'urf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'urf' → logprob: -0.013742659240961075
    2. 'ans' → logprob: -4.638742446899414
    3. 'cur' → logprob: -5.888742446899414
    4. 'ur' → logprob: -7.763742446899414
    5. '_ans' → logprob: -7.888742446899414
    6. 'surf' → logprob: -8.388742446899414
    7. 'uf' → logprob: -10.138742446899414
    8. 'urface' → logprob: -10.388742446899414
    9. 'urt' → logprob: -10.888742446899414
    10. '(ans' → logprob: -10.888742446899414

Token 2340: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25732287764549255
    2. '
' → logprob: -1.507322907447815
    3. '        
' → logprob: -5.757322788238525
    4. '   ' → logprob: -7.132322788238525
    5. '<|end|>' → logprob: -7.257322788238525
    6. '```' → logprob: -8.257323265075684
    7. '    
' → logprob: -9.132323265075684
    8. '           ' → logprob: -9.257323265075684
    9. 'print' → logprob: -10.507323265075684
    10. '                        
' → logprob: -10.507323265075684

Token 2341: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2469237595796585
    2. '   ' → logprob: -2.1219236850738525
    3. '
' → logprob: -2.4969236850738525
    4. 'print' → logprob: -4.246923923492432
    5. '        
' → logprob: -6.746923923492432
    6. '```' → logprob: -7.121923923492432
    7. '    
' → logprob: -8.371923446655273
    8. '           ' → logprob: -10.246923446655273
    9. '<|end|>' → logprob: -10.371923446655273
    10. '
' → logprob: -10.871923446655273

Token 2342: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.024865692481398582
    2. 'if' → logprob: -4.024865627288818
    3. '```' → logprob: -5.024865627288818
    4. '   ' → logprob: -9.649866104125977
    5. '``' → logprob: -10.774866104125977
    6. '       ' → logprob: -11.399866104125977
    7. ' if' → logprob: -11.524866104125977
    8. '
' → logprob: -12.024866104125977
    9. ' print' → logprob: -12.024866104125977
    10. '        
' → logprob: -13.524866104125977

Token 2343: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -4.36574100604048e-06
    2. 'ans' → logprob: -12.500004768371582
    3. '(f' → logprob: -14.625004768371582
    4. '(' → logprob: -16.500003814697266
    5. '('' → logprob: -18.250003814697266
    6. '(-' → logprob: -19.250003814697266
    7. '	ans' → logprob: -19.625003814697266
    8. '((' → logprob: -20.000003814697266
    9. ' ans' → logprob: -20.500003814697266
    10. '()' → logprob: -20.500003814697266

Token 2344: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.006797439884394407
    2. 'if' → logprob: -5.0067973136901855
    3. ')' → logprob: -9.756797790527344
    4. ' or' → logprob: -11.006797790527344
    5. '	if' → logprob: -12.131797790527344
    6. '   ' → logprob: -14.006797790527344
    7. '       ' → logprob: -14.006797790527344
    8. ' если' → logprob: -16.131797790527344
    9. '```' → logprob: -16.381797790527344
    10. 'If' → logprob: -16.381797790527344

Token 2345: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -1.5048530030981055e-06
    2. ' ans' → logprob: -13.500001907348633
    3. '(ans' → logprob: -18.500001907348633
    4. '	ans' → logprob: -20.625001907348633
    5. '_ans' → logprob: -22.125001907348633
    6. '   ' → logprob: -23.250001907348633
    7. '
' → logprob: -24.000001907348633
    8. 'answer' → logprob: -26.500001907348633
    9. '           ' → logprob: -26.500001907348633
    10. 'ansi' → logprob: -26.625001907348633

Token 2346: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.029058977961540222
    2. ' !=' → logprob: -3.6540589332580566
    3. '!=-' → logprob: -5.904058933258057
    4. '<' → logprob: -11.279059410095215
    5. '```' → logprob: -13.154059410095215
    6. ')!=' → logprob: -13.279059410095215
    7. '>' → logprob: -13.404059410095215
    8. '()!=' → logprob: -13.529059410095215
    9. '==' → logprob: -13.779059410095215
    10. '       ' → logprob: -14.029059410095215

Token 2347: ' INF' (ID: 69196)
  Prédit: 'INF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'INF' → logprob: -0.33954399824142456
    2. '10' → logprob: -1.4645440578460693
    3. 'sys' → logprob: -3.7145440578460693
    4. '(' → logprob: -4.96454381942749
    5. '100' → logprob: -5.08954381942749
    6. 'IN' → logprob: -5.21454381942749
    7. 'float' → logprob: -5.83954381942749
    8. '1' → logprob: -6.65204381942749
    9. '-' → logprob: -6.65204381942749
    10. 'int' → logprob: -6.83954381942749

Token 2348: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.38687410950660706
    2. ' else' → logprob: -1.1368740797042847
    3. '```' → logprob: -13.511874198913574
    4. '        ' → logprob: -14.761874198913574
    5. '	else' → logprob: -15.011874198913574
    6. '   ' → logprob: -15.761874198913574
    7. '       ' → logprob: -15.761874198913574
    8. '     ' → logprob: -16.011873245239258
    9. 'Else' → logprob: -16.261873245239258
    10. '    ' → logprob: -16.511873245239258

Token 2349: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -2.7610454708337784e-05
    2. ' -' → logprob: -10.500027656555176
    3. '   ' → logprob: -19.87502670288086
    4. ''-' → logprob: -21.25002670288086
    5. '"-' → logprob: -21.75002670288086
    6. '\-' → logprob: -22.50002670288086
    7. '(-' → logprob: -22.62502670288086
    8. '`' → logprob: -23.12502670288086
    9. '−' → logprob: -23.37502670288086
    10. '	' → logprob: -23.87502670288086

Token 2350: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. '-' → logprob: -16.125
    3. '```' → logprob: -16.875
    4. '`' → logprob: -18.5
    5. ' ' → logprob: -19.625
    6. '``' → logprob: -19.75
    7. ''' → logprob: -20.375
    8. '   ' → logprob: -20.375
    9. ' -' → logprob: -20.75
    10. '"' → logprob: -20.875

Token 2351: ')


' (ID: 7861)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00010473522706888616
    2. '<|end|>' → logprob: -9.500104904174805
    3. ')
' → logprob: -11.375104904174805
    4. '())' → logprob: -11.875104904174805
    5. '```' → logprob: -12.750104904174805
    6. '")' → logprob: -13.250104904174805
    7. '`)' → logprob: -13.375104904174805
    8. '')' → logprob: -13.750104904174805
    9. '   ' → logprob: -13.875104904174805
    10. ' )' → logprob: -13.875104904174805

Token 2352: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2353: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.5759461522102356
    2. ' __' → logprob: -0.8259461522102356
    3. '_name' → logprob: -12.950945854187012
    4. 'name' → logprob: -13.700945854187012
    5. ' ' → logprob: -14.450945854187012
    6. '/__' → logprob: -14.450945854187012
    7. '```' → logprob: -14.575945854187012
    8. 'Name' → logprob: -14.700945854187012
    9. '.__' → logprob: -15.075945854187012
    10. '___' → logprob: -15.450945854187012

Token 2354: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0024365431163460016
    2. '==' → logprob: -6.502436637878418
    3. ' ==' → logprob: -7.502436637878418
    4. '```' → logprob: -9.002436637878418
    5. '__.__' → logprob: -9.502436637878418
    6. 'name' → logprob: -9.627436637878418
    7. ' __' → logprob: -10.627436637878418
    8. '=="' → logprob: -10.627436637878418
    9. '.__' → logprob: -11.627436637878418
    10. 'if' → logprob: -11.877436637878418

Token 2355: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -2.7729658540920354e-05
    2. '==' → logprob: -10.875027656555176
    3. '__.__' → logprob: -12.375027656555176
    4. '=="' → logprob: -13.625027656555176
    5. '____' → logprob: -14.000027656555176
    6. '__('' → logprob: -14.375027656555176
    7. '___' → logprob: -14.500027656555176
    8. '__("' → logprob: -15.125027656555176
    9. '__["' → logprob: -15.375027656555176
    10. ' ==' → logprob: -15.500027656555176

Token 2356: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.36474698781967163
    2. '=="' → logprob: -2.2397470474243164
    3. '__' → logprob: -2.3647470474243164
    4. ' ==' → logprob: -2.3647470474243164
    5. '=='' → logprob: -4.739747047424316
    6. '```' → logprob: -6.739747047424316
    7. '__.__' → logprob: -7.364747047424316
    8. '()==' → logprob: -8.864747047424316
    9. '.__' → logprob: -9.614747047424316
    10. '__":
' → logprob: -9.864747047424316

Token 2357: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0031846018973737955
    2. ''' → logprob: -5.753184795379639
    3. '__' → logprob: -12.37818431854248
    4. ' "__' → logprob: -12.87818431854248
    5. ' '__' → logprob: -17.503185272216797
    6. 'main' → logprob: -17.878185272216797
    7. '   ' → logprob: -18.628185272216797
    8. '"name' → logprob: -18.878185272216797
    9. '"user' → logprob: -19.128185272216797
    10. '("__' → logprob: -20.128185272216797

Token 2358: 'main' (ID: 7731)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.17653070390224457
    2. 'main' → logprob: -2.301530599594116
    3. '"' → logprob: -2.801530599594116
    4. ''' → logprob: -6.926530838012695
    5. '__":
' → logprob: -11.926530838012695
    6. 'built' → logprob: -12.426530838012695
    7. 'name' → logprob: -12.676530838012695
    8. '=="' → logprob: -13.676530838012695
    9. '"name' → logprob: -14.051530838012695
    10. 'sys' → logprob: -14.301530838012695

Token 2359: '__":
' (ID: 49892)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.6436831951141357
    2. '__":
' → logprob: -0.7686831951141357
    3. '__':
' → logprob: -4.643683433532715
    4. '==' → logprob: -7.268683433532715
    5. ' ==' → logprob: -8.268683433532715
    6. '=="' → logprob: -9.018683433532715
    7. '__["' → logprob: -9.143683433532715
    8. '__.__' → logprob: -10.268683433532715
    9. '__:' → logprob: -10.268683433532715
    10. '__
' → logprob: -10.643683433532715

Token 2360: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -1.4974866644479334e-05
    2. '	main' → logprob: -11.500015258789062
    3. '   ' → logprob: -12.625015258789062
    4. ' main' → logprob: -13.750015258789062
    5. '_main' → logprob: -14.875015258789062
    6. '(main' → logprob: -17.000015258789062
    7. '.main' → logprob: -18.375015258789062
    8. 'import' → logprob: -18.875015258789062
    9. '```' → logprob: -19.250015258789062
    10. 'Main' → logprob: -20.000015258789062

Token 2361: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: 0.0
    2. ' main' → logprob: -16.75
    3. '	main' → logprob: -19.75
    4. 'import' → logprob: -22.875
    5. '   ' → logprob: -23.0
    6. '(main' → logprob: -23.375
    7. '_main' → logprob: -23.5
    8. '.main' → logprob: -24.125
    9. 'Main' → logprob: -25.875
    10. '/main' → logprob: -26.375

Token 2362: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 2360
Tokens correctement prédits (1ère position, stricte): 616
Tokens correctement prédits (1ère position, avec adaptation): 659
Tokens correctement prédits (top 10): 1438
Précision stricte (1ère position): 26.10%
Précision adaptée (1ère position): 27.92%
Précision (top 10): 60.93%
================================================================================
