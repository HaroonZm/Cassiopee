================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:16:17
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from abc import ABC, abstractmethod
from typing import List, Tuple


class RunningSpeedModel(ABC):
    @abstractmethod
    def get_speed(self, time_since_last_carrot: float) -> float:
        pass


class RabbitSpeedModel(RunningSpeedModel):
    def __init__(self, base_speed: float, boosted_speed: float, boost_duration: float):
        self.U = base_speed
        self.V = boosted_speed
        self.T = boost_duration

    def get_speed(self, time_since_last_carrot: float) -> float:
        if time_since_last_carrot <= self.T:
            return self.V
        else:
            return self.U


class CarrotStorage:
    def __init__(self, capacity: int):
        self.capacity = capacity
        self.carrots = 0

    def can_store(self) -> bool:
        return self.carrots < self.capacity

    def store(self):
        if self.can_store():
            self.carrots += 1
        else:
            raise RuntimeError("Storage full")

    def use(self):
        if self.carrots > 0:
            self.carrots -= 1
        else:
            raise RuntimeError("No carrots stored")


class CourseSegment:
    def __init__(self, start: float, end: float):
        # start and end positions in meters
        self.start = start
        self.end = end
        self.length = end - start


class RunningCourse:
    def __init__(self, length: float, carrot_positions: List[float]):
        self.length = length
        self.carrot_positions = carrot_positions
        self.segments = self._create_segments()

    def _create_segments(self) -> List[CourseSegment]:
        segments = []
        prev = 0.0
        for pos in self.carrot_positions:
            segments.append(CourseSegment(prev, pos))
            prev = pos
        segments.append(CourseSegment(prev, self.length))
        return segments


class RabbitRunner:
    def __init__(self, speed_model: RabbitSpeedModel, storage_capacity: int, course: RunningCourse):
        self.speed_model = speed_model
        self.storage = CarrotStorage(storage_capacity)
        self.course = course
        self.N = len(course.carrot_positions)
        self.memo = dict()  # For dynamic programming memoization

    def _dp(self, idx: int, carrots_carried: int, last_carrot_time: float, current_time: float) -> float:
        """
        :param idx: index of next carrot to consider (0-based)
        :param carrots_carried: number of carrots currently carried (0 to K)
        :param last_carrot_time: time when last carrot was eaten (or -inf initially)
        :param current_time: accumulated time spent so far
        :return: minimal time to reach goal from current state
        """
        key = (idx, carrots_carried, last_carrot_time)
        if key in self.memo:
            return self.memo[key]

        # If all carrots considered, just run to goal from current position
        if idx == len(self.course.segments):
            # from segment idx-1 end to goal (actually last segment end to goal is zero length)
            segment = self.course.segments[-1]
            dist = segment.length
            time_since_last_eat = current_time - last_carrot_time if last_carrot_time >= 0 else float('inf')
            speed = self.speed_model.get_speed(time_since_last_eat)
            res = dist / speed
            self.memo[key] = res
            return res

        # Current segment: from prev carrot pos to carrot idx pos
        segment = self.course.segments[idx]
        dist = segment.length

        # elapsed time since last carrot eaten when starting this segment:
        time_since_last_eat = current_time - last_carrot_time if last_carrot_time >= 0 else float('inf')

        # We have two possible actions at carrot idx:
        # 1) Eat this carrot immediately (need to have carrot in storage, or pick newly without storing)
        #    Eating resets boost timer to zero.
        # 2) Not eat, possibly store it (if capacity allows) for future eating.
        #    Or not store (just skip).
        #
        # We try all these possibilities and pick minimum time.

        # First, compute time to run this segment for a given strategy of eating timing.
        # But note: eating takes no time. Boost timer counts from eating moment.

        min_time = float('inf')

        # Action A: Eat carrot at this position immediately
        # Check storage: can we eat it without storing? Either eat immediately and reset boost timer.
        # Actually carrot is at the end of this segment.

        # To compute time to run this segment: the speed changes depend on elapsed time since last carrot eaten.
        # But eating happens at the end of segment => speed applied during the segment is based on last carrot eaten.

        # We have to carefully compute travel time if speed changes during the segment when boost expires.

        def compute_segment_time(distance: float, time_since_last_eat_start: float) -> float:
            # speed = V while (time_since_last_eat <= T), else U
            # We run the segment at initially time_since_last_eat_start seconds elapsed since last eat
            # Boost expires at (T - time_since_last_eat_start) seconds into the segment if positive.
            if time_since_last_eat_start > self.speed_model.T:
                # no boost for this segment
                return distance / self.speed_model.U

            boost_remain = self.speed_model.T - time_since_last_eat_start
            dist_in_boost = self.speed_model.V * boost_remain
            if dist_in_boost >= distance:
                # full segment can be covered during boost speed
                return distance / self.speed_model.V
            else:
                # part boost speed, part normal speed
                remainder = distance - dist_in_boost
                return boost_remain + remainder / self.speed_model.U

        # 1) Eat carrot immediately at end of this segment
        # Check if we have carrot in storage or we pick it and immediately eat. Since picking is instantaneous and no penalty,
        # Actually, picking is automatic in problem description, so always can pick carrot when reaching location.
        # We can model two options of picking:
        #   - pick to store for later (if storage available)
        #   - pick and eat immediately (not storing)
        #
        # Eating immediately after segment means: time to run segment with current boost, then eat resets boost timer to 0

        # compute time to run segment with current boost info
        time_for_segment = compute_segment_time(dist, time_since_last_eat)

        # after segment time, we eat: last_carrot_time = current_time + time_for_segment
        # after eating, carrots_carried remains the same if we eat immediately without storing new carrot (just no change)
        # or decreases by one if we eat from stored carrots.

        # Eat without stored carrots means pick-and-eat immediately.

        # So two subcases here:
        # - Eat carrot immediately by picking and eating (carrots_carried unchanged)
        # - Eat carrot immediately by eating stored carrot (if carrots_carried>0)

        # Subcase 1: pick + eat immediately (carrots_carried unchanged)
        next_time = current_time + time_for_segment
        res1 = self._dp(idx+1, carrots_carried, next_time, next_time)

        min_time = min(min_time, time_for_segment + res1)

        # Subcase 2: eat stored carrot after segment if carrots_carried>0
        if carrots_carried > 0:
            # We run segment with boost timer same as above
            # After segment, we eat stored carrot: carrots_carried-1, last carrot time updated
            next_time = current_time + time_for_segment
            res2 = self._dp(idx+1, carrots_carried - 1, next_time, next_time)
            min_time = min(min_time, time_for_segment + res2)

        # 2) Not eat carrot at this segment
        # We run segment with current boost timer, and then pick carrot. We can opt to store it instantly if storage available,
        # or ignore it (do not pick, not store, no speed effect).
        #
        # a) Pick and store carrot if storage space available
        # b) Skip picking carrot at all

        # In both cases, speed during segment is with current boost parameters.

        time_for_segment_noeat = compute_segment_time(dist, time_since_last_eat)
        next_time_noeat = current_time + time_for_segment_noeat

        # a) pick and store carrot
        if carrots_carried < self.storage.capacity:
            res_store = self._dp(idx+1, carrots_carried + 1, last_carrot_time, next_time_noeat)
            min_time = min(min_time, time_for_segment_noeat + res_store)
        # b) skip picking
        res_skip = self._dp(idx+1, carrots_carried, last_carrot_time, next_time_noeat)
        min_time = min(min_time, time_for_segment_noeat + res_skip)

        self.memo[key] = min_time
        return min_time

    def find_min_time(self) -> float:
        # initial state:
        # idx=0 (first carrot segment),
        # carrots_carried=0
        # last_carrot_time = -inf (no carrot eaten yet)
        # current_time=0.0

        # Represent no carrot eaten by a large negative value to avoid float('inf') issues
        return self._dp(0, 0, -1e15, 0.0)


def parse_input() -> Tuple[int, int, int, int, int, int, List[int]]:
    import sys
    input = sys.stdin.readline
    N, K, T, U, V, L = map(int, input().split())
    carrots = [int(input()) for _ in range(N)]
    return N, K, T, U, V, L, carrots


def main():
    N, K, T, U, V, L, carrots = parse_input()
    course = RunningCourse(L, carrots)
    speed_model = RabbitSpeedModel(U, V, T)
    runner = RabbitRunner(speed_model, K, course)
    ans = runner.find_min_time()
    print(f"{ans:.9f}")


if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' abc' (ID: 75094)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' ABC' (ID: 33047)
  Prédit: ' ABC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ABC' → logprob: -0.18587228655815125
    2. 'ABC' → logprob: -1.8108723163604736
    3. ' ' → logprob: -6.3108720779418945
    4. 'ABCDE' → logprob: -6.8108720779418945
    5. 'abc' → logprob: -7.1858720779418945
    6. ' abc' → logprob: -7.5608720779418945
    7. ' A' → logprob: -7.8108720779418945
    8. 'import' → logprob: -8.435872077941895
    9. 'abstract' → logprob: -8.435872077941895
    10. ' ' → logprob: -8.560872077941895

Token 4: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.14764347672462463
    2. '.' → logprob: -2.022643566131592
    3. 'import' → logprob: -6.147643566131592
    4. ' ,' → logprob: -6.897643566131592
    5. ' ' → logprob: -7.522643566131592
    6. '<|end|>' → logprob: -7.647643566131592
    7. '```' → logprob: -8.647643089294434
    8. ':' → logprob: -9.272643089294434
    9. ' import' → logprob: -9.397643089294434
    10. ' .' → logprob: -9.772643089294434

Token 5: ' abstract' (ID: 13004)
  Prédit: ' abstract'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' abstract' → logprob: -0.3170444667339325
    2. 'abstract' → logprob: -1.3170444965362549
    3. 'Abstract' → logprob: -5.692044258117676
    4. ' A' → logprob: -9.317044258117676
    5. ' ' → logprob: -9.442044258117676
    6. '```' → logprob: -9.942044258117676
    7. '.abstract' → logprob: -10.067044258117676
    8. ' Abstract' → logprob: -10.567044258117676
    9. ' ABC' → logprob: -10.692044258117676
    10. 'A' → logprob: -11.567044258117676

Token 6: 'method' (ID: 8697)
  Prédit: 'method'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'method' → logprob: -0.0005529135232791305
    2. 'm' → logprob: -7.625553131103516
    3. 'classmethod' → logprob: -10.500553131103516
    4. 'meth' → logprob: -10.750553131103516
    5. 'me' → logprob: -12.250553131103516
    6. 'met' → logprob: -12.875553131103516
    7. 'staticmethod' → logprob: -13.000553131103516
    8. '_method' → logprob: -13.125553131103516
    9. '```' → logprob: -13.375553131103516
    10. 'abstract' → logprob: -14.125553131103516

Token 7: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4269544184207916
    2. '```' → logprob: -1.4269543886184692
    3. 'class' → logprob: -2.801954507827759
    4. '

' → logprob: -4.05195426940918
    5. '\n' → logprob: -5.05195426940918
    6. '' → logprob: -5.05195426940918
    7. '<|end|>' → logprob: -5.17695426940918
    8. '
' → logprob: -5.80195426940918
    9. '``' → logprob: -5.92695426940918
    10. '\' → logprob: -6.42695426940918

Token 8: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.27644455432891846
    2. '

' → logprob: -1.6514445543289185
    3. 'class' → logprob: -3.401444435119629
    4. '```' → logprob: -4.401444435119629
    5. '' → logprob: -6.776444435119629
    6. '
' → logprob: -7.276444435119629
    7. ' 

' → logprob: -7.776444435119629
    8. ' class' → logprob: -7.776444435119629
    9. '\n' → logprob: -8.026444435119629
    10. '``' → logprob: -8.151444435119629

Token 9: ' typing' (ID: 34152)
  Prédit: ' typing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' typing' → logprob: -0.048930589109659195
    2. ' collections' → logprob: -3.2989306449890137
    3. 'typing' → logprob: -5.173930644989014
    4. ' dat' → logprob: -5.673930644989014
    5. 'collections' → logprob: -7.048930644989014
    6. ' math' → logprob: -8.423930168151855
    7. ' sys' → logprob: -8.798930168151855
    8. ' io' → logprob: -9.298930168151855
    9. ' datetime' → logprob: -9.298930168151855
    10. ' os' → logprob: -9.548930168151855

Token 10: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.04280390217900276
    2. 'import' → logprob: -3.292804002761841
    3. '<|end|>' → logprob: -6.042803764343262
    4. '.' → logprob: -6.542803764343262
    5. ' ' → logprob: -7.542803764343262
    6. '<|end|>' → logprob: -9.542803764343262
    7. ' as' → logprob: -9.667803764343262
    8. '[' → logprob: -9.917803764343262
    9. '```' → logprob: -10.292803764343262
    10. ' .' → logprob: -10.417803764343262

Token 11: ' List' (ID: 2655)
  Prédit: ' Any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Any' → logprob: -0.4760826826095581
    2. ' List' → logprob: -1.601082682609558
    3. 'Any' → logprob: -2.1010828018188477
    4. ' Union' → logprob: -3.7260828018188477
    5. ' Callable' → logprob: -4.226082801818848
    6. 'List' → logprob: -5.101082801818848
    7. ' Protocol' → logprob: -5.601082801818848
    8. ' Optional' → logprob: -6.101082801818848
    9. 'Union' → logprob: -6.851082801818848
    10. 'Callable' → logprob: -6.976082801818848

Token 12: ',' (ID: 11)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.6107453107833862
    2. '
' → logprob: -1.2357453107833862
    3. '

' → logprob: -1.9857453107833862
    4. '```' → logprob: -4.110745429992676
    5. '\n' → logprob: -4.610745429992676
    6. '``' → logprob: -7.360745429992676
    7. '
' → logprob: -7.610745429992676
    8. ' class' → logprob: -7.610745429992676
    9. '


' → logprob: -7.860745429992676
    10. '<class' → logprob: -8.235745429992676

Token 13: ' Tuple' (ID: 50841)
  Prédit: ' Union'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Union' → logprob: -1.55319344997406
    2. ' Optional' → logprob: -1.67819344997406
    3. 'Optional' → logprob: -1.80319344997406
    4. ' Callable' → logprob: -1.80319344997406
    5. 'Callable' → logprob: -2.5531935691833496
    6. 'Any' → logprob: -2.9281935691833496
    7. 'Union' → logprob: -3.0531935691833496
    8. ' Any' → logprob: -3.5531935691833496
    9. 'Iterable' → logprob: -3.6781935691833496
    10. 'Tuple' → logprob: -4.55319356918335

Token 14: '


' (ID: 2499)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.8368937373161316
    2. 'class' → logprob: -1.0868937969207764
    3. '
' → logprob: -1.5868937969207764
    4. '```' → logprob: -3.8368937969207764
    5. '\n' → logprob: -6.336893558502197
    6. ' class' → logprob: -7.461893558502197
    7. '


' → logprob: -7.961893558502197
    8. '``' → logprob: -7.961893558502197
    9. '
' → logprob: -8.711894035339355
    10. '<class' → logprob: -8.836894035339355

Token 15: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.023286247625947
    2. 'c' → logprob: -3.7732863426208496
    3. 'cla' → logprob: -11.273285865783691
    4. 'clas' → logprob: -11.273285865783691
    5. 'cl' → logprob: -12.023285865783691
    6. '
' → logprob: -12.148285865783691
    7. ' class' → logprob: -13.523285865783691
    8. '```' → logprob: -13.898285865783691
    9. '@' → logprob: -14.398285865783691
    10. '"class' → logprob: -14.648285865783691

Token 16: ' Running' (ID: 48451)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.06945778429508209
    2. ' Abstract' → logprob: -3.319457769393921
    3. ' My' → logprob: -5.0694580078125
    4. ' ABC' → logprob: -5.1944580078125
    5. ' Shape' → logprob: -5.5694580078125
    6. ' Base' → logprob: -5.6944580078125
    7. ' Space' → logprob: -6.1944580078125
    8. ' Basic' → logprob: -6.3194580078125
    9. ' Serializer' → logprob: -6.9444580078125
    10. ' A' → logprob: -7.4444580078125

Token 17: 'Speed' (ID: 14555)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.22219468653202057
    2. ':' → logprob: -1.7221946716308594
    3. '():' → logprob: -5.597194671630859
    4. 'Strategy' → logprob: -5.847194671630859
    5. 'State' → logprob: -6.347194671630859
    6. 'Task' → logprob: -6.472194671630859
    7. 'Stats' → logprob: -6.972194671630859
    8. 'Runner' → logprob: -6.972194671630859
    9. 'Handler' → logprob: -7.097194671630859
    10. 'Service' → logprob: -7.472194671630859

Token 18: 'Model' (ID: 2239)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02159685641527176
    2. ':' → logprob: -3.896596908569336
    3. '(Abstract' → logprob: -6.896596908569336
    4. '():' → logprob: -11.771596908569336
    5. ' :' → logprob: -12.021596908569336
    6. '):' → logprob: -12.146596908569336
    7. '(Runtime' → logprob: -12.146596908569336
    8. '```' → logprob: -12.771596908569336
    9. '(:' → logprob: -13.021596908569336
    10. '(object' → logprob: -13.271596908569336

Token 19: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0031043924391269684
    2. ':' → logprob: -5.878104209899902
    3. '(Abstract' → logprob: -8.128104209899902
    4. '():' → logprob: -13.253104209899902
    5. '(:' → logprob: -14.753104209899902
    6. '```' → logprob: -15.003104209899902
    7. '):' → logprob: -15.253104209899902
    8. ' (' → logprob: -15.253104209899902
    9. ' :' → logprob: -15.628104209899902
    10. '(Base' → logprob: -16.00310516357422

Token 20: 'ABC' (ID: 44197)
  Prédit: 'ABC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ABC' → logprob: -3.2855416066013277e-05
    2. ' ABC' → logprob: -11.250032424926758
    3. 'AB' → logprob: -11.375032424926758
    4. ')' → logprob: -12.875032424926758
    5. 'Abstract' → logprob: -13.500032424926758
    6. 'abc' → logprob: -13.500032424926758
    7. '):' → logprob: -13.750032424926758
    8. '   ' → logprob: -14.375032424926758
    9. 'ABCDE' → logprob: -14.500032424926758
    10. 'A' → logprob: -15.000032424926758

Token 21: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006740946788340807
    2. ')' → logprob: -5.006741046905518
    3. ':' → logprob: -10.75674057006836
    4. '):
' → logprob: -13.00674057006836
    5. ' ):' → logprob: -14.00674057006836
    6. ')>' → logprob: -14.88174057006836
    7. ',' → logprob: -15.38174057006836
    8. '):

' → logprob: -16.13174057006836
    9. '>):' → logprob: -16.75674057006836
    10. '():' → logprob: -16.88174057006836

Token 22: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02850811555981636
    2. '   ' → logprob: -3.653508186340332
    3. ' :' → logprob: -7.528508186340332
    4. ':
' → logprob: -7.778508186340332
    5. '    
' → logprob: -8.403508186340332
    6. '    ' → logprob: -8.403508186340332
    7. '<|end|>' → logprob: -8.653508186340332
    8. '
' → logprob: -8.903508186340332
    9. ' ' → logprob: -9.028508186340332
    10. '):' → logprob: -9.403508186340332

Token 23: ' @' (ID: 759)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6480629444122314
    2. '   ' → logprob: -0.8980629444122314
    3. '    
' → logprob: -3.7730629444122314
    4. ':' → logprob: -3.8980629444122314
    5. '```' → logprob: -4.398062705993652
    6. 'def' → logprob: -5.398062705993652
    7. '\n' → logprob: -5.898062705993652
    8. '    ' → logprob: -6.273062705993652
    9. '  
' → logprob: -7.523062705993652
    10. ' def' → logprob: -7.523062705993652

Token 24: 'abstract' (ID: 31332)
  Prédit: 'abstract'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abstract' → logprob: -2.3080716346157715e-05
    2. 'ab' → logprob: -11.250022888183594
    3. 'abs' → logprob: -11.750022888183594
    4. 'property' → logprob: -14.375022888183594
    5. 'abc' → logprob: -14.500022888183594
    6. 'staticmethod' → logprob: -14.625022888183594
    7. 'classmethod' → logprob: -15.250022888183594
    8. ' abstract' → logprob: -15.500022888183594
    9. 'a' → logprob: -16.125022888183594
    10. '.abstract' → logprob: -16.500022888183594

Token 25: 'method' (ID: 8697)
  Prédit: 'method'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'method' → logprob: -0.001963128335773945
    2. '_method' → logprob: -6.251963138580322
    3. 'meth' → logprob: -10.626962661743164
    4. '.method' → logprob: -13.001962661743164
    5. 'classmethod' → logprob: -13.001962661743164
    6. 'Method' → logprob: -14.126962661743164
    7. '_' → logprob: -14.251962661743164
    8. '-method' → logprob: -14.376962661743164
    9. 'staticmethod' → logprob: -14.501962661743164
    10. 'def' → logprob: -14.626962661743164

Token 26: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7926656603813171
    2. ' def' → logprob: -1.042665719985962
    3. '(' → logprob: -1.917665719985962
    4. '<|end|>' → logprob: -4.417665481567383
    5. ')' → logprob: -4.792665481567383
    6. ' ' → logprob: -5.417665481567383
    7. '   ' → logprob: -5.417665481567383
    8. '    ' → logprob: -5.917665481567383
    9. '(def' → logprob: -5.917665481567383
    10. '
' → logprob: -6.042665481567383

Token 27: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.30941206216812134
    2. '(' → logprob: -2.0594120025634766
    3. 'method' → logprob: -2.1844120025634766
    4. '
' → logprob: -4.809412002563477
    5. ' def' → logprob: -5.059412002563477
    6. '    
' → logprob: -6.059412002563477
    7. '(
' → logprob: -6.559412002563477
    8. '<|end|>' → logprob: -7.059412002563477
    9. '_method' → logprob: -7.309412002563477
    10. '('' → logprob: -7.309412002563477

Token 28: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0019875173456966877
    2. ' def' → logprob: -6.751987457275391
    3. 'abstract' → logprob: -8.25198745727539
    4. 'classmethod' → logprob: -8.37698745727539
    5. '
' → logprob: -9.00198745727539
    6. 'method' → logprob: -9.37698745727539
    7. 'property' → logprob: -9.75198745727539
    8. 'staticmethod' → logprob: -10.62698745727539
    9. '```' → logprob: -11.75198745727539
    10. 'abc' → logprob: -11.87698745727539

Token 29: ' get' (ID: 717)
  Prédit: ' calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' calculate' → logprob: -0.28540822863578796
    2. ' predict' → logprob: -1.7854082584381104
    3. ' get' → logprob: -2.9104082584381104
    4. ' compute' → logprob: -4.785408020019531
    5. ' ' → logprob: -5.035408020019531
    6. ' space' → logprob: -5.285408020019531
    7. ' run' → logprob: -5.785408020019531
    8. ' def' → logprob: -7.535408020019531
    9. ' speed' → logprob: -7.785408020019531
    10. ' running' → logprob: -7.785408020019531

Token 30: '_speed' (ID: 43208)
  Prédit: '_speed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_speed' → logprob: -0.3484702706336975
    2. '_' → logprob: -1.9734702110290527
    3. '_running' → logprob: -2.2234702110290527
    4. ' _' → logprob: -3.3484702110290527
    5. '_run' → logprob: -5.848470211029053
    6. '_s' → logprob: -6.348470211029053
    7. '_distance' → logprob: -6.598470211029053
    8. ' ' → logprob: -6.723470211029053
    9. '_velocity' → logprob: -6.848470211029053
    10. '_max' → logprob: -6.973470211029053

Token 31: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.12764278054237366
    2. '(' → logprob: -2.127642869949341
    3. 'self' → logprob: -7.502642631530762
    4. ' (' → logprob: -9.377642631530762
    5. 's' → logprob: -10.252642631530762
    6. '(
' → logprob: -11.127642631530762
    7. '(

' → logprob: -12.252642631530762
    8. '   ' → logprob: -12.377642631530762
    9. '_self' → logprob: -12.752642631530762
    10. ' self' → logprob: -12.877642631530762

Token 32: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005346770863980055
    2. 'self' → logprob: -5.755346775054932
    3. ')' → logprob: -6.255346775054932
    4. ' ,' → logprob: -9.130346298217773
    5. '):' → logprob: -9.130346298217773
    6. ',self' → logprob: -12.255346298217773
    7. ' )' → logprob: -12.380346298217773
    8. ' self' → logprob: -12.755346298217773
    9. ',
' → logprob: -13.130346298217773
    10. ')->' → logprob: -13.380346298217773

Token 33: ' time' (ID: 1058)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.4302428662776947
    2. 'self' → logprob: -1.680242896080017
    3. ' distance' → logprob: -2.0552427768707275
    4. 'distance' → logprob: -4.305243015289307
    5. ' time' → logprob: -4.555243015289307
    6. ' )' → logprob: -5.430243015289307
    7. ')' → logprob: -5.430243015289307
    8. 'time' → logprob: -6.805243015289307
    9. ' distances' → logprob: -8.180242538452148
    10. ' ' → logprob: -8.305242538452148

Token 34: '_since' (ID: 133288)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008630522526800632
    2. '):' → logprob: -5.133630752563477
    3. ')' → logprob: -6.383630752563477
    4. 's' → logprob: -7.383630752563477
    5. '_seconds' → logprob: -8.258630752563477
    6. ',' → logprob: -9.758630752563477
    7. '_in' → logprob: -11.133630752563477
    8. '_s' → logprob: -11.508630752563477
    9. '_elapsed' → logprob: -11.633630752563477
    10. ':int' → logprob: -11.633630752563477

Token 35: '_last' (ID: 26359)
  Prédit: '_start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -0.013952989131212234
    2. '_' → logprob: -4.76395320892334
    3. '_last' → logprob: -5.26395320892334
    4. 'start' → logprob: -10.26395320892334
    5. '_run' → logprob: -10.38895320892334
    6. '_launch' → logprob: -10.63895320892334
    7. '_restart' → logprob: -11.38895320892334
    8. '_started' → logprob: -11.88895320892334
    9. '_running' → logprob: -12.13895320892334
    10. '_spawn' → logprob: -12.38895320892334

Token 36: '_car' (ID: 62991)
  Prédit: '_update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_update' → logprob: -0.8076332211494446
    2. '_step' → logprob: -1.3076331615447998
    3. '_' → logprob: -1.6826331615447998
    4. '_run' → logprob: -3.4326331615448
    5. '_checkpoint' → logprob: -4.932633399963379
    6. '_split' → logprob: -5.182633399963379
    7. '_measure' → logprob: -5.182633399963379
    8. '_reset' → logprob: -5.307633399963379
    9. '_restart' → logprob: -5.307633399963379
    10. '_call' → logprob: -5.557633399963379

Token 37: 'rot' (ID: 8150)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.19010689854621887
    2. '):' → logprob: -1.9401068687438965
    3. ')' → logprob: -3.8151068687438965
    4. ':)' → logprob: -6.3151068687438965
    5. '_' → logprob: -6.8151068687438965
    6. ',' → logprob: -7.0651068687438965
    7. '_received' → logprob: -7.6901068687438965
    8. '_pass' → logprob: -8.065107345581055
    9. '=' → logprob: -8.190107345581055
    10. '_:' → logprob: -8.565107345581055

Token 38: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11770644038915634
    2. '):' → logprob: -2.367706537246704
    3. ')' → logprob: -4.242706298828125
    4. ':)' → logprob: -6.742706298828125
    5. ',' → logprob: -7.617706298828125
    6. 's' → logprob: -8.617706298828125
    7. '_s' → logprob: -9.492706298828125
    8. '_update' → logprob: -9.617706298828125
    9. '_consum' → logprob: -9.742706298828125
    10. '_pass' → logprob: -9.867706298828125

Token 39: ' float' (ID: 4428)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.8715873956680298
    2. ' float' → logprob: -1.4965873956680298
    3. 'float' → logprob: -1.6215873956680298
    4. ')' → logprob: -2.4965872764587402
    5. ' int' → logprob: -2.8715872764587402
    6. ' )' → logprob: -3.9965872764587402
    7. ' ' → logprob: -6.49658727645874
    8. ':int' → logprob: -7.49658727645874
    9. '[int' → logprob: -9.121587753295898
    10. '):' → logprob: -9.371587753295898

Token 40: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00032604875741526484
    2. '):' → logprob: -8.625326156616211
    3. ',' → logprob: -9.500326156616211
    4. ' )' → logprob: -9.750326156616211
    5. ')->' → logprob: -11.750326156616211
    6. '   ' → logprob: -13.125326156616211
    7. '=' → logprob: -14.000326156616211
    8. ',)' → logprob: -14.500326156616211
    9. ':' → logprob: -14.875326156616211
    10. '->' → logprob: -15.125326156616211

Token 41: ' ->' (ID: 2747)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005599072203040123
    2. '->' → logprob: -5.755599021911621
    3. ' ->' → logprob: -6.380599021911621
    4. ')->' → logprob: -7.755599021911621
    5. ' )' → logprob: -8.255599021911621
    6. ' )->' → logprob: -11.005599021911621
    7. '   ' → logprob: -11.630599021911621
    8. '):' → logprob: -13.005599021911621
    9. ',)' → logprob: -13.130599021911621
    10. ',' → logprob: -13.255599021911621

Token 42: ' float' (ID: 4428)
  Prédit: ' float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.01259194128215313
    2. 'float' → logprob: -4.38759183883667
    3. ' List' → logprob: -10.387592315673828
    4. ' None' → logprob: -10.637592315673828
    5. '	float' → logprob: -11.637592315673828
    6. ' int' → logprob: -11.762592315673828
    7. ' ' → logprob: -12.762592315673828
    8. ' ' → logprob: -13.137592315673828
    9. 'int' → logprob: -13.512592315673828
    10. 'List' → logprob: -13.887592315673828

Token 43: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00024846551241353154
    2. ':return' → logprob: -9.125248908996582
    3. ':
' → logprob: -9.750248908996582
    4. '):' → logprob: -10.250248908996582
    5. '<|end|>' → logprob: -10.500248908996582
    6. '   ' → logprob: -12.375248908996582
    7. ':def' → logprob: -12.625248908996582
    8. ')' → logprob: -13.000248908996582
    9. ':void' → logprob: -13.500248908996582
    10. ',' → logprob: -13.625248908996582

Token 44: '       ' (ID: 309)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.61351478099823
    2. '       ' → logprob: -0.98851478099823
    3. '
' → logprob: -3.3635149002075195
    4. '<|end|>' → logprob: -4.3635149002075195
    5. '\' → logprob: -4.4885149002075195
    6. '   ' → logprob: -4.9885149002075195
    7. ' ' → logprob: -5.2385149002075195
    8. '    ' → logprob: -5.7385149002075195
    9. 'newline' → logprob: -6.3635149002075195
    10. '\r' → logprob: -6.3635149002075195

Token 45: ' pass' (ID: 1853)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pass' (adapté à ' pass') → logprob: -0.732668399810791
    2. '       ' → logprob: -1.232668399810791
    3. ' pass' → logprob: -1.482668399810791
    4. '...' → logprob: -7.982668399810791
    5. '<|end|>' → logprob: -8.357667922973633
    6. '   ' → logprob: -9.357667922973633
    7. '	pass' → logprob: -10.107667922973633
    8. '#' → logprob: -10.982667922973633
    9. '    ' → logprob: -11.107667922973633
    10. '        ' → logprob: -11.232667922973633

Token 46: '


' (ID: 2499)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8117741942405701
    2. '

' → logprob: -0.8117741942405701
    3. 'class' → logprob: -2.311774253845215
    4. '


' → logprob: -4.936774253845215
    5. '<|end|>' → logprob: -5.936774253845215
    6. ' class' → logprob: -6.686774253845215
    7. '```' → logprob: -7.936774253845215
    8. '\n' → logprob: -7.936774253845215
    9. '<|end|>' → logprob: -8.561774253845215
    10. '<class' → logprob: -9.186774253845215

Token 47: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.3305344581604004
    2. '
' → logprob: -1.3305344581604004
    3. '

' → logprob: -4.0805344581604
    4. ' class' → logprob: -9.455533981323242
    5. '


' → logprob: -10.205533981323242
    6. '```' → logprob: -10.705533981323242
    7. '\n' → logprob: -10.830533981323242
    8. '
' → logprob: -10.955533981323242
    9. '  
' → logprob: -11.455533981323242
    10. '<class' → logprob: -11.830533981323242

Token 48: ' Rabbit' (ID: 79131)
  Prédit: ' Constant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Constant' → logprob: -0.2667413651943207
    2. ' Linear' → logprob: -3.1417412757873535
    3. ' Car' → logprob: -3.2667412757873535
    4. ' Basic' → logprob: -3.8917412757873535
    5. ' Running' → logprob: -3.8917412757873535
    6. ' Runner' → logprob: -4.5167412757873535
    7. ' Default' → logprob: -4.5167412757873535
    8. ' Ste' → logprob: -4.5167412757873535
    9. ' Simple' → logprob: -4.8917412757873535
    10. ' Balanced' → logprob: -4.8917412757873535

Token 49: 'Speed' (ID: 14555)
  Prédit: 'Speed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Speed' → logprob: -0.5003143548965454
    2. ':' → logprob: -1.6253143548965454
    3. 'Running' → logprob: -2.125314235687256
    4. 'Runner' → logprob: -3.000314235687256
    5. '(S' → logprob: -4.250314235687256
    6. '(R' → logprob: -5.125314235687256
    7. '(' → logprob: -5.625314235687256
    8. 'Run' → logprob: -6.875314235687256
    9. 'Fast' → logprob: -8.250314712524414
    10. 'Model' → logprob: -8.500314712524414

Token 50: 'Model' (ID: 2239)
  Prédit: 'Model'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Model' → logprob: -9.090760431718081e-05
    2. 'Calculator' → logprob: -10.000090599060059
    3. '(Model' → logprob: -10.250090599060059
    4. '(' → logprob: -12.250090599060059
    5. '(R' → logprob: -13.500090599060059
    6. 'Estimator' → logprob: -13.500090599060059
    7. 'Predict' → logprob: -14.250090599060059
    8. 'Mixin' → logprob: -15.125090599060059
    9. 'Mode' → logprob: -15.250090599060059
    10. 'Runner' → logprob: -15.500090599060059

Token 51: '(R' (ID: 4092)
  Prédit: '(R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(R' → logprob: -0.6077553033828735
    2. '(' → logprob: -0.8577553033828735
    3. ':' → logprob: -3.482755184173584
    4. '(Abstract' → logprob: -8.732755661010742
    5. '(Runtime' → logprob: -8.982755661010742
    6. '():' → logprob: -9.607755661010742
    7. ' :' → logprob: -9.982755661010742
    8. '(S' → logprob: -10.232755661010742
    9. '(Base' → logprob: -10.357755661010742
    10. '(B' → logprob: -10.982755661010742

Token 52: 'unning' (ID: 11244)
  Prédit: 'abbit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abbit' → logprob: -0.16853688657283783
    2. 'un' → logprob: -2.543536901473999
    3. 'unning' → logprob: -3.043536901473999
    4. 'unner' → logprob: -4.79353666305542
    5. 'unnable' → logprob: -4.91853666305542
    6. 'ab' → logprob: -5.66853666305542
    7. 'abb' → logprob: -6.41853666305542
    8. 'unn' → logprob: -6.41853666305542
    9. 'unny' → logprob: -6.54353666305542
    10. 'u' → logprob: -6.79353666305542

Token 53: 'Speed' (ID: 14555)
  Prédit: 'Speed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Speed' → logprob: -1.981667537620524e-06
    2. ' Speed' → logprob: -13.375001907348633
    3. 'Spe' → logprob: -15.625001907348633
    4. 'speed' → logprob: -15.750001907348633
    5. '_speed' → logprob: -17.125001907348633
    6. ')' → logprob: -17.750001907348633
    7. 'peed' → logprob: -18.000001907348633
    8. '_SPEED' → logprob: -18.000001907348633
    9. ' speed' → logprob: -18.250001907348633
    10. 'Sp' → logprob: -18.750001907348633

Token 54: 'Model' (ID: 2239)
  Prédit: 'Model'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Model' → logprob: -1.843177233240567e-05
    2. ')' → logprob: -11.125018119812012
    3. '	Model' → logprob: -14.375018119812012
    4. 'odel' → logprob: -14.625018119812012
    5. '(' → logprob: -14.625018119812012
    6. ' Model' → logprob: -14.750018119812012
    7. '   ' → logprob: -15.000018119812012
    8. 'Mode' → logprob: -15.250018119812012
    9. '<Model' → logprob: -15.250018119812012
    10. 'model' → logprob: -15.625018119812012

Token 55: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.000146687583765015
    2. ')' → logprob: -9.125146865844727
    3. ':' → logprob: -11.000146865844727
    4. '):
' → logprob: -11.500146865844727
    5. '   ' → logprob: -12.125146865844727
    6. ' ):' → logprob: -12.375146865844727
    7. ',' → logprob: -15.000146865844727
    8. ']:' → logprob: -15.625146865844727
    9. '():' → logprob: -16.000146865844727
    10. ' ' → logprob: -16.125146865844727

Token 56: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17677219212055206
    2. '    
' → logprob: -2.676772117614746
    3. '
' → logprob: -3.051772117614746
    4. ' 
' → logprob: -3.676772117614746
    5. '    ' → logprob: -4.801772117614746
    6. ' def' → logprob: -5.176772117614746
    7. 'def' → logprob: -6.301772117614746
    8. '     
' → logprob: -6.676772117614746
    9. '   
' → logprob: -6.926772117614746
    10. ' ' → logprob: -6.926772117614746

Token 57: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.2565560042858124
    2. 'def' (adapté à ' def') → logprob: -1.5065560340881348
    3. '   ' → logprob: -5.381556034088135
    4. '    ' → logprob: -11.881555557250977
    5. '	def' → logprob: -13.006555557250977
    6. ' ' → logprob: -13.131555557250977
    7. 'de' → logprob: -13.381555557250977
    8. '  ' → logprob: -14.631555557250977
    9. ' indentation' → logprob: -14.756555557250977
    10. 'indent' → logprob: -15.006555557250977

Token 58: ' __' (ID: 2516)
  Prédit: ' get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.00263118464499712
    2. ' ' → logprob: -6.377631187438965
    3. '_' → logprob: -8.252631187438965
    4. ' _' → logprob: -8.252631187438965
    5. '_get' → logprob: -8.377631187438965
    6. ' def' → logprob: -9.127631187438965
    7. ' __' → logprob: -10.002631187438965
    8. 'get' → logprob: -11.502631187438965
    9. ' ' → logprob: -12.377631187438965
    10. ' space' → logprob: -13.127631187438965

Token 59: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: 0.0
    2. 'ini' → logprob: -17.375
    3. ' init' → logprob: -17.625
    4. 'call' → logprob: -19.5
    5. 'get' → logprob: -19.5
    6. 'in' → logprob: -19.875
    7. '  ' → logprob: -20.25
    8. ' ' → logprob: -20.375
    9. '	init' → logprob: -20.5
    10. '   ' → logprob: -20.75

Token 60: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.011243751272559166
    2. '(self' → logprob: -4.51124382019043
    3. '__' → logprob: -9.38624382019043
    4. '__(
' → logprob: -9.76124382019043
    5. '(' → logprob: -10.76124382019043
    6. '_(' → logprob: -10.88624382019043
    7. '__((' → logprob: -12.76124382019043
    8. ' (' → logprob: -13.13624382019043
    9. '<>(' → logprob: -13.26124382019043
    10. ')(' → logprob: -13.38624382019043

Token 61: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0015460490249097347
    2. ' self' → logprob: -6.5015459060668945
    3. ')' → logprob: -11.126545906066895
    4. ' ' → logprob: -11.876545906066895
    5. '   ' → logprob: -12.001545906066895
    6. '       ' → logprob: -12.126545906066895
    7. '
' → logprob: -12.376545906066895
    8. '0' → logprob: -12.626545906066895
    9. '  ' → logprob: -14.251545906066895
    10. ',' → logprob: -14.751545906066895

Token 62: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004261938855051994
    2. '):' → logprob: -6.5042619705200195
    3. 'self' → logprob: -6.6292619705200195
    4. ' ,' → logprob: -6.6292619705200195
    5. '   ' → logprob: -10.37926197052002
    6. ' ):' → logprob: -10.62926197052002
    7. ')' → logprob: -11.12926197052002
    8. '       ' → logprob: -11.25426197052002
    9. ' self' → logprob: -11.62926197052002
    10. ',self' → logprob: -11.75426197052002

Token 63: ' base' (ID: 3611)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.8727773427963257
    2. 'max' → logprob: -1.7477773427963257
    3. ' max' → logprob: -1.7477773427963257
    4. ' base' → logprob: -2.4977774620056152
    5. ' self' → logprob: -3.1227774620056152
    6. 'initial' → logprob: -3.3727774620056152
    7. 'base' → logprob: -3.4977774620056152
    8. ' initial' → logprob: -4.247777462005615
    9. 'acc' → logprob: -4.747777462005615
    10. '   ' → logprob: -5.497777462005615

Token 64: '_speed' (ID: 43208)
  Prédit: '_speed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_speed' → logprob: -3.452426608419046e-05
    2. '_' → logprob: -10.75003433227539
    3. '_velocity' → logprob: -11.62503433227539
    4. 'speed' → logprob: -12.75003433227539
    5. '_running' → logprob: -14.50003433227539
    6. ' speed' → logprob: -15.75003433227539
    7. '_s' → logprob: -16.00003433227539
    8. ' _' → logprob: -16.12503433227539
    9. '_time' → logprob: -16.25003433227539
    10. '_acc' → logprob: -16.75003433227539

Token 65: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0006675214972347021
    2. ',' → logprob: -8.125667572021484
    3. '):' → logprob: -8.500667572021484
    4. '=' → logprob: -8.750667572021484
    5. ')' → logprob: -11.750667572021484
    6. ' :' → logprob: -14.125667572021484
    7. ' ):' → logprob: -15.625667572021484
    8. ':int' → logprob: -15.625667572021484
    9. '_speed' → logprob: -16.125667572021484
    10. ':,' → logprob: -16.250667572021484

Token 66: ' float' (ID: 4428)
  Prédit: ' float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.06199771910905838
    2. 'float' → logprob: -2.811997652053833
    3. ' ' → logprob: -11.061997413635254
    4. '=float' → logprob: -12.311997413635254
    5. ',float' → logprob: -12.436997413635254
    6. ')' → logprob: -12.686997413635254
    7. ' int' → logprob: -14.186997413635254
    8. '	float' → logprob: -14.311997413635254
    9. '(float' → logprob: -14.561997413635254
    10. ' )' → logprob: -14.936997413635254

Token 67: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16180162131786346
    2. '):' → logprob: -1.9118015766143799
    3. ')' → logprob: -6.786801815032959
    4. '=' → logprob: -8.9118013381958
    5. ' ,' → logprob: -8.9118013381958
    6. ':' → logprob: -9.2868013381958
    7. ' ):' → logprob: -9.6618013381958
    8. '   ' → logprob: -11.5368013381958
    9. '):
' → logprob: -12.1618013381958
    10. ' )' → logprob: -13.1618013381958

Token 68: ' boosted' (ID: 111352)
  Prédit: ' acceleration'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' acceleration' → logprob: -0.6811642646789551
    2. 'acc' → logprob: -1.181164264678955
    3. ' max' → logprob: -2.681164264678955
    4. ' speed' → logprob: -3.431164264678955
    5. ' fatigue' → logprob: -3.806164264678955
    6. '   ' → logprob: -4.306164264678955
    7. ' carrot' → logprob: -4.806164264678955
    8. 'max' → logprob: -5.056164264678955
    9. ' time' → logprob: -5.306164264678955
    10. ' ' → logprob: -5.306164264678955

Token 69: '_speed' (ID: 43208)
  Prédit: '_speed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_speed' → logprob: -0.004620830062776804
    2. '_' → logprob: -5.5046210289001465
    3. '_time' → logprob: -8.504620552062988
    4. '_factor' → logprob: -9.129620552062988
    5. '_multiplier' → logprob: -9.629620552062988
    6. '_duration' → logprob: -10.004620552062988
    7. '_velocity' → logprob: -10.754620552062988
    8. '_s' → logprob: -10.754620552062988
    9. '_amount' → logprob: -10.879620552062988
    10. ' _' → logprob: -12.004620552062988

Token 70: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00015407454338856041
    2. '):' → logprob: -9.375154495239258
    3. ')' → logprob: -9.875154495239258
    4. ',' → logprob: -11.125154495239258
    5. ' :' → logprob: -13.875154495239258
    6. '<|end|>' → logprob: -13.875154495239258
    7. ':int' → logprob: -15.250154495239258
    8. '<|end|>' → logprob: -15.625154495239258
    9. '=' → logprob: -16.250154495239258
    10. '):
' → logprob: -16.250154495239258

Token 71: ' float' (ID: 4428)
  Prédit: ' float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.0210316963493824
    2. 'float' → logprob: -3.896031618118286
    3. ' ' → logprob: -8.521031379699707
    4. ')' → logprob: -8.896031379699707
    5. '	float' → logprob: -9.896031379699707
    6. ',float' → logprob: -10.021031379699707
    7. '<|end|>' → logprob: -10.896031379699707
    8. '=float' → logprob: -11.521031379699707
    9. ':' → logprob: -11.646031379699707
    10. '<float' → logprob: -12.396031379699707

Token 72: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09511604905128479
    2. '):' → logprob: -2.470116138458252
    3. ')' → logprob: -5.095116138458252
    4. '):
' → logprob: -11.470115661621094
    5. ':' → logprob: -12.345115661621094
    6. ' ):' → logprob: -12.345115661621094
    7. ' ,' → logprob: -12.595115661621094
    8. ' ' → logprob: -13.345115661621094
    9. '   ' → logprob: -13.595115661621094
    10. '=' → logprob: -13.720115661621094

Token 73: ' boost' (ID: 12110)
  Prédit: 'boost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'boost' → logprob: -0.042496055364608765
    2. ' boost' → logprob: -3.2924959659576416
    3. '   ' → logprob: -6.417496204376221
    4. 'duration' → logprob: -6.917496204376221
    5. ' ' → logprob: -7.542496204376221
    6. 'acc' → logprob: -8.667495727539062
    7. '  ' → logprob: -8.792495727539062
    8. ' duration' → logprob: -9.042495727539062
    9. '	boost' → logprob: -9.042495727539062
    10. 'threshold' → logprob: -9.292495727539062

Token 74: '_duration' (ID: 59503)
  Prédit: '_duration'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_duration' → logprob: -0.01794283092021942
    2. '_time' → logprob: -4.142942905426025
    3. '_period' → logprob: -6.767942905426025
    4. '_d' → logprob: -8.642942428588867
    5. '_interval' → logprob: -8.892942428588867
    6. '_' → logprob: -8.892942428588867
    7. '_start' → logprob: -9.642942428588867
    8. '_threshold' → logprob: -10.017942428588867
    9. 'ed' → logprob: -10.142942428588867
    10. 'ing' → logprob: -10.892942428588867

Token 75: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0003261679667048156
    2. '):' → logprob: -8.250326156616211
    3. ')' → logprob: -9.750326156616211
    4. ' :' → logprob: -12.875326156616211
    5. ':int' → logprob: -13.750326156616211
    6. '=' → logprob: -13.875326156616211
    7. ',' → logprob: -14.375326156616211
    8. ' ):' → logprob: -14.375326156616211
    9. '_seconds' → logprob: -15.625326156616211
    10. '):
' → logprob: -15.875326156616211

Token 76: ' float' (ID: 4428)
  Prédit: ' float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.5760111212730408
    2. 'float' → logprob: -0.8260111212730408
    3. 'int' → logprob: -10.326010704040527
    4. '	float' → logprob: -11.451010704040527
    5. ')' → logprob: -11.576010704040527
    6. ' ' → logprob: -11.951010704040527
    7. '=float' → logprob: -12.201010704040527
    8. ' int' → logprob: -13.201010704040527
    9. ',float' → logprob: -13.451010704040527
    10. 'flo' → logprob: -13.701010704040527

Token 77: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02095954865217209
    2. ')' → logprob: -3.8959596157073975
    3. ',' → logprob: -8.395959854125977
    4. '):
' → logprob: -8.895959854125977
    5. ':' → logprob: -9.895959854125977
    6. ' ):' → logprob: -13.020959854125977
    7. ' ' → logprob: -14.520959854125977
    8. '   ' → logprob: -14.520959854125977
    9. '):
' → logprob: -14.770959854125977
    10. '=' → logprob: -15.395959854125977

Token 78: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7395796179771423
    2. ':' → logprob: -0.9895796179771423
    3. '):' → logprob: -1.989579677581787
    4. ')' → logprob: -4.989579677581787
    5. '   ' → logprob: -5.864579677581787
    6. '):
' → logprob: -5.864579677581787
    7. ',' → logprob: -6.864579677581787
    8. ' :' → logprob: -9.239579200744629
    9. ':
' → logprob: -9.239579200744629
    10. '
' → logprob: -9.489579200744629

Token 79: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5011433362960815
    2. 'self' (adapté à ' self') → logprob: -1.0011433362960815
    3. ' self' → logprob: -3.626143455505371
    4. '   ' → logprob: -9.876143455505371
    5. 'super' → logprob: -11.001143455505371
    6. ' ' → logprob: -11.876143455505371
    7. '	self' → logprob: -13.251143455505371
    8. '```' → logprob: -13.501143455505371
    9. '      ' → logprob: -13.751143455505371
    10. ' super' → logprob: -13.751143455505371

Token 80: '.U' (ID: 13234)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.4985935091972351
    2. '.base' → logprob: -0.9985935091972351
    3. '._' → logprob: -3.74859356880188
    4. ' .' → logprob: -8.6235933303833
    5. '.__' → logprob: -8.6235933303833
    6. '_base' → logprob: -9.3735933303833
    7. '.user' → logprob: -9.4985933303833
    8. '.Base' → logprob: -10.2485933303833
    9. ' ' → logprob: -10.8735933303833
    10. 'base' → logprob: -11.2485933303833

Token 81: ' =' (ID: 314)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.015445515513420105
    2. 'n' → logprob: -5.640445709228516
    3. 'self' → logprob: -5.765445709228516
    4. 'pper' → logprob: -5.765445709228516
    5. 'se' → logprob: -5.890445709228516
    6. 'nit' → logprob: -6.515445709228516
    7. 'def' → logprob: -8.140445709228516
    8. '_' → logprob: -8.390445709228516
    9. '_p' → logprob: -8.765445709228516
    10. 'ser' → logprob: -9.015445709228516

Token 82: ' base' (ID: 3611)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.023251304402947426
    2. ' base' → logprob: -3.7732512950897217
    3. 'boost' → logprob: -13.5232515335083
    4. 'b' → logprob: -13.8982515335083
    5. '(base' → logprob: -13.8982515335083
    6. '  ' → logprob: -14.3982515335083
    7. ' ' → logprob: -14.5232515335083
    8. '   ' → logprob: -14.5232515335083
    9. '_base' → logprob: -14.7732515335083
    10. '	base' → logprob: -15.1482515335083

Token 83: '_speed' (ID: 43208)
  Prédit: '_speed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_speed' → logprob: -0.0002593130338937044
    2. '_' → logprob: -9.000259399414062
    3. '_s' → logprob: -9.125259399414062
    4. 'speed' → logprob: -11.250259399414062
    5. '_velocity' → logprob: -11.500259399414062
    6. '_score' → logprob: -13.875259399414062
    7. ' _' → logprob: -14.000259399414062
    8. '_space' → logprob: -14.875259399414062
    9. '_sp' → logprob: -15.250259399414062
    10. 's' → logprob: -15.375259399414062

Token 84: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04528559371829033
    2. '<|end|>' → logprob: -3.670285701751709
    3. '
' → logprob: -4.420285701751709
    4. '        ' → logprob: -5.920285701751709
    5. ',' → logprob: -6.170285701751709
    6. '        
' → logprob: -7.420285701751709
    7. ' ' → logprob: -7.545285701751709
    8. '      ' → logprob: -8.29528522491455
    9. ' 
' → logprob: -9.04528522491455
    10. '  
' → logprob: -9.79528522491455

Token 85: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010108067654073238
    2. '
' → logprob: -5.01010799407959
    3. '<|end|>' → logprob: -6.88510799407959
    4. '        
' → logprob: -7.38510799407959
    5. ' ' → logprob: -7.51010799407959
    6. '      ' → logprob: -8.13510799407959
    7. '        ' → logprob: -8.26010799407959
    8. ',' → logprob: -9.01010799407959
    9. 'self' → logprob: -9.13510799407959
    10. ' 
' → logprob: -9.38510799407959

Token 86: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.5160567164421082
    2. '       ' → logprob: -1.016056776046753
    3. ' self' → logprob: -3.641056776046753
    4. ' ' → logprob: -4.891056537628174
    5. ',' → logprob: -6.016056537628174
    6. '_' → logprob: -6.391056537628174
    7. '
' → logprob: -7.516056537628174
    8. '        
' → logprob: -7.641056537628174
    9. '=' → logprob: -8.016057014465332
    10. '  ' → logprob: -8.016057014465332

Token 87: '.V' (ID: 5970)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.018549401313066483
    2. '_' → logprob: -4.14354944229126
    3. '.bo' → logprob: -6.89354944229126
    4. '._' → logprob: -7.39354944229126
    5. '_bo' → logprob: -7.89354944229126
    6. '.B' → logprob: -8.768548965454102
    7. ',' → logprob: -9.643548965454102
    8. '_b' → logprob: -10.268548965454102
    9. ' ' → logprob: -10.268548965454102
    10. '+' → logprob: -10.768548965454102

Token 88: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04589809104800224
    2. '=' → logprob: -3.170898199081421
    3. '_' → logprob: -5.920897960662842
    4. '<|end|>' → logprob: -9.5458984375
    5. ',' → logprob: -9.7958984375
    6. '+' → logprob: -10.6708984375
    7. ' +' → logprob: -11.9208984375
    8. ' ' → logprob: -12.1708984375
    9. '_bo' → logprob: -12.5458984375
    10. '_=' → logprob: -12.6708984375

Token 89: ' boosted' (ID: 111352)
  Prédit: ' boosted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' boosted' → logprob: -0.030468450859189034
    2. 'boost' → logprob: -3.530468463897705
    3. ' boost' → logprob: -7.655468463897705
    4. ' ' → logprob: -9.030467987060547
    5. ' ' → logprob: -9.655467987060547
    6. '(boost' → logprob: -10.280467987060547
    7. '	boost' → logprob: -11.405467987060547
    8. '_bo' → logprob: -13.030467987060547
    9. ' boosting' → logprob: -13.155467987060547
    10. '<boost' → logprob: -13.405467987060547

Token 90: '_speed' (ID: 43208)
  Prédit: '_speed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_speed' → logprob: -0.0005343250813893974
    2. '_' → logprob: -7.750534534454346
    3. '_s' → logprob: -9.375534057617188
    4. ' _' → logprob: -11.875534057617188
    5. '_space' → logprob: -12.875534057617188
    6. 'speed' → logprob: -13.125534057617188
    7. '_sp' → logprob: -13.375534057617188
    8. 'ed' → logprob: -13.750534057617188
    9. '_time' → logprob: -13.875534057617188
    10. '_velocity' → logprob: -14.375534057617188

Token 91: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3984961211681366
    2. '
' → logprob: -2.023496150970459
    3. '<|end|>' → logprob: -2.023496150970459
    4. ' ' → logprob: -3.523496150970459
    5. ' 
' → logprob: -4.023496150970459
    6. '        
' → logprob: -5.148496150970459
    7. '  
' → logprob: -5.273496150970459
    8. '    
' → logprob: -6.023496150970459
    9. '   ' → logprob: -7.398496150970459
    10. '        ' → logprob: -7.648496150970459

Token 92: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01231338456273079
    2. '<|end|>' → logprob: -5.137313365936279
    3. ' ' → logprob: -6.137313365936279
    4. '
' → logprob: -6.387313365936279
    5. 'self' → logprob: -7.137313365936279
    6. ' 
' → logprob: -7.387313365936279
    7. '        
' → logprob: -7.887313365936279
    8. '  
' → logprob: -8.512313842773438
    9. ' self' → logprob: -8.887313842773438
    10. '   ' → logprob: -9.512313842773438

Token 93: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.08739439398050308
    2. ' self' → logprob: -2.7123944759368896
    3. '       ' → logprob: -4.0873942375183105
    4. ' ' → logprob: -8.462394714355469
    5. ' ' → logprob: -8.962394714355469
    6. '	self' → logprob: -9.962394714355469
    7. '        ' → logprob: -10.337394714355469
    8. '
' → logprob: -10.962394714355469
    9. '_self' → logprob: -11.337394714355469
    10. ' 
' → logprob: -11.462394714355469

Token 94: '.T' (ID: 2600)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00912773609161377
    2. '_' → logprob: -5.384127616882324
    3. '.bo' → logprob: -5.509127616882324
    4. '.B' → logprob: -8.884127616882324
    5. '_bo' → logprob: -9.009127616882324
    6. '	boost' → logprob: -9.884127616882324
    7. '._' → logprob: -10.259127616882324
    8. ' ' → logprob: -11.009127616882324
    9. '.b' → logprob: -11.134127616882324
    10. 'boost' → logprob: -11.259127616882324

Token 95: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.08291105180978775
    2. ' =' → logprob: -2.8329110145568848
    3. '=' → logprob: -3.9579110145568848
    4. '_duration' → logprob: -7.207911014556885
    5. '_bo' → logprob: -8.082911491394043
    6. '_b' → logprob: -8.332911491394043
    7. '_=' → logprob: -8.957911491394043
    8. ' _' → logprob: -9.707911491394043
    9. ' ' → logprob: -11.207911491394043
    10. '_d' → logprob: -11.457911491394043

Token 96: ' boost' (ID: 12110)
  Prédit: ' boost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' boost' → logprob: -0.02978902868926525
    2. 'boost' → logprob: -3.5297889709472656
    3. ' ' → logprob: -11.029788970947266
    4. '(boost' → logprob: -11.404788970947266
    5. '	boost' → logprob: -11.779788970947266
    6. ' ' → logprob: -13.904788970947266
    7. 'bo' → logprob: -14.529788970947266
    8. '_bo' → logprob: -14.529788970947266
    9. '<boost' → logprob: -14.904788970947266
    10. ' boos' → logprob: -15.654788970947266

Token 97: '_duration' (ID: 59503)
  Prédit: '_duration'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_duration' → logprob: -1.3306015716807451e-05
    2. '_' → logprob: -12.37501335144043
    3. '_d' → logprob: -12.37501335144043
    4. 'duration' → logprob: -12.62501335144043
    5. '_DURATION' → logprob: -14.50001335144043
    6. '_time' → logprob: -14.75001335144043
    7. 'Duration' → logprob: -15.12501335144043
    8. '_period' → logprob: -16.00001335144043
    9. '_length' → logprob: -17.12501335144043
    10. ' _' → logprob: -17.25001335144043

Token 98: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.041328899562358856
    2. '    
' → logprob: -3.6663289070129395
    3. '   ' → logprob: -5.2913289070129395
    4. '<|end|>' → logprob: -5.5413289070129395
    5. '  
' → logprob: -5.7913289070129395
    6. ' 
' → logprob: -6.5413289070129395
    7. '

' → logprob: -7.5413289070129395
    8. '   
' → logprob: -7.7913289070129395
    9. '<|end|>' → logprob: -8.916328430175781
    10. 'def' → logprob: -9.416328430175781

Token 99: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.20901338756084442
    2. '   ' → logprob: -2.4590134620666504
    3. '    
' → logprob: -2.7090134620666504
    4. '  
' → logprob: -3.9590134620666504
    5. ' 
' → logprob: -4.33401346206665
    6. '   
' → logprob: -6.08401346206665
    7. 'def' → logprob: -7.70901346206665
    8. '<|end|>' → logprob: -7.95901346206665
    9. '

' → logprob: -8.334012985229492
    10. '  ' → logprob: -8.459012985229492

Token 100: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.027239462360739708
    2. ' def' → logprob: -3.7772395610809326
    3. '   ' → logprob: -5.5272393226623535
    4. ' ' → logprob: -12.152239799499512
    5. '	def' → logprob: -13.527239799499512
    6. '  ' → logprob: -13.902239799499512
    7. 'de' → logprob: -14.152239799499512
    8. '
' → logprob: -15.152239799499512
    9. '    
' → logprob: -15.652239799499512
    10. 'd' → logprob: -15.652239799499512

Token 101: ' get' (ID: 717)
  Prédit: ' get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.01666201464831829
    2. ' _' → logprob: -4.766662120819092
    3. '_' → logprob: -5.391662120819092
    4. ' ' → logprob: -6.016662120819092
    5. '_get' → logprob: -7.016662120819092
    6. ' space' → logprob: -10.141661643981934
    7. 'get' → logprob: -10.391661643981934
    8. ' ' → logprob: -10.516661643981934
    9. '_space' → logprob: -11.141661643981934
    10. ' def' → logprob: -11.391661643981934

Token 102: '_speed' (ID: 43208)
  Prédit: '_speed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_speed' → logprob: -0.009078947827219963
    2. '_' → logprob: -4.7590789794921875
    3. ' _' → logprob: -8.384078979492188
    4. '_s' → logprob: -8.384078979492188
    5. '_space' → logprob: -13.509078979492188
    6. '_velocity' → logprob: -13.634078979492188
    7. '_sp' → logprob: -13.884078979492188
    8. '```' → logprob: -14.384078979492188
    9. '_sn' → logprob: -14.634078979492188
    10. '_time' → logprob: -15.009078979492188

Token 103: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.31336331367492676
    2. '(' → logprob: -1.3133633136749268
    3. '(
' → logprob: -9.688363075256348
    4. ' (' → logprob: -10.313363075256348
    5. '(s' → logprob: -12.563363075256348
    6. '(

' → logprob: -13.563363075256348
    7. '   ' → logprob: -15.313363075256348
    8. 'self' → logprob: -15.438363075256348
    9. ' ' → logprob: -15.563363075256348
    10. '       ' → logprob: -15.688363075256348

Token 104: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.3954463510308415e-05
    2. ' ,' → logprob: -9.875054359436035
    3. ')' → logprob: -13.875054359436035
    4. 'self' → logprob: -14.375054359436035
    5. ',time' → logprob: -14.500054359436035
    6. 's' → logprob: -16.12505340576172
    7. ',
' → logprob: -16.50005340576172
    8. ',s' → logprob: -16.62505340576172
    9. ',self' → logprob: -17.25005340576172
    10. ' ' → logprob: -17.37505340576172

Token 105: ' time' (ID: 1058)
  Prédit: ' time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' time' → logprob: -0.0007171963807195425
    2. 'time' → logprob: -7.2507171630859375
    3. ' t' → logprob: -13.375717163085938
    4. ' ' → logprob: -13.500717163085938
    5. ' ' → logprob: -14.125717163085938
    6. ' times' → logprob: -14.250717163085938
    7. 't' → logprob: -14.875717163085938
    8. ')' → logprob: -14.875717163085938
    9. '	time' → logprob: -14.875717163085938
    10. '    ' → logprob: -15.000717163085938

Token 106: '_since' (ID: 133288)
  Prédit: '_since'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_since' → logprob: -0.00029840084607712924
    2. '_' → logprob: -8.125298500061035
    3. ')' → logprob: -13.625298500061035
    4. '_until' → logprob: -15.375298500061035
    5. 'since' → logprob: -15.875298500061035
    6. ' since' → logprob: -15.875298500061035
    7. 'Since' → logprob: -16.00029754638672
    8. '_after' → logprob: -16.37529754638672
    9. ')_' → logprob: -17.00029754638672
    10. '_to' → logprob: -17.12529754638672

Token 107: '_last' (ID: 26359)
  Prédit: '_last'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_last' → logprob: -0.0015934114344418049
    2. '_' → logprob: -6.501593589782715
    3. '_l' → logprob: -9.751593589782715
    4. ' _' → logprob: -10.876593589782715
    5. '_la' → logprob: -12.876593589782715
    6. 'last' → logprob: -13.001593589782715
    7. '_LAST' → logprob: -13.126593589782715
    8. '_car' → logprob: -13.251593589782715
    9. ' ' → logprob: -13.876593589782715
    10. ')_' → logprob: -14.001593589782715

Token 108: '_car' (ID: 62991)
  Prédit: '_car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_car' → logprob: -0.0023580484557896852
    2. '_' → logprob: -6.1273579597473145
    3. '_c' → logprob: -8.752358436584473
    4. ' _' → logprob: -11.502358436584473
    5. '_ca' → logprob: -13.127358436584473
    6. ' ' → logprob: -14.127358436584473
    7. 'car' → logprob: -14.252358436584473
    8. ')_' → logprob: -14.252358436584473
    9. '_cat' → logprob: -16.127357482910156
    10. '_C' → logprob: -16.252357482910156

Token 109: 'rot' (ID: 8150)
  Prédit: 'rot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rot' → logprob: -0.0008636995335109532
    2. 'r' → logprob: -7.750863552093506
    3. 'ot' → logprob: -8.750864028930664
    4. '_rot' → logprob: -9.250864028930664
    5. 't' → logprob: -9.500864028930664
    6. 'rott' → logprob: -11.000864028930664
    7. 'ott' → logprob: -11.250864028930664
    8. 'ro' → logprob: -11.375864028930664
    9. 'rt' → logprob: -12.125864028930664
    10. '   ' → logprob: -12.125864028930664

Token 110: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0028645433485507965
    2. '):' → logprob: -5.877864360809326
    3. ')' → logprob: -10.627864837646484
    4. ' ):' → logprob: -10.752864837646484
    5. ' :' → logprob: -11.377864837646484
    6. '):
' → logprob: -13.377864837646484
    7. '   ' → logprob: -14.252864837646484
    8. ' )' → logprob: -15.502864837646484
    9. ' ' → logprob: -16.752864837646484
    10. '=' → logprob: -17.252864837646484

Token 111: ' float' (ID: 4428)
  Prédit: ' float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.034481022506952286
    2. ' ' → logprob: -3.9094810485839844
    3. 'float' → logprob: -4.534481048583984
    4. ' )' → logprob: -6.409481048583984
    5. ')' → logprob: -7.659481048583984
    6. ' ):' → logprob: -7.659481048583984
    7. ':' → logprob: -8.284481048583984
    8. ' :' → logprob: -8.659481048583984
    9. '):' → logprob: -11.034481048583984
    10. '_float' → logprob: -11.534481048583984

Token 112: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0017090904293581843
    2. '):' → logprob: -6.376708984375
    3. ')->' → logprob: -13.126708984375
    4. ':' → logprob: -13.126708984375
    5. ' )' → logprob: -13.126708984375
    6. '):
' → logprob: -14.251708984375
    7. '   ' → logprob: -16.501708984375
    8. ' ):' → logprob: -16.501708984375
    9. '):

' → logprob: -17.751708984375
    10. ')
' → logprob: -18.376708984375

Token 113: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004158772062510252
    2. '->' → logprob: -6.379158973693848
    3. ' ->' → logprob: -6.629158973693848
    4. '):' → logprob: -7.254158973693848
    5. ')' → logprob: -8.129158973693848
    6. ')->' → logprob: -9.129158973693848
    7. ' :' → logprob: -11.629158973693848
    8. ':return' → logprob: -12.254158973693848
    9. '   ' → logprob: -13.129158973693848
    10. '>' → logprob: -13.254158973693848

Token 114: ' float' (ID: 4428)
  Prédit: ' float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.02674364484846592
    2. 'float' → logprob: -3.6517436504364014
    3. ' ' → logprob: -7.776743412017822
    4. ')' → logprob: -11.65174388885498
    5. '"' → logprob: -12.77674388885498
    6. '   ' → logprob: -13.02674388885498
    7. ':' → logprob: -13.15174388885498
    8. '(float' → logprob: -13.52674388885498
    9. '	float' → logprob: -13.52674388885498
    10. '  ' → logprob: -13.77674388885498

Token 115: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00024215869780164212
    2. '):' → logprob: -8.750242233276367
    3. ':
' → logprob: -9.500242233276367
    4. ' :' → logprob: -13.250242233276367
    5. '():' → logprob: -13.250242233276367
    6. '):
' → logprob: -13.500242233276367
    7. '       ' → logprob: -13.500242233276367
    8. ':return' → logprob: -13.875242233276367
    9. ':**' → logprob: -14.375242233276367
    10. ':def' → logprob: -15.125242233276367

Token 116: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010822015814483166
    2. ':' → logprob: -4.63582181930542
    3. '   ' → logprob: -8.760822296142578
    4. '
' → logprob: -8.760822296142578
    5. ')' → logprob: -9.010822296142578
    6. ',' → logprob: -9.010822296142578
    7. '        
' → logprob: -9.385822296142578
    8. ' 
' → logprob: -9.760822296142578
    9. '    ' → logprob: -9.885822296142578
    10. ' ' → logprob: -9.885822296142578

Token 117: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.3788425028324127
    2. ' if' → logprob: -1.6288424730300903
    3. '       ' → logprob: -2.12884259223938
    4. 'return' → logprob: -9.1288423538208
    5. 'i' → logprob: -10.3788423538208
    6. ' i' → logprob: -10.5038423538208
    7. ' return' → logprob: -11.0038423538208
    8. '```' → logprob: -11.0038423538208
    9. 't' → logprob: -12.2538423538208
    10. 'time' → logprob: -13.1288423538208

Token 118: ' time' (ID: 1058)
  Prédit: ' time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' time' → logprob: -0.0003422567679081112
    2. 'time' → logprob: -8.12534236907959
    3. ' ' → logprob: -10.12534236907959
    4. ' ' → logprob: -12.25034236907959
    5. ' self' → logprob: -14.37534236907959
    6. '	time' → logprob: -14.75034236907959
    7. '0' → logprob: -15.75034236907959
    8. '(time' → logprob: -16.375341415405273
    9. ' t' → logprob: -17.500341415405273
    10. ' times' → logprob: -17.875341415405273

Token 119: '_since' (ID: 133288)
  Prédit: '_since'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_since' → logprob: -0.0004958406207151711
    2. '_' → logprob: -7.625495910644531
    3. ' since' → logprob: -12.625495910644531
    4. 'since' → logprob: -13.125495910644531
    5. ' _' → logprob: -13.250495910644531
    6. 'Since' → logprob: -15.375495910644531
    7. ' ' → logprob: -16.25049591064453
    8. '   ' → logprob: -16.62549591064453
    9. '_<' → logprob: -16.62549591064453
    10. ' Since' → logprob: -16.87549591064453

Token 120: '_last' (ID: 26359)
  Prédit: '_since'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_since' → logprob: -0.019583193585276604
    2. '_last' → logprob: -4.519583225250244
    3. '_' → logprob: -4.769583225250244
    4. ' _' → logprob: -12.894582748413086
    5. '_this' → logprob: -13.644582748413086
    6. '_to' → logprob: -13.769582748413086
    7. '_<' → logprob: -13.894582748413086
    8. '_after' → logprob: -13.894582748413086
    9. '_less' → logprob: -14.144582748413086
    10. '_until' → logprob: -14.269582748413086

Token 121: '_car' (ID: 62991)
  Prédit: '_car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_car' → logprob: -0.12720537185668945
    2. '_' → logprob: -2.1272053718566895
    3. '_c' → logprob: -8.877204895019531
    4. ' _' → logprob: -9.252204895019531
    5. '_ca' → logprob: -11.002204895019531
    6. '>' → logprob: -12.252204895019531
    7. ' ' → logprob: -13.002204895019531
    8. '_
' → logprob: -13.252204895019531
    9. 'car' → logprob: -13.377204895019531
    10. '_C' → logprob: -13.502204895019531

Token 122: 'rot' (ID: 8150)
  Prédit: 'ot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ot' → logprob: -0.5246961712837219
    2. 'rot' → logprob: -0.8996961712837219
    3. '_rot' → logprob: -7.524696350097656
    4. 'ott' → logprob: -8.149696350097656
    5. 'ort' → logprob: -9.024696350097656
    6. '_' → logprob: -9.024696350097656
    7. '>' → logprob: -9.774696350097656
    8. 't' → logprob: -10.149696350097656
    9. 'o' → logprob: -10.524696350097656
    10. '   ' → logprob: -10.524696350097656

Token 123: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.5300712585449219
    2. ' <' → logprob: -0.9050712585449219
    3. '<=' → logprob: -5.655071258544922
    4. '<' → logprob: -5.780071258544922
    5. ' ' → logprob: -8.155071258544922
    6. ' >=' → logprob: -11.030071258544922
    7. ' ==' → logprob: -11.280071258544922
    8. ' ' → logprob: -11.905071258544922
    9. ' >' → logprob: -12.405071258544922
    10. '0' → logprob: -13.530071258544922

Token 124: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.20183905959129333
    2. 'self' → logprob: -1.7018390893936157
    3. '0' → logprob: -7.826838970184326
    4. ' ' → logprob: -10.701839447021484
    5. '(self' → logprob: -13.201839447021484
    6. '	self' → logprob: -13.701839447021484
    7. ' ' → logprob: -14.201839447021484
    8. ' 
' → logprob: -16.201839447021484
    9. '1' → logprob: -16.326839447021484
    10. '[self' → logprob: -16.701839447021484

Token 125: '.T' (ID: 2600)
  Prédit: '.T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.T' → logprob: -8.423219696851447e-05
    2. '.' → logprob: -9.750083923339844
    3. ' .' → logprob: -10.875083923339844
    4. 'T' → logprob: -12.125083923339844
    5. ' ' → logprob: -14.625083923339844
    6. '	T' → logprob: -15.625083923339844
    7. '_T' → logprob: -15.750083923339844
    8. '   ' → logprob: -16.000083923339844
    9. '.V' → logprob: -16.000083923339844
    10. '.U' → logprob: -16.250083923339844

Token 126: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03828912228345871
    2. ':
' → logprob: -3.2882890701293945
    3. ' :' → logprob: -9.163289070129395
    4. ':return' → logprob: -9.163289070129395
    5. ' :
' → logprob: -10.288289070129395
    6. ':
' → logprob: -12.788289070129395
    7. '):
' → logprob: -15.038289070129395
    8. ':

' → logprob: -15.413289070129395
    9. '):' → logprob: -15.663289070129395
    10. ' and' → logprob: -15.913289070129395

Token 127: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02177545242011547
    2. ':
' → logprob: -3.896775484085083
    3. ':return' → logprob: -6.771775245666504
    4. 'return' → logprob: -11.271775245666504
    5. ' return' → logprob: -11.271775245666504
    6. '           ' → logprob: -11.521775245666504
    7. '       ' → logprob: -11.521775245666504
    8. '):' → logprob: -11.521775245666504
    9. '):
' → logprob: -11.646775245666504
    10. ',' → logprob: -11.896775245666504

Token 128: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.18908604979515076
    2. ' return' → logprob: -1.8140860795974731
    3. '
' → logprob: -5.189085960388184
    4. '       ' → logprob: -6.314085960388184
    5. '           ' → logprob: -6.814085960388184
    6. ' 
' → logprob: -7.689085960388184
    7. ':return' → logprob: -8.814085960388184
    8. ':' → logprob: -9.689085960388184
    9. '               ' → logprob: -10.314085960388184
    10. '	return' → logprob: -10.939085960388184

Token 129: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.1128304973244667
    2. 'self' → logprob: -2.237830400466919
    3. ' ' → logprob: -12.86283016204834
    4. '(self' → logprob: -13.11283016204834
    5. ' ' → logprob: -13.11283016204834
    6. '	self' → logprob: -14.73783016204834
    7. 'elf' → logprob: -15.23783016204834
    8. '0' → logprob: -15.73783016204834
    9. '           ' → logprob: -15.86283016204834
    10. '       ' → logprob: -16.112831115722656

Token 130: '.V' (ID: 5970)
  Prédit: '.V'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.V' → logprob: -0.0020046497229486704
    2. '.' → logprob: -6.252004623413086
    3. '.U' → logprob: -9.627004623413086
    4. '.T' → logprob: -11.877004623413086
    5. ' .' → logprob: -13.252004623413086
    6. '.B' → logprob: -15.877004623413086
    7. 'self' → logprob: -16.127004623413086
    8. '.В' → logprob: -16.127004623413086
    9. '.

' → logprob: -16.377004623413086
    10. 'V' → logprob: -16.377004623413086

Token 131: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0300530344247818
    2. 'else' → logprob: -3.90505313873291
    3. ' else' → logprob: -5.03005313873291
    4. '
' → logprob: -6.03005313873291
    5. '        
' → logprob: -8.78005313873291
    6. '<|end|>' → logprob: -8.78005313873291
    7. '	' → logprob: -10.40505313873291
    8. '*' → logprob: -10.40505313873291
    9. '	else' → logprob: -10.78005313873291
    10. '.' → logprob: -10.78005313873291

Token 132: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0051381695084273815
    2. ' else' → logprob: -6.130138397216797
    3. '
' → logprob: -6.630138397216797
    4. '        
' → logprob: -6.755138397216797
    5. 'else' → logprob: -8.130138397216797
    6. ' 
' → logprob: -9.755138397216797
    7. '  
' → logprob: -10.130138397216797
    8. 'return' → logprob: -11.380138397216797
    9. '<|end|>' → logprob: -11.380138397216797
    10. '    
' → logprob: -11.505138397216797

Token 133: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.32346561551094055
    2. ' else' → logprob: -1.9484655857086182
    3. 'else' (adapté à ' else') → logprob: -2.323465585708618
    4. '
' → logprob: -3.448465585708618
    5. '        
' → logprob: -6.698465824127197
    6. 'return' → logprob: -6.698465824127197
    7. '    
' → logprob: -7.573465824127197
    8. '   ' → logprob: -7.698465824127197
    9. '  
' → logprob: -8.573465347290039
    10. ' 
' → logprob: -8.948465347290039

Token 134: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14219483733177185
    2. ':
' → logprob: -2.3921947479248047
    3. '       ' → logprob: -3.5171947479248047
    4. ':return' → logprob: -5.517194747924805
    5. '           ' → logprob: -5.892194747924805
    6. ' return' → logprob: -6.642194747924805
    7. 'return' → logprob: -6.892194747924805
    8. ' :
' → logprob: -7.267194747924805
    9. ' :' → logprob: -8.017194747924805
    10. ',' → logprob: -8.267194747924805

Token 135: '           ' (ID: 352)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.6243284344673157
    2. 'self' → logprob: -0.8743284344673157
    3. 'return' → logprob: -3.499328374862671
    4. ' return' → logprob: -4.12432861328125
    5. '       ' → logprob: -7.12432861328125
    6. ' ' → logprob: -11.74932861328125
    7. '   ' → logprob: -11.74932861328125
    8. '(self' → logprob: -12.74932861328125
    9. '	self' → logprob: -12.87432861328125
    10. '           ' → logprob: -13.12432861328125

Token 136: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.1517835408449173
    2. 'self' → logprob: -2.1517834663391113
    3. ' return' → logprob: -3.9017834663391113
    4. ' self' → logprob: -5.526783466339111
    5. '       ' → logprob: -8.02678394317627
    6. '           ' → logprob: -11.15178394317627
    7. 'eturn' → logprob: -12.15178394317627
    8. ':return' → logprob: -12.77678394317627
    9. '0' → logprob: -12.90178394317627
    10. '
' → logprob: -12.90178394317627

Token 137: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.6931702494621277
    2. 'self' → logprob: -0.6931702494621277
    3. ' ' → logprob: -11.818170547485352
    4. '0' → logprob: -12.568170547485352
    5. ' ' → logprob: -12.818170547485352
    6. 's' → logprob: -13.193170547485352
    7. ' 
' → logprob: -13.568170547485352
    8. '	self' → logprob: -13.818170547485352
    9. '   ' → logprob: -13.943170547485352
    10. '
' → logprob: -14.318170547485352

Token 138: '.U' (ID: 13234)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6257926821708679
    2. '.U' → logprob: -0.8757926821708679
    3. ' .' → logprob: -3.1257927417755127
    4. '.V' → logprob: -5.500792503356934
    5. '.S' → logprob: -8.125792503356934
    6. '.T' → logprob: -9.875792503356934
    7. ' ' → logprob: -10.375792503356934
    8. '.I' → logprob: -10.375792503356934
    9. ''.' → logprob: -10.750792503356934
    10. 'U' → logprob: -11.125792503356934

Token 139: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 140: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.02658289484679699
    2. '
' → logprob: -4.026582717895508
    3. '<|end|>' → logprob: -5.151582717895508
    4. ' class' → logprob: -6.901582717895508
    5. '\n' → logprob: -7.651582717895508
    6. '```' → logprob: -7.901582717895508
    7. '#' → logprob: -8.776582717895508
    8. 'c' → logprob: -8.901582717895508
    9. '

' → logprob: -8.901582717895508
    10. '"class' → logprob: -10.026582717895508

Token 141: ' Car' (ID: 4004)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.25150182843208313
    2. ' Turtle' → logprob: -2.1265017986297607
    3. 'Car' → logprob: -3.1265017986297607
    4. 'Fox' → logprob: -3.6265017986297607
    5. ' T' → logprob: -4.75150203704834
    6. 'Rabbit' → logprob: -5.25150203704834
    7. 'Wolf' → logprob: -5.87650203704834
    8. 'H' → logprob: -5.87650203704834
    9. 'Dog' → logprob: -6.37650203704834
    10. ' Fox' → logprob: -6.62650203704834

Token 142: 'rot' (ID: 8150)
  Prédit: 'rot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rot' → logprob: -0.01849593035876751
    2. 'Speed' → logprob: -4.268496036529541
    3. 'rots' → logprob: -6.518496036529541
    4. 'Rot' → logprob: -7.018496036529541
    5. '_speed' → logprob: -7.643496036529541
    6. 'ot' → logprob: -8.893495559692383
    7. 'Model' → logprob: -9.018495559692383
    8. 'speed' → logprob: -9.393495559692383
    9. 'ro' → logprob: -9.518495559692383
    10. 't' → logprob: -9.518495559692383

Token 143: 'Storage' (ID: 7834)
  Prédit: 'Speed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Speed' → logprob: -0.5633335113525391
    2. 'Collector' → logprob: -2.188333511352539
    3. 'Field' → logprob: -2.938333511352539
    4. 'Tracker' → logprob: -3.438333511352539
    5. 'Count' → logprob: -3.438333511352539
    6. 'Finder' → logprob: -4.063333511352539
    7. 'Eating' → logprob: -4.188333511352539
    8. 'Model' → logprob: -4.188333511352539
    9. 'Hunter' → logprob: -4.313333511352539
    10. 'Distance' → logprob: -4.563333511352539

Token 144: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003114853287115693
    2. '(' → logprob: -6.253114700317383
    3. '(R' → logprob: -7.128114700317383
    4. '():' → logprob: -8.378114700317383
    5. '):' → logprob: -10.003114700317383
    6. '(object' → logprob: -10.503114700317383
    7. ' :' → logprob: -11.003114700317383
    8. ':
' → logprob: -11.128114700317383
    9. '(Runtime' → logprob: -11.128114700317383
    10. '(Rem' → logprob: -12.003114700317383

Token 145: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0012379679828882217
    2. ' def' → logprob: -7.751237869262695
    3. ':
' → logprob: -8.001237869262695
    4. ':' → logprob: -8.251237869262695
    5. 'def' → logprob: -8.626237869262695
    6. '):
' → logprob: -11.751237869262695
    7. '(' → logprob: -11.751237869262695
    8. '    
' → logprob: -12.251237869262695
    9. '():
' → logprob: -13.126237869262695
    10. ',' → logprob: -13.626237869262695

Token 146: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.3213670253753662
    2. 'def' (adapté à ' def') → logprob: -1.3213670253753662
    3. '   ' → logprob: -4.821367263793945
    4. 'class' → logprob: -11.696367263793945
    5. '	def' → logprob: -12.821367263793945
    6. '  ' → logprob: -13.571367263793945
    7. ' ' → logprob: -13.696367263793945
    8. '    ' → logprob: -13.946367263793945
    9. 'de' → logprob: -14.071367263793945
    10. ':def' → logprob: -14.071367263793945

Token 147: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.007833507843315601
    2. 'init' → logprob: -5.132833480834961
    3. '__' → logprob: -6.757833480834961
    4. ' init' → logprob: -8.007833480834961
    5. ' def' → logprob: -8.382833480834961
    6. '_init' → logprob: -8.757833480834961
    7. ' ' → logprob: -11.632833480834961
    8. 'def' → logprob: -12.132833480834961
    9. ' ___' → logprob: -13.507833480834961
    10. ' int' → logprob: -13.507833480834961

Token 148: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -6.611323624383658e-05
    2. ' init' → logprob: -10.500065803527832
    3. 'it' → logprob: -11.125065803527832
    4. '_init' → logprob: -12.125065803527832
    5. 'i' → logprob: -12.375065803527832
    6. 'int' → logprob: -13.000065803527832
    7. '	init' → logprob: -13.375065803527832
    8. 'def' → logprob: -13.500065803527832
    9. '```' → logprob: -13.500065803527832
    10. '`' → logprob: -14.125065803527832

Token 149: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.03476659953594208
    2. '(self' → logprob: -3.409766674041748
    3. '(' → logprob: -7.534766674041748
    4. '__' → logprob: -7.659766674041748
    5. '_(' → logprob: -10.03476619720459
    6. ' (' → logprob: -10.03476619720459
    7. '__(
' → logprob: -10.78476619720459
    8. 'self' → logprob: -13.65976619720459
    9. '```' → logprob: -13.65976619720459
    10. ')(' → logprob: -13.90976619720459

Token 150: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00028624574770219624
    2. ' self' → logprob: -8.250286102294922
    3. ')' → logprob: -11.250286102294922
    4. '):
' → logprob: -12.125286102294922
    5. ',' → logprob: -13.250286102294922
    6. ' ' → logprob: -13.500286102294922
    7. '   ' → logprob: -13.500286102294922
    8. 'size' → logprob: -14.875286102294922
    9. '
' → logprob: -15.000286102294922
    10. 'max' → logprob: -15.375286102294922

Token 151: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005100103095173836
    2. '):' → logprob: -5.380100250244141
    3. ' ,' → logprob: -8.00510025024414
    4. '):
' → logprob: -9.13010025024414
    5. ' ):' → logprob: -11.13010025024414
    6. '   ' → logprob: -11.75510025024414
    7. ')' → logprob: -12.25510025024414
    8. 'self' → logprob: -12.88010025024414
    9. '  ' → logprob: -13.38010025024414
    10. ':' → logprob: -13.50510025024414

Token 152: ' capacity' (ID: 12241)
  Prédit: ' capacity'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' capacity' → logprob: -0.22442322969436646
    2. 'capacity' → logprob: -2.7244231700897217
    3. ' max' → logprob: -3.0994231700897217
    4. ' initial' → logprob: -3.0994231700897217
    5. ' carrots' → logprob: -3.9744231700897217
    6. 'car' → logprob: -4.849423408508301
    7. 'max' → logprob: -5.099423408508301
    8. 'initial' → logprob: -5.974423408508301
    9. ' total' → logprob: -6.224423408508301
    10. ' capacities' → logprob: -6.349423408508301

Token 153: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0002715873415581882
    2. '):' → logprob: -8.375271797180176
    3. ':int' → logprob: -10.375271797180176
    4. ' :' → logprob: -11.875271797180176
    5. '=' → logprob: -13.625271797180176
    6. '_:' → logprob: -13.875271797180176
    7. ')' → logprob: -14.750271797180176
    8. ' ):' → logprob: -15.625271797180176
    9. '):
' → logprob: -16.50027084350586
    10. ',' → logprob: -16.62527084350586

Token 154: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.31364405155181885
    2. ' int' → logprob: -1.3136440515518188
    3. '10' → logprob: -8.313644409179688
    4. ' ' → logprob: -9.938644409179688
    5. '100' → logprob: -10.313644409179688
    6. ':int' → logprob: -11.063644409179688
    7. '[int' → logprob: -11.563644409179688
    8. '0' → logprob: -11.938644409179688
    9. '5' → logprob: -12.063644409179688
    10. '50' → logprob: -12.813644409179688

Token 155: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0037278688978403807
    2. ',' → logprob: -6.253727912902832
    3. '):
' → logprob: -6.503727912902832
    4. ')' → logprob: -8.378727912902832
    5. ':' → logprob: -10.128727912902832
    6. ' ):' → logprob: -11.128727912902832
    7. '):
' → logprob: -11.503727912902832
    8. '=' → logprob: -13.378727912902832
    9. '   ' → logprob: -13.503727912902832
    10. '():' → logprob: -15.128727912902832

Token 156: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001538311829790473
    2. 'self' → logprob: -6.876538276672363
    3. ' self' → logprob: -8.251538276672363
    4. '   ' → logprob: -8.376538276672363
    5. ',' → logprob: -12.376538276672363
    6. '):
' → logprob: -12.626538276672363
    7. ' ' → logprob: -13.251538276672363
    8. '	self' → logprob: -13.876538276672363
    9. '      ' → logprob: -14.126538276672363
    10. ')' → logprob: -14.126538276672363

Token 157: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.00028302724240347743
    2. ' self' → logprob: -8.750283241271973
    3. '       ' → logprob: -9.000283241271973
    4. '   ' → logprob: -14.250283241271973
    5. '	self' → logprob: -14.625283241271973
    6. 'super' → logprob: -16.500282287597656
    7. 'def' → logprob: -18.125282287597656
    8. '(self' → logprob: -19.000282287597656
    9. 'from' → logprob: -19.125282287597656
    10. '	' → logprob: -19.500282287597656

Token 158: '.capacity' (ID: 124122)
  Prédit: '.capacity'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.capacity' → logprob: -0.04559896141290665
    2. '._' → logprob: -3.7955989837646484
    3. '.' → logprob: -3.9205989837646484
    4. '.car' → logprob: -7.170598983764648
    5. '.cap' → logprob: -7.545598983764648
    6. ' .' → logprob: -7.920598983764648
    7. '.storage' → logprob: -8.545598983764648
    8. '.current' → logprob: -8.920598983764648
    9. '.remaining' → logprob: -9.545598983764648
    10. 'capacity' → logprob: -10.045598983764648

Token 159: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5770927667617798
    2. ' =' → logprob: -0.8270927667617798
    3. ':' → logprob: -7.57709264755249
    4. ' ' → logprob: -8.202093124389648
    5. ')' → logprob: -8.327093124389648
    6. '_' → logprob: -9.952093124389648
    7. '<|end|>' → logprob: -10.077093124389648
    8. ',' → logprob: -11.452093124389648
    9. '   ' → logprob: -12.077093124389648
    10. '-' → logprob: -12.327093124389648

Token 160: ' capacity' (ID: 12241)
  Prédit: ' capacity'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' capacity' → logprob: -0.38724419474601746
    2. 'capacity' → logprob: -1.1372442245483398
    3. '0' → logprob: -8.01224422454834
    4. ' ' → logprob: -10.13724422454834
    5. '.capacity' → logprob: -14.51224422454834
    6. 'cap' → logprob: -14.88724422454834
    7. '_capacity' → logprob: -15.26224422454834
    8. 'int' → logprob: -15.88724422454834
    9. 'capac' → logprob: -15.88724422454834
    10. '(cap' → logprob: -16.012243270874023

Token 161: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010870599187910557
    2. 'self' → logprob: -4.760870456695557
    3. ' self' → logprob: -7.135870456695557
    4. '<|end|>' → logprob: -7.635870456695557
    5. '   ' → logprob: -8.010870933532715
    6. '
' → logprob: -8.010870933532715
    7. ',' → logprob: -8.760870933532715
    8. ' ' → logprob: -9.135870933532715
    9. '	self' → logprob: -11.635870933532715
    10. '(self' → logprob: -12.010870933532715

Token 162: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009513110853731632
    2. 'self' → logprob: -4.759512901306152
    3. ' self' → logprob: -7.759512901306152
    4. '   ' → logprob: -8.259512901306152
    5. '<|end|>' → logprob: -8.759512901306152
    6. ' ' → logprob: -10.759512901306152
    7. '	self' → logprob: -11.634512901306152
    8. ',' → logprob: -12.134512901306152
    9. '
' → logprob: -12.759512901306152
    10. '[self' → logprob: -13.134512901306152

Token 163: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0001835141738411039
    2. '       ' → logprob: -8.75018310546875
    3. ' self' → logprob: -10.62518310546875
    4. '   ' → logprob: -14.50018310546875
    5. '	self' → logprob: -16.62518310546875
    6. '
' → logprob: -17.00018310546875
    7. '        
' → logprob: -17.37518310546875
    8. 'def' → logprob: -17.87518310546875
    9. '[self' → logprob: -18.12518310546875
    10. '           ' → logprob: -18.75018310546875

Token 164: '.car' (ID: 49278)
  Prédit: '.current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.current' → logprob: -1.0100659132003784
    2. '.car' → logprob: -1.5100659132003784
    3. '.storage' → logprob: -1.7600659132003784
    4. '._' → logprob: -1.8850659132003784
    5. '.st' → logprob: -3.510066032409668
    6. '.' → logprob: -4.260066032409668
    7. '.contents' → logprob: -4.385066032409668
    8. '.count' → logprob: -4.510066032409668
    9. '.amount' → logprob: -5.260066032409668
    10. '.items' → logprob: -5.510066032409668

Token 165: 'rots' (ID: 175556)
  Prédit: 'rots'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rots' → logprob: -0.004273207858204842
    2. 'rot' → logprob: -5.629273414611816
    3. 'rott' → logprob: -8.379273414611816
    4. 'ro' → logprob: -8.879273414611816
    5. '_rot' → logprob: -9.004273414611816
    6. '_ro' → logprob: -9.629273414611816
    7. 'otts' → logprob: -9.754273414611816
    8. 'ots' → logprob: -10.754273414611816
    9. '_' → logprob: -12.379273414611816
    10. 's' → logprob: -12.879273414611816

Token 166: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0828339159488678
    2. '=' → logprob: -2.832834005355835
    3. '=[]' → logprob: -4.457833766937256
    4. '_' → logprob: -6.082833766937256
    5. '_count' → logprob: -6.082833766937256
    6. ':' → logprob: -6.457833766937256
    7. '_available' → logprob: -6.582833766937256
    8. '_list' → logprob: -7.957833766937256
    9. '_amount' → logprob: -8.707834243774414
    10. '_in' → logprob: -8.707834243774414

Token 167: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2028629183769226
    2. '[]' → logprob: -2.5778629779815674
    3. ' ' → logprob: -2.7028629779815674
    4. ' []' → logprob: -3.2028629779815674
    5. '[' → logprob: -12.327862739562988
    6. '[]}' → logprob: -12.702862739562988
    7. ' []
' → logprob: -13.327862739562988
    8. ' [' → logprob: -13.327862739562988
    9. '[]
' → logprob: -13.577862739562988
    10. '   ' → logprob: -14.327862739562988

Token 168: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5759732127189636
    2. '[]' → logprob: -0.8259732127189636
    3. '[]}' → logprob: -11.075973510742188
    4. ' []' → logprob: -12.325973510742188
    5. '[]
' → logprob: -12.325973510742188
    6. '[' → logprob: -12.575973510742188
    7. ' ' → logprob: -13.575973510742188
    8. '[]

' → logprob: -13.700973510742188
    9. '[]>' → logprob: -14.075973510742188
    10. '[])' → logprob: -14.200973510742188

Token 169: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 170: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 171: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.062314290553331375
    2. 'def' (adapté à ' def') → logprob: -2.81231427192688
    3. '
' → logprob: -8.3123140335083
    4. '	def' → logprob: -10.0623140335083
    5. '   ' → logprob: -10.4373140335083
    6. ' 
' → logprob: -10.8123140335083
    7. '    
' → logprob: -12.4373140335083
    8. '<|end|>' → logprob: -13.4373140335083
    9. ' ' → logprob: -13.6873140335083
    10. ' ' → logprob: -14.3123140335083

Token 172: ' can' (ID: 665)
  Prédit: ' add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.10932078957557678
    2. ' ' → logprob: -2.609320878982544
    3. ' store' → logprob: -4.484320640563965
    4. ' has' → logprob: -4.984320640563965
    5. ' can' → logprob: -5.984320640563965
    6. ' is' → logprob: -5.984320640563965
    7. ' space' → logprob: -6.359320640563965
    8. ' def' → logprob: -7.109320640563965
    9. ' empty' → logprob: -7.109320640563965
    10. 'add' → logprob: -7.109320640563965

Token 173: '_store' (ID: 33101)
  Prédit: '_add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_add' → logprob: -0.6945967674255371
    2. '_store' → logprob: -0.9445967674255371
    3. '_put' → logprob: -3.319596767425537
    4. '_' → logprob: -4.069596767425537
    5. '_take' → logprob: -4.319596767425537
    6. '_cons' → logprob: -4.569596767425537
    7. '_use' → logprob: -4.944596767425537
    8. '_accept' → logprob: -5.194596767425537
    9. '_insert' → logprob: -5.444596767425537
    10. '_g' → logprob: -5.569596767425537

Token 174: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.04643683508038521
    2. '()' → logprob: -3.5464367866516113
    3. '(' → logprob: -4.921436786651611
    4. '_car' → logprob: -4.921436786651611
    5. ' (' → logprob: -6.421436786651611
    6. '_' → logprob: -8.79643726348877
    7. 'car' → logprob: -9.92143726348877
    8. ' ()' → logprob: -10.17143726348877
    9. '():' → logprob: -10.42143726348877
    10. 'self' → logprob: -10.79643726348877

Token 175: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6087811589241028
    2. '()' → logprob: -0.9837811589241028
    3. ')' → logprob: -2.858781099319458
    4. ' ):' → logprob: -4.733781337738037
    5. '():' → logprob: -4.733781337738037
    6. ' )' → logprob: -6.358781337738037
    7. '_car' → logprob: -6.983781337738037
    8. '()):
' → logprob: -6.983781337738037
    9. '())' → logprob: -7.233781337738037
    10. '):
' → logprob: -7.358781337738037

Token 176: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.16517865657806396
    2. '(' → logprob: -2.5401787757873535
    3. 'self' → logprob: -2.6651787757873535
    4. '():' → logprob: -6.5401787757873535
    5. '()' → logprob: -6.7901787757873535
    6. ' (' → logprob: -7.2901787757873535
    7. ':' → logprob: -8.165178298950195
    8. ' self' → logprob: -8.915178298950195
    9. '_' → logprob: -10.290178298950195
    10. ' ' → logprob: -10.540178298950195

Token 177: ' bool' (ID: 3792)
  Prédit: ' bool'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bool' → logprob: -0.005871555767953396
    2. 'bool' → logprob: -5.630871772766113
    3. ' ' → logprob: -6.130871772766113
    4. ' True' → logprob: -9.630871772766113
    5. ' int' → logprob: -11.505871772766113
    6. '  ' → logprob: -11.755871772766113
    7. '	bool' → logprob: -12.755871772766113
    8. 'True' → logprob: -12.880871772766113
    9. ')' → logprob: -13.255871772766113
    10. ' ' → logprob: -14.130871772766113

Token 178: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01822509989142418
    2. '():' → logprob: -4.018225193023682
    3. ':
' → logprob: -10.393224716186523
    4. '):' → logprob: -10.518224716186523
    5. '():
' → logprob: -12.143224716186523
    6. ':return' → logprob: -12.143224716186523
    7. ' :' → logprob: -13.143224716186523
    8. ':**' → logprob: -13.768224716186523
    9. 'self' → logprob: -14.268224716186523
    10. '<|end|>' → logprob: -14.643224716186523

Token 179: '       ' (ID: 309)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.6049039959907532
    2. ' return' → logprob: -1.8549039363861084
    3. '       ' → logprob: -2.3549039363861084
    4. '<|end|>' → logprob: -2.3549039363861084
    5. '    ' → logprob: -3.2299039363861084
    6. 'True' → logprob: -3.6049039363861084
    7. ' ' → logprob: -4.2299041748046875
    8. '   ' → logprob: -5.2299041748046875
    9. '        ' → logprob: -5.4799041748046875
    10. '  ' → logprob: -5.6049041748046875

Token 180: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.4740954041481018
    2. ' return' → logprob: -0.9740954041481018
    3. '       ' → logprob: -11.849095344543457
    4. '	return' → logprob: -12.474095344543457
    5. 'self' → logprob: -12.849095344543457
    6. '   ' → logprob: -13.099095344543457
    7. '
' → logprob: -13.349095344543457
    8. ' self' → logprob: -14.724095344543457
    9. '```' → logprob: -15.474095344543457
    10. ':return' → logprob: -15.474095344543457

Token 181: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.0031781906727701426
    2. 'self' → logprob: -5.753178119659424
    3. ' ' → logprob: -14.878178596496582
    4. '	self' → logprob: -16.628177642822266
    5. ' len' → logprob: -17.628177642822266
    6. ' ' → logprob: -18.003177642822266
    7. '_self' → logprob: -18.878177642822266
    8. '(self' → logprob: -19.253177642822266
    9. '[self' → logprob: -19.503177642822266
    10. ' True' → logprob: -20.378177642822266

Token 182: '.car' (ID: 49278)
  Prédit: '.car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.car' → logprob: -0.0004990590969100595
    2. '.' → logprob: -7.625499248504639
    3. '.capacity' → logprob: -12.37549877166748
    4. ' .' → logprob: -12.50049877166748
    5. '.cap' → logprob: -13.12549877166748
    6. '	car' → logprob: -15.37549877166748
    7. 'car' → logprob: -15.50049877166748
    8. '.can' → logprob: -15.75049877166748
    9. '.ca' → logprob: -16.375499725341797
    10. '.c' → logprob: -16.375499725341797

Token 183: 'rots' (ID: 175556)
  Prédit: 'rots'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rots' → logprob: -0.03806294873356819
    2. 'ots' → logprob: -3.2880630493164062
    3. 'ro' → logprob: -11.163063049316406
    4. 's' → logprob: -13.538063049316406
    5. 'otts' → logprob: -13.538063049316406
    6. '_ro' → logprob: -13.663063049316406
    7. '.ro' → logprob: -14.413063049316406
    8. 'ts' → logprob: -14.913063049316406
    9. ' ots' → logprob: -15.163063049316406
    10. 'orts' → logprob: -15.163063049316406

Token 184: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.20142170786857605
    2. '<' → logprob: -1.7014217376708984
    3. ' ' → logprob: -11.826421737670898
    4. ' ' → logprob: -15.326421737670898
    5. '<int' → logprob: -15.576421737670898
    6. '<size' → logprob: -15.826421737670898
    7. ' <
' → logprob: -16.4514217376709
    8. '<class' → logprob: -16.5764217376709
    9. '<len' → logprob: -16.7014217376709
    10. '<
' → logprob: -17.0764217376709

Token 185: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.023245595395565033
    2. ' self' → logprob: -3.7732455730438232
    3. ' ' → logprob: -16.898244857788086
    4. '```' → logprob: -17.773244857788086
    5. '	self' → logprob: -17.898244857788086
    6. '   ' → logprob: -18.273244857788086
    7. ' ' → logprob: -18.523244857788086
    8. '1' → logprob: -18.523244857788086
    9. '_self' → logprob: -18.773244857788086
    10. '[self' → logprob: -18.898244857788086

Token 186: '.capacity' (ID: 124122)
  Prédit: '.capacity'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.capacity' → logprob: -0.0021376516669988632
    2. '.' → logprob: -6.252137660980225
    3. '.cap' → logprob: -9.002137184143066
    4. '.car' → logprob: -10.127137184143066
    5. 'capacity' → logprob: -10.627137184143066
    6. ' .' → logprob: -10.752137184143066
    7. '.storage' → logprob: -16.502138137817383
    8. ' capacity' → logprob: -17.127138137817383
    9. '.Cap' → logprob: -17.502138137817383
    10. '.capitalize' → logprob: -18.377138137817383

Token 187: '

' (ID: 279)
  Prédit: '

'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.37795692682266235
    2. '
' → logprob: -1.6279568672180176
    3. '<|end|>' → logprob: -2.3779568672180176
    4. '   ' → logprob: -5.002956867218018
    5. '    
' → logprob: -5.502956867218018
    6. ' 

' → logprob: -5.752956867218018
    7. '\n' → logprob: -5.877956867218018
    8. 'newline' → logprob: -6.377956867218018
    9. '


' → logprob: -6.877956867218018
    10. '<|end|>' → logprob: -6.877956867218018

Token 188: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.38038790225982666
    2. '<|end|>' → logprob: -1.6303879022598267
    3. '

' → logprob: -2.755387783050537
    4. ' 
' → logprob: -4.255387783050537
    5. '   ' → logprob: -4.505387783050537
    6. 'def' → logprob: -4.880387783050537
    7. 'newline' → logprob: -5.505387783050537
    8. '    
' → logprob: -5.630387783050537
    9. '  
' → logprob: -5.880387783050537
    10. '<|end|>' → logprob: -5.880387783050537

Token 189: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5530793070793152
    2. 'def' (adapté à ' def') → logprob: -1.17807936668396
    3. '    
' → logprob: -2.80307936668396
    4. ' def' → logprob: -3.30307936668396
    5. '  
' → logprob: -5.053079128265381
    6. ' 
' → logprob: -5.303079128265381
    7. '
' → logprob: -6.053079128265381
    8. '<|end|>' → logprob: -6.553079128265381
    9. '   
' → logprob: -7.053079128265381
    10. '	def' → logprob: -7.053079128265381

Token 190: ' store' (ID: 4897)
  Prédit: ' store'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' store' → logprob: -0.4010516405105591
    2. 'store' → logprob: -1.151051640510559
    3. ' add' → logprob: -4.4010515213012695
    4. 'add' → logprob: -6.4010515213012695
    5. '_store' → logprob: -10.02605152130127
    6. ' ' → logprob: -10.40105152130127
    7. ' increment' → logprob: -11.02605152130127
    8. 'increment' → logprob: -11.15105152130127
    9. '	store' → logprob: -11.27605152130127
    10. '.store' → logprob: -11.40105152130127

Token 191: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4841308891773224
    2. '(self' → logprob: -1.359130859375
    3. '_car' → logprob: -2.234130859375
    4. '_' → logprob: -3.984130859375
    5. '(car' → logprob: -7.609130859375
    6. 'car' → logprob: -8.234130859375
    7. '()' → logprob: -8.609130859375
    8. '_(' → logprob: -9.609130859375
    9. 'self' → logprob: -9.984130859375
    10. ' (' → logprob: -10.109130859375

Token 192: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.18019232153892517
    2. ')' → logprob: -1.9301923513412476
    3. ',' → logprob: -4.055192470550537
    4. '):
' → logprob: -6.680192470550537
    5. 'car' → logprob: -7.430192470550537
    6. 'self' → logprob: -8.555191993713379
    7. '(car' → logprob: -9.055191993713379
    8. '_car' → logprob: -9.430191993713379
    9. ' ):' → logprob: -9.805191993713379
    10. ' )' → logprob: -10.555191993713379

Token 193: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016067100688815117
    2. '   ' → logprob: -4.641067028045654
    3. 'self' → logprob: -5.891067028045654
    4. '(self' → logprob: -6.516067028045654
    5. '
' → logprob: -7.266067028045654
    6. ' self' → logprob: -7.516067028045654
    7. ' if' → logprob: -7.891067028045654
    8. '()' → logprob: -8.641067504882812
    9. '<|end|>' → logprob: -9.516067504882812
    10. '	self' → logprob: -10.141067504882812

Token 194: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7936305403709412
    2. 'self' → logprob: -1.043630599975586
    3. 'if' (adapté à ' if') → logprob: -2.043630599975586
    4. ' self' → logprob: -3.293630599975586
    5. '       ' → logprob: -3.543630599975586
    6. '   ' → logprob: -10.918630599975586
    7. ' ' → logprob: -11.793630599975586
    8. '	self' → logprob: -12.043630599975586
    9. '1' → logprob: -12.418630599975586
    10. '	if' → logprob: -12.918630599975586

Token 195: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.20141547918319702
    2. 'self' → logprob: -1.7014155387878418
    3. ' not' → logprob: -13.326415061950684
    4. '	self' → logprob: -14.951415061950684
    5. ' ' → logprob: -16.076416015625
    6. '(self' → logprob: -16.701416015625
    7. ' ' → logprob: -17.076416015625
    8. 'not' → logprob: -17.201416015625
    9. '   ' → logprob: -19.576416015625
    10. '_self' → logprob: -19.826416015625

Token 196: '.can' (ID: 46002)
  Prédit: '.can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.can' → logprob: -0.474275141954422
    2. '.car' → logprob: -0.9742751121520996
    3. '.' → logprob: -8.599275588989258
    4. ' .' → logprob: -11.599275588989258
    5. '.Can' → logprob: -13.224275588989258
    6. '.c' → logprob: -14.099275588989258
    7. ' can' → logprob: -14.849275588989258
    8. '	car' → logprob: -15.099275588989258
    9. '	can' → logprob: -15.099275588989258
    10. '.ca' → logprob: -15.224275588989258

Token 197: '_store' (ID: 33101)
  Prédit: '_store'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_store' → logprob: -0.0001137947037932463
    2. '_' → logprob: -9.125113487243652
    3. '_st' → logprob: -12.500113487243652
    4. 'store' → logprob: -14.250113487243652
    5. '_storage' → logprob: -15.000113487243652
    6. '_STORE' → logprob: -16.87511444091797
    7. '_
' → logprob: -17.50011444091797
    8. ' _' → logprob: -17.62511444091797
    9. '_s' → logprob: -17.75011444091797
    10. '_receive' → logprob: -18.75011444091797

Token 198: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0004907185211777687
    2. '():
' → logprob: -7.750490665435791
    3. ' ():' → logprob: -10.25049114227295
    4. '()' → logprob: -10.62549114227295
    5. ':' → logprob: -15.37549114227295
    6. '():
' → logprob: -16.250490188598633
    7. '():

' → logprob: -17.375490188598633
    8. '(' → logprob: -17.375490188598633
    9. '()==' → logprob: -19.250490188598633
    10. '()>' → logprob: -19.250490188598633

Token 199: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0038241837173700333
    2. '       ' → logprob: -6.378824234008789
    3. ':
' → logprob: -7.378824234008789
    4. 'self' → logprob: -7.378824234008789
    5. ' self' → logprob: -7.628824234008789
    6. ':' → logprob: -8.628824234008789
    7. '   ' → logprob: -9.253824234008789
    8. '               ' → logprob: -10.378824234008789
    9. '	       ' → logprob: -11.128824234008789
    10. '
' → logprob: -11.753824234008789

Token 200: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.5810430645942688
    2. 'self' (adapté à ' self') → logprob: -0.8310430645942688
    3. '               ' → logprob: -5.456043243408203
    4. '           ' → logprob: -7.206043243408203
    5. '	self' → logprob: -9.831043243408203
    6. '   ' → logprob: -11.331043243408203
    7. ' ' → logprob: -11.831043243408203
    8. ' ' → logprob: -13.331043243408203
    9. '       ' → logprob: -13.581043243408203
    10. '(self' → logprob: -14.331043243408203

Token 201: '.car' (ID: 49278)
  Prédit: '.car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.car' → logprob: -2.522638169466518e-05
    2. '.' → logprob: -11.500024795532227
    3. '.c' → logprob: -11.875024795532227
    4. ' .' → logprob: -12.250024795532227
    5. '	car' → logprob: -13.625024795532227
    6. 'car' → logprob: -13.875024795532227
    7. '.carousel' → logprob: -14.750024795532227
    8. '.ca' → logprob: -16.375024795532227
    9. '.Car' → logprob: -16.375024795532227
    10. '_car' → logprob: -16.500024795532227

Token 202: 'rots' (ID: 175556)
  Prédit: 'rots'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rots' → logprob: -0.07001279294490814
    2. 'ots' → logprob: -2.6950128078460693
    3. 'otts' → logprob: -9.820013046264648
    4. 'ts' → logprob: -12.695013046264648
    5. 'ro' → logprob: -12.820013046264648
    6. 'orts' → logprob: -12.945013046264648
    7. ' ots' → logprob: -12.945013046264648
    8. 's' → logprob: -13.570013046264648
    9. 'rot' → logprob: -13.570013046264648
    10. 'ôts' → logprob: -13.570013046264648

Token 203: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.16022595763206482
    2. '+=' → logprob: -1.9102259874343872
    3. '+' → logprob: -13.535225868225098
    4. ']+=' → logprob: -15.285225868225098
    5. '=' → logprob: -16.535226821899414
    6. ' +' → logprob: -17.160226821899414
    7. '   ' → logprob: -18.035226821899414
    8. '           ' → logprob: -18.035226821899414
    9. '+="' → logprob: -18.160226821899414
    10. '    ' → logprob: -18.535226821899414

Token 204: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001398929744027555
    2. ' ' → logprob: -8.875140190124512
    3. '   ' → logprob: -18.125139236450195
    4. '```' → logprob: -19.375139236450195
    5. ' ' → logprob: -21.250139236450195
    6. '<|end|>' → logprob: -21.375139236450195
    7. '  ' → logprob: -21.500139236450195
    8. '۱' → logprob: -21.625139236450195
    9. '
' → logprob: -21.625139236450195
    10. '１' → logprob: -21.875139236450195

Token 205: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '   ' → logprob: -19.875001907348633
    4. '```' → logprob: -20.125001907348633
    5. '۱' → logprob: -22.125001907348633
    6. '<|end|>' → logprob: -22.375001907348633
    7. '
' → logprob: -22.625001907348633
    8. '１' → logprob: -22.750001907348633
    9. '  ' → logprob: -22.875001907348633
    10. '`' → logprob: -23.937501907348633

Token 206: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 207: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 208: ' else' (ID: 1203)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 209: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9668097496032715
    2. ':
' → logprob: -1.0918097496032715
    3. ':' → logprob: -1.3418097496032715
    4. ' raise' → logprob: -4.0918097496032715
    5. 'raise' → logprob: -5.5918097496032715
    6. '       ' → logprob: -7.4668097496032715
    7. ' :
' → logprob: -7.5918097496032715
    8. '	raise' → logprob: -7.5918097496032715
    9. '   ' → logprob: -8.96681022644043
    10. '          ' → logprob: -9.09181022644043

Token 210: '           ' (ID: 352)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raise' → logprob: -0.36537104845046997
    2. '           ' → logprob: -1.3653709888458252
    3. ' raise' → logprob: -2.990370988845825
    4. '
' → logprob: -7.990371227264404
    5. '	raise' → logprob: -8.990370750427246
    6. 'Raise' → logprob: -11.740370750427246
    7. '```' → logprob: -11.990370750427246
    8. '               ' → logprob: -11.990370750427246
    9. 'return' → logprob: -12.615370750427246
    10. '_raise' → logprob: -12.615370750427246

Token 211: ' raise' (ID: 9338)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raise' (adapté à ' raise') → logprob: -0.029798507690429688
    2. ' raise' → logprob: -3.5297985076904297
    3. 'pass' → logprob: -10.15479850769043
    4. ' pass' → logprob: -12.27979850769043
    5. 'r' → logprob: -13.27979850769043
    6. '   ' → logprob: -13.65479850769043
    7. 'return' → logprob: -14.65479850769043
    8. 'rais' → logprob: -15.27979850769043
    9. '	raise' → logprob: -15.40479850769043
    10. '```' → logprob: -15.77979850769043

Token 212: ' Runtime' (ID: 17606)
  Prédit: ' Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Value' → logprob: -0.0863911509513855
    2. ' Overflow' → logprob: -2.8363912105560303
    3. ' Exception' → logprob: -4.086390972137451
    4. 'Value' → logprob: -5.836390972137451
    5. ' Runtime' → logprob: -5.836390972137451
    6. 'Overflow' → logprob: -6.586390972137451
    7. 'Exception' → logprob: -9.33639144897461
    8. 'Runtime' → logprob: -11.33639144897461
    9. ' Index' → logprob: -12.46139144897461
    10. ' Memory' → logprob: -12.83639144897461

Token 213: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -2.696889623621246e-06
    2. 'rror' → logprob: -13.00000286102295
    3. 'Warning' → logprob: -15.37500286102295
    4. 'error' → logprob: -15.75000286102295
    5. 'Er' → logprob: -17.875001907348633
    6. '
' → logprob: -18.000001907348633
    7. 'Erro' → logprob: -18.125001907348633
    8. 'ERROR' → logprob: -18.250001907348633
    9. 'Runtime' → logprob: -19.250001907348633
    10. 'E' → logprob: -19.500001907348633

Token 214: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.00011284107313258573
    2. '(' → logprob: -9.250112533569336
    3. '('' → logprob: -11.000112533569336
    4. '()' → logprob: -17.250112533569336
    5. '(
' → logprob: -18.500112533569336
    6. '(f' → logprob: -19.125112533569336
    7. '("")' → logprob: -19.375112533569336
    8. '"' → logprob: -20.250112533569336
    9. '(

' → logprob: -20.500112533569336
    10. '("'' → logprob: -21.625112533569336

Token 215: 'Storage' (ID: 7834)
  Prédit: 'Storage'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Storage' → logprob: -0.49865448474884033
    2. 'Car' → logprob: -1.1236544847488403
    3. 'Cannot' → logprob: -3.373654365539551
    4. ' Car' → logprob: -4.248654365539551
    5. ' Storage' → logprob: -4.248654365539551
    6. 'Capacity' → logprob: -5.873654365539551
    7. 'No' → logprob: -6.873654365539551
    8. ' Cannot' → logprob: -7.623654365539551
    9. 'Maximum' → logprob: -9.87365436553955
    10. ' storage' → logprob: -9.99865436553955

Token 216: ' full' (ID: 3149)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.48143845796585083
    2. ' full' → logprob: -0.9814384579658508
    3. ' overflow' → logprob: -5.481438636779785
    4. 'full' → logprob: -6.606438636779785
    5. 'is' → logprob: -7.231438636779785
    6. 'Full' → logprob: -7.606438636779785
    7. ' capacity' → logprob: -7.731438636779785
    8. ' Full' → logprob: -9.981438636779785
    9. 'overflow' → logprob: -10.231438636779785
    10. ' ' → logprob: -10.731438636779785

Token 217: '")

' (ID: 10822)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.00011045700375689194
    2. '.")' → logprob: -9.250110626220703
    3. '!")' → logprob: -11.750110626220703
    4. '")
' → logprob: -12.375110626220703
    5. ')")' → logprob: -14.250110626220703
    6. ')' → logprob: -14.250110626220703
    7. '}")' → logprob: -15.000110626220703
    8. '"' → logprob: -15.500110626220703
    9. ':' → logprob: -16.000110626220703
    10. '")

' → logprob: -16.375110626220703

Token 218: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 219: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.4005708396434784
    2. '   ' → logprob: -1.2755708694458008
    3. '<|end|>' → logprob: -3.275570869445801
    4. ' def' → logprob: -4.525570869445801
    5. 'class' → logprob: -7.400570869445801
    6. '  ' → logprob: -7.525570869445801
    7. '```' → logprob: -8.0255708694458
    8. '	def' → logprob: -8.7755708694458
    9. '<|end|>' → logprob: -8.7755708694458
    10. '    
' → logprob: -9.0255708694458

Token 220: ' use' (ID: 1199)
  Prédit: ' retrieve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' retrieve' → logprob: -0.9627795815467834
    2. ' remove' → logprob: -1.3377795219421387
    3. 'retrieve' → logprob: -2.2127795219421387
    4. ' consume' → logprob: -2.3377795219421387
    5. 'remove' → logprob: -2.3377795219421387
    6. 'consume' → logprob: -3.3377795219421387
    7. ' take' → logprob: -5.212779521942139
    8. ' use' → logprob: -5.587779521942139
    9. 'take' → logprob: -5.712779521942139
    10. 'use' → logprob: -6.462779521942139

Token 221: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.013525821268558502
    2. '()' → logprob: -4.51352596282959
    3. '(' → logprob: -6.13852596282959
    4. '_car' → logprob: -8.13852596282959
    5. 'self' → logprob: -11.51352596282959
    6. 'car' → logprob: -12.13852596282959
    7. '():' → logprob: -12.88852596282959
    8. '(
' → logprob: -13.38852596282959
    9. 'Car' → logprob: -13.51352596282959
    10. '(car' → logprob: -14.26352596282959

Token 222: '):
' (ID: 1883)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7934488654136658
    2. '(self' → logprob: -0.9184488654136658
    3. '():' → logprob: -2.6684489250183105
    4. ')' → logprob: -3.1684489250183105
    5. '):' → logprob: -4.0434489250183105
    6. '_car' → logprob: -4.9184489250183105
    7. '())' → logprob: -5.6684489250183105
    8. '():
' → logprob: -5.7934489250183105
    9. '(' → logprob: -6.0434489250183105
    10. ' ()' → logprob: -7.4184489250183105

Token 223: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16177058219909668
    2. ' if' → logprob: -1.9117705821990967
    3. 'if' → logprob: -6.536770820617676
    4. '   ' → logprob: -9.661770820617676
    5. '	if' → logprob: -10.911770820617676
    6. '<|end|>' → logprob: -12.161770820617676
    7. ' ' → logprob: -12.911770820617676
    8. '```' → logprob: -13.036770820617676
    9. '()' → logprob: -14.161770820617676
    10. 'If' → logprob: -14.536770820617676

Token 224: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3992464244365692
    2. 'if' (adapté à ' if') → logprob: -1.1492464542388916
    3. '       ' → logprob: -4.3992462158203125
    4. '	if' → logprob: -12.024246215820312
    5. '   ' → logprob: -12.149246215820312
    6. ' ' → logprob: -14.274246215820312
    7. 'If' → logprob: -14.774246215820312
    8. '```' → logprob: -15.274246215820312
    9. '1' → logprob: -18.399246215820312
    10. '  ' → logprob: -19.149246215820312

Token 225: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.3132794201374054
    2. 'self' → logprob: -1.313279390335083
    3. ' ' → logprob: -11.438279151916504
    4. '	self' → logprob: -12.438279151916504
    5. '0' → logprob: -13.438279151916504
    6. ' ' → logprob: -14.438279151916504
    7. '   ' → logprob: -15.188279151916504
    8. '>' → logprob: -15.688279151916504
    9. '(self' → logprob: -16.43828010559082
    10. '_self' → logprob: -16.68828010559082

Token 226: '.car' (ID: 49278)
  Prédit: '.car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.car' → logprob: -0.0006810996565036476
    2. 'car' → logprob: -7.625680923461914
    3. '.can' → logprob: -9.500680923461914
    4. '>' → logprob: -10.125680923461914
    5. '.c' → logprob: -10.125680923461914
    6. '.' → logprob: -10.875680923461914
    7. ' >' → logprob: -12.250680923461914
    8. ' carrots' → logprob: -12.500680923461914
    9. '	car' → logprob: -12.625680923461914
    10. ' .' → logprob: -13.125680923461914

Token 227: 'rots' (ID: 175556)
  Prédit: 'rots'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rots' → logprob: -1.0564331205387134e-05
    2. 'otts' → logprob: -12.62501049041748
    3. 'ots' → logprob: -12.87501049041748
    4. 'orts' → logprob: -13.37501049041748
    5. 'ro' → logprob: -13.50001049041748
    6. 'rot' → logprob: -13.87501049041748
    7. 'r' → logprob: -15.50001049041748
    8. '_ro' → logprob: -15.62501049041748
    9. 'lots' → logprob: -16.250011444091797
    10. 'tts' → logprob: -16.625011444091797

Token 228: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.07890278846025467
    2. '>' → logprob: -2.5789027214050293
    3. ' ==' → logprob: -12.078903198242188
    4. ' <=' → logprob: -12.453903198242188
    5. ' ' → logprob: -13.328903198242188
    6. '==' → logprob: -13.578903198242188
    7. ' ' → logprob: -15.078903198242188
    8. ')' → logprob: -16.328903198242188
    9. '<=' → logprob: -16.328903198242188
    10. '()>' → logprob: -16.578903198242188

Token 229: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07889000326395035
    2. ' ' → logprob: -2.578890085220337
    3. '=' → logprob: -16.453889846801758
    4. '>' → logprob: -16.703889846801758
    5. '<|end|>' → logprob: -17.078889846801758
    6. '   ' → logprob: -17.828889846801758
    7. '```' → logprob: -17.953889846801758
    8. ' ' → logprob: -17.953889846801758
    9. '۰' → logprob: -18.328889846801758
    10. '  ' → logprob: -18.703889846801758

Token 230: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006266565760597587
    2. ' ' → logprob: -7.375626564025879
    3. '۰' → logprob: -17.500627517700195
    4. '=' → logprob: -17.500627517700195
    5. '   ' → logprob: -17.750627517700195
    6. '```' → logprob: -18.000627517700195
    7. '<|end|>' → logprob: -18.750627517700195
    8. '>' → logprob: -18.750627517700195
    9. ' ' → logprob: -18.813127517700195
    10. '  ' → logprob: -18.938127517700195

Token 231: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.523245632648468
    2. ':
' → logprob: -0.898245632648468
    3. '           ' → logprob: -9.648245811462402
    4. '       ' → logprob: -10.648245811462402
    5. '):
' → logprob: -11.023245811462402
    6. ':
' → logprob: -12.523245811462402
    7. '():
' → logprob: -12.648245811462402
    8. ',' → logprob: -12.773245811462402
    9. ' :
' → logprob: -13.023245811462402
    10. '):' → logprob: -13.523245811462402

Token 232: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -7.076218025758862e-05
    2. ' self' → logprob: -10.625070571899414
    3. '       ' → logprob: -10.875070571899414
    4. '	       ' → logprob: -11.875070571899414
    5. ',' → logprob: -12.000070571899414
    6. 'self' → logprob: -12.375070571899414
    7. '<|end|>' → logprob: -12.875070571899414
    8. '          ' → logprob: -13.125070571899414
    9. ' ' → logprob: -14.125070571899414
    10. '   ' → logprob: -14.250070571899414

Token 233: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.5786972045898438
    2. 'self' (adapté à ' self') → logprob: -0.8286972045898438
    3. '           ' → logprob: -5.953697204589844
    4. '       ' → logprob: -9.578697204589844
    5. '	self' → logprob: -10.203697204589844
    6. '               ' → logprob: -10.453697204589844
    7. ' ' → logprob: -11.953697204589844
    8. '   ' → logprob: -11.953697204589844
    9. '```' → logprob: -13.078697204589844
    10. ' ' → logprob: -13.203697204589844

Token 234: '.car' (ID: 49278)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.6790294051170349
    2. ' -=' → logprob: -1.1790294647216797
    3. '.car' → logprob: -1.8040294647216797
    4. '-=' → logprob: -5.17902946472168
    5. '_car' → logprob: -5.30402946472168
    6. '-' → logprob: -5.42902946472168
    7. '           ' → logprob: -6.17902946472168
    8. '.c' → logprob: -7.42902946472168
    9. '	car' → logprob: -7.42902946472168
    10. ' car' → logprob: -7.55402946472168

Token 235: 'rots' (ID: 175556)
  Prédit: 'rots'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rots' → logprob: -1.688212614681106e-05
    2. 'ots' → logprob: -12.125017166137695
    3. 'otts' → logprob: -12.125017166137695
    4. 'orts' → logprob: -12.500017166137695
    5. 'ro' → logprob: -14.250017166137695
    6. 'rot' → logprob: -14.250017166137695
    7. 'rats' → logprob: -15.375017166137695
    8. '.ro' → logprob: -16.125017166137695
    9. 's' → logprob: -16.375017166137695
    10. 'ros' → logprob: -16.500017166137695

Token 236: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.10034285485744476
    2. '-=' → logprob: -2.3503427505493164
    3. '-' → logprob: -8.975342750549316
    4. '           ' → logprob: -11.725342750549316
    5. ' -' → logprob: -13.600342750549316
    6. '   ' → logprob: -16.100343704223633
    7. '            ' → logprob: -16.225343704223633
    8. '=' → logprob: -16.350343704223633
    9. ' ' → logprob: -17.100343704223633
    10. ' ' → logprob: -17.350343704223633

Token 237: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004879915213678032
    2. ' ' → logprob: -7.625487804412842
    3. '   ' → logprob: -17.50048828125
    4. '```' → logprob: -17.75048828125
    5. '<|end|>' → logprob: -19.50048828125
    6. '
' → logprob: -19.62548828125
    7. ' ' → logprob: -19.75048828125
    8. '       ' → logprob: -19.75048828125
    9. '１' → logprob: -20.12548828125
    10. '0' → logprob: -20.25048828125

Token 238: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.0
    3. '```' → logprob: -19.5
    4. '   ' → logprob: -21.0
    5. '<|end|>' → logprob: -22.125
    6. '１' → logprob: -22.125
    7. '۱' → logprob: -22.5
    8. '
' → logprob: -22.75
    9. '0' → logprob: -23.125
    10. '`' → logprob: -23.375

Token 239: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0021823805291205645
    2. '<|end|>' → logprob: -6.502182483673096
    3. ' else' → logprob: -8.002182006835938
    4. 'else' → logprob: -8.252182006835938
    5. '	' → logprob: -10.252182006835938
    6. '
' → logprob: -10.377182006835938
    7. '<|end|>' → logprob: -12.127182006835938
    8. '   ' → logprob: -12.252182006835938
    9. '	else' → logprob: -13.127182006835938
    10. '```' → logprob: -14.002182006835938

Token 240: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002374819479882717
    2. ' else' → logprob: -6.627374649047852
    3. 'else' → logprob: -6.877374649047852
    4. '<|end|>' → logprob: -11.127374649047852
    5. '	else' → logprob: -13.877374649047852
    6. '	' → logprob: -14.627374649047852
    7. '   ' → logprob: -15.002374649047852
    8. '      ' → logprob: -15.377374649047852
    9. '           ' → logprob: -15.752374649047852
    10. '```' → logprob: -15.752374649047852

Token 241: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7319265007972717
    2. 'else' (adapté à ' else') → logprob: -1.231926441192627
    3. ' else' → logprob: -1.481926441192627
    4. '   ' → logprob: -9.606926918029785
    5. '	else' → logprob: -10.856926918029785
    6. '           ' → logprob: -14.606926918029785
    7. '	' → logprob: -14.731926918029785
    8. ' ' → logprob: -14.981926918029785
    9. '<|end|>' → logprob: -15.106926918029785
    10. '      ' → logprob: -15.856926918029785

Token 242: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6690273880958557
    2. ':
' → logprob: -1.294027328491211
    3. ':' → logprob: -1.544027328491211
    4. '          ' → logprob: -10.294027328491211
    5. '	raise' → logprob: -11.169027328491211
    6. ',' → logprob: -11.419027328491211
    7. ':
' → logprob: -11.544027328491211
    8. ' raise' → logprob: -11.919027328491211
    9. 'raise' → logprob: -11.919027328491211
    10. '   ' → logprob: -12.544027328491211

Token 243: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04747345298528671
    2. ' raise' → logprob: -3.547473430633545
    3. 'raise' → logprob: -4.047473430633545
    4. '   ' → logprob: -9.922473907470703
    5. '	raise' → logprob: -10.047473907470703
    6. 'Raise' → logprob: -12.922473907470703
    7. '       ' → logprob: -13.672473907470703
    8. '          ' → logprob: -13.797473907470703
    9. '_raise' → logprob: -14.047473907470703
    10. ' ' → logprob: -14.172473907470703

Token 244: ' raise' (ID: 9338)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raise' (adapté à ' raise') → logprob: -0.3138459622859955
    2. ' raise' → logprob: -1.3138459920883179
    3. 'Runtime' → logprob: -7.688846111297607
    4. '           ' → logprob: -9.31384563446045
    5. '   ' → logprob: -11.43884563446045
    6. ' Runtime' → logprob: -11.68884563446045
    7. '	raise' → logprob: -11.93884563446045
    8. 'Raise' → logprob: -12.43884563446045
    9. '    ' → logprob: -12.93884563446045
    10. '            ' → logprob: -13.43884563446045

Token 245: ' Runtime' (ID: 17606)
  Prédit: ' Runtime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Runtime' → logprob: -0.31327730417251587
    2. 'Runtime' → logprob: -1.313277244567871
    3. '(Runtime' → logprob: -11.688277244567871
    4. 'Value' → logprob: -12.938277244567871
    5. '	Runtime' → logprob: -13.313277244567871
    6. '_Runtime' → logprob: -13.688277244567871
    7. ' Value' → logprob: -14.063277244567871
    8. '_runtime' → logprob: -14.438277244567871
    9. '.Runtime' → logprob: -15.313277244567871
    10. 'Index' → logprob: -16.313278198242188

Token 246: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -1.9361264946837764e-07
    2. 'Warning' → logprob: -16.125
    3. 'rror' → logprob: -17.0
    4. 'error' → logprob: -18.25
    5. 'ERROR' → logprob: -18.5
    6. '	Error' → logprob: -19.625
    7. 'SError' → logprob: -19.875
    8. 'Runtime' → logprob: -20.0
    9. '   ' → logprob: -20.5
    10. '_Error' → logprob: -20.625

Token 247: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -4.246537173457909e-06
    2. '(' → logprob: -12.375003814697266
    3. '('' → logprob: -17.500003814697266
    4. '(
' → logprob: -17.750003814697266
    5. '("'' → logprob: -19.750003814697266
    6. ' ("' → logprob: -20.250003814697266
    7. '("_' → logprob: -21.250003814697266
    8. '("("' → logprob: -21.500003814697266
    9. '("")' → logprob: -21.625003814697266
    10. '"' → logprob: -22.000003814697266

Token 248: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.2390422224998474
    2. ' No' → logprob: -1.6140422821044922
    3. 'Out' → logprob: -5.489042282104492
    4. 'Storage' → logprob: -5.739042282104492
    5. ' Out' → logprob: -6.114042282104492
    6. '"No' → logprob: -6.739042282104492
    7. ' Storage' → logprob: -6.739042282104492
    8. 'Not' → logprob: -7.114042282104492
    9. ' Not' → logprob: -7.864042282104492
    10. '"' → logprob: -8.739042282104492

Token 249: ' carrots' (ID: 91266)
  Prédit: ' carrots'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' carrots' → logprob: -0.06406142562627792
    2. ' more' → logprob: -2.814061403274536
    3. 'car' → logprob: -7.314061641693115
    4. ' car' → logprob: -7.689061641693115
    5. ' stored' → logprob: -7.814061641693115
    6. '_car' → logprob: -8.314061164855957
    7. ' storage' → logprob: -8.814061164855957
    8. ' ' → logprob: -9.189061164855957
    9. 'Car' → logprob: -11.064061164855957
    10. 'more' → logprob: -11.189061164855957

Token 250: ' stored' (ID: 16240)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.2647782266139984
    2. ' left' → logprob: -2.1397781372070312
    3. ' available' → logprob: -2.5147781372070312
    4. '")' → logprob: -3.5147781372070312
    5. 'to' → logprob: -6.764778137207031
    6. ' stored' → logprob: -6.764778137207031
    7. ')' → logprob: -7.014778137207031
    8. 'left' → logprob: -7.639778137207031
    9. 'available' → logprob: -8.389778137207031
    10. ' ")' → logprob: -8.639778137207031

Token 251: '")


' (ID: 57903)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -5.32392441527918e-05
    2. ')' → logprob: -10.125053405761719
    3. ')")' → logprob: -11.625053405761719
    4. '")
' → logprob: -13.000053405761719
    5. '}")' → logprob: -14.250053405761719
    6. '.")' → logprob: -14.875053405761719
    7. ' ")' → logprob: -15.125053405761719
    8. '!")' → logprob: -15.375053405761719
    9. '"' → logprob: -15.625053405761719
    10. '")

' → logprob: -16.75005340576172

Token 252: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.00013595925702247769
    2. 'from' → logprob: -9.125136375427246
    3. ' class' → logprob: -11.000136375427246
    4. '```' → logprob: -12.125136375427246
    5. '
' → logprob: -13.250136375427246
    6. '<class' → logprob: -14.375136375427246
    7. 'import' → logprob: -14.500136375427246
    8. '<|end|>' → logprob: -14.625136375427246
    9. '"class' → logprob: -14.750136375427246
    10. '  
' → logprob: -15.125136375427246

Token 253: ' Course' (ID: 21311)
  Prédit: 'Rabbit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Rabbit' → logprob: -0.14671291410923004
    2. ' Rabbit' → logprob: -2.6467130184173584
    3. 'Race' → logprob: -3.3967130184173584
    4. 'Runner' → logprob: -5.771712779998779
    5. 'Car' → logprob: -5.896712779998779
    6. 'H' → logprob: -6.021712779998779
    7. 'Game' → logprob: -6.021712779998779
    8. ' Race' → logprob: -6.396712779998779
    9. 'Simulation' → logprob: -6.521712779998779
    10. 'Running' → logprob: -6.521712779998779

Token 254: 'Segment' (ID: 24880)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0018687831470742822
    2. ':
' → logprob: -7.751868724822998
    3. 'Runner' → logprob: -8.001869201660156
    4. 'Planner' → logprob: -8.001869201660156
    5. '(R' → logprob: -8.376869201660156
    6. 'Segment' → logprob: -9.001869201660156
    7. 'Step' → logprob: -9.626869201660156
    8. '(' → logprob: -9.751869201660156
    9. 'Part' → logprob: -10.251869201660156
    10. 'Position' → logprob: -10.626869201660156

Token 255: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07238709181547165
    2. '(' → logprob: -2.6973869800567627
    3. ':
' → logprob: -6.447387218475342
    4. '(Abstract' → logprob: -7.572387218475342
    5. '():' → logprob: -8.447386741638184
    6. '(R' → logprob: -10.197386741638184
    7. ':

' → logprob: -10.822386741638184
    8. '(object' → logprob: -10.822386741638184
    9. '):' → logprob: -11.197386741638184
    10. '<|end|>' → logprob: -11.697386741638184

Token 256: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01028506550937891
    2. ':' → logprob: -4.885284900665283
    3. 'def' → logprob: -6.135284900665283
    4. '(' → logprob: -8.510285377502441
    5. 'class' → logprob: -9.135285377502441
    6. ':
' → logprob: -9.635285377502441
    7. ' def' → logprob: -9.760285377502441
    8. '```' → logprob: -10.635285377502441
    9. ':def' → logprob: -11.760285377502441
    10. '(object' → logprob: -11.885285377502441

Token 257: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.008655112236738205
    2. ' def' → logprob: -4.883655071258545
    3. '   ' → logprob: -7.383655071258545
    4. 'class' → logprob: -8.008655548095703
    5. '__' → logprob: -9.758655548095703
    6. 'from' → logprob: -12.008655548095703
    7. '```' → logprob: -12.008655548095703
    8. '	def' → logprob: -12.133655548095703
    9. '@dat' → logprob: -12.133655548095703
    10. ':' → logprob: -12.133655548095703

Token 258: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.10581300407648087
    2. ' def' → logprob: -2.7308130264282227
    3. '__' → logprob: -3.6058130264282227
    4. 'def' → logprob: -4.855813026428223
    5. '```' → logprob: -8.480813026428223
    6. '_init' → logprob: -10.480813026428223
    7. 'init' → logprob: -10.855813026428223
    8. '_def' → logprob: -11.355813026428223
    9. '.__' → logprob: -11.480813026428223
    10. '	def' → logprob: -12.855813026428223

Token 259: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.0020869735162705183
    2. 'it' → logprob: -6.627087116241455
    3. 'class' → logprob: -7.252087116241455
    4. 'f' → logprob: -11.127086639404297
    5. 'def' → logprob: -11.377086639404297
    6. '```' → logprob: -12.002086639404297
    7. 'name' → logprob: -12.377086639404297
    8. 'int' → logprob: -12.377086639404297
    9. '__' → logprob: -13.252086639404297
    10. 'code' → logprob: -13.377086639404297

Token 260: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.47595110535621643
    2. '(self' → logprob: -0.975951075553894
    3. '__(
' → logprob: -6.975951194763184
    4. '(' → logprob: -7.725951194763184
    5. ' (' → logprob: -8.350951194763184
    6. 'self' → logprob: -8.725951194763184
    7. '__' → logprob: -10.100951194763184
    8. '_(' → logprob: -10.350951194763184
    9. '(
' → logprob: -12.225951194763184
    10. '   ' → logprob: -12.475951194763184

Token 261: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0007118358626030385
    2. ' self' → logprob: -7.250711917877197
    3. '   ' → logprob: -13.750711441040039
    4. ',' → logprob: -15.000711441040039
    5. '       ' → logprob: -15.625711441040039
    6. '0' → logprob: -16.00071144104004
    7. '	self' → logprob: -16.12571144104004
    8. '(self' → logprob: -16.62571144104004
    9. ' ' → logprob: -16.75071144104004
    10. '
' → logprob: -17.12571144104004

Token 262: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010804448975250125
    2. 'self' → logprob: -7.001080513000488
    3. ' ,' → logprob: -8.751080513000488
    4. ' self' → logprob: -12.251080513000488
    5. ',self' → logprob: -12.501080513000488
    6. '(self' → logprob: -14.126080513000488
    7. '_,' → logprob: -15.376080513000488
    8. ',length' → logprob: -15.501080513000488
    9. ',start' → logprob: -16.001079559326172
    10. '‍,' → logprob: -16.126079559326172

Token 263: ' start' (ID: 1604)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.2862597703933716
    2. ' length' → logprob: -2.536259651184082
    3. 'start' → logprob: -2.536259651184082
    4. 'distance' → logprob: -2.661259651184082
    5. 'segment' → logprob: -4.911259651184082
    6. ' start' → logprob: -4.911259651184082
    7. ' distance' → logprob: -6.161259651184082
    8. 'name' → logprob: -6.536259651184082
    9. 'self' → logprob: -7.661259651184082
    10. 'duration' → logprob: -7.661259651184082

Token 264: ':' (ID: 25)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.18489359319210052
    2. '_point' → logprob: -2.3098936080932617
    3. ':' → logprob: -3.3098936080932617
    4. '_position' → logprob: -4.184893608093262
    5. '_pos' → logprob: -4.434893608093262
    6. ',' → logprob: -5.434893608093262
    7. '_index' → logprob: -7.434893608093262
    8. '_x' → logprob: -8.059893608093262
    9. '_location' → logprob: -8.059893608093262
    10. '_distance' → logprob: -9.684893608093262

Token 265: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.050263747572898865
    2. 'Tuple' → logprob: -3.5502636432647705
    3. 'int' → logprob: -4.17526388168335
    4. ' float' → logprob: -5.42526388168335
    5. ' Tuple' → logprob: -7.80026388168335
    6. 'tuple' → logprob: -9.800263404846191
    7. ' int' → logprob: -10.300263404846191
    8. ')' → logprob: -10.925263404846191
    9. ' tuple' → logprob: -12.550263404846191
    10. '(float' → logprob: -13.050263404846191

Token 266: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.080963092041202e-06
    2. ' ,' → logprob: -12.625004768371582
    3. ',
' → logprob: -14.250004768371582
    4. ')' → logprob: -14.500004768371582
    5. ',end' → logprob: -14.625004768371582
    6. ',start' → logprob: -17.1250057220459
    7. '<|end|>' → logprob: -17.2500057220459
    8. '‌,' → logprob: -17.5000057220459
    9. ',

' → logprob: -17.6250057220459
    10. ',)' → logprob: -18.0000057220459

Token 267: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.1269894242286682
    2. ' end' → logprob: -2.1269893646240234
    3. 'length' → logprob: -10.251989364624023
    4. 'finish' → logprob: -11.626989364624023
    5. ' length' → logprob: -12.126989364624023
    6. 'stop' → logprob: -12.251989364624023
    7. '   ' → logprob: -13.501989364624023
    8. ' finish' → logprob: -13.501989364624023
    9. '	end' → logprob: -13.876989364624023
    10. 'distance' → logprob: -14.251989364624023

Token 268: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0007318547577597201
    2. '):' → logprob: -7.750731945037842
    3. ',' → logprob: -8.375731468200684
    4. ')' → logprob: -9.625731468200684
    5. '):
' → logprob: -13.000731468200684
    6. ' :' → logprob: -14.250731468200684
    7. '=float' → logprob: -15.000731468200684
    8. '=' → logprob: -15.250731468200684
    9. ',float' → logprob: -15.250731468200684
    10. ' ):' → logprob: -15.500731468200684

Token 269: ' float' (ID: 4428)
  Prédit: ' float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.1602613925933838
    2. 'float' → logprob: -1.9102613925933838
    3. ',float' → logprob: -10.660261154174805
    4. '=float' → logprob: -11.910261154174805
    5. ')' → logprob: -12.535261154174805
    6. '<float' → logprob: -13.785261154174805
    7. '	float' → logprob: -13.785261154174805
    8. '(float' → logprob: -13.910261154174805
    9. '_float' → logprob: -15.910261154174805
    10. '.float' → logprob: -15.910261154174805

Token 270: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2539598345756531
    2. '):' → logprob: -1.5039598941802979
    3. '):
' → logprob: -6.628959655761719
    4. ')' → logprob: -7.378959655761719
    5. ' ,' → logprob: -10.378959655761719
    6. ' ):' → logprob: -10.628959655761719
    7. ':' → logprob: -11.253959655761719
    8. '):
' → logprob: -12.003959655761719
    9. '   ' → logprob: -13.128959655761719
    10. ',
' → logprob: -13.628959655761719

Token 271: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005027625244110823
    2. 'self' → logprob: -5.380027770996094
    3. ' self' → logprob: -8.005027770996094
    4. '   ' → logprob: -10.630027770996094
    5. ',' → logprob: -11.005027770996094
    6. '<|end|>' → logprob: -11.505027770996094
    7. '	self' → logprob: -11.880027770996094
    8. '	' → logprob: -12.380027770996094
    9. ',self' → logprob: -13.255027770996094
    10. '.' → logprob: -13.255027770996094

Token 272: ' #' (ID: 1069)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.001228561857715249
    2. ' self' → logprob: -6.751228332519531
    3. '       ' → logprob: -9.751228332519531
    4. '	self' → logprob: -17.00122833251953
    5. '(self' → logprob: -18.37622833251953
    6. 'super' → logprob: -19.87622833251953
    7. '   ' → logprob: -20.00122833251953
    8. ' ' → logprob: -20.25122833251953
    9. '
' → logprob: -20.37622833251953
    10. '        ' → logprob: -21.12622833251953

Token 273: ' start' (ID: 1604)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.04860950633883476
    2. ' self' → logprob: -3.048609495162964
    3. '       ' → logprob: -11.173609733581543
    4. 'assert' → logprob: -12.298609733581543
    5. '   ' → logprob: -14.298609733581543
    6. '	self' → logprob: -14.423609733581543
    7. 'super' → logprob: -14.423609733581543
    8. 'The' → logprob: -14.548609733581543
    9. ' assert' → logprob: -14.548609733581543
    10. 'Self' → logprob: -15.298609733581543

Token 274: ' and' (ID: 326)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5303038358688354
    2. '=' → logprob: -0.9053038358688354
    3. '<|end|>' → logprob: -5.655303955078125
    4. ',' → logprob: -6.530303955078125
    5. '=float' → logprob: -7.530303955078125
    6. '=start' → logprob: -7.655303955078125
    7. ':' → logprob: -7.780303955078125
    8. ' and' → logprob: -7.905303955078125
    9. 'and' → logprob: -9.530303955078125
    10. ')' → logprob: -10.030303955078125

Token 275: ' end' (ID: 1268)
  Prédit: ' end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' end' → logprob: -0.251930296421051
    2. 'end' → logprob: -1.5019302368164062
    3. 'stop' → logprob: -15.001930236816406
    4. '	end' → logprob: -15.626930236816406
    5. '_end' → logprob: -16.001930236816406
    6. ' stop' → logprob: -16.126930236816406
    7. '=end' → logprob: -16.126930236816406
    8. ',end' → logprob: -16.626930236816406
    9. '(end' → logprob: -16.626930236816406
    10. 'float' → logprob: -17.001930236816406

Token 276: ' positions' (ID: 15897)
  Prédit: ' are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.02282084710896015
    2. ':' → logprob: -4.647820949554443
    3. ' positions' → logprob: -5.147820949554443
    4. ' represent' → logprob: -5.647820949554443
    5. ' coordinates' → logprob: -7.022820949554443
    6. ' points' → logprob: -7.522820949554443
    7. 'are' → logprob: -7.522820949554443
    8. '<|end|>' → logprob: -7.522820949554443
    9. 'positions' → logprob: -8.147820472717285
    10. ' in' → logprob: -8.897820472717285

Token 277: ' in' (ID: 306)
  Prédit: ' are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.31425976753234863
    2. ' =' → logprob: -2.5642597675323486
    3. ' self' → logprob: -2.6892597675323486
    4. '<|end|>' → logprob: -3.1892597675323486
    5. '       ' → logprob: -3.5642597675323486
    6. 'self' → logprob: -3.6892597675323486
    7. ',' → logprob: -4.3142595291137695
    8. '=' → logprob: -5.1892595291137695
    9. ':' → logprob: -5.3142595291137695
    10. ' in' → logprob: -5.8142595291137695

Token 278: ' meters' (ID: 29514)
  Prédit: 'meters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'meters' → logprob: -0.08030366152524948
    2. 'float' → logprob: -3.33030366897583
    3. ' meters' → logprob: -3.33030366897583
    4. 'the' → logprob: -6.83030366897583
    5. 'kil' → logprob: -6.83030366897583
    6. ' float' → logprob: -7.20530366897583
    7. 'flo' → logprob: -7.20530366897583
    8. ' kilometers' → logprob: -7.70530366897583
    9. 'units' → logprob: -7.83030366897583
    10. 'met' → logprob: -8.080303192138672

Token 279: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1617003232240677
    2. '
' → logprob: -2.7867002487182617
    3. 'self' → logprob: -2.9117002487182617
    4. ' self' → logprob: -3.7867002487182617
    5. '<|end|>' → logprob: -4.786700248718262
    6. ',' → logprob: -6.286700248718262
    7. '        
' → logprob: -9.286700248718262
    8. '(self' → logprob: -9.536700248718262
    9. ',self' → logprob: -9.911700248718262
    10. '<|end|>' → logprob: -9.911700248718262

Token 280: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012001411989331245
    2. 'self' → logprob: -4.5120015144348145
    3. ' self' → logprob: -7.0120015144348145
    4. ',' → logprob: -10.262001037597656
    5. '<|end|>' → logprob: -11.512001037597656
    6. '   ' → logprob: -13.137001037597656
    7. ',self' → logprob: -13.637001037597656
    8. '	self' → logprob: -14.137001037597656
    9. '(self' → logprob: -14.137001037597656
    10. '      ' → logprob: -14.512001037597656

Token 281: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.050948478281497955
    2. ' self' → logprob: -3.05094838142395
    3. '       ' → logprob: -6.050948619842529
    4. '	self' → logprob: -13.425948143005371
    5. ' ' → logprob: -14.425948143005371
    6. '   ' → logprob: -15.300948143005371
    7. ' ' → logprob: -15.550948143005371
    8. '(self' → logprob: -16.675949096679688
    9. '        ' → logprob: -17.050949096679688
    10. '      ' → logprob: -17.425949096679688

Token 282: '.start' (ID: 10181)
  Prédit: '.start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.start' → logprob: -0.04908847436308861
    2. '.' → logprob: -3.049088478088379
    3. 'start' → logprob: -7.674088478088379
    4. '_start' → logprob: -11.174088478088379
    5. '=start' → logprob: -11.674088478088379
    6. ' start' → logprob: -12.424088478088379
    7. ' .' → logprob: -13.174088478088379
    8. '=' → logprob: -13.549088478088379
    9. '.end' → logprob: -13.549088478088379
    10. '.Start' → logprob: -14.299088478088379

Token 283: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9094255566596985
    2. '=' → logprob: -1.1594254970550537
    3. '<|end|>' → logprob: -1.6594254970550537
    4. ' =' → logprob: -2.5344254970550537
    5. ' ,' → logprob: -4.784425735473633
    6. ':' → logprob: -5.534425735473633
    7. '<|end|>' → logprob: -7.409425735473633
    8. ')' → logprob: -7.409425735473633
    9. ' ' → logprob: -8.159425735473633
    10. ' and' → logprob: -10.159425735473633

Token 284: ' start' (ID: 1604)
  Prédit: ' start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' start' → logprob: -0.12692853808403015
    2. 'start' → logprob: -2.1269285678863525
    3. 'float' → logprob: -16.126928329467773
    4. ' float' → logprob: -16.376928329467773
    5. ' ' → logprob: -16.376928329467773
    6. '	start' → logprob: -16.501928329467773
    7. ' end' → logprob: -17.126928329467773
    8. 'end' → logprob: -17.126928329467773
    9. '(start' → logprob: -17.751928329467773
    10. ' ' → logprob: -18.001928329467773

Token 285: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019149174913764
    2. '
' → logprob: -4.394149303436279
    3. '<|end|>' → logprob: -5.394149303436279
    4. 'self' → logprob: -6.269149303436279
    5. ',' → logprob: -10.144148826599121
    6. '   ' → logprob: -10.394148826599121
    7. '<|end|>' → logprob: -10.644148826599121
    8. '	' → logprob: -10.894148826599121
    9. ' ' → logprob: -11.019148826599121
    10. ' self' → logprob: -11.144148826599121

Token 286: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00038896629121154547
    2. 'self' → logprob: -8.000389099121094
    3. '<|end|>' → logprob: -11.250389099121094
    4. '
' → logprob: -11.625389099121094
    5. ',' → logprob: -11.625389099121094
    6. '   ' → logprob: -11.875389099121094
    7. ' self' → logprob: -12.125389099121094
    8. '	' → logprob: -12.250389099121094
    9. ' ' → logprob: -13.000389099121094
    10. '      ' → logprob: -14.750389099121094

Token 287: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.01130080409348011
    2. ' self' → logprob: -4.511301040649414
    3. '       ' → logprob: -8.386301040649414
    4. 'end' → logprob: -10.636301040649414
    5. ' end' → logprob: -14.886301040649414
    6. ' ' → logprob: -15.386301040649414
    7. '	self' → logprob: -15.886301040649414
    8. '   ' → logprob: -16.011301040649414
    9. ' ' → logprob: -16.261301040649414
    10. '
' → logprob: -17.261301040649414

Token 288: '.end' (ID: 10289)
  Prédit: '.end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.end' → logprob: -0.7759756445884705
    2. '.' → logprob: -1.0259757041931152
    3. '=' → logprob: -2.4009757041931152
    4. ' =' → logprob: -3.1509757041931152
    5. 'end' → logprob: -3.4009757041931152
    6. '=end' → logprob: -4.400975704193115
    7. '_end' → logprob: -7.150975704193115
    8. ' .' → logprob: -7.150975704193115
    9. ',' → logprob: -8.650975227355957
    10. ' end' → logprob: -8.775975227355957

Token 289: ' =' (ID: 314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 290: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.3868713080883026
    2. ' end' → logprob: -1.136871337890625
    3. '	end' → logprob: -16.136871337890625
    4. '(end' → logprob: -16.761871337890625
    5. '=end' → logprob: -17.011871337890625
    6. 'float' → logprob: -17.386871337890625
    7. '_end' → logprob: -17.511871337890625
    8. '[end' → logprob: -17.636871337890625
    9. ''end' → logprob: -18.136871337890625
    10. ' ' → logprob: -18.386871337890625

Token 291: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 292: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 293: ' self' (ID: 1051)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 294: '.length' (ID: 3116)
  Prédit: '_type'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_type' → logprob: -0.3697284162044525
    2. '_speed' → logprob: -1.994728446006775
    3. '_is' → logprob: -3.4947283267974854
    4. '_distance' → logprob: -3.7447283267974854
    5. 'type' → logprob: -3.8697283267974854
    6. '_' → logprob: -3.8697283267974854
    7. '_length' → logprob: -4.6197285652160645
    8. ' _' → logprob: -4.6197285652160645
    9. ' type' → logprob: -4.8697285652160645
    10. ' is' → logprob: -4.8697285652160645

Token 295: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868752717971802
    2. '=' → logprob: -1.1368752717971802
    3. '<|end|>' → logprob: -13.01187515258789
    4. ' ' → logprob: -13.63687515258789
    5. ')' → logprob: -14.88687515258789
    6. ':' → logprob: -16.51187515258789
    7. '_' → logprob: -16.63687515258789
    8. '=int' → logprob: -16.88687515258789
    9. '	' → logprob: -16.88687515258789
    10. ' =
' → logprob: -17.01187515258789

Token 296: ' end' (ID: 1268)
  Prédit: ' end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' end' → logprob: -0.15662001073360443
    2. ' self' → logprob: -2.6566200256347656
    3. 'end' → logprob: -2.9066200256347656
    4. 'self' → logprob: -3.9066200256347656
    5. '(end' → logprob: -11.031620025634766
    6. ' (' → logprob: -14.781620025634766
    7. ' ' → logprob: -15.281620025634766
    8. ' ' → logprob: -15.531620025634766
    9. '	end' → logprob: -16.031620025634766
    10. '=end' → logprob: -16.156620025634766

Token 297: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.011048528365790844
    2. '-' → logprob: -4.511048316955566
    3. ' ' → logprob: -15.136048316955566
    4. ' –' → logprob: -15.636048316955566
    5. ' ' → logprob: -16.136049270629883
    6. '-start' → logprob: -16.636049270629883
    7. '-self' → logprob: -17.511049270629883
    8. '–' → logprob: -17.886049270629883
    9. '```' → logprob: -18.136049270629883
    10. ' −' → logprob: -18.261049270629883

Token 298: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.029750484973192215
    2. ' start' → logprob: -3.5297505855560303
    3. 'self' → logprob: -17.65475082397461
    4. '	start' → logprob: -18.90475082397461
    5. ' ' → logprob: -19.90475082397461
    6. '[start' → logprob: -20.15475082397461
    7. ' ' → logprob: -20.77975082397461
    8. '(start' → logprob: -21.02975082397461
    9. ' self' → logprob: -21.15475082397461
    10. '=start' → logprob: -21.27975082397461

Token 299: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 300: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.005817521829158068
    2. '<|end|>' → logprob: -5.255817413330078
    3. '
' → logprob: -7.630817413330078
    4. ' class' → logprob: -9.755817413330078
    5. 'from' → logprob: -11.255817413330078
    6. '<|end|>' → logprob: -11.380817413330078
    7. '```' → logprob: -12.630817413330078
    8. '   ' → logprob: -12.755817413330078
    9. '<class' → logprob: -13.380817413330078
    10. '

' → logprob: -13.380817413330078

Token 301: ' Running' (ID: 48451)
  Prédit: 'Race'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Race' → logprob: -0.5192450284957886
    2. 'Rabbit' → logprob: -1.6442450284957886
    3. 'Course' → logprob: -1.7692450284957886
    4. 'Running' → logprob: -4.644245147705078
    5. 'Track' → logprob: -4.894245147705078
    6. 'Car' → logprob: -5.394245147705078
    7. 'Lap' → logprob: -5.519245147705078
    8. 'Runner' → logprob: -6.019245147705078
    9. ' Race' → logprob: -6.144245147705078
    10. 'Run' → logprob: -6.394245147705078

Token 302: 'Course' (ID: 20560)
  Prédit: 'Strategy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Strategy' → logprob: -0.994808554649353
    2. 'Model' → logprob: -1.619808554649353
    3. 'Simulation' → logprob: -2.4948086738586426
    4. 'Simulator' → logprob: -2.6198086738586426
    5. 'Session' → logprob: -2.8698086738586426
    6. 'Course' → logprob: -2.9948086738586426
    7. 'State' → logprob: -3.6198086738586426
    8. 'Speed' → logprob: -3.9948086738586426
    9. 'Controller' → logprob: -4.244808673858643
    10. 'Race' → logprob: -4.369808673858643

Token 303: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005338519695214927
    2. ':
' → logprob: -8.375534057617188
    3. ' :' → logprob: -8.500534057617188
    4. '(' → logprob: -9.875534057617188
    5. '(R' → logprob: -10.500534057617188
    6. '(object' → logprob: -11.875534057617188
    7. '(List' → logprob: -12.250534057617188
    8. '):' → logprob: -12.375534057617188
    9. '():' → logprob: -13.500534057617188
    10. '(Abstract' → logprob: -13.625534057617188

Token 304: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04744673892855644
    2. 'def' → logprob: -3.5474467277526855
    3. ' def' → logprob: -4.0474467277526855
    4. ':' → logprob: -10.297447204589844
    5. ':
' → logprob: -10.297447204589844
    6. ':def' → logprob: -13.297447204589844
    7. '(' → logprob: -13.922447204589844
    8. '	def' → logprob: -14.047447204589844
    9. '):
' → logprob: -14.172447204589844
    10. '```' → logprob: -14.672447204589844

Token 305: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.04863709583878517
    2. ' def' → logprob: -3.0486371517181396
    3. '   ' → logprob: -9.923637390136719
    4. '	def' → logprob: -15.173637390136719
    5. 'class' → logprob: -15.798637390136719
    6. 'from' → logprob: -16.42363739013672
    7. '```' → logprob: -16.79863739013672
    8. ':def' → logprob: -17.04863739013672
    9. 'import' → logprob: -17.42363739013672
    10. ' ' → logprob: -17.54863739013672

Token 306: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.4860496520996094
    2. '__' → logprob: -1.2360496520996094
    3. 'init' → logprob: -2.4860496520996094
    4. 'def' → logprob: -4.861049652099609
    5. ' def' → logprob: -5.861049652099609
    6. '```' → logprob: -7.986049652099609
    7. '_init' → logprob: -9.23604965209961
    8. ' init' → logprob: -9.36104965209961
    9. 'class' → logprob: -10.36104965209961
    10. '___' → logprob: -11.98604965209961

Token 307: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.9361264946837764e-07
    2. '_init' → logprob: -16.625
    3. 'ini' → logprob: -18.375
    4. '```' → logprob: -18.875
    5. 'in' → logprob: -19.0
    6. '(init' → logprob: -19.25
    7. 'int' → logprob: -19.375
    8. 'class' → logprob: -19.75
    9. ' init' → logprob: -20.125
    10. '_' → logprob: -20.125

Token 308: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.006164593622088432
    2. '(self' → logprob: -5.13116455078125
    3. '_(' → logprob: -9.00616455078125
    4. '__(
' → logprob: -9.88116455078125
    5. 'self' → logprob: -10.50616455078125
    6. '__' → logprob: -11.00616455078125
    7. ' (' → logprob: -11.25616455078125
    8. '(' → logprob: -12.38116455078125
    9. ',' → logprob: -14.38116455078125
    10. '```' → logprob: -16.50616455078125

Token 309: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -3.47626737493556e-05
    2. ' self' → logprob: -10.87503433227539
    3. '       ' → logprob: -11.12503433227539
    4. '
' → logprob: -14.75003433227539
    5. '   ' → logprob: -15.50003433227539
    6. ')' → logprob: -15.50003433227539
    7. ',' → logprob: -16.25003433227539
    8. '0' → logprob: -16.87503433227539
    9. '):
' → logprob: -17.12503433227539
    10. '(self' → logprob: -17.62503433227539

Token 310: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03418339043855667
    2. 'self' → logprob: -3.4091835021972656
    3. '__,' → logprob: -8.409183502197266
    4. ' ,' → logprob: -8.659183502197266
    5. ',self' → logprob: -9.784183502197266
    6. '):
' → logprob: -10.909183502197266
    7. '(self' → logprob: -11.034183502197266
    8. ' self' → logprob: -11.409183502197266
    9. '   ' → logprob: -11.659183502197266
    10. '__' → logprob: -11.659183502197266

Token 311: ' length' (ID: 5517)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.13409215211868286
    2. 'self' → logprob: -2.134092092514038
    3. ' segments' → logprob: -5.259092330932617
    4. ' self' → logprob: -6.384092330932617
    5. 'length' → logprob: -9.259092330932617
    6. '   ' → logprob: -9.759092330932617
    7. '       ' → logprob: -11.134092330932617
    8. ')' → logprob: -11.134092330932617
    9. 'segment' → logprob: -11.259092330932617
    10. 'course' → logprob: -11.509092330932617

Token 312: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0033524977043271065
    2. '):' → logprob: -6.378352642059326
    3. '=' → logprob: -6.753352642059326
    4. ')' → logprob: -8.753352165222168
    5. ',' → logprob: -8.753352165222168
    6. ' :' → logprob: -9.253352165222168
    7. ':int' → logprob: -10.253352165222168
    8. ' ):' → logprob: -10.753352165222168
    9. ' =' → logprob: -12.628352165222168
    10. '):
' → logprob: -12.878352165222168

Token 313: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.1602432131767273
    2. ' float' → logprob: -1.910243272781372
    3. 'int' → logprob: -11.535243034362793
    4. ',float' → logprob: -12.785243034362793
    5. '100' → logprob: -13.160243034362793
    6. '=float' → logprob: -13.410243034362793
    7. ' int' → logprob: -13.660243034362793
    8. '(float' → logprob: -14.160243034362793
    9. ')' → logprob: -14.410243034362793
    10. '	float' → logprob: -15.910243034362793

Token 314: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05954721197485924
    2. '):' → logprob: -3.434547185897827
    3. '):
' → logprob: -3.684547185897827
    4. '):
' → logprob: -8.809547424316406
    5. ' ,' → logprob: -8.934547424316406
    6. ' ):' → logprob: -9.809547424316406
    7. '   ' → logprob: -9.934547424316406
    8. '       ' → logprob: -10.559547424316406
    9. ')' → logprob: -10.684547424316406
    10. ' ):
' → logprob: -10.934547424316406

Token 315: ' carrot' (ID: 121234)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.016380608081817627
    2. ' segments' → logprob: -4.266380786895752
    3. '   ' → logprob: -6.766380786895752
    4. 'course' → logprob: -7.391380786895752
    5. '       ' → logprob: -8.766380310058594
    6. ' course' → logprob: -9.766380310058594
    7. '           ' → logprob: -10.266380310058594
    8. ' ' → logprob: -10.641380310058594
    9. 'car' → logprob: -11.016380310058594
    10. 'speed' → logprob: -11.016380310058594

Token 316: '_positions' (ID: 93193)
  Prédit: '_positions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_positions' → logprob: -0.13838760554790497
    2. '_segments' → logprob: -2.388387680053711
    3. '_points' → logprob: -4.013387680053711
    4. '_storage' → logprob: -5.138387680053711
    5. 's' → logprob: -5.138387680053711
    6. '_locations' → logprob: -6.013387680053711
    7. '_inter' → logprob: -6.138387680053711
    8. '_sp' → logprob: -7.013387680053711
    9. '_sources' → logprob: -7.513387680053711
    10. '_st' → logprob: -7.888387680053711

Token 317: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0683535037969705e-05
    2. '):' → logprob: -11.75001049041748
    3. ' :' → logprob: -14.00001049041748
    4. '=' → logprob: -14.00001049041748
    5. ')' → logprob: -14.50001049041748
    6. ',' → logprob: -15.37501049041748
    7. ' ):' → logprob: -16.375011444091797
    8. '):
' → logprob: -16.750011444091797
    9. '_:' → logprob: -16.875011444091797
    10. '```' → logprob: -17.125011444091797

Token 318: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.12697282433509827
    2. ' List' → logprob: -2.1269729137420654
    3. '[List' → logprob: -10.751973152160645
    4. 'list' → logprob: -11.376973152160645
    5. ' ' → logprob: -12.376973152160645
    6. '[]' → logprob: -13.001973152160645
    7. '	List' → logprob: -13.376973152160645
    8. ' list' → logprob: -13.751973152160645
    9. '   ' → logprob: -14.001973152160645
    10. '  ' → logprob: -14.626973152160645

Token 319: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0007230373448692262
    2. '[int' → logprob: -7.250722885131836
    3. 'float' → logprob: -11.750722885131836
    4. '```' → logprob: -13.375722885131836
    5. '<float' → logprob: -13.500722885131836
    6. '   ' → logprob: -14.625722885131836
    7. ',float' → logprob: -14.625722885131836
    8. ' [' → logprob: -15.125722885131836
    9. '=float' → logprob: -15.375722885131836
    10. '):
' → logprob: -15.500722885131836

Token 320: 'float' (ID: 7829)
  Prédit: 'float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -5.88418151892256e-05
    2. '[' → logprob: -10.250059127807617
    3. ' float' → logprob: -11.000059127807617
    4. 'flo' → logprob: -12.875059127807617
    5. '	float' → logprob: -13.125059127807617
    6. '<float' → logprob: -14.000059127807617
    7. ',float' → logprob: -14.500059127807617
    8. 'Float' → logprob: -15.625059127807617
    9. '=float' → logprob: -16.000059127807617
    10. '```' → logprob: -16.250059127807617

Token 321: ']):
' (ID: 51989)
  Prédit: ']):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']):' → logprob: -0.16652850806713104
    2. ']):
' → logprob: -2.2915284633636475
    3. '):' → logprob: -3.2915284633636475
    4. ']' → logprob: -4.666528701782227
    5. ',' → logprob: -5.791528701782227
    6. '):
' → logprob: -6.666528701782227
    7. '],' → logprob: -7.541528701782227
    8. ')' → logprob: -7.666528701782227
    9. ']:' → logprob: -8.666528701782227
    10. '])' → logprob: -9.541528701782227

Token 322: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00037848003557883203
    2. ':' → logprob: -8.750378608703613
    3. ',' → logprob: -9.250378608703613
    4. 'self' → logprob: -9.500378608703613
    5. ':
' → logprob: -11.000378608703613
    6. '):
' → logprob: -11.125378608703613
    7. ' self' → logprob: -12.000378608703613
    8. '   ' → logprob: -12.375378608703613
    9. '
' → logprob: -13.875378608703613
    10. ')' → logprob: -13.875378608703613

Token 323: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0003709701995830983
    2. '       ' → logprob: -8.000370979309082
    3. ' self' → logprob: -10.250370979309082
    4. '   ' → logprob: -16.125370025634766
    5. '	self' → logprob: -17.625370025634766
    6. 'super' → logprob: -17.625370025634766
    7. 'from' → logprob: -18.625370025634766
    8. '(self' → logprob: -19.250370025634766
    9. ' ' → logprob: -19.625370025634766
    10. '
' → logprob: -20.250370025634766

Token 324: '.length' (ID: 3116)
  Prédit: '.length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.length' → logprob: -0.0008706060471013188
    2. '.' → logprob: -7.125870704650879
    3. ' .' → logprob: -10.125870704650879
    4. 'length' → logprob: -10.750870704650879
    5. '.len' → logprob: -13.625870704650879
    6. '.LENGTH' → logprob: -14.250870704650879
    7. '	length' → logprob: -14.500870704650879
    8. ' length' → logprob: -14.625870704650879
    9. '_length' → logprob: -14.750870704650879
    10. '.Length' → logprob: -14.875870704650879

Token 325: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10022662580013275
    2. '=' → logprob: -2.350226640701294
    3. ',' → logprob: -11.475226402282715
    4. ' ' → logprob: -12.350226402282715
    5. '=self' → logprob: -13.475226402282715
    6. ' ,' → logprob: -13.600226402282715
    7. ':' → logprob: -14.100226402282715
    8. '       ' → logprob: -14.600226402282715
    9. '   ' → logprob: -14.725226402282715
    10. '        ' → logprob: -14.975226402282715

Token 326: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.2519305646419525
    2. ' length' → logprob: -1.501930594444275
    3. 'len' → logprob: -14.251930236816406
    4. '	length' → logprob: -15.501930236816406
    5. 'leng' → logprob: -15.626930236816406
    6. ' ' → logprob: -16.501930236816406
    7. '[length' → logprob: -16.626930236816406
    8. ' len' → logprob: -16.751930236816406
    9. 'car' → logprob: -16.876930236816406
    10. '(length' → logprob: -17.126930236816406

Token 327: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003523098537698388
    2. 'self' → logprob: -5.753522872924805
    3. '
' → logprob: -8.628522872924805
    4. ' self' → logprob: -9.253522872924805
    5. '<|end|>' → logprob: -10.128522872924805
    6. ',' → logprob: -10.878522872924805
    7. '        
' → logprob: -12.753522872924805
    8. '   ' → logprob: -13.253522872924805
    9. ',
' → logprob: -13.378522872924805
    10. '[self' → logprob: -14.128522872924805

Token 328: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08190612494945526
    2. 'self' → logprob: -2.5819060802459717
    3. ' self' → logprob: -5.831906318664551
    4. '   ' → logprob: -9.70690631866455
    5. ',' → logprob: -11.83190631866455
    6. ' ' → logprob: -12.08190631866455
    7. '<|end|>' → logprob: -13.83190631866455
    8. '
' → logprob: -14.08190631866455
    9. '      ' → logprob: -14.08190631866455
    10. '	self' → logprob: -14.20690631866455

Token 329: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.00014883324911352247
    2. 'car' → logprob: -9.50014877319336
    3. ' self' → logprob: -10.00014877319336
    4. '       ' → logprob: -10.50014877319336
    5. '   ' → logprob: -15.00014877319336
    6. 'sorted' → logprob: -15.37514877319336
    7. '	self' → logprob: -16.50014877319336
    8. '        
' → logprob: -16.87514877319336
    9. 'Car' → logprob: -17.00014877319336
    10. '[self' → logprob: -17.12514877319336

Token 330: '.car' (ID: 49278)
  Prédit: '.car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.car' → logprob: -0.000764479860663414
    2. '.' → logprob: -7.2507643699646
    3. ' .' → logprob: -10.750764846801758
    4. 'car' → logprob: -10.875764846801758
    5. '.carousel' → logprob: -12.125764846801758
    6. '.c' → logprob: -13.250764846801758
    7. '	car' → logprob: -13.625764846801758
    8. '.course' → logprob: -13.750764846801758
    9. '.Car' → logprob: -13.750764846801758
    10. '_car' → logprob: -14.000764846801758

Token 331: 'rot' (ID: 8150)
  Prédit: 'rot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rot' → logprob: -0.0164047721773386
    2. 'rots' → logprob: -4.141404628753662
    3. '_rot' → logprob: -8.64140510559082
    4. '_' → logprob: -9.51640510559082
    5. 'ro' → logprob: -10.64140510559082
    6. 'rott' → logprob: -10.89140510559082
    7. 'r' → logprob: -11.51640510559082
    8. '   ' → logprob: -12.01640510559082
    9. 'ot' → logprob: -12.14140510559082
    10. 'рот' → logprob: -12.26640510559082

Token 332: '_positions' (ID: 93193)
  Prédit: '_positions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_positions' → logprob: -2.7252845029579476e-05
    2. 's' → logprob: -10.750027656555176
    3. 'positions' → logprob: -12.625027656555176
    4. '_locations' → logprob: -13.750027656555176
    5. 'Positions' → logprob: -14.625027656555176
    6. '_' → logprob: -15.250027656555176
    7. '_points' → logprob: -15.625027656555176
    8. '```' → logprob: -16.25002670288086
    9. '_pos' → logprob: -16.37502670288086
    10. '_s' → logprob: -17.12502670288086

Token 333: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868747651576996
    2. '=' → logprob: -1.136874794960022
    3. ':' → logprob: -12.88687515258789
    4. '=[]' → logprob: -14.76187515258789
    5. ' ' → logprob: -15.01187515258789
    6. '=set' → logprob: -15.76187515258789
    7. ',' → logprob: -16.01187515258789
    8. ')' → logprob: -16.51187515258789
    9. '=list' → logprob: -16.88687515258789
    10. '.' → logprob: -17.63687515258789

Token 334: ' carrot' (ID: 121234)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.5378995537757874
    2. ' carrot' → logprob: -1.1628994941711426
    3. 'sorted' → logprob: -2.6628994941711426
    4. ' sorted' → logprob: -3.4128994941711426
    5. ' car' → logprob: -8.5378999710083
    6. ' set' → logprob: -9.0378999710083
    7. 'set' → logprob: -9.2878999710083
    8. ' carot' → logprob: -9.5378999710083
    9. '[' → logprob: -9.6628999710083
    10. ' carrots' → logprob: -9.7878999710083

Token 335: '_positions' (ID: 93193)
  Prédit: '_positions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_positions' → logprob: -3.619311974034645e-05
    2. 'positions' → logprob: -10.250036239624023
    3. 'Positions' → logprob: -15.000036239624023
    4. 's' → logprob: -15.750036239624023
    5. '_' → logprob: -16.375036239624023
    6. ' positions' → logprob: -17.375036239624023
    7. '   ' → logprob: -17.750036239624023
    8. '_
' → logprob: -18.125036239624023
    9. ' _' → logprob: -18.375036239624023
    10. '
' → logprob: -18.500036239624023

Token 336: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 337: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 338: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.019432269036769867
    2. 'def' → logprob: -4.144432067871094
    3. '
' → logprob: -6.644432067871094
    4. '<|end|>' → logprob: -6.769432067871094
    5. '       ' → logprob: -7.769432067871094
    6. ' self' → logprob: -8.269432067871094
    7. '   ' → logprob: -9.519432067871094
    8. 'car' → logprob: -10.269432067871094
    9. 'assert' → logprob: -10.269432067871094
    10. '#' → logprob: -10.269432067871094

Token 339: '.se' (ID: 5877)
  Prédit: '.car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.car' → logprob: -0.01827472448348999
    2. '.se' → logprob: -4.643274784088135
    3. '.sorted' → logprob: -6.143274784088135
    4. '.' → logprob: -6.643274784088135
    5. ' .' → logprob: -6.768274784088135
    6. '._' → logprob: -7.268274784088135
    7. '_segments' → logprob: -7.393274784088135
    8. '_car' → logprob: -7.768274784088135
    9. '.sort' → logprob: -7.893274784088135
    10. '.segment' → logprob: -8.018274307250977

Token 340: 'gments' (ID: 59025)
  Prédit: 'gments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gments' → logprob: -3.881560041918419e-05
    2. 'g' → logprob: -10.250039100646973
    3. 'gements' → logprob: -13.000039100646973
    4. 'gment' → logprob: -14.000039100646973
    5. 'r' → logprob: -16.250038146972656
    6. 'ctions' → logprob: -16.625038146972656
    7. 'gm' → logprob: -16.750038146972656
    8. 'nts' → logprob: -17.000038146972656
    9. 'ments' → logprob: -17.375038146972656
    10. 'quences' → logprob: -18.625038146972656

Token 341: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.009791863150894642
    2. '=' → logprob: -4.759791851043701
    3. ':' → logprob: -6.759791851043701
    4. ' :' → logprob: -11.50979232788086
    5. '=[]' → logprob: -12.13479232788086
    6. ' ' → logprob: -13.63479232788086
    7. '<|end|>' → logprob: -16.00979232788086
    8. ' =[' → logprob: -16.13479232788086
    9. ',' → logprob: -16.25979232788086
    10. 's' → logprob: -16.50979232788086

Token 342: ' self' (ID: 1051)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.48716315627098083
    2. '[' → logprob: -1.2371631860733032
    3. '[self' → logprob: -2.6121630668640137
    4. '[]
' → logprob: -4.362163066864014
    5. '[
' → logprob: -4.862163066864014
    6. '[List' → logprob: -7.987163066864014
    7. '[]

' → logprob: -7.987163066864014
    8. ' []' → logprob: -8.737163543701172
    9. 'self' → logprob: -8.862163543701172
    10. 'sorted' → logprob: -9.237163543701172

Token 343: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.004265846684575081
    2. '.create' → logprob: -6.129265785217285
    3. '.generate' → logprob: -7.504265785217285
    4. '.split' → logprob: -7.879265785217285
    5. '.build' → logprob: -8.254265785217285
    6. '.make' → logprob: -8.754265785217285
    7. '.se' → logprob: -9.004265785217285
    8. '_segments' → logprob: -9.004265785217285
    9. '.segment' → logprob: -9.254265785217285
    10. '.calculate' → logprob: -9.379265785217285

Token 344: 'create' (ID: 2537)
  Prédit: 'create'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'create' → logprob: -0.19368427991867065
    2. 'build' → logprob: -2.0686843395233154
    3. 'generate' → logprob: -3.4436843395233154
    4. 'split' → logprob: -4.818684101104736
    5. 'compute' → logprob: -5.068684101104736
    6. 'construct' → logprob: -6.943684101104736
    7. 'calculate' → logprob: -7.193684101104736
    8. 'initialize' → logprob: -7.818684101104736
    9. 'segment' → logprob: -8.068684577941895
    10. 'divide' → logprob: -8.443684577941895

Token 345: '_segments' (ID: 142925)
  Prédit: '_segments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_segments' → logprob: -0.0003733542689587921
    2. '_course' → logprob: -8.250372886657715
    3. 'segments' → logprob: -9.750372886657715
    4. '_' → logprob: -10.250372886657715
    5. 'Segments' → logprob: -12.000372886657715
    6. '[]' → logprob: -12.000372886657715
    7. '[' → logprob: -13.375372886657715
    8. '_courses' → logprob: -13.375372886657715
    9. '_segment' → logprob: -14.500372886657715
    10. ' segments' → logprob: -14.750372886657715

Token 346: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.061978891491889954
    2. '(car' → logprob: -3.186978816986084
    3. '(' → logprob: -4.061978816986084
    4. '(length' → logprob: -6.936978816986084
    5. '(self' → logprob: -8.936979293823242
    6. '(c' → logprob: -9.186979293823242
    7. '(len' → logprob: -9.561979293823242
    8. '(list' → logprob: -9.936979293823242
    9. '(course' → logprob: -10.061979293823242
    10. '([(' → logprob: -10.186979293823242

Token 347: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1905713528394699
    2. '   ' → logprob: -2.4405713081359863
    3. ' def' → logprob: -2.8155713081359863
    4. '
' → logprob: -3.6905713081359863
    5. '	def' → logprob: -7.440571308135986
    6. '    
' → logprob: -7.815571308135986
    7. ' ' → logprob: -8.940571784973145
    8. '```' → logprob: -9.065571784973145
    9. '(' → logprob: -9.315571784973145
    10. '  
' → logprob: -9.690571784973145

Token 348: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0012679706560447812
    2. ' def' → logprob: -6.751267910003662
    3. '   ' → logprob: -9.25126838684082
    4. '
' → logprob: -13.50126838684082
    5. '    
' → logprob: -15.37626838684082
    6. '	def' → logprob: -15.87626838684082
    7. ' ' → logprob: -16.62626838684082
    8. ')' → logprob: -18.00126838684082
    9. '```' → logprob: -18.50126838684082
    10. '

' → logprob: -18.62626838684082

Token 349: ' _' (ID: 1175)
  Prédit: '_create'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_create' → logprob: -1.0683535037969705e-05
    2. ' _' → logprob: -12.00001049041748
    3. 'create' → logprob: -12.75001049041748
    4. 'def' → logprob: -14.12501049041748
    5. '_created' → logprob: -16.125011444091797
    6. '_start' → logprob: -16.250011444091797
    7. '_cre' → logprob: -16.500011444091797
    8. '_get' → logprob: -16.500011444091797
    9. '_' → logprob: -16.625011444091797
    10. 'Create' → logprob: -17.125011444091797

Token 350: 'create' (ID: 2537)
  Prédit: 'create'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'create' → logprob: -3.054500666621607e-06
    2. '_create' → logprob: -13.00000286102295
    3. 'reate' → logprob: -15.00000286102295
    4. '.create' → logprob: -15.37500286102295
    5. ' create' → logprob: -15.75000286102295
    6. '(create' → logprob: -16.125003814697266
    7. '	create' → logprob: -16.875003814697266
    8. 'def' → logprob: -17.375003814697266
    9. '```' → logprob: -17.875003814697266
    10. '=create' → logprob: -18.375003814697266

Token 351: '_segments' (ID: 142925)
  Prédit: '_segments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_segments' → logprob: -1.1472419600977446e-06
    2. 'segments' → logprob: -14.500000953674316
    3. '_' → logprob: -15.000000953674316
    4. '_segment' → logprob: -16.000001907348633
    5. '_seg' → logprob: -16.125001907348633
    6. '_s' → logprob: -16.250001907348633
    7. '_sections' → logprob: -17.125001907348633
    8. '```' → logprob: -17.750001907348633
    9. 'Segments' → logprob: -19.375001907348633
    10. '_se' → logprob: -19.500001907348633

Token 352: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -2.2246291337069124e-05
    2. '(' → logprob: -11.000021934509277
    3. ' (' → logprob: -12.500021934509277
    4. 'self' → logprob: -14.000021934509277
    5. '()' → logprob: -14.250021934509277
    6. '(s' → logprob: -15.875021934509277
    7. '   ' → logprob: -16.625022888183594
    8. '(
' → logprob: -17.000022888183594
    9. ' ' → logprob: -17.125022888183594
    10. '(sel' → logprob: -17.625022888183594

Token 353: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.657491147518158
    2. '):' → logprob: -1.4074912071228027
    3. '(self' → logprob: -1.6574912071228027
    4. 'self' → logprob: -3.6574912071228027
    5. '):
' → logprob: -3.9074912071228027
    6. '   ' → logprob: -9.157490730285645
    7. ')(' → logprob: -9.407490730285645
    8. ',' → logprob: -9.407490730285645
    9. ')->' → logprob: -9.782490730285645
    10. 'def' → logprob: -10.032490730285645

Token 354: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -8.149051427608356e-05
    2. 'self' → logprob: -10.000081062316895
    3. '(' → logprob: -10.750081062316895
    4. ' (' → logprob: -11.875081062316895
    5. ' self' → logprob: -12.875081062316895
    6. '   ' → logprob: -13.500081062316895
    7. '(s' → logprob: -14.000081062316895
    8. 'def' → logprob: -14.375081062316895
    9. '       ' → logprob: -14.500081062316895
    10. ':' → logprob: -15.125081062316895

Token 355: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.001943514565937221
    2. ' List' → logprob: -6.251943588256836
    3. '[List' → logprob: -11.251943588256836
    4. 'list' → logprob: -13.876943588256836
    5. '	List' → logprob: -14.876943588256836
    6. '   ' → logprob: -15.251943588256836
    7. ' ' → logprob: -16.001943588256836
    8. '```' → logprob: -16.626943588256836
    9. 'Tuple' → logprob: -17.251943588256836
    10. '`' → logprob: -17.626943588256836

Token 356: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.8624639324116288e-06
    2. '<Course' → logprob: -13.875001907348633
    3. '[List' → logprob: -14.875001907348633
    4. '[
' → logprob: -15.125001907348633
    5. '```' → logprob: -16.375001907348633
    6. '[(' → logprob: -17.250001907348633
    7. ' [' → logprob: -17.375001907348633
    8. '[int' → logprob: -17.875001907348633
    9. '[`' → logprob: -18.875001907348633
    10. '

' → logprob: -19.000001907348633

Token 357: 'Course' (ID: 20560)
  Prédit: 'Course'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Course' → logprob: -0.00029613598599098623
    2. 'Tuple' → logprob: -8.625296592712402
    3. 'float' → logprob: -9.125296592712402
    4. ' Course' → logprob: -12.125296592712402
    5. 'Car' → logprob: -14.250296592712402
    6. '[' → logprob: -14.375296592712402
    7. 'Float' → logprob: -14.875296592712402
    8. 'Running' → logprob: -15.250296592712402
    9. 'Curso' → logprob: -16.750295639038086
    10. 'Run' → logprob: -17.000295639038086

Token 358: 'Segment' (ID: 24880)
  Prédit: 'Segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Segment' → logprob: 0.0
    2. '_segment' → logprob: -17.875
    3. 'Segments' → logprob: -18.5
    4. '```' → logprob: -18.875
    5. ' Segment' → logprob: -19.0
    6. '[' → logprob: -19.375
    7. 'egment' → logprob: -19.5
    8. 'segment' → logprob: -19.625
    9. 'Seg' → logprob: -19.625
    10. '_SEG' → logprob: -20.0

Token 359: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -1.1449055671691895
    2. ':
' → logprob: -1.3949055671691895
    3. ':' → logprob: -1.7699055671691895
    4. '():
' → logprob: -2.0199055671691895
    5. '):
' → logprob: -2.7699055671691895
    6. ']:' → logprob: -3.0199055671691895
    7. '():' → logprob: -4.7699055671691895
    8. '):' → logprob: -5.6449055671691895
    9. '       ' → logprob: -6.3949055671691895
    10. '   ' → logprob: -6.6449055671691895

Token 360: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00480889156460762
    2. 'segments' → logprob: -5.3798089027404785
    3. '```' → logprob: -10.00480842590332
    4. 'points' → logprob: -10.12980842590332
    5. '        
' → logprob: -11.00480842590332
    6. 'segment' → logprob: -11.25480842590332
    7. 'sorted' → logprob: -11.50480842590332
    8. ' segments' → logprob: -11.50480842590332
    9. 'car' → logprob: -11.62980842590332
    10. '   ' → logprob: -12.12980842590332

Token 361: ' segments' (ID: 33749)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.3437506854534149
    2. 'points' → logprob: -1.3437507152557373
    3. '       ' → logprob: -4.093750476837158
    4. 'segments' (adapté à ' segments') → logprob: -4.343750476837158
    5. 'sorted' → logprob: -9.093750953674316
    6. 'all' → logprob: -9.843750953674316
    7. ' positions' → logprob: -9.843750953674316
    8. 'segment' → logprob: -10.093750953674316
    9. 'pos' → logprob: -10.093750953674316
    10. 'car' → logprob: -11.468750953674316

Token 362: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0048665497452020645
    2. '=' → logprob: -5.379866600036621
    3. '=[]' → logprob: -8.754866600036621
    4. ':' → logprob: -9.504866600036621
    5. '   ' → logprob: -12.254866600036621
    6. '=[]
' → logprob: -12.879866600036621
    7. ' ' → logprob: -13.254866600036621
    8. '       ' → logprob: -14.004866600036621
    9. '[]' → logprob: -14.254866600036621
    10. '=[' → logprob: -14.254866600036621

Token 363: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.693571150302887
    2. '[]
' → logprob: -0.693571150302887
    3. '[' → logprob: -8.443571090698242
    4. '[]

' → logprob: -8.693571090698242
    5. ' []
' → logprob: -10.568571090698242
    6. ' []' → logprob: -11.818571090698242
    7. '[
' → logprob: -11.943571090698242
    8. '[self' → logprob: -14.568571090698242
    9. '[List' → logprob: -15.818571090698242
    10. '[start' → logprob: -15.818571090698242

Token 364: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.500691294670105
    2. 'positions' → logprob: -1.250691294670105
    3. 'points' → logprob: -3.0006914138793945
    4. 'prev' → logprob: -3.2506914138793945
    5. ' positions' → logprob: -5.1256914138793945
    6. 'start' → logprob: -5.2506914138793945
    7. 'last' → logprob: -6.0006914138793945
    8. 'sorted' → logprob: -7.0006914138793945
    9. 'current' → logprob: -7.1256914138793945
    10. ' points' → logprob: -7.2506914138793945

Token 365: ' prev' (ID: 10258)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.29274675250053406
    2. 'points' → logprob: -1.9177467823028564
    3. 'prev' (adapté à ' prev') → logprob: -2.4177467823028564
    4. 'previous' → logprob: -5.042746543884277
    5. 'last' → logprob: -5.292746543884277
    6. 'current' → logprob: -6.667746543884277
    7. '       ' → logprob: -7.042746543884277
    8. 'all' → logprob: -7.042746543884277
    9. 'start' → logprob: -7.042746543884277
    10. 'pos' → logprob: -7.167746543884277

Token 366: ' =' (ID: 314)
  Prédit: '_pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.13397860527038574
    2. '_position' → logprob: -2.3839786052703857
    3. '_' → logprob: -3.7589786052703857
    4. '_end' → logprob: -5.508978843688965
    5. '_point' → logprob: -5.883978843688965
    6. ' =' → logprob: -6.383978843688965
    7. '=' → logprob: -7.008978843688965
    8. '_start' → logprob: -8.383978843688965
    9. '_=' → logprob: -9.258978843688965
    10. '=_' → logprob: -9.633978843688965

Token 367: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.253090865968261e-06
    2. ' ' → logprob: -11.625009536743164
    3. '[' → logprob: -16.500009536743164
    4. '   ' → logprob: -17.250009536743164
    5. 'float' → logprob: -18.062509536743164
    6. '۰' → logprob: -18.062509536743164
    7. '.' → logprob: -18.562509536743164
    8. '<|end|>' → logprob: -18.625009536743164
    9. '=' → logprob: -19.125009536743164
    10. '  ' → logprob: -19.312509536743164

Token 368: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. 'float' → logprob: -17.250001907348633
    4. '[' → logprob: -18.312501907348633
    5. 'self' → logprob: -19.312501907348633
    6. '   ' → logprob: -19.500001907348633
    7. '۰' → logprob: -19.562501907348633
    8. 'start' → logprob: -20.000001907348633
    9. '00' → logprob: -20.625001907348633
    10. '  ' → logprob: -20.750001907348633

Token 369: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.07263898104429245
    2. '
' → logprob: -2.697638988494873
    3. '0' → logprob: -6.447638988494873
    4. '
' → logprob: -8.197638511657715
    5. '        
' → logprob: -8.447638511657715
    6. ' 
' → logprob: -8.947638511657715
    7. '<|end|>' → logprob: -9.197638511657715
    8. '  
' → logprob: -9.322638511657715
    9. '    
' → logprob: -9.322638511657715
    10. '.
' → logprob: -10.197638511657715

Token 370: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0564331205387134e-05
    2. '       ' → logprob: -12.00001049041748
    3. ' ' → logprob: -13.25001049041748
    4. '.' → logprob: -13.87501049041748
    5. '   ' → logprob: -13.87501049041748
    6. '```' → logprob: -15.50001049041748
    7. 'float' → logprob: -16.000011444091797
    8. 'for' → logprob: -16.375011444091797
    9. '
' → logprob: -16.500011444091797
    10. '        
' → logprob: -16.750011444091797

Token 371: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.040410321205854416
    2. '<|end|>' → logprob: -3.540410280227661
    3. '       ' → logprob: -5.04041051864624
    4. ' 
' → logprob: -7.04041051864624
    5. '<|end|>' → logprob: -7.41541051864624
    6. ' for' → logprob: -7.54041051864624
    7. '        
' → logprob: -7.66541051864624
    8. '
' → logprob: -7.91541051864624
    9. '  
' → logprob: -7.91541051864624
    10. 'for' → logprob: -8.415410041809082

Token 372: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24560971558094025
    2. ' for' → logprob: -2.120609760284424
    3. '<|end|>' → logprob: -2.870609760284424
    4. '
' → logprob: -3.620609760284424
    5. 'for' → logprob: -5.120609760284424
    6. '        
' → logprob: -5.495609760284424
    7. '<|end|>' → logprob: -7.120609760284424
    8. ',' → logprob: -7.370609760284424
    9. '  
' → logprob: -7.370609760284424
    10. '	for' → logprob: -8.370609283447266

Token 373: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.021597793325781822
    2. '       ' → logprob: -3.8965978622436523
    3. ' for' → logprob: -6.896597862243652
    4. '	for' → logprob: -10.396597862243652
    5. '	' → logprob: -12.271597862243652
    6. '        
' → logprob: -12.521597862243652
    7. 'sorted' → logprob: -13.646597862243652
    8. 'points' → logprob: -13.896597862243652
    9. '
' → logprob: -14.021597862243652
    10. '```' → logprob: -14.521597862243652

Token 374: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.017640935257077217
    2. ' pos' → logprob: -4.142641067504883
    3. 'car' → logprob: -7.517641067504883
    4. 'c' → logprob: -8.017641067504883
    5. 'cp' → logprob: -8.017641067504883
    6. 'position' → logprob: -8.017641067504883
    7. ' position' → logprob: -10.517641067504883
    8. 'p' → logprob: -10.642641067504883
    9. ' c' → logprob: -11.392641067504883
    10. ' carrot' → logprob: -12.267641067504883

Token 375: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.016057245433330536
    2. 'in' → logprob: -4.141057014465332
    3. ' ' → logprob: -11.016057014465332
    4. '	in' → logprob: -13.141057014465332
    5. '_in' → logprob: -13.391057014465332
    6. ' ' → logprob: -14.641057014465332
    7. 'i' → logprob: -14.766057014465332
    8. 'ine' → logprob: -14.891057014465332
    9. '_' → logprob: -15.016057014465332
    10. 's' → logprob: -15.516057014465332

Token 376: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.005839095450937748
    2. 'sorted' → logprob: -5.755838871002197
    3. ' self' → logprob: -6.380838871002197
    4. '[self' → logprob: -7.255838871002197
    5. '[' → logprob: -8.880839347839355
    6. '   ' → logprob: -9.630839347839355
    7. ' sorted' → logprob: -10.755839347839355
    8. ' [' → logprob: -11.130839347839355
    9. '(self' → logprob: -11.880839347839355
    10. '       ' → logprob: -12.005839347839355

Token 377: '.car' (ID: 49278)
  Prédit: '.car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.car' → logprob: -7.290784560609609e-05
    2. '.' → logprob: -10.125072479248047
    3. '	car' → logprob: -11.125072479248047
    4. 'car' → logprob: -11.875072479248047
    5. ' .' → logprob: -11.875072479248047
    6. '.carousel' → logprob: -13.875072479248047
    7. '   ' → logprob: -14.500072479248047
    8. '._' → logprob: -14.625072479248047
    9. '_car' → logprob: -14.875072479248047
    10. '.c' → logprob: -15.250072479248047

Token 378: 'rot' (ID: 8150)
  Prédit: 'rot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rot' → logprob: -6.551721889991313e-05
    2. 'ot' → logprob: -10.000065803527832
    3. '_rot' → logprob: -11.000065803527832
    4. 'rots' → logprob: -13.000065803527832
    5. 'Rot' → logprob: -15.375065803527832
    6. '_positions' → logprob: -16.000064849853516
    7. 't' → logprob: -16.000064849853516
    8. 'r' → logprob: -16.500064849853516
    9. 'ro' → logprob: -16.750064849853516
    10. 'rott' → logprob: -16.750064849853516

Token 379: '_positions' (ID: 93193)
  Prédit: '_positions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_positions' → logprob: -1.981667537620524e-06
    2. 'positions' → logprob: -13.250001907348633
    3. '_' → logprob: -16.500001907348633
    4. ' _' → logprob: -18.000001907348633
    5. ' positions' → logprob: -18.250001907348633
    6. 'Positions' → logprob: -18.250001907348633
    7. '_locations' → logprob: -18.250001907348633
    8. 's' → logprob: -18.375001907348633
    9. '_
' → logprob: -18.875001907348633
    10. '   ' → logprob: -19.250001907348633

Token 380: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.048697397112846375
    2. ':
' → logprob: -3.0486974716186523
    3. ' :' → logprob: -10.298697471618652
    4. '       ' → logprob: -11.048697471618652
    5. ',' → logprob: -11.173697471618652
    6. '           ' → logprob: -11.298697471618652
    7. '):' → logprob: -11.673697471618652
    8. '):
' → logprob: -11.923697471618652
    9. '+' → logprob: -12.173697471618652
    10. ' :
' → logprob: -12.923697471618652

Token 381: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11739812791347504
    2. '       ' → logprob: -2.6173980236053467
    3. ':' → logprob: -3.6173980236053467
    4. ',' → logprob: -5.617398262023926
    5. ':
' → logprob: -5.617398262023926
    6. '        
' → logprob: -6.367398262023926
    7. '            
' → logprob: -7.367398262023926
    8. '   ' → logprob: -8.617398262023926
    9. '
' → logprob: -8.617398262023926
    10. 'segments' → logprob: -8.742398262023926

Token 382: ' segments' (ID: 33749)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segments' (adapté à ' segments') → logprob: -0.21861101686954498
    2. '           ' → logprob: -1.9686110019683838
    3. ' segments' → logprob: -3.093611001968384
    4. '
' → logprob: -4.593611240386963
    5. ' 
' → logprob: -7.593611240386963
    6. '            
' → logprob: -7.593611240386963
    7. '_segments' → logprob: -9.843610763549805
    8. '       ' → logprob: -10.093610763549805
    9. '               ' → logprob: -10.218610763549805
    10. '        
' → logprob: -10.968610763549805

Token 383: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.002891894429922104
    2. '.' → logprob: -5.877892017364502
    3. 'append' → logprob: -10.002891540527344
    4. '.extend' → logprob: -11.377891540527344
    5. ' .' → logprob: -12.377891540527344
    6. ' +=' → logprob: -12.627891540527344
    7. ',' → logprob: -12.752891540527344
    8. '+=' → logprob: -12.752891540527344
    9. '.push' → logprob: -13.127891540527344
    10. '=' → logprob: -13.252891540527344

Token 384: '(C' (ID: 5559)
  Prédit: '(C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(C' → logprob: -6.432518421206623e-05
    2. '(' → logprob: -9.7500638961792
    3. 'Course' → logprob: -12.2500638961792
    4. ' Course' → logprob: -14.6250638961792
    5. '(
' → logprob: -15.3750638961792
    6. '(Car' → logprob: -15.7500638961792
    7. ' (' → logprob: -16.000064849853516
    8. '<Course' → logprob: -16.375064849853516
    9. '	C' → logprob: -17.000064849853516
    10. '(course' → logprob: -17.125064849853516

Token 385: 'ourse' (ID: 7130)
  Prédit: 'ourse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ourse' → logprob: -3.273621405242011e-05
    2. 'Course' → logprob: -10.750032424926758
    3. 'our' → logprob: -12.875032424926758
    4. 'ours' → logprob: -13.125032424926758
    5. 'ource' → logprob: -13.125032424926758
    6. 'ouse' → logprob: -13.375032424926758
    7. 'o' → logprob: -14.000032424926758
    8. 'Our' → logprob: -14.000032424926758
    9. 'orse' → logprob: -14.750032424926758
    10. '.Course' → logprob: -15.875032424926758

Token 386: 'Segment' (ID: 24880)
  Prédit: 'Segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Segment' → logprob: -9.088346359931165e-07
    2. 'Seg' → logprob: -14.875000953674316
    3. 'egment' → logprob: -15.125000953674316
    4. '_segment' → logprob: -16.625
    5. 'segment' → logprob: -16.75
    6. 'Segments' → logprob: -17.125
    7. ' Segment' → logprob: -17.25
    8. 'gment' → logprob: -18.0
    9. '_SEG' → logprob: -19.125
    10. 'Section' → logprob: -19.625

Token 387: '(prev' (ID: 59594)
  Prédit: '(prev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(prev' → logprob: -0.09621228277683258
    2. '(' → logprob: -2.596212387084961
    3. 'prev' → logprob: -4.096212387084961
    4. '0' → logprob: -7.721212387084961
    5. '(
' → logprob: -10.096212387084961
    6. ' prev' → logprob: -10.471212387084961
    7. ' (' → logprob: -10.971212387084961
    8. ')' → logprob: -12.471212387084961
    9. '(previous' → logprob: -12.971212387084961
    10. '	prev' → logprob: -14.596212387084961

Token 388: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00015097891446202993
    2. ',pos' → logprob: -9.000150680541992
    3. ' ,' → logprob: -10.625150680541992
    4. ',
' → logprob: -13.500150680541992
    5. ',p' → logprob: -14.250150680541992
    6. '‌,' → logprob: -15.625150680541992
    7. ',float' → logprob: -15.875150680541992
    8. '```' → logprob: -16.000150680541992
    9. ',s' → logprob: -16.250150680541992
    10. ')' → logprob: -17.250150680541992

Token 389: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.0007099286303855479
    2. ' pos' → logprob: -7.2507100105285645
    3. '	pos' → logprob: -20.000709533691406
    4. '
' → logprob: -20.125709533691406
    5. '           ' → logprob: -21.125709533691406
    6. 'float' → logprob: -21.750709533691406
    7. '   ' → logprob: -22.250709533691406
    8. '[pos' → logprob: -22.875709533691406
    9. 'p' → logprob: -23.375709533691406
    10. '       ' → logprob: -23.625709533691406

Token 390: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.5764694809913635
    2. '))
' → logprob: -0.8264694809913635
    3. ')' → logprob: -8.451469421386719
    4. '           ' → logprob: -8.826469421386719
    5. '       ' → logprob: -9.326469421386719
    6. ')
' → logprob: -10.701469421386719
    7. ' ))
' → logprob: -10.826469421386719
    8. ' ))' → logprob: -11.201469421386719
    9. '))
' → logprob: -11.326469421386719
    10. '   ' → logprob: -12.576469421386719

Token 391: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0015519981971010566
    2. 'prev' → logprob: -7.001552104949951
    3. '
' → logprob: -8.001551628112793
    4. '       ' → logprob: -8.876551628112793
    5. '		' → logprob: -9.876551628112793
    6. '   ' → logprob: -10.001551628112793
    7. '	prev' → logprob: -10.626551628112793
    8. '	   ' → logprob: -11.751551628112793
    9. ' prev' → logprob: -12.126551628112793
    10. '
' → logprob: -12.251551628112793

Token 392: ' prev' (ID: 10258)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prev' (adapté à ' prev') → logprob: -0.004393086768686771
    2. '           ' → logprob: -5.504393100738525
    3. ' prev' → logprob: -8.629392623901367
    4. '	prev' → logprob: -9.254392623901367
    5. '   ' → logprob: -10.379392623901367
    6. '       ' → logprob: -12.129392623901367
    7. '.prev' → logprob: -13.129392623901367
    8. '_prev' → logprob: -14.754392623901367
    9. '               ' → logprob: -15.129392623901367
    10. '		' → logprob: -15.379392623901367

Token 393: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31326186656951904
    2. ' =' → logprob: -1.313261866569519
    3. ' ' → logprob: -16.813261032104492
    4. '.' → logprob: -17.563261032104492
    5. '.=' → logprob: -17.688261032104492
    6. '=
' → logprob: -17.938261032104492
    7. '＝' → logprob: -18.813261032104492
    8. ')' → logprob: -18.813261032104492
    9. ' +=' → logprob: -19.063261032104492
    10. ',' → logprob: -19.188261032104492

Token 394: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.0002613358374219388
    2. ' pos' → logprob: -8.250261306762695
    3. '	pos' → logprob: -19.500261306762695
    4. '   ' → logprob: -22.625261306762695
    5. '.pos' → logprob: -22.625261306762695
    6. '_pos' → logprob: -23.000261306762695
    7. 'p' → logprob: -23.250261306762695
    8. 'float' → logprob: -23.250261306762695
    9. 'position' → logprob: -23.375261306762695
    10. ' ' → logprob: -23.375261306762695

Token 395: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03772654011845589
    2. '
' → logprob: -3.412726640701294
    3. '        
' → logprob: -6.037726402282715
    4. '<|end|>' → logprob: -7.162726402282715
    5. '\n' → logprob: -8.537726402282715
    6. '.' → logprob: -8.912726402282715
    7. '\
' → logprob: -9.787726402282715
    8. '.
' → logprob: -9.787726402282715
    9. '[
' → logprob: -9.912726402282715
    10. '  
' → logprob: -10.287726402282715

Token 396: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0032241756562143564
    2. '
' → logprob: -6.0032243728637695
    3. 'segments' → logprob: -8.25322437286377
    4. '	' → logprob: -9.62822437286377
    5. 'return' → logprob: -9.87822437286377
    6. '        
' → logprob: -10.00322437286377
    7. ')
' → logprob: -10.00322437286377
    8. '<|end|>' → logprob: -10.37822437286377
    9. '   ' → logprob: -10.50322437286377
    10. '.
' → logprob: -10.62822437286377

Token 397: ' segments' (ID: 33749)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segments' (adapté à ' segments') → logprob: -0.0030042079742997885
    2. ' segments' → logprob: -6.12800407409668
    3. '       ' → logprob: -7.12800407409668
    4. 'seg' → logprob: -12.12800407409668
    5. '   ' → logprob: -12.62800407409668
    6. '
' → logprob: -12.62800407409668
    7. 'if' → logprob: -13.50300407409668
    8. '        
' → logprob: -13.75300407409668
    9. '_segments' → logprob: -14.62800407409668
    10. 'return' → logprob: -14.87800407409668

Token 398: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.002479104558005929
    2. '.' → logprob: -6.002479076385498
    3. 'append' → logprob: -12.877479553222656
    4. '.
' → logprob: -14.002479553222656
    5. ' .' → logprob: -17.002479553222656
    6. '.app' → logprob: -17.377479553222656
    7. '.Append' → logprob: -17.877479553222656
    8. ').' → logprob: -17.877479553222656
    9. '.extend' → logprob: -18.252479553222656
    10. '.add' → logprob: -18.502479553222656

Token 399: '(C' (ID: 5559)
  Prédit: '(C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(C' → logprob: -6.110668618930504e-05
    2. '(' → logprob: -9.75006103515625
    3. '(Car' → logprob: -12.87506103515625
    4. '(
' → logprob: -16.12506103515625
    5. '(Code' → logprob: -16.75006103515625
    6. 'Course' → logprob: -17.25006103515625
    7. '(course' → logprob: -17.37506103515625
    8. ' (' → logprob: -18.12506103515625
    9. '<Course' → logprob: -18.12506103515625
    10. '(self' → logprob: -19.00006103515625

Token 400: 'ourse' (ID: 7130)
  Prédit: 'ourse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ourse' → logprob: -0.02332211285829544
    2. 'Course' → logprob: -3.773322105407715
    3. 'ours' → logprob: -10.898322105407715
    4. 'our' → logprob: -11.023322105407715
    5. 'Our' → logprob: -11.023322105407715
    6. '.Course' → logprob: -12.023322105407715
    7. '(' → logprob: -12.398322105407715
    8. ' Course' → logprob: -12.648322105407715
    9. 'ource' → logprob: -12.773322105407715
    10. '(C' → logprob: -12.898322105407715

Token 401: 'Segment' (ID: 24880)
  Prédit: 'Segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Segment' → logprob: -1.0280383548888494e-06
    2. 'Course' → logprob: -14.000000953674316
    3. 'Segments' → logprob: -16.125001907348633
    4. 'segment' → logprob: -17.625001907348633
    5. 'Seg' → logprob: -17.875001907348633
    6. 'egment' → logprob: -18.375001907348633
    7. 'gment' → logprob: -18.375001907348633
    8. '(' → logprob: -20.750001907348633
    9. 'Section' → logprob: -20.875001907348633
    10. '_segment' → logprob: -21.125001907348633

Token 402: '(prev' (ID: 59594)
  Prédit: '(prev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(prev' → logprob: -0.0019349466310814023
    2. 'prev' → logprob: -6.251935005187988
    3. '(' → logprob: -12.751935005187988
    4. '(
' → logprob: -12.751935005187988
    5. ' prev' → logprob: -15.001935005187988
    6. '	prev' → logprob: -16.126934051513672
    7. '(pre' → logprob: -16.376934051513672
    8. '(previous' → logprob: -17.626934051513672
    9. '.prev' → logprob: -18.126934051513672
    10. ' (' → logprob: -18.376934051513672

Token 403: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.893480243277736e-05
    2. ' ,' → logprob: -10.625039100646973
    3. 'self' → logprob: -11.875039100646973
    4. ',self' → logprob: -12.125039100646973
    5. ',
' → logprob: -13.125039100646973
    6. ' self' → logprob: -16.750038146972656
    7. 's' → logprob: -17.125038146972656
    8. '
' → logprob: -17.500038146972656
    9. '',' → logprob: -17.625038146972656
    10. '(self' → logprob: -17.625038146972656

Token 404: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0024756586644798517
    2. ' self' → logprob: -6.002475738525391
    3. '       ' → logprob: -17.75247573852539
    4. '
' → logprob: -18.87747573852539
    5. '	self' → logprob: -19.00247573852539
    6. '   ' → logprob: -19.37747573852539
    7. '(self' → logprob: -20.25247573852539
    8. '0' → logprob: -20.37747573852539
    9. '[self' → logprob: -20.50247573852539
    10. '$self' → logprob: -20.62747573852539

Token 405: '.length' (ID: 3116)
  Prédit: '.length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.length' → logprob: -0.00015872348740231246
    2. '.' → logprob: -8.750158309936523
    3. '.l' → logprob: -16.500158309936523
    4. ' .' → logprob: -16.500158309936523
    5. '.len' → logprob: -16.875158309936523
    6. 'length' → logprob: -17.000158309936523
    7. '.LENGTH' → logprob: -18.375158309936523
    8. '.Length' → logprob: -18.500158309936523
    9. '.height' → logprob: -19.250158309936523
    10. '._' → logprob: -19.500158309936523

Token 406: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0020907807629555464
    2. ')' → logprob: -6.252090930938721
    3. '))
' → logprob: -8.752090454101562
    4. ' ))' → logprob: -13.127090454101562
    5. ')
' → logprob: -13.502090454101562
    6. '       ' → logprob: -15.002090454101562
    7. ')))' → logprob: -15.252090454101562
    8. '   ' → logprob: -16.877090454101562
    9. ' )' → logprob: -17.502090454101562
    10. '))

' → logprob: -17.627090454101562

Token 407: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007293514790944755
    2. 'return' → logprob: -7.625729560852051
    3. ' return' → logprob: -9.12572956085205
    4. '	return' → logprob: -9.87572956085205
    5. '
' → logprob: -10.25072956085205
    6. '	' → logprob: -10.75072956085205
    7. '   ' → logprob: -11.00072956085205
    8. '<|end|>' → logprob: -12.87572956085205
    9. '           ' → logprob: -14.37572956085205
    10. '        
' → logprob: -14.37572956085205

Token 408: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.040226198732852936
    2. '       ' → logprob: -3.2902262210845947
    3. ' return' → logprob: -6.290225982666016
    4. '	return' → logprob: -8.415225982666016
    5. '   ' → logprob: -9.415225982666016
    6. '
' → logprob: -10.915225982666016
    7. '	' → logprob: -13.165225982666016
    8. ':return' → logprob: -13.290225982666016
    9. '```' → logprob: -14.165225982666016
    10. 'eturn' → logprob: -14.290225982666016

Token 409: ' segments' (ID: 33749)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.0005530327325686812
    2. ' segments' → logprob: -7.500553131103516
    3. 'se' → logprob: -17.875553131103516
    4. 'self' → logprob: -19.375553131103516
    5. 'sections' → logprob: -19.625553131103516
    6. 'seg' → logprob: -20.000553131103516
    7. 'segment' → logprob: -20.875553131103516
    8. '_segments' → logprob: -21.375553131103516
    9. 'Segments' → logprob: -21.875553131103516
    10. ' ' → logprob: -22.125553131103516

Token 410: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 411: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.00017195509281009436
    2. ' class' → logprob: -9.000171661376953
    3. 'from' → logprob: -10.250171661376953
    4. 'import' → logprob: -11.500171661376953
    5. '```' → logprob: -13.625171661376953
    6. '<|end|>' → logprob: -14.000171661376953
    7. '<class' → logprob: -14.625171661376953
    8. '"class' → logprob: -15.375171661376953
    9. 'def' → logprob: -16.625171661376953
    10. '
' → logprob: -16.625171661376953

Token 412: ' Rabbit' (ID: 79131)
  Prédit: 'Rabbit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Rabbit' → logprob: -0.06592816859483719
    2. 'Race' → logprob: -3.4409282207489014
    3. ' Rabbit' → logprob: -4.315927982330322
    4. 'Runner' → logprob: -4.815927982330322
    5. 'Running' → logprob: -4.940927982330322
    6. 'Car' → logprob: -6.565927982330322
    7. ' Runner' → logprob: -8.56592845916748
    8. 'Simulation' → logprob: -8.56592845916748
    9. ' Race' → logprob: -8.56592845916748
    10. 'Run' → logprob: -8.69092845916748

Token 413: 'Runner' (ID: 26032)
  Prédit: 'Runner'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Runner' → logprob: -0.060660168528556824
    2. 'Race' → logprob: -3.4356601238250732
    3. 'Speed' → logprob: -4.810660362243652
    4. 'Run' → logprob: -4.935660362243652
    5. ':' → logprob: -5.560660362243652
    6. ':
' → logprob: -5.685660362243652
    7. 'Running' → logprob: -6.685660362243652
    8. 'Simulator' → logprob: -7.560660362243652
    9. 'R' → logprob: -7.810660362243652
    10. '(' → logprob: -7.935660362243652

Token 414: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4858449399471283
    2. '(R' → logprob: -0.9858449697494507
    3. '(' → logprob: -4.98584508895874
    4. ':
' → logprob: -5.36084508895874
    5. '(Runtime' → logprob: -9.735844612121582
    6. ' :' → logprob: -10.110844612121582
    7. '):' → logprob: -10.360844612121582
    8. '(object' → logprob: -11.610844612121582
    9. '(
' → logprob: -12.360844612121582
    10. ':R' → logprob: -12.360844612121582

Token 415: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002400624332949519
    2. ' def' → logprob: -6.3774003982543945
    3. 'def' → logprob: -7.3774003982543945
    4. '(' → logprob: -11.252400398254395
    5. '):
' → logprob: -11.377400398254395
    6. '<|end|>' → logprob: -12.002400398254395
    7. '	def' → logprob: -12.127400398254395
    8. ':
' → logprob: -12.377400398254395
    9. '(R' → logprob: -12.502400398254395
    10. '    
' → logprob: -12.502400398254395

Token 416: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.04111132025718689
    2. 'def' (adapté à ' def') → logprob: -3.2911112308502197
    3. '   ' → logprob: -5.791111469268799
    4. 'class' → logprob: -11.66611099243164
    5. '    ' → logprob: -13.79111099243164
    6. '	def' → logprob: -14.79111099243164
    7. ' class' → logprob: -15.41611099243164
    8. '```' → logprob: -16.04111099243164
    9. ' ' → logprob: -16.54111099243164
    10. ':def' → logprob: -16.66611099243164

Token 417: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -1.0094060897827148
    2. ' __' → logprob: -1.3844060897827148
    3. 'def' → logprob: -1.6344060897827148
    4. ' def' → logprob: -2.259406089782715
    5. 'init' → logprob: -2.634406089782715
    6. '_init' → logprob: -4.509406089782715
    7. '```' → logprob: -6.134406089782715
    8. '__(' → logprob: -9.384406089782715
    9. ' init' → logprob: -9.759406089782715
    10. ' ' → logprob: -9.759406089782715

Token 418: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.04282686486840248
    2. '__' → logprob: -3.4178268909454346
    3. 'it' → logprob: -5.4178266525268555
    4. '_init' → logprob: -5.9178266525268555
    5. 'def' → logprob: -7.1678266525268555
    6. 'class' → logprob: -7.2928266525268555
    7. '```' → logprob: -7.7928266525268555
    8. '(init' → logprob: -9.667826652526855
    9. 'f' → logprob: -11.167826652526855
    10. '_' → logprob: -11.417826652526855

Token 419: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.000769009639043361
    2. '(self' → logprob: -7.625769138336182
    3. '__(
' → logprob: -8.625768661499023
    4. '__' → logprob: -9.625768661499023
    5. '_(' → logprob: -10.500768661499023
    6. '(' → logprob: -12.125768661499023
    7. ' (' → logprob: -14.125768661499023
    8. '<>(' → logprob: -14.375768661499023
    9. 'self' → logprob: -14.750768661499023
    10. '__((' → logprob: -15.250768661499023

Token 420: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -5.133198283147067e-05
    2. ' self' → logprob: -10.500051498413086
    3. '
' → logprob: -11.375051498413086
    4. ',' → logprob: -11.875051498413086
    5. '       ' → logprob: -12.375051498413086
    6. ',self' → logprob: -14.875051498413086
    7. '(self' → logprob: -15.375051498413086
    8. '0' → logprob: -15.750051498413086
    9. '   ' → logprob: -15.875051498413086
    10. '):
' → logprob: -16.875051498413086

Token 421: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.967624019831419e-05
    2. 'self' → logprob: -10.250060081481934
    3. ' ,' → logprob: -11.375060081481934
    4. ',
' → logprob: -11.500060081481934
    5. ',self' → logprob: -13.625060081481934
    6. '(self' → logprob: -14.875060081481934
    7. '       ' → logprob: -15.000060081481934
    8. '   ' → logprob: -15.250060081481934
    9. '__,' → logprob: -15.625060081481934
    10. ' self' → logprob: -15.750060081481934

Token 422: ' speed' (ID: 7733)
  Prédit: 'speed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'speed' → logprob: -0.3762555718421936
    2. 'model' → logprob: -1.8762555122375488
    3. ' speed' → logprob: -2.126255512237549
    4. ' model' → logprob: -3.876255512237549
    5. 'course' → logprob: -4.126255512237549
    6. ' course' → logprob: -6.001255512237549
    7. 'running' → logprob: -7.751255512237549
    8. 'rabbit' → logprob: -7.876255512237549
    9. ' running' → logprob: -8.126255989074707
    10. 'base' → logprob: -8.751255989074707

Token 423: '_model' (ID: 10928)
  Prédit: '_model'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_model' → logprob: -0.00012130453251302242
    2. 'Model' → logprob: -9.500121116638184
    3. 'model' → logprob: -10.125121116638184
    4. ':' → logprob: -12.125121116638184
    5. '_MODEL' → logprob: -15.375121116638184
    6. '_models' → logprob: -15.750121116638184
    7. ':model' → logprob: -15.750121116638184
    8. ' model' → logprob: -16.1251220703125
    9. '_Model' → logprob: -16.3751220703125
    10. 'MODEL' → logprob: -16.8751220703125

Token 424: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.000529202981851995
    2. ',' → logprob: -7.6255292892456055
    3. ' :' → logprob: -10.625529289245605
    4. '):' → logprob: -12.375529289245605
    5. ':r' → logprob: -12.375529289245605
    6. ':R' → logprob: -12.375529289245605
    7. ')' → logprob: -13.250529289245605
    8. '=' → logprob: -13.750529289245605
    9. ',r' → logprob: -15.125529289245605
    10. ' ,' → logprob: -15.625529289245605

Token 425: ' Rabbit' (ID: 79131)
  Prédit: 'Rabbit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Rabbit' → logprob: -0.15918311476707458
    2. ' Rabbit' → logprob: -2.4091830253601074
    3. 'Running' → logprob: -2.9091830253601074
    4. ' Running' → logprob: -5.909183025360107
    5. ')' → logprob: -10.909183502197266
    6. ' running' → logprob: -11.909183502197266
    7. 'Runner' → logprob: -12.409183502197266
    8. 'Runnable' → logprob: -12.909183502197266
    9. ' rabbit' → logprob: -13.534183502197266
    10. ' ' → logprob: -14.284183502197266

Token 426: 'Speed' (ID: 14555)
  Prédit: 'Speed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Speed' → logprob: -4.320199877838604e-07
    2. ' Speed' → logprob: -15.75
    3. 'speed' → logprob: -16.125
    4. '_speed' → logprob: -16.25
    5. '[' → logprob: -18.5
    6. '_SPEED' → logprob: -18.5
    7. '.Speed' → logprob: -18.75
    8. 'peed' → logprob: -19.0
    9. '-Speed' → logprob: -19.125
    10. ' speed' → logprob: -19.25

Token 427: 'Model' (ID: 2239)
  Prédit: 'Model'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Model' → logprob: -1.8624639324116288e-06
    2. '   ' → logprob: -14.500001907348633
    3. 'model' → logprob: -14.625001907348633
    4. ' Model' → logprob: -14.875001907348633
    5. '	Model' → logprob: -15.625001907348633
    6. ',' → logprob: -16.625001907348633
    7. ')' → logprob: -16.625001907348633
    8. '       ' → logprob: -17.250001907348633
    9. 'MODEL' → logprob: -17.625001907348633
    10. '_Model' → logprob: -17.875001907348633

Token 428: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.739826181321405e-05
    2. ' ,' → logprob: -10.00004768371582
    3. ',
' → logprob: -13.50004768371582
    4. '):' → logprob: -15.00004768371582
    5. '   ' → logprob: -16.00004768371582
    6. '‌,' → logprob: -16.87504768371582
    7. '):
' → logprob: -17.62504768371582
    8. '       ' → logprob: -18.00004768371582
    9. ')' → logprob: -18.00004768371582
    10. ',r' → logprob: -18.25004768371582

Token 429: ' storage' (ID: 7928)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.5635657906532288
    2. 'storage' → logprob: -1.188565731048584
    3. 'course' → logprob: -2.188565731048584
    4. ' storage' → logprob: -4.813565731048584
    5. ' course' → logprob: -5.688565731048584
    6. ' carrot' → logprob: -6.563565731048584
    7. 'running' → logprob: -7.813565731048584
    8. 'initial' → logprob: -8.938566207885742
    9. 'starting' → logprob: -8.938566207885742
    10. ' ' → logprob: -9.563566207885742

Token 430: '_capacity' (ID: 85527)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00017469677550252527
    2. '):' → logprob: -8.875174522399902
    3. ',' → logprob: -10.500174522399902
    4. '_capacity' → logprob: -13.125174522399902
    5. ')' → logprob: -13.250174522399902
    6. '_storage' → logprob: -13.500174522399902
    7. ' :' → logprob: -14.625174522399902
    8. 'capacity' → logprob: -14.750174522399902
    9. '_:' → logprob: -15.000174522399902
    10. '):
' → logprob: -15.000174522399902

Token 431: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.009949803352355957
    2. '=' → logprob: -4.634949684143066
    3. '):' → logprob: -9.259949684143066
    4. ':int' → logprob: -9.384949684143066
    5. ')' → logprob: -11.509949684143066
    6. '=int' → logprob: -13.009949684143066
    7. ' :' → logprob: -14.009949684143066
    8. ',' → logprob: -14.384949684143066
    9. ' =' → logprob: -14.384949684143066
    10. '):
' → logprob: -15.259949684143066

Token 432: ' int' (ID: 677)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.6887495517730713
    2. '10' → logprob: -1.6887495517730713
    3. '3' → logprob: -2.0637495517730713
    4. '1' → logprob: -2.0637495517730713
    5. ' ' → logprob: -2.9387495517730713
    6. '0' → logprob: -5.563749313354492
    7. 'int' → logprob: -6.563749313354492
    8. '2' → logprob: -7.938749313354492
    9. ' int' → logprob: -8.188749313354492
    10. ')' → logprob: -8.688749313354492

Token 433: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.42977356910705566
    2. '):
' → logprob: -1.3047735691070557
    3. '):' → logprob: -2.5547735691070557
    4. '):
' → logprob: -8.429773330688477
    5. '   ' → logprob: -9.304773330688477
    6. ' ,' → logprob: -10.179773330688477
    7. ' ):
' → logprob: -10.804773330688477
    8. '       ' → logprob: -11.304773330688477
    9. ' ):' → logprob: -11.679773330688477
    10. ')' → logprob: -12.554773330688477

Token 434: ' course' (ID: 4165)
  Prédit: 'course'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'course' → logprob: -0.19341020286083221
    2. ' course' → logprob: -2.5684101581573486
    3. 'running' → logprob: -3.4434101581573486
    4. 'car' → logprob: -3.8184101581573486
    5. 'initial' → logprob: -3.9434101581573486
    6. 'starting' → logprob: -5.068410396575928
    7. ' running' → logprob: -5.693410396575928
    8. 'start' → logprob: -5.943410396575928
    9. ' initial' → logprob: -6.193410396575928
    10. 'current' → logprob: -6.193410396575928

Token 435: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.9862216504407115e-05
    2. '):' → logprob: -11.250020027160645
    3. '):
' → logprob: -12.750020027160645
    4. ',' → logprob: -12.750020027160645
    5. ')' → logprob: -14.375020027160645
    6. '_:' → logprob: -15.500020027160645
    7. ' :' → logprob: -16.125019073486328
    8. '_length' → logprob: -16.250019073486328
    9. '   ' → logprob: -17.375019073486328
    10. '=None' → logprob: -18.000019073486328

Token 436: ' Running' (ID: 48451)
  Prédit: ' Running'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Running' → logprob: -0.0431416891515255
    2. 'Running' → logprob: -3.2931416034698486
    3. ' running' → logprob: -5.293141841888428
    4. ')' → logprob: -10.54314136505127
    5. ' ' → logprob: -11.41814136505127
    6. ',' → logprob: -11.91814136505127
    7. '_running' → logprob: -12.04314136505127
    8. ' ' → logprob: -12.54314136505127
    9. ' )' → logprob: -12.79314136505127
    10. ' None' → logprob: -13.41814136505127

Token 437: 'Course' (ID: 20560)
  Prédit: 'Course'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Course' → logprob: -4.320199877838604e-07
    2. '_course' → logprob: -15.125
    3. '<Course' → logprob: -17.25
    4. 'course' → logprob: -17.375
    5. ')' → logprob: -17.875
    6. 'Courses' → logprob: -18.125
    7. 'COUR' → logprob: -18.125
    8. ',' → logprob: -18.25
    9. '_C' → logprob: -18.25
    10. '.Course' → logprob: -18.25

Token 438: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4610505700111389
    2. ',' → logprob: -1.0860505104064941
    3. '):
' → logprob: -3.461050510406494
    4. ')' → logprob: -7.961050510406494
    5. '):
' → logprob: -9.836050987243652
    6. '   ' → logprob: -10.836050987243652
    7. ' ):' → logprob: -11.836050987243652
    8. '):

' → logprob: -13.086050987243652
    9. ' ,' → logprob: -13.961050987243652
    10. '       ' → logprob: -13.961050987243652

Token 439: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0016575668705627322
    2. 'self' → logprob: -6.501657485961914
    3. '   ' → logprob: -9.501657485961914
    4. ' self' → logprob: -10.251657485961914
    5. ',' → logprob: -11.251657485961914
    6. '
' → logprob: -11.501657485961914
    7. ')' → logprob: -11.876657485961914
    8. '```' → logprob: -12.001657485961914
    9. '):
' → logprob: -12.751657485961914
    10. '	' → logprob: -13.501657485961914

Token 440: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0010354298865422606
    2. '       ' → logprob: -7.001035213470459
    3. ' self' → logprob: -9.001035690307617
    4. '   ' → logprob: -14.501035690307617
    5. '
' → logprob: -15.626035690307617
    6. '	self' → logprob: -17.126035690307617
    7. 'super' → logprob: -18.876035690307617
    8. '        
' → logprob: -18.876035690307617
    9. '```' → logprob: -19.376035690307617
    10. 'from' → logprob: -19.501035690307617

Token 441: '.speed' (ID: 54856)
  Prédit: '.speed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.speed' → logprob: -0.0036281042266637087
    2. '.' → logprob: -5.753628253936768
    3. ' .' → logprob: -8.12862777709961
    4. '.s' → logprob: -9.62862777709961
    5. '.r' → logprob: -10.75362777709961
    6. '.velocity' → logprob: -11.87862777709961
    7. '.storage' → logprob: -12.00362777709961
    8. '.car' → logprob: -12.12862777709961
    9. '.score' → logprob: -12.25362777709961
    10. '.runner' → logprob: -12.25362777709961

Token 442: '_model' (ID: 10928)
  Prédit: '_model'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_model' → logprob: -2.8921695047756657e-05
    2. ' =' → logprob: -11.500028610229492
    3. '_mode' → logprob: -12.500028610229492
    4. '_' → logprob: -12.500028610229492
    5. '=' → logprob: -13.000028610229492
    6. 'model' → logprob: -13.000028610229492
    7. '=_' → logprob: -13.875028610229492
    8. '   ' → logprob: -14.000028610229492
    9. ' _' → logprob: -14.000028610229492
    10. 'Model' → logprob: -14.000028610229492

Token 443: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20144793391227722
    2. '=' → logprob: -1.7014479637145996
    3. ',' → logprob: -10.576447486877441
    4. ' ' → logprob: -12.076447486877441
    5. ':' → logprob: -13.951447486877441
    6. '  ' → logprob: -14.076447486877441
    7. '   ' → logprob: -14.076447486877441
    8. '    ' → logprob: -15.076447486877441
    9. '.' → logprob: -15.201447486877441
    10. ' ,' → logprob: -15.951447486877441

Token 444: ' speed' (ID: 7733)
  Prédit: 'speed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'speed' → logprob: -0.0380416102707386
    2. ' speed' → logprob: -3.288041591644287
    3. '	speed' → logprob: -15.663042068481445
    4. 'score' → logprob: -17.163042068481445
    5. '(speed' → logprob: -18.663042068481445
    6. '_speed' → logprob: -19.913042068481445
    7. 's' → logprob: -20.038042068481445
    8. '.speed' → logprob: -20.038042068481445
    9. '速度' → logprob: -20.413042068481445
    10. 'peed' → logprob: -20.413042068481445

Token 445: '_model' (ID: 10928)
  Prédit: '_model'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_model' → logprob: -1.7954958821064793e-05
    2. 'model' → logprob: -11.000018119812012
    3. 'Model' → logprob: -14.000018119812012
    4. '_mode' → logprob: -16.000017166137695
    5. ' model' → logprob: -16.625017166137695
    6. '_MODEL' → logprob: -16.875017166137695
    7. 'odel' → logprob: -17.125017166137695
    8. '_' → logprob: -17.625017166137695
    9. ' _' → logprob: -17.875017166137695
    10. '   ' → logprob: -18.250017166137695

Token 446: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7049427032470703
    2. '       ' → logprob: -0.8299427032470703
    3. 'self' → logprob: -2.8299427032470703
    4. ' self' → logprob: -5.45494270324707
    5. '<|end|>' → logprob: -5.57994270324707
    6. ',' → logprob: -6.82994270324707
    7. '        
' → logprob: -7.32994270324707
    8. '  
' → logprob: -8.20494270324707
    9. ' 
' → logprob: -8.32994270324707
    10. ',
' → logprob: -9.20494270324707

Token 447: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3350487947463989
    2. 'self' → logprob: -1.710048794746399
    3. '
' → logprob: -2.4600486755371094
    4. ' self' → logprob: -4.085048675537109
    5. '        
' → logprob: -7.210048675537109
    6. ' 
' → logprob: -8.33504867553711
    7. '<|end|>' → logprob: -8.71004867553711
    8. '  
' → logprob: -9.08504867553711
    9. '   ' → logprob: -9.33504867553711
    10. ',' → logprob: -9.71004867553711

Token 448: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.001182607957161963
    2. 'storage' → logprob: -6.751182556152344
    3. ' self' → logprob: -11.876182556152344
    4. 'car' → logprob: -12.376182556152344
    5. 'course' → logprob: -13.626182556152344
    6. ' storage' → logprob: -16.876182556152344
    7. 'Storage' → logprob: -18.126182556152344
    8. '       ' → logprob: -18.376182556152344
    9. '	self' → logprob: -18.876182556152344
    10. '.storage' → logprob: -19.126182556152344

Token 449: '.storage' (ID: 42934)
  Prédit: '.storage'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.storage' → logprob: -0.026409445330500603
    2. '.car' → logprob: -3.776409387588501
    3. '.course' → logprob: -5.77640962600708
    4. 'storage' → logprob: -10.151409149169922
    5. '.' → logprob: -11.901409149169922
    6. ' .' → logprob: -12.901409149169922
    7. '.c' → logprob: -13.026409149169922
    8. '.st' → logprob: -13.151409149169922
    9. '.capacity' → logprob: -13.526409149169922
    10. '.current' → logprob: -13.776409149169922

Token 450: ' =' (ID: 314)
  Prédit: '_capacity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_capacity' → logprob: -0.005085749085992575
    2. ' =' → logprob: -5.7550859451293945
    3. '=' → logprob: -6.3800859451293945
    4. '.capacity' → logprob: -9.255085945129395
    5. 'capacity' → logprob: -9.380085945129395
    6. '.' → logprob: -11.630085945129395
    7. '_cap' → logprob: -12.130085945129395
    8. '   ' → logprob: -12.255085945129395
    9. '_storage' → logprob: -12.505085945129395
    10. '._' → logprob: -12.630085945129395

Token 451: ' Car' (ID: 4004)
  Prédit: 'Car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Car' → logprob: -0.029750484973192215
    2. ' Car' → logprob: -3.5297505855560303
    3. '<Car' → logprob: -18.27975082397461
    4. ' ' → logprob: -20.02975082397461
    5. '_car' → logprob: -21.77975082397461
    6. 'car' → logprob: -22.15475082397461
    7. '(Car' → logprob: -22.40475082397461
    8. ' ' → logprob: -22.52975082397461
    9. '.Car' → logprob: -24.27975082397461
    10. 'C' → logprob: -24.27975082397461

Token 452: 'rot' (ID: 8150)
  Prédit: 'rot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rot' → logprob: -7.183501293184236e-05
    2. '_rot' → logprob: -10.37507152557373
    3. '_' → logprob: -10.50007152557373
    4. '   ' → logprob: -13.00007152557373
    5. '``' → logprob: -13.50007152557373
    6. '  ' → logprob: -14.12507152557373
    7. '\' → logprob: -14.12507152557373
    8. 'rots' → logprob: -14.37507152557373
    9. '[' → logprob: -14.50007152557373
    10. 'рот' → logprob: -14.50007152557373

Token 453: 'Storage' (ID: 7834)
  Prédit: 'Storage'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Storage' → logprob: -3.128163257315464e-07
    2. 'storage' → logprob: -15.125
    3. 'Stor' → logprob: -17.625
    4. '_storage' → logprob: -18.125
    5. 'St' → logprob: -18.125
    6. ' Storage' → logprob: -18.25
    7. ' storage' → logprob: -20.375
    8. '.Storage' → logprob: -20.875
    9. 'S' → logprob: -21.125
    10. 'Store' → logprob: -21.5

Token 454: '(storage' (ID: 101534)
  Prédit: '(storage'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(storage' → logprob: -0.0007274442468769848
    2. '(' → logprob: -7.250727653503418
    3. '(
' → logprob: -11.500727653503418
    4. 'storage' → logprob: -12.125727653503418
    5. '(space' → logprob: -14.000727653503418
    6. '(stor' → logprob: -14.750727653503418
    7. '(st' → logprob: -15.000727653503418
    8. '(cap' → logprob: -15.875727653503418
    9. '(Storage' → logprob: -16.6257266998291
    10. ' (' → logprob: -17.1257266998291

Token 455: '_capacity' (ID: 85527)
  Prédit: '_capacity'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_capacity' → logprob: -0.0006236801855266094
    2. ')' → logprob: -7.50062370300293
    3. 'capacity' → logprob: -10.12562370300293
    4. ',' → logprob: -11.62562370300293
    5. 'Capacity' → logprob: -12.25062370300293
    6. '_cap' → logprob: -12.75062370300293
    7. ' capacity' → logprob: -12.75062370300293
    8. ')_' → logprob: -12.75062370300293
    9. '=' → logprob: -12.87562370300293
    10. '.capacity' → logprob: -13.12562370300293

Token 456: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.817902173381299e-05
    2. ')
' → logprob: -9.50009822845459
    3. ',' → logprob: -10.75009822845459
    4. '       ' → logprob: -14.37509822845459
    5. ' )' → logprob: -14.62509822845459
    6. '),' → logprob: -14.62509822845459
    7. '   ' → logprob: -15.25009822845459
    8. ' ' → logprob: -17.625097274780273
    9. ')
' → logprob: -17.625097274780273
    10. ').' → logprob: -17.875097274780273

Token 457: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017725147306919098
    2. 'self' → logprob: -4.142724990844727
    3. '
' → logprob: -6.517724990844727
    4. ' self' → logprob: -9.142724990844727
    5. '	' → logprob: -10.017724990844727
    6. '	self' → logprob: -10.267724990844727
    7. '   ' → logprob: -11.142724990844727
    8. '        
' → logprob: -12.767724990844727
    9. 'import' → logprob: -13.017724990844727
    10. '<|end|>' → logprob: -14.142724990844727

Token 458: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.00015717383939772844
    2. '       ' → logprob: -8.875157356262207
    3. ' self' → logprob: -11.000157356262207
    4. '
' → logprob: -15.500157356262207
    5. 'import' → logprob: -15.625157356262207
    6. '   ' → logprob: -16.37515640258789
    7. 'course' → logprob: -16.62515640258789
    8. '	self' → logprob: -17.62515640258789
    9. 'def' → logprob: -17.75015640258789
    10. '        
' → logprob: -18.00015640258789

Token 459: '.course' (ID: 67214)
  Prédit: '.course'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.course' → logprob: -0.25972163677215576
    2. '.position' → logprob: -1.5097216367721558
    3. '.current' → logprob: -5.009721755981445
    4. 'position' → logprob: -8.134721755981445
    5. '.' → logprob: -8.509721755981445
    6. 'course' → logprob: -8.884721755981445
    7. '._' → logprob: -8.884721755981445
    8. '.distance' → logprob: -9.259721755981445
    9. '.location' → logprob: -9.509721755981445
    10. '.car' → logprob: -10.384721755981445

Token 460: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05714448168873787
    2. ' =' → logprob: -2.9321444034576416
    3. '_length' → logprob: -6.432144641876221
    4. '_position' → logprob: -8.057144165039062
    5. '_' → logprob: -8.807144165039062
    6. '_positions' → logprob: -9.432144165039062
    7. '_pos' → logprob: -10.432144165039062
    8. '.' → logprob: -10.682144165039062
    9. '.position' → logprob: -11.557144165039062
    10. 'length' → logprob: -11.932144165039062

Token 461: ' course' (ID: 4165)
  Prédit: 'course'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'course' → logprob: -0.1602250337600708
    2. ' course' → logprob: -1.9102250337600708
    3. '(course' → logprob: -15.160224914550781
    4. 'cour' → logprob: -15.660224914550781
    5. ' ' → logprob: -15.910224914550781
    6. '.course' → logprob: -16.16022491455078
    7. 'cours' → logprob: -16.28522491455078
    8. '   ' → logprob: -17.53522491455078
    9. '```' → logprob: -17.91022491455078
    10. '_course' → logprob: -18.03522491455078

Token 462: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009169317781925201
    2. '
' → logprob: -5.634169101715088
    3. '   ' → logprob: -5.634169101715088
    4. '<|end|>' → logprob: -6.509169101715088
    5. ' self' → logprob: -8.509169578552246
    6. 'self' → logprob: -9.134169578552246
    7. ' ' → logprob: -9.759169578552246
    8. '        
' → logprob: -10.634169578552246
    9. '	self' → logprob: -10.759169578552246
    10. ',' → logprob: -11.509169578552246

Token 463: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1641126126050949
    2. '   ' → logprob: -2.0391125679016113
    3. '
' → logprob: -4.039112567901611
    4. ' ' → logprob: -7.414112567901611
    5. '    
' → logprob: -7.664112567901611
    6. '<|end|>' → logprob: -7.789112567901611
    7. 'self' → logprob: -7.914112567901611
    8. '        
' → logprob: -7.914112567901611
    9. 'def' → logprob: -8.28911304473877
    10. '	' → logprob: -8.53911304473877

Token 464: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.004577988293021917
    2. '       ' → logprob: -5.504578113555908
    3. '
' → logprob: -8.50457763671875
    4. 'def' → logprob: -8.75457763671875
    5. ' self' → logprob: -9.25457763671875
    6. 'import' → logprob: -10.62957763671875
    7. '   ' → logprob: -11.50457763671875
    8. '        
' → logprob: -12.75457763671875
    9. 'from' → logprob: -12.87957763671875
    10. '#' → logprob: -12.87957763671875

Token 465: '.N' (ID: 4439)
  Prédit: '.position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.position' → logprob: -0.007739362306892872
    2. '.current' → logprob: -5.007739543914795
    3. '._' → logprob: -7.757739543914795
    4. 'position' → logprob: -8.757739067077637
    5. '_position' → logprob: -8.757739067077637
    6. '.distance' → logprob: -9.507739067077637
    7. '.pos' → logprob: -9.632739067077637
    8. '.location' → logprob: -9.882739067077637
    9. '.car' → logprob: -10.132739067077637
    10. '.positions' → logprob: -11.882739067077637

Token 466: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.13725486397743225
    2. '=' → logprob: -2.3872549533843994
    3. '_segments' → logprob: -4.13725471496582
    4. '_car' → logprob: -4.26225471496582
    5. '_' → logprob: -6.01225471496582
    6. 'car' → logprob: -7.38725471496582
    7. '       ' → logprob: -8.01225471496582
    8. 'ext' → logprob: -8.01225471496582
    9. '   ' → logprob: -8.01225471496582
    10. 'um' → logprob: -8.13725471496582

Token 467: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.7143561840057373
    2. '0' → logprob: -0.9643561840057373
    3. ' len' → logprob: -2.0893561840057373
    4. ' ' → logprob: -5.214356422424316
    5. '(len' → logprob: -11.089356422424316
    6. '[len' → logprob: -11.589356422424316
    7. '	len' → logprob: -11.589356422424316
    8. '   ' → logprob: -12.214356422424316
    9. '=len' → logprob: -12.526856422424316
    10. '  ' → logprob: -12.839356422424316

Token 468: '(course' (ID: 84759)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.2520708441734314
    2. '(course' → logprob: -1.5020709037780762
    3. '(' → logprob: -8.877070426940918
    4. '(car' → logprob: -14.002070426940918
    5. '(c' → logprob: -14.127070426940918
    6. 'self' → logprob: -14.752070426940918
    7. '(
' → logprob: -16.627071380615234
    8. '(this' → logprob: -17.252071380615234
    9. 'course' → logprob: -17.377071380615234
    10. '(co' → logprob: -17.377071380615234

Token 469: '.car' (ID: 49278)
  Prédit: '.car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.car' → logprob: -0.01112645585089922
    2. '.se' → logprob: -4.511126518249512
    3. '.' → logprob: -9.761126518249512
    4. '.segment' → logprob: -12.136126518249512
    5. ' .' → logprob: -12.636126518249512
    6. '.seg' → logprob: -12.761126518249512
    7. '.c' → logprob: -13.136126518249512
    8. '.course' → logprob: -13.386126518249512
    9. '.carousel' → logprob: -13.761126518249512
    10. '.s' → logprob: -13.761126518249512

Token 470: 'rot' (ID: 8150)
  Prédit: 'rot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rot' → logprob: -0.00027444821898825467
    2. '_rot' → logprob: -9.125274658203125
    3. 'rots' → logprob: -9.500274658203125
    4. '_' → logprob: -10.625274658203125
    5. '``' → logprob: -11.250274658203125
    6. '   ' → logprob: -11.375274658203125
    7. '```' → logprob: -12.125274658203125
    8. 'rott' → logprob: -12.625274658203125
    9. '
' → logprob: -12.875274658203125
    10. 'ot' → logprob: -12.875274658203125

Token 471: '_positions' (ID: 93193)
  Prédit: '_positions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_positions' → logprob: -1.9361264946837764e-07
    2. 'positions' → logprob: -15.625
    3. '_locations' → logprob: -18.5
    4. 's' → logprob: -19.5
    5. '_points' → logprob: -20.0
    6. 'Positions' → logprob: -20.25
    7. '_' → logprob: -20.5
    8. ' _' → logprob: -21.375
    9. ' positions' → logprob: -21.75
    10. 'a' → logprob: -21.75

Token 472: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001705246395431459
    2. ')
' → logprob: -8.750170707702637
    3. ' )' → logprob: -11.375170707702637
    4. '       ' → logprob: -15.375170707702637
    5. '   ' → logprob: -16.50016975402832
    6. '),' → logprob: -16.50016975402832
    7. ')
' → logprob: -17.25016975402832
    8. ')

' → logprob: -17.25016975402832
    9. ')+' → logprob: -17.25016975402832
    10. '<|end|>' → logprob: -17.50016975402832

Token 473: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03144197538495064
    2. '
' → logprob: -3.6564419269561768
    3. '   ' → logprob: -5.781442165374756
    4. 'self' → logprob: -6.781442165374756
    5. ' self' → logprob: -7.781442165374756
    6. '<|end|>' → logprob: -8.156441688537598
    7. '        
' → logprob: -9.906441688537598
    8. ' ' → logprob: -10.906441688537598
    9. '```' → logprob: -10.906441688537598
    10. ',' → logprob: -10.906441688537598

Token 474: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.00691724568605423
    2. ' self' → logprob: -5.506917476654053
    3. '       ' → logprob: -6.131917476654053
    4. '
' → logprob: -7.756917476654053
    5. 'def' → logprob: -9.131916999816895
    6. 'from' → logprob: -10.381916999816895
    7. '   ' → logprob: -10.381916999816895
    8. 'import' → logprob: -10.631916999816895
    9. '#' → logprob: -10.756916999816895
    10. '0' → logprob: -12.756916999816895

Token 475: '.memo' (ID: 161018)
  Prédit: '.current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.current' → logprob: -0.3503160774707794
    2. '.position' → logprob: -1.975316047668457
    3. '.car' → logprob: -2.975316047668457
    4. '.' → logprob: -3.225316047668457
    5. '.time' → logprob: -3.475316047668457
    6. '._' → logprob: -3.850316047668457
    7. '.pos' → logprob: -5.100316047668457
    8. '.positions' → logprob: -5.725316047668457
    9. '.last' → logprob: -7.350316047668457
    10. '.distance' → logprob: -7.975316047668457

Token 476: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03374079242348671
    2. '=' → logprob: -3.408740758895874
    3. ':' → logprob: -9.408740997314453
    4. ' ' → logprob: -12.783740997314453
    5. '_' → logprob: -12.908740997314453
    6. ',' → logprob: -12.908740997314453
    7. ')' → logprob: -13.783740997314453
    8. '[' → logprob: -13.783740997314453
    9. '   ' → logprob: -14.658740997314453
    10. '  ' → logprob: -15.283740997314453

Token 477: ' dict' (ID: 11878)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -9.77022064034827e-05
    2. ' {}' → logprob: -10.000097274780273
    3. 'dict' → logprob: -10.500097274780273
    4. '[' → logprob: -11.250097274780273
    5. '{' → logprob: -12.125097274780273
    6. '[-' → logprob: -13.000097274780273
    7. '[[' → logprob: -13.000097274780273
    8. '{}
' → logprob: -14.000097274780273
    9. '[]' → logprob: -14.625097274780273
    10. '={}' → logprob: -15.750097274780273

Token 478: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00012320445966906846
    2. '()
' → logprob: -9.500123023986816
    3. '[' → logprob: -10.875123023986816
    4. '(' → logprob: -11.875123023986816
    5. '[]' → logprob: -12.125123023986816
    6. '()

' → logprob: -12.625123023986816
    7. ' ()' → logprob: -13.125123023986816
    8. '[(' → logprob: -13.500123023986816
    9. '{' → logprob: -13.625123023986816
    10. '()\' → logprob: -13.625123023986816

Token 479: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10768697410821915
    2. '
' → logprob: -2.357686996459961
    3. '    
' → logprob: -5.107686996459961
    4. '<|end|>' → logprob: -7.357686996459961
    5. ' 
' → logprob: -8.857686996459961
    6. '  
' → logprob: -8.857686996459961
    7. 'def' → logprob: -8.982686996459961
    8. '        
' → logprob: -9.482686996459961
    9. '       ' → logprob: -10.107686996459961
    10. ',' → logprob: -10.357686996459961

Token 480: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08365712314844131
    2. '   ' → logprob: -2.5836570262908936
    3. '    
' → logprob: -6.333657264709473
    4. 'def' → logprob: -6.458657264709473
    5. '

' → logprob: -7.208657264709473
    6. '<|end|>' → logprob: -8.583657264709473
    7. ' def' → logprob: -9.083657264709473
    8. '  
' → logprob: -9.208657264709473
    9. ',' → logprob: -9.708657264709473
    10. '
' → logprob: -10.208657264709473

Token 481: ' For' (ID: 2214)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.1764858365058899
    2. '   ' → logprob: -2.926485776901245
    3. '{}' → logprob: -3.551485776901245
    4. '       ' → logprob: -3.676485776901245
    5. '
' → logprob: -4.051486015319824
    6. '#' → logprob: -4.301486015319824
    7. 'def' → logprob: -4.801486015319824
    8. ' (' → logprob: -5.926486015319824
    9. '()
' → logprob: -6.176486015319824
    10. '(' → logprob: -6.176486015319824

Token 482: ' dynamic' (ID: 14012)
  Prédit: ' storing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' storing' → logprob: -0.24427632987499237
    2. ' (' → logprob: -2.619276285171509
    3. '<|end|>' → logprob: -2.744276285171509
    4. '(' → logprob: -2.869276285171509
    5. ' caching' → logprob: -4.619276523590088
    6. ')' → logprob: -6.369276523590088
    7. ' ' → logprob: -6.744276523590088
    8. ' optimization' → logprob: -6.869276523590088
    9. '()' → logprob: -6.994276523590088
    10. ' memo' → logprob: -6.994276523590088

Token 483: ' programming' (ID: 23238)
  Prédit: ' programming'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' programming' → logprob: -0.08542705327272415
    2. 'program' → logprob: -2.5854270458221436
    3. '_program' → logprob: -5.085427284240723
    4. 'Programming' → logprob: -8.585427284240723
    5. '   ' → logprob: -10.085427284240723
    6. '-program' → logprob: -10.835427284240723
    7. '  ' → logprob: -10.960427284240723
    8. '_' → logprob: -10.960427284240723
    9. ' ' → logprob: -11.335427284240723
    10. ' programación' → logprob: -11.960427284240723

Token 484: ' memo' (ID: 46393)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4845050871372223
    2. '
' → logprob: -0.9845050573348999
    3. '    
' → logprob: -5.4845051765441895
    4. '<|end|>' → logprob: -5.7345051765441895
    5. 'def' → logprob: -6.3595051765441895
    6. ' def' → logprob: -7.4845051765441895
    7. '

' → logprob: -8.859504699707031
    8. '<|end|>' → logprob: -8.984504699707031
    9. '        
' → logprob: -9.109504699707031
    10. ',' → logprob: -9.484504699707031

Token 485: 'ization' (ID: 2860)
  Prédit: 'ization'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ization' → logprob: -0.0025460547767579556
    2. '_' → logprob: -7.1275458335876465
    3. '=' → logprob: -7.5025458335876465
    4. '   ' → logprob: -7.8775458335876465
    5. 'ize' → logprob: -9.127546310424805
    6. 'ized' → logprob: -9.252546310424805
    7. ',' → logprob: -9.377546310424805
    8. ':' → logprob: -9.502546310424805
    9. ' =' → logprob: -9.627546310424805
    10. ')' → logprob: -9.752546310424805

Token 486: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6367652416229248
    2. '
' → logprob: -0.7617652416229248
    3. '    
' → logprob: -5.886765480041504
    4. '<|end|>' → logprob: -6.761765480041504
    5. '        
' → logprob: -9.886765480041504
    6. '<|end|>' → logprob: -10.261765480041504
    7. '

' → logprob: -10.386765480041504
    8. ' 
' → logprob: -10.511765480041504
    9. 'def' → logprob: -11.136765480041504
    10. ',' → logprob: -11.136765480041504

Token 487: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007339803967624903
    2. ' def' → logprob: -6.007339954376221
    3. 'def' → logprob: -6.132339954376221
    4. '
' → logprob: -6.757339954376221
    5. '    
' → logprob: -7.257339954376221
    6. ')' → logprob: -8.132339477539062
    7. '<|end|>' → logprob: -8.132339477539062
    8. ',' → logprob: -9.507339477539062
    9. ' 
' → logprob: -10.007339477539062
    10. '<|end|>' → logprob: -11.007339477539062

Token 488: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4059595465660095
    2. 'def' (adapté à ' def') → logprob: -1.5309596061706543
    3. ' def' → logprob: -2.1559596061706543
    4. '
' → logprob: -6.905959606170654
    5. '    
' → logprob: -8.655959129333496
    6. ')' → logprob: -8.655959129333496
    7. ' 
' → logprob: -9.280959129333496
    8. '	def' → logprob: -10.530959129333496
    9. '  ' → logprob: -11.405959129333496
    10. '    ' → logprob: -11.405959129333496

Token 489: ' _' (ID: 1175)
  Prédit: ' run'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' run' → logprob: -0.1386539191007614
    2. 'run' → logprob: -3.0136539936065674
    3. ' get' → logprob: -3.7636539936065674
    4. 'simulate' → logprob: -4.388653755187988
    5. 'max' → logprob: -4.513653755187988
    6. ' max' → logprob: -4.513653755187988
    7. ' simulate' → logprob: -4.513653755187988
    8. '_run' → logprob: -5.513653755187988
    9. 'get' → logprob: -5.888653755187988
    10. 'def' → logprob: -6.888653755187988

Token 490: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.2003073692321777
    2. 'dfs' → logprob: -1.4503073692321777
    3. 'run' → logprob: -1.4503073692321777
    4. 'simulate' → logprob: -1.9503073692321777
    5. 'max' → logprob: -3.9503073692321777
    6. 'can' → logprob: -4.075307369232178
    7. 'compute' → logprob: -4.200307369232178
    8. 'get' → logprob: -4.700307369232178
    9. 'calculate' → logprob: -4.950307369232178
    10. 'solve' → logprob: -5.075307369232178

Token 491: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.012681633234024048
    2. '(' → logprob: -4.387681484222412
    3. '(
' → logprob: -8.88768196105957
    4. ' (' → logprob: -10.88768196105957
    5. '(s' → logprob: -12.13768196105957
    6. 'self' → logprob: -12.76268196105957
    7. '_(' → logprob: -12.88768196105957
    8. '(position' → logprob: -14.13768196105957
    9. '(i' → logprob: -14.26268196105957
    10. 'def' → logprob: -14.51268196105957

Token 492: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0398193821310997
    2. ' ,' → logprob: -4.039819240570068
    3. '(self' → logprob: -4.289819240570068
    4. '_,' → logprob: -5.539819240570068
    5. ',self' → logprob: -6.664819240570068
    6. ')' → logprob: -7.039819240570068
    7. 'self' → logprob: -7.164819240570068
    8. ')(' → logprob: -7.664819240570068
    9. '_' → logprob: -9.914819717407227
    10. ',pos' → logprob: -9.914819717407227

Token 493: ' idx' (ID: 14016)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.7821148037910461
    2. 'index' → logprob: -1.0321147441864014
    3. 'pos' → logprob: -2.6571147441864014
    4. 'idx' → logprob: -2.9071147441864014
    5. 'position' → logprob: -3.7821147441864014
    6. 'self' → logprob: -4.0321149826049805
    7. ' segment' → logprob: -5.0321149826049805
    8. ' index' → logprob: -5.6571149826049805
    9. ' idx' → logprob: -5.7821149826049805
    10. 'i' → logprob: -5.9071149826049805

Token 494: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006327147129923105
    2. ':' → logprob: -5.381327152252197
    3. ' ,' → logprob: -6.381327152252197
    4. ':int' → logprob: -12.756326675415039
    5. '):' → logprob: -13.006326675415039
    6. ')' → logprob: -13.381326675415039
    7. ' :' → logprob: -13.631326675415039
    8. ',
' → logprob: -14.006326675415039
    9. '=' → logprob: -14.131326675415039
    10. ',time' → logprob: -14.631326675415039

Token 495: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.020764930173754692
    2. 'float' → logprob: -4.0207648277282715
    3. ' int' → logprob: -6.0207648277282715
    4. ' float' → logprob: -9.77076530456543
    5. 'bool' → logprob: -10.02076530456543
    6. ')' → logprob: -10.77076530456543
    7. 'time' → logprob: -11.39576530456543
    8. ':int' → logprob: -11.64576530456543
    9. '[int' → logprob: -11.89576530456543
    10. ',' → logprob: -12.27076530456543

Token 496: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.537868779967539e-06
    2. ' ,' → logprob: -11.750008583068848
    3. ',
' → logprob: -15.500008583068848
    4. ')' → logprob: -15.500008583068848
    5. '‌,' → logprob: -16.87500762939453
    6. ',time' → logprob: -17.00000762939453
    7. ',float' → logprob: -17.50000762939453
    8. '_,' → logprob: -18.00000762939453
    9. ':' → logprob: -18.37500762939453
    10. '‍,' → logprob: -18.62500762939453

Token 497: ' carrots' (ID: 91266)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.07869996130466461
    2. 'car' → logprob: -2.828700065612793
    3. 'last' → logprob: -5.078700065612793
    4. 'stored' → logprob: -5.453700065612793
    5. ' time' → logprob: -5.703700065612793
    6. 'pos' → logprob: -7.703700065612793
    7. 'distance' → logprob: -7.828700065612793
    8. 'has' → logprob: -7.828700065612793
    9. 'storage' → logprob: -8.078700065612793
    10. 'used' → logprob: -8.578700065612793

Token 498: '_car' (ID: 62991)
  Prédit: '_used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_used' → logprob: -0.6983271241188049
    2. '_st' → logprob: -1.4483270645141602
    3. '_in' → logprob: -1.6983270645141602
    4. ',' → logprob: -3.44832706451416
    5. '_left' → logprob: -4.07332706451416
    6. 'stored' → logprob: -4.32332706451416
    7. '_taken' → logprob: -5.19832706451416
    8. '_' → logprob: -5.44832706451416
    9. '_available' → logprob: -6.07332706451416
    10. '_col' → logprob: -6.07332706451416

Token 499: 'ried' (ID: 6089)
  Prédit: 'ried'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ried' → logprob: -0.019971804693341255
    2. 'rot' → logprob: -4.64497184753418
    3. 'ry' → logprob: -5.76997184753418
    4. 'ed' → logprob: -6.89497184753418
    5. 'ned' → logprob: -7.14497184753418
    6. 'oted' → logprob: -7.26997184753418
    7. '```' → logprob: -7.39497184753418
    8. 'r' → logprob: -7.64497184753418
    9. 'ted' → logprob: -7.89497184753418
    10. 'rots' → logprob: -8.14497184753418

Token 500: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7008680701255798
    2. ':' → logprob: -0.7008680701255798
    3. '):' → logprob: -5.575868129730225
    4. ')' → logprob: -5.825868129730225
    5. ':int' → logprob: -7.200868129730225
    6. ' ,' → logprob: -9.700867652893066
    7. ' :' → logprob: -9.700867652893066
    8. '):
' → logprob: -10.950867652893066
    9. '_:' → logprob: -11.200867652893066
    10. 'ed' → logprob: -11.575867652893066

Token 501: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.09303966164588928
    2. ' int' → logprob: -2.4680397510528564
    3. ')' → logprob: -6.093039512634277
    4. ',' → logprob: -6.968039512634277
    5. ':int' → logprob: -7.218039512634277
    6. ':' → logprob: -9.468039512634277
    7. '[int' → logprob: -11.093039512634277
    8. '):
' → logprob: -11.468039512634277
    9. ',int' → logprob: -11.593039512634277
    10. ' )' → logprob: -11.718039512634277

Token 502: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.5014188799541444e-05
    2. ')' → logprob: -10.500044822692871
    3. ' ,' → logprob: -11.000044822692871
    4. ',
' → logprob: -14.500044822692871
    5. '):' → logprob: -16.250045776367188
    6. ',float' → logprob: -17.000045776367188
    7. ' )' → logprob: -17.250045776367188
    8. ',)' → logprob: -18.125045776367188
    9. '_,' → logprob: -18.250045776367188
    10. '‌,' → logprob: -18.500045776367188

Token 503: ' last' (ID: 2174)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.2885953485965729
    2. ' time' → logprob: -1.4135953187942505
    3. ' last' → logprob: -5.663595199584961
    4. 'last' → logprob: -5.913595199584961
    5. 'distance' → logprob: -7.788595199584961
    6. 't' → logprob: -8.538595199584961
    7. ' ' → logprob: -9.413595199584961
    8. '   ' → logprob: -9.538595199584961
    9. ' distance' → logprob: -9.663595199584961
    10. 'position' → logprob: -9.788595199584961

Token 504: '_car' (ID: 62991)
  Prédit: '_car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_car' → logprob: -0.15520404279232025
    2. '_time' → logprob: -2.1552040576934814
    3. '_e' → logprob: -4.280203819274902
    4. '_' → logprob: -5.155203819274902
    5. '_token' → logprob: -5.780203819274902
    6. '_consum' → logprob: -6.905203819274902
    7. '_feed' → logprob: -7.530203819274902
    8. 'car' → logprob: -7.655203819274902
    9. '_c' → logprob: -8.030203819274902
    10. '_reward' → logprob: -8.155203819274902

Token 505: 'rot' (ID: 8150)
  Prédit: 'rot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rot' → logprob: -0.005111964885145426
    2. '_rot' → logprob: -5.630112171173096
    3. '_' → logprob: -7.755112171173096
    4. 'ot' → logprob: -9.005111694335938
    5. 'rott' → logprob: -9.255111694335938
    6. 'rots' → logprob: -9.380111694335938
    7. '``' → logprob: -9.567611694335938
    8. '```' → logprob: -9.692611694335938
    9. '   ' → logprob: -9.817611694335938
    10. 'рот' → logprob: -10.442611694335938

Token 506: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.020242400467395782
    2. ':' → logprob: -4.895242214202881
    3. ')' → logprob: -5.270242214202881
    4. '_:' → logprob: -6.645242214202881
    5. '):' → logprob: -7.145242214202881
    6. '_' → logprob: -7.270242214202881
    7. '_pos' → logprob: -7.395242214202881
    8. 'time' → logprob: -7.395242214202881
    9. '_taken' → logprob: -7.395242214202881
    10. '_distance' → logprob: -7.645242214202881

Token 507: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0733979344367981
    2. ')' → logprob: -3.4483978748321533
    3. ',' → logprob: -3.9483978748321533
    4. '):' → logprob: -4.198398113250732
    5. '_since' → logprob: -5.573398113250732
    6. '_elapsed' → logprob: -8.573397636413574
    7. '):
' → logprob: -8.698397636413574
    8. '_:' → logprob: -8.823397636413574
    9. '_taken' → logprob: -9.198397636413574
    10. ' :' → logprob: -10.073397636413574

Token 508: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.0299211498349905
    2. ' float' → logprob: -3.529921054840088
    3. '=float' → logprob: -8.904921531677246
    4. '	float' → logprob: -11.029921531677246
    5. 'flo' → logprob: -11.779921531677246
    6. ',float' → logprob: -13.279921531677246
    7. '<float' → logprob: -13.279921531677246
    8. ')' → logprob: -13.279921531677246
    9. '(float' → logprob: -13.529921531677246
    10. '_float' → logprob: -13.529921531677246

Token 509: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20479659736156464
    2. ',' → logprob: -1.704796552658081
    3. '):' → logprob: -5.70479679107666
    4. ' )' → logprob: -10.45479679107666
    5. '):
' → logprob: -11.70479679107666
    6. '   ' → logprob: -12.20479679107666
    7. ' ,' → logprob: -12.95479679107666
    8. ',)' → logprob: -14.07979679107666
    9. ')->' → logprob: -14.70479679107666
    10. ',
' → logprob: -14.70479679107666

Token 510: ' current' (ID: 2208)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'position' → logprob: -0.511016309261322
    2. ' position' → logprob: -1.1360163688659668
    3. 'distance' → logprob: -3.386016368865967
    4. 'pos' → logprob: -3.761016368865967
    5. 'current' → logprob: -4.761016368865967
    6. ' distance' → logprob: -5.761016368865967
    7. 'time' → logprob: -5.761016368865967
    8. ' current' → logprob: -6.136016368865967
    9. 'last' → logprob: -6.511016368865967
    10. ' pos' → logprob: -6.511016368865967

Token 511: '_time' (ID: 6425)
  Prédit: '_position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_position' → logprob: -0.4370822012424469
    2. '_pos' → logprob: -1.0620821714401245
    3. 'pos' → logprob: -5.687082290649414
    4. '_time' → logprob: -6.562082290649414
    5. 'position' → logprob: -6.937082290649414
    6. '_distance' → logprob: -6.937082290649414
    7. '_speed' → logprob: -7.312082290649414
    8. '_segment' → logprob: -8.312082290649414
    9. '_idx' → logprob: -8.687082290649414
    10. '_index' → logprob: -8.937082290649414

Token 512: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.45218032598495483
    2. ')' → logprob: -1.3271803855895996
    3. ':' → logprob: -2.9521803855895996
    4. '):' → logprob: -3.0771803855895996
    5. '):
' → logprob: -9.702179908752441
    6. ' )' → logprob: -9.952179908752441
    7. ' ,' → logprob: -10.202179908752441
    8. '=' → logprob: -11.577179908752441
    9. ' ):' → logprob: -11.577179908752441
    10. '   ' → logprob: -11.702179908752441

Token 513: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.0629182755947113
    2. ' float' → logprob: -2.812918186187744
    3. ')' → logprob: -7.062918186187744
    4. '=float' → logprob: -9.812918663024902
    5. 'int' → logprob: -11.312918663024902
    6. ',float' → logprob: -12.062918663024902
    7. '	float' → logprob: -12.187918663024902
    8. '<float' → logprob: -12.562918663024902
    9. '(float' → logprob: -12.687918663024902
    10. '):
' → logprob: -13.562918663024902

Token 514: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.25905805826187134
    2. ',' → logprob: -1.7590579986572266
    3. '):' → logprob: -2.8840579986572266
    4. '):
' → logprob: -10.384057998657227
    5. ' )' → logprob: -10.509057998657227
    6. '   ' → logprob: -10.884057998657227
    7. ')->' → logprob: -11.259057998657227
    8. ' ,' → logprob: -12.634057998657227
    9. ':' → logprob: -12.884057998657227
    10. '):
' → logprob: -13.134057998657227

Token 515: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.009320501238107681
    2. '):' → logprob: -5.0093207359313965
    3. ')' → logprob: -6.8843207359313965
    4. ' ->' → logprob: -7.6343207359313965
    5. ')->' → logprob: -7.6343207359313965
    6. ',' → logprob: -7.7593207359313965
    7. '->' → logprob: -9.009320259094238
    8. ' :' → logprob: -10.884320259094238
    9. '   ' → logprob: -11.134320259094238
    10. '():' → logprob: -11.384320259094238

Token 516: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.0007956892368383706
    2. ' float' → logprob: -7.250795841217041
    3. 'Tuple' → logprob: -9.375795364379883
    4. '	float' → logprob: -15.000795364379883
    5. 'flo' → logprob: -15.625795364379883
    6. ' Tuple' → logprob: -15.750795364379883
    7. '(float' → logprob: -16.250795364379883
    8. '   ' → logprob: -17.125795364379883
    9. 'List' → logprob: -17.250795364379883
    10. 'int' → logprob: -17.250795364379883

Token 517: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0006049798685126007
    2. '):' → logprob: -7.87560510635376
    3. ':
' → logprob: -8.750604629516602
    4. ',' → logprob: -11.250604629516602
    5. ' :' → logprob: -11.375604629516602
    6. '       ' → logprob: -11.625604629516602
    7. '   ' → logprob: -12.000604629516602
    8. '<|end|>' → logprob: -12.000604629516602
    9. ')' → logprob: -12.250604629516602
    10. ':def' → logprob: -12.500604629516602

Token 518: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07664938271045685
    2. ':' → logprob: -2.9516494274139404
    3. '<|end|>' → logprob: -5.201649188995361
    4. ' ' → logprob: -5.701649188995361
    5. ')' → logprob: -6.076649188995361
    6. ' :' → logprob: -6.326649188995361
    7. '    ' → logprob: -6.701649188995361
    8. '   ' → logprob: -6.701649188995361
    9. ',' → logprob: -6.701649188995361
    10. '_' → logprob: -6.951649188995361

Token 519: ' """
' (ID: 7037)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6434897184371948
    2. '       ' → logprob: -1.3934897184371948
    3. ' if' → logprob: -1.5184897184371948
    4. ')' → logprob: -5.143489837646484
    5. '   ' → logprob: -6.893489837646484
    6. 'key' → logprob: -9.518489837646484
    7. 'pass' → logprob: -9.768489837646484
    8. '    ' → logprob: -10.268489837646484
    9. '	if' → logprob: -10.268489837646484
    10. '        ' → logprob: -10.268489837646484

Token 520: '       ' (ID: 309)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.05111590027809143
    2. '       ' → logprob: -3.0511159896850586
    3. ' if' → logprob: -6.176115989685059
    4. '#' → logprob: -7.801115989685059
    5. ')' → logprob: -11.051115989685059
    6. '   ' → logprob: -11.676115989685059
    7. 'key' → logprob: -12.426115989685059
    8. 'indent' → logprob: -12.676115989685059
    9. '"""' → logprob: -12.801115989685059
    10. '           ' → logprob: -14.676115989685059

Token 521: ' :' (ID: 712)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.07129240036010742
    2. '       ' → logprob: -3.6962924003601074
    3. '"""' → logprob: -3.9462924003601074
    4. ' if' → logprob: -4.696292400360107
    5. '#' → logprob: -4.821292400360107
    6. ')' → logprob: -5.321292400360107
    7. 'If' → logprob: -6.321292400360107
    8. '   ' → logprob: -8.696292877197266
    9. '"""
' → logprob: -8.946292877197266
    10. 'pass' → logprob: -9.196292877197266

Token 522: 'param' (ID: 1355)
  Prédit: 'Returns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Returns' → logprob: -1.1920756101608276
    2. '"""' → logprob: -1.4420756101608276
    3. 'param' → logprob: -1.9420756101608276
    4. '"""
' → logprob: -2.317075729370117
    5. 'if' → logprob: -2.567075729370117
    6. 'return' → logprob: -3.442075729370117
    7. 'returns' → logprob: -3.567075729370117
    8. 'If' → logprob: -3.692075729370117
    9. 'This' → logprob: -3.817075729370117
    10. '       ' → logprob: -4.567075729370117

Token 523: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.0032889400608837605
    2. 'self' → logprob: -6.628288745880127
    3. 'int' → logprob: -6.753288745880127
    4. ' idx' → logprob: -7.253288745880127
    5. '       ' → logprob: -9.753289222717285
    6. '   ' → logprob: -11.878289222717285
    7. '	idx' → logprob: -12.378289222717285
    8. 'index' → logprob: -12.378289222717285
    9. '           ' → logprob: -12.753289222717285
    10. '
' → logprob: -13.378289222717285

Token 524: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3788815438747406
    2. ')' → logprob: -1.503881573677063
    3. '<|end|>' → logprob: -2.8788814544677734
    4. ' ,' → logprob: -4.253881454467773
    5. ':' → logprob: -4.378881454467773
    6. '):' → logprob: -5.253881454467773
    7. '<|end|>' → logprob: -6.503881454467773
    8. '   ' → logprob: -7.253881454467773
    9. ' )' → logprob: -7.378881454467773
    10. ',int' → logprob: -8.253881454467773

Token 525: ' index' (ID: 3472)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.16056692600250244
    2. ' int' → logprob: -1.9105669260025024
    3. ')' → logprob: -8.160567283630371
    4. '[int' → logprob: -10.160567283630371
    5. ' )' → logprob: -12.160567283630371
    6. '(int' → logprob: -12.410567283630371
    7. ':int' → logprob: -13.035567283630371
    8. ' ' → logprob: -13.535567283630371
    9. ',' → logprob: -14.535567283630371
    10. '   ' → logprob: -14.660567283630371

Token 526: ' of' (ID: 328)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 527: ' next' (ID: 2613)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.4875999391078949
    2. 'current' → logprob: -1.6125999689102173
    3. 'segment' → logprob: -2.2375998497009277
    4. 'next' → logprob: -3.4875998497009277
    5. 'course' → logprob: -4.362599849700928
    6. ' the' → logprob: -4.737599849700928
    7. 'Course' → logprob: -4.737599849700928
    8. '<|end|>' → logprob: -5.612599849700928
    9. ' current' → logprob: -5.987599849700928
    10. 'car' → logprob: -5.987599849700928

Token 528: ' carrot' (ID: 121234)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.1885995715856552
    2. ' segment' → logprob: -2.0635995864868164
    3. 'car' → logprob: -3.3135995864868164
    4. 'course' → logprob: -5.438599586486816
    5. ' course' → logprob: -6.188599586486816
    6. ' carrot' → logprob: -7.188599586486816
    7. ')' → logprob: -8.063599586486816
    8. 'position' → logprob: -8.688599586486816
    9. '_segment' → logprob: -9.188599586486816
    10. 'Course' → logprob: -9.688599586486816

Token 529: ' to' (ID: 316)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2574617564678192
    2. ' or' → logprob: -2.3824617862701416
    3. ' to' → logprob: -3.1324617862701416
    4. '):' → logprob: -3.5074617862701416
    5. '       ' → logprob: -4.0074615478515625
    6. '   ' → logprob: -4.6324615478515625
    7. '<|end|>' → logprob: -5.1324615478515625
    8. '):
' → logprob: -5.3824615478515625
    9. ',' → logprob: -5.7574615478515625
    10. ' in' → logprob: -6.0074615478515625

Token 530: ' consider' (ID: 3331)
  Prédit: 'eat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'eat' → logprob: -0.8259146809577942
    2. 'collect' → logprob: -1.5759146213531494
    3. 'visit' → logprob: -1.8259146213531494
    4. 'reach' → logprob: -2.0759146213531494
    5. 'run' → logprob: -3.7009146213531494
    6. 'pick' → logprob: -3.7009146213531494
    7. 'consider' → logprob: -4.7009148597717285
    8. 'go' → logprob: -6.3259148597717285
    9. 'consume' → logprob: -6.4509148597717285
    10. 'get' → logprob: -6.5759148597717285

Token 531: ' (' (ID: 350)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09664606302976608
    2. '<|end|>' → logprob: -3.0966460704803467
    3. '       ' → logprob: -3.8466460704803467
    4. ',' → logprob: -4.471645832061768
    5. '):' → logprob: -5.846645832061768
    6. ':' → logprob: -5.846645832061768
    7. '<|end|>' → logprob: -5.846645832061768
    8. '```' → logprob: -6.096645832061768
    9. '
' → logprob: -7.596645832061768
    10. '):
' → logprob: -7.596645832061768

Token 532: '0' (ID: 15)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8657129406929016
    2. ')
' → logprob: -0.9907129406929016
    3. 'int' → logprob: -2.115712881088257
    4. ' int' → logprob: -3.365712881088257
    5. 'the' → logprob: -4.490713119506836
    6. ' the' → logprob: -4.740713119506836
    7. ' or' → logprob: -4.990713119506836
    8. '       ' → logprob: -5.240713119506836
    9. 'stored' → logprob: -5.865713119506836
    10. ',' → logprob: -6.365713119506836

Token 533: '-based' (ID: 8235)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3106756806373596
    2. '):' → logprob: -2.310675621032715
    3. ',' → logprob: -2.685675621032715
    4. ' or' → logprob: -3.685675621032715
    5. '+' → logprob: -3.810675621032715
    6. ' if' → logprob: -4.310675621032715
    7. '   ' → logprob: -4.560675621032715
    8. ' +' → logprob: -5.185675621032715
    9. '):
' → logprob: -5.310675621032715
    10. '       ' → logprob: -5.810675621032715

Token 534: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00263118464499712
    2. ')
' → logprob: -6.127631187438965
    3. '):' → logprob: -8.127631187438965
    4. ',' → logprob: -10.002631187438965
    5. '):
' → logprob: -10.002631187438965
    6. ')
' → logprob: -11.002631187438965
    7. '       ' → logprob: -11.127631187438965
    8. '   ' → logprob: -12.252631187438965
    9. ' )' → logprob: -12.627631187438965
    10. '<|end|>' → logprob: -12.877631187438965

Token 535: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.46846792101860046
    2. ')' → logprob: -1.0934679508209229
    3. '<|end|>' → logprob: -3.593467950820923
    4. ',' → logprob: -5.218467712402344
    5. '):
' → logprob: -6.718467712402344
    6. '<|end|>' → logprob: -6.968467712402344
    7. '):' → logprob: -7.093467712402344
    8. '   ' → logprob: -7.468467712402344
    9. ' 
' → logprob: -7.718467712402344
    10. ' ' → logprob: -7.968467712402344

Token 536: ' :' (ID: 712)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02864748053252697
    2. ')' → logprob: -5.028647422790527
    3. ' if' → logprob: -5.028647422790527
    4. 'if' → logprob: -5.403647422790527
    5. '"""
' → logprob: -5.653647422790527
    6. '"""' → logprob: -5.903647422790527
    7. '        
' → logprob: -6.653647422790527
    8. ',' → logprob: -6.778647422790527
    9. 'If' → logprob: -7.653647422790527
    10. '
' → logprob: -8.153647422790527

Token 537: 'param' (ID: 1355)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.6318575143814087
    2. 'returns' → logprob: -1.7568575143814087
    3. 'param' → logprob: -1.7568575143814087
    4. ')' → logprob: -3.506857395172119
    5. 'current' → logprob: -4.256857395172119
    6. 'Returns' → logprob: -4.256857395172119
    7. ':return' → logprob: -4.381857395172119
    8. '       ' → logprob: -4.506857395172119
    9. 'car' → logprob: -4.881857395172119
    10. 'if' → logprob: -5.006857395172119

Token 538: ' carrots' (ID: 91266)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'position' → logprob: -0.8400986790657043
    2. ' position' → logprob: -1.3400986194610596
    3. 'current' → logprob: -2.3400986194610596
    4. 'distance' → logprob: -2.8400986194610596
    5. ' current' → logprob: -3.0900986194610596
    6. 'pos' → logprob: -3.2150986194610596
    7. 'car' → logprob: -3.7150986194610596
    8. 'time' → logprob: -4.090098857879639
    9. ' distance' → logprob: -4.340098857879639
    10. ' time' → logprob: -6.090098857879639

Token 539: '_car' (ID: 62991)
  Prédit: '_car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_car' → logprob: -0.07360228896141052
    2. 'Car' → logprob: -3.9486021995544434
    3. 'car' → logprob: -4.448602199554443
    4. ')' → logprob: -4.948602199554443
    5. ',' → logprob: -4.948602199554443
    6. '_c' → logprob: -5.448602199554443
    7. '_' → logprob: -5.573602199554443
    8. '):' → logprob: -5.573602199554443
    9. '   ' → logprob: -6.198602199554443
    10. ' carried' → logprob: -6.698602199554443

Token 540: 'ried' (ID: 6089)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.21606425940990448
    2. '_car' → logprob: -1.841064214706421
    3. 'ried' → logprob: -4.591064453125
    4. '   ' → logprob: -5.091064453125
    5. 'ar' → logprob: -5.091064453125
    6. '_c' → logprob: -5.216064453125
    7. 'arr' → logprob: -6.716064453125
    8. '       ' → logprob: -6.716064453125
    9. ' ' → logprob: -7.591064453125
    10. 'r' → logprob: -7.591064453125

Token 541: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.27383098006248474
    2. ':' → logprob: -1.6488310098648071
    3. ')' → logprob: -3.2738308906555176
    4. '):' → logprob: -5.023830890655518
    5. '<|end|>' → logprob: -6.773830890655518
    6. ' ,' → logprob: -7.648830890655518
    7. ')>' → logprob: -8.648831367492676
    8. '):
' → logprob: -8.898831367492676
    9. ',
' → logprob: -8.898831367492676
    10. '<|end|>' → logprob: -9.148831367492676

Token 542: ' number' (ID: 2086)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.2825894355773926
    2. ' int' → logprob: -1.4075894355773926
    3. ')' → logprob: -7.157589435577393
    4. '<|end|>' → logprob: -8.157588958740234
    5. '[int' → logprob: -8.532588958740234
    6. 'car' → logprob: -10.032588958740234
    7. 'float' → logprob: -10.407588958740234
    8. ':int' → logprob: -10.532588958740234
    9. ' ' → logprob: -10.782588958740234
    10. ' )' → logprob: -11.532588958740234

Token 543: ' of' (ID: 328)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2022692859172821
    2. '_of' → logprob: -2.3272693157196045
    3. '=' → logprob: -3.4522693157196045
    4. 'of' → logprob: -3.5772693157196045
    5. ' of' → logprob: -3.8272693157196045
    6. ' )' → logprob: -6.702269077301025
    7. '_tokens' → logprob: -7.202269077301025
    8. ' ' → logprob: -8.202269554138184
    9. '_' → logprob: -8.452269554138184
    10. ',' → logprob: -8.577269554138184

Token 544: ' carrots' (ID: 91266)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.1066761240363121
    2. ' carrots' → logprob: -2.9816761016845703
    3. 'stored' → logprob: -3.4816761016845703
    4. ' stored' → logprob: -4.23167610168457
    5. ')' → logprob: -6.35667610168457
    6. ' ' → logprob: -7.10667610168457
    7. ' ' → logprob: -7.23167610168457
    8. ' )' → logprob: -7.73167610168457
    9. '<|end|>' → logprob: -7.98167610168457
    10. ' rabbits' → logprob: -8.60667610168457

Token 545: ' currently' (ID: 6821)
  Prédit: 'currently'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'currently' → logprob: -0.9312829971313477
    2. '<|end|>' → logprob: -1.8062829971313477
    3. ' currently' → logprob: -1.9312829971313477
    4. 'stored' → logprob: -2.0562829971313477
    5. ')' → logprob: -2.5562829971313477
    6. ',' → logprob: -3.8062829971313477
    7. ' stored' → logprob: -4.181282997131348
    8. ' in' → logprob: -4.806282997131348
    9. 'Currently' → logprob: -4.931282997131348
    10. '<|end|>' → logprob: -5.681282997131348

Token 546: ' carried' (ID: 18685)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.10105092078447342
    2. 'stored' → logprob: -3.101050853729248
    3. ' carried' → logprob: -3.726050853729248
    4. 'held' → logprob: -4.226050853729248
    5. 'being' → logprob: -5.226050853729248
    6. 'in' → logprob: -5.976050853729248
    7. ' in' → logprob: -6.976050853729248
    8. ' being' → logprob: -6.976050853729248
    9. ' stored' → logprob: -7.101050853729248
    10. ' held' → logprob: -7.601050853729248

Token 547: ' (' (ID: 350)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6661972403526306
    2. ',' → logprob: -1.0411972999572754
    3. '<|end|>' → logprob: -2.7911972999572754
    4. '       ' → logprob: -3.4161972999572754
    5. '<|end|>' → logprob: -3.9161972999572754
    6. '
' → logprob: -4.666197299957275
    7. '):' → logprob: -5.541197299957275
    8. '   ' → logprob: -6.166197299957275
    9. ',
' → logprob: -7.041197299957275
    10. '):
' → logprob: -7.416197299957275

Token 548: '0' (ID: 15)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006991353817284107
    2. 'int' → logprob: -5.256991386413574
    3. ' )' → logprob: -6.756991386413574
    4. ' int' → logprob: -8.256991386413574
    5. ')
' → logprob: -8.881991386413574
    6. '):
' → logprob: -9.381991386413574
    7. ',' → logprob: -10.631991386413574
    8. '<|end|>' → logprob: -11.131991386413574
    9. ' ' → logprob: -11.631991386413574
    10. '),' → logprob: -11.631991386413574

Token 549: ' to' (ID: 316)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004225847311317921
    2. ' )' → logprob: -6.379225730895996
    3. ',' → logprob: -6.879225730895996
    4. '):' → logprob: -7.504225730895996
    5. '):
' → logprob: -8.129225730895996
    6. '),' → logprob: -8.879225730895996
    7. '<|end|>' → logprob: -8.879225730895996
    8. ' or' → logprob: -9.379225730895996
    9. '   ' → logprob: -9.504225730895996
    10. ')
' → logprob: -10.504225730895996

Token 550: ' K' (ID: 658)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0004017137107439339
    2. ' self' → logprob: -8.000401496887207
    3. 'storage' → logprob: -10.250401496887207
    4. ')' → logprob: -11.125401496887207
    5. '[self' → logprob: -12.500401496887207
    6. '
' → logprob: -13.125401496887207
    7. '```' → logprob: -13.750401496887207
    8. '       ' → logprob: -14.000401496887207
    9. '5' → logprob: -14.000401496887207
    10. '=self' → logprob: -14.000401496887207

Token 551: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004153310786932707
    2. ')
' → logprob: -5.504153251647949
    3. '   ' → logprob: -11.25415325164795
    4. '):
' → logprob: -11.25415325164795
    5. ' )' → logprob: -11.62915325164795
    6. '       ' → logprob: -11.62915325164795
    7. ',' → logprob: -12.12915325164795
    8. ')
' → logprob: -12.12915325164795
    9. ')

' → logprob: -12.12915325164795
    10. '+' → logprob: -12.25415325164795

Token 552: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08040640503168106
    2. ')' → logprob: -2.705406427383423
    3. '   ' → logprob: -5.580406188964844
    4. ',' → logprob: -6.080406188964844
    5. ')
' → logprob: -6.580406188964844
    6. '```' → logprob: -6.830406188964844
    7. '<|end|>' → logprob: -7.330406188964844
    8. '):
' → logprob: -8.080406188964844
    9. '        
' → logprob: -8.455406188964844
    10. '
' → logprob: -8.705406188964844

Token 553: ' :' (ID: 712)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09524372220039368
    2. ')' → logprob: -3.2202436923980713
    3. ' if' → logprob: -3.8452436923980713
    4. '
' → logprob: -4.59524393081665
    5. ',' → logprob: -5.09524393081665
    6. 'if' → logprob: -6.09524393081665
    7. '   ' → logprob: -6.22024393081665
    8. '"""
' → logprob: -6.59524393081665
    9. '):
' → logprob: -6.72024393081665
    10. ')
' → logprob: -6.72024393081665

Token 554: 'param' (ID: 1355)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.7192891836166382
    2. 'current' → logprob: -1.7192891836166382
    3. 'last' → logprob: -2.0942893028259277
    4. ')' → logprob: -2.3442893028259277
    5. '#' → logprob: -3.5942893028259277
    6. 'N' → logprob: -3.8442893028259277
    7. 'car' → logprob: -4.219289302825928
    8. 'self' → logprob: -4.969289302825928
    9. '...' → logprob: -5.594289302825928
    10. 'idx' → logprob: -5.594289302825928

Token 555: ' last' (ID: 2174)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.7541213035583496
    2. 'last' → logprob: -1.6291213035583496
    3. 'distance' → logprob: -2.3791213035583496
    4. 'position' → logprob: -2.5041213035583496
    5. 'current' → logprob: -2.8791213035583496
    6. 'pos' → logprob: -3.1291213035583496
    7. ' last' → logprob: -4.00412130355835
    8. ' time' → logprob: -4.37912130355835
    9. ' position' → logprob: -5.00412130355835
    10. ' distance' → logprob: -5.50412130355835

Token 556: '_car' (ID: 62991)
  Prédit: '_car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_car' → logprob: -0.006375936791300774
    2. '_' → logprob: -5.131375789642334
    3. '_token' → logprob: -8.256376266479492
    4. '_c' → logprob: -9.881376266479492
    5. 'Car' → logprob: -10.256376266479492
    6. '_time' → logprob: -11.381376266479492
    7. ' _' → logprob: -11.506376266479492
    8. ')' → logprob: -11.631376266479492
    9. ')_' → logprob: -11.631376266479492
    10. '_space' → logprob: -11.756376266479492

Token 557: 'rot' (ID: 8150)
  Prédit: '_car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_car' → logprob: -0.04664096608757973
    2. 'car' → logprob: -4.046640872955322
    3. 'rot' → logprob: -4.171640872955322
    4. '_rot' → logprob: -5.796640872955322
    5. '_' → logprob: -5.921640872955322
    6. '_token' → logprob: -6.046640872955322
    7. ' carrot' → logprob: -7.546640872955322
    8. 'ot' → logprob: -7.671640872955322
    9. 'ort' → logprob: -7.921640872955322
    10. '__' → logprob: -8.42164134979248

Token 558: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.00032247265335172415
    2. '_' → logprob: -8.625322341918945
    3. '_idx' → logprob: -10.500322341918945
    4. '_pos' → logprob: -10.875322341918945
    5. '_position' → logprob: -10.875322341918945
    6. '_index' → logprob: -11.625322341918945
    7. ' _' → logprob: -11.625322341918945
    8. 'Time' → logprob: -11.625322341918945
    9. '_times' → logprob: -12.125322341918945
    10. ')_' → logprob: -12.125322341918945

Token 559: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.011306343600153923
    2. '):' → logprob: -5.136306285858154
    3. ')' → logprob: -5.761306285858154
    4. ',' → logprob: -6.886306285858154
    5. ' :' → logprob: -7.261306285858154
    6. '):
' → logprob: -8.011306762695312
    7. '   ' → logprob: -10.511306762695312
    8. ' ):' → logprob: -10.761306762695312
    9. ':int' → logprob: -11.011306762695312
    10. ' )' → logprob: -11.136306762695312

Token 560: ' time' (ID: 1058)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.08898591250181198
    2. ' float' → logprob: -2.4639859199523926
    3. 'time' → logprob: -10.838985443115234
    4. ')' → logprob: -11.463985443115234
    5. ' time' → logprob: -12.463985443115234
    6. '(float' → logprob: -12.963985443115234
    7. '=float' → logprob: -13.713985443115234
    8. 'flo' → logprob: -13.713985443115234
    9. '<float' → logprob: -13.838985443115234
    10. 'The' → logprob: -14.088985443115234

Token 561: ' when' (ID: 1261)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11799535155296326
    2. '_since' → logprob: -2.742995262145996
    3. ',' → logprob: -4.242995262145996
    4. '):' → logprob: -4.867995262145996
    5. 'since' → logprob: -4.867995262145996
    6. ' since' → logprob: -5.242995262145996
    7. ':' → logprob: -5.492995262145996
    8. ' )' → logprob: -6.242995262145996
    9. '):
' → logprob: -7.117995262145996
    10. '=' → logprob: -7.367995262145996

Token 562: ' last' (ID: 2174)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.14999045431613922
    2. 'last' → logprob: -2.2749905586242676
    3. 'idx' → logprob: -5.024990558624268
    4. 'rabbit' → logprob: -5.274990558624268
    5. 'next' → logprob: -5.399990558624268
    6. 'car' → logprob: -5.524990558624268
    7. 'Rabbit' → logprob: -5.649990558624268
    8. 'self' → logprob: -5.649990558624268
    9. 'arr' → logprob: -6.399990558624268
    10. 'current' → logprob: -6.649990558624268

Token 563: ' carrot' (ID: 121234)
  Prédit: '_car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_car' → logprob: -0.2656553089618683
    2. '_' → logprob: -1.765655279159546
    3. '_col' → logprob: -3.765655279159546
    4. 'car' → logprob: -4.640655517578125
    5. '_e' → logprob: -4.890655517578125
    6. '_p' → logprob: -5.015655517578125
    7. '_taken' → logprob: -6.140655517578125
    8. '_received' → logprob: -6.390655517578125
    9. '_ob' → logprob: -6.890655517578125
    10. '_pick' → logprob: -7.015655517578125

Token 564: ' was' (ID: 673)
  Prédit: ' was'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' was' → logprob: -0.6089238524436951
    2. 'was' → logprob: -0.8589238524436951
    3. '_w' → logprob: -3.85892391204834
    4. ')' → logprob: -5.23392391204834
    5. '       ' → logprob: -6.48392391204834
    6. '_col' → logprob: -7.23392391204834
    7. 'col' → logprob: -7.85892391204834
    8. 'got' → logprob: -7.98392391204834
    9. '_' → logprob: -8.10892391204834
    10. '```' → logprob: -8.10892391204834

Token 565: ' eaten' (ID: 56450)
  Prédit: 'col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'col' → logprob: -0.9458923935890198
    2. 'picked' → logprob: -1.070892333984375
    3. 'obt' → logprob: -1.820892333984375
    4. 'e' → logprob: -2.820892333984375
    5. 'got' → logprob: -4.820892333984375
    6. 'car' → logprob: -4.820892333984375
    7. 'found' → logprob: -4.945892333984375
    8. 'ac' → logprob: -5.070892333984375
    9. 'taken' → logprob: -5.070892333984375
    10. 'last' → logprob: -5.320892333984375

Token 566: ' (' (ID: 350)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3589043617248535
    2. '       ' → logprob: -1.4839043617248535
    3. ' or' → logprob: -3.3589043617248535
    4. ',' → logprob: -3.9839043617248535
    5. ')
' → logprob: -4.9839043617248535
    6. '   ' → logprob: -5.8589043617248535
    7. '
' → logprob: -6.2339043617248535
    8. '<|end|>' → logprob: -6.2339043617248535
    9. '):
' → logprob: -6.3589043617248535
    10. '),' → logprob: -6.6089043617248535

Token 567: 'or' (ID: 267)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010666938498616219
    2. ' )' → logprob: -4.635666847229004
    3. ')
' → logprob: -8.635666847229004
    4. ' None' → logprob: -8.760666847229004
    5. ' or' → logprob: -9.135666847229004
    6. 'None' → logprob: -9.135666847229004
    7. ' )
' → logprob: -10.260666847229004
    8. '):' → logprob: -10.510666847229004
    9. 'or' → logprob: -10.510666847229004
    10. ' in' → logprob: -10.760666847229004

Token 568: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.9169400930404663
    2. 'current' → logprob: -1.4169400930404663
    3. '0' → logprob: -1.5419400930404663
    4. 'None' → logprob: -2.791940212249756
    5. '-current' → logprob: -2.916940212249756
    6. 'last' → logprob: -4.416940212249756
    7. '-last' → logprob: -4.541940212249756
    8. 'float' → logprob: -5.916940212249756
    9. '-c' → logprob: -7.166940212249756
    10. 'time' → logprob: -7.541940212249756

Token 569: 'inf' (ID: 22226)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5690089639974758e-05
    2. ' ' → logprob: -12.125015258789062
    3. 'inf' → logprob: -12.375015258789062
    4. 'float' → logprob: -12.500015258789062
    5. '   ' → logprob: -13.875015258789062
    6. '-' → logprob: -14.375015258789062
    7. '
' → logprob: -15.625015258789062
    8. '       ' → logprob: -15.875015258789062
    9. 'in' → logprob: -16.875015258789062
    10. 'math' → logprob: -16.875015258789062

Token 570: ' initially' (ID: 25998)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.16448017954826355
    2. ')' → logprob: -1.914480209350586
    3. 'if' → logprob: -5.539480209350586
    4. ' or' → logprob: -8.539480209350586
    5. ')
' → logprob: -10.164480209350586
    6. ' )' → logprob: -10.289480209350586
    7. '       ' → logprob: -10.914480209350586
    8. ',' → logprob: -11.664480209350586
    9. '),' → logprob: -12.039480209350586
    10. ')
' → logprob: -13.164480209350586

Token 571: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.023129817098379135
    2. ' if' → logprob: -4.023129940032959
    3. ')
' → logprob: -5.523129940032959
    4. '       ' → logprob: -8.0231294631958
    5. '):
' → logprob: -8.6481294631958
    6. ' )' → logprob: -8.7731294631958
    7. 'if' → logprob: -8.8981294631958
    8. '):' → logprob: -9.7731294631958
    9. ' or' → logprob: -9.8981294631958
    10. ',' → logprob: -10.7731294631958

Token 572: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3223302662372589
    2. ')' → logprob: -1.3223302364349365
    3. '   ' → logprob: -5.572330474853516
    4. '):' → logprob: -6.197330474853516
    5. ',' → logprob: -6.572330474853516
    6. '):
' → logprob: -7.322330474853516
    7. ')
' → logprob: -8.072330474853516
    8. '<|end|>' → logprob: -8.072330474853516
    9. '        
' → logprob: -9.447330474853516
    10. '
' → logprob: -9.572330474853516

Token 573: ' :' (ID: 712)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3659987449645996
    2. '       ' → logprob: -1.3659987449645996
    3. '   ' → logprob: -3.3659987449645996
    4. '):' → logprob: -4.6159987449646
    5. '):
' → logprob: -5.4909987449646
    6. ' )' → logprob: -7.2409987449646
    7. ')
' → logprob: -7.3659987449646
    8. '"""' → logprob: -7.6159987449646
    9. ',' → logprob: -8.365999221801758
    10. '```' → logprob: -8.865999221801758

Token 574: 'param' (ID: 1355)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6428623199462891
    2. '   ' → logprob: -1.642862319946289
    3. 'current' → logprob: -1.892862319946289
    4. '       ' → logprob: -2.517862319946289
    5. '
' → logprob: -4.517862319946289
    6. '):
' → logprob: -4.892862319946289
    7. 'if' → logprob: -5.017862319946289
    8. 'car' → logprob: -5.517862319946289
    9. 'return' → logprob: -5.517862319946289
    10. '):' → logprob: -5.767862319946289

Token 575: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.8723165392875671
    2. 'position' → logprob: -1.122316598892212
    3. 'distance' → logprob: -2.497316598892212
    4. ' current' → logprob: -2.997316598892212
    5. ' position' → logprob: -3.372316598892212
    6. 'pos' → logprob: -3.747316598892212
    7. 'last' → logprob: -3.872316598892212
    8. 'time' → logprob: -4.247316360473633
    9. ' distance' → logprob: -4.872316360473633
    10. 'car' → logprob: -5.247316360473633

Token 576: '_time' (ID: 6425)
  Prédit: '_position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_position' → logprob: -0.43551644682884216
    2. '_time' → logprob: -1.1855164766311646
    3. '_pos' → logprob: -3.560516357421875
    4. '_' → logprob: -5.060516357421875
    5. '_speed' → logprob: -5.435516357421875
    6. '_distance' → logprob: -5.935516357421875
    7. '_point' → logprob: -6.185516357421875
    8. '_location' → logprob: -7.060516357421875
    9. '_car' → logprob: -7.185516357421875
    10. '_token' → logprob: -8.310516357421875

Token 577: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.22209569811820984
    2. ')' → logprob: -1.9720957279205322
    3. '):' → logprob: -2.8470957279205322
    4. ',' → logprob: -6.597095489501953
    5. '):
' → logprob: -7.972095489501953
    6. ' )' → logprob: -9.472095489501953
    7. '   ' → logprob: -9.597095489501953
    8. ' ):' → logprob: -10.097095489501953
    9. ' :' → logprob: -10.847095489501953
    10. '):

' → logprob: -11.472095489501953

Token 578: ' accumulated' (ID: 64757)
  Prédit: ' float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.3530113995075226
    2. 'float' → logprob: -1.2280113697052002
    3. ' current' → logprob: -5.603011608123779
    4. 'current' → logprob: -7.728011608123779
    5. ' time' → logprob: -9.478011131286621
    6. ')' → logprob: -9.728011131286621
    7. ':' → logprob: -9.978011131286621
    8. 'time' → logprob: -10.228011131286621
    9. ' ' → logprob: -10.478011131286621
    10. '       ' → logprob: -10.603011131286621

Token 579: ' time' (ID: 1058)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -1.1935677528381348
    2. ')' → logprob: -1.3185677528381348
    3. 'distance' → logprob: -2.0685677528381348
    4. 'time' → logprob: -2.8185677528381348
    5. '_distance' → logprob: -2.8185677528381348
    6. ' )' → logprob: -3.1935677528381348
    7. '_' → logprob: -3.3185677528381348
    8. '_running' → logprob: -3.9435677528381348
    9. ' time' → logprob: -4.068567752838135
    10. 'position' → logprob: -4.193567752838135

Token 580: ' spent' (ID: 11228)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.27620944380760193
    2. '):' → logprob: -1.9012094736099243
    3. '   ' → logprob: -3.1512093544006348
    4. '       ' → logprob: -3.4012093544006348
    5. '):
' → logprob: -4.526209354400635
    6. '
' → logprob: -6.026209354400635
    7. ',' → logprob: -7.401209354400635
    8. ':' → logprob: -7.526209354400635
    9. ' )' → logprob: -7.651209354400635
    10. '<|end|>' → logprob: -8.901209831237793

Token 581: ' so' (ID: 813)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3149260878562927
    2. '):
' → logprob: -2.0649261474609375
    3. '       ' → logprob: -2.8149261474609375
    4. '):' → logprob: -2.9399261474609375
    5. '   ' → logprob: -4.5649261474609375
    6. ',' → logprob: -4.9399261474609375
    7. ')
' → logprob: -5.1899261474609375
    8. ' at' → logprob: -6.4399261474609375
    9. ' )' → logprob: -7.1899261474609375
    10. ' to' → logprob: -7.1899261474609375

Token 582: ' far' (ID: 4150)
  Prédit: 'far'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'far' → logprob: -0.0005856798379682004
    2. '_far' → logprob: -7.500585556030273
    3. ' far' → logprob: -11.625585556030273
    4. 'Far' → logprob: -12.000585556030273
    5. '   ' → logprob: -12.125585556030273
    6. 'f' → logprob: -12.250585556030273
    7. '_' → logprob: -14.125585556030273
    8. 'r' → logprob: -14.250585556030273
    9. ' ' → logprob: -14.250585556030273
    10. '       ' → logprob: -14.375585556030273

Token 583: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18503499031066895
    2. '   ' → logprob: -2.185034990310669
    3. '):
' → logprob: -3.310034990310669
    4. '):' → logprob: -4.06003475189209
    5. '       ' → logprob: -6.68503475189209
    6. '
' → logprob: -6.93503475189209
    7. ' )' → logprob: -8.68503475189209
    8. ',' → logprob: -9.43503475189209
    9. ')
' → logprob: -10.43503475189209
    10. '    
' → logprob: -10.68503475189209

Token 584: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5448684692382812
    2. '       ' → logprob: -1.2948684692382812
    3. '   ' → logprob: -2.1698684692382812
    4. '):' → logprob: -3.5448684692382812
    5. '<|end|>' → logprob: -7.169868469238281
    6. '):
' → logprob: -7.669868469238281
    7. ',' → logprob: -7.669868469238281
    8. ':' → logprob: -8.044868469238281
    9. '    ' → logprob: -8.294868469238281
    10. ' )' → logprob: -8.919868469238281

Token 585: ' :' (ID: 712)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4879013001918793
    2. ')' → logprob: -1.1129013299942017
    3. '):' → logprob: -3.362901210784912
    4. '   ' → logprob: -4.487901210784912
    5. '):
' → logprob: -4.862901210784912
    6. '"""' → logprob: -6.237901210784912
    7. '```' → logprob: -7.737901210784912
    8. '")' → logprob: -8.61290168762207
    9. ' )' → logprob: -8.73790168762207
    10. '
' → logprob: -8.86290168762207

Token 586: 'return' (ID: 1034)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6520845890045166
    2. 'float' → logprob: -0.7770845890045166
    3. 'return' → logprob: -5.4020843505859375
    4. '):
' → logprob: -5.6520843505859375
    5. '   ' → logprob: -6.1520843505859375
    6. 'if' → logprob: -6.4020843505859375
    7. ')->' → logprob: -6.9020843505859375
    8. '->' → logprob: -7.0270843505859375
    9. '"""
' → logprob: -7.4020843505859375
    10. '"""' → logprob: -7.4020843505859375

Token 587: ':' (ID: 25)
  Prédit: ' float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.07100685685873032
    2. ':' → logprob: -3.4460067749023438
    3. 'float' → logprob: -3.4460067749023438
    4. '=float' → logprob: -6.446006774902344
    5. '       ' → logprob: -6.696006774902344
    6. ' ' → logprob: -8.446006774902344
    7. ' the' → logprob: -8.571006774902344
    8. '0' → logprob: -8.821006774902344
    9. ' current' → logprob: -8.946006774902344
    10. '    ' → logprob: -8.946006774902344

Token 588: ' minimal' (ID: 19957)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.0031837786082178354
    2. ' float' → logprob: -5.753183841705322
    3. '       ' → logprob: -12.628183364868164
    4. 'The' → logprob: -13.753183364868164
    5. 'Minimum' → logprob: -14.878183364868164
    6. 'minimum' → logprob: -15.003183364868164
    7. '   ' → logprob: -15.128183364868164
    8. 'Minimal' → logprob: -15.378183364868164
    9. '	float' → logprob: -15.753183364868164
    10. 'minimal' → logprob: -16.628183364868164

Token 589: ' time' (ID: 1058)
  Prédit: ' time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' time' → logprob: -0.7287237644195557
    2. 'time' → logprob: -0.7287237644195557
    3. '_time' → logprob: -3.6037237644195557
    4. ' total' → logprob: -5.353723526000977
    5. 'total' → logprob: -6.728723526000977
    6. '_' → logprob: -7.978723526000977
    7. ' remaining' → logprob: -8.228723526000977
    8. ' float' → logprob: -8.478723526000977
    9. 'remaining' → logprob: -8.603723526000977
    10. ' completion' → logprob: -8.728723526000977

Token 590: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.14363572001457214
    2. '       ' → logprob: -2.3936357498168945
    3. '_to' → logprob: -3.8936357498168945
    4. 'to' → logprob: -4.7686357498168945
    5. '   ' → logprob: -5.1436357498168945
    6. '
' → logprob: -6.0186357498168945
    7. '  ' → logprob: -7.3936357498168945
    8. '        
' → logprob: -7.5186357498168945
    9. '<|end|>' → logprob: -7.5186357498168945
    10. 'To' → logprob: -7.6436357498168945

Token 591: ' reach' (ID: 7627)
  Prédit: 'complete'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reach' → logprob: -1.3037707805633545
    2. 'complete' → logprob: -1.3037707805633545
    3. 'finish' → logprob: -1.3037707805633545
    4. ' reach' → logprob: -2.1787707805633545
    5. ' complete' → logprob: -2.9287707805633545
    6. ' finish' → logprob: -4.178771018981934
    7. '_finish' → logprob: -7.178771018981934
    8. 'run' → logprob: -7.428771018981934
    9. '_complete' → logprob: -7.553771018981934
    10. '```' → logprob: -7.928771018981934

Token 592: ' goal' (ID: 8583)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3974035382270813
    2. 'idx' → logprob: -1.5224034786224365
    3. ' self' → logprob: -3.2724034786224365
    4. 'the' → logprob: -3.7724034786224365
    5. ' the' → logprob: -3.8974034786224365
    6. ' idx' → logprob: -4.022403717041016
    7. 'end' → logprob: -5.147403717041016
    8. 'next' → logprob: -6.522403717041016
    9. ' next' → logprob: -7.647403717041016
    10. '(self' → logprob: -7.647403717041016

Token 593: ' from' (ID: 591)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5087683200836182
    2. ')' → logprob: -1.2587683200836182
    3. ' from' → logprob: -3.258768320083618
    4. '
' → logprob: -3.633768320083618
    5. 'from' → logprob: -3.758768320083618
    6. '   ' → logprob: -4.758768081665039
    7. ',' → logprob: -5.633768081665039
    8. ' if' → logprob: -6.133768081665039
    9. '):
' → logprob: -6.133768081665039
    10. ')
' → logprob: -6.258768081665039

Token 594: ' current' (ID: 2208)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.5766801834106445
    2. ' idx' → logprob: -0.8266801834106445
    3. ' here' → logprob: -8.451680183410645
    4. 'index' → logprob: -9.201680183410645
    5. '(idx' → logprob: -9.201680183410645
    6. ' current' → logprob: -9.576680183410645
    7. ' index' → logprob: -10.201680183410645
    8. 'here' → logprob: -10.201680183410645
    9. '_idx' → logprob: -10.451680183410645
    10. 'current' → logprob: -10.951680183410645

Token 595: ' state' (ID: 2608)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -1.3954726457595825
    2. 'position' → logprob: -1.6454726457595825
    3. ' idx' → logprob: -1.7704726457595825
    4. ' position' → logprob: -1.7704726457595825
    5. '_idx' → logprob: -3.270472526550293
    6. ')' → logprob: -3.520472526550293
    7. 'point' → logprob: -3.770472526550293
    8. ' point' → logprob: -3.770472526550293
    9. '_position' → logprob: -3.770472526550293
    10. 'state' → logprob: -4.020472526550293

Token 596: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7227488160133362
    2. '       ' → logprob: -0.7227488160133362
    3. '<|end|>' → logprob: -4.722748756408691
    4. '
' → logprob: -4.972748756408691
    5. '   ' → logprob: -5.597748756408691
    6. '):
' → logprob: -6.097748756408691
    7. '}' → logprob: -6.597748756408691
    8. '        
' → logprob: -7.097748756408691
    9. '):' → logprob: -7.222748756408691
    10. '<|end|>' → logprob: -7.222748756408691

Token 597: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5274164080619812
    2. '       ' → logprob: -1.027416467666626
    3. '):' → logprob: -3.527416467666626
    4. '   ' → logprob: -4.152416229248047
    5. ':' → logprob: -5.652416229248047
    6. ',' → logprob: -7.152416229248047
    7. '):
' → logprob: -7.527416229248047
    8. '    ' → logprob: -7.902416229248047
    9. '<|end|>' → logprob: -8.527416229248047
    10. '#' → logprob: -8.777416229248047

Token 598: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2115359902381897
    2. ')' → logprob: -1.836535930633545
    3. '   ' → logprob: -3.961535930633545
    4. '):' → logprob: -4.711535930633545
    5. 'if' → logprob: -7.086535930633545
    6. '"' → logprob: -7.961535930633545
    7. '"""' → logprob: -7.961535930633545
    8. '    ' → logprob: -8.336536407470703
    9. '):
' → logprob: -8.461536407470703
    10. ' if' → logprob: -8.961536407470703

Token 599: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0063267904333770275
    2. ')' → logprob: -6.131326675415039
    3. '   ' → logprob: -6.631326675415039
    4. ',' → logprob: -7.756326675415039
    5. ' key' → logprob: -7.756326675415039
    6. '    ' → logprob: -8.131326675415039
    7. ' if' → logprob: -8.256326675415039
    8. ' ' → logprob: -8.506326675415039
    9. '<|end|>' → logprob: -8.506326675415039
    10. '#' → logprob: -8.631326675415039

Token 600: ' key' (ID: 2140)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' (adapté à ' key') → logprob: -0.014165041036903858
    2. 'if' → logprob: -5.264164924621582
    3. 'state' → logprob: -5.514164924621582
    4. ' key' → logprob: -5.764164924621582
    5. '       ' → logprob: -6.389164924621582
    6. ' if' → logprob: -10.389164924621582
    7. '   ' → logprob: -12.139164924621582
    8. '#' → logprob: -12.514164924621582
    9. ')' → logprob: -13.639164924621582
    10. '_key' → logprob: -14.014164924621582

Token 601: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04858884960412979
    2. ' =' → logprob: -3.048588752746582
    3. ',' → logprob: -14.423588752746582
    4. '=
' → logprob: -14.673588752746582
    5. '=(' → logprob: -15.298588752746582
    6. '<|end|>' → logprob: -16.6735897064209
    7. ')' → logprob: -16.9235897064209
    8. '＝' → logprob: -16.9235897064209
    9. ')=' → logprob: -17.0485897064209
    10. ' =(' → logprob: -17.1735897064209

Token 602: ' (' (ID: 350)
  Prédit: '(idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(idx' → logprob: -0.0005594660760834813
    2. ' (' → logprob: -7.500559329986572
    3. '(index' → logprob: -12.75055980682373
    4. '(id' → logprob: -13.12555980682373
    5. '(' → logprob: -14.25055980682373
    6. '   ' → logprob: -14.50055980682373
    7. '[idx' → logprob: -15.75055980682373
    8. '(ix' → logprob: -15.75055980682373
    9. '(ii' → logprob: -17.375558853149414
    10. '(i' → logprob: -17.375558853149414

Token 603: 'idx' (ID: 13196)
  Prédit: 'idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -4.320199877838604e-07
    2. ' idx' → logprob: -14.875
    3. '   ' → logprob: -18.0
    4. 'index' → logprob: -18.5
    5. '(idx' → logprob: -18.75
    6. '	idx' → logprob: -19.5
    7. '
' → logprob: -19.625
    8. ' ' → logprob: -19.875
    9. 'id' → logprob: -20.0
    10. ')' → logprob: -20.5

Token 604: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.191489642835222e-05
    2. ' ,' → logprob: -10.250041961669922
    3. ',
' → logprob: -12.250041961669922
    4. '‌,' → logprob: -14.000041961669922
    5. '<|end|>' → logprob: -14.375041961669922
    6. ',c' → logprob: -17.250041961669922
    7. '‍,' → logprob: -17.375041961669922
    8. ',k' → logprob: -17.375041961669922
    9. ',int' → logprob: -17.500041961669922
    10. ',\
' → logprob: -17.500041961669922

Token 605: ' carrots' (ID: 91266)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.020561860874295235
    2. ' carrots' → logprob: -3.895561933517456
    3. 'c' → logprob: -12.145562171936035
    4. 'cars' → logprob: -12.270562171936035
    5. ' ' → logprob: -12.770562171936035
    6. ' carrot' → logprob: -13.020562171936035
    7. '```' → logprob: -14.520562171936035
    8. ' carot' → logprob: -14.520562171936035
    9. '_car' → logprob: -14.645562171936035
    10. 'care' → logprob: -14.645562171936035

Token 606: '_car' (ID: 62991)
  Prédit: '_car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_car' → logprob: -2.9040898880339228e-05
    2. 'car' → logprob: -11.250028610229492
    3. ',' → logprob: -11.500028610229492
    4. 'Car' → logprob: -13.500028610229492
    5. '_,' → logprob: -13.625028610229492
    6. ')' → logprob: -14.125028610229492
    7. '_c' → logprob: -14.250028610229492
    8. '_' → logprob: -15.000028610229492
    9. ',_' → logprob: -15.250028610229492
    10. '[' → logprob: -15.375028610229492

Token 607: 'ried' (ID: 6089)
  Prédit: 'ried'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ried' → logprob: -0.2581586241722107
    2. 'r' → logprob: -1.5081586837768555
    3. 'ar' → logprob: -5.7581586837768555
    4. 'ied' → logprob: -6.0081586837768555
    5. '_' → logprob: -8.508158683776855
    6. 'rr' → logprob: -9.133158683776855
    7. 'd' → logprob: -10.758158683776855
    8. '```' → logprob: -10.758158683776855
    9. '[' → logprob: -11.008158683776855
    10. 'car' → logprob: -11.258158683776855

Token 608: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.368984107510187e-05
    2. ' ,' → logprob: -10.625033378601074
    3. ',
' → logprob: -11.875033378601074
    4. ')' → logprob: -13.750033378601074
    5. '<|end|>' → logprob: -14.125033378601074
    6. ',)' → logprob: -15.750033378601074
    7. '‌,' → logprob: -16.12503433227539
    8. ',float' → logprob: -16.25003433227539
    9. ',

' → logprob: -16.37503433227539
    10. '),' → logprob: -17.62503433227539

Token 609: ' last' (ID: 2174)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.08940886706113815
    2. 'round' → logprob: -2.4644088745117188
    3. 'int' → logprob: -8.714408874511719
    4. ' last' → logprob: -8.714408874511719
    5. ' round' → logprob: -9.839408874511719
    6. '
' → logprob: -10.339408874511719
    7. 'float' → logprob: -11.089408874511719
    8. ')' → logprob: -11.464408874511719
    9. '(last' → logprob: -12.089408874511719
    10. ')
' → logprob: -12.464408874511719

Token 610: '_car' (ID: 62991)
  Prédit: '_car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_car' → logprob: -0.0012364183785393834
    2. '_' → logprob: -6.876236438751221
    3. ')_' → logprob: -9.626235961914062
    4. ')' → logprob: -10.001235961914062
    5. 'Car' → logprob: -10.251235961914062
    6. '_)' → logprob: -11.126235961914062
    7. '_c' → logprob: -11.126235961914062
    8. '_C' → logprob: -12.001235961914062
    9. 'car' → logprob: -12.126235961914062
    10. '_,' → logprob: -12.876235961914062

Token 611: 'rot' (ID: 8150)
  Prédit: 'rot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rot' → logprob: -0.04438744857907295
    2. 'ot' → logprob: -3.2943873405456543
    3. '_rot' → logprob: -5.294387340545654
    4. 'ort' → logprob: -7.419387340545654
    5. 't' → logprob: -8.794387817382812
    6. 'or' → logprob: -9.794387817382812
    7. '_time' → logprob: -10.169387817382812
    8. 'ro' → logprob: -10.294387817382812
    9. 'got' → logprob: -10.419387817382812
    10. 'pot' → logprob: -10.419387817382812

Token 612: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -2.6537622034084052e-05
    2. '_t' → logprob: -11.12502670288086
    3. '_' → logprob: -12.25002670288086
    4. 'time' → logprob: -13.00002670288086
    5. '_times' → logprob: -13.62502670288086
    6. ')_' → logprob: -14.37502670288086
    7. 'Time' → logprob: -14.75002670288086
    8. ' _' → logprob: -15.00002670288086
    9. ')' → logprob: -15.37502670288086
    10. '
' → logprob: -15.62502670288086

Token 613: ')
' (ID: 446)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.062206536531448364
    2. ')' → logprob: -2.812206506729126
    3. ' ,' → logprob: -9.312206268310547
    4. ',)' → logprob: -10.187206268310547
    5. ' )' → logprob: -10.312206268310547
    6. '<|end|>' → logprob: -10.437206268310547
    7. ',
' → logprob: -10.562206268310547
    8. '<|end|>' → logprob: -13.187206268310547
    9. ',float' → logprob: -13.312206268310547
    10. ',current' → logprob: -13.312206268310547

Token 614: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7837217450141907
    2. ':' → logprob: -1.033721685409546
    3. ')' → logprob: -2.033721685409546
    4. ',' → logprob: -4.033721923828125
    5. '<|end|>' → logprob: -4.283721923828125
    6. ' if' → logprob: -4.783721923828125
    7. ':
' → logprob: -5.533721923828125
    8. '
' → logprob: -5.658721923828125
    9. '<|end|>' → logprob: -6.033721923828125
    10. '   ' → logprob: -6.658721923828125

Token 615: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.8118078708648682
    2. 'if' (adapté à ' if') → logprob: -0.9368078708648682
    3. '       ' → logprob: -1.8118078708648682
    4. '<|end|>' → logprob: -8.061807632446289
    5. ')' → logprob: -8.561807632446289
    6. ':' → logprob: -9.686807632446289
    7. ',' → logprob: -9.936807632446289
    8. '.' → logprob: -11.186807632446289
    9. '<|end|>' → logprob: -11.311807632446289
    10. 'If' → logprob: -11.311807632446289

Token 616: ' key' (ID: 2140)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.07889209687709808
    2. ' key' → logprob: -2.5788919925689697
    3. '(key' → logprob: -13.20389175415039
    4. ' ' → logprob: -15.32889175415039
    5. '	key' → logprob: -16.57889175415039
    6. '_key' → logprob: -16.57889175415039
    7. ' (' → logprob: -16.95389175415039
    8. 'Key' → logprob: -17.45389175415039
    9. '
' → logprob: -17.70389175415039
    10. '[key' → logprob: -18.07889175415039

Token 617: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04485851526260376
    2. ' not' → logprob: -3.669858455657959
    3. 'in' → logprob: -4.169858455657959
    4. ')' → logprob: -6.919858455657959
    5. ' is' → logprob: -6.919858455657959
    6. 'not' → logprob: -7.669858455657959
    7. '<|end|>' → logprob: -7.919858455657959
    8. 'is' → logprob: -10.169858932495117
    9. '<|end|>' → logprob: -10.669858932495117
    10. '[' → logprob: -11.044858932495117

Token 618: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00014084660506341606
    2. ' self' → logprob: -8.875141143798828
    3. '       ' → logprob: -14.250141143798828
    4. '   ' → logprob: -16.000141143798828
    5. '
' → logprob: -16.625141143798828
    6. '(self' → logprob: -16.875141143798828
    7. '[self' → logprob: -18.125141143798828
    8. '           ' → logprob: -18.375141143798828
    9. '	self' → logprob: -18.500141143798828
    10. '        
' → logprob: -18.875141143798828

Token 619: '.memo' (ID: 161018)
  Prédit: '.memo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.memo' → logprob: -1.5094070477061905e-05
    2. '.' → logprob: -11.375015258789062
    3. 'memo' → logprob: -13.250015258789062
    4. '.memory' → logprob: -14.250015258789062
    5. '.mem' → logprob: -14.250015258789062
    6. '.m' → logprob: -15.375015258789062
    7. ' .' → logprob: -16.375015258789062
    8. '._' → logprob: -16.750015258789062
    9. '.
' → logprob: -17.250015258789062
    10. '.motor' → logprob: -17.875015258789062

Token 620: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0010480545461177826
    2. ':
' → logprob: -7.0010480880737305
    3. ':return' → logprob: -9.12604808807373
    4. '):' → logprob: -11.50104808807373
    5. '       ' → logprob: -12.00104808807373
    6. '<|end|>' → logprob: -12.87604808807373
    7. ' and' → logprob: -13.37604808807373
    8. '           ' → logprob: -13.37604808807373
    9. ' :' → logprob: -13.75104808807373
    10. '[' → logprob: -14.00104808807373

Token 621: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07247347384691238
    2. ':' → logprob: -2.6974735260009766
    3. '       ' → logprob: -6.822473526000977
    4. ':return' → logprob: -7.447473526000977
    5. 'return' → logprob: -7.947473526000977
    6. ':
' → logprob: -9.197473526000977
    7. '<|end|>' → logprob: -9.197473526000977
    8. ' return' → logprob: -9.447473526000977
    9. ',' → logprob: -10.197473526000977
    10. '):' → logprob: -10.572473526000977

Token 622: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.019172802567481995
    2. '           ' → logprob: -4.019172668457031
    3. ' return' → logprob: -6.894172668457031
    4. '       ' → logprob: -12.644172668457031
    5. '	return' → logprob: -13.269172668457031
    6. ':return' → logprob: -13.394172668457031
    7. '   ' → logprob: -13.769172668457031
    8. '{return' → logprob: -14.644172668457031
    9. ')return' → logprob: -15.394172668457031
    10. '               ' → logprob: -16.26917266845703

Token 623: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.014163628220558167
    2. ' self' → logprob: -4.264163494110107
    3. '[self' → logprob: -16.264163970947266
    4. '	self' → logprob: -16.514163970947266
    5. '(self' → logprob: -18.514163970947266
    6. '=self' → logprob: -18.889163970947266
    7. '       ' → logprob: -19.514163970947266
    8. '_self' → logprob: -19.764163970947266
    9. '   ' → logprob: -20.139163970947266
    10. '
' → logprob: -20.389163970947266

Token 624: '.memo' (ID: 161018)
  Prédit: '.memo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.memo' → logprob: -4.000763510703109e-05
    2. '.' → logprob: -10.375040054321289
    3. 'memo' → logprob: -12.250040054321289
    4. ' .' → logprob: -13.625040054321289
    5. '.mem' → logprob: -13.625040054321289
    6. '.memory' → logprob: -14.250040054321289
    7. '.motor' → logprob: -15.375040054321289
    8. '.m' → logprob: -15.500040054321289
    9. '.mime' → logprob: -15.500040054321289
    10. '.mu' → logprob: -17.12504005432129

Token 625: '[key' (ID: 16401)
  Prédit: '[key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[key' → logprob: -1.9361264946837764e-07
    2. '[' → logprob: -16.5
    3. '[
' → logprob: -19.25
    4. 'key' → logprob: -20.25
    5. '
' → logprob: -21.25
    6. ' [' → logprob: -22.375
    7. '(key' → logprob: -22.5
    8. '```' → logprob: -22.625
    9. '[k' → logprob: -22.75
    10. '][' → logprob: -24.25

Token 626: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00024406595912296325
    2. ']
' → logprob: -8.625244140625
    3. ']

' → logprob: -9.750244140625
    4. ' ]' → logprob: -12.500244140625
    5. ']


' → logprob: -14.875244140625
    6. '](' → logprob: -15.125244140625
    7. ']
' → logprob: -15.125244140625
    8. '],' → logprob: -15.375244140625
    9. ')' → logprob: -15.375244140625
    10. '   ' → logprob: -15.875244140625

Token 627: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2395705282688141
    2. ':' → logprob: -2.8645706176757812
    3. ' 
' → logprob: -2.8645706176757812
    4. '   ' → logprob: -3.6145706176757812
    5. '        
' → logprob: -4.364570617675781
    6. ' ' → logprob: -4.489570617675781
    7. ')' → logprob: -4.739570617675781
    8. '    
' → logprob: -4.989570617675781
    9. '
' → logprob: -5.114570617675781
    10. '_' → logprob: -5.489570617675781

Token 628: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0013228575699031353
    2. '#' (adapté à ' #') → logprob: -7.1263227462768555
    3. ' if' → logprob: -8.126322746276855
    4. 'import' → logprob: -9.876322746276855
    5. 'current' → logprob: -9.876322746276855
    6. 'distance' → logprob: -10.126322746276855
    7. '       ' → logprob: -10.751322746276855
    8. 'If' → logprob: -11.001322746276855
    9. 'segment' → logprob: -11.751322746276855
    10. 'position' → logprob: -11.751322746276855

Token 629: ' If' (ID: 1843)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0006777655798941851
    2. 'segment' → logprob: -8.125678062438965
    3. '#' → logprob: -8.875678062438965
    4. 'If' → logprob: -9.375678062438965
    5. 'distance' → logprob: -9.625678062438965
    6. ' if' → logprob: -10.375678062438965
    7. 'current' → logprob: -10.750678062438965
    8. 'position' → logprob: -12.000678062438965
    9. 'pos' → logprob: -12.250678062438965
    10. '```' → logprob: -12.500678062438965

Token 630: ' all' (ID: 722)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -7.553032628493384e-05
    2. ' idx' → logprob: -9.500075340270996
    3. '	idx' → logprob: -15.250075340270996
    4. '   ' → logprob: -16.125076293945312
    5. '(idx' → logprob: -16.500076293945312
    6. 'index' → logprob: -16.625076293945312
    7. '
' → logprob: -17.750076293945312
    8. '[idx' → logprob: -18.125076293945312
    9. 'self' → logprob: -18.125076293945312
    10. '  ' → logprob: -18.625076293945312

Token 631: ' carrots' (ID: 91266)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.4190322160720825
    2. 'car' → logprob: -1.6690322160720825
    3. 'segments' → logprob: -2.419032096862793
    4. '==' → logprob: -4.044032096862793
    5. ')' → logprob: -4.169032096862793
    6. 'indices' → logprob: -5.169032096862793
    7. '_idx' → logprob: -5.794032096862793
    8. ' idx' → logprob: -5.794032096862793
    9. '.' → logprob: -5.919032096862793
    10. '_' → logprob: -6.169032096862793

Token 632: ' considered' (ID: 9474)
  Prédit: 'have'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'have' → logprob: -0.35665246844291687
    2. 'are' → logprob: -2.2316524982452393
    3. '==' → logprob: -3.2316524982452393
    4. 'col' → logprob: -3.2316524982452393
    5. 'and' → logprob: -3.4816524982452393
    6. '>=' → logprob: -4.48165225982666
    7. ' have' → logprob: -4.48165225982666
    8. 'has' → logprob: -4.60665225982666
    9. 'e' → logprob: -4.98165225982666
    10. '<|end|>' → logprob: -5.23165225982666

Token 633: ',' (ID: 11)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.60455721616745
    2. ' and' → logprob: -0.85455721616745
    3. ' or' → logprob: -4.104557037353516
    4. 'if' → logprob: -4.979557037353516
    5. 'or' → logprob: -5.729557037353516
    6. ' if' → logprob: -7.479557037353516
    7. ':' → logprob: -7.854557037353516
    8. ',' → logprob: -7.979557037353516
    9. '==' → logprob: -8.604557037353516
    10. '       ' → logprob: -9.854557037353516

Token 634: ' just' (ID: 1327)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5174495577812195
    2. ' if' → logprob: -1.6424496173858643
    3. 'distance' → logprob: -2.3924496173858643
    4. 'return' → logprob: -2.5174496173858643
    5. '       ' → logprob: -4.767449378967285
    6. '#' → logprob: -4.767449378967285
    7. 'time' → logprob: -5.142449378967285
    8. ' return' → logprob: -5.392449378967285
    9. 'segment' → logprob: -5.767449378967285
    10. 'position' → logprob: -6.267449378967285

Token 635: ' run' (ID: 2461)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0502791665494442
    2. 'travel' → logprob: -3.550279140472412
    3. 'move' → logprob: -5.800279140472412
    4. 'run' → logprob: -5.925279140472412
    5. 'finish' → logprob: -5.925279140472412
    6. 'cover' → logprob: -6.050279140472412
    7. ' return' → logprob: -6.175279140472412
    8. 'distance' → logprob: -6.425279140472412
    9. 'complete' → logprob: -6.675279140472412
    10. 'go' → logprob: -6.675279140472412

Token 636: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.3496393859386444
    2. 'from' → logprob: -1.8496394157409668
    3. 'self' → logprob: -2.474639415740967
    4. 'the' → logprob: -3.599639415740967
    5. ' to' → logprob: -4.724639415740967
    6. '(self' → logprob: -4.974639415740967
    7. ' self' → logprob: -6.224639415740967
    8. ' the' → logprob: -6.224639415740967
    9. 'return' → logprob: -6.599639415740967
    10. 'segments' → logprob: -6.599639415740967

Token 637: ' goal' (ID: 8583)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.008191600441932678
    2. 'the' → logprob: -4.8831915855407715
    3. ' self' → logprob: -7.8831915855407715
    4. ' the' → logprob: -9.63319206237793
    5. 'end' → logprob: -9.88319206237793
    6. 'finish' → logprob: -10.50819206237793
    7. '<|end|>' → logprob: -11.25819206237793
    8. '   ' → logprob: -11.88319206237793
    9. '100' → logprob: -12.00819206237793
    10. 'completion' → logprob: -12.13319206237793

Token 638: ' from' (ID: 591)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.052426718175411224
    2. ' if' → logprob: -3.302426815032959
    3. 'if' → logprob: -4.802426815032959
    4. ',' → logprob: -6.427426815032959
    5. '.' → logprob: -6.552426815032959
    6. 'distance' → logprob: -6.927426815032959
    7. 'segment' → logprob: -7.177426815032959
    8. ' segment' → logprob: -8.8024263381958
    9. 'length' → logprob: -9.3024263381958
    10. 'return' → logprob: -9.3024263381958

Token 639: ' current' (ID: 2208)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.16456149518489838
    2. 'self' → logprob: -1.9145615100860596
    3. ' idx' → logprob: -5.9145612716674805
    4. 'current' → logprob: -7.5395612716674805
    5. ' self' → logprob: -7.6645612716674805
    6. 'last' → logprob: -8.28956127166748
    7. 'key' → logprob: -9.03956127166748
    8. 'the' → logprob: -9.78956127166748
    9. 'end' → logprob: -10.41456127166748
    10. 'index' → logprob: -10.66456127166748

Token 640: ' position' (ID: 4010)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.11666751652956009
    2. 'position' → logprob: -3.2416675090789795
    3. 'pos' → logprob: -3.9916675090789795
    4. 'segment' → logprob: -4.491667747497559
    5. 'index' → logprob: -4.741667747497559
    6. 'point' → logprob: -5.241667747497559
    7. '_course' → logprob: -5.241667747497559
    8. ')' → logprob: -5.366667747497559
    9. 'time' → logprob: -5.866667747497559
    10. 'end' → logprob: -6.366667747497559

Token 641: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3882867395877838
    2. ' if' → logprob: -1.3882867097854614
    3. ',' → logprob: -3.763286828994751
    4. 'if' → logprob: -3.888286828994751
    5. '.' → logprob: -4.013286590576172
    6. '<|end|>' → logprob: -5.638286590576172
    7. '<|end|>' → logprob: -6.388286590576172
    8. ':' → logprob: -7.013286590576172
    9. ')' → logprob: -7.388286590576172
    10. 'return' → logprob: -7.513286590576172

Token 642: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00727247167378664
    2. ' if' → logprob: -5.757272243499756
    3. '.' → logprob: -6.132272243499756
    4. ',' → logprob: -6.757272243499756
    5. '<|end|>' → logprob: -8.507272720336914
    6. ':' → logprob: -9.257272720336914
    7. 'if' → logprob: -9.257272720336914
    8. ')' → logprob: -9.382272720336914
    9. '        
' → logprob: -9.507272720336914
    10. '<|end|>' → logprob: -10.757272720336914

Token 643: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.34155091643333435
    2. '       ' → logprob: -1.7165509462356567
    3. ' if' → logprob: -2.216550827026367
    4. 'current' → logprob: -7.841550827026367
    5. ' current' → logprob: -10.341550827026367
    6. 'pos' → logprob: -10.341550827026367
    7. '   ' → logprob: -10.591550827026367
    8. 'distance' → logprob: -10.716550827026367
    9. 'position' → logprob: -10.841550827026367
    10. ',' → logprob: -10.841550827026367

Token 644: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -5.931863051955588e-05
    2. ' idx' → logprob: -9.750059127807617
    3. '	idx' → logprob: -14.750059127807617
    4. '   ' → logprob: -15.625059127807617
    5. '(idx' → logprob: -15.625059127807617
    6. 'index' → logprob: -15.750059127807617
    7. '_idx' → logprob: -17.125059127807617
    8. '[idx' → logprob: -17.625059127807617
    9. '       ' → logprob: -18.500059127807617
    10. 'key' → logprob: -18.500059127807617

Token 645: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.1270735114812851
    2. '==' → logprob: -2.1270735263824463
    3. ' >=' → logprob: -9.127073287963867
    4. '>=' → logprob: -10.377073287963867
    5. ' >' → logprob: -13.502073287963867
    6. '>' → logprob: -14.002073287963867
    7. '==
' → logprob: -14.252073287963867
    8. ')==' → logprob: -14.377073287963867
    9. '=' → logprob: -14.627073287963867
    10. '==(' → logprob: -15.002073287963867

Token 646: ' len' (ID: 4631)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0004860842600464821
    2. ' self' → logprob: -8.125486373901367
    3. 'len' → logprob: -8.625486373901367
    4. '       ' → logprob: -12.125486373901367
    5. '=self' → logprob: -13.000486373901367
    6. '   ' → logprob: -14.250486373901367
    7. '           ' → logprob: -14.625486373901367
    8. ' len' → logprob: -14.750486373901367
    9. '
' → logprob: -15.000486373901367
    10. '(self' → logprob: -15.250486373901367

Token 647: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -2.3557529857498594e-05
    2. '(' → logprob: -11.37502384185791
    3. 'self' → logprob: -11.37502384185791
    4. ' self' → logprob: -15.75002384185791
    5. '(
' → logprob: -15.87502384185791
    6. '(this' → logprob: -16.250022888183594
    7. '(s' → logprob: -16.625022888183594
    8. ' (' → logprob: -17.125022888183594
    9. '=self' → logprob: -17.125022888183594
    10. '	self' → logprob: -17.750022888183594

Token 648: '.course' (ID: 67214)
  Prédit: '.course'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.course' → logprob: -3.976922744186595e-05
    2. 'self' → logprob: -10.625040054321289
    3. 'course' → logprob: -12.250040054321289
    4. '.self' → logprob: -12.500040054321289
    5. '.car' → logprob: -13.125040054321289
    6. '.' → logprob: -13.125040054321289
    7. '(course' → logprob: -13.875040054321289
    8. '(self' → logprob: -13.875040054321289
    9. '.c' → logprob: -14.875040054321289
    10. ' .' → logprob: -15.625040054321289

Token 649: '.se' (ID: 5877)
  Prédit: '.car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.car' → logprob: -4.6087021473795176e-05
    2. ' .' → logprob: -10.750045776367188
    3. '.' → logprob: -11.000045776367188
    4. '.se' → logprob: -12.250045776367188
    5. '.c' → logprob: -14.250045776367188
    6. '.positions' → logprob: -14.625045776367188
    7. 'car' → logprob: -14.875045776367188
    8. '	car' → logprob: -15.375045776367188
    9. '.course' → logprob: -15.875045776367188
    10. ').' → logprob: -16.000045776367188

Token 650: 'gments' (ID: 59025)
  Prédit: 'gments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gments' → logprob: -4.453737710718997e-05
    2. 'g' → logprob: -10.250044822692871
    3. 'gements' → logprob: -12.125044822692871
    4. 'gment' → logprob: -14.000044822692871
    5. '```' → logprob: -14.125044822692871
    6. 'segments' → logprob: -14.625044822692871
    7. 'ments' → logprob: -14.750044822692871
    8. 'gm' → logprob: -14.875044822692871
    9. 'quences' → logprob: -15.625044822692871
    10. '   ' → logprob: -15.875044822692871

Token 651: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.43118295073509216
    2. '):
' → logprob: -1.0561829805374146
    3. ')' → logprob: -6.056182861328125
    4. '):
' → logprob: -10.056182861328125
    5. ')-' → logprob: -10.431182861328125
    6. '       ' → logprob: -11.056182861328125
    7. '):

' → logprob: -11.056182861328125
    8. ':' → logprob: -11.556182861328125
    9. ' ):' → logprob: -12.181182861328125
    10. '   ' → logprob: -12.806182861328125

Token 652: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2502093017101288
    2. ':
' → logprob: -2.000209331512451
    3. ':' → logprob: -2.500209331512451
    4. '       ' → logprob: -5.875209331512451
    5. '):
' → logprob: -8.000208854675293
    6. ',' → logprob: -8.500208854675293
    7. ':return' → logprob: -9.000208854675293
    8. ' and' → logprob: -9.125208854675293
    9. ' return' → logprob: -9.500208854675293
    10. ' or' → logprob: -10.125208854675293

Token 653: ' #' (ID: 1069)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.5158922672271729
    2. 'distance' → logprob: -1.7658922672271729
    3. 'return' → logprob: -2.390892267227173
    4. 'speed' → logprob: -2.890892267227173
    5. 'time' → logprob: -3.390892267227173
    6. 'remaining' → logprob: -4.015892028808594
    7. 'dist' → logprob: -4.765892028808594
    8. 'current' → logprob: -4.890892028808594
    9. 'position' → logprob: -5.890892028808594
    10. 'last' → logprob: -5.890892028808594

Token 654: ' from' (ID: 591)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'distance' → logprob: -1.4855939149856567
    2. 'speed' → logprob: -1.4855939149856567
    3. 'time' → logprob: -1.7355939149856567
    4. 'dist' → logprob: -2.360593795776367
    5. 'final' → logprob: -2.735593795776367
    6. 'remaining' → logprob: -2.860593795776367
    7. 'segment' → logprob: -3.110593795776367
    8. 'pos' → logprob: -3.860593795776367
    9. 'self' → logprob: -3.860593795776367
    10. 'result' → logprob: -4.110593795776367

Token 655: ' segment' (ID: 14806)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.04081060737371445
    2. 'self' → logprob: -3.9158105850219727
    3. ' current' → logprob: -4.790810585021973
    4. 'last' → logprob: -5.165810585021973
    5. 'key' → logprob: -6.165810585021973
    6. 'idx' → logprob: -6.290810585021973
    7. '_current' → logprob: -7.415810585021973
    8. ' self' → logprob: -8.915810585021973
    9. '
' → logprob: -9.040810585021973
    10. 'return' → logprob: -9.290810585021973

Token 656: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -1.5320570468902588
    2. '_time' → logprob: -1.6570570468902588
    3. '[idx' → logprob: -2.032057046890259
    4. '_end' → logprob: -2.532057046890259
    5. '_start' → logprob: -3.157057046890259
    6. 'self' → logprob: -3.407057046890259
    7. 'time' → logprob: -3.407057046890259
    8. 'return' → logprob: -3.532057046890259
    9. '_length' → logprob: -3.532057046890259
    10. '_idx' → logprob: -3.907057046890259

Token 657: '-' (ID: 12)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.15182942152023315
    2. ':' → logprob: -3.526829481124878
    3. '
' → logprob: -4.151829242706299
    4. '           ' → logprob: -4.151829242706299
    5. '       ' → logprob: -4.276829242706299
    6. '=' → logprob: -4.526829242706299
    7. '[' → logprob: -4.776829242706299
    8. ')' → logprob: -5.276829242706299
    9. ' =' → logprob: -5.276829242706299
    10. ' ,' → logprob: -5.401829242706299

Token 658: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004205544013530016
    2. ' ' → logprob: -5.504205703735352
    3. 'idx' → logprob: -10.004205703735352
    4. '0' → logprob: -10.504205703735352
    5. '-' → logprob: -11.129205703735352
    6. '```' → logprob: -11.504205703735352
    7. '   ' → logprob: -12.379205703735352
    8. 'self' → logprob: -12.379205703735352
    9. ' -' → logprob: -12.754205703735352
    10. ' idx' → logprob: -13.004205703735352

Token 659: ' end' (ID: 1268)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -1.8359863758087158
    2. ' return' → logprob: -2.085986375808716
    3. ')' → logprob: -2.460986375808716
    4. ',' → logprob: -2.460986375808716
    5. '.' → logprob: -2.710986375808716
    6. ' if' → logprob: -2.835986375808716
    7. ':' → logprob: -2.835986375808716
    8. ' .' → logprob: -3.085986375808716
    9. '.return' → logprob: -3.460986375808716
    10. ']' → logprob: -3.585986375808716

Token 660: ' to' (ID: 316)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.2862560749053955
    2. 'return' → logprob: -1.4112560749053955
    3. ' return' → logprob: -1.9112560749053955
    4. ')' → logprob: -2.5362560749053955
    5. '       ' → logprob: -2.9112560749053955
    6. ':' → logprob: -3.1612560749053955
    7. ' to' → logprob: -3.5362560749053955
    8. '           ' → logprob: -3.6612560749053955
    9. ':return' → logprob: -4.161255836486816
    10. '
' → logprob: -4.536255836486816

Token 661: ' goal' (ID: 8583)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0003729966701939702
    2. ' self' → logprob: -8.125372886657715
    3. 'the' → logprob: -9.625372886657715
    4. '
' → logprob: -13.625372886657715
    5. '=self' → logprob: -13.625372886657715
    6. '(self' → logprob: -13.625372886657715
    7. '`' → logprob: -14.125372886657715
    8. '0' → logprob: -14.500372886657715
    9. '```' → logprob: -14.500372886657715
    10. '...' → logprob: -14.875372886657715

Token 662: ' (' (ID: 350)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08675923198461533
    2. 'return' → logprob: -2.836759328842163
    3. '       ' → logprob: -4.836759090423584
    4. ' return' → logprob: -4.961759090423584
    5. ':' → logprob: -6.086759090423584
    6. ',' → logprob: -6.211759090423584
    7. ':
' → logprob: -6.336759090423584
    8. ':return' → logprob: -6.961759090423584
    9. '):
' → logprob: -8.211759567260742
    10. '
' → logprob: -8.211759567260742

Token 663: 'actually' (ID: 138925)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.6398763656616211
    2. ')' → logprob: -1.139876365661621
    3. ')
' → logprob: -2.264876365661621
    4. '):
' → logprob: -4.514876365661621
    5. 'return' → logprob: -4.764876365661621
    6. '...' → logprob: -5.389876365661621
    7. ' self' → logprob: -5.514876365661621
    8. ')return' → logprob: -5.514876365661621
    9. '):' → logprob: -5.764876365661621
    10. '),' → logprob: -5.889876365661621

Token 664: ' last' (ID: 2174)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.03860904276371002
    2. 'the' → logprob: -4.913609027862549
    3. '0' → logprob: -5.288609027862549
    4. 'return' → logprob: -5.288609027862549
    5. ')' → logprob: -5.413609027862549
    6. ' self' → logprob: -5.663609027862549
    7. 'end' → logprob: -6.038609027862549
    8. '...' → logprob: -6.038609027862549
    9. 'start' → logprob: -6.538609027862549
    10. ' the' → logprob: -6.663609027862549

Token 665: ' segment' (ID: 14806)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.23649656772613525
    2. ')' → logprob: -2.3614964485168457
    3. ' segment' → logprob: -2.9864964485168457
    4. '.' → logprob: -4.611496448516846
    5. 'end' → logprob: -5.111496448516846
    6. '.position' → logprob: -5.361496448516846
    7. 'position' → logprob: -5.361496448516846
    8. 'self' → logprob: -5.361496448516846
    9. '.segment' → logprob: -5.486496448516846
    10. '
' → logprob: -5.611496448516846

Token 666: ' end' (ID: 1268)
  Prédit: '.end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.end' → logprob: -0.22255536913871765
    2. ')' → logprob: -2.59755539894104
    3. ').' → logprob: -2.59755539894104
    4. '.start' → logprob: -3.97255539894104
    5. 'end' → logprob: -4.222555160522461
    6. '.' → logprob: -4.472555160522461
    7. '),' → logprob: -6.972555160522461
    8. ' .' → logprob: -7.097555160522461
    9. ')
' → logprob: -7.472555160522461
    10. '.length' → logprob: -7.472555160522461

Token 667: ' to' (ID: 316)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16154229640960693
    2. ')
' → logprob: -2.2865424156188965
    3. '):' → logprob: -3.4115424156188965
    4. '):
' → logprob: -4.7865424156188965
    5. '       ' → logprob: -5.7865424156188965
    6. '),' → logprob: -7.4115424156188965
    7. ',' → logprob: -7.6615424156188965
    8. '           ' → logprob: -8.161541938781738
    9. ')
' → logprob: -8.286541938781738
    10. ').' → logprob: -8.286541938781738

Token 668: ' goal' (ID: 8583)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.023691469803452492
    2. 'goal' → logprob: -4.273691654205322
    3. 'current' → logprob: -6.148691654205322
    4. 'end' → logprob: -6.148691654205322
    5. ' self' → logprob: -6.523691654205322
    6. ')' → logprob: -7.148691654205322
    7. 'idx' → logprob: -7.398691654205322
    8. 'the' → logprob: -7.398691654205322
    9. 'finish' → logprob: -7.773691654205322
    10. 'final' → logprob: -9.398691177368164

Token 669: ' is' (ID: 382)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.15580731630325317
    2. ')
' → logprob: -2.1558072566986084
    3. '):' → logprob: -3.9058072566986084
    4. '):
' → logprob: -5.1558074951171875
    5. '       ' → logprob: -7.1558074951171875
    6. ')
' → logprob: -8.030807495117188
    7. ',' → logprob: -8.155807495117188
    8. '),' → logprob: -8.780807495117188
    9. ' )' → logprob: -8.905807495117188
    10. ')

' → logprob: -9.155807495117188

Token 670: ' zero' (ID: 12421)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04394776374101639
    2. 'self' → logprob: -3.293947696685791
    3. ' ' → logprob: -5.668947696685791
    4. 'return' → logprob: -7.168947696685791
    5. 'current' → logprob: -7.543947696685791
    6. ' self' → logprob: -7.668947696685791
    7. '           ' → logprob: -9.04394817352295
    8. '   ' → logprob: -9.16894817352295
    9. '       ' → logprob: -9.41894817352295
    10. 'float' → logprob: -9.79394817352295

Token 671: ' length' (ID: 5517)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0028650204185396433
    2. ')
' → logprob: -6.252864837646484
    3. '):' → logprob: -8.377864837646484
    4. ' because' → logprob: -8.752864837646484
    5. ' )' → logprob: -8.877864837646484
    6. 'distance' → logprob: -9.252864837646484
    7. ',' → logprob: -10.377864837646484
    8. 'return' → logprob: -10.377864837646484
    9. ' if' → logprob: -10.752864837646484
    10. ' or' → logprob: -10.877864837646484

Token 672: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.5300433039665222
    2. ')' → logprob: -0.9050433039665222
    3. '       ' → logprob: -5.155043125152588
    4. ')
' → logprob: -8.405043601989746
    5. ',' → logprob: -8.530043601989746
    6. '):
' → logprob: -8.655043601989746
    7. ' because' → logprob: -9.030043601989746
    8. '           ' → logprob: -9.405043601989746
    9. ' or' → logprob: -9.530043601989746
    10. '):' → logprob: -9.655043601989746

Token 673: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009578884579241276
    2. 'return' → logprob: -5.134578704833984
    3. '       ' → logprob: -6.759578704833984
    4. ' return' → logprob: -6.884578704833984
    5. ',' → logprob: -7.509578704833984
    6. '
' → logprob: -8.259578704833984
    7. '            
' → logprob: -8.509578704833984
    8. ':' → logprob: -9.009578704833984
    9. '):
' → logprob: -9.759578704833984
    10. ':
' → logprob: -9.884578704833984

Token 674: ' segment' (ID: 14806)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.44569653272628784
    2. 'speed' → logprob: -1.4456965923309326
    3. 'time' → logprob: -2.5706965923309326
    4. 'self' → logprob: -4.4456963539123535
    5. 'distance' → logprob: -4.8206963539123535
    6. 'segment' (adapté à ' segment') → logprob: -5.0706963539123535
    7. 'remaining' → logprob: -5.5706963539123535
    8. 'result' → logprob: -5.5706963539123535
    9. 'final' → logprob: -5.9456963539123535
    10. 'pos' → logprob: -5.9456963539123535

Token 675: ' =' (ID: 314)
  Prédit: '_length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.5674262046813965
    2. ' =' → logprob: -1.3174262046813965
    3. '=' → logprob: -1.8174262046813965
    4. '_len' → logprob: -6.6924262046813965
    5. '_time' → logprob: -7.9424262046813965
    6. '_end' → logprob: -8.067426681518555
    7. '=end' → logprob: -8.067426681518555
    8. 'length' → logprob: -8.192426681518555
    9. '_distance' → logprob: -9.942426681518555
    10. '_start' → logprob: -10.192426681518555

Token 676: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.002900686115026474
    2. 'Course' → logprob: -6.50290060043335
    3. 'None' → logprob: -7.62790060043335
    4. ' self' → logprob: -7.75290060043335
    5. '(self' → logprob: -7.75290060043335
    6. 'Running' → logprob: -11.002901077270508
    7. '0' → logprob: -12.002901077270508
    8. 'Rabbit' → logprob: -12.002901077270508
    9. '(C' → logprob: -12.252901077270508
    10. '[self' → logprob: -12.502901077270508

Token 677: '.course' (ID: 67214)
  Prédit: '.course'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.course' → logprob: -9.13388703338569e-06
    2. '.' → logprob: -12.250009536743164
    3. 'course' → logprob: -12.500009536743164
    4. '.
' → logprob: -16.125009536743164
    5. '
' → logprob: -16.500009536743164
    6. '.c' → logprob: -16.750009536743164
    7. '.Course' → logprob: -16.750009536743164
    8. '.se' → logprob: -17.500009536743164
    9. 'Course' → logprob: -17.875009536743164
    10. ' .' → logprob: -18.125009536743164

Token 678: '.se' (ID: 5877)
  Prédit: '.se'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.se' → logprob: -2.0100624169572257e-05
    2. 'segments' → logprob: -11.250020027160645
    3. '.s' → logprob: -12.625020027160645
    4. '.segment' → logprob: -13.000020027160645
    5. '.seg' → logprob: -14.125020027160645
    6. '.' → logprob: -15.125020027160645
    7. 'Segments' → logprob: -15.625020027160645
    8. 'se' → logprob: -16.50002098083496
    9. '.sections' → logprob: -16.75002098083496
    10. ' .' → logprob: -18.12502098083496

Token 679: 'gments' (ID: 59025)
  Prédit: 'gments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gments' → logprob: -3.750436007976532e-05
    2. 'g' → logprob: -11.00003719329834
    3. 'ments' → logprob: -11.25003719329834
    4. 'gements' → logprob: -12.25003719329834
    5. 'segments' → logprob: -13.25003719329834
    6. 'gment' → logprob: -14.75003719329834
    7. 'nts' → logprob: -15.62503719329834
    8. '__' → logprob: -16.000038146972656
    9. '```' → logprob: -16.125038146972656
    10. '...' → logprob: -16.375038146972656

Token 680: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.5760000944137573
    2. '[idx' → logprob: -0.8260000944137573
    3. '[' → logprob: -10.326000213623047
    4. '[key' → logprob: -11.201000213623047
    5. '[self' → logprob: -11.451000213623047
    6. '[index' → logprob: -13.951000213623047
    7. '   ' → logprob: -14.076000213623047
    8. '[len' → logprob: -14.451000213623047
    9. 'idx' → logprob: -15.201000213623047
    10. ')[' → logprob: -15.701000213623047

Token 681: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.988221684878226e-06
    2. ' ' → logprob: -12.375006675720215
    3. '   ' → logprob: -14.187506675720215
    4. '0' → logprob: -15.000006675720215
    5. '2' → logprob: -15.062506675720215
    6. '```' → logprob: -15.375006675720215
    7. ')' → logprob: -15.562506675720215
    8. '
' → logprob: -15.625006675720215
    9. '-' → logprob: -16.06250762939453
    10. '  ' → logprob: -16.87500762939453

Token 682: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.22012993693351746
    2. ']' → logprob: -1.7201299667358398
    3. ')
' → logprob: -4.84512996673584
    4. '       ' → logprob: -5.09512996673584
    5. ')' → logprob: -5.72012996673584
    6. ']
' → logprob: -7.34512996673584
    7. '           ' → logprob: -8.22012996673584
    8. '
' → logprob: -9.22012996673584
    9. ']

' → logprob: -9.84512996673584
    10. 'return' → logprob: -9.97012996673584

Token 683: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001226062304340303
    2. 'return' → logprob: -7.25122594833374
    3. '       ' → logprob: -8.626226425170898
    4. ',' → logprob: -9.001226425170898
    5. ' return' → logprob: -9.251226425170898
    6. '
' → logprob: -10.001226425170898
    7. '            
' → logprob: -10.376226425170898
    8. '               ' → logprob: -11.876226425170898
    9. ')' → logprob: -12.001226425170898
    10. '#' → logprob: -12.876226425170898

Token 684: ' dist' (ID: 3601)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.6634640097618103
    2. 'speed' → logprob: -0.9134640097618103
    3. 'distance' → logprob: -3.413464069366455
    4. 'remaining' → logprob: -4.288464069366455
    5. 'dist' (adapté à ' dist') → logprob: -4.788464069366455
    6. 'return' → logprob: -5.163464069366455
    7. 'res' → logprob: -5.538464069366455
    8. 'result' → logprob: -5.663464069366455
    9. 'self' → logprob: -5.913464069366455
    10. 'run' → logprob: -6.288464069366455

Token 685: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3520908057689667
    2. 'ance' → logprob: -1.227090835571289
    3. '=' → logprob: -5.727090835571289
    4. '       ' → logprob: -8.727090835571289
    5. '   ' → logprob: -9.477090835571289
    6. '           ' → logprob: -10.227090835571289
    7. 'ANCE' → logprob: -10.352090835571289
    8. '_' → logprob: -11.727090835571289
    9. '_to' → logprob: -11.727090835571289
    10. '	' → logprob: -12.227090835571289

Token 686: ' segment' (ID: 14806)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.0002776630863081664
    2. ' segment' → logprob: -8.625277519226074
    3. 'self' → logprob: -9.375277519226074
    4. '(segment' → logprob: -11.625277519226074
    5. '0' → logprob: -12.875277519226074
    6. '.segment' → logprob: -14.500277519226074
    7. ')' → logprob: -15.500277519226074
    8. 'section' → logprob: -15.875277519226074
    9. 'interval' → logprob: -16.12527847290039
    10. '`' → logprob: -16.12527847290039

Token 687: '.length' (ID: 3116)
  Prédit: '.length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.length' → logprob: -0.048671282827854156
    2. '.end' → logprob: -3.048671245574951
    3. '.' → logprob: -9.54867172241211
    4. 'length' → logprob: -12.17367172241211
    5. '.start' → logprob: -12.54867172241211
    6. ' .' → logprob: -13.79867172241211
    7. 'end' → logprob: -13.79867172241211
    8. '.len' → logprob: -14.42367172241211
    9. ').' → logprob: -14.67367172241211
    10. '.l' → logprob: -15.42367172241211

Token 688: '
' (ID: 198)
  Prédit: ' /'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.060945652425289154
    2. '       ' → logprob: -3.310945749282837
    3. '
' → logprob: -3.935945749282837
    4. '/' → logprob: -6.685945510864258
    5. ')' → logprob: -8.060945510864258
    6. '           ' → logprob: -8.435945510864258
    7. '/self' → logprob: -8.685945510864258
    8. ')
' → logprob: -9.060945510864258
    9. ' -' → logprob: -9.060945510864258
    10. '
' → logprob: -9.310945510864258

Token 689: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.553244411945343
    2. '
' → logprob: -1.4282443523406982
    3. '           ' → logprob: -2.1782443523406982
    4. ' if' → logprob: -3.5532443523406982
    5. 'time' → logprob: -4.678244590759277
    6. ',' → logprob: -5.053244590759277
    7. '        
' → logprob: -5.553244590759277
    8. 'if' → logprob: -5.553244590759277
    9. 'return' → logprob: -5.803244590759277
    10. 'speed' → logprob: -6.178244590759277

Token 690: ' time' (ID: 1058)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' (adapté à ' time') → logprob: -0.4013975262641907
    2. 'speed' → logprob: -1.276397466659546
    3. 'elapsed' → logprob: -3.651397466659546
    4. 'wait' → logprob: -4.901397705078125
    5. 'if' → logprob: -5.401397705078125
    6. 'dt' → logprob: -5.901397705078125
    7. 'delta' → logprob: -6.026397705078125
    8. 'return' → logprob: -6.276397705078125
    9. '       ' → logprob: -6.276397705078125
    10. 'last' → logprob: -7.276397705078125

Token 691: '_since' (ID: 133288)
  Prédit: '_needed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_needed' → logprob: -0.9225969910621643
    2. '=' → logprob: -1.1725969314575195
    3. ' =' → logprob: -1.2975969314575195
    4. '_to' → logprob: -4.5475969314575195
    5. '_required' → logprob: -4.7975969314575195
    6. '_taken' → logprob: -8.29759693145752
    7. '_' → logprob: -8.54759693145752
    8. 'needed' → logprob: -9.04759693145752
    9. '_remaining' → logprob: -9.29759693145752
    10. '_sp' → logprob: -9.92259693145752

Token 692: '_last' (ID: 26359)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.026063041761517525
    2. '_last' → logprob: -3.7760629653930664
    3. ' last' → logprob: -5.901062965393066
    4. '(last' → logprob: -10.401062965393066
    5. '_' → logprob: -11.151062965393066
    6. '	last' → logprob: -11.651062965393066
    7. 'current' → logprob: -12.526062965393066
    8. 'car' → logprob: -12.651062965393066
    9. '_car' → logprob: -13.026062965393066
    10. ' (' → logprob: -13.401062965393066

Token 693: '_e' (ID: 4618)
  Prédit: '_car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_car' → logprob: -0.006406027358025312
    2. '_' → logprob: -5.631405830383301
    3. 'car' → logprob: -6.006405830383301
    4. '_time' → logprob: -9.2564058303833
    5. '_c' → logprob: -9.6314058303833
    6. 'Car' → logprob: -10.3814058303833
    7. '=' → logprob: -10.7564058303833
    8. ' =' → logprob: -11.0064058303833
    9. '```' → logprob: -11.1314058303833
    10. '_token' → logprob: -11.5064058303833

Token 694: 'at' (ID: 266)
  Prédit: 'aten'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aten' → logprob: -0.6349450349807739
    2. 'at' → logprob: -0.7599450349807739
    3. 'ated' → logprob: -6.384944915771484
    4. 'ating' → logprob: -8.759944915771484
    5. 'car' → logprob: -9.259944915771484
    6. '_at' → logprob: -9.884944915771484
    7. '=' → logprob: -10.384944915771484
    8. 'atten' → logprob: -10.634944915771484
    9. ' =' → logprob: -10.697444915771484
    10. '_' → logprob: -11.259944915771484

Token 695: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.42900964617729187
    2. ' =' → logprob: -1.0540096759796143
    3. 'd' → logprob: -8.429009437561035
    4. 'r' → logprob: -10.929009437561035
    5. 'ed' → logprob: -11.054009437561035
    6. ' ' → logprob: -11.429009437561035
    7. 'car' → logprob: -11.679009437561035
    8. '_' → logprob: -12.054009437561035
    9. '   ' → logprob: -12.304009437561035
    10. '  ' → logprob: -12.554009437561035

Token 696: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.11297904700040817
    2. ' current' → logprob: -2.237978935241699
    3. 'float' → logprob: -9.8629789352417
    4. '(current' → logprob: -9.9879789352417
    5. 'max' → logprob: -11.4879789352417
    6. '   ' → logprob: -11.4879789352417
    7. ' ' → logprob: -11.8629789352417
    8. ' float' → logprob: -11.9879789352417
    9. '0' → logprob: -12.4879789352417
    10. ' max' → logprob: -12.8004789352417

Token 697: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.0005445729475468397
    2. '_car' → logprob: -7.750544548034668
    3. '-' → logprob: -10.125544548034668
    4. ' -' → logprob: -11.125544548034668
    5. '_' → logprob: -11.875544548034668
    6. 'time' → logprob: -12.000544548034668
    7. '-_' → logprob: -12.000544548034668
    8. 'car' → logprob: -12.250544548034668
    9. '-car' → logprob: -12.250544548034668
    10. 'Car' → logprob: -12.500544548034668

Token 698: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.16023285686969757
    2. ' -' → logprob: -1.9102329015731812
    3. '-if' → logprob: -12.535232543945312
    4. ' if' → logprob: -13.160232543945312
    5. '-last' → logprob: -13.660232543945312
    6. '-key' → logprob: -14.035232543945312
    7. '<|end|>' → logprob: -15.660232543945312
    8. ')' → logprob: -15.910232543945312
    9. '−' → logprob: -16.035232543945312
    10. 'if' → logprob: -16.285232543945312

Token 699: ' last' (ID: 2174)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.0036175278946757317
    2. '(last' → logprob: -5.628617763519287
    3. ' last' → logprob: -11.628617286682129
    4. '(' → logprob: -11.878617286682129
    5. 'key' → logprob: -14.753617286682129
    6. ' (' → logprob: -14.878617286682129
    7. '[last' → logprob: -15.503617286682129
    8. '	last' → logprob: -15.503617286682129
    9. '(
' → logprob: -15.753617286682129
    10. '(key' → logprob: -16.003618240356445

Token 700: '_car' (ID: 62991)
  Prédit: '_car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_car' → logprob: -6.706686690449715e-05
    2. '_' → logprob: -10.625066757202148
    3. '_c' → logprob: -10.750066757202148
    4. 'car' → logprob: -11.125066757202148
    5. 'Car' → logprob: -13.250066757202148
    6. '__' → logprob: -14.250066757202148
    7. '```' → logprob: -14.250066757202148
    8. ' _' → logprob: -14.500066757202148
    9. 'e' → logprob: -14.500066757202148
    10. '	car' → logprob: -14.875066757202148

Token 701: 'rot' (ID: 8150)
  Prédit: 'rot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rot' → logprob: -0.008189592510461807
    2. 'ot' → logprob: -4.883189678192139
    3. '_rot' → logprob: -8.00818920135498
    4. 't' → logprob: -9.00818920135498
    5. 'Rot' → logprob: -10.63318920135498
    6. 'ro' → logprob: -11.00818920135498
    7. 'rots' → logprob: -11.13318920135498
    8. 'ort' → logprob: -11.50818920135498
    9. '_time' → logprob: -12.13318920135498
    10. 'рот' → logprob: -12.75818920135498

Token 702: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -5.2524021157296374e-05
    2. 'time' → logprob: -10.375052452087402
    3. '_t' → logprob: -11.500052452087402
    4. '_' → logprob: -12.625052452087402
    5. '
' → logprob: -13.875052452087402
    6. 'eat' → logprob: -13.875052452087402
    7. '_times' → logprob: -14.375052452087402
    8. 'e' → logprob: -14.500052452087402
    9. '_start' → logprob: -14.875052452087402
    10. ' _' → logprob: -14.875052452087402

Token 703: ' if' (ID: 538)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6555188894271851
    2. '       ' → logprob: -1.405518889427185
    3. ' if' → logprob: -1.655518889427185
    4. '        
' → logprob: -3.9055190086364746
    5. '<|end|>' → logprob: -5.280519008636475
    6. ' 
' → logprob: -5.405519008636475
    7. ')' → logprob: -5.655519008636475
    8. 'if' → logprob: -6.280519008636475
    9. '<|end|>' → logprob: -6.280519008636475
    10. ',' → logprob: -6.780519008636475

Token 704: ' last' (ID: 2174)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -2.999452772201039e-05
    2. '(last' → logprob: -11.000029563903809
    3. ' last' → logprob: -11.500029563903809
    4. 'is' → logprob: -13.125029563903809
    5. 'not' → logprob: -15.125029563903809
    6. '0' → logprob: -15.500029563903809
    7. 'lasti' → logprob: -15.500029563903809
    8. 'current' → logprob: -16.500030517578125
    9. '	last' → logprob: -16.750030517578125
    10. 'self' → logprob: -16.875030517578125

Token 705: '_car' (ID: 62991)
  Prédit: '_car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_car' → logprob: -0.000657154421787709
    2. 'car' → logprob: -7.625657081604004
    3. '_' → logprob: -9.375657081604004
    4. 'Car' → logprob: -10.875657081604004
    5. '_e' → logprob: -11.250657081604004
    6. '!=' → logprob: -11.375657081604004
    7. '_c' → logprob: -11.500657081604004
    8. '>' → logprob: -12.000657081604004
    9. '_time' → logprob: -12.625657081604004
    10. ' !=' → logprob: -13.125657081604004

Token 706: 'rot' (ID: 8150)
  Prédit: 'rot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rot' → logprob: -0.057736288756132126
    2. 'ot' → logprob: -2.932736396789551
    3. 'rott' → logprob: -7.057736396789551
    4. '_rot' → logprob: -7.557736396789551
    5. 'ott' → logprob: -7.682736396789551
    6. 'bit' → logprob: -8.43273639678955
    7. 't' → logprob: -8.80773639678955
    8. 'otted' → logprob: -9.80773639678955
    9. 'got' → logprob: -9.80773639678955
    10. 'car' → logprob: -9.93273639678955

Token 707: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.4407304525375366
    2. '!=' → logprob: -1.9407304525375366
    3. ' !=' → logprob: -2.190730571746826
    4. ' is' → logprob: -2.940730571746826
    5. '==' → logprob: -4.815730571746826
    6. '<' → logprob: -4.815730571746826
    7. '>=' → logprob: -5.065730571746826
    8. 'is' → logprob: -5.065730571746826
    9. ' <' → logprob: -5.440730571746826
    10. '_' → logprob: -6.065730571746826

Token 708: ' >=' (ID: 5064)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.3015258312225342
    2. '>=' → logprob: -1.4265258312225342
    3. ' !=' → logprob: -4.551526069641113
    4. '!=-' → logprob: -5.301526069641113
    5. '>' → logprob: -6.176526069641113
    6. '<' → logprob: -6.676526069641113
    7. ' >=' → logprob: -7.301526069641113
    8. '==' → logprob: -7.801526069641113
    9. ' is' → logprob: -9.426526069641113
    10. '<=' → logprob: -10.176526069641113

Token 709: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.7729658540920354e-05
    2. ' ' → logprob: -10.500027656555176
    3. '-' → logprob: -16.375028610229492
    4. '۰' → logprob: -18.125028610229492
    5. 'float' → logprob: -18.250028610229492
    6. '   ' → logprob: -18.500028610229492
    7. 'self' → logprob: -18.625028610229492
    8. '           ' → logprob: -19.250028610229492
    9. '1' → logprob: -19.250028610229492
    10. 'current' → logprob: -19.750028610229492

Token 710: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.25
    3. '۰' → logprob: -18.5
    4. '-' → logprob: -19.75
    5. '```' → logprob: -20.125
    6. 'self' → logprob: -20.375
    7. '00' → logprob: -20.75
    8. 'O' → logprob: -21.0
    9. '０' → logprob: -21.125
    10. 'float' → logprob: -21.625

Token 711: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.009759039618074894
    2. 'else' → logprob: -4.634758949279785
    3. ' ' → logprob: -13.634758949279785
    4. '	else' → logprob: -14.384758949279785
    5. '        ' → logprob: -14.759758949279785
    6. '.' → logprob: -15.509758949279785
    7. ' and' → logprob: -15.759758949279785
    8. ' ' → logprob: -16.3847599029541
    9. '           ' → logprob: -16.5097599029541
    10. '       ' → logprob: -16.7597599029541

Token 712: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.01640957221388817
    2. 'current' → logprob: -4.141409397125244
    3. '1' → logprob: -8.266409873962402
    4. ' float' → logprob: -9.641409873962402
    5. '0' → logprob: -10.641409873962402
    6. '10' → logprob: -12.016409873962402
    7. '(float' → logprob: -12.141409873962402
    8. '999' → logprob: -12.391409873962402
    9. '100' → logprob: -12.516409873962402
    10. ' current' → logprob: -12.766409873962402

Token 713: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0009137284359894693
    2. '("' → logprob: -7.000913619995117
    3. 'inf' → logprob: -13.250913619995117
    4. ' ('' → logprob: -15.250913619995117
    5. '(' → logprob: -15.750913619995117
    6. ''in' → logprob: -16.375913619995117
    7. ''' → logprob: -17.250913619995117
    8. '(
' → logprob: -17.500913619995117
    9. '('+' → logprob: -18.000913619995117
    10. '('-' → logprob: -18.375913619995117

Token 714: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -3.531315314830863e-06
    2. ''' → logprob: -12.875003814697266
    3. ''in' → logprob: -14.250003814697266
    4. 'in' → logprob: -16.000003814697266
    5. '('' → logprob: -16.500003814697266
    6. 'info' → logprob: -17.750003814697266
    7. '-inf' → logprob: -17.875003814697266
    8. ''s' → logprob: -18.125003814697266
    9. '"' → logprob: -19.000003814697266
    10. ''n' → logprob: -19.625003814697266

Token 715: '')
' (ID: 2515)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12976793944835663
    2. ')
' → logprob: -2.129767894744873
    3. '       ' → logprob: -6.129767894744873
    4. ' )
' → logprob: -8.629768371582031
    5. ' )' → logprob: -8.629768371582031
    6. '')' → logprob: -9.254768371582031
    7. '')
' → logprob: -9.629768371582031
    8. ')
' → logprob: -9.754768371582031
    9. 'else' → logprob: -10.629768371582031
    10. ' else' → logprob: -11.004768371582031

Token 716: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2385287582874298
    2. '           ' → logprob: -1.6135287284851074
    3. '        
' → logprob: -5.613528728485107
    4. '<|end|>' → logprob: -6.238528728485107
    5. ',' → logprob: -6.613528728485107
    6. '
' → logprob: -6.988528728485107
    7. ' if' → logprob: -7.113528728485107
    8. ')' → logprob: -7.113528728485107
    9. '            
' → logprob: -7.488528728485107
    10. ' velocity' → logprob: -7.863528728485107

Token 717: ' speed' (ID: 7733)
  Prédit: 'speed'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'speed' (adapté à ' speed') → logprob: -0.022017227485775948
    2. 'if' → logprob: -4.022017002105713
    3. '       ' → logprob: -6.897017002105713
    4. 'current' → logprob: -7.022017002105713
    5. 'time' → logprob: -7.147017002105713
    6. 'elapsed' → logprob: -8.022017478942871
    7. '           ' → logprob: -8.647017478942871
    8. 'base' → logprob: -9.522017478942871
    9. 'return' → logprob: -9.647017478942871
    10. ' speed' → logprob: -9.772017478942871

Token 718: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4740825295448303
    2. ' =' → logprob: -0.9740825295448303
    3. '_' → logprob: -13.849082946777344
    4. '	' → logprob: -14.099082946777344
    5. ',' → logprob: -14.349082946777344
    6. ')' → logprob: -14.599082946777344
    7. '   ' → logprob: -14.724082946777344
    8. ' ' → logprob: -14.974082946777344
    9. '       ' → logprob: -15.099082946777344
    10. '=

' → logprob: -15.099082946777344

Token 719: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -3.1782583391759545e-05
    2. ' self' → logprob: -10.375031471252441
    3. '(self' → logprob: -15.250031471252441
    4. '       ' → logprob: -17.250032424926758
    5. '   ' → logprob: -17.375032424926758
    6. '0' → logprob: -17.375032424926758
    7. '           ' → logprob: -17.625032424926758
    8. '
' → logprob: -17.625032424926758
    9. '1' → logprob: -18.500032424926758
    10. '=self' → logprob: -18.875032424926758

Token 720: '.speed' (ID: 54856)
  Prédit: '.speed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.speed' → logprob: -0.07889199256896973
    2. 'speed' → logprob: -2.5788919925689697
    3. '	speed' → logprob: -13.95389175415039
    4. '.' → logprob: -15.07889175415039
    5. '.s' → logprob: -15.32889175415039
    6. '.get' → logprob: -15.45389175415039
    7. ' speed' → logprob: -15.57889175415039
    8. '(speed' → logprob: -16.82889175415039
    9. '...' → logprob: -16.95389175415039
    10. 'self' → logprob: -17.07889175415039

Token 721: '_model' (ID: 10928)
  Prédit: '_model'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_model' → logprob: -1.1517960956552997e-05
    2. 'model' → logprob: -12.250011444091797
    3. 'Model' → logprob: -12.750011444091797
    4. '_' → logprob: -14.000011444091797
    5. '   ' → logprob: -14.625011444091797
    6. '_MODEL' → logprob: -14.875011444091797
    7. '           ' → logprob: -15.000011444091797
    8. '       ' → logprob: -15.250011444091797
    9. ' =' → logprob: -15.875011444091797
    10. ' _' → logprob: -16.000011444091797

Token 722: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -8.864272967912257e-05
    2. '.' → logprob: -9.875088691711426
    3. 'get' → logprob: -10.250088691711426
    4. ' .' → logprob: -14.125088691711426
    5. '.U' → logprob: -14.875088691711426
    6. '   ' → logprob: -15.875088691711426
    7. 'U' → logprob: -16.12508773803711
    8. ').' → logprob: -16.50008773803711
    9. '```' → logprob: -16.87508773803711
    10. '.V' → logprob: -17.12508773803711

Token 723: '_speed' (ID: 43208)
  Prédit: '_speed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_speed' → logprob: -2.5776860184123507e-06
    2. 'speed' → logprob: -13.25000286102295
    3. '_' → logprob: -14.50000286102295
    4. '_SPEED' → logprob: -16.250001907348633
    5. '_s' → logprob: -16.375001907348633
    6. '_velocity' → logprob: -17.125001907348633
    7. '_sp' → logprob: -17.125001907348633
    8. 'Speed' → logprob: -18.375001907348633
    9. '_score' → logprob: -18.625001907348633
    10. ' speed' → logprob: -18.750001907348633

Token 724: '(time' (ID: 19192)
  Prédit: '(time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(time' → logprob: -0.0031993354205042124
    2. '(' → logprob: -5.753199100494385
    3. '(
' → logprob: -11.878199577331543
    4. ' (' → logprob: -12.378199577331543
    5. '(max' → logprob: -12.503199577331543
    6. '(t' → logprob: -12.503199577331543
    7. 'time' → logprob: -13.253199577331543
    8. '((' → logprob: -14.628199577331543
    9. '(distance' → logprob: -15.503199577331543
    10. '(abs' → logprob: -15.753199577331543

Token 725: '_since' (ID: 133288)
  Prédit: '_since'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_since' → logprob: -0.00010235115041723475
    2. 'since' → logprob: -9.625102043151855
    3. ')' → logprob: -11.125102043151855
    4. '   ' → logprob: -12.250102043151855
    5. '```' → logprob: -12.875102043151855
    6. ',' → logprob: -12.875102043151855
    7. '_' → logprob: -13.250102043151855
    8. 'Since' → logprob: -13.375102043151855
    9. '(' → logprob: -13.500102043151855
    10. '(s' → logprob: -13.750102043151855

Token 726: '_last' (ID: 26359)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.2815719544887543
    2. '_last' → logprob: -1.4065719842910767
    3. 'current' → logprob: -8.281572341918945
    4. 'car' → logprob: -9.406572341918945
    5. ' last' → logprob: -10.906572341918945
    6. '
' → logprob: -11.531572341918945
    7. '_current' → logprob: -11.781572341918945
    8. 'float' → logprob: -11.906572341918945
    9. 'inf' → logprob: -12.156572341918945
    10. 'e' → logprob: -12.156572341918945

Token 727: '_e' (ID: 4618)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.02971704490482807
    2. '_car' → logprob: -4.279716968536377
    3. '_e' → logprob: -4.904716968536377
    4. 'eat' → logprob: -5.154716968536377
    5. 'e' → logprob: -6.154716968536377
    6. '_c' → logprob: -10.404717445373535
    7. 'Car' → logprob: -10.904717445373535
    8. 'time' → logprob: -11.779717445373535
    9. '```' → logprob: -11.779717445373535
    10. '_time' → logprob: -11.779717445373535

Token 728: 'at' (ID: 266)
  Prédit: 'at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.024400565773248672
    2. 'car' → logprob: -3.774400472640991
    3. '_car' → logprob: -7.39940071105957
    4. 'e' → logprob: -9.52440071105957
    5. '```' → logprob: -9.89940071105957
    6. 'eat' → logprob: -10.39940071105957
    7. 'aten' → logprob: -10.52440071105957
    8. 'ed' → logprob: -10.52440071105957
    9. ' carrot' → logprob: -10.52440071105957
    10. 'Car' → logprob: -10.64940071105957

Token 729: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.2521803379058838
    2. ')' → logprob: -1.5021803379058838
    3. ')
' → logprob: -8.752180099487305
    4. '       ' → logprob: -10.127180099487305
    5. '           ' → logprob: -10.502180099487305
    6. ' )
' → logprob: -11.377180099487305
    7. ')

' → logprob: -12.127180099487305
    8. ')`
' → logprob: -13.377180099487305
    9. '               ' → logprob: -13.627180099487305
    10. '   ' → logprob: -13.752180099487305

Token 730: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03691205754876137
    2. 'return' → logprob: -3.911911964416504
    3. '       ' → logprob: -4.286911964416504
    4. ' return' → logprob: -6.661911964416504
    5. '
' → logprob: -7.161911964416504
    6. 'result' → logprob: -9.786911964416504
    7. ',' → logprob: -9.786911964416504
    8. '        
' → logprob: -10.036911964416504
    9. '   ' → logprob: -10.411911964416504
    10. '            
' → logprob: -10.411911964416504

Token 731: ' res' (ID: 694)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.04622071236371994
    2. 'time' → logprob: -3.2962207794189453
    3. 'result' → logprob: -5.421220779418945
    4. '           ' → logprob: -6.171220779418945
    5. '       ' → logprob: -7.671220779418945
    6. 'res' (adapté à ' res') → logprob: -8.046220779418945
    7. 'if' → logprob: -8.171220779418945
    8. 'self' → logprob: -8.671220779418945
    9. 't' → logprob: -8.921220779418945
    10. ' return' → logprob: -9.171220779418945

Token 732: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1602439284324646
    2. '=' → logprob: -1.9102439880371094
    3. ' ' → logprob: -12.28524398803711
    4. '	' → logprob: -12.91024398803711
    5. ')' → logprob: -13.03524398803711
    6. '_' → logprob: -13.28524398803711
    7. ' +=' → logprob: -13.41024398803711
    8. 's' → logprob: -13.66024398803711
    9. ',' → logprob: -13.78524398803711
    10. '		' → logprob: -14.66024398803711

Token 733: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.021481936797499657
    2. 'current' → logprob: -4.646481990814209
    3. ' dist' → logprob: -5.146481990814209
    4. 'time' → logprob: -5.271481990814209
    5. ' current' → logprob: -7.896481990814209
    6. 'segment' → logprob: -8.89648151397705
    7. ' time' → logprob: -9.64648151397705
    8. 'res' → logprob: -10.02148151397705
    9. '(dist' → logprob: -10.52148151397705
    10. '   ' → logprob: -11.14648151397705

Token 734: ' /' (ID: 820)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.023273084312677383
    2. ' /' → logprob: -3.77327299118042
    3. '/s' → logprob: -10.523273468017578
    4. '/
' → logprob: -14.523273468017578
    5. ' ' → logprob: -16.148273468017578
    6. '/
' → logprob: -17.398273468017578
    7. '/
/' → logprob: -18.523273468017578
    8. ' /
' → logprob: -19.148273468017578
    9. '/

' → logprob: -19.523273468017578
    10. '/self' → logprob: -19.523273468017578

Token 735: ' speed' (ID: 7733)
  Prédit: 'speed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'speed' → logprob: -6.2729995988775045e-06
    2. ' speed' → logprob: -12.000006675720215
    3. '(speed' → logprob: -17.5000057220459
    4. 'max' → logprob: -17.8750057220459
    5. '	speed' → logprob: -18.3750057220459
    6. '.speed' → logprob: -20.2500057220459
    7. '
' → logprob: -20.8750057220459
    8. '   ' → logprob: -21.2500057220459
    9. '```' → logprob: -21.5000057220459
    10. 'spe' → logprob: -21.7500057220459

Token 736: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007838593795895576
    2. '           ' → logprob: -5.007838726043701
    3. '
' → logprob: -7.632838726043701
    4. 'else' → logprob: -8.757838249206543
    5. '<|end|>' → logprob: -8.757838249206543
    6. 'self' → logprob: -9.007838249206543
    7. ')' → logprob: -9.507838249206543
    8. ',' → logprob: -10.757838249206543
    9. '   ' → logprob: -11.257838249206543
    10. '.' → logprob: -11.382838249206543

Token 737: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03934798762202263
    2. '           ' → logprob: -3.2893478870391846
    3. ')' → logprob: -7.414348125457764
    4. '<|end|>' → logprob: -8.664347648620605
    5. 'self' → logprob: -8.914347648620605
    6. '.' → logprob: -9.414347648620605
    7. '
' → logprob: -9.414347648620605
    8. 'else' → logprob: -10.164347648620605
    9. ',' → logprob: -10.289347648620605
    10. 'return' → logprob: -10.414347648620605

Token 738: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.09736312925815582
    2. '       ' → logprob: -2.472363233566284
    3. ' self' → logprob: -5.347362995147705
    4. '           ' → logprob: -5.847362995147705
    5. 'return' → logprob: -7.222362995147705
    6. '   ' → logprob: -12.972363471984863
    7. ' return' → logprob: -13.097363471984863
    8. '	self' → logprob: -13.222363471984863
    9. ')' → logprob: -14.347363471984863
    10. '
' → logprob: -14.472363471984863

Token 739: '.memo' (ID: 161018)
  Prédit: '.memo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.memo' → logprob: -2.4272752852994017e-05
    2. '.' → logprob: -11.25002384185791
    3. 'memo' → logprob: -12.00002384185791
    4. '.mem' → logprob: -13.00002384185791
    5. '.memory' → logprob: -13.12502384185791
    6. ' .' → logprob: -14.75002384185791
    7. '.motor' → logprob: -16.375024795532227
    8. '.cache' → logprob: -16.750024795532227
    9. '.
' → logprob: -16.875024795532227
    10. '.mime' → logprob: -17.000024795532227

Token 740: '[key' (ID: 16401)
  Prédit: '[key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[key' → logprob: -9.088346359931165e-07
    2. '[' → logprob: -14.000000953674316
    3. '[k' → logprob: -19.0
    4. ' [' → logprob: -19.25
    5. '[
' → logprob: -20.0
    6. 'key' → logprob: -20.0
    7. '[token' → logprob: -21.0
    8. '
' → logprob: -21.125
    9. '[(' → logprob: -21.25
    10. ')[' → logprob: -21.875

Token 741: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0031853171531111
    2. ' =' → logprob: -5.753185272216797
    3. ']' → logprob: -12.128185272216797
    4. ']=' → logprob: -13.253185272216797
    5. ')' → logprob: -15.128185272216797
    6. ')=' → logprob: -15.378185272216797
    7. '=
' → logprob: -17.378185272216797
    8. '=}' → logprob: -18.003185272216797
    9. '=

' → logprob: -19.128185272216797
    10. ',' → logprob: -20.003185272216797

Token 742: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00015860427811276168
    2. ' =' → logprob: -8.750158309936523
    3. '=
' → logprob: -16.875158309936523
    4. '=

' → logprob: -19.750158309936523
    5. '=}' → logprob: -20.125158309936523
    6. '.=' → logprob: -21.625158309936523
    7. ' =
' → logprob: -21.875158309936523
    8. ')=' → logprob: -22.875158309936523
    9. '＝' → logprob: -23.125158309936523
    10. '   ' → logprob: -23.250158309936523

Token 743: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.00016194197814911604
    2. 'current' → logprob: -9.125162124633789
    3. ' res' → logprob: -9.875162124633789
    4. 're' → logprob: -15.000162124633789
    5. '	res' → logprob: -15.250162124633789
    6. 'time' → logprob: -15.625162124633789
    7. ' current' → logprob: -16.12516212463379
    8. 'r' → logprob: -16.12516212463379
    9. 'cur' → logprob: -16.37516212463379
    10. '(res' → logprob: -16.75016212463379

Token 744: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03630204126238823
    2. '       ' → logprob: -3.411302089691162
    3. 'return' → logprob: -6.161302089691162
    4. '<|end|>' → logprob: -8.411301612854004
    5. '               ' → logprob: -9.286301612854004
    6. '
' → logprob: -10.036301612854004
    7. ' return' → logprob: -10.411301612854004
    8. '	       ' → logprob: -10.661301612854004
    9. '	return' → logprob: -10.911301612854004
    10. '   ' → logprob: -11.161301612854004

Token 745: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00045724798110313714
    2. 'return' → logprob: -8.125456809997559
    3. '       ' → logprob: -8.875456809997559
    4. ' return' → logprob: -11.750456809997559
    5. '<|end|>' → logprob: -12.000456809997559
    6. '	       ' → logprob: -13.125456809997559
    7. '               ' → logprob: -13.750456809997559
    8. '<|end|>' → logprob: -14.125456809997559
    9. '		' → logprob: -14.250456809997559
    10. ',' → logprob: -14.625456809997559

Token 746: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.06321587413549423
    2. '           ' → logprob: -2.813215970993042
    3. '       ' → logprob: -7.188215732574463
    4. ' return' → logprob: -7.688215732574463
    5. '	return' → logprob: -10.438216209411621
    6. '	       ' → logprob: -14.188216209411621
    7. '   ' → logprob: -14.188216209411621
    8. ':return' → logprob: -14.188216209411621
    9. '		' → logprob: -14.313216209411621
    10. '	   ' → logprob: -14.563216209411621

Token 747: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.0004309076175559312
    2. ' res' → logprob: -7.750431060791016
    3. 're' → logprob: -16.500431060791016
    4. '	res' → logprob: -17.000431060791016
    5. '   ' → logprob: -18.000431060791016
    6. 'r' → logprob: -18.000431060791016
    7. 'ress' → logprob: -18.625431060791016
    8. ' ' → logprob: -18.750431060791016
    9. '```' → logprob: -18.750431060791016
    10. '
' → logprob: -19.000431060791016

Token 748: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2603027820587158
    2. '<|end|>' → logprob: -2.010302782058716
    3. '        
' → logprob: -3.260302782058716
    4. '
' → logprob: -3.260302782058716
    5. ')' → logprob: -5.135302543640137
    6. '\n' → logprob: -5.260302543640137
    7. '        ' → logprob: -6.635302543640137
    8. '    
' → logprob: -6.635302543640137
    9. '<|end|>' → logprob: -7.010302543640137
    10. '  
' → logprob: -7.260302543640137

Token 749: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0026332074776291847
    2. '        
' → logprob: -6.752633094787598
    3. ')' → logprob: -7.627633094787598
    4. '   ' → logprob: -8.002633094787598
    5. 'next' → logprob: -9.377633094787598
    6. '\' → logprob: -10.002633094787598
    7. '    
' → logprob: -10.127633094787598
    8. ',' → logprob: -10.252633094787598
    9. '```' → logprob: -10.252633094787598
    10. ' next' → logprob: -10.252633094787598

Token 750: ' #' (ID: 1069)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.13005918264389038
    2. '       ' → logprob: -3.005059242248535
    3. 'next' → logprob: -3.255059242248535
    4. 'current' → logprob: -4.380059242248535
    5. 'distance' → logprob: -5.130059242248535
    6. ' segment' → logprob: -5.130059242248535
    7. 'dist' → logprob: -5.380059242248535
    8. 'pos' → logprob: -7.130059242248535
    9. 'rest' → logprob: -7.380059242248535
    10. 'prev' → logprob: -7.380059242248535

Token 751: ' Current' (ID: 14536)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.006839334033429623
    2. 'current' → logprob: -5.756839275360107
    3. '#' → logprob: -6.506839275360107
    4. 'next' → logprob: -6.756839275360107
    5. 'curr' → logprob: -7.881839275360107
    6. 'seg' → logprob: -8.256839752197266
    7. 'dist' → logprob: -9.006839752197266
    8. 'distance' → logprob: -9.256839752197266
    9. 'result' → logprob: -10.506839752197266
    10. ' segment' → logprob: -10.631839752197266

Token 752: ' segment' (ID: 14806)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.017755012959241867
    2. '_segment' → logprob: -4.642755031585693
    3. ' segment' → logprob: -5.142755031585693
    4. 'dist' → logprob: -7.892755031585693
    5. 'distance' → logprob: -7.892755031585693
    6. 'position' → logprob: -7.892755031585693
    7. 'token' → logprob: -8.517754554748535
    8. 'pos' → logprob: -8.642754554748535
    9. '       ' → logprob: -8.767754554748535
    10. 'seg' → logprob: -9.142754554748535

Token 753: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18064886331558228
    2. '=' → logprob: -1.8056488037109375
    3. '       ' → logprob: -7.6806488037109375
    4. 'segment' → logprob: -8.305648803710938
    5. ':' → logprob: -9.180648803710938
    6. ',' → logprob: -10.430648803710938
    7. 'dist' → logprob: -11.930648803710938
    8. '   ' → logprob: -12.180648803710938
    9. '.segment' → logprob: -12.180648803710938
    10. '_segment' → logprob: -12.305648803710938

Token 754: ' from' (ID: 591)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.00045474470243789256
    2. '       ' → logprob: -8.250454902648926
    3. ' segment' → logprob: -8.875454902648926
    4. 'current' → logprob: -10.750454902648926
    5. 'seg' → logprob: -11.250454902648926
    6. 'dist' → logprob: -11.500454902648926
    7. '```' → logprob: -13.000454902648926
    8. 'distance' → logprob: -13.125454902648926
    9. 'curr' → logprob: -13.375454902648926
    10. 'prev' → logprob: -14.125454902648926

Token 755: ' prev' (ID: 10258)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.002382664941251278
    2. ' self' → logprob: -7.252382755279541
    3. '(self' → logprob: -7.377382755279541
    4. '=self' → logprob: -7.377382755279541
    5. 'segment' → logprob: -8.752382278442383
    6. 'idx' → logprob: -9.877382278442383
    7. '=' → logprob: -10.252382278442383
    8. ' =' → logprob: -10.752382278442383
    9. 'current' → logprob: -10.877382278442383
    10. 'start' → logprob: -11.002382278442383

Token 756: ' carrot' (ID: 121234)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'end' → logprob: -1.6167497634887695
    2. '_end' → logprob: -1.9917497634887695
    3. 'segment' → logprob: -1.9917497634887695
    4. 'self' → logprob: -2.1167497634887695
    5. '_segment' → logprob: -2.3667497634887695
    6. ',' → logprob: -2.6167497634887695
    7. '_token' → logprob: -2.7417497634887695
    8. '.end' → logprob: -2.8667497634887695
    9. ',end' → logprob: -4.2417497634887695
    10. '.position' → logprob: -4.6167497634887695

Token 757: ' pos' (ID: 1253)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.6216679811477661
    2. ' to' → logprob: -0.9966679811477661
    3. 'position' → logprob: -3.2466678619384766
    4. 'start' → logprob: -3.9966678619384766
    5. 'pos' → logprob: -4.621667861938477
    6. 'end' → logprob: -4.746667861938477
    7. '       ' → logprob: -5.496667861938477
    8. '=' → logprob: -6.496667861938477
    9. 'self' → logprob: -6.621667861938477
    10. ' =' → logprob: -6.621667861938477

Token 758: ' to' (ID: 316)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5945037007331848
    2. ' to' → logprob: -1.46950364112854
    3. '=' → logprob: -2.46950364112854
    4. 'to' → logprob: -2.59450364112854
    5. '       ' → logprob: -3.34450364112854
    6. ',' → logprob: -5.094503879547119
    7. 'start' → logprob: -5.219503879547119
    8. 'self' → logprob: -6.594503879547119
    9. '<|end|>' → logprob: -6.844503879547119
    10. ')' → logprob: -7.219503879547119

Token 759: ' carrot' (ID: 121234)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.003720503766089678
    2. 'current' → logprob: -6.378720283508301
    3. ' self' → logprob: -6.753720283508301
    4. 'segment' → logprob: -7.503720283508301
    5. 'next' → logprob: -9.0037202835083
    6. 'course' → logprob: -9.8787202835083
    7. ' current' → logprob: -10.0037202835083
    8. 'pos' → logprob: -10.6287202835083
    9. 'car' → logprob: -11.5037202835083
    10. 'the' → logprob: -11.5037202835083

Token 760: ' idx' (ID: 14016)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.5899170637130737
    2. 'end' → logprob: -1.5899170637130737
    3. 'position' → logprob: -1.5899170637130737
    4. 'start' → logprob: -4.589917182922363
    5. '_positions' → logprob: -5.089917182922363
    6. '.position' → logprob: -5.589917182922363
    7. 'self' → logprob: -6.089917182922363
    8. '_pos' → logprob: -6.339917182922363
    9. '.end' → logprob: -6.339917182922363
    10. ' position' → logprob: -6.464917182922363

Token 761: ' pos' (ID: 1253)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.7125509977340698
    2. '       ' → logprob: -0.8375509977340698
    3. ' =' → logprob: -3.0875511169433594
    4. ',' → logprob: -4.462551116943359
    5. ' segment' → logprob: -4.962551116943359
    6. '=' → logprob: -5.087551116943359
    7. '_segment' → logprob: -6.337551116943359
    8. '        
' → logprob: -6.837551116943359
    9. '   ' → logprob: -7.837551116943359
    10. ':' → logprob: -7.837551116943359

Token 762: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06476592272520065
    2. ',' → logprob: -3.1897659301757812
    3. 'segment' → logprob: -4.939765930175781
    4. '        
' → logprob: -5.314765930175781
    5. '.' → logprob: -5.564765930175781
    6. ' segment' → logprob: -6.564765930175781
    7. '<|end|>' → logprob: -7.564765930175781
    8. 'dist' → logprob: -7.814765930175781
    9. ':' → logprob: -7.939765930175781
    10. 'distance' → logprob: -8.189765930175781

Token 763: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01635879836976528
    2. 'segment' → logprob: -4.516358852386475
    3. ' segment' → logprob: -6.266358852386475
    4. '        
' → logprob: -6.641358852386475
    5. '
' → logprob: -6.766358852386475
    6. ',' → logprob: -7.516358852386475
    7. '```' → logprob: -9.141358375549316
    8. 'dist' → logprob: -9.391358375549316
    9. 'distance' → logprob: -10.141358375549316
    10. 'current' → logprob: -10.141358375549316

Token 764: ' segment' (ID: 14806)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' (adapté à ' segment') → logprob: -0.002754118526354432
    2. '       ' → logprob: -6.627754211425781
    3. 'dist' → logprob: -7.127754211425781
    4. ' segment' → logprob: -7.877754211425781
    5. 'current' → logprob: -9.252754211425781
    6. 'distance' → logprob: -9.877754211425781
    7. 'prev' → logprob: -10.002754211425781
    8. 'next' → logprob: -11.002754211425781
    9. 'seg' → logprob: -11.377754211425781
    10. 'curr' → logprob: -11.502754211425781

Token 765: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4740825295448303
    2. '=' → logprob: -0.9740825295448303
    3. '.' → logprob: -13.349082946777344
    4. ' ' → logprob: -14.224082946777344
    5. ',' → logprob: -14.349082946777344
    6. ':' → logprob: -14.474082946777344
    7. '=self' → logprob: -15.099082946777344
    8. '=current' → logprob: -15.349082946777344
    9. '        ' → logprob: -15.599082946777344
    10. '	' → logprob: -15.724082946777344

Token 766: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0003361774142831564
    2. ' self' → logprob: -8.000336647033691
    3. '=self' → logprob: -14.875336647033691
    4. '(self' → logprob: -15.750336647033691
    5. '[self' → logprob: -16.125335693359375
    6. '	self' → logprob: -17.125335693359375
    7. '
' → logprob: -17.625335693359375
    8. '   ' → logprob: -17.875335693359375
    9. '$self' → logprob: -18.125335693359375
    10. 'course' → logprob: -18.250335693359375

Token 767: '.course' (ID: 67214)
  Prédit: '.course'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.course' → logprob: -3.0948158382670954e-05
    2. 'course' → logprob: -10.625030517578125
    3. 'self' → logprob: -12.000030517578125
    4. '.' → logprob: -14.750030517578125
    5. '.self' → logprob: -17.000030517578125
    6. 'Course' → logprob: -18.250030517578125
    7. '.Course' → logprob: -18.250030517578125
    8. ' course' → logprob: -18.375030517578125
    9. 'ourse' → logprob: -19.500030517578125
    10. '.class' → logprob: -19.500030517578125

Token 768: '.se' (ID: 5877)
  Prédit: '.se'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.se' → logprob: -8.895480277715251e-06
    2. '.' → logprob: -12.375008583068848
    3. 'segments' → logprob: -12.875008583068848
    4. '.s' → logprob: -13.750008583068848
    5. '.segment' → logprob: -15.125008583068848
    6. ' .' → logprob: -15.375008583068848
    7. '   ' → logprob: -16.000009536743164
    8. '	se' → logprob: -16.125009536743164
    9. '.seg' → logprob: -17.000009536743164
    10. '
' → logprob: -17.375009536743164

Token 769: 'gments' (ID: 59025)
  Prédit: 'gments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gments' → logprob: -0.00014942926645744592
    2. 'ments' → logprob: -8.875149726867676
    3. 'g' → logprob: -12.000149726867676
    4. 'gment' → logprob: -13.500149726867676
    5. 'gements' → logprob: -13.875149726867676
    6. 'segments' → logprob: -14.000149726867676
    7. 'nts' → logprob: -16.87514877319336
    8. '```' → logprob: -17.25014877319336
    9. 'gm' → logprob: -17.87514877319336
    10. '__' → logprob: -18.00014877319336

Token 770: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -1.0921942703134846e-05
    2. '[self' → logprob: -12.25001049041748
    3. '[' → logprob: -12.50001049041748
    4. 'idx' → logprob: -13.50001049041748
    5. '[index' → logprob: -14.87501049041748
    6. '[key' → logprob: -15.87501049041748
    7. '       ' → logprob: -16.500011444091797
    8. 'self' → logprob: -16.625011444091797
    9. '```' → logprob: -16.625011444091797
    10. '[
' → logprob: -16.875011444091797

Token 771: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5905789732933044
    2. ']' → logprob: -0.8405789732933044
    3. ')
' → logprob: -4.965579032897949
    4. ']
' → logprob: -5.215579032897949
    5. '       ' → logprob: -6.715579032897949
    6. '])' → logprob: -7.840579032897949
    7. ' )' → logprob: -8.84057903289795
    8. ')]' → logprob: -8.84057903289795
    9. ' ]' → logprob: -9.34057903289795
    10. '   ' → logprob: -10.34057903289795

Token 772: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13930977880954742
    2. 'distance' → logprob: -2.639309883117676
    3. 'dist' → logprob: -3.139309883117676
    4. 'time' → logprob: -5.264309883117676
    5. 'prev' → logprob: -5.514309883117676
    6. '
' → logprob: -6.014309883117676
    7. ' distance' → logprob: -7.264309883117676
    8. '        
' → logprob: -8.139309883117676
    9. 'next' → logprob: -8.139309883117676
    10. '```' → logprob: -8.139309883117676

Token 773: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.2291538268327713
    2. 'distance' → logprob: -2.479153871536255
    3. 'time' → logprob: -2.854153871536255
    4. '#' → logprob: -3.354153871536255
    5. 'pos' → logprob: -4.104153633117676
    6. 'current' → logprob: -6.104153633117676
    7. 'prev' → logprob: -6.479153633117676
    8. 'curr' → logprob: -6.979153633117676
    9. 'res' → logprob: -6.979153633117676
    10. 'best' → logprob: -7.354153633117676

Token 774: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1040387824177742
    2. '=' → logprob: -2.354038715362549
    3. '_' → logprob: -6.229038715362549
    4. '_time' → logprob: -7.229038715362549
    5. ' /' → logprob: -8.354039192199707
    6. '/' → logprob: -8.979039192199707
    7. '_length' → logprob: -9.354039192199707
    8. ',' → logprob: -9.479039192199707
    9. ' ' → logprob: -9.479039192199707
    10. '       ' → logprob: -9.604039192199707

Token 775: ' segment' (ID: 14806)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.0011708177626132965
    2. ' segment' → logprob: -6.751170635223389
    3. '(segment' → logprob: -14.751171112060547
    4. '.segment' → logprob: -17.376171112060547
    5. 'self' → logprob: -17.626171112060547
    6. 'dist' → logprob: -17.876171112060547
    7. 'section' → logprob: -17.876171112060547
    8. '
' → logprob: -17.876171112060547
    9. 'seg' → logprob: -18.001171112060547
    10. 'interval' → logprob: -18.251171112060547

Token 776: '.length' (ID: 3116)
  Prédit: '.length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.length' → logprob: -2.7252845029579476e-05
    2. '.' → logprob: -10.750027656555176
    3. '.end' → logprob: -13.375027656555176
    4. 'length' → logprob: -13.625027656555176
    5. ' .' → logprob: -13.750027656555176
    6. '.l' → logprob: -14.375027656555176
    7. '.start' → logprob: -15.375027656555176
    8. '```' → logprob: -15.375027656555176
    9. '.width' → logprob: -16.00002670288086
    10. '.len' → logprob: -16.25002670288086

Token 777: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3923216760158539
    2. '
' → logprob: -1.6423217058181763
    3. ',' → logprob: -2.3923215866088867
    4. '        
' → logprob: -3.7673215866088867
    5. '<|end|>' → logprob: -5.517321586608887
    6. ')' → logprob: -6.642321586608887
    7. '#' → logprob: -6.767321586608887
    8. '  
' → logprob: -7.142321586608887
    9. '
' → logprob: -7.267321586608887
    10. '' → logprob: -7.392321586608887

Token 778: '       ' (ID: 309)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.31943589448928833
    2. '#' → logprob: -2.1944358348846436
    3. 'best' → logprob: -2.8194358348846436
    4. '       ' → logprob: -2.9444358348846436
    5. 'res' → logprob: -4.069436073303223
    6. 'result' → logprob: -4.194436073303223
    7. 'min' → logprob: -5.694436073303223
    8. 'speed' → logprob: -6.069436073303223
    9. 'next' → logprob: -6.319436073303223
    10. 'results' → logprob: -6.569436073303223

Token 779: ' #' (ID: 1069)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.7488579750061035
    2. '#' (adapté à ' #') → logprob: -1.4988579750061035
    3. 'res' → logprob: -2.1238579750061035
    4. 'min' → logprob: -2.3738579750061035
    5. 'best' → logprob: -3.1238579750061035
    6. 'results' → logprob: -3.2488579750061035
    7. 'times' → logprob: -5.3738579750061035
    8. 'result' → logprob: -6.8738579750061035
    9. 'options' → logprob: -7.7488579750061035
    10. 'minimal' → logprob: -7.8738579750061035

Token 780: ' elapsed' (ID: 56505)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.180864155292511
    2. '#' → logprob: -2.180864095687866
    3. 'res' → logprob: -3.930864095687866
    4. 'results' → logprob: -4.305864334106445
    5. 'min' → logprob: -4.930864334106445
    6. 'times' → logprob: -5.555864334106445
    7. 'result' → logprob: -5.930864334106445
    8. 'best' → logprob: -6.305864334106445
    9. 'options' → logprob: -6.555864334106445
    10. 'minimal' → logprob: -8.180864334106445

Token 781: ' time' (ID: 1058)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.3736108541488647
    2. 'time' → logprob: -1.3736108541488647
    3. '_since' → logprob: -1.6236108541488647
    4. '_time' → logprob: -1.7486108541488647
    5. 'since' → logprob: -2.3736109733581543
    6. ' =' → logprob: -3.6236109733581543
    7. '=time' → logprob: -8.498610496520996
    8. '_' → logprob: -8.748610496520996
    9. 'waiting' → logprob: -8.873610496520996
    10. '_speed' → logprob: -8.873610496520996

Token 782: ' since' (ID: 3630)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6556655764579773
    2. 'since' → logprob: -1.280665636062622
    3. '_since' → logprob: -1.655665636062622
    4. ' =' → logprob: -4.530665397644043
    5. '       ' → logprob: -7.280665397644043
    6. 'Since' → logprob: -8.530665397644043
    7. 'elapsed' → logprob: -9.155665397644043
    8. ' since' → logprob: -9.155665397644043
    9. '_elapsed' → logprob: -10.405665397644043
    10. '   ' → logprob: -10.905665397644043

Token 783: ' last' (ID: 2174)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.014011415652930737
    2. ' last' → logprob: -4.764011383056641
    3. 'current' → logprob: -5.514011383056641
    4. 'the' → logprob: -7.264011383056641
    5. 'start' → logprob: -8.76401138305664
    6. '_last' → logprob: -8.76401138305664
    7. ' current' → logprob: -9.38901138305664
    8. 'car' → logprob: -9.38901138305664
    9. ' the' → logprob: -10.38901138305664
    10. '(last' → logprob: -10.63901138305664

Token 784: ' carrot' (ID: 121234)
  Prédit: '_e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_e' → logprob: -0.1319776475429535
    2. '_car' → logprob: -2.1319775581359863
    3. '_' → logprob: -6.506977558135986
    4. 'e' → logprob: -6.506977558135986
    5. 'eat' → logprob: -6.881977558135986
    6. 'car' → logprob: -7.131977558135986
    7. '_c' → logprob: -9.381978034973145
    8. '=' → logprob: -11.006978034973145
    9. '   ' → logprob: -11.131978034973145
    10. ' =' → logprob: -11.256978034973145

Token 785: ' eaten' (ID: 56450)
  Prédit: '_e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_e' → logprob: -0.7929190993309021
    2. '=' → logprob: -1.5429191589355469
    3. ' =' → logprob: -1.6679191589355469
    4. 'e' → logprob: -2.792919158935547
    5. 'eat' → logprob: -3.292919158935547
    6. '_time' → logprob: -3.792919158935547
    7. '       ' → logprob: -4.917919158935547
    8. 'time' → logprob: -5.167919158935547
    9. 'since' → logprob: -6.167919158935547
    10. ' eaten' → logprob: -6.292919158935547

Token 786: ' when' (ID: 1261)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.2709397077560425
    2. 'since' → logprob: -2.520939826965332
    3. 'elapsed' → logprob: -2.520939826965332
    4. '       ' → logprob: -2.770939826965332
    5. '=' → logprob: -4.770939826965332
    6. ' =' → logprob: -6.395939826965332
    7. ' time' → logprob: -6.395939826965332
    8. ' since' → logprob: -7.270939826965332
    9. ' elapsed' → logprob: -8.020939826965332
    10. '_since' → logprob: -8.145939826965332

Token 787: ' starting' (ID: 8601)
  Prédit: 'running'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'running' → logprob: -0.1766567975282669
    2. 'moving' → logprob: -2.301656723022461
    3. 'starting' → logprob: -3.051656723022461
    4. 'current' → logprob: -5.676656723022461
    5. 'travel' → logprob: -5.926656723022461
    6. 'start' → logprob: -6.301656723022461
    7. 'passing' → logprob: -6.676656723022461
    8. 'arr' → logprob: -6.676656723022461
    9. 'cover' → logprob: -7.801656723022461
    10. 'runner' → logprob: -7.926656723022461

Token 788: ' this' (ID: 495)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.22695210576057434
    2. ' =' → logprob: -3.101952075958252
    3. 'from' → logprob: -3.226952075958252
    4. 'since' → logprob: -3.976952075958252
    5. 'to' → logprob: -4.101952075958252
    6. '       ' → logprob: -4.476952075958252
    7. 'for' → logprob: -4.851952075958252
    8. 'current' → logprob: -4.976952075958252
    9. 'at' → logprob: -4.976952075958252
    10. 'of' → logprob: -5.351952075958252

Token 789: ' segment' (ID: 14806)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.5905083417892456
    2. '_' → logprob: -1.0905083417892456
    3. '_run' → logprob: -3.090508460998535
    4. '_segment' → logprob: -3.465508460998535
    5. ' segment' → logprob: -4.340508460998535
    6. 'run' → logprob: -4.840508460998535
    7. '_time' → logprob: -5.840508460998535
    8. 'time' → logprob: -6.590508460998535
    9. 'distance' → logprob: -6.840508460998535
    10. '_dp' → logprob: -6.965508460998535

Token 790: ':
' (ID: 734)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'time' → logprob: -1.0448836088180542
    2. '=' → logprob: -1.4198836088180542
    3. 'elapsed' → logprob: -1.7948836088180542
    4. '       ' → logprob: -2.2948837280273438
    5. 'since' → logprob: -2.4198837280273438
    6. ' =' → logprob: -3.1698837280273438
    7. '_since' → logprob: -6.169883728027344
    8. ' time' → logprob: -6.419883728027344
    9. ' elapsed' → logprob: -6.794883728027344
    10. ' since' → logprob: -6.919883728027344

Token 791: '       ' (ID: 309)
  Prédit: ' time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' time' → logprob: -0.6151323318481445
    2. 'time' → logprob: -1.2401323318481445
    3. '       ' → logprob: -1.9901323318481445
    4. 'elapsed' → logprob: -4.2401323318481445
    5. ' elapsed' → logprob: -4.2401323318481445
    6. ' since' → logprob: -6.2401323318481445
    7. 'since' → logprob: -7.1151323318481445
    8. '        
' → logprob: -7.9901323318481445
    9. ' last' → logprob: -8.990132331848145
    10. 't' → logprob: -9.115132331848145

Token 792: ' time' (ID: 1058)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' (adapté à ' time') → logprob: -0.09595422446727753
    2. ' time' → logprob: -2.595954179763794
    3. 'elapsed' → logprob: -4.220954418182373
    4. ' elapsed' → logprob: -6.345954418182373
    5. '   ' → logprob: -8.970953941345215
    6. '       ' → logprob: -9.470953941345215
    7. 't' → logprob: -9.470953941345215
    8. 'since' → logprob: -10.095953941345215
    9. 'current' → logprob: -10.720953941345215
    10. ' since' → logprob: -11.095953941345215

Token 793: '_since' (ID: 133288)
  Prédit: '_since'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_since' → logprob: -0.0029413290321826935
    2. 'since' → logprob: -6.752941131591797
    3. '_elapsed' → logprob: -6.877941131591797
    4. '_pass' → logprob: -7.377941131591797
    5. '_diff' → logprob: -10.752941131591797
    6. '       ' → logprob: -10.877941131591797
    7. '_gap' → logprob: -11.002941131591797
    8. 'elapsed' → logprob: -11.627941131591797
    9. '_wait' → logprob: -11.877941131591797
    10. 'diff' → logprob: -12.127941131591797

Token 794: '_last' (ID: 26359)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.38716739416122437
    2. '_last' → logprob: -1.1371674537658691
    3. '_' → logprob: -9.012166976928711
    4. '=' → logprob: -10.387166976928711
    5. 'current' → logprob: -10.387166976928711
    6. ' last' → logprob: -10.762166976928711
    7. '_current' → logprob: -11.137166976928711
    8. 'car' → logprob: -11.262166976928711
    9. ' =' → logprob: -11.387166976928711
    10. 'e' → logprob: -11.887166976928711

Token 795: '_e' (ID: 4618)
  Prédit: '_e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_e' → logprob: -0.08084213733673096
    2. 'eat' → logprob: -2.5808420181274414
    3. 'e' → logprob: -7.080842018127441
    4. '=' → logprob: -7.705842018127441
    5. '_car' → logprob: -8.580842018127441
    6. 'car' → logprob: -8.705842018127441
    7. ' =' → logprob: -9.205842018127441
    8. '_' → logprob: -10.205842018127441
    9. '       ' → logprob: -10.330842018127441
    10. 'Eat' → logprob: -10.580842018127441

Token 796: 'at' (ID: 266)
  Prédit: 'at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.00027206414961256087
    2. 'eat' → logprob: -9.000271797180176
    3. '_at' → logprob: -10.000271797180176
    4. 'car' → logprob: -10.125271797180176
    5. 'ат' → logprob: -11.312771797180176
    6. '_car' → logprob: -11.437771797180176
    7. 'aten' → logprob: -12.375271797180176
    8. 'At' → logprob: -13.125271797180176
    9. 'a' → logprob: -13.187771797180176
    10. '```' → logprob: -13.250271797180176

Token 797: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.632622480392456
    2. ' =' → logprob: -0.757622480392456
    3. ' ' → logprob: -11.507622718811035
    4. ')' → logprob: -12.257622718811035
    5. '	' → logprob: -13.132622718811035
    6. ',' → logprob: -13.382622718811035
    7. ' ' → logprob: -13.507622718811035
    8. 'space' → logprob: -14.507622718811035
    9. ':' → logprob: -14.882622718811035
    10. '_' → logprob: -15.132622718811035

Token 798: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.005241583567112684
    2. ' current' → logprob: -5.255241394042969
    3. '(current' → logprob: -12.755241394042969
    4. 'max' → logprob: -12.880241394042969
    5. '   ' → logprob: -14.130241394042969
    6. 'float' → logprob: -14.880241394042969
    7. '
' → logprob: -15.005241394042969
    8. 'cur' → logprob: -15.130241394042969
    9. '0' → logprob: -15.630241394042969
    10. 'curr' → logprob: -16.13024139404297

Token 799: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.00017684244085103273
    2. '-' → logprob: -9.125176429748535
    3. '_car' → logprob: -10.500176429748535
    4. 'time' → logprob: -11.250176429748535
    5. ' -' → logprob: -11.375176429748535
    6. '_current' → logprob: -12.625176429748535
    7. 'current' → logprob: -12.625176429748535
    8. '_' → logprob: -12.875176429748535
    9. '=' → logprob: -13.250176429748535
    10. 'Time' → logprob: -13.750176429748535

Token 800: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.20141948759555817
    2. '-' → logprob: -1.701419472694397
    3. ' if' → logprob: -12.826419830322266
    4. ' -
' → logprob: -14.326419830322266
    5. '-
' → logprob: -14.451419830322266
    6. '-if' → logprob: -14.701419830322266
    7. ' ' → logprob: -14.951419830322266
    8. '-self' → logprob: -15.201419830322266
    9. ')' → logprob: -15.576419830322266
    10. ' ' → logprob: -15.576419830322266

Token 801: ' last' (ID: 2174)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.0003806257154792547
    2. ' last' → logprob: -7.875380516052246
    3. '(last' → logprob: -15.250380516052246
    4. '
' → logprob: -16.000381469726562
    5. '   ' → logprob: -17.000381469726562
    6. ' ' → logprob: -17.750381469726562
    7. '[last' → logprob: -18.125381469726562
    8. '	last' → logprob: -18.250381469726562
    9. '_last' → logprob: -18.375381469726562
    10. 'max' → logprob: -18.375381469726562

Token 802: '_car' (ID: 62991)
  Prédit: '_car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_car' → logprob: -8.840432565193623e-05
    2. '_' → logprob: -9.750088691711426
    3. '_c' → logprob: -11.625088691711426
    4. 'Car' → logprob: -12.000088691711426
    5. 'car' → logprob: -12.375088691711426
    6. ' _' → logprob: -12.500088691711426
    7. '```' → logprob: -13.500088691711426
    8. '\' → logprob: -14.125088691711426
    9. ''_' → logprob: -14.375088691711426
    10. 'e' → logprob: -14.375088691711426

Token 803: 'rot' (ID: 8150)
  Prédit: 'rot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rot' → logprob: -0.021039865911006927
    2. 'ot' → logprob: -4.021039962768555
    3. '_rot' → logprob: -6.646039962768555
    4. 'car' → logprob: -8.021039962768555
    5. '_time' → logprob: -8.271039962768555
    6. 'ott' → logprob: -8.396039962768555
    7. '_car' → logprob: -8.646039962768555
    8. 'rott' → logprob: -8.771039962768555
    9. 't' → logprob: -9.271039962768555
    10. 'ro' → logprob: -9.271039962768555

Token 804: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.0002342912630410865
    2. '_car' → logprob: -8.625234603881836
    3. '_' → logprob: -10.875234603881836
    4. 'time' → logprob: -10.875234603881836
    5. 'car' → logprob: -11.750234603881836
    6. '_t' → logprob: -12.625234603881836
    7. '```' → logprob: -14.125234603881836
    8. '_c' → logprob: -14.250234603881836
    9. 'Time' → logprob: -14.375234603881836
    10. ' _' → logprob: -14.625234603881836

Token 805: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2973437011241913
    2. '
' → logprob: -2.0473437309265137
    3. ' if' → logprob: -2.2973437309265137
    4. '        
' → logprob: -4.672343730926514
    5. 'if' → logprob: -5.672343730926514
    6. ')' → logprob: -5.672343730926514
    7. ',' → logprob: -5.922343730926514
    8. ' 
' → logprob: -5.922343730926514
    9. ' ' → logprob: -6.922343730926514
    10. '    
' → logprob: -7.297343730926514

Token 806: ' last' (ID: 2174)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.0010391215328127146
    2. ' last' → logprob: -6.876039028167725
    3. '(last' → logprob: -12.126039505004883
    4. '   ' → logprob: -14.501039505004883
    5. '0' → logprob: -16.001039505004883
    6. '           ' → logprob: -16.501039505004883
    7. ' ' → logprob: -16.876039505004883
    8. '	last' → logprob: -17.001039505004883
    9. 'lasti' → logprob: -17.126039505004883
    10. '[last' → logprob: -17.126039505004883

Token 807: '_car' (ID: 62991)
  Prédit: '_car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_car' → logprob: -0.0005095454398542643
    2. 'Car' → logprob: -8.625509262084961
    3. 'last' → logprob: -9.000509262084961
    4. 'car' → logprob: -9.125509262084961
    5. '>=' → logprob: -10.625509262084961
    6. 'since' → logprob: -10.875509262084961
    7. '_since' → logprob: -11.500509262084961
    8. '_last' → logprob: -11.875509262084961
    9. '>' → logprob: -12.125509262084961
    10. '<Car' → logprob: -12.250509262084961

Token 808: 'rot' (ID: 8150)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.0023236756678670645
    2. '_since' → logprob: -6.627323627471924
    3. '_car' → logprob: -7.752323627471924
    4. 'ot' → logprob: -8.752324104309082
    5. '_e' → logprob: -8.877324104309082
    6. 'e' → logprob: -9.127324104309082
    7. '>=' → logprob: -11.002324104309082
    8. '_t' → logprob: -11.002324104309082
    9. '_to' → logprob: -11.252324104309082
    10. 'eat' → logprob: -11.252324104309082

Token 809: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.10300755500793457
    2. '>=' → logprob: -2.4780075550079346
    3. ' >=' → logprob: -4.7280073165893555
    4. '_car' → logprob: -5.6030073165893555
    5. '_' → logprob: -7.9780073165893555
    6. 'car' → logprob: -8.228007316589355
    7. 'if' → logprob: -8.978007316589355
    8. '_t' → logprob: -9.353007316589355
    9. '   ' → logprob: -9.478007316589355
    10. '_last' → logprob: -9.478007316589355

Token 810: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.47022712230682373
    2. '>=' → logprob: -1.0952271223068237
    3. '>' → logprob: -3.5952272415161133
    4. ' >' → logprob: -4.345227241516113
    5. ' if' → logprob: -9.220227241516113
    6. 'if' → logprob: -9.720227241516113
    7. ' ' → logprob: -9.845227241516113
    8. ' <' → logprob: -11.470227241516113
    9. '<' → logprob: -11.845227241516113
    10. '   ' → logprob: -12.095227241516113

Token 811: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0011703446507453918
    2. ' ' → logprob: -6.7511701583862305
    3. '   ' → logprob: -16.751171112060547
    4. 'else' → logprob: -17.751171112060547
    5. '
' → logprob: -18.126171112060547
    6. ' ' → logprob: -18.251171112060547
    7. '۰' → logprob: -18.251171112060547
    8. '  ' → logprob: -18.751171112060547
    9. '```' → logprob: -18.938671112060547
    10. '00' → logprob: -18.938671112060547

Token 812: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.7729658540920354e-05
    2. ' ' → logprob: -10.500027656555176
    3. '
' → logprob: -16.625028610229492
    4. 'else' → logprob: -17.250028610229492
    5. '   ' → logprob: -18.000028610229492
    6. '۰' → logprob: -18.375028610229492
    7. '00' → logprob: -18.750028610229492
    8. '```' → logprob: -19.125028610229492
    9. '[' → logprob: -20.562528610229492
    10. '

' → logprob: -20.625028610229492

Token 813: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.038201235234737396
    2. 'else' → logprob: -3.288201332092285
    3. '        ' → logprob: -8.913201332092285
    4. '            ' → logprob: -12.288201332092285
    5. '       ' → logprob: -12.413201332092285
    6. '           ' → logprob: -12.413201332092285
    7. '	else' → logprob: -12.663201332092285
    8. '         ' → logprob: -13.288201332092285
    9. '>' → logprob: -13.288201332092285
    10. ' ' → logprob: -13.413201332092285

Token 814: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.006716079078614712
    2. ' float' → logprob: -5.006716251373291
    3. '	float' → logprob: -15.381715774536133
    4. '        ' → logprob: -15.756715774536133
    5. '       ' → logprob: -15.881715774536133
    6. '(float' → logprob: -16.381715774536133
    7. ' ' → logprob: -17.756715774536133
    8. 'f' → logprob: -17.756715774536133
    9. 'flo' → logprob: -17.756715774536133
    10. '<float' → logprob: -17.881715774536133

Token 815: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -1.2664456789934775e-06
    2. '("' → logprob: -13.875000953674316
    3. '(float' → logprob: -16.500001907348633
    4. 'inf' → logprob: -17.000001907348633
    5. '(in' → logprob: -17.000001907348633
    6. ''s' → logprob: -17.250001907348633
    7. ''in' → logprob: -18.375001907348633
    8. '(' → logprob: -18.750001907348633
    9. ' ('' → logprob: -18.875001907348633
    10. 'float' → logprob: -19.000001907348633

Token 816: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -1.1517960956552997e-05
    2. 'float' → logprob: -11.375011444091797
    3. ' inf' → logprob: -17.125011444091797
    4. ''in' → logprob: -18.250011444091797
    5. '
' → logprob: -18.750011444091797
    6. '-inf' → logprob: -19.125011444091797
    7. '   ' → logprob: -19.500011444091797
    8. '3' → logprob: -19.750011444091797
    9. '1' → logprob: -19.875011444091797
    10. ''' → logprob: -20.000011444091797

Token 817: '')

' (ID: 9735)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018712051212787628
    2. ')
' → logprob: -4.518712043762207
    3. '       ' → logprob: -4.893712043762207
    4. '')' → logprob: -9.768712043762207
    5. ' )' → logprob: -10.518712043762207
    6. ')

' → logprob: -10.893712043762207
    7. ')'
' → logprob: -11.893712043762207
    8. ')
' → logprob: -12.268712043762207
    9. '')
' → logprob: -12.518712043762207
    10. '   ' → logprob: -12.643712043762207

Token 818: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1656724065542221
    2. 'res' → logprob: -2.7906723022460938
    3. 'speed' → logprob: -3.6656723022460938
    4. 'best' → logprob: -4.165672302246094
    5. 'result' → logprob: -4.540672302246094
    6. 'if' → logprob: -4.665672302246094
    7. 'options' → logprob: -5.040672302246094
    8. 'results' → logprob: -5.165672302246094
    9. '#' → logprob: -5.165672302246094
    10. 'next' → logprob: -6.290672302246094

Token 819: ' #' (ID: 1069)
  Prédit: 'speed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'speed' → logprob: -0.6401158571243286
    2. '#' (adapté à ' #') → logprob: -1.3901158571243286
    3. 'res' → logprob: -2.265115737915039
    4. 'best' → logprob: -2.890115737915039
    5. 'min' → logprob: -3.515115737915039
    6. 'current' → logprob: -4.765115737915039
    7. 'result' → logprob: -5.390115737915039
    8. 'options' → logprob: -5.515115737915039
    9. 'results' → logprob: -5.640115737915039
    10. 'time' → logprob: -5.765115737915039

Token 820: ' We' (ID: 1416)
  Prédit: 'speed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'speed' → logprob: -0.5624445676803589
    2. '#' → logprob: -1.0624445676803589
    3. 'time' → logprob: -3.3124446868896484
    4. 'base' → logprob: -3.6874446868896484
    5. 'min' → logprob: -5.187444686889648
    6. 'run' → logprob: -5.812444686889648
    7. 'travel' → logprob: -5.812444686889648
    8. 'current' → logprob: -6.437444686889648
    9. 'res' → logprob: -6.562444686889648
    10. 'best' → logprob: -6.562444686889648

Token 821: ' have' (ID: 679)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.37765446305274963
    2. '       ' → logprob: -1.5026544332504272
    3. '=' → logprob: -3.877654552459717
    4. ' =' → logprob: -4.127654552459717
    5. '#' → logprob: -4.627654552459717
    6. '_' → logprob: -5.127654552459717
    7. '_speed' → logprob: -5.377654552459717
    8. '.' → logprob: -5.502654552459717
    9. 'speed' → logprob: -5.627654552459717
    10. ' can' → logprob: -5.627654552459717

Token 822: ' two' (ID: 1920)
  Prédit: 'two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'two' → logprob: -0.339599609375
    2. ' two' → logprob: -2.339599609375
    3. '#' → logprob: -2.964599609375
    4. 'time' → logprob: -3.089599609375
    5. 'res' → logprob: -3.714599609375
    6. '       ' → logprob: -4.339599609375
    7. 'result' → logprob: -4.339599609375
    8. 'option' → logprob: -4.714599609375
    9. '   ' → logprob: -4.714599609375
    10. 'results' → logprob: -4.839599609375

Token 823: ' possible' (ID: 4149)
  Prédit: ' options'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' options' → logprob: -0.3618120849132538
    2. 'options' → logprob: -1.3618121147155762
    3. ' choices' → logprob: -3.736812114715576
    4. 'choices' → logprob: -3.986812114715576
    5. '
' → logprob: -6.611812114715576
    6. '_options' → logprob: -6.861812114715576
    7. 'possible' → logprob: -7.736812114715576
    8. ' possible' → logprob: -7.736812114715576
    9. ' possibilities' → logprob: -8.111811637878418
    10. ' ' → logprob: -8.361811637878418

Token 824: ' actions' (ID: 10370)
  Prédit: ' choices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' choices' → logprob: -1.0039417743682861
    2. ' options' → logprob: -1.6289417743682861
    3. 'choices' → logprob: -1.6289417743682861
    4. 'actions' → logprob: -2.253941774368286
    5. 'options' → logprob: -2.378941774368286
    6. ' actions' → logprob: -3.878941774368286
    7. 'paths' → logprob: -5.128941535949707
    8. ' paths' → logprob: -5.628941535949707
    9. ' ways' → logprob: -5.878941535949707
    10. 'moves' → logprob: -6.003941535949707

Token 825: ' at' (ID: 540)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0015446186298504472
    2. '       ' → logprob: -7.00154447555542
    3. ',' → logprob: -8.251544952392578
    4. '#' → logprob: -9.251544952392578
    5. ':
' → logprob: -9.876544952392578
    6. '):' → logprob: -10.251544952392578
    7. '        
' → logprob: -10.251544952392578
    8. '   ' → logprob: -10.501544952392578
    9. '<|end|>' → logprob: -10.876544952392578
    10. ':return' → logprob: -11.376544952392578

Token 826: ' carrot' (ID: 121234)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.15650726854801178
    2. 'the' → logprob: -2.6565072536468506
    3. 'this' → logprob: -3.0315072536468506
    4. ' idx' → logprob: -4.65650749206543
    5. 'next' → logprob: -5.03150749206543
    6. 'current' → logprob: -5.90650749206543
    7. ' this' → logprob: -6.03150749206543
    8. '#' → logprob: -6.53150749206543
    9. 'segment' → logprob: -7.03150749206543
    10. 'each' → logprob: -7.15650749206543

Token 827: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.08264317363500595
    2. ' idx' → logprob: -3.5826432704925537
    3. '_idx' → logprob: -3.8326432704925537
    4. '_positions' → logprob: -4.957643032073975
    5. '[idx' → logprob: -5.207643032073975
    6. '_' → logprob: -5.332643032073975
    7. 'position' → logprob: -5.707643032073975
    8. '_position' → logprob: -6.207643032073975
    9. 'pos' → logprob: -6.457643032073975
    10. '   ' → logprob: -7.082643032073975

Token 828: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -3.619311974034645e-05
    2. ':
' → logprob: -11.000036239624023
    3. ' :' → logprob: -12.125036239624023
    4. ' if' → logprob: -12.375036239624023
    5. ':return' → logprob: -12.750036239624023
    6. ',' → logprob: -13.000036239624023
    7. '):' → logprob: -13.500036239624023
    8. 'if' → logprob: -14.125036239624023
    9. '.' → logprob: -14.125036239624023
    10. '   ' → logprob: -15.625036239624023

Token 829: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2554953694343567
    2. '        
' → logprob: -2.505495309829712
    3. ' 
' → logprob: -3.255495309829712
    4. ' ' → logprob: -3.880495309829712
    5. '#' → logprob: -4.130495548248291
    6. '\n' → logprob: -4.505495548248291
    7. '\' → logprob: -5.005495548248291
    8. '        ' → logprob: -5.130495548248291
    9. ' \' → logprob: -5.255495548248291
    10. ' if' → logprob: -5.630495548248291

Token 830: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9104527235031128
    2. '#' (adapté à ' #') → logprob: -1.4104527235031128
    3. '1' → logprob: -2.1604528427124023
    4. ' #' → logprob: -2.5354528427124023
    5. ' if' → logprob: -2.9104528427124023
    6. '        
' → logprob: -3.5354528427124023
    7. 'if' → logprob: -4.285452842712402
    8. ' 
' → logprob: -4.410452842712402
    9. ' ' → logprob: -4.785452842712402
    10. '
' → logprob: -5.660452842712402

Token 831: ' ' (ID: 220)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.24947267770767212
    2. 'if' → logprob: -2.7494726181030273
    3. '1' → logprob: -2.9994726181030273
    4. ' #' → logprob: -3.3744726181030273
    5. 'result' → logprob: -3.7494726181030273
    6. '       ' → logprob: -3.7494726181030273
    7. 'run' → logprob: -5.374472618103027
    8. 'res' → logprob: -5.624472618103027
    9. ' if' → logprob: -5.999472618103027
    10. 'continue' → logprob: -6.374472618103027

Token 832: '1' (ID: 16)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.09798210114240646
    2. 'run' → logprob: -3.097982168197632
    3. 'result' → logprob: -3.847982168197632
    4. '1' → logprob: -4.472981929779053
    5. 'res' → logprob: -5.097981929779053
    6. 'use' → logprob: -5.847981929779053
    7. 'if' → logprob: -6.347981929779053
    8. 'pass' → logprob: -7.222981929779053
    9. 'continue' → logprob: -7.472981929779053
    10. 'options' → logprob: -7.847981929779053

Token 833: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.21520169079303741
    2. '.' → logprob: -1.715201735496521
    3. ':' → logprob: -4.7152018547058105
    4. '=' → logprob: -6.2152018547058105
    5. '#' → logprob: -6.4652018547058105
    6. ' =' → logprob: -7.9652018547058105
    7. '       ' → logprob: -7.9652018547058105
    8. '           ' → logprob: -8.840201377868652
    9. '):' → logprob: -9.090201377868652
    10. ' #' → logprob: -9.715201377868652

Token 834: ' Eat' (ID: 60629)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.2797189950942993
    2. 'Run' → logprob: -1.6547189950942993
    3. 'Skip' → logprob: -3.6547188758850098
    4. 'run' → logprob: -4.27971887588501
    5. 'skip' → logprob: -5.52971887588501
    6. 'try' → logprob: -5.90471887588501
    7. 'Try' → logprob: -6.27971887588501
    8. 'Do' → logprob: -6.40471887588501
    9. ' #' → logprob: -7.40471887588501
    10. 'Not' → logprob: -7.90471887588501

Token 835: ' this' (ID: 495)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.11602382361888885
    2. 'the' → logprob: -2.3660237789154053
    3. 'car' → logprob: -4.991024017333984
    4. ' a' → logprob: -5.741024017333984
    5. ')' → logprob: -7.491024017333984
    6. ' and' → logprob: -7.491024017333984
    7. ' ' → logprob: -7.616024017333984
    8. '_' → logprob: -7.991024017333984
    9. ' next' → logprob: -7.991024017333984
    10. ' token' → logprob: -8.116024017333984

Token 836: ' carrot' (ID: 121234)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.7511821389198303
    2. ' carrot' → logprob: -0.7511821389198303
    3. '_car' → logprob: -3.2511820793151855
    4. '_' → logprob: -5.0011820793151855
    5. ' ' → logprob: -6.3761820793151855
    6. ' token' → logprob: -6.7511820793151855
    7. ' car' → logprob: -6.7511820793151855
    8. ' _' → logprob: -6.8761820793151855
    9. ' rabbit' → logprob: -7.1261820793151855
    10. ',' → logprob: -7.2511820793151855

Token 837: ' immediately' (ID: 10731)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.989435076713562
    2. ' if' → logprob: -0.989435076713562
    3. ':' → logprob: -2.3644351959228516
    4. ',' → logprob: -3.1144351959228516
    5. '<|end|>' → logprob: -3.2394351959228516
    6. ')' → logprob: -3.4894351959228516
    7. ' and' → logprob: -4.489435195922852
    8. '<|end|>' → logprob: -4.614435195922852
    9. 'if' → logprob: -4.864435195922852
    10. '
' → logprob: -5.364435195922852

Token 838: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1758432239294052
    2. ',' → logprob: -2.5508432388305664
    3. ':' → logprob: -2.9258432388305664
    4. ' if' → logprob: -4.675843238830566
    5. '
' → logprob: -5.300843238830566
    6. 'if' → logprob: -5.675843238830566
    7. '.' → logprob: -5.925843238830566
    8. '        
' → logprob: -6.675843238830566
    9. ')' → logprob: -6.800843238830566
    10. '#' → logprob: -6.925843238830566

Token 839: 'need' (ID: 24630)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.05671026185154915
    2. ')' → logprob: -3.4317102432250977
    3. ' if' → logprob: -4.306710243225098
    4. 'return' → logprob: -5.806710243225098
    5. 'time' → logprob: -6.556710243225098
    6. 'car' → logprob: -6.681710243225098
    7. '       ' → logprob: -7.056710243225098
    8. 'new' → logprob: -7.306710243225098
    9. '),' → logprob: -7.431710243225098
    10. '#' → logprob: -8.306710243225098

Token 840: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.6410791277885437
    2. 'to' → logprob: -1.2660791873931885
    3. ' carrots' → logprob: -2.3910791873931885
    4. 'car' → logprob: -2.6410791873931885
    5. ')' → logprob: -4.266078948974609
    6. ' if' → logprob: -5.891078948974609
    7. '_car' → logprob: -5.891078948974609
    8. ' the' → logprob: -6.766078948974609
    9. 'space' → logprob: -7.266078948974609
    10. ' a' → logprob: -7.266078948974609

Token 841: ' have' (ID: 679)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.05680227652192116
    2. 'self' → logprob: -3.556802272796631
    3. 'eat' → logprob: -4.931802272796631
    4. 'have' → logprob: -5.306802272796631
    5. 'store' → logprob: -5.806802272796631
    6. ')' → logprob: -6.181802272796631
    7. 'carry' → logprob: -6.181802272796631
    8. ' self' → logprob: -6.806802272796631
    9. ' have' → logprob: -6.931802272796631
    10. ' carrots' → logprob: -7.306802272796631

Token 842: ' carrot' (ID: 121234)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.005105322226881981
    2. 'self' → logprob: -6.130105495452881
    3. ' carrots' → logprob: -6.130105495452881
    4. 'not' → logprob: -8.130105018615723
    5. '1' → logprob: -8.505105018615723
    6. '0' → logprob: -9.380105018615723
    7. 'cars' → logprob: -10.130105018615723
    8. 'can' → logprob: -10.880105018615723
    9. 'space' → logprob: -11.005105018615723
    10. ' self' → logprob: -11.130105018615723

Token 843: ' in' (ID: 306)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.08853563666343689
    2. 'car' → logprob: -2.5885355472564697
    3. 'storage' → logprob: -5.713535785675049
    4. '_car' → logprob: -6.213535785675049
    5. ')' → logprob: -7.088535785675049
    6. 'stored' → logprob: -7.838535785675049
    7. '```' → logprob: -7.838535785675049
    8. '_storage' → logprob: -7.963535785675049
    9. '<|end|>' → logprob: -8.08853530883789
    10. 'carry' → logprob: -8.46353530883789

Token 844: ' storage' (ID: 7928)
  Prédit: 'storage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'storage' → logprob: -0.07586582750082016
    2. 'car' → logprob: -3.0758657455444336
    3. ' storage' → logprob: -4.950865745544434
    4. 'hand' → logprob: -5.200865745544434
    5. 'inventory' → logprob: -5.325865745544434
    6. 'self' → logprob: -5.450865745544434
    7. 'carry' → logprob: -6.825865745544434
    8. ')' → logprob: -7.075865745544434
    9. 'stock' → logprob: -7.450865745544434
    10. 'store' → logprob: -7.450865745544434

Token 845: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3412237763404846
    2. ' or' → logprob: -1.9662237167358398
    3. ' and' → logprob: -2.09122371673584
    4. 'and' → logprob: -4.71622371673584
    5. ' )' → logprob: -5.46622371673584
    6. 'or' → logprob: -5.59122371673584
    7. ' if' → logprob: -5.84122371673584
    8. '),' → logprob: -6.21622371673584
    9. ',' → logprob: -6.21622371673584
    10. ' to' → logprob: -6.84122371673584

Token 846: ' or' (ID: 503)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3153894543647766
    2. ' or' → logprob: -1.5653893947601318
    3. ' and' → logprob: -3.690389394760132
    4. ' if' → logprob: -5.065389633178711
    5. ' )' → logprob: -5.190389633178711
    6. ' so' → logprob: -5.565389633178711
    7. 'or' → logprob: -6.065389633178711
    8. '       ' → logprob: -6.065389633178711
    9. ' then' → logprob: -6.190389633178711
    10. ' 
' → logprob: -6.565389633178711

Token 847: ' pick' (ID: 5230)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.43905067443847656
    2. 'eat' → logprob: -1.9390506744384766
    3. ' carrots' → logprob: -2.5640506744384766
    4. '0' → logprob: -3.3140506744384766
    5. ' eat' → logprob: -3.6890506744384766
    6. '(car' → logprob: -3.9390506744384766
    7. '(' → logprob: -4.814050674438477
    8. 'dist' → logprob: -4.939050674438477
    9. ' (' → logprob: -5.564050674438477
    10. 'if' → logprob: -6.064050674438477

Token 848: ' newly' (ID: 21834)
  Prédit: ' up'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' up' → logprob: -0.510914146900177
    2. ' it' → logprob: -1.2609140872955322
    3. 'up' → logprob: -2.2609140872955322
    4. 'it' → logprob: -4.760914325714111
    5. '_up' → logprob: -7.010914325714111
    6. ')' → logprob: -7.260914325714111
    7. 'and' → logprob: -8.010913848876953
    8. ' and' → logprob: -8.135913848876953
    9. '
' → logprob: -8.260913848876953
    10. 'ed' → logprob: -8.385913848876953

Token 849: ' without' (ID: 2935)
  Prédit: ' up'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' up' → logprob: -0.3634072542190552
    2. 'up' → logprob: -1.8634072542190552
    3. ')' → logprob: -2.8634071350097656
    4. 'stored' → logprob: -3.2384071350097656
    5. ' stored' → logprob: -3.9884071350097656
    6. ' acquired' → logprob: -4.863407135009766
    7. 'picked' → logprob: -5.488407135009766
    8. ' )' → logprob: -5.613407135009766
    9. ' ' → logprob: -5.738407135009766
    10. 'e' → logprob: -6.113407135009766

Token 850: ' storing' (ID: 42787)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.39975684881210327
    2. ' storing' → logprob: -2.524756908416748
    3. ' stopping' → logprob: -2.774756908416748
    4. 'car' → logprob: -2.774756908416748
    5. 'delay' → logprob: -4.274756908416748
    6. 'waiting' → logprob: -4.274756908416748
    7. 'using' → logprob: -4.524756908416748
    8. 'running' → logprob: -4.524756908416748
    9. 'ex' → logprob: -5.274756908416748
    10. ' running' → logprob: -5.399756908416748

Token 851: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014237554743885994
    2. ' )' → logprob: -4.764237403869629
    3. ')
' → logprob: -6.389237403869629
    4. '),' → logprob: -6.764237403869629
    5. ').' → logprob: -7.639237403869629
    6. '):
' → logprob: -7.639237403869629
    7. '):' → logprob: -7.889237403869629
    8. 'it' → logprob: -8.514237403869629
    9. ' first' → logprob: -9.014237403869629
    10. ' it' → logprob: -9.014237403869629

Token 852: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.36800360679626465
    2. ')' → logprob: -1.7430036067962646
    3. ',' → logprob: -3.2430036067962646
    4. '<|end|>' → logprob: -3.2430036067962646
    5. '        
' → logprob: -4.493003845214844
    6. ':' → logprob: -5.118003845214844
    7. ' 
' → logprob: -5.368003845214844
    8. ' or' → logprob: -5.493003845214844
    9. '   ' → logprob: -5.618003845214844
    10. '#' → logprob: -5.743003845214844

Token 853: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.496882826089859
    2. ')' → logprob: -2.246882915496826
    3. ' 
' → logprob: -2.246882915496826
    4. '        
' → logprob: -3.496882915496826
    5. '
' → logprob: -3.746882915496826
    6. ',' → logprob: -3.871882915496826
    7. ' if' → logprob: -3.871882915496826
    8. '\n' → logprob: -4.496882915496826
    9. '\' → logprob: -4.746882915496826
    10. ' ' → logprob: -4.996882915496826

Token 854: '   ' (ID: 271)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3299561142921448
    2. ' if' → logprob: -2.0799560546875
    3. 'if' → logprob: -3.0799560546875
    4. 'result' → logprob: -3.7049560546875
    5. '#' → logprob: -4.8299560546875
    6. 'next' → logprob: -4.8299560546875
    7. ' res' → logprob: -4.9549560546875
    8. ' result' → logprob: -5.0799560546875
    9. '        
' → logprob: -5.2049560546875
    10. ' next' → logprob: -5.2049560546875

Token 855: ' Eating' (ID: 89225)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.7269885540008545
    2. 'if' → logprob: -0.9769885540008545
    3. 'results' → logprob: -3.1019885540008545
    4. '#' → logprob: -4.101988792419434
    5. 'time' → logprob: -4.101988792419434
    6. 'result' → logprob: -4.226988792419434
    7. ' res' → logprob: -4.476988792419434
    8. ' if' → logprob: -4.601988792419434
    9. '       ' → logprob: -4.726988792419434
    10. 'times' → logprob: -5.351988792419434

Token 856: ' resets' (ID: 160313)
  Prédit: ' this'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' this' → logprob: -1.027387022972107
    2. ' the' → logprob: -1.277387022972107
    3. 'this' → logprob: -1.777387022972107
    4. 'the' → logprob: -2.0273871421813965
    5. ' it' → logprob: -3.1523871421813965
    6. 'it' → logprob: -4.5273871421813965
    7. ' a' → logprob: -6.0273871421813965
    8. ')' → logprob: -7.2773871421813965
    9. ' is' → logprob: -7.2773871421813965
    10. '<|end|>' → logprob: -7.4023871421813965

Token 857: ' boost' (ID: 12110)
  Prédit: ' time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' time' → logprob: -0.6597150564193726
    2. 'time' → logprob: -1.1597150564193726
    3. ' last' → logprob: -2.409715175628662
    4. ' the' → logprob: -3.034715175628662
    5. 'last' → logprob: -4.284715175628662
    6. 'the' → logprob: -4.534715175628662
    7. '_time' → logprob: -5.784715175628662
    8. '_' → logprob: -6.534715175628662
    9. '_last' → logprob: -7.534715175628662
    10. ' ' → logprob: -7.659715175628662

Token 858: ' timer' (ID: 16905)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.1052260398864746
    2. ')' → logprob: -2.2302260398864746
    3. ' 
' → logprob: -2.2302260398864746
    4. ',' → logprob: -2.4802260398864746
    5. ')
' → logprob: -2.6052260398864746
    6. '        
' → logprob: -2.6052260398864746
    7. '.' → logprob: -2.7302260398864746
    8. '       ' → logprob: -2.8552260398864746
    9. ',
' → logprob: -3.1052260398864746
    10. '.
' → logprob: -3.7302260398864746

Token 859: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17296478152275085
    2. '        
' → logprob: -3.1729648113250732
    3. ',' → logprob: -3.5479648113250732
    4. ')' → logprob: -3.6729648113250732
    5. '
' → logprob: -3.7979648113250732
    6. ' 
' → logprob: -4.672964572906494
    7. '.' → logprob: -4.922964572906494
    8. '\n' → logprob: -5.172964572906494
    9. ')
' → logprob: -5.672964572906494
    10. ',
' → logprob: -5.797964572906494

Token 860: ' zero' (ID: 12421)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.011193889193236828
    2. 'current' → logprob: -4.636193752288818
    3. ' ' → logprob: -7.011193752288818
    4. ' current' → logprob: -7.636193752288818
    5. '   ' → logprob: -10.386194229125977
    6. 'zero' → logprob: -11.886194229125977
    7. 'time' → logprob: -13.761194229125977
    8. ' zero' → logprob: -13.948694229125977
    9. '	current' → logprob: -13.948694229125977
    10. '    ' → logprob: -14.011194229125977

Token 861: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.74539715051651
    2. '
' → logprob: -0.99539715051651
    3. '        
' → logprob: -2.4953970909118652
    4. ',' → logprob: -3.8703970909118652
    5. '\n' → logprob: -3.9953970909118652
    6. ')' → logprob: -4.620397090911865
    7. ' 
' → logprob: -5.120397090911865
    8. '.' → logprob: -5.870397090911865
    9. '
' → logprob: -5.995397090911865
    10. '  
' → logprob: -6.745397090911865

Token 862: '       ' (ID: 309)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.528831422328949
    2. ' ' → logprob: -1.6538314819335938
    3. '       ' → logprob: -1.7788314819335938
    4. ')' → logprob: -4.403831481933594
    5. '        
' → logprob: -4.528831481933594
    6. '  
' → logprob: -5.278831481933594
    7. '\n' → logprob: -5.528831481933594
    8. ',' → logprob: -5.778831481933594
    9. '=' → logprob: -6.403831481933594
    10. '<|end|>' → logprob: -6.403831481933594

Token 863: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1515103429555893
    2. ' 
' → logprob: -2.401510238647461
    3. '        
' → logprob: -3.901510238647461
    4. ')' → logprob: -5.151510238647461
    5. ' ' → logprob: -5.401510238647461
    6. ',' → logprob: -5.651510238647461
    7. '  
' → logprob: -5.776510238647461
    8. '
' → logprob: -6.026510238647461
    9. ' if' → logprob: -6.401510238647461
    10. '#' (adapté à ' #') → logprob: -6.901510238647461

Token 864: ' ' (ID: 220)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.18592533469200134
    2. 'time' → logprob: -3.060925245285034
    3. '#' → logprob: -3.310925245285034
    4. 'speed' → logprob: -3.810925245285034
    5. 'results' → logprob: -3.935925245285034
    6. 'result' → logprob: -4.060925483703613
    7. 'if' → logprob: -4.560925483703613
    8. 'options' → logprob: -5.685925483703613
    9. 'rest' → logprob: -5.810925483703613
    10. 'next' → logprob: -6.435925483703613

Token 865: '2' (ID: 17)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'time' → logprob: -1.3128912448883057
    2. '#' → logprob: -1.6878912448883057
    3. 'res' → logprob: -1.6878912448883057
    4. 'if' → logprob: -1.8128912448883057
    5. 'speed' → logprob: -2.1878912448883057
    6. 'eat' → logprob: -3.5628912448883057
    7. 'result' → logprob: -4.437891006469727
    8. 'options' → logprob: -4.812891006469727
    9. 'actions' → logprob: -5.562891006469727
    10. '       ' → logprob: -5.562891006469727

Token 866: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.263011578586884e-05
    2. '   ' → logprob: -11.000042915344238
    3. ' )' → logprob: -11.500042915344238
    4. '#' → logprob: -12.250042915344238
    5. ':' → logprob: -12.750042915344238
    6. ')
' → logprob: -12.750042915344238
    7. '
' → logprob: -13.500042915344238
    8. ')#' → logprob: -14.000042915344238
    9. '）' → logprob: -14.625042915344238
    10. ' ' → logprob: -14.750042915344238

Token 867: ' Not' (ID: 4037)
  Prédit: 'Skip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Skip' → logprob: -0.11077268421649933
    2. 'Run' → logprob: -2.6107726097106934
    3. 'Not' → logprob: -4.485772609710693
    4. ' Skip' → logprob: -5.110772609710693
    5. 'Don't' → logprob: -5.860772609710693
    6. 'Do' → logprob: -5.985772609710693
    7. 'skip' → logprob: -6.110772609710693
    8. 'Continue' → logprob: -6.360772609710693
    9. 'Try' → logprob: -6.485772609710693
    10. '#' → logprob: -7.235772609710693

Token 868: ' eat' (ID: 11237)
  Prédit: 'eat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eat' → logprob: -0.030593913048505783
    2. ' eat' → logprob: -3.6555938720703125
    3. ')' → logprob: -5.7805938720703125
    4. 'e' → logprob: -7.0305938720703125
    5. '_e' → logprob: -8.905593872070312
    6. ' eating' → logprob: -9.655593872070312
    7. '   ' → logprob: -10.030593872070312
    8. 'take' → logprob: -11.280593872070312
    9. ')e' → logprob: -11.530593872070312
    10. ' ' → logprob: -12.030593872070312

Token 869: ',' (ID: 11)
  Prédit: ' this'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' this' → logprob: -0.10096709430217743
    2. 'this' → logprob: -2.3509671688079834
    3. ' the' → logprob: -8.350967407226562
    4. '<|end|>' → logprob: -8.975967407226562
    5. 'the' → logprob: -9.225967407226562
    6. ' it' → logprob: -9.350967407226562
    7. ' ' → logprob: -9.850967407226562
    8. '<|end|>' → logprob: -10.100967407226562
    9. '_this' → logprob: -10.350967407226562
    10. 'it' → logprob: -10.975967407226562

Token 870: ' possibly' (ID: 14836)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -1.7460004091262817
    2. 'continue' → logprob: -2.121000289916992
    3. ' go' → logprob: -2.371000289916992
    4. ' and' → logprob: -2.371000289916992
    5. ' but' → logprob: -2.496000289916992
    6. ' run' → logprob: -2.871000289916992
    7. '#' → logprob: -3.121000289916992
    8. 'and' → logprob: -3.371000289916992
    9. 'run' → logprob: -3.371000289916992
    10. ' proceed' → logprob: -3.496000289916992

Token 871: ' store' (ID: 4897)
  Prédit: 'run'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'run' → logprob: -0.4902730882167816
    2. 'go' → logprob: -2.1152729988098145
    3. 'try' → logprob: -3.1152729988098145
    4. 'pick' → logprob: -3.6152729988098145
    5. ' run' → logprob: -3.7402729988098145
    6. 'just' → logprob: -3.9902729988098145
    7. 'eat' → logprob: -3.9902729988098145
    8. 'store' → logprob: -4.1152729988098145
    9. 'move' → logprob: -4.2402729988098145
    10. 'skip' → logprob: -4.4902729988098145

Token 872: ' it' (ID: 480)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.140926480293274
    2. ')' → logprob: -2.0159263610839844
    3. '_' → logprob: -2.3909263610839844
    4. '_car' → logprob: -2.5159263610839844
    5. ',' → logprob: -2.7659263610839844
    6. ' if' → logprob: -2.8909263610839844
    7. ' at' → logprob: -3.2659263610839844
    8. 'if' → logprob: -3.6409263610839844
    9. '.' → logprob: -3.6409263610839844
    10. ' or' → logprob: -4.140926361083984

Token 873: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.37104785442352295
    2. ',' → logprob: -2.1210479736328125
    3. '
' → logprob: -2.4960479736328125
    4. '.' → logprob: -3.3710479736328125
    5. '        
' → logprob: -3.7460479736328125
    6. '

' → logprob: -4.4960479736328125
    7. '        

' → logprob: -4.6210479736328125
    8. ' if' → logprob: -4.8710479736328125
    9. ' and' → logprob: -5.6210479736328125
    10. ' or' → logprob: -5.8710479736328125

Token 874: 'if' (ID: 366)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8194769024848938
    2. ' or' → logprob: -1.319476842880249
    3. 'if' → logprob: -2.194476842880249
    4. 'or' → logprob: -2.444476842880249
    5. ' if' → logprob: -2.944476842880249
    6. '),' → logprob: -4.444477081298828
    7. '       ' → logprob: -4.694477081298828
    8. ')
' → logprob: -4.944477081298828
    9. ')

' → logprob: -5.069477081298828
    10. '#' → logprob: -6.319477081298828

Token 875: ' capacity' (ID: 12241)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.1650567650794983
    2. ' self' → logprob: -1.9150567054748535
    3. 'car' → logprob: -5.9150567054748535
    4. ' carrots' → logprob: -7.4150567054748535
    5. 'can' → logprob: -8.040057182312012
    6. ' ' → logprob: -8.665057182312012
    7. '```' → logprob: -8.915057182312012
    8. 'space' → logprob: -9.040057182312012
    9. ')' → logprob: -9.665057182312012
    10. ' can' → logprob: -9.790057182312012

Token 876: ' allows' (ID: 7927)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.5349298119544983
    2. '>' → logprob: -1.0349297523498535
    3. ' allows' → logprob: -3.4099297523498535
    4. ')' → logprob: -4.5349297523498535
    5. ' and' → logprob: -5.7849297523498535
    6. ' is' → logprob: -6.0349297523498535
    7. '),' → logprob: -6.2849297523498535
    8. ' not' → logprob: -6.5349297523498535
    9. ')>' → logprob: -6.6599297523498535
    10. ' )' → logprob: -7.2849297523498535

Token 877: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.019262028858065605
    2. '),' → logprob: -4.519261837005615
    3. ').' → logprob: -4.894261837005615
    4. ')
' → logprob: -8.269262313842773
    5. '       ' → logprob: -8.394262313842773
    6. '):' → logprob: -9.519262313842773
    7. '):
' → logprob: -10.144262313842773
    8. ')

' → logprob: -10.769262313842773
    9. ' or' → logprob: -10.894262313842773
    10. ',' → logprob: -11.019262313842773

Token 878: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2281353771686554
    2. '
' → logprob: -2.353135347366333
    3. '        
' → logprob: -3.228135347366333
    4. '#' → logprob: -3.603135347366333
    5. ',' → logprob: -3.978135347366333
    6. '        

' → logprob: -5.478135585784912
    7. '<|end|>' → logprob: -6.103135585784912
    8. ')' → logprob: -6.103135585784912
    9. '

' → logprob: -6.353135585784912
    10. 'speed' → logprob: -6.728135585784912

Token 879: ' future' (ID: 5277)
  Prédit: 'later'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'later' → logprob: -0.6544041633605957
    2. ' later' → logprob: -1.2794041633605957
    3. ' future' → logprob: -2.0294041633605957
    4. 'future' → logprob: -2.7794041633605957
    5. ' now' → logprob: -5.529404163360596
    6. 'now' → logprob: -6.404404163360596
    7. 'possible' → logprob: -7.154404163360596
    8. ' possible' → logprob: -7.529404163360596
    9. ' use' → logprob: -7.529404163360596
    10. ' the' → logprob: -8.404403686523438

Token 880: ' eating' (ID: 15700)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.3155789375305176
    2. ' use' → logprob: -1.8155789375305176
    3. 'use' → logprob: -2.0655789375305176
    4. ' action' → logprob: -2.3155789375305176
    5. ')' → logprob: -2.4405789375305176
    6. 'action' → logprob: -2.6905789375305176
    7. ' consumption' → logprob: -3.4405789375305176
    8. ',' → logprob: -3.9405789375305176
    9. '_use' → logprob: -4.065578937530518
    10. 'actions' → logprob: -4.315578937530518

Token 881: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2568250894546509
    2. ',' → logprob: -2.2568249702453613
    3. '.' → logprob: -3.1318249702453613
    4. ')' → logprob: -3.2568249702453613
    5. '<|end|>' → logprob: -4.256824970245361
    6. '
' → logprob: -5.256824970245361
    7. '        
' → logprob: -5.506824970245361
    8. '#' → logprob: -5.881824970245361
    9. '<|end|>' → logprob: -5.881824970245361
    10. ':' → logprob: -6.256824970245361

Token 882: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18773558735847473
    2. '
' → logprob: -1.9377355575561523
    3. '        
' → logprob: -3.9377355575561523
    4. '#' → logprob: -6.312735557556152
    5. ' 
' → logprob: -7.687735557556152
    6. '   ' → logprob: -7.687735557556152
    7. ',' → logprob: -8.062735557556152
    8. '```' → logprob: -8.062735557556152
    9. '        

' → logprob: -8.062735557556152
    10. '

' → logprob: -8.312735557556152

Token 883: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25854650139808655
    2. 'res' → logprob: -2.8835465908050537
    3. 'next' → logprob: -3.6335465908050537
    4. 'speed' → logprob: -3.8835465908050537
    5. 'best' → logprob: -4.008546352386475
    6. 'result' → logprob: -4.133546352386475
    7. ' next' → logprob: -4.633546352386475
    8. ' res' → logprob: -4.633546352386475
    9. '
' → logprob: -4.633546352386475
    10. ' best' → logprob: -4.758546352386475

Token 884: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5942833423614502
    2. '       ' → logprob: -1.2192833423614502
    3. ' if' → logprob: -2.34428334236145
    4. '#' → logprob: -3.84428334236145
    5. 'next' → logprob: -4.719283103942871
    6. 'res' → logprob: -5.219283103942871
    7. 'speed' → logprob: -5.344283103942871
    8. ' #' → logprob: -5.844283103942871
    9. 'result' → logprob: -6.469283103942871
    10. 'eat' → logprob: -6.594283103942871

Token 885: ' Or' (ID: 2604)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5336521863937378
    2. 'res' → logprob: -1.2836521863937378
    3. 'times' → logprob: -3.1586523056030273
    4. 'results' → logprob: -3.4086523056030273
    5. 'time' → logprob: -3.9086523056030273
    6. 'eat' → logprob: -3.9086523056030273
    7. 'options' → logprob: -5.033652305603027
    8. 'best' → logprob: -5.408652305603027
    9. 'speed' → logprob: -5.908652305603027
    10. '       ' → logprob: -6.408652305603027

Token 886: ' not' (ID: 625)
  Prédit: ' pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pass' → logprob: -1.8844890594482422
    2. '#' → logprob: -2.009489059448242
    3. ' just' → logprob: -2.009489059448242
    4. ' skip' → logprob: -2.384489059448242
    5. 'pass' → logprob: -2.884489059448242
    6. ' return' → logprob: -3.009489059448242
    7. 'return' → logprob: -3.009489059448242
    8. ' #' → logprob: -3.384489059448242
    9. 'eat' → logprob: -3.384489059448242
    10. ' try' → logprob: -3.509489059448242

Token 887: ' store' (ID: 4897)
  Prédit: 'eat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eat' → logprob: -0.006651191506534815
    2. ' eat' → logprob: -5.256651401519775
    3. 'store' → logprob: -7.256651401519775
    4. 'e' → logprob: -8.506650924682617
    5. 'do' → logprob: -9.006650924682617
    6. '   ' → logprob: -9.131650924682617
    7. '.' → logprob: -9.381650924682617
    8. 'consider' → logprob: -10.506650924682617
    9. ')' → logprob: -10.756650924682617
    10. ' store' → logprob: -11.006650924682617

Token 888: ' (' (ID: 350)
  Prédit: ' at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.5000677704811096
    2. '.' → logprob: -1.6250677108764648
    3. ')' → logprob: -3.125067710876465
    4. ',' → logprob: -3.250067710876465
    5. 'at' → logprob: -3.250067710876465
    6. 'it' → logprob: -4.250067710876465
    7. ' it' → logprob: -4.250067710876465
    8. ' storing' → logprob: -5.125067710876465
    9. ' and' → logprob: -5.375067710876465
    10. 'store' → logprob: -5.500067710876465

Token 889: 'just' (ID: 5283)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7348910570144653
    2. 'pass' → logprob: -1.6098910570144653
    3. 'skip' → logprob: -2.859890937805176
    4. '),' → logprob: -3.234890937805176
    5. 'and' → logprob: -3.734890937805176
    6. ' pass' → logprob: -3.859890937805176
    7. 'eat' → logprob: -3.984890937805176
    8. ' at' → logprob: -3.984890937805176
    9. ' and' → logprob: -4.109890937805176
    10. 'continue' → logprob: -4.109890937805176

Token 890: ' skip' (ID: 16677)
  Prédit: 'run'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'run' → logprob: -0.44111865758895874
    2. ' run' → logprob: -1.1911187171936035
    3. 'skip' → logprob: -3.4411187171936035
    4. ' skip' → logprob: -4.6911187171936035
    5. 'pass' → logprob: -4.8161187171936035
    6. ' pass' → logprob: -6.8161187171936035
    7. ')' → logprob: -7.3161187171936035
    8. 'continue' → logprob: -7.8161187171936035
    9. '   ' → logprob: -8.816118240356445
    10. 'return' → logprob: -8.941118240356445

Token 891: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.15704046189785004
    2. 'it' → logprob: -2.2820403575897217
    3. ').' → logprob: -3.9070403575897217
    4. '),' → logprob: -4.907040596008301
    5. 'the' → logprob: -5.032040596008301
    6. ' it' → logprob: -5.657040596008301
    7. ')
' → logprob: -5.907040596008301
    8. ' the' → logprob: -7.407040596008301
    9. 'this' → logprob: -7.532040596008301
    10. ')

' → logprob: -7.657040596008301

Token 892: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04048759862780571
    2. 'speed' → logprob: -4.790487766265869
    3. '        
' → logprob: -4.915487766265869
    4. '
' → logprob: -5.040487766265869
    5. '#' → logprob: -5.040487766265869
    6. 'next' → logprob: -6.040487766265869
    7. 'if' → logprob: -6.290487766265869
    8. '   ' → logprob: -7.165487766265869
    9. 'time' → logprob: -7.665487766265869
    10. 'import' → logprob: -7.790487766265869

Token 893: ' #
' (ID: 21888)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0749841034412384
    2. '#' → logprob: -4.074984073638916
    3. 'next' → logprob: -4.324984073638916
    4. 'if' → logprob: -4.699984073638916
    5. 'speed' → logprob: -5.324984073638916
    6. ' next' → logprob: -5.574984073638916
    7. ' if' → logprob: -5.824984073638916
    8. 'import' → logprob: -5.949984073638916
    9. 'res' → logprob: -6.199984073638916
    10. 'options' → logprob: -6.324984073638916

Token 894: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02982766553759575
    2. 'speed' → logprob: -4.77982759475708
    3. '#' → logprob: -5.27982759475708
    4. '        
' → logprob: -5.40482759475708
    5. '
' → logprob: -5.65482759475708
    6. '   ' → logprob: -5.65482759475708
    7. ' speed' → logprob: -6.15482759475708
    8. ' #' → logprob: -8.029828071594238
    9. '    
' → logprob: -8.779828071594238
    10. 'if' → logprob: -8.904828071594238

Token 895: ' #' (ID: 1069)
  Prédit: 'speed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'speed' → logprob: -0.22132527828216553
    2. '#' (adapté à ' #') → logprob: -1.7213252782821655
    3. 'time' → logprob: -5.846325397491455
    4. 'current' → logprob: -5.846325397491455
    5. 'res' → logprob: -6.221325397491455
    6. '       ' → logprob: -6.221325397491455
    7. 'eat' → logprob: -6.346325397491455
    8. 'if' → logprob: -6.471325397491455
    9. 'best' → logprob: -7.096325397491455
    10. 'curr' → logprob: -7.096325397491455

Token 896: ' We' (ID: 1416)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.8565263748168945
    2. '#' → logprob: -1.8565263748168945
    3. 'speed' → logprob: -2.1065263748168945
    4. 'best' → logprob: -2.6065263748168945
    5. 'times' → logprob: -2.6065263748168945
    6. 'time' → logprob: -3.1065263748168945
    7. 'results' → logprob: -3.6065263748168945
    8. 'result' → logprob: -3.8565263748168945
    9. 'eat' → logprob: -3.8565263748168945
    10. 'options' → logprob: -4.3565263748168945

Token 897: ' try' (ID: 2075)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.32505732774734497
    2. ' =' → logprob: -1.7000572681427002
    3. '=' → logprob: -2.8250572681427
    4. '   ' → logprob: -4.325057506561279
    5. '
' → logprob: -5.825057506561279
    6. ')' → logprob: -5.825057506561279
    7. ' ' → logprob: -6.200057506561279
    8. '_' → logprob: -6.325057506561279
    9. 'def' → logprob: -6.325057506561279
    10. '        
' → logprob: -6.450057506561279

Token 898: ' all' (ID: 722)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.161028653383255
    2. '       ' → logprob: -2.6610286235809326
    3. 'all' → logprob: -3.7860286235809326
    4. 'to' → logprob: -3.9110286235809326
    5. ':
' → logprob: -3.9110286235809326
    6. 'both' → logprob: -4.661028861999512
    7. '   ' → logprob: -5.786028861999512
    8. ' all' → logprob: -7.161028861999512
    9. 'out' → logprob: -7.286028861999512
    10. ' to' → logprob: -7.536028861999512

Token 899: ' these' (ID: 1879)
  Prédit: 'options'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'options' → logprob: -0.7096124291419983
    2. 'poss' → logprob: -0.9596124291419983
    3. ' possibilities' → logprob: -3.2096123695373535
    4. '       ' → logprob: -3.5846123695373535
    5. ' options' → logprob: -3.7096123695373535
    6. 'possible' → logprob: -3.9596123695373535
    7. 'actions' → logprob: -4.4596123695373535
    8. '   ' → logprob: -7.7096123695373535
    9. 'available' → logprob: -7.7096123695373535
    10. ' possible' → logprob: -7.9596123695373535

Token 900: ' possibilities' (ID: 31061)
  Prédit: ' options'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' options' → logprob: -0.5023322105407715
    2. 'options' → logprob: -1.2523322105407715
    3. ' possibilities' → logprob: -2.6273322105407715
    4. 'poss' → logprob: -3.6273322105407715
    5. 'actions' → logprob: -4.8773322105407715
    6. ' actions' → logprob: -7.0023322105407715
    7. '       ' → logprob: -7.1273322105407715
    8. '   ' → logprob: -8.62733268737793
    9. ':' → logprob: -8.87733268737793
    10. 'choices' → logprob: -9.00233268737793

Token 901: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.030435150489211082
    2. ',' → logprob: -4.405435085296631
    3. ':' → logprob: -4.530435085296631
    4. '.' → logprob: -6.405435085296631
    5. 'result' → logprob: -6.530435085296631
    6. '        
' → logprob: -7.155435085296631
    7. '
' → logprob: -7.530435085296631
    8. '#' → logprob: -7.530435085296631
    9. '```' → logprob: -8.405435562133789
    10. ' and' → logprob: -8.780435562133789

Token 902: ' pick' (ID: 5230)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.9603580236434937
    2. 'best' → logprob: -1.2103580236434937
    3. ' best' → logprob: -1.9603580236434937
    4. 'min' → logprob: -2.210358142852783
    5. ' res' → logprob: -3.460358142852783
    6. ' min' → logprob: -4.585358142852783
    7. 'result' → logprob: -4.960358142852783
    8. 'choose' → logprob: -5.085358142852783
    9. 'ans' → logprob: -5.210358142852783
    10. '       ' → logprob: -6.460358142852783

Token 903: ' minimum' (ID: 11085)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.27653786540031433
    2. ' min' → logprob: -1.7765378952026367
    3. 'the' → logprob: -3.0265378952026367
    4. ' the' → logprob: -5.151537895202637
    5. 'best' → logprob: -5.151537895202637
    6. 'minimal' → logprob: -5.651537895202637
    7. 'minimum' → logprob: -5.901537895202637
    8. 'float' → logprob: -6.276537895202637
    9. ' minimal' → logprob: -6.651537895202637
    10. '   ' → logprob: -6.901537895202637

Token 904: ' time' (ID: 1058)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.13427580893039703
    2. 'time' → logprob: -2.7592759132385254
    3. '       ' → logprob: -3.0092759132385254
    4. 'res' → logprob: -5.259275913238525
    5. '_result' → logprob: -5.884275913238525
    6. 'result' → logprob: -6.259275913238525
    7. '_res' → logprob: -6.634275913238525
    8. '_' → logprob: -7.634275913238525
    9. ' time' → logprob: -8.384275436401367
    10. '(' → logprob: -8.884275436401367

Token 905: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002712033921852708
    2. '        
' → logprob: -6.877712249755859
    3. ',' → logprob: -7.252712249755859
    4. '
' → logprob: -7.752712249755859
    5. ':' → logprob: -9.00271224975586
    6. '.' → logprob: -10.00271224975586
    7. '   ' → logprob: -10.12771224975586
    8. ')' → logprob: -10.25271224975586
    9. '=' → logprob: -10.62771224975586
    10. 'import' → logprob: -10.87771224975586

Token 906: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03873978927731514
    2. 'res' → logprob: -4.0387396812438965
    3. 'best' → logprob: -5.4137396812438965
    4. 'result' → logprob: -5.6637396812438965
    5. 'options' → logprob: -6.2887396812438965
    6. ' res' → logprob: -6.5387396812438965
    7. ' best' → logprob: -6.6637396812438965
    8. 'time' → logprob: -6.6637396812438965
    9. '        
' → logprob: -7.0387396812438965
    10. '
' → logprob: -7.2887396812438965

Token 907: ' #' (ID: 1069)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.6511691808700562
    2. 'res' → logprob: -1.0261691808700562
    3. 'results' → logprob: -2.6511693000793457
    4. '       ' → logprob: -4.276169300079346
    5. 'min' → logprob: -4.526169300079346
    6. 'result' → logprob: -4.776169300079346
    7. 'options' → logprob: -5.026169300079346
    8. 'next' → logprob: -5.651169300079346
    9. 'times' → logprob: -6.151169300079346
    10. 'import' → logprob: -6.651169300079346

Token 908: ' First' (ID: 8338)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.6246351599693298
    2. 'best' → logprob: -0.9996351599693298
    3. 'results' → logprob: -3.3746352195739746
    4. 'result' → logprob: -4.249635219573975
    5. 'times' → logprob: -4.249635219573975
    6. 'min' → logprob: -4.624635219573975
    7. '#' → logprob: -4.999635219573975
    8. 'options' → logprob: -5.374635219573975
    9. 'next' → logprob: -5.374635219573975
    10. 'rest' → logprob: -6.749635219573975

Token 909: ',' (ID: 11)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.24057506024837494
    2. 'time' → logprob: -2.490575075149536
    3. 'speed' → logprob: -2.990575075149536
    4. '       ' → logprob: -3.365575075149536
    5. 'res' → logprob: -5.240574836730957
    6. 'best' → logprob: -5.365574836730957
    7. 'dist' → logprob: -5.490574836730957
    8. 'run' → logprob: -5.740574836730957
    9. 'times' → logprob: -5.865574836730957
    10. 'result' → logprob: -5.990574836730957

Token 910: ' compute' (ID: 23864)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4621204733848572
    2. 'speed' → logprob: -1.837120532989502
    3. 'res' → logprob: -2.212120532989502
    4. 'time' → logprob: -3.212120532989502
    5. 'min' → logprob: -3.712120532989502
    6. 'best' → logprob: -4.087120532989502
    7. 'run' → logprob: -4.962120532989502
    8. 'eat' → logprob: -5.087120532989502
    9. 'base' → logprob: -6.462120532989502
    10. 'result' → logprob: -7.087120532989502

Token 911: ' time' (ID: 1058)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.9291674494743347
    2. 'best' → logprob: -1.5541675090789795
    3. 'time' → logprob: -1.9291675090789795
    4. 'times' → logprob: -2.4291675090789795
    5. 'min' → logprob: -2.5541675090789795
    6. '#' → logprob: -3.4291675090789795
    7. 'results' → logprob: -3.9291675090789795
    8. '       ' → logprob: -4.6791672706604
    9. 'result' → logprob: -5.1791672706604
    10. 'run' → logprob: -5.5541672706604

Token 912: ' to' (ID: 316)
  Prédit: '_to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.7180288434028625
    2. '=' → logprob: -1.8430287837982178
    3. 'to' → logprob: -2.3430287837982178
    4. '_taken' → logprob: -2.8430287837982178
    5. '_needed' → logprob: -3.0930287837982178
    6. '_pass' → logprob: -3.7180287837982178
    7. ' =' → logprob: -3.8430287837982178
    8. '_no' → logprob: -4.093029022216797
    9. '_without' → logprob: -4.468029022216797
    10. '_sp' → logprob: -4.468029022216797

Token 913: ' run' (ID: 2461)
  Prédit: 'run'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'run' → logprob: -0.024227328598499298
    2. 'complete' → logprob: -4.274227142333984
    3. 'tr' → logprob: -5.149227142333984
    4. 'reach' → logprob: -6.274227142333984
    5. 'cross' → logprob: -6.774227142333984
    6. 'travel' → logprob: -7.649227142333984
    7. 'go' → logprob: -8.274227142333984
    8. 'finish' → logprob: -8.899227142333984
    9. 'cover' → logprob: -9.524227142333984
    10. ' run' → logprob: -9.649227142333984

Token 914: ' this' (ID: 495)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.027104422450065613
    2. ' =' → logprob: -4.027104377746582
    3. 'dist' → logprob: -5.777104377746582
    4. '(dist' → logprob: -6.902104377746582
    5. '_on' → logprob: -7.152104377746582
    6. 'through' → logprob: -7.152104377746582
    7. 'for' → logprob: -7.527104377746582
    8. 'on' → logprob: -8.277104377746582
    9. '_here' → logprob: -8.402104377746582
    10. '_forward' → logprob: -8.527104377746582

Token 915: ' segment' (ID: 14806)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.40434178709983826
    2. ' segment' → logprob: -1.1543418169021606
    3. 'dist' → logprob: -4.279341697692871
    4. ' dist' → logprob: -5.779341697692871
    5. '_segment' → logprob: -9.529341697692871
    6. 'distance' → logprob: -9.529341697692871
    7. ')' → logprob: -9.904341697692871
    8. 'seg' → logprob: -10.029341697692871
    9. ' ' → logprob: -10.404341697692871
    10. '
' → logprob: -10.904341697692871

Token 916: ' for' (ID: 395)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.0339381694793701
    2. '/' → logprob: -1.2839381694793701
    3. ' /' → logprob: -2.65893816947937
    4. '       ' → logprob: -3.03393816947937
    5. '_time' → logprob: -3.15893816947937
    6. '_with' → logprob: -3.40893816947937
    7. 'time' → logprob: -3.53393816947937
    8. ' =' → logprob: -3.53393816947937
    9. '_run' → logprob: -4.033938407897949
    10. '/run' → logprob: -4.658938407897949

Token 917: ' a' (ID: 261)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.08512580394744873
    2. 'time' → logprob: -3.0851259231567383
    3. 'self' → logprob: -4.460125923156738
    4. 'both' → logprob: -4.835125923156738
    5. 'distance' → logprob: -5.960125923156738
    6. 'the' → logprob: -6.085125923156738
    7. 'speed' → logprob: -6.335125923156738
    8. 'idx' → logprob: -6.335125923156738
    9. ' dist' → logprob: -6.835125923156738
    10. 'this' → logprob: -6.835125923156738

Token 918: ' given' (ID: 4335)
  Prédit: 'll'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'll' → logprob: -0.013724085874855518
    2. 't' → logprob: -4.388723850250244
    3. 'rr' → logprob: -8.388724327087402
    4. 'while' → logprob: -8.513724327087402
    5. 'l' → logprob: -8.888724327087402
    6. 'short' → logprob: -9.888724327087402
    7. 'distance' → logprob: -10.138724327087402
    8. '_ll' → logprob: -10.388724327087402
    9. 'wait' → logprob: -10.513724327087402
    10. 'time' → logprob: -10.513724327087402

Token 919: ' strategy' (ID: 10772)
  Prédit: 'speed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'speed' → logprob: -0.08777882158756256
    2. 'time' → logprob: -2.8377788066864014
    3. 'distance' → logprob: -4.8377790451049805
    4. ' speed' → logprob: -5.0877790451049805
    5. 'elapsed' → logprob: -5.7127790451049805
    6. '_speed' → logprob: -6.5877790451049805
    7. 'boost' → logprob: -6.5877790451049805
    8. 'dist' → logprob: -6.9627790451049805
    9. ' time' → logprob: -7.5877790451049805
    10. 'duration' → logprob: -7.8377790451049805

Token 920: ' of' (ID: 328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4483030140399933
    2. '=' → logprob: -1.823302984237671
    3. ':' → logprob: -3.448302984237671
    4. 'time' → logprob: -3.823302984237671
    5. 'result' → logprob: -3.823302984237671
    6. '
' → logprob: -4.07330322265625
    7. '   ' → logprob: -4.19830322265625
    8. ',' → logprob: -4.44830322265625
    9. ' =' → logprob: -4.44830322265625
    10. '```' → logprob: -4.44830322265625

Token 921: ' eating' (ID: 15700)
  Prédit: 'speed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'speed' → logprob: -1.0292749404907227
    2. 'e' → logprob: -1.5292749404907227
    3. 'not' → logprob: -1.7792749404907227
    4. 'time' → logprob: -2.1542749404907227
    5. 'running' → logprob: -3.0292749404907227
    6. 'this' → logprob: -4.154274940490723
    7. 'sk' → logprob: -4.529274940490723
    8. 'the' → logprob: -4.654274940490723
    9. 'waiting' → logprob: -4.904274940490723
    10. 'boost' → logprob: -5.029274940490723

Token 922: ' timing' (ID: 31922)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.6803861856460571
    2. '=' → logprob: -1.5553861856460571
    3. '_time' → logprob: -2.6803860664367676
    4. '_speed' → logprob: -2.9303860664367676
    5. 'speed' → logprob: -3.3053860664367676
    6. 'and' → logprob: -3.6803860664367676
    7. 'if' → logprob: -4.305386066436768
    8. ' =' → logprob: -4.430386066436768
    9. 'distance' → logprob: -4.680386066436768
    10. '       ' → logprob: -4.930386066436768

Token 923: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1701442003250122
    2. ',' → logprob: -3.5451440811157227
    3. 'time' → logprob: -3.5451440811157227
    4. ':' → logprob: -3.5451440811157227
    5. '.' → logprob: -4.420144081115723
    6. ' and' → logprob: -4.920144081115723
    7. '        
' → logprob: -5.295144081115723
    8. '```' → logprob: -5.420144081115723
    9. '
' → logprob: -5.545144081115723
    10. '=' → logprob: -5.670144081115723

Token 924: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.27079030871391296
    2. 'time' → logprob: -2.6457903385162354
    3. 'best' → logprob: -3.3957903385162354
    4. 'result' → logprob: -3.6457903385162354
    5. 'current' → logprob: -4.395790100097656
    6. 'res' → logprob: -4.520790100097656
    7. '#' → logprob: -4.770790100097656
    8. ' best' → logprob: -4.895790100097656
    9. 'run' → logprob: -5.145790100097656
    10. ' time' → logprob: -5.270790100097656

Token 925: ' #' (ID: 1069)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' → logprob: -1.2786526679992676
    2. '       ' → logprob: -1.4036526679992676
    3. 'res' → logprob: -1.6536526679992676
    4. 'times' → logprob: -2.9036526679992676
    5. 'time' → logprob: -3.0286526679992676
    6. 'results' → logprob: -3.1536526679992676
    7. 'min' → logprob: -3.7786526679992676
    8. 'result' → logprob: -3.9036526679992676
    9. '#' (adapté à ' #') → logprob: -4.028652667999268
    10. 'next' → logprob: -4.278652667999268

Token 926: ' But' (ID: 3072)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'best' → logprob: -1.3247137069702148
    2. 'time' → logprob: -1.4497137069702148
    3. '       ' → logprob: -1.5747137069702148
    4. 'times' → logprob: -2.699713706970215
    5. '#' → logprob: -2.824713706970215
    6. 'run' → logprob: -3.199713706970215
    7. 'speed' → logprob: -3.949713706970215
    8. 'next' → logprob: -4.074713706970215
    9. 'min' → logprob: -4.074713706970215
    10. 'res' → logprob: -4.574713706970215

Token 927: ' note' (ID: 7477)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.2584386169910431
    2. '       ' → logprob: -2.0084385871887207
    3. 'time' → logprob: -2.8834385871887207
    4. 'speed' → logprob: -4.383438587188721
    5. 'run' → logprob: -5.258438587188721
    6. 'for' → logprob: -6.133438587188721
    7. ' #' → logprob: -6.258438587188721
    8. 'return' → logprob: -6.633438587188721
    9. 'wait' → logprob: -6.633438587188721
    10. 'rest' → logprob: -6.633438587188721

Token 928: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6185243129730225
    2. '       ' → logprob: -1.8685243129730225
    3. ',' → logprob: -1.9935243129730225
    4. ' :' → logprob: -2.9935243129730225
    5. ' =' → logprob: -3.6185243129730225
    6. '=' → logprob: -3.7435243129730225
    7. ' ' → logprob: -4.118524551391602
    8. ' that' → logprob: -4.243524551391602
    9. '_' → logprob: -4.868524551391602
    10. '        ' → logprob: -5.618524551391602

Token 929: ' eating' (ID: 15700)
  Prédit: 'speed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'speed' → logprob: -0.7058189511299133
    2. '#' → logprob: -1.9558188915252686
    3. 'time' → logprob: -1.9558188915252686
    4. '       ' → logprob: -2.5808188915252686
    5. 'distance' → logprob: -3.8308188915252686
    6. 'res' → logprob: -4.080819129943848
    7. 'next' → logprob: -4.080819129943848
    8. 'return' → logprob: -4.205819129943848
    9. 'dist' → logprob: -4.455819129943848
    10. 'run' → logprob: -4.705819129943848

Token 930: ' takes' (ID: 6948)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 931: ' no' (ID: 860)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003593898145481944
    2. ' no' → logprob: -6.003593921661377
    3. 'no' → logprob: -7.378593921661377
    4. ' ' → logprob: -8.003593444824219
    5. 'zero' → logprob: -9.378593444824219
    6. ' zero' → logprob: -9.878593444824219
    7. '
' → logprob: -11.253593444824219
    8. 'self' → logprob: -13.128593444824219
    9. '```' → logprob: -13.503593444824219
    10. '	no' → logprob: -14.128593444824219

Token 932: ' time' (ID: 1058)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.2868840992450714
    2. ' time' → logprob: -1.536884069442749
    3. '_time' → logprob: -3.411884069442749
    4. '_extra' → logprob: -7.661884307861328
    5. 'additional' → logprob: -8.411884307861328
    6. 'extra' → logprob: -8.536884307861328
    7. '_' → logprob: -8.661884307861328
    8. 'explicit' → logprob: -9.661884307861328
    9. ' additional' → logprob: -9.786884307861328
    10. ' _' → logprob: -10.161884307861328

Token 933: '.' (ID: 13)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.38319042325019836
    2. ',' → logprob: -2.258190393447876
    3. '        
' → logprob: -2.383190393447876
    4. '.' → logprob: -3.008190393447876
    5. '
' → logprob: -3.508190393447876
    6. '#' → logprob: -4.383190631866455
    7. ')' → logprob: -5.383190631866455
    8. ';' → logprob: -5.758190631866455
    9. '        

' → logprob: -6.008190631866455
    10. '        ' → logprob: -6.258190631866455

Token 934: ' Boost' (ID: 57880)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5345874428749084
    2. 'min' → logprob: -2.0345873832702637
    3. 'best' → logprob: -2.1595873832702637
    4. ' min' → logprob: -3.6595873832702637
    5. 'res' → logprob: -3.9095873832702637
    6. ' best' → logprob: -4.034587383270264
    7. 'next' → logprob: -4.159587383270264
    8. 'result' → logprob: -4.284587383270264
    9. '#' → logprob: -4.409587383270264
    10. 'time' → logprob: -4.784587383270264

Token 935: ' timer' (ID: 16905)
  Prédit: 'ed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -1.548150658607483
    2. '_duration' → logprob: -1.673150658607483
    3. '_' → logprob: -1.798150658607483
    4. 's' → logprob: -2.0481505393981934
    5. '_timer' → logprob: -2.2981505393981934
    6. '_time' → logprob: -2.4231505393981934
    7. ')' → logprob: -3.6731505393981934
    8. ' timer' → logprob: -4.173150539398193
    9. ' time' → logprob: -4.673150539398193
    10. 'time' → logprob: -4.673150539398193

Token 936: ' counts' (ID: 28991)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.9479588866233826
    2. ' resets' → logprob: -1.1979589462280273
    3. '=' → logprob: -1.9479589462280273
    4. ' is' → logprob: -2.8229589462280273
    5. 'is' → logprob: -3.1979589462280273
    6. 'starts' → logprob: -3.6979589462280273
    7. ' =' → logprob: -3.9479589462280273
    8. ' starts' → logprob: -4.447958946228027
    9. 'reset' → logprob: -5.697958946228027
    10. '```' → logprob: -7.322958946228027

Token 937: ' from' (ID: 591)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.7575944662094116
    2. 'down' → logprob: -0.8825944662094116
    3. 'only' → logprob: -2.632594585418701
    4. ' from' → logprob: -4.507594585418701
    5. 'as' → logprob: -4.757594585418701
    6. 'continu' → logprob: -4.882594585418701
    7. ' only' → logprob: -5.507594585418701
    8. ' as' → logprob: -6.007594585418701
    9. 'time' → logprob: -6.132594585418701
    10. 'for' → logprob: -6.257594585418701

Token 938: ' eating' (ID: 15700)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006141376681625843
    2. 'current' → logprob: -6.006141185760498
    3. 'zero' → logprob: -6.006141185760498
    4. 'the' → logprob: -7.881141185760498
    5. 'time' → logprob: -8.256141662597656
    6. 'e' → logprob: -8.506141662597656
    7. ' ' → logprob: -9.506141662597656
    8. '   ' → logprob: -9.881141662597656
    9. ' zero' → logprob: -10.256141662597656
    10. 'next' → logprob: -10.506141662597656

Token 939: ' moment' (ID: 4205)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2940486669540405
    2. '.' → logprob: -1.2940486669540405
    3. '       ' → logprob: -1.4190486669540405
    4. '=' → logprob: -2.79404878616333
    5. '_' → logprob: -3.04404878616333
    6. ',' → logprob: -3.04404878616333
    7. '_time' → logprob: -4.54404878616333
    8. '   ' → logprob: -4.91904878616333
    9. '#' → logprob: -5.16904878616333
    10. ' =' → logprob: -5.41904878616333

Token 940: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6618901491165161
    2. ')' → logprob: -1.7868901491165161
    3. '.' → logprob: -1.9118901491165161
    4. ',' → logprob: -2.4118900299072266
    5. '=' → logprob: -3.0368900299072266
    6. '        
' → logprob: -5.161890029907227
    7. ' =' → logprob: -6.036890029907227
    8. '#' → logprob: -6.161890029907227
    9. '   ' → logprob: -6.286890029907227
    10. ';' → logprob: -6.286890029907227

Token 941: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20255611836910248
    2. '#' → logprob: -2.8275561332702637
    3. 'best' → logprob: -3.0775561332702637
    4. 'res' → logprob: -3.9525561332702637
    5. 'result' → logprob: -4.452556133270264
    6. 'run' → logprob: -4.702556133270264
    7. 'options' → logprob: -4.952556133270264
    8. 'time' → logprob: -5.327556133270264
    9. 'min' → logprob: -6.077556133270264
    10. 'results' → logprob: -6.077556133270264

Token 942: ' min' (ID: 1349)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.4338105618953705
    2. '       ' → logprob: -2.4338104724884033
    3. 'best' → logprob: -2.5588104724884033
    4. 'results' → logprob: -2.6838104724884033
    5. 'times' → logprob: -3.3088104724884033
    6. 'result' → logprob: -3.8088104724884033
    7. '#' → logprob: -3.9338104724884033
    8. 'time' → logprob: -4.808810710906982
    9. 'options' → logprob: -4.933810710906982
    10. 'run' → logprob: -4.933810710906982

Token 943: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.0020480782259255648
    2. '_' → logprob: -6.252048015594482
    3. '_t' → logprob: -9.87704849243164
    4. '_val' → logprob: -10.25204849243164
    5. '_cost' → logprob: -12.00204849243164
    6. 'time' → logprob: -12.00204849243164
    7. '_res' → logprob: -12.12704849243164
    8. '_total' → logprob: -12.62704849243164
    9. '_value' → logprob: -12.87704849243164
    10. '_result' → logprob: -13.25204849243164

Token 944: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2818327844142914
    2. '=' → logprob: -1.4068328142166138
    3. '_' → logprob: -7.906832695007324
    4. '       ' → logprob: -9.281832695007324
    5. '   ' → logprob: -9.531832695007324
    6. ',' → logprob: -10.781832695007324
    7. ':' → logprob: -11.281832695007324
    8. '_to' → logprob: -11.406832695007324
    9. 's' → logprob: -11.531832695007324
    10. '_since' → logprob: -11.531832695007324

Token 945: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.028379268944263458
    2. 'dist' → logprob: -3.653379201889038
    3. '(float' → logprob: -7.153379440307617
    4. 'segment' → logprob: -7.528379440307617
    5. 'self' → logprob: -7.778379440307617
    6. '(dist' → logprob: -9.153379440307617
    7. ' float' → logprob: -9.778379440307617
    8. '(' → logprob: -9.778379440307617
    9. 'current' → logprob: -9.778379440307617
    10. '1' → logprob: -10.778379440307617

Token 946: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0024464004673063755
    2. ''in' → logprob: -6.252446174621582
    3. ''' → logprob: -7.877446174621582
    4. '(' → logprob: -10.752446174621582
    5. ''s' → logprob: -10.877446174621582
    6. ''op' → logprob: -11.002446174621582
    7. ''a' → logprob: -11.377446174621582
    8. 'inf' → logprob: -11.627446174621582
    9. ''ap' → logprob: -12.252446174621582
    10. ''am' → logprob: -12.502446174621582

Token 947: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -2.816093228830141e-06
    2. ''' → logprob: -13.00000286102295
    3. ''in' → logprob: -15.37500286102295
    4. 'pos' → logprob: -16.625001907348633
    5. 'info' → logprob: -16.625001907348633
    6. '_inf' → logprob: -18.000001907348633
    7. ''s' → logprob: -18.250001907348633
    8. ' inf' → logprob: -19.125001907348633
    9. '')' → logprob: -19.750001907348633
    10. 'opt' → logprob: -20.125001907348633

Token 948: '')

' (ID: 9735)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07387711852788925
    2. '')' → logprob: -2.8238770961761475
    3. ')
' → logprob: -5.073877334594727
    4. '       ' → logprob: -5.823877334594727
    5. '')
' → logprob: -6.073877334594727
    6. ')

' → logprob: -8.948877334594727
    7. '')

' → logprob: -10.073877334594727
    8. ')')
' → logprob: -10.073877334594727
    9. ')'' → logprob: -10.448877334594727
    10. ' )' → logprob: -10.573877334594727

Token 949: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6746900677680969
    2. '#' → logprob: -0.7996900677680969
    3. ' #' → logprob: -3.799690008163452
    4. '        
' → logprob: -5.549690246582031
    5. '   ' → logprob: -5.799690246582031
    6. 'for' → logprob: -6.174690246582031
    7. 'time' → logprob: -6.674690246582031
    8. 'run' → logprob: -6.674690246582031
    9. ' for' → logprob: -6.799690246582031
    10. 'current' → logprob: -7.174690246582031

Token 950: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.0020155981183052063
    2. 'for' → logprob: -6.752015590667725
    3. 'run' → logprob: -7.877015590667725
    4. 'speed' → logprob: -8.752016067504883
    5. '       ' → logprob: -9.627016067504883
    6. 'distance' → logprob: -10.127016067504883
    7. 'time' → logprob: -10.252016067504883
    8. ' #' → logprob: -10.252016067504883
    9. '
' → logprob: -10.377016067504883
    10. 'dist' → logprob: -11.002016067504883

Token 951: ' Action' (ID: 9905)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.08615636080503464
    2. 'speed' → logprob: -3.3361563682556152
    3. 'run' → logprob: -3.4611563682556152
    4. 'time' → logprob: -5.211156368255615
    5. 'for' → logprob: -5.336156368255615
    6. 'distance' → logprob: -6.711156368255615
    7. 'current' → logprob: -7.086156368255615
    8. 'dist' → logprob: -7.211156368255615
    9. '   ' → logprob: -7.461156368255615
    10. ' #' → logprob: -7.961156368255615

Token 952: ' A' (ID: 355)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.071626901626587
    2. ' =' → logprob: -1.071626901626587
    3. '=' → logprob: -1.196626901626587
    4. ' ' → logprob: -5.571626663208008
    5. 's' → logprob: -6.446626663208008
    6. ' #' → logprob: -6.446626663208008
    7. '   ' → logprob: -6.571626663208008
    8. '#' → logprob: -6.571626663208008
    9. '1' → logprob: -6.946626663208008
    10. '       ' → logprob: -7.446626663208008

Token 953: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08397098630666733
    2. '#' → logprob: -3.4589710235595703
    3. ' =' → logprob: -3.7089710235595703
    4. ' #' → logprob: -4.70897102355957
    5. '=' → logprob: -4.95897102355957
    6. ')' → logprob: -5.45897102355957
    7. ' :' → logprob: -6.95897102355957
    8. '1' → logprob: -7.45897102355957
    9. '       ' → logprob: -7.45897102355957
    10. '):' → logprob: -7.58397102355957

Token 954: ' Eat' (ID: 60629)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.024569710716605186
    2. 'if' → logprob: -4.149569511413574
    3. 'Run' → logprob: -5.649569511413574
    4. 'Eat' → logprob: -5.899569511413574
    5. 'try' → logprob: -8.024569511413574
    6. 'If' → logprob: -8.149569511413574
    7. 'Use' → logprob: -8.149569511413574
    8. '
' → logprob: -8.274569511413574
    9. 'eat' → logprob: -8.274569511413574
    10. ' #' → logprob: -8.524569511413574

Token 955: ' carrot' (ID: 121234)
  Prédit: 'this'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'this' → logprob: -1.1320419311523438
    2. 'the' → logprob: -1.3820419311523438
    3. 'now' → logprob: -1.8820419311523438
    4. 'car' → logprob: -2.3820419311523438
    5. 'time' → logprob: -2.8820419311523438
    6. 'im' → logprob: -3.7570419311523438
    7. ' this' → logprob: -4.382041931152344
    8. '_now' → logprob: -4.382041931152344
    9. ' the' → logprob: -4.507041931152344
    10. 'at' → logprob: -4.632041931152344

Token 956: ' at' (ID: 540)
  Prédit: 'now'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'now' → logprob: -0.44889476895332336
    2. 'im' → logprob: -1.448894739151001
    3. ' immediately' → logprob: -2.948894739151001
    4. ' now' → logprob: -3.323894739151001
    5. '       ' → logprob: -4.82389497756958
    6. '_now' → logprob: -5.19889497756958
    7. 'at' → logprob: -5.44889497756958
    8. 'right' → logprob: -5.44889497756958
    9. '   ' → logprob: -5.57389497756958
    10. ' right' → logprob: -5.82389497756958

Token 957: ' this' (ID: 495)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.0009201543871313334
    2. 'this' → logprob: -8.125920295715332
    3. ' idx' → logprob: -8.375920295715332
    4. 'current' → logprob: -9.125920295715332
    5. 'time' → logprob: -9.500920295715332
    6. '_idx' → logprob: -9.875920295715332
    7. 'the' → logprob: -10.625920295715332
    8. 'index' → logprob: -10.875920295715332
    9. 'car' → logprob: -11.000920295715332
    10. '[idx' → logprob: -11.000920295715332

Token 958: ' position' (ID: 4010)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.03476256877183914
    2. ' idx' → logprob: -3.4097626209259033
    3. '_idx' → logprob: -7.784762382507324
    4. 'segment' → logprob: -8.159762382507324
    5. '
' → logprob: -9.159762382507324
    6. 'index' → logprob: -9.284762382507324
    7. ' segment' → logprob: -9.784762382507324
    8. 'position' → logprob: -10.909762382507324
    9. '   ' → logprob: -11.034762382507324
    10. '[idx' → logprob: -11.159762382507324

Token 959: ' immediately' (ID: 10731)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11003931611776352
    2. ':' → logprob: -3.360039234161377
    3. 'time' → logprob: -3.985039234161377
    4. '#' → logprob: -5.110039234161377
    5. ',' → logprob: -5.110039234161377
    6. '(time' → logprob: -5.235039234161377
    7. ')' → logprob: -5.360039234161377
    8. '.' → logprob: -5.360039234161377
    9. '+' → logprob: -5.735039234161377
    10. 'current' → logprob: -6.235039234161377

Token 960: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21819478273391724
    2. 'time' → logprob: -2.3431947231292725
    3. '
' → logprob: -4.093194961547852
    4. '#' → logprob: -4.218194961547852
    5. ':' → logprob: -4.593194961547852
    6. 'if' → logprob: -4.718194961547852
    7. '+' → logprob: -5.093194961547852
    8. 'car' → logprob: -5.343194961547852
    9. '(time' → logprob: -5.343194961547852
    10. '        
' → logprob: -5.593194961547852

Token 961: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13554546236991882
    2. '
' → logprob: -3.010545492172241
    3. 'time' → logprob: -3.885545492172241
    4. ':' → logprob: -4.135545253753662
    5. ',' → logprob: -4.510545253753662
    6. '        
' → logprob: -4.885545253753662
    7. '#' → logprob: -5.635545253753662
    8. ')' → logprob: -6.010545253753662
    9. '.' → logprob: -6.260545253753662
    10. ')
' → logprob: -6.260545253753662

Token 962: ' #' (ID: 1069)
  Prédit: 'run'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'run' → logprob: -1.2359145879745483
    2. '#' (adapté à ' #') → logprob: -1.6109145879745483
    3. 'speed' → logprob: -1.6109145879745483
    4. 'time' → logprob: -1.6109145879745483
    5. 'if' → logprob: -3.360914707183838
    6. '       ' → logprob: -4.110914707183838
    7. 'travel' → logprob: -4.360914707183838
    8. 'distance' → logprob: -4.610914707183838
    9. 'dist' → logprob: -4.985914707183838
    10. 'new' → logprob: -4.985914707183838

Token 963: ' Check' (ID: 6208)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.019346676766872406
    2. '#' → logprob: -4.894346714019775
    3. 'speed' → logprob: -5.269346714019775
    4. 'time' → logprob: -5.769346714019775
    5. 'run' → logprob: -7.019346714019775
    6. 'car' → logprob: -7.144346714019775
    7. 'dist' → logprob: -7.769346714019775
    8. 'distance' → logprob: -8.144346237182617
    9. 'eat' → logprob: -8.519346237182617
    10. 'new' → logprob: -8.894346237182617

Token 964: ' storage' (ID: 7928)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00027694785967469215
    2. ' if' → logprob: -8.750276565551758
    3. 'car' → logprob: -9.125276565551758
    4. '       ' → logprob: -12.250276565551758
    5. ' carrots' → logprob: -13.125276565551758
    6. 'self' → logprob: -13.750276565551758
    7. '   ' → logprob: -14.625276565551758
    8. 'for' → logprob: -15.000276565551758
    9. '           ' → logprob: -15.500276565551758
    10. '        
' → logprob: -15.875276565551758

Token 965: ':' (ID: 25)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.2770483493804932
    2. ' if' → logprob: -1.2770483493804932
    3. '       ' → logprob: -2.027048349380493
    4. ':' → logprob: -2.652048349380493
    5. ' and' → logprob: -2.652048349380493
    6. ' or' → logprob: -3.027048349380493
    7. ',' → logprob: -3.527048349380493
    8. 'and' → logprob: -3.527048349380493
    9. '>=' → logprob: -3.902048349380493
    10. '=' → logprob: -4.152048110961914

Token 966: ' can' (ID: 665)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3582598865032196
    2. ' if' → logprob: -1.233259916305542
    3. '       ' → logprob: -4.733259677886963
    4. '<|end|>' → logprob: -8.608260154724121
    5. 'If' → logprob: -8.858260154724121
    6. '           ' → logprob: -9.233260154724121
    7. 'car' → logprob: -9.358260154724121
    8. ' ' → logprob: -9.608260154724121
    9. '	if' → logprob: -10.108260154724121
    10. '
' → logprob: -10.608260154724121

Token 967: ' we' (ID: 581)
  Prédit: '_use'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_use' → logprob: -0.45374688506126404
    2. '_store' → logprob: -1.3287469148635864
    3. '_e' → logprob: -3.203746795654297
    4. '_car' → logprob: -3.328746795654297
    5. '_be' → logprob: -4.703746795654297
    6. 'car' → logprob: -5.953746795654297
    7. 'eat' → logprob: -5.953746795654297
    8. '_have' → logprob: -6.203746795654297
    9. 'use' → logprob: -6.703746795654297
    10. 'e' → logprob: -6.953746795654297

Token 968: ' eat' (ID: 11237)
  Prédit: 'eat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eat' → logprob: -0.39539679884910583
    2. ' eat' → logprob: -1.8953968286514282
    3. ' use' → logprob: -2.0203967094421387
    4. 'use' → logprob: -3.2703967094421387
    5. 'car' → logprob: -6.395396709442139
    6. 'e' → logprob: -6.520396709442139
    7. '_e' → logprob: -7.270396709442139
    8. '_use' → logprob: -7.520396709442139
    9. ' carrots' → logprob: -7.770396709442139
    10. 'carry' → logprob: -9.270397186279297

Token 969: ' it' (ID: 480)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.083853840827942
    2. '=' → logprob: -1.833853840827942
    3. 'if' → logprob: -2.0838537216186523
    4. 'car' → logprob: -3.0838537216186523
    5. '?' → logprob: -3.3338537216186523
    6. ' or' → logprob: -3.5838537216186523
    7. ' ' → logprob: -3.7088537216186523
    8. ' =' → logprob: -3.8338537216186523
    9. '_now' → logprob: -3.8338537216186523
    10. ':' → logprob: -4.208853721618652

Token 970: ' without' (ID: 2935)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.5785418748855591
    2. ' or' → logprob: -1.203541874885559
    3. '=' → logprob: -2.3285417556762695
    4. '?' → logprob: -3.7035417556762695
    5. 'at' → logprob: -5.8285417556762695
    6. ':' → logprob: -5.8285417556762695
    7. '=True' → logprob: -6.2035417556762695
    8. 'direct' → logprob: -6.2035417556762695
    9. ' directly' → logprob: -7.0785417556762695
    10. ' at' → logprob: -7.0785417556762695

Token 971: ' storing' (ID: 42787)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.32146936655044556
    2. 'car' → logprob: -1.4464693069458008
    3. ' storing' → logprob: -3.821469306945801
    4. 'using' → logprob: -4.696469306945801
    5. ' carrying' → logprob: -5.946469306945801
    6. 'storage' → logprob: -6.071469306945801
    7. 'having' → logprob: -7.196469306945801
    8. 'holding' → logprob: -7.571469306945801
    9. '1' → logprob: -7.696469306945801
    10. 'taking' → logprob: -8.1964693069458

Token 972: '?' (ID: 30)
  Prédit: '?'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '?' → logprob: -0.3745039105415344
    2. ' or' → logprob: -1.7495038509368896
    3. ' if' → logprob: -3.2495038509368896
    4. ':' → logprob: -3.2495038509368896
    5. '):' → logprob: -3.7495038509368896
    6. 'or' → logprob: -4.874504089355469
    7. 'if' → logprob: -4.999504089355469
    8. '=' → logprob: -5.124504089355469
    9. ' and' → logprob: -5.374504089355469
    10. '.' → logprob: -6.124504089355469

Token 973: ' Either' (ID: 39604)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.46893376111984253
    2. ' if' → logprob: -2.0939338207244873
    3. ')' → logprob: -2.4689338207244873
    4. 'if' → logprob: -2.5939338207244873
    5. '        
' → logprob: -3.9689338207244873
    6. ' 
' → logprob: -4.468933582305908
    7. '#' → logprob: -4.468933582305908
    8. ',' → logprob: -5.218933582305908
    9. '=' → logprob: -5.218933582305908
    10. '
' → logprob: -5.343933582305908

Token 974: ' eat' (ID: 11237)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.05605437979102135
    2. 'True' → logprob: -3.6810543537139893
    3. 'self' → logprob: -4.806054592132568
    4. 'we' → logprob: -5.056054592132568
    5. ' carrots' → logprob: -5.306054592132568
    6. '0' → logprob: -5.931054592132568
    7. '1' → logprob: -6.306054592132568
    8. ' True' → logprob: -6.306054592132568
    9. 'if' → logprob: -7.681054592132568
    10. 'cars' → logprob: -8.05605411529541

Token 975: ' immediately' (ID: 10731)
  Prédit: '_now'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_now' → logprob: -1.126265287399292
    2. 'im' → logprob: -1.501265287399292
    3. 'now' → logprob: -2.001265287399292
    4. 'it' → logprob: -2.501265287399292
    5. '_im' → logprob: -2.876265287399292
    6. '_car' → logprob: -3.376265287399292
    7. ' immediately' → logprob: -3.751265287399292
    8. 'car' → logprob: -3.751265287399292
    9. 'the' → logprob: -4.251265525817871
    10. '_here' → logprob: -4.376265525817871

Token 976: ' and' (ID: 326)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.6819394826889038
    2. ' or' → logprob: -0.8069394826889038
    3. 'at' → logprob: -4.556939601898193
    4. ' at' → logprob: -4.806939601898193
    5. '=' → logprob: -5.181939601898193
    6. 'from' → logprob: -5.431939601898193
    7. ',' → logprob: -5.681939601898193
    8. 'without' → logprob: -5.806939601898193
    9. 'and' → logprob: -5.931939601898193
    10. 'car' → logprob: -6.056939601898193

Token 977: ' reset' (ID: 12820)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.16365067660808563
    2. 'not' → logprob: -2.5386507511138916
    3. '0' → logprob: -3.9136507511138916
    4. 'carry' → logprob: -4.0386505126953125
    5. 'use' → logprob: -4.4136505126953125
    6. 'self' → logprob: -5.0386505126953125
    7. 'store' → logprob: -6.4136505126953125
    8. 'True' → logprob: -6.5386505126953125
    9. 'have' → logprob: -6.5386505126953125
    10. 'get' → logprob: -6.9136505126953125

Token 978: ' boost' (ID: 12110)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.835976243019104
    2. 'last' → logprob: -1.460976243019104
    3. '_' → logprob: -2.7109761238098145
    4. '_time' → logprob: -2.8359761238098145
    5. 'car' → logprob: -2.8359761238098145
    6. 'the' → logprob: -2.8359761238098145
    7. '1' → logprob: -3.2109761238098145
    8. ' time' → logprob: -4.5859761238098145
    9. ')' → logprob: -5.3359761238098145
    10. '_last' → logprob: -5.3359761238098145

Token 979: ' timer' (ID: 16905)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.9721192717552185
    2. '_timer' → logprob: -1.2221193313598633
    3. ' timer' → logprob: -1.4721193313598633
    4. '_' → logprob: -3.5971193313598633
    5. ' _' → logprob: -4.472119331359863
    6. 'timer' → logprob: -4.597119331359863
    7. ' time' → logprob: -4.597119331359863
    8. ')' → logprob: -4.972119331359863
    9. '           ' → logprob: -5.097119331359863
    10. '   ' → logprob: -5.097119331359863

Token 980: '.
' (ID: 558)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -1.2122607231140137
    2. '=' → logprob: -1.8372607231140137
    3. ',' → logprob: -2.0872607231140137
    4. '.' → logprob: -2.2122607231140137
    5. ')' → logprob: -2.7122607231140137
    6. ' at' → logprob: -2.9622607231140137
    7. 'or' → logprob: -3.0872607231140137
    8. ':' → logprob: -3.7122607231140137
    9. '       ' → logprob: -3.9622607231140137
    10. 'and' → logprob: -4.462260723114014

Token 981: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0708487257361412
    2. ')' → logprob: -3.6958487033843994
    3. 'if' → logprob: -4.9458489418029785
    4. 'time' → logprob: -5.4458489418029785
    5. 'next' → logprob: -5.6958489418029785
    6. '#' → logprob: -5.8208489418029785
    7. ' if' → logprob: -5.9458489418029785
    8. 'self' → logprob: -6.1958489418029785
    9. '.' → logprob: -6.4458489418029785
    10. '
' → logprob: -6.5708489418029785

Token 982: ' #' (ID: 1069)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.9573813676834106
    2. 'if' → logprob: -1.8323813676834106
    3. '       ' → logprob: -2.082381248474121
    4. 'run' → logprob: -2.082381248474121
    5. 'speed' → logprob: -2.457381248474121
    6. 'eat' → logprob: -3.582381248474121
    7. '#' (adapté à ' #') → logprob: -3.707381248474121
    8. 'new' → logprob: -4.207381248474121
    9. 'car' → logprob: -5.082381248474121
    10. 'travel' → logprob: -5.207381248474121

Token 983: ' Actually' (ID: 50557)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'time' → logprob: -1.3982422351837158
    2. 'if' → logprob: -1.6482422351837158
    3. 'speed' → logprob: -1.7732422351837158
    4. 'run' → logprob: -2.148242235183716
    5. '       ' → logprob: -2.398242235183716
    6. 'next' → logprob: -3.273242235183716
    7. 'eat' → logprob: -3.773242235183716
    8. '#' → logprob: -3.898242235183716
    9. 'distance' → logprob: -4.023241996765137
    10. 'new' → logprob: -4.148241996765137

Token 984: ' carrot' (ID: 121234)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.1717848777770996
    2. '#' → logprob: -1.2967848777770996
    3. '       ' → logprob: -1.6717848777770996
    4. 'time' → logprob: -1.9217848777770996
    5. 'speed' → logprob: -3.1717848777770996
    6. 'dist' → logprob: -4.6717848777771
    7. 'min' → logprob: -4.6717848777771
    8. 'car' → logprob: -4.7967848777771
    9. 'eat' → logprob: -5.5467848777771
    10. 'current' → logprob: -6.5467848777771

Token 985: ' is' (ID: 382)
  Prédit: '_positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_positions' → logprob: -0.39609482884407043
    2. '_pos' → logprob: -2.271094799041748
    3. '_car' → logprob: -3.646094799041748
    4. 's' → logprob: -3.646094799041748
    5. '_time' → logprob: -3.771094799041748
    6. '_in' → logprob: -4.021094799041748
    7. '_position' → logprob: -4.146094799041748
    8. '_idx' → logprob: -4.271094799041748
    9. 'car' → logprob: -4.396094799041748
    10. 'stored' → logprob: -4.771094799041748

Token 986: ' at' (ID: 540)
  Prédit: 'at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.6220526695251465
    2. 'not' → logprob: -1.8720526695251465
    3. 'im' → logprob: -2.3720526695251465
    4. 'available' → logprob: -2.4970526695251465
    5. 'always' → logprob: -2.8720526695251465
    6. 'present' → logprob: -4.1220526695251465
    7. ' at' → logprob: -4.6220526695251465
    8. ' not' → logprob: -4.9970526695251465
    9. 'just' → logprob: -5.4970526695251465
    10. 'here' → logprob: -5.8720526695251465

Token 987: ' the' (ID: 290)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.9903256297111511
    2. 'segment' → logprob: -1.115325689315796
    3. 'idx' → logprob: -1.240325689315796
    4. 'the' → logprob: -5.115325450897217
    5. 'pos' → logprob: -6.490325450897217
    6. 'index' → logprob: -6.740325450897217
    7. ' segment' → logprob: -7.240325450897217
    8. ' idx' → logprob: -7.490325450897217
    9. 'position' → logprob: -7.865325450897217
    10. 'current' → logprob: -8.365325927734375

Token 988: ' end' (ID: 1268)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.09570272266864777
    2. 'segment' → logprob: -3.345702648162842
    3. 'current' → logprob: -3.470702648162842
    4. 'car' → logprob: -4.845702648162842
    5. 'pos' → logprob: -5.095702648162842
    6. ' idx' → logprob: -5.720702648162842
    7. 'position' → logprob: -5.845702648162842
    8. 'self' → logprob: -6.470702648162842
    9. 'course' → logprob: -6.470702648162842
    10. ' current' → logprob: -7.970702648162842

Token 989: ' of' (ID: 328)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.19668926298618317
    2. ' of' → logprob: -2.4466893672943115
    3. 'of' → logprob: -2.5716893672943115
    4. '_' → logprob: -4.946689128875732
    5. ' )' → logprob: -6.446689128875732
    6. '_of' → logprob: -6.571689128875732
    7. ',' → logprob: -6.946689128875732
    8. '.' → logprob: -7.071689128875732
    9. '),' → logprob: -7.321689128875732
    10. ':' → logprob: -7.821689128875732

Token 990: ' this' (ID: 495)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.010294157080352306
    2. ' segment' → logprob: -4.760293960571289
    3. 'the' → logprob: -6.510293960571289
    4. ' the' → logprob: -9.135293960571289
    5. 'this' → logprob: -9.885293960571289
    6. 'self' → logprob: -11.385293960571289
    7. ' this' → logprob: -12.010293960571289
    8. '(segment' → logprob: -12.510293960571289
    9. 'current' → logprob: -13.010293960571289
    10. '.segment' → logprob: -13.260293960571289

Token 991: ' segment' (ID: 14806)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.3494042456150055
    2. ' segment' → logprob: -1.224404215812683
    3. ')' → logprob: -7.849404335021973
    4. '_segment' → logprob: -8.474404335021973
    5. '.segment' → logprob: -9.474404335021973
    6. 'space' → logprob: -9.599404335021973
    7. ' )' → logprob: -9.849404335021973
    8. '(segment' → logprob: -10.349404335021973
    9. 'Segment' → logprob: -10.849404335021973
    10. 'position' → logprob: -11.536904335021973

Token 992: '.

' (ID: 364)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6893420815467834
    2. '       ' → logprob: -1.4393420219421387
    3. ',' → logprob: -1.8143420219421387
    4. '.' → logprob: -2.5643420219421387
    5. ')' → logprob: -4.439342021942139
    6. '):' → logprob: -5.439342021942139
    7. '           ' → logprob: -7.314342021942139
    8. '<|end|>' → logprob: -7.439342021942139
    9. '        
' → logprob: -7.814342021942139
    10. '#' → logprob: -7.814342021942139

Token 993: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014974720776081085
    2. '        
' → logprob: -5.764974594116211
    3. '
' → logprob: -5.889974594116211
    4. ',' → logprob: -6.264974594116211
    5. ' if' → logprob: -7.139974594116211
    6. ')' → logprob: -7.139974594116211
    7. '```' → logprob: -7.514974594116211
    8. 'time' → logprob: -7.764974594116211
    9. 'next' → logprob: -7.764974594116211
    10. ' time' → logprob: -7.889974594116211

Token 994: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.7010220289230347
    2. 'run' → logprob: -1.3260220289230347
    3. 'time' → logprob: -1.7010220289230347
    4. '       ' → logprob: -3.951022148132324
    5. 'travel' → logprob: -4.701022148132324
    6. 'new' → logprob: -5.076022148132324
    7. 'if' → logprob: -5.451022148132324
    8. 'speed' → logprob: -5.826022148132324
    9. 'distance' → logprob: -5.951022148132324
    10. 'next' → logprob: -6.076022148132324

Token 995: ' To' (ID: 2514)
  Prédit: 'run'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'run' → logprob: -0.8161720633506775
    2. '#' → logprob: -1.3161721229553223
    3. 'time' → logprob: -1.5661721229553223
    4. 'speed' → logprob: -3.6911721229553223
    5. '       ' → logprob: -3.9411721229553223
    6. 'travel' → logprob: -4.566172122955322
    7. 'dist' → logprob: -5.566172122955322
    8. 'next' → logprob: -5.941172122955322
    9. 'if' → logprob: -6.066172122955322
    10. 'eat' → logprob: -6.066172122955322

Token 996: ' compute' (ID: 23864)
  Prédit: 'eat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'eat' → logprob: -0.0407397635281086
    2. 'run' → logprob: -3.4157397747039795
    3. 'start' → logprob: -5.7907395362854
    4. 'reach' → logprob: -6.5407395362854
    5. 'e' → logprob: -7.5407395362854
    6. 'do' → logprob: -8.040740013122559
    7. ' eat' → logprob: -8.165740013122559
    8. 'go' → logprob: -8.665740013122559
    9. ' run' → logprob: -8.790740013122559
    10. '_run' → logprob: -9.040740013122559

Token 997: ' time' (ID: 1058)
  Prédit: 'run'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'run' → logprob: -0.4784567952156067
    2. 'time' → logprob: -1.478456735610962
    3. 'base' → logprob: -3.603456735610962
    4. 'running' → logprob: -3.603456735610962
    5. 'travel' → logprob: -3.853456735610962
    6. '#' → logprob: -3.853456735610962
    7. 'segment' → logprob: -4.228456974029541
    8. 'speed' → logprob: -4.228456974029541
    9. 'dist' → logprob: -4.978456974029541
    10. 'for' → logprob: -5.728456974029541

Token 998: ' to' (ID: 316)
  Prédit: '_to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.06615749001502991
    2. '_run' → logprob: -3.816157579421997
    3. '_for' → logprob: -4.316157341003418
    4. '_needed' → logprob: -4.316157341003418
    5. '_taken' → logprob: -5.316157341003418
    6. '_since' → logprob: -5.816157341003418
    7. '_elapsed' → logprob: -6.941157341003418
    8. ' =' → logprob: -7.066157341003418
    9. '_running' → logprob: -7.066157341003418
    10. '_sp' → logprob: -7.566157341003418

Token 999: ' run' (ID: 2461)
  Prédit: 'run'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'run' → logprob: -0.0030368936713784933
    2. 'complete' → logprob: -6.253036975860596
    3. ' run' → logprob: -7.878036975860596
    4. 'reach' → logprob: -8.378036499023438
    5. '_run' → logprob: -9.253036499023438
    6. 'cover' → logprob: -9.253036499023438
    7. 'go' → logprob: -9.253036499023438
    8. 'finish' → logprob: -10.003036499023438
    9. 'tr' → logprob: -10.253036499023438
    10. 'travel' → logprob: -10.503036499023438

Token 1000: ' this' (ID: 495)
  Prédit: 'this'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'this' → logprob: -0.0320446752011776
    2. ' this' → logprob: -4.032044887542725
    3. 'the' → logprob: -4.657044887542725
    4. 'segment' → logprob: -5.657044887542725
    5. '=' → logprob: -8.657044410705566
    6. ' the' → logprob: -8.657044410705566
    7. 'self' → logprob: -8.907044410705566
    8. 'through' → logprob: -9.782044410705566
    9. 'dist' → logprob: -9.782044410705566
    10. ' segment' → logprob: -10.282044410705566

Token 1001: ' segment' (ID: 14806)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.0004248355980962515
    2. ' segment' → logprob: -7.875424861907959
    3. 'dist' → logprob: -10.8754243850708
    4. 'idx' → logprob: -12.2504243850708
    5. '```' → logprob: -12.3754243850708
    6. 'seg' → logprob: -12.7504243850708
    7. 'distance' → logprob: -13.2504243850708
    8. '
' → logprob: -13.2504243850708
    9. '_segment' → logprob: -13.2504243850708
    10. '.segment' → logprob: -13.2504243850708

Token 1002: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.36619117856025696
    2. ':' → logprob: -1.7411911487579346
    3. '=' → logprob: -2.9911911487579346
    4. ' =' → logprob: -4.241191387176514
    5. '_since' → logprob: -4.241191387176514
    6. '_' → logprob: -5.241191387176514
    7. '_for' → logprob: -5.366191387176514
    8. '_with' → logprob: -5.366191387176514
    9. 'for' → logprob: -5.741191387176514
    10. 'from' → logprob: -5.741191387176514

Token 1003: ' the' (ID: 290)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.4787144064903259
    2. 'elapsed' → logprob: -1.7287144660949707
    3. 'speed' → logprob: -2.2287144660949707
    4. 'if' → logprob: -3.1037144660949707
    5. 'prev' → logprob: -4.353714466094971
    6. '       ' → logprob: -4.728714466094971
    7. 'start' → logprob: -5.228714466094971
    8. '#' → logprob: -5.478714466094971
    9. '   ' → logprob: -6.103714466094971
    10. 'for' → logprob: -6.103714466094971

Token 1004: ' speed' (ID: 7733)
  Prédit: 'speed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'speed' → logprob: -0.47097697854042053
    2. 'time' → logprob: -1.5959769487380981
    3. 'distance' → logprob: -2.4709770679473877
    4. '#' → logprob: -3.5959770679473877
    5. 'boost' → logprob: -4.470976829528809
    6. 'dist' → logprob: -4.720976829528809
    7. ' speed' → logprob: -4.970976829528809
    8. 'segment' → logprob: -5.095976829528809
    9. 'for' → logprob: -5.470976829528809
    10. 'current' → logprob: -5.595976829528809

Token 1005: ' changes' (ID: 6629)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25298312306404114
    2. '=' → logprob: -1.5029830932617188
    3. '_at' → logprob: -8.502983093261719
    4. '_' → logprob: -8.627983093261719
    5. '_model' → logprob: -9.252983093261719
    6. '_for' → logprob: -9.377983093261719
    7. 'model' → logprob: -9.502983093261719
    8. ')' → logprob: -9.752983093261719
    9. 's' → logprob: -10.002983093261719
    10. 'for' → logprob: -10.377983093261719

Token 1006: ' depend' (ID: 9630)
  Prédit: 'over'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'over' → logprob: -1.7114224433898926
    2. 'depending' → logprob: -1.8364224433898926
    3. 'during' → logprob: -2.3364224433898926
    4. 'based' → logprob: -2.5864224433898926
    5. 'after' → logprob: -2.9614224433898926
    6. ' =' → logprob: -2.9614224433898926
    7. ' depending' → logprob: -3.2114224433898926
    8. 'with' → logprob: -3.2114224433898926
    9. '=' → logprob: -3.2114224433898926
    10. 'at' → logprob: -3.5864224433898926

Token 1007: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.6342672109603882
    2. 'on' → logprob: -0.7592672109603882
    3. '_on' → logprob: -7.384267330169678
    4. '_' → logprob: -8.75926685333252
    5. '	on' → logprob: -8.88426685333252
    6. '=' → logprob: -9.50926685333252
    7. ' ' → logprob: -9.63426685333252
    8. 'import' → logprob: -9.63426685333252
    9. ' only' → logprob: -9.63426685333252
    10. ')' → logprob: -9.75926685333252

Token 1008: ' elapsed' (ID: 56505)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.0490611307322979
    2. 'the' → logprob: -3.2990610599517822
    3. ' time' → logprob: -5.299061298370361
    4. 'distance' → logprob: -6.174061298370361
    5. '0' → logprob: -6.424061298370361
    6. 'whether' → logprob: -7.674061298370361
    7. '(time' → logprob: -7.799061298370361
    8. ' the' → logprob: -8.299060821533203
    9. '1' → logprob: -8.299060821533203
    10. 'current' → logprob: -8.424060821533203

Token 1009: ' time' (ID: 1058)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.3932868242263794
    2. '_' → logprob: -1.2682868242263794
    3. '_since' → logprob: -3.14328670501709
    4. 'time' → logprob: -8.51828670501709
    5. '_distance' → logprob: -8.89328670501709
    6. ' _' → logprob: -9.14328670501709
    7. ' time' → logprob: -9.76828670501709
    8. '_for' → logprob: -10.14328670501709
    9. ')' → logprob: -10.76828670501709
    10. '_t' → logprob: -11.01828670501709

Token 1010: ' since' (ID: 3630)
  Prédit: '_since'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_since' → logprob: -0.049133192747831345
    2. 'since' → logprob: -3.79913330078125
    3. '_' → logprob: -5.17413330078125
    4. '+' → logprob: -5.29913330078125
    5. ')' → logprob: -5.67413330078125
    6. '=' → logprob: -6.04913330078125
    7. ',' → logprob: -6.17413330078125
    8. '_before' → logprob: -7.04913330078125
    9. '_after' → logprob: -7.42413330078125
    10. '_until' → logprob: -7.54913330078125

Token 1011: ' last' (ID: 2174)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.042009126394987106
    2. ' last' → logprob: -3.292009115219116
    3. '_last' → logprob: -5.667009353637695
    4. 'the' → logprob: -8.167009353637695
    5. 'e' → logprob: -9.417009353637695
    6. 'previous' → logprob: -10.417009353637695
    7. ' the' → logprob: -10.667009353637695
    8. '_' → logprob: -11.292009353637695
    9. 'start' → logprob: -11.667009353637695
    10. 'eat' → logprob: -11.667009353637695

Token 1012: ' carrot' (ID: 121234)
  Prédit: '_car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_car' → logprob: -0.2389945387840271
    2. '_e' → logprob: -1.6139945983886719
    3. 'car' → logprob: -4.988994598388672
    4. '_' → logprob: -5.988994598388672
    5. 'e' → logprob: -6.238994598388672
    6. '_c' → logprob: -6.613994598388672
    7. 'eat' → logprob: -7.363994598388672
    8. ' _' → logprob: -9.613994598388672
    9. ' carrot' → logprob: -9.613994598388672
    10. '```' → logprob: -10.363994598388672

Token 1013: ' eaten' (ID: 56450)
  Prédit: '_e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_e' → logprob: -0.2827739119529724
    2. 'e' → logprob: -1.5327739715576172
    3. ' eaten' → logprob: -4.907773971557617
    4. '_' → logprob: -5.532773971557617
    5. '   ' → logprob: -5.782773971557617
    6. '_since' → logprob: -6.032773971557617
    7. '=' → logprob: -6.282773971557617
    8. '_time' → logprob: -6.407773971557617
    9. '       ' → logprob: -6.407773971557617
    10. 'eat' → logprob: -6.532773971557617

Token 1014: '.
' (ID: 558)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.8594282269477844
    2. ',' → logprob: -1.7344281673431396
    3. ')' → logprob: -1.9844281673431396
    4. ':' → logprob: -2.6094281673431396
    5. '=' → logprob: -3.1094281673431396
    6. '       ' → logprob: -3.2344281673431396
    7. '...' → logprob: -4.109428405761719
    8. '#' → logprob: -4.359428405761719
    9. '_' → logprob: -5.234428405761719
    10. 'before' → logprob: -5.359428405761719

Token 1015: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11592850089073181
    2. 'prev' → logprob: -3.9909284114837646
    3. 'time' → logprob: -4.365928649902344
    4. 'if' → logprob: -4.615928649902344
    5. ' if' → logprob: -4.740928649902344
    6. 'start' → logprob: -4.740928649902344
    7. '#' → logprob: -4.740928649902344
    8. ',' → logprob: -5.115928649902344
    9. 'distance' → logprob: -5.365928649902344
    10. '        
' → logprob: -5.740928649902344

Token 1016: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4028504192829132
    2. '#' (adapté à ' #') → logprob: -2.027850389480591
    3. 'if' → logprob: -3.027850389480591
    4. 'prev' → logprob: -3.402850389480591
    5. 'time' → logprob: -3.777850389480591
    6. 'elapsed' → logprob: -3.777850389480591
    7. 'start' → logprob: -4.02785062789917
    8. 'distance' → logprob: -4.77785062789917
    9. '
' → logprob: -5.02785062789917
    10. 'run' → logprob: -5.15285062789917

Token 1017: ' But' (ID: 3072)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.3815710544586182
    2. 'time' → logprob: -2.006571054458618
    3. 'elapsed' → logprob: -2.006571054458618
    4. 'segment' → logprob: -2.256571054458618
    5. '       ' → logprob: -2.381571054458618
    6. 'start' → logprob: -2.881571054458618
    7. 'if' → logprob: -3.006571054458618
    8. 'run' → logprob: -3.131571054458618
    9. 'dist' → logprob: -3.631571054458618
    10. 'distance' → logprob: -3.756571054458618

Token 1018: ' eating' (ID: 15700)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9172154664993286
    2. 'if' → logprob: -0.9172154664993286
    3. '       ' → logprob: -3.167215347290039
    4. 'time' → logprob: -3.292215347290039
    5. 'elapsed' → logprob: -3.292215347290039
    6. 'for' → logprob: -3.417215347290039
    7. 'speed' → logprob: -3.917215347290039
    8. 'distance' → logprob: -4.542215347290039
    9. 'dist' → logprob: -5.542215347290039
    10. 'segment' → logprob: -5.542215347290039

Token 1019: ' happens' (ID: 13367)
  Prédit: ' at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -1.3342156410217285
    2. 'now' → logprob: -1.4592156410217285
    3. ' now' → logprob: -2.0842156410217285
    4. 'at' → logprob: -2.2092156410217285
    5. ' here' → logprob: -2.7092156410217285
    6. 'im' → logprob: -2.8342156410217285
    7. ' immediately' → logprob: -3.9592156410217285
    8. ' the' → logprob: -4.3342156410217285
    9. '_now' → logprob: -4.4592156410217285
    10. ' happens' → logprob: -4.4592156410217285

Token 1020: ' at' (ID: 540)
  Prédit: 'at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.779819667339325
    2. ' at' → logprob: -0.779819667339325
    3. ' exactly' → logprob: -3.2798197269439697
    4. ' immediately' → logprob: -4.654819488525391
    5. 'im' → logprob: -5.029819488525391
    6. 'exact' → logprob: -5.154819488525391
    7. ' during' → logprob: -5.404819488525391
    8. 'during' → logprob: -5.779819488525391
    9. ' right' → logprob: -6.154819488525391
    10. ' midway' → logprob: -6.279819488525391

Token 1021: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.5858061909675598
    2. '0' → logprob: -1.210806131362915
    3. 'segment' → logprob: -2.335806131362915
    4. 'self' → logprob: -3.960806131362915
    5. 'end' → logprob: -4.085806369781494
    6. 'idx' → logprob: -5.710806369781494
    7. ' the' → logprob: -6.085806369781494
    8. 'current' → logprob: -6.335806369781494
    9. 'start' → logprob: -6.460806369781494
    10. 'car' → logprob: -6.960806369781494

Token 1022: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.20341293513774872
    2. 'segment' → logprob: -2.4534130096435547
    3. ' end' → logprob: -2.8284130096435547
    4. 'idx' → logprob: -4.203413009643555
    5. 'car' → logprob: -4.953413009643555
    6. ''end' → logprob: -5.578413009643555
    7. '+' → logprob: -6.453413009643555
    8. 'last' → logprob: -6.578413009643555
    9. ')' → logprob: -6.578413009643555
    10. '0' → logprob: -6.828413009643555

Token 1023: ' of' (ID: 328)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7735998630523682
    2. ')' → logprob: -1.2735998630523682
    3. ' of' → logprob: -1.7735998630523682
    4. '_of' → logprob: -3.523599863052368
    5. 'of' → logprob: -4.148599624633789
    6. ':' → logprob: -4.273599624633789
    7. '):' → logprob: -4.648599624633789
    8. '       ' → logprob: -5.398599624633789
    9. '   ' → logprob: -5.773599624633789
    10. '.' → logprob: -5.898599624633789

Token 1024: ' segment' (ID: 14806)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.161350280046463
    2. 'the' → logprob: -2.1613502502441406
    3. 'this' → logprob: -3.4113502502441406
    4. ' segment' → logprob: -7.911350250244141
    5. ' this' → logprob: -8.91135025024414
    6. ' the' → logprob: -9.03635025024414
    7. '_segment' → logprob: -9.78635025024414
    8. 'self' → logprob: -10.16135025024414
    9. '```' → logprob: -10.66135025024414
    10. '(segment' → logprob: -11.16135025024414

Token 1025: ' =>' (ID: 871)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6089640259742737
    2. '       ' → logprob: -0.9839640259742737
    3. ':' → logprob: -3.483963966369629
    4. '.' → logprob: -3.733963966369629
    5. '
' → logprob: -5.233963966369629
    6. ',
' → logprob: -5.358963966369629
    7. ')' → logprob: -5.483963966369629
    8. ':
' → logprob: -5.733963966369629
    9. '.
' → logprob: -5.983963966369629
    10. '=' → logprob: -6.233963966369629

Token 1026: ' speed' (ID: 7733)
  Prédit: 'elapsed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elapsed' → logprob: -1.0632272958755493
    2. 'time' → logprob: -1.4382272958755493
    3. 'start' → logprob: -2.5632271766662598
    4. '#' → logprob: -2.5632271766662598
    5. 'segment' → logprob: -2.5632271766662598
    6. 'if' → logprob: -3.0632271766662598
    7. 'run' → logprob: -3.1882271766662598
    8. 'speed' → logprob: -3.4382271766662598
    9. 'distance' → logprob: -4.06322717666626
    10. 'dist' → logprob: -4.56322717666626

Token 1027: ' applied' (ID: 13335)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.35765540599823
    2. '=' → logprob: -1.23265540599823
    3. '_before' → logprob: -5.9826555252075195
    4. '_change' → logprob: -7.2326555252075195
    5. '_' → logprob: -7.3576555252075195
    6. 'changes' → logprob: -7.7326555252075195
    7. 'de' → logprob: -7.8576555252075195
    8. 's' → logprob: -7.8576555252075195
    9. ')' → logprob: -7.9826555252075195
    10. '_model' → logprob: -8.23265552520752

Token 1028: ' during' (ID: 3354)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04133370518684387
    2. ' =' → logprob: -3.6663336753845215
    3. '```' → logprob: -5.7913336753845215
    4. 'for' → logprob: -6.0413336753845215
    5. '       ' → logprob: -6.6663336753845215
    6. ',' → logprob: -6.9163336753845215
    7. ' for' → logprob: -7.0413336753845215
    8. ' at' → logprob: -7.1663336753845215
    9. 'during' → logprob: -7.1663336753845215
    10. '*' → logprob: -7.4163336753845215

Token 1029: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.17047828435897827
    2. 'this' → logprob: -3.045478343963623
    3. 'segment' → logprob: -3.170478343963623
    4. ' the' → logprob: -3.295478343963623
    5. 'dist' → logprob: -3.920478343963623
    6. ' this' → logprob: -5.420478343963623
    7. 'running' → logprob: -6.170478343963623
    8. 'run' → logprob: -6.420478343963623
    9. ' segment' → logprob: -7.795478343963623
    10. '_this' → logprob: -8.545477867126465

Token 1030: ' segment' (ID: 14806)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.0713064968585968
    2. ' segment' → logprob: -2.8213064670562744
    3. 'dist' → logprob: -5.1963067054748535
    4. '_' → logprob: -6.3213067054748535
    5. '_segment' → logprob: -7.9463067054748535
    6. 'current' → logprob: -8.571306228637695
    7. ' run' → logprob: -8.696306228637695
    8. ' ' → logprob: -8.696306228637695
    9. 'run' → logprob: -8.821306228637695
    10. ' current' → logprob: -8.946306228637695

Token 1031: ' is' (ID: 382)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8456922173500061
    2. '=' → logprob: -1.3456921577453613
    3. ' =' → logprob: -1.9706921577453613
    4. ',' → logprob: -3.3456921577453613
    5. ':' → logprob: -3.3456921577453613
    6. ')' → logprob: -3.5956921577453613
    7. '.' → logprob: -3.8456921577453613
    8. '```' → logprob: -4.720692157745361
    9. ' is' → logprob: -4.970692157745361
    10. '_' → logprob: -5.220692157745361

Token 1032: ' based' (ID: 4122)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.011246586218476295
    2. ' self' → logprob: -5.011246681213379
    3. 'based' → logprob: -6.011246681213379
    4. 'the' → logprob: -6.636246681213379
    5. '```' → logprob: -9.136246681213379
    6. 'determ' → logprob: -9.761246681213379
    7. 'lambda' → logprob: -10.011246681213379
    8. '   ' → logprob: -10.011246681213379
    9. 'dependent' → logprob: -10.136246681213379
    10. 'time' → logprob: -10.261246681213379

Token 1033: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.3877008259296417
    2. 'on' → logprob: -1.1377007961273193
    3. '_' → logprob: -7.887701034545898
    4. '_on' → logprob: -9.012701034545898
    5. ' ' → logprob: -9.637701034545898
    6. '=' → logprob: -9.762701034545898
    7. '.' → logprob: -10.137701034545898
    8. '   ' → logprob: -10.637701034545898
    9. '```' → logprob: -10.637701034545898
    10. ')' → logprob: -11.137701034545898

Token 1034: ' last' (ID: 2174)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.014828738756477833
    2. ' time' → logprob: -5.139828681945801
    3. 'the' → logprob: -5.264828681945801
    4. 'elapsed' → logprob: -5.889828681945801
    5. '(time' → logprob: -7.764828681945801
    6. 'current' → logprob: -9.1398286819458
    7. 'max' → logprob: -9.2648286819458
    8. ' elapsed' → logprob: -9.3898286819458
    9. ' the' → logprob: -10.1398286819458
    10. 'previous' → logprob: -10.2648286819458

Token 1035: ' carrot' (ID: 121234)
  Prédit: '_car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_car' → logprob: -0.4319380521774292
    2. '_' → logprob: -1.0569380521774292
    3. 'car' → logprob: -6.806938171386719
    4. '_time' → logprob: -7.181938171386719
    5. '_c' → logprob: -7.806938171386719
    6. '`' → logprob: -8.681938171386719
    7. '```' → logprob: -9.056938171386719
    8. ' _' → logprob: -9.556938171386719
    9. ''_' → logprob: -9.681938171386719
    10. 'time' → logprob: -9.806938171386719

Token 1036: ' eaten' (ID: 56450)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.5731139779090881
    2. '_e' → logprob: -0.9481139779090881
    3. 'e' → logprob: -3.4481139183044434
    4. '_' → logprob: -5.448113918304443
    5. ' eaten' → logprob: -5.573113918304443
    6. 'time' → logprob: -6.073113918304443
    7. '<|end|>' → logprob: -6.573113918304443
    8. '<|end|>' → logprob: -7.323113918304443
    9. ' time' → logprob: -7.823113918304443
    10. '_last' → logprob: -8.073114395141602

Token 1037: '.

' (ID: 364)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.3189906179904938
    2. 'time' → logprob: -2.318990707397461
    3. ')' → logprob: -2.568990707397461
    4. '+' → logprob: -3.568990707397461
    5. '_since' → logprob: -3.943990707397461
    6. '_' → logprob: -4.568990707397461
    7. ',' → logprob: -4.693990707397461
    8. '),' → logprob: -5.068990707397461
    9. ' time' → logprob: -5.318990707397461
    10. ' +' → logprob: -5.443990707397461

Token 1038: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.024312498047947884
    2. ',' → logprob: -5.149312496185303
    3. '        
' → logprob: -5.274312496185303
    4. ')' → logprob: -6.399312496185303
    5. ' if' → logprob: -6.524312496185303
    6. '_' → logprob: -6.524312496185303
    7. 'time' → logprob: -7.149312496185303
    8. '#' → logprob: -7.399312496185303
    9. '
' → logprob: -7.524312496185303
    10. 'prev' → logprob: -7.524312496185303

Token 1039: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.490643173456192
    2. 'time' → logprob: -2.240643262863159
    3. 'elapsed' → logprob: -2.865643262863159
    4. 'prev' → logprob: -2.990643262863159
    5. 'segment' → logprob: -3.615643262863159
    6. '#' (adapté à ' #') → logprob: -3.740643262863159
    7. 'distance' → logprob: -3.865643262863159
    8. 'speed' → logprob: -3.865643262863159
    9. ' time' → logprob: -4.24064302444458
    10. ' elapsed' → logprob: -4.49064302444458

Token 1040: ' We' (ID: 1416)
  Prédit: 'elapsed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elapsed' → logprob: -0.8208329677581787
    2. 'time' → logprob: -1.4458329677581787
    3. '#' → logprob: -2.3208329677581787
    4. 'speed' → logprob: -2.4458329677581787
    5. 'prev' → logprob: -3.1958329677581787
    6. 'segment' → logprob: -3.5708329677581787
    7. '       ' → logprob: -3.5708329677581787
    8. 'if' → logprob: -4.820833206176758
    9. 'run' → logprob: -4.945833206176758
    10. 'start' → logprob: -4.945833206176758

Token 1041: ' have' (ID: 679)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.5406728982925415
    2. '.' → logprob: -1.7906728982925415
    3. 'continue' → logprob: -2.165672779083252
    4. ')' → logprob: -2.165672779083252
    5. '_' → logprob: -2.290672779083252
    6. '#' → logprob: -3.165672779083252
    7. 'need' → logprob: -3.540672779083252
    8. '_speed' → logprob: -3.790672779083252
    9. '_time' → logprob: -3.915672779083252
    10. ']' → logprob: -4.165672779083252

Token 1042: ' to' (ID: 316)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'time' → logprob: -1.18940007686615
    2. '       ' → logprob: -1.43940007686615
    3. 'speed' → logprob: -2.0644001960754395
    4. 'elapsed' → logprob: -2.0644001960754395
    5. 'two' → logprob: -2.6894001960754395
    6. '#' → logprob: -2.9394001960754395
    7. 'prev' → logprob: -3.1894001960754395
    8. 'old' → logprob: -4.5644001960754395
    9. '
' → logprob: -4.9394001960754395
    10. '   ' → logprob: -4.9394001960754395

Token 1043: ' carefully' (ID: 18455)
  Prédit: 'consider'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'consider' → logprob: -0.3622644543647766
    2. 'simulate' → logprob: -1.8622643947601318
    3. 'compute' → logprob: -3.112264394760132
    4. 'calculate' → logprob: -3.112264394760132
    5. 'run' → logprob: -4.112264633178711
    6. '#' → logprob: -4.237264633178711
    7. 'estimate' → logprob: -5.237264633178711
    8. 'acc' → logprob: -5.487264633178711
    9. 'continue' → logprob: -5.987264633178711
    10. 'wait' → logprob: -6.237264633178711

Token 1044: ' compute' (ID: 23864)
  Prédit: 'consider'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'consider' → logprob: -0.1421608030796051
    2. 'calculate' → logprob: -2.8921608924865723
    3. 'compute' → logprob: -2.8921608924865723
    4. 'simulate' → logprob: -4.767160892486572
    5. 'model' → logprob: -5.517160892486572
    6. 'account' → logprob: -5.767160892486572
    7. 'continue' → logprob: -6.392160892486572
    8. 'handle' → logprob: -6.517160892486572
    9. 'run' → logprob: -7.267160892486572
    10. 'acc' → logprob: -7.517160892486572

Token 1045: ' travel' (ID: 6410)
  Prédit: 'elapsed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elapsed' → logprob: -1.0424280166625977
    2. 'time' → logprob: -1.6674280166625977
    3. 'speed' → logprob: -2.1674280166625977
    4. '#' → logprob: -2.5424280166625977
    5. 'segment' → logprob: -2.5424280166625977
    6. '       ' → logprob: -3.5424280166625977
    7. 'for' → logprob: -3.5424280166625977
    8. 'if' → logprob: -4.042428016662598
    9. 'current' → logprob: -4.167428016662598
    10. 'start' → logprob: -4.167428016662598

Token 1046: ' time' (ID: 1058)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3584878146648407
    2. '_time' → logprob: -1.233487844467163
    3. ' _' → logprob: -5.108487606048584
    4. ' time' → logprob: -6.483487606048584
    5. 'ing' → logprob: -7.483487606048584
    6. ' ' → logprob: -7.483487606048584
    7. 'time' → logprob: -7.858487606048584
    8. '_distance' → logprob: -8.733488082885742
    9. '_t' → logprob: -8.983488082885742
    10. '       ' → logprob: -9.108488082885742

Token 1047: ' if' (ID: 538)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4857732057571411
    2. ' =' → logprob: -1.4857732057571411
    3. 'for' → logprob: -3.3607730865478516
    4. ' for' → logprob: -3.4857730865478516
    5. '_' → logprob: -4.235773086547852
    6. ',' → logprob: -4.235773086547852
    7. 'import' → logprob: -4.735773086547852
    8. '       ' → logprob: -4.735773086547852
    9. ':' → logprob: -4.985773086547852
    10. ')' → logprob: -5.235773086547852

Token 1048: ' speed' (ID: 7733)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.06803739070892334
    2. 'self' → logprob: -3.568037509918213
    3. 'dist' → logprob: -3.943037509918213
    4. 'the' → logprob: -5.318037509918213
    5. ' time' → logprob: -5.443037509918213
    6. 'speed' → logprob: -5.568037509918213
    7. 'distance' → logprob: -7.443037509918213
    8. 'last' → logprob: -7.443037509918213
    9. 'elapsed' → logprob: -7.443037509918213
    10. 'abs' → logprob: -7.568037509918213

Token 1049: ' changes' (ID: 6629)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3657427430152893
    2. '_' → logprob: -1.8657426834106445
    3. ' =' → logprob: -2.1157426834106445
    4. ' changes' → logprob: -4.7407426834106445
    5. 'changes' → logprob: -5.2407426834106445
    6. '_changes' → logprob: -5.6157426834106445
    7. ')' → logprob: -5.9907426834106445
    8. ' is' → logprob: -6.4907426834106445
    9. '_change' → logprob: -7.1157426834106445
    10. 's' → logprob: -7.4907426834106445

Token 1050: ' during' (ID: 3354)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.972615659236908
    2. ' =' → logprob: -0.972615659236908
    3. '=' → logprob: -2.0976157188415527
    4. ')' → logprob: -3.7226157188415527
    5. 's' → logprob: -4.097615718841553
    6. ',' → logprob: -4.347615718841553
    7. 'import' → logprob: -4.972615718841553
    8. '
' → logprob: -5.097615718841553
    9. '<|end|>' → logprob: -5.097615718841553
    10. '<|end|>' → logprob: -5.222615718841553

Token 1051: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.06633958220481873
    2. 'segment' → logprob: -3.8163394927978516
    3. 'dist' → logprob: -3.8163394927978516
    4. ' the' → logprob: -4.316339492797852
    5. '<|end|>' → logprob: -5.566339492797852
    6. 'this' → logprob: -6.691339492797852
    7. '<|end|>' → logprob: -7.316339492797852
    8. '1' → logprob: -8.691339492797852
    9. '...' → logprob: -8.816339492797852
    10. 'distance' → logprob: -8.941339492797852

Token 1052: ' segment' (ID: 14806)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.0294156763702631
    2. ' segment' → logprob: -3.6544156074523926
    3. '_' → logprob: -6.404415607452393
    4. '_segment' → logprob: -7.029415607452393
    5. ''' → logprob: -8.77941608428955
    6. '`' → logprob: -9.52941608428955
    7. '(segment' → logprob: -9.65441608428955
    8. 'space' → logprob: -9.90441608428955
    9. ')' → logprob: -10.27941608428955
    10. 'course' → logprob: -10.65441608428955

Token 1053: ' when' (ID: 1261)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.971417248249054
    2. '.' → logprob: -1.3464171886444092
    3. ',' → logprob: -1.9714171886444092
    4. '       ' → logprob: -2.221417188644409
    5. '
' → logprob: -3.971417188644409
    6. ')' → logprob: -3.971417188644409
    7. '#' → logprob: -4.221417427062988
    8. '=' → logprob: -4.346417427062988
    9. '_' → logprob: -4.846417427062988
    10. 'import' → logprob: -5.096417427062988

Token 1054: ' boost' (ID: 12110)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.3997127115726471
    2. 'travel' → logprob: -2.3997128009796143
    3. 'the' → logprob: -3.1497128009796143
    4. 'running' → logprob: -3.2747128009796143
    5. 'moving' → logprob: -3.6497128009796143
    6. 'elapsed' → logprob: -3.7747128009796143
    7. 'e' → logprob: -3.7747128009796143
    8. 'boost' → logprob: -3.8997128009796143
    9. 'distance' → logprob: -4.274712562561035
    10. 'we' → logprob: -5.024712562561035

Token 1055: ' expires' (ID: 51445)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.10460928082466125
    2. '_time' → logprob: -3.479609251022339
    3. ')' → logprob: -4.229609489440918
    4. '_period' → logprob: -5.604609489440918
    5. '_start' → logprob: -5.604609489440918
    6. 'time' → logprob: -5.854609489440918
    7. '_decay' → logprob: -5.854609489440918
    8. '.' → logprob: -5.979609489440918
    9. '_changes' → logprob: -5.979609489440918
    10. ' )' → logprob: -6.229609489440918

Token 1056: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5464540719985962
    2. ',' → logprob: -2.0464539527893066
    3. '.' → logprob: -2.4214539527893066
    4. ')' → logprob: -2.5464539527893066
    5. ':' → logprob: -2.5464539527893066
    6. '=' → logprob: -4.296453952789307
    7. '#' → logprob: -4.421453952789307
    8. '...' → logprob: -5.421453952789307
    9. 'import' → logprob: -6.171453952789307
    10. ',
' → logprob: -6.546453952789307

Token 1057: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5038047432899475
    2. 'if' → logprob: -1.2538046836853027
    3. 'remaining' → logprob: -3.1288046836853027
    4. 't' → logprob: -4.128804683685303
    5. 'time' → logprob: -4.253804683685303
    6. '#' → logprob: -4.878804683685303
    7. 'distance' → logprob: -5.253804683685303
    8. 'segment' → logprob: -5.503804683685303
    9. 'elapsed' → logprob: -5.628804683685303
    10. 'current' → logprob: -6.628804683685303

Token 1058: ' def' (ID: 1056)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3015228509902954
    2. 'remaining' → logprob: -2.801522731781006
    3. 'def' (adapté à ' def') → logprob: -3.426522731781006
    4. 'if' → logprob: -3.426522731781006
    5. '#' → logprob: -3.801522731781006
    6. '
' → logprob: -4.176522731781006
    7. 'distance' → logprob: -4.426522731781006
    8. 't' → logprob: -4.926522731781006
    9. 'prev' → logprob: -5.051522731781006
    10. ' remaining' → logprob: -5.051522731781006

Token 1059: ' compute' (ID: 23864)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.28330114483833313
    2. 'calculate' → logprob: -2.4083011150360107
    3. '_time' → logprob: -3.1583011150360107
    4. '_compute' → logprob: -3.1583011150360107
    5. 'get' → logprob: -4.03330135345459
    6. 'time' → logprob: -4.15830135345459
    7. 'travel' → logprob: -4.78330135345459
    8. 'calc' → logprob: -4.90830135345459
    9. '_segment' → logprob: -5.65830135345459
    10. '_get' → logprob: -6.15830135345459

Token 1060: '_segment' (ID: 71041)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.6271371245384216
    2. '_tr' → logprob: -1.1271371841430664
    3. '_segment' → logprob: -2.2521371841430664
    4. 'travel' → logprob: -4.002137184143066
    5. 'segment' → logprob: -5.127137184143066
    6. 'time' → logprob: -5.127137184143066
    7. '_run' → logprob: -6.002137184143066
    8. '_trip' → logprob: -7.002137184143066
    9. '_distance' → logprob: -7.252137184143066
    10. '(segment' → logprob: -7.252137184143066

Token 1061: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.02086755819618702
    2. '_' → logprob: -3.8958675861358643
    3. '_tr' → logprob: -9.145867347717285
    4. '_distance' → logprob: -9.395867347717285
    5. '_length' → logprob: -10.395867347717285
    6. '_start' → logprob: -11.020867347717285
    7. 'Time' → logprob: -11.145867347717285
    8. '_duration' → logprob: -12.145867347717285
    9. '_times' → logprob: -12.270867347717285
    10. '\' → logprob: -12.270867347717285

Token 1062: '(distance' (ID: 105203)
  Prédit: '(distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(distance' → logprob: -0.2566356658935547
    2. '(dist' → logprob: -1.5066356658935547
    3. '(start' → logprob: -6.631635665893555
    4. '(' → logprob: -7.006635665893555
    5. '(time' → logprob: -7.256635665893555
    6. '(length' → logprob: -7.506635665893555
    7. '(segment' → logprob: -8.381635665893555
    8. '(pos' → logprob: -8.381635665893555
    9. '(self' → logprob: -8.506635665893555
    10. '(prev' → logprob: -8.881635665893555

Token 1063: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01897175796329975
    2. ':' → logprob: -4.018971920013428
    3. '):' → logprob: -7.518971920013428
    4. ',
' → logprob: -9.26897144317627
    5. ' ,' → logprob: -9.89397144317627
    6. '_,' → logprob: -10.51897144317627
    7. 'distance' → logprob: -11.01897144317627
    8. '):
' → logprob: -11.01897144317627
    9. ')' → logprob: -11.39397144317627
    10. '_distance' → logprob: -11.76897144317627

Token 1064: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.005924650933593512
    2. ')' → logprob: -5.255924701690674
    3. ' float' → logprob: -8.005924224853516
    4. '=float' → logprob: -9.255924224853516
    5. 'int' → logprob: -9.505924224853516
    6. ',float' → logprob: -9.755924224853516
    7. '(float' → logprob: -9.880924224853516
    8. '_float' → logprob: -11.130924224853516
    9. ')>' → logprob: -11.380924224853516
    10. '):
' → logprob: -11.505924224853516

Token 1065: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.7994282795116305e-05
    2. '):' → logprob: -10.87504768371582
    3. ':' → logprob: -11.50004768371582
    4. ' ,' → logprob: -11.62504768371582
    5. ',
' → logprob: -12.75004768371582
    6. '):
' → logprob: -13.37504768371582
    7. ')' → logprob: -13.75004768371582
    8. '   ' → logprob: -13.75004768371582
    9. ',start' → logprob: -14.25004768371582
    10. ',time' → logprob: -14.25004768371582

Token 1066: ' time' (ID: 1058)
  Prédit: 'elapsed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elapsed' → logprob: -0.41734838485717773
    2. 'time' → logprob: -1.1673483848571777
    3. 'start' → logprob: -3.9173483848571777
    4. 'initial' → logprob: -6.042348384857178
    5. 'last' → logprob: -6.167348384857178
    6. 'boost' → logprob: -6.167348384857178
    7. ' elapsed' → logprob: -6.417348384857178
    8. 'speed' → logprob: -7.042348384857178
    9. 't' → logprob: -8.042348861694336
    10. ' time' → logprob: -8.042348861694336

Token 1067: '_since' (ID: 133288)
  Prédit: '_since'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_since' → logprob: -0.0159685630351305
    2. '_elapsed' → logprob: -5.2659687995910645
    3. '_' → logprob: -6.1409687995910645
    4. ')' → logprob: -6.2659687995910645
    5. 'since' → logprob: -6.6409687995910645
    6. '_until' → logprob: -7.0159687995910645
    7. '_remaining' → logprob: -7.1409687995910645
    8. '_to' → logprob: -7.2659687995910645
    9. '=' → logprob: -7.6409687995910645
    10. 'def' → logprob: -8.515968322753906

Token 1068: '_last' (ID: 26359)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.22577136754989624
    2. '_last' → logprob: -1.600771427154541
    3. ' last' → logprob: -8.475770950317383
    4. 'def' → logprob: -9.975770950317383
    5. '_' → logprob: -11.225770950317383
    6. '	last' → logprob: -11.475770950317383
    7. '_LAST' → logprob: -11.600770950317383
    8. '
' → logprob: -12.350770950317383
    9. 'car' → logprob: -12.350770950317383
    10. '_car' → logprob: -12.475770950317383

Token 1069: '_e' (ID: 4618)
  Prédit: '_e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_e' → logprob: -0.03954991325736046
    2. 'eat' → logprob: -4.289549827575684
    3. '_car' → logprob: -4.414549827575684
    4. 'e' → logprob: -4.664549827575684
    5. 'car' → logprob: -6.539549827575684
    6. '_' → logprob: -6.789549827575684
    7. ')' → logprob: -8.664549827575684
    8. 'def' → logprob: -8.664549827575684
    9. '_c' → logprob: -9.039549827575684
    10. ' _' → logprob: -9.664549827575684

Token 1070: 'at' (ID: 266)
  Prédit: 'at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.0020341570489108562
    2. 'eat' → logprob: -7.2520341873168945
    3. '_at' → logprob: -7.5020341873168945
    4. ' at' → logprob: -9.439534187316895
    5. '_' → logprob: -9.439534187316895
    6. 'ат' → logprob: -9.627034187316895
    7. '_e' → logprob: -9.877034187316895
    8. 'a' → logprob: -10.314534187316895
    9. '```' → logprob: -10.689534187316895
    10. 'aten' → logprob: -10.689534187316895

Token 1071: '_start' (ID: 10949)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2972323000431061
    2. ':' → logprob: -2.1722323894500732
    3. '):
' → logprob: -2.6722323894500732
    4. ',' → logprob: -3.1722323894500732
    5. ')' → logprob: -4.047232151031494
    6. ' ):' → logprob: -5.422232151031494
    7. '=' → logprob: -6.172232151031494
    8. '   ' → logprob: -6.297232151031494
    9. ' :' → logprob: -6.672232151031494
    10. '_:' → logprob: -6.922232151031494

Token 1072: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.48282891511917114
    2. ',' → logprob: -1.4828288555145264
    3. '):
' → logprob: -2.7328288555145264
    4. ':' → logprob: -3.1078288555145264
    5. ')' → logprob: -3.6078288555145264
    6. '=' → logprob: -4.7328290939331055
    7. '   ' → logprob: -6.1078290939331055
    8. ' ):' → logprob: -6.3578290939331055
    9. ')=' → logprob: -6.7328290939331055
    10. ' =' → logprob: -6.8578290939331055

Token 1073: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.004949104506522417
    2. ')' → logprob: -6.25494909286499
    3. ' float' → logprob: -6.25494909286499
    4. ':' → logprob: -7.25494909286499
    5. '):' → logprob: -8.629949569702148
    6. '(float' → logprob: -9.879949569702148
    7. '):
' → logprob: -10.129949569702148
    8. ',float' → logprob: -10.379949569702148
    9. '=float' → logprob: -10.379949569702148
    10. ',' → logprob: -11.254949569702148

Token 1074: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1930065155029297
    2. '):' → logprob: -1.8180065155029297
    3. '):
' → logprob: -4.44300651550293
    4. ')' → logprob: -6.69300651550293
    5. ' ,' → logprob: -9.81800651550293
    6. '   ' → logprob: -10.31800651550293
    7. ' ):' → logprob: -10.44300651550293
    8. ',
' → logprob: -11.06800651550293
    9. '):

' → logprob: -11.31800651550293
    10. ':' → logprob: -11.56800651550293

Token 1075: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.015493998304009438
    2. '):' → logprob: -4.515493869781494
    3. ',' → logprob: -6.015493869781494
    4. ':
' → logprob: -7.140493869781494
    5. '):
' → logprob: -7.140493869781494
    6. '       ' → logprob: -8.640494346618652
    7. '   ' → logprob: -9.390494346618652
    8. '():' → logprob: -9.765494346618652
    9. ' :' → logprob: -10.015494346618652
    10. ')' → logprob: -10.890494346618652

Token 1076: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -2.236549335066229e-05
    2. 'List' → logprob: -11.500021934509277
    3. ' float' → logprob: -12.125021934509277
    4. '(float' → logprob: -12.750021934509277
    5. '```' → logprob: -14.125021934509277
    6. '	float' → logprob: -14.625021934509277
    7. 'Tuple' → logprob: -14.625021934509277
    8. '[' → logprob: -14.750021934509277
    9. '1' → logprob: -15.625021934509277
    10. 'flo' → logprob: -15.625021934509277

Token 1077: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0515565425157547
    2. ':
' → logprob: -3.1765565872192383
    3. '       ' → logprob: -5.551556587219238
    4. '):' → logprob: -5.926556587219238
    5. '):
' → logprob: -6.801556587219238
    6. ',' → logprob: -8.426556587219238
    7. '   ' → logprob: -8.676556587219238
    8. '():' → logprob: -8.676556587219238
    9. '():
' → logprob: -9.426556587219238
    10. ')' → logprob: -9.426556587219238

Token 1078: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020917171612381935
    2. '   ' → logprob: -4.145916938781738
    3. '
' → logprob: -6.270916938781738
    4. '\n' → logprob: -7.520916938781738
    5. ' 
' → logprob: -8.020916938781738
    6. '    ' → logprob: -8.270916938781738
    7. '\' → logprob: -8.395916938781738
    8. ':' → logprob: -8.395916938781738
    9. '        
' → logprob: -8.520916938781738
    10. '    
' → logprob: -8.520916938781738

Token 1079: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.13742142915725708
    2. '       ' → logprob: -2.8874213695526123
    3. 'time' → logprob: -3.3874213695526123
    4. '           ' → logprob: -4.762421607971191
    5. ' if' → logprob: -5.137421607971191
    6. 'step' → logprob: -5.512421607971191
    7. '   ' → logprob: -5.637421607971191
    8. 't' → logprob: -5.887421607971191
    9. 'dt' → logprob: -6.137421607971191
    10. 'res' → logprob: -6.512421607971191

Token 1080: ' speed' (ID: 7733)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.16312351822853088
    2. 'time' → logprob: -2.538123607635498
    3. 'res' → logprob: -4.038123607635498
    4. 'remaining' → logprob: -4.038123607635498
    5. 'speed' → logprob: -4.663123607635498
    6. 'result' → logprob: -4.788123607635498
    7. 't' → logprob: -5.163123607635498
    8. '       ' → logprob: -5.788123607635498
    9. '#' → logprob: -6.288123607635498
    10. '           ' → logprob: -6.413123607635498

Token 1081: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3975006341934204
    2. ' =' → logprob: -1.1475006341934204
    3. '_start' → logprob: -6.647500514984131
    4. '_changes' → logprob: -6.647500514984131
    5. '_model' → logprob: -6.772500514984131
    6. 's' → logprob: -6.772500514984131
    7. '_remaining' → logprob: -7.147500514984131
    8. 'model' → logprob: -7.397500514984131
    9. '_tokens' → logprob: -7.897500514984131
    10. 'def' → logprob: -8.147500991821289

Token 1082: ' V' (ID: 631)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.007714636158198118
    2. '0' → logprob: -5.632714748382568
    3. 'lambda' → logprob: -5.882714748382568
    4. 'None' → logprob: -7.507714748382568
    5. '(
' → logprob: -7.757714748382568
    6. '(self' → logprob: -8.88271427154541
    7. ' self' → logprob: -9.75771427154541
    8. '           ' → logprob: -10.25771427154541
    9. '(lambda' → logprob: -10.50771427154541
    10. '
' → logprob: -10.63271427154541

Token 1083: ' while' (ID: 2049)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2757064700126648
    2. 'if' → logprob: -1.5257065296173096
    3. ',' → logprob: -4.7757062911987305
    4. '           ' → logprob: -5.1507062911987305
    5. 'def' → logprob: -6.5257062911987305
    6. '=' → logprob: -6.7757062911987305
    7. ')' → logprob: -6.9007062911987305
    8. ' *' → logprob: -7.2757062911987305
    9. '       ' → logprob: -7.4007062911987305
    10. '_' → logprob: -8.02570629119873

Token 1084: ' (' (ID: 350)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.00029685118352063
    2. ' time' → logprob: -8.250296592712402
    3. 'self' → logprob: -10.500296592712402
    4. '           ' → logprob: -12.625296592712402
    5. '(time' → logprob: -12.625296592712402
    6. '0' → logprob: -14.625296592712402
    7. 'distance' → logprob: -14.750296592712402
    8. '   ' → logprob: -16.12529754638672
    9. '
' → logprob: -16.25029754638672
    10. '"time' → logprob: -16.25029754638672

Token 1085: 'time' (ID: 4580)
  Prédit: 'time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.0006298751104623079
    2. 'self' → logprob: -7.625629901885986
    3. ' time' → logprob: -9.250629425048828
    4. 'distance' → logprob: -10.500629425048828
    5. '0' → logprob: -12.250629425048828
    6. ')' → logprob: -12.500629425048828
    7. '           ' → logprob: -12.625629425048828
    8. '   ' → logprob: -13.000629425048828
    9. '(time' → logprob: -14.125629425048828
    10. '
' → logprob: -14.125629425048828

Token 1086: '_since' (ID: 133288)
  Prédit: '_since'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_since' → logprob: -0.00019817621796391904
    2. '_' → logprob: -9.000198364257812
    3. '<' → logprob: -10.000198364257812
    4. '_until' → logprob: -11.125198364257812
    5. 'since' → logprob: -12.625198364257812
    6. '<=' → logprob: -13.000198364257812
    7. '_<' → logprob: -13.375198364257812
    8. '_to' → logprob: -13.625198364257812
    9. 'Since' → logprob: -14.000198364257812
    10. ' since' → logprob: -14.375198364257812

Token 1087: '_last' (ID: 26359)
  Prédit: '_last'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_last' → logprob: -0.0076499260030686855
    2. 'last' → logprob: -4.882649898529053
    3. '_' → logprob: -10.507650375366211
    4. '_start' → logprob: -11.507650375366211
    5. '_since' → logprob: -13.382650375366211
    6. ' _' → logprob: -14.257650375366211
    7. ' last' → logprob: -14.382650375366211
    8. '_first' → logprob: -14.507650375366211
    9. '_LAST' → logprob: -14.757650375366211
    10. '_next' → logprob: -14.757650375366211

Token 1088: '_e' (ID: 4618)
  Prédit: '_e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_e' → logprob: -0.015845369547605515
    2. '_' → logprob: -4.76584529876709
    3. 'eat' → logprob: -5.14084529876709
    4. 'e' → logprob: -7.39084529876709
    5. '_start' → logprob: -8.89084529876709
    6. ' _' → logprob: -9.14084529876709
    7. ')' → logprob: -9.39084529876709
    8. '_last' → logprob: -9.51584529876709
    9. '_le' → logprob: -10.14084529876709
    10. '_s' → logprob: -10.14084529876709

Token 1089: 'at' (ID: 266)
  Prédit: 'at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.006029046140611172
    2. 'eat' → logprob: -6.50602912902832
    3. '_at' → logprob: -7.25602912902832
    4. '>' → logprob: -7.88102912902832
    5. '<=' → logprob: -8.06852912902832
    6. ')' → logprob: -8.19352912902832
    7. '<' → logprob: -8.38102912902832
    8. '
' → logprob: -8.56852912902832
    9. '_' → logprob: -8.69352912902832
    10. 't' → logprob: -9.06852912902832

Token 1090: ' <=' (ID: 5017)
  Prédit: '_start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -0.6671449542045593
    2. '<=' → logprob: -1.292145013809204
    3. ' <=' → logprob: -1.792145013809204
    4. ')' → logprob: -3.542145013809204
    5. '<' → logprob: -4.917144775390625
    6. ' <' → logprob: -5.167144775390625
    7. ')<=' → logprob: -6.917144775390625
    8. '_' → logprob: -7.792144775390625
    9. '```' → logprob: -7.917144775390625
    10. '
' → logprob: -8.292144775390625

Token 1091: ' T' (ID: 353)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0025417746510356665
    2. '0' → logprob: -6.752541542053223
    3. 'T' → logprob: -7.377541542053223
    4. ' self' → logprob: -7.627541542053223
    5. 'Rabbit' → logprob: -9.877541542053223
    6. '           ' → logprob: -10.252541542053223
    7. ')' → logprob: -10.252541542053223
    8. 'boost' → logprob: -11.127541542053223
    9. '```' → logprob: -11.377541542053223
    10. 'model' → logprob: -11.377541542053223

Token 1092: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13413885235786438
    2. '),' → logprob: -2.634138822555542
    3. ' and' → logprob: -4.384139060974121
    4. '):' → logprob: -4.509139060974121
    5. ')
' → logprob: -4.634139060974121
    6. ' or' → logprob: -5.009139060974121
    7. '):
' → logprob: -5.759139060974121
    8. '           ' → logprob: -6.009139060974121
    9. '       ' → logprob: -6.509139060974121
    10. ');' → logprob: -6.509139060974121

Token 1093: ' else' (ID: 1203)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'time' → logprob: -1.4911153316497803
    2. 'remaining' → logprob: -1.4911153316497803
    3. 'distance' → logprob: -1.9911153316497803
    4. '           ' → logprob: -2.6161153316497803
    5. 'rest' → logprob: -2.6161153316497803
    6. 'if' → logprob: -2.6161153316497803
    7. ' if' → logprob: -3.3661153316497803
    8. '#' → logprob: -3.9911153316497803
    9. ' time' → logprob: -3.9911153316497803
    10. 'res' → logprob: -4.241115570068359

Token 1094: ' U' (ID: 601)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.12205572426319122
    2. 'U' → logprob: -2.372055768966675
    3. '           ' → logprob: -3.997055768966675
    4. ' self' → logprob: -6.247055530548096
    5. 'return' → logprob: -7.872055530548096
    6. '               ' → logprob: -8.872056007385254
    7. '
' → logprob: -8.872056007385254
    8. ' U' → logprob: -8.997056007385254
    9. '```' → logprob: -9.497056007385254
    10. '       ' → logprob: -9.997056007385254

Token 1095: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7679435610771179
    2. '
' → logprob: -0.8929435610771179
    3. '       ' → logprob: -2.2679436206817627
    4. ' if' → logprob: -5.392943382263184
    5. ',' → logprob: -5.767943382263184
    6. '            
' → logprob: -6.142943382263184
    7. 'if' → logprob: -6.392943382263184
    8. '        
' → logprob: -6.642943382263184
    9. '
' → logprob: -6.892943382263184
    10. ')' → logprob: -6.892943382263184

Token 1096: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05948207154870033
    2. '       ' → logprob: -2.9344820976257324
    3. ':' → logprob: -6.184482097625732
    4. ',' → logprob: -7.309482097625732
    5. '
' → logprob: -7.309482097625732
    6. ' if' → logprob: -8.309481620788574
    7. ':
' → logprob: -8.434481620788574
    8. '   ' → logprob: -8.684481620788574
    9. ')' → logprob: -9.309481620788574
    10. '               ' → logprob: -9.684481620788574

Token 1097: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7274273633956909
    2. '       ' → logprob: -1.477427363395691
    3. 'if' → logprob: -2.1024274826049805
    4. 't' → logprob: -3.2274274826049805
    5. 'time' → logprob: -3.2274274826049805
    6. ' if' → logprob: -3.3524274826049805
    7. '   ' → logprob: -4.2274274826049805
    8. 'def' → logprob: -4.4774274826049805
    9. 'return' → logprob: -5.6024274826049805
    10. '
' → logprob: -5.7274274826049805

Token 1098: ' We' (ID: 1416)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.08259674906730652
    2. ' if' → logprob: -3.332596778869629
    3. 'time' → logprob: -4.332596778869629
    4. 't' → logprob: -5.082596778869629
    5. '           ' → logprob: -5.082596778869629
    6. '       ' → logprob: -5.457596778869629
    7. '   ' → logprob: -5.832596778869629
    8. 'import' → logprob: -6.207596778869629
    9. 'remaining' → logprob: -6.207596778869629
    10. 'speed' → logprob: -6.957596778869629

Token 1099: ' run' (ID: 2461)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7260159850120544
    2. '=' → logprob: -1.7260160446166992
    3. ')' → logprob: -2.476016044616699
    4. ' =' → logprob: -2.851016044616699
    5. 'if' → logprob: -2.976016044616699
    6. ' need' → logprob: -3.976016044616699
    7. ' if' → logprob: -4.101016044616699
    8. 'return' → logprob: -4.476016044616699
    9. '.' → logprob: -4.601016044616699
    10. 'need' → logprob: -4.726016044616699

Token 1100: ' the' (ID: 290)
  Prédit: 'at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'at' → logprob: -1.1469026803970337
    2. 'distance' → logprob: -1.3969026803970337
    3. 'out' → logprob: -2.021902561187744
    4. 'if' → logprob: -2.771902561187744
    5. '           ' → logprob: -3.271902561187744
    6. 'remaining' → logprob: -3.271902561187744
    7. 'time' → logprob: -3.521902561187744
    8. 'the' → logprob: -3.896902561187744
    9. 'until' → logprob: -4.146902561187744
    10. 'def' → logprob: -4.146902561187744

Token 1101: ' segment' (ID: 14806)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.9300974607467651
    2. 'speed' → logprob: -1.9300974607467651
    3. 'remaining' → logprob: -2.0550975799560547
    4. 'time' → logprob: -2.3050975799560547
    5. 'V' → logprob: -2.4300975799560547
    6. 'U' → logprob: -2.8050975799560547
    7. 'def' → logprob: -3.1800975799560547
    8. 'first' → logprob: -3.3050975799560547
    9. 'distance' → logprob: -3.4300975799560547
    10. 'return' → logprob: -3.8050975799560547

Token 1102: ' at' (ID: 540)
  Prédit: ' at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -1.3124028444290161
    2. ' in' → logprob: -1.5624028444290161
    3. ' with' → logprob: -1.6874028444290161
    4. ' until' → logprob: -3.1874027252197266
    5. 'with' → logprob: -3.3124027252197266
    6. 'in' → logprob: -3.3124027252197266
    7. ' while' → logprob: -3.5624027252197266
    8. ' assuming' → logprob: -3.5624027252197266
    9. 'at' → logprob: -3.8124027252197266
    10. 'while' → logprob: -4.187402725219727

Token 1103: ' initially' (ID: 25998)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.0581330060958862
    2. 'speed' → logprob: -1.6831330060958862
    3. 'boost' → logprob: -1.9331330060958862
    4. 'time' → logprob: -2.683133125305176
    5. 'most' → logprob: -2.933133125305176
    6. 'the' → logprob: -3.058133125305176
    7. 'distance' → logprob: -3.308133125305176
    8. 'max' → logprob: -3.558133125305176
    9. 'current' → logprob: -4.058133125305176
    10. 'V' → logprob: -4.308133125305176

Token 1104: ' time' (ID: 1058)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.4466150999069214
    2. 'boost' → logprob: -1.8216150999069214
    3. 'fast' → logprob: -2.321615219116211
    4. 'min' → logprob: -3.821615219116211
    5. 'time' → logprob: -4.196615219116211
    6. 'V' → logprob: -4.696615219116211
    7. 'max' → logprob: -5.071615219116211
    8. 'running' → logprob: -5.071615219116211
    9. '0' → logprob: -5.446615219116211
    10. 'the' → logprob: -5.696615219116211

Token 1105: '_since' (ID: 133288)
  Prédit: '_since'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_since' → logprob: -0.014374220743775368
    2. 'since' → logprob: -4.639374256134033
    3. '_remaining' → logprob: -6.514374256134033
    4. '=' → logprob: -6.639374256134033
    5. '_to' → logprob: -7.389374256134033
    6. '_until' → logprob: -7.764374256134033
    7. 'left' → logprob: -8.889373779296875
    8. '_left' → logprob: -8.889373779296875
    9. 'remaining' → logprob: -9.514373779296875
    10. 'to' → logprob: -9.514373779296875

Token 1106: '_last' (ID: 26359)
  Prédit: '_last'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_last' → logprob: -0.0006525091012008488
    2. 'last' → logprob: -7.625652313232422
    3. '_' → logprob: -9.000652313232422
    4. '_since' → logprob: -11.375652313232422
    5. '_start' → logprob: -11.875652313232422
    6. ' _' → logprob: -12.375652313232422
    7. '_latest' → logprob: -12.625652313232422
    8. '_le' → logprob: -13.250652313232422
    9. '```' → logprob: -13.500652313232422
    10. '_next' → logprob: -13.625652313232422

Token 1107: '_e' (ID: 4618)
  Prédit: '_e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_e' → logprob: -0.10572302341461182
    2. 'eat' → logprob: -2.3557229042053223
    3. 'e' → logprob: -5.230722904205322
    4. '_' → logprob: -10.35572338104248
    5. '
' → logprob: -11.35572338104248
    6. ' eat' → logprob: -11.60572338104248
    7. '```' → logprob: -11.60572338104248
    8. ' ' → logprob: -12.10572338104248
    9. 'def' → logprob: -12.23072338104248
    10. 'Eat' → logprob: -12.23072338104248

Token 1108: 'at' (ID: 266)
  Prédit: 'at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.0009151478880085051
    2. 'eat' → logprob: -7.750915050506592
    3. '_at' → logprob: -8.62591552734375
    4. 'ат' → logprob: -10.31341552734375
    5. '_' → logprob: -10.75091552734375
    6. 't' → logprob: -11.00091552734375
    7. 'att' → logprob: -11.00091552734375
    8. '```' → logprob: -11.12591552734375
    9. ' at' → logprob: -11.37591552734375
    10. '
' → logprob: -11.50091552734375

Token 1109: '_start' (ID: 10949)
  Prédit: '_start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -0.10284107178449631
    2. '_' → logprob: -3.1028411388397217
    3. '+' → logprob: -3.7278411388397217
    4. ' +' → logprob: -4.477840900421143
    5. ')' → logprob: -5.227840900421143
    6. '   ' → logprob: -6.352840900421143
    7. '       ' → logprob: -6.727840900421143
    8. '_end' → logprob: -6.727840900421143
    9. '
' → logprob: -6.852840900421143
    10. '=' → logprob: -7.102840900421143

Token 1110: ' seconds' (ID: 12068)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -1.3107112646102905
    2. ' +' → logprob: -1.6857112646102905
    3. ':' → logprob: -2.18571138381958
    4. ',' → logprob: -2.43571138381958
    5. '):' → logprob: -2.43571138381958
    6. ')' → logprob: -2.81071138381958
    7. '
' → logprob: -3.18571138381958
    8. '       ' → logprob: -3.43571138381958
    9. '           ' → logprob: -4.18571138381958
    10. '   ' → logprob: -4.31071138381958

Token 1111: ' elapsed' (ID: 56505)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.30366358160972595
    2. ')' → logprob: -2.803663492202759
    3. ',' → logprob: -2.803663492202759
    4. ' +' → logprob: -2.803663492202759
    5. '+=' → logprob: -4.553663730621338
    6. '+
' → logprob: -4.553663730621338
    7. '.' → logprob: -4.928663730621338
    8. '...' → logprob: -4.928663730621338
    9. '<|end|>' → logprob: -5.553663730621338
    10. ' +=' → logprob: -5.678663730621338

Token 1112: ' since' (ID: 3630)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0515249967575073
    2. '+' → logprob: -1.3015249967575073
    3. ' +' → logprob: -1.8015249967575073
    4. '_since' → logprob: -2.426525115966797
    5. ')' → logprob: -2.926525115966797
    6. ',' → logprob: -3.801525115966797
    7. ' )' → logprob: -5.426525115966797
    8. '=' → logprob: -5.676525115966797
    9. ' since' → logprob: -5.801525115966797
    10. ' _' → logprob: -5.801525115966797

Token 1113: ' last' (ID: 2174)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.006589485798031092
    2. ' last' → logprob: -5.131589412689209
    3. 'the' → logprob: -7.381589412689209
    4. '_last' → logprob: -11.381589889526367
    5. ' the' → logprob: -11.756589889526367
    6. '	last' → logprob: -12.006589889526367
    7. 'previous' → logprob: -12.756589889526367
    8. '(last' → logprob: -13.381589889526367
    9. '<|end|>' → logprob: -13.381589889526367
    10. 'car' → logprob: -13.881589889526367

Token 1114: ' eat' (ID: 11237)
  Prédit: '_e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_e' → logprob: -0.019243672490119934
    2. '_' → logprob: -4.6442437171936035
    3. 'eat' → logprob: -5.2692437171936035
    4. 'e' → logprob: -5.7692437171936035
    5. '_car' → logprob: -7.1442437171936035
    6. 'car' → logprob: -8.644243240356445
    7. ')' → logprob: -10.394243240356445
    8. ' _' → logprob: -10.394243240356445
    9. '_c' → logprob: -10.519243240356445
    10. ' eat' → logprob: -10.769243240356445

Token 1115: '
' (ID: 198)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -1.3461923599243164
    2. ':' → logprob: -1.9711923599243164
    3. '_since' → logprob: -2.2211923599243164
    4. '
' → logprob: -2.3461923599243164
    5. ',' → logprob: -2.7211923599243164
    6. '       ' → logprob: -3.2211923599243164
    7. '):' → logprob: -3.2211923599243164
    8. '+' → logprob: -3.3461923599243164
    9. ':
' → logprob: -3.4711923599243164
    10. ')' → logprob: -3.7211923599243164

Token 1116: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010940528474748135
    2. '       ' → logprob: -5.0109405517578125
    3. ',' → logprob: -5.7609405517578125
    4. ')' → logprob: -8.510940551757812
    5. ' if' → logprob: -9.135940551757812
    6. '   ' → logprob: -9.510940551757812
    7. '
' → logprob: -9.760940551757812
    8. ' =' → logprob: -9.760940551757812
    9. '               ' → logprob: -10.010940551757812
    10. '=' → logprob: -10.135940551757812

Token 1117: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.20377054810523987
    2. 'if' → logprob: -1.9537705183029175
    3. 'T' → logprob: -4.953770637512207
    4. ' if' → logprob: -4.953770637512207
    5. 'time' → logprob: -5.203770637512207
    6. 'U' → logprob: -5.328770637512207
    7. '       ' → logprob: -5.453770637512207
    8. 'V' → logprob: -6.078770637512207
    9. '#' (adapté à ' #') → logprob: -6.203770637512207
    10. 'def' → logprob: -6.453770637512207

Token 1118: ' Boost' (ID: 57880)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6326319575309753
    2. '           ' → logprob: -1.1326320171356201
    3. 'if' → logprob: -2.13263201713562
    4. '       ' → logprob: -4.507631778717041
    5. '   ' → logprob: -4.882631778717041
    6. '
' → logprob: -5.882631778717041
    7. 'def' → logprob: -6.507631778717041
    8. 'time' → logprob: -7.632631778717041
    9. ' time' → logprob: -7.882631778717041
    10. 'result' → logprob: -8.0076322555542

Token 1119: ' expires' (ID: 51445)
  Prédit: '_remaining'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_remaining' → logprob: -1.0598636865615845
    2. '_time' → logprob: -1.1848636865615845
    3. '_end' → logprob: -1.6848636865615845
    4. '_rem' → logprob: -2.934863567352295
    5. '_duration' → logprob: -2.934863567352295
    6. ' =' → logprob: -3.934863567352295
    7. '=' → logprob: -4.434863567352295
    8. '_left' → logprob: -5.309863567352295
    9. '_exp' → logprob: -5.684863567352295
    10. 'time' → logprob: -5.934863567352295

Token 1120: ' at' (ID: 540)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9261310696601868
    2. ' =' → logprob: -1.426131010055542
    3. 'in' → logprob: -2.926131010055542
    4. 'at' → logprob: -3.051131010055542
    5. '_in' → logprob: -3.301131010055542
    6. '_' → logprob: -3.426131010055542
    7. '_at' → logprob: -3.551131010055542
    8. '_time' → logprob: -3.926131010055542
    9. 'after' → logprob: -3.926131010055542
    10. ' at' → logprob: -4.051131248474121

Token 1121: ' (' (ID: 350)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.016962092369794846
    2. '(self' → logprob: -4.641962051391602
    3. 'max' → logprob: -5.266962051391602
    4. 'time' → logprob: -7.141962051391602
    5. ' self' → logprob: -7.891962051391602
    6. '           ' → logprob: -8.766962051391602
    7. '
' → logprob: -9.141962051391602
    8. '(max' → logprob: -9.141962051391602
    9. '(T' → logprob: -9.891962051391602
    10. '0' → logprob: -9.891962051391602

Token 1122: 'T' (ID: 51)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0017746652010828257
    2. 'time' → logprob: -6.876774787902832
    3. 'max' → logprob: -8.626774787902832
    4. '(self' → logprob: -8.876774787902832
    5. ' self' → logprob: -9.126774787902832
    6. ')' → logprob: -9.626774787902832
    7. 'speed' → logprob: -9.751774787902832
    8. '
' → logprob: -10.376774787902832
    9. '           ' → logprob: -10.501774787902832
    10. '0' → logprob: -10.876774787902832

Token 1123: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.030013348907232285
    2. '-' → logprob: -3.5300133228302
    3. ')' → logprob: -9.780013084411621
    4. 'self' → logprob: -9.905013084411621
    5. '-self' → logprob: -9.905013084411621
    6. '+' → logprob: -10.905013084411621
    7. '-
' → logprob: -11.405013084411621
    8. ' ' → logprob: -11.405013084411621
    9. ' -
' → logprob: -11.405013084411621
    10. ' ' → logprob: -11.905013084411621

Token 1124: ' time' (ID: 1058)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.0028065370861440897
    2. ' time' → logprob: -5.877806663513184
    3. '(time' → logprob: -13.752806663513184
    4. '	time' → logprob: -16.002805709838867
    5. '"time' → logprob: -16.127805709838867
    6. ')' → logprob: -16.252805709838867
    7. 'distance' → logprob: -16.252805709838867
    8. '   ' → logprob: -16.502805709838867
    9. ' ' → logprob: -17.627805709838867
    10. '=time' → logprob: -17.627805709838867

Token 1125: '_since' (ID: 133288)
  Prédit: '_since'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_since' → logprob: -2.522638169466518e-05
    2. 'since' → logprob: -11.000024795532227
    3. 'Since' → logprob: -13.250024795532227
    4. '_until' → logprob: -13.875024795532227
    5. '_' → logprob: -14.125024795532227
    6. '_to' → logprob: -14.125024795532227
    7. '```' → logprob: -14.125024795532227
    8. '_started' → logprob: -14.500024795532227
    9. '_start' → logprob: -14.875024795532227
    10. '
' → logprob: -15.125024795532227

Token 1126: '_last' (ID: 26359)
  Prédit: '_last'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_last' → logprob: -0.005800567101687193
    2. 'last' → logprob: -6.130800724029541
    3. '_since' → logprob: -6.255800724029541
    4. '_' → logprob: -6.505800724029541
    5. '_start' → logprob: -9.130800247192383
    6. ' last' → logprob: -10.505800247192383
    7. ' _' → logprob: -10.630800247192383
    8. ' ' → logprob: -12.255800247192383
    9. 'since' → logprob: -12.380800247192383
    10. '_elapsed' → logprob: -12.380800247192383

Token 1127: '_e' (ID: 4618)
  Prédit: '_e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_e' → logprob: -0.010170499794185162
    2. 'eat' → logprob: -4.6351704597473145
    3. 'e' → logprob: -7.8851704597473145
    4. '_' → logprob: -11.635170936584473
    5. ' ' → logprob: -12.135170936584473
    6. ' eat' → logprob: -12.260170936584473
    7. ' _' → logprob: -12.635170936584473
    8. '
' → logprob: -12.635170936584473
    9. '```' → logprob: -13.510170936584473
    10. '	e' → logprob: -13.635170936584473

Token 1128: 'at' (ID: 266)
  Prédit: 'at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.0016494720475748181
    2. 'eat' → logprob: -8.001649856567383
    3. 'ат' → logprob: -8.439149856567383
    4. '_at' → logprob: -8.626649856567383
    5. 'a' → logprob: -9.064149856567383
    6. 'att' → logprob: -9.314149856567383
    7. '_' → logprob: -9.501649856567383
    8. ')' → logprob: -10.439149856567383
    9. '```' → logprob: -10.439149856567383
    10. '``' → logprob: -10.876649856567383

Token 1129: '_start' (ID: 10949)
  Prédit: '_start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -0.0003110327525064349
    2. ')' → logprob: -9.125310897827148
    3. 'start' → logprob: -9.625310897827148
    4. '_' → logprob: -10.500310897827148
    5. ')_' → logprob: -10.875310897827148
    6. '_end' → logprob: -11.000310897827148
    7. 'Start' → logprob: -11.250310897827148
    8. '```' → logprob: -11.375310897827148
    9. '_started' → logprob: -12.000310897827148
    10. '
' → logprob: -12.125310897827148

Token 1130: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.015948263928294182
    2. ')
' → logprob: -4.515948295593262
    3. '),' → logprob: -6.265948295593262
    4. ' )' → logprob: -7.265948295593262
    5. '+' → logprob: -7.890948295593262
    6. ' +' → logprob: -8.265948295593262
    7. '))' → logprob: -8.390948295593262
    8. ' -' → logprob: -8.765948295593262
    9. ')>' → logprob: -8.890948295593262
    10. ')`' → logprob: -9.015948295593262

Token 1131: ' seconds' (ID: 12068)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.2433279752731323
    2. ' if' → logprob: -1.2433279752731323
    3. '
' → logprob: -2.618328094482422
    4. '_
' → logprob: -2.743328094482422
    5. ':' → logprob: -2.868328094482422
    6. ')' → logprob: -3.118328094482422
    7. ':
' → logprob: -3.243328094482422
    8. '       ' → logprob: -3.493328094482422
    9. '           ' → logprob: -4.118328094482422
    10. '   ' → logprob: -4.243328094482422

Token 1132: ' into' (ID: 1511)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.2896449565887451
    2. '
' → logprob: -1.5396449565887451
    3. '           ' → logprob: -1.5396449565887451
    4. ')' → logprob: -2.414644956588745
    5. ' if' → logprob: -2.789644956588745
    6. '):
' → logprob: -3.164644956588745
    7. ':' → logprob: -3.664644956588745
    8. ')
' → logprob: -4.539645195007324
    9. ',' → logprob: -4.664645195007324
    10. '   ' → logprob: -4.789645195007324

Token 1133: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.3488613963127136
    2. 'segment' → logprob: -1.3488614559173584
    3. 'running' → logprob: -4.098861217498779
    4. 'this' → logprob: -4.973861217498779
    5. 'distance' → logprob: -4.973861217498779
    6. 'run' → logprob: -6.098861217498779
    7. ' the' → logprob: -6.723861217498779
    8. 'which' → logprob: -8.348861694335938
    9. 'travel' → logprob: -8.473861694335938
    10. ' segment' → logprob: -8.723861694335938

Token 1134: ' segment' (ID: 14806)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.002266828203573823
    2. ' segment' → logprob: -6.377266883850098
    3. 'distance' → logprob: -7.877266883850098
    4. 'run' → logprob: -9.627266883850098
    5. 'current' → logprob: -9.877266883850098
    6. '_segment' → logprob: -10.752266883850098
    7. '(segment' → logprob: -11.252266883850098
    8. '```' → logprob: -11.502266883850098
    9. 'remaining' → logprob: -12.252266883850098
    10. ' run' → logprob: -12.502266883850098

Token 1135: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09551984071731567
    2. '           ' → logprob: -2.845519781112671
    3. ':' → logprob: -4.22052001953125
    4. '
' → logprob: -4.59552001953125
    5. ',' → logprob: -6.72052001953125
    6. ' if' → logprob: -6.97052001953125
    7. ' =' → logprob: -7.22052001953125
    8. '        
' → logprob: -7.34552001953125
    9. '=' → logprob: -7.47052001953125
    10. '        ' → logprob: -7.72052001953125

Token 1136: ' positive' (ID: 8841)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.01723596081137657
    2. 'distance' → logprob: -4.64223575592041
    3. ' time' → logprob: -5.39223575592041
    4. 'self' → logprob: -7.01723575592041
    5. '0' → logprob: -7.26723575592041
    6. '   ' → logprob: -8.26723575592041
    7. 'T' → logprob: -8.64223575592041
    8. '<' → logprob: -8.76723575592041
    9. '(time' → logprob: -9.01723575592041
    10. 'less' → logprob: -9.39223575592041

Token 1137: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7778915762901306
    2. '           ' → logprob: -1.0278916358947754
    3. ':' → logprob: -2.7778916358947754
    4. '
' → logprob: -3.0278916358947754
    5. ':
' → logprob: -4.152891635894775
    6. '):
' → logprob: -4.402891635894775
    7. ' if' → logprob: -4.527891635894775
    8. 'def' → logprob: -5.152891635894775
    9. ')' → logprob: -5.652891635894775
    10. '):' → logprob: -5.902891635894775

Token 1138: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004780288320034742
    2. '       ' → logprob: -5.629780292510986
    3. '   ' → logprob: -8.629779815673828
    4. '            
' → logprob: -8.754779815673828
    5. ' if' → logprob: -8.879779815673828
    6. '               ' → logprob: -9.129779815673828
    7. ' \' → logprob: -9.129779815673828
    8. ' ' → logprob: -9.754779815673828
    9. ' 
' → logprob: -9.754779815673828
    10. '
' → logprob: -10.004779815673828

Token 1139: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.32404205203056335
    2. 'T' → logprob: -1.6990420818328857
    3. 'if' (adapté à ' if') → logprob: -2.9490420818328857
    4. '       ' → logprob: -3.6990420818328857
    5. 'def' → logprob: -5.324041843414307
    6. ' if' → logprob: -5.949041843414307
    7. 't' → logprob: -5.949041843414307
    8. '
' → logprob: -6.449041843414307
    9. '   ' → logprob: -6.449041843414307
    10. ' T' → logprob: -6.949041843414307

Token 1140: ' time' (ID: 1058)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.010805514641106129
    2. ' time' → logprob: -5.260805606842041
    3. 'self' → logprob: -5.385805606842041
    4. '   ' → logprob: -7.385805606842041
    5. 'distance' → logprob: -8.760805130004883
    6. '(time' → logprob: -9.510805130004883
    7. '0' → logprob: -10.135805130004883
    8. ' self' → logprob: -10.260805130004883
    9. ' ' → logprob: -11.510805130004883
    10. '       ' → logprob: -12.260805130004883

Token 1141: '_since' (ID: 133288)
  Prédit: '_since'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_since' → logprob: -0.00021093101531732827
    2. '_' → logprob: -9.250210762023926
    3. 'since' → logprob: -10.375210762023926
    4. '   ' → logprob: -10.500210762023926
    5. '<' → logprob: -11.750210762023926
    6. ' _' → logprob: -11.875210762023926
    7. 'Since' → logprob: -12.250210762023926
    8. '_until' → logprob: -12.375210762023926
    9. '```' → logprob: -12.500210762023926
    10. '_s' → logprob: -12.625210762023926

Token 1142: '_last' (ID: 26359)
  Prédit: '_last'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_last' → logprob: -0.020572837442159653
    2. 'last' → logprob: -3.8955729007720947
    3. ' ' → logprob: -11.645572662353516
    4. '0' → logprob: -12.020572662353516
    5. ' last' → logprob: -12.520572662353516
    6. '
' → logprob: -13.020572662353516
    7. '_LAST' → logprob: -13.145572662353516
    8. '=' → logprob: -13.270572662353516
    9. '_start' → logprob: -14.270572662353516
    10. '>' → logprob: -14.520572662353516

Token 1143: '_e' (ID: 4618)
  Prédit: '_e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_e' → logprob: -0.0007464984664693475
    2. 'eat' → logprob: -7.625746726989746
    3. 'e' → logprob: -8.375746726989746
    4. '_a' → logprob: -11.875746726989746
    5. 'Eat' → logprob: -12.500746726989746
    6. 'E' → logprob: -12.625746726989746
    7. '-e' → logprob: -13.000746726989746
    8. '_start' → logprob: -13.500746726989746
    9. '```' → logprob: -14.000746726989746
    10. '...' → logprob: -14.125746726989746

Token 1144: 'at' (ID: 266)
  Prédit: 'at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.0006788347964175045
    2. 'eat' → logprob: -8.000679016113281
    3. '_at' → logprob: -8.750679016113281
    4. 'att' → logprob: -10.000679016113281
    5. 'ат' → logprob: -10.500679016113281
    6. '_' → logprob: -11.375679016113281
    7. 'At' → logprob: -11.688179016113281
    8. 'start' → logprob: -12.188179016113281
    9. '>' → logprob: -12.375679016113281
    10. 'e' → logprob: -12.563179016113281

Token 1145: '_start' (ID: 10949)
  Prédit: '_start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -0.3828783333301544
    2. ' <=' → logprob: -1.757878303527832
    3. ' <' → logprob: -2.132878303527832
    4. '<=' → logprob: -4.507878303527832
    5. ' >=' → logprob: -5.507878303527832
    6. ' _' → logprob: -5.757878303527832
    7. '_' → logprob: -5.882878303527832
    8. '<' → logprob: -6.257878303527832
    9. '   ' → logprob: -7.257878303527832
    10. ' ' → logprob: -7.257878303527832

Token 1146: ' >' (ID: 1424)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.35647353529930115
    2. ' <' → logprob: -1.9814735651016235
    3. '<=' → logprob: -1.9814735651016235
    4. '<' → logprob: -4.231473445892334
    5. ' >=' → logprob: -4.856473445892334
    6. '>=' → logprob: -6.606473445892334
    7. ' >' → logprob: -9.106473922729492
    8. ' ' → logprob: -9.356473922729492
    9. '>' → logprob: -9.356473922729492
    10. '   ' → logprob: -10.356473922729492

Token 1147: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0007424455252476037
    2. ' self' → logprob: -8.00074291229248
    3. '0' → logprob: -9.25074291229248
    4. 'running' → logprob: -9.62574291229248
    5. 'Rabbit' → logprob: -9.62574291229248
    6. 'speed' → logprob: -10.12574291229248
    7. 'Running' → logprob: -11.00074291229248
    8. 'segment' → logprob: -11.25074291229248
    9. '   ' → logprob: -11.37574291229248
    10. '1' → logprob: -11.37574291229248

Token 1148: '.speed' (ID: 54856)
  Prédit: 'speed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'speed' → logprob: -0.8238608837127686
    2. 'T' → logprob: -0.9488608837127686
    3. '.T' → logprob: -1.8238608837127686
    4. '.speed' → logprob: -4.448861122131348
    5. ' speed' → logprob: -8.698861122131348
    6. '   ' → logprob: -8.948861122131348
    7. '.' → logprob: -9.323861122131348
    8. ' T' → logprob: -9.823861122131348
    9. ' ' → logprob: -9.823861122131348
    10. '_T' → logprob: -10.073861122131348

Token 1149: '_model' (ID: 10928)
  Prédit: '_model'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_model' → logprob: -0.0035696611739695072
    2. '._' → logprob: -6.003569602966309
    3. '.' → logprob: -7.003569602966309
    4. '.model' → logprob: -10.003569602966309
    5. 'Model' → logprob: -10.253569602966309
    6. '   ' → logprob: -11.128569602966309
    7. ' .' → logprob: -11.378569602966309
    8. '_MODEL' → logprob: -11.378569602966309
    9. '.V' → logprob: -11.628569602966309
    10. '.
' → logprob: -11.753569602966309

Token 1150: '.T' (ID: 2600)
  Prédit: '.T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.T' → logprob: -4.961759259458631e-06
    2. 'T' → logprob: -13.000004768371582
    3. '.' → logprob: -13.250004768371582
    4. ' .' → logprob: -15.125004768371582
    5. '   ' → logprob: -15.875004768371582
    6. '._' → logprob: -15.875004768371582
    7. '	T' → logprob: -16.1250057220459
    8. ' ' → logprob: -16.7500057220459
    9. '.Т' → logprob: -17.7500057220459
    10. '
' → logprob: -17.8750057220459

Token 1151: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.19502022862434387
    2. ':
' → logprob: -1.8200201988220215
    3. ':return' → logprob: -4.8200201988220215
    4. '           ' → logprob: -6.0700201988220215
    5. ' or' → logprob: -6.1950201988220215
    6. '):
' → logprob: -7.3200201988220215
    7. '):' → logprob: -7.5700201988220215
    8. ')' → logprob: -8.07002067565918
    9. ' :' → logprob: -8.44502067565918
    10. ' return' → logprob: -8.69502067565918

Token 1152: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011370587162673473
    2. ' return' → logprob: -5.136370658874512
    3. 'return' → logprob: -6.011370658874512
    4. '               ' → logprob: -6.511370658874512
    5. ':' → logprob: -7.886370658874512
    6. '       ' → logprob: -8.261370658874512
    7. ':return' → logprob: -8.386370658874512
    8. '            ' → logprob: -9.386370658874512
    9. ')' → logprob: -9.636370658874512
    10. '          ' → logprob: -9.761370658874512

Token 1153: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.008927369490265846
    2. ' return' → logprob: -5.133927345275879
    3. '           ' → logprob: -6.258927345275879
    4. '   ' → logprob: -7.633927345275879
    5. '#' (adapté à ' #') → logprob: -8.258927345275879
    6. '               ' → logprob: -8.633927345275879
    7. 'U' → logprob: -9.383927345275879
    8. 'distance' → logprob: -10.133927345275879
    9. '
' → logprob: -11.758927345275879
    10. 'time' → logprob: -12.008927345275879

Token 1154: ' no' (ID: 860)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.001095330691896379
    2. '           ' → logprob: -8.00109577178955
    3. 'time' → logprob: -8.12609577178955
    4. '#' → logprob: -9.25109577178955
    5. 'segment' → logprob: -9.37609577178955
    6. '   ' → logprob: -9.62609577178955
    7. 'distance' → logprob: -9.62609577178955
    8. '               ' → logprob: -9.87609577178955
    9. ' return' → logprob: -10.25109577178955
    10. 'dist' → logprob: -11.50109577178955

Token 1155: ' boost' (ID: 12110)
  Prédit: 'boost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'boost' → logprob: -0.611271321773529
    2. ' boost' → logprob: -1.7362713813781738
    3. '_' → logprob: -2.861271381378174
    4. ' _' → logprob: -3.236271381378174
    5. 'n' → logprob: -3.486271381378174
    6. 'ne' → logprob: -4.361271381378174
    7. 'speed' → logprob: -4.361271381378174
    8. 'def' → logprob: -4.361271381378174
    9. 'r' → logprob: -4.611271381378174
    10. ' need' → logprob: -4.861271381378174

Token 1156: ' for' (ID: 395)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3026837408542633
    2. ' 
' → logprob: -2.6776838302612305
    3. ' return' → logprob: -2.9276838302612305
    4. 'return' → logprob: -3.3026838302612305
    5. '           ' → logprob: -3.4276838302612305
    6. '\n' → logprob: -4.4276838302612305
    7. ':
' → logprob: -4.5526838302612305
    8. '            
' → logprob: -4.5526838302612305
    9. ',' → logprob: -4.6776838302612305
    10. ':' → logprob: -4.8026838302612305

Token 1157: ' this' (ID: 495)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.6366047859191895
    2. ' this' → logprob: -1.7616047859191895
    3. ' the' → logprob: -2.3866047859191895
    4. 'this' → logprob: -2.6366047859191895
    5. 'the' → logprob: -2.7616047859191895
    6. ' distance' → logprob: -3.2616047859191895
    7. 'segment' → logprob: -3.7616047859191895
    8. 'speed' → logprob: -5.7616047859191895
    9. ' segment' → logprob: -5.8866047859191895
    10. 'U' → logprob: -7.1366047859191895

Token 1158: ' segment' (ID: 14806)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.20560987293720245
    2. ' segment' → logprob: -1.705609917640686
    3. 'distance' → logprob: -5.9556097984313965
    4. 'return' → logprob: -7.8306097984313965
    5. '_segment' → logprob: -8.080610275268555
    6. ' return' → logprob: -9.080610275268555
    7. '           ' → logprob: -9.205610275268555
    8. 'else' → logprob: -9.205610275268555
    9. 'portion' → logprob: -10.080610275268555
    10. ' distance' → logprob: -10.080610275268555

Token 1159: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7240264415740967
    2. '
' → logprob: -1.4740264415740967
    3. '\n' → logprob: -1.5990264415740967
    4. '       ' → logprob: -3.8490264415740967
    5. 'return' → logprob: -4.474026679992676
    6. ' return' → logprob: -4.849026679992676
    7. '            
' → logprob: -4.974026679992676
    8. ':
' → logprob: -5.099026679992676
    9. ')' → logprob: -5.099026679992676
    10. ':' → logprob: -5.224026679992676

Token 1160: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10318636894226074
    2. 'return' → logprob: -3.3531863689422607
    3. ' return' → logprob: -3.3531863689422607
    4. '
' → logprob: -4.85318660736084
    5. '               ' → logprob: -5.22818660736084
    6. '\n' → logprob: -5.35318660736084
    7. ',' → logprob: -5.85318660736084
    8. '            
' → logprob: -6.22818660736084
    9. '       ' → logprob: -6.60318660736084
    10. '   ' → logprob: -7.10318660736084

Token 1161: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0009155054576694965
    2. 'distance' → logprob: -7.75091552734375
    3. ' return' → logprob: -8.87591552734375
    4. 'time' → logprob: -9.00091552734375
    5. 'res' → logprob: -9.75091552734375
    6. 'segment' → logprob: -9.87591552734375
    7. 'dist' → logprob: -10.12591552734375
    8. '           ' → logprob: -10.37591552734375
    9. '   ' → logprob: -11.00091552734375
    10. 'result' → logprob: -12.87591552734375

Token 1162: ' distance' (ID: 9324)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.0013391701504588127
    2. ' distance' → logprob: -6.626338958740234
    3. '(distance' → logprob: -11.626338958740234
    4. '   ' → logprob: -13.126338958740234
    5. 'dist' → logprob: -13.501338958740234
    6. 'float' → logprob: -15.376338958740234
    7. ' ' → logprob: -16.001338958740234
    8. '
' → logprob: -16.001338958740234
    9. '```' → logprob: -16.126338958740234
    10. 'length' → logprob: -16.876338958740234

Token 1163: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.07902120798826218
    2. '/' → logprob: -2.5790212154388428
    3. '/self' → logprob: -9.079021453857422
    4. '           ' → logprob: -12.204021453857422
    5. '/
' → logprob: -13.079021453857422
    6. ' /
' → logprob: -13.329021453857422
    7. '```' → logprob: -13.454021453857422
    8. '               ' → logprob: -13.579021453857422
    9. ' ' → logprob: -13.579021453857422
    10. 'self' → logprob: -13.704021453857422

Token 1164: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -4.656383680412546e-05
    2. ' self' → logprob: -10.000046730041504
    3. '           ' → logprob: -14.125046730041504
    4. '(self' → logprob: -15.375046730041504
    5. '               ' → logprob: -16.750045776367188
    6. '
' → logprob: -17.625045776367188
    7. '                   ' → logprob: -18.625045776367188
    8. '   ' → logprob: -19.000045776367188
    9. '            
' → logprob: -19.000045776367188
    10. '       ' → logprob: -19.125045776367188

Token 1165: '.speed' (ID: 54856)
  Prédit: '.speed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.speed' → logprob: -0.1270911544561386
    2. 'speed' → logprob: -2.1270911693573
    3. '.' → logprob: -9.002091407775879
    4. '	speed' → logprob: -11.377091407775879
    5. 'peed' → logprob: -12.002091407775879
    6. '.s' → logprob: -12.627091407775879
    7. ' .' → logprob: -12.752091407775879
    8. ' speed' → logprob: -13.127091407775879
    9. '.space' → logprob: -13.127091407775879
    10. 'self' → logprob: -13.752091407775879

Token 1166: '_model' (ID: 10928)
  Prédit: '_model'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_model' → logprob: -0.002189045073464513
    2. 'model' → logprob: -6.2521891593933105
    3. 'Model' → logprob: -8.377188682556152
    4. '_MODEL' → logprob: -11.377188682556152
    5. '_mode' → logprob: -11.877188682556152
    6. ' model' → logprob: -12.627188682556152
    7. '.model' → logprob: -13.877188682556152
    8. 'U' → logprob: -14.127188682556152
    9. '-model' → logprob: -14.127188682556152
    10. '           ' → logprob: -14.127188682556152

Token 1167: '.U' (ID: 13234)
  Prédit: 'U'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'U' → logprob: -0.10024204105138779
    2. '.U' → logprob: -2.3502421379089355
    3. ' U' → logprob: -10.600241661071777
    4. '	U' → logprob: -12.350241661071777
    5. '.' → logprob: -12.975241661071777
    6. '_U' → logprob: -13.975241661071777
    7. '```' → logprob: -14.100241661071777
    8. '[' → logprob: -14.475241661071777
    9. ''U' → logprob: -14.850241661071777
    10. '<U' → logprob: -14.975241661071777

Token 1168: '

' (ID: 279)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4395146369934082
    2. '
' → logprob: -1.0645146369934082
    3. '            
' → logprob: -5.439514636993408
    4. 'else' → logprob: -6.064514636993408
    5. '       ' → logprob: -6.564514636993408
    6. 'if' → logprob: -7.064514636993408
    7. ' else' → logprob: -7.939514636993408
    8. ' if' → logprob: -8.31451416015625
    9. ')
' → logprob: -8.81451416015625
    10. ')' → logprob: -8.81451416015625

Token 1169: '           ' (ID: 352)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.790006160736084
    2. '
' → logprob: -1.415006160736084
    3. ')' → logprob: -1.790006160736084
    4. ' else' → logprob: -2.540006160736084
    5. ' 
' → logprob: -4.415006160736084
    6. 'return' → logprob: -4.915006160736084
    7. '```' → logprob: -5.040006160736084
    8. ')
' → logprob: -5.415006160736084
    9. ' if' → logprob: -5.415006160736084
    10. 'if' → logprob: -5.540006160736084

Token 1170: ' boost' (ID: 12110)
  Prédit: 'boost'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'boost' (adapté à ' boost') → logprob: -0.6824442148208618
    2. 'remaining' → logprob: -1.4324442148208618
    3. 'else' → logprob: -1.9324442148208618
    4. 'time' → logprob: -2.4324440956115723
    5. 'remain' → logprob: -4.932444095611572
    6. 't' → logprob: -5.057444095611572
    7. '#' → logprob: -6.182444095611572
    8. 'rem' → logprob: -6.557444095611572
    9. 'available' → logprob: -6.807444095611572
    10. 'segment' → logprob: -6.932444095611572

Token 1171: '_rem' (ID: 42194)
  Prédit: '_remaining'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_remaining' → logprob: -0.6477596759796143
    2. '_time' → logprob: -1.1477596759796143
    3. '_end' → logprob: -2.5227596759796143
    4. '_rem' → logprob: -3.2727596759796143
    5. '_left' → logprob: -3.5227596759796143
    6. '_exp' → logprob: -4.772759437561035
    7. '_duration' → logprob: -6.147759437561035
    8. '_ex' → logprob: -7.397759437561035
    9. '_exit' → logprob: -8.647759437561035
    10. '_' → logprob: -9.397759437561035

Token 1172: 'ain' (ID: 524)
  Prédit: 'ain'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ain' → logprob: -0.6026850342750549
    2. 'ains' → logprob: -1.1026849746704102
    3. 'a' → logprob: -2.85268497467041
    4. '_' → logprob: -3.85268497467041
    5. 'aining' → logprob: -4.22768497467041
    6. '=' → logprob: -4.60268497467041
    7. '_time' → logprob: -4.72768497467041
    8. ' =' → logprob: -6.72768497467041
    9. '_a' → logprob: -6.72768497467041
    10. '```' → logprob: -6.85268497467041

Token 1173: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2683021128177643
    2. 'ing' → logprob: -1.893302083015442
    3. ' =' → logprob: -2.5183022022247314
    4. 'ed' → logprob: -5.768301963806152
    5. '_time' → logprob: -8.018301963806152
    6. '_' → logprob: -8.643301963806152
    7. 'ining' → logprob: -9.018301963806152
    8. 'ning' → logprob: -9.393301963806152
    9. 'g' → logprob: -9.893301963806152
    10. '=_' → logprob: -10.143301963806152

Token 1174: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0007218453683890402
    2. ' self' → logprob: -7.2507219314575195
    3. 'max' → logprob: -11.62572193145752
    4. '           ' → logprob: -13.00072193145752
    5. '(self' → logprob: -14.75072193145752
    6. ' max' → logprob: -15.62572193145752
    7. '
' → logprob: -16.500720977783203
    8. ' ' → logprob: -16.625720977783203
    9. '         ' → logprob: -17.750720977783203
    10. '               ' → logprob: -18.000720977783203

Token 1175: '.speed' (ID: 54856)
  Prédit: '.speed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.speed' → logprob: -0.0789010226726532
    2. 'speed' → logprob: -2.5789010524749756
    3. '	speed' → logprob: -12.328901290893555
    4. '.' → logprob: -12.953901290893555
    5. '.s' → logprob: -13.578901290893555
    6. 'self' → logprob: -14.203901290893555
    7. ' speed' → logprob: -14.328901290893555
    8. 'T' → logprob: -14.578901290893555
    9. '(speed' → logprob: -14.828901290893555
    10. 'peed' → logprob: -14.828901290893555

Token 1176: '_model' (ID: 10928)
  Prédit: '_model'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_model' → logprob: -0.002875726670026779
    2. 'model' → logprob: -5.877875804901123
    3. '           ' → logprob: -10.752875328063965
    4. 'Model' → logprob: -11.502875328063965
    5. '_MODEL' → logprob: -12.252875328063965
    6. '
' → logprob: -12.627875328063965
    7. ' model' → logprob: -12.877875328063965
    8. '.model' → logprob: -13.002875328063965
    9. '模型' → logprob: -13.127875328063965
    10. '   ' → logprob: -13.252875328063965

Token 1177: '.T' (ID: 2600)
  Prédit: '.T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.T' → logprob: -3.5954712075181305e-05
    2. 'T' → logprob: -10.250036239624023
    3. '.' → logprob: -15.375036239624023
    4. '	T' → logprob: -15.500036239624023
    5. '_T' → logprob: -17.500036239624023
    6. ' T' → logprob: -19.000036239624023
    7. ' .' → logprob: -19.000036239624023
    8. '```' → logprob: -19.000036239624023
    9. '[T' → logprob: -19.125036239624023
    10. '   ' → logprob: -19.250036239624023

Token 1178: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.020543871447443962
    2. '-' → logprob: -3.8955438137054443
    3. ' -
' → logprob: -14.895544052124023
    4. ' ' → logprob: -14.895544052124023
    5. ' ' → logprob: -15.020544052124023
    6. '<|end|>' → logprob: -15.770544052124023
    7. '-token' → logprob: -15.770544052124023
    8. ')' → logprob: -15.895544052124023
    9. '-
' → logprob: -16.395544052124023
    10. '           ' → logprob: -16.770544052124023

Token 1179: ' time' (ID: 1058)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.002476016292348504
    2. ' time' → logprob: -6.002476215362549
    3. '(time' → logprob: -16.25247573852539
    4. '	time' → logprob: -16.62747573852539
    5. '   ' → logprob: -17.00247573852539
    6. '"time' → logprob: -18.37747573852539
    7. '           ' → logprob: -18.62747573852539
    8. 'token' → logprob: -19.62747573852539
    9. 'int' → logprob: -19.75247573852539
    10. ' ' → logprob: -19.75247573852539

Token 1180: '_since' (ID: 133288)
  Prédit: '_since'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_since' → logprob: -2.1888679839321412e-05
    2. 'since' → logprob: -10.750021934509277
    3. '_of' → logprob: -15.250021934509277
    4. 'Since' → logprob: -16.12502098083496
    5. '```' → logprob: -18.00002098083496
    6. '_for' → logprob: -18.37502098083496
    7. '_than' → logprob: -18.87502098083496
    8. '\' → logprob: -19.00002098083496
    9. ' since' → logprob: -19.25002098083496
    10. '_once' → logprob: -19.37502098083496

Token 1181: '_last' (ID: 26359)
  Prédit: '_last'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_last' → logprob: -0.3132656216621399
    2. 'last' → logprob: -1.3132655620574951
    3. '_LAST' → logprob: -14.563265800476074
    4. 'Last' → logprob: -14.563265800476074
    5. '_start' → logprob: -14.813265800476074
    6. ' last' → logprob: -15.063265800476074
    7. 'start' → logprob: -15.188265800476074
    8. 'eat' → logprob: -15.438265800476074
    9. '...' → logprob: -15.563265800476074
    10. '_first' → logprob: -15.938265800476074

Token 1182: '_e' (ID: 4618)
  Prédit: '_e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_e' → logprob: -0.028125358745455742
    2. 'eat' → logprob: -3.653125286102295
    3. 'e' → logprob: -6.403125286102295
    4. 'start' → logprob: -9.278125762939453
    5. '_start' → logprob: -11.403125762939453
    6. 'ate' → logprob: -11.403125762939453
    7. 'last' → logprob: -11.528125762939453
    8. '_a' → logprob: -12.278125762939453
    9. '_at' → logprob: -12.778125762939453
    10. '-e' → logprob: -12.778125762939453

Token 1183: 'at' (ID: 266)
  Prédit: 'at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.000250491953920573
    2. 'eat' → logprob: -8.750250816345215
    3. 'att' → logprob: -10.500250816345215
    4. '_at' → logprob: -11.000250816345215
    5. 'ат' → logprob: -11.125250816345215
    6. 'ath' → logprob: -12.000250816345215
    7. 'a' → logprob: -12.875250816345215
    8. ' at' → logprob: -13.125250816345215
    9. 'At' → logprob: -13.375250816345215
    10. '   ' → logprob: -13.500250816345215

Token 1184: '_start' (ID: 10949)
  Prédit: '_start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -0.001328095211647451
    2. 'start' → logprob: -6.626327991485596
    3. 't' → logprob: -14.251328468322754
    4. 'Start' → logprob: -14.876328468322754
    5. '_START' → logprob: -15.501328468322754
    6. 'e' → logprob: -15.876328468322754
    7. '
' → logprob: -15.876328468322754
    8. 's' → logprob: -16.001327514648438
    9. '_' → logprob: -16.376327514648438
    10. '           ' → logprob: -16.501327514648438

Token 1185: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.22862130403518677
    2. '           ' → logprob: -1.853621244430542
    3. ' if' → logprob: -4.353621482849121
    4. '       ' → logprob: -4.478621482849121
    5. ')' → logprob: -4.603621482849121
    6. ',' → logprob: -5.728621482849121
    7. '+' → logprob: -6.478621482849121
    8. '               ' → logprob: -6.603621482849121
    9. 'if' → logprob: -7.103621482849121
    10. '            
' → logprob: -7.103621482849121

Token 1186: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006490950006991625
    2. ' if' → logprob: -6.006491184234619
    3. '
' → logprob: -6.506491184234619
    4. '       ' → logprob: -6.631491184234619
    5. '            
' → logprob: -7.631491184234619
    6. 'if' → logprob: -9.006490707397461
    7. '  
' → logprob: -9.006490707397461
    8. ' 
' → logprob: -9.381490707397461
    9. '               ' → logprob: -9.756490707397461
    10. '    
' → logprob: -10.006490707397461

Token 1187: ' dist' (ID: 3601)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.06354235857725143
    2. 'time' → logprob: -3.938542366027832
    3. '           ' → logprob: -4.063542366027832
    4. 'boost' → logprob: -4.563542366027832
    5. 'max' → logprob: -5.063542366027832
    6. '#' → logprob: -6.188542366027832
    7. 'speed' → logprob: -6.563542366027832
    8. 'segment' → logprob: -6.938542366027832
    9. 'distance' → logprob: -7.188542366027832
    10. 'import' → logprob: -7.688542366027832

Token 1188: '_in' (ID: 2267)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '/' → logprob: -1.3222882747650146
    2. '_' → logprob: -1.3222882747650146
    3. '_to' → logprob: -1.8222882747650146
    4. '_remaining' → logprob: -2.0722882747650146
    5. ' /' → logprob: -3.1972882747650146
    6. '=' → logprob: -3.5722882747650146
    7. '_div' → logprob: -3.5722882747650146
    8. '_time' → logprob: -3.6972882747650146
    9. ' =' → logprob: -3.9472882747650146
    10. '_left' → logprob: -4.447288513183594

Token 1189: '_bo' (ID: 104368)
  Prédit: 'boost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'boost' → logprob: -0.11867978423833847
    2. '_bo' → logprob: -2.2436797618865967
    3. '=' → logprob: -7.118680000305176
    4. 'speed' → logprob: -7.243680000305176
    5. '
' → logprob: -7.243680000305176
    6. '_speed' → logprob: -7.493680000305176
    7. 'crease' → logprob: -7.868680000305176
    8. '(boost' → logprob: -7.993680000305176
    9. '_' → logprob: -8.243680000305176
    10. '_segment' → logprob: -8.618680000305176

Token 1190: 'ost' (ID: 564)
  Prédit: 'ost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ost' → logprob: -5.347765181795694e-05
    2. 'o' → logprob: -11.000053405761719
    3. 'st' → logprob: -11.625053405761719
    4. '#' → logprob: -12.500053405761719
    5. 'ot' → logprob: -12.625053405761719
    6. '
' → logprob: -12.750053405761719
    7. 'ostat' → logprob: -13.375053405761719
    8. 'on' → logprob: -13.500053405761719
    9. 'ост' → logprob: -13.625053405761719
    10. '\' → logprob: -13.750053405761719

Token 1191: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.525397539138794
    2. '=' → logprob: -0.900397539138794
    3. '_' → logprob: -7.400397300720215
    4. '_time' → logprob: -7.650397300720215
    5. 'ed' → logprob: -7.775397300720215
    6. ',' → logprob: -7.900397300720215
    7. '_remaining' → logprob: -9.150397300720215
    8. ' ' → logprob: -10.025397300720215
    9. ')' → logprob: -10.900397300720215
    10. '_to' → logprob: -11.025397300720215

Token 1192: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3024587631225586
    2. 'boost' → logprob: -1.6774587631225586
    3. 'min' → logprob: -2.8024587631225586
    4. ' self' → logprob: -4.677458763122559
    5. ' min' → logprob: -6.302458763122559
    6. ' boost' → logprob: -7.177458763122559
    7. 'distance' → logprob: -7.302458763122559
    8. '
' → logprob: -7.427458763122559
    9. 'max' → logprob: -8.927458763122559
    10. 'speed' → logprob: -9.927458763122559

Token 1193: '.speed' (ID: 54856)
  Prédit: '.speed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.speed' → logprob: -0.1778893917798996
    2. '.V' → logprob: -3.177889347076416
    3. 'speed' → logprob: -3.177889347076416
    4. '.bo' → logprob: -3.177889347076416
    5. 'boost' → logprob: -3.302889347076416
    6. 'self' → logprob: -7.177889347076416
    7. 'V' → logprob: -9.177889823913574
    8. '
' → logprob: -10.052889823913574
    9. '[self' → logprob: -10.177889823913574
    10. '.v' → logprob: -10.177889823913574

Token 1194: '_model' (ID: 10928)
  Prédit: '_model'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_model' → logprob: -0.024820692837238312
    2. '_rem' → logprob: -4.649820804595947
    3. 'model' → logprob: -5.274820804595947
    4. 'distance' → logprob: -5.524820804595947
    5. 'remain' → logprob: -6.024820804595947
    6. '_start' → logprob: -7.149820804595947
    7. '_since' → logprob: -7.399820804595947
    8. 'Model' → logprob: -7.649820804595947
    9. '   ' → logprob: -8.274820327758789
    10. 'since' → logprob: -8.524820327758789

Token 1195: '.V' (ID: 5970)
  Prédit: '.V'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.V' → logprob: -3.249780638725497e-05
    2. 'V' → logprob: -10.375032424926758
    3. '.T' → logprob: -14.875032424926758
    4. '	V' → logprob: -14.875032424926758
    5. '.v' → logprob: -15.625032424926758
    6. '.
' → logprob: -16.375032424926758
    7. '
' → logprob: -16.375032424926758
    8. '.' → logprob: -16.500032424926758
    9. 's' → logprob: -17.250032424926758
    10. '   ' → logprob: -17.250032424926758

Token 1196: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.16023346781730652
    2. '*' → logprob: -1.910233497619629
    3. ' ' → logprob: -12.910233497619629
    4. '`' → logprob: -13.910233497619629
    5. '```' → logprob: -14.035233497619629
    6. '
' → logprob: -14.160233497619629
    7. '*object' → logprob: -14.285233497619629
    8. 'if' → logprob: -14.660233497619629
    9. '**' → logprob: -14.785233497619629
    10. '*
' → logprob: -14.785233497619629

Token 1197: ' boost' (ID: 12110)
  Prédit: 'boost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'boost' → logprob: -0.0007425647345371544
    2. ' boost' → logprob: -7.250742435455322
    3. '(boost' → logprob: -10.62574291229248
    4. '	boost' → logprob: -12.75074291229248
    5. 'bo' → logprob: -13.50074291229248
    6. '
' → logprob: -13.75074291229248
    7. '   ' → logprob: -14.37574291229248
    8. 'boot' → logprob: -14.50074291229248
    9. '0' → logprob: -14.87574291229248
    10. 'min' → logprob: -15.37574291229248

Token 1198: '_rem' (ID: 42194)
  Prédit: '_rem'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rem' → logprob: -3.5120287066092715e-05
    2. 'rem' → logprob: -10.875035285949707
    3. '_remaining' → logprob: -11.375035285949707
    4. 'remain' → logprob: -13.625035285949707
    5. '
' → logprob: -14.500035285949707
    6. '_rel' → logprob: -15.000035285949707
    7. ' /' → logprob: -15.250035285949707
    8. 'Rem' → logprob: -15.500035285949707
    9. '_Rem' → logprob: -15.500035285949707
    10. '```' → logprob: -15.500035285949707

Token 1199: 'ain' (ID: 524)
  Prédit: 'ain'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ain' → logprob: -0.0002582402084954083
    2. 'a' → logprob: -8.500258445739746
    3. 'an' → logprob: -12.375258445739746
    4. '#' → logprob: -12.375258445739746
    5. '```' → logprob: -12.875258445739746
    6. 'dist' → logprob: -13.000258445739746
    7. '[' → logprob: -13.062758445739746
    8. 'ains' → logprob: -13.187758445739746
    9. '__' → logprob: -13.250258445739746
    10. '_dist' → logprob: -13.250258445739746

Token 1200: '
' (ID: 198)
  Prédit: ' /'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.043503329157829285
    2. '/' → logprob: -3.1685032844543457
    3. ' if' → logprob: -8.793503761291504
    4. ')' → logprob: -9.293503761291504
    5. '
' → logprob: -10.043503761291504
    6. '*' → logprob: -10.668503761291504
    7. '/d' → logprob: -11.043503761291504
    8. ' *' → logprob: -11.168503761291504
    9. ' /
' → logprob: -11.168503761291504
    10. ' ' → logprob: -11.293503761291504

Token 1201: '           ' (ID: 352)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2644195556640625
    2. '<|end|>' → logprob: -1.8894195556640625
    3. 'if' → logprob: -3.2644195556640625
    4. '<|end|>' → logprob: -4.8894195556640625
    5. ')' → logprob: -5.0144195556640625
    6. '           ' → logprob: -5.7644195556640625
    7. '[' → logprob: -6.0144195556640625
    8. ' ' → logprob: -6.1394195556640625
    9. '<=' → logprob: -6.2644195556640625
    10. ':' → logprob: -6.2644195556640625

Token 1202: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.1433747559785843
    2. 'if' (adapté à ' if') → logprob: -2.2683746814727783
    3. '           ' → logprob: -4.143374919891357
    4. 'distance' → logprob: -6.143374919891357
    5. '       ' → logprob: -6.518374919891357
    6. '          ' → logprob: -6.643374919891357
    7. '
' → logprob: -6.643374919891357
    8. 's' → logprob: -6.893374919891357
    9. ' ' → logprob: -7.018374919891357
    10. ')' → logprob: -7.268374919891357

Token 1203: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.022294385358691216
    2. ' dist' → logprob: -4.022294521331787
    3. 'distance' → logprob: -5.522294521331787
    4. ' distance' → logprob: -9.397294044494629
    5. '   ' → logprob: -10.772294044494629
    6. 'boost' → logprob: -11.397294044494629
    7. '	dist' → logprob: -11.522294044494629
    8. 'd' → logprob: -12.647294044494629
    9. '           ' → logprob: -13.459794044494629
    10. '(dist' → logprob: -13.772294044494629

Token 1204: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -0.3992520570755005
    2. ' >' → logprob: -2.149251937866211
    3. ' <' → logprob: -2.649251937866211
    4. ' <=' → logprob: -2.899251937866211
    5. '>' → logprob: -3.024251937866211
    6. '<' → logprob: -4.649251937866211
    7. ' >=' → logprob: -4.649251937866211
    8. '_' → logprob: -4.774251937866211
    9. '<=' → logprob: -5.774251937866211
    10. ' _' → logprob: -6.024251937866211

Token 1205: '_bo' (ID: 104368)
  Prédit: 'boost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'boost' → logprob: -0.0020227357745170593
    2. 'V' → logprob: -7.502022743225098
    3. 'speed' → logprob: -7.877022743225098
    4. '_bo' → logprob: -7.877022743225098
    5. 'self' → logprob: -8.877022743225098
    6. 'T' → logprob: -9.127022743225098
    7. 'distance' → logprob: -9.752022743225098
    8. ' boost' → logprob: -10.002022743225098
    9. 'float' → logprob: -10.127022743225098
    10. '=' → logprob: -10.127022743225098

Token 1206: 'ost' (ID: 564)
  Prédit: 'ost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ost' → logprob: -0.014758153818547726
    2. 'st' → logprob: -4.764758110046387
    3. 'ol' → logprob: -5.639758110046387
    4. 'o' → logprob: -6.889758110046387
    5. '=' → logprob: -9.264758110046387
    6. 'olt' → logprob: -9.514758110046387
    7. 'last' → logprob: -9.577258110046387
    8. 'of' → logprob: -9.639758110046387
    9. 't' → logprob: -9.889758110046387
    10. 'rst' → logprob: -9.952258110046387

Token 1207: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.53005450963974
    2. ' >=' → logprob: -0.90505450963974
    3. '>' → logprob: -5.530054569244385
    4. ' <' → logprob: -6.530054569244385
    5. ' >' → logprob: -7.530054569244385
    6. '<' → logprob: -7.530054569244385
    7. '<=' → logprob: -8.905054092407227
    8. '==' → logprob: -9.155054092407227
    9. ' <=' → logprob: -10.280054092407227
    10. '=' → logprob: -10.780054092407227

Token 1208: ' distance' (ID: 9324)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.00861729308962822
    2. ' distance' → logprob: -4.758617401123047
    3. 'dist' → logprob: -13.133617401123047
    4. '(distance' → logprob: -14.883617401123047
    5. 'd' → logprob: -16.508617401123047
    6. '_distance' → logprob: -16.633617401123047
    7. 'Distance' → logprob: -16.758617401123047
    8. '   ' → logprob: -17.508617401123047
    9. '
' → logprob: -17.508617401123047
    10. 'length' → logprob: -17.758617401123047

Token 1209: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4942059814929962
    2. ':
' → logprob: -0.9942059516906738
    3. '               ' → logprob: -4.244205951690674
    4. '           ' → logprob: -5.619205951690674
    5. ':return' → logprob: -6.869205951690674
    6. ' /' → logprob: -8.244206428527832
    7. '/' → logprob: -9.369206428527832
    8. '*' → logprob: -9.494206428527832
    9. '):
' → logprob: -9.744206428527832
    10. ':
' → logprob: -9.994206428527832

Token 1210: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4084376096725464
    2. '           ' → logprob: -2.158437728881836
    3. 'distance' → logprob: -2.158437728881836
    4. ' 
' → logprob: -3.783437728881836
    5. '(distance' → logprob: -3.783437728881836
    6. ' distance' → logprob: -3.908437728881836
    7. ':' → logprob: -4.283437728881836
    8. ' return' → logprob: -5.283437728881836
    9. ':
' → logprob: -5.408437728881836
    10. 'return' → logprob: -6.033437728881836

Token 1211: ' #' (ID: 1069)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.42231330275535583
    2. 'distance' → logprob: -1.6723133325576782
    3. ' distance' → logprob: -2.1723132133483887
    4. 'return' → logprob: -3.1723132133483887
    5. '(distance' → logprob: -7.422313213348389
    6. '               ' → logprob: -9.922313690185547
    7. '           ' → logprob: -10.047313690185547
    8. ' 
' → logprob: -10.547313690185547
    9. '       ' → logprob: -10.547313690185547
    10. '```' → logprob: -11.547313690185547

Token 1212: ' full' (ID: 3149)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.3886042833328247
    2. ' return' → logprob: -1.1386042833328247
    3. '#' → logprob: -6.513604164123535
    4. '           ' → logprob: -9.388604164123535
    5. '               ' → logprob: -9.638604164123535
    6. ' #' → logprob: -9.888604164123535
    7. 'distance' → logprob: -10.638604164123535
    8. '	return' → logprob: -11.513604164123535
    9. '```' → logprob: -12.638604164123535
    10. ' distance' → logprob: -13.138604164123535

Token 1213: ' segment' (ID: 14806)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.10060591995716095
    2. 'boost' → logprob: -2.8506059646606445
    3. 'segment' → logprob: -3.8506059646606445
    4. 'speed' → logprob: -4.2256059646606445
    5. ' distance' → logprob: -6.9756059646606445
    6. 'return' → logprob: -8.350605964660645
    7. '
' → logprob: -8.475605964660645
    8. 'time' → logprob: -8.975605964660645
    9. ' segment' → logprob: -9.100605964660645
    10. 'duration' → logprob: -9.850605964660645

Token 1214: ' can' (ID: 665)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.1327859163284302
    2. ' /' → logprob: -1.7577859163284302
    3. '/' → logprob: -2.1327857971191406
    4. ':
' → logprob: -2.3827857971191406
    5. ' return' → logprob: -3.1327857971191406
    6. ' run' → logprob: -3.3827857971191406
    7. ' coverage' → logprob: -3.5077857971191406
    8. ' done' → logprob: -4.132785797119141
    9. ' segment' → logprob: -4.382785797119141
    10. '):
' → logprob: -4.507785797119141

Token 1215: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.47447022795677185
    2. 'be' → logprob: -0.9744702577590942
    3. ' run' → logprob: -8.224470138549805
    4. 'run' → logprob: -9.099470138549805
    5. '	be' → logprob: -11.724470138549805
    6. '_be' → logprob: -13.349470138549805
    7. 'go' → logprob: -13.974470138549805
    8. '```' → logprob: -14.349470138549805
    9. '_run' → logprob: -14.724470138549805
    10. 'b' → logprob: -15.474470138549805

Token 1216: ' covered' (ID: 13083)
  Prédit: 'covered'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'covered' → logprob: -0.6211923360824585
    2. 'run' → logprob: -0.8711923360824585
    3. 'done' → logprob: -3.621192455291748
    4. 'tr' → logprob: -4.246192455291748
    5. 'passed' → logprob: -6.121192455291748
    6. '```' → logprob: -8.37119197845459
    7. 'completed' → logprob: -8.74619197845459
    8. ' run' → logprob: -8.99619197845459
    9. 'travel' → logprob: -9.24619197845459
    10. '   ' → logprob: -9.62119197845459

Token 1217: ' during' (ID: 3354)
  Prédit: ' at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.35209572315216064
    2. 'at' → logprob: -1.2270957231521606
    3. '```' → logprob: -6.727095603942871
    4. 'with' → logprob: -7.102095603942871
    5. '           ' → logprob: -8.602095603942871
    6. ' with' → logprob: -8.602095603942871
    7. 'in' → logprob: -8.727095603942871
    8. ' ' → logprob: -8.727095603942871
    9. ' during' → logprob: -8.852095603942871
    10. 'using' → logprob: -8.852095603942871

Token 1218: ' boost' (ID: 12110)
  Prédit: 'boost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'boost' → logprob: -0.1117897629737854
    2. 'the' → logprob: -2.9867897033691406
    3. ' boost' → logprob: -3.2367897033691406
    4. 'distance' → logprob: -4.611789703369141
    5. ' the' → logprob: -5.236789703369141
    6. ' distance' → logprob: -8.36178970336914
    7. '	boost' → logprob: -9.23678970336914
    8. '(boost' → logprob: -9.36178970336914
    9. '```' → logprob: -9.36178970336914
    10. '
' → logprob: -9.48678970336914

Token 1219: ' speed' (ID: 7733)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.1437848806381226
    2. ':
' → logprob: -1.1437848806381226
    3. '
' → logprob: -1.7687848806381226
    4. 'return' → logprob: -2.393784999847412
    5. ':' → logprob: -3.643784999847412
    6. ' return' → logprob: -3.768784999847412
    7. '.' → logprob: -4.393784999847412
    8. '               ' → logprob: -4.768784999847412
    9. '.
' → logprob: -5.143784999847412
    10. ':return' → logprob: -5.393784999847412

Token 1220: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2874711751937866
    2. '\n' → logprob: -2.537471294403076
    3. '               ' → logprob: -2.787471294403076
    4. ':
' → logprob: -3.162471294403076
    5. '
' → logprob: -3.787471294403076
    6. 'return' → logprob: -4.787471294403076
    7. '            
' → logprob: -4.912471294403076
    8. '.
' → logprob: -5.162471294403076
    9. '.' → logprob: -5.537471294403076
    10. ' return' → logprob: -5.662471294403076

Token 1221: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04134342446923256
    2. '           ' → logprob: -3.6663434505462646
    3. 'return' → logprob: -5.1663432121276855
    4. ' return' → logprob: -5.6663432121276855
    5. '                   ' → logprob: -6.4163432121276855
    6. ':
' → logprob: -7.0413432121276855
    7. ')' → logprob: -7.0413432121276855
    8. '                ' → logprob: -8.041343688964844
    9. ' 
' → logprob: -8.166343688964844
    10. '):
' → logprob: -8.541343688964844

Token 1222: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.21583661437034607
    2. ' return' → logprob: -1.7158366441726685
    3. 'distance' → logprob: -4.340836524963379
    4. '
' → logprob: -7.715836524963379
    5. ' distance' → logprob: -7.965836524963379
    6. '(distance' → logprob: -8.715836524963379
    7. '   ' → logprob: -9.215836524963379
    8. '{return' → logprob: -9.340836524963379
    9. '	return' → logprob: -9.840836524963379
    10. '```' → logprob: -10.465836524963379

Token 1223: ' distance' (ID: 9324)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.0005532711511477828
    2. ' distance' → logprob: -7.500553131103516
    3. '(distance' → logprob: -15.750553131103516
    4. '   ' → logprob: -16.500553131103516
    5. ' ' → logprob: -18.375553131103516
    6. 'float' → logprob: -20.750553131103516
    7. '
' → logprob: -21.375553131103516
    8. '  ' → logprob: -21.625553131103516
    9. '_distance' → logprob: -21.625553131103516
    10. '.distance' → logprob: -22.000553131103516

Token 1224: ' /' (ID: 820)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.3868974447250366
    2. ' /' → logprob: -1.1368974447250366
    3. '/self' → logprob: -11.136897087097168
    4. '/
' → logprob: -12.011897087097168
    5. ' /
' → logprob: -13.011897087097168
    6. ' ' → logprob: -13.386897087097168
    7. '           ' → logprob: -14.011897087097168
    8. 'self' → logprob: -15.386897087097168
    9. '/
/' → logprob: -16.136898040771484
    10. '               ' → logprob: -16.136898040771484

Token 1225: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.0325924449716695e-05
    2. ' self' → logprob: -11.50001049041748
    3. '(self' → logprob: -15.62501049041748
    4. '
' → logprob: -17.625009536743164
    5. 'boost' → logprob: -19.000009536743164
    6. 'float' → logprob: -19.125009536743164
    7. '   ' → logprob: -19.500009536743164
    8. ' ' → logprob: -19.625009536743164
    9. '	self' → logprob: -20.000009536743164
    10. '```' → logprob: -20.125009536743164

Token 1226: '.speed' (ID: 54856)
  Prédit: '.speed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.speed' → logprob: -0.2520052492618561
    2. 'speed' → logprob: -1.5020052194595337
    3. 'self' → logprob: -10.002005577087402
    4. '.V' → logprob: -11.002005577087402
    5. '	speed' → logprob: -12.252005577087402
    6. 'V' → logprob: -12.502005577087402
    7. '.' → logprob: -13.877005577087402
    8. ' speed' → logprob: -13.877005577087402
    9. '.velocity' → logprob: -14.252005577087402
    10. '.self' → logprob: -14.502005577087402

Token 1227: '_model' (ID: 10928)
  Prédit: '_model'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_model' → logprob: -0.002328552072867751
    2. 'model' → logprob: -6.252328395843506
    3. 'Model' → logprob: -8.377328872680664
    4. '.model' → logprob: -9.377328872680664
    5. 'V' → logprob: -10.752328872680664
    6. '           ' → logprob: -10.752328872680664
    7. '_MODEL' → logprob: -11.752328872680664
    8. 'モデル' → logprob: -12.252328872680664
    9. '.V' → logprob: -12.377328872680664
    10. '模型' → logprob: -12.627328872680664

Token 1228: '.V' (ID: 5970)
  Prédit: '.V'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.V' → logprob: -0.0017134972149506211
    2. 'V' → logprob: -6.376713275909424
    3. '.' → logprob: -11.501713752746582
    4. '	V' → logprob: -14.626713752746582
    5. '.U' → logprob: -15.501713752746582
    6. '.
' → logprob: -15.626713752746582
    7. '.T' → logprob: -15.876713752746582
    8. '_V' → logprob: -16.376712799072266
    9. ' .' → logprob: -16.876712799072266
    10. '```' → logprob: -17.626712799072266

Token 1229: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16069483757019043
    2. '
' → logprob: -2.0356948375701904
    3. '            
' → logprob: -5.1606950759887695
    4. '		' → logprob: -5.9106950759887695
    5. ' 
' → logprob: -6.9106950759887695
    6. 'return' → logprob: -6.9106950759887695
    7. '       ' → logprob: -6.9106950759887695
    8. ')' → logprob: -7.0356950759887695
    9. ' else' → logprob: -7.0356950759887695
    10. 'else' → logprob: -7.2856950759887695

Token 1230: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2408004254102707
    2. '
' → logprob: -1.615800380706787
    3. '            
' → logprob: -5.240800380706787
    4. ' else' → logprob: -5.365800380706787
    5. 'else' → logprob: -6.240800380706787
    6. '		' → logprob: -6.490800380706787
    7. '\n' → logprob: -7.740800380706787
    8. '
' → logprob: -8.115800857543945
    9. ' 
' → logprob: -8.990800857543945
    10. '    
' → logprob: -9.115800857543945

Token 1231: ' else' (ID: 1203)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2954307198524475
    2. '
' → logprob: -2.5454306602478027
    3. '       ' → logprob: -2.9204306602478027
    4. 'return' → logprob: -3.1704306602478027
    5. ' else' → logprob: -3.2954306602478027
    6. 'else' (adapté à ' else') → logprob: -3.6704306602478027
    7. '            
' → logprob: -5.045430660247803
    8. ' return' → logprob: -5.545430660247803
    9. '        
' → logprob: -6.045430660247803
    10. ' 
' → logprob: -6.045430660247803

Token 1232: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.1193811222910881
    2. '               ' → logprob: -2.9943811893463135
    3. '           ' → logprob: -3.1193811893463135
    4. ':' → logprob: -4.244380950927734
    5. '
' → logprob: -6.244380950927734
    6. ' return' → logprob: -8.244380950927734
    7. 'return' → logprob: -8.369380950927734
    8. '{
' → logprob: -8.369380950927734
    9. '                   ' → logprob: -8.619380950927734
    10. ' :
' → logprob: -8.619380950927734

Token 1233: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5690672397613525
    2. '           ' → logprob: -0.9440672397613525
    3. '            ' → logprob: -3.6940672397613525
    4. ' return' → logprob: -5.319067001342773
    5. '                ' → logprob: -5.444067001342773
    6. 'dist' → logprob: -6.694067001342773
    7. '       ' → logprob: -6.944067001342773
    8. '              ' → logprob: -7.069067001342773
    9. 'return' → logprob: -7.069067001342773
    10. '                   ' → logprob: -7.194067001342773

Token 1234: ' #' (ID: 1069)
  Prédit: 'boost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'boost' → logprob: -0.859308660030365
    2. 'return' → logprob: -1.9843087196350098
    3. 'dist' → logprob: -2.1093087196350098
    4. 'time' → logprob: -2.2343087196350098
    5. '(boost' → logprob: -3.2343087196350098
    6. 'remaining' → logprob: -3.6093087196350098
    7. ' (' → logprob: -3.8593087196350098
    8. 'rest' → logprob: -4.10930871963501
    9. ' return' → logprob: -4.10930871963501
    10. ' time' → logprob: -4.23430871963501

Token 1235: ' part' (ID: 997)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.7910923361778259
    2. 'boost' → logprob: -2.5410923957824707
    3. 'distance' → logprob: -2.6660923957824707
    4. 'remaining' → logprob: -2.9160923957824707
    5. '(dist' → logprob: -2.9160923957824707
    6. 'time' → logprob: -3.0410923957824707
    7. '(distance' → logprob: -3.0410923957824707
    8. ' (' → logprob: -3.4160923957824707
    9. '(' → logprob: -3.5410923957824707
    10. '(boost' → logprob: -3.6660923957824707

Token 1236: ' boost' (ID: 12110)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.40751826763153076
    2. '_in' → logprob: -1.9075182676315308
    3. '_distance' → logprob: -2.6575183868408203
    4. '_dist' → logprob: -3.5325183868408203
    5. '_of' → logprob: -3.6575183868408203
    6. '_to' → logprob: -4.28251838684082
    7. '_time' → logprob: -4.53251838684082
    8. 'distance' → logprob: -4.78251838684082
    9. ' =' → logprob: -5.53251838684082
    10. 'dist' → logprob: -5.65751838684082

Token 1237: ' speed' (ID: 7733)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.22350838780403137
    2. '_distance' → logprob: -2.223508358001709
    3. '_dist' → logprob: -3.223508358001709
    4. 'time' → logprob: -4.348508358001709
    5. 'dist' → logprob: -4.473508358001709
    6. ' =' → logprob: -4.473508358001709
    7. 'distance' → logprob: -4.598508358001709
    8. '=' → logprob: -6.348508358001709
    9. '_duration' → logprob: -6.598508358001709
    10. '_' → logprob: -7.098508358001709

Token 1238: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6793649196624756
    2. ' +' → logprob: -1.8043649196624756
    3. '               ' → logprob: -2.0543649196624756
    4. ' =' → logprob: -3.5543649196624756
    5. ' return' → logprob: -3.5543649196624756
    6. ' and' → logprob: -3.6793649196624756
    7. 'return' → logprob: -4.304365158081055
    8. '           ' → logprob: -4.429365158081055
    9. '+' → logprob: -4.554365158081055
    10. '
' → logprob: -4.929365158081055

Token 1239: ' part' (ID: 997)
  Prédit: '(distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(distance' → logprob: -0.8534356951713562
    2. ' (' → logprob: -1.353435754776001
    3. 'return' → logprob: -2.603435754776001
    4. ' rest' → logprob: -2.978435754776001
    5. ' return' → logprob: -3.103435754776001
    6. '(dist' → logprob: -3.353435754776001
    7. '(boost' → logprob: -4.103435516357422
    8. 'distance' → logprob: -4.103435516357422
    9. '(rest' → logprob: -4.478435516357422
    10. 'rest' → logprob: -4.603435516357422

Token 1240: ' normal' (ID: 6078)
  Prédit: '(distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(distance' → logprob: -0.11347201466560364
    2. 'distance' → logprob: -2.4884719848632812
    3. '((' → logprob: -4.863471984863281
    4. ' distance' → logprob: -5.363471984863281
    5. ' (' → logprob: -5.613471984863281
    6. '(self' → logprob: -5.738471984863281
    7. 'boost' → logprob: -6.363471984863281
    8. 'self' → logprob: -7.238471984863281
    9. '(
' → logprob: -7.738471984863281
    10. '
' → logprob: -8.238471984863281

Token 1241: ' speed' (ID: 7733)
  Prédit: 'speed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'speed' → logprob: -0.17367766797542572
    2. '_speed' → logprob: -2.298677682876587
    3. ' speed' → logprob: -3.923677682876587
    4. 'distance' → logprob: -3.923677682876587
    5. 'dist' → logprob: -5.048677444458008
    6. '_distance' → logprob: -6.048677444458008
    7. 'time' → logprob: -6.298677444458008
    8. 'return' → logprob: -6.423677444458008
    9. '_dist' → logprob: -6.548677444458008
    10. '
' → logprob: -6.548677444458008

Token 1242: '
' (ID: 198)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -1.8070615530014038
    2. ' /' → logprob: -1.9320615530014038
    3. '               ' → logprob: -1.9320615530014038
    4. ')' → logprob: -2.3070616722106934
    5. '           ' → logprob: -2.3070616722106934
    6. '
' → logprob: -2.4320616722106934
    7. 'return' → logprob: -3.4320616722106934
    8. ':' → logprob: -3.5570616722106934
    9. ' return' → logprob: -3.5570616722106934
    10. ':
' → logprob: -3.9320616722106934

Token 1243: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.712440013885498
    2. ' return' → logprob: -0.712440013885498
    3. 'return' → logprob: -4.337440013885498
    4. '           ' → logprob: -5.837440013885498
    5. ' 
' → logprob: -7.337440013885498
    6. '                   ' → logprob: -7.962440013885498
    7. '       ' → logprob: -8.087440490722656
    8. ' =' → logprob: -8.212440490722656
    9. '```' → logprob: -8.212440490722656
    10. '
' → logprob: -8.712440490722656

Token 1244: ' remainder' (ID: 47056)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.3229416608810425
    2. 'dist' → logprob: -2.697941780090332
    3. 'boost' → logprob: -2.947941780090332
    4. 'remaining' → logprob: -3.322941780090332
    5. 'return' → logprob: -3.822941780090332
    6. 't' → logprob: -3.947941780090332
    7. 'rem' → logprob: -4.197941780090332
    8. 'remain' → logprob: -4.572941780090332
    9. 'rest' → logprob: -4.697941780090332
    10. 'segment' → logprob: -4.822941780090332

Token 1245: ' =' (ID: 314)
  Prédit: '_dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.23403021693229675
    2. '_distance' → logprob: -1.7340302467346191
    3. ' =' → logprob: -4.109030246734619
    4. '_time' → logprob: -4.859030246734619
    5. 'dist' → logprob: -5.484030246734619
    6. '=' → logprob: -5.984030246734619
    7. '/' → logprob: -7.609030246734619
    8. ' /' → logprob: -8.234029769897461
    9. 'distance' → logprob: -9.109029769897461
    10. '_duration' → logprob: -9.359029769897461

Token 1246: ' distance' (ID: 9324)
  Prédit: '(distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(distance' → logprob: -0.20175479352474213
    2. 'distance' → logprob: -1.7017548084259033
    3. ' (' → logprob: -8.701754570007324
    4. '   ' → logprob: -9.826754570007324
    5. ' distance' → logprob: -10.076754570007324
    6. '(' → logprob: -11.201754570007324
    7. '(dist' → logprob: -11.326754570007324
    8. '(d' → logprob: -11.326754570007324
    9. 'dist' → logprob: -11.451754570007324
    10. '(duration' → logprob: -13.326754570007324

Token 1247: ' -' (ID: 533)
  Prédit: ' /'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.3149057924747467
    2. '/' → logprob: -1.3149057626724243
    3. ' -' → logprob: -7.314905643463135
    4. '-' → logprob: -7.814905643463135
    5. '               ' → logprob: -7.814905643463135
    6. '                   ' → logprob: -10.439906120300293
    7. '           ' → logprob: -10.564906120300293
    8. '
' → logprob: -11.189906120300293
    9. '/self' → logprob: -11.689906120300293
    10. 's' → logprob: -12.064906120300293

Token 1248: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.775028645992279
    2. 'boost' → logprob: -1.1500287055969238
    3. 'self' → logprob: -1.6500287055969238
    4. '(self' → logprob: -4.025028705596924
    5. '(boost' → logprob: -5.025028705596924
    6. '(dist' → logprob: -5.150028705596924
    7. 'speed' → logprob: -9.650028228759766
    8. ' dist' → logprob: -9.900028228759766
    9. '(' → logprob: -9.900028228759766
    10. ' self' → logprob: -10.150028228759766

Token 1249: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -0.0003305784775875509
    2. 'in' → logprob: -9.000330924987793
    3. 'ist' → logprob: -9.250330924987793
    4. 'dist' → logprob: -9.625330924987793
    5. 'boost' → logprob: -11.000330924987793
    6. '(dist' → logprob: -12.000330924987793
    7. 'rem' → logprob: -12.625330924987793
    8. 'ain' → logprob: -12.750330924987793
    9. 'ues' → logprob: -13.000330924987793
    10. 'ue' → logprob: -13.500330924987793

Token 1250: '_bo' (ID: 104368)
  Prédit: 'boost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'boost' → logprob: -0.0007388730882667005
    2. '_bo' → logprob: -7.750739097595215
    3. '(boost' → logprob: -9.000739097595215
    4. 'dist' → logprob: -9.000739097595215
    5. 'self' → logprob: -10.250739097595215
    6. 'bo' → logprob: -12.375739097595215
    7. '
' → logprob: -12.500739097595215
    8. ' boost' → logprob: -13.000739097595215
    9. '_dist' → logprob: -13.000739097595215
    10. '(self' → logprob: -13.125739097595215

Token 1251: 'ost' (ID: 564)
  Prédit: 'ost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ost' → logprob: -0.0007181499968282878
    2. 'o' → logprob: -7.875718116760254
    3. '
' → logprob: -9.500718116760254
    4. 'st' → logprob: -9.500718116760254
    5. 'ot' → logprob: -10.875718116760254
    6. '=' → logprob: -10.875718116760254
    7. 'ast' → logprob: -11.375718116760254
    8. 'ust' → logprob: -11.375718116760254
    9. '{' → logprob: -11.750718116760254
    10. 'ост' → logprob: -12.000718116760254

Token 1252: '
' (ID: 198)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.18619157373905182
    2. ' /' → logprob: -1.8111915588378906
    3. '/
' → logprob: -5.436191558837891
    4. ')' → logprob: -7.061191558837891
    5. ' /
' → logprob: -7.436191558837891
    6. '
' → logprob: -8.06119155883789
    7. '/
/' → logprob: -9.18619155883789
    8. ')/' → logprob: -9.43619155883789
    9. '/self' → logprob: -10.31119155883789
    10. 'return' → logprob: -11.06119155883789

Token 1253: '               ' (ID: 506)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.38176485896110535
    2. 'return' → logprob: -1.3817648887634277
    3. '               ' → logprob: -3.0067648887634277
    4. ' 
' → logprob: -5.006764888763428
    5. '           ' → logprob: -5.756764888763428
    6. '
' → logprob: -5.881764888763428
    7. '```' → logprob: -7.381764888763428
    8. '	return' → logprob: -8.00676441192627
    9. ' /' → logprob: -8.00676441192627
    10. ')' → logprob: -8.13176441192627

Token 1254: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0008178464486263692
    2. ' return' → logprob: -7.250817775726318
    3. 'boost' → logprob: -9.250818252563477
    4. '               ' → logprob: -12.000818252563477
    5. '{return' → logprob: -14.000818252563477
    6. '(boost' → logprob: -14.250818252563477
    7. '(return' → logprob: -14.500818252563477
    8. '
' → logprob: -14.625818252563477
    9. 'self' → logprob: -14.875818252563477
    10. 'ret' → logprob: -14.875818252563477

Token 1255: ' boost' (ID: 12110)
  Prédit: 'boost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'boost' → logprob: -0.0026890865992754698
    2. '(boost' → logprob: -6.002688884735107
    3. ' boost' → logprob: -8.752689361572266
    4. '(' → logprob: -10.252689361572266
    5. '   ' → logprob: -11.502689361572266
    6. '	boost' → logprob: -12.752689361572266
    7. 'bo' → logprob: -12.877689361572266
    8. ' (' → logprob: -14.502689361572266
    9. 'Boost' → logprob: -14.752689361572266
    10. '_bo' → logprob: -15.002689361572266

Token 1256: '_rem' (ID: 42194)
  Prédit: '_rem'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rem' → logprob: -6.718606891809031e-05
    2. 'remain' → logprob: -10.000066757202148
    3. '_remaining' → logprob: -11.500066757202148
    4. 'rem' → logprob: -11.500066757202148
    5. 'Rem' → logprob: -14.875066757202148
    6. '/' → logprob: -15.125066757202148
    7. '
' → logprob: -15.500066757202148
    8. '_re' → logprob: -16.00006675720215
    9. 'remaining' → logprob: -16.12506675720215
    10. '\' → logprob: -16.62506675720215

Token 1257: 'ain' (ID: 524)
  Prédit: 'ain'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ain' → logprob: -0.0004481885116547346
    2. 'a' → logprob: -8.000448226928711
    3. '_time' → logprob: -11.375448226928711
    4. 'an' → logprob: -12.000448226928711
    5. 'and' → logprob: -12.000448226928711
    6. '
' → logprob: -12.125448226928711
    7. '__' → logprob: -12.250448226928711
    8. 'def' → logprob: -12.250448226928711
    9. '_to' → logprob: -12.375448226928711
    10. '[' → logprob: -12.375448226928711

Token 1258: ' +' (ID: 659)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.03908950835466385
    2. ' /' → logprob: -3.2890894412994385
    3. '+' → logprob: -7.039089679718018
    4. ' +' → logprob: -8.78908920288086
    5. '*' → logprob: -11.41408920288086
    6. '/self' → logprob: -12.16408920288086
    7. ' *' → logprob: -14.78908920288086
    8. ' ' → logprob: -14.91408920288086
    9. '/(' → logprob: -14.91408920288086
    10. ' ' → logprob: -16.03908920288086

Token 1259: ' remainder' (ID: 47056)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.0045120082795619965
    2. '(re' → logprob: -5.879511833190918
    3. ' remainder' → logprob: -6.379511833190918
    4. '(' → logprob: -12.879511833190918
    5. 'rest' → logprob: -13.004511833190918
    6. 'r' → logprob: -13.254511833190918
    7. '   ' → logprob: -14.129511833190918
    8. ' (' → logprob: -14.129511833190918
    9. 'rema' → logprob: -14.254511833190918
    10. '	re' → logprob: -15.129511833190918

Token 1260: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.4741024076938629
    2. '/' → logprob: -0.9741023778915405
    3. '/self' → logprob: -10.974102020263672
    4. ' ' → logprob: -11.974102020263672
    5. ' /
' → logprob: -14.474102020263672
    6. '```' → logprob: -14.724102020263672
    7. '*' → logprob: -15.724102020263672
    8. '/
' → logprob: -15.974102020263672
    9. 'self' → logprob: -16.599102020263672
    10. '
' → logprob: -16.724102020263672

Token 1261: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -2.7729658540920354e-05
    2. ' self' → logprob: -10.500027656555176
    3. '(self' → logprob: -16.750028610229492
    4. '           ' → logprob: -19.000028610229492
    5. '=self' → logprob: -19.875028610229492
    6. '	self' → logprob: -20.000028610229492
    7. '[self' → logprob: -20.250028610229492
    8. '   ' → logprob: -20.500028610229492
    9. '               ' → logprob: -20.625028610229492
    10. '
' → logprob: -20.875028610229492

Token 1262: '.speed' (ID: 54856)
  Prédit: '.speed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.speed' → logprob: -0.12696243822574615
    2. 'speed' → logprob: -2.126962423324585
    3. 'self' → logprob: -10.376962661743164
    4. '	speed' → logprob: -13.001962661743164
    5. ' speed' → logprob: -15.376962661743164
    6. '.self' → logprob: -15.626962661743164
    7. 'peed' → logprob: -15.876962661743164
    8. '速度' → logprob: -16.001962661743164
    9. '(speed' → logprob: -16.001962661743164
    10. '_speed' → logprob: -17.001962661743164

Token 1263: '_model' (ID: 10928)
  Prédit: '_model'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_model' → logprob: -0.0012291580205783248
    2. 'model' → logprob: -6.876229286193848
    3. '_MODEL' → logprob: -9.626229286193848
    4. 'odel' → logprob: -10.001229286193848
    5. '.model' → logprob: -10.001229286193848
    6. 'Model' → logprob: -10.501229286193848
    7. '.' → logprob: -13.376229286193848
    8. '-model' → logprob: -13.501229286193848
    9. '	model' → logprob: -13.626229286193848
    10. '._' → logprob: -13.876229286193848

Token 1264: '.U' (ID: 13234)
  Prédit: '.U'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.U' → logprob: -0.026453444734215736
    2. 'U' → logprob: -3.6514534950256348
    3. '	U' → logprob: -9.026453018188477
    4. '<U' → logprob: -12.151453018188477
    5. '```' → logprob: -12.151453018188477
    6. '_U' → logprob: -12.401453018188477
    7. ''U' → logprob: -12.526453018188477
    8. ' U' → logprob: -12.901453018188477
    9. '.' → logprob: -13.151453018188477
    10. '   ' → logprob: -13.401453018188477

Token 1265: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1266: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0829332172870636
    2. '       ' → logprob: -2.582933187484741
    3. '<|end|>' → logprob: -6.95793342590332
    4. ':' → logprob: -7.08293342590332
    5. '```' → logprob: -8.33293342590332
    6. ',' → logprob: -8.33293342590332
    7. '   ' → logprob: -8.45793342590332
    8. '
' → logprob: -8.45793342590332
    9. '=' → logprob: -8.45793342590332
    10. '           ' → logprob: -9.08293342590332

Token 1267: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013847064226865768
    2. '+' → logprob: -5.5138468742370605
    3. ')' → logprob: -6.1388468742370605
    4. '
' → logprob: -6.2638468742370605
    5. '        
' → logprob: -6.6388468742370605
    6. '' → logprob: -7.0138468742370605
    7. ',' → logprob: -7.1388468742370605
    8. '```' → logprob: -7.6388468742370605
    9. ' ' → logprob: -8.638847351074219
    10. 'return' → logprob: -8.763847351074219

Token 1268: ' ' (ID: 220)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.740441620349884
    2. 'time' → logprob: -0.740441620349884
    3. 'run' → logprob: -3.9904415607452393
    4. '       ' → logprob: -4.615441799163818
    5. 'segment' → logprob: -4.740441799163818
    6. 'travel' → logprob: -4.865441799163818
    7. 'times' → logprob: -7.490441799163818
    8. 'try' → logprob: -8.49044132232666
    9. 'seg' → logprob: -9.36544132232666
    10. 'min' → logprob: -9.49044132232666

Token 1269: '1' (ID: 16)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.26631298661231995
    2. '#' → logprob: -1.8913129568099976
    3. 'segment' → logprob: -3.391313076019287
    4. 'times' → logprob: -4.266313076019287
    5. 'run' → logprob: -4.266313076019287
    6. '       ' → logprob: -4.766313076019287
    7. 'travel' → logprob: -4.766313076019287
    8. 'for' → logprob: -6.266313076019287
    9. 'seg' → logprob: -7.516313076019287
    10. 'distance' → logprob: -8.016312599182129

Token 1270: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3535623252391815
    2. '_time' → logprob: -1.603562355041504
    3. '#' → logprob: -3.728562355041504
    4. '_segment' → logprob: -4.103562355041504
    5. 'segment' → logprob: -4.228562355041504
    6. 'time' → logprob: -4.353562355041504
    7. '.' → logprob: -4.603562355041504
    8. '_action' → logprob: -4.978562355041504
    9. '_run' → logprob: -5.603562355041504
    10. '_distance' → logprob: -6.603562355041504

Token 1271: ' Eat' (ID: 60629)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.4574391543865204
    2. '#' → logprob: -1.5824391841888428
    3. 'run' → logprob: -1.9574391841888428
    4. 'travel' → logprob: -4.582438945770264
    5. 'segment' → logprob: -4.832438945770264
    6. 't' → logprob: -7.332438945770264
    7. 'try' → logprob: -7.457438945770264
    8. 'seg' → logprob: -8.207439422607422
    9. '       ' → logprob: -8.957439422607422
    10. '   ' → logprob: -9.207439422607422

Token 1272: ' carrot' (ID: 121234)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.005208620801568031
    2. '_at' → logprob: -6.380208492279053
    3. 'time' → logprob: -6.380208492279053
    4. '_segment' → logprob: -6.755208492279053
    5. ':' → logprob: -9.005208969116211
    6. ' =' → logprob: -9.255208969116211
    7. '=' → logprob: -9.380208969116211
    8. 'segment' → logprob: -9.880208969116211
    9. '   ' → logprob: -10.255208969116211
    10. '_distance' → logprob: -10.255208969116211

Token 1273: ' immediately' (ID: 10731)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.041443731635808945
    2. '_at' → logprob: -3.4164438247680664
    3. ' =' → logprob: -6.041443824768066
    4. '=' → logprob: -6.666443824768066
    5. '       ' → logprob: -7.166443824768066
    6. '
' → logprob: -7.166443824768066
    7. '_segment' → logprob: -7.666443824768066
    8. 'time' → logprob: -7.791443824768066
    9. '_' → logprob: -8.541443824768066
    10. 'if' → logprob: -8.791443824768066

Token 1274: ' at' (ID: 540)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5362188220024109
    2. 'time' → logprob: -1.1612188816070557
    3. '
' → logprob: -2.7862188816070557
    4. '_time' → logprob: -4.036218643188477
    5. 'segment' → logprob: -4.536218643188477
    6. 'travel' → logprob: -6.161218643188477
    7. ' time' → logprob: -6.661218643188477
    8. '#' → logprob: -7.036218643188477
    9. ':' → logprob: -7.036218643188477
    10. '_segment' → logprob: -7.286218643188477

Token 1275: ' end' (ID: 1268)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.018275313079357147
    2. 'this' → logprob: -5.143275260925293
    3. ' idx' → logprob: -5.268275260925293
    4. 'the' → logprob: -5.268275260925293
    5. 'segment' → logprob: -7.018275260925293
    6. 'end' → logprob: -8.143275260925293
    7. ' this' → logprob: -8.768275260925293
    8. 'self' → logprob: -8.893275260925293
    9. ' the' → logprob: -9.143275260925293
    10. '0' → logprob: -9.393275260925293

Token 1276: ' of' (ID: 328)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.11293038725852966
    2. 'time' → logprob: -2.9879302978515625
    3. '       ' → logprob: -3.9879302978515625
    4. ' =' → logprob: -4.3629302978515625
    5. '=' → logprob: -4.9879302978515625
    6. '_segment' → logprob: -5.3629302978515625
    7. 'segment' → logprob: -5.8629302978515625
    8. '_' → logprob: -5.8629302978515625
    9. '_of' → logprob: -6.9879302978515625
    10. '_run' → logprob: -6.9879302978515625

Token 1277: ' this' (ID: 495)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.0006130746915005147
    2. ' segment' → logprob: -7.625613212585449
    3. 'this' → logprob: -10.00061321258545
    4. 'self' → logprob: -11.00061321258545
    5. 'the' → logprob: -11.12561321258545
    6. '(segment' → logprob: -11.62561321258545
    7. 'def' → logprob: -11.87561321258545
    8. '
' → logprob: -11.87561321258545
    9. '#' → logprob: -12.37561321258545
    10. '_segment' → logprob: -12.62561321258545

Token 1278: ' segment' (ID: 14806)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.08316788077354431
    2. ' segment' → logprob: -2.583167791366577
    3. ')' → logprob: -6.208168029785156
    4. '_' → logprob: -7.208168029785156
    5. '_segment' → logprob: -7.208168029785156
    6. '.segment' → logprob: -8.833168029785156
    7. '(segment' → logprob: -8.958168029785156
    8. ' )' → logprob: -9.583168029785156
    9. 'position' → logprob: -9.583168029785156
    10. ']' → logprob: -10.083168029785156

Token 1279: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4827670454978943
    2. '
' → logprob: -1.107767105102539
    3. 'time' → logprob: -4.232767105102539
    4. ':' → logprob: -4.482767105102539
    5. '_time' → logprob: -4.857767105102539
    6. ',' → logprob: -5.107767105102539
    7. ':
' → logprob: -5.732767105102539
    8. ' time' → logprob: -5.732767105102539
    9. '        
' → logprob: -6.107767105102539
    10. '#' → logprob: -7.732767105102539

Token 1280: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2068548947572708
    2. ':' → logprob: -2.081854820251465
    3. ',' → logprob: -4.706854820251465
    4. '        
' → logprob: -4.706854820251465
    5. ')' → logprob: -4.831854820251465
    6. ' =' → logprob: -5.081854820251465
    7. '(' → logprob: -5.206854820251465
    8. '
' → logprob: -5.331854820251465
    9. '=' → logprob: -5.706854820251465
    10. ':
' → logprob: -5.831854820251465

Token 1281: ' #' (ID: 1069)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.5233657956123352
    2. '       ' → logprob: -1.0233657360076904
    3. 'segment' → logprob: -3.7733657360076904
    4. 'travel' → logprob: -4.3983659744262695
    5. 'run' → logprob: -4.7733659744262695
    6. 't' → logprob: -6.5233659744262695
    7. ' time' → logprob: -7.0233659744262695
    8. 'seg' → logprob: -7.3983659744262695
    9. '_time' → logprob: -8.77336597442627
    10. '
' → logprob: -8.77336597442627

Token 1282: ' Check' (ID: 6208)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.11824331432580948
    2. 'travel' → logprob: -2.6182432174682617
    3. 'run' → logprob: -3.9932432174682617
    4. 'segment' → logprob: -4.743243217468262
    5. '       ' → logprob: -4.743243217468262
    6. 't' → logprob: -6.993243217468262
    7. 'seg' → logprob: -7.493243217468262
    8. 'eat' → logprob: -8.743243217468262
    9. 'curr' → logprob: -8.993243217468262
    10. '#' → logprob: -9.118243217468262

Token 1283: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3050166368484497
    2. 'True' → logprob: -1.5550166368484497
    3. 'self' → logprob: -3.30501651763916
    4. 'car' → logprob: -4.68001651763916
    5. ' True' → logprob: -6.18001651763916
    6. ' if' → logprob: -6.55501651763916
    7. 'time' → logprob: -7.93001651763916
    8. '(True' → logprob: -8.18001651763916
    9. ' carrots' → logprob: -8.30501651763916
    10. 'idx' → logprob: -9.05501651763916

Token 1284: ' we' (ID: 581)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.6689605712890625
    2. 'self' → logprob: -0.7939605712890625
    3. 'True' → logprob: -3.4189605712890625
    4. ' carrots' → logprob: -7.2939605712890625
    5. 'not' → logprob: -7.5439605712890625
    6. '(self' → logprob: -8.043960571289062
    7. 'cars' → logprob: -8.418960571289062
    8. 'dist' → logprob: -8.793960571289062
    9. '(True' → logprob: -8.793960571289062
    10. '1' → logprob: -9.043960571289062

Token 1285: ' have' (ID: 679)
  Prédit: '.storage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.storage' → logprob: -0.3693191707134247
    2. '.can' → logprob: -2.244319200515747
    3. 'can' → logprob: -2.369319200515747
    4. '.car' → logprob: -3.744319200515747
    5. 'car' → logprob: -3.744319200515747
    6. 'storage' → logprob: -4.244318962097168
    7. 'have' → logprob: -4.369318962097168
    8. ' can' → logprob: -4.619318962097168
    9. '.' → logprob: -4.869318962097168
    10. '.speed' → logprob: -5.619318962097168

Token 1286: ' carrot' (ID: 121234)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.00563829718157649
    2. ' carrots' → logprob: -6.380638122558594
    3. 'self' → logprob: -6.630638122558594
    4. '(' → logprob: -6.880638122558594
    5. '1' → logprob: -7.880638122558594
    6. '0' → logprob: -8.130638122558594
    7. '(car' → logprob: -8.380638122558594
    8. 'True' → logprob: -8.505638122558594
    9. '(c' → logprob: -9.130638122558594
    10. '(self' → logprob: -9.380638122558594

Token 1287: ' in' (ID: 306)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00022523177904076874
    2. '_car' → logprob: -9.375225067138672
    3. '_in' → logprob: -10.500225067138672
    4. 'car' → logprob: -10.500225067138672
    5. '_s' → logprob: -10.750225067138672
    6. 'Car' → logprob: -12.000225067138672
    7. ' s' → logprob: -12.375225067138672
    8. '_' → logprob: -12.375225067138672
    9. '_c' → logprob: -12.500225067138672
    10. 'In' → logprob: -12.500225067138672

Token 1288: ' storage' (ID: 7928)
  Prédit: 'storage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'storage' → logprob: -0.016710195690393448
    2. 'car' → logprob: -4.26671028137207
    3. 'self' → logprob: -6.14171028137207
    4. ' storage' → logprob: -8.39171028137207
    5. 'store' → logprob: -10.14171028137207
    6. '_storage' → logprob: -10.51671028137207
    7. 'stor' → logprob: -11.14171028137207
    8. 'stock' → logprob: -11.64171028137207
    9. '(storage' → logprob: -11.76671028137207
    10. '[' → logprob: -11.89171028137207

Token 1289: ' or' (ID: 503)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.3509497046470642
    2. ' or' → logprob: -1.600949764251709
    3. 'and' → logprob: -2.475949764251709
    4. ' if' → logprob: -4.975949764251709
    5. 'or' → logprob: -6.600949764251709
    6. ':' → logprob: -7.350949764251709
    7. ' ' → logprob: -8.35094928741455
    8. 'if' → logprob: -8.35094928741455
    9. '           ' → logprob: -8.85094928741455
    10. '       ' → logprob: -8.97594928741455

Token 1290: ' we' (ID: 581)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.9760890603065491
    2. ' carrots' → logprob: -1.3510890007019043
    3. 'car' → logprob: -2.2260890007019043
    4. 'True' → logprob: -2.9760890007019043
    5. ' self' → logprob: -3.4760890007019043
    6. '(self' → logprob: -3.4760890007019043
    7. 'idx' → logprob: -3.6010890007019043
    8. '1' → logprob: -4.226089000701904
    9. '(True' → logprob: -4.351089000701904
    10. '(' → logprob: -4.351089000701904

Token 1291: ' pick' (ID: 5230)
  Prédit: '.can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.can' → logprob: -1.247916579246521
    2. 'car' → logprob: -1.497916579246521
    3. 'can' → logprob: -1.497916579246521
    4. '.car' → logprob: -1.747916579246521
    5. ' can' → logprob: -3.1229166984558105
    6. 'have' → logprob: -4.2479166984558105
    7. '.' → logprob: -4.3729166984558105
    8. '.storage' → logprob: -4.7479166984558105
    9. '.have' → logprob: -6.1229166984558105
    10. '.c' → logprob: -6.3729166984558105

Token 1292: ' it' (ID: 480)
  Prédit: 'up'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'up' → logprob: -0.3832113742828369
    2. ' up' → logprob: -1.883211374282837
    3. '_up' → logprob: -2.258211374282837
    4. '_' → logprob: -4.008211135864258
    5. ' it' → logprob: -4.383211135864258
    6. 'it' → logprob: -5.133211135864258
    7. '()' → logprob: -5.508211135864258
    8. 'im' → logprob: -5.758211135864258
    9. ' this' → logprob: -5.883211135864258
    10. '_this' → logprob: -6.008211135864258

Token 1293: ' and' (ID: 326)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.013916015625
    2. ' or' → logprob: -1.638916015625
    3. 'from' → logprob: -1.763916015625
    4. ' at' → logprob: -3.013916015625
    5. ' up' → logprob: -3.138916015625
    6. 'or' → logprob: -3.388916015625
    7. ':' → logprob: -3.638916015625
    8. '+' → logprob: -3.763916015625
    9. ' =' → logprob: -4.388916015625
    10. '=True' → logprob: -4.388916015625

Token 1294: ' immediately' (ID: 10731)
  Prédit: 'eat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'eat' → logprob: -0.08593159168958664
    2. 'use' → logprob: -2.9609315395355225
    3. 'do' → logprob: -4.585931777954102
    4. 'don't' → logprob: -5.210931777954102
    5. 'store' → logprob: -5.335931777954102
    6. 'not' → logprob: -5.710931777954102
    7. 'consume' → logprob: -5.960931777954102
    8. ' eat' → logprob: -6.960931777954102
    9. 'im' → logprob: -7.460931777954102
    10. 'can' → logprob: -7.585931777954102

Token 1295: ' eat' (ID: 11237)
  Prédit: 'eat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eat' → logprob: -0.01610264740884304
    2. 'use' → logprob: -4.2661027908325195
    3. 'consume' → logprob: -6.8911027908325195
    4. ' eat' → logprob: -7.1411027908325195
    5. 'store' → logprob: -9.64110279083252
    6. ' use' → logprob: -10.39110279083252
    7. 'e' → logprob: -11.51610279083252
    8. ' consume' → logprob: -11.76610279083252
    9. 'forget' → logprob: -13.26610279083252
    10. 'get' → logprob: -13.76610279083252

Token 1296: '.' (ID: 13)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2676059603691101
    2. '():' → logprob: -1.7676060199737549
    3. '():
' → logprob: -3.267606019973755
    4. ' if' → logprob: -5.017605781555176
    5. ':
' → logprob: -5.517605781555176
    6. '.' → logprob: -5.517605781555176
    7. '       ' → logprob: -5.892605781555176
    8. ' at' → logprob: -6.392605781555176
    9. '()' → logprob: -6.642605781555176
    10. ' and' → logprob: -6.642605781555176

Token 1297: ' Since' (ID: 12265)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7240102291107178
    2. '       ' → logprob: -0.8490102291107178
    3. 'if' → logprob: -2.5990102291107178
    4. '        
' → logprob: -6.099010467529297
    5. '
' → logprob: -6.224010467529297
    6. ' 
' → logprob: -6.474010467529297
    7. 'If' → logprob: -6.599010467529297
    8. ',' → logprob: -6.724010467529297
    9. ':' → logprob: -7.599010467529297
    10. ')' → logprob: -7.724010467529297

Token 1298: ' picking' (ID: 30859)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.9274351000785828
    2. 'self' → logprob: -1.1774351596832275
    3. 'True' → logprob: -1.3024351596832275
    4. 'idx' → logprob: -4.677434921264648
    5. '1' → logprob: -6.052434921264648
    6. 'dist' → logprob: -6.177434921264648
    7. 'not' → logprob: -6.177434921264648
    8. '(True' → logprob: -6.302434921264648
    9. ' carrots' → logprob: -6.802434921264648
    10. '(self' → logprob: -6.927434921264648

Token 1299: ' is' (ID: 382)
  Prédit: ' up'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' up' → logprob: -0.8367957472801208
    2. ' the' → logprob: -1.9617958068847656
    3. ' this' → logprob: -1.9617958068847656
    4. 'the' → logprob: -2.5867958068847656
    5. 'this' → logprob: -2.9617958068847656
    6. ' a' → logprob: -3.5867958068847656
    7. ' and' → logprob: -3.7117958068847656
    8. 'and' → logprob: -3.8367958068847656
    9. 'up' → logprob: -3.8367958068847656
    10. ' it' → logprob: -4.086795806884766

Token 1300: ' instantaneous' (ID: 168555)
  Prédit: 'im'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'im' → logprob: -1.1257191896438599
    2. 'at' → logprob: -1.5007191896438599
    3. 'implicit' → logprob: -2.0007190704345703
    4. ' at' → logprob: -2.3757190704345703
    5. 'always' → logprob: -3.2507190704345703
    6. 'from' → logprob: -3.2507190704345703
    7. 'possible' → logprob: -3.3757190704345703
    8. 'allowed' → logprob: -3.6257190704345703
    9. 'free' → logprob: -4.00071907043457
    10. ' implicit' → logprob: -4.75071907043457

Token 1301: ' and' (ID: 326)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03292815387248993
    2. ' and' → logprob: -3.782928228378296
    3. ' at' → logprob: -6.157927989959717
    4. 'and' → logprob: -6.407927989959717
    5. '.' → logprob: -6.532927989959717
    6. '<|end|>' → logprob: -6.532927989959717
    7. ' ,' → logprob: -7.032927989959717
    8. ',
' → logprob: -7.282927989959717
    9. ')' → logprob: -8.032928466796875
    10. '<|end|>' → logprob: -8.407928466796875

Token 1302: ' no' (ID: 860)
  Prédit: 'free'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'free' → logprob: -1.2830363512039185
    2. 'no' → logprob: -1.4080363512039185
    3. '0' → logprob: -1.7830363512039185
    4. 'does' → logprob: -2.533036231994629
    5. 'we' → logprob: -2.908036231994629
    6. 'storage' → logprob: -3.408036231994629
    7. 'car' → logprob: -3.533036231994629
    8. 'always' → logprob: -3.783036231994629
    9. 'possible' → logprob: -4.283036231994629
    10. ' no' → logprob: -4.533036231994629

Token 1303: ' penalty' (ID: 34689)
  Prédit: 'storage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'storage' → logprob: -0.8278980851173401
    2. 'need' → logprob: -1.9528980255126953
    3. 'car' → logprob: -1.9528980255126953
    4. ' need' → logprob: -2.4528980255126953
    5. 'time' → logprob: -2.5778980255126953
    6. 'store' → logprob: -3.5778980255126953
    7. ' storage' → logprob: -3.8278980255126953
    8. 'space' → logprob: -4.702898025512695
    9. 'carry' → logprob: -4.827898025512695
    10. 'extra' → logprob: -5.327898025512695

Token 1304: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.013439380563795567
    2. '.' → logprob: -5.763439178466797
    3. ':' → logprob: -6.013439178466797
    4. ')' → logprob: -6.388439178466797
    5. ',
' → logprob: -6.763439178466797
    6. ' for' → logprob: -6.888439178466797
    7. '<|end|>' → logprob: -7.263439178466797
    8. '<|end|>' → logprob: -7.513439178466797
    9. '),' → logprob: -8.013439178466797
    10. ' ,' → logprob: -8.013439178466797

Token 1305: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5878686308860779
    2. ' we' → logprob: -1.2128686904907227
    3. 'we' → logprob: -3.2128686904907227
    4. '           ' → logprob: -3.3378686904907227
    5. ':' → logprob: -3.8378686904907227
    6. '#' → logprob: -4.587868690490723
    7. ')' → logprob: -4.962868690490723
    8. ',' → logprob: -4.962868690490723
    9. ' the' → logprob: -5.712868690490723
    10. ' if' → logprob: -6.087868690490723

Token 1306: ' #' (ID: 1069)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12403233349323273
    2. '#' (adapté à ' #') → logprob: -2.9990322589874268
    3. ' we' → logprob: -3.7490322589874268
    4. 'we' → logprob: -4.499032497406006
    5. '       ' → logprob: -4.749032497406006
    6. ' ' → logprob: -5.249032497406006
    7. '           ' → logprob: -5.499032497406006
    8. ' 
' → logprob: -5.999032497406006
    9. ' )' → logprob: -6.999032497406006
    10. '
' → logprob: -7.374032497406006

Token 1307: ' Actually' (ID: 50557)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.046565648168325424
    2. 'we' → logprob: -3.296565532684326
    3. '       ' → logprob: -6.046565532684326
    4. 'min' → logprob: -6.546565532684326
    5. 'if' → logprob: -6.796565532684326
    6. ' we' → logprob: -6.921565532684326
    7. 'car' → logprob: -7.171565532684326
    8. ' #' → logprob: -7.921565532684326
    9. 'time' → logprob: -8.046566009521484
    10. 'pass' → logprob: -9.046566009521484

Token 1308: ',' (ID: 11)
  Prédit: 'we'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'we' → logprob: -0.07885618507862091
    2. '#' → logprob: -3.2038562297821045
    3. 'the' → logprob: -4.828855991363525
    4. ' we' → logprob: -4.953855991363525
    5. 'e' → logprob: -5.203855991363525
    6. 'car' → logprob: -5.703855991363525
    7. 'here' → logprob: -6.828855991363525
    8. 'return' → logprob: -6.953855991363525
    9. 'self' → logprob: -7.078855991363525
    10. 'no' → logprob: -7.078855991363525

Token 1309: ' picking' (ID: 30859)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.11595684289932251
    2. 'min' → logprob: -2.8659567832946777
    3. 'time' → logprob: -3.9909567832946777
    4. 'we' → logprob: -4.365956783294678
    5. 'car' → logprob: -4.740956783294678
    6. 'can' → logprob: -5.740956783294678
    7. 'eat' → logprob: -5.740956783294678
    8. 'if' → logprob: -6.115956783294678
    9. 'pass' → logprob: -6.115956783294678
    10. ' min' → logprob: -8.490957260131836

Token 1310: ' is' (ID: 382)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -1.0444023609161377
    2. 'and' → logprob: -1.2944023609161377
    3. ' the' → logprob: -2.1694023609161377
    4. '_' → logprob: -2.5444023609161377
    5. ' is' → logprob: -3.0444023609161377
    6. 'the' → logprob: -3.0444023609161377
    7. '
' → logprob: -3.1694023609161377
    8. ' up' → logprob: -4.544402122497559
    9. '<|end|>' → logprob: -4.919402122497559
    10. '_and' → logprob: -5.794402122497559

Token 1311: ' automatic' (ID: 22981)
  Prédit: 'always'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'always' → logprob: -0.5354531407356262
    2. 'implicit' → logprob: -1.5354530811309814
    3. ' always' → logprob: -2.5354530811309814
    4. 'im' → logprob: -2.7854530811309814
    5. 'possible' → logprob: -4.4104533195495605
    6. ' implicit' → logprob: -4.5354533195495605
    7. 'allowed' → logprob: -4.7854533195495605
    8. 'ass' → logprob: -5.5354533195495605
    9. 'automatic' → logprob: -5.7854533195495605
    10. 'instant' → logprob: -5.9104533195495605

Token 1312: ' in' (ID: 306)
  Prédit: ' at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.8152090311050415
    2. '       ' → logprob: -1.5652090311050415
    3. ',' → logprob: -2.315208911895752
    4. '
' → logprob: -2.690208911895752
    5. ' and' → logprob: -2.940208911895752
    6. '.' → logprob: -3.065208911895752
    7. ' here' → logprob: -3.065208911895752
    8. ':' → logprob: -5.065208911895752
    9. ' as' → logprob: -5.190208911895752
    10. ' if' → logprob: -5.315208911895752

Token 1313: ' problem' (ID: 4792)
  Prédit: 'this'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'this' → logprob: -0.025692595168948174
    2. 'the' → logprob: -4.275692462921143
    3. 'code' → logprob: -5.025692462921143
    4. 'segment' → logprob: -6.275692462921143
    5. 'practice' → logprob: -7.025692462921143
    6. 'course' → logprob: -8.1506929397583
    7. 'current' → logprob: -8.2756929397583
    8. 'context' → logprob: -8.2756929397583
    9. 'self' → logprob: -8.7756929397583
    10. '_this' → logprob: -8.7756929397583

Token 1314: ' description' (ID: 6496)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.367257297039032
    2. ':' → logprob: -2.2422573566436768
    3. '
' → logprob: -2.3672573566436768
    4. ',' → logprob: -3.2422573566436768
    5. '.' → logprob: -3.6172573566436768
    6. ':
' → logprob: -4.867257118225098
    7. ' at' → logprob: -5.117257118225098
    8. ')' → logprob: -5.492257118225098
    9. '
' → logprob: -5.617257118225098
    10. '.
' → logprob: -5.992257118225098

Token 1315: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4692500829696655
    2. ':' → logprob: -1.7192500829696655
    3. ',' → logprob: -2.594250202178955
    4. '
' → logprob: -2.844250202178955
    5. '.' → logprob: -3.719250202178955
    6. '#' → logprob: -4.844250202178955
    7. ' if' → logprob: -5.094250202178955
    8. ':
' → logprob: -5.344250202178955
    9. ')' → logprob: -5.719250202178955
    10. '           ' → logprob: -5.844250202178955

Token 1316: ' so' (ID: 813)
  Prédit: ' so'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' so' → logprob: -0.43630263209342957
    2. '       ' → logprob: -2.311302661895752
    3. ')' → logprob: -2.436302661895752
    4. ' return' → logprob: -3.186302661895752
    5. 'return' → logprob: -3.561302661895752
    6. ' but' → logprob: -4.061302661895752
    7. ' and' → logprob: -4.686302661895752
    8. ' we' → logprob: -4.811302661895752
    9. 'so' → logprob: -5.186302661895752
    10. ':' → logprob: -5.186302661895752

Token 1317: ' always' (ID: 3324)
  Prédit: 'we'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'we' → logprob: -1.1301442384719849
    2. 'time' → logprob: -1.6301442384719849
    3. 'car' → logprob: -1.8801442384719849
    4. '#' → logprob: -2.0051441192626953
    5. 'eat' → logprob: -3.0051441192626953
    6. 'return' → logprob: -3.2551441192626953
    7. ' we' → logprob: -3.3801441192626953
    8. ' time' → logprob: -4.130144119262695
    9. 'pick' → logprob: -5.005144119262695
    10. '       ' → logprob: -5.255144119262695

Token 1318: ' can' (ID: 665)
  Prédit: 'eat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'eat' → logprob: -0.6429277658462524
    2. 'possible' → logprob: -1.6429277658462524
    3. 'allowed' → logprob: -3.017927646636963
    4. ' possible' → logprob: -3.142927646636963
    5. 'consider' → logprob: -3.267927646636963
    6. ' eat' → logprob: -3.517927646636963
    7. 'pick' → logprob: -3.642927646636963
    8. 'ass' → logprob: -4.017927646636963
    9. ' pick' → logprob: -4.267927646636963
    10. 'store' → logprob: -4.517927646636963

Token 1319: ' pick' (ID: 5230)
  Prédit: 'eat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eat' → logprob: -0.01691475324332714
    2. 'pick' → logprob: -4.8919148445129395
    3. ' eat' → logprob: -5.3919148445129395
    4. 'do' → logprob: -5.8919148445129395
    5. 'ass' → logprob: -7.1419148445129395
    6. ' pick' → logprob: -8.141914367675781
    7. 'choose' → logprob: -8.516914367675781
    8. ' do' → logprob: -9.016914367675781
    9. 'consider' → logprob: -9.516914367675781
    10. 'e' → logprob: -9.766914367675781

Token 1320: ' carrot' (ID: 121234)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.997713029384613
    2. '.' → logprob: -1.6227130889892578
    3. ' at' → logprob: -1.6227130889892578
    4. ' the' → logprob: -2.997713088989258
    5. ' here' → logprob: -2.997713088989258
    6. ',' → logprob: -3.622713088989258
    7. ')' → logprob: -3.872713088989258
    8. 'and' → logprob: -4.372713088989258
    9. ' it' → logprob: -4.872713088989258
    10. '       ' → logprob: -5.122713088989258

Token 1321: ' when' (ID: 1261)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4902958869934082
    2. '.' → logprob: -1.8652958869934082
    3. ' at' → logprob: -1.9902958869934082
    4. ' and' → logprob: -3.615295886993408
    5. ',' → logprob: -3.740295886993408
    6. ':' → logprob: -4.365295886993408
    7. ' if' → logprob: -4.490295886993408
    8. ' here' → logprob: -4.990295886993408
    9. ')' → logprob: -5.240295886993408
    10. '           ' → logprob: -6.240295886993408

Token 1322: ' reaching' (ID: 29787)
  Prédit: 'at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'at' → logprob: -1.2722909450531006
    2. 'arr' → logprob: -1.2722909450531006
    3. 're' → logprob: -1.6472909450531006
    4. 'passing' → logprob: -2.5222909450531006
    5. 'here' → logprob: -3.1472909450531006
    6. 'present' → logprob: -3.3972909450531006
    7. 'we' → logprob: -3.7722909450531006
    8. 'car' → logprob: -4.64729118347168
    9. 'running' → logprob: -4.89729118347168
    10. 'available' → logprob: -5.14729118347168

Token 1323: ' location' (ID: 5100)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.9051483273506165
    2. 'the' → logprob: -1.1551482677459717
    3. ' this' → logprob: -2.2801482677459717
    4. 'this' → logprob: -2.4051482677459717
    5. 'segment' → logprob: -3.1551482677459717
    6. ' segment' → logprob: -4.280148506164551
    7. 'pos' → logprob: -4.530148506164551
    8. 'position' → logprob: -5.405148506164551
    9. 'car' → logprob: -5.530148506164551
    10. ' it' → logprob: -5.655148506164551

Token 1324: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2296781986951828
    2. '
' → logprob: -1.8546781539916992
    3. ')' → logprob: -4.104678153991699
    4. ',' → logprob: -4.729678153991699
    5. ':' → logprob: -5.354678153991699
    6. '.' → logprob: -5.479678153991699
    7. '        
' → logprob: -5.729678153991699
    8. '```' → logprob: -6.479678153991699
    9. '<|end|>' → logprob: -6.604678153991699
    10. ':
' → logprob: -6.854678153991699

Token 1325: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007131977938115597
    2. '
' → logprob: -5.382132053375244
    3. '        
' → logprob: -7.007132053375244
    4. ',' → logprob: -7.382132053375244
    5. ' 
' → logprob: -8.257131576538086
    6. ')' → logprob: -9.507131576538086
    7. '           ' → logprob: -9.757131576538086
    8. 'return' → logprob: -9.757131576538086
    9. '  
' → logprob: -9.882131576538086
    10. '```' → logprob: -10.007131576538086

Token 1326: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00847439281642437
    2. 'time' → logprob: -6.383474349975586
    3. '        
' → logprob: -6.383474349975586
    4. '
' → logprob: -7.008474349975586
    5. ' time' → logprob: -7.258474349975586
    6. '#' (adapté à ' #') → logprob: -7.758474349975586
    7. 'segment' → logprob: -7.758474349975586
    8. ',' → logprob: -8.008474349975586
    9. 'next' → logprob: -8.383474349975586
    10. '```' → logprob: -8.758474349975586

Token 1327: ' We' (ID: 1416)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3442893922328949
    2. ' time' → logprob: -1.9692894220352173
    3. 'time' → logprob: -2.5942893028259277
    4. 'segment' → logprob: -3.5942893028259277
    5. ' segment' → logprob: -3.9692893028259277
    6. 'travel' → logprob: -4.969289302825928
    7. ' travel' → logprob: -5.094289302825928
    8. ' run' → logprob: -5.469289302825928
    9. 'run' → logprob: -5.594289302825928
    10. '
' → logprob: -5.719289302825928

Token 1328: ' can' (ID: 665)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'can' → logprob: -0.7649057507514954
    2. 'continue' → logprob: -1.5149056911468506
    3. '#' → logprob: -2.5149056911468506
    4. ' can' → logprob: -2.6399056911468506
    5. 'consider' → logprob: -3.5149056911468506
    6. 'ass' → logprob: -4.13990592956543
    7. 'calculate' → logprob: -4.38990592956543
    8. 'have' → logprob: -4.63990592956543
    9. 'try' → logprob: -4.63990592956543
    10. 'run' → logprob: -4.76490592956543

Token 1329: ' model' (ID: 2359)
  Prédit: 'ass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ass' → logprob: -1.281274437904358
    2. 'compute' → logprob: -1.406274437904358
    3. 'consider' → logprob: -1.781274437904358
    4. 'eat' → logprob: -2.6562743186950684
    5. 'run' → logprob: -2.7812743186950684
    6. 'try' → logprob: -3.0312743186950684
    7. 'always' → logprob: -3.9062743186950684
    8. 'continue' → logprob: -4.031274318695068
    9. 'choose' → logprob: -4.031274318695068
    10. 'calculate' → logprob: -4.156274318695068

Token 1330: ' two' (ID: 1920)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8996822834014893
    2. '#' → logprob: -1.6496822834014893
    3. 'time' → logprob: -2.1496822834014893
    4. 'segment' → logprob: -3.0246822834014893
    5. ' the' → logprob: -3.1496822834014893
    6. '_time' → logprob: -3.6496822834014893
    7. ' time' → logprob: -3.7746822834014893
    8. '_segment' → logprob: -3.7746822834014893
    9. ' this' → logprob: -4.02468204498291
    10. ' #' → logprob: -4.14968204498291

Token 1331: ' options' (ID: 3880)
  Prédit: 'poss'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'poss' → logprob: -1.5547165870666504
    2. ' options' → logprob: -1.6797165870666504
    3. ' possibilities' → logprob: -1.8047165870666504
    4. 'options' → logprob: -2.3047165870666504
    5. '_options' → logprob: -2.5547165870666504
    6. '
' → logprob: -2.9297165870666504
    7. ')' → logprob: -3.3047165870666504
    8. 'possible' → logprob: -4.05471658706665
    9. '#' → logprob: -4.05471658706665
    10. ' more' → logprob: -4.30471658706665

Token 1332: ' of' (ID: 328)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5646888613700867
    2. '       ' → logprob: -1.5646889209747314
    3. '#' → logprob: -1.9396889209747314
    4. '
' → logprob: -2.8146889209747314
    5. ':
' → logprob: -4.689688682556152
    6. '           ' → logprob: -5.814688682556152
    7. ' #' → logprob: -6.564688682556152
    8. ':

' → logprob: -6.939688682556152
    9. '
' → logprob: -7.064688682556152
    10. ',' → logprob: -7.314688682556152

Token 1333: ' picking' (ID: 30859)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'compute' → logprob: -1.1140302419662476
    2. 'running' → logprob: -1.4890302419662476
    3. 'time' → logprob: -1.9890302419662476
    4. 'e' → logprob: -2.614030361175537
    5. 'segment' → logprob: -2.864030361175537
    6. 'run' → logprob: -3.739030361175537
    7. 'travel' → logprob: -3.864030361175537
    8. '_running' → logprob: -4.239030361175537
    9. 'continu' → logprob: -4.489030361175537
    10. 'action' → logprob: -4.614030361175537

Token 1334: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.13543447852134705
    2. 'and' → logprob: -2.51043438911438
    3. ':' → logprob: -4.885434627532959
    4. ' or' → logprob: -5.010434627532959
    5. ' the' → logprob: -5.260434627532959
    6. ',' → logprob: -5.760434627532959
    7. ' either' → logprob: -6.135434627532959
    8. 'either' → logprob: -6.385434627532959
    9. 'car' → logprob: -6.510434627532959
    10. ' without' → logprob: -6.635434627532959

Token 1335: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04256094619631767
    2. '           ' → logprob: -3.6675610542297363
    3. '1' → logprob: -4.667561054229736
    4. '#' → logprob: -6.417561054229736
    5. '        
' → logprob: -6.792561054229736
    6. '
' → logprob: -7.292561054229736
    7. '               ' → logprob: -7.792561054229736
    8. ',' → logprob: -7.917561054229736
    9. '```' → logprob: -8.042560577392578
    10. ' ' → logprob: -8.167560577392578

Token 1336: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8126084804534912
    2. '       ' → logprob: -1.3126084804534912
    3. '#' (adapté à ' #') → logprob: -1.4376084804534912
    4. '        
' → logprob: -3.437608480453491
    5. ' 
' → logprob: -4.68760871887207
    6. '           ' → logprob: -6.43760871887207
    7. '1' → logprob: -6.68760871887207
    8. ' #' → logprob: -6.68760871887207
    9. 'if' → logprob: -7.18760871887207
    10. 'try' → logprob: -7.43760871887207

Token 1337: '  ' (ID: 256)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.16401274502277374
    2. '       ' → logprob: -2.2890126705169678
    3. '
' → logprob: -3.1640126705169678
    4. ' #' → logprob: -5.664012908935547
    5. 'min' → logprob: -7.539012908935547
    6. 'if' → logprob: -7.539012908935547
    7. '1' → logprob: -7.914012908935547
    8. 'time' → logprob: -8.039012908935547
    9. 'try' → logprob: -8.039012908935547
    10. 'store' → logprob: -8.039012908935547

Token 1338: ' -' (ID: 533)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.059351321309804916
    2. 'time' → logprob: -4.059351444244385
    3. 'try' → logprob: -4.434351444244385
    4. '
' → logprob: -4.434351444244385
    5. '       ' → logprob: -4.684351444244385
    6. 'if' → logprob: -5.934351444244385
    7. '1' → logprob: -6.684351444244385
    8. ' #' → logprob: -7.059351444244385
    9. 'pick' → logprob: -7.684351444244385
    10. 'min' → logprob: -7.934351444244385

Token 1339: ' pick' (ID: 5230)
  Prédit: 'Eat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Eat' → logprob: -1.1027519702911377
    2. '#' → logprob: -1.2277519702911377
    3. 'store' → logprob: -2.2277519702911377
    4. 'eat' → logprob: -2.6027519702911377
    5. ' store' → logprob: -2.7277519702911377
    6. 'Use' → logprob: -3.2277519702911377
    7. 'Store' → logprob: -3.8527519702911377
    8. ' #' → logprob: -4.727751731872559
    9. ' eat' → logprob: -4.977751731872559
    10. 'No' → logprob: -5.227751731872559

Token 1340: ' to' (ID: 316)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.19759796559810638
    2. 'and' → logprob: -1.9475979804992676
    3. ' the' → logprob: -5.072597980499268
    4. 'car' → logprob: -5.447597980499268
    5. '_car' → logprob: -5.572597980499268
    6. ',' → logprob: -5.697597980499268
    7. '_and' → logprob: -5.822597980499268
    8. ' ' → logprob: -5.947597980499268
    9. ' ,' → logprob: -6.197597980499268
    10. ' without' → logprob: -6.322597980499268

Token 1341: ' store' (ID: 4897)
  Prédit: 'eat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eat' → logprob: -0.13587810099124908
    2. 'store' → logprob: -2.385878086090088
    3. 'use' → logprob: -4.635878086090088
    4. ' eat' → logprob: -4.760878086090088
    5. 'e' → logprob: -5.260878086090088
    6. 'carry' → logprob: -5.385878086090088
    7. 'storage' → logprob: -5.885878086090088
    8. ' store' → logprob: -6.260878086090088
    9. 'car' → logprob: -8.010878562927246
    10. '_e' → logprob: -8.135878562927246

Token 1342: ' for' (ID: 395)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.8313989639282227
    2. '
' → logprob: -1.7063989639282227
    3. ' or' → logprob: -1.8313989639282227
    4. ' and' → logprob: -2.0813989639282227
    5. ' (' → logprob: -3.5813989639282227
    6. 'or' → logprob: -3.5813989639282227
    7. '       ' → logprob: -4.081398963928223
    8. ',' → logprob: -4.581398963928223
    9. '           ' → logprob: -6.081398963928223
    10. '()
' → logprob: -6.456398963928223

Token 1343: ' later' (ID: 4849)
  Prédit: 'future'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'future' → logprob: -0.7378839254379272
    2. 'im' → logprob: -0.9878839254379272
    3. ' future' → logprob: -2.487884044647217
    4. ' immediate' → logprob: -3.737884044647217
    5. 'later' → logprob: -3.987884044647217
    6. ' later' → logprob: -4.737884044647217
    7. 'now' → logprob: -5.487884044647217
    8. 'e' → logprob: -5.487884044647217
    9. ' now' → logprob: -5.987884044647217
    10. ' eating' → logprob: -6.737884044647217

Token 1344: ' (' (ID: 350)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4950408637523651
    2. ' or' → logprob: -2.1200408935546875
    3. '       ' → logprob: -2.4950408935546875
    4. '#' → logprob: -2.9950408935546875
    5. ' (' → logprob: -3.2450408935546875
    6. 'or' → logprob: -4.1200408935546875
    7. ' ' → logprob: -4.1200408935546875
    8. ',' → logprob: -4.1200408935546875
    9. '#
' → logprob: -4.6200408935546875
    10. '   ' → logprob: -4.8700408935546875

Token 1345: 'if' (ID: 366)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5025601983070374
    2. ')
' → logprob: -1.8775601387023926
    3. ')' → logprob: -2.0025601387023926
    4. 'now' → logprob: -3.0025601387023926
    5. 'im' → logprob: -4.627560138702393
    6. ' ' → logprob: -4.877560138702393
    7. 'store' → logprob: -5.377560138702393
    8. ' now' → logprob: -5.627560138702393
    9. '       ' → logprob: -5.752560138702393
    10. ' #' → logprob: -6.002560138702393

Token 1346: ' storage' (ID: 7928)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.012680690735578537
    2. ' self' → logprob: -5.262680530548096
    3. 'capacity' → logprob: -5.512680530548096
    4. 'can' → logprob: -7.012680530548096
    5. 'space' → logprob: -7.012680530548096
    6. 'car' → logprob: -7.512680530548096
    7. 'storage' → logprob: -7.637680530548096
    8. 'True' → logprob: -9.137681007385254
    9. ' capacity' → logprob: -9.262681007385254
    10. '```' → logprob: -9.387681007385254

Token 1347: ' available' (ID: 2839)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -1.3285845518112183
    2. ' >' → logprob: -1.7035845518112183
    3. ' <' → logprob: -1.9535845518112183
    4. 'allows' → logprob: -2.078584671020508
    5. ' allows' → logprob: -2.203584671020508
    6. 'capacity' → logprob: -3.078584671020508
    7. ')' → logprob: -3.828584671020508
    8. ' is' → logprob: -4.078584671020508
    9. '_capacity' → logprob: -4.203584671020508
    10. ' has' → logprob: -4.328584671020508

Token 1348: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.01850295066833496
    2. ')' → logprob: -4.018503189086914
    3. '),' → logprob: -8.268503189086914
    4. ' or' → logprob: -10.018503189086914
    5. ')
' → logprob: -10.893503189086914
    6. '),
' → logprob: -11.018503189086914
    7. ' )
' → logprob: -12.393503189086914
    8. ')

' → logprob: -12.643503189086914
    9. 'or' → logprob: -12.768503189086914
    10. '       ' → logprob: -13.018503189086914

Token 1349: '       ' (ID: 309)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.18145087361335754
    2. '       ' → logprob: -1.8064508438110352
    3. '
' → logprob: -7.306450843811035
    4. '           ' → logprob: -8.056450843811035
    5. ' ' → logprob: -8.306450843811035
    6. '   ' → logprob: -8.681450843811035
    7. ' or' → logprob: -8.806450843811035
    8. ',' → logprob: -9.806450843811035
    9. ')' → logprob: -10.431450843811035
    10. 'or' → logprob: -11.181450843811035

Token 1350: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.016304615885019302
    2. '       ' → logprob: -4.1413044929504395
    3. '
' → logprob: -8.766304969787598
    4. '   ' → logprob: -9.891304969787598
    5. ' ' → logprob: -10.266304969787598
    6. '           ' → logprob: -11.641304969787598
    7. 'and' → logprob: -11.766304969787598
    8. ' #' → logprob: -12.391304969787598
    9. '     ' → logprob: -13.516304969787598
    10. ',' → logprob: -13.516304969787598

Token 1351: '  ' (ID: 256)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.040075622498989105
    2. ' ' → logprob: -3.6650755405426025
    3. '   ' → logprob: -5.165075778961182
    4. '       ' → logprob: -5.165075778961182
    5. '  ' → logprob: -6.415075778961182
    6. '
' → logprob: -8.290075302124023
    7. ' #' → logprob: -8.915075302124023
    8. '     ' → logprob: -9.665075302124023
    9. 'or' → logprob: -9.790075302124023
    10. 'and' → logprob: -10.790075302124023

Token 1352: ' -' (ID: 533)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.2551186978816986
    2. 'else' → logprob: -2.2551186084747314
    3. '
' → logprob: -3.2551186084747314
    4. '  ' → logprob: -3.6301186084747314
    5. ' ' → logprob: -4.1301188468933105
    6. 'elif' → logprob: -4.5051188468933105
    7. '   ' → logprob: -4.6301188468933105
    8. 'return' → logprob: -4.8801188468933105
    9. '       ' → logprob: -5.8801188468933105
    10. ')' → logprob: -6.7551188468933105

Token 1353: ' pick' (ID: 5230)
  Prédit: 'eat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'eat' → logprob: -0.05380268394947052
    2. '#' → logprob: -4.053802490234375
    3. 'pick' → logprob: -4.053802490234375
    4. 'not' → logprob: -4.428802490234375
    5. 'skip' → logprob: -5.803802490234375
    6. 'pass' → logprob: -7.678802490234375
    7. ' eat' → logprob: -7.803802490234375
    8. 'im' → logprob: -7.928802490234375
    9. 'e' → logprob: -8.303802490234375
    10. ' not' → logprob: -8.553802490234375

Token 1354: ' and' (ID: 326)
  Prédit: ' immediately'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' immediately' → logprob: -0.6311557292938232
    2. ' to' → logprob: -1.7561557292938232
    3. 'im' → logprob: -2.3811557292938232
    4. ' and' → logprob: -3.1311557292938232
    5. 'and' → logprob: -3.3811557292938232
    6. 'to' → logprob: -3.3811557292938232
    7. '_to' → logprob: -3.5061557292938232
    8. ' ' → logprob: -4.506155967712402
    9. '_im' → logprob: -4.631155967712402
    10. ' immediate' → logprob: -5.006155967712402

Token 1355: ' eat' (ID: 11237)
  Prédit: 'eat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eat' → logprob: -0.016097597777843475
    2. 'im' → logprob: -4.266097545623779
    3. ' eat' → logprob: -6.266097545623779
    4. ' immediately' → logprob: -11.141098022460938
    5. 'use' → logprob: -11.391098022460938
    6. 'consume' → logprob: -13.391098022460938
    7. ' ' → logprob: -13.891098022460938
    8. 'e' → logprob: -13.891098022460938
    9. '```' → logprob: -14.391098022460938
    10. '
' → logprob: -14.641098022460938

Token 1356: ' immediately' (ID: 10731)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.39777880907058716
    2. '
' → logprob: -1.1477787494659424
    3. ')' → logprob: -6.0227789878845215
    4. '        
' → logprob: -6.5227789878845215
    5. '
' → logprob: -6.8977789878845215
    6. ',' → logprob: -7.1477789878845215
    7. '

' → logprob: -7.2727789878845215
    8. '           ' → logprob: -7.3977789878845215
    9. '()
' → logprob: -7.5227789878845215
    10. ')
' → logprob: -7.7727789878845215

Token 1357: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20884430408477783
    2. '
' → logprob: -1.7088443040847778
    3. ',' → logprob: -5.833844184875488
    4. '        
' → logprob: -7.458844184875488
    5. '.' → logprob: -7.708844184875488
    6. '
' → logprob: -7.833844184875488
    7. '#' → logprob: -7.833844184875488
    8. '

' → logprob: -7.958844184875488
    9. ')' → logprob: -8.083844184875488
    10. '<|end|>' → logprob: -8.333844184875488

Token 1358: 'not' (ID: 2878)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2846352159976959
    2. '#' → logprob: -2.034635305404663
    3. 'return' → logprob: -2.284635305404663
    4. 'True' → logprob: -5.784635066986084
    5. 'no' → logprob: -5.784635066986084
    6. ')
' → logprob: -6.034635066986084
    7. 'skip' → logprob: -6.909635066986084
    8. ' no' → logprob: -7.284635066986084
    9. ' return' → logprob: -7.284635066986084
    10. '       ' → logprob: -7.409635066986084

Token 1359: ' storing' (ID: 42787)
  Prédit: ' storing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' storing' → logprob: -0.5910696387290955
    2. 'store' → logprob: -1.2160696983337402
    3. ' store' → logprob: -2.3410696983337402
    4. 'stored' → logprob: -4.09106969833374
    5. 'st' → logprob: -4.21606969833374
    6. ')' → logprob: -4.59106969833374
    7. ' stored' → logprob: -5.34106969833374
    8. '
' → logprob: -7.09106969833374
    9. 'return' → logprob: -7.59106969833374
    10. 'storage' → logprob: -7.71606969833374

Token 1360: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.2723104848410003e-05
    2. ' )' → logprob: -11.625022888183594
    3. ')
' → logprob: -11.625022888183594
    4. ').' → logprob: -13.500022888183594
    5. '.' → logprob: -14.000022888183594
    6. '),' → logprob: -14.750022888183594
    7. '   ' → logprob: -15.000022888183594
    8. ')
' → logprob: -15.125022888183594
    9. ' at' → logprob: -15.250022888183594
    10. '       ' → logprob: -15.250022888183594

Token 1361: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05851180851459503
    2. '
' → logprob: -2.933511734008789
    3. '           ' → logprob: -7.183511734008789
    4. '#' → logprob: -7.308511734008789
    5. '        
' → logprob: -7.308511734008789
    6. ',' → logprob: -7.683511734008789
    7. ')' → logprob: -7.808511734008789
    8. ' 
' → logprob: -9.308511734008789
    9. '
' → logprob: -9.433511734008789
    10. ')
' → logprob: -9.683511734008789

Token 1362: ' #
' (ID: 21888)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21705420315265656
    2. '#' → logprob: -2.4670541286468506
    3. 'time' → logprob: -2.4670541286468506
    4. '
' → logprob: -4.09205436706543
    5. 'distance' → logprob: -6.34205436706543
    6. 'segment' → logprob: -6.34205436706543
    7. 'eat' → logprob: -6.96705436706543
    8. '        
' → logprob: -7.34205436706543
    9. 'dist' → logprob: -7.34205436706543
    10. ' time' → logprob: -7.71705436706543

Token 1363: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6658420562744141
    2. '       ' → logprob: -0.7908420562744141
    3. '#' → logprob: -3.540842056274414
    4. '        
' → logprob: -6.290842056274414
    5. '
' → logprob: -7.790842056274414
    6. '

' → logprob: -7.915842056274414
    7. ' 
' → logprob: -8.290842056274414
    8. ' #' → logprob: -9.040842056274414
    9. 'import' → logprob: -9.165842056274414
    10. '```' → logprob: -9.290842056274414

Token 1364: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.3167995810508728
    2. '       ' → logprob: -1.9417996406555176
    3. 'time' → logprob: -2.1917996406555176
    4. 'eat' → logprob: -5.191799640655518
    5. 'segment' → logprob: -5.566799640655518
    6. 'distance' → logprob: -6.191799640655518
    7. 'dist' → logprob: -6.941799640655518
    8. 'run' → logprob: -7.316799640655518
    9. '
' → logprob: -7.566799640655518
    10. 'travel' → logprob: -7.566799640655518

Token 1365: ' Eating' (ID: 89225)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.36944231390953064
    2. '       ' → logprob: -2.1194422245025635
    3. '#' → logprob: -2.9944422245025635
    4. 'travel' → logprob: -2.9944422245025635
    5. 'segment' → logprob: -2.9944422245025635
    6. 'run' → logprob: -3.9944422245025635
    7. 'distance' → logprob: -4.994442462921143
    8. 'dist' → logprob: -5.744442462921143
    9. '
' → logprob: -6.244442462921143
    10. 'times' → logprob: -6.994442462921143

Token 1366: ' immediately' (ID: 10731)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.00459175743162632
    2. '_segment' → logprob: -6.129591941833496
    3. 'time' → logprob: -6.879591941833496
    4. '
' → logprob: -8.129591941833496
    5. '_distance' → logprob: -8.254591941833496
    6. '_im' → logprob: -8.879591941833496
    7. '_speed' → logprob: -9.004591941833496
    8. '_duration' → logprob: -9.379591941833496
    9. '_at' → logprob: -9.629591941833496
    10. '_dist' → logprob: -9.629591941833496

Token 1367: ' after' (ID: 1934)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.07603641599416733
    2. 'time' → logprob: -3.5760364532470703
    3. ':' → logprob: -4.20103645324707
    4. '_segment' → logprob: -4.70103645324707
    5. 'segment' → logprob: -5.20103645324707
    6. '_distance' → logprob: -6.07603645324707
    7. '       ' → logprob: -6.32603645324707
    8. '_' → logprob: -6.45103645324707
    9. '
' → logprob: -6.57603645324707
    10. ':
' → logprob: -6.70103645324707

Token 1368: ' segment' (ID: 14806)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.118012934923172
    2. ' segment' → logprob: -3.4930129051208496
    3. '_segment' → logprob: -3.8680129051208496
    4. 'running' → logprob: -3.9930129051208496
    5. 'the' → logprob: -4.36801290512085
    6. ' running' → logprob: -5.49301290512085
    7. ' finishing' → logprob: -5.49301290512085
    8. 'this' → logprob: -5.49301290512085
    9. ' the' → logprob: -6.11801290512085
    10. 'distance' → logprob: -6.36801290512085

Token 1369: ' means' (ID: 4748)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.66960608959198
    2. '_time' → logprob: -1.41960608959198
    3. '       ' → logprob: -2.2946062088012695
    4. 'travel' → logprob: -2.6696062088012695
    5. '
' → logprob: -3.5446062088012695
    6. ' time' → logprob: -4.4196062088012695
    7. '_run' → logprob: -4.4196062088012695
    8. 'run' → logprob: -5.1696062088012695
    9. ':' → logprob: -5.4196062088012695
    10. ' travel' → logprob: -5.7946062088012695

Token 1370: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.319266438484192
    2. 'we' → logprob: -1.444266438484192
    3. 'time' → logprob: -1.944266438484192
    4. 'segment' → logprob: -2.6942663192749023
    5. ' we' → logprob: -2.8192663192749023
    6. ' time' → logprob: -3.0692663192749023
    7. '#' → logprob: -3.0692663192749023
    8. 'travel' → logprob: -4.194266319274902
    9. 'running' → logprob: -4.194266319274902
    10. ' segment' → logprob: -4.319266319274902

Token 1371: ' time' (ID: 1058)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.9995792508125305
    2. 'travel' → logprob: -1.2495791912078857
    3. 'segment' → logprob: -1.9995791912078857
    4. 'run' → logprob: -2.3745791912078857
    5. '       ' → logprob: -2.3745791912078857
    6. ' travel' → logprob: -5.624579429626465
    7. 't' → logprob: -5.749579429626465
    8. ' run' → logprob: -5.749579429626465
    9. '#' → logprob: -5.749579429626465
    10. ' time' → logprob: -6.124579429626465

Token 1372: ' to' (ID: 316)
  Prédit: '_to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_to' → logprob: -1.199499249458313
    2. '_needed' → logprob: -1.699499249458313
    3. '_sp' → logprob: -1.824499249458313
    4. '_taken' → logprob: -1.949499249458313
    5. '_elapsed' → logprob: -2.8244991302490234
    6. '_segment' → logprob: -3.0744991302490234
    7. '_since' → logprob: -3.4494991302490234
    8. '_for' → logprob: -3.4494991302490234
    9. '_pass' → logprob: -5.074499130249023
    10. ' =' → logprob: -5.199499130249023

Token 1373: ' run' (ID: 2461)
  Prédit: 'run'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'run' → logprob: -0.008126454427838326
    2. ' run' → logprob: -5.008126258850098
    3. 'complete' → logprob: -7.508126258850098
    4. 'compute' → logprob: -8.508126258850098
    5. '_run' → logprob: -8.883126258850098
    6. 'cover' → logprob: -9.383126258850098
    7. 'travel' → logprob: -9.383126258850098
    8. '
' → logprob: -9.508126258850098
    9. 'segment' → logprob: -10.758126258850098
    10. 'finish' → logprob: -10.883126258850098

Token 1374: ' segment' (ID: 14806)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.795713484287262
    2. 'the' → logprob: -1.5457134246826172
    3. 'this' → logprob: -1.6707134246826172
    4. ' this' → logprob: -3.170713424682617
    5. ' the' → logprob: -3.420713424682617
    6. ' segment' → logprob: -3.920713424682617
    7. 'distance' → logprob: -4.170713424682617
    8. '(segment' → logprob: -4.545713424682617
    9. '(distance' → logprob: -4.670713424682617
    10. 'dist' → logprob: -4.795713424682617

Token 1375: ' with' (ID: 483)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2832556962966919
    2. '=' → logprob: -1.408255696296692
    3. '_start' → logprob: -6.908255577087402
    4. ')' → logprob: -7.783255577087402
    5. '=start' → logprob: -8.783255577087402
    6. ':' → logprob: -9.283255577087402
    7. 'start' → logprob: -9.658255577087402
    8. ' is' → logprob: -9.658255577087402
    9. ',' → logprob: -9.658255577087402
    10. ' ' → logprob: -10.783255577087402

Token 1376: ' current' (ID: 2208)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.05667421594262123
    2. 'compute' → logprob: -4.056674003601074
    3. 'dist' → logprob: -4.431674003601074
    4. 'the' → logprob: -4.931674003601074
    5. 'segment' → logprob: -5.681674003601074
    6. ' distance' → logprob: -5.681674003601074
    7. '(distance' → logprob: -5.681674003601074
    8. ')' → logprob: -5.931674003601074
    9. 'idx' → logprob: -6.806674003601074
    10. 'self' → logprob: -7.681674003601074

Token 1377: ' boost' (ID: 12110)
  Prédit: '_segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_segment' → logprob: -1.3953053951263428
    2. '_since' → logprob: -1.6453053951263428
    3. '_time' → logprob: -1.8953053951263428
    4. '_' → logprob: -2.0203053951263428
    5. '_speed' → logprob: -2.6453053951263428
    6. ')' → logprob: -2.7703053951263428
    7. 'time' → logprob: -3.0203053951263428
    8. '_distance' → logprob: -4.020305633544922
    9. 'distance' → logprob: -4.645305633544922
    10. '_bo' → logprob: -4.645305633544922

Token 1378: ',' (ID: 11)
  Prédit: '_start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_start' → logprob: -0.30728214979171753
    2. ')' → logprob: -1.5572822093963623
    3. '_time' → logprob: -3.5572822093963623
    4. '       ' → logprob: -5.307281970977783
    5. 'start' → logprob: -5.682281970977783
    6. '_' → logprob: -6.057281970977783
    7. '_duration' → logprob: -6.682281970977783
    8. '_end' → logprob: -6.932281970977783
    9. '),' → logprob: -7.057281970977783
    10. '   ' → logprob: -7.057281970977783

Token 1379: ' then' (ID: 1815)
  Prédit: 'then'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'then' → logprob: -0.28620365262031555
    2. ' then' → logprob: -1.6612036228179932
    3. 'and' → logprob: -4.036203861236572
    4. 'return' → logprob: -4.661203861236572
    5. 'follow' → logprob: -4.786203861236572
    6. 'not' → logprob: -4.786203861236572
    7. ' and' → logprob: -5.911203861236572
    8. ' followed' → logprob: -6.411203861236572
    9. ' not' → logprob: -6.536203861236572
    10. 'distance' → logprob: -6.786203861236572

Token 1380: ' eat' (ID: 11237)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.6602500081062317
    2. '+' → logprob: -2.160249948501587
    3. ' return' → logprob: -2.410249948501587
    4. 'time' → logprob: -2.660249948501587
    5. 'eat' → logprob: -2.910249948501587
    6. 'distance' → logprob: -3.660249948501587
    7. ')' → logprob: -4.035250186920166
    8. ' time' → logprob: -4.035250186920166
    9. 'compute' → logprob: -5.160250186920166
    10. ' eat' → logprob: -5.285250186920166

Token 1381: ' resets' (ID: 160313)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.337795376777649
    2. ')' → logprob: -1.587795376777649
    3. '=' → logprob: -1.837795376777649
    4. ' at' → logprob: -1.962795376777649
    5. '_segment' → logprob: -3.2127952575683594
    6. '       ' → logprob: -3.3377952575683594
    7. '_time' → logprob: -3.4627952575683594
    8. '   ' → logprob: -4.337795257568359
    9. '(' → logprob: -4.337795257568359
    10. '_' → logprob: -4.462795257568359

Token 1382: ' boost' (ID: 12110)
  Prédit: 'timer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'timer' → logprob: -1.11594557762146
    2. '_timer' → logprob: -1.36594557762146
    3. ' timer' → logprob: -1.99094557762146
    4. 'time' → logprob: -2.36594557762146
    5. '_' → logprob: -2.99094557762146
    6. 'the' → logprob: -3.61594557762146
    7. ' the' → logprob: -3.61594557762146
    8. '_time' → logprob: -3.74094557762146
    9. 'boost' → logprob: -4.115945816040039
    10. '()' → logprob: -4.615945816040039

Token 1383: ' timer' (ID: 16905)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03659743815660477
    2. '           ' → logprob: -4.66159725189209
    3. ':' → logprob: -4.91159725189209
    4. ')' → logprob: -5.41159725189209
    5. '
' → logprob: -6.16159725189209
    6. '.' → logprob: -6.28659725189209
    7. '_time' → logprob: -6.66159725189209
    8. '=' → logprob: -6.78659725189209
    9. ',' → logprob: -6.91159725189209
    10. '_segment' → logprob: -7.41159725189209

Token 1384: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09378819912672043
    2. '
' → logprob: -3.0937881469726562
    3. ')' → logprob: -4.718788146972656
    4. 'segment' → logprob: -4.968788146972656
    5. '           ' → logprob: -5.093788146972656
    6. 'return' → logprob: -5.718788146972656
    7. '        
' → logprob: -6.343788146972656
    8. ',' → logprob: -6.343788146972656
    9. ':' → logprob: -6.468788146972656
    10. '_segment' → logprob: -6.593788146972656

Token 1385: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1041145626222715e-05
    2. 'zero' → logprob: -11.500011444091797
    3. ' ' → logprob: -14.375011444091797
    4. '```' → logprob: -15.750011444091797
    5. '   ' → logprob: -17.250011444091797
    6. ' zero' → logprob: -17.750011444091797
    7. '۰' → logprob: -18.125011444091797
    8. '
' → logprob: -19.125011444091797
    9. '`' → logprob: -19.375011444091797
    10. '٠' → logprob: -19.625011444091797

Token 1386: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.451116051815916e-05
    2. 'current' → logprob: -11.375024795532227
    3. ' ' → logprob: -11.500024795532227
    4. 'zero' → logprob: -14.250024795532227
    5. 'self' → logprob: -14.500024795532227
    6. '   ' → logprob: -14.875024795532227
    7. '```' → logprob: -16.187524795532227
    8. '
' → logprob: -16.187524795532227
    9. 'time' → logprob: -16.375024795532227
    10. '1' → logprob: -16.812524795532227

Token 1387: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010916713625192642
    2. '
' → logprob: -5.760916709899902
    3. ')' → logprob: -6.010916709899902
    4. ',' → logprob: -6.510916709899902
    5. ':' → logprob: -7.260916709899902
    6. '        
' → logprob: -7.260916709899902
    7. '           ' → logprob: -7.885916709899902
    8. '.' → logprob: -8.135916709899902
    9. ')
' → logprob: -9.073416709899902
    10. '=' → logprob: -9.073416709899902

Token 1388: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007631704676896334
    2. '
' → logprob: -5.132631778717041
    3. '        
' → logprob: -7.507631778717041
    4. 'time' → logprob: -7.507631778717041
    5. 'segment' → logprob: -8.507631301879883
    6. '#' → logprob: -9.257631301879883
    7. '```' → logprob: -10.007631301879883
    8. ')' → logprob: -10.257631301879883
    9. '           ' → logprob: -10.257631301879883
    10. ',' → logprob: -10.257631301879883

Token 1389: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.28602561354637146
    2. 'time' → logprob: -1.6610256433486938
    3. 'segment' → logprob: -3.1610255241394043
    4. 'run' → logprob: -5.286025524139404
    5. 't' → logprob: -6.036025524139404
    6. 'travel' → logprob: -6.286025524139404
    7. ' time' → logprob: -6.411025524139404
    8. '
' → logprob: -7.036025524139404
    9. 'seg' → logprob: -7.661025524139404
    10. 'total' → logprob: -7.661025524139404

Token 1390: ' compute' (ID: 23864)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006787012796849012
    2. ' segment' → logprob: -6.881786823272705
    3. '        
' → logprob: -7.131786823272705
    4. ')' → logprob: -7.131786823272705
    5. 'segment' → logprob: -7.381786823272705
    6. '
' → logprob: -7.381786823272705
    7. ',' → logprob: -7.881786823272705
    8. ' time' → logprob: -8.006787300109863
    9. ':' → logprob: -8.131787300109863
    10. '=' → logprob: -8.694287300109863

Token 1391: ' time' (ID: 1058)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.35010242462158203
    2. 'time' → logprob: -1.350102424621582
    3. 'travel' → logprob: -4.850102424621582
    4. '       ' → logprob: -4.850102424621582
    5. ' segment' → logprob: -5.100102424621582
    6. 'run' → logprob: -5.350102424621582
    7. 'seg' → logprob: -5.600102424621582
    8. 't' → logprob: -5.975102424621582
    9. ' time' → logprob: -6.725102424621582
    10. '_segment' → logprob: -7.350102424621582

Token 1392: ' to' (ID: 316)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6400959491729736
    2. '_to' → logprob: -1.0150959491729736
    3. '_needed' → logprob: -3.0150959491729736
    4. '_taken' → logprob: -3.7650959491729736
    5. '_for' → logprob: -4.6400957107543945
    6. '_sp' → logprob: -4.6400957107543945
    7. '_segment' → logprob: -5.3900957107543945
    8. '_seg' → logprob: -5.5150957107543945
    9. '=' → logprob: -6.0150957107543945
    10. '_this' → logprob: -6.2650957107543945

Token 1393: ' run' (ID: 2461)
  Prédit: 'run'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'run' → logprob: -0.0192581694573164
    2. 'travel' → logprob: -4.89425802230835
    3. 'complete' → logprob: -5.01925802230835
    4. '_segment' → logprob: -6.89425802230835
    5. 'tr' → logprob: -7.14425802230835
    6. 'cover' → logprob: -7.39425802230835
    7. 'segment' → logprob: -7.64425802230835
    8. 'start' → logprob: -7.89425802230835
    9. 'reach' → logprob: -8.269258499145508
    10. 'compute' → logprob: -8.394258499145508

Token 1394: ' segment' (ID: 14806)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.7219372987747192
    2. 'dist' → logprob: -0.8469372987747192
    3. ' =' → logprob: -2.9719371795654297
    4. '=' → logprob: -3.7219371795654297
    5. '(dist' → logprob: -5.34693717956543
    6. '       ' → logprob: -6.97193717956543
    7. '_segment' → logprob: -7.09693717956543
    8. '(segment' → logprob: -7.47193717956543
    9. ' segment' → logprob: -7.84693717956543
    10. ' dist' → logprob: -7.97193717956543

Token 1395: ' with' (ID: 483)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02476685121655464
    2. '_time' → logprob: -4.52476692199707
    3. '=' → logprob: -4.77476692199707
    4. '       ' → logprob: -6.64976692199707
    5. '_start' → logprob: -6.64976692199707
    6. '_segment' → logprob: -7.14976692199707
    7. '_for' → logprob: -8.14976692199707
    8. '_' → logprob: -8.39976692199707
    9. '           ' → logprob: -9.02476692199707
    10. ',' → logprob: -9.39976692199707

Token 1396: ' current' (ID: 2208)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.06883348524570465
    2. 'distance' → logprob: -3.443833589553833
    3. 'compute' → logprob: -3.568833589553833
    4. 'segment' → logprob: -5.318833351135254
    5. 'self' → logprob: -7.318833351135254
    6. '(dist' → logprob: -8.318833351135254
    7. 'time' → logprob: -8.818833351135254
    8. ' dist' → logprob: -9.318833351135254
    9. '(distance' → logprob: -9.568833351135254
    10. 'the' → logprob: -10.193833351135254

Token 1397: ' boost' (ID: 12110)
  Prédit: '_segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_segment' → logprob: -0.5844360589981079
    2. 'time' → logprob: -2.0844359397888184
    3. '_since' → logprob: -2.4594359397888184
    4. '_time' → logprob: -2.7094359397888184
    5. 'segment' → logprob: -2.9594359397888184
    6. 'distance' → logprob: -3.4594359397888184
    7. '_distance' → logprob: -3.9594359397888184
    8. ')' → logprob: -4.459435939788818
    9. '_speed' → logprob: -4.584435939788818
    10. 'speed' → logprob: -4.709435939788818

Token 1398: ' info' (ID: 5377)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7241231203079224
    2. '=' → logprob: -1.3491231203079224
    3. '_segment' → logprob: -2.599123001098633
    4. '_time' → logprob: -2.724123001098633
    5. '_start' → logprob: -2.849123001098633
    6. 'segment' → logprob: -3.974123001098633
    7. '_for' → logprob: -4.349123001098633
    8. 'time' → logprob: -5.224123001098633
    9. '_seg' → logprob: -5.224123001098633
    10. '_needed' → logprob: -5.349123001098633

Token 1399: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.36201608180999756
    2. 'time' → logprob: -2.112016201019287
    3. 'segment' → logprob: -2.362016201019287
    4. '
' → logprob: -3.237016201019287
    5. ' segment' → logprob: -4.487016201019287
    6. ' time' → logprob: -4.612016201019287
    7. 'start' → logprob: -5.487016201019287
    8. '_time' → logprob: -5.862016201019287
    9. '_segment' → logprob: -6.112016201019287
    10. 'seg' → logprob: -6.237016201019287

Token 1400: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007082617841660976
    2. '           ' → logprob: -5.507082462310791
    3. ' if' → logprob: -7.382082462310791
    4. ':' → logprob: -7.507082462310791
    5. ',' → logprob: -8.25708293914795
    6. 'return' → logprob: -8.25708293914795
    7. ' =' → logprob: -8.38208293914795
    8. ' return' → logprob: -9.00708293914795
    9. '
' → logprob: -9.25708293914795
    10. '=' → logprob: -9.25708293914795

Token 1401: ' time' (ID: 1058)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.6585545539855957
    2. 'time' (adapté à ' time') → logprob: -1.1585545539855957
    3. '       ' → logprob: -2.6585545539855957
    4. 't' → logprob: -2.6585545539855957
    5. 'seg' → logprob: -4.033554553985596
    6. 'run' → logprob: -5.658554553985596
    7. 'travel' → logprob: -6.658554553985596
    8. ' segment' → logprob: -6.658554553985596
    9. ' time' → logprob: -7.158554553985596
    10. ' t' → logprob: -7.783554553985596

Token 1402: '_for' (ID: 11903)
  Prédit: '_to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.4612556993961334
    2. '_needed' → logprob: -1.336255669593811
    3. '_taken' → logprob: -3.4612557888031006
    4. '_segment' → logprob: -3.9612557888031006
    5. '_since' → logprob: -4.2112555503845215
    6. ' =' → logprob: -4.3362555503845215
    7. '_required' → logprob: -4.5862555503845215
    8. '_for' → logprob: -5.3362555503845215
    9. '_per' → logprob: -5.5862555503845215
    10. '_sp' → logprob: -5.9612555503845215

Token 1403: '_segment' (ID: 71041)
  Prédit: '_segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_segment' → logprob: -0.10284581035375595
    2. 'segment' → logprob: -2.3528459072113037
    3. 'compute' → logprob: -7.477845668792725
    4. ' segment' → logprob: -7.477845668792725
    5. 'distance' → logprob: -7.852845668792725
    6. 'dist' → logprob: -8.477846145629883
    7. 'run' → logprob: -8.602846145629883
    8. 'the' → logprob: -8.727846145629883
    9. 'seg' → logprob: -8.977846145629883
    10. 'Segment' → logprob: -9.227846145629883

Token 1404: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6327256560325623
    2. ' =' → logprob: -0.7577256560325623
    3. '(' → logprob: -9.632725715637207
    4. ')' → logprob: -10.382725715637207
    5. ',' → logprob: -11.632725715637207
    6. '       ' → logprob: -12.007725715637207
    7. '   ' → logprob: -12.882725715637207
    8. '(distance' → logprob: -13.007725715637207
    9. '(
' → logprob: -13.257725715637207
    10. '_' → logprob: -14.007725715637207

Token 1405: ' compute' (ID: 23864)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.0024768433067947626
    2. ' compute' → logprob: -6.002476692199707
    3. '
' → logprob: -15.002476692199707
    4. 'calculate' → logprob: -15.002476692199707
    5. 'self' → logprob: -15.252476692199707
    6. '   ' → logprob: -15.877476692199707
    7. '       ' → logprob: -16.627477645874023
    8. '.compute' → logprob: -17.377477645874023
    9. ' self' → logprob: -18.252477645874023
    10. '           ' → logprob: -18.377477645874023

Token 1406: '_segment' (ID: 71041)
  Prédit: '_segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_segment' → logprob: -0.00014489953173324466
    2. 'segment' → logprob: -9.125144958496094
    3. '(segment' → logprob: -11.250144958496094
    4. '_' → logprob: -11.500144958496094
    5. '(' → logprob: -12.500144958496094
    6. 'Segment' → logprob: -12.875144958496094
    7. '(
' → logprob: -13.125144958496094
    8. '```' → logprob: -14.250144958496094
    9. ' segment' → logprob: -14.500144958496094
    10. '`' → logprob: -14.500144958496094

Token 1407: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -9.968312951968983e-06
    2. 'time' → logprob: -12.750009536743164
    3. '_segment' → logprob: -13.000009536743164
    4. '_' → logprob: -13.875009536743164
    5. '```' → logprob: -14.375009536743164
    6. '_t' → logprob: -14.625009536743164
    7. '_token' → logprob: -15.125009536743164
    8. '_distance' → logprob: -15.375009536743164
    9. ' _' → logprob: -15.375009536743164
    10. ')' → logprob: -15.625009536743164

Token 1408: '(dist' (ID: 78981)
  Prédit: '(dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dist' → logprob: -0.024616815149784088
    2. '(' → logprob: -3.7746167182922363
    3. '(
' → logprob: -7.274616718292236
    4. 'dist' → logprob: -7.399616718292236
    5. '(distance' → logprob: -9.899617195129395
    6. ' (' → logprob: -11.649617195129395
    7. '(segment' → logprob: -13.149617195129395
    8. '(dis' → logprob: -14.024617195129395
    9. '(div' → logprob: -14.274617195129395
    10. '(dim' → logprob: -14.399617195129395

Token 1409: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0062445648945868015
    2. ')' → logprob: -5.131244659423828
    3. ',
' → logprob: -8.881244659423828
    4. ' ,' → logprob: -9.506244659423828
    5. '=' → logprob: -10.506244659423828
    6. '_,' → logprob: -10.631244659423828
    7. '   ' → logprob: -11.881244659423828
    8. ')
' → logprob: -11.881244659423828
    9. ',time' → logprob: -11.881244659423828
    10. '+' → logprob: -12.006244659423828

Token 1410: ' time' (ID: 1058)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.007612066809087992
    2. ' time' → logprob: -4.882612228393555
    3. '   ' → logprob: -12.632612228393555
    4. '           ' → logprob: -14.007612228393555
    5. '       ' → logprob: -14.382612228393555
    6. '               ' → logprob: -15.132612228393555
    7. '	time' → logprob: -15.257612228393555
    8. '
' → logprob: -15.757612228393555
    9. '(time' → logprob: -16.382612228393555
    10. ' ' → logprob: -16.507612228393555

Token 1411: '_since' (ID: 133288)
  Prédit: '_since'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_since' → logprob: -6.704273118884885e-07
    2. 'since' → logprob: -14.750000953674316
    3. '_for' → logprob: -16.75
    4. '_' → logprob: -18.25
    5. '```' → logprob: -18.25
    6. 'Since' → logprob: -18.25
    7. '_to' → logprob: -18.625
    8. ')' → logprob: -19.375
    9. '_of' → logprob: -19.5
    10. '\' → logprob: -19.5

Token 1412: '_last' (ID: 26359)
  Prédit: '_last'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_last' → logprob: -0.0028071331325918436
    2. 'last' → logprob: -5.877807140350342
    3. '_since' → logprob: -14.627806663513184
    4. '```' → logprob: -14.627806663513184
    5. ' last' → logprob: -15.252806663513184
    6. '
' → logprob: -15.627806663513184
    7. '_LAST' → logprob: -15.877806663513184
    8. '_start' → logprob: -16.3778076171875
    9. 'time' → logprob: -16.5028076171875
    10. '_current' → logprob: -16.7528076171875

Token 1413: '_e' (ID: 4618)
  Prédit: '_e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_e' → logprob: -0.16672861576080322
    2. 'eat' → logprob: -1.9167286157608032
    3. 'e' → logprob: -5.041728496551514
    4. '
' → logprob: -12.291728973388672
    5. 'E' → logprob: -12.791728973388672
    6. ' eat' → logprob: -13.291728973388672
    7. 'ate' → logprob: -13.416728973388672
    8. 'Eat' → logprob: -13.666728973388672
    9. ')' → logprob: -14.041728973388672
    10. ',e' → logprob: -14.166728973388672

Token 1414: 'at' (ID: 266)
  Prédit: 'at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.00021676832693628967
    2. '_at' → logprob: -9.875216484069824
    3. 'eat' → logprob: -9.875216484069824
    4. 'ат' → logprob: -10.750216484069824
    5. 'a' → logprob: -11.125216484069824
    6. 'At' → logprob: -11.562716484069824
    7. ' at' → logprob: -11.687716484069824
    8. 'ath' → logprob: -12.250216484069824
    9. 'att' → logprob: -12.437716484069824
    10. '_' → logprob: -12.437716484069824

Token 1415: ')

' (ID: 1029)
  Prédit: '_start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_start' → logprob: -0.00949764158576727
    2. ')' → logprob: -4.75949764251709
    3. 'start' → logprob: -7.88449764251709
    4. ')
' → logprob: -8.38449764251709
    5. '_' → logprob: -10.00949764251709
    6. '_)' → logprob: -10.13449764251709
    7. '   ' → logprob: -10.25949764251709
    8. ')_' → logprob: -10.75949764251709
    9. ' )' → logprob: -11.38449764251709
    10. '+' → logprob: -11.50949764251709

Token 1416: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16380804777145386
    2. '
' → logprob: -2.0388081073760986
    3. '        
' → logprob: -4.2888078689575195
    4. ')' → logprob: -5.9138078689575195
    5. ')
' → logprob: -6.4138078689575195
    6. ',' → logprob: -6.9138078689575195
    7. 'return' → logprob: -8.66380786895752
    8. '```' → logprob: -8.66380786895752
    9. ',
' → logprob: -8.78880786895752
    10. '):
' → logprob: -8.91380786895752

Token 1417: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6619187593460083
    2. 'time' → logprob: -1.9119187593460083
    3. 'res' → logprob: -2.4119186401367188
    4. 'total' → logprob: -2.5369186401367188
    5. 'next' → logprob: -2.5369186401367188
    6. '#' (adapté à ' #') → logprob: -3.2869186401367188
    7. 'result' → logprob: -4.036918640136719
    8. 'new' → logprob: -4.161918640136719
    9. 'option' → logprob: -5.286918640136719
    10. 'min' → logprob: -5.661918640136719

Token 1418: ' after' (ID: 1934)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.6549874544143677
    2. '#' → logprob: -1.1549874544143677
    3. 'total' → logprob: -3.029987335205078
    4. 'res' → logprob: -3.029987335205078
    5. 'new' → logprob: -4.029987335205078
    6. 'eat' → logprob: -4.029987335205078
    7. '       ' → logprob: -4.654987335205078
    8. 'next' → logprob: -4.654987335205078
    9. 'option' → logprob: -4.654987335205078
    10. 'min' → logprob: -6.904987335205078

Token 1419: ' segment' (ID: 14806)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.19441209733486176
    2. 'e' → logprob: -2.8194119930267334
    3. 'segment' → logprob: -2.8194119930267334
    4. 'current' → logprob: -4.0694122314453125
    5. 'this' → logprob: -4.5694122314453125
    6. 'running' → logprob: -4.6944122314453125
    7. 'return' → logprob: -5.0694122314453125
    8. 'the' → logprob: -5.8194122314453125
    9. 'that' → logprob: -5.8194122314453125
    10. '#' → logprob: -6.1944122314453125

Token 1420: ' time' (ID: 1058)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.8545340895652771
    2. '_time' → logprob: -1.1045341491699219
    3. '       ' → logprob: -2.479534149169922
    4. ')' → logprob: -3.354534149169922
    5. '+' → logprob: -3.354534149169922
    6. '_elapsed' → logprob: -3.979534149169922
    7. 'elapsed' → logprob: -4.354534149169922
    8. 'current' → logprob: -4.729534149169922
    9. '
' → logprob: -4.729534149169922
    10. ' +' → logprob: -4.854534149169922

Token 1421: ',' (ID: 11)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.577043890953064
    2. 'new' → logprob: -2.2020440101623535
    3. '_elapsed' → logprob: -2.7020440101623535
    4. '_new' → logprob: -2.9520440101623535
    5. ' +' → logprob: -3.2020440101623535
    6. 'elapsed' → logprob: -3.4520440101623535
    7. '       ' → logprob: -3.5770440101623535
    8. ',' → logprob: -3.5770440101623535
    9. ')' → logprob: -4.2020440101623535
    10. 'time' → logprob: -4.4520440101623535

Token 1422: ' we' (ID: 581)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.04370247200131416
    2. 'last' → logprob: -4.043702602386475
    3. 'total' → logprob: -4.918702602386475
    4. 'current' → logprob: -5.168702602386475
    5. 'time' → logprob: -5.293702602386475
    6. ' new' → logprob: -5.668702602386475
    7. 'next' → logprob: -6.793702602386475
    8. 'reset' → logprob: -7.293702602386475
    9. 'updated' → logprob: -7.668702602386475
    10. 'key' → logprob: -7.918702602386475

Token 1423: ' eat' (ID: 11237)
  Prédit: 'have'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'have' → logprob: -1.376733660697937
    2. 'eat' → logprob: -1.626733660697937
    3. 'return' → logprob: -1.751733660697937
    4. 'update' → logprob: -2.2517337799072266
    5. 'last' → logprob: -3.6267337799072266
    6. ' have' → logprob: -3.6267337799072266
    7. '#' → logprob: -3.7517337799072266
    8. 'reset' → logprob: -3.8767337799072266
    9. 'new' → logprob: -3.8767337799072266
    10. 'can' → logprob: -4.001733779907227

Token 1424: ':' (ID: 25)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'last' → logprob: -1.4590604305267334
    2. ',' → logprob: -1.9590604305267334
    3. '_last' → logprob: -1.9590604305267334
    4. '_time' → logprob: -2.8340604305267334
    5. ')' → logprob: -2.9590604305267334
    6. 'return' → logprob: -3.0840604305267334
    7. ' last' → logprob: -3.3340604305267334
    8. 'time' → logprob: -3.3340604305267334
    9. 'new' → logprob: -3.4590604305267334
    10. ' =' → logprob: -3.4590604305267334

Token 1425: ' last' (ID: 2174)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.44499996304512024
    2. 'last' → logprob: -1.8199999332427979
    3. 'next' → logprob: -2.069999933242798
    4. 'res' → logprob: -3.819999933242798
    5. 'return' → logprob: -4.070000171661377
    6. '0' → logprob: -4.445000171661377
    7. 'result' → logprob: -5.445000171661377
    8. 'current' → logprob: -5.570000171661377
    9. '       ' → logprob: -5.570000171661377
    10. 'time' → logprob: -5.695000171661377

Token 1426: '_car' (ID: 62991)
  Prédit: '_car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_car' → logprob: -0.0002671768015716225
    2. 'car' → logprob: -8.250267028808594
    3. 'Car' → logprob: -12.875267028808594
    4. '```' → logprob: -14.875267028808594
    5. '_' → logprob: -15.000267028808594
    6. '=' → logprob: -15.125267028808594
    7. '_c' → logprob: -15.250267028808594
    8. '_e' → logprob: -15.250267028808594
    9. 'time' → logprob: -15.375267028808594
    10. 'last' → logprob: -15.500267028808594

Token 1427: 'rot' (ID: 8150)
  Prédit: 'rot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rot' → logprob: -0.026912979781627655
    2. '_rot' → logprob: -3.7769129276275635
    3. '_car' → logprob: -5.901913166046143
    4. 'ot' → logprob: -7.276913166046143
    5. 't' → logprob: -9.776912689208984
    6. 'rott' → logprob: -10.026912689208984
    7. 'rots' → logprob: -10.901912689208984
    8. '_e' → logprob: -11.526912689208984
    9. '_ro' → logprob: -11.526912689208984
    10. '_' → logprob: -11.776912689208984

Token 1428: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -3.8889261304575484e-06
    2. 'time' → logprob: -13.000003814697266
    3. '_key' → logprob: -14.625003814697266
    4. '_t' → logprob: -15.750003814697266
    5. 'Time' → logprob: -15.750003814697266
    6. '_timestamp' → logprob: -16.500003814697266
    7. '```' → logprob: -16.500003814697266
    8. '\' → logprob: -16.750003814697266
    9. '_token' → logprob: -16.750003814697266
    10. '"time' → logprob: -16.875003814697266

Token 1429: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0626184493303299
    2. ' =' → logprob: -2.8126184940338135
    3. '+' → logprob: -8.437618255615234
    4. ')' → logprob: -8.687618255615234
    5. '=
' → logprob: -9.937618255615234
    6. '
' → logprob: -10.187618255615234
    7. ' +' → logprob: -10.687618255615234
    8. '+=' → logprob: -10.812618255615234
    9. ',' → logprob: -10.812618255615234
    10. '_next' → logprob: -11.062618255615234

Token 1430: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -6.2729995988775045e-06
    2. ' current' → logprob: -12.000006675720215
    3. '   ' → logprob: -17.3750057220459
    4. '(current' → logprob: -17.7500057220459
    5. '=current' → logprob: -19.0000057220459
    6. '$current' → logprob: -20.0000057220459
    7. '0' → logprob: -20.1250057220459
    8. '	current' → logprob: -21.1250057220459
    9. '[current' → logprob: -21.6250057220459
    10. '
' → logprob: -22.0000057220459

Token 1431: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -3.128163257315464e-07
    2. 'time' → logprob: -15.375
    3. '_car' → logprob: -17.625
    4. '_' → logprob: -18.375
    5. 'Time' → logprob: -18.875
    6. '_t' → logprob: -19.125
    7. ' _' → logprob: -19.25
    8. '```' → logprob: -19.5
    9. '_tim' → logprob: -19.5
    10. '_timestamp' → logprob: -20.125

Token 1432: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.16023682057857513
    2. ' +' → logprob: -1.9102368354797363
    3. '
' → logprob: -12.035236358642578
    4. '+
' → logprob: -12.285236358642578
    5. '+self' → logprob: -14.160236358642578
    6. ' +
' → logprob: -14.535236358642578
    7. 'time' → logprob: -15.535236358642578
    8. '＋' → logprob: -15.660236358642578
    9. '+t' → logprob: -15.910236358642578
    10. ' ' → logprob: -16.660236358642578

Token 1433: ' time' (ID: 1058)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -5.550411151489243e-05
    2. ' time' → logprob: -9.875055313110352
    3. '
' → logprob: -12.500055313110352
    4. '   ' → logprob: -16.12505531311035
    5. '(time' → logprob: -16.75005531311035
    6. '_time' → logprob: -17.00005531311035
    7. '=time' → logprob: -17.12505531311035
    8. 'tim' → logprob: -17.75005531311035
    9. '+' → logprob: -18.12505531311035
    10. 't' → logprob: -18.37505531311035

Token 1434: '_for' (ID: 11903)
  Prédit: '_for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_for' → logprob: -4.47757811343763e-05
    2. 'for' → logprob: -10.125044822692871
    3. 'For' → logprob: -12.875044822692871
    4. '
' → logprob: -14.875044822692871
    5. '_segment' → logprob: -15.000044822692871
    6. ' for' → logprob: -15.500044822692871
    7. '_FOR' → logprob: -15.875044822692871
    8. ')' → logprob: -15.875044822692871
    9. '+' → logprob: -16.125043869018555
    10. '   ' → logprob: -16.125043869018555

Token 1435: '_segment' (ID: 71041)
  Prédit: '_for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_for' → logprob: -0.0016760177677497268
    2. '_segment' → logprob: -6.626676082611084
    3. 'for' → logprob: -8.001675605773926
    4. 'segment' → logprob: -11.376675605773926
    5. '_' → logprob: -13.626675605773926
    6. '
' → logprob: -14.126675605773926
    7. 'For' → logprob: -15.251675605773926
    8. '```' → logprob: -15.501675605773926
    9. '_segments' → logprob: -15.626675605773926
    10. '`' → logprob: -15.751675605773926

Token 1436: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22390565276145935
    2. '
' → logprob: -1.7239056825637817
    3. '        
' → logprob: -4.473905563354492
    4. '+' → logprob: -6.348905563354492
    5. ',' → logprob: -6.348905563354492
    6. ')' → logprob: -6.598905563354492
    7. '\n' → logprob: -6.598905563354492
    8. '
' → logprob: -6.973905563354492
    9. 'return' → logprob: -7.223905563354492
    10. ',
' → logprob: -7.473905563354492

Token 1437: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017844246700406075
    2. '
' → logprob: -4.142844200134277
    3. ',' → logprob: -8.017844200134277
    4. '        
' → logprob: -8.142844200134277
    5. ')' → logprob: -8.267844200134277
    6. 'return' → logprob: -8.517844200134277
    7. '<|end|>' → logprob: -8.642844200134277
    8. '\n' → logprob: -8.767844200134277
    9. '\' → logprob: -9.767844200134277
    10. ',
' → logprob: -10.267844200134277

Token 1438: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.3905036449432373
    2. ' res' → logprob: -1.3905036449432373
    3. '       ' → logprob: -1.7655036449432373
    4. ' new' → logprob: -2.3905036449432373
    5. 'res' → logprob: -2.6405036449432373
    6. ' next' → logprob: -3.0155036449432373
    7. 'next' → logprob: -3.5155036449432373
    8. 'new' → logprob: -3.6405036449432373
    9. 'result' → logprob: -3.7655036449432373
    10. ' result' → logprob: -3.8905036449432373

Token 1439: ' after' (ID: 1934)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.14932554960250854
    2. 'next' → logprob: -3.1493256092071533
    3. '       ' → logprob: -3.5243256092071533
    4. 'result' → logprob: -4.274325370788574
    5. 'best' → logprob: -4.649325370788574
    6. 'option' → logprob: -4.774325370788574
    7. 'eat' → logprob: -4.899325370788574
    8. 'new' → logprob: -5.024325370788574
    9. 'total' → logprob: -5.149325370788574
    10. 'time' → logprob: -5.399325370788574

Token 1440: ' eating' (ID: 15700)
  Prédit: '_segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_segment' → logprob: -0.7211276888847351
    2. 'segment' → logprob: -1.3461277484893799
    3. 'time' → logprob: -1.5961277484893799
    4. '_time' → logprob: -3.22112774848938
    5. '_seg' → logprob: -5.596127510070801
    6. 'seg' → logprob: -6.346127510070801
    7. '_e' → logprob: -6.471127510070801
    8. 'e' → logprob: -6.971127510070801
    9. 'eat' → logprob: -7.221127510070801
    10. 'this' → logprob: -7.471127510070801

Token 1441: ',' (ID: 11)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -1.5800760984420776
    2. ',' → logprob: -2.080076217651367
    3. '
' → logprob: -2.205076217651367
    4. '       ' → logprob: -2.205076217651367
    5. 'next' → logprob: -2.705076217651367
    6. '_next' → logprob: -2.705076217651367
    7. 'new' → logprob: -2.955076217651367
    8. ',
' → logprob: -3.205076217651367
    9. 'time' → logprob: -3.580076217651367
    10. '           ' → logprob: -3.955076217651367

Token 1442: ' carrots' (ID: 91266)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.23329292237758636
    2. 'new' → logprob: -2.233292818069458
    3. 'last' → logprob: -2.858292818069458
    4. ' res' → logprob: -4.358293056488037
    5. 'next' → logprob: -4.983293056488037
    6. 'result' → logprob: -5.108293056488037
    7. 'total' → logprob: -5.358293056488037
    8. 'time' → logprob: -5.608293056488037
    9. ' new' → logprob: -5.858293056488037
    10. 'return' → logprob: -5.983293056488037

Token 1443: '_car' (ID: 62991)
  Prédit: '_car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_car' → logprob: -0.00072851701406762
    2. '_in' → logprob: -7.875728607177734
    3. 'car' → logprob: -9.125728607177734
    4. '_used' → logprob: -9.625728607177734
    5. 'Car' → logprob: -10.125728607177734
    6. '_c' → logprob: -10.125728607177734
    7. '=' → logprob: -10.500728607177734
    8. '_' → logprob: -11.000728607177734
    9. '_taken' → logprob: -11.875728607177734
    10. ' =' → logprob: -12.375728607177734

Token 1444: 'ried' (ID: 6089)
  Prédit: 'ried'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ried' → logprob: -0.0043126181699335575
    2. 'r' → logprob: -5.504312515258789
    3. 'red' → logprob: -10.379312515258789
    4. 'ry' → logprob: -10.379312515258789
    5. '_' → logprob: -10.629312515258789
    6. 'ied' → logprob: -10.879312515258789
    7. 'rying' → logprob: -10.879312515258789
    8. 'rie' → logprob: -11.004312515258789
    9. '_car' → logprob: -11.504312515258789
    10. 'car' → logprob: -11.504312515258789

Token 1445: ' remains' (ID: 14777)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014181838370859623
    2. ' =' → logprob: -4.514181613922119
    3. '+' → logprob: -6.514181613922119
    4. ' +' → logprob: -8.389182090759277
    5. '+=' → logprob: -8.514182090759277
    6. 'is' → logprob: -8.514182090759277
    7. ')' → logprob: -8.639182090759277
    8. ' is' → logprob: -8.639182090759277
    9. ',' → logprob: -9.639182090759277
    10. '0' → logprob: -9.764182090759277

Token 1446: ' the' (ID: 290)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.8610504269599915
    2. ' +' → logprob: -1.1110503673553467
    3. ')' → logprob: -1.6110503673553467
    4. '=' → logprob: -4.486050605773926
    5. '       ' → logprob: -4.986050605773926
    6. ' )' → logprob: -5.611050605773926
    7. '
' → logprob: -5.986050605773926
    8. ',' → logprob: -5.986050605773926
    9. ' ' → logprob: -5.986050605773926
    10. ' =' → logprob: -6.236050605773926

Token 1447: ' same' (ID: 2684)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.14467333257198334
    2. '0' → logprob: -2.6446733474731445
    3. 'same' → logprob: -2.7696733474731445
    4. 'current' → logprob: -7.7696733474731445
    5. '```' → logprob: -9.144673347473145
    6. ' same' → logprob: -9.269673347473145
    7. 'zero' → logprob: -9.644673347473145
    8. 'number' → logprob: -10.019673347473145
    9. ' carrots' → logprob: -10.644673347473145
    10. ' ' → logprob: -10.769673347473145

Token 1448: ' if' (ID: 538)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9697906374931335
    2. '       ' → logprob: -1.7197906970977783
    3. '\n' → logprob: -1.8447906970977783
    4. '.' → logprob: -2.4697906970977783
    5. ',' → logprob: -3.0947906970977783
    6. '+' → logprob: -3.5947906970977783
    7. ' if' → logprob: -3.9697906970977783
    8. ')' → logprob: -3.9697906970977783
    9. '        
' → logprob: -3.9697906970977783
    10. ',
' → logprob: -4.094790458679199

Token 1449: ' we' (ID: 581)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -1.0155104398727417
    2. 'False' → logprob: -1.6405104398727417
    3. 'car' → logprob: -2.2655105590820312
    4. 'time' → logprob: -2.3905105590820312
    5. 'we' → logprob: -2.5155105590820312
    6. '0' → logprob: -2.6405105590820312
    7. 'self' → logprob: -3.1405105590820312
    8. 'True' → logprob: -4.015510559082031
    9. 'dist' → logprob: -4.515510559082031
    10. 'not' → logprob: -5.390510559082031

Token 1450: ' eat' (ID: 11237)
  Prédit: 'eat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'eat' → logprob: -1.2089000940322876
    2. 'pick' → logprob: -1.7089000940322876
    3. 'store' → logprob: -1.9589000940322876
    4. 'picked' → logprob: -2.333899974822998
    5. 'have' → logprob: -2.833899974822998
    6. 'just' → logprob: -3.333899974822998
    7. 'stored' → logprob: -3.583899974822998
    8. 'use' → logprob: -3.583899974822998
    9. 'do' → logprob: -3.708899974822998
    10. 'used' → logprob: -3.958899974822998

Token 1451: ' immediately' (ID: 10731)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.060164421796798706
    2. ' +' → logprob: -3.060164451599121
    3. 'im' → logprob: -6.310164451599121
    4. ' immediately' → logprob: -6.310164451599121
    5. ' or' → logprob: -6.685164451599121
    6. ' at' → logprob: -6.935164451599121
    7. 'at' → logprob: -6.935164451599121
    8. '0' → logprob: -7.435164451599121
    9. '-' → logprob: -7.685164451599121
    10. ' -' → logprob: -7.810164451599121

Token 1452: ' without' (ID: 2935)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9951876997947693
    2. '.' → logprob: -1.495187759399414
    3. '
' → logprob: -1.870187759399414
    4. '+' → logprob: -2.120187759399414
    5. ',' → logprob: -3.120187759399414
    6. ' +' → logprob: -3.870187759399414
    7. ' or' → logprob: -4.495187759399414
    8. '.
' → logprob: -4.870187759399414
    9. ' else' → logprob: -4.870187759399414
    10. ' because' → logprob: -5.120187759399414

Token 1453: ' storing' (ID: 42787)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.6053213477134705
    2. ' storing' → logprob: -0.8553213477134705
    3. 'storage' → logprob: -3.8553214073181152
    4. '1' → logprob: -5.980321407318115
    5. ' storage' → logprob: -6.480321407318115
    6. 'store' → logprob: -7.105321407318115
    7. 'adding' → logprob: -7.105321407318115
    8. ' picking' → logprob: -7.355321407318115
    9. 'increment' → logprob: -7.980321407318115
    10. 'using' → logprob: -8.480320930480957

Token 1454: ' new' (ID: 620)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6480771899223328
    2. '       ' → logprob: -0.7730771899223328
    3. '        
' → logprob: -4.898077011108398
    4. ',' → logprob: -6.148077011108398
    5. '
' → logprob: -6.773077011108398
    6. ')' → logprob: -6.773077011108398
    7. '.' → logprob: -7.648077011108398
    8. ',
' → logprob: -7.648077011108398
    9. '<|end|>' → logprob: -7.773077011108398
    10. ')
' → logprob: -8.148077011108398

Token 1455: ' carrot' (ID: 121234)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8309750556945801
    2. '_car' → logprob: -0.8309750556945801
    3. 'car' → logprob: -3.20597505569458
    4. ')' → logprob: -3.33097505569458
    5. ' carrot' → logprob: -4.33097505569458
    6. '.' → logprob: -4.70597505569458
    7. '+' → logprob: -4.83097505569458
    8. ' +' → logprob: -5.45597505569458
    9. ' _' → logprob: -5.45597505569458
    10. '_token' → logprob: -5.58097505569458

Token 1456: ' (' (ID: 350)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.22512216866016388
    2. '       ' → logprob: -1.7251222133636475
    3. '
' → logprob: -5.225121974945068
    4. '.' → logprob: -5.725121974945068
    5. '        
' → logprob: -5.725121974945068
    6. ')' → logprob: -5.850121974945068
    7. ',' → logprob: -6.100121974945068
    8. '.
' → logprob: -6.725121974945068
    9. ',
' → logprob: -7.100121974945068
    10. ')
' → logprob: -7.225121974945068

Token 1457: 'just' (ID: 5283)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.053458865731954575
    2. ')
' → logprob: -3.8034589290618896
    3. '+' → logprob: -4.3034586906433105
    4. 'because' → logprob: -5.6784586906433105
    5. '#' → logprob: -5.8034586906433105
    6. '),' → logprob: -6.3034586906433105
    7. ' because' → logprob: -6.6784586906433105
    8. ' )' → logprob: -7.0534586906433105
    9. '
' → logprob: -7.5534586906433105
    10. ' or' → logprob: -7.8034586906433105

Token 1458: ' no' (ID: 860)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6980500221252441
    2. 'increment' → logprob: -1.6980500221252441
    3. '0' → logprob: -2.323050022125244
    4. 'pass' → logprob: -2.448050022125244
    5. '+' → logprob: -2.698050022125244
    6. 'pick' → logprob: -2.948050022125244
    7. 'consume' → logprob: -2.948050022125244
    8. 'continue' → logprob: -3.073050022125244
    9. 'de' → logprob: -3.073050022125244
    10. 'use' → logprob: -3.573050022125244

Token 1459: ' change' (ID: 3343)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7420260310173035
    2. 'change' → logprob: -2.1170260906219482
    3. ' change' → logprob: -2.2420260906219482
    4. '_car' → logprob: -2.7420260906219482
    5. 'car' → logprob: -2.8670260906219482
    6. '_' → logprob: -3.2420260906219482
    7. '_change' → logprob: -3.7420260906219482
    8. ' )' → logprob: -3.8670260906219482
    9. '+' → logprob: -4.242025852203369
    10. ' changes' → logprob: -4.367025852203369

Token 1460: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.046502042561769485
    2. '),' → logprob: -3.671502113342285
    3. ')
' → logprob: -5.296502113342285
    4. ' in' → logprob: -5.796502113342285
    5. ').' → logprob: -6.046502113342285
    6. '
' → logprob: -6.171502113342285
    7. 'car' → logprob: -6.171502113342285
    8. ' at' → logprob: -6.546502113342285
    9. '_car' → logprob: -7.296502113342285
    10. ',' → logprob: -7.546502113342285

Token 1461: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02063029259443283
    2. '
' → logprob: -4.770630359649658
    3. '        
' → logprob: -5.520630359649658
    4. ')' → logprob: -6.145630359649658
    5. '\n' → logprob: -6.895630359649658
    6. ' 
' → logprob: -6.895630359649658
    7. '+' → logprob: -7.270630359649658
    8. ',' → logprob: -7.395630359649658
    9. 'return' → logprob: -7.770630359649658
    10. '           ' → logprob: -8.0206298828125

Token 1462: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4086126983165741
    2. '
' → logprob: -1.6586127281188965
    3. ')' → logprob: -2.5336127281188965
    4. ')
' → logprob: -4.4086127281188965
    5. ',' → logprob: -4.5336127281188965
    6. ' 
' → logprob: -4.7836127281188965
    7. '        
' → logprob: -5.0336127281188965
    8. ' if' → logprob: -5.4086127281188965
    9. '\n' → logprob: -5.7836127281188965
    10. '+' → logprob: -5.9086127281188965

Token 1463: ' or' (ID: 503)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.20401263236999512
    2. 'result' → logprob: -2.829012632369995
    3. '       ' → logprob: -3.204012632369995
    4. ' res' → logprob: -3.454012632369995
    5. 'next' → logprob: -4.079012870788574
    6. 'time' → logprob: -4.329012870788574
    7. 'new' → logprob: -5.329012870788574
    8. 'if' → logprob: -5.454012870788574
    9. 'eat' → logprob: -5.954012870788574
    10. '
' → logprob: -6.204012870788574

Token 1464: ' decreases' (ID: 70943)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.662342369556427
    2. 'if' → logprob: -1.7873423099517822
    3. ' if' → logprob: -2.1623423099517822
    4. ' carrots' → logprob: -2.6623423099517822
    5. '
' → logprob: -3.4123423099517822
    6. '+' → logprob: -3.7873423099517822
    7. '#' → logprob: -4.162342548370361
    8. 'time' → logprob: -4.162342548370361
    9. '       ' → logprob: -4.662342548370361
    10. 'self' → logprob: -5.037342548370361

Token 1465: ' by' (ID: 656)
  Prédit: ' by'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' by' → logprob: -0.7941781878471375
    2. ' if' → logprob: -1.1691782474517822
    3. 'by' → logprob: -1.7941782474517822
    4. 'if' → logprob: -3.6691782474517822
    5. '<|end|>' → logprob: -4.294178009033203
    6. '=' → logprob: -4.544178009033203
    7. '<|end|>' → logprob: -5.544178009033203
    8. ',' → logprob: -5.919178009033203
    9. '.' → logprob: -6.544178009033203
    10. '_if' → logprob: -6.669178009033203

Token 1466: ' one' (ID: 1001)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0018830618355423212
    2. '0' → logprob: -6.376883029937744
    3. ' ' → logprob: -8.751883506774902
    4. 'one' → logprob: -11.126883506774902
    5. 'car' → logprob: -12.251883506774902
    6. ' one' → logprob: -13.126883506774902
    7. 'zero' → logprob: -15.501883506774902
    8. '
' → logprob: -15.751883506774902
    9. '   ' → logprob: -16.001882553100586
    10. 'the' → logprob: -16.251882553100586

Token 1467: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.05696578323841095
    2. 'if' → logprob: -4.0569658279418945
    3. '<|end|>' → logprob: -4.1819658279418945
    4. '.' → logprob: -4.3069658279418945
    5. '<|end|>' → logprob: -6.1819658279418945
    6. ',' → logprob: -6.1819658279418945
    7. ')' → logprob: -6.6819658279418945
    8. ' or' → logprob: -6.9319658279418945
    9. '
' → logprob: -7.5569658279418945
    10. ' ' → logprob: -7.5569658279418945

Token 1468: ' we' (ID: 581)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.13247469067573547
    2. 'we' → logprob: -2.257474660873413
    3. 'e' → logprob: -4.382474899291992
    4. '1' → logprob: -6.007474899291992
    5. '0' → logprob: -6.882474899291992
    6. 'self' → logprob: -7.132474899291992
    7. 'stored' → logprob: -7.257474899291992
    8. 'True' → logprob: -7.882474899291992
    9. ' carrots' → logprob: -7.882474899291992
    10. ' we' → logprob: -7.882474899291992

Token 1469: ' eat' (ID: 11237)
  Prédit: 'eat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eat' → logprob: -0.40261077880859375
    2. 'use' → logprob: -1.5276107788085938
    3. ' use' → logprob: -3.0276107788085938
    4. ' eat' → logprob: -4.027610778808594
    5. 'store' → logprob: -4.277610778808594
    6. 'have' → logprob: -4.777610778808594
    7. 'stored' → logprob: -5.027610778808594
    8. 'choose' → logprob: -5.527610778808594
    9. ' stored' → logprob: -5.777610778808594
    10. '>' → logprob: -6.027610778808594

Token 1470: ' from' (ID: 591)
  Prédit: ' immediately'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' immediately' → logprob: -0.910327136516571
    2. ' ' → logprob: -1.0353271961212158
    3. 'im' → logprob: -2.785327196121216
    4. ')' → logprob: -2.910327196121216
    5. ' stored' → logprob: -3.785327196121216
    6. 'stored' → logprob: -4.035326957702637
    7. '_' → logprob: -4.160326957702637
    8. '_im' → logprob: -4.660326957702637
    9. ' if' → logprob: -4.785326957702637
    10. ' +' → logprob: -5.160326957702637

Token 1471: ' stored' (ID: 16240)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5448105931282043
    2. 'storage' → logprob: -1.2948105335235596
    3. 'stored' → logprob: -2.1698105335235596
    4. ' storage' → logprob: -4.169810771942139
    5. 'car' → logprob: -4.669810771942139
    6. ' ' → logprob: -5.544810771942139
    7. ' stored' → logprob: -6.669810771942139
    8. '
' → logprob: -7.544810771942139
    9. 'the' → logprob: -7.544810771942139
    10. 'self' → logprob: -7.794810771942139

Token 1472: ' carrots' (ID: 91266)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5565667748451233
    2. '_car' → logprob: -1.3065667152404785
    3. ')' → logprob: -2.3065667152404785
    4. 'car' → logprob: -3.3065667152404785
    5. '-' → logprob: -4.9315667152404785
    6. ' carrot' → logprob: -5.6815667152404785
    7. '_token' → logprob: -6.6815667152404785
    8. '_c' → logprob: -6.6815667152404785
    9. '-car' → logprob: -6.9315667152404785
    10. '.' → logprob: -7.1815667152404785

Token 1473: '.

' (ID: 364)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2731834948062897
    2. '       ' → logprob: -2.398183584213257
    3. '.' → logprob: -3.523183584213257
    4. '-' → logprob: -4.148183345794678
    5. ':' → logprob: -4.148183345794678
    6. '+' → logprob: -4.273183345794678
    7. ',' → logprob: -4.523183345794678
    8. ' ' → logprob: -4.898183345794678
    9. ' and' → logprob: -5.023183345794678
    10. 'If' → logprob: -5.148183345794678

Token 1474: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2294396013021469
    2. ' 
' → logprob: -2.6044394969940186
    3. '
' → logprob: -3.4794394969940186
    4. '\n' → logprob: -3.4794394969940186
    5. ' if' → logprob: -4.104439735412598
    6. '\' → logprob: -4.354439735412598
    7. '        
' → logprob: -4.854439735412598
    8. ',' → logprob: -5.479439735412598
    9. '+' → logprob: -5.729439735412598
    10. ')' → logprob: -5.854439735412598

Token 1475: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.830237865447998
    2. 'res' → logprob: -1.580237865447998
    3. 'options' → logprob: -1.580237865447998
    4. '       ' → logprob: -3.580237865447998
    5. '#' (adapté à ' #') → logprob: -4.080237865447998
    6. '
' → logprob: -4.205237865447998
    7. 'actions' → logprob: -4.205237865447998
    8. 'best' → logprob: -4.330237865447998
    9. 'result' → logprob: -4.330237865447998
    10. 'min' → logprob: -4.455237865447998

Token 1476: ' Eat' (ID: 60629)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.23224171996116638
    2. ' if' → logprob: -2.607241630554199
    3. '       ' → logprob: -2.857241630554199
    4. 'for' → logprob: -3.982241630554199
    5. '#' → logprob: -4.107241630554199
    6. '
' → logprob: -4.982241630554199
    7. 'options' → logprob: -5.107241630554199
    8. 'eat' → logprob: -5.107241630554199
    9. 'e' → logprob: -5.732241630554199
    10. ' options' → logprob: -5.982241630554199

Token 1477: ' without' (ID: 2935)
  Prédit: '_im'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_im' → logprob: -0.31313464045524597
    2. '_if' → logprob: -2.4381346702575684
    3. '_options' → logprob: -3.0631346702575684
    4. 'if' → logprob: -3.3131346702575684
    5. '_from' → logprob: -3.4381346702575684
    6. '_now' → logprob: -3.8131346702575684
    7. '_car' → logprob: -4.313134670257568
    8. '_time' → logprob: -4.438134670257568
    9. 'im' → logprob: -5.188134670257568
    10. 'from' → logprob: -6.063134670257568

Token 1478: ' stored' (ID: 16240)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.5816007256507874
    2. ' storing' → logprob: -1.2066006660461426
    3. 'using' → logprob: -2.5816006660461426
    4. 'stored' → logprob: -3.5816006660461426
    5. 'storage' → logprob: -4.206600666046143
    6. ' using' → logprob: -4.331600666046143
    7. 'car' → logprob: -5.581600666046143
    8. ' picking' → logprob: -6.456600666046143
    9. ' storage' → logprob: -7.081600666046143
    10. ' stored' → logprob: -7.581600666046143

Token 1479: ' carrots' (ID: 91266)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3246696889400482
    2. '_car' → logprob: -1.3246697187423706
    3. 'car' → logprob: -5.44966983795166
    4. '_c' → logprob: -5.82466983795166
    5. '_tokens' → logprob: -6.07466983795166
    6. ' _' → logprob: -6.69966983795166
    7. '_token' → logprob: -9.07466983795166
    8. ' ' → logprob: -9.57466983795166
    9. ')' → logprob: -9.69966983795166
    10. ')_' → logprob: -10.94966983795166

Token 1480: ' means' (ID: 4748)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5592571496963501
    2. ':' → logprob: -1.43425714969635
    3. ' or' → logprob: -2.3092570304870605
    4. 'if' → logprob: -2.9342570304870605
    5. '       ' → logprob: -4.5592570304870605
    6. ' and' → logprob: -4.8092570304870605
    7. ',' → logprob: -5.1842570304870605
    8. ':
' → logprob: -6.3092570304870605
    9. ')' → logprob: -6.6842570304870605
    10. '=' → logprob: -6.8092570304870605

Token 1481: ' pick' (ID: 5230)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.7828611731529236
    2. '1' → logprob: -0.9078611731529236
    3. ' carrots' → logprob: -2.4078612327575684
    4. ' ' → logprob: -3.2828612327575684
    5. '0' → logprob: -5.407861232757568
    6. '       ' → logprob: -7.282861232757568
    7. ' True' → logprob: -7.407861232757568
    8. ' self' → logprob: -7.532861232757568
    9. '```' → logprob: -7.657861232757568
    10. 'self' → logprob: -7.657861232757568

Token 1482: '-and' (ID: 17224)
  Prédit: 'up'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'up' → logprob: -0.613599956035614
    2. ' up' → logprob: -1.3636000156402588
    3. 'and' → logprob: -2.738600015640259
    4. ' and' → logprob: -3.238600015640259
    5. 'ing' → logprob: -4.36359977722168
    6. '_up' → logprob: -4.48859977722168
    7. '_token' → logprob: -5.11359977722168
    8. ')' → logprob: -5.11359977722168
    9. '_and' → logprob: -5.11359977722168
    10. ' new' → logprob: -5.23859977722168

Token 1483: '-e' (ID: 7863)
  Prédit: 'eat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eat' → logprob: -0.004780645947903395
    2. 'im' → logprob: -5.3797807693481445
    3. ' eat' → logprob: -9.254780769348145
    4. 'e' → logprob: -10.129780769348145
    5. '-e' → logprob: -12.004780769348145
    6. 'play' → logprob: -12.004780769348145
    7. 'consume' → logprob: -12.004780769348145
    8. 'run' → logprob: -13.629780769348145
    9. 'use' → logprob: -13.754780769348145
    10. '>' → logprob: -14.004780769348145

Token 1484: 'at' (ID: 266)
  Prédit: 'at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.0005281301564536989
    2. 'eat' → logprob: -7.625528335571289
    3. '```' → logprob: -11.875528335571289
    4. 'e' → logprob: -12.125528335571289
    5. 'At' → logprob: -12.250528335571289
    6. ' at' → logprob: -12.938028335571289
    7. 'ate' → logprob: -13.500528335571289
    8. 'a' → logprob: -13.563028335571289
    9. 'im' → logprob: -13.750528335571289
    10. 'att' → logprob: -14.188028335571289

Token 1485: ' immediately' (ID: 10731)
  Prédit: ' immediately'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' immediately' → logprob: -0.35510310530662537
    2. '
' → logprob: -2.355103015899658
    3. 'im' → logprob: -3.105103015899658
    4. ')' → logprob: -3.605103015899658
    5. '()
' → logprob: -3.855103015899658
    6. '       ' → logprob: -3.980103015899658
    7. ' at' → logprob: -4.480103015899658
    8. '_im' → logprob: -4.855103015899658
    9. 'Immediately' → logprob: -4.980103015899658
    10. ')
' → logprob: -4.980103015899658

Token 1486: '.

' (ID: 364)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6069648265838623
    2. '       ' → logprob: -1.3569648265838623
    3. ' if' → logprob: -2.4819648265838623
    4. '.' → logprob: -3.1069648265838623
    5. ',' → logprob: -3.8569648265838623
    6. ')' → logprob: -4.231965065002441
    7. '
' → logprob: -4.231965065002441
    8. 'if' → logprob: -5.731965065002441
    9. ':
' → logprob: -5.731965065002441
    10. '```' → logprob: -6.481965065002441

Token 1487: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1905449479818344
    2. '
' → logprob: -2.065544843673706
    3. 'if' → logprob: -4.190545082092285
    4. ' if' → logprob: -4.190545082092285
    5. '        
' → logprob: -4.815545082092285
    6. ')' → logprob: -5.565545082092285
    7. ',' → logprob: -7.065545082092285
    8. ' 
' → logprob: -7.190545082092285
    9. '#' → logprob: -8.065545082092285
    10. '  
' → logprob: -8.190545082092285

Token 1488: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7895321249961853
    2. 'if' → logprob: -0.9145321249961853
    3. '
' → logprob: -2.91453218460083
    4. 'next' → logprob: -3.78953218460083
    5. '#' (adapté à ' #') → logprob: -4.03953218460083
    6. 'eat' → logprob: -4.66453218460083
    7. 'res' → logprob: -4.78953218460083
    8. ' if' → logprob: -5.03953218460083
    9. 'result' → logprob: -5.28953218460083
    10. 'options' → logprob: -5.66453218460083

Token 1489: ' So' (ID: 2632)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.32538318634033203
    2. '#' → logprob: -2.325383186340332
    3. '       ' → logprob: -2.325383186340332
    4. 'options' → logprob: -3.450383186340332
    5. 'res' → logprob: -4.200383186340332
    6. 'eat' → logprob: -5.200383186340332
    7. 'result' → logprob: -5.325383186340332
    8. 'next' → logprob: -5.450383186340332
    9. '
' → logprob: -5.575383186340332
    10. 'time' → logprob: -5.700383186340332

Token 1490: ' two' (ID: 1920)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.06288625299930573
    2. '#' → logprob: -3.6878862380981445
    3. ' if' → logprob: -3.8128862380981445
    4. 'for' → logprob: -4.9378862380981445
    5. 'stored' → logprob: -6.0628862380981445
    6. '       ' → logprob: -6.5628862380981445
    7. '           ' → logprob: -6.8128862380981445
    8. ':' → logprob: -7.8128862380981445
    9. '
' → logprob: -8.187886238098145
    10. ' for' → logprob: -8.312886238098145

Token 1491: ' sub' (ID: 1543)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0774906873703003
    2. ' options' → logprob: -1.3274906873703003
    3. 'options' → logprob: -1.4524906873703003
    4. ' possibilities' → logprob: -2.95249080657959
    5. '#' → logprob: -3.70249080657959
    6. 'poss' → logprob: -3.82749080657959
    7. '_options' → logprob: -4.57749080657959
    8. 'possible' → logprob: -4.82749080657959
    9. '           ' → logprob: -5.20249080657959
    10. ' possible' → logprob: -5.57749080657959

Token 1492: 'cases' (ID: 39373)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0820198059082031
    2. 'actions' → logprob: -1.0820198059082031
    3. 'options' → logprob: -2.207019805908203
    4. '       ' → logprob: -2.457019805908203
    5. 'tokens' → logprob: -3.457019805908203
    6. 'cases' → logprob: -4.207019805908203
    7. '
' → logprob: -4.457019805908203
    8. ')' → logprob: -4.457019805908203
    9. ' options' → logprob: -4.832019805908203
    10. '#' → logprob: -5.332019805908203

Token 1493: ' here' (ID: 2105)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.019015610218048096
    2. ':
' → logprob: -4.019015789031982
    3. ':

' → logprob: -7.644015789031982
    4. ' if' → logprob: -9.644015312194824
    5. '
' → logprob: -9.769015312194824
    6. '#' → logprob: -9.894015312194824
    7. ',' → logprob: -9.894015312194824
    8. '<|end|>' → logprob: -10.644015312194824
    9. '<|end|>' → logprob: -10.769015312194824
    10. '       ' → logprob: -11.019015312194824

Token 1494: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.038860198110342026
    2. ':
' → logprob: -4.413860321044922
    3. '
' → logprob: -4.538860321044922
    4. '#' → logprob: -4.788860321044922
    5. '       ' → logprob: -5.788860321044922
    6. ':

' → logprob: -6.038860321044922
    7. '<|end|>' → logprob: -8.163860321044922
    8. ',' → logprob: -8.288860321044922
    9. '

' → logprob: -8.538860321044922
    10. '<|end|>' → logprob: -8.663860321044922

Token 1495: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.528617262840271
    2. '#' → logprob: -1.528617262840271
    3. '
' → logprob: -1.903617262840271
    4. '        
' → logprob: -3.7786173820495605
    5. 'if' → logprob: -4.7786173820495605
    6. ' 
' → logprob: -5.0286173820495605
    7. ' if' → logprob: -5.5286173820495605
    8. ' #' → logprob: -7.6536173820495605
    9. '<|end|>' → logprob: -7.9036173820495605
    10. '        ' → logprob: -8.153616905212402

Token 1496: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.7091516256332397
    2. 'if' → logprob: -0.7091516256332397
    3. '
' → logprob: -4.959151744842529
    4. '       ' → logprob: -5.084151744842529
    5. ' if' → logprob: -6.709151744842529
    6. 'for' → logprob: -6.709151744842529
    7. ' #' → logprob: -9.709151268005371
    8. 'import' → logprob: -10.584151268005371
    9. '   ' → logprob: -10.709151268005371
    10. '           ' → logprob: -10.709151268005371

Token 1497: ' -' (ID: 533)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.26233965158462524
    2. '#' → logprob: -1.5123395919799805
    3. 'for' → logprob: -5.2623395919799805
    4. '       ' → logprob: -6.1373395919799805
    5. '
' → logprob: -6.3873395919799805
    6. ' if' → logprob: -6.7623395919799805
    7. 'import' → logprob: -9.88733959197998
    8. ' #' → logprob: -10.76233959197998
    9. 'min' → logprob: -11.01233959197998
    10. '```' → logprob: -11.26233959197998

Token 1498: ' Eat' (ID: 60629)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.1321637630462646
    2. '#' → logprob: -1.2571637630462646
    3. 'True' → logprob: -2.2571637630462646
    4. ' if' → logprob: -2.3821637630462646
    5. ' carrots' → logprob: -2.6321637630462646
    6. ' True' → logprob: -3.1321637630462646
    7. 'car' → logprob: -3.6321637630462646
    8. '
' → logprob: -4.507164001464844
    9. '(True' → logprob: -4.507164001464844
    10. ' #' → logprob: -4.507164001464844

Token 1499: ' carrot' (ID: 121234)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.3274706602096558
    2. '_from' → logprob: -1.3274706602096558
    3. '_im' → logprob: -1.4524706602096558
    4. '_' → logprob: -2.3274707794189453
    5. 'stored' → logprob: -3.0774707794189453
    6. ' from' → logprob: -3.7024707794189453
    7. ' if' → logprob: -4.702470779418945
    8. 'im' → logprob: -4.827470779418945
    9. ' immediately' → logprob: -4.827470779418945
    10. '_st' → logprob: -4.827470779418945

Token 1500: ' immediately' (ID: 10731)
  Prédit: '_im'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_im' → logprob: -0.10355035960674286
    2. 'im' → logprob: -3.103550434112549
    3. ' immediately' → logprob: -4.603550434112549
    4. 'stored' → logprob: -4.853550434112549
    5. '_from' → logprob: -4.978550434112549
    6. 'from' → logprob: -5.353550434112549
    7. '_now' → logprob: -5.478550434112549
    8. '_' → logprob: -5.603550434112549
    9. '_in' → logprob: -5.603550434112549
    10. '_at' → logprob: -6.103550434112549

Token 1501: ' by' (ID: 656)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4812089800834656
    2. 'if' → logprob: -1.2312090396881104
    3. 'without' → logprob: -3.8562090396881104
    4. ' without' → logprob: -4.106208801269531
    5. ' (' → logprob: -4.731208801269531
    6. ':' → logprob: -4.731208801269531
    7. ',' → logprob: -4.731208801269531
    8. '       ' → logprob: -4.856208801269531
    9. '
' → logprob: -5.356208801269531
    10. 'with' → logprob: -6.481208801269531

Token 1502: ' picking' (ID: 30859)
  Prédit: 'pick'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pick' → logprob: -0.5756431818008423
    2. 'p' → logprob: -1.3256431818008423
    3. 'using' → logprob: -2.4506430625915527
    4. '1' → logprob: -3.8256430625915527
    5. ' picking' → logprob: -4.575643062591553
    6. 'running' → logprob: -4.700643062591553
    7. 'passing' → logprob: -4.825643062591553
    8. '0' → logprob: -5.450643062591553
    9. 'not' → logprob: -5.450643062591553
    10. 'self' → logprob: -5.950643062591553

Token 1503: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.20075173676013947
    2. ' and' → logprob: -2.700751781463623
    3. 'up' → logprob: -3.575751781463623
    4. ' up' → logprob: -4.200751781463623
    5. '<|end|>' → logprob: -4.575751781463623
    6. ')' → logprob: -4.700751781463623
    7. 'from' → logprob: -4.825751781463623
    8. '
' → logprob: -5.200751781463623
    9. 'without' → logprob: -5.200751781463623
    10. 'at' → logprob: -5.325751781463623

Token 1504: ' eating' (ID: 15700)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.10034630447626114
    2. 'im' → logprob: -2.975346326828003
    3. 'not' → logprob: -3.225346326828003
    4. 'running' → logprob: -5.600346088409424
    5. ' eating' → logprob: -8.725346565246582
    6. ' not' → logprob: -8.850346565246582
    7. 'return' → logprob: -8.975346565246582
    8. 'sk' → logprob: -9.100346565246582
    9. 'passing' → logprob: -9.600346565246582
    10. 'using' → logprob: -9.725346565246582

Token 1505: ' (' (ID: 350)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6906857490539551
    2. ' it' → logprob: -2.440685749053955
    3. ' at' → logprob: -2.690685749053955
    4. 'without' → logprob: -2.940685749053955
    5. ' without' → logprob: -3.440685749053955
    6. 'it' → logprob: -3.440685749053955
    7. 'token' → logprob: -3.690685749053955
    8. 'im' → logprob: -4.065685749053955
    9. ' ' → logprob: -4.065685749053955
    10. '.' → logprob: -4.190685749053955

Token 1506: 'car' (ID: 6830)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01016766857355833
    2. '):' → logprob: -5.135167598724365
    3. ')
' → logprob: -5.885167598724365
    4. '):
' → logprob: -8.010168075561523
    5. ' )' → logprob: -8.135168075561523
    6. ':' → logprob: -8.510168075561523
    7. '#' → logprob: -8.510168075561523
    8. '
' → logprob: -8.760168075561523
    9. ' ' → logprob: -10.260168075561523
    10. '   ' → logprob: -10.760168075561523

Token 1507: 'rots' (ID: 175556)
  Prédit: 'rots'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rots' → logprob: -0.029530609026551247
    2. 'rot' → logprob: -4.5295305252075195
    3. ')' → logprob: -5.4045305252075195
    4. 'ried' → logprob: -5.5295305252075195
    5. 'r' → logprob: -5.5295305252075195
    6. '_' → logprob: -6.2795305252075195
    7. 'rying' → logprob: -7.4045305252075195
    8. 's' → logprob: -7.9045305252075195
    9. ')
' → logprob: -7.9045305252075195
    10. '_)' → logprob: -8.40453052520752

Token 1508: '_car' (ID: 62991)
  Prédit: '_car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_car' → logprob: -0.023995285853743553
    2. '_in' → logprob: -4.523995399475098
    3. ')' → logprob: -5.398995399475098
    4. '_' → logprob: -5.648995399475098
    5. '_c' → logprob: -6.773995399475098
    6. 'car' → logprob: -6.898995399475098
    7. ',' → logprob: -8.523995399475098
    8. ' )' → logprob: -8.523995399475098
    9. ' in' → logprob: -8.523995399475098
    10. 'in' → logprob: -8.898995399475098

Token 1509: 'ried' (ID: 6089)
  Prédit: 'ried'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ried' → logprob: -0.004224658943712711
    2. 'r' → logprob: -5.87922477722168
    3. '_' → logprob: -6.75422477722168
    4. '_r' → logprob: -9.25422477722168
    5. '>' → logprob: -10.12922477722168
    6. '```' → logprob: -11.00422477722168
    7. 'rie' → logprob: -11.25422477722168
    8. '[' → logprob: -11.62922477722168
    9. ')' → logprob: -11.62922477722168
    10. '
' → logprob: -12.12922477722168

Token 1510: ' unchanged' (ID: 73928)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6873191595077515
    2. ' ==' → logprob: -1.4373191595077515
    3. '==' → logprob: -2.187319278717041
    4. ' >' → logprob: -3.062319278717041
    5. ' +' → logprob: -3.562319278717041
    6. '>' → logprob: -3.562319278717041
    7. ' )' → logprob: -4.062319278717041
    8. '+' → logprob: -5.187319278717041
    9. ' >=' → logprob: -5.437319278717041
    10. '=' → logprob: -5.937319278717041

Token 1511: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007006028667092323
    2. ')
' → logprob: -5.1320061683654785
    3. ' )' → logprob: -7.7570061683654785
    4. ' or' → logprob: -8.25700569152832
    5. '):' → logprob: -9.25700569152832
    6. '),' → logprob: -9.63200569152832
    7. '#' → logprob: -9.63200569152832
    8. '):
' → logprob: -10.75700569152832
    9. ' )
' → logprob: -10.88200569152832
    10. ')
' → logprob: -11.00700569152832

Token 1512: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3930688798427582
    2. ')' → logprob: -1.3930689096450806
    3. '
' → logprob: -2.768068790435791
    4. ')
' → logprob: -4.768068790435791
    5. ',' → logprob: -6.893068790435791
    6. ':' → logprob: -7.393068790435791
    7. '           ' → logprob: -7.393068790435791
    8. ',
' → logprob: -7.893068790435791
    9. '        
' → logprob: -8.39306926727295
    10. '```' → logprob: -8.39306926727295

Token 1513: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5462861657142639
    2. '
' → logprob: -0.9212861657142639
    3. ')' → logprob: -5.296286106109619
    4. ')
' → logprob: -5.421286106109619
    5. 'if' → logprob: -5.671286106109619
    6. '        
' → logprob: -5.921286106109619
    7. ' if' → logprob: -6.171286106109619
    8. '#' (adapté à ' #') → logprob: -6.296286106109619
    9. '           ' → logprob: -7.296286106109619
    10. ',' → logprob: -7.671286106109619

Token 1514: ' -' (ID: 533)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.6944964528083801
    2. 'time' → logprob: -1.4444963932037354
    3. '       ' → logprob: -2.0694963932037354
    4. '#' → logprob: -3.5694963932037354
    5. 'sub' → logprob: -3.9444963932037354
    6. 'min' → logprob: -4.4444966316223145
    7. '
' → logprob: -4.4444966316223145
    8. 'eat' → logprob: -4.5694966316223145
    9. 'next' → logprob: -4.6944966316223145
    10. 'if' → logprob: -4.9444966316223145

Token 1515: ' Eat' (ID: 60629)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.34514063596725464
    2. '#' → logprob: -1.4701406955718994
    3. ' if' → logprob: -3.2201406955718994
    4. 'Eat' → logprob: -4.84514045715332
    5. 'If' → logprob: -4.97014045715332
    6. '
' → logprob: -6.47014045715332
    7. 'try' → logprob: -6.59514045715332
    8. ' #' → logprob: -6.59514045715332
    9. 'elif' → logprob: -6.97014045715332
    10. '       ' → logprob: -7.09514045715332

Token 1516: ' carrot' (ID: 121234)
  Prédit: ' stored'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stored' → logprob: -0.8697383999824524
    2. 'stored' → logprob: -0.8697383999824524
    3. ' carrot' → logprob: -1.9947383403778076
    4. 'car' → logprob: -4.119738578796387
    5. 'from' → logprob: -4.994738578796387
    6. '_' → logprob: -6.994738578796387
    7. ' from' → logprob: -7.119738578796387
    8. '_car' → logprob: -8.119738578796387
    9. '_from' → logprob: -9.119738578796387
    10. ' carrots' → logprob: -9.119738578796387

Token 1517: ' immediately' (ID: 10731)
  Prédit: 'im'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'im' → logprob: -0.8512657284736633
    2. 'from' → logprob: -0.8512657284736633
    3. 'stored' → logprob: -2.6012656688690186
    4. '_im' → logprob: -3.8512656688690186
    5. 'if' → logprob: -4.476265907287598
    6. ' from' → logprob: -4.601265907287598
    7. '_from' → logprob: -4.726265907287598
    8. ' immediately' → logprob: -4.726265907287598
    9. ' if' → logprob: -5.851265907287598
    10. ' stored' → logprob: -6.476265907287598

Token 1518: ' by' (ID: 656)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3912038505077362
    2. 'and' → logprob: -2.1412038803100586
    3. ' and' → logprob: -2.2662038803100586
    4. 'if' → logprob: -2.6412038803100586
    5. 'from' → logprob: -4.266203880310059
    6. ' ' → logprob: -5.141203880310059
    7. ' by' → logprob: -6.016203880310059
    8. ' from' → logprob: -6.641203880310059
    9. ':' → logprob: -6.766203880310059
    10. 'If' → logprob: -7.016203880310059

Token 1519: ' eating' (ID: 15700)
  Prédit: 'using'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'using' → logprob: -0.1282913237810135
    2. 'stored' → logprob: -2.628291368484497
    3. '(using' → logprob: -4.253291130065918
    4. 'used' → logprob: -5.003291130065918
    5. '(' → logprob: -5.128291130065918
    6. '(st' → logprob: -5.128291130065918
    7. 'car' → logprob: -5.628291130065918
    8. 'e' → logprob: -6.253291130065918
    9. '(self' → logprob: -6.378291130065918
    10. 'st' → logprob: -6.753291130065918

Token 1520: ' stored' (ID: 16240)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.4736129343509674
    2. 'stored' → logprob: -1.598612904548645
    3. ' stored' → logprob: -2.2236130237579346
    4. ' from' → logprob: -2.8486130237579346
    5. ' if' → logprob: -5.5986127853393555
    6. 'if' → logprob: -6.7236127853393555
    7. '_' → logprob: -7.2236127853393555
    8. 'car' → logprob: -7.2236127853393555
    9. '_from' → logprob: -7.3486127853393555
    10. ')' → logprob: -7.8486127853393555

Token 1521: ' carrot' (ID: 121234)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.016509242355823517
    2. '_car' → logprob: -4.141509056091309
    3. ' _' → logprob: -8.141509056091309
    4. '_c' → logprob: -8.891509056091309
    5. '_
' → logprob: -11.766509056091309
    6. 'car' → logprob: -12.016509056091309
    7. ' ' → logprob: -12.641509056091309
    8. '_token' → logprob: -12.641509056091309
    9. '```' → logprob: -12.641509056091309
    10. ')' → logprob: -12.766509056091309

Token 1522: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8385809659957886
    2. '
' → logprob: -1.7135809659957886
    3. ')' → logprob: -1.9635809659957886
    4. ':' → logprob: -2.088581085205078
    5. ' if' → logprob: -3.213581085205078
    6. ',' → logprob: -4.338581085205078
    7. 'if' → logprob: -4.713581085205078
    8. '=' → logprob: -5.463581085205078
    9. '.' → logprob: -5.463581085205078
    10. ')
' → logprob: -5.463581085205078

Token 1523: 'if' (ID: 366)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08023896813392639
    2. 'car' → logprob: -3.7052390575408936
    3. ' )' → logprob: -4.2052388191223145
    4. '):
' → logprob: -4.4552388191223145
    5. '):' → logprob: -4.8302388191223145
    6. 'if' → logprob: -4.8302388191223145
    7. ' if' → logprob: -5.2052388191223145
    8. ' ' → logprob: -6.5802388191223145
    9. ' ):
' → logprob: -7.9552388191223145
    10. ')
' → logprob: -8.080239295959473

Token 1524: ' carrots' (ID: 91266)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.001515696058049798
    2. ' carrots' → logprob: -6.501515865325928
    3. 'cars' → logprob: -12.12651538848877
    4. '```' → logprob: -12.50151538848877
    5. '0' → logprob: -13.37651538848877
    6. 'c' → logprob: -13.87651538848877
    7. '`' → logprob: -15.37651538848877
    8. '(car' → logprob: -15.87651538848877
    9. '   ' → logprob: -16.001516342163086
    10. '``' → logprob: -16.126516342163086

Token 1525: '_car' (ID: 62991)
  Prédit: '_car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_car' → logprob: -0.002033799421042204
    2. '>' → logprob: -6.252033710479736
    3. ' >' → logprob: -10.002034187316895
    4. 'car' → logprob: -10.627034187316895
    5. '_c' → logprob: -10.877034187316895
    6. 'Car' → logprob: -12.252034187316895
    7. ')' → logprob: -12.752034187316895
    8. '_' → logprob: -13.002034187316895
    9. ')>' → logprob: -13.002034187316895
    10. '	car' → logprob: -13.752034187316895

Token 1526: 'ried' (ID: 6089)
  Prédit: 'ried'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ried' → logprob: -0.003921906929463148
    2. 'r' → logprob: -5.628921985626221
    3. '>' → logprob: -8.878921508789062
    4. 'ar' → logprob: -9.878921508789062
    5. '_' → logprob: -10.628921508789062
    6. 'ied' → logprob: -10.878921508789062
    7. 'rr' → logprob: -11.503921508789062
    8. '```' → logprob: -11.628921508789062
    9. '_r' → logprob: -12.003921508789062
    10. '
' → logprob: -12.003921508789062

Token 1527: '>' (ID: 29)
  Prédit: '>'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.16037492454051971
    2. ' >' → logprob: -1.9103748798370361
    3. ')' → logprob: -9.285374641418457
    4. ')>' → logprob: -9.785374641418457
    5. '&gt' → logprob: -14.910374641418457
    6. '>
' → logprob: -15.535374641418457
    7. ' ' → logprob: -15.535374641418457
    8. ' ' → logprob: -16.035375595092773
    9. '
' → logprob: -16.285375595092773
    10. '>=' → logprob: -16.285375595092773

Token 1528: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.014407820999622345
    2. ' ' → logprob: -4.264407634735107
    3. '=' → logprob: -8.639408111572266
    4. '>' → logprob: -10.639408111572266
    5. ')' → logprob: -10.639408111572266
    6. '```' → logprob: -11.639408111572266
    7. ' ' → logprob: -12.889408111572266
    8. '1' → logprob: -12.889408111572266
    9. ')>' → logprob: -13.514408111572266
    10. ' 
' → logprob: -14.014408111572266

Token 1529: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5831037759780884
    2. '):' → logprob: -0.8331037759780884
    3. '):
' → logprob: -5.083103656768799
    4. '),' → logprob: -8.333104133605957
    5. ':' → logprob: -8.458104133605957
    6. ' and' → logprob: -8.708104133605957
    7. '       ' → logprob: -9.708104133605957
    8. ')
' → logprob: -9.708104133605957
    9. ' or' → logprob: -9.833104133605957
    10. ').' → logprob: -10.208104133605957

Token 1530: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0045879608951509
    2. ')' → logprob: -5.7545881271362305
    3. '        
' → logprob: -7.7545881271362305
    4. '
' → logprob: -8.37958812713623
    5. ',' → logprob: -8.75458812713623
    6. '#' → logprob: -8.75458812713623
    7. '```' → logprob: -9.12958812713623
    8. '\' → logprob: -10.00458812713623
    9. ' 
' → logprob: -10.12958812713623
    10. ':' → logprob: -10.12958812713623

Token 1531: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5340650081634521
    2. 'if' → logprob: -1.2840650081634521
    3. '#' (adapté à ' #') → logprob: -2.409065008163452
    4. '
' → logprob: -3.159065008163452
    5. 'options' → logprob: -6.534065246582031
    6. ' if' → logprob: -7.284065246582031
    7. 'for' → logprob: -7.534065246582031
    8. 'possible' → logprob: -7.659065246582031
    9. 'import' → logprob: -7.909065246582031
    10. 'result' → logprob: -8.409065246582031

Token 1532: ' Sub' (ID: 5934)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06821378320455551
    2. '#' → logprob: -3.568213701248169
    3. 'if' → logprob: -3.568213701248169
    4. ' if' → logprob: -5.068213939666748
    5. '
' → logprob: -6.068213939666748
    6. '        
' → logprob: -9.06821346282959
    7. ' #' → logprob: -9.56821346282959
    8. '   ' → logprob: -9.69321346282959
    9. 'for' → logprob: -9.69321346282959
    10. '           ' → logprob: -9.81821346282959

Token 1533: 'case' (ID: 9994)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2492557764053345
    2. '       ' → logprob: -1.4992557764053345
    3. ':' → logprob: -1.9992557764053345
    4. '_' → logprob: -1.9992557764053345
    5. 'cases' → logprob: -2.499255657196045
    6. '
' → logprob: -4.374255657196045
    7. 'case' → logprob: -4.374255657196045
    8. '#' → logprob: -4.374255657196045
    9. 'actions' → logprob: -4.374255657196045
    10. '_cases' → logprob: -4.624255657196045

Token 1534: ' ' (ID: 220)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.39970698952674866
    2. ':' → logprob: -2.274707078933716
    3. ' :' → logprob: -2.274707078933716
    4. ' A' → logprob: -3.024707078933716
    5. '=' → logprob: -3.524707078933716
    6. ' if' → logprob: -4.024706840515137
    7. 'A' → logprob: -4.274706840515137
    8. '_' → logprob: -5.399706840515137
    9. '1' → logprob: -6.024706840515137
    10. ' _' → logprob: -6.524706840515137

Token 1535: '1' (ID: 16)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.402197927236557
    2. ':' → logprob: -1.5271979570388794
    3. 'A' → logprob: -3.40219783782959
    4. ' =' → logprob: -3.52719783782959
    5. '1' → logprob: -3.77719783782959
    6. 'if' → logprob: -4.15219783782959
    7. ' if' → logprob: -5.02719783782959
    8. '_' → logprob: -5.90219783782959
    9. ' A' → logprob: -6.90219783782959
    10. ' ' → logprob: -7.52719783782959

Token 1536: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.021243305876851082
    2. ' :' → logprob: -4.646243095397949
    3. ' if' → logprob: -5.646243095397949
    4. ' =' → logprob: -5.896243095397949
    5. ')' → logprob: -6.646243095397949
    6. ':
' → logprob: -7.146243095397949
    7. '       ' → logprob: -7.146243095397949
    8. '):' → logprob: -7.396243095397949
    9. '   ' → logprob: -7.896243095397949
    10. '=' → logprob: -8.14624309539795

Token 1537: ' pick' (ID: 5230)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.19030293822288513
    2. ' if' → logprob: -1.8153029680252075
    3. '
' → logprob: -4.940302848815918
    4. '#' → logprob: -6.815302848815918
    5. '       ' → logprob: -7.315302848815918
    6. '```' → logprob: -7.315302848815918
    7. 'time' → logprob: -7.565302848815918
    8. ' time' → logprob: -8.940302848815918
    9. ' #' → logprob: -9.440302848815918
    10. '   ' → logprob: -9.815302848815918

Token 1538: ' +' (ID: 659)
  Prédit: '_and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_and' → logprob: -0.05052955448627472
    2. 'and' → logprob: -3.8005294799804688
    3. ' and' → logprob: -4.675529479980469
    4. '-' → logprob: -4.800529479980469
    5. '_' → logprob: -5.425529479980469
    6. ')' → logprob: -6.425529479980469
    7. '-and' → logprob: -6.925529479980469
    8. '=' → logprob: -7.300529479980469
    9. ' -' → logprob: -7.925529479980469
    10. ' =' → logprob: -8.425529479980469

Token 1539: ' eat' (ID: 11237)
  Prédit: 'eat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eat' → logprob: -0.002372200833633542
    2. ' eat' → logprob: -6.1273722648620605
    3. 'e' → logprob: -8.627371788024902
    4. '1' → logprob: -12.752371788024902
    5. '```' → logprob: -12.877371788024902
    6. '-e' → logprob: -14.502371788024902
    7. ' ' → logprob: -15.002371788024902
    8. 'def' → logprob: -15.752371788024902
    9. 'Eat' → logprob: -15.877371788024902
    10. 'é' → logprob: -16.00237274169922

Token 1540: ' immediately' (ID: 10731)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.492678165435791
    2. ':' → logprob: -2.242678165435791
    3. '           ' → logprob: -2.242678165435791
    4. 'time' → logprob: -2.492678165435791
    5. ')' → logprob: -2.617678165435791
    6. '_time' → logprob: -2.742678165435791
    7. '_im' → logprob: -2.742678165435791
    8. ' =' → logprob: -2.992678165435791
    9. ')
' → logprob: -3.242678165435791
    10. '
' → logprob: -3.492678165435791

Token 1541: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17364239692687988
    2. '
' → logprob: -2.04864239692688
    3. 'if' → logprob: -4.673642158508301
    4. '           ' → logprob: -5.423642158508301
    5. 'time' → logprob: -5.423642158508301
    6. ' if' → logprob: -5.548642158508301
    7. ',' → logprob: -5.798642158508301
    8. ' time' → logprob: -6.923642158508301
    9. ')' → logprob: -6.923642158508301
    10. '#' → logprob: -7.673642158508301

Token 1542: 'car' (ID: 6830)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4660656452178955
    2. 'if' → logprob: -1.5910656452178955
    3. 'min' → logprob: -1.7160656452178955
    4. '):
' → logprob: -1.7160656452178955
    5. 'time' → logprob: -2.5910656452178955
    6. '):' → logprob: -3.2160656452178955
    7. '#' → logprob: -3.8410656452178955
    8. '
' → logprob: -4.216065406799316
    9. ')
' → logprob: -4.591065406799316
    10. '       ' → logprob: -4.716065406799316

Token 1543: 'rots' (ID: 175556)
  Prédit: 'rots'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rots' → logprob: -0.03425204008817673
    2. 'rot' → logprob: -3.4092519283294678
    3. '_rot' → logprob: -9.159252166748047
    4. '_' → logprob: -9.409252166748047
    5. 'r' → logprob: -9.409252166748047
    6. 's' → logprob: -9.534252166748047
    7. 'ot' → logprob: -9.659252166748047
    8. ')' → logprob: -10.159252166748047
    9. '```' → logprob: -10.909252166748047
    10. '   ' → logprob: -11.034252166748047

Token 1544: '_car' (ID: 62991)
  Prédit: '_car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_car' → logprob: -0.0007092170417308807
    2. ')' → logprob: -7.625709056854248
    3. ')_' → logprob: -9.250709533691406
    4. '_' → logprob: -10.125709533691406
    5. 'car' → logprob: -10.500709533691406
    6. '_)' → logprob: -11.375709533691406
    7. 'Car' → logprob: -11.500709533691406
    8. '_c' → logprob: -12.625709533691406
    9. '```' → logprob: -12.625709533691406
    10. '_for' → logprob: -13.000709533691406

Token 1545: 'ried' (ID: 6089)
  Prédit: 'ried'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ried' → logprob: -0.004582853522151709
    2. 'r' → logprob: -5.50458288192749
    3. '_' → logprob: -7.87958288192749
    4. '_r' → logprob: -9.879582405090332
    5. '_car' → logprob: -11.754582405090332
    6. '
' → logprob: -11.879582405090332
    7. '```' → logprob: -12.254582405090332
    8. 't' → logprob: -12.379582405090332
    9. '_
' → logprob: -12.379582405090332
    10. '_used' → logprob: -12.754582405090332

Token 1546: ' unchanged' (ID: 73928)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.021537819877266884
    2. ' )' → logprob: -4.271537780761719
    3. '+' → logprob: -5.646537780761719
    4. '=' → logprob: -6.896537780761719
    5. ' +' → logprob: -6.896537780761719
    6. ' unchanged' → logprob: -7.646537780761719
    7. ',' → logprob: -7.896537780761719
    8. '==' → logprob: -9.146537780761719
    9. '       ' → logprob: -9.271537780761719
    10. '>' → logprob: -9.521537780761719

Token 1547: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0016123391687870026
    2. '       ' → logprob: -6.751612186431885
    3. ')
' → logprob: -8.376612663269043
    4. '):' → logprob: -8.626612663269043
    5. ' )' → logprob: -11.501612663269043
    6. '           ' → logprob: -12.126612663269043
    7. '):
' → logprob: -12.876612663269043
    8. '=' → logprob: -13.251612663269043
    9. ':' → logprob: -13.376612663269043
    10. ',' → logprob: -13.626612663269043

Token 1548: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.036725230515003204
    2. '           ' → logprob: -3.6617252826690674
    3. '
' → logprob: -5.536725044250488
    4. 'time' → logprob: -5.911725044250488
    5. 'next' → logprob: -7.036725044250488
    6. 'new' → logprob: -7.786725044250488
    7. 'res' → logprob: -8.036725044250488
    8. '#' → logprob: -8.161725044250488
    9. 'sub' → logprob: -8.161725044250488
    10. '```' → logprob: -8.536725044250488

Token 1549: ' next' (ID: 2613)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.54133141040802
    2. '       ' → logprob: -1.79133141040802
    3. 'next' (adapté à ' next') → logprob: -2.6663312911987305
    4. 'eat' → logprob: -3.0413312911987305
    5. 'new' → logprob: -3.1663312911987305
    6. 'res' → logprob: -3.2913312911987305
    7. 'sub' → logprob: -4.1663312911987305
    8. 'e' → logprob: -4.7913312911987305
    9. 'min' → logprob: -4.9163312911987305
    10. '#' → logprob: -5.0413312911987305

Token 1550: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.0027083458844572306
    2. '_car' → logprob: -7.377708435058594
    3. '_state' → logprob: -7.877708435058594
    4. '_option' → logprob: -8.377708435058594
    5. '_' → logprob: -8.502708435058594
    6. '_res' → logprob: -8.752708435058594
    7. 'time' → logprob: -9.002708435058594
    8. '_cost' → logprob: -9.127708435058594
    9. '_val' → logprob: -9.252708435058594
    10. '_dist' → logprob: -9.502708435058594

Token 1551: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5915843844413757
    2. '_for' → logprob: -0.9665843844413757
    3. '=' → logprob: -3.2165844440460205
    4. '_since' → logprob: -5.216584205627441
    5. '       ' → logprob: -5.841584205627441
    6. '_to' → logprob: -5.966584205627441
    7. '_total' → logprob: -5.966584205627441
    8. '_after' → logprob: -6.091584205627441
    9. '_elapsed' → logprob: -6.591584205627441
    10. '+' → logprob: -6.841584205627441

Token 1552: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -1.3782830137643032e-05
    2. ' current' → logprob: -11.25001335144043
    3. '   ' → logprob: -14.37501335144043
    4. 'self' → logprob: -16.87501335144043
    5. 'cur' → logprob: -19.25001335144043
    6. '(current' → logprob: -19.50001335144043
    7. ' ' → logprob: -20.37501335144043
    8. '	current' → logprob: -20.50001335144043
    9. '$current' → logprob: -20.75001335144043
    10. '       ' → logprob: -21.00001335144043

Token 1553: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -1.664371848164592e-05
    2. '_' → logprob: -11.875016212463379
    3. ')' → logprob: -12.625016212463379
    4. '_for' → logprob: -13.125016212463379
    5. 'time' → logprob: -13.625016212463379
    6. '+' → logprob: -14.250016212463379
    7. ')_' → logprob: -14.375016212463379
    8. '_token' → logprob: -14.500016212463379
    9. 'Time' → logprob: -14.500016212463379
    10. '_user' → logprob: -16.125017166137695

Token 1554: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6931519508361816
    2. ' +' → logprob: -0.6931519508361816
    3. '+
' → logprob: -13.318151473999023
    4. ' +
' → logprob: -14.193151473999023
    5. '
' → logprob: -14.568151473999023
    6. '+self' → logprob: -15.068151473999023
    7. ' ' → logprob: -15.193151473999023
    8. '   ' → logprob: -15.193151473999023
    9. '＋' → logprob: -15.693151473999023
    10. '       ' → logprob: -16.068151473999023

Token 1555: ' time' (ID: 1058)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -2.1008713702030946e-06
    2. ' time' → logprob: -13.125001907348633
    3. '   ' → logprob: -17.250001907348633
    4. '(time' → logprob: -17.375001907348633
    5. '=time' → logprob: -19.250001907348633
    6. '
' → logprob: -19.500001907348633
    7. ' ' → logprob: -19.750001907348633
    8. 'int' → logprob: -19.750001907348633
    9. '"time' → logprob: -19.750001907348633
    10. 'token' → logprob: -19.875001907348633

Token 1556: '_for' (ID: 11903)
  Prédit: '_for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_for' → logprob: -3.416665640543215e-05
    2. 'for' → logprob: -10.37503433227539
    3. 'For' → logprob: -13.25003433227539
    4. ')' → logprob: -14.75003433227539
    5. '_FOR' → logprob: -16.00003433227539
    6. '```' → logprob: -16.37503433227539
    7. '_' → logprob: -16.50003433227539
    8. '+' → logprob: -16.62503433227539
    9. ' for' → logprob: -16.75003433227539
    10. '_to' → logprob: -17.00003433227539

Token 1557: '_segment' (ID: 71041)
  Prédit: '_for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_for' → logprob: -0.07456707954406738
    2. '_segment' → logprob: -2.6995670795440674
    3. '_' → logprob: -5.449566841125488
    4. 'for' → logprob: -8.699566841125488
    5. 'For' → logprob: -9.949566841125488
    6. '_seg' → logprob: -10.824566841125488
    7. '_f' → logprob: -11.199566841125488
    8. ')' → logprob: -11.199566841125488
    9. '_
' → logprob: -11.449566841125488
    10. 'segment' → logprob: -12.074566841125488

Token 1558: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.046170398592948914
    2. ',' → logprob: -3.671170473098755
    3. ')' → logprob: -4.296170234680176
    4. '
' → logprob: -5.671170234680176
    5. 'return' → logprob: -7.171170234680176
    6. '<|end|>' → logprob: -8.171170234680176
    7. '.' → logprob: -8.546170234680176
    8. 'result' → logprob: -8.671170234680176
    9. '        
' → logprob: -8.921170234680176
    10. ';' → logprob: -8.921170234680176

Token 1559: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002933960175141692
    2. ',' → logprob: -6.627933979034424
    3. '
' → logprob: -7.002933979034424
    4. 'result' → logprob: -9.502933502197266
    5. '           ' → logprob: -9.627933502197266
    6. ')' → logprob: -9.627933502197266
    7. '        
' → logprob: -9.627933502197266
    8. '<|end|>' → logprob: -9.752933502197266
    9. 'next' → logprob: -10.002933502197266
    10. 'res' → logprob: -10.002933502197266

Token 1560: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.020445071160793304
    2. 'eat' → logprob: -4.520444869995117
    3. 'time' → logprob: -5.270444869995117
    4. 'option' → logprob: -6.520444869995117
    5. 'min' → logprob: -7.145444869995117
    6. 'ans' → logprob: -7.645444869995117
    7. '       ' → logprob: -8.020444869995117
    8. 'ret' → logprob: -8.520444869995117
    9. 'result' → logprob: -8.645444869995117
    10. 'if' → logprob: -8.770444869995117

Token 1561: '1' (ID: 16)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2520858645439148
    2. ' =' → logprob: -1.5020859241485596
    3. '1' → logprob: -9.50208568572998
    4. '+=' → logprob: -10.87708568572998
    5. '           ' → logprob: -11.37708568572998
    6. '       ' → logprob: -11.87708568572998
    7. '_pick' → logprob: -12.12708568572998
    8. '_=' → logprob: -12.12708568572998
    9. '_continue' → logprob: -12.12708568572998
    10. '_' → logprob: -12.50208568572998

Token 1562: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03804286941885948
    2. ' =' → logprob: -3.2880427837371826
    3. '   ' → logprob: -15.413043022155762
    4. ',' → logprob: -15.538043022155762
    5. '       ' → logprob: -15.663043022155762
    6. '=self' → logprob: -16.038042068481445
    7. ')' → logprob: -16.288042068481445
    8. '=
' → logprob: -16.288042068481445
    9. '=res' → logprob: -16.288042068481445
    10. '1' → logprob: -16.538042068481445

Token 1563: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0023537646047770977
    2. 'next' → logprob: -6.127353668212891
    3. ' self' → logprob: -9.12735366821289
    4. '   ' → logprob: -10.00235366821289
    5. '       ' → logprob: -12.37735366821289
    6. '
' → logprob: -12.87735366821289
    7. ' next' → logprob: -13.37735366821289
    8. '           ' → logprob: -13.50235366821289
    9. 'min' → logprob: -13.87735366821289
    10. '(self' → logprob: -14.12735366821289

Token 1564: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.11306624114513397
    2. '_dp' → logprob: -2.3630661964416504
    3. '.dp' → logprob: -4.36306619644165
    4. '.' → logprob: -10.738066673278809
    5. ' .' → logprob: -12.613066673278809
    6. '.D' → logprob: -13.113066673278809
    7. '   ' → logprob: -13.363066673278809
    8. '.__' → logprob: -13.738066673278809
    9. '.get' → logprob: -13.988066673278809
    10. '\' → logprob: -14.113066673278809

Token 1565: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.5048530030981055e-06
    2. '_dp' → logprob: -13.625001907348633
    3. 'next' → logprob: -16.500001907348633
    4. 'DP' → logprob: -16.875001907348633
    5. '	dp' → logprob: -17.250001907348633
    6. '.dp' → logprob: -17.500001907348633
    7. '(dp' → logprob: -17.875001907348633
    8. ' dp' → logprob: -18.125001907348633
    9. 'd' → logprob: -18.125001907348633
    10. 'Next' → logprob: -18.750001907348633

Token 1566: '(idx' (ID: 42793)
  Prédit: '(idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(idx' → logprob: -9.555654105497524e-05
    2. 'idx' → logprob: -9.62509536743164
    3. '(' → logprob: -10.75009536743164
    4. '(
' → logprob: -11.87509536743164
    5. '(index' → logprob: -14.87509536743164
    6. ' (' → logprob: -15.37509536743164
    7. ' idx' → logprob: -16.25009536743164
    8. '```' → logprob: -16.25009536743164
    9. '(id' → logprob: -16.37509536743164
    10. '[idx' → logprob: -16.62509536743164

Token 1567: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.07889275997877121
    2. ' +' → logprob: -2.578892707824707
    3. '+
' → logprob: -13.578892707824707
    4. '+,' → logprob: -13.828892707824707
    5. ',' → logprob: -15.453892707824707
    6. ' +
' → logprob: -15.828892707824707
    7. '()+' → logprob: -16.078893661499023
    8. '＋' → logprob: -16.203893661499023
    9. '(+' → logprob: -16.328893661499023
    10. '(' → logprob: -17.328893661499023

Token 1568: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.629921436891891e-05
    2. ' ' → logprob: -10.62502670288086
    3. '
' → logprob: -14.25002670288086
    4. ')' → logprob: -14.50002670288086
    5. ',' → logprob: -14.50002670288086
    6. '   ' → logprob: -16.00002670288086
    7. '```' → logprob: -16.75002670288086
    8. '(' → logprob: -16.87502670288086
    9. '+' → logprob: -17.62502670288086
    10. ' 
' → logprob: -18.00002670288086

Token 1569: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.943783253314905e-05
    2. ',
' → logprob: -10.000059127807617
    3. ' ,' → logprob: -11.500059127807617
    4. '(' → logprob: -13.750059127807617
    5. '(car' → logprob: -14.000059127807617
    6. ',c' → logprob: -14.875059127807617
    7. ',next' → logprob: -15.375059127807617
    8. '(
' → logprob: -15.375059127807617
    9. '
' → logprob: -15.625059127807617
    10. '(),' → logprob: -15.625059127807617

Token 1570: ' carrots' (ID: 91266)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -3.650518920039758e-06
    2. ' carrots' → logprob: -12.625003814697266
    3. 'cars' → logprob: -15.000003814697266
    4. '```' → logprob: -18.250003814697266
    5. '0' → logprob: -18.375003814697266
    6. 'c' → logprob: -18.375003814697266
    7. 'cart' → logprob: -18.750003814697266
    8. '   ' → logprob: -19.125003814697266
    9. 'care' → logprob: -19.375003814697266
    10. 'caret' → logprob: -19.750003814697266

Token 1571: '_car' (ID: 62991)
  Prédit: '_car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_car' → logprob: -1.9504606825648807e-05
    2. 'car' → logprob: -11.625019073486328
    3. 'Car' → logprob: -13.125019073486328
    4. '	car' → logprob: -13.125019073486328
    5. '_c' → logprob: -13.375019073486328
    6. '   ' → logprob: -13.750019073486328
    7. '-car' → logprob: -14.500019073486328
    8. ',' → logprob: -14.500019073486328
    9. '```' → logprob: -14.875019073486328
    10. '_' → logprob: -14.875019073486328

Token 1572: 'ried' (ID: 6089)
  Prédit: 'ried'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ried' → logprob: -0.010228781029582024
    2. 'ied' → logprob: -5.260228633880615
    3. 'r' → logprob: -5.385228633880615
    4. '_' → logprob: -8.635229110717773
    5. 'red' → logprob: -9.510229110717773
    6. '_car' → logprob: -10.510229110717773
    7. 'ed' → logprob: -10.885229110717773
    8. 'car' → logprob: -11.385229110717773
    9. '```' → logprob: -11.635229110717773
    10. '_r' → logprob: -11.885229110717773

Token 1573: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001502636878285557
    2. ',
' → logprob: -9.625150680541992
    3. ',next' → logprob: -10.000150680541992
    4. ' ,' → logprob: -10.625150680541992
    5. ')' → logprob: -11.500150680541992
    6. ',None' → logprob: -14.000150680541992
    7. '```' → logprob: -14.375150680541992
    8. ',

' → logprob: -14.875150680541992
    9. ',)' → logprob: -15.250150680541992
    10. ',last' → logprob: -15.500150680541992

Token 1574: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.0019483910873532295
    2. ' next' → logprob: -6.251948356628418
    3. '0' → logprob: -11.376948356628418
    4. '(next' → logprob: -12.626948356628418
    5. 'last' → logprob: -13.501948356628418
    6. '_next' → logprob: -14.126948356628418
    7. '[next' → logprob: -14.126948356628418
    8. '	next' → logprob: -14.376948356628418
    9. 'new' → logprob: -14.626948356628418
    10. '
' → logprob: -15.126948356628418

Token 1575: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -2.2246291337069124e-05
    2. '_' → logprob: -12.250021934509277
    3. 'time' → logprob: -12.375021934509277
    4. '+' → logprob: -12.375021934509277
    5. '```' → logprob: -13.000021934509277
    6. '_token' → logprob: -13.500021934509277
    7. ')' → logprob: -13.625021934509277
    8. '_tim' → logprob: -14.250021934509277
    9. 'Time' → logprob: -14.625021934509277
    10. ')_' → logprob: -14.625021934509277

Token 1576: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00014704519708175212
    2. '+' → logprob: -9.750146865844727
    3. ',' → logprob: -10.250146865844727
    4. ' )' → logprob: -10.750146865844727
    5. ')return' → logprob: -11.750146865844727
    6. ')+' → logprob: -11.875146865844727
    7. ')
' → logprob: -11.875146865844727
    8. ' +' → logprob: -12.500146865844727
    9. '+)' → logprob: -14.125146865844727
    10. '   ' → logprob: -14.250146865844727

Token 1577: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.0003323665587231517
    2. 'current' → logprob: -8.125332832336426
    3. ' next' → logprob: -10.500332832336426
    4. '0' → logprob: -12.125332832336426
    5. '   ' → logprob: -13.750332832336426
    6. '	next' → logprob: -14.375332832336426
    7. '(next' → logprob: -14.375332832336426
    8. 'new' → logprob: -14.500332832336426
    9. '[next' → logprob: -15.875332832336426
    10. '```' → logprob: -16.25033187866211

Token 1578: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.2813747823238373
    2. '_for' → logprob: -1.4063748121261597
    3. 'for' → logprob: -9.03137493133545
    4. '+' → logprob: -9.90637493133545
    5. 'Time' → logprob: -11.53137493133545
    6. ')' → logprob: -11.78137493133545
    7. 'For' → logprob: -12.28137493133545
    8. 'time' → logprob: -12.28137493133545
    9. '_to' → logprob: -12.28137493133545
    10. '```' → logprob: -12.65637493133545

Token 1579: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.45848218582978e-06
    2. ')
' → logprob: -14.00000286102295
    3. '       ' → logprob: -14.37500286102295
    4. ' )' → logprob: -14.50000286102295
    5. '   ' → logprob: -15.25000286102295
    6. ')`' → logprob: -15.50000286102295
    7. '))' → logprob: -17.875001907348633
    8. ')**' → logprob: -18.000001907348633
    9. ')+' → logprob: -18.000001907348633
    10. ')#' → logprob: -18.375001907348633

Token 1580: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.022742891684174538
    2. ')' → logprob: -4.397742748260498
    3. ' if' → logprob: -4.897742748260498
    4. '<|end|>' → logprob: -6.772742748260498
    5. 'if' → logprob: -7.147742748260498
    6. ',' → logprob: -7.772742748260498
    7. '.' → logprob: -9.522743225097656
    8. '
' → logprob: -10.022743225097656
    9. '<|end|>' → logprob: -10.272743225097656
    10. 'return' → logprob: -10.772743225097656

Token 1581: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' (adapté à ' min') → logprob: -0.03900100290775299
    2. 'if' → logprob: -3.289000988006592
    3. '       ' → logprob: -7.039000988006592
    4. 'res' → logprob: -10.16400146484375
    5. ' min' → logprob: -10.66400146484375
    6. ' if' → logprob: -11.78900146484375
    7. 'return' → logprob: -12.16400146484375
    8. '_min' → logprob: -13.28900146484375
    9. '           ' → logprob: -13.66400146484375
    10. '
' → logprob: -14.03900146484375

Token 1582: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.0006981384940445423
    2. '(' → logprob: -8.37569808959961
    3. '_' → logprob: -8.62569808959961
    4. 'Time' → logprob: -9.50069808959961
    5. 'time' → logprob: -9.62569808959961
    6. ')' → logprob: -10.50069808959961
    7. '(min' → logprob: -10.87569808959961
    8. '=' → logprob: -11.12569808959961
    9. ' =' → logprob: -11.50069808959961
    10. 'if' → logprob: -11.50069808959961

Token 1583: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0005530327325686812
    2. ' =' → logprob: -7.500553131103516
    3. '=min' → logprob: -18.500553131103516
    4. '   ' → logprob: -19.000553131103516
    5. '=}' → logprob: -19.250553131103516
    6. '	' → logprob: -19.750553131103516
    7. 's' → logprob: -19.875553131103516
    8. '.=' → logprob: -20.000553131103516
    9. ',' → logprob: -20.250553131103516
    10. '＝' → logprob: -20.875553131103516

Token 1584: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.00046200878568924963
    2. 'res' → logprob: -7.750462055206299
    3. ' min' → logprob: -10.37546157836914
    4. 'max' → logprob: -17.25046157836914
    5. '	min' → logprob: -17.25046157836914
    6. ' res' → logprob: -17.50046157836914
    7. '   ' → logprob: -18.25046157836914
    8. '(min' → logprob: -19.25046157836914
    9. 'minimum' → logprob: -19.25046157836914
    10. '```' → logprob: -19.62546157836914

Token 1585: '(min' (ID: 26035)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6932327747344971
    2. '(min' → logprob: -0.6932327747344971
    3. '(
' → logprob: -9.818232536315918
    4. '(res' → logprob: -10.443232536315918
    5. '(

' → logprob: -13.943232536315918
    6. 'min' → logprob: -15.193232536315918
    7. '(max' → logprob: -15.443232536315918
    8. ' (' → logprob: -15.818232536315918
    9. '(m' → logprob: -15.818232536315918
    10. '(`' → logprob: -16.443233489990234

Token 1586: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.00012237003829795867
    2. '(min' → logprob: -10.0001220703125
    3. '(' → logprob: -10.5001220703125
    4. 'min' → logprob: -11.6251220703125
    5. 'time' → logprob: -11.8751220703125
    6. 'Time' → logprob: -12.2501220703125
    7. '(res' → logprob: -12.5001220703125
    8. 'res' → logprob: -12.7501220703125
    9. '_token' → logprob: -12.7501220703125
    10. ')' → logprob: -12.8751220703125

Token 1587: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005160700995475054
    2. ',res' → logprob: -5.880160808563232
    3. '(res' → logprob: -7.005160808563232
    4. ',
' → logprob: -7.005160808563232
    5. ',min' → logprob: -8.630160331726074
    6. ')' → logprob: -8.755160331726074
    7. '(' → logprob: -8.880160331726074
    8. '(min' → logprob: -10.630160331726074
    9. '(
' → logprob: -11.255160331726074
    10. 'res' → logprob: -11.255160331726074

Token 1588: ' time' (ID: 1058)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -2.975612187583465e-05
    2. 'time' → logprob: -10.625029563903809
    3. ' res' → logprob: -12.750029563903809
    4. 'next' → logprob: -13.500029563903809
    5. '   ' → logprob: -14.125029563903809
    6. '	res' → logprob: -16.250030517578125
    7. '       ' → logprob: -16.500030517578125
    8. '(res' → logprob: -17.125030517578125
    9. 're' → logprob: -17.625030517578125
    10. '           ' → logprob: -17.625030517578125

Token 1589: '_for' (ID: 11903)
  Prédit: '_for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_for' → logprob: -0.004244012292474508
    2. '1' → logprob: -5.629243850708008
    3. 'for' → logprob: -7.754243850708008
    4. 'For' → logprob: -9.504243850708008
    5. ')' → logprob: -9.879243850708008
    6. ')_' → logprob: -10.379243850708008
    7. '_to' → logprob: -11.629243850708008
    8. '```' → logprob: -12.004243850708008
    9. '_' → logprob: -12.379243850708008
    10. '   ' → logprob: -12.379243850708008

Token 1590: '_segment' (ID: 71041)
  Prédit: '_segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_segment' → logprob: -0.00048501143464818597
    2. 'segment' → logprob: -8.25048542022705
    3. '_for' → logprob: -8.75048542022705
    4. 'for' → logprob: -10.87548542022705
    5. '_seg' → logprob: -10.87548542022705
    6. '1' → logprob: -11.50048542022705
    7. 'seg' → logprob: -12.75048542022705
    8. 'Segment' → logprob: -13.12548542022705
    9. '```' → logprob: -13.12548542022705
    10. '\' → logprob: -13.25048542022705

Token 1591: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00943257287144661
    2. ' )' → logprob: -4.759432792663574
    3. '+' → logprob: -7.759432792663574
    4. ' +' → logprob: -7.884432792663574
    5. '+)' → logprob: -12.259432792663574
    6. ',' → logprob: -12.509432792663574
    7. ')
' → logprob: -14.134432792663574
    8. ' ' → logprob: -14.384432792663574
    9. ')return' → logprob: -14.509432792663574
    10. ')#' → logprob: -14.634432792663574

Token 1592: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -5.478889215737581e-05
    2. 'self' → logprob: -9.875054359436035
    3. ' res' → logprob: -12.875054359436035
    4. '   ' → logprob: -15.625054359436035
    5. '(res' → logprob: -15.750054359436035
    6. 'next' → logprob: -15.750054359436035
    7. '
' → logprob: -16.12505531311035
    8. '           ' → logprob: -16.75005531311035
    9. '_res' → logprob: -17.00005531311035
    10. '       ' → logprob: -17.00005531311035

Token 1593: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ')' → logprob: -18.0
    3. 'ult' → logprob: -18.125
    4. 'next' → logprob: -19.25
    5. '_' → logprob: -19.375
    6. '[' → logprob: -20.125
    7. 'idual' → logprob: -20.625
    8. '_next' → logprob: -20.75
    9. '```' → logprob: -20.875
    10. '１' → logprob: -21.5

Token 1594: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0018585572252050042
    2. '       ' → logprob: -6.376858711242676
    3. ' )' → logprob: -9.501858711242676
    4. '())' → logprob: -10.501858711242676
    5. ')
' → logprob: -10.876858711242676
    6. '<|end|>' → logprob: -11.876858711242676
    7. '
' → logprob: -12.126858711242676
    8. '   ' → logprob: -12.376858711242676
    9. ')

' → logprob: -12.751858711242676
    10. ',' → logprob: -13.126858711242676

Token 1595: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05945039540529251
    2. '
' → logprob: -2.934450387954712
    3. '        
' → logprob: -6.434450626373291
    4. '#' → logprob: -7.184450626373291
    5. ')' → logprob: -7.184450626373291
    6. '   ' → logprob: -7.809450626373291
    7. '<|end|>' → logprob: -7.809450626373291
    8. ',' → logprob: -8.059450149536133
    9. '```' → logprob: -9.184450149536133
    10. '  
' → logprob: -10.184450149536133

Token 1596: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19543369114398956
    2. '
' → logprob: -2.6954336166381836
    3. 'if' → logprob: -2.9454336166381836
    4. '#' (adapté à ' #') → logprob: -2.9454336166381836
    5. ' if' → logprob: -6.070433616638184
    6. '        
' → logprob: -6.945433616638184
    7. '```' → logprob: -7.195433616638184
    8. ')' → logprob: -8.195433616638184
    9. '<|end|>' → logprob: -8.945433616638184
    10. '​' → logprob: -9.070433616638184

Token 1597: ' Sub' (ID: 5934)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0047849188558757305
    2. '       ' → logprob: -5.879785060882568
    3. '
' → logprob: -7.004785060882568
    4. '#' → logprob: -7.004785060882568
    5. ' if' → logprob: -9.12978458404541
    6. '   ' → logprob: -10.37978458404541
    7. 'If' → logprob: -11.25478458404541
    8. 'res' → logprob: -12.50478458404541
    9. '        
' → logprob: -13.00478458404541
    10. '```' → logprob: -13.62978458404541

Token 1598: 'case' (ID: 9994)
  Prédit: 'case'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'case' → logprob: -8.292095299111679e-05
    2. '#' → logprob: -10.125082969665527
    3. '       ' → logprob: -10.750082969665527
    4. '   ' → logprob: -11.375082969665527
    5. 'cases' → logprob: -13.250082969665527
    6. 'se' → logprob: -13.500082969665527
    7. '-case' → logprob: -13.625082969665527
    8. 'Case' → logprob: -14.000082969665527
    9. 'code' → logprob: -14.000082969665527
    10. '_case' → logprob: -14.500082969665527

Token 1599: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.5665376782417297
    2. ' ' → logprob: -1.441537618637085
    3. ':' → logprob: -1.816537618637085
    4. ' :' → logprob: -3.816537618637085
    5. '1' → logprob: -5.941537857055664
    6. '```' → logprob: -6.066537857055664
    7. ' _' → logprob: -6.441537857055664
    8. '_' → logprob: -7.066537857055664
    9. ' =' → logprob: -7.566537857055664
    10. '   ' → logprob: -7.566537857055664

Token 1600: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0035965023562312126
    2. ' ' → logprob: -5.753596305847168
    3. '```' → logprob: -9.003596305847168
    4. ':' → logprob: -9.128596305847168
    5. ' if' → logprob: -10.128596305847168
    6. '
' → logprob: -10.628596305847168
    7. '1' → logprob: -10.753596305847168
    8. '#' → logprob: -10.878596305847168
    9. ' (' → logprob: -11.378596305847168
    10. '_' → logprob: -11.503596305847168

Token 1601: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007389386650174856
    2. ' if' → logprob: -5.132389545440674
    3. 'if' → logprob: -6.632389545440674
    4. ',' → logprob: -9.632389068603516
    5. '=' → logprob: -10.757389068603516
    6. ' :' → logprob: -10.757389068603516
    7. ':
' → logprob: -11.007389068603516
    8. '       ' → logprob: -12.382389068603516
    9. ' =' → logprob: -12.382389068603516
    10. '	if' → logprob: -12.632389068603516

Token 1602: ' eat' (ID: 11237)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0641612634062767
    2. 'car' → logprob: -2.8141613006591797
    3. ' if' → logprob: -6.81416130065918
    4. ' carrots' → logprob: -7.18916130065918
    5. 'If' → logprob: -9.06416130065918
    6. '
' → logprob: -9.18916130065918
    7. '(car' → logprob: -9.68916130065918
    8. '   ' → logprob: -10.93916130065918
    9. '```' → logprob: -11.81416130065918
    10. '       ' → logprob: -11.93916130065918

Token 1603: ' stored' (ID: 16240)
  Prédit: 'stored'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stored' → logprob: -0.7182377576828003
    2. ' stored' → logprob: -0.9682377576828003
    3. '_car' → logprob: -3.84323787689209
    4. 'car' → logprob: -3.84323787689209
    5. ' (' → logprob: -4.09323787689209
    6. ' ' → logprob: -4.21823787689209
    7. '_' → logprob: -4.34323787689209
    8. 'from' → logprob: -4.34323787689209
    9. '(' → logprob: -4.46823787689209
    10. '(
' → logprob: -5.34323787689209

Token 1604: ' carrot' (ID: 121234)
  Prédit: '_car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_car' → logprob: -0.0034153475426137447
    2. '_' → logprob: -5.753415584564209
    3. '_c' → logprob: -9.37841510772705
    4. 'car' → logprob: -9.50341510772705
    5. ' _' → logprob: -9.87841510772705
    6. '_token' → logprob: -11.87841510772705
    7. '```' → logprob: -12.00341510772705
    8. '
' → logprob: -12.37841510772705
    9. ')_' → logprob: -13.37841510772705
    10. '_tokens' → logprob: -13.50341510772705

Token 1605: ' after' (ID: 1934)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.010317044332623482
    2. 'if' → logprob: -5.010316848754883
    3. ' =' → logprob: -6.510316848754883
    4. '       ' → logprob: -6.760316848754883
    5. '=' → logprob: -9.010316848754883
    6. ':' → logprob: -9.010316848754883
    7. ' at' → logprob: -9.385316848754883
    8. '<|end|>' → logprob: -9.510316848754883
    9. '<|end|>' → logprob: -9.510316848754883
    10. '
' → logprob: -9.635316848754883

Token 1606: ' segment' (ID: 14806)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.9922346472740173
    2. 'segment' → logprob: -1.742234706878662
    3. 'time' → logprob: -1.742234706878662
    4. 'car' → logprob: -2.367234706878662
    5. 'this' → logprob: -2.992234706878662
    6. 'idx' → logprob: -3.867234706878662
    7. ':' → logprob: -3.867234706878662
    8. 'current' → logprob: -4.617234706878662
    9. ')' → logprob: -4.867234706878662
    10. 'stored' → logprob: -4.867234706878662

Token 1607: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5154960751533508
    2. '       ' → logprob: -1.265496015548706
    3. 'if' → logprob: -2.140496015548706
    4. ',' → logprob: -6.390496253967285
    5. '<|end|>' → logprob: -8.015496253967285
    6. '<|end|>' → logprob: -8.390496253967285
    7. ':' → logprob: -8.890496253967285
    8. 'If' → logprob: -9.015496253967285
    9. '	if' → logprob: -9.015496253967285
    10. ' (' → logprob: -9.015496253967285

Token 1608: ' carrots' (ID: 91266)
  Prédit: ' carrots'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' carrots' → logprob: -0.6329211592674255
    2. 'car' → logprob: -0.7579211592674255
    3. 'cars' → logprob: -8.25792121887207
    4. 'c' → logprob: -10.75792121887207
    5. ' ' → logprob: -11.88292121887207
    6. '0' → logprob: -12.13292121887207
    7. '_car' → logprob: -12.25792121887207
    8. '(car' → logprob: -12.50792121887207
    9. '```' → logprob: -12.63292121887207
    10. ' carrot' → logprob: -13.38292121887207

Token 1609: '_car' (ID: 62991)
  Prédit: '_car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_car' → logprob: -3.106736039626412e-05
    2. 'car' → logprob: -10.625031471252441
    3. '_c' → logprob: -13.000031471252441
    4. '_' → logprob: -13.125031471252441
    5. '>' → logprob: -14.125031471252441
    6. '```' → logprob: -15.000031471252441
    7. ' _' → logprob: -15.375031471252441
    8. 'Car' → logprob: -15.625031471252441
    9. '_used' → logprob: -15.750031471252441
    10. '_taken' → logprob: -15.875031471252441

Token 1610: 'ried' (ID: 6089)
  Prédit: 'ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.03097333200275898
    2. 'ried' → logprob: -3.780973434448242
    3. '_car' → logprob: -5.780973434448242
    4. '_' → logprob: -6.030973434448242
    5. '_ar' → logprob: -7.530973434448242
    6. 'arr' → logprob: -8.030973434448242
    7. 'car' → logprob: -8.030973434448242
    8. 'r' → logprob: -8.030973434448242
    9. '>' → logprob: -9.030973434448242
    10. '_arr' → logprob: -9.530973434448242

Token 1611: '>' (ID: 29)
  Prédit: '>'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.043004341423511505
    2. ' >' → logprob: -3.168004274368286
    3. ')>' → logprob: -13.293004035949707
    4. '>
' → logprob: -13.668004035949707
    5. '&gt' → logprob: -14.668004035949707
    6. ' >
' → logprob: -14.668004035949707
    7. ' ' → logprob: -14.668004035949707
    8. ')' → logprob: -15.168004035949707
    9. '()>' → logprob: -15.793004035949707
    10. '">' → logprob: -16.168004989624023

Token 1612: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0036032749339938164
    2. ' ' → logprob: -5.628603458404541
    3. '>' → logprob: -13.128602981567383
    4. '=' → logprob: -14.128602981567383
    5. '
' → logprob: -15.878602981567383
    6. ' ' → logprob: -16.628602981567383
    7. '1' → logprob: -16.878602981567383
    8. '```' → logprob: -17.003602981567383
    9. ',' → logprob: -17.378602981567383
    10. '۰' → logprob: -17.378602981567383

Token 1613: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.059002239257097244
    2. ' if' → logprob: -3.059002161026001
    3. '<|end|>' → logprob: -5.68400239944458
    4. ',' → logprob: -6.05900239944458
    5. 'if' → logprob: -6.05900239944458
    6. ':' → logprob: -7.80900239944458
    7. '<|end|>' → logprob: -7.80900239944458
    8. '   ' → logprob: -8.434001922607422
    9. '	if' → logprob: -8.559001922607422
    10. '
' → logprob: -8.684001922607422

Token 1614: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03824654221534729
    2. ' if' → logprob: -3.9132466316223145
    3. '<|end|>' → logprob: -5.1632466316223145
    4. 'if' → logprob: -5.7882466316223145
    5. ',' → logprob: -6.4132466316223145
    6. '
' → logprob: -6.6632466316223145
    7. '   ' → logprob: -6.6632466316223145
    8. ':' → logprob: -7.0382466316223145
    9. '<|end|>' → logprob: -7.2882466316223145
    10. '	' → logprob: -7.2882466316223145

Token 1615: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.03406057134270668
    2. '       ' → logprob: -3.784060478210449
    3. ' if' → logprob: -4.534060478210449
    4. '	if' → logprob: -11.53406047821045
    5. '   ' → logprob: -12.15906047821045
    6. 'If' → logprob: -13.40906047821045
    7. '```' → logprob: -13.40906047821045
    8. '
' → logprob: -14.65906047821045
    9. '           ' → logprob: -14.78406047821045
    10. '	' → logprob: -15.03406047821045

Token 1616: ' carrots' (ID: 91266)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.576005220413208
    2. ' carrots' → logprob: -0.826005220413208
    3. 'cars' → logprob: -9.951004981994629
    4. 'c' → logprob: -11.701004981994629
    5. ' ' → logprob: -13.451004981994629
    6. '_car' → logprob: -13.576004981994629
    7. ' ' → logprob: -13.576004981994629
    8. '(car' → logprob: -13.951004981994629
    9. '	car' → logprob: -14.201004981994629
    10. '```' → logprob: -14.326004981994629

Token 1617: '_car' (ID: 62991)
  Prédit: '_car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_car' → logprob: -0.00014597235713154078
    2. '>' → logprob: -8.87514591217041
    3. ' >' → logprob: -12.87514591217041
    4. '_' → logprob: -13.37514591217041
    5. ' _' → logprob: -14.37514591217041
    6. 'car' → logprob: -15.12514591217041
    7. 'Car' → logprob: -15.50014591217041
    8. '	car' → logprob: -15.75014591217041
    9. '   ' → logprob: -15.87514591217041
    10. '_c' → logprob: -16.250146865844727

Token 1618: 'ried' (ID: 6089)
  Prédit: 'ried'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ried' → logprob: -0.005344636272639036
    2. '_' → logprob: -6.505344867706299
    3. 'ar' → logprob: -6.505344867706299
    4. 'r' → logprob: -6.880344867706299
    5. '_car' → logprob: -7.005344867706299
    6. '>' → logprob: -8.75534439086914
    7. 'ied' → logprob: -10.00534439086914
    8. '_r' → logprob: -10.00534439086914
    9. '...' → logprob: -11.25534439086914
    10. '_ar' → logprob: -11.38034439086914

Token 1619: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.28126949071884155
    2. '>' → logprob: -1.4062695503234863
    3. ' >
' → logprob: -9.406269073486328
    4. ')>' → logprob: -11.281269073486328
    5. ' ' → logprob: -11.781269073486328
    6. '>
' → logprob: -12.656269073486328
    7. ' ' → logprob: -12.656269073486328
    8. ')' → logprob: -12.656269073486328
    9. ' >=' → logprob: -13.656269073486328
    10. ':' → logprob: -14.156269073486328

Token 1620: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1517960956552997e-05
    2. ' ' → logprob: -11.375011444091797
    3. '=' → logprob: -19.250011444091797
    4. '۰' → logprob: -19.625011444091797
    5. '<|end|>' → logprob: -19.750011444091797
    6. '[' → logprob: -21.000011444091797
    7. '٠' → logprob: -21.875011444091797
    8. ')' → logprob: -22.000011444091797
    9. '>' → logprob: -22.000011444091797
    10. ' ' → logprob: -22.250011444091797

Token 1621: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.875000953674316
    3. '=' → logprob: -16.0
    4. '۰' → logprob: -17.75
    5. '٠' → logprob: -19.5
    6. '०' → logprob: -20.375
    7. '０' → logprob: -20.5
    8. '০' → logprob: -20.5625
    9. '```' → logprob: -20.625
    10. '1' → logprob: -20.9375

Token 1622: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4751044809818268
    2. ':
' → logprob: -0.9751044511795044
    3. ',' → logprob: -7.225104331970215
    4. '       ' → logprob: -9.225104331970215
    5. '           ' → logprob: -9.225104331970215
    6. '):
' → logprob: -9.725104331970215
    7. ':

' → logprob: -11.600104331970215
    8. ' and' → logprob: -11.975104331970215
    9. ':
' → logprob: -12.100104331970215
    10. ',
' → logprob: -12.350104331970215

Token 1623: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5438381433486938
    2. '       ' → logprob: -1.0438381433486938
    3. '
' → logprob: -3.0438380241394043
    4. '		' → logprob: -5.668838024139404
    5. '   ' → logprob: -6.043838024139404
    6. '	' → logprob: -6.168838024139404
    7. ' next' → logprob: -6.293838024139404
    8. '	       ' → logprob: -6.418838024139404
    9. 'next' → logprob: -6.543838024139404
    10. '​' → logprob: -6.793838024139404

Token 1624: ' #' (ID: 1069)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.9437564015388489
    2. 'time' → logprob: -1.193756341934204
    3. '           ' → logprob: -1.318756341934204
    4. ' next' → logprob: -3.943756341934204
    5. '       ' → logprob: -4.318756580352783
    6. ' time' → logprob: -5.318756580352783
    7. '   ' → logprob: -6.568756580352783
    8. '               ' → logprob: -8.193756103515625
    9. '
' → logprob: -8.443756103515625
    10. '#' (adapté à ' #') → logprob: -8.568756103515625

Token 1625: ' We' (ID: 1416)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.5360977053642273
    2. 'next' → logprob: -0.9110977053642273
    3. '#' → logprob: -5.536097526550293
    4. '           ' → logprob: -5.661097526550293
    5. 'eat' → logprob: -6.161097526550293
    6. '       ' → logprob: -6.411097526550293
    7. 'e' → logprob: -6.911097526550293
    8. 'res' → logprob: -8.286097526550293
    9. 'stored' → logprob: -9.661097526550293
    10. '   ' → logprob: -9.911097526550293

Token 1626: ' run' (ID: 2461)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8738506436347961
    2. ' can' → logprob: -2.3738505840301514
    3. '=' → logprob: -2.8738505840301514
    4. '               ' → logprob: -2.9988505840301514
    5. ' =' → logprob: -2.9988505840301514
    6. 'continue' → logprob: -3.1238505840301514
    7. ' have' → logprob: -3.1238505840301514
    8. '#' → logprob: -3.2488505840301514
    9. ' continue' → logprob: -3.3738505840301514
    10. ')' → logprob: -3.7488505840301514

Token 1627: ' segment' (ID: 14806)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.4527267813682556
    2. ' the' → logprob: -2.4527268409729004
    3. 'the' → logprob: -2.5777268409729004
    4. ' segment' → logprob: -2.7027268409729004
    5. ' this' → logprob: -2.9527268409729004
    6. 'this' → logprob: -3.2027268409729004
    7. '           ' → logprob: -4.4527268409729
    8. 'time' → logprob: -4.5777268409729
    9. '_segment' → logprob: -5.3277268409729
    10. '               ' → logprob: -5.8277268409729

Token 1628: ' with' (ID: 483)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.7626680135726929
    2. 'time' → logprob: -0.8876680135726929
    3. ' time' → logprob: -3.3876681327819824
    4. ',' → logprob: -3.6376681327819824
    5. 'for' → logprob: -4.512668132781982
    6. '           ' → logprob: -4.637668132781982
    7. ')' → logprob: -4.762668132781982
    8. ' =' → logprob: -4.762668132781982
    9. ' for' → logprob: -5.137668132781982
    10. '_for' → logprob: -5.762668132781982

Token 1629: ' boost' (ID: 12110)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.3802802264690399
    2. 'current' → logprob: -2.1302802562713623
    3. 'dist' → logprob: -2.2552802562713623
    4. 'compute' → logprob: -3.0052802562713623
    5. 'boost' → logprob: -4.005280017852783
    6. 'the' → logprob: -4.505280017852783
    7. 'self' → logprob: -5.255280017852783
    8. 'def' → logprob: -5.880280017852783
    9. 'distance' → logprob: -6.505280017852783
    10. 'speed' → logprob: -6.880280017852783

Token 1630: ' timer' (ID: 16905)
  Prédit: '_rem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_rem' → logprob: -0.4978537857532501
    2. '           ' → logprob: -1.3728537559509277
    3. 'time' → logprob: -3.2478537559509277
    4. '_time' → logprob: -3.6228537559509277
    5. ',' → logprob: -4.247853755950928
    6. ' time' → logprob: -4.497853755950928
    7. '_remaining' → logprob: -4.497853755950928
    8. ')' → logprob: -5.372853755950928
    9. '=' → logprob: -5.747853755950928
    10. ' =' → logprob: -5.872853755950928

Token 1631: ' same' (ID: 2684)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5332241654396057
    2. ',' → logprob: -2.533224105834961
    3. ' =' → logprob: -2.658224105834961
    4. '_start' → logprob: -3.533224105834961
    5. ' at' → logprob: -3.658224105834961
    6. ')' → logprob: -3.658224105834961
    7. '=' → logprob: -3.783224105834961
    8. ' time' → logprob: -3.908224105834961
    9. ' start' → logprob: -4.158224105834961
    10. ' as' → logprob: -4.408224105834961

Token 1632: ' as' (ID: 472)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6477648019790649
    2. ' as' → logprob: -1.772764801979065
    3. ',' → logprob: -3.2727646827697754
    4. '+' → logprob: -3.3977646827697754
    5. ' +' → logprob: -3.3977646827697754
    6. '```' → logprob: -3.3977646827697754
    7. '_start' → logprob: -3.6477646827697754
    8. 'time' → logprob: -3.7727646827697754
    9. 'as' → logprob: -4.147764682769775
    10. ')' → logprob: -4.272764682769775

Token 1633: ' above' (ID: 5151)
  Prédit: 'before'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'before' → logprob: -0.7698432803153992
    2. 'current' → logprob: -1.894843339920044
    3. 'now' → logprob: -2.019843339920044
    4. 'above' → logprob: -2.144843339920044
    5. 'time' → logprob: -3.394843339920044
    6. 'previous' → logprob: -3.394843339920044
    7. 'is' → logprob: -3.519843339920044
    8. 'last' → logprob: -3.894843339920044
    9. 'start' → logprob: -5.019843101501465
    10. 'given' → logprob: -5.394843101501465

Token 1634: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1453631967306137
    2. '
' → logprob: -2.3953630924224854
    3. ',' → logprob: -3.7703630924224854
    4. ' time' → logprob: -4.6453633308410645
    5. 'time' → logprob: -5.0203633308410645
    6. '
' → logprob: -7.0203633308410645
    7. ' and' → logprob: -7.5203633308410645
    8. ':' → logprob: -8.020362854003906
    9. '_time' → logprob: -8.020362854003906
    10. '            
' → logprob: -8.020362854003906

Token 1635: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.15972982347011566
    2. '
' → logprob: -2.0347297191619873
    3. ' time' → logprob: -4.534729957580566
    4. 'time' → logprob: -6.284729957580566
    5. ',' → logprob: -6.659729957580566
    6. ' remainder' → logprob: -7.534729957580566
    7. '            
' → logprob: -7.534729957580566
    8. '               ' → logprob: -8.159729957580566
    9. '
' → logprob: -8.159729957580566
    10. ' next' → logprob: -8.409729957580566

Token 1636: ' #' (ID: 1069)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.8445442318916321
    2. 'next' → logprob: -0.9695442318916321
    3. '           ' → logprob: -1.7195441722869873
    4. ' next' → logprob: -5.219544410705566
    5. ' time' → logprob: -6.594544410705566
    6. '_time' → logprob: -6.844544410705566
    7. '_next' → logprob: -6.969544410705566
    8. 'res' → logprob: -7.094544410705566
    9. '               ' → logprob: -7.969544410705566
    10. '#' (adapté à ' #') → logprob: -8.219544410705566

Token 1637: ' After' (ID: 6311)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.21166959404945374
    2. 'res' → logprob: -2.336669683456421
    3. 'time' → logprob: -2.836669683456421
    4. '           ' → logprob: -4.086669445037842
    5. ' next' → logprob: -4.836669445037842
    6. 'eat' → logprob: -5.336669445037842
    7. ' res' → logprob: -6.586669445037842
    8. 'stored' → logprob: -6.711669445037842
    9. 'e' → logprob: -7.086669445037842
    10. '#' → logprob: -7.711669445037842

Token 1638: ' segment' (ID: 14806)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.012047932483255863
    2. 'time' → logprob: -4.76204776763916
    3. ' segment' → logprob: -6.01204776763916
    4. 'the' → logprob: -8.13704776763916
    5. '_segment' → logprob: -8.88704776763916
    6. 'self' → logprob: -9.01204776763916
    7. 'running' → logprob: -9.26204776763916
    8. 'this' → logprob: -9.88704776763916
    9. '           ' → logprob: -10.01204776763916
    10. '
' → logprob: -10.26204776763916

Token 1639: ',' (ID: 11)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.2812720239162445
    2. ' time' → logprob: -2.2812719345092773
    3. '           ' → logprob: -2.9062719345092773
    4. '_time' → logprob: -2.9062719345092773
    5. ',' → logprob: -3.7812719345092773
    6. ':' → logprob: -5.406271934509277
    7. 'min' → logprob: -5.906271934509277
    8. ')' → logprob: -7.156271934509277
    9. ' min' → logprob: -8.281271934509277
    10. '#' → logprob: -8.406271934509277

Token 1640: ' we' (ID: 581)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.3665009140968323
    2. 'res' → logprob: -1.8665008544921875
    3. ' next' → logprob: -2.1165008544921875
    4. ' res' → logprob: -3.8665008544921875
    5. 'time' → logprob: -5.6165008544921875
    6. '           ' → logprob: -5.9915008544921875
    7. 'eat' → logprob: -6.8665008544921875
    8. '#' → logprob: -7.4915008544921875
    9. 'result' → logprob: -7.6165008544921875
    10. ' time' → logprob: -7.9915008544921875

Token 1641: ' eat' (ID: 11237)
  Prédit: 'eat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eat' → logprob: -0.16912350058555603
    2. 'run' → logprob: -3.044123411178589
    3. 'use' → logprob: -3.544123411178589
    4. ' eat' → logprob: -4.544123649597168
    5. ' use' → logprob: -4.794123649597168
    6. 'can' → logprob: -4.919123649597168
    7. '_e' → logprob: -5.169123649597168
    8. 'store' → logprob: -5.169123649597168
    9. ' run' → logprob: -5.294123649597168
    10. 'car' → logprob: -5.419123649597168

Token 1642: ' stored' (ID: 16240)
  Prédit: ' stored'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stored' → logprob: -0.6743347644805908
    2. ':' → logprob: -1.6743347644805908
    3. '           ' → logprob: -2.049334764480591
    4. 'stored' → logprob: -2.924334764480591
    5. ' =' → logprob: -3.549334764480591
    6. ',' → logprob: -3.924334764480591
    7. ' last' → logprob: -4.174334526062012
    8. '=' → logprob: -4.424334526062012
    9. 'car' → logprob: -4.549334526062012
    10. ' carrots' → logprob: -4.549334526062012

Token 1643: ' carrot' (ID: 121234)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.10023384541273117
    2. ' carrot' → logprob: -2.850233793258667
    3. '_car' → logprob: -3.350233793258667
    4. ')' → logprob: -6.725234031677246
    5. '1' → logprob: -7.850234031677246
    6. '
' → logprob: -8.350234031677246
    7. '_' → logprob: -8.475234031677246
    8. ')_' → logprob: -9.225234031677246
    9. ' ' → logprob: -9.350234031677246
    10. ' carrots' → logprob: -10.225234031677246

Token 1644: ':' (ID: 25)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1290302723646164
    2. ',' → logprob: -2.629030227661133
    3. '
' → logprob: -4.129030227661133
    4. ' next' → logprob: -5.004030227661133
    5. ':
' → logprob: -5.254030227661133
    6. ':' → logprob: -5.754030227661133
    7. 'car' → logprob: -6.254030227661133
    8. ')' → logprob: -6.379030227661133
    9. ' and' → logprob: -6.504030227661133
    10. '(next' → logprob: -6.629030227661133

Token 1645: ' carrots' (ID: 91266)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.608283519744873
    2. 'next' → logprob: -1.608283519744873
    3. '           ' → logprob: -2.358283519744873
    4. ' res' → logprob: -2.483283519744873
    5. 'res' → logprob: -3.358283519744873
    6. ' last' → logprob: -4.983283519744873
    7. 'car' → logprob: -5.483283519744873
    8. ' new' → logprob: -5.608283519744873
    9. '               ' → logprob: -5.733283519744873
    10. ' carrots' → logprob: -5.733283519744873

Token 1646: '_car' (ID: 62991)
  Prédit: '_car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_car' → logprob: -2.176947600673884e-05
    2. 'Car' → logprob: -11.750021934509277
    3. 'car' → logprob: -12.000021934509277
    4. '-car' → logprob: -13.125021934509277
    5. '	car' → logprob: -13.625021934509277
    6. '_used' → logprob: -13.875021934509277
    7. '_c' → logprob: -14.000021934509277
    8. '```' → logprob: -14.500021934509277
    9. '-' → logprob: -14.750021934509277
    10. '_' → logprob: -15.250021934509277

Token 1647: 'ried' (ID: 6089)
  Prédit: 'ried'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ried' → logprob: -0.006163174286484718
    2. 'ar' → logprob: -5.756163120269775
    3. '_car' → logprob: -6.381163120269775
    4. 'car' → logprob: -7.506163120269775
    5. 'r' → logprob: -7.756163120269775
    6. '_' → logprob: -8.256163597106934
    7. '   ' → logprob: -12.006163597106934
    8. 'rr' → logprob: -12.131163597106934
    9. '_r' → logprob: -12.131163597106934
    10. 'ied' → logprob: -12.381163597106934

Token 1648: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.07941040396690369
    2. '-=' → logprob: -2.8294103145599365
    3. ' -' → logprob: -4.954410552978516
    4. ' -=' → logprob: -4.954410552978516
    5. '=' → logprob: -5.829410552978516
    6. '           ' → logprob: -8.954410552978516
    7. '_minus' → logprob: -9.579410552978516
    8. '```' → logprob: -11.704410552978516
    9. ' =' → logprob: -11.829410552978516
    10. 'minus' → logprob: -12.204410552978516

Token 1649: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.961759259458631e-06
    2. ' ' → logprob: -12.500004768371582
    3. '=' → logprob: -13.750004768371582
    4. '```' → logprob: -16.1250057220459
    5. '   ' → logprob: -19.5000057220459
    6. '<|end|>' → logprob: -20.1250057220459
    7. '۱' → logprob: -20.2500057220459
    8. '>' → logprob: -20.5000057220459
    9. '-' → logprob: -20.7500057220459
    10. ')' → logprob: -20.7500057220459

Token 1650: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1813954859972
    2. '
' → logprob: -2.6813955307006836
    3. ',' → logprob: -3.0563955307006836
    4. 'next' → logprob: -3.8063955307006836
    5. ' next' → logprob: -4.556395530700684
    6. ')' → logprob: -5.306395530700684
    7. ',next' → logprob: -5.806395530700684
    8. ')
' → logprob: -5.931395530700684
    9. '(next' → logprob: -6.806395530700684
    10. ' =' → logprob: -7.431395530700684

Token 1651: ' last' (ID: 2174)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.2917500138282776
    2. 'res' → logprob: -1.7917499542236328
    3. ' next' → logprob: -3.541749954223633
    4. 'last' → logprob: -3.541749954223633
    5. ' res' → logprob: -4.541749954223633
    6. 'self' → logprob: -4.916749954223633
    7. 'new' → logprob: -5.791749954223633
    8. ' last' → logprob: -6.166749954223633
    9. '           ' → logprob: -6.791749954223633
    10. 'return' → logprob: -6.916749954223633

Token 1652: ' carrot' (ID: 121234)
  Prédit: '_car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_car' → logprob: -6.229872087715194e-05
    2. '_' → logprob: -10.000061988830566
    3. '\' → logprob: -12.750061988830566
    4. '```' → logprob: -12.750061988830566
    5. '_c' → logprob: -13.125061988830566
    6. 'Car' → logprob: -13.375061988830566
    7. ')_' → logprob: -13.625061988830566
    8. '_time' → logprob: -13.625061988830566
    9. 'car' → logprob: -14.250061988830566
    10. '_e' → logprob: -14.375061988830566

Token 1653: ' time' (ID: 1058)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_time' → logprob: -1.2471589798224159e-05
    2. '```' → logprob: -12.625012397766113
    3. '_car' → logprob: -12.750012397766113
    4. '_e' → logprob: -13.125012397766113
    5. ' _' → logprob: -14.000012397766113
    6. '_' → logprob: -14.125012397766113
    7. 'time' → logprob: -14.875012397766113
    8. '_times' → logprob: -14.875012397766113
    9. '\' → logprob: -15.000012397766113
    10. '_t' → logprob: -15.125012397766113

Token 1654: ' updated' (ID: 8489)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4309709966182709
    2. ' =' → logprob: -1.0559710264205933
    3. ')' → logprob: -6.305971145629883
    4. ',' → logprob: -8.680971145629883
    5. '),' → logprob: -8.805971145629883
    6. '=
' → logprob: -10.805971145629883
    7. ')=' → logprob: -11.305971145629883
    8. ' =
' → logprob: -12.055971145629883
    9. 'next' → logprob: -12.055971145629883
    10. ' ' → logprob: -12.180971145629883

Token 1655: '
' (ID: 198)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.28198322653770447
    2. ' =' → logprob: -1.4069832563400269
    3. 'next' → logprob: -8.031983375549316
    4. '_next' → logprob: -8.656983375549316
    5. '(next' → logprob: -9.406983375549316
    6. ',' → logprob: -9.906983375549316
    7. ' next' → logprob: -10.031983375549316
    8. '=
' → logprob: -10.031983375549316
    9. ')' → logprob: -10.406983375549316
    10. '```' → logprob: -11.156983375549316

Token 1656: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12346690148115158
    2. '
' → logprob: -3.248466968536377
    3. ',' → logprob: -3.373466968536377
    4. ' =' → logprob: -4.248466968536377
    5. ')' → logprob: -4.873466968536377
    6. '=' → logprob: -5.248466968536377
    7. ':' → logprob: -5.498466968536377
    8. ')
' → logprob: -5.873466968536377
    9. '            
' → logprob: -6.748466968536377
    10. ',
' → logprob: -6.748466968536377

Token 1657: ' next' (ID: 2613)
  Prédit: ' next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.9083123207092285
    2. 'next' (adapté à ' next') → logprob: -0.9083123207092285
    3. '           ' → logprob: -1.7833123207092285
    4. ' res' → logprob: -4.9083123207092285
    5. 'time' → logprob: -5.1583123207092285
    6. '               ' → logprob: -5.6583123207092285
    7. 'res' → logprob: -5.9083123207092285
    8. '
' → logprob: -5.9083123207092285
    9. ' time' → logprob: -6.1583123207092285
    10. '       ' → logprob: -8.40831184387207

Token 1658: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.00471611088141799
    2. '_car' → logprob: -5.379715919494629
    3. '_' → logprob: -9.629715919494629
    4. '_c' → logprob: -11.629715919494629
    5. '_token' → logprob: -12.379715919494629
    6. 'time' → logprob: -12.504715919494629
    7. 'car' → logprob: -13.004715919494629
    8. '_t' → logprob: -13.504715919494629
    9. '_times' → logprob: -13.504715919494629
    10. '_tokens' → logprob: -13.504715919494629

Token 1659: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38687583804130554
    2. ' =' → logprob: -1.136875867843628
    3. ',' → logprob: -13.386876106262207
    4. '+=' → logprob: -13.761876106262207
    5. '=
' → logprob: -14.261876106262207
    6. ' +=' → logprob: -14.386876106262207
    7. '+' → logprob: -15.136876106262207
    8. ' ' → logprob: -15.636876106262207
    9. ' =
' → logprob: -15.761876106262207
    10. ')' → logprob: -16.01187515258789

Token 1660: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.06196824833750725
    2. ' current' → logprob: -2.8119683265686035
    3. '(current' → logprob: -14.686967849731445
    4. '   ' → logprob: -16.811967849731445
    5. 'cur' → logprob: -17.436967849731445
    6. '	current' → logprob: -17.561967849731445
    7. ' ' → logprob: -17.561967849731445
    8. '$current' → logprob: -17.936967849731445
    9. 'Current' → logprob: -18.061967849731445
    10. '.current' → logprob: -18.311967849731445

Token 1661: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -4.4849443838757e-06
    2. 'time' → logprob: -13.250004768371582
    3. '+' → logprob: -13.750004768371582
    4. '_current' → logprob: -14.000004768371582
    5. 'current' → logprob: -14.875004768371582
    6. '_' → logprob: -15.250004768371582
    7. 'Time' → logprob: -17.250003814697266
    8. '_user' → logprob: -17.375003814697266
    9. '   ' → logprob: -17.500003814697266
    10. '```' → logprob: -18.250003814697266

Token 1662: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.16022604703903198
    2. '+' → logprob: -1.9102261066436768
    3. ' +
' → logprob: -15.035225868225098
    4. '<|end|>' → logprob: -15.285225868225098
    5. '+
' → logprob: -15.410225868225098
    6. ' plus' → logprob: -15.410225868225098
    7. ' ' → logprob: -15.535225868225098
    8. '＋' → logprob: -15.660225868225098
    9. ' ' → logprob: -15.660225868225098
    10. '   ' → logprob: -15.910225868225098

Token 1663: ' time' (ID: 1058)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.000488110730657354
    2. ' time' → logprob: -7.62548828125
    3. '(time' → logprob: -16.50048828125
    4. '"time' → logprob: -17.37548828125
    5. '	time' → logprob: -18.12548828125
    6. '   ' → logprob: -18.25048828125
    7. 'Time' → logprob: -18.62548828125
    8. '_time' → logprob: -18.75048828125
    9. 'self' → logprob: -19.25048828125
    10. 't' → logprob: -19.25048828125

Token 1664: '_for' (ID: 11903)
  Prédit: '_for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_for' → logprob: -8.65707261255011e-06
    2. 'for' → logprob: -11.750008583068848
    3. ')' → logprob: -15.875008583068848
    4. '_to' → logprob: -16.000009536743164
    5. 'For' → logprob: -16.000009536743164
    6. '```' → logprob: -16.500009536743164
    7. '   ' → logprob: -17.125009536743164
    8. '[' → logprob: -17.625009536743164
    9. '_segment' → logprob: -17.625009536743164
    10. '_of' → logprob: -17.750009536743164

Token 1665: '_segment' (ID: 71041)
  Prédit: '_segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_segment' → logprob: -0.018420321866869926
    2. 'segment' → logprob: -4.143420219421387
    3. '_for' → logprob: -6.143420219421387
    4. 'for' → logprob: -8.518420219421387
    5. 'time' → logprob: -11.518420219421387
    6. '_time' → logprob: -11.768420219421387
    7. 'seg' → logprob: -12.143420219421387
    8. 'Segment' → logprob: -13.018420219421387
    9. '_seg' → logprob: -13.518420219421387
    10. ' segment' → logprob: -13.893420219421387

Token 1666: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03808062523603439
    2. ',' → logprob: -4.16308069229126
    3. '           ' → logprob: -4.53808069229126
    4. '       ' → logprob: -6.41308069229126
    5. ',
' → logprob: -6.41308069229126
    6. '<|end|>' → logprob: -6.41308069229126
    7. ')' → logprob: -6.66308069229126
    8. '   ' → logprob: -6.91308069229126
    9. '<|end|>' → logprob: -7.28808069229126
    10. ')
' → logprob: -7.66308069229126

Token 1667: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006402000784873962
    2. ' res' → logprob: -5.506402015686035
    3. '
' → logprob: -6.881402015686035
    4. '       ' → logprob: -7.881402015686035
    5. ',' → logprob: -8.006402015686035
    6. '            
' → logprob: -9.381402015686035
    7. '   ' → logprob: -9.506402015686035
    8. 'res' → logprob: -9.506402015686035
    9. ')' → logprob: -9.631402015686035
    10. ' 
' → logprob: -9.756402015686035

Token 1668: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -3.0590548703912646e-05
    2. '           ' → logprob: -10.875030517578125
    3. 'result' → logprob: -12.000030517578125
    4. ' res' → logprob: -13.125030517578125
    5. '               ' → logprob: -14.375030517578125
    6. 'r' → logprob: -14.625030517578125
    7. 'ret' → logprob: -14.750030517578125
    8. 'self' → logprob: -15.125030517578125
    9. 'stored' → logprob: -15.375030517578125
    10. '   ' → logprob: -15.500030517578125

Token 1669: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0033648584503680468
    2. '_' → logprob: -6.3783650398254395
    3. ' =' → logprob: -7.2533650398254395
    4. '=' → logprob: -7.3783650398254395
    5. '1' → logprob: -8.128364562988281
    6. '=_' → logprob: -11.878364562988281
    7. '_=' → logprob: -12.628364562988281
    8. '```' → logprob: -13.003364562988281
    9. '3' → logprob: -13.128364562988281
    10. '_val' → logprob: -13.503364562988281

Token 1670: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06196869537234306
    2. ' =' → logprob: -2.8119688034057617
    3. '=self' → logprob: -14.561968803405762
    4. ')' → logprob: -15.061968803405762
    5. ',' → logprob: -16.061967849731445
    6. '=
' → logprob: -16.186967849731445
    7. '	' → logprob: -17.561967849731445
    8. ' ' → logprob: -17.686967849731445
    9. ' =
' → logprob: -18.186967849731445
    10. '=

' → logprob: -18.186967849731445

Token 1671: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0019294669618830085
    2. ' self' → logprob: -6.25192928314209
    3. '           ' → logprob: -14.25192928314209
    4. '(self' → logprob: -16.501930236816406
    5. '   ' → logprob: -17.001930236816406
    6. '               ' → logprob: -17.001930236816406
    7. '       ' → logprob: -17.126930236816406
    8. '	self' → logprob: -17.626930236816406
    9. ' ' → logprob: -18.376930236816406
    10. '         ' → logprob: -18.501930236816406

Token 1672: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.003858031937852502
    2. '_dp' → logprob: -5.6288580894470215
    3. '.dp' → logprob: -8.378857612609863
    4. '.' → logprob: -10.878857612609863
    5. '   ' → logprob: -13.128857612609863
    6. '_DP' → logprob: -13.253857612609863
    7. '.
' → logprob: -13.878857612609863
    8. '_d' → logprob: -14.128857612609863
    9. '.__' → logprob: -14.503857612609863
    10. '.\' → logprob: -14.753857612609863

Token 1673: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0008084330474957824
    2. '_dp' → logprob: -7.125808238983154
    3. 'DP' → logprob: -13.375808715820312
    4. '.dp' → logprob: -14.500808715820312
    5. '
' → logprob: -14.875808715820312
    6. '(dp' → logprob: -15.000808715820312
    7. ' dp' → logprob: -15.125808715820312
    8. '	dp' → logprob: -15.250808715820312
    9. 'd' → logprob: -15.625808715820312
    10. 'Dp' → logprob: -16.000808715820312

Token 1674: '(idx' (ID: 42793)
  Prédit: '(idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(idx' → logprob: -1.3856492842023727e-06
    2. 'idx' → logprob: -14.250000953674316
    3. '(index' → logprob: -15.500000953674316
    4. '(' → logprob: -15.625000953674316
    5. '[idx' → logprob: -16.250001907348633
    6. ' (' → logprob: -16.875001907348633
    7. '(
' → logprob: -16.875001907348633
    8. ' idx' → logprob: -17.375001907348633
    9. '(len' → logprob: -18.125001907348633
    10. '(id' → logprob: -18.375001907348633

Token 1675: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -7.93448489275761e-05
    2. ' +' → logprob: -9.500079154968262
    3. '(idx' → logprob: -12.875079154968262
    4. '+
' → logprob: -14.000079154968262
    5. '+(' → logprob: -14.500079154968262
    6. '(' → logprob: -15.500079154968262
    7. '()+' → logprob: -16.125080108642578
    8. '＋' → logprob: -17.000080108642578
    9. '+,' → logprob: -17.250080108642578
    10. '[idx' → logprob: -17.750080108642578

Token 1676: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00031985383247956634
    2. '+' → logprob: -8.375319480895996
    3. 'next' → logprob: -9.500319480895996
    4. 'idx' → logprob: -11.875319480895996
    5. '(next' → logprob: -13.625319480895996
    6. '2' → logprob: -13.750319480895996
    7. '(idx' → logprob: -13.750319480895996
    8. '```' → logprob: -14.000319480895996
    9. '(' → logprob: -14.625319480895996
    10. '_next' → logprob: -14.750319480895996

Token 1677: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001236656797118485
    2. '(' → logprob: -7.251236438751221
    3. '           ' → logprob: -8.126236915588379
    4. '(c' → logprob: -9.626236915588379
    5. ' ,' → logprob: -9.876236915588379
    6. '(idx' → logprob: -10.001236915588379
    7. ' (' → logprob: -10.876236915588379
    8. ',c' → logprob: -11.626236915588379
    9. '(car' → logprob: -11.751236915588379
    10. ',(' → logprob: -11.751236915588379

Token 1678: ' carrots' (ID: 91266)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.00011880126112373546
    2. ' carrots' → logprob: -9.12511920928955
    3. 'cars' → logprob: -11.87511920928955
    4. '   ' → logprob: -13.87511920928955
    5. 'c' → logprob: -14.50011920928955
    6. ' ' → logprob: -15.25011920928955
    7. '```' → logprob: -15.50011920928955
    8. 'corn' → logprob: -15.50011920928955
    9. '
' → logprob: -16.125118255615234
    10. '       ' → logprob: -16.375118255615234

Token 1679: '_car' (ID: 62991)
  Prédit: '_car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_car' → logprob: -0.020404072478413582
    2. 'Car' → logprob: -4.395403861999512
    3. 'car' → logprob: -5.270403861999512
    4. '_c' → logprob: -7.270403861999512
    5. '-car' → logprob: -7.395403861999512
    6. '   ' → logprob: -8.020403861999512
    7. '+' → logprob: -8.145403861999512
    8. '       ' → logprob: -9.270403861999512
    9. ',' → logprob: -9.395403861999512
    10. '```' → logprob: -9.395403861999512

Token 1680: 'ried' (ID: 6089)
  Prédit: 'ried'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ried' → logprob: -0.0029106696601957083
    2. 'ied' → logprob: -6.127910614013672
    3. 'r' → logprob: -7.627910614013672
    4. 'ar' → logprob: -9.627910614013672
    5. 'ed' → logprob: -10.252910614013672
    6. '_car' → logprob: -10.502910614013672
    7. '_' → logprob: -10.877910614013672
    8. 'rying' → logprob: -11.627910614013672
    9. '```' → logprob: -11.877910614013672
    10. 'car' → logprob: -12.252910614013672

Token 1681: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.16023743152618408
    2. ' -' → logprob: -1.910237431526184
    3. ',' → logprob: -11.535237312316895
    4. ' ' → logprob: -13.910237312316895
    5. '
' → logprob: -14.410237312316895
    6. '	' → logprob: -14.535237312316895
    7. '-
' → logprob: -14.785237312316895
    8. '   ' → logprob: -14.785237312316895
    9. ')' → logprob: -15.660237312316895
    10. ' ' → logprob: -16.53523826599121

Token 1682: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.875
    3. '
' → logprob: -16.0
    4. '   ' → logprob: -18.75
    5. '```' → logprob: -19.375
    6. '           ' → logprob: -20.5
    7. '۱' → logprob: -21.125
    8. ',' → logprob: -21.125
    9. ')' → logprob: -21.25
    10. '<|end|>' → logprob: -21.375

Token 1683: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.0
    3. '```' → logprob: -20.75
    4. '   ' → logprob: -21.375
    5. '<|end|>' → logprob: -22.875
    6. '
' → logprob: -23.125
    7. '۱' → logprob: -23.375
    8. '2' → logprob: -23.75
    9. ')' → logprob: -23.875
    10. '  ' → logprob: -24.25

Token 1684: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0921942703134846e-05
    2. ',next' → logprob: -11.62501049041748
    3. ' ,' → logprob: -14.00001049041748
    4. ',
' → logprob: -14.12501049041748
    5. '           ' → logprob: -14.87501049041748
    6. '(next' → logprob: -16.750011444091797
    7. '`,' → logprob: -17.375011444091797
    8. '',' → logprob: -18.250011444091797
    9. 'next' → logprob: -18.375011444091797
    10. '),' → logprob: -18.500011444091797

Token 1685: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -4.060365608893335e-05
    2. ' next' → logprob: -10.125041007995605
    3. 'current' → logprob: -14.500041007995605
    4. '(next' → logprob: -17.75004005432129
    5. '[next' → logprob: -17.75004005432129
    6. '   ' → logprob: -18.12504005432129
    7. '	next' → logprob: -18.87504005432129
    8. '_next' → logprob: -18.87504005432129
    9. '
' → logprob: -19.62504005432129
    10. '```' → logprob: -19.87504005432129

Token 1686: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -1.0280383548888494e-06
    2. '_token' → logprob: -14.125000953674316
    3. 'time' → logprob: -15.625000953674316
    4. '"time' → logprob: -17.500001907348633
    5. 'Time' → logprob: -19.625001907348633
    6. '```' → logprob: -19.875001907348633
    7. '-time' → logprob: -20.000001907348633
    8. ')' → logprob: -20.125001907348633
    9. '_t' → logprob: -20.125001907348633
    10. '_tokens' → logprob: -20.375001907348633

Token 1687: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.537868779967539e-06
    2. ',
' → logprob: -11.750008583068848
    3. ',next' → logprob: -15.125008583068848
    4. ')' → logprob: -16.12500762939453
    5. ' ,' → logprob: -16.50000762939453
    6. '‌,' → logprob: -17.00000762939453
    7. '   ' → logprob: -17.50000762939453
    8. '           ' → logprob: -17.75000762939453
    9. '+' → logprob: -18.00000762939453
    10. '<|end|>' → logprob: -18.37500762939453

Token 1688: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -2.165027217415627e-05
    2. ' next' → logprob: -10.750021934509277
    3. '[next' → logprob: -15.750021934509277
    4. '	next' → logprob: -17.12502098083496
    5. '_next' → logprob: -17.37502098083496
    6. '(next' → logprob: -17.87502098083496
    7. 'Next' → logprob: -21.37502098083496
    8. '.next' → logprob: -21.75002098083496
    9. 'current' → logprob: -21.87502098083496
    10. '   ' → logprob: -21.87502098083496

Token 1689: '_time' (ID: 6425)
  Prédit: '_for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_for' → logprob: -0.2522420585155487
    2. '_time' → logprob: -1.502242088317871
    3. 'for' → logprob: -8.252242088317871
    4. 'For' → logprob: -11.377242088317871
    5. '```' → logprob: -11.502242088317871
    6. '+' → logprob: -11.627242088317871
    7. ')' → logprob: -11.877242088317871
    8. '_token' → logprob: -12.502242088317871
    9. 'time' → logprob: -13.252242088317871
    10. '_to' → logprob: -13.627242088317871

Token 1690: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12760691344738007
    2. ')
' → logprob: -2.1276068687438965
    3. '           ' → logprob: -7.3776068687438965
    4. '       ' → logprob: -10.127607345581055
    5. ')
' → logprob: -12.127607345581055
    6. ')

' → logprob: -12.752607345581055
    7. '               ' → logprob: -13.627607345581055
    8. '   ' → logprob: -14.002607345581055
    9. '+' → logprob: -14.252607345581055
    10. ')`
' → logprob: -14.377607345581055

Token 1691: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0003956416912842542
    2. '       ' → logprob: -9.750395774841309
    3. '```' → logprob: -9.750395774841309
    4. '<|end|>' → logprob: -9.750395774841309
    5. ')' → logprob: -9.875395774841309
    6. '
' → logprob: -9.875395774841309
    7. '[min' → logprob: -10.375395774841309
    8. 'min' → logprob: -10.625395774841309
    9. '(min' → logprob: -11.125395774841309
    10. '               ' → logprob: -11.375395774841309

Token 1692: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' (adapté à ' min') → logprob: -0.018868695944547653
    2. '           ' → logprob: -4.018868923187256
    3. 'if' → logprob: -8.143868446350098
    4. ' min' → logprob: -8.393868446350098
    5. '
' → logprob: -8.643868446350098
    6. '       ' → logprob: -11.143868446350098
    7. '	min' → logprob: -13.143868446350098
    8. '[min' → logprob: -13.393868446350098
    9. '_min' → logprob: -13.643868446350098
    10. '```' → logprob: -13.768868446350098

Token 1693: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -2.696889623621246e-06
    2. 'time' → logprob: -13.62500286102295
    3. 'min' → logprob: -14.12500286102295
    4. '_min' → logprob: -15.62500286102295
    5. '(min' → logprob: -16.000001907348633
    6. '=' → logprob: -16.250001907348633
    7. '           ' → logprob: -17.000001907348633
    8. '   ' → logprob: -17.125001907348633
    9. 'Time' → logprob: -17.125001907348633
    10. '_TIME' → logprob: -17.125001907348633

Token 1694: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20141635835170746
    2. ' =' → logprob: -1.7014163732528687
    3. ',' → logprob: -13.701416015625
    4. '=min' → logprob: -13.701416015625
    5. ')' → logprob: -15.951416015625
    6. '   ' → logprob: -16.201416015625
    7. '	' → logprob: -16.451416015625
    8. '    ' → logprob: -16.576416015625
    9. '.=' → logprob: -16.576416015625
    10. '```' → logprob: -16.826416015625

Token 1695: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.07889000326395035
    2. 'min' → logprob: -2.578890085220337
    3. '	min' → logprob: -15.453889846801758
    4. ' max' → logprob: -18.453889846801758
    5. '(min' → logprob: -18.703889846801758
    6. '_min' → logprob: -18.953889846801758
    7. 'max' → logprob: -19.328889846801758
    8. ' ' → logprob: -19.703889846801758
    9. '[min' → logprob: -20.578889846801758
    10. '=min' → logprob: -20.578889846801758

Token 1696: '(min' (ID: 26035)
  Prédit: '(min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(min' → logprob: -5.872261317563243e-05
    2. '(' → logprob: -9.750059127807617
    3. '(
' → logprob: -15.000059127807617
    4. '(max' → logprob: -18.375059127807617
    5. '(m' → logprob: -19.625059127807617
    6. '(

' → logprob: -20.375059127807617
    7. ' (' → logprob: -20.750059127807617
    8. '[min' → logprob: -21.125059127807617
    9. '```' → logprob: -21.125059127807617
    10. '(mi' → logprob: -21.375059127807617

Token 1697: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.3135625720024109
    2. '(min' → logprob: -1.3135626316070557
    3. '_min' → logprob: -8.188562393188477
    4. 'min' → logprob: -11.063562393188477
    5. '(' → logprob: -12.813562393188477
    6. '[min' → logprob: -14.063562393188477
    7. '=min' → logprob: -14.188562393188477
    8. 'Time' → logprob: -14.313562393188477
    9. '(_' → logprob: -15.063562393188477
    10. ' min' → logprob: -15.188562393188477

Token 1698: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001933873863890767
    2. ',min' → logprob: -6.251934051513672
    3. ',
' → logprob: -13.001934051513672
    4. ' ,' → logprob: -13.501934051513672
    5. '(min' → logprob: -13.501934051513672
    6. ',res' → logprob: -16.001934051513672
    7. ',max' → logprob: -16.376934051513672
    8. ',m' → logprob: -16.751934051513672
    9. 'min' → logprob: -17.376934051513672
    10. ',

' → logprob: -18.751934051513672

Token 1699: ' time' (ID: 1058)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.06410703808069229
    2. 'time' → logprob: -2.9391069412231445
    3. ' min' → logprob: -4.8141069412231445
    4. ' time' → logprob: -6.9391069412231445
    5. '   ' → logprob: -10.189106941223145
    6. 'res' → logprob: -10.939106941223145
    7. '
' → logprob: -11.689106941223145
    8. 'dist' → logprob: -11.939106941223145
    9. '	min' → logprob: -11.939106941223145
    10. '(min' → logprob: -12.564106941223145

Token 1700: '_for' (ID: 11903)
  Prédit: '_for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_for' → logprob: -0.0006987344822846353
    2. '_time' → logprob: -7.625698566436768
    3. 'for' → logprob: -9.875699043273926
    4. ',' → logprob: -10.125699043273926
    5. '(min' → logprob: -10.750699043273926
    6. '   ' → logprob: -11.250699043273926
    7. ')' → logprob: -11.500699043273926
    8. '+' → logprob: -11.500699043273926
    9. '._' → logprob: -12.125699043273926
    10. '2' → logprob: -12.125699043273926

Token 1701: '_segment' (ID: 71041)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.301962673664093
    2. '_time' → logprob: -1.6769626140594482
    3. 'seg' → logprob: -4.176962852478027
    4. 'segment' → logprob: -4.301962852478027
    5. '2' → logprob: -4.426962852478027
    6. 'res' → logprob: -4.551962852478027
    7. 'time' → logprob: -4.551962852478027
    8. 'dist' → logprob: -5.176962852478027
    9. '(min' → logprob: -5.551962852478027
    10. '_segment' → logprob: -7.801962852478027

Token 1702: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.06993988156318665
    2. '+' → logprob: -2.6949398517608643
    3. ' ' → logprob: -13.444939613342285
    4. ' +
' → logprob: -13.694939613342285
    5. ' ' → logprob: -14.944939613342285
    6. ',' → logprob: -15.694939613342285
    7. '+
' → logprob: -16.0699405670166
    8. ' plus' → logprob: -16.5699405670166
    9. ' +
' → logprob: -16.8199405670166
    10. ')' → logprob: -16.8199405670166

Token 1703: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.0004307884373702109
    2. ' res' → logprob: -7.750430583953857
    3. '(res' → logprob: -17.875431060791016
    4. '	res' → logprob: -18.875431060791016
    5. '   ' → logprob: -19.000431060791016
    6. '_res' → logprob: -19.000431060791016
    7. '$res' → logprob: -20.000431060791016
    8. '           ' → logprob: -20.375431060791016
    9. '               ' → logprob: -21.750431060791016
    10. '```' → logprob: -21.875431060791016

Token 1704: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9361264946837764e-07
    2. '_' → logprob: -16.875
    3. '1' → logprob: -17.5
    4. '
' → logprob: -18.0
    5. 's' → logprob: -18.625
    6. 'res' → logprob: -18.75
    7. '12' → logprob: -18.875
    8. '２' → logprob: -18.875
    9. 'ult' → logprob: -19.0
    10. '   ' → logprob: -19.0625

Token 1705: ')

' (ID: 1029)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16816414892673492
    2. ')' → logprob: -2.5431642532348633
    3. '
' → logprob: -2.6681642532348633
    4. '<|end|>' → logprob: -5.793164253234863
    5. '        
' → logprob: -6.668164253234863
    6. ',' → logprob: -7.543164253234863
    7. '

' → logprob: -7.543164253234863
    8. ')

' → logprob: -7.668164253234863
    9. '        

' → logprob: -8.543164253234863
    10. '        ' → logprob: -9.168164253234863

Token 1706: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013455136679112911
    2. '```' → logprob: -4.638454914093018
    3. '<|end|>' → logprob: -6.388454914093018
    4. '        
' → logprob: -6.888454914093018
    5. '#' → logprob: -8.138455390930176
    6. '
' → logprob: -8.513455390930176
    7. '   ' → logprob: -9.013455390930176
    8. '+' → logprob: -9.638455390930176
    9. ')' → logprob: -9.763455390930176
    10. '<|end|>' → logprob: -10.388455390930176

Token 1707: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1352154165506363
    2. '#' (adapté à ' #') → logprob: -2.1352155208587646
    3. '```' → logprob: -5.0102152824401855
    4. '
' → logprob: -6.7602152824401855
    5. '   ' → logprob: -8.260215759277344
    6. '        
' → logprob: -9.010215759277344
    7. 'else' → logprob: -10.760215759277344
    8. 'return' → logprob: -12.010215759277344
    9. ' #' → logprob: -12.635215759277344
    10. '``' → logprob: -12.760215759277344

Token 1708: ' ' (ID: 220)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.10852378606796265
    2. '       ' → logprob: -2.3585238456726074
    3. '
' → logprob: -4.983523845672607
    4. '   ' → logprob: -6.608523845672607
    5. '        
' → logprob: -9.98352336883545
    6. '```' → logprob: -11.23352336883545
    7. ' #' → logprob: -11.48352336883545
    8. 'if' → logprob: -12.23352336883545
    9. '           ' → logprob: -12.85852336883545
    10. '
' → logprob: -13.48352336883545

Token 1709: '2' (ID: 17)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.07771749049425125
    2. '       ' → logprob: -2.7027175426483154
    3. '
' → logprob: -5.077717304229736
    4. '   ' → logprob: -6.577717304229736
    5. '        
' → logprob: -10.202717781066895
    6. 'if' → logprob: -10.577717781066895
    7. '```' → logprob: -10.577717781066895
    8. ' #' → logprob: -10.827717781066895
    9. '           ' → logprob: -12.577717781066895
    10. '+' → logprob: -12.577717781066895

Token 1710: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00020187153131701052
    2. ' )' → logprob: -9.000202178955078
    3. '   ' → logprob: -10.250202178955078
    4. '#' → logprob: -10.625202178955078
    5. '
' → logprob: -11.875202178955078
    6. ')#' → logprob: -11.875202178955078
    7. ')
' → logprob: -13.125202178955078
    8. ' #' → logprob: -14.000202178955078
    9. ' ' → logprob: -14.625202178955078
    10. ':' → logprob: -14.875202178955078

Token 1711: ' Not' (ID: 4037)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.008488337509334087
    2. ' #' → logprob: -5.133488178253174
    3. 'Skip' → logprob: -6.633488178253174
    4. 'Not' → logprob: -7.383488178253174
    5. 'if' → logprob: -8.508488655090332
    6. ' Skip' → logprob: -9.133488655090332
    7. 'skip' → logprob: -10.008488655090332
    8. 'Store' → logprob: -10.258488655090332
    9. ' skip' → logprob: -10.508488655090332
    10. 'Do' → logprob: -10.508488655090332

Token 1712: ' eat' (ID: 11237)
  Prédit: 'eat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eat' → logprob: -0.8513187766075134
    2. '_e' → logprob: -1.3513188362121582
    3. ')' → logprob: -1.7263188362121582
    4. ' eat' → logprob: -2.351318836212158
    5. 'e' → logprob: -3.351318836212158
    6. ' eating' → logprob: -6.226318836212158
    7. '(e' → logprob: -7.351318836212158
    8. '(
' → logprob: -7.851318836212158
    9. ')e' → logprob: -7.851318836212158
    10. ' )' → logprob: -7.976318836212158

Token 1713: ' carrot' (ID: 121234)
  Prédit: ' at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.38334742188453674
    2. '_car' → logprob: -1.8833473920822144
    3. ':' → logprob: -3.008347511291504
    4. 'car' → logprob: -3.258347511291504
    5. '_at' → logprob: -3.758347511291504
    6. 'at' → logprob: -4.008347511291504
    7. ',' → logprob: -4.258347511291504
    8. ' =' → logprob: -5.008347511291504
    9. '_segment' → logprob: -5.633347511291504
    10. ' carrot' → logprob: -6.383347511291504

Token 1714: ' at' (ID: 540)
  Prédit: ' at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.0746137723326683
    2. '_at' → logprob: -3.6996138095855713
    3. ' =' → logprob: -4.449613571166992
    4. 'at' → logprob: -4.449613571166992
    5. ',' → logprob: -5.074613571166992
    6. '       ' → logprob: -5.449613571166992
    7. ':' → logprob: -6.574613571166992
    8. '
' → logprob: -6.699613571166992
    9. '<|end|>' → logprob: -6.824613571166992
    10. '   ' → logprob: -7.074613571166992

Token 1715: ' this' (ID: 495)
  Prédit: 'this'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'this' → logprob: -0.10227258503437042
    2. 'all' → logprob: -2.3522725105285645
    3. ' this' → logprob: -6.4772725105285645
    4. 'idx' → logprob: -8.227272987365723
    5. ' all' → logprob: -8.477272987365723
    6. 'the' → logprob: -10.852272987365723
    7. '_this' → logprob: -11.352272987365723
    8. ' ' → logprob: -11.852272987365723
    9. '
' → logprob: -12.602272987365723
    10. ' idx' → logprob: -12.977272987365723

Token 1716: ' segment' (ID: 14806)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.5073487162590027
    2. 'position' → logprob: -1.7573487758636475
    3. 'segment' → logprob: -1.8823487758636475
    4. ' position' → logprob: -3.2573487758636475
    5. ' segment' → logprob: -3.8823487758636475
    6. ' idx' → logprob: -5.132348537445068
    7. 'pos' → logprob: -5.632348537445068
    8. 'index' → logprob: -6.507348537445068
    9. '_position' → logprob: -6.882348537445068
    10. '_idx' → logprob: -7.382348537445068

Token 1717: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4424619674682617
    2. ' if' → logprob: -1.6924619674682617
    3. '
' → logprob: -2.3174619674682617
    4. 'if' → logprob: -3.1924619674682617
    5. '#' → logprob: -4.067461967468262
    6. '        
' → logprob: -4.942461967468262
    7. ',' → logprob: -4.942461967468262
    8. '   ' → logprob: -7.692461967468262
    9. ' #' → logprob: -7.817461967468262
    10. ':' → logprob: -8.067461967468262

Token 1718: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011356549337506294
    2. '        
' → logprob: -5.011356353759766
    3. ' if' → logprob: -6.511356353759766
    4. '<|end|>' → logprob: -6.636356353759766
    5. '   ' → logprob: -8.011356353759766
    6. 'if' → logprob: -8.136356353759766
    7. '  
' → logprob: -8.261356353759766
    8. '        ' → logprob: -8.886356353759766
    9. '#' → logprob: -9.011356353759766
    10. ' ' → logprob: -9.511356353759766

Token 1719: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.20666255056858063
    2. '       ' → logprob: -1.7066625356674194
    3. 'time' → logprob: -5.956662654876709
    4. '   ' → logprob: -6.206662654876709
    5. 'if' → logprob: -8.33166217803955
    6. 'next' → logprob: -8.58166217803955
    7. '
' → logprob: -9.33166217803955
    8. ' #' → logprob: -10.45666217803955
    9. '```' → logprob: -10.45666217803955
    10. 'try' → logprob: -11.33166217803955

Token 1720: ' We' (ID: 1416)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.37093713879585266
    2. '#' → logprob: -1.2459371089935303
    3. '       ' → logprob: -4.120937347412109
    4. 'time' → logprob: -5.495937347412109
    5. '   ' → logprob: -7.120937347412109
    6. 'not' → logprob: -7.620937347412109
    7. 'can' → logprob: -8.99593734741211
    8. 'next' → logprob: -9.12093734741211
    9. 'for' → logprob: -9.24593734741211
    10. ' if' → logprob: -9.99593734741211

Token 1721: ' run' (ID: 2461)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.6789957284927368
    2. ' can' → logprob: -1.6789957284927368
    3. ' =' → logprob: -2.1789956092834473
    4. '=' → logprob: -2.1789956092834473
    5. '
' → logprob: -2.8039956092834473
    6. ' if' → logprob: -2.9289956092834473
    7. '#' → logprob: -2.9289956092834473
    8. ' continue' → logprob: -2.9289956092834473
    9. ' #' → logprob: -3.1789956092834473
    10. '.' → logprob: -3.9289956092834473

Token 1722: ' segment' (ID: 14806)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.1557084619998932
    2. 'for' → logprob: -2.9057085514068604
    3. 'dist' → logprob: -3.5307085514068604
    4. 'the' → logprob: -3.9057085514068604
    5. ' segment' → logprob: -4.405708312988281
    6. '_segment' → logprob: -4.405708312988281
    7. 'this' → logprob: -5.155708312988281
    8. '(dist' → logprob: -6.405708312988281
    9. 'time' → logprob: -6.530708312988281
    10. 'distance' → logprob: -6.905708312988281

Token 1723: ' with' (ID: 483)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.5518440008163452
    2. 'with' → logprob: -2.3018441200256348
    3. '_with' → logprob: -2.4268441200256348
    4. '_for' → logprob: -2.6768441200256348
    5. 'for' → logprob: -2.8018441200256348
    6. 'time' → logprob: -3.0518441200256348
    7. '       ' → logprob: -3.5518441200256348
    8. ' with' → logprob: -4.676844120025635
    9. ' for' → logprob: -5.301844120025635
    10. ',' → logprob: -5.426844120025635

Token 1724: ' current' (ID: 2208)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.37668582797050476
    2. 'time' → logprob: -1.5016858577728271
    3. 'current' → logprob: -3.251685857772827
    4. 'dist' → logprob: -3.251685857772827
    5. 'distance' → logprob: -5.501685619354248
    6. 'the' → logprob: -5.876685619354248
    7. 'car' → logprob: -6.251685619354248
    8. ' compute' → logprob: -6.626685619354248
    9. 'self' → logprob: -6.751685619354248
    10. ' time' → logprob: -7.251685619354248

Token 1725: ' boost' (ID: 12110)
  Prédit: '_for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_for' → logprob: -0.37244004011154175
    2. 'time' → logprob: -1.4974400997161865
    3. '_time' → logprob: -3.6224400997161865
    4. 'for' → logprob: -3.7474400997161865
    5. '_bo' → logprob: -3.9974400997161865
    6. 'boost' → logprob: -4.372439861297607
    7. '_' → logprob: -5.997439861297607
    8. ')' → logprob: -7.372439861297607
    9. '_dist' → logprob: -7.622439861297607
    10. ',' → logprob: -7.622439861297607

Token 1726: ' timer' (ID: 16905)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.5791168808937073
    2. '_time' → logprob: -1.0791168212890625
    3. ' time' → logprob: -3.4541168212890625
    4. ',' → logprob: -3.7041168212890625
    5. ' =' → logprob: -4.0791168212890625
    6. '=' → logprob: -4.3291168212890625
    7. 'for' → logprob: -5.2041168212890625
    8. '_for' → logprob: -6.7041168212890625
    9. ':' → logprob: -6.9541168212890625
    10. '=time' → logprob: -7.0791168212890625

Token 1727: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.2645916938781738
    2. 'time' → logprob: -1.2645916938781738
    3. '
' → logprob: -1.5145916938781738
    4. '       ' → logprob: -2.389591693878174
    5. ' time' → logprob: -3.014591693878174
    6. '=' → logprob: -3.889591693878174
    7. ',
' → logprob: -4.014591693878174
    8. ' =' → logprob: -5.139591693878174
    9. ' and' → logprob: -5.639591693878174
    10. '=time' → logprob: -5.639591693878174

Token 1728: ' and' (ID: 326)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.8266922831535339
    2. 'next' → logprob: -1.0766923427581787
    3. '#' → logprob: -2.4516923427581787
    4. '       ' → logprob: -2.5766923427581787
    5. ' next' → logprob: -3.9516923427581787
    6. ' time' → logprob: -4.2016921043396
    7. 'res' → logprob: -5.2016921043396
    8. ' #' → logprob: -5.4516921043396
    9. '
' → logprob: -5.8266921043396
    10. 'rest' → logprob: -6.3266921043396

Token 1729: ' then' (ID: 1815)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -1.0657719373703003
    2. '#' → logprob: -1.1907719373703003
    3. 'min' → logprob: -2.44077205657959
    4. 'time' → logprob: -2.56577205657959
    5. 'next' → logprob: -2.81577205657959
    6. 'try' → logprob: -3.31577205657959
    7. 'not' → logprob: -3.81577205657959
    8. '
' → logprob: -3.94077205657959
    9. '{
' → logprob: -4.69077205657959
    10. '       ' → logprob: -4.69077205657959

Token 1730: ' pick' (ID: 5230)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -1.2343385219573975
    2. 'min' → logprob: -1.7343385219573975
    3. '#' → logprob: -2.1093385219573975
    4. '{
' → logprob: -2.3593385219573975
    5. '
' → logprob: -2.3593385219573975
    6. 'try' → logprob: -2.6093385219573975
    7. 'next' → logprob: -3.1093385219573975
    8. 'not' → logprob: -3.2343385219573975
    9. 'time' → logprob: -3.2343385219573975
    10. '       ' → logprob: -4.734338760375977

Token 1731: ' carrot' (ID: 121234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.48455628752708435
    2. '()' → logprob: -1.4845563173294067
    3. 'not' → logprob: -2.859556198120117
    4. 'the' → logprob: -4.109556198120117
    5. 'to' → logprob: -4.109556198120117
    6. '(not' → logprob: -4.484556198120117
    7. 'up' → logprob: -4.609556198120117
    8. 'car' → logprob: -4.859556198120117
    9. '(
' → logprob: -5.359556198120117
    10. ')' → logprob: -5.484556198120117

Token 1732: '.' (ID: 13)
  Prédit: ' but'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' but' → logprob: -1.105795979499817
    2. ' without' → logprob: -1.480795979499817
    3. ',' → logprob: -1.730795979499817
    4. 'without' → logprob: -2.3557958602905273
    5. '_without' → logprob: -3.4807958602905273
    6. ' to' → logprob: -3.4807958602905273
    7. ' if' → logprob: -3.8557958602905273
    8. '_in' → logprob: -4.730795860290527
    9. 'but' → logprob: -4.855795860290527
    10. '_positions' → logprob: -4.980795860290527

Token 1733: ' We' (ID: 1416)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.39453524351119995
    2. '
' → logprob: -1.6445353031158447
    3. 'next' → logprob: -2.7695353031158447
    4. ' next' → logprob: -3.5195353031158447
    5. ' if' → logprob: -4.019535064697266
    6. 'time' → logprob: -4.769535064697266
    7. ' time' → logprob: -5.144535064697266
    8. 'if' → logprob: -6.019535064697266
    9. '        
' → logprob: -6.394535064697266
    10. '#' → logprob: -7.394535064697266

Token 1734: ' can' (ID: 665)
  Prédit: ' can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.43056637048721313
    2. 'can' → logprob: -1.8055663108825684
    3. ' continue' → logprob: -2.9305663108825684
    4. 'continue' → logprob: -3.0555663108825684
    5. ' may' → logprob: -4.305566310882568
    6. 'do' → logprob: -4.680566310882568
    7. ' do' → logprob: -4.805566310882568
    8. ' have' → logprob: -5.055566310882568
    9. 'have' → logprob: -5.180566310882568
    10. 'may' → logprob: -5.430566310882568

Token 1735: ' opt' (ID: 1832)
  Prédit: 'try'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'try' → logprob: -1.1107598543167114
    2. 'store' → logprob: -1.1107598543167114
    3. ' store' → logprob: -2.485759735107422
    4. 'choose' → logprob: -2.610759735107422
    5. 'pick' → logprob: -3.360759735107422
    6. 'run' → logprob: -3.360759735107422
    7. ' try' → logprob: -3.485759735107422
    8. 'also' → logprob: -4.110759735107422
    9. 'check' → logprob: -4.360759735107422
    10. ' run' → logprob: -4.610759735107422

Token 1736: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.6788764595985413
    2. 'ion' → logprob: -0.9288764595985413
    3. ' not' → logprob: -3.3038763999938965
    4. 'ions' → logprob: -4.5538763999938965
    5. ' for' → logprob: -4.6788763999938965
    6. '           ' → logprob: -4.9288763999938965
    7. 'ional' → logprob: -4.9288763999938965
    8. '       ' → logprob: -5.0538763999938965
    9. '   ' → logprob: -5.1788763999938965
    10. ',' → logprob: -5.9288763999938965

Token 1737: ' store' (ID: 4897)
  Prédit: 'store'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'store' → logprob: -0.4347322881221771
    2. ' store' → logprob: -1.0597323179244995
    3. ' not' → logprob: -6.559732437133789
    4. 'not' → logprob: -6.684732437133789
    5. 'pick' → logprob: -7.059732437133789
    6. ' either' → logprob: -7.559732437133789
    7. '   ' → logprob: -7.809732437133789
    8. 'either' → logprob: -7.809732437133789
    9. 'try' → logprob: -8.059732437133789
    10. ' pick' → logprob: -8.934732437133789

Token 1738: ' it' (ID: 480)
  Prédit: 'it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.28905296325683594
    2. ' it' → logprob: -1.539052963256836
    3. 'the' → logprob: -3.789052963256836
    4. 'car' → logprob: -5.164052963256836
    5. ' the' → logprob: -5.414052963256836
    6. 'if' → logprob: -6.914052963256836
    7. '(' → logprob: -7.164052963256836
    8. '1' → logprob: -8.039052963256836
    9. '(car' → logprob: -8.164052963256836
    10. 'dist' → logprob: -8.289052963256836

Token 1739: ' instantly' (ID: 29030)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.09391909092664719
    2. '       ' → logprob: -2.718919038772583
    3. 'if' → logprob: -4.843919277191162
    4. ',' → logprob: -5.093919277191162
    5. '           ' → logprob: -5.593919277191162
    6. ' or' → logprob: -5.718919277191162
    7. ' (' → logprob: -6.218919277191162
    8. '(if' → logprob: -7.718919277191162
    9. '(' → logprob: -8.968918800354004
    10. '               ' → logprob: -10.593918800354004

Token 1740: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.022907424718141556
    2. '       ' → logprob: -4.147907257080078
    3. ',' → logprob: -5.647907257080078
    4. ' or' → logprob: -6.272907257080078
    5. '.' → logprob: -7.772907257080078
    6. 'if' → logprob: -8.147907257080078
    7. ' and' → logprob: -9.022907257080078
    8. ' (' → logprob: -9.022907257080078
    9. '(' → logprob: -9.022907257080078
    10. ':' → logprob: -9.522907257080078

Token 1741: ' storage' (ID: 7928)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.005418496206402779
    2. ' self' → logprob: -5.255418300628662
    3. 'car' → logprob: -8.88041877746582
    4. ' carrots' → logprob: -10.63041877746582
    5. '(self' → logprob: -12.13041877746582
    6. ' ' → logprob: -12.63041877746582
    7. 'cars' → logprob: -12.63041877746582
    8. '```' → logprob: -13.13041877746582
    9. '
' → logprob: -13.63041877746582
    10. 'space' → logprob: -13.63041877746582

Token 1742: ' available' (ID: 2839)
  Prédit: 'allows'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'allows' → logprob: -1.7568632364273071
    2. ' is' → logprob: -1.8818632364273071
    3. '_capacity' → logprob: -2.2568631172180176
    4. ' allows' → logprob: -2.2568631172180176
    5. 'capacity' → logprob: -2.3818631172180176
    6. ' capacity' → logprob: -2.3818631172180176
    7. '_available' → logprob: -2.6318631172180176
    8. 'available' → logprob: -2.7568631172180176
    9. '.' → logprob: -3.8818631172180176
    10. ' available' → logprob: -4.006863117218018

Token 1743: ',
' (ID: 412)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.046669866889715195
    2. ',' → logprob: -4.171669960021973
    3. '
' → logprob: -4.171669960021973
    4. '        
' → logprob: -5.671669960021973
    5. ':' → logprob: -5.796669960021973
    6. ' if' → logprob: -5.921669960021973
    7. '           ' → logprob: -6.421669960021973
    8. ')' → logprob: -7.046669960021973
    9. ' or' → logprob: -7.171669960021973
    10. ' 
' → logprob: -7.921669960021973

Token 1744: '       ' (ID: 309)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.20537254214286804
    2. '       ' → logprob: -1.8303725719451904
    3. ' else' → logprob: -4.455372333526611
    4. 'or' → logprob: -5.455372333526611
    5. ' but' → logprob: -5.580372333526611
    6. '           ' → logprob: -6.080372333526611
    7. 'else' → logprob: -6.455372333526611
    8. '#' → logprob: -7.955372333526611
    9. ' and' → logprob: -8.58037281036377
    10. ' if' → logprob: -8.70537281036377

Token 1745: ' #' (ID: 1069)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.9957668781280518
    2. ' else' → logprob: -0.9957668781280518
    3. 'else' → logprob: -1.8707668781280518
    4. '       ' → logprob: -2.6207668781280518
    5. '#' (adapté à ' #') → logprob: -3.8707668781280518
    6. 'or' → logprob: -4.745766639709473
    7. '
' → logprob: -6.870766639709473
    8. '           ' → logprob: -6.995766639709473
    9. 'otherwise' → logprob: -7.245766639709473
    10. 'elif' → logprob: -7.870766639709473

Token 1746: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.8813717365264893
    2. '       ' → logprob: -1.0063717365264893
    3. ' else' → logprob: -2.2563717365264893
    4. 'or' → logprob: -3.7563717365264893
    5. ' if' → logprob: -3.8813717365264893
    6. '#' → logprob: -3.8813717365264893
    7. 'else' → logprob: -4.00637149810791
    8. 'otherwise' → logprob: -4.50637149810791
    9. ' otherwise' → logprob: -5.00637149810791
    10. '
' → logprob: -5.00637149810791

Token 1747: ' ignore' (ID: 17887)
  Prédit: ' skip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' skip' → logprob: -0.7935389876365662
    2. ' not' → logprob: -1.293539047241211
    3. 'not' → logprob: -1.918539047241211
    4. 'skip' → logprob: -2.168539047241211
    5. ' just' → logprob: -5.543539047241211
    6. ' pass' → logprob: -5.668539047241211
    7. ' leave' → logprob: -6.668539047241211
    8. ' simply' → logprob: -7.043539047241211
    9. 'pass' → logprob: -7.168539047241211
    10. ' store' → logprob: -8.418539047241211

Token 1748: ' it' (ID: 480)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.5958131551742554
    2. ' it' → logprob: -1.5958131551742554
    3. ' storing' → logprob: -2.220813274383545
    4. 'the' → logprob: -2.470813274383545
    5. 'it' → logprob: -3.095813274383545
    6. '       ' → logprob: -6.720813274383545
    7. 'car' → logprob: -6.720813274383545
    8. ' this' → logprob: -6.845813274383545
    9. '           ' → logprob: -7.220813274383545
    10. ' (' → logprob: -7.595813274383545

Token 1749: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1988501101732254
    2. ' if' → logprob: -2.198850154876709
    3. ':' → logprob: -3.448850154876709
    4. ',' → logprob: -4.573850154876709
    5. '=' → logprob: -4.823850154876709
    6. 'if' → logprob: -5.323850154876709
    7. '.' → logprob: -5.573850154876709
    8. '           ' → logprob: -5.698850154876709
    9. '
' → logprob: -5.948850154876709
    10. ':
' → logprob: -7.073850154876709

Token 1750: 'do' (ID: 2408)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1785621643066406
    2. ' skip' → logprob: -1.4285621643066406
    3. ' not' → logprob: -2.1785621643066406
    4. ' continue' → logprob: -2.3035621643066406
    5. 'skip' → logprob: -2.5535621643066406
    6. ' no' → logprob: -3.5535621643066406
    7. ' pass' → logprob: -3.8035621643066406
    8. 'continue' → logprob: -3.9285621643066406
    9. 'not' → logprob: -4.053562164306641
    10. '
' → logprob: -4.428562164306641

Token 1751: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.5195207595825195
    2. 'n't' → logprob: -1.0195207595825195
    3. ' not' → logprob: -3.3945207595825195
    4. 'nothing' → logprob: -4.8945207595825195
    5. ' nothing' → logprob: -6.2695207595825195
    6. 'n' → logprob: -6.7695207595825195
    7. 'ne' → logprob: -8.26952075958252
    8. '	not' → logprob: -10.39452075958252
    9. '
' → logprob: -11.14452075958252
    10. '_not' → logprob: -11.26952075958252

Token 1752: ' pick' (ID: 5230)
  Prédit: ' store'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' store' → logprob: -0.4761636257171631
    2. 'store' → logprob: -0.9761636257171631
    3. ' pick' → logprob: -6.976163864135742
    4. 'pick' → logprob: -7.851163864135742
    5. '
' → logprob: -7.976163864135742
    6. ' ' → logprob: -8.601163864135742
    7. ')' → logprob: -9.976163864135742
    8. ' not' → logprob: -10.351163864135742
    9. ' ' → logprob: -10.601163864135742
    10. ' take' → logprob: -10.726163864135742

Token 1753: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2060311883687973
    2. ' it' → logprob: -2.581031084060669
    3. 'it' → logprob: -3.456031084060669
    4. ' at' → logprob: -3.581031084060669
    5. ').' → logprob: -4.081031322479248
    6. ' the' → logprob: -4.081031322479248
    7. ' or' → logprob: -5.331031322479248
    8. 'the' → logprob: -5.456031322479248
    9. ')
' → logprob: -6.206031322479248
    10. '),' → logprob: -6.331031322479248

Token 1754: ' not' (ID: 625)
  Prédit: ' pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pass' → logprob: -0.9469447731971741
    2. ' or' → logprob: -2.0719447135925293
    3. ' skip' → logprob: -2.1969447135925293
    4. ')' → logprob: -2.4469447135925293
    5. 'pass' → logprob: -2.4469447135925293
    6. 'skip' → logprob: -2.8219447135925293
    7. 'return' → logprob: -3.0719447135925293
    8. '#' → logprob: -3.4469447135925293
    9. ' return' → logprob: -3.8219447135925293
    10. ' not' → logprob: -4.946944713592529

Token 1755: ' store' (ID: 4897)
  Prédit: 'store'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'store' → logprob: -0.14476832747459412
    2. ' store' → logprob: -2.019768238067627
    3. ' storing' → logprob: -7.894768238067627
    4. ')' → logprob: -8.144768714904785
    5. '   ' → logprob: -8.269768714904785
    6. ' pick' → logprob: -8.519768714904785
    7. 'pick' → logprob: -8.519768714904785
    8. 'eat' → logprob: -8.644768714904785
    9. 'take' → logprob: -8.769768714904785
    10. '```' → logprob: -8.894768714904785

Token 1756: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010265245102345943
    2. ').' → logprob: -4.635265350341797
    3. ')
' → logprob: -7.885265350341797
    4. ',' → logprob: -9.760265350341797
    5. ')

' → logprob: -11.010265350341797
    6. '),' → logprob: -11.260265350341797
    7. ').
' → logprob: -11.510265350341797
    8. ' )' → logprob: -12.010265350341797
    9. ' or' → logprob: -12.010265350341797
    10. ').

' → logprob: -12.135265350341797

Token 1757: ' no' (ID: 860)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9264092445373535
    2. ' or' → logprob: -1.0514092445373535
    3. ' skip' → logprob: -2.6764092445373535
    4. ' not' → logprob: -2.8014092445373535
    5. ' pass' → logprob: -3.8014092445373535
    6. ' continue' → logprob: -3.8014092445373535
    7. 'skip' → logprob: -4.4264092445373535
    8. 'or' → logprob: -4.5514092445373535
    9. ' and' → logprob: -4.6764092445373535
    10. 'return' → logprob: -4.8014092445373535

Token 1758: ' speed' (ID: 7733)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'time' → logprob: -1.2163389921188354
    2. 'change' → logprob: -1.3413389921188354
    3. 'car' → logprob: -1.7163389921188354
    4. ' time' → logprob: -3.091339111328125
    5. ' change' → logprob: -3.341339111328125
    6. 'return' → logprob: -3.341339111328125
    7. 'boost' → logprob: -3.841339111328125
    8. ' carrot' → logprob: -3.841339111328125
    9. ' action' → logprob: -3.966339111328125
    10. ' return' → logprob: -3.966339111328125

Token 1759: ' effect' (ID: 3159)
  Prédit: ' boost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' boost' → logprob: -0.9363483786582947
    2. '_' → logprob: -1.1863484382629395
    3. 'boost' → logprob: -2.3113484382629395
    4. '_bonus' → logprob: -3.3113484382629395
    5. ' penalty' → logprob: -3.9363484382629395
    6. '_change' → logprob: -3.9363484382629395
    7. ')' → logprob: -4.0613484382629395
    8. ' change' → logprob: -4.1863484382629395
    9. ' benefit' → logprob: -4.4363484382629395
    10. ' advantage' → logprob: -4.8113484382629395

Token 1760: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.015207558870315552
    2. ').' → logprob: -4.515207767486572
    3. ')
' → logprob: -5.765207767486572
    4. ')

' → logprob: -7.515207767486572
    5. ').
' → logprob: -9.015207290649414
    6. '.' → logprob: -9.265207290649414
    7. ' )' → logprob: -9.765207290649414
    8. '       ' → logprob: -10.140207290649414
    9. ').

' → logprob: -10.515207290649414
    10. '):

' → logprob: -10.515207290649414

Token 1761: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03002006560564041
    2. '
' → logprob: -3.780019998550415
    3. '        
' → logprob: -5.905020236968994
    4. ')' → logprob: -6.655020236968994
    5. ',' → logprob: -7.030020236968994
    6. '```' → logprob: -7.905020236968994
    7. '   ' → logprob: -8.655019760131836
    8. ' 
' → logprob: -8.905019760131836
    9. '  
' → logprob: -9.030019760131836
    10. '#' → logprob: -9.155019760131836

Token 1762: ' #
' (ID: 21888)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5872771739959717
    2. '       ' → logprob: -0.8372771739959717
    3. '#' → logprob: -5.712277412414551
    4. 'time' → logprob: -5.837277412414551
    5. ' time' → logprob: -6.337277412414551
    6. '        
' → logprob: -6.587277412414551
    7. '```' → logprob: -7.462277412414551
    8. ' 
' → logprob: -7.837277412414551
    9. '
' → logprob: -8.08727741241455
    10. '   ' → logprob: -8.71227741241455

Token 1763: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02680911123752594
    2. '
' → logprob: -3.6518092155456543
    3. '#' → logprob: -8.151808738708496
    4. '        
' → logprob: -8.776808738708496
    5. '   ' → logprob: -10.276808738708496
    6. '
' → logprob: -11.401808738708496
    7. '  
' → logprob: -12.651808738708496
    8. '```' → logprob: -12.651808738708496
    9. '

' → logprob: -13.026808738708496
    10. ' 
' → logprob: -13.151808738708496

Token 1764: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.3207698464393616
    2. '       ' → logprob: -1.3207697868347168
    3. '
' → logprob: -5.445769786834717
    4. ' #' → logprob: -6.070769786834717
    5. '   ' → logprob: -7.945769786834717
    6. 'if' → logprob: -9.195770263671875
    7. '        
' → logprob: -9.320770263671875
    8. 'for' → logprob: -10.070770263671875
    9. 'time' → logprob: -10.445770263671875
    10. 'options' → logprob: -10.570770263671875

Token 1765: ' a' (ID: 261)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7236540913581848
    2. '       ' → logprob: -0.9736540913581848
    3. 'if' → logprob: -2.59865403175354
    4. '
' → logprob: -2.97365403175354
    5. 'for' → logprob: -5.848654270172119
    6. '   ' → logprob: -6.098654270172119
    7. 'time' → logprob: -6.723654270172119
    8. 'store' → logprob: -6.723654270172119
    9. ' #' → logprob: -7.098654270172119
    10. '        
' → logprob: -7.473654270172119

Token 1766: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06127108633518219
    2. '       ' → logprob: -3.0612711906433105
    3. '#' → logprob: -5.4362711906433105
    4. '   ' → logprob: -5.5612711906433105
    5. 'ction' → logprob: -6.1862711906433105
    6. ':' → logprob: -7.4362711906433105
    7. '):' → logprob: -7.9362711906433105
    8. ')#' → logprob: -8.061270713806152
    9. ')
' → logprob: -8.936270713806152
    10. '           ' → logprob: -9.061270713806152

Token 1767: ' Pick' (ID: 24284)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.263099730014801
    2. 'time' → logprob: -2.1380996704101562
    3. ' time' → logprob: -3.5130996704101562
    4. '       ' → logprob: -3.7630996704101562
    5. ' #' → logprob: -3.8880996704101562
    6. 'Pick' → logprob: -4.763099670410156
    7. 'Run' → logprob: -4.888099670410156
    8. 'We' → logprob: -5.263099670410156
    9. 'Store' → logprob: -5.388099670410156
    10. '   ' → logprob: -5.513099670410156

Token 1768: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -1.0759360790252686
    2. ' =' → logprob: -1.9509360790252686
    3. ' and' → logprob: -2.0759360790252686
    4. '=' → logprob: -2.0759360790252686
    5. ')' → logprob: -2.7009360790252686
    6. '=True' → logprob: -2.9509360790252686
    7. '           ' → logprob: -3.0759360790252686
    8. '_and' → logprob: -3.9509360790252686
    9. '_' → logprob: -4.325936317443848
    10. '_car' → logprob: -4.450936317443848

Token 1769: ' store' (ID: 4897)
  Prédit: ' store'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' store' → logprob: -0.6931694149971008
    2. 'store' → logprob: -0.6931694149971008
    3. '	store' → logprob: -11.318169593811035
    4. ' ' → logprob: -12.693169593811035
    5. '(store' → logprob: -13.193169593811035
    6. '   ' → logprob: -13.693169593811035
    7. ' not' → logprob: -14.443169593811035
    8. '_store' → logprob: -14.568169593811035
    9. '.store' → logprob: -14.568169593811035
    10. ')' → logprob: -14.943169593811035

Token 1770: ' carrot' (ID: 121234)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.9202578067779541
    2. ' if' → logprob: -1.170257806777954
    3. '       ' → logprob: -1.920257806777954
    4. ' =' → logprob: -2.420257806777954
    5. '=' → logprob: -4.045257568359375
    6. '           ' → logprob: -4.045257568359375
    7. ':' → logprob: -5.420257568359375
    8. ')' → logprob: -5.545257568359375
    9. ' (' → logprob: -5.545257568359375
    10. '
' → logprob: -6.045257568359375

Token 1771: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15846562385559082
    2. ' if' → logprob: -2.033465623855591
    3. 'if' → logprob: -4.283465385437012
    4. ',' → logprob: -7.408465385437012
    5. '           ' → logprob: -7.908465385437012
    6. ' (' → logprob: -8.158465385437012
    7. ':' → logprob: -8.158465385437012
    8. '
' → logprob: -8.658465385437012
    9. ' at' → logprob: -10.533465385437012
    10. '(if' → logprob: -11.033465385437012

Token 1772: ' storage' (ID: 7928)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.09340498596429825
    2. ' self' → logprob: -2.46840500831604
    3. 'car' → logprob: -5.968404769897461
    4. ' carrots' → logprob: -6.343404769897461
    5. '(self' → logprob: -9.218404769897461
    6. ' ' → logprob: -10.843404769897461
    7. '	self' → logprob: -11.968404769897461
    8. 'cars' → logprob: -12.843404769897461
    9. '[self' → logprob: -13.343404769897461
    10. ' ' → logprob: -13.843404769897461

Token 1773: ' space' (ID: 4918)
  Prédit: '_available'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_available' → logprob: -0.7210773825645447
    2. '_capacity' → logprob: -1.7210774421691895
    3. ' and' → logprob: -2.2210774421691895
    4. 'available' → logprob: -2.4710774421691895
    5. ' is' → logprob: -3.4710774421691895
    6. ' available' → logprob: -3.4710774421691895
    7. '.available' → logprob: -4.2210774421691895
    8. '.' → logprob: -4.8460774421691895
    9. ' capacity' → logprob: -4.9710774421691895
    10. ':' → logprob: -4.9710774421691895

Token 1774: ' available' (ID: 2839)
  Prédit: ' available'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' available' → logprob: -1.0587985515594482
    2. 'available' → logprob: -1.4337985515594482
    3. ' and' → logprob: -1.8087985515594482
    4. '>' → logprob: -2.0587985515594482
    5. '_available' → logprob: -2.9337985515594482
    6. ' is' → logprob: -3.9337985515594482
    7. 'and' → logprob: -3.9337985515594482
    8. ' >' → logprob: -4.183798789978027
    9. ':' → logprob: -5.183798789978027
    10. '       ' → logprob: -6.183798789978027

Token 1775: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01601031795144081
    2. ' if' → logprob: -4.391010284423828
    3. 'if' → logprob: -6.141010284423828
    4. '
' → logprob: -7.891010284423828
    5. '           ' → logprob: -7.891010284423828
    6. ',' → logprob: -8.141010284423828
    7. '        
' → logprob: -9.766010284423828
    8. '	if' → logprob: -10.266010284423828
    9. '<|end|>' → logprob: -10.266010284423828
    10. '	' → logprob: -10.641010284423828

Token 1776: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014121070504188538
    2. '
' → logprob: -4.639121055603027
    3. ' if' → logprob: -6.514121055603027
    4. '        
' → logprob: -6.639121055603027
    5. '<|end|>' → logprob: -7.514121055603027
    6. ',' → logprob: -7.889121055603027
    7. 'if' → logprob: -8.389121055603027
    8. '           ' → logprob: -9.264121055603027
    9. '```' → logprob: -10.139121055603027
    10. '  
' → logprob: -10.264121055603027

Token 1777: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14482372999191284
    2. ' if' → logprob: -2.3948237895965576
    3. 'if' → logprob: -3.1448237895965576
    4. '
' → logprob: -7.7698235511779785
    5. '           ' → logprob: -10.019824028015137
    6. '   ' → logprob: -10.269824028015137
    7. '        
' → logprob: -10.769824028015137
    8. ' ' → logprob: -11.519824028015137
    9. ',' → logprob: -12.644824028015137
    10. '      ' → logprob: -12.769824028015137

Token 1778: ' b' (ID: 287)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3343653678894043
    2. ' if' → logprob: -2.2093653678894043
    3. 'if' → logprob: -2.4593653678894043
    4. '
' → logprob: -2.5843653678894043
    5. '           ' → logprob: -5.459365367889404
    6. 'time' → logprob: -5.584365367889404
    7. ' time' → logprob: -5.834365367889404
    8. 'next' → logprob: -7.459365367889404
    9. 'a' → logprob: -7.584365367889404
    10. ' next' → logprob: -7.834365367889404

Token 1779: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006619225605390966
    2. '       ' → logprob: -7.750661849975586
    3. '   ' → logprob: -8.750661849975586
    4. '
' → logprob: -10.750661849975586
    5. ':' → logprob: -11.750661849975586
    6. ')
' → logprob: -11.875661849975586
    7. '#' → logprob: -11.875661849975586
    8. ' if' → logprob: -12.250661849975586
    9. '           ' → logprob: -12.375661849975586
    10. ' )' → logprob: -12.375661849975586

Token 1780: ' Skip' (ID: 47626)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6029097437858582
    2. 'Ignore' → logprob: -1.727909803390503
    3. 'Pick' → logprob: -2.102909803390503
    4. ' Pick' → logprob: -3.352909803390503
    5. ' #' → logprob: -3.477909803390503
    6. 'Not' → logprob: -4.352909564971924
    7. 'ignore' → logprob: -4.477909564971924
    8. ' Ignore' → logprob: -4.477909564971924
    9. ' ignore' → logprob: -5.102909564971924
    10. ' pick' → logprob: -5.227909564971924

Token 1781: ' picking' (ID: 30859)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2977975010871887
    2. '
' → logprob: -1.547797441482544
    3. ' if' → logprob: -4.297797679901123
    4. ' =' → logprob: -5.047797679901123
    5. 'if' → logprob: -5.172797679901123
    6. '   ' → logprob: -5.172797679901123
    7. '
' → logprob: -6.297797679901123
    8. '

' → logprob: -6.547797679901123
    9. '=' → logprob: -6.547797679901123
    10. '        
' → logprob: -6.547797679901123

Token 1782: ' carrot' (ID: 121234)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5566118955612183
    2. '       ' → logprob: -1.3066118955612183
    3. '#' → logprob: -2.056612014770508
    4. 'time' → logprob: -4.181612014770508
    5. ' time' → logprob: -5.431612014770508
    6. '   ' → logprob: -5.681612014770508
    7. '
' → logprob: -6.431612014770508
    8. ' #' → logprob: -6.681612014770508
    9. '        
' → logprob: -7.681612014770508
    10. '_time' → logprob: -7.681612014770508

Token 1783: ' at' (ID: 540)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5085269212722778
    2. '
' → logprob: -1.2585269212722778
    3. '#' → logprob: -2.5085268020629883
    4. 'time' → logprob: -4.133526802062988
    5. '   ' → logprob: -5.008526802062988
    6. 'next' → logprob: -6.008526802062988
    7. ' time' → logprob: -6.133526802062988
    8. ' #' → logprob: -6.508526802062988
    9. '        
' → logprob: -7.008526802062988
    10. ' next' → logprob: -7.383526802062988

Token 1784: ' all' (ID: 722)
  Prédit: 'this'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'this' → logprob: -0.5372278094291687
    2. 'all' → logprob: -0.9122278094291687
    3. ' this' → logprob: -5.037227630615234
    4. ' all' → logprob: -5.037227630615234
    5. 'idx' → logprob: -7.037227630615234
    6. 'segment' → logprob: -10.412227630615234
    7. '
' → logprob: -10.537227630615234
    8. ' idx' → logprob: -11.037227630615234
    9. '...' → logprob: -11.287227630615234
    10. 'the' → logprob: -11.412227630615234

Token 1785: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.16179919242858887
    2. '       ' → logprob: -1.9117991924285889
    3. '
' → logprob: -6.911799430847168
    4. '

' → logprob: -8.411799430847168
    5. '        
' → logprob: -8.411799430847168
    6. '           ' → logprob: -10.536799430847168
    7. 'if' → logprob: -10.786799430847168
    8. '   ' → logprob: -10.911799430847168
    9. '#' → logprob: -11.286799430847168
    10. ',' → logprob: -11.661799430847168

Token 1786: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6353473663330078
    2. '       ' → logprob: -0.7603473663330078
    3. '        
' → logprob: -6.635347366333008
    4. '
' → logprob: -7.135347366333008
    5. '```' → logprob: -8.635347366333008
    6. '#' → logprob: -9.010347366333008
    7. '   ' → logprob: -9.760347366333008
    8. '' → logprob: -9.760347366333008
    9. ' 
' → logprob: -10.260347366333008
    10. '  
' → logprob: -10.385347366333008

Token 1787: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.37775659561157227
    2. '#' (adapté à ' #') → logprob: -1.2527565956115723
    3. '
' → logprob: -4.252756595611572
    4. 'if' → logprob: -5.127756595611572
    5. 'time' → logprob: -5.627756595611572
    6. '   ' → logprob: -6.002756595611572
    7. 'a' → logprob: -6.627756595611572
    8. '        
' → logprob: -7.377756595611572
    9. ' #' → logprob: -8.002756118774414
    10. ' if' → logprob: -9.752756118774414

Token 1788: ' In' (ID: 730)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.679566502571106
    2. '       ' → logprob: -1.429566502571106
    3. 'if' → logprob: -1.554566502571106
    4. 'time' → logprob: -3.6795663833618164
    5. 'a' → logprob: -4.929566383361816
    6. ' if' → logprob: -5.429566383361816
    7. '   ' → logprob: -6.429566383361816
    8. ' #' → logprob: -6.429566383361816
    9. 'next' → logprob: -7.429566383361816
    10. 'for' → logprob: -7.679566383361816

Token 1789: ' both' (ID: 2973)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9526450037956238
    2. '       ' → logprob: -1.3276450634002686
    3. '
' → logprob: -2.3276450634002686
    4. '   ' → logprob: -2.8276450634002686
    5. ' #' → logprob: -3.3276450634002686
    6. 'a' → logprob: -3.9526450634002686
    7. ' a' → logprob: -4.2026448249816895
    8. ')' → logprob: -4.3276448249816895
    9. '    ' → logprob: -4.4526448249816895
    10. 'time' → logprob: -4.7026448249816895

Token 1790: ' cases' (ID: 7911)
  Prédit: ' cases'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cases' → logprob: -0.7718886137008667
    2. 'cases' → logprob: -1.2718886137008667
    3. ':' → logprob: -2.1468887329101562
    4. 'case' → logprob: -3.0218887329101562
    5. 'a' → logprob: -4.021888732910156
    6. '   ' → logprob: -4.521888732910156
    7. '):' → logprob: -4.521888732910156
    8. 'actions' → logprob: -4.896888732910156
    9. '
' → logprob: -5.021888732910156
    10. ')' → logprob: -5.021888732910156

Token 1791: ',' (ID: 11)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6328707337379456
    2. ':' → logprob: -1.3828706741333008
    3. '       ' → logprob: -2.007870674133301
    4. '
' → logprob: -3.132870674133301
    5. ' time' → logprob: -4.757870674133301
    6. 'time' → logprob: -4.882870674133301
    7. ':

' → logprob: -5.382870674133301
    8. '#' → logprob: -5.632870674133301
    9. ',' → logprob: -5.632870674133301
    10. '_time' → logprob: -6.007870674133301

Token 1792: ' speed' (ID: 7733)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6672859191894531
    2. '       ' → logprob: -1.9172859191894531
    3. 'time' → logprob: -2.292285919189453
    4. '
' → logprob: -2.667285919189453
    5. 'next' → logprob: -3.042285919189453
    6. ' next' → logprob: -3.042285919189453
    7. ' time' → logprob: -3.292285919189453
    8. ' #' → logprob: -4.167285919189453
    9. 'current' → logprob: -5.667285919189453
    10. 'dist' → logprob: -5.667285919189453

Token 1793: ' during' (ID: 3354)
  Prédit: '_for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_for' → logprob: -0.020862767472863197
    2. '_' → logprob: -5.020862579345703
    3. ' =' → logprob: -5.270862579345703
    4. '=' → logprob: -5.645862579345703
    5. 'for' → logprob: -5.895862579345703
    6. '_time' → logprob: -6.895862579345703
    7. '_used' → logprob: -7.145862579345703
    8. '_rem' → logprob: -8.395862579345703
    9. ' remains' → logprob: -9.020862579345703
    10. ' for' → logprob: -9.770862579345703

Token 1794: ' segment' (ID: 14806)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.9269542694091797
    2. 'the' → logprob: -0.9269542694091797
    3. ' this' → logprob: -2.5519542694091797
    4. 'this' → logprob: -3.3019542694091797
    5. ' current' → logprob: -3.4269542694091797
    6. 'segment' → logprob: -3.5519542694091797
    7. ' segment' → logprob: -4.05195426940918
    8. 'dist' → logprob: -5.05195426940918
    9. 'current' → logprob: -5.55195426940918
    10. ' dist' → logprob: -6.30195426940918

Token 1795: ' is' (ID: 382)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3963286280632019
    2. ' =' → logprob: -1.3963286876678467
    3. 'is' → logprob: -3.1463286876678467
    4. ' is' → logprob: -3.5213286876678467
    5. ' remains' → logprob: -6.021328449249268
    6. 'depends' → logprob: -7.146328449249268
    7. 'rem' → logprob: -7.271328449249268
    8. '```' → logprob: -7.396328449249268
    9. ')' → logprob: -8.271328926086426
    10. 'does' → logprob: -8.271328926086426

Token 1796: ' with' (ID: 483)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'time' → logprob: -1.0565321445465088
    2. ' time' → logprob: -1.3065321445465088
    3. 'compute' → logprob: -1.5565321445465088
    4. ' compute' → logprob: -2.056532144546509
    5. 'computed' → logprob: -3.806532144546509
    6. ' computed' → logprob: -5.55653190612793
    7. 'based' → logprob: -5.80653190612793
    8. 'distance' → logprob: -6.30653190612793
    9. 'current' → logprob: -6.43153190612793
    10. 'self' → logprob: -6.43153190612793

Token 1797: ' current' (ID: 2208)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.4662027060985565
    2. 'current' → logprob: -1.466202735900879
    3. ' current' → logprob: -2.591202735900879
    4. ' time' → logprob: -3.091202735900879
    5. 'the' → logprob: -4.091202735900879
    6. ' the' → logprob: -6.091202735900879
    7. '_current' → logprob: -6.716202735900879
    8. 'existing' → logprob: -8.091202735900879
    9. 'last' → logprob: -9.091202735900879
    10. 'out' → logprob: -9.216202735900879

Token 1798: ' boost' (ID: 12110)
  Prédit: 'boost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'boost' → logprob: -0.07993197441101074
    2. '_bo' → logprob: -3.3299319744110107
    3. ' boost' → logprob: -3.5799319744110107
    4. 'time' → logprob: -4.45493221282959
    5. ' time' → logprob: -7.32993221282959
    6. 'bo' → logprob: -7.82993221282959
    7. '(boost' → logprob: -9.07993221282959
    8. 'speed' → logprob: -9.20493221282959
    9. '_time' → logprob: -9.70493221282959
    10. '_' → logprob: -10.32993221282959

Token 1799: ' parameters' (ID: 9621)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8471655249595642
    2. '
' → logprob: -1.222165584564209
    3. 'time' → logprob: -2.472165584564209
    4. ' =' → logprob: -2.597165584564209
    5. '=' → logprob: -3.347165584564209
    6. '_time' → logprob: -3.472165584564209
    7. ' time' → logprob: -3.847165584564209
    8. '#' → logprob: -4.722165584564209
    9. ',' → logprob: -5.597165584564209
    10. ':' → logprob: -5.972165584564209

Token 1800: '.

' (ID: 364)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06577258557081223
    2. '       ' → logprob: -2.815772533416748
    3. '
' → logprob: -6.565772533416748
    4. '        
' → logprob: -7.065772533416748
    5. 'time' → logprob: -7.565772533416748
    6. ' time' → logprob: -8.065773010253906
    7. '

' → logprob: -8.190773010253906
    8. ',' → logprob: -9.065773010253906
    9. '#' → logprob: -9.565773010253906
    10. ',
' → logprob: -10.315773010253906

Token 1801: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.145304337143898
    2. '       ' → logprob: -2.0203044414520264
    3. 'time' → logprob: -7.020304203033447
    4. '#' → logprob: -7.645304203033447
    5. '        
' → logprob: -7.645304203033447
    6. '
' → logprob: -8.520304679870605
    7. '   ' → logprob: -8.770304679870605
    8. 'next' → logprob: -8.770304679870605
    9. '```' → logprob: -9.145304679870605
    10. '\n' → logprob: -10.020304679870605

Token 1802: ' time' (ID: 1058)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.37060999870300293
    2. '
' → logprob: -1.245609998703003
    3. '#' → logprob: -4.620610237121582
    4. 'time' (adapté à ' time') → logprob: -5.120610237121582
    5. '        
' → logprob: -5.745610237121582
    6. '   ' → logprob: -6.995610237121582
    7. ' time' → logprob: -7.370610237121582
    8. ' 
' → logprob: -8.745610237121582
    9. 'next' → logprob: -8.870610237121582
    10. 'a' → logprob: -8.995610237121582

Token 1803: '_for' (ID: 11903)
  Prédit: '_for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_for' → logprob: -0.0012744003906846046
    2. 'for' → logprob: -6.751274585723877
    3. '_' → logprob: -9.376274108886719
    4. ' for' → logprob: -12.501274108886719
    5. '_since' → logprob: -12.876274108886719
    6. '   ' → logprob: -13.376274108886719
    7. '_to' → logprob: -13.626274108886719
    8. ' +=' → logprob: -13.751274108886719
    9. ' =' → logprob: -14.001274108886719
    10. '_after' → logprob: -14.251274108886719

Token 1804: '_segment' (ID: 71041)
  Prédit: '_segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_segment' → logprob: -0.0017407472478225827
    2. 'segment' → logprob: -6.3767409324646
    3. '_for' → logprob: -10.376740455627441
    4. 'for' → logprob: -13.251740455627441
    5. '_seg' → logprob: -13.501740455627441
    6. '_' → logprob: -13.751740455627441
    7. '(segment' → logprob: -14.251740455627441
    8. ' segment' → logprob: -14.626740455627441
    9. '```' → logprob: -14.751740455627441
    10. '_segments' → logprob: -14.876740455627441

Token 1805: '_no' (ID: 13575)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.35140687227249146
    2. ' =' → logprob: -1.2264068126678467
    3. ' +=' → logprob: -6.476407051086426
    4. ')' → logprob: -7.476407051086426
    5. '+=' → logprob: -7.601407051086426
    6. ',' → logprob: -9.226407051086426
    7. '+' → logprob: -9.726407051086426
    8. ' +' → logprob: -9.976407051086426
    9. ')=' → logprob: -11.226407051086426
    10. '       ' → logprob: -11.351407051086426

Token 1806: 'eat' (ID: 100633)
  Prédit: '_for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_for' → logprob: -0.3346359133720398
    2. '_' → logprob: -2.2096359729766846
    3. ' =' → logprob: -2.3346359729766846
    4. '=' → logprob: -2.9596359729766846
    5. 'for' → logprob: -3.8346359729766846
    6. ')' → logprob: -5.8346357345581055
    7. ' _' → logprob: -8.084635734558105
    8. '   ' → logprob: -8.209635734558105
    9. '
' → logprob: -9.209635734558105
    10. ',' → logprob: -9.334635734558105

Token 1807: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06197306513786316
    2. '=' → logprob: -2.8119730949401855
    3. ')' → logprob: -13.186972618103027
    4. ' ' → logprob: -13.436972618103027
    5. '   ' → logprob: -14.186972618103027
    6. ',' → logprob: -14.936972618103027
    7. '        ' → logprob: -15.186972618103027
    8. '    ' → logprob: -15.186972618103027
    9. ' =
' → logprob: -15.811972618103027
    10. '_' → logprob: -16.061973571777344

Token 1808: ' compute' (ID: 23864)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.0021431241184473038
    2. ' compute' → logprob: -6.502142906188965
    3. 'self' → logprob: -7.377142906188965
    4. 'time' → logprob: -11.752142906188965
    5. 'distance' → logprob: -12.752142906188965
    6. ' self' → logprob: -13.377142906188965
    7. 'calculate' → logprob: -13.877142906188965
    8. 'dist' → logprob: -14.752142906188965
    9. 'float' → logprob: -15.502142906188965
    10. '.compute' → logprob: -15.502142906188965

Token 1809: '_segment' (ID: 71041)
  Prédit: '_segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_segment' → logprob: -4.4849443838757e-06
    2. 'segment' → logprob: -13.375004768371582
    3. '```' → logprob: -13.375004768371582
    4. '(segment' → logprob: -14.875004768371582
    5. '_seg' → logprob: -15.125004768371582
    6. '_segments' → logprob: -15.375004768371582
    7. '`' → logprob: -15.500004768371582
    8. 'Segment' → logprob: -16.750003814697266
    9. '(' → logprob: -17.000003814697266
    10. '(_' → logprob: -17.625003814697266

Token 1810: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -1.5690089639974758e-05
    2. '_token' → logprob: -12.125015258789062
    3. 'time' → logprob: -12.375015258789062
    4. '_segment' → logprob: -12.625015258789062
    5. '```' → logprob: -13.500015258789062
    6. '_distance' → logprob: -15.125015258789062
    7. '"time' → logprob: -15.375015258789062
    8. '_t' → logprob: -16.125015258789062
    9. ' time' → logprob: -16.375015258789062
    10. '_type' → logprob: -16.625015258789062

Token 1811: '(dist' (ID: 78981)
  Prédit: '(dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dist' → logprob: -0.008780375123023987
    2. '(' → logprob: -4.758780479431152
    3. '(
' → logprob: -8.758780479431152
    4. '(dis' → logprob: -12.633780479431152
    5. 'dist' → logprob: -12.758780479431152
    6. '(distance' → logprob: -13.258780479431152
    7. '(dim' → logprob: -15.133780479431152
    8. '(d' → logprob: -15.508780479431152
    9. '(di' → logprob: -15.883780479431152
    10. ' (' → logprob: -16.258779525756836

Token 1812: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.150362166110426e-05
    2. ',time' → logprob: -9.750091552734375
    3. '(time' → logprob: -11.375091552734375
    4. ' ,' → logprob: -12.000091552734375
    5. ',
' → logprob: -12.250091552734375
    6. ')' → logprob: -12.375091552734375
    7. '(' → logprob: -13.250091552734375
    8. '=' → logprob: -14.125091552734375
    9. ',current' → logprob: -14.250091552734375
    10. '       ' → logprob: -15.000091552734375

Token 1813: ' time' (ID: 1058)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.25192990899086
    2. ' time' → logprob: -1.5019298791885376
    3. '   ' → logprob: -15.251930236816406
    4. '    ' → logprob: -15.751930236816406
    5. 't' → logprob: -16.126930236816406
    6. '(time' → logprob: -16.126930236816406
    7. '	time' → logprob: -16.126930236816406
    8. '
' → logprob: -17.376930236816406
    9. '"time' → logprob: -17.876930236816406
    10. '        ' → logprob: -18.751930236816406

Token 1814: '_since' (ID: 133288)
  Prédit: '_since'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_since' → logprob: -1.1279553291387856e-05
    2. 'since' → logprob: -12.125011444091797
    3. '_for' → logprob: -13.000011444091797
    4. ')' → logprob: -13.625011444091797
    5. '```' → logprob: -14.875011444091797
    6. '_' → logprob: -15.000011444091797
    7. '   ' → logprob: -15.375011444091797
    8. 'Since' → logprob: -15.500011444091797
    9. '_to' → logprob: -15.875011444091797
    10. ' since' → logprob: -16.000011444091797

Token 1815: '_last' (ID: 26359)
  Prédit: '_last'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_last' → logprob: -0.00037371189682744443
    2. 'last' → logprob: -8.000373840332031
    3. '_since' → logprob: -10.250373840332031
    4. '```' → logprob: -14.375373840332031
    5. '_l' → logprob: -14.500373840332031
    6. '_start' → logprob: -14.875373840332031
    7. '_not' → logprob: -15.375373840332031
    8. '_no' → logprob: -16.12537384033203
    9. '_first' → logprob: -16.25037384033203
    10. '
' → logprob: -16.25037384033203

Token 1816: '_e' (ID: 4618)
  Prédit: '_e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_e' → logprob: -0.0018687831470742822
    2. 'eat' → logprob: -6.376868724822998
    3. 'e' → logprob: -8.876869201660156
    4. '_' → logprob: -12.376869201660156
    5. '_a' → logprob: -12.501869201660156
    6. ')' → logprob: -12.751869201660156
    7. '
' → logprob: -13.001869201660156
    8. 'ate' → logprob: -13.876869201660156
    9. 'Eat' → logprob: -13.876869201660156
    10. '_
' → logprob: -14.001869201660156

Token 1817: 'at' (ID: 266)
  Prédit: 'at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.003919887822121382
    2. 'eat' → logprob: -5.628920078277588
    3. '_at' → logprob: -9.12891960144043
    4. 'e' → logprob: -9.62891960144043
    5. 't' → logprob: -10.00391960144043
    6. 'At' → logprob: -11.12891960144043
    7. 'ат' → logprob: -11.25391960144043
    8. '_e' → logprob: -11.25391960144043
    9. 'et' → logprob: -11.62891960144043
    10. 'a' → logprob: -11.75391960144043

Token 1818: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.6803456544876099
    2. ')' → logprob: -1.0553456544876099
    3. ')

' → logprob: -1.9303456544876099
    4. '_start' → logprob: -8.55534553527832
    5. ')
' → logprob: -9.05534553527832
    6. ')

' → logprob: -10.68034553527832
    7. ' )
' → logprob: -11.30534553527832
    8. 'start' → logprob: -11.30534553527832
    9. ')


' → logprob: -12.05534553527832
    10. '   ' → logprob: -12.18034553527832

Token 1819: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.13682244718074799
    2. '       ' → logprob: -2.261822462081909
    3. '        
' → logprob: -5.01182222366333
    4. '
' → logprob: -5.63682222366333
    5. '

' → logprob: -5.88682222366333
    6. ')' → logprob: -5.88682222366333
    7. ' =' → logprob: -6.63682222366333
    8. ' +' → logprob: -6.63682222366333
    9. ',' → logprob: -6.63682222366333
    10. ')
' → logprob: -7.13682222366333

Token 1820: ' next' (ID: 2613)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.2753907442092896
    2. '       ' → logprob: -1.4003907442092896
    3. 'next' (adapté à ' next') → logprob: -1.6503907442092896
    4. 'if' → logprob: -1.9003907442092896
    5. 'min' → logprob: -3.150390625
    6. '
' → logprob: -3.150390625
    7. 'res' → logprob: -3.525390625
    8. 'for' → logprob: -5.150390625
    9. 'time' → logprob: -5.275390625
    10. 'result' → logprob: -5.775390625

Token 1821: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.0024442621506750584
    2. '_key' → logprob: -6.252444267272949
    3. '_car' → logprob: -8.50244426727295
    4. '_idx' → logprob: -8.62744426727295
    5. '_' → logprob: -9.25244426727295
    6. '_pos' → logprob: -12.50244426727295
    7. '_token' → logprob: -12.62744426727295
    8. '_step' → logprob: -12.75244426727295
    9. '_state' → logprob: -12.87744426727295
    10. '_t' → logprob: -13.00244426727295

Token 1822: '_no' (ID: 13575)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20153632760047913
    2. ' =' → logprob: -1.7015362977981567
    3. ' +=' → logprob: -10.076536178588867
    4. '+=' → logprob: -10.201536178588867
    5. '+' → logprob: -10.951536178588867
    6. ',' → logprob: -11.201536178588867
    7. ')' → logprob: -12.451536178588867
    8. '=
' → logprob: -13.326536178588867
    9. ' +' → logprob: -13.701536178588867
    10. ' ' → logprob: -14.201536178588867

Token 1823: 'eat' (ID: 100633)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9005210995674133
    2. '=' → logprob: -1.2755210399627686
    3. '_' → logprob: -1.9005210399627686
    4. '_for' → logprob: -2.2755210399627686
    5. ')' → logprob: -3.7755210399627686
    6. ' +=' → logprob: -4.275521278381348
    7. ' _' → logprob: -4.650521278381348
    8. '_time' → logprob: -5.900521278381348
    9. '+' → logprob: -6.150521278381348
    10. '```' → logprob: -6.150521278381348

Token 1824: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12692831456661224
    2. ' =' → logprob: -2.1269283294677734
    3. ',' → logprob: -15.751928329467773
    4. ')' → logprob: -16.876928329467773
    5. '=
' → logprob: -16.876928329467773
    6. ' ' → logprob: -17.626928329467773
    7. ' ' → logprob: -17.626928329467773
    8. '＝' → logprob: -17.876928329467773
    9. '=current' → logprob: -18.501928329467773
    10. '=

' → logprob: -18.626928329467773

Token 1825: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.16023366153240204
    2. ' current' → logprob: -1.9102336168289185
    3. '(current' → logprob: -12.410233497619629
    4. '   ' → logprob: -12.785233497619629
    5. '	current' → logprob: -13.910233497619629
    6. '$current' → logprob: -15.035233497619629
    7. ' ' → logprob: -15.160233497619629
    8. '[current' → logprob: -15.660233497619629
    9. '_current' → logprob: -15.660233497619629
    10. 'Current' → logprob: -15.660233497619629

Token 1826: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.00021045419271104038
    2. '+' → logprob: -8.750210762023926
    3. '_' → logprob: -10.250210762023926
    4. ' +' → logprob: -12.125210762023926
    5. 'time' → logprob: -12.750210762023926
    6. '_t' → logprob: -13.250210762023926
    7. '   ' → logprob: -13.250210762023926
    8. ' _' → logprob: -13.500210762023926
    9. '_no' → logprob: -13.875210762023926
    10. '_current' → logprob: -14.750210762023926

Token 1827: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4740857779979706
    2. ' +' → logprob: -0.974085807800293
    3. '+
' → logprob: -11.974085807800293
    4. ' +
' → logprob: -13.849085807800293
    5. ' ' → logprob: -14.849085807800293
    6. ' ' → logprob: -15.474085807800293
    7. '   ' → logprob: -15.474085807800293
    8. ' +=' → logprob: -16.099084854125977
    9. '+=' → logprob: -16.224084854125977
    10. '＋' → logprob: -16.349084854125977

Token 1828: ' time' (ID: 1058)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -8.506661833962426e-05
    2. ' time' → logprob: -9.37508487701416
    3. '   ' → logprob: -15.75008487701416
    4. '"time' → logprob: -18.625085830688477
    5. '	time' → logprob: -18.750085830688477
    6. ' ' → logprob: -19.250085830688477
    7. '(time' → logprob: -19.375085830688477
    8. 't' → logprob: -19.625085830688477
    9. '    ' → logprob: -19.875085830688477
    10. '       ' → logprob: -20.000085830688477

Token 1829: '_for' (ID: 11903)
  Prédit: '_for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_for' → logprob: -0.00045902872807346284
    2. 'for' → logprob: -8.000458717346191
    3. '_no' → logprob: -9.250458717346191
    4. 'For' → logprob: -11.000458717346191
    5. '+' → logprob: -12.250458717346191
    6. '   ' → logprob: -12.750458717346191
    7. '```' → logprob: -13.625458717346191
    8. '       ' → logprob: -15.125458717346191
    9. ')' → logprob: -15.250458717346191
    10. ' for' → logprob: -15.875458717346191

Token 1830: '_segment' (ID: 71041)
  Prédit: '_segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_segment' → logprob: -0.005931520834565163
    2. 'segment' → logprob: -5.130931377410889
    3. 'Segment' → logprob: -13.880931854248047
    4. 'time' → logprob: -14.505931854248047
    5. 'seg' → logprob: -15.255931854248047
    6. '```' → logprob: -15.255931854248047
    7. ' segment' → logprob: -15.880931854248047
    8. '
' → logprob: -16.005931854248047
    9. 'egment' → logprob: -16.380931854248047
    10. '`' → logprob: -16.380931854248047

Token 1831: '_no' (ID: 13575)
  Prédit: '_no'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_no' → logprob: -0.47599342465400696
    2. '+' → logprob: -1.3509933948516846
    3. ')' → logprob: -3.2259933948516846
    4. ',' → logprob: -3.3509933948516846
    5. ' +' → logprob: -4.225993633270264
    6. '
' → logprob: -4.350993633270264
    7. 'No' → logprob: -5.350993633270264
    8. '<|end|>' → logprob: -5.725993633270264
    9. '```' → logprob: -6.475993633270264
    10. 'no' → logprob: -6.725993633270264

Token 1832: 'eat' (ID: 100633)
  Prédit: 'eat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eat' → logprob: -0.061970602720975876
    2. 'at' → logprob: -2.8119707107543945
    3. 'Eat' → logprob: -13.686970710754395
    4. 'et' → logprob: -14.186970710754395
    5. 'e' → logprob: -14.436970710754395
    6. ' eat' → logprob: -15.561970710754395
    7. 't' → logprob: -16.561969757080078
    8. 'ат' → logprob: -16.811969757080078
    9. 'o' → logprob: -17.061969757080078
    10. 'eit' → logprob: -17.311969757080078

Token 1833: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4265284538269043
    2. '
' → logprob: -1.8015284538269043
    3. ',' → logprob: -2.1765284538269043
    4. '<|end|>' → logprob: -3.8015284538269043
    5. ')' → logprob: -4.426528453826904
    6. '        
' → logprob: -4.551528453826904
    7. ',
' → logprob: -5.801528453826904
    8. '#' → logprob: -6.176528453826904
    9. 'return' → logprob: -6.176528453826904
    10. ' if' → logprob: -6.176528453826904

Token 1834: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016689922660589218
    2. '
' → logprob: -5.016689777374268
    3. '        
' → logprob: -5.391689777374268
    4. ',' → logprob: -5.891689777374268
    5. '<|end|>' → logprob: -6.891689777374268
    6. ')' → logprob: -7.391689777374268
    7. ' if' → logprob: -7.641689777374268
    8. '```' → logprob: -9.766690254211426
    9. 'if' → logprob: -9.891690254211426
    10. ' 
' → logprob: -9.891690254211426

Token 1835: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6558411121368408
    2. '#' (adapté à ' #') → logprob: -0.7808411121368408
    3. 'res' → logprob: -4.280840873718262
    4. 'min' → logprob: -4.780840873718262
    5. '       ' → logprob: -8.155840873718262
    6. '   ' → logprob: -8.780840873718262
    7. 'time' → logprob: -9.155840873718262
    8. 'result' → logprob: -9.155840873718262
    9. 'ret' → logprob: -11.280840873718262
    10. 'for' → logprob: -11.280840873718262

Token 1836: ' a' (ID: 261)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2924400568008423
    2. '#' → logprob: -1.4174400568008423
    3. 'min' → logprob: -5.417439937591553
    4. '       ' → logprob: -5.667439937591553
    5. 'res' → logprob: -6.167439937591553
    6. '   ' → logprob: -7.792439937591553
    7. 'result' → logprob: -7.917439937591553
    8. 'for' → logprob: -9.167440414428711
    9. '
' → logprob: -9.292440414428711
    10. 'actions' → logprob: -9.917440414428711

Token 1837: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.639096970204264e-05
    2. 'if' → logprob: -10.125096321105957
    3. ' if' → logprob: -10.250096321105957
    4. ')
' → logprob: -12.250096321105957
    5. '):' → logprob: -12.375096321105957
    6. ':' → logprob: -12.500096321105957
    7. '   ' → logprob: -12.625096321105957
    8. ' )' → logprob: -13.375096321105957
    9. '）' → logprob: -13.625096321105957
    10. 'b' → logprob: -14.375096321105957

Token 1838: ' pick' (ID: 5230)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.005780781153589487
    2. ' if' → logprob: -5.2557806968688965
    3. 'If' → logprob: -7.7557806968688965
    4. '       ' → logprob: -9.630781173706055
    5. 'Pick' → logprob: -10.630781173706055
    6. '
' → logprob: -11.255781173706055
    7. '#' → logprob: -12.130781173706055
    8. 'Store' → logprob: -12.505781173706055
    9. '   ' → logprob: -13.380781173706055
    10. '           ' → logprob: -13.505781173706055

Token 1839: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.157186359167099
    2. ' and' → logprob: -2.657186269760132
    3. 'if' → logprob: -3.407186269760132
    4. ' if' → logprob: -3.782186269760132
    5. '_and' → logprob: -4.782186508178711
    6. '           ' → logprob: -5.282186508178711
    7. ' =' → logprob: -6.532186508178711
    8. ')' → logprob: -6.532186508178711
    9. '_car' → logprob: -6.907186508178711
    10. '=' → logprob: -7.782186508178711

Token 1840: ' store' (ID: 4897)
  Prédit: 'store'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'store' → logprob: -0.0006357124075293541
    2. ' store' → logprob: -7.375635623931885
    3. ' ' → logprob: -13.000636100769043
    4. '   ' → logprob: -13.000636100769043
    5. 'eat' → logprob: -13.750636100769043
    6. '(store' → logprob: -14.375636100769043
    7. '	store' → logprob: -14.375636100769043
    8. ')' → logprob: -14.750636100769043
    9. 'b' → logprob: -14.750636100769043
    10. '  ' → logprob: -15.000636100769043

Token 1841: ' carrot' (ID: 121234)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.670642614364624
    2. 'if' → logprob: -0.795642614364624
    3. '       ' → logprob: -4.295642852783203
    4. ' =' → logprob: -4.295642852783203
    5. ')' → logprob: -5.795642852783203
    6. ' (' → logprob: -6.295642852783203
    7. '=' → logprob: -6.295642852783203
    8. '           ' → logprob: -7.170642852783203
    9. ':' → logprob: -7.420642852783203
    10. '(if' → logprob: -7.795642852783203

Token 1842: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11743184179067612
    2. ' if' → logprob: -2.367431879043579
    3. 'if' → logprob: -4.117431640625
    4. ',' → logprob: -7.742431640625
    5. ':' → logprob: -9.367431640625
    6. '           ' → logprob: -9.617431640625
    7. ' (' → logprob: -9.742431640625
    8. 'If' → logprob: -10.492431640625
    9. '<|end|>' → logprob: -10.617431640625
    10. ')' → logprob: -10.992431640625

Token 1843: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015332243405282497
    2. ' if' → logprob: -4.265332221984863
    3. 'if' → logprob: -6.890332221984863
    4. ',' → logprob: -9.265332221984863
    5. '<|end|>' → logprob: -11.265332221984863
    6. '           ' → logprob: -11.640332221984863
    7. ' =' → logprob: -12.015332221984863
    8. '        
' → logprob: -12.015332221984863
    9. ':' → logprob: -12.140332221984863
    10. ' and' → logprob: -12.390332221984863

Token 1844: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.03103943169116974
    2. ' if' → logprob: -3.6560394763946533
    3. '       ' → logprob: -5.406039237976074
    4. '
' → logprob: -8.531039237976074
    5. '        
' → logprob: -10.656039237976074
    6. '```' → logprob: -12.281039237976074
    7. '           ' → logprob: -12.531039237976074
    8. '	if' → logprob: -13.156039237976074
    9. 'If' → logprob: -13.531039237976074
    10. '   ' → logprob: -13.531039237976074

Token 1845: ' carrots' (ID: 91266)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.2862146496772766
    2. 'car' → logprob: -1.7862145900726318
    3. ' carrots' → logprob: -3.036214590072632
    4. ' self' → logprob: -3.411214590072632
    5. 'cars' → logprob: -8.661214828491211
    6. '(self' → logprob: -10.411214828491211
    7. 'c' → logprob: -11.661214828491211
    8. ' ' → logprob: -11.723714828491211
    9. ' carrot' → logprob: -11.786214828491211
    10. '```' → logprob: -12.036214828491211

Token 1846: '_car' (ID: 62991)
  Prédit: '_car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_car' → logprob: -4.60414821645827e-06
    2. '_c' → logprob: -14.000004768371582
    3. 'car' → logprob: -14.125004768371582
    4. '_can' → logprob: -14.125004768371582
    5. 'Car' → logprob: -14.500004768371582
    6. '	car' → logprob: -14.625004768371582
    7. '_' → logprob: -14.750004768371582
    8. '.car' → logprob: -16.250003814697266
    9. '<Car' → logprob: -16.250003814697266
    10. ' _' → logprob: -16.375003814697266

Token 1847: 'ried' (ID: 6089)
  Prédit: 'ried'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ried' → logprob: -0.00040528984391130507
    2. 'r' → logprob: -8.875405311584473
    3. 'ar' → logprob: -8.875405311584473
    4. '_' → logprob: -10.000405311584473
    5. '_car' → logprob: -10.125405311584473
    6. 'ied' → logprob: -10.375405311584473
    7. 'car' → logprob: -13.000405311584473
    8. '-car' → logprob: -14.250405311584473
    9. '__' → logprob: -14.375405311584473
    10. '```' → logprob: -14.500405311584473

Token 1848: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.06232336163520813
    2. '<' → logprob: -2.8123233318328857
    3. ' +' → logprob: -8.812323570251465
    4. '+' → logprob: -8.937323570251465
    5. ' ' → logprob: -10.062323570251465
    6. '<size' → logprob: -12.312323570251465
    7. ' <
' → logprob: -12.312323570251465
    8. '<int' → logprob: -12.562323570251465
    9. ' ' → logprob: -12.687323570251465
    10. '<|end|>' → logprob: -12.812323570251465

Token 1849: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00016063073417171836
    2. ' self' → logprob: -8.750160217285156
    3. '
' → logprob: -13.250160217285156
    4. '(self' → logprob: -15.875160217285156
    5. '1' → logprob: -16.000160217285156
    6. '[self' → logprob: -17.000160217285156
    7. '   ' → logprob: -17.375160217285156
    8. ' ' → logprob: -17.625160217285156
    9. '=self' → logprob: -17.875160217285156
    10. '10' → logprob: -18.625160217285156

Token 1850: '.storage' (ID: 42934)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.6588927507400513
    2. 'storage' → logprob: -1.1588927507400513
    3. '.storage' → logprob: -1.7838927507400513
    4. ' self' → logprob: -8.033892631530762
    5. ' storage' → logprob: -8.658892631530762
    6. '_storage' → logprob: -9.658892631530762
    7. '.self' → logprob: -10.533892631530762
    8. 'Storage' → logprob: -10.658892631530762
    9. '.capacity' → logprob: -10.908892631530762
    10. '[self' → logprob: -11.158892631530762

Token 1851: '.capacity' (ID: 124122)
  Prédit: '.capacity'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.capacity' → logprob: -8.41129949549213e-05
    2. '.' → logprob: -10.125083923339844
    3. '.cap' → logprob: -11.000083923339844
    4. 'capacity' → logprob: -11.125083923339844
    5. '.car' → logprob: -11.625083923339844
    6. ' .' → logprob: -12.875083923339844
    7. '   ' → logprob: -15.250083923339844
    8. ' capacity' → logprob: -16.125083923339844
    9. '.c' → logprob: -16.375083923339844
    10. '
' → logprob: -16.500083923339844

Token 1852: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.14866134524345398
    2. ':' → logprob: -2.0236613750457764
    3. '           ' → logprob: -5.648661136627197
    4. ' and' → logprob: -6.523661136627197
    5. '):
' → logprob: -7.648661136627197
    6. '       ' → logprob: -8.398661613464355
    7. ' :
' → logprob: -8.648661613464355
    8. ',' → logprob: -11.023661613464355
    9. ' :' → logprob: -11.273661613464355
    10. ':

' → logprob: -11.523661613464355

Token 1853: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005163363530300558
    2. ':
' → logprob: -8.625515937805176
    3. '
' → logprob: -9.375515937805176
    4. ':' → logprob: -9.750515937805176
    5. ',' → logprob: -9.750515937805176
    6. '):
' → logprob: -9.875515937805176
    7. '            
' → logprob: -10.750515937805176
    8. '               ' → logprob: -10.750515937805176
    9. '       ' → logprob: -11.125515937805176
    10. '):' → logprob: -12.875515937805176

Token 1854: ' res' (ID: 694)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5066816210746765
    2. 'res' (adapté à ' res') → logprob: -1.5066816806793213
    3. 'min' → logprob: -2.3816816806793213
    4. 'temp' → logprob: -3.7566816806793213
    5. 'result' → logprob: -4.631681442260742
    6. 'time' → logprob: -4.631681442260742
    7. 'next' → logprob: -5.006681442260742
    8. '               ' → logprob: -5.131681442260742
    9. 't' → logprob: -5.256681442260742
    10. 'r' → logprob: -5.631681442260742

Token 1855: '_store' (ID: 33101)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2555646300315857
    2. '_a' → logprob: -2.6305646896362305
    3. 'a' → logprob: -2.8805646896362305
    4. '2' → logprob: -3.0055646896362305
    5. '=' → logprob: -3.2555646896362305
    6. '1' → logprob: -5.7555646896362305
    7. '3' → logprob: -6.0055646896362305
    8. '           ' → logprob: -6.7555646896362305
    9. 'A' → logprob: -7.2555646896362305
    10. '=a' → logprob: -7.2555646896362305

Token 1856: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11313118785619736
    2. '=' → logprob: -2.238131284713745
    3. '2' → logprob: -8.988131523132324
    4. '   ' → logprob: -9.488131523132324
    5. '       ' → logprob: -10.363131523132324
    6. '           ' → logprob: -10.613131523132324
    7. 'a' → logprob: -11.113131523132324
    8. 'ult' → logprob: -11.238131523132324
    9. '1' → logprob: -11.488131523132324
    10. '=self' → logprob: -13.238131523132324

Token 1857: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0001093841710826382
    2. ' self' → logprob: -9.125109672546387
    3. '   ' → logprob: -15.625109672546387
    4. 'min' → logprob: -16.62510871887207
    5. '       ' → logprob: -16.75010871887207
    6. '(self' → logprob: -16.87510871887207
    7. '           ' → logprob: -16.87510871887207
    8. ' ' → logprob: -18.25010871887207
    9. 'time' → logprob: -18.25010871887207
    10. '	self' → logprob: -18.50010871887207

Token 1858: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.315095454454422
    2. '_dp' → logprob: -1.3150954246520996
    3. '.dp' → logprob: -6.3150954246521
    4. '   ' → logprob: -11.690095901489258
    5. 'self' → logprob: -11.815095901489258
    6. ' _' → logprob: -12.940095901489258
    7. '.' → logprob: -14.065095901489258
    8. '_DP' → logprob: -14.190095901489258
    9. '       ' → logprob: -14.440095901489258
    10. '.__' → logprob: -14.565095901489258

Token 1859: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -4.127333340875339e-06
    2. '_dp' → logprob: -12.500003814697266
    3. 'DP' → logprob: -15.875003814697266
    4. '.dp' → logprob: -16.750003814697266
    5. ' dp' → logprob: -17.125003814697266
    6. 'd' → logprob: -17.125003814697266
    7. '	dp' → logprob: -17.125003814697266
    8. 'db' → logprob: -17.375003814697266
    9. '(dp' → logprob: -17.875003814697266
    10. '```' → logprob: -18.250003814697266

Token 1860: '(idx' (ID: 42793)
  Prédit: '(idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(idx' → logprob: -0.023255029693245888
    2. 'idx' → logprob: -3.7732551097869873
    3. ' idx' → logprob: -12.273255348205566
    4. '(' → logprob: -12.523255348205566
    5. '(
' → logprob: -14.398255348205566
    6. '[idx' → logprob: -14.523255348205566
    7. '	idx' → logprob: -16.14825439453125
    8. ' (' → logprob: -16.89825439453125
    9. '(index' → logprob: -17.89825439453125
    10. '```' → logprob: -19.02325439453125

Token 1861: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0006283254479058087
    2. ' +' → logprob: -7.375628471374512
    3. '+
' → logprob: -14.375628471374512
    4. '+,' → logprob: -15.000628471374512
    5. '(' → logprob: -15.125628471374512
    6. '＋' → logprob: -15.750628471374512
    7. '1' → logprob: -15.750628471374512
    8. ',' → logprob: -15.875628471374512
    9. '()+' → logprob: -16.250627517700195
    10. '+(' → logprob: -17.000627517700195

Token 1862: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.961759259458631e-06
    2. '+' → logprob: -12.375004768371582
    3. ' ' → logprob: -15.125004768371582
    4. 'next' → logprob: -15.375004768371582
    5. '```' → logprob: -17.2500057220459
    6. '   ' → logprob: -17.6250057220459
    7. '           ' → logprob: -18.6250057220459
    8. 'idx' → logprob: -18.6250057220459
    9. '(' → logprob: -18.7500057220459
    10. '...' → logprob: -19.0000057220459

Token 1863: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006872945814393461
    2. '(idx' → logprob: -8.000687599182129
    3. '           ' → logprob: -9.000687599182129
    4. '(' → logprob: -9.500687599182129
    5. '(c' → logprob: -9.750687599182129
    6. ',c' → logprob: -10.250687599182129
    7. ' ,' → logprob: -10.500687599182129
    8. ',
' → logprob: -11.500687599182129
    9. '(car' → logprob: -12.125687599182129
    10. ',int' → logprob: -13.000687599182129

Token 1864: ' carrots' (ID: 91266)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.00014370749704539776
    2. ' carrots' → logprob: -9.125144004821777
    3. 'cars' → logprob: -10.375144004821777
    4. '   ' → logprob: -14.000144004821777
    5. 'c' → logprob: -14.375144004821777
    6. '       ' → logprob: -14.625144004821777
    7. '```' → logprob: -14.875144004821777
    8. ' ' → logprob: -15.750144004821777
    9. '           ' → logprob: -15.875144004821777
    10. '
' → logprob: -16.00014305114746

Token 1865: '_car' (ID: 62991)
  Prédit: '_car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_car' → logprob: -0.0004317420825827867
    2. 'car' → logprob: -8.375432014465332
    3. '_c' → logprob: -9.000432014465332
    4. 'Car' → logprob: -10.750432014465332
    5. '   ' → logprob: -11.500432014465332
    6. '+' → logprob: -11.500432014465332
    7. '```' → logprob: -11.500432014465332
    8. '-car' → logprob: -11.875432014465332
    9. '       ' → logprob: -12.625432014465332
    10. 'ed' → logprob: -13.000432014465332

Token 1866: 'ried' (ID: 6089)
  Prédit: 'ried'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ried' → logprob: -0.009324283339083195
    2. 'ied' → logprob: -5.134324073791504
    3. 'r' → logprob: -5.884324073791504
    4. '_' → logprob: -7.759324073791504
    5. '
' → logprob: -10.009324073791504
    6. '_r' → logprob: -10.759324073791504
    7. 'ed' → logprob: -10.884324073791504
    8. '_car' → logprob: -11.009324073791504
    9. 't' → logprob: -11.509324073791504
    10. 'ar' → logprob: -11.759324073791504

Token 1867: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6931698322296143
    2. ' +' → logprob: -0.6931698322296143
    3. ',' → logprob: -11.318169593811035
    4. '           ' → logprob: -11.943169593811035
    5. '+,' → logprob: -13.818169593811035
    6. '+
' → logprob: -13.943169593811035
    7. ' ' → logprob: -15.068169593811035
    8. '```' → logprob: -15.068169593811035
    9. ' +
' → logprob: -15.193169593811035
    10. ')' → logprob: -15.693169593811035

Token 1868: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.438573680294212e-06
    2. ' ' → logprob: -12.125005722045898
    3. '   ' → logprob: -18.5000057220459
    4. '```' → logprob: -19.7500057220459
    5. '
' → logprob: -20.5000057220459
    6. '0' → logprob: -21.2500057220459
    7. '+' → logprob: -21.7500057220459
    8. ')' → logprob: -22.0000057220459
    9. '[' → logprob: -22.3750057220459
    10. '           ' → logprob: -22.6250057220459

Token 1869: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. '```' → logprob: -17.5
    4. '
' → logprob: -18.5
    5. '   ' → logprob: -19.125
    6. '0' → logprob: -19.875
    7. '<|end|>' → logprob: -20.125
    8. '۱' → logprob: -21.3125
    9. ')' → logprob: -21.8125
    10. '=' → logprob: -21.875

Token 1870: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.676981345459353e-06
    2. ',next' → logprob: -12.250005722045898
    3. ' ,' → logprob: -14.500005722045898
    4. ',
' → logprob: -15.500005722045898
    5. '(next' → logprob: -16.7500057220459
    6. '           ' → logprob: -16.8750057220459
    7. '[next' → logprob: -17.0000057220459
    8. '```' → logprob: -17.6250057220459
    9. '`,' → logprob: -18.5000057220459
    10. 'next' → logprob: -18.6250057220459

Token 1871: ' last' (ID: 2174)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -1.1160349458805285e-05
    2. ' last' → logprob: -11.500011444091797
    3. 'next' → logprob: -14.375011444091797
    4. '   ' → logprob: -15.375011444091797
    5. 'current' → logprob: -15.625011444091797
    6. '       ' → logprob: -16.875011444091797
    7. '     ' → logprob: -17.625011444091797
    8. '           ' → logprob: -18.125011444091797
    9. '    ' → logprob: -18.500011444091797
    10. '	last' → logprob: -18.750011444091797

Token 1872: '_car' (ID: 62991)
  Prédit: '_car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_car' → logprob: -1.306760805164231e-05
    2. 'Car' → logprob: -12.37501335144043
    3. '_' → logprob: -12.75001335144043
    4. 'car' → logprob: -12.87501335144043
    5. '```' → logprob: -13.62501335144043
    6. ')_' → logprob: -14.00001335144043
    7. '_c' → logprob: -15.12501335144043
    8. ''_' → logprob: -16.12501335144043
    9. '_time' → logprob: -16.37501335144043
    10. ')' → logprob: -16.37501335144043

Token 1873: 'rot' (ID: 8150)
  Prédit: 'rot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rot' → logprob: -0.0052849845960736275
    2. 'ot' → logprob: -5.755284786224365
    3. '_rot' → logprob: -6.255284786224365
    4. 'ott' → logprob: -10.255285263061523
    5. 't' → logprob: -10.880285263061523
    6. 'rott' → logprob: -11.130285263061523
    7. '_car' → logprob: -11.255285263061523
    8. 'got' → logprob: -11.380285263061523
    9. '_time' → logprob: -11.755285263061523
    10. 'tot' → logprob: -11.880285263061523

Token 1874: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -4.0722858102526516e-05
    2. 'time' → logprob: -10.250041007995605
    3. 'Time' → logprob: -12.625041007995605
    4. ')' → logprob: -14.875041007995605
    5. '_t' → logprob: -14.875041007995605
    6. '_' → logprob: -15.375041007995605
    7. '```' → logprob: -16.00004005432129
    8. '_times' → logprob: -16.12504005432129
    9. ')_' → logprob: -16.12504005432129
    10. ',' → logprob: -16.37504005432129

Token 1875: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.2007883671903983e-05
    2. ' ,' → logprob: -10.875021934509277
    3. ',
' → logprob: -13.000021934509277
    4. ',current' → logprob: -15.500021934509277
    5. ',next' → logprob: -16.000022888183594
    6. ')' → logprob: -16.250022888183594
    7. '           ' → logprob: -16.250022888183594
    8. '‌,' → logprob: -17.125022888183594
    9. '	' → logprob: -17.125022888183594
    10. '```' → logprob: -17.125022888183594

Token 1876: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.0006293982733041048
    2. ' next' → logprob: -7.375629425048828
    3. 'current' → logprob: -13.500629425048828
    4. '   ' → logprob: -14.250629425048828
    5. '	next' → logprob: -15.250629425048828
    6. '
' → logprob: -15.625629425048828
    7. '    ' → logprob: -16.375629425048828
    8. '(next' → logprob: -16.375629425048828
    9. '       ' → logprob: -16.625629425048828
    10. '```' → logprob: -17.000629425048828

Token 1877: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.020553454756736755
    2. '_no' → logprob: -3.8955533504486084
    3. 'no' → logprob: -11.645553588867188
    4. ')' → logprob: -14.645553588867188
    5. 'time' → logprob: -14.645553588867188
    6. '+' → logprob: -15.020553588867188
    7. '   ' → logprob: -15.020553588867188
    8. '```' → logprob: -15.145553588867188
    9. 'No' → logprob: -15.270553588867188
    10. ')_' → logprob: -15.770553588867188

Token 1878: '_no' (ID: 13575)
  Prédit: '_no'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_no' → logprob: -0.1138787791132927
    2. ')' → logprob: -2.3638787269592285
    3. '+' → logprob: -4.3638787269592285
    4. ' +' → logprob: -7.8638787269592285
    5. 'No' → logprob: -8.863879203796387
    6. ',' → logprob: -9.488879203796387
    7. ')
' → logprob: -9.738879203796387
    8. 'no' → logprob: -9.988879203796387
    9. ' )' → logprob: -10.113879203796387
    10. ')+' → logprob: -10.863879203796387

Token 1879: 'eat' (ID: 100633)
  Prédit: 'eat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eat' → logprob: -0.0003410647332202643
    2. 'at' → logprob: -8.000341415405273
    3. 'e' → logprob: -12.250341415405273
    4. ' eat' → logprob: -14.875341415405273
    5. 'et' → logprob: -15.375341415405273
    6. 'eit' → logprob: -16.500341415405273
    7. 'Eat' → logprob: -17.125341415405273
    8. 'att' → logprob: -17.500341415405273
    9. 'ait' → logprob: -17.500341415405273
    10. 'aat' → logprob: -18.750341415405273

Token 1880: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5840174555778503
    2. ')
' → logprob: -0.8340174555778503
    3. '           ' → logprob: -4.834017276763916
    4. ')
' → logprob: -9.584017753601074
    5. '               ' → logprob: -11.584017753601074
    6. ' )
' → logprob: -11.959017753601074
    7. ' )' → logprob: -13.209017753601074
    8. ')`
' → logprob: -13.834017753601074
    9. ')

' → logprob: -14.209017753601074
    10. '       ' → logprob: -14.334017753601074

Token 1881: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002543558832257986
    2. '
' → logprob: -6.0025434494018555
    3. ',' → logprob: -10.252543449401855
    4. '       ' → logprob: -11.752543449401855
    5. '               ' → logprob: -12.252543449401855
    6. '		' → logprob: -12.502543449401855
    7. 'min' → logprob: -12.627543449401855
    8. '            
' → logprob: -12.877543449401855
    9. '          ' → logprob: -13.377543449401855
    10. '   ' → logprob: -13.627543449401855

Token 1882: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' (adapté à ' min') → logprob: -0.048349104821681976
    2. '           ' → logprob: -3.173349142074585
    3. ' min' → logprob: -5.423348903656006
    4. 'if' → logprob: -7.048348903656006
    5. ' if' → logprob: -11.048349380493164
    6. '       ' → logprob: -11.548349380493164
    7. '
' → logprob: -12.423349380493164
    8. '```' → logprob: -12.548349380493164
    9. '	min' → logprob: -12.673349380493164
    10. '[min' → logprob: -12.798349380493164

Token 1883: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -1.1472419600977446e-06
    2. '(min' → logprob: -14.000000953674316
    3. 'min' → logprob: -15.625000953674316
    4. '_min' → logprob: -15.750000953674316
    5. '=min' → logprob: -17.250001907348633
    6. 'time' → logprob: -17.625001907348633
    7. '   ' → logprob: -18.000001907348633
    8. '_' → logprob: -18.250001907348633
    9. 'Time' → logprob: -18.875001907348633
    10. '=' → logprob: -18.875001907348633

Token 1884: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.023246755823493004
    2. ' =' → logprob: -3.7732467651367188
    3. '=min' → logprob: -14.148246765136719
    4. '   ' → logprob: -14.773246765136719
    5. '           ' → logprob: -17.39824676513672
    6. 'min' → logprob: -17.52324676513672
    7. '    ' → logprob: -17.64824676513672
    8. '       ' → logprob: -18.02324676513672
    9. '```' → logprob: -18.14824676513672
    10. '=
' → logprob: -18.27324676513672

Token 1885: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.01814994215965271
    2. ' min' → logprob: -4.0181498527526855
    3. '	min' → logprob: -16.893150329589844
    4. '(min' → logprob: -19.643150329589844
    5. '_min' → logprob: -19.643150329589844
    6. 'mi' → logprob: -21.143150329589844
    7. '=min' → logprob: -21.768150329589844
    8. ' ' → logprob: -21.893150329589844
    9. '[min' → logprob: -21.893150329589844
    10. 'max' → logprob: -22.018150329589844

Token 1886: '(min' (ID: 26035)
  Prédit: '(min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(min' → logprob: -7.517272024415433e-05
    2. '(' → logprob: -9.500075340270996
    3. '(
' → logprob: -15.250075340270996
    4. '(m' → logprob: -18.37507438659668
    5. '(max' → logprob: -18.50007438659668
    6. ' (' → logprob: -20.00007438659668
    7. '(

' → logprob: -20.62507438659668
    8. '[min' → logprob: -20.62507438659668
    9. '=min' → logprob: -20.87507438659668
    10. ',min' → logprob: -21.00007438659668

Token 1887: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.16026383638381958
    2. '(min' → logprob: -1.9102637767791748
    3. '(' → logprob: -11.410264015197754
    4. 'Time' → logprob: -11.660264015197754
    5. '(_' → logprob: -12.035264015197754
    6. 'min' → logprob: -12.660264015197754
    7. '(
' → logprob: -13.035264015197754
    8. 'time' → logprob: -13.285264015197754
    9. '(max' → logprob: -13.785264015197754
    10. '=min' → logprob: -14.285264015197754

Token 1888: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002836015075445175
    2. ',min' → logprob: -5.877836227416992
    3. ',
' → logprob: -11.127836227416992
    4. '(min' → logprob: -11.877836227416992
    5. ',res' → logprob: -12.002836227416992
    6. ' ,' → logprob: -13.377836227416992
    7. 'min' → logprob: -13.502836227416992
    8. ',max' → logprob: -15.752836227416992
    9. '[min' → logprob: -16.627836227416992
    10. ',m' → logprob: -16.877836227416992

Token 1889: ' time' (ID: 1058)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.021462567150592804
    2. ' time' → logprob: -3.8964626789093018
    3. 'res' → logprob: -7.771462440490723
    4. '   ' → logprob: -8.021462440490723
    5. 'self' → logprob: -10.646462440490723
    6. 'compute' → logprob: -10.646462440490723
    7. ' res' → logprob: -10.896462440490723
    8. '    ' → logprob: -11.146462440490723
    9. 'dist' → logprob: -11.146462440490723
    10. '	time' → logprob: -11.521462440490723

Token 1890: '_for' (ID: 11903)
  Prédit: '_for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_for' → logprob: -0.005086818244308233
    2. '_store' → logprob: -5.880086898803711
    3. '+' → logprob: -7.005086898803711
    4. 'for' → logprob: -7.255086898803711
    5. '_time' → logprob: -8.255086898803711
    6. '   ' → logprob: -9.005086898803711
    7. '```' → logprob: -10.130086898803711
    8. 'For' → logprob: -10.255086898803711
    9. ')' → logprob: -10.255086898803711
    10. '_to' → logprob: -10.505086898803711

Token 1891: '_segment' (ID: 71041)
  Prédit: '_store'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_store' → logprob: -0.016579361632466316
    2. 'res' → logprob: -4.7665791511535645
    3. '_segment' → logprob: -5.1415791511535645
    4. 'store' → logprob: -6.7665791511535645
    5. 'seg' → logprob: -7.3915791511535645
    6. 'segment' → logprob: -8.266579627990723
    7. 'Store' → logprob: -11.766579627990723
    8. '
' → logprob: -11.891579627990723
    9. '(res' → logprob: -12.141579627990723
    10. '...' → logprob: -12.391579627990723

Token 1892: '_no' (ID: 13575)
  Prédit: '_no'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_no' → logprob: -1.3856492842023727e-06
    2. ')' → logprob: -15.000000953674316
    3. 'no' → logprob: -15.375000953674316
    4. 'No' → logprob: -16.000001907348633
    5. '_for' → logprob: -16.000001907348633
    6. '_NO' → logprob: -16.750001907348633
    7. '_n' → logprob: -17.000001907348633
    8. '_not' → logprob: -17.000001907348633
    9. '_time' → logprob: -17.125001907348633
    10. '+' → logprob: -17.125001907348633

Token 1893: 'eat' (ID: 100633)
  Prédit: 'eat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eat' → logprob: -0.00025001514586620033
    2. 'at' → logprob: -8.375249862670898
    3. 'e' → logprob: -11.375249862670898
    4. ' eat' → logprob: -12.500249862670898
    5. '_e' → logprob: -12.875249862670898
    6. 'o' → logprob: -13.750249862670898
    7. '_at' → logprob: -16.7502498626709
    8. 'eit' → logprob: -17.1252498626709
    9. 'aat' → logprob: -17.1252498626709
    10. 'a' → logprob: -17.1252498626709

Token 1894: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.029753267765045166
    2. '+' → logprob: -3.5297532081604004
    3. ' ' → logprob: -13.529753684997559
    4. ' ' → logprob: -13.904753684997559
    5. '   ' → logprob: -16.029752731323242
    6. '    ' → logprob: -16.154752731323242
    7. ' +
' → logprob: -16.654752731323242
    8. ',' → logprob: -16.904752731323242
    9. ' plus' → logprob: -16.904752731323242
    10. '```' → logprob: -17.529752731323242

Token 1895: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -1.306760805164231e-05
    2. ' res' → logprob: -11.25001335144043
    3. '(res' → logprob: -19.37501335144043
    4. '_res' → logprob: -21.50001335144043
    5. '	res' → logprob: -22.00001335144043
    6. '$res' → logprob: -22.50001335144043
    7. 'resi' → logprob: -23.37501335144043
    8. 'r' → logprob: -23.62501335144043
    9. 'rest' → logprob: -24.12501335144043
    10. 'ress' → logprob: -24.25001335144043

Token 1896: '_store' (ID: 33101)
  Prédit: '_store'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_store' → logprob: -1.3856492842023727e-06
    2. 'store' → logprob: -13.625000953674316
    3. '_STORE' → logprob: -17.250001907348633
    4. '_st' → logprob: -17.625001907348633
    5. '_' → logprob: -18.125001907348633
    6. '\' → logprob: -18.500001907348633
    7. '_start' → logprob: -18.500001907348633
    8. 'Store' → logprob: -18.875001907348633
    9. '_
' → logprob: -19.000001907348633
    10. '_for' → logprob: -19.375001907348633

Token 1897: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01988544873893261
    2. '       ' → logprob: -4.394885540008545
    3. ')

' → logprob: -5.269885540008545
    4. ')
' → logprob: -6.144885540008545
    5. ' )' → logprob: -10.269885063171387
    6. '```' → logprob: -12.394885063171387
    7. ')

' → logprob: -12.519885063171387
    8. '   ' → logprob: -12.894885063171387
    9. '
' → logprob: -12.894885063171387
    10. '        
' → logprob: -13.519885063171387

Token 1898: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.44337260723114014
    2. '       ' → logprob: -1.0683726072311401
    3. '        
' → logprob: -4.31837272644043
    4. ')' → logprob: -7.81837272644043
    5. '```' → logprob: -8.69337272644043
    6. ')
' → logprob: -8.81837272644043
    7. '  
' → logprob: -8.94337272644043
    8. '#' → logprob: -9.06837272644043
    9. '    
' → logprob: -9.94337272644043
    10. '
' → logprob: -9.94337272644043

Token 1899: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7036681771278381
    2. '       ' → logprob: -0.7036681771278381
    3. '#' (adapté à ' #') → logprob: -4.703668117523193
    4. '        
' → logprob: -6.828668117523193
    5. 'res' → logprob: -8.953668594360352
    6. '   ' → logprob: -9.578668594360352
    7. '```' → logprob: -9.828668594360352
    8. '
' → logprob: -10.578668594360352
    9. '           ' → logprob: -11.203668594360352
    10. '  
' → logprob: -11.453668594360352

Token 1900: ' b' (ID: 287)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.454863041639328
    2. '#' → logprob: -1.2048630714416504
    3. '       ' → logprob: -3.0798630714416504
    4. ' res' → logprob: -4.82986307144165
    5. '
' → logprob: -5.32986307144165
    6. '           ' → logprob: -5.70486307144165
    7. '   ' → logprob: -6.20486307144165
    8. ' #' → logprob: -7.07986307144165
    9. 'else' → logprob: -7.95486307144165
    10. '        
' → logprob: -9.454862594604492

Token 1901: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.860340752406046e-05
    2. ' )' → logprob: -10.2500581741333
    3. '#' → logprob: -11.1250581741333
    4. '
' → logprob: -12.3750581741333
    5. '   ' → logprob: -14.0000581741333
    6. ')#' → logprob: -14.0000581741333
    7. ')
' → logprob: -14.1250581741333
    8. '       ' → logprob: -14.3750581741333
    9. '=' → logprob: -15.1250581741333
    10. '           ' → logprob: -15.7500581741333

Token 1902: ' skip' (ID: 16677)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.6001245975494385
    2. '#' → logprob: -1.3501245975494385
    3. ' res' → logprob: -1.7251245975494385
    4. ' #' → logprob: -5.350124359130859
    5. '_skip' → logprob: -6.100124359130859
    6. 'time' → logprob: -6.975124359130859
    7. '
' → logprob: -6.975124359130859
    8. 'pass' → logprob: -6.975124359130859
    9. 'skip' → logprob: -6.975124359130859
    10. '_res' → logprob: -7.225124359130859

Token 1903: ' picking' (ID: 30859)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.15308478474617004
    2. ' res' → logprob: -2.5280847549438477
    3. '_res' → logprob: -4.153084754943848
    4. 'time' → logprob: -4.528084754943848
    5. '_car' → logprob: -5.153084754943848
    6. '(res' → logprob: -5.278084754943848
    7. ' time' → logprob: -5.403084754943848
    8. '
' → logprob: -5.528084754943848
    9. 'car' → logprob: -6.153084754943848
    10. ' (' → logprob: -6.403084754943848

Token 1904: '
' (ID: 198)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.2610083818435669
    2. 'car' → logprob: -2.1360082626342773
    3. '_car' → logprob: -2.7610082626342773
    4. '_res' → logprob: -3.8860082626342773
    5. ' res' → logprob: -4.511008262634277
    6. '=' → logprob: -5.511008262634277
    7. ' carrot' → logprob: -5.761008262634277
    8. ' =' → logprob: -5.886008262634277
    9. '(res' → logprob: -6.261008262634277
    10. ' ' → logprob: -6.886008262634277

Token 1905: '       ' (ID: 309)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.3447652757167816
    2. '       ' → logprob: -1.969765305519104
    3. ' res' → logprob: -2.4697651863098145
    4. '           ' → logprob: -2.8447651863098145
    5. '   ' → logprob: -6.2197651863098145
    6. 'if' → logprob: -6.7197651863098145
    7. ' if' → logprob: -6.8447651863098145
    8. '
' → logprob: -6.9697651863098145
    9. '_res' → logprob: -7.2197651863098145
    10. '(res' → logprob: -7.3447651863098145

Token 1906: ' res' (ID: 694)
  Prédit: ' res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.38461926579475403
    2. 'res' (adapté à ' res') → logprob: -1.2596192359924316
    3. '       ' → logprob: -3.6346192359924316
    4. ' next' → logprob: -5.634619235992432
    5. '
' → logprob: -6.384619235992432
    6. 'next' → logprob: -6.884619235992432
    7. '           ' → logprob: -7.634619235992432
    8. '_res' → logprob: -8.00961971282959
    9. ' self' → logprob: -8.25961971282959
    10. 'self' → logprob: -8.38461971282959

Token 1907: '_skip' (ID: 108208)
  Prédit: '_skip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_skip' → logprob: -0.002141812816262245
    2. ' =' → logprob: -6.752141952514648
    3. '_no' → logprob: -7.627141952514648
    4. '=' → logprob: -8.127141952514648
    5. '2' → logprob: -9.127141952514648
    6. 'skip' → logprob: -10.502141952514648
    7. '_ignore' → logprob: -11.252141952514648
    8. 'b' → logprob: -11.377141952514648
    9. '_b' → logprob: -12.002141952514648
    10. '=_' → logprob: -12.502141952514648

Token 1908: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31326258182525635
    2. '=' → logprob: -1.3132625818252563
    3. '=self' → logprob: -14.188262939453125
    4. '   ' → logprob: -16.688262939453125
    5. ' ' → logprob: -16.813262939453125
    6. ' ' → logprob: -17.563262939453125
    7. ')' → logprob: -18.063262939453125
    8. '=res' → logprob: -18.063262939453125
    9. '    ' → logprob: -18.563262939453125
    10. '  ' → logprob: -18.563262939453125

Token 1909: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0031781906727701426
    2. ' self' → logprob: -5.753178119659424
    3. '       ' → logprob: -15.378178596496582
    4. '(self' → logprob: -16.378177642822266
    5. '   ' → logprob: -16.503177642822266
    6. ' ' → logprob: -17.378177642822266
    7. '	self' → logprob: -17.503177642822266
    8. '     ' → logprob: -17.628177642822266
    9. '           ' → logprob: -17.753177642822266
    10. '  ' → logprob: -18.378177642822266

Token 1910: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -8.995397365652025e-05
    2. '_dp' → logprob: -9.375089645385742
    3. '.dp' → logprob: -12.750089645385742
    4. '.' → logprob: -13.375089645385742
    5. '.__' → logprob: -15.625089645385742
    6. '   ' → logprob: -15.625089645385742
    7. '_d' → logprob: -16.875089645385742
    8. '._
' → logprob: -17.000089645385742
    9. '       ' → logprob: -17.250089645385742
    10. '.\' → logprob: -17.375089645385742

Token 1911: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -4.656383680412546e-05
    2. '_dp' → logprob: -10.000046730041504
    3. '.dp' → logprob: -15.000046730041504
    4. '	dp' → logprob: -15.625046730041504
    5. 'DP' → logprob: -15.750046730041504
    6. '(dp' → logprob: -16.000045776367188
    7. ' dp' → logprob: -16.125045776367188
    8. '
' → logprob: -16.625045776367188
    9. 'd' → logprob: -16.625045776367188
    10. '```' → logprob: -17.500045776367188

Token 1912: '(idx' (ID: 42793)
  Prédit: '(idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(idx' → logprob: -5.512236498361744e-07
    2. ' (' → logprob: -15.625000953674316
    3. '(' → logprob: -16.0
    4. '(
' → logprob: -16.125
    5. '(index' → logprob: -17.75
    6. '(id' → logprob: -17.875
    7. '[idx' → logprob: -17.875
    8. 'idx' → logprob: -18.5
    9. ' idx' → logprob: -20.125
    10. '(len' → logprob: -21.25

Token 1913: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -5.9153885558771435e-06
    2. '(idx' → logprob: -12.375005722045898
    3. ' +' → logprob: -13.375005722045898
    4. 'idx' → logprob: -17.2500057220459
    5. '[idx' → logprob: -17.3750057220459
    6. '(' → logprob: -17.6250057220459
    7. '()+' → logprob: -18.0000057220459
    8. '+
' → logprob: -18.6250057220459
    9. '```' → logprob: -19.2500057220459
    10. '1' → logprob: -19.2500057220459

Token 1914: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00014180023572407663
    2. '+' → logprob: -9.750142097473145
    3. 'next' → logprob: -10.000142097473145
    4. 'idx' → logprob: -10.250142097473145
    5. '(idx' → logprob: -13.875142097473145
    6. '_next' → logprob: -14.750142097473145
    7. ' ' → logprob: -15.125142097473145
    8. 'Next' → logprob: -15.250142097473145
    9. '```' → logprob: -16.000141143798828
    10. '(next' → logprob: -16.250141143798828

Token 1915: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0029312260448932648
    2. '(' → logprob: -5.877931118011475
    3. ' ,' → logprob: -10.002931594848633
    4. '           ' → logprob: -11.002931594848633
    5. ' (' → logprob: -11.377931594848633
    6. ')' → logprob: -11.627931594848633
    7. ',c' → logprob: -11.627931594848633
    8. '(idx' → logprob: -12.127931594848633
    9. '       ' → logprob: -12.377931594848633
    10. '(c' → logprob: -12.377931594848633

Token 1916: ' carrots' (ID: 91266)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -1.4021237802808173e-05
    2. ' carrots' → logprob: -11.250014305114746
    3. 'cars' → logprob: -15.500014305114746
    4. 'c' → logprob: -15.750014305114746
    5. 'caret' → logprob: -15.875014305114746
    6. '0' → logprob: -16.00001335144043
    7. '```' → logprob: -16.25001335144043
    8. 'care' → logprob: -16.50001335144043
    9. '   ' → logprob: -16.50001335144043
    10. 'cur' → logprob: -16.87501335144043

Token 1917: '_car' (ID: 62991)
  Prédit: '_no'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_no' → logprob: -0.42959821224212646
    2. '_for' → logprob: -1.4295982122421265
    3. '_car' → logprob: -2.929598331451416
    4. '+' → logprob: -3.804598331451416
    5. 'car' → logprob: -3.929598331451416
    6. 'for' → logprob: -5.304598331451416
    7. 'no' → logprob: -6.054598331451416
    8. ',' → logprob: -6.429598331451416
    9. '   ' → logprob: -6.804598331451416
    10. '       ' → logprob: -7.179598331451416

Token 1918: 'ried' (ID: 6089)
  Prédit: 'ried'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ried' → logprob: -0.06154821068048477
    2. 'ar' → logprob: -2.9365482330322266
    3. '_car' → logprob: -5.811548233032227
    4. 'r' → logprob: -5.811548233032227
    5. 'car' → logprob: -8.686548233032227
    6. 'ied' → logprob: -9.186548233032227
    7. '_' → logprob: -9.436548233032227
    8. '_time' → logprob: -9.811548233032227
    9. '
' → logprob: -10.436548233032227
    10. '...' → logprob: -10.686548233032227

Token 1919: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010354319238103926
    2. ' ,' → logprob: -9.250103950500488
    3. '       ' → logprob: -13.250103950500488
    4. '           ' → logprob: -13.375103950500488
    5. ' ' → logprob: -14.500103950500488
    6. ',
' → logprob: -14.750103950500488
    7. '   ' → logprob: -14.875103950500488
    8. '0' → logprob: -14.875103950500488
    9. '
' → logprob: -14.875103950500488
    10. ',None' → logprob: -15.250103950500488

Token 1920: ' last' (ID: 2174)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -3.5597102396423e-05
    2. ' last' → logprob: -10.250035285949707
    3. '   ' → logprob: -16.500036239624023
    4. '       ' → logprob: -17.625036239624023
    5. '           ' → logprob: -18.375036239624023
    6. '_last' → logprob: -18.875036239624023
    7. '	last' → logprob: -19.250036239624023
    8. 'next' → logprob: -19.375036239624023
    9. '     ' → logprob: -19.375036239624023
    10. '(last' → logprob: -19.500036239624023

Token 1921: '_car' (ID: 62991)
  Prédit: '_car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_car' → logprob: -7.584239938296378e-06
    2. '_' → logprob: -12.250007629394531
    3. 'Car' → logprob: -13.500007629394531
    4. '_time' → logprob: -14.125007629394531
    5. '```' → logprob: -15.625007629394531
    6. ')_' → logprob: -16.12500762939453
    7. 'car' → logprob: -16.25000762939453
    8. '_c' → logprob: -16.75000762939453
    9. ''_' → logprob: -17.00000762939453
    10. ' _' → logprob: -17.25000762939453

Token 1922: 'rot' (ID: 8150)
  Prédit: 'rot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rot' → logprob: -0.578646719455719
    2. 'ot' → logprob: -0.828646719455719
    3. '_rot' → logprob: -6.453646659851074
    4. 'ott' → logprob: -7.578646659851074
    5. '_time' → logprob: -8.578646659851074
    6. '_car' → logprob: -8.953646659851074
    7. '_ot' → logprob: -9.453646659851074
    8. '_of' → logprob: -9.953646659851074
    9. 'opt' → logprob: -10.453646659851074
    10. 'car' → logprob: -10.453646659851074

Token 1923: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -1.5094070477061905e-05
    2. 'time' → logprob: -11.125015258789062
    3. 'ime' → logprob: -16.250015258789062
    4. '   ' → logprob: -17.125015258789062
    5. '_t' → logprob: -17.125015258789062
    6. 'Time' → logprob: -17.375015258789062
    7. '```' → logprob: -18.000015258789062
    8. 't' → logprob: -18.625015258789062
    9. '_TIME' → logprob: -19.875015258789062
    10. '\' → logprob: -19.875015258789062

Token 1924: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.5048530030981055e-06
    2. ',next' → logprob: -14.000001907348633
    3. ' ,' → logprob: -14.875001907348633
    4. ',
' → logprob: -15.500001907348633
    5. '`,' → logprob: -17.500001907348633
    6. '‌,' → logprob: -17.875001907348633
    7. ',n' → logprob: -18.375001907348633
    8. ',res' → logprob: -19.125001907348633
    9. '           ' → logprob: -19.375001907348633
    10. ')' → logprob: -19.625001907348633

Token 1925: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.0009125363430939615
    2. ' next' → logprob: -7.000912666320801
    3. 'current' → logprob: -13.8759126663208
    4. '	next' → logprob: -16.875911712646484
    5. '[next' → logprob: -17.250911712646484
    6. '(next' → logprob: -17.875911712646484
    7. '_next' → logprob: -19.000911712646484
    8. 'Next' → logprob: -19.625911712646484
    9. '   ' → logprob: -20.500911712646484
    10. '       ' → logprob: -20.750911712646484

Token 1926: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -7.465036105713807e-06
    2. '_no' → logprob: -12.125007629394531
    3. 'time' → logprob: -13.500007629394531
    4. '```' → logprob: -16.50000762939453
    5. '_for' → logprob: -16.75000762939453
    6. '\' → logprob: -17.00000762939453
    7. ')_' → logprob: -17.00000762939453
    8. 'no' → logprob: -17.00000762939453
    9. 'for' → logprob: -17.37500762939453
    10. ''_' → logprob: -17.50000762939453

Token 1927: '_no' (ID: 13575)
  Prédit: '_no'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_no' → logprob: -3.9650025428272784e-05
    2. '+' → logprob: -10.625040054321289
    3. ')' → logprob: -12.000040054321289
    4. '```' → logprob: -12.875040054321289
    5. 'no' → logprob: -13.000040054321289
    6. '
' → logprob: -14.000040054321289
    7. '   ' → logprob: -14.250040054321289
    8. '_for' → logprob: -14.750040054321289
    9. ')+' → logprob: -15.250040054321289
    10. 'No' → logprob: -15.250040054321289

Token 1928: 'eat' (ID: 100633)
  Prédit: 'eat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eat' → logprob: -0.002476724097505212
    2. 'at' → logprob: -6.002476692199707
    3. 'e' → logprob: -14.252476692199707
    4. '_e' → logprob: -15.627476692199707
    5. ' eat' → logprob: -16.252477645874023
    6. 'att' → logprob: -16.377477645874023
    7. 'aat' → logprob: -17.002477645874023
    8. '_at' → logprob: -17.252477645874023
    9. 'Eat' → logprob: -18.002477645874023
    10. 'o' → logprob: -18.127477645874023

Token 1929: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.673547563375905e-05
    2. ')
' → logprob: -9.500086784362793
    3. '       ' → logprob: -11.500086784362793
    4. '+' → logprob: -14.375086784362793
    5. ')`' → logprob: -15.125086784362793
    6. '   ' → logprob: -15.250086784362793
    7. ')
' → logprob: -15.500086784362793
    8. '))' → logprob: -16.000085830688477
    9. ' )' → logprob: -17.000085830688477
    10. ')`
' → logprob: -17.125085830688477

Token 1930: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1710468828678131
    2. '           ' → logprob: -2.5460469722747803
    3. ')' → logprob: -2.6710469722747803
    4. ')
' → logprob: -5.421046733856201
    5. ' +' → logprob: -6.671046733856201
    6. '+' → logprob: -7.171046733856201
    7. '               ' → logprob: -7.546046733856201
    8. '[' → logprob: -7.671046733856201
    9. '),' → logprob: -7.921046733856201
    10. '   ' → logprob: -8.54604721069336

Token 1931: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' (adapté à ' min') → logprob: -0.03402289003133774
    2. ' min' → logprob: -3.534022808074951
    3. '       ' → logprob: -5.534022808074951
    4. 'return' → logprob: -8.90902328491211
    5. '           ' → logprob: -9.15902328491211
    6. '
' → logprob: -10.40902328491211
    7. '   ' → logprob: -11.53402328491211
    8. '_min' → logprob: -11.90902328491211
    9. '(min' → logprob: -12.15902328491211
    10. '```' → logprob: -12.15902328491211

Token 1932: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -4.320199877838604e-07
    2. 'time' → logprob: -14.875
    3. 'min' → logprob: -17.125
    4. 'res' → logprob: -17.25
    5. '   ' → logprob: -17.625
    6. 'Time' → logprob: -18.25
    7. '_text' → logprob: -18.75
    8. 'ime' → logprob: -19.0
    9. '```' → logprob: -19.0
    10. 'return' → logprob: -19.125

Token 1933: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1602320373058319
    2. ' =' → logprob: -1.9102320671081543
    3. ')' → logprob: -12.535231590270996
    4. '=min' → logprob: -12.910231590270996
    5. ',' → logprob: -14.285231590270996
    6. '    ' → logprob: -15.160231590270996
    7. '   ' → logprob: -15.285231590270996
    8. ')=' → logprob: -15.910231590270996
    9. '.=' → logprob: -16.285232543945312
    10. 'min' → logprob: -16.285232543945312

Token 1934: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.4740772247314453
    2. ' min' → logprob: -0.9740772247314453
    3. '	min' → logprob: -16.224077224731445
    4. '_min' → logprob: -17.349077224731445
    5. '(min' → logprob: -17.349077224731445
    6. 'm' → logprob: -19.224077224731445
    7. 'max' → logprob: -19.224077224731445
    8. '.min' → logprob: -19.474077224731445
    9. '=min' → logprob: -19.474077224731445
    10. 'float' → logprob: -19.974077224731445

Token 1935: '(min' (ID: 26035)
  Prédit: '(min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(min' → logprob: -8.578184497309849e-05
    2. '(' → logprob: -9.375085830688477
    3. '(max' → logprob: -14.625085830688477
    4. '(
' → logprob: -15.000085830688477
    5. '(m' → logprob: -17.125085830688477
    6. '_(' → logprob: -17.875085830688477
    7. ' (' → logprob: -17.875085830688477
    8. '_min' → logprob: -18.000085830688477
    9. 'min' → logprob: -18.625085830688477
    10. '_' → logprob: -18.875085830688477

Token 1936: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.0009782671695575118
    2. '(min' → logprob: -7.000978469848633
    3. 'min' → logprob: -9.875978469848633
    4. '(_' → logprob: -12.625978469848633
    5. '_min' → logprob: -12.750978469848633
    6. '(' → logprob: -13.375978469848633
    7. '```' → logprob: -13.625978469848633
    8. 'time' → logprob: -13.750978469848633
    9. '   ' → logprob: -14.000978469848633
    10. '+' → logprob: -14.250978469848633

Token 1937: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004762733820825815
    2. ',min' → logprob: -5.379762649536133
    3. '(min' → logprob: -9.129762649536133
    4. '+' → logprob: -11.504762649536133
    5. ',
' → logprob: -11.879762649536133
    6. 'min' → logprob: -12.004762649536133
    7. ' ,' → logprob: -13.004762649536133
    8. '(' → logprob: -13.004762649536133
    9. ',time' → logprob: -13.004762649536133
    10. ')' → logprob: -13.504762649536133

Token 1938: ' time' (ID: 1058)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.5318021774291992
    2. ' time' → logprob: -0.9068021774291992
    3. 'min' → logprob: -5.406802177429199
    4. ' min' → logprob: -5.531802177429199
    5. ' res' → logprob: -9.5318021774292
    6. 'res' → logprob: -10.0318021774292
    7. '   ' → logprob: -10.5318021774292
    8. '    ' → logprob: -11.1568021774292
    9. 'self' → logprob: -11.4068021774292
    10. ' self' → logprob: -12.7818021774292

Token 1939: '_for' (ID: 11903)
  Prédit: '_for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_for' → logprob: -0.03232667222619057
    2. '_since' → logprob: -3.5323266983032227
    3. '+' → logprob: -7.032326698303223
    4. ')' → logprob: -7.282326698303223
    5. ')_' → logprob: -7.657326698303223
    6. '_' → logprob: -9.157326698303223
    7. 'for' → logprob: -9.157326698303223
    8. '```' → logprob: -9.782326698303223
    9. '_after' → logprob: -10.407326698303223
    10. ')+' → logprob: -10.407326698303223

Token 1940: '_segment' (ID: 71041)
  Prédit: '_segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_segment' → logprob: -0.1002826914191246
    2. 'segment' → logprob: -2.350282669067383
    3. 'for' → logprob: -10.725282669067383
    4. 'seg' → logprob: -10.975282669067383
    5. 'time' → logprob: -11.350282669067383
    6. '_for' → logprob: -11.350282669067383
    7. 'no' → logprob: -13.100282669067383
    8. 'Segment' → logprob: -13.600282669067383
    9. '_no' → logprob: -13.725282669067383
    10. 'egment' → logprob: -13.725282669067383

Token 1941: '_no' (ID: 13575)
  Prédit: '_no'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_no' → logprob: -0.00018923594325315207
    2. 'no' → logprob: -8.750188827514648
    3. '_skip' → logprob: -11.125188827514648
    4. 'No' → logprob: -12.375188827514648
    5. '_time' → logprob: -12.500188827514648
    6. '_to' → logprob: -13.125188827514648
    7. ')_' → logprob: -14.000188827514648
    8. 'o' → logprob: -14.000188827514648
    9. ')' → logprob: -14.125188827514648
    10. '_for' → logprob: -14.875188827514648

Token 1942: 'eat' (ID: 100633)
  Prédit: 'eat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eat' → logprob: -5.860340752406046e-05
    2. 'at' → logprob: -9.7500581741333
    3. ' eat' → logprob: -15.6250581741333
    4. 'e' → logprob: -16.750059127807617
    5. 'ot' → logprob: -17.750059127807617
    6. 'Eat' → logprob: -17.875059127807617
    7. 'ait' → logprob: -18.250059127807617
    8. 'ext' → logprob: -18.625059127807617
    9. 'eit' → logprob: -18.875059127807617
    10. 't' → logprob: -19.875059127807617

Token 1943: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.08897294104099274
    2. '+' → logprob: -2.463973045349121
    3. ',' → logprob: -10.963973045349121
    4. ')' → logprob: -11.588973045349121
    5. ')+' → logprob: -12.963973045349121
    6. ' ' → logprob: -13.463973045349121
    7. ' +
' → logprob: -13.838973045349121
    8. '+
' → logprob: -13.838973045349121
    9. ' ' → logprob: -14.963973045349121
    10. '),' → logprob: -15.338973045349121

Token 1944: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.00033546582562848926
    2. ' res' → logprob: -8.000335693359375
    3. '_res' → logprob: -19.250335693359375
    4. '(res' → logprob: -19.500335693359375
    5. '$res' → logprob: -19.625335693359375
    6. '	res' → logprob: -21.250335693359375
    7. '   ' → logprob: -22.125335693359375
    8. 'rest' → logprob: -22.250335693359375
    9. 'r' → logprob: -22.625335693359375
    10. 'resi' → logprob: -23.125335693359375

Token 1945: '_skip' (ID: 108208)
  Prédit: '_skip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_skip' → logprob: -2.15310683415737e-05
    2. '_store' → logprob: -10.875021934509277
    3. 'kip' → logprob: -14.125021934509277
    4. 'skip' → logprob: -14.125021934509277
    5. 'Skip' → logprob: -15.000021934509277
    6. '_SKIP' → logprob: -15.250021934509277
    7. '_keep' → logprob: -15.875021934509277
    8. '2' → logprob: -16.50002098083496
    9. '_sk' → logprob: -16.62502098083496
    10. '1' → logprob: -16.87502098083496

Token 1946: ')

' (ID: 1029)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12596869468688965
    2. ')' → logprob: -2.5009686946868896
    3. ')
' → logprob: -3.5009686946868896
    4. '
' → logprob: -5.500968933105469
    5. '        
' → logprob: -6.875968933105469
    6. '   ' → logprob: -8.625968933105469
    7. '<|end|>' → logprob: -8.625968933105469
    8. ',' → logprob: -8.750968933105469
    9. '```' → logprob: -9.250968933105469
    10. 'return' → logprob: -9.250968933105469

Token 1947: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0001830410328693688
    2. '        
' → logprob: -9.87518310546875
    3. ')' → logprob: -10.00018310546875
    4. '```' → logprob: -10.50018310546875
    5. 'self' → logprob: -10.62518310546875
    6. '   ' → logprob: -11.62518310546875
    7. 'return' → logprob: -11.62518310546875
    8. '<|end|>' → logprob: -12.00018310546875
    9. ')
' → logprob: -13.37518310546875
    10. '
' → logprob: -13.50018310546875

Token 1948: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03816267475485802
    2. 'self' (adapté à ' self') → logprob: -3.2881627082824707
    3. ' self' → logprob: -9.788162231445312
    4. '```' → logprob: -9.788162231445312
    5. '        
' → logprob: -12.413162231445312
    6. '
' → logprob: -13.538162231445312
    7. '   ' → logprob: -13.788162231445312
    8. 'return' → logprob: -14.163162231445312
    9. ')' → logprob: -14.663162231445312
    10. '``' → logprob: -14.788162231445312

Token 1949: '.memo' (ID: 161018)
  Prédit: '.memo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.memo' → logprob: -0.026010438799858093
    2. '.' → logprob: -3.776010513305664
    3. '.memory' → logprob: -6.401010513305664
    4. '.mem' → logprob: -7.151010513305664
    5. ' .' → logprob: -9.776010513305664
    6. '​.' → logprob: -9.776010513305664
    7. '.
' → logprob: -9.776010513305664
    8. '.m' → logprob: -9.901010513305664
    9. '.micro' → logprob: -10.776010513305664
    10. '.​' → logprob: -11.151010513305664

Token 1950: '[key' (ID: 16401)
  Prédit: '[key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[key' → logprob: -2.1008713702030946e-06
    2. '[' → logprob: -13.125001907348633
    3. '\[' → logprob: -17.500001907348633
    4. '[
' → logprob: -18.000001907348633
    5. '[token' → logprob: -18.625001907348633
    6. 'key' → logprob: -18.750001907348633
    7. '```' → logprob: -19.000001907348633
    8. '(key' → logprob: -20.250001907348633
    9. ',key' → logprob: -20.500001907348633
    10. '[target' → logprob: -20.750001907348633

Token 1951: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.07757498323917389
    2. '=' → logprob: -3.2025749683380127
    3. ']=' → logprob: -3.5775749683380127
    4. '[' → logprob: -5.202575206756592
    5. '[key' → logprob: -7.702575206756592
    6. ' =' → logprob: -10.327574729919434
    7. '[
' → logprob: -10.577574729919434
    8. '   ' → logprob: -12.577574729919434
    9. ')' → logprob: -12.702574729919434
    10. ' ]' → logprob: -12.952574729919434

Token 1952: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.004078758880496025
    2. ' =' → logprob: -5.5040788650512695
    3. '=
' → logprob: -14.87907886505127
    4. ' =
' → logprob: -18.754077911376953
    5. '=

' → logprob: -18.879077911376953
    6. '＝' → logprob: -20.004077911376953
    7. '   ' → logprob: -20.379077911376953
    8. '.=' → logprob: -20.879077911376953
    9. '=}' → logprob: -21.254077911376953
    10. '[' → logprob: -21.504077911376953

Token 1953: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.004078401252627373
    2. ' min' → logprob: -5.504078388214111
    3. '(min' → logprob: -18.629077911376953
    4. '	min' → logprob: -18.879077911376953
    5. '   ' → logprob: -19.004077911376953
    6. 'float' → logprob: -19.254077911376953
    7. '_min' → logprob: -19.879077911376953
    8. '[min' → logprob: -19.879077911376953
    9. 'max' → logprob: -20.504077911376953
    10. '=min' → logprob: -21.629077911376953

Token 1954: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -1.1472419600977446e-06
    2. '(min' → logprob: -14.375000953674316
    3. 'Time' → logprob: -16.125001907348633
    4. 'min' → logprob: -16.375001907348633
    5. '_min' → logprob: -16.375001907348633
    6. 'ime' → logprob: -16.500001907348633
    7. 'time' → logprob: -17.250001907348633
    8. '_' → logprob: -17.375001907348633
    9. '(_' → logprob: -17.875001907348633
    10. '_type' → logprob: -18.375001907348633

Token 1955: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.024945933371782303
    2. '
' → logprob: -4.1499457359313965
    3. '   ' → logprob: -5.5249457359313965
    4. 'return' → logprob: -5.7749457359313965
    5. '        
' → logprob: -7.3999457359313965
    6. '	' → logprob: -7.8999457359313965
    7. '	return' → logprob: -8.899946212768555
    8. ' return' → logprob: -9.149946212768555
    9. '<|end|>' → logprob: -9.149946212768555
    10. '    
' → logprob: -9.399946212768555

Token 1956: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008732403628528118
    2. '   ' → logprob: -5.133732318878174
    3. 'return' → logprob: -6.633732318878174
    4. '	return' → logprob: -8.008732795715332
    5. '
' → logprob: -8.258732795715332
    6. ')' → logprob: -8.633732795715332
    7. '<|end|>' → logprob: -8.633732795715332
    8. ' return' → logprob: -8.758732795715332
    9. '```' → logprob: -9.008732795715332
    10. '        
' → logprob: -9.258732795715332

Token 1957: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06247466430068016
    2. 'return' (adapté à ' return') → logprob: -2.8124747276306152
    3. ' return' → logprob: -7.812474727630615
    4. '	return' → logprob: -9.937474250793457
    5. '	' → logprob: -10.562474250793457
    6. '   ' → logprob: -11.562474250793457
    7. '
' → logprob: -11.687474250793457
    8. ':return' → logprob: -12.812474250793457
    9. '```' → logprob: -12.937474250793457
    10. '        
' → logprob: -12.937474250793457

Token 1958: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.011047935113310814
    2. ' min' → logprob: -4.511047840118408
    3. '	min' → logprob: -16.38604736328125
    4. '_min' → logprob: -17.26104736328125
    5. '
' → logprob: -18.13604736328125
    6. '       ' → logprob: -18.63604736328125
    7. '   ' → logprob: -18.76104736328125
    8. 'max' → logprob: -18.88604736328125
    9. '(min' → logprob: -19.63604736328125
    10. 'm' → logprob: -20.01104736328125

Token 1959: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -4.320199877838604e-07
    2. 'Time' → logprob: -16.25
    3. '(min' → logprob: -16.5
    4. 'time' → logprob: -16.875
    5. 'ime' → logprob: -17.5
    6. '_token' → logprob: -17.625
    7. '_min' → logprob: -17.625
    8. '(time' → logprob: -17.875
    9. '_times' → logprob: -18.125
    10. '_TIME' → logprob: -18.125

Token 1960: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1961: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1962: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.5912691354751587
    2. '<|end|>' → logprob: -0.9662691354751587
    3. '```' → logprob: -3.466269016265869
    4. ')' → logprob: -3.841269016265869
    5. '}' → logprob: -5.966269016265869
    6. '<|end|>' → logprob: -5.966269016265869
    7. '   ' → logprob: -6.091269016265869
    8. ' def' → logprob: -6.216269016265869
    9. 'return' → logprob: -6.341269016265869
    10. '#' → logprob: -7.841269016265869

Token 1963: ' find' (ID: 1646)
  Prédit: 'run'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'run' → logprob: -0.2355978935956955
    2. 'get' → logprob: -2.360597848892212
    3. ' run' → logprob: -2.610597848892212
    4. 'simulate' → logprob: -3.860597848892212
    5. ' get' → logprob: -4.360598087310791
    6. 'start' → logprob: -6.110598087310791
    7. 'best' → logprob: -6.735598087310791
    8. 'def' → logprob: -6.860598087310791
    9. 'solve' → logprob: -6.860598087310791
    10. 'finish' → logprob: -7.485598087310791

Token 1964: '_min' (ID: 15950)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8386383056640625
    2. '_min' → logprob: -1.4636383056640625
    3. '_best' → logprob: -1.5886383056640625
    4. '_opt' → logprob: -2.5886383056640625
    5. '_max' → logprob: -3.2136383056640625
    6. '_time' → logprob: -5.0886383056640625
    7. '_final' → logprob: -6.2136383056640625
    8. '_next' → logprob: -6.2136383056640625
    9. '_fast' → logprob: -6.8386383056640625
    10. '_total' → logprob: -7.3386383056640625

Token 1965: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.0015996063593775034
    2. '_' → logprob: -6.8765997886657715
    3. 'imal' → logprob: -8.876599311828613
    4. '_total' → logprob: -9.001599311828613
    5. '_running' → logprob: -9.251599311828613
    6. 'imum' → logprob: -9.376599311828613
    7. '_run' → logprob: -9.626599311828613
    8. '_runtime' → logprob: -10.626599311828613
    9. '_distance' → logprob: -11.751599311828613
    10. '__' → logprob: -12.126599311828613

Token 1966: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.02342214807868004
    2. '(' → logprob: -3.7734222412109375
    3. 'self' → logprob: -9.773422241210938
    4. '_to' → logprob: -10.398422241210938
    5. '_(' → logprob: -10.398422241210938
    6. '_' → logprob: -10.648422241210938
    7. '   ' → logprob: -11.398422241210938
    8. '(
' → logprob: -11.648422241210938
    9. ' (' → logprob: -12.648422241210938
    10. '(s' → logprob: -13.148422241210938

Token 1967: ')' (ID: 8)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.22979465126991272
    2. '(' → logprob: -1.7297946214675903
    3. ')' → logprob: -4.354794502258301
    4. '(
' → logprob: -5.604794502258301
    5. '_to' → logprob: -5.729794502258301
    6. 'self' → logprob: -5.979794502258301
    7. ',' → logprob: -6.229794502258301
    8. 'def' → logprob: -6.854794502258301
    9. '   ' → logprob: -7.229794502258301
    10. ')(' → logprob: -8.2297945022583

Token 1968: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.017789199948310852
    2. '(' → logprob: -4.142789363861084
    3. 'self' → logprob: -6.517789363861084
    4. 'def' → logprob: -9.142788887023926
    5. '   ' → logprob: -9.642788887023926
    6. '```' → logprob: -10.392788887023926
    7. '       ' → logprob: -11.017788887023926
    8. '(
' → logprob: -11.267788887023926
    9. 'return' → logprob: -11.642788887023926
    10. '():' → logprob: -12.017788887023926

Token 1969: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -7.898723561083898e-05
    2. 'self' → logprob: -9.750079154968262
    3. ' float' → logprob: -11.000079154968262
    4. '_float' → logprob: -13.875079154968262
    5. '(float' → logprob: -14.125079154968262
    6. 'flo' → logprob: -14.250079154968262
    7. 'return' → logprob: -14.500079154968262
    8. 'def' → logprob: -14.875079154968262
    9. 'f' → logprob: -15.000079154968262
    10. '   ' → logprob: -15.875079154968262

Token 1970: ':
' (ID: 734)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.06267914175987244
    2. '       ' → logprob: -3.5626790523529053
    3. '(' → logprob: -3.6876790523529053
    4. '(
' → logprob: -5.062679290771484
    5. '   ' → logprob: -7.187679290771484
    6. 'self' → logprob: -9.562679290771484
    7. '():
' → logprob: -9.937679290771484
    8. '(s' → logprob: -10.562679290771484
    9. '        
' → logprob: -10.812679290771484
    10. ':
' → logprob: -10.937679290771484

Token 1971: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00041875618626363575
    2. 'return' → logprob: -8.250418663024902
    3. '   ' → logprob: -9.750418663024902
    4. '
' → logprob: -10.375418663024902
    5. '```' → logprob: -10.375418663024902
    6. ' return' → logprob: -11.125418663024902
    7. '        
' → logprob: -11.250418663024902
    8. '    
' → logprob: -13.375418663024902
    9. '	' → logprob: -13.625418663024902
    10. '           ' → logprob: -14.125418663024902

Token 1972: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.000555416801944375
    2. '       ' → logprob: -7.500555515289307
    3. ' return' → logprob: -13.625555038452148
    4. '```' → logprob: -14.125555038452148
    5. '
' → logprob: -15.000555038452148
    6. 'result' → logprob: -16.62555503845215
    7. '        
' → logprob: -17.75055503845215
    8. '   ' → logprob: -18.00055503845215
    9. '	return' → logprob: -18.50055503845215
    10. 'start' → logprob: -18.62555503845215

Token 1973: ' initial' (ID: 4871)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0010236396919935942
    2. '       ' → logprob: -7.001023769378662
    3. '   ' → logprob: -9.251023292541504
    4. ' return' → logprob: -11.126023292541504
    5. '```' → logprob: -14.501023292541504
    6. 'result' → logprob: -14.626023292541504
    7. '
' → logprob: -16.00102424621582
    8. 'start' → logprob: -16.00102424621582
    9. '	return' → logprob: -16.12602424621582
    10. 'import' → logprob: -16.75102424621582

Token 1974: ' state' (ID: 2608)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.2588106393814087
    2. 'return' → logprob: -1.6338106393814087
    3. 'time' → logprob: -5.008810520172119
    4. '_state' → logprob: -5.133810520172119
    5. 'current' → logprob: -5.883810520172119
    6. ' return' → logprob: -5.883810520172119
    7. '(' → logprob: -6.008810520172119
    8. 'def' → logprob: -6.508810520172119
    9. 'self' → logprob: -6.508810520172119
    10. 'state' → logprob: -6.633810520172119

Token 1975: ':
' (ID: 734)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.004132780246436596
    2. ' return' → logprob: -6.0041327476501465
    3. '       ' → logprob: -6.5041327476501465
    4. '
' → logprob: -9.879133224487305
    5. '(' → logprob: -10.004133224487305
    6. '0' → logprob: -10.254133224487305
    7. 'result' → logprob: -11.129133224487305
    8. '```' → logprob: -12.504133224487305
    9. '	return' → logprob: -13.379133224487305
    10. '(return' → logprob: -13.629133224487305

Token 1976: '       ' (ID: 309)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.05501768738031387
    2. '       ' → logprob: -3.0550177097320557
    3. ' return' → logprob: -5.055017471313477
    4. '```' → logprob: -11.430017471313477
    5. '	return' → logprob: -11.930017471313477
    6. '0' → logprob: -11.930017471313477
    7. 'result' → logprob: -12.555017471313477
    8. '
' → logprob: -13.180017471313477
    9. '{return' → logprob: -13.805017471313477
    10. '        
' → logprob: -14.305017471313477

Token 1977: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -7.874882430769503e-05
    2. ' return' → logprob: -9.500079154968262
    3. '       ' → logprob: -13.125079154968262
    4. '0' → logprob: -13.875079154968262
    5. 'current' → logprob: -14.750079154968262
    6. 'result' → logprob: -15.000079154968262
    7. '```' → logprob: -16.125078201293945
    8. 'import' → logprob: -16.500078201293945
    9. '	return' → logprob: -17.625078201293945
    10. 'self' → logprob: -17.875078201293945

Token 1978: ' idx' (ID: 14016)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0007603150443173945
    2. ' return' → logprob: -7.625760078430176
    3. '       ' → logprob: -8.500760078430176
    4. 'current' → logprob: -9.875760078430176
    5. 'idx' → logprob: -12.000760078430176
    6. 'result' → logprob: -12.875760078430176
    7. '0' → logprob: -12.875760078430176
    8. 'initial' → logprob: -12.875760078430176
    9. '   ' → logprob: -13.625760078430176
    10. 'time' → logprob: -14.000760078430176

Token 1979: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.026344306766986847
    2. ' =' → logprob: -3.6513442993164062
    3. ',' → logprob: -10.276344299316406
    4. '0' → logprob: -12.026344299316406
    5. ':' → logprob: -12.651344299316406
    6. ')' → logprob: -16.151344299316406
    7. ' ' → logprob: -16.151344299316406
    8. '=
' → logprob: -16.776344299316406
    9. '```' → logprob: -16.901344299316406
    10. 'def' → logprob: -17.026344299316406

Token 1980: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.125
    3. '```' → logprob: -17.875
    4. '=' → logprob: -18.125
    5. '   ' → logprob: -18.75
    6. '(' → logprob: -19.5
    7. '۰' → logprob: -19.5
    8. '#' → logprob: -19.625
    9. '00' → logprob: -19.75
    10. '000' → logprob: -19.75

Token 1981: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00461560720577836
    2. '0' → logprob: -5.754615783691406
    3. 'car' → logprob: -6.879615783691406
    4. ' ,' → logprob: -8.879615783691406
    5. '       ' → logprob: -9.129615783691406
    6. ' carrots' → logprob: -9.254615783691406
    7. ',c' → logprob: -10.754615783691406
    8. '(' → logprob: -11.004615783691406
    9. ',
' → logprob: -11.129615783691406
    10. '(car' → logprob: -12.504615783691406

Token 1982: 'first' (ID: 7743)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.14785602688789368
    2. '0' → logprob: -2.0228559970855713
    3. ',' → logprob: -6.02285623550415
    4. ' carrots' → logprob: -6.02285623550415
    5. ' ' → logprob: -9.022855758666992
    6. ')' → logprob: -10.022855758666992
    7. 'cars' → logprob: -10.522855758666992
    8. '),' → logprob: -10.897855758666992
    9. ',
' → logprob: -11.272855758666992
    10. '```' → logprob: -11.647855758666992

Token 1983: ' carrot' (ID: 121234)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09416399896144867
    2. ')' → logprob: -2.9691638946533203
    3. ' ,' → logprob: -4.34416389465332
    4. '),' → logprob: -5.09416389465332
    5. '_car' → logprob: -5.09416389465332
    6. 'car' → logprob: -5.59416389465332
    7. '_,' → logprob: -5.59416389465332
    8. '_' → logprob: -5.71916389465332
    9. ' carrot' → logprob: -8.09416389465332
    10. ' segment' → logprob: -8.21916389465332

Token 1984: ' segment' (ID: 14806)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2525697350502014
    2. ')' → logprob: -1.6275696754455566
    3. '),' → logprob: -3.7525696754455566
    4. '       ' → logprob: -6.627569675445557
    5. ' ,' → logprob: -7.002569675445557
    6. ',
' → logprob: -8.127570152282715
    7. '   ' → logprob: -8.252570152282715
    8. ')
' → logprob: -8.627570152282715
    9. '0' → logprob: -9.877570152282715
    10. '),
' → logprob: -9.877570152282715

Token 1985: '),
' (ID: 2313)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0022055702283978462
    2. '),' → logprob: -6.5022053718566895
    3. '       ' → logprob: -8.252205848693848
    4. ' ,' → logprob: -8.752205848693848
    5. ')' → logprob: -8.877205848693848
    6. ',
' → logprob: -9.252205848693848
    7. '0' → logprob: -10.377205848693848
    8. ')
' → logprob: -12.252205848693848
    9. '           ' → logprob: -13.252205848693848
    10. '```' → logprob: -13.752205848693848

Token 1986: '       ' (ID: 309)
  Prédit: ' carrots'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' carrots' → logprob: -0.6840682029724121
    2. '       ' → logprob: -1.309068202972412
    3. 'car' → logprob: -2.059068202972412
    4. '0' → logprob: -2.434068202972412
    5. '        ' → logprob: -5.059068202972412
    6. ' ' → logprob: -7.559068202972412
    7. '```' → logprob: -7.559068202972412
    8. ',' → logprob: -7.559068202972412
    9. '           ' → logprob: -7.934068202972412
    10. '   ' → logprob: -8.68406867980957

Token 1987: ' #' (ID: 1069)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.050129394978284836
    2. ' carrots' → logprob: -3.0501294136047363
    3. '       ' → logprob: -6.800129413604736
    4. '0' → logprob: -8.300128936767578
    5. 'cars' → logprob: -10.300128936767578
    6. '   ' → logprob: -10.300128936767578
    7. ' ' → logprob: -10.675128936767578
    8. '        ' → logprob: -11.300128936767578
    9. '```' → logprob: -11.425128936767578
    10. '_car' → logprob: -12.050128936767578

Token 1988: ' carrots' (ID: 91266)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.018722930923104286
    2. '0' → logprob: -4.018723011016846
    3. ' carrots' → logprob: -7.518723011016846
    4. 'cars' → logprob: -11.893722534179688
    5. '```' → logprob: -12.143722534179688
    6. ' ' → logprob: -12.643722534179688
    7. 'c' → logprob: -13.268722534179688
    8. '-car' → logprob: -13.518722534179688
    9. '(car' → logprob: -13.768722534179688
    10. '_car' → logprob: -13.768722534179688

Token 1989: '_car' (ID: 62991)
  Prédit: '_car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_car' → logprob: -0.003473198041319847
    2. '=' → logprob: -5.878473281860352
    3. 'car' → logprob: -7.378473281860352
    4. ',' → logprob: -11.503473281860352
    5. 'Car' → logprob: -11.878473281860352
    6. ' =' → logprob: -11.878473281860352
    7. '_c' → logprob: -12.128473281860352
    8. '0' → logprob: -12.878473281860352
    9. '_' → logprob: -13.378473281860352
    10. '   ' → logprob: -13.378473281860352

Token 1990: 'ried' (ID: 6089)
  Prédit: 'ried'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ried' → logprob: -0.00018411019118502736
    2. '_' → logprob: -9.250184059143066
    3. 'r' → logprob: -9.625184059143066
    4. 'ied' → logprob: -11.875184059143066
    5. '_car' → logprob: -12.000184059143066
    6. '```' → logprob: -13.375184059143066
    7. '__' → logprob: -13.500184059143066
    8. '_r' → logprob: -13.625184059143066
    9. 'rying' → logprob: -14.625184059143066
    10. '[' → logprob: -14.625184059143066

Token 1991: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.0325924449716695e-05
    2. ' =' → logprob: -11.50001049041748
    3. ',' → logprob: -16.250009536743164
    4. '0' → logprob: -17.500009536743164
    5. ')' → logprob: -17.750009536743164
    6. '=
' → logprob: -18.625009536743164
    7. ':' → logprob: -19.125009536743164
    8. '=}' → logprob: -19.875009536743164
    9. ')=' → logprob: -20.250009536743164
    10. '<|end|>' → logprob: -20.375009536743164

Token 1992: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.130576806142926e-05
    2. ' ' → logprob: -10.375031471252441
    3. '   ' → logprob: -17.125030517578125
    4. '```' → logprob: -18.750030517578125
    5. '
' → logprob: -19.250030517578125
    6. '       ' → logprob: -19.500030517578125
    7. '۰' → logprob: -19.500030517578125
    8. '`' → logprob: -19.625030517578125
    9. '=' → logprob: -19.625030517578125
    10. '000' → logprob: -19.750030517578125

Token 1993: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.023495512083172798
    2. ',
' → logprob: -3.7734954357147217
    3. ',last' → logprob: -8.5234956741333
    4. 'last' → logprob: -11.1484956741333
    5. ' ,' → logprob: -11.2734956741333
    6. '       ' → logprob: -11.6484956741333
    7. '(last' → logprob: -12.2734956741333
    8. ' last' → logprob: -12.2734956741333
    9. '
' → logprob: -13.1484956741333
    10. '0' → logprob: -13.5234956741333

Token 1994: '       ' (ID: 309)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014882531948387623
    2. ',
' → logprob: -5.139882564544678
    3. ',last' → logprob: -5.514882564544678
    4. 'last' → logprob: -5.764882564544678
    5. '       ' → logprob: -7.264882564544678
    6. ' last' → logprob: -7.514882564544678
    7. '(last' → logprob: -7.639882564544678
    8. ' ,' → logprob: -11.51488208770752
    9. '```' → logprob: -12.26488208770752
    10. '(' → logprob: -12.88988208770752

Token 1995: ' #' (ID: 1069)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.6837847828865051
    2. ' last' → logprob: -0.9337847828865051
    3. ',' → logprob: -2.3087847232818604
    4. ',last' → logprob: -6.1837849617004395
    5. ',
' → logprob: -7.6837849617004395
    6. ' ,' → logprob: -8.558784484863281
    7. '       ' → logprob: -9.183784484863281
    8. '
' → logprob: -11.058784484863281
    9. '0' → logprob: -12.308784484863281
    10. '```' → logprob: -12.433784484863281

Token 1996: ' last' (ID: 2174)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -8.180258191714529e-06
    2. ' last' → logprob: -11.750008583068848
    3. '-' → logprob: -17.12500762939453
    4. 'float' → logprob: -17.12500762939453
    5. 'import' → logprob: -17.37500762939453
    6. '       ' → logprob: -18.00000762939453
    7. '0' → logprob: -18.00000762939453
    8. '#' → logprob: -18.00000762939453
    9. '
' → logprob: -18.25000762939453
    10. '_last' → logprob: -18.37500762939453

Token 1997: '_car' (ID: 62991)
  Prédit: '_car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_car' → logprob: -2.117345684382599e-05
    2. '_e' → logprob: -11.375020980834961
    3. 'Car' → logprob: -12.375020980834961
    4. 'car' → logprob: -12.375020980834961
    5. 'e' → logprob: -14.625020980834961
    6. '_' → logprob: -15.500020980834961
    7. '\' → logprob: -16.25002098083496
    8. '```' → logprob: -16.25002098083496
    9. '_c' → logprob: -16.37502098083496
    10. '
' → logprob: -17.00002098083496

Token 1998: 'rot' (ID: 8150)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.05639200657606125
    2. '_car' → logprob: -3.056391954421997
    3. '_e' → logprob: -6.056392192840576
    4. 'car' → logprob: -6.431392192840576
    5. 'ot' → logprob: -6.681392192840576
    6. 'time' → logprob: -7.556392192840576
    7. 'eat' → logprob: -7.556392192840576
    8. '_token' → logprob: -8.181391716003418
    9. 'e' → logprob: -8.431391716003418
    10. '```' → logprob: -8.556391716003418

Token 1999: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.00012999906903132796
    2. '_e' → logprob: -9.000129699707031
    3. 'time' → logprob: -12.750129699707031
    4. 'E' → logprob: -13.875129699707031
    5. 'e' → logprob: -14.125129699707031
    6. 'Time' → logprob: -14.750129699707031
    7. '_' → logprob: -14.875129699707031
    8. '```' → logprob: -14.875129699707031
    9. '=' → logprob: -15.625129699707031
    10. '_t' → logprob: -15.875129699707031

Token 2000: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.002119807992130518
    2. ' =' → logprob: -6.502120018005371
    3. '=-' → logprob: -7.502120018005371
    4. '=float' → logprob: -9.752120018005371
    5. '=None' → logprob: -12.752120018005371
    6. '=
' → logprob: -13.127120018005371
    7. ')' → logprob: -14.752120018005371
    8. '=(-' → logprob: -14.752120018005371
    9. ',' → logprob: -15.002120018005371
    10. ':' → logprob: -15.127120018005371

Token 2001: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.07133647799491882
    2. 'float' → logprob: -3.071336507797241
    3. '-f' → logprob: -3.821336507797241
    4. ' -' → logprob: -7.821336269378662
    5. '-fl' → logprob: -9.69633674621582
    6. ' float' → logprob: -10.44633674621582
    7. '=float' → logprob: -10.82133674621582
    8. '-inf' → logprob: -10.82133674621582
    9. '-floating' → logprob: -11.57133674621582
    10. '-fluid' → logprob: -11.69633674621582

Token 2002: 'inf' (ID: 22226)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.006752309389412403
    2. '1' → logprob: -5.0067524909973145
    3. ' float' → logprob: -10.631752014160156
    4. 'inf' → logprob: -12.006752014160156
    5. '100' → logprob: -13.006752014160156
    6. '0' → logprob: -14.131752014160156
    7. '999' → logprob: -14.256752014160156
    8. '(float' → logprob: -14.381752014160156
    9. '
' → logprob: -14.506752014160156
    10. '10' → logprob: -14.631752014160156

Token 2003: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0091246366500854
    2. ' =' → logprob: -1.5091246366500854
    3. '       ' → logprob: -1.8841246366500854
    4. '
' → logprob: -2.509124755859375
    5. '=float' → logprob: -2.634124755859375
    6. '=' → logprob: -3.509124755859375
    7. 'float' → logprob: -3.509124755859375
    8. ',
' → logprob: -4.134124755859375
    9. ')' → logprob: -5.134124755859375
    10. ',float' → logprob: -5.259124755859375

Token 2004: 'no' (ID: 1750)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.00817823689430952
    2. '-' → logprob: -5.508178234100342
    3. ' float' → logprob: -6.133178234100342
    4. '-f' → logprob: -6.508178234100342
    5. '   ' → logprob: -9.0081787109375
    6. ' -' → logprob: -9.1331787109375
    7. '       ' → logprob: -10.0081787109375
    8. '=float' → logprob: -10.3831787109375
    9. '(float' → logprob: -10.6331787109375
    10. '0' → logprob: -10.7581787109375

Token 2005: ' carrot' (ID: 121234)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.25267520546913147
    2. '1' → logprob: -1.502675175666809
    3. ' float' → logprob: -7.5026750564575195
    4. 'inf' → logprob: -9.50267505645752
    5. 'math' → logprob: -9.75267505645752
    6. '100' → logprob: -10.50267505645752
    7. '999' → logprob: -11.50267505645752
    8. '0' → logprob: -11.87767505645752
    9. '
' → logprob: -11.87767505645752
    10. '(float' → logprob: -13.12767505645752

Token 2006: ' eaten' (ID: 56450)
  Prédit: '_e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_e' → logprob: -0.025749528780579567
    2. 'e' → logprob: -4.025749683380127
    3. ' eaten' → logprob: -5.775749683380127
    4. ')' → logprob: -5.900749683380127
    5. '_' → logprob: -7.525749683380127
    6. '   ' → logprob: -8.150749206542969
    7. ')
' → logprob: -8.400749206542969
    8. ' ' → logprob: -8.650749206542969
    9. '```' → logprob: -8.775749206542969
    10. '       ' → logprob: -9.400749206542969

Token 2007: ' yet' (ID: 5073)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2590154707431793
    2. ')
' → logprob: -1.509015440940857
    3. '       ' → logprob: -6.0090155601501465
    4. ',' → logprob: -6.5090155601501465
    5. '),' → logprob: -7.1340155601501465
    6. ' )' → logprob: -8.009015083312988
    7. ' or' → logprob: -8.009015083312988
    8. '-' → logprob: -8.009015083312988
    9. '```' → logprob: -8.134015083312988
    10. ' yet' → logprob: -8.259015083312988

Token 2008: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.2724229395389557
    2. ')' → logprob: -1.5224229097366333
    3. '       ' → logprob: -4.022422790527344
    4. ' )
' → logprob: -7.397422790527344
    5. '),' → logprob: -7.897422790527344
    6. ' or' → logprob: -8.147422790527344
    7. '),
' → logprob: -8.147422790527344
    8. ',' → logprob: -8.397422790527344
    9. ' )' → logprob: -9.022422790527344
    10. '
' → logprob: -9.147422790527344

Token 2009: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07080285996198654
    2. ',' → logprob: -3.445802927017212
    3. '   ' → logprob: -4.820802688598633
    4. '(' → logprob: -4.945802688598633
    5. ')' → logprob: -5.195802688598633
    6. '
' → logprob: -5.445802688598633
    7. '):
' → logprob: -5.570802688598633
    8. '```' → logprob: -6.570802688598633
    9. '        
' → logprob: -6.945802688598633
    10. 'return' → logprob: -7.070802688598633

Token 2010: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0014845087425783277
    2. '       ' → logprob: -6.876484394073486
    3. ' return' → logprob: -8.251484870910645
    4. 'import' → logprob: -8.876484870910645
    5. 'last' → logprob: -10.501484870910645
    6. '
' → logprob: -12.001484870910645
    7. 'result' → logprob: -12.251484870910645
    8. 'float' → logprob: -12.501484870910645
    9. '```' → logprob: -12.626484870910645
    10. 'current' → logprob: -12.876484870910645

Token 2011: ' current' (ID: 2208)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.13501065969467163
    2. 'current' → logprob: -2.2600107192993164
    3. 'import' → logprob: -4.010010719299316
    4. 'result' → logprob: -6.010010719299316
    5. ' return' → logprob: -7.260010719299316
    6. 'res' → logprob: -8.010010719299316
    7. '0' → logprob: -8.885010719299316
    8. 'float' → logprob: -10.010010719299316
    9. ' current' → logprob: -10.135010719299316
    10. 'initial' → logprob: -10.385010719299316

Token 2012: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -2.816093228830141e-06
    2. '_' → logprob: -13.75000286102295
    3. ' _' → logprob: -14.50000286102295
    4. '```' → logprob: -14.75000286102295
    5. '_Time' → logprob: -15.37500286102295
    6. 'Time' → logprob: -16.000001907348633
    7. '_line' → logprob: -16.250001907348633
    8. '=' → logprob: -17.000001907348633
    9. '=_' → logprob: -17.125001907348633
    10. 'time' → logprob: -17.250001907348633

Token 2013: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2014298141002655
    2. ' =' → logprob: -1.701429843902588
    3. ')' → logprob: -11.45142936706543
    4. '=float' → logprob: -12.95142936706543
    5. ' =
' → logprob: -14.32642936706543
    6. '=
' → logprob: -14.45142936706543
    7. ' ' → logprob: -14.57642936706543
    8. ',' → logprob: -14.70142936706543
    9. ':' → logprob: -14.82642936706543
    10. '   ' → logprob: -15.32642936706543

Token 2014: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1160349458805285e-05
    2. ' ' → logprob: -11.500011444091797
    3. '-' → logprob: -14.375011444091797
    4. '   ' → logprob: -15.750011444091797
    5. 'float' → logprob: -16.250011444091797
    6. '
' → logprob: -17.375011444091797
    7. '```' → logprob: -17.500011444091797
    8. '  ' → logprob: -17.562511444091797
    9. '=' → logprob: -17.812511444091797
    10. '    ' → logprob: -18.437511444091797

Token 2015: '.' (ID: 13)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6753711700439453
    2. '
' → logprob: -2.1753711700439453
    3. '(' → logprob: -2.5503711700439453
    4. ')' → logprob: -2.8003711700439453
    5. '(
' → logprob: -3.3003711700439453
    6. '):
' → logprob: -3.4253711700439453
    7. ',' → logprob: -3.6753711700439453
    8. ' =' → logprob: -3.9253711700439453
    9. '():
' → logprob: -3.9253711700439453
    10. '=' → logprob: -4.175371170043945

Token 2016: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.001417636871338
    2. ' return' → logprob: -1.126417636871338
    3. 'return' → logprob: -1.876417636871338
    4. '       ' → logprob: -3.126417636871338
    5. 'def' → logprob: -3.376417636871338
    6. '   ' → logprob: -3.501417636871338
    7. ' def' → logprob: -3.751417636871338
    8. 'float' → logprob: -4.876417636871338
    9. ' float' → logprob: -5.751417636871338
    10. '  ' → logprob: -6.001417636871338

Token 2017: '

' (ID: 279)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.9908409118652344
    2. '
' → logprob: -1.2408409118652344
    3. '       ' → logprob: -1.2408409118652344
    4. ' return' → logprob: -3.3658409118652344
    5. ')' → logprob: -5.240840911865234
    6. '```' → logprob: -6.115840911865234
    7. '        
' → logprob: -6.240840911865234
    8. '   ' → logprob: -6.740840911865234
    9. '):
' → logprob: -6.865840911865234
    10. '(' → logprob: -6.990840911865234

Token 2018: '       ' (ID: 309)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.17330384254455566
    2. '       ' → logprob: -1.9233038425445557
    3. ' return' → logprob: -4.423303604125977
    4. '```' → logprob: -7.048303604125977
    5. '
' → logprob: -9.548303604125977
    6. '	return' → logprob: -11.048303604125977
    7. ')' → logprob: -11.298303604125977
    8. '{return' → logprob: -11.673303604125977
    9. '   ' → logprob: -11.798303604125977
    10. ')return' → logprob: -12.298303604125977

Token 2019: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -2.3915141355246305e-05
    2. '       ' → logprob: -10.75002384185791
    3. ' return' → logprob: -13.75002384185791
    4. 'import' → logprob: -14.25002384185791
    5. '```' → logprob: -14.25002384185791
    6. 'result' → logprob: -16.875024795532227
    7. '
' → logprob: -17.250024795532227
    8. 'key' → logprob: -18.125024795532227
    9. 'initial' → logprob: -18.375024795532227
    10. '        
' → logprob: -19.000024795532227

Token 2020: ' Represent' (ID: 34617)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.00028255043434910476
    2. 'import' → logprob: -8.625282287597656
    3. '       ' → logprob: -9.500282287597656
    4. 'result' → logprob: -10.750282287597656
    5. ' return' → logprob: -12.250282287597656
    6. 'initial' → logprob: -14.500282287597656
    7. '
' → logprob: -15.125282287597656
    8. 'from' → logprob: -15.250282287597656
    9. '```' → logprob: -15.375282287597656
    10. 'res' → logprob: -15.500282287597656

Token 2021: ' no' (ID: 860)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.130829855799675
    2. '-' → logprob: -2.7558298110961914
    3. ' float' → logprob: -3.0058298110961914
    4. '   ' → logprob: -6.005829811096191
    5. '(float' → logprob: -6.380829811096191
    6. 'last' → logprob: -7.130829811096191
    7. 'key' → logprob: -7.255829811096191
    8. 'self' → logprob: -7.255829811096191
    9. '(-' → logprob: -7.505829811096191
    10. ' -' → logprob: -7.630829811096191

Token 2022: ' carrot' (ID: 121234)
  Prédit: '_e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_e' → logprob: -1.3338650465011597
    2. '_car' → logprob: -1.4588650465011597
    3. 'e' → logprob: -1.5838650465011597
    4. '_last' → logprob: -2.083865165710449
    5. 'last' → logprob: -2.208865165710449
    6. 'car' → logprob: -4.333865165710449
    7. 'float' → logprob: -4.833865165710449
    8. ' last' → logprob: -5.333865165710449
    9. '_float' → logprob: -5.458865165710449
    10. '_in' → logprob: -5.583865165710449

Token 2023: ' eaten' (ID: 56450)
  Prédit: '_e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_e' → logprob: -0.000867156486492604
    2. 'e' → logprob: -7.5008673667907715
    3. '_' → logprob: -9.000866889953613
    4. ' eaten' → logprob: -10.125866889953613
    5. '=' → logprob: -10.250866889953613
    6. '_last' → logprob: -10.750866889953613
    7. '_car' → logprob: -10.875866889953613
    8. ' =' → logprob: -11.125866889953613
    9. '   ' → logprob: -11.250866889953613
    10. '_time' → logprob: -11.375866889953613

Token 2024: ' by' (ID: 656)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7570754885673523
    2. 'as' → logprob: -1.257075548171997
    3. ' as' → logprob: -1.507075548171997
    4. ' =' → logprob: -4.507075309753418
    5. '_as' → logprob: -4.632075309753418
    6. '=-' → logprob: -6.007075309753418
    7. '=float' → logprob: -7.132075309753418
    8. ',' → logprob: -8.132075309753418
    9. 'with' → logprob: -9.132075309753418
    10. 'by' → logprob: -9.257075309753418

Token 2025: ' a' (ID: 261)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.41495439410209656
    2. '-f' → logprob: -1.664954423904419
    3. '-' → logprob: -1.914954423904419
    4. ' -' → logprob: -6.91495418548584
    5. ' float' → logprob: -6.91495418548584
    6. '-fl' → logprob: -7.78995418548584
    7. '-inf' → logprob: -8.78995418548584
    8. '   ' → logprob: -9.53995418548584
    9. '(float' → logprob: -10.16495418548584
    10. '=float' → logprob: -10.28995418548584

Token 2026: ' large' (ID: 4410)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.8604284524917603
    2. 'float' → logprob: -0.9854284524917603
    3. '-f' → logprob: -1.6104284524917603
    4. '-inf' → logprob: -6.360428333282471
    5. ' float' → logprob: -7.610428333282471
    6. '-negative' → logprob: -7.735428333282471
    7. ' -' → logprob: -8.235428810119629
    8. '-fl' → logprob: -8.610428810119629
    9. 'negative' → logprob: -9.110428810119629
    10. '=float' → logprob: -9.610428810119629

Token 2027: ' negative' (ID: 12626)
  Prédit: 'negative'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'negative' → logprob: -0.3239066004753113
    2. '-' → logprob: -2.573906660079956
    3. 'float' → logprob: -2.573906660079956
    4. '-negative' → logprob: -2.573906660079956
    5. ' -' → logprob: -3.948906660079956
    6. ' negative' → logprob: -4.573906421661377
    7. 'value' → logprob: -4.948906421661377
    8. '-value' → logprob: -5.698906421661377
    9. '-f' → logprob: -5.948906421661377
    10. ' float' → logprob: -6.448906421661377

Token 2028: ' value' (ID: 1432)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.10733700543642044
    2. 'value' → logprob: -2.85733699798584
    3. 'number' → logprob: -3.98233699798584
    4. '1' → logprob: -4.73233699798584
    5. ' float' → logprob: -4.98233699798584
    6. ' number' → logprob: -6.10733699798584
    7. ' value' → logprob: -6.23233699798584
    8. '-' → logprob: -6.35733699798584
    9. '-f' → logprob: -6.73233699798584
    10. 'inf' → logprob: -6.98233699798584

Token 2029: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1360366940498352
    2. '-' → logprob: -2.7610366344451904
    3. ' -' → logprob: -3.8860366344451904
    4. 'last' → logprob: -4.1360368728637695
    5. 'float' → logprob: -4.7610368728637695
    6. ' last' → logprob: -5.5110368728637695
    7. 'import' → logprob: -5.7610368728637695
    8. ',' → logprob: -5.8860368728637695
    9. '
' → logprob: -6.0110368728637695
    10. ' =' → logprob: -6.6360368728637695

Token 2030: ' avoid' (ID: 8397)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.1477004587650299
    2. 'float' → logprob: -3.022700548171997
    3. 'simulate' → logprob: -3.522700548171997
    4. 'start' → logprob: -3.897700548171997
    5. 'represent' → logprob: -4.022700309753418
    6. 'self' → logprob: -4.772700309753418
    7. 'avoid' → logprob: -5.772700309753418
    8. ' -' → logprob: -6.522700309753418
    9. '-start' → logprob: -6.522700309753418
    10. 'continue' → logprob: -6.647700309753418

Token 2031: ' float' (ID: 4428)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.7091556787490845
    2. 'float' → logprob: -0.7091556787490845
    3. '-f' → logprob: -4.584155559539795
    4. ' -' → logprob: -6.209155559539795
    5. ' float' → logprob: -6.334155559539795
    6. '-inf' → logprob: -6.459155559539795
    7. '-in' → logprob: -9.834156036376953
    8. '
' → logprob: -9.959156036376953
    9. '-return' → logprob: -10.209156036376953
    10. '=float' → logprob: -10.459156036376953

Token 2032: '('' (ID: 706)
  Prédit: ''-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''-' → logprob: -0.31896117329597473
    2. '('-' → logprob: -1.3189611434936523
    3. '"-' → logprob: -5.318961143493652
    4. '("-' → logprob: -7.318961143493652
    5. '-inf' → logprob: -9.693961143493652
    6. '-' → logprob: -10.693961143493652
    7. '
' → logprob: -11.943961143493652
    8. '   ' → logprob: -11.943961143493652
    9. '('' → logprob: -11.943961143493652
    10. ''' → logprob: -12.318961143493652

Token 2033: 'inf' (ID: 22226)
  Prédit: '-inf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-inf' → logprob: -0.005033678840845823
    2. ''-' → logprob: -5.380033493041992
    3. '-in' → logprob: -8.380033493041992
    4. 'inf' → logprob: -8.755033493041992
    5. '-' → logprob: -11.380033493041992
    6. '('-' → logprob: -12.630033493041992
    7. '"-' → logprob: -13.005033493041992
    8. ''' → logprob: -13.255033493041992
    9. '-INF' → logprob: -13.255033493041992
    10. '-info' → logprob: -13.380033493041992

Token 2034: '')' (ID: 1542)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.746366024017334
    2. '-' → logprob: -0.871366024017334
    3. ',' → logprob: -3.496366024017334
    4. '')' → logprob: -3.746366024017334
    5. ''-' → logprob: -4.496366024017334
    6. ' -' → logprob: -4.871366024017334
    7. '   ' → logprob: -4.996366024017334
    8. '       ' → logprob: -5.121366024017334
    9. '('-' → logprob: -5.996366024017334
    10. ')
' → logprob: -6.121366024017334

Token 2035: ' issues' (ID: 6086)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3239811062812805
    2. '=' → logprob: -2.3239810466766357
    3. '=-' → logprob: -2.3239810466766357
    4. '-' → logprob: -3.3239810466766357
    5. ' -' → logprob: -4.073981285095215
    6. '       ' → logprob: -4.448981285095215
    7. '=float' → logprob: -4.823981285095215
    8. ':' → logprob: -5.448981285095215
    9. 'float' → logprob: -7.323981285095215
    10. '(-' → logprob: -7.448981285095215

Token 2036: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11006055772304535
    2. '-' → logprob: -2.735060453414917
    3. 'return' → logprob: -4.235060691833496
    4. ' -' → logprob: -4.985060691833496
    5. 'float' → logprob: -4.985060691833496
    6. 'last' → logprob: -4.985060691833496
    7. 'import' → logprob: -7.485060691833496
    8. ' =' → logprob: -7.610060691833496
    9. ' last' → logprob: -7.610060691833496
    10. '   ' → logprob: -7.610060691833496

Token 2037: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.37097910046577454
    2. '-' → logprob: -1.3709790706634521
    3. ' -' → logprob: -3.745979070663452
    4. 'float' → logprob: -3.745979070663452
    5. 'return' → logprob: -5.120979309082031
    6. ' float' → logprob: -7.370979309082031
    7. '   ' → logprob: -7.870979309082031
    8. '0' → logprob: -7.870979309082031
    9. '(-' → logprob: -8.120979309082031
    10. ' return' → logprob: -8.370979309082031

Token 2038: ' return' (ID: 622)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.2980883717536926
    2. ' -' → logprob: -2.173088312149048
    3. 'last' → logprob: -2.423088312149048
    4. '       ' → logprob: -3.548088312149048
    5. ' last' → logprob: -4.423088550567627
    6. 'float' → logprob: -5.173088550567627
    7. '-last' → logprob: -5.798088550567627
    8. 'return' (adapté à ' return') → logprob: -6.048088550567627
    9. ' float' → logprob: -7.048088550567627
    10. '   ' → logprob: -7.173088550567627

Token 2039: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.14306949079036713
    2. ' self' → logprob: -2.0180695056915283
    3. 'float' → logprob: -8.76806926727295
    4. '0' → logprob: -9.26806926727295
    5. '       ' → logprob: -9.76806926727295
    6. '-' → logprob: -10.76806926727295
    7. '   ' → logprob: -11.14306926727295
    8. '-self' → logprob: -11.64306926727295
    9. ' -' → logprob: -11.76806926727295
    10. ' float' → logprob: -11.76806926727295

Token 2040: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.025202391669154167
    2. '.speed' → logprob: -3.9002022743225098
    3. '.' → logprob: -5.77520227432251
    4. ' .' → logprob: -6.77520227432251
    5. '.memo' → logprob: -8.650202751159668
    6. '.find' → logprob: -9.400202751159668
    7. '.__' → logprob: -10.525202751159668
    8. '   ' → logprob: -10.650202751159668
    9. '.dp' → logprob: -10.900202751159668
    10. '_speed' → logprob: -11.150202751159668

Token 2041: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -4.320199877838604e-07
    2. '_dp' → logprob: -14.75
    3. 'run' → logprob: -18.0
    4. '.dp' → logprob: -18.75
    5. 'DP' → logprob: -18.875
    6. ' dp' → logprob: -19.0
    7. '	dp' → logprob: -19.125
    8. 'dt' → logprob: -19.125
    9. '(dp' → logprob: -19.5
    10. 'd' → logprob: -19.75

Token 2042: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -7.107425062713446e-06
    2. '0' → logprob: -12.625006675720215
    3. '(
' → logprob: -13.250006675720215
    4. ' (' → logprob: -13.500006675720215
    5. '()(' → logprob: -15.500006675720215
    6. '```' → logprob: -16.00000762939453
    7. '(None' → logprob: -16.25000762939453
    8. ')(' → logprob: -17.12500762939453
    9. '[](' → logprob: -18.25000762939453
    10. '(idx' → logprob: -18.37500762939453

Token 2043: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -17.0
    3. ')' → logprob: -18.625
    4. '```' → logprob: -19.625
    5. '   ' → logprob: -21.5
    6. '
' → logprob: -21.5
    7. '۰' → logprob: -21.75
    8. '(' → logprob: -21.875
    9. '-' → logprob: -23.25
    10. '00' → logprob: -23.625

Token 2044: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.172891830326989e-05
    2. '0' → logprob: -9.750082015991211
    3. ',
' → logprob: -11.250082015991211
    4. ' ,' → logprob: -11.750082015991211
    5. '   ' → logprob: -14.000082015991211
    6. ')' → logprob: -14.500082015991211
    7. '       ' → logprob: -15.125082015991211
    8. '<|end|>' → logprob: -15.250082015991211
    9. ',None' → logprob: -16.25008201599121
    10. '```' → logprob: -16.50008201599121

Token 2045: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.75000286102295
    3. ')' → logprob: -18.625003814697266
    4. '   ' → logprob: -19.000003814697266
    5. '       ' → logprob: -19.875003814697266
    6. '<|end|>' → logprob: -20.125003814697266
    7. '۰' → logprob: -20.625003814697266
    8. '000' → logprob: -20.625003814697266
    9. '```' → logprob: -20.875003814697266
    10. '  ' → logprob: -21.125003814697266

Token 2046: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. ')' → logprob: -19.125
    4. 'car' → logprob: -19.875
    5. '000' → logprob: -19.875
    6. '00' → logprob: -20.125
    7. '۰' → logprob: -20.125
    8. '```' → logprob: -20.3125
    9. '   ' → logprob: -20.4375
    10. '<|end|>' → logprob: -20.625

Token 2047: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007637627888470888
    2. ',float' → logprob: -4.8826375007629395
    3. ',-' → logprob: -11.007637977600098
    4. ' ,' → logprob: -11.632637977600098
    5. ',
' → logprob: -13.007637977600098
    6. ',None' → logprob: -13.382637977600098
    7. 'float' → logprob: -14.257637977600098
    8. ',int' → logprob: -15.007637977600098
    9. ',double' → logprob: -15.382637977600098
    10. '```' → logprob: -15.757637977600098

Token 2048: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.011725515127182007
    2. '-f' → logprob: -4.886725425720215
    3. ' -' → logprob: -5.886725425720215
    4. 'float' → logprob: -6.886725425720215
    5. '0' → logprob: -9.136725425720215
    6. '-current' → logprob: -10.511725425720215
    7. '   ' → logprob: -10.761725425720215
    8. '-fl' → logprob: -11.011725425720215
    9. '-(' → logprob: -11.136725425720215
    10. ' float' → logprob: -11.136725425720215

Token 2049: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.10161472111940384
    2. 'float' → logprob: -2.3516147136688232
    3. '10' → logprob: -7.476614952087402
    4. '100' → logprob: -7.476614952087402
    5. '999' → logprob: -8.226614952087402
    6. '(' → logprob: -12.851614952087402
    7. ' float' → logprob: -13.226614952087402
    8. 'int' → logprob: -14.601614952087402
    9. '0' → logprob: -14.851614952087402
    10. '(float' → logprob: -15.226614952087402

Token 2050: 'e' (ID: 68)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0687249898910522
    2. 'e' → logprob: -1.0687249898910522
    3. 'float' → logprob: -1.1937249898910522
    4. '000' → logprob: -5.068725109100342
    5. '   ' → logprob: -6.318725109100342
    6. ' float' → logprob: -7.568725109100342
    7. ' ' → logprob: -8.318724632263184
    8. '            ' → logprob: -8.693724632263184
    9. '        ' → logprob: -9.068724632263184
    10. '     ' → logprob: -9.068724632263184

Token 2051: '15' (ID: 1055)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.14698588848114014
    2. '20' → logprob: -2.7719860076904297
    3. '10' → logprob: -3.1469860076904297
    4. '100' → logprob: -4.64698600769043
    5. '12' → logprob: -4.64698600769043
    6. '8' → logprob: -5.14698600769043
    7. '15' → logprob: -5.89698600769043
    8. '30' → logprob: -6.64698600769043
    9. '50' → logprob: -6.89698600769043
    10. '6' → logprob: -7.64698600769043

Token 2052: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014251544780563563
    2. ' ,' → logprob: -9.500142097473145
    3. '0' → logprob: -9.625142097473145
    4. ',
' → logprob: -14.250142097473145
    5. '   ' → logprob: -15.000142097473145
    6. ')' → logprob: -15.375142097473145
    7. '```' → logprob: -16.37514305114746
    8. '       ' → logprob: -16.62514305114746
    9. '	' → logprob: -17.12514305114746
    10. ',float' → logprob: -17.25014305114746

Token 2053: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -12.87500286102295
    3. '   ' → logprob: -17.250001907348633
    4. '  ' → logprob: -19.250001907348633
    5. '     ' → logprob: -19.625001907348633
    6. '    ' → logprob: -19.875001907348633
    7. '       ' → logprob: -21.000001907348633
    8. '```' → logprob: -21.000001907348633
    9. '۰' → logprob: -21.000001907348633
    10. '
' → logprob: -21.125001907348633

Token 2054: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.875000953674316
    3. '   ' → logprob: -16.250001907348633
    4. '-' → logprob: -18.250001907348633
    5. '  ' → logprob: -18.312501907348633
    6. '    ' → logprob: -18.812501907348633
    7. '     ' → logprob: -18.812501907348633
    8. '```' → logprob: -19.437501907348633
    9. '۰' → logprob: -19.812501907348633
    10. '       ' → logprob: -19.937501907348633

Token 2055: '.' (ID: 13)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.8219583075260743e-05
    2. ' )' → logprob: -10.625038146972656
    3. ')
' → logprob: -12.125038146972656
    4. '       ' → logprob: -12.375038146972656
    5. '   ' → logprob: -12.875038146972656
    6. '.' → logprob: -15.000038146972656
    7. '))' → logprob: -15.250038146972656
    8. '())' → logprob: -15.875038146972656
    9. '    ' → logprob: -16.000038146972656
    10. '`)' → logprob: -16.250038146972656

Token 2056: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. '```' → logprob: -15.875
    3. ')' → logprob: -16.25
    4. '       ' → logprob: -18.0
    5. '6' → logprob: -18.75
    6. '   ' → logprob: -19.0
    7. '        ' → logprob: -19.375
    8. ' ' → logprob: -19.5
    9. '15' → logprob: -19.75
    10. '5' → logprob: -19.75

Token 2057: ')


' (ID: 7861)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.7729658540920354e-05
    2. '       ' → logprob: -11.125027656555176
    3. ')
' → logprob: -12.000027656555176
    4. '   ' → logprob: -12.250027656555176
    5. ' )' → logprob: -13.750027656555176
    6. ')return' → logprob: -14.750027656555176
    7. '<|end|>' → logprob: -15.250027656555176
    8. ')#' → logprob: -17.125028610229492
    9. ' ' → logprob: -17.500028610229492
    10. ')`' → logprob: -17.625028610229492

Token 2058: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2059: ' parse' (ID: 8420)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.3037429451942444
    2. ' solve' → logprob: -2.0537428855895996
    3. ' run' → logprob: -2.3037428855895996
    4. ' test' → logprob: -4.6787428855896
    5. ' calculate' → logprob: -5.0537428855896
    6. ' simulate' → logprob: -5.3037428855896
    7. '_' → logprob: -5.6787428855896
    8. ' solution' → logprob: -5.9287428855896
    9. ' example' → logprob: -6.4287428855896
    10. ' find' → logprob: -6.6787428855896

Token 2060: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.5141277313232422
    2. '_' → logprob: -1.1391277313232422
    3. '_line' → logprob: -2.639127731323242
    4. '_code' → logprob: -5.764127731323242
    5. '(input' → logprob: -6.639127731323242
    6. '_args' → logprob: -6.764127731323242
    7. '_string' → logprob: -7.514127731323242
    8. 'input' → logprob: -7.889127731323242
    9. '(' → logprob: -8.014127731323242
    10. '_text' → logprob: -8.389127731323242

Token 2061: '()' (ID: 416)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.034236256033182144
    2. '():
' → logprob: -3.409236192703247
    3. '(input' → logprob: -8.409235954284668
    4. '()' → logprob: -8.784235954284668
    5. '(line' → logprob: -9.534235954284668
    6. '(' → logprob: -9.909235954284668
    7. ' ():' → logprob: -10.659235954284668
    8. '()(' → logprob: -11.284235954284668
    9. '():

' → logprob: -11.784235954284668
    10. '(lines' → logprob: -12.159235954284668

Token 2062: ' ->' (ID: 2747)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.003947198390960693
    2. '():
' → logprob: -6.2539472579956055
    3. '()' → logprob: -6.3789472579956055
    4. '(' → logprob: -8.128947257995605
    5. '()->' → logprob: -11.628947257995605
    6. ' ():' → logprob: -12.378947257995605
    7. '(input' → logprob: -13.253947257995605
    8. ':' → logprob: -13.253947257995605
    9. '():
' → logprob: -13.628947257995605
    10. '(":' → logprob: -13.878947257995605

Token 2063: ' Tuple' (ID: 50841)
  Prédit: 'Tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tuple' → logprob: -0.0013928539119660854
    2. 'None' → logprob: -6.751392841339111
    3. ' Tuple' → logprob: -9.12639331817627
    4. 'tuple' → logprob: -9.50139331817627
    5. 'List' → logprob: -10.25139331817627
    6. 'float' → logprob: -13.12639331817627
    7. '   ' → logprob: -14.87639331817627
    8. '```' → logprob: -14.87639331817627
    9. ' None' → logprob: -15.25139331817627
    10. 'int' → logprob: -15.75139331817627

Token 2064: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.4781627357006073
    2. '(int' → logprob: -0.9781627655029297
    3. '()' → logprob: -6.35316276550293
    4. '(
' → logprob: -7.10316276550293
    5. 'int' → logprob: -7.22816276550293
    6. '[
' → logprob: -7.72816276550293
    7. '[' → logprob: -8.60316276550293
    8. '[List' → logprob: -9.85316276550293
    9. '():' → logprob: -10.47816276550293
    10. '(' → logprob: -11.22816276550293

Token 2065: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008344047237187624
    2. ',float' → logprob: -7.6258344650268555
    3. ',int' → logprob: -8.125834465026855
    4. ' ,' → logprob: -11.000834465026855
    5. ',
' → logprob: -11.875834465026855
    6. 'int' → logprob: -12.250834465026855
    7. ']:' → logprob: -12.500834465026855
    8. ',List' → logprob: -12.750834465026855
    9. '[int' → logprob: -12.875834465026855
    10. ',bool' → logprob: -13.250834465026855

Token 2066: ' int' (ID: 677)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.5776985287666321
    2. 'int' → logprob: -0.8276985287666321
    3. 'List' → logprob: -6.577698707580566
    4. '...' → logprob: -9.452698707580566
    5. '```' → logprob: -9.452698707580566
    6. ' float' → logprob: -9.827698707580566
    7. '[int' → logprob: -10.077698707580566
    8. '   ' → logprob: -10.827698707580566
    9. ' int' → logprob: -10.952698707580566
    10. ')' → logprob: -11.327698707580566

Token 2067: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000672043883241713
    2. ',float' → logprob: -8.125672340393066
    3. ' ,' → logprob: -8.250672340393066
    4. ',int' → logprob: -9.625672340393066
    5. ',
' → logprob: -10.625672340393066
    6. '<|end|>' → logprob: -11.625672340393066
    7. '‌,' → logprob: -12.875672340393066
    8. ',List' → logprob: -13.500672340393066
    9. ']' → logprob: -13.625672340393066
    10. '   ' → logprob: -13.625672340393066

Token 2068: ' int' (ID: 677)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.474566787481308
    2. 'int' → logprob: -0.9745668172836304
    3. 'List' → logprob: -7.97456693649292
    4. ' float' → logprob: -9.849566459655762
    5. '```' → logprob: -10.474566459655762
    6. '...' → logprob: -10.599566459655762
    7. '   ' → logprob: -11.599566459655762
    8. '[int' → logprob: -11.724566459655762
    9. ' int' → logprob: -11.974566459655762
    10. 'flo' → logprob: -12.974566459655762

Token 2069: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011183747090399265
    2. ']:
' → logprob: -4.636183738708496
    3. ']:' → logprob: -7.011183738708496
    4. ']' → logprob: -8.886183738708496
    5. ',int' → logprob: -9.386183738708496
    6. ',float' → logprob: -9.761183738708496
    7. '(),' → logprob: -10.386183738708496
    8. ']:
' → logprob: -10.386183738708496
    9. ']]:
' → logprob: -10.511183738708496
    10. '<|end|>' → logprob: -10.636183738708496

Token 2070: ' int' (ID: 677)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.43155813217163086
    2. 'List' → logprob: -1.6815581321716309
    3. 'int' → logprob: -1.8065581321716309
    4. ' float' → logprob: -9.806558609008789
    5. ']' → logprob: -10.806558609008789
    6. '[int' → logprob: -10.806558609008789
    7. ' List' → logprob: -10.931558609008789
    8. '```' → logprob: -10.931558609008789
    9. 'list' → logprob: -11.306558609008789
    10. '   ' → logprob: -11.681558609008789

Token 2071: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.36378800868988037
    2. ']:
' → logprob: -1.2387880086898804
    3. ']:' → logprob: -4.36378812789917
    4. ']' → logprob: -6.98878812789917
    5. '):
' → logprob: -7.61378812789917
    6. '():
' → logprob: -8.113787651062012
    7. ']:
' → logprob: -8.113787651062012
    8. ']]:
' → logprob: -8.988787651062012
    9. '):' → logprob: -10.113787651062012
    10. ',float' → logprob: -10.613787651062012

Token 2072: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.5916998982429504
    2. 'float' → logprob: -0.8416998982429504
    3. 'List' → logprob: -4.216700077056885
    4. ' float' → logprob: -7.716700077056885
    5. ' int' → logprob: -8.716699600219727
    6. '[int' → logprob: -8.966699600219727
    7. '```' → logprob: -10.591699600219727
    8. 'list' → logprob: -10.716699600219727
    9. ' List' → logprob: -10.966699600219727
    10. 'str' → logprob: -10.966699600219727

Token 2073: ',' (ID: 11)
  Prédit: ']:
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.6011678576469421
    2. ',' → logprob: -1.101167917251587
    3. ']' → logprob: -2.726167917251587
    4. ']:' → logprob: -3.476167917251587
    5. '):
' → logprob: -4.601167678833008
    6. '():
' → logprob: -5.226167678833008
    7. ']>' → logprob: -6.476167678833008
    8. ']()' → logprob: -6.976167678833008
    9. ']]:
' → logprob: -6.976167678833008
    10. '):' → logprob: -7.476167678833008

Token 2074: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.07935414463281631
    2. 'float' → logprob: -2.5793540477752686
    3. 'List' → logprob: -8.079354286193848
    4. ' int' → logprob: -9.829354286193848
    5. ' float' → logprob: -10.454354286193848
    6. '[int' → logprob: -10.954354286193848
    7. 'str' → logprob: -11.079354286193848
    8. '```' → logprob: -11.204354286193848
    9. ')' → logprob: -12.329354286193848
    10. 'list' → logprob: -12.704354286193848

Token 2075: ',' (ID: 11)
  Prédit: ']:
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.11237536370754242
    2. ']:' → logprob: -2.862375259399414
    3. '():
' → logprob: -3.487375259399414
    4. ']' → logprob: -4.987375259399414
    5. ',' → logprob: -5.237375259399414
    6. '()' → logprob: -5.987375259399414
    7. '):
' → logprob: -6.737375259399414
    8. ']()' → logprob: -7.112375259399414
    9. ']:
' → logprob: -7.737375259399414
    10. '():' → logprob: -7.862375259399414

Token 2076: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.7750289440155029
    2. 'int' → logprob: -0.9000289440155029
    3. 'float' → logprob: -2.025028944015503
    4. ')' → logprob: -8.650029182434082
    5. ']' → logprob: -8.650029182434082
    6. 'list' → logprob: -9.400029182434082
    7. 'str' → logprob: -9.525029182434082
    8. '[int' → logprob: -9.775029182434082
    9. '```' → logprob: -9.900029182434082
    10. ' List' → logprob: -10.150029182434082

Token 2077: '[int' (ID: 40124)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.16033309698104858
    2. '[int' → logprob: -1.9103331565856934
    3. 'float' → logprob: -9.285332679748535
    4. 'int' → logprob: -12.160332679748535
    5. '[
' → logprob: -12.285332679748535
    6. '```' → logprob: -13.410332679748535
    7. '<float' → logprob: -13.660332679748535
    8. '[List' → logprob: -13.785332679748535
    9. ',float' → logprob: -14.035332679748535
    10. ']' → logprob: -14.410332679748535

Token 2078: ']]:
' (ID: 183340)
  Prédit: ']:
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.1269972026348114
    2. ']]:
' → logprob: -3.001997232437134
    3. ']' → logprob: -3.251997232437134
    4. ',' → logprob: -3.876997232437134
    5. ']:' → logprob: -5.251996994018555
    6. '[int' → logprob: -5.876996994018555
    7. '[' → logprob: -7.376996994018555
    8. ']:

' → logprob: -7.751996994018555
    9. ']:
' → logprob: -8.501996994018555
    10. '],' → logprob: -8.626996994018555

Token 2079: '   ' (ID: 271)
  Prédit: '():
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():
' → logprob: -1.0025367736816406
    2. '   ' → logprob: -1.1275367736816406
    3. '():' → logprob: -1.6275367736816406
    4. '()' → logprob: -2.3775367736816406
    5. '```' → logprob: -4.502536773681641
    6. ':' → logprob: -5.752536773681641
    7. 'def' → logprob: -6.502536773681641
    8. '()>' → logprob: -6.752536773681641
    9. '()->' → logprob: -7.252536773681641
    10. '():
' → logprob: -8.50253677368164

Token 2080: ' import' (ID: 1588)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.0451754331588745
    2. '   ' → logprob: -1.1701754331588745
    3. 'a' → logprob: -1.7951754331588745
    4. ' n' → logprob: -2.920175552368164
    5. 'line' → logprob: -3.420175552368164
    6. ' line' → logprob: -4.045175552368164
    7. '_' → logprob: -4.045175552368164
    8. 'l' → logprob: -4.545175552368164
    9. 'import' (adapté à ' import') → logprob: -4.545175552368164
    10. '```' → logprob: -5.170175552368164

Token 2081: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -4.60414821645827e-06
    2. ' sys' → logprob: -12.500004768371582
    3. '=sys' → logprob: -14.250004768371582
    4. 'math' → logprob: -16.750003814697266
    5. '(sys' → logprob: -17.250003814697266
    6. '	sys' → logprob: -19.000003814697266
    7. '```' → logprob: -19.125003814697266
    8. 'io' → logprob: -20.000003814697266
    9. '
' → logprob: -20.625003814697266
    10. 'os' → logprob: -21.125003814697266

Token 2082: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07310711592435837
    2. 'data' → logprob: -3.3231070041656494
    3. 'input' → logprob: -3.9481070041656494
    4. '
' → logprob: -5.3231072425842285
    5. 'line' → logprob: -5.5731072425842285
    6. 'n' → logprob: -6.1981072425842285
    7. '```' → logprob: -6.6981072425842285
    8. '    
' → logprob: -7.5731072425842285
    9. 'lines' → logprob: -7.5731072425842285
    10. ' readline' → logprob: -7.9481072425842285

Token 2083: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04311200976371765
    2. 'input' → logprob: -3.91811203956604
    3. 'n' → logprob: -4.168111801147461
    4. 'data' → logprob: -5.418111801147461
    5. 'lines' → logprob: -6.793111801147461
    6. 'r' → logprob: -8.043111801147461
    7. 'read' → logprob: -8.668111801147461
    8. '
' → logprob: -8.793111801147461
    9. 'line' → logprob: -9.043111801147461
    10. '```' → logprob: -9.293111801147461

Token 2084: ' input' (ID: 3422)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6025518774986267
    2. 'n' → logprob: -0.9775518774986267
    3. 'N' → logprob: -3.2275519371032715
    4. 'input' (adapté à ' input') → logprob: -4.1025519371032715
    5. 'data' → logprob: -4.3525519371032715
    6. ' n' → logprob: -5.4775519371032715
    7. ' input' → logprob: -7.3525519371032715
    8. 'read' → logprob: -7.3525519371032715
    9. ' data' → logprob: -8.352551460266113
    10. 'lines' → logprob: -8.352551460266113

Token 2085: ' =' (ID: 314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3070637285709381
    2. '().' → logprob: -2.0570638179779053
    3. '_data' → logprob: -2.8070638179779053
    4. '_line' → logprob: -3.3070638179779053
    5. ' =' → logprob: -4.182063579559326
    6. '=' → logprob: -4.307063579559326
    7. '_lines' → logprob: -5.307063579559326
    8. '_' → logprob: -6.307063579559326
    9. 'data' → logprob: -6.307063579559326
    10. '()
' → logprob: -7.807063579559326

Token 2086: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.007111863698810339
    2. ' sys' → logprob: -5.0071120262146
    3. 'input' → logprob: -7.8821120262146
    4. '=sys' → logprob: -11.257111549377441
    5. 'lambda' → logprob: -12.882111549377441
    6. ' input' → logprob: -13.382111549377441
    7. '	sys' → logprob: -13.882111549377441
    8. '(sys' → logprob: -14.757111549377441
    9. '
' → logprob: -15.007111549377441
    10. 'system' → logprob: -16.132112503051758

Token 2087: '.stdin' (ID: 93480)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.10264992713928223
    2. '.' → logprob: -2.9776499271392822
    3. '.stdin' → logprob: -3.1026499271392822
    4. '().' → logprob: -7.227649688720703
    5. '.stdout' → logprob: -7.977649688720703
    6. 'd' → logprob: -8.852649688720703
    7. '.read' → logprob: -8.977649688720703
    8. '```' → logprob: -9.352649688720703
    9. 'stdin' → logprob: -10.227649688720703
    10. '.readlines' → logprob: -10.227649688720703

Token 2088: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.05137583240866661
    2. 'read' → logprob: -3.0513758659362793
    3. '_read' → logprob: -6.301375865936279
    4. '.' → logprob: -8.051375389099121
    5. '().' → logprob: -8.301375389099121
    6. ' readline' → logprob: -9.176375389099121
    7. '.read' → logprob: -9.301375389099121
    8. '_reader' → logprob: -10.551375389099121
    9. '.readlines' → logprob: -10.551375389099121
    10. '()' → logprob: -10.801375389099121

Token 2089: '
' (ID: 198)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2058560699224472
    2. '()
' → logprob: -1.7058560848236084
    3. '().' → logprob: -5.580855846405029
    4. '
' → logprob: -8.080856323242188
    5. '()\' → logprob: -9.580856323242188
    6. '()

' → logprob: -9.705856323242188
    7. '())' → logprob: -10.080856323242188
    8. '(' → logprob: -10.455856323242188
    9. 'return' → logprob: -10.580856323242188
    10. 'def' → logprob: -10.705856323242188

Token 2090: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5208483338356018
    2. '()
' → logprob: -1.520848274230957
    3. '()' → logprob: -1.770848274230957
    4. '
' → logprob: -5.270848274230957
    5. 'def' → logprob: -5.520848274230957
    6. '().' → logprob: -5.895848274230957
    7. '    
' → logprob: -6.645848274230957
    8. 'n' → logprob: -7.020848274230957
    9. 'num' → logprob: -7.020848274230957
    10. 'line' → logprob: -8.020848274230957

Token 2091: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' (adapté à ' N') → logprob: -0.1226269081234932
    2. 'n' → logprob: -2.372627019882202
    3. 'R' → logprob: -4.997626781463623
    4. 'K' → logprob: -4.997626781463623
    5. '   ' → logprob: -6.122626781463623
    6. 'L' → logprob: -6.622626781463623
    7. 'T' → logprob: -6.997626781463623
    8. 'a' → logprob: -7.372626781463623
    9. 'A' → logprob: -7.497626781463623
    10. 'k' → logprob: -7.747626781463623

Token 2092: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009820547886192799
    2. ',K' → logprob: -4.634820461273193
    3. ' ,' → logprob: -10.759820938110352
    4. ',k' → logprob: -11.509820938110352
    5. ',M' → logprob: -11.634820938110352
    6. ',C' → logprob: -12.009820938110352
    7. ',Q' → logprob: -12.509820938110352
    8. ',L' → logprob: -12.884820938110352
    9. 'K' → logprob: -13.009820938110352
    10. ',T' → logprob: -13.134820938110352

Token 2093: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.032309021800756454
    2. 'M' → logprob: -3.532309055328369
    3. 'L' → logprob: -7.407309055328369
    4. 'C' → logprob: -7.407309055328369
    5. 'S' → logprob: -7.407309055328369
    6. 'T' → logprob: -8.657308578491211
    7. 'D' → logprob: -9.282308578491211
    8. 'A' → logprob: -9.282308578491211
    9. 'R' → logprob: -9.282308578491211
    10. ' K' → logprob: -9.282308578491211

Token 2094: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001681367284618318
    2. '=' → logprob: -6.751681327819824
    3. ' ,' → logprob: -7.751681327819824
    4. ' =' → logprob: -9.626681327819824
    5. ',K' → logprob: -12.126681327819824
    6. ',N' → logprob: -12.501681327819824
    7. ',E' → logprob: -14.001681327819824
    8. ',C' → logprob: -14.251681327819824
    9. ',int' → logprob: -14.501681327819824
    10. ',
' → logprob: -14.876681327819824

Token 2095: ' T' (ID: 353)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.020819799974560738
    2. 'D' → logprob: -5.020819664001465
    3. 'M' → logprob: -5.520819664001465
    4. 'X' → logprob: -6.145819664001465
    5. 'S' → logprob: -6.145819664001465
    6. 'A' → logprob: -6.270819664001465
    7. 'C' → logprob: -6.645819664001465
    8. 'T' → logprob: -7.145819664001465
    9. 'U' → logprob: -7.395819664001465
    10. 'length' → logprob: -8.020819664001465

Token 2096: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.020677708089351654
    2. '=' → logprob: -4.02067756652832
    3. ' =' → logprob: -6.02067756652832
    4. ' ,' → logprob: -9.52067756652832
    5. ',N' → logprob: -11.77067756652832
    6. ',T' → logprob: -13.14567756652832
    7. ',
' → logprob: -13.39567756652832
    8. ')' → logprob: -13.77067756652832
    9. ' ' → logprob: -14.02067756652832
    10. ',K' → logprob: -14.02067756652832

Token 2097: ' U' (ID: 601)
  Prédit: 'U'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'U' → logprob: -0.04057928919792175
    2. 'L' → logprob: -3.665579319000244
    3. 'S' → logprob: -5.540579319000244
    4. 'X' → logprob: -5.915579319000244
    5. 'A' → logprob: -6.165579319000244
    6. 'V' → logprob: -6.540579319000244
    7. 'D' → logprob: -6.665579319000244
    8. 'base' → logprob: -7.415579319000244
    9. 'B' → logprob: -7.540579319000244
    10. 'R' → logprob: -7.790579319000244

Token 2098: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003725376445800066
    2. '=' → logprob: -6.128725528717041
    3. ' =' → logprob: -7.128725528717041
    4. ' ,' → logprob: -7.253725528717041
    5. ',
' → logprob: -11.378725051879883
    6. '   ' → logprob: -12.378725051879883
    7. ',U' → logprob: -13.128725051879883
    8. '<|end|>' → logprob: -13.253725051879883
    9. ' ' → logprob: -13.503725051879883
    10. ')' → logprob: -13.628725051879883

Token 2099: ' V' (ID: 631)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.00012809180771000683
    2. ' V' → logprob: -9.000127792358398
    3. '   ' → logprob: -13.500127792358398
    4. ' ' → logprob: -14.250127792358398
    5. '
' → logprob: -14.375127792358398
    6. 'U' → logprob: -14.875127792358398
    7. 'D' → logprob: -15.687627792358398
    8. '	V' → logprob: -16.0001277923584
    9. '```' → logprob: -16.1251277923584
    10. '  ' → logprob: -16.3126277923584

Token 2100: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01463657058775425
    2. '=' → logprob: -4.389636516571045
    3. ' =' → logprob: -6.264636516571045
    4. ' ,' → logprob: -8.764636993408203
    5. ',K' → logprob: -11.014636993408203
    6. '   ' → logprob: -11.514636993408203
    7. ',T' → logprob: -11.639636993408203
    8. ',U' → logprob: -12.014636993408203
    9. ',C' → logprob: -12.389636993408203
    10. ',Q' → logprob: -12.514636993408203

Token 2101: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.007138377986848354
    2. 'S' → logprob: -6.257138252258301
    3. 'C' → logprob: -6.382138252258301
    4. 'D' → logprob: -6.507138252258301
    5. 'X' → logprob: -7.382138252258301
    6. 'M' → logprob: -7.757138252258301
    7. 'length' → logprob: -8.1321382522583
    8. 'R' → logprob: -8.2571382522583
    9. 'P' → logprob: -9.0071382522583
    10. 'A' → logprob: -10.0071382522583

Token 2102: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.14275699853897095
    2. ' =' → logprob: -2.017756938934326
    3. ',' → logprob: -10.017757415771484
    4. '=input' → logprob: -10.517757415771484
    5. '=line' → logprob: -12.142757415771484
    6. '=int' → logprob: -13.267757415771484
    7. ' ' → logprob: -13.392757415771484
    8. '   ' → logprob: -15.017757415771484
    9. ' ' → logprob: -15.642757415771484
    10. '＝' → logprob: -15.767757415771484

Token 2103: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.029799317941069603
    2. ' map' → logprob: -3.529799222946167
    3. 'list' → logprob: -10.279799461364746
    4. '[' → logprob: -11.654799461364746
    5. '(map' → logprob: -13.279799461364746
    6. '   ' → logprob: -13.779799461364746
    7. '
' → logprob: -13.904799461364746
    8. '	map' → logprob: -13.904799461364746
    9. ' list' → logprob: -15.154799461364746
    10. 'tuple' → logprob: -15.279799461364746

Token 2104: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.10022209584712982
    2. 'int' → logprob: -2.350222110748291
    3. 'input' → logprob: -11.475221633911133
    4. '(
' → logprob: -13.475221633911133
    5. '(' → logprob: -13.850221633911133
    6. '[int' → logprob: -13.975221633911133
    7. '(input' → logprob: -14.725221633911133
    8. 'lambda' → logprob: -14.850221633911133
    9. '```' → logprob: -14.975221633911133
    10. ' int' → logprob: -15.350221633911133

Token 2105: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.5878855586051941
    2. ',input' → logprob: -1.4628856182098389
    3. 'input' → logprob: -1.8378856182098389
    4. ',' → logprob: -3.212885618209839
    5. ')' → logprob: -4.71288537979126
    6. '(sys' → logprob: -6.08788537979126
    7. '(' → logprob: -6.83788537979126
    8. '=input' → logprob: -7.71288537979126
    9. '   ' → logprob: -8.587885856628418
    10. 'sys' → logprob: -8.712885856628418

Token 2106: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -2.7610454708337784e-05
    2. ' input' → logprob: -10.500027656555176
    3. '
' → logprob: -20.50002670288086
    4. '=input' → logprob: -21.00002670288086
    5. '(input' → logprob: -21.00002670288086
    6. '<input' → logprob: -21.62502670288086
    7. ',input' → logprob: -21.87502670288086
    8. 'sys' → logprob: -22.00002670288086
    9. '	input' → logprob: -22.12502670288086
    10. ')' → logprob: -22.50002670288086

Token 2107: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0001097417771234177
    2. '()' → logprob: -9.125109672546387
    3. '())' → logprob: -15.125109672546387
    4. '(' → logprob: -15.625109672546387
    5. '()
' → logprob: -15.625109672546387
    6. ' ().' → logprob: -16.500110626220703
    7. ')' → logprob: -17.250110626220703
    8. '()[' → logprob: -17.625110626220703
    9. '   ' → logprob: -18.625110626220703
    10. '().__' → logprob: -18.875110626220703

Token 2108: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.04975699260830879
    2. 'strip' → logprob: -3.0497570037841797
    3. 'rstrip' → logprob: -6.92475700378418
    4. '().' → logprob: -9.17475700378418
    5. 'read' → logprob: -10.17475700378418
    6. '(split' → logprob: -10.29975700378418
    7. ')' → logprob: -12.79975700378418
    8. ' split' → logprob: -13.17475700378418
    9. 'plit' → logprob: -13.54975700378418
    10. 's' → logprob: -13.92475700378418

Token 2109: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03690814971923828
    2. '())' → logprob: -3.4119081497192383
    3. '()' → logprob: -6.661908149719238
    4. ')
' → logprob: -6.661908149719238
    5. '())
' → logprob: -7.661908149719238
    6. '   ' → logprob: -8.536908149719238
    7. '()
' → logprob: -11.411908149719238
    8. '(' → logprob: -11.786908149719238
    9. '       ' → logprob: -12.286908149719238
    10. '().' → logprob: -13.411908149719238

Token 2110: '   ' (ID: 271)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.31614381074905396
    2. '   ' → logprob: -1.3161437511444092
    3. '	car' → logprob: -6.566143989562988
    4. '    
' → logprob: -8.066143989562988
    5. '
' → logprob: -8.441143989562988
    6. '```' → logprob: -8.691143989562988
    7. 'Car' → logprob: -9.316143989562988
    8. 'return' → logprob: -9.441143989562988
    9. 'positions' → logprob: -9.566143989562988
    10. 'c' → logprob: -9.691143989562988

Token 2111: ' carrots' (ID: 91266)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.0009408812038600445
    2. '   ' → logprob: -7.250940799713135
    3. 'C' → logprob: -9.375941276550293
    4. 'positions' → logprob: -9.625941276550293
    5. 'c' → logprob: -10.000941276550293
    6. 'Car' → logprob: -12.125941276550293
    7. 'A' → logprob: -12.500941276550293
    8. 'arr' → logprob: -12.625941276550293
    9. 'M' → logprob: -12.750941276550293
    10. ' carrot' → logprob: -12.750941276550293

Token 2112: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.18021859228610992
    2. ' =' → logprob: -1.8052185773849487
    3. '_positions' → logprob: -7.805218696594238
    4. 'positions' → logprob: -10.680218696594238
    5. '   ' → logprob: -11.180218696594238
    6. '=[]' → logprob: -11.680218696594238
    7. '=[]
' → logprob: -11.805218696594238
    8. '	' → logprob: -13.180218696594238
    9. ' ' → logprob: -13.305218696594238
    10. 'Positions' → logprob: -13.430218696594238

Token 2113: ' [' (ID: 723)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.002494087442755699
    2. ' list' → logprob: -6.002493858337402
    3. '[list' → logprob: -11.002493858337402
    4. '[]' → logprob: -14.127493858337402
    5. '[]
' → logprob: -14.252493858337402
    6. 'sorted' → logprob: -15.252493858337402
    7. '[' → logprob: -16.62749481201172
    8. '	list' → logprob: -18.62749481201172
    9. '(list' → logprob: -18.87749481201172
    10. 'List' → logprob: -18.87749481201172

Token 2114: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00018565983918961138
    2. '0' → logprob: -9.7501859664917
    3. '*' → logprob: -10.0001859664917
    4. ']int' → logprob: -10.2501859664917
    5. ']' → logprob: -11.0001859664917
    6. '
' → logprob: -11.3751859664917
    7. '   ' → logprob: -12.2501859664917
    8. ' int' → logprob: -12.3751859664917
    9. '[int' → logprob: -12.7501859664917
    10. '(int' → logprob: -13.6251859664917

Token 2115: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.007680088747292757
    2. 'input' → logprob: -5.1326799392700195
    3. '(x' → logprob: -6.7576799392700195
    4. '(' → logprob: -8.25767993927002
    5. '(
' → logprob: -9.00767993927002
    6. '()' → logprob: -9.50767993927002
    7. '(i' → logprob: -9.75767993927002
    8. ']' → logprob: -10.63267993927002
    9. '
' → logprob: -10.75767993927002
    10. '()]' → logprob: -11.38267993927002

Token 2116: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.7279423475265503
    2. '()' → logprob: -0.9779423475265503
    3. '().' → logprob: -2.22794246673584
    4. '()]' → logprob: -3.60294246673584
    5. '()
' → logprob: -5.22794246673584
    6. '())
' → logprob: -8.85294246673584
    7. '()]
' → logprob: -8.97794246673584
    8. '()[' → logprob: -9.10294246673584
    9. ')' → logprob: -9.72794246673584
    10. '()),' → logprob: -9.85294246673584

Token 2117: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.003981161862611771
    2. '().' → logprob: -5.753981113433838
    3. 'for' → logprob: -7.253981113433838
    4. '()]' → logprob: -10.503981590270996
    5. '()
' → logprob: -10.878981590270996
    6. '())' → logprob: -11.003981590270996
    7. ' for' → logprob: -11.378981590270996
    8. ')' → logprob: -11.878981590270996
    9. '()[' → logprob: -12.003981590270996
    10. '(' → logprob: -12.628981590270996

Token 2118: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -4.417976379045285e-05
    2. '_i' → logprob: -11.250043869018555
    3. '_in' → logprob: -11.250043869018555
    4. '_
' → logprob: -11.750043869018555
    5. '_range' → logprob: -11.875043869018555
    6. '_=' → logprob: -14.250043869018555
    7. ' _' → logprob: -14.750043869018555
    8. '
' → logprob: -15.125043869018555
    9. '_
' → logprob: -15.250043869018555
    10. '_]' → logprob: -15.750043869018555

Token 2119: ' in' (ID: 306)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2645111680030823
    2. 'in' → logprob: -1.6395111083984375
    3. 'range' → logprob: -3.3895111083984375
    4. ' in' → logprob: -5.7645111083984375
    5. 'i' → logprob: -6.8895111083984375
    6. ' range' → logprob: -8.389511108398438
    7. '_i' → logprob: -8.889511108398438
    8. '_in' → logprob: -10.639511108398438
    9. '_range' → logprob: -11.389511108398438
    10. '0' → logprob: -12.264511108398438

Token 2120: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -2.2603901015827432e-05
    2. ' range' → logprob: -10.750022888183594
    3. '_range' → logprob: -14.250022888183594
    4. '_' → logprob: -14.625022888183594
    5. '
' → logprob: -18.125022888183594
    6. '	range' → logprob: -18.125022888183594
    7. '(range' → logprob: -19.375022888183594
    8. 'rang' → logprob: -20.000022888183594
    9. '.range' → logprob: -20.375022888183594
    10. '   ' → logprob: -20.750022888183594

Token 2121: '(N' (ID: 10564)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.6402172446250916
    2. '(N' → logprob: -1.1402173042297363
    3. 'range' → logprob: -1.8902173042297363
    4. ' range' → logprob: -6.265217304229736
    5. '(' → logprob: -9.890216827392578
    6. ' N' → logprob: -11.015216827392578
    7. 'L' → logprob: -11.265216827392578
    8. '   ' → logprob: -11.765216827392578
    9. '(range' → logprob: -11.765216827392578
    10. 'Range' → logprob: -12.015216827392578

Token 2122: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00016754455282352865
    2. ')]
' → logprob: -9.625167846679688
    3. ')' → logprob: -9.750167846679688
    4. '   ' → logprob: -10.625167846679688
    5. ']' → logprob: -11.625167846679688
    6. ')])' → logprob: -12.875167846679688
    7. ')]
' → logprob: -13.375167846679688
    8. '       ' → logprob: -13.750167846679688
    9. ' )' → logprob: -13.875167846679688
    10. '()]' → logprob: -14.125167846679688

Token 2123: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002831626683473587
    2. 'return' → logprob: -6.87783145904541
    3. '
' → logprob: -7.00283145904541
    4. '    
' → logprob: -7.75283145904541
    5. ' return' → logprob: -8.50283145904541
    6. '<|end|>' → logprob: -8.75283145904541
    7. '	return' → logprob: -10.75283145904541
    8. '  
' → logprob: -10.75283145904541
    9. ' 
' → logprob: -11.37783145904541
    10. ' ' → logprob: -11.75283145904541

Token 2124: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.000909913913346827
    2. '   ' → logprob: -7.250909805297852
    3. ' return' → logprob: -8.625909805297852
    4. '
' → logprob: -11.750909805297852
    5. '```' → logprob: -11.750909805297852
    6. '	return' → logprob: -12.875909805297852
    7. ':return' → logprob: -14.250909805297852
    8. 'car' → logprob: -14.500909805297852
    9. 'eturn' → logprob: -15.375909805297852
    10. '@return' → logprob: -15.750909805297852

Token 2125: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -1.981667537620524e-06
    2. '(N' → logprob: -13.250001907348633
    3. ' N' → logprob: -16.250001907348633
    4. '[N' → logprob: -20.500001907348633
    5. '   ' → logprob: -21.000001907348633
    6. '	N' → logprob: -21.250001907348633
    7. '<N' → logprob: -25.000001907348633
    8. '(' → logprob: -25.250001907348633
    9. '_N' → logprob: -25.750001907348633
    10. ' (' → logprob: -25.875001907348633

Token 2126: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012352262856438756
    2. ',K' → logprob: -6.751235008239746
    3. ' ,' → logprob: -10.501235008239746
    4. ',
' → logprob: -10.876235008239746
    5. ',N' → logprob: -11.126235008239746
    6. '   ' → logprob: -14.501235008239746
    7. 'K' → logprob: -14.876235008239746
    8. ',k' → logprob: -14.876235008239746
    9. ',None' → logprob: -15.251235008239746
    10. '‌,' → logprob: -15.376235008239746

Token 2127: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -7.505351095460355e-05
    2. ' K' → logprob: -9.500075340270996
    3. '   ' → logprob: -16.50007438659668
    4. '
' → logprob: -19.25007438659668
    5. '	K' → logprob: -19.37507438659668
    6. '  ' → logprob: -19.37507438659668
    7. ',K' → logprob: -19.62507438659668
    8. '    ' → logprob: -19.75007438659668
    9. ' ' → logprob: -19.87507438659668
    10. '>K' → logprob: -20.62507438659668

Token 2128: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005223324988037348
    2. 'K' → logprob: -6.255223274230957
    3. ' ,' → logprob: -6.255223274230957
    4. ',T' → logprob: -7.505223274230957
    5. 'T' → logprob: -7.880223274230957
    6. ',K' → logprob: -8.505223274230957
    7. '   ' → logprob: -8.755223274230957
    8. '  ' → logprob: -11.130223274230957
    9. ',
' → logprob: -11.130223274230957
    10. ' ' → logprob: -11.505223274230957

Token 2129: ' T' (ID: 353)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -2.2007883671903983e-05
    2. ' T' → logprob: -10.750021934509277
    3. 'L' → logprob: -15.125021934509277
    4. 'car' → logprob: -17.125022888183594
    5. '   ' → logprob: -17.125022888183594
    6. ' ' → logprob: -17.250022888183594
    7. 'K' → logprob: -17.250022888183594
    8. 'M' → logprob: -17.875022888183594
    9. 'U' → logprob: -18.250022888183594
    10. '
' → logprob: -18.500022888183594

Token 2130: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006198607385158539
    2. ' ,' → logprob: -5.506198406219482
    3. ',U' → logprob: -7.006198406219482
    4. ',K' → logprob: -8.00619888305664
    5. '   ' → logprob: -8.38119888305664
    6. 'U' → logprob: -8.38119888305664
    7. ',
' → logprob: -9.00619888305664
    8. 'K' → logprob: -9.38119888305664
    9. '```' → logprob: -10.38119888305664
    10. ',V' → logprob: -10.50619888305664

Token 2131: ' U' (ID: 601)
  Prédit: 'U'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'U' → logprob: -7.779520092299208e-05
    2. ' U' → logprob: -9.500078201293945
    3. '```' → logprob: -13.625078201293945
    4. '   ' → logprob: -14.000078201293945
    5. '
' → logprob: -15.250078201293945
    6. '	U' → logprob: -15.875078201293945
    7. '
' → logprob: -16.500078201293945
    8. ' ' → logprob: -16.625078201293945
    9. ',U' → logprob: -17.375078201293945
    10. '

' → logprob: -17.500078201293945

Token 2132: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004101315978914499
    2. ',V' → logprob: -6.254101276397705
    3. ' ,' → logprob: -6.504101276397705
    4. 'V' → logprob: -7.504101276397705
    5. ',
' → logprob: -9.879101753234863
    6. '   ' → logprob: -11.129101753234863
    7. '```' → logprob: -11.129101753234863
    8. '`,' → logprob: -11.504101753234863
    9. ' ' → logprob: -11.504101753234863
    10. ' V' → logprob: -11.754101753234863

Token 2133: ' V' (ID: 631)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -6.034592388459714e-06
    2. ' V' → logprob: -12.375005722045898
    3. '
' → logprob: -13.625005722045898
    4. '
' → logprob: -15.500005722045898
    5. '   ' → logprob: -16.5000057220459
    6. '```' → logprob: -17.0000057220459
    7. '	V' → logprob: -17.1250057220459
    8. '

' → logprob: -17.2500057220459
    9. 'int' → logprob: -17.7500057220459
    10. '    ' → logprob: -18.6250057220459

Token 2134: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5949837565422058
    2. 'L' → logprob: -0.9699837565422058
    3. ',L' → logprob: -3.2199838161468506
    4. '   ' → logprob: -3.8449838161468506
    5. ' L' → logprob: -5.8449835777282715
    6. ' ,' → logprob: -5.9699835777282715
    7. 'car' → logprob: -6.3449835777282715
    8. '```' → logprob: -8.96998405456543
    9. ',c' → logprob: -9.46998405456543
    10. ' carrots' → logprob: -9.59498405456543

Token 2135: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -1.676292231422849e-05
    2. ' L' → logprob: -11.000017166137695
    3. '   ' → logprob: -17.875017166137695
    4. '
' → logprob: -18.250017166137695
    5. '```' → logprob: -19.750017166137695
    6. '	L' → logprob: -20.375017166137695
    7. '    ' → logprob: -21.250017166137695
    8. '
' → logprob: -21.250017166137695
    9. ' ' → logprob: -21.375017166137695
    10. 'Ls' → logprob: -21.750017166137695

Token 2136: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2137: ' carrots' (ID: 91266)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -9.13388703338569e-06
    2. ' carrots' → logprob: -11.625009536743164
    3. 'cars' → logprob: -16.000009536743164
    4. '[' → logprob: -18.125009536743164
    5. '```' → logprob: -19.750009536743164
    6. '(car' → logprob: -20.125009536743164
    7. 'c' → logprob: -20.250009536743164
    8. 'care' → logprob: -20.250009536743164
    9. '   ' → logprob: -20.625009536743164
    10. 'sorted' → logprob: -20.750009536743164

Token 2138: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2139: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.09536196291446686
    2. 'if' → logprob: -2.4703619480133057
    3. '```' → logprob: -5.095362186431885
    4. '#' → logprob: -8.720361709594727
    5. '<|end|>' → logprob: -10.095361709594727
    6. ' if' → logprob: -10.220361709594727
    7. 'class' → logprob: -10.845361709594727
    8. '``' → logprob: -12.095361709594727
    9. 'import' → logprob: -12.595361709594727
    10. 'If' → logprob: -14.095361709594727

Token 2140: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.00027849749312736094
    2. ' main' → logprob: -8.25027847290039
    3. 'run' → logprob: -11.00027847290039
    4. 'solve' → logprob: -15.00027847290039
    5. '_main' → logprob: -16.37527847290039
    6. ' run' → logprob: -16.75027847290039
    7. 'def' → logprob: -18.00027847290039
    8. '```' → logprob: -18.25027847290039
    9. '
' → logprob: -19.00027847290039
    10. 'simulate' → logprob: -19.12527847290039

Token 2141: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.002499675378203392
    2. '():
' → logprob: -6.002499580383301
    3. '()' → logprob: -10.7524995803833
    4. '():
' → logprob: -13.3774995803833
    5. ' ():' → logprob: -14.3774995803833
    6. '():

' → logprob: -15.8774995803833
    7. '()>' → logprob: -16.127500534057617
    8. '(' → logprob: -16.752500534057617
    9. '_' → logprob: -17.127500534057617
    10. '().' → logprob: -17.127500534057617

Token 2142: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012990685179829597
    2. 'N' → logprob: -4.387990474700928
    3. '```' → logprob: -8.012990951538086
    4. '
' → logprob: -9.637990951538086
    5. 'def' → logprob: -10.762990951538086
    6. 'n' → logprob: -10.887990951538086
    7. '	N' → logprob: -11.012990951538086
    8. '``' → logprob: -11.637990951538086
    9. 'args' → logprob: -12.512990951538086
    10. '(N' → logprob: -12.637990951538086

Token 2143: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' (adapté à ' N') → logprob: -0.002903539687395096
    2. '   ' → logprob: -5.877903461456299
    3. 'import' → logprob: -9.377903938293457
    4. ' N' → logprob: -11.377903938293457
    5. '#' → logprob: -14.377903938293457
    6. '	N' → logprob: -14.377903938293457
    7. '(N' → logprob: -14.752903938293457
    8. '```' → logprob: -14.877903938293457
    9. 'n' → logprob: -15.377903938293457
    10. '
' → logprob: -16.12790298461914

Token 2144: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010574605548754334
    2. '   ' → logprob: -7.0010576248168945
    3. ' ,' → logprob: -9.501057624816895
    4. '=' → logprob: -10.376057624816895
    5. ' =' → logprob: -11.376057624816895
    6. ',K' → logprob: -11.876057624816895
    7. '    ' → logprob: -12.876057624816895
    8. ':' → logprob: -13.126057624816895
    9. ',N' → logprob: -13.126057624816895
    10. '       ' → logprob: -13.376057624816895

Token 2145: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -8.061054359131958e-06
    2. ' K' → logprob: -11.750007629394531
    3. '   ' → logprob: -16.37500762939453
    4. '    
' → logprob: -18.62500762939453
    5. '  ' → logprob: -19.00000762939453
    6. '<|end|>' → logprob: -19.75000762939453
    7. '
' → logprob: -19.87500762939453
    8. ' ' → logprob: -20.37500762939453
    9. '    ' → logprob: -20.50000762939453
    10. ')' → logprob: -21.00000762939453

Token 2146: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.975612187583465e-05
    2. ',K' → logprob: -11.250029563903809
    3. ',T' → logprob: -11.875029563903809
    4. ' ,' → logprob: -12.000029563903809
    5. ',
' → logprob: -13.500029563903809
    6. '=' → logprob: -14.500029563903809
    7. '   ' → logprob: -15.000029563903809
    8. ',V' → logprob: -15.125029563903809
    9. ',U' → logprob: -15.250029563903809
    10. ',Q' → logprob: -15.375029563903809

Token 2147: ' T' (ID: 353)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -1.0206720617134124e-05
    2. ' T' → logprob: -11.50001049041748
    3. '   ' → logprob: -18.250009536743164
    4. '<|end|>' → logprob: -19.125009536743164
    5. ' ' → logprob: -19.750009536743164
    6. '  ' → logprob: -20.125009536743164
    7. '
' → logprob: -20.500009536743164
    8. 'int' → logprob: -21.250009536743164
    9. '...' → logprob: -22.000009536743164
    10. '    ' → logprob: -22.125009536743164

Token 2148: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.107425062713446e-06
    2. ',U' → logprob: -12.000006675720215
    3. ' ,' → logprob: -14.000006675720215
    4. ',V' → logprob: -17.87500762939453
    5. '   ' → logprob: -18.12500762939453
    6. 'U' → logprob: -19.50000762939453
    7. '=' → logprob: -19.87500762939453
    8. ',K' → logprob: -20.62500762939453
    9. '_,' → logprob: -20.62500762939453
    10. '```' → logprob: -20.87500762939453

Token 2149: ' U' (ID: 601)
  Prédit: 'U'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'U' → logprob: -6.869017852295656e-06
    2. ' U' → logprob: -12.000006675720215
    3. '   ' → logprob: -14.625006675720215
    4. '	U' → logprob: -16.75000762939453
    5. '<|end|>' → logprob: -16.75000762939453
    6. ' ' → logprob: -17.62500762939453
    7. '    
' → logprob: -17.62500762939453
    8. '  ' → logprob: -17.75000762939453
    9. '
' → logprob: -18.00000762939453
    10. '    ' → logprob: -18.12500762939453

Token 2150: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.721228368813172e-05
    2. ',V' → logprob: -9.500086784362793
    3. ' ,' → logprob: -11.375086784362793
    4. 'V' → logprob: -15.000086784362793
    5. '=' → logprob: -15.125086784362793
    6. '   ' → logprob: -16.25008773803711
    7. ',
' → logprob: -17.75008773803711
    8. ' =' → logprob: -18.62508773803711
    9. '```' → logprob: -18.75008773803711
    10. ',Q' → logprob: -18.87508773803711

Token 2151: ' V' (ID: 631)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.00029685118352063
    2. ' V' → logprob: -8.125296592712402
    3. '   ' → logprob: -15.125296592712402
    4. ' ' → logprob: -15.500296592712402
    5. '
' → logprob: -17.00029754638672
    6. '<|end|>' → logprob: -17.25029754638672
    7. '	V' → logprob: -17.50029754638672
    8. '```' → logprob: -17.87529754638672
    9. '  ' → logprob: -18.25029754638672
    10. '    ' → logprob: -18.25029754638672

Token 2152: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002342912630410865
    2. ',L' → logprob: -8.375234603881836
    3. ' ,' → logprob: -12.625234603881836
    4. '=' → logprob: -15.625234603881836
    5. 'L' → logprob: -16.125234603881836
    6. ',
' → logprob: -17.000234603881836
    7. ',\
' → logprob: -17.500234603881836
    8. '   ' → logprob: -18.125234603881836
    9. ',I' → logprob: -18.375234603881836
    10. '،' → logprob: -18.500234603881836

Token 2153: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -1.7432603272027336e-06
    2. ' L' → logprob: -13.375001907348633
    3. '   ' → logprob: -16.500001907348633
    4. '	L' → logprob: -19.375001907348633
    5. '
' → logprob: -19.625001907348633
    6. ' ' → logprob: -20.875001907348633
    7. '```' → logprob: -20.875001907348633
    8. '  ' → logprob: -21.000001907348633
    9. '
' → logprob: -21.375001907348633
    10. 'Ls' → logprob: -21.750001907348633

Token 2154: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014773191884160042
    2. '=' → logprob: -4.264773368835449
    3. ' =' → logprob: -7.514773368835449
    4. '   ' → logprob: -10.01477336883545
    5. ',c' → logprob: -11.38977336883545
    6. ' ,' → logprob: -12.38977336883545
    7. ',N' → logprob: -14.38977336883545
    8. '```' → logprob: -14.88977336883545
    9. 'car' → logprob: -15.01477336883545
    10. '  ' → logprob: -15.01477336883545

Token 2155: ' carrots' (ID: 91266)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.0002978048287332058
    2. ' carrots' → logprob: -8.125297546386719
    3. 'cars' → logprob: -14.250297546386719
    4. 'c' → logprob: -14.250297546386719
    5. '```' → logprob: -16.62529754638672
    6. ' carrot' → logprob: -16.87529754638672
    7. '_car' → logprob: -17.00029754638672
    8. 'Car' → logprob: -17.12529754638672
    9. ' car' → logprob: -17.50029754638672
    10. 'ca' → logprob: -17.62529754638672

Token 2156: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0485999770462513
    2. ' =' → logprob: -3.0485999584198
    3. '   ' → logprob: -11.298600196838379
    4. '=
' → logprob: -15.923600196838379
    5. '	' → logprob: -18.423599243164062
    6. '＝' → logprob: -18.548599243164062
    7. ')' → logprob: -18.548599243164062
    8. '    ' → logprob: -18.673599243164062
    9. '  ' → logprob: -18.798599243164062
    10. ' ' → logprob: -18.923599243164062

Token 2157: ' parse' (ID: 8420)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.8737878203392029
    2. 'Rabbit' → logprob: -0.8737878203392029
    3. 'Running' → logprob: -2.7487878799438477
    4. 'map' → logprob: -2.7487878799438477
    5. ' map' → logprob: -4.123787879943848
    6. ' parse' → logprob: -4.498787879943848
    7. ' Rabbit' → logprob: -5.373787879943848
    8. 'list' → logprob: -5.623787879943848
    9. ' Running' → logprob: -7.123787879943848
    10. ' list' → logprob: -8.248787879943848

Token 2158: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.00012654215970542282
    2. 'input' → logprob: -9.250126838684082
    3. '   ' → logprob: -11.750126838684082
    4. 'int' → logprob: -12.125126838684082
    5. 'Input' → logprob: -12.125126838684082
    6. '_int' → logprob: -12.750126838684082
    7. '
' → logprob: -12.875126838684082
    8. '```' → logprob: -13.750126838684082
    9. '(' → logprob: -14.250126838684082
    10. '(
' → logprob: -14.500126838684082

Token 2159: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14184999465942383
    2. '
' → logprob: -2.391849994659424
    3. 'speed' → logprob: -3.266849994659424
    4. ' speed' → logprob: -6.391849994659424
    5. '    
' → logprob: -7.766849994659424
    6. 'course' → logprob: -8.391849517822266
    7. '```' → logprob: -9.391849517822266
    8. '_speed' → logprob: -9.766849517822266
    9. '	speed' → logprob: -10.016849517822266
    10. '(speed' → logprob: -10.766849517822266

Token 2160: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09379807859659195
    2. 'speed' → logprob: -2.5937981605529785
    3. ' speed' → logprob: -4.2187981605529785
    4. '
' → logprob: -10.46879768371582
    5. '```' → logprob: -10.59379768371582
    6. '	speed' → logprob: -11.46879768371582
    7. '   ' → logprob: -12.34379768371582
    8. '_speed' → logprob: -12.59379768371582
    9. '    
' → logprob: -12.96879768371582
    10. 's' → logprob: -13.21879768371582

Token 2161: ' course' (ID: 4165)
  Prédit: 'speed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'speed' → logprob: -0.00016265720478259027
    2. '   ' → logprob: -8.875163078308105
    3. ' speed' → logprob: -10.750163078308105
    4. 'course' (adapté à ' course') → logprob: -15.125163078308105
    5. 'model' → logprob: -15.250163078308105
    6. 'rabbit' → logprob: -15.375163078308105
    7. '
' → logprob: -15.500163078308105
    8. '	speed' → logprob: -15.750163078308105
    9. '    
' → logprob: -16.12516212463379
    10. '```' → logprob: -16.50016212463379

Token 2162: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1144123375415802
    2. '=' → logprob: -2.239412307739258
    3. '   ' → logprob: -6.864412307739258
    4. '_course' → logprob: -7.864412307739258
    5. '_' → logprob: -9.239412307739258
    6. '_speed' → logprob: -11.364412307739258
    7. '.' → logprob: -11.614412307739258
    8. '_model' → logprob: -11.864412307739258
    9. ')' → logprob: -11.864412307739258
    10. '```' → logprob: -11.864412307739258

Token 2163: ' Running' (ID: 48451)
  Prédit: 'Running'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Running' → logprob: -4.320199877838604e-07
    2. ' Running' → logprob: -15.0
    3. '   ' → logprob: -17.625
    4. ' running' → logprob: -21.5
    5. '_running' → logprob: -21.625
    6. 'Runner' → logprob: -21.625
    7. 'running' → logprob: -22.75
    8. 'Run' → logprob: -23.5
    9. 'RUN' → logprob: -23.875
    10. '```' → logprob: -24.0

Token 2164: 'Course' (ID: 20560)
  Prédit: 'Course'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Course' → logprob: -4.4849443838757e-06
    2. 'course' → logprob: -12.625004768371582
    3. '_course' → logprob: -13.875004768371582
    4. '```' → logprob: -16.375003814697266
    5. '`' → logprob: -16.875003814697266
    6. 'Speed' → logprob: -18.125003814697266
    7. 'Race' → logprob: -18.500003814697266
    8. 'Running' → logprob: -18.500003814697266
    9. '
' → logprob: -18.750003814697266
    10. '(course' → logprob: -19.000003814697266

Token 2165: '(L' (ID: 11075)
  Prédit: '(L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(L' → logprob: -0.005303130950778723
    2. 'L' → logprob: -5.255302906036377
    3. '(
' → logprob: -10.380303382873535
    4. '(' → logprob: -10.755303382873535
    5. '   ' → logprob: -11.005303382873535
    6. ' L' → logprob: -16.38030242919922
    7. '(
' → logprob: -16.63030242919922
    8. '	L' → logprob: -16.88030242919922
    9. '
' → logprob: -17.00530242919922
    10. '       ' → logprob: -17.25530242919922

Token 2166: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.621933451038785e-05
    2. ',c' → logprob: -10.500056266784668
    3. ' ,' → logprob: -11.250056266784668
    4. ',
' → logprob: -11.875056266784668
    5. '   ' → logprob: -12.375056266784668
    6. 'car' → logprob: -13.125056266784668
    7. '[' → logprob: -14.125056266784668
    8. '(car' → logprob: -14.875056266784668
    9. '=' → logprob: -15.000056266784668
    10. ',[' → logprob: -15.000056266784668

Token 2167: ' carrots' (ID: 91266)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.00038145645521581173
    2. '[' → logprob: -8.625381469726562
    3. 'sorted' → logprob: -9.125381469726562
    4. ' carrots' → logprob: -9.375381469726562
    5. 'cars' → logprob: -12.625381469726562
    6. '[c' → logprob: -12.875381469726562
    7. '[
' → logprob: -14.625381469726562
    8. 'list' → logprob: -15.125381469726562
    9. ' [' → logprob: -15.375381469726562
    10. '[(' → logprob: -15.750381469726562

Token 2168: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.31413429975509644
    2. ')
' → logprob: -1.5641343593597412
    3. '   ' → logprob: -2.814134359359741
    4. ',' → logprob: -8.43913459777832
    5. ')
' → logprob: -8.93913459777832
    6. ',
' → logprob: -13.68913459777832
    7. ')`
' → logprob: -13.93913459777832
    8. ' )' → logprob: -14.43913459777832
    9. '),' → logprob: -14.81413459777832
    10. 'speed' → logprob: -15.06413459777832

Token 2169: '   ' (ID: 271)
  Prédit: 'speed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'speed' → logprob: -0.18431280553340912
    2. '   ' → logprob: -1.8093128204345703
    3. ' speed' → logprob: -5.43431282043457
    4. 'model' → logprob: -8.80931282043457
    5. '```' → logprob: -10.80931282043457
    6. '	speed' → logprob: -11.55931282043457
    7. '
' → logprob: -11.93431282043457
    8. '``' → logprob: -13.43431282043457
    9. '_speed' → logprob: -13.55931282043457
    10. '    
' → logprob: -13.55931282043457

Token 2170: ' speed' (ID: 7733)
  Prédit: 'speed'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'speed' (adapté à ' speed') → logprob: -0.00010807292710524052
    2. '   ' → logprob: -10.000107765197754
    3. ' speed' → logprob: -10.000107765197754
    4. 'model' → logprob: -11.000107765197754
    5. '```' → logprob: -15.250107765197754
    6. '	speed' → logprob: -15.625107765197754
    7. '
' → logprob: -17.00010871887207
    8. '    
' → logprob: -17.75010871887207
    9. 'rabbit' → logprob: -17.75010871887207
    10. '_speed' → logprob: -18.12510871887207

Token 2171: '_model' (ID: 10928)
  Prédit: '_model'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_model' → logprob: -3.8889261304575484e-06
    2. 'model' → logprob: -12.625003814697266
    3. '=model' → logprob: -16.500003814697266
    4. '_mode' → logprob: -16.625003814697266
    5. '=_' → logprob: -16.625003814697266
    6. '=' → logprob: -17.000003814697266
    7. 'Model' → logprob: -17.125003814697266
    8. ' =' → logprob: -17.625003814697266
    9. ' model' → logprob: -19.000003814697266
    10. '_MODEL' → logprob: -19.125003814697266

Token 2172: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16022595763206482
    2. ' =' → logprob: -1.9102259874343872
    3. 'model' → logprob: -14.535225868225098
    4. '=
' → logprob: -14.660225868225098
    5. '=r' → logprob: -14.910225868225098
    6. '=model' → logprob: -15.160225868225098
    7. '```' → logprob: -16.160226821899414
    8. '_model' → logprob: -16.410226821899414
    9. '   ' → logprob: -17.160226821899414
    10. ' ' → logprob: -17.410226821899414

Token 2173: ' Rabbit' (ID: 79131)
  Prédit: 'Rabbit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Rabbit' → logprob: -8.061054359131958e-06
    2. ' Rabbit' → logprob: -11.750007629394531
    3. 'Rab' → logprob: -16.62500762939453
    4. 'rabbit' → logprob: -20.00000762939453
    5. 'R' → logprob: -22.00000762939453
    6. '兔' → logprob: -22.62500762939453
    7. ' rabbit' → logprob: -22.75000762939453
    8. 'Runner' → logprob: -23.12500762939453
    9. 'Runnable' → logprob: -23.12500762939453
    10. '```' → logprob: -23.12500762939453

Token 2174: 'Speed' (ID: 14555)
  Prédit: 'Speed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Speed' → logprob: -1.9361264946837764e-07
    2. 'speed' → logprob: -16.125
    3. '_speed' → logprob: -18.25
    4. ' Speed' → logprob: -18.25
    5. '.Speed' → logprob: -19.125
    6. 'Spe' → logprob: -19.875
    7. '_SPEED' → logprob: -20.0
    8. 'peed' → logprob: -20.75
    9. '```' → logprob: -21.25
    10. 'Velocity' → logprob: -21.25

Token 2175: 'Model' (ID: 2239)
  Prédit: 'Model'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Model' → logprob: -5.512236498361744e-07
    2. 'Rabbit' → logprob: -15.500000953674316
    3. 'model' → logprob: -16.375
    4. 'Mode' → logprob: -16.5
    5. '	Model' → logprob: -17.875
    6. ' Model' → logprob: -18.125
    7. 'Speed' → logprob: -18.375
    8. '```' → logprob: -18.5
    9. 'odel' → logprob: -18.75
    10. 'Mod' → logprob: -19.375

Token 2176: '(U' (ID: 27452)
  Prédit: '(U'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(U' → logprob: -2.963691804325208e-05
    2. '(V' → logprob: -10.875029563903809
    3. '(base' → logprob: -12.500029563903809
    4. 'U' → logprob: -12.625029563903809
    5. '(' → logprob: -13.125029563903809
    6. '(
' → logprob: -14.000029563903809
    7. '(float' → logprob: -14.250029563903809
    8. '(u' → logprob: -16.875030517578125
    9. '((' → logprob: -17.250030517578125
    10. 'float' → logprob: -17.625030517578125

Token 2177: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011622462188825011
    2. ',V' → logprob: -7.126162052154541
    3. ' ,' → logprob: -8.5011625289917
    4. 'V' → logprob: -8.8761625289917
    5. ',
' → logprob: -11.5011625289917
    6. ' V' → logprob: -13.8761625289917
    7. '   ' → logprob: -14.0011625289917
    8. '=' → logprob: -14.0011625289917
    9. ',v' → logprob: -14.2511625289917
    10. ')' → logprob: -14.7511625289917

Token 2178: ' V' (ID: 631)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -2.696889623621246e-06
    2. ' V' → logprob: -12.87500286102295
    3. 'float' → logprob: -17.000001907348633
    4. '
' → logprob: -17.375001907348633
    5. '   ' → logprob: -17.500001907348633
    6. '	V' → logprob: -18.500001907348633
    7. '
' → logprob: -19.500001907348633
    8. ')V' → logprob: -19.625001907348633
    9. 'v' → logprob: -19.750001907348633
    10. '```' → logprob: -20.125001907348633

Token 2179: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007324059493839741
    2. ',T' → logprob: -5.00732421875
    3. 'T' → logprob: -7.50732421875
    4. ' ,' → logprob: -10.00732421875
    5. '   ' → logprob: -12.25732421875
    6. ',
' → logprob: -12.63232421875
    7. ' T' → logprob: -12.75732421875
    8. ')' → logprob: -13.88232421875
    9. '=' → logprob: -15.25732421875
    10. ' ' → logprob: -15.50732421875

Token 2180: ' T' (ID: 353)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -3.128163257315464e-07
    2. ' T' → logprob: -15.25
    3. 'float' → logprob: -19.125
    4. '   ' → logprob: -20.5
    5. '	T' → logprob: -21.125
    6. '*T' → logprob: -23.125
    7. '
' → logprob: -23.375
    8. '.T' → logprob: -23.625
    9. '(T' → logprob: -23.625
    10. '=T' → logprob: -23.75

Token 2181: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007974773179739714
    2. ')
' → logprob: -7.875797271728516
    3. '   ' → logprob: -7.875797271728516
    4. ',' → logprob: -10.250797271728516
    5. '  ' → logprob: -14.375797271728516
    6. ')
' → logprob: -14.500797271728516
    7. ' )' → logprob: -14.500797271728516
    8. '),' → logprob: -16.375797271728516
    9. ')

' → logprob: -16.750797271728516
    10. ' ' → logprob: -16.750797271728516

Token 2182: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04713951796293259
    2. 'runner' → logprob: -3.1721394062042236
    3. ' runner' → logprob: -6.422139644622803
    4. 'storage' → logprob: -6.672139644622803
    5. 'rabbit' → logprob: -6.922139644622803
    6. 'r' → logprob: -9.297139167785645
    7. '```' → logprob: -9.547139167785645
    8. ' rabbit' → logprob: -10.297139167785645
    9. '   ' → logprob: -11.047139167785645
    10. ' storage' → logprob: -11.172139167785645

Token 2183: ' runner' (ID: 39201)
  Prédit: 'runner'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'runner' (adapté à ' runner') → logprob: -0.0015073629328981042
    2. 'rabbit' → logprob: -6.50150728225708
    3. '   ' → logprob: -12.751507759094238
    4. ' runner' → logprob: -13.501507759094238
    5. 'solver' → logprob: -15.751507759094238
    6. 'run' → logprob: -16.001506805419922
    7. '```' → logprob: -16.001506805419922
    8. 'player' → logprob: -16.751506805419922
    9. 'renderer' → logprob: -16.751506805419922
    10. 'r' → logprob: -16.751506805419922

Token 2184: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03804401680827141
    2. '=' → logprob: -3.288043975830078
    3. '=r' → logprob: -14.038043975830078
    4. '_runner' → logprob: -14.788043975830078
    5. ' =
' → logprob: -14.913043975830078
    6. '=
' → logprob: -15.663043975830078
    7. ' ' → logprob: -15.913043975830078
    8. '_' → logprob: -16.163043975830078
    9. '=create' → logprob: -16.788043975830078
    10. '_run' → logprob: -16.788043975830078

Token 2185: ' Rabbit' (ID: 79131)
  Prédit: 'Rabbit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Rabbit' → logprob: -3.128163257315464e-07
    2. ' Rabbit' → logprob: -15.125
    3. 'Runnable' → logprob: -18.625
    4. 'Rab' → logprob: -20.0
    5. '   ' → logprob: -20.625
    6. 'Runner' → logprob: -20.75
    7. 'Ruby' → logprob: -21.875
    8. '
' → logprob: -22.5
    9. '```' → logprob: -22.625
    10. 'rabbit' → logprob: -22.875

Token 2186: 'Runner' (ID: 26032)
  Prédit: 'Runner'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Runner' → logprob: -0.5759468078613281
    2. 'Speed' → logprob: -0.8259468078613281
    3. 'Run' → logprob: -12.700946807861328
    4. 'runner' → logprob: -13.075946807861328
    5. ' runner' → logprob: -14.700946807861328
    6. ' Runner' → logprob: -15.200946807861328
    7. '_runner' → logprob: -15.200946807861328
    8. 'Runnable' → logprob: -15.325946807861328
    9. 'Rabbit' → logprob: -15.950946807861328
    10. '
' → logprob: -16.200946807861328

Token 2187: '(speed' (ID: 132978)
  Prédit: '(speed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(speed' → logprob: -0.0005796041805297136
    2. '(R' → logprob: -7.750579833984375
    3. '(' → logprob: -10.125579833984375
    4. '(S' → logprob: -10.375579833984375
    5. '(
' → logprob: -10.375579833984375
    6. '(r' → logprob: -10.500579833984375
    7. 'speed' → logprob: -11.250579833984375
    8. '(s' → logprob: -13.000579833984375
    9. '(score' → logprob: -13.500579833984375
    10. '   ' → logprob: -13.750579833984375

Token 2188: '_model' (ID: 10928)
  Prédit: '_model'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_model' → logprob: -0.3895362913608551
    2. 'Model' → logprob: -2.2645363807678223
    3. 'model' → logprob: -2.5145363807678223
    4. '(speed' → logprob: -2.5145363807678223
    5. 'speed' → logprob: -2.8895363807678223
    6. '   ' → logprob: -7.014536380767822
    7. '       ' → logprob: -8.889535903930664
    8. 'r' → logprob: -9.389535903930664
    9. '_speed' → logprob: -10.139535903930664
    10. 'peed' → logprob: -10.264535903930664

Token 2189: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001777960715116933
    2. ',r' → logprob: -9.500177383422852
    3. '(course' → logprob: -10.125177383422852
    4. '   ' → logprob: -11.125177383422852
    5. 'speed' → logprob: -11.375177383422852
    6. ' ,' → logprob: -11.500177383422852
    7. ',c' → logprob: -12.375177383422852
    8. ',
' → logprob: -12.500177383422852
    9. '(speed' → logprob: -12.500177383422852
    10. ')' → logprob: -12.875177383422852

Token 2190: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -5.512236498361744e-07
    2. ' K' → logprob: -14.625000953674316
    3. 'storage' → logprob: -20.0
    4. '   ' → logprob: -20.25
    5. '
' → logprob: -20.75
    6. '>K' → logprob: -22.25
    7. '	K' → logprob: -23.0
    8. '       ' → logprob: -23.375
    9. '[K' → logprob: -24.625
    10. ',K' → logprob: -25.125

Token 2191: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.676981345459353e-06
    2. ' ,' → logprob: -12.375005722045898
    3. '   ' → logprob: -14.500005722045898
    4. ',r' → logprob: -15.125005722045898
    5. ',
' → logprob: -15.875005722045898
    6. 'course' → logprob: -16.2500057220459
    7. ')' → logprob: -16.3750057220459
    8. '(course' → logprob: -16.3750057220459
    9. ',c' → logprob: -16.6250057220459
    10. ' course' → logprob: -18.1250057220459

Token 2192: ' course' (ID: 4165)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.3619370460510254
    2. 'course' → logprob: -1.2369370460510254
    3. 'runner' → logprob: -4.986937046051025
    4. 'N' → logprob: -5.486937046051025
    5. ' course' → logprob: -7.111937046051025
    6. 'len' → logprob: -7.986937046051025
    7. ')' → logprob: -8.736936569213867
    8. 'storage' → logprob: -8.861936569213867
    9. 'self' → logprob: -8.861936569213867
    10. '```' → logprob: -9.111936569213867

Token 2193: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.19304496049880981
    2. ')
' → logprob: -1.943044900894165
    3. '   ' → logprob: -3.443044900894165
    4. '
' → logprob: -8.693044662475586
    5. '<|end|>' → logprob: -10.068044662475586
    6. ')
' → logprob: -10.568044662475586
    7. '  ' → logprob: -11.193044662475586
    8. '<|end|>' → logprob: -11.318044662475586
    9. ').' → logprob: -11.693044662475586
    10. ' ' → logprob: -11.818044662475586

Token 2194: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.7501253485679626
    2. 'result' → logprob: -0.7501253485679626
    3. '   ' → logprob: -3.0001254081726074
    4. 'res' → logprob: -5.625125408172607
    5. 'time' → logprob: -6.875125408172607
    6. '```' → logprob: -7.375125408172607
    7. 'min' → logprob: -8.62512493133545
    8. '
' → logprob: -9.87512493133545
    9. ' result' → logprob: -10.00012493133545
    10. ' print' → logprob: -10.62512493133545

Token 2195: ' ans' (ID: 3345)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.035193897783756256
    2. 'result' → logprob: -3.535193920135498
    3. 'min' → logprob: -5.285193920135498
    4. 'res' → logprob: -8.03519344329834
    5. 'time' → logprob: -10.28519344329834
    6. ' print' → logprob: -13.41019344329834
    7. 'ans' (adapté à ' ans') → logprob: -14.16019344329834
    8. '   ' → logprob: -14.53519344329834
    9. 'answer' → logprob: -14.53519344329834
    10. 'total' → logprob: -14.91019344329834

Token 2196: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06468524038791656
    2. '=' → logprob: -2.814685344696045
    3. '   ' → logprob: -6.064685344696045
    4. '       ' → logprob: -9.064684867858887
    5. '.' → logprob: -9.564684867858887
    6. 'ow' → logprob: -10.564684867858887
    7. '.write' → logprob: -10.814684867858887
    8. '=True' → logprob: -11.064684867858887
    9. 'wer' → logprob: -11.189684867858887
    10. 'swer' → logprob: -11.439684867858887

Token 2197: ' runner' (ID: 39201)
  Prédit: 'runner'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'runner' → logprob: -7.493430894101039e-05
    2. ' runner' → logprob: -9.500075340270996
    3. '   ' → logprob: -19.25007438659668
    4. '.runner' → logprob: -19.25007438659668
    5. 'run' → logprob: -19.50007438659668
    6. 'round' → logprob: -20.00007438659668
    7. '_runner' → logprob: -21.12507438659668
    8. 'renderer' → logprob: -21.37507438659668
    9. 'r' → logprob: -21.37507438659668
    10. 'rabbit' → logprob: -21.62507438659668

Token 2198: '.find' (ID: 4231)
  Prédit: '.find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.find' → logprob: -0.00044663884909823537
    2. '.findall' → logprob: -8.125446319580078
    3. '.' → logprob: -9.000446319580078
    4. 'find' → logprob: -10.875446319580078
    5. '
' → logprob: -13.000446319580078
    6. ' .' → logprob: -13.375446319580078
    7. '.get' → logprob: -14.125446319580078
    8. '   ' → logprob: -14.500446319580078
    9. '.run' → logprob: -14.500446319580078
    10. '=find' → logprob: -14.625446319580078

Token 2199: '_min' (ID: 15950)
  Prédit: '_min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -1.5048530030981055e-06
    2. 'min' → logprob: -13.625001907348633
    3. '_max' → logprob: -15.375001907348633
    4. 'Min' → logprob: -17.250001907348633
    5. '```' → logprob: -18.125001907348633
    6. '`' → logprob: -18.375001907348633
    7. '_m' → logprob: -18.625001907348633
    8. '._' → logprob: -19.500001907348633
    9. ''_' → logprob: -19.625001907348633
    10. '_time' → logprob: -19.625001907348633

Token 2200: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: 0.0
    2. 'Time' → logprob: -17.25
    3. '_TIME' → logprob: -18.25
    4. 'time' → logprob: -18.625
    5. '"time' → logprob: -19.625
    6. 'ime' → logprob: -19.75
    7. '_Time' → logprob: -20.375
    8. '_times' → logprob: -20.875
    9. '_tim' → logprob: -20.875
    10. ' time' → logprob: -21.0

Token 2201: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09036442637443542
    2. 'print' → logprob: -2.465364456176758
    3. '
' → logprob: -7.340364456176758
    4. ' print' → logprob: -8.340364456176758
    5. '()
' → logprob: -8.465364456176758
    6. '```' → logprob: -8.715364456176758
    7. '()' → logprob: -9.840364456176758
    8. '(print' → logprob: -10.340364456176758
    9. '(' → logprob: -10.465364456176758
    10. '	print' → logprob: -10.715364456176758

Token 2202: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1270335167646408
    2. 'print' → logprob: -2.1270334720611572
    3. '```' → logprob: -9.377033233642578
    4. '
' → logprob: -12.002033233642578
    5. '	print' → logprob: -12.002033233642578
    6. ' print' → logprob: -12.127033233642578
    7. 'import' → logprob: -13.877033233642578
    8. '    
' → logprob: -13.877033233642578
    9. '<|end|>' → logprob: -14.752033233642578
    10. '       ' → logprob: -15.502033233642578

Token 2203: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0011897491058334708
    2. '   ' → logprob: -6.751189708709717
    3. '```' → logprob: -11.376190185546875
    4. 'import' → logprob: -12.126190185546875
    5. ' print' → logprob: -13.001190185546875
    6. '
' → logprob: -15.126190185546875
    7. '	print' → logprob: -16.751190185546875
    8. '``' → logprob: -17.251190185546875
    9. '#print' → logprob: -17.376190185546875
    10. '`' → logprob: -18.251190185546875

Token 2204: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.39011022448539734
    2. '(ans' → logprob: -1.1401102542877197
    3. '(round' → logprob: -6.265110015869141
    4. '(' → logprob: -7.265110015869141
    5. '("{' → logprob: -8.01511001586914
    6. '("%.' → logprob: -9.01511001586914
    7. '()' → logprob: -9.51511001586914
    8. '(int' → logprob: -9.76511001586914
    9. '(format' → logprob: -11.14011001586914
    10. '('{' → logprob: -11.51511001586914

Token 2205: '"{' (ID: 27510)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.04975312948226929
    2. '"{' → logprob: -3.049753189086914
    3. '(ans' → logprob: -7.424753189086914
    4. 'ans' → logprob: -7.674753189086914
    5. 'f' → logprob: -9.924753189086914
    6. ''{' → logprob: -10.549753189086914
    7. '("{' → logprob: -11.424753189086914
    8. '(f' → logprob: -11.924753189086914
    9. '{"' → logprob: -12.174753189086914
    10. '("%.' → logprob: -12.674753189086914

Token 2206: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -3.128163257315464e-07
    2. ' ans' → logprob: -15.875
    3. '(ans' → logprob: -16.25
    4. 'round' → logprob: -18.0
    5. '{' → logprob: -18.125
    6. '	ans' → logprob: -18.375
    7. '   ' → logprob: -21.125
    8. '{
' → logprob: -21.375
    9. 'int' → logprob: -21.5
    10. 'answer' → logprob: -21.875

Token 2207: ':.' (ID: 27474)
  Prédit: ':.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':.' → logprob: -3.7385154428193346e-05
    2. ':' → logprob: -11.25003719329834
    3. ' :.' → logprob: -11.25003719329834
    4. '.' → logprob: -11.50003719329834
    5. '{' → logprob: -14.62503719329834
    6. '}' → logprob: -15.00003719329834
    7. '}")' → logprob: -15.75003719329834
    8. ' .' → logprob: -16.125038146972656
    9. '   ' → logprob: -16.250038146972656
    10. '[' → logprob: -18.000038146972656

Token 2208: '9' (ID: 24)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.679293155670166
    2. '9' → logprob: -0.929293155670166
    3. '7' → logprob: -2.804293155670166
    4. '10' → logprob: -3.554293155670166
    5. '8' → logprob: -5.429293155670166
    6. '12' → logprob: -5.679293155670166
    7. '15' → logprob: -6.804293155670166
    8. '3' → logprob: -10.179292678833008
    9. '11' → logprob: -10.304292678833008
    10. '14' → logprob: -11.179292678833008

Token 2209: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: 0.0
    2. 'g' → logprob: -19.0
    3. '```' → logprob: -20.0
    4. '6' → logprob: -21.5
    5. '{' → logprob: -21.625
    6. 'e' → logprob: -21.75
    7. 'lf' → logprob: -22.375
    8. '}' → logprob: -22.5
    9. 'fi' → logprob: -22.875
    10. '	f' → logprob: -23.5

Token 2210: '}"' (ID: 21503)
  Prédit: '}")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}")' → logprob: -1.282920129597187e-05
    2. '")' → logprob: -11.625012397766113
    3. '}")
' → logprob: -12.750012397766113
    4. ')")' → logprob: -14.375012397766113
    5. ' }' → logprob: -15.500012397766113
    6. '}")
' → logprob: -17.00001335144043
    7. '}' → logprob: -17.62501335144043
    8. '}"' → logprob: -18.12501335144043
    9. '})' → logprob: -18.25001335144043
    10. '}")

' → logprob: -18.50001335144043

Token 2211: ')


' (ID: 7861)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0018674718448892236
    2. '())' → logprob: -7.001867294311523
    3. '()' → logprob: -7.251867294311523
    4. ')
' → logprob: -8.751867294311523
    5. '   ' → logprob: -10.376867294311523
    6. ' )' → logprob: -10.876867294311523
    7. '")' → logprob: -11.001867294311523
    8. '()
' → logprob: -12.376867294311523
    9. '<|end|>' → logprob: -12.501867294311523
    10. '(' → logprob: -12.876867294311523

Token 2212: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -2.1008713702030946e-06
    2. ' if' → logprob: -13.375001907348633
    3. '```' → logprob: -14.750001907348633
    4. 'main' → logprob: -16.750001907348633
    5. 'import' → logprob: -16.875001907348633
    6. 'If' → logprob: -20.250001907348633
    7. '	if' → logprob: -20.500001907348633
    8. '#' → logprob: -21.250001907348633
    9. '<|end|>' → logprob: -21.250001907348633
    10. '\' → logprob: -21.375001907348633

Token 2213: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.003452887525781989
    2. ' __' → logprob: -5.753452777862549
    3. 'name' → logprob: -8.253453254699707
    4. '___' → logprob: -11.503453254699707
    5. '_name' → logprob: -12.628453254699707
    6. '____' → logprob: -14.128453254699707
    7. 'Name' → logprob: -16.00345230102539
    8. '_' → logprob: -16.25345230102539
    9. '__.__' → logprob: -16.62845230102539
    10. '```' → logprob: -16.75345230102539

Token 2214: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.07452293485403061
    2. '==' → logprob: -2.9495229721069336
    3. '=="' → logprob: -4.449522972106934
    4. ' ==' → logprob: -5.074522972106934
    5. '=='' → logprob: -6.949522972106934
    6. 'name' → logprob: -8.699522972106934
    7. 'if' → logprob: -9.324522972106934
    8. '[' → logprob: -10.324522972106934
    9. ' __' → logprob: -10.324522972106934
    10. '==
' → logprob: -10.574522972106934

Token 2215: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.032351717352867126
    2. '==' → logprob: -3.5323517322540283
    3. '=="' → logprob: -6.157351493835449
    4. ' ==' → logprob: -8.15735149383545
    5. '=='' → logprob: -8.78235149383545
    6. '__.__' → logprob: -11.40735149383545
    7. '__('' → logprob: -12.28235149383545
    8. '__["' → logprob: -12.53235149383545
    9. '==
' → logprob: -12.78235149383545
    10. '___' → logprob: -13.03235149383545

Token 2216: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5516260266304016
    2. '__' → logprob: -0.9266260266304016
    3. '=="' → logprob: -3.801625967025757
    4. ' ==' → logprob: -5.301626205444336
    5. '=='' → logprob: -7.301626205444336
    6. '==
' → logprob: -9.551626205444336
    7. '=' → logprob: -11.551626205444336
    8. '===' → logprob: -12.176626205444336
    9. '__.__' → logprob: -12.926626205444336
    10. '==="' → logprob: -12.926626205444336

Token 2217: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.038047224283218384
    2. ''' → logprob: -3.2880473136901855
    3. '__' → logprob: -12.163046836853027
    4. ' "__' → logprob: -14.663046836853027
    5. '"name' → logprob: -17.288047790527344
    6. ' '__' → logprob: -18.663047790527344
    7. '"user' → logprob: -18.663047790527344
    8. ''"' → logprob: -19.163047790527344
    9. '("__' → logprob: -19.288047790527344
    10. '   ' → logprob: -19.538047790527344

Token 2218: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.00017123986617662013
    2. '__' → logprob: -8.875171661376953
    3. '"' → logprob: -10.625171661376953
    4. 'name' → logprob: -12.250171661376953
    5. ''' → logprob: -13.875171661376953
    6. '_main' → logprob: -14.750171661376953
    7. 'built' → logprob: -15.000171661376953
    8. 'm' → logprob: -16.125171661376953
    9. ' main' → logprob: -16.375171661376953
    10. ''m' → logprob: -17.125171661376953

Token 2219: '__":
' (ID: 49892)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.16155153512954712
    2. '__":
' → logprob: -1.9115514755249023
    3. '__
' → logprob: -7.286551475524902
    4. '__':
' → logprob: -8.286551475524902
    5. '__["' → logprob: -9.036551475524902
    6. '__.' → logprob: -9.161551475524902
    7. '__.__' → logprob: -9.786551475524902
    8. '__
' → logprob: -9.911551475524902
    9. '=="' → logprob: -11.536551475524902
    10. ' ==' → logprob: -12.036551475524902

Token 2220: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0003241414960939437
    2. ' main' → logprob: -8.750324249267578
    3. '	main' → logprob: -8.750324249267578
    4. '_main' → logprob: -12.625324249267578
    5. '   ' → logprob: -13.000324249267578
    6. '__' → logprob: -14.500324249267578
    7. '(main' → logprob: -14.750324249267578
    8. '
' → logprob: -15.625324249267578
    9. 'import' → logprob: -16.000324249267578
    10. '    
' → logprob: -16.125324249267578

Token 2221: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -3.8889261304575484e-06
    2. 'import' → logprob: -12.500003814697266
    3. ' main' → logprob: -16.500003814697266
    4. '	main' → logprob: -17.125003814697266
    5. '   ' → logprob: -20.250003814697266
    6. '(main' → logprob: -21.875003814697266
    7. '.main' → logprob: -23.250003814697266
    8. '
' → logprob: -23.500003814697266
    9. 'from' → logprob: -24.250003814697266
    10. '_main' → logprob: -24.250003814697266

Token 2222: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 2220
Tokens correctement prédits (1ère position, stricte): 808
Tokens correctement prédits (1ère position, avec adaptation): 877
Tokens correctement prédits (top 10): 1628
Précision stricte (1ère position): 36.40%
Précision adaptée (1ère position): 39.50%
Précision (top 10): 73.33%
================================================================================
