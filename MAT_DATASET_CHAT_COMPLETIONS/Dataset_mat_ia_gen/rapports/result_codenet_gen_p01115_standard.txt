================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:10:38
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import threading
sys.setrecursionlimit(1 << 25)


def main():
    input = sys.stdin.readline

    # Parser and evaluator that enumerates all substrings that are valid expressions and computes their values.
    # Key idea: use dynamic programming with memoization on intervals.
    # Given the huge constraints (total length up to 5*10^6) a full O(n^3) DP is impossible.
    # Instead, we leverage the grammar structure:
    # - F: a digit or a parenthesized expression
    # - T: sequence of F separated by *
    # - E: sequence of T separated by +
    #
    # We parse the expression once, build parse tree nodes with start-end indices,
    # then for each node we compute all possible values of its substrings and count how many
    # substrings with a given value exist.
    #
    # To handle substrings, we parse not only whole nodes but also sub-nodes representing substrings.
    #
    # But enumerating all substrings and their values is impossible due to problem size.
    #
    # Hence, the problem is known as counting substrings that are valid expressions with value n.
    # The grammar is unambiguous and expressions correspond to unique parse trees.
    #
    # So the substrings that are valid expressions correspond exactly to nodes in the parse tree,
    # plus smaller nodes corresponding to sub-expressions (children).
    #
    # We can obtain all valid expressions substrings by enumerating all intervals corresponding to parse tree nodes.
    #
    # So the problem reduces to:
    # - Parse s into a tree of expressions where each node covers an interval [l, r)
    # - For each node, compute its value
    # - Count how many nodes have value == n
    #
    # Since nesting depth is at most 1000, the number of nodes is manageable.
    #
    # We'll implement a recursive descent parser with position indexes and gather (start, end, value) per node.
    # Then count those with value = n.
    #
    # Parentheses must be handled properly to define substrings.
    #
    # The index convention: start inclusive, end exclusive.

    s = []
    while True:
        line = sys.stdin.readline()
        if not line:
            break
        nline = line.strip()
        if not nline:
            continue
        if nline == '0':
            break
        n = int(nline)
        s_line = sys.stdin.readline().strip()
        s = s_line

        length = len(s)
        pos = 0

        # Parsing functions return (value, (start_index, end_index))
        # We'll also store all nodes with their intervals and values.
        # Decorate functions with current start position.
        # Global pos pointer to parse s.

        # We will use a class to represent the parser state.

        class Parser:
            def __init__(self, s):
                self.s = s
                self.n = len(s)
                self.pos = 0
                self.nodes = []  # tuples: (start, end, value)

            def parse_E(self):
                start = self.pos
                val, _ = self.parse_T()
                # repeat + T
                while self.pos < self.n and self.s[self.pos] == '+':
                    self.pos += 1
                    val2, _ = self.parse_T()
                    val += val2
                end = self.pos
                self.nodes.append((start, end, val))
                return val, (start, end)

            def parse_T(self):
                start = self.pos
                val, _ = self.parse_F()
                while self.pos < self.n and self.s[self.pos] == '*':
                    self.pos += 1
                    val2, _ = self.parse_F()
                    val *= val2
                end = self.pos
                self.nodes.append((start, end, val))
                return val, (start, end)

            def parse_F(self):
                start = self.pos
                c = self.s[self.pos]
                if c == '(':
                    self.pos += 1
                    val, _ = self.parse_E()
                    if self.pos >= self.n or self.s[self.pos] != ')':
                        # invalid but input conforms, so ignore
                        pass
                    self.pos += 1
                    end = self.pos
                    self.nodes.append((start, end, val))
                    return val, (start, end)
                else:
                    # digit
                    val = int(c)
                    self.pos += 1
                    end = self.pos
                    self.nodes.append((start, end, val))
                    return val, (start, end)

        parser = Parser(s)
        parser.parse_E()

        # Count how many nodes have value == n
        count = 0
        for st, en, val in parser.nodes:
            if val == n:
                count += 1
        print(count)


threading.Thread(target=main,).start()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2973678708076477
    2. '\n' → logprob: -1.547367811203003
    3. '<|end|>' → logprob: -3.797367811203003
    4. '\' → logprob: -4.922368049621582
    5. 'newline' → logprob: -5.672368049621582
    6. 'import' → logprob: -5.672368049621582
    7. '<|end|>' → logprob: -6.047368049621582
    8. '
' → logprob: -6.922368049621582
    9. '```' → logprob: -6.922368049621582
    10. '' → logprob: -7.547368049621582

Token 4: ' threading' (ID: 72047)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.0004885728703811765
    2. 'os' → logprob: -7.625488758087158
    3. '"os' → logprob: -15.12548828125
    4. ' re' → logprob: -16.37548828125
    5. ' math' → logprob: -16.62548828125
    6. '	os' → logprob: -17.12548828125
    7. '_os' → logprob: -17.25048828125
    8. ' o' → logprob: -17.37548828125
    9. ' json' → logprob: -17.87548828125
    10. ' ' → logprob: -18.25048828125

Token 5: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2611512541770935
    2. '\n' → logprob: -2.6361513137817383
    3. '

' → logprob: -2.8861513137817383
    4. '\' → logprob: -3.7611513137817383
    5. '```' → logprob: -3.8861513137817383
    6. 'import' → logprob: -4.011151313781738
    7. '.' → logprob: -4.386151313781738
    8. '#' → logprob: -5.136151313781738
    9. '<|end|>' → logprob: -5.136151313781738
    10. 'def' → logprob: -5.386151313781738

Token 6: 'sys' (ID: 17324)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0712461471557617
    2. '\n' → logprob: -1.1962461471557617
    3. '.' → logprob: -2.3212461471557617
    4. '

' → logprob: -2.4462461471557617
    5. '\' → logprob: -3.3212461471557617
    6. 'import' → logprob: -3.4462461471557617
    7. '```' → logprob: -3.4462461471557617
    8. '.Thread' → logprob: -3.9462461471557617
    9. '#' → logprob: -4.071246147155762
    10. 'def' → logprob: -4.571246147155762

Token 7: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.0206720617134124e-05
    2. '.​' → logprob: -13.00001049041748
    3. '.readline' → logprob: -14.00001049041748
    4. '.)' → logprob: -14.25001049041748
    5. '.`' → logprob: -14.37501049041748
    6. '.]' → logprob: -14.50001049041748
    7. '."""' → logprob: -14.50001049041748
    8. '.setdefault' → logprob: -14.62501049041748
    9. ' .' → logprob: -14.75001049041748
    10. '.user' → logprob: -14.75001049041748

Token 8: 'rec' (ID: 9285)
  Prédit: 'trace'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'trace' → logprob: -0.6056756973266602
    2. 's' → logprob: -2.10567569732666
    3. 'rec' → logprob: -2.48067569732666
    4. '_version' → logprob: -3.23067569732666
    5. '_trace' → logprob: -3.23067569732666
    6. '_' → logprob: -3.60567569732666
    7. '_limit' → logprob: -3.60567569732666
    8. 'limit' → logprob: -3.73067569732666
    9. '_execution' → logprob: -4.10567569732666
    10. '_max' → logprob: -4.60567569732666

Token 9: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.001389996730722487
    2. 'ursive' → logprob: -6.751389980316162
    3. 'urs' → logprob: -8.75139045715332
    4. 'ur' → logprob: -10.50139045715332
    5. 'ursor' → logprob: -11.37639045715332
    6. '_' → logprob: -11.87639045715332
    7. 'urf' → logprob: -12.12639045715332
    8. 'ursively' → logprob: -12.75139045715332
    9. 'urse' → logprob: -13.12639045715332
    10. 'usion' → logprob: -13.37639045715332

Token 10: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.0010674663353711367
    2. '_limit' → logprob: -6.876067638397217
    3. ' limit' → logprob: -10.501067161560059
    4. 'lim' → logprob: -12.126067161560059
    5. 'depth' → logprob: -14.376067161560059
    6. 'Limit' → logprob: -14.751067161560059
    7. '_depth' → logprob: -15.376067161560059
    8. '-limit' → logprob: -15.376067161560059
    9. '_LIMIT' → logprob: -16.126068115234375
    10. 'l' → logprob: -16.876068115234375

Token 11: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.531315314830863e-06
    2. '(
' → logprob: -13.625003814697266
    3. '(

' → logprob: -13.875003814697266
    4. ' (' → logprob: -14.125003814697266
    5. '((' → logprob: -15.125003814697266
    6. '("("' → logprob: -15.625003814697266
    7. '40' → logprob: -17.125003814697266
    8. '(
' → logprob: -17.500003814697266
    9. '()' → logprob: -17.500003814697266
    10. '(None' → logprob: -17.750003814697266

Token 12: '1' (ID: 16)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.011152983643114567
    2. '100' → logprob: -4.511153221130371
    3. ' ' → logprob: -9.761153221130371
    4. '1' → logprob: -10.011153221130371
    5. '500' → logprob: -14.011153221130371
    6. '999' → logprob: -14.511153221130371
    7. '  ' → logprob: -14.886153221130371
    8. '   ' → logprob: -15.011153221130371
    9. '300' → logprob: -15.511153221130371
    10. '200' → logprob: -16.386152267456055

Token 13: ' <<' (ID: 2256)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.45299220085144043
    2. '000' → logprob: -1.3279922008514404
    3. '5' → logprob: -3.2029922008514404
    4. '00' → logprob: -3.5779922008514404
    5. '6' → logprob: -3.8279922008514404
    6. '8' → logprob: -5.5779924392700195
    7. '3' → logprob: -5.8279924392700195
    8. '2' → logprob: -7.4529924392700195
    9. '500' → logprob: -8.07799243927002
    10. '7' → logprob: -8.20299243927002

Token 14: ' ' (ID: 220)
  Prédit: '25'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '25' → logprob: -0.5803425312042236
    2. '20' → logprob: -0.8303425312042236
    3. ' ' → logprob: -6.3303422927856445
    4. '30' → logprob: -6.4553422927856445
    5. '15' → logprob: -7.0803422927856445
    6. '26' → logprob: -9.705342292785645
    7. '16' → logprob: -9.830342292785645
    8. '14' → logprob: -10.455342292785645
    9. '27' → logprob: -11.080342292785645
    10. '10' → logprob: -11.330342292785645

Token 15: '25' (ID: 1161)
  Prédit: '25'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '25' → logprob: -0.04760713875293732
    2. '20' → logprob: -3.172607183456421
    3. '30' → logprob: -5.422606945037842
    4. '27' → logprob: -9.297607421875
    5. '15' → logprob: -10.422607421875
    6. '28' → logprob: -10.922607421875
    7. '29' → logprob: -11.172607421875
    8. '26' → logprob: -11.672607421875
    9. '31' → logprob: -11.672607421875
    10. '24' → logprob: -11.922607421875

Token 16: ')


' (ID: 7861)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -7.822646693966817e-06
    2. ' )' → logprob: -12.375007629394531
    3. ')
' → logprob: -13.000007629394531
    4. '))' → logprob: -13.750007629394531
    5. ')
' → logprob: -17.12500762939453
    6. '')' → logprob: -17.25000762939453
    7. '）' → logprob: -17.50000762939453
    8. '```' → logprob: -17.50000762939453
    9. '`)' → logprob: -17.50000762939453
    10. ')`' → logprob: -17.62500762939453

Token 17: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.013137760572135448
    2. 'n' → logprob: -5.2631378173828125
    3. 'class' → logprob: -5.5131378173828125
    4. 'thread' → logprob: -6.0131378173828125
    5. '```' → logprob: -8.013137817382812
    6. 'MOD' → logprob: -8.263137817382812
    7. 'N' → logprob: -8.763137817382812
    8. 'MAX' → logprob: -9.388137817382812
    9. 'import' → logprob: -9.388137817382812
    10. '#' → logprob: -9.888137817382812

Token 18: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.10968053340911865
    2. ' dfs' → logprob: -2.734680652618408
    3. ' solve' → logprob: -3.484680652618408
    4. ' ' → logprob: -5.609680652618408
    5. ' factorial' → logprob: -6.859680652618408
    6. ' DFS' → logprob: -7.109680652618408
    7. ' run' → logprob: -7.984680652618408
    8. ' fast' → logprob: -8.10968017578125
    9. ' solver' → logprob: -8.23468017578125
    10. ' thread' → logprob: -8.48468017578125

Token 19: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.20240940153598785
    2. '(' → logprob: -1.7024093866348267
    3. '()' → logprob: -7.827409267425537
    4. '(:' → logprob: -7.952409267425537
    5. ':' → logprob: -9.202409744262695
    6. ' ():' → logprob: -9.827409744262695
    7. '(":' → logprob: -10.577409744262695
    8. '(
' → logprob: -11.202409744262695
    9. '):' → logprob: -11.702409744262695
    10. '_' → logprob: -11.952409744262695

Token 20: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03285421058535576
    2. '    ' → logprob: -3.5328543186187744
    3. '    
' → logprob: -6.657854080200195
    4. '(' → logprob: -8.032854080200195
    5. 'n' → logprob: -8.282854080200195
    6. '\' → logprob: -8.282854080200195
    7. ' ' → logprob: -8.782854080200195
    8. '  ' → logprob: -9.407854080200195
    9. ' (' → logprob: -9.782854080200195
    10. ')' → logprob: -10.032854080200195

Token 21: ' input' (ID: 3422)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.09336460381746292
    2. ' n' → logprob: -2.718364715576172
    3. 't' → logprob: -4.968364715576172
    4. 'thread' → logprob: -5.218364715576172
    5. '   ' → logprob: -5.343364715576172
    6. 'N' → logprob: -6.218364715576172
    7. 'import' → logprob: -7.468364715576172
    8. ' threading' → logprob: -7.468364715576172
    9. 'pass' → logprob: -7.468364715576172
    10. 'stack' → logprob: -7.718364715576172

Token 22: ' =' (ID: 314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.38006946444511414
    2. '(' → logprob: -1.2550694942474365
    3. '_data' → logprob: -3.8800694942474365
    4. '_' → logprob: -5.880069255828857
    5. '().' → logprob: -6.880069255828857
    6. 'data' → logprob: -7.005069255828857
    7. '=' → logprob: -7.255069255828857
    8. ' =' → logprob: -7.380069255828857
    9. '('' → logprob: -7.505069255828857
    10. '_text' → logprob: -7.630069255828857

Token 23: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.08412618935108185
    2. 'sys' → logprob: -2.5841262340545654
    3. ' input' → logprob: -5.959125995635986
    4. 'input' → logprob: -6.084125995635986
    5. ' lambda' → logprob: -8.209126472473145
    6. 'lambda' → logprob: -9.584126472473145
    7. '	sys' → logprob: -11.834126472473145
    8. ' ' → logprob: -11.959126472473145
    9. '=sys' → logprob: -12.334126472473145
    10. 'stdin' → logprob: -14.584126472473145

Token 24: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0008444105042144656
    2. '.' → logprob: -7.250844478607178
    3. '.readline' → logprob: -9.75084400177002
    4. '.stdout' → logprob: -10.37584400177002
    5. '.std' → logprob: -10.87584400177002
    6. '.argv' → logprob: -11.37584400177002
    7. ' .' → logprob: -11.62584400177002
    8. '.input' → logprob: -13.12584400177002
    9. 'stdin' → logprob: -13.87584400177002
    10. '._' → logprob: -14.37584400177002

Token 25: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0008559550042264163
    2. '.read' → logprob: -7.125855922698975
    3. '.' → logprob: -10.125856399536133
    4. '.buffer' → logprob: -11.500856399536133
    5. '.readlines' → logprob: -14.250856399536133
    6. 'read' → logprob: -15.500856399536133
    7. '.Read' → logprob: -15.875856399536133
    8. ' readline' → logprob: -16.000856399536133
    9. ' .' → logprob: -16.375856399536133
    10. 'buffer' → logprob: -17.625856399536133

Token 26: '

' (ID: 279)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.001652686856687069
    2. '(' → logprob: -7.001652717590332
    3. '()
' → logprob: -7.376652717590332
    4. '()\' → logprob: -10.251652717590332
    5. ')' → logprob: -10.876652717590332
    6. '(
' → logprob: -11.251652717590332
    7. '
' → logprob: -11.501652717590332
    8. '()

' → logprob: -11.626652717590332
    9. '().' → logprob: -11.751652717590332
    10. ' ()' → logprob: -12.126652717590332

Token 27: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0807199701666832
    2. 'n' → logprob: -2.7057199478149414
    3. '(n' → logprob: -5.455719947814941
    4. '()' → logprob: -6.330719947814941
    5. '    
' → logprob: -6.580719947814941
    6. 't' → logprob: -6.705719947814941
    7. ' n' → logprob: -7.330719947814941
    8. ')' → logprob: -8.330719947814941
    9. '(' → logprob: -8.580719947814941
    10. 's' → logprob: -8.705719947814941

Token 28: ' #' (ID: 1069)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.023971660062670708
    2. 't' → logprob: -3.8989715576171875
    3. '   ' → logprob: -5.8989715576171875
    4. 'N' → logprob: -7.8989715576171875
    5. 'for' → logprob: -9.398971557617188
    6. ' n' → logprob: -9.523971557617188
    7. 'T' → logprob: -10.773971557617188
    8. 'q' → logprob: -10.898971557617188
    9. 'try' → logprob: -10.898971557617188
    10. 's' → logprob: -11.148971557617188

Token 29: ' Parser' (ID: 44901)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7714036107063293
    2. ' n' → logprob: -0.7714036107063293
    3. ' t' → logprob: -3.2714035511016846
    4. 't' → logprob: -3.3964035511016846
    5. '   ' → logprob: -5.896403789520264
    6. 'N' → logprob: -7.896403789520264
    7. ' N' → logprob: -8.646403312683105
    8. 'T' → logprob: -9.021403312683105
    9. ' T' → logprob: -9.271403312683105
    10. ' ' → logprob: -9.646403312683105

Token 30: ' and' (ID: 326)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5073908567428589
    2. '()' → logprob: -1.8823908567428589
    3. '   ' → logprob: -2.2573909759521484
    4. ':' → logprob: -2.2573909759521484
    5. ')' → logprob: -4.132390975952148
    6. '_' → logprob: -5.132390975952148
    7. 'def' → logprob: -6.007390975952148
    8. ',' → logprob: -6.382390975952148
    9. ' ' → logprob: -6.507390975952148
    10. '<|end|>' → logprob: -6.757390975952148

Token 31: ' evaluator' (ID: 153499)
  Prédit: ' evaluator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' evaluator' → logprob: -0.18189361691474915
    2. ' tokenizer' → logprob: -2.9318935871124268
    3. ' lexer' → logprob: -3.0568935871124268
    4. ' executor' → logprob: -3.9318935871124268
    5. ' generator' → logprob: -5.056893825531006
    6. ' processor' → logprob: -5.181893825531006
    7. ' interpreter' → logprob: -5.306893825531006
    8. ' solver' → logprob: -5.556893825531006
    9. ' analyzer' → logprob: -5.931893825531006
    10. ' token' → logprob: -6.056893825531006

Token 32: ' that' (ID: 484)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3050624430179596
    2. '   ' → logprob: -2.0550625324249268
    3. ':' → logprob: -2.6800625324249268
    4. 'def' → logprob: -4.055062294006348
    5. ' ' → logprob: -4.305062294006348
    6. '(
' → logprob: -4.930062294006348
    7. '_' → logprob: -5.305062294006348
    8. '<|end|>' → logprob: -5.805062294006348
    9. ' for' → logprob: -5.930062294006348
    10. '()' → logprob: -6.180062294006348

Token 33: ' enumer' (ID: 21093)
  Prédit: ' evaluates'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' evaluates' → logprob: -0.9856565594673157
    2. ' parses' → logprob: -1.485656499862671
    3. ' can' → logprob: -1.735656499862671
    4. ' reads' → logprob: -2.360656499862671
    5. 's' → logprob: -3.110656499862671
    6. ' handles' → logprob: -3.735656499862671
    7. ' processes' → logprob: -4.36065673828125
    8. ' calculates' → logprob: -4.61065673828125
    9. ' understands' → logprob: -5.23565673828125
    10. ' parse' → logprob: -5.61065673828125

Token 34: 'ates' (ID: 1381)
  Prédit: 'ates'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ates' → logprob: -0.04320003092288971
    2. 'ate' → logprob: -3.1682000160217285
    3. ' at' → logprob: -8.793200492858887
    4. 'at' → logprob: -10.793200492858887
    5. 'a' → logprob: -12.293200492858887
    6. ' ate' → logprob: -12.418200492858887
    7. '   ' → logprob: -12.543200492858887
    8. 'ation' → logprob: -12.918200492858887
    9. 'ater' → logprob: -13.168200492858887
    10. 'ating' → logprob: -13.418200492858887

Token 35: ' all' (ID: 722)
  Prédit: ' all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.007818721234798431
    2. 'all' → logprob: -6.007818698883057
    3. 's' → logprob: -6.882818698883057
    4. ' ' → logprob: -6.882818698883057
    5. ' possible' → logprob: -7.132818698883057
    6. ' expressions' → logprob: -7.257818698883057
    7. ' the' → logprob: -7.382818698883057
    8. ' every' → logprob: -8.382819175720215
    9. ' a' → logprob: -9.007819175720215
    10. ' tokens' → logprob: -9.257819175720215

Token 36: ' substr' (ID: 29234)
  Prédit: ' possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' possible' → logprob: -0.37089887261390686
    2. ' the' → logprob: -2.620898962020874
    3. ' expressions' → logprob: -2.995898962020874
    4. ' possibilities' → logprob: -3.245898962020874
    5. 'possible' → logprob: -3.745898962020874
    6. '(' → logprob: -3.870898962020874
    7. 'poss' → logprob: -4.370898723602295
    8. ' parse' → logprob: -4.620898723602295
    9. '    ' → logprob: -4.995898723602295
    10. '   ' → logprob: -5.120898723602295

Token 37: 'ings' (ID: 963)
  Prédit: 'ings'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ings' → logprob: -0.023869814351201057
    2. 's' → logprob: -3.773869752883911
    3. 'ing' → logprob: -7.64886999130249
    4. 'e' → logprob: -9.523869514465332
    5. 'gs' → logprob: -10.273869514465332
    6. 'ingss' → logprob: -11.898869514465332
    7. 'a' → logprob: -12.398869514465332
    8. 'g' → logprob: -12.648869514465332
    9. 'es' → logprob: -12.648869514465332
    10. '```' → logprob: -12.898869514465332

Token 38: ' that' (ID: 484)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.42447903752326965
    2. '(' → logprob: -1.4244790077209473
    3. ':' → logprob: -3.7994790077209473
    4. ' ' → logprob: -3.9244790077209473
    5. '_' → logprob: -3.9244790077209473
    6. ',' → logprob: -4.924479007720947
    7. 'def' → logprob: -4.924479007720947
    8. '    ' → logprob: -5.049479007720947
    9. ' of' → logprob: -5.549479007720947
    10. 's' → logprob: -5.674479007720947

Token 39: ' are' (ID: 553)
  Prédit: ' contain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' contain' → logprob: -0.9588295221328735
    2. ' are' → logprob: -1.3338295221328735
    3. ' can' → logprob: -1.9588295221328735
    4. ' ' → logprob: -3.083829402923584
    5. ' have' → logprob: -3.333829402923584
    6. ' start' → logprob: -3.583829402923584
    7. ' match' → logprob: -3.708829402923584
    8. ' include' → logprob: -3.708829402923584
    9. ' could' → logprob: -3.958829402923584
    10. ' consist' → logprob: -4.833829402923584

Token 40: ' valid' (ID: 4529)
  Prédit: ' valid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' valid' → logprob: -0.13641825318336487
    2. ' balanced' → logprob: -3.261418342590332
    3. ' boolean' → logprob: -4.386418342590332
    4. 'valid' → logprob: -4.636418342590332
    5. ' pal' → logprob: -4.886418342590332
    6. ' not' → logprob: -5.136418342590332
    7. ' parentheses' → logprob: -5.323918342590332
    8. ' expressions' → logprob: -5.761418342590332
    9. ' arithmetic' → logprob: -5.761418342590332
    10. ' logical' → logprob: -5.948918342590332

Token 41: ' expressions' (ID: 43578)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8528817296028137
    2. ' (' → logprob: -2.102881669998169
    3. ' expressions' → logprob: -2.477881669998169
    4. ',' → logprob: -2.602881669998169
    5. ' parentheses' → logprob: -2.852881669998169
    6. ':' → logprob: -2.852881669998169
    7. ')' → logprob: -3.352881669998169
    8. ' for' → logprob: -3.727881669998169
    9. 's' → logprob: -3.977881669998169
    10. ' tokens' → logprob: -4.352881908416748

Token 42: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10156950354576111
    2. ':' → logprob: -2.601569414138794
    3. '    
' → logprob: -4.476569652557373
    4. 'def' → logprob: -5.726569652557373
    5. '    ' → logprob: -6.226569652557373
    6. '(' → logprob: -6.976569652557373
    7. ' ' → logprob: -7.601569652557373
    8. '<|end|>' → logprob: -7.851569652557373
    9. ' :' → logprob: -7.976569652557373
    10. '
' → logprob: -7.976569652557373

Token 43: ' computes' (ID: 144619)
  Prédit: ' calculates'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' calculates' → logprob: -0.8915555477142334
    2. '   ' → logprob: -1.5165555477142334
    3. ' evaluates' → logprob: -1.7665555477142334
    4. ' returns' → logprob: -2.1415555477142334
    5. ' computes' → logprob: -3.7665555477142334
    6. ' their' → logprob: -4.6415557861328125
    7. ' counts' → logprob: -4.7665557861328125
    8. ' parses' → logprob: -4.8915557861328125
    9. ' tokens' → logprob: -5.6415557861328125
    10. ' finds' → logprob: -5.6415557861328125

Token 44: ' their' (ID: 1043)
  Prédit: ' their'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' their' → logprob: -0.013717729598283768
    2. 'their' → logprob: -5.1387176513671875
    3. ' the' → logprob: -5.6387176513671875
    4. '   ' → logprob: -6.3887176513671875
    5. ' ' → logprob: -7.0137176513671875
    6. '<|end|>' → logprob: -7.5137176513671875
    7. '  ' → logprob: -8.263717651367188
    8. '(' → logprob: -8.763717651367188
    9. '    ' → logprob: -8.763717651367188
    10. 'the' → logprob: -8.763717651367188

Token 45: ' values' (ID: 4824)
  Prédit: ' value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.6093222498893738
    2. ' values' → logprob: -1.2343223094940186
    3. ' result' → logprob: -2.1093223094940186
    4. ' results' → logprob: -3.9843223094940186
    5. 'value' → logprob: -5.2343220710754395
    6. ' length' → logprob: -5.2343220710754395
    7. ' lengths' → logprob: -5.6093220710754395
    8. 'values' → logprob: -5.7343220710754395
    9. ' ' → logprob: -6.3593220710754395
    10. 'result' → logprob: -6.8593220710754395

Token 46: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4187384247779846
    2. ':' → logprob: -1.1687383651733398
    3. '
' → logprob: -4.04373836517334
    4. '    
' → logprob: -5.66873836517334
    5. '<|end|>' → logprob: -6.04373836517334
    6. 'def' → logprob: -6.16873836517334
    7. '\' → logprob: -6.91873836517334
    8. '```' → logprob: -7.16873836517334
    9. '<|end|>' → logprob: -7.66873836517334
    10. '  
' → logprob: -7.91873836517334

Token 47: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0243665911257267
    2. '    
' → logprob: -4.64936637878418
    3. ':' → logprob: -4.77436637878418
    4. '
' → logprob: -6.39936637878418
    5. '\' → logprob: -6.89936637878418
    6. 'def' → logprob: -7.27436637878418
    7. ' 
' → logprob: -7.52436637878418
    8. '#' → logprob: -8.02436637878418
    9. '    ' → logprob: -8.14936637878418
    10. '  
' → logprob: -8.64936637878418

Token 48: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2968921959400177
    2. '    ' → logprob: -2.0468921661376953
    3. ' ' → logprob: -2.4218921661376953
    4. '    
' → logprob: -4.296892166137695
    5. ' 
' → logprob: -4.921892166137695
    6. 'def' → logprob: -5.171892166137695
    7. '\n' → logprob: -6.296892166137695
    8. '\' → logprob: -6.421892166137695
    9. '
' → logprob: -6.421892166137695
    10. 'n' → logprob: -6.671892166137695

Token 49: ' Key' (ID: 7926)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07059071958065033
    2. '    ' → logprob: -3.8205907344818115
    3. ' ' → logprob: -3.8205907344818115
    4. 'class' → logprob: -5.320590496063232
    5. '#' → logprob: -5.445590496063232
    6. ' #' → logprob: -5.820590496063232
    7. '    
' → logprob: -6.445590496063232
    8. ' class' → logprob: -6.445590496063232
    9. 'def' → logprob: -6.570590496063232
    10. '  ' → logprob: -6.820590496063232

Token 50: ' idea' (ID: 6056)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17367567121982574
    2. '_' → logprob: -3.173675775527954
    3. '=' → logprob: -3.298675775527954
    4. ':' → logprob: -4.298675537109375
    5. 'words' → logprob: -4.298675537109375
    6. '_token' → logprob: -4.423675537109375
    7. ' idea' → logprob: -4.798675537109375
    8. ' words' → logprob: -5.173675537109375
    9. '_tokens' → logprob: -5.673675537109375
    10. ' insight' → logprob: -5.798675537109375

Token 51: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04683743789792061
    2. ' :' → logprob: -3.546837329864502
    3. '   ' → logprob: -5.171837329864502
    4. ' ' → logprob: -5.796837329864502
    5. '=' → logprob: -5.796837329864502
    6. ' =' → logprob: -6.046837329864502
    7. ',' → logprob: -6.546837329864502
    8. ' is' → logprob: -7.796837329864502
    9. '    ' → logprob: -8.17183780670166
    10. '#' → logprob: -8.42183780670166

Token 52: ' use' (ID: 1199)
  Prédit: ' pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pass' → logprob: -1.387404441833496
    2. ' def' → logprob: -1.512404441833496
    3. 'def' → logprob: -1.762404441833496
    4. ' #' → logprob: -2.762404441833496
    5. '    ' → logprob: -2.887404441833496
    6. ' from' → logprob: -3.012404441833496
    7. ' for' → logprob: -3.012404441833496
    8. 'from' → logprob: -3.762404441833496
    9. '   ' → logprob: -4.262404441833496
    10. ' tokens' → logprob: -4.512404441833496

Token 53: ' dynamic' (ID: 14012)
  Prédit: ' dynamic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dynamic' → logprob: -0.9543092250823975
    2. ' memo' → logprob: -1.0793092250823975
    3. ' a' → logprob: -1.4543092250823975
    4. ' recursion' → logprob: -3.9543092250823975
    5. 'memo' → logprob: -5.079309463500977
    6. ' two' → logprob: -6.079309463500977
    7. 'a' → logprob: -6.079309463500977
    8. ' stack' → logprob: -6.329309463500977
    9. 'dynamic' → logprob: -6.579309463500977
    10. ' the' → logprob: -7.079309463500977

Token 54: ' programming' (ID: 23238)
  Prédit: ' programming'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' programming' → logprob: -0.0032818098552525043
    2. 'program' → logprob: -6.003281593322754
    3. '_program' → logprob: -7.503281593322754
    4. '_' → logprob: -8.628281593322754
    5. 'Programming' → logprob: -10.753281593322754
    6. ' _' → logprob: -11.378281593322754
    7. ' programmation' → logprob: -11.628281593322754
    8. ' programación' → logprob: -11.878281593322754
    9. '-program' → logprob: -11.878281593322754
    10. ' ' → logprob: -12.628281593322754

Token 55: ' with' (ID: 483)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011554902419447899
    2. ':' → logprob: -6.011554718017578
    3. ',' → logprob: -6.136554718017578
    4. ' ' → logprob: -6.761554718017578
    5. '    ' → logprob: -7.011554718017578
    6. '<|end|>' → logprob: -7.011554718017578
    7. '    
' → logprob: -7.636554718017578
    8. '(' → logprob: -7.636554718017578
    9. '<|end|>' → logprob: -7.761554718017578
    10. ' to' → logprob: -7.886554718017578

Token 56: ' memo' (ID: 46393)
  Prédit: ' memo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' memo' → logprob: -0.15415509045124054
    2. ' a' → logprob: -3.1541550159454346
    3. ' two' → logprob: -3.4041550159454346
    4. 'memo' → logprob: -4.154155254364014
    5. ' nested' → logprob: -4.279155254364014
    6. ' three' → logprob: -4.904155254364014
    7. ' bit' → logprob: -5.529155254364014
    8. 'a' → logprob: -5.529155254364014
    9. ' recursion' → logprob: -5.904155254364014
    10. ' ' → logprob: -6.154155254364014

Token 57: 'ization' (ID: 2860)
  Prédit: 'ization'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ization' → logprob: -0.003816226264461875
    2. 'iz' → logprob: -6.6288161277771
    3. ' =' → logprob: -7.1288161277771
    4. 'ation' → logprob: -8.253816604614258
    5. '{}' → logprob: -8.753816604614258
    6. ' ' → logprob: -8.753816604614258
    7. 'ize' → logprob: -8.878816604614258
    8. '-' → logprob: -9.003816604614258
    9. 'iza' → logprob: -9.003816604614258
    10. '=' → logprob: -9.003816604614258

Token 58: ' on' (ID: 402)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0973939597606659
    2. ':' → logprob: -3.3473939895629883
    3. ' ' → logprob: -3.4723939895629883
    4. 'def' → logprob: -5.097393989562988
    5. '<|end|>' → logprob: -5.222393989562988
    6. ',' → logprob: -5.472393989562988
    7. '    ' → logprob: -6.097393989562988
    8. '<|end|>' → logprob: -6.222393989562988
    9. '  ' → logprob: -6.472393989562988
    10. '
' → logprob: -6.847393989562988

Token 59: ' intervals' (ID: 49900)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.44314563274383545
    2. ' indices' → logprob: -2.068145751953125
    3. ' substr' → logprob: -2.568145751953125
    4. 'the' → logprob: -2.818145751953125
    5. ' substring' → logprob: -3.818145751953125
    6. ' a' → logprob: -4.068145751953125
    7. ' tokens' → logprob: -4.193145751953125
    8. 'indices' → logprob: -5.568145751953125
    9. ' ranges' → logprob: -5.818145751953125
    10. ' all' → logprob: -5.818145751953125

Token 60: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18148186802864075
    2. ':' → logprob: -2.6814818382263184
    3. ',' → logprob: -3.6814818382263184
    4. '(' → logprob: -3.9314818382263184
    5. ' ' → logprob: -4.181481838226318
    6. 'def' → logprob: -4.306481838226318
    7. '_' → logprob: -4.931481838226318
    8. '    ' → logprob: -5.306481838226318
    9. '.' → logprob: -6.431481838226318
    10. '[' → logprob: -6.681481838226318

Token 61: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010494716465473175
    2. '    
' → logprob: -5.635494709014893
    3. '    ' → logprob: -5.760494709014893
    4. ' ' → logprob: -7.385494709014893
    5. '_' → logprob: -7.635494709014893
    6. '
' → logprob: -7.760494709014893
    7. 'def' → logprob: -7.885494709014893
    8. ' 
' → logprob: -8.01049518585205
    9. ':' → logprob: -8.26049518585205
    10. '(' → logprob: -8.38549518585205

Token 62: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1549113541841507
    2. '    ' → logprob: -2.6549112796783447
    3. 'n' → logprob: -3.7799112796783447
    4. ' n' → logprob: -3.7799112796783447
    5. 'def' → logprob: -4.279911518096924
    6. '    
' → logprob: -5.404911518096924
    7. 'dp' → logprob: -6.154911518096924
    8. ' ' → logprob: -6.654911518096924
    9. '
' → logprob: -6.779911518096924
    10. '#' (adapté à ' #') → logprob: -7.404911518096924

Token 63: ' Given' (ID: 29844)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.8303497433662415
    2. 'n' → logprob: -1.0803496837615967
    3. '   ' → logprob: -2.0803496837615967
    4. 'dp' → logprob: -3.5803496837615967
    5. '#' → logprob: -3.7053496837615967
    6. 'def' → logprob: -4.455349922180176
    7. ' dp' → logprob: -5.205349922180176
    8. '_' → logprob: -5.205349922180176
    9. ' #' → logprob: -5.330349922180176
    10. 'class' → logprob: -5.705349922180176

Token 64: ' the' (ID: 290)
  Prédit: ' an'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' an' → logprob: -0.26066720485687256
    2. ' a' → logprob: -1.6356672048568726
    3. ' the' → logprob: -4.135667324066162
    4. 'a' → logprob: -4.385667324066162
    5. 'an' → logprob: -6.635667324066162
    6. 'the' → logprob: -6.885667324066162
    7. ' )' → logprob: -7.510667324066162
    8. ' n' → logprob: -7.510667324066162
    9. ' s' → logprob: -7.760667324066162
    10. ')' → logprob: -7.885667324066162

Token 65: ' huge' (ID: 9560)
  Prédit: ' length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' length' → logprob: -0.8204765319824219
    2. ' expression' → logprob: -1.1954765319824219
    3. ' next' → logprob: -3.195476531982422
    4. ' current' → logprob: -3.320476531982422
    5. ' code' → logprob: -3.320476531982422
    6. 'length' → logprob: -3.695476531982422
    7. ' input' → logprob: -3.820476531982422
    8. 'expression' → logprob: -3.945476531982422
    9. ' start' → logprob: -4.820476531982422
    10. ' string' → logprob: -4.945476531982422

Token 66: ' constraints' (ID: 31060)
  Prédit: ' number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' number' → logprob: -0.9581006765365601
    2. ' input' → logprob: -1.33310067653656
    3. ' size' → logprob: -1.83310067653656
    4. ' length' → logprob: -2.9581007957458496
    5. ' amount' → logprob: -3.4581007957458496
    6. 'input' → logprob: -3.8331007957458496
    7. 'number' → logprob: -4.33310079574585
    8. 'size' → logprob: -4.33310079574585
    9. ' problem' → logprob: -4.45810079574585
    10. ' code' → logprob: -4.58310079574585

Token 67: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01548378448933363
    2. ' ,' → logprob: -4.265483856201172
    3. '   ' → logprob: -7.890483856201172
    4. ',
' → logprob: -8.140483856201172
    5. ' ' → logprob: -8.390483856201172
    6. ':' → logprob: -9.140483856201172
    7. ' and' → logprob: -9.890483856201172
    8. ' (' → logprob: -10.015483856201172
    9. '<|end|>' → logprob: -10.140483856201172
    10. '(' → logprob: -10.265483856201172

Token 68: 'total' (ID: 9577)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8268693685531616
    2. ')' → logprob: -1.5768693685531616
    3. ' the' → logprob: -2.076869487762451
    4. ' n' → logprob: -2.826869487762451
    5. '10' → logprob: -3.201869487762451
    6. ' )' → logprob: -3.576869487762451
    7. '),' → logprob: -3.951869487762451
    8. ' ),' → logprob: -4.576869487762451
    9. '1' → logprob: -4.701869487762451
    10. ' sys' → logprob: -4.826869487762451

Token 69: ' length' (ID: 5517)
  Prédit: ' length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' length' → logprob: -0.8669358491897583
    2. ' number' → logprob: -0.9919358491897583
    3. 'length' → logprob: -2.9919357299804688
    4. ' input' → logprob: -3.1169357299804688
    5. ')' → logprob: -3.3669357299804688
    6. ' code' → logprob: -4.116935729980469
    7. '_length' → logprob: -4.241935729980469
    8. 'number' → logprob: -4.991935729980469
    9. ' expression' → logprob: -4.991935729980469
    10. ' )' → logprob: -5.116935729980469

Token 70: ' up' (ID: 869)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.127134308218956
    2. '=' → logprob: -3.002134323120117
    3. ')' → logprob: -3.752134323120117
    4. '),' → logprob: -3.877134323120117
    5. ' =' → logprob: -4.127134323120117
    6. 'of' → logprob: -5.752134323120117
    7. ' ),' → logprob: -6.252134323120117
    8. '<|end|>' → logprob: -7.002134323120117
    9. '<|end|>' → logprob: -7.127134323120117
    10. ' )' → logprob: -7.252134323120117

Token 71: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.0002682496269699186
    2. ' to' → logprob: -9.12526798248291
    3. 'o' → logprob: -9.75026798248291
    4. 'To' → logprob: -11.12526798248291
    5. '100' → logprob: -11.37526798248291
    6. '_to' → logprob: -11.37526798248291
    7. 'b' → logprob: -11.75026798248291
    8. 'on' → logprob: -12.00026798248291
    9. '20' → logprob: -12.00026798248291
    10. '```' → logprob: -12.12526798248291

Token 72: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.4851680397987366
    2. ' ' → logprob: -0.9851680397987366
    3. '100' → logprob: -5.235167980194092
    4. '2' → logprob: -5.860167980194092
    5. '200' → logprob: -6.985167980194092
    6. '500' → logprob: -7.610167980194092
    7. '1' → logprob: -7.610167980194092
    8. '250' → logprob: -8.23516845703125
    9. '5' → logprob: -8.48516845703125
    10. '3' → logprob: -8.86016845703125

Token 73: '5' (ID: 20)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.02591111697256565
    2. '2' → logprob: -4.650911331176758
    3. '100' → logprob: -4.650911331176758
    4. '200' → logprob: -5.900911331176758
    5. '1' → logprob: -6.275911331176758
    6. '500' → logprob: -7.275911331176758
    7. '5' → logprob: -8.025911331176758
    8. '300' → logprob: -8.275911331176758
    9. '3' → logprob: -8.400911331176758
    10. '250' → logprob: -9.150911331176758

Token 74: '*' (ID: 9)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.4881070852279663
    2. '*' → logprob: -1.6131070852279663
    3. '0' → logprob: -1.7381070852279663
    4. '10' → logprob: -5.613107204437256
    5. '000' → logprob: -6.238107204437256
    6. ')' → logprob: -6.363107204437256
    7. ' ' → logprob: -6.988107204437256
    8. '**' → logprob: -7.363107204437256
    9. '   ' → logprob: -7.363107204437256
    10. '5' → logprob: -8.363106727600098

Token 75: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0001329791557509452
    2. '1' → logprob: -9.00013256072998
    3. '0' → logprob: -12.75013256072998
    4. ' ' → logprob: -13.00013256072998
    5. '7' → logprob: -14.00013256072998
    6. '100' → logprob: -14.25013256072998
    7. '```' → logprob: -14.37513256072998
    8. '*' → logprob: -14.50013256072998
    9. '105' → logprob: -14.75013256072998
    10. '6' → logprob: -15.12513256072998

Token 76: '^' (ID: 61)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.2659887671470642
    2. '7' → logprob: -1.515988826751709
    3. '5' → logprob: -4.390988826751709
    4. '**' → logprob: -6.515988826751709
    5. '8' → logprob: -9.51598834991455
    6. '9' → logprob: -11.89098834991455
    7. '4' → logprob: -12.26598834991455
    8. '```' → logprob: -12.26598834991455
    9. '^' → logprob: -14.01598834991455
    10. '2' → logprob: -14.39098834991455

Token 77: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.055984269827604294
    2. '7' → logprob: -3.0559842586517334
    3. '5' → logprob: -4.9309844970703125
    4. '8' → logprob: -9.055984497070312
    5. '9' → logprob: -10.555984497070312
    6. '```' → logprob: -12.430984497070312
    7. '4' → logprob: -13.680984497070312
    8. '**' → logprob: -14.180984497070312
    9. '^' → logprob: -14.680984497070312
    10. ' ' → logprob: -14.805984497070312

Token 78: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4911188781261444
    2. ' )' → logprob: -1.7411189079284668
    3. '),' → logprob: -1.8661189079284668
    4. ' ),' → logprob: -2.991118907928467
    5. ',' → logprob: -5.366118907928467
    6. '):' → logprob: -6.741118907928467
    7. '):
' → logprob: -7.241118907928467
    8. ' ' → logprob: -8.616118431091309
    9. ' ,' → logprob: -8.616118431091309
    10. ' tokens' → logprob: -8.741118431091309

Token 79: ' a' (ID: 261)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5726025700569153
    2. ',' → logprob: -0.9476025700569153
    3. '   ' → logprob: -4.19760274887085
    4. '):' → logprob: -4.19760274887085
    5. ')' → logprob: -4.32260274887085
    6. ' ' → logprob: -6.69760274887085
    7. ' :' → logprob: -6.94760274887085
    8. ',
' → logprob: -7.44760274887085
    9. ':
' → logprob: -7.82260274887085
    10. ' ,' → logprob: -8.072602272033691

Token 80: ' full' (ID: 3149)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.307119607925415
    2. 'll' → logprob: -1.307119607925415
    3. 's' → logprob: -2.932119607925415
    4. 'b' → logprob: -2.932119607925415
    5. ' def' → logprob: -2.932119607925415
    6. ' ' → logprob: -3.307119607925415
    7. ' better' → logprob: -3.682119607925415
    8. 'dp' → logprob: -3.807119607925415
    9. ' possible' → logprob: -4.057119369506836
    10. 'l' → logprob: -4.432119369506836

Token 81: ' O' (ID: 532)
  Prédit: ' approach'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' approach' → logprob: -0.8940569758415222
    2. ' dynamic' → logprob: -2.144057035446167
    3. ')' → logprob: -3.144057035446167
    4. ' ' → logprob: -3.269057035446167
    5. '    ' → logprob: -3.394057035446167
    6. ' solution' → logprob: -3.644057035446167
    7. 'dfs' → logprob: -3.769057035446167
    8. ' recursive' → logprob: -3.894057035446167
    9. ' recursion' → logprob: -4.019056797027588
    10. ' implementation' → logprob: -4.269056797027588

Token 82: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.16803637146949768
    2. '(N' → logprob: -1.9180363416671753
    3. '(' → logprob: -5.293036460876465
    4. '((' → logprob: -6.668036460876465
    5. 'n' → logprob: -7.793036460876465
    6. 'N' → logprob: -8.418036460876465
    7. '(|' → logprob: -9.168036460876465
    8. ' (' → logprob: -9.730536460876465
    9. '-' → logprob: -9.793036460876465
    10. '(len' → logprob: -10.105536460876465

Token 83: '^' (ID: 61)
  Prédit: '^'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '^' → logprob: -0.18538445234298706
    2. '2' → logprob: -3.060384511947632
    3. ')' → logprob: -3.185384511947632
    4. '**' → logprob: -3.185384511947632
    5. ' )' → logprob: -4.685384273529053
    6. ' ^' → logprob: -4.935384273529053
    7. ' log' → logprob: -5.185384273529053
    8. '²' → logprob: -5.310384273529053
    9. ' ' → logprob: -5.435384273529053
    10. 'log' → logprob: -5.560384273529053

Token 84: '3' (ID: 18)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0006329743773676455
    2. '3' → logprob: -7.3756327629089355
    3. ' ' → logprob: -12.750633239746094
    4. '²' → logprob: -13.875633239746094
    5. '1' → logprob: -14.250633239746094
    6. '```' → logprob: -14.375633239746094
    7. '6' → logprob: -15.250633239746094
    8. '^' → logprob: -15.375633239746094
    9. '

' → logprob: -15.625633239746094
    10. ')' → logprob: -15.875633239746094

Token 85: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.42920365929603577
    2. ' )' → logprob: -1.0542036294937134
    3. '+' → logprob: -8.929203987121582
    4. ' ' → logprob: -8.929203987121582
    5. '*' → logprob: -9.554203987121582
    6. '+)' → logprob: -10.304203987121582
    7. ' solution' → logprob: -10.429203987121582
    8. ' +' → logprob: -10.929203987121582
    9. ' *' → logprob: -11.304203987121582
    10. '```' → logprob: -11.679203987121582

Token 86: ' DP' (ID: 51992)
  Prédit: ' approach'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' approach' → logprob: -0.6776280403137207
    2. ' ' → logprob: -1.3026280403137207
    3. ' )' → logprob: -2.5526280403137207
    4. ')' → logprob: -2.5526280403137207
    5. ' solution' → logprob: -3.4276280403137207
    6. ' code' → logprob: -5.052628040313721
    7. ' implementation' → logprob: -5.052628040313721
    8. '   ' → logprob: -5.552628040313721
    9. '    ' → logprob: -6.052628040313721
    10. '  ' → logprob: -6.177628040313721

Token 87: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.19884954392910004
    2. ' approach' → logprob: -2.6988494396209717
    3. ' would' → logprob: -3.1988494396209717
    4. '   ' → logprob: -3.3238494396209717
    5. ' ' → logprob: -4.948849678039551
    6. ')' → logprob: -5.073849678039551
    7. ' will' → logprob: -5.323849678039551
    8. ' may' → logprob: -5.448849678039551
    9. ' solution' → logprob: -5.823849678039551
    10. '    ' → logprob: -6.573849678039551

Token 88: ' impossible' (ID: 19786)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.6160973310470581
    2. ' ' → logprob: -0.9910973310470581
    3. ' impossible' → logprob: -3.1160974502563477
    4. ' infe' → logprob: -4.241097450256348
    5. ' space' → logprob: -4.741097450256348
    6. 'n' → logprob: -5.366097450256348
    7. ' too' → logprob: -5.991097450256348
    8. ' ```' → logprob: -6.241097450256348
    9. 'not' → logprob: -6.491097450256348
    10. ' no' → logprob: -6.491097450256348

Token 89: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17469742894172668
    2. ':' → logprob: -2.9246973991394043
    3. '    
' → logprob: -3.0496973991394043
    4. '
' → logprob: -4.424697399139404
    5. ')' → logprob: -4.549697399139404
    6. '<|end|>' → logprob: -4.549697399139404
    7. ',' → logprob: -4.674697399139404
    8. '<|end|>' → logprob: -4.924697399139404
    9. '.' → logprob: -6.174697399139404
    10. '    ' → logprob: -6.174697399139404

Token 90: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16177231073379517
    2. '    
' → logprob: -2.2867722511291504
    3. '    ' → logprob: -4.16177225112915
    4. '
' → logprob: -5.16177225112915
    5. ' 
' → logprob: -5.28677225112915
    6. '\' → logprob: -5.66177225112915
    7. ' ' → logprob: -5.78677225112915
    8. ':' → logprob: -5.78677225112915
    9. '     
' → logprob: -6.03677225112915
    10. ')' → logprob: -6.41177225112915

Token 91: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08563027530908585
    2. '    
' → logprob: -3.835630178451538
    3. ')' → logprob: -4.460630416870117
    4. '#' (adapté à ' #') → logprob: -4.835630416870117
    5. ':' → logprob: -4.835630416870117
    6. '    ' → logprob: -5.210630416870117
    7. ' 
' → logprob: -5.210630416870117
    8. '
' → logprob: -5.460630416870117
    9. ',' → logprob: -5.710630416870117
    10. 'def' → logprob: -5.835630416870117

Token 92: ' Instead' (ID: 21050)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0555195808410645
    2. '   ' → logprob: -1.1805195808410645
    3. ' ' → logprob: -1.6805195808410645
    4. 'n' → logprob: -3.3055195808410645
    5. ' 
' → logprob: -3.8055195808410645
    6. '    ' → logprob: -3.8055195808410645
    7. '\' → logprob: -3.9305195808410645
    8. ' #' → logprob: -4.5555195808410645
    9. '    
' → logprob: -5.3055195808410645
    10. ')' → logprob: -5.6805195808410645

Token 93: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0345894992351532
    2. '   ' → logprob: -3.7845895290374756
    3. ':' → logprob: -5.5345892906188965
    4. ' ,' → logprob: -5.7845892906188965
    5. '    ' → logprob: -6.4095892906188965
    6. ',
' → logprob: -7.6595892906188965
    7. '    
' → logprob: -7.6595892906188965
    8. 'def' → logprob: -8.159589767456055
    9. ' a' → logprob: -8.284589767456055
    10. ' we' → logprob: -8.409589767456055

Token 94: ' we' (ID: 581)
  Prédit: ' pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pass' → logprob: -0.8871263861656189
    2. '    ' → logprob: -1.6371264457702637
    3. ' #' → logprob: -2.1371264457702637
    4. ' ' → logprob: -2.7621264457702637
    5. ' a' → logprob: -3.2621264457702637
    6. ' import' → logprob: -3.5121264457702637
    7. ' def' → logprob: -3.8871264457702637
    8. 'def' → logprob: -4.137126445770264
    9. '   ' → logprob: -4.262126445770264
    10. '#' → logprob: -4.387126445770264

Token 95: ' leverage' (ID: 48255)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.4322105944156647
    2. ' ' → logprob: -2.307210683822632
    3. ''ll' → logprob: -2.307210683822632
    4. ' need' → logprob: -2.932210683822632
    5. ' will' → logprob: -4.057210445404053
    6. '<|end|>' → logprob: -4.932210445404053
    7. ' #' → logprob: -5.182210445404053
    8. ' should' → logprob: -5.182210445404053
    9. ' could' → logprob: -5.432210445404053
    10. 'n' → logprob: -5.432210445404053

Token 96: ' the' (ID: 290)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.8744995594024658
    2. ' the' → logprob: -1.7494995594024658
    3. ' memo' → logprob: -2.374499559402466
    4. 'a' → logprob: -2.499499559402466
    5. ' threading' → logprob: -3.249499559402466
    6. 'the' → logprob: -3.249499559402466
    7. ' sys' → logprob: -3.749499559402466
    8. ' O' → logprob: -4.124499320983887
    9. ' multiprocessing' → logprob: -4.374499320983887
    10. ' an' → logprob: -4.749499320983887

Token 97: ' grammar' (ID: 41735)
  Prédit: ' fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' fact' → logprob: -0.7437402606010437
    2. ' structure' → logprob: -1.7437403202056885
    3. ' problem' → logprob: -1.8687403202056885
    4. ' input' → logprob: -4.243740081787109
    5. ' special' → logprob: -4.493740081787109
    6. ' specific' → logprob: -4.493740081787109
    7. ' linear' → logprob: -4.618740081787109
    8. ' code' → logprob: -4.618740081787109
    9. ' length' → logprob: -4.618740081787109
    10. 'fact' → logprob: -4.618740081787109

Token 98: ' structure' (ID: 8866)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9949164390563965
    2. ':' → logprob: -1.1199164390563965
    3. '   ' → logprob: -2.7449164390563965
    4. ''s' → logprob: -3.1199164390563965
    5. '=' → logprob: -3.4949164390563965
    6. ' ' → logprob: -3.4949164390563965
    7. '-based' → logprob: -3.4949164390563965
    8. '.' → logprob: -3.8699164390563965
    9. ',' → logprob: -4.2449164390563965
    10. ' to' → logprob: -4.2449164390563965

Token 99: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16772262752056122
    2. '   ' → logprob: -2.667722702026367
    3. ' to' → logprob: -3.542722702026367
    4. ' ' → logprob: -4.042722702026367
    5. ' :' → logprob: -4.792722702026367
    6. ' for' → logprob: -4.917722702026367
    7. ',' → logprob: -5.292722702026367
    8. ' and' → logprob: -5.292722702026367
    9. '.' → logprob: -5.667722702026367
    10. ' =' → logprob: -6.292722702026367

Token 100: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14359627664089203
    2. '    ' → logprob: -2.6435961723327637
    3. '    
' → logprob: -3.7685961723327637
    4. ' 
' → logprob: -4.268596172332764
    5. ' ' → logprob: -4.393596172332764
    6. '     
' → logprob: -5.143596172332764
    7. '    
    
' → logprob: -6.893596172332764
    8. ')' → logprob: -7.018596172332764
    9. '   
' → logprob: -7.143596172332764
    10. '\' → logprob: -7.268596172332764

Token 101: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6837915182113647
    2. '    ' → logprob: -1.1837915182113647
    3. ' ' → logprob: -2.4337916374206543
    4. ' 
' → logprob: -3.3087916374206543
    5. '    
' → logprob: -3.6837916374206543
    6. '     
' → logprob: -4.558791637420654
    7. ' )' → logprob: -5.183791637420654
    8. 'def' → logprob: -5.808791637420654
    9. '    
    
' → logprob: -6.058791637420654
    10. ')' → logprob: -6.058791637420654

Token 102: ' -' (ID: 533)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9445157647132874
    2. '   ' → logprob: -1.1945157051086426
    3. '    ' → logprob: -1.9445157051086426
    4. 'class' → logprob: -3.9445157051086426
    5. ' 
' → logprob: -4.194515705108643
    6. ' )' → logprob: -4.319515705108643
    7. '#' → logprob: -4.319515705108643
    8. 'def' → logprob: -4.569515705108643
    9. ' #' → logprob: -4.569515705108643
    10. 'A' → logprob: -4.944515705108643

Token 103: ' F' (ID: 454)
  Prédit: ' from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' from' → logprob: -1.3821882009506226
    2. 'from' → logprob: -1.8821882009506226
    3. ' def' → logprob: -2.132188320159912
    4. 'def' → logprob: -2.257188320159912
    5. ' n' → logprob: -2.632188320159912
    6. ' #' → logprob: -3.007188320159912
    7. ' s' → logprob: -3.382188320159912
    8. ' class' → logprob: -3.757188320159912
    9. 's' → logprob: -3.882188320159912
    10. 'class' → logprob: -4.007188320159912

Token 104: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.2368894815444946
    2. '()' → logprob: -1.7368894815444946
    3. ')' → logprob: -1.8618894815444946
    4. '   ' → logprob: -2.236889362335205
    5. '  ' → logprob: -2.736889362335205
    6. 'or' → logprob: -3.611889362335205
    7. ':' → logprob: -3.611889362335205
    8. '(' → logprob: -3.986889362335205
    9. ' ::=' → logprob: -4.486889362335205
    10. ''' → logprob: -4.611889362335205

Token 105: ' a' (ID: 261)
  Prédit: ' ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' '' → logprob: -1.7608059644699097
    2. ''' → logprob: -2.010806083679199
    3. '   ' → logprob: -2.135806083679199
    4. ' ' → logprob: -2.510806083679199
    5. '"' → logprob: -2.760806083679199
    6. ' "' → logprob: -2.885806083679199
    7. ' (' → logprob: -3.010806083679199
    8. ' '('' → logprob: -3.010806083679199
    9. '  ' → logprob: -3.510806083679199
    10. ' E' → logprob: -3.635806083679199

Token 106: ' digit' (ID: 19181)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10223469883203506
    2. 'or' → logprob: -4.227234840393066
    3. ')' → logprob: -4.477234840393066
    4. '#' → logprob: -4.602234840393066
    5. 'a' → logprob: -4.727234840393066
    6. '=' → logprob: -4.727234840393066
    7. ' (' → logprob: -5.227234840393066
    8. ' =' → logprob: -5.477234840393066
    9. '[' → logprob: -5.602234840393066
    10. '('' → logprob: -5.727234840393066

Token 107: ' or' (ID: 503)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.1765493154525757
    2. ' =' → logprob: -2.0515494346618652
    3. '+' → logprob: -2.1765494346618652
    4. '
' → logprob: -2.9265494346618652
    5. ',' → logprob: -3.3015494346618652
    6. ')' → logprob: -3.3015494346618652
    7. '0' → logprob: -3.3015494346618652
    8. '   ' → logprob: -3.5515494346618652
    9. '\n' → logprob: -3.6765494346618652
    10. '*' → logprob: -3.8015494346618652

Token 108: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -1.370296597480774
    2. '(' → logprob: -1.620296597480774
    3. ' (' → logprob: -1.870296597480774
    4. ' an' → logprob: -1.995296597480774
    5. ''' → logprob: -2.2452964782714844
    6. ' '('' → logprob: -2.7452964782714844
    7. ' F' → logprob: -3.3702964782714844
    8. ' ' → logprob: -4.620296478271484
    9. 'a' → logprob: -4.745296478271484
    10. 'F' → logprob: -5.245296478271484

Token 109: ' parent' (ID: 5980)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9095677137374878
    2. ''' → logprob: -1.9095677137374878
    3. ' parent' → logprob: -2.4095678329467773
    4. ' single' → logprob: -2.6595678329467773
    5. 'parent' → logprob: -3.2845678329467773
    6. ')' → logprob: -3.4095678329467773
    7. 'n' → logprob: -3.4095678329467773
    8. 'single' → logprob: -3.9095678329467773
    9. ' number' → logprob: -4.034567832946777
    10. ' letter' → logprob: -4.409567832946777

Token 110: 'hes' (ID: 9780)
  Prédit: 'heses'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heses' → logprob: -0.157114639878273
    2. 'hes' → logprob: -2.2821147441864014
    3. 'hesis' → logprob: -3.1571147441864014
    4. 'h' → logprob: -7.282114505767822
    5. 'hs' → logprob: -10.03211498260498
    6. 'hetical' → logprob: -11.40711498260498
    7. '```' → logprob: -11.78211498260498
    8. 'he' → logprob: -11.78211498260498
    9. ')' → logprob: -11.90711498260498
    10. 'es' → logprob: -13.28211498260498

Token 111: 'ized' (ID: 2110)
  Prédit: 'ized'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ized' → logprob: -0.48882627487182617
    2. 't' → logprob: -1.1138262748718262
    3. 'esized' → logprob: -3.738826274871826
    4. 'al' → logprob: -4.238826274871826
    5. 'es' → logprob: -5.113826274871826
    6. ')' → logprob: -5.738826274871826
    7. 'zed' → logprob: -5.863826274871826
    8. 'th' → logprob: -6.738826274871826
    9. 'hesis' → logprob: -7.238826274871826
    10. 'e' → logprob: -7.363826274871826

Token 112: ' expression' (ID: 12973)
  Prédit: 'expression'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expression' → logprob: -0.36055225133895874
    2. ' expression' → logprob: -1.3605523109436035
    3. 'F' → logprob: -4.2355523109436035
    4. 'E' → logprob: -4.3605523109436035
    5. 'expr' → logprob: -4.9855523109436035
    6. ' F' → logprob: -5.6105523109436035
    7. '(expression' → logprob: -6.3605523109436035
    8. ' E' → logprob: -6.7355523109436035
    9. 'factor' → logprob: -6.7355523109436035
    10. '(' → logprob: -6.9855523109436035

Token 113: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3533458411693573
    2. 'def' → logprob: -2.7283458709716797
    3. ')' → logprob: -2.8533458709716797
    4. '
' → logprob: -3.1033458709716797
    5. ':' → logprob: -3.6033458709716797
    6. 'F' → logprob: -3.8533458709716797
    7. '    
' → logprob: -4.35334587097168
    8. ' ' → logprob: -4.60334587097168
    9. ',' → logprob: -4.72834587097168
    10. '\n' → logprob: -4.97834587097168

Token 114: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10066402703523636
    2. ')' → logprob: -2.6006641387939453
    3. 'def' → logprob: -4.975664138793945
    4. ' ' → logprob: -5.475664138793945
    5. '
' → logprob: -5.975664138793945
    6. '    
' → logprob: -6.350664138793945
    7. ':' → logprob: -6.725664138793945
    8. ' )' → logprob: -7.225664138793945
    9. '    ' → logprob: -7.350664138793945
    10. '  ' → logprob: -7.600664138793945

Token 115: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05798976123332977
    2. 'def' → logprob: -3.9329898357391357
    3. ')' → logprob: -4.307989597320557
    4. '    
' → logprob: -4.932989597320557
    5. ' ' → logprob: -6.307989597320557
    6. 's' → logprob: -6.557989597320557
    7. '
' → logprob: -6.557989597320557
    8. ':' → logprob: -6.682989597320557
    9. ',' → logprob: -6.932989597320557
    10. '\' → logprob: -7.182989597320557

Token 116: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10848764330148697
    2. 'def' → logprob: -2.733487606048584
    3. ')' → logprob: -4.358487606048584
    4. '#' → logprob: -4.983487606048584
    5. ' ' → logprob: -5.483487606048584
    6. ' def' → logprob: -6.233487606048584
    7. '*' → logprob: -6.483487606048584
    8. ' =' → logprob: -6.733487606048584
    9. ' )' → logprob: -7.108487606048584
    10. '    
' → logprob: -7.108487606048584

Token 117: ' T' (ID: 353)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.1323833167552948
    2. ' E' → logprob: -2.257383346557617
    3. 'T' → logprob: -4.257383346557617
    4. ' T' → logprob: -5.382383346557617
    5. 'def' → logprob: -9.132383346557617
    6. 'S' → logprob: -9.632383346557617
    7. '   ' → logprob: -9.757383346557617
    8. 'term' → logprob: -10.007383346557617
    9. ' def' → logprob: -10.257383346557617
    10. 'expr' → logprob: -10.257383346557617

Token 118: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03516386076807976
    2. ' =' → logprob: -4.035163879394531
    3. ' :' → logprob: -4.660163879394531
    4. ' ' → logprob: -5.660163879394531
    5. '=' → logprob: -6.785163879394531
    6. ' ->' → logprob: -6.785163879394531
    7. '  ' → logprob: -7.535163879394531
    8. ' ::=' → logprob: -8.160163879394531
    9. '   ' → logprob: -8.410163879394531
    10. '*' → logprob: -8.660163879394531

Token 119: ' sequence' (ID: 16281)
  Prédit: ' F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' F' → logprob: -0.2847326099872589
    2. 'F' → logprob: -1.5347325801849365
    3. ' T' → logprob: -3.9097325801849365
    4. 'T' → logprob: -5.034732818603516
    5. ' ' → logprob: -5.909732818603516
    6. 'def' → logprob: -7.972232818603516
    7. ' a' → logprob: -8.409732818603516
    8. ' main' → logprob: -8.534732818603516
    9. '   ' → logprob: -8.659732818603516
    10. ' f' → logprob: -8.659732818603516

Token 120: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.018592119216918945
    2. ' =' → logprob: -4.26859188079834
    3. 's' → logprob: -6.14359188079834
    4. 'of' → logprob: -6.64359188079834
    5. ' ' → logprob: -8.51859188079834
    6. '=' → logprob: -9.01859188079834
    7. '   ' → logprob: -9.26859188079834
    8. '<|end|>' → logprob: -9.39359188079834
    9. '(' → logprob: -9.64359188079834
    10. '  ' → logprob: -9.89359188079834

Token 121: ' F' (ID: 454)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.08877979964017868
    2. ' F' → logprob: -2.5887796878814697
    3. ' factors' → logprob: -5.838779926300049
    4. '*' → logprob: -6.463779926300049
    5. ' ' → logprob: -6.588779926300049
    6. 'f' → logprob: -7.088779926300049
    7. 'multip' → logprob: -7.338779926300049
    8. ' multip' → logprob: -7.963779926300049
    9. '   ' → logprob: -8.33877944946289
    10. 'Factors' → logprob: -8.46377944946289

Token 122: ' separated' (ID: 33930)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5555558204650879
    2. '*' → logprob: -1.430555820465088
    3. ' *' → logprob: -1.805555820465088
    4. '+' → logprob: -4.805555820465088
    5. ' +' → logprob: -5.680555820465088
    6. ')' → logprob: -5.805555820465088
    7. ' s' → logprob: -7.055555820465088
    8. '*
' → logprob: -7.430555820465088
    9. ' *
' → logprob: -7.430555820465088
    10. ''s' → logprob: -7.430555820465088

Token 123: ' by' (ID: 656)
  Prédit: 'by'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'by' → logprob: -0.20218046009540558
    2. ' by' → logprob: -1.7021805047988892
    3. '   ' → logprob: -7.8271803855896
    4. ' ' → logprob: -8.577180862426758
    5. '*' → logprob: -9.077180862426758
    6. '  ' → logprob: -10.577180862426758
    7. '```' → logprob: -10.952180862426758
    8. '    ' → logprob: -12.077180862426758
    9. '+' → logprob: -13.577180862426758
    10. '_' → logprob: -13.702180862426758

Token 124: ' *
' (ID: 2099)
  Prédit: ''*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''*' → logprob: -0.08881218731403351
    2. ' '*'' → logprob: -2.9638121128082275
    3. ''' → logprob: -3.8388121128082275
    4. '*' → logprob: -4.963812351226807
    5. '"' → logprob: -6.588812351226807
    6. '`' → logprob: -7.338812351226807
    7. '"*' → logprob: -7.588812351226807
    8. ' '+'' → logprob: -7.838812351226807
    9. ' '' → logprob: -8.338811874389648
    10. ' '*' → logprob: -8.338811874389648

Token 125: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9040498733520508
    2. 'def' → logprob: -1.2790498733520508
    3. '    
' → logprob: -2.654049873352051
    4. ')' → logprob: -3.279049873352051
    5. 's' → logprob: -3.404049873352051
    6. ',' → logprob: -3.529049873352051
    7. '*' → logprob: -3.779049873352051
    8. ' ' → logprob: -4.154049873352051
    9. ' def' → logprob: -4.154049873352051
    10. ' *' → logprob: -4.279049873352051

Token 126: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04405921325087547
    2. 'def' → logprob: -3.6690592765808105
    3. ')' → logprob: -5.1690592765808105
    4. '    
' → logprob: -5.7940592765808105
    5. ':' → logprob: -6.4190592765808105
    6. '#' (adapté à ' #') → logprob: -6.7940592765808105
    7. '  ' → logprob: -7.1690592765808105
    8. ' ' → logprob: -7.2940592765808105
    9. ',' → logprob: -7.5440592765808105
    10. '
' → logprob: -7.5440592765808105

Token 127: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13012102246284485
    2. '#' → logprob: -2.5051209926605225
    3. 'def' → logprob: -3.7551209926605225
    4. '
' → logprob: -6.130121231079102
    5. '    
' → logprob: -6.130121231079102
    6. ' ' → logprob: -6.380121231079102
    7. ')' → logprob: -6.505121231079102
    8. ' #' → logprob: -6.630121231079102
    9. '\' → logprob: -6.755121231079102
    10. ' def' → logprob: -7.005121231079102

Token 128: ' E' (ID: 457)
  Prédit: ' E'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' E' → logprob: -0.6507999300956726
    2. 'E' → logprob: -0.7757999300956726
    3. '+' → logprob: -4.775799751281738
    4. ' S' → logprob: -6.025799751281738
    5. 'def' → logprob: -6.275799751281738
    6. 'S' → logprob: -6.400799751281738
    7. '   ' → logprob: -7.150799751281738
    8. ' +' → logprob: -7.275799751281738
    9. ' ' → logprob: -8.025799751281738
    10. ' plus' → logprob: -8.900799751281738

Token 129: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5516207814216614
    2. ' =' → logprob: -1.3016207218170166
    3. ' :' → logprob: -1.9266207218170166
    4. '=' → logprob: -5.301620960235596
    5. ' ' → logprob: -6.926620960235596
    6. '  ' → logprob: -8.926620483398438
    7. '   ' → logprob: -9.926620483398438
    8. '>' → logprob: -10.926620483398438
    9. ' ::=' → logprob: -10.926620483398438
    10. ',' → logprob: -11.051620483398438

Token 130: ' sequence' (ID: 16281)
  Prédit: ' T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' T' → logprob: -0.07791644334793091
    2. ' sequence' → logprob: -3.452916383743286
    3. 'T' → logprob: -3.952916383743286
    4. 'sequence' → logprob: -4.952916622161865
    5. ' ' → logprob: -5.327916622161865
    6. ' space' → logprob: -5.452916622161865
    7. ' expression' → logprob: -6.702916622161865
    8. 'space' → logprob: -6.827916622161865
    9. ' E' → logprob: -6.952916622161865
    10. ' a' → logprob: -7.452916622161865

Token 131: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.009251047857105732
    2. 'of' → logprob: -4.759251117706299
    3. ' ' → logprob: -8.13425064086914
    4. '   ' → logprob: -8.75925064086914
    5. '    ' → logprob: -9.25925064086914
    6. '  ' → logprob: -9.75925064086914
    7. '_' → logprob: -11.88425064086914
    8. '	of' → logprob: -11.88425064086914
    9. '[' → logprob: -12.00925064086914
    10. '<|end|>' → logprob: -12.75925064086914

Token 132: ' T' (ID: 353)
  Prédit: ' T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' T' → logprob: -0.37070775032043457
    2. 'T' → logprob: -1.2457077503204346
    3. ' E' → logprob: -4.7457075119018555
    4. 'E' → logprob: -4.7457075119018555
    5. 'F' → logprob: -6.4957075119018555
    6. ' F' → logprob: -6.6207075119018555
    7. '   ' → logprob: -7.3707075119018555
    8. ' ' → logprob: -7.3707075119018555
    9. '  ' → logprob: -9.433207511901855
    10. '(' → logprob: -9.808207511901855

Token 133: ' separated' (ID: 33930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9461954236030579
    2. ' +' → logprob: -2.071195363998413
    3. ' *' → logprob: -2.446195363998413
    4. 'import' → logprob: -2.446195363998413
    5. '*' → logprob: -2.571195363998413
    6. 'def' → logprob: -2.696195363998413
    7. '+' → logprob: -2.946195363998413
    8. ')' → logprob: -3.321195363998413
    9. '<|end|>' → logprob: -4.571195602416992
    10. '    ' → logprob: -5.071195602416992

Token 134: ' by' (ID: 656)
  Prédit: 'by'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'by' → logprob: -0.16070275008678436
    2. ' by' → logprob: -1.9107027053833008
    3. '+' → logprob: -7.785702705383301
    4. ' ' → logprob: -10.4107027053833
    5. '   ' → logprob: -11.7857027053833
    6. '    ' → logprob: -12.1607027053833
    7. '<' → logprob: -12.9107027053833
    8. '  ' → logprob: -13.0357027053833
    9. '_' → logprob: -13.2857027053833
    10. 'import' → logprob: -13.5357027053833

Token 135: ' +
' (ID: 6119)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.477092981338501
    2. ' +' → logprob: -0.977092981338501
    3. ''' → logprob: -5.977092742919922
    4. ' '+'' → logprob: -9.227092742919922
    5. ' ' → logprob: -9.352092742919922
    6. '"+"' → logprob: -9.977092742919922
    7. ''+' → logprob: -10.227092742919922
    8. ' plus' → logprob: -10.352092742919922
    9. '"' → logprob: -10.727092742919922
    10. ' ' → logprob: -10.727092742919922

Token 136: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007862132042646408
    2. 'def' → logprob: -5.507862091064453
    3. ':' → logprob: -6.632862091064453
    4. '    
' → logprob: -6.757862091064453
    5. '    ' → logprob: -8.257862091064453
    6. ')' → logprob: -8.257862091064453
    7. '\' → logprob: -8.882862091064453
    8. '(' → logprob: -9.007862091064453
    9. '()' → logprob: -10.007862091064453
    10. '  
' → logprob: -10.007862091064453

Token 137: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13952049612998962
    2. ':' → logprob: -2.3895204067230225
    3. '    
' → logprob: -4.764520645141602
    4. 'def' → logprob: -4.889520645141602
    5. ')' → logprob: -5.264520645141602
    6. ' 
' → logprob: -6.014520645141602
    7. '\' → logprob: -6.139520645141602
    8. '(' → logprob: -6.139520645141602
    9. '
' → logprob: -6.389520645141602
    10. '    ' → logprob: -6.764520645141602

Token 138: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009415811859071255
    2. '    ' → logprob: -5.509415626525879
    3. '    
' → logprob: -5.634415626525879
    4. 'def' → logprob: -7.509415626525879
    5. ')' → logprob: -7.884415626525879
    6. '#' → logprob: -8.759415626525879
    7. ' 
' → logprob: -9.384415626525879
    8. 'n' → logprob: -9.884415626525879
    9. 'for' → logprob: -10.009415626525879
    10. '
' → logprob: -10.134415626525879

Token 139: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09401046484708786
    2. '#' (adapté à ' #') → logprob: -3.719010353088379
    3. 'def' → logprob: -3.719010353088379
    4. 'n' → logprob: -4.094010353088379
    5. 'if' → logprob: -4.844010353088379
    6. 'for' → logprob: -5.094010353088379
    7. 'expr' → logprob: -6.219010353088379
    8. ')' → logprob: -6.469010353088379
    9. ' for' → logprob: -7.344010353088379
    10. 's' → logprob: -7.344010353088379

Token 140: ' We' (ID: 1416)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0907062217593193
    2. ' n' → logprob: -3.3407061100006104
    3. '   ' → logprob: -3.8407061100006104
    4. '#' → logprob: -4.0907063484191895
    5. 'def' → logprob: -4.7157063484191895
    6. 'N' → logprob: -7.0907063484191895
    7. 'class' → logprob: -7.2157063484191895
    8. 'data' → logprob: -7.2157063484191895
    9. 'if' → logprob: -7.5907063484191895
    10. 'length' → logprob: -8.090705871582031

Token 141: ' parse' (ID: 8420)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6838048100471497
    2. ' ' → logprob: -1.0588047504425049
    3. ' continue' → logprob: -3.308804750442505
    4. '_' → logprob: -4.058804988861084
    5. '=' → logprob: -4.058804988861084
    6. ' def' → logprob: -4.308804988861084
    7. ' want' → logprob: -4.683804988861084
    8. ' need' → logprob: -4.933804988861084
    9. '(' → logprob: -4.933804988861084
    10. 'def' → logprob: -5.058804988861084

Token 142: ' the' (ID: 290)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7195858955383301
    2. '()' → logprob: -1.21958589553833
    3. 'tokens' → logprob: -3.34458589553833
    4. ' the' → logprob: -3.46958589553833
    5. ' tokens' → logprob: -3.46958589553833
    6. ':' → logprob: -3.84458589553833
    7. ',' → logprob: -3.96958589553833
    8. ' =' → logprob: -4.46958589553833
    9. 'the' → logprob: -4.59458589553833
    10. 'def' → logprob: -4.84458589553833

Token 143: ' expression' (ID: 12973)
  Prédit: ' E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' E' → logprob: -1.3836476802825928
    2. ' code' → logprob: -1.3836476802825928
    3. ' expression' → logprob: -2.0086476802825928
    4. ' entire' → logprob: -2.3836476802825928
    5. ' rest' → logprob: -2.8836476802825928
    6. ' input' → logprob: -2.8836476802825928
    7. ' full' → logprob: -3.5086476802825928
    8. ' )' → logprob: -3.7586476802825928
    9. ')' → logprob: -4.383647918701172
    10. ' ' → logprob: -4.633647918701172

Token 144: ' once' (ID: 4730)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.7134801149368286
    2. ':' → logprob: -0.9634801149368286
    3. '()' → logprob: -3.588479995727539
    4. '(' → logprob: -3.588479995727539
    5. ' =' → logprob: -3.713479995727539
    6. '   ' → logprob: -3.838479995727539
    7. 'def' → logprob: -4.338479995727539
    8. ',' → logprob: -5.838479995727539
    9. '=' → logprob: -5.838479995727539
    10. '.' → logprob: -6.463479995727539

Token 145: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1106823980808258
    2. '():' → logprob: -3.485682487487793
    3. '   ' → logprob: -3.610682487487793
    4. 'def' → logprob: -3.610682487487793
    5. ',' → logprob: -5.235682487487793
    6. '()' → logprob: -5.485682487487793
    7. '(' → logprob: -5.610682487487793
    8. '.' → logprob: -6.235682487487793
    9. ')' → logprob: -6.860682487487793
    10. '):' → logprob: -7.110682487487793

Token 146: ' build' (ID: 3024)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1878572255373001
    2. '    ' → logprob: -2.312857151031494
    3. ' ' → logprob: -2.937857151031494
    4. 'def' → logprob: -4.812857151031494
    5. '    
' → logprob: -6.062857151031494
    6. ' and' → logprob: -6.187857151031494
    7. '  ' → logprob: -6.562857151031494
    8. ' then' → logprob: -7.437857151031494
    9. ' tokens' → logprob: -7.562857151031494
    10. ')' → logprob: -7.687857151031494

Token 147: ' parse' (ID: 8420)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.5234085917472839
    2. ' an' → logprob: -1.3984086513519287
    3. ' the' → logprob: -1.8984086513519287
    4. ' tokens' → logprob: -5.27340841293335
    5. 'tokens' → logprob: -6.64840841293335
    6. 'a' → logprob: -7.52340841293335
    7. 's' → logprob: -7.52340841293335
    8. 'the' → logprob: -7.64840841293335
    9. '()' → logprob: -7.77340841293335
    10. '[]' → logprob: -8.148408889770508

Token 148: ' tree' (ID: 8165)
  Prédit: '_tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tree' → logprob: -0.1787284016609192
    2. ' tree' → logprob: -1.9287283420562744
    3. 'tree' → logprob: -4.9287285804748535
    4. ' trees' → logprob: -5.3037285804748535
    5. '_' → logprob: -5.5537285804748535
    6. '(tree' → logprob: -6.3037285804748535
    7. 'trees' → logprob: -9.428728103637695
    8. 'Tree' → logprob: -9.678728103637695
    9. ')' → logprob: -9.678728103637695
    10. '_TREE' → logprob: -9.803728103637695

Token 149: ' nodes' (ID: 15749)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02041926048696041
    2. '<|end|>' → logprob: -4.520419120788574
    3. '.' → logprob: -6.020419120788574
    4. '<|end|>' → logprob: -6.520419120788574
    5. ',
' → logprob: -6.770419120788574
    6. ')' → logprob: -7.520419120788574
    7. '   ' → logprob: -7.520419120788574
    8. ' and' → logprob: -7.895419120788574
    9. ' tokens' → logprob: -8.020419120788574
    10. ' ,' → logprob: -8.020419120788574

Token 150: ' with' (ID: 483)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3320997655391693
    2. ' =' → logprob: -1.9570997953414917
    3. '   ' → logprob: -2.957099676132202
    4. ')' → logprob: -3.707099676132202
    5. '.' → logprob: -4.457099914550781
    6. '<|end|>' → logprob: -4.582099914550781
    7. '=' → logprob: -4.957099914550781
    8. 'def' → logprob: -4.957099914550781
    9. '<|end|>' → logprob: -5.707099914550781
    10. '[]' → logprob: -5.832099914550781

Token 151: ' start' (ID: 1604)
  Prédit: ' memo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' memo' → logprob: -1.678146481513977
    2. ' positions' → logprob: -2.5531463623046875
    3. 'values' → logprob: -2.6781463623046875
    4. 'positions' → logprob: -2.6781463623046875
    5. 'children' → logprob: -2.6781463623046875
    6. ' tokens' → logprob: -2.8031463623046875
    7. 'memo' → logprob: -2.8031463623046875
    8. ' classes' → logprob: -3.1781463623046875
    9. ' their' → logprob: -3.1781463623046875
    10. '__' → logprob: -3.4281463623046875

Token 152: '-end' (ID: 18507)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.2551172971725464
    2. '=' → logprob: -1.2551172971725464
    3. ' and' → logprob: -1.3801172971725464
    4. '_' → logprob: -2.255117416381836
    5. ' =' → logprob: -3.380117416381836
    6. '_idx' → logprob: -5.005117416381836
    7. '_pos' → logprob: -5.255117416381836
    8. '   ' → logprob: -5.505117416381836
    9. 'and' → logprob: -5.505117416381836
    10. 'pos' → logprob: -5.630117416381836

Token 153: ' indices' (ID: 30378)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.985079288482666
    2. 's' → logprob: -1.735079288482666
    3. ')' → logprob: -1.860079288482666
    4. ',' → logprob: -1.985079288482666
    5. ' indices' → logprob: -3.110079288482666
    6. '_positions' → logprob: -3.360079288482666
    7. ':' → logprob: -3.485079288482666
    8. ' positions' → logprob: -4.360079288482666
    9. ' ' → logprob: -4.860079288482666
    10. '_indices' → logprob: -5.110079288482666

Token 154: ',
' (ID: 412)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3913954198360443
    2. '   ' → logprob: -1.3913954496383667
    3. ',' → logprob: -3.391395330429077
    4. ')' → logprob: -4.516395568847656
    5. 'def' → logprob: -4.641395568847656
    6. '):' → logprob: -5.016395568847656
    7. '<|end|>' → logprob: -5.891395568847656
    8. '(' → logprob: -6.266395568847656
    9. '  ' → logprob: -6.516395568847656
    10. '.' → logprob: -6.641395568847656

Token 155: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05430232360959053
    2. ',' → logprob: -3.929302215576172
    3. '    ' → logprob: -4.054302215576172
    4. ')' → logprob: -5.304302215576172
    5. ':' → logprob: -5.929302215576172
    6. ' ' → logprob: -5.929302215576172
    7. '       ' → logprob: -6.429302215576172
    8. ' 
' → logprob: -7.679302215576172
    9. '    
' → logprob: -7.804302215576172
    10. '  ' → logprob: -7.929302215576172

Token 156: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1551291048526764
    2. '    ' → logprob: -2.5301291942596436
    3. ' ' → logprob: -3.4051291942596436
    4. ')' → logprob: -4.2801289558410645
    5. ',' → logprob: -5.4051289558410645
    6. '       ' → logprob: -6.1551289558410645
    7. ' and' → logprob: -6.6551289558410645
    8. '  ' → logprob: -6.6551289558410645
    9. ':' → logprob: -6.9051289558410645
    10. ' 
' → logprob: -6.9051289558410645

Token 157: ' then' (ID: 1815)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016826480627059937
    2. '    ' → logprob: -5.016826629638672
    3. ' ' → logprob: -5.766826629638672
    4. ' and' → logprob: -6.141826629638672
    5. 'def' → logprob: -6.266826629638672
    6. ')' → logprob: -6.891826629638672
    7. '#' → logprob: -8.266826629638672
    8. '  ' → logprob: -8.391826629638672
    9. 'and' → logprob: -8.391826629638672
    10. '    
' → logprob: -8.516826629638672

Token 158: ' for' (ID: 395)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.09803354740142822
    2. ' process' → logprob: -3.7230334281921387
    3. 'return' → logprob: -3.9730334281921387
    4. ' tokenize' → logprob: -4.348033428192139
    5. ' parse' → logprob: -4.723033428192139
    6. ' use' → logprob: -5.223033428192139
    7. '   ' → logprob: -5.223033428192139
    8. ' def' → logprob: -5.598033428192139
    9. 'def' → logprob: -5.973033428192139
    10. ' tokens' → logprob: -6.723033428192139

Token 159: ' each' (ID: 2454)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.8258579969406128
    2. '_' → logprob: -1.5758579969406128
    3. ' node' → logprob: -2.4508581161499023
    4. ' each' → logprob: -2.7008581161499023
    5. 'token' → logprob: -3.2008581161499023
    6. ' token' → logprob: -3.3258581161499023
    7. ' ' → logprob: -3.7008581161499023
    8. ' i' → logprob: -3.8258581161499023
    9. 'each' → logprob: -4.075858116149902
    10. ' line' → logprob: -4.575858116149902

Token 160: ' node' (ID: 4596)
  Prédit: ' node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' node' → logprob: -0.36335569620132446
    2. ' token' → logprob: -1.4883556365966797
    3. 'token' → logprob: -2.9883556365966797
    4. 'node' → logprob: -4.11335563659668
    5. ' ' → logprob: -5.48835563659668
    6. ' segment' → logprob: -6.23835563659668
    7. ' substring' → logprob: -6.98835563659668
    8. ' valid' → logprob: -7.48835563659668
    9. ' character' → logprob: -7.86335563659668
    10. ' possible' → logprob: -7.86335563659668

Token 161: ' we' (ID: 581)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.15304970741271973
    2. ',' → logprob: -2.4030497074127197
    3. ' ' → logprob: -3.5280497074127197
    4. '.' → logprob: -4.903049468994141
    5. '[' → logprob: -5.778049468994141
    6. ' :' → logprob: -5.778049468994141
    7. '   ' → logprob: -6.528049468994141
    8. '<|end|>' → logprob: -6.653049468994141
    9. ' ,' → logprob: -7.028049468994141
    10. 's' → logprob: -7.403049468994141

Token 162: ' compute' (ID: 23864)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -1.4451972246170044
    2. ' store' → logprob: -1.4451972246170044
    3. ' process' → logprob: -1.5701972246170044
    4. ' continue' → logprob: -2.570197105407715
    5. 'return' → logprob: -3.445197105407715
    6. '   ' → logprob: -3.445197105407715
    7. ' compute' → logprob: -3.570197105407715
    8. 'process' → logprob: -4.195197105407715
    9. 'store' → logprob: -4.195197105407715
    10. ' can' → logprob: -4.445197105407715

Token 163: ' all' (ID: 722)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.898406982421875
    2. ' all' → logprob: -1.398406982421875
    3. ' possible' → logprob: -2.023406982421875
    4. '<|end|>' → logprob: -2.773406982421875
    5. ' its' → logprob: -3.148406982421875
    6. ' their' → logprob: -3.273406982421875
    7. 'possible' → logprob: -4.273406982421875
    8. 'the' → logprob: -4.398406982421875
    9. ' ' → logprob: -5.023406982421875
    10. 'all' → logprob: -5.148406982421875

Token 164: ' possible' (ID: 4149)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 165: ' values' (ID: 4824)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 166: ' of' (ID: 328)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14333106577396393
    2. '   ' → logprob: -2.3933310508728027
    3. '():' → logprob: -4.518331050872803
    4. '(' → logprob: -4.643331050872803
    5. ',' → logprob: -5.518331050872803
    6. ' ' → logprob: -5.643331050872803
    7. '<|end|>' → logprob: -5.893331050872803
    8. 'def' → logprob: -6.143331050872803
    9. '):' → logprob: -6.643331050872803
    10. ')' → logprob: -6.768331050872803

Token 167: ' its' (ID: 1617)
  Prédit: ' its'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' its' → logprob: -0.8058307766914368
    2. ' substr' → logprob: -2.055830717086792
    3. ' valid' → logprob: -2.055830717086792
    4. ' the' → logprob: -2.180830717086792
    5. 'the' → logprob: -2.680830717086792
    6. 'sub' → logprob: -3.180830717086792
    7. ' sub' → logprob: -3.805830717086792
    8. ' tokens' → logprob: -4.430830955505371
    9. ' expressions' → logprob: -4.805830955505371
    10. 'valid' → logprob: -4.930830955505371

Token 168: ' substr' (ID: 29234)
  Prédit: ' substr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' substr' → logprob: -0.5627992749214172
    2. ' valid' → logprob: -2.0627992153167725
    3. 'sub' → logprob: -2.3127992153167725
    4. ' sub' → logprob: -2.3127992153167725
    5. 'express' → logprob: -3.0627992153167725
    6. ' expressions' → logprob: -3.4377992153167725
    7. 'valid' → logprob: -5.062799453735352
    8. ' tokens' → logprob: -5.812799453735352
    9. '<|end|>' → logprob: -5.937799453735352
    10. ' children' → logprob: -6.187799453735352

Token 169: 'ings' (ID: 963)
  Prédit: 'ings'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ings' → logprob: -0.30923977494239807
    2. 'ing' → logprob: -1.5592397451400757
    3. 's' → logprob: -3.4342398643493652
    4. ')' → logprob: -5.559239864349365
    5. ']' → logprob: -5.559239864349365
    6. '   ' → logprob: -5.684239864349365
    7. '[:]' → logprob: -5.684239864349365
    8. '[]' → logprob: -5.809239864349365
    9. '[' → logprob: -6.309239864349365
    10. '(' → logprob: -6.934239864349365

Token 170: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08626889437437057
    2. '   ' → logprob: -3.461268901824951
    3. 'def' → logprob: -3.711268901824951
    4. '(' → logprob: -4.336268901824951
    5. '():' → logprob: -4.836268901824951
    6. ':def' → logprob: -6.836268901824951
    7. ':
' → logprob: -6.961268901824951
    8. '()' → logprob: -7.086268901824951
    9. '
' → logprob: -7.086268901824951
    10. ')' → logprob: -8.336268424987793

Token 171: ' count' (ID: 3605)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.8173372745513916
    2. ' store' → logprob: -1.4423372745513916
    3. '   ' → logprob: -1.8173372745513916
    4. ' ' → logprob: -2.3173372745513916
    5. ' memo' → logprob: -3.6923372745513916
    6. ' their' → logprob: -4.8173370361328125
    7. ' cache' → logprob: -5.6923370361328125
    8. 'return' → logprob: -5.8173370361328125
    9. ' pass' → logprob: -6.0673370361328125
    10. '  ' → logprob: -6.0673370361328125

Token 172: ' how' (ID: 1495)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21597963571548462
    2. '(' → logprob: -2.96597957611084
    3. 's' → logprob: -3.21597957611084
    4. ' ' → logprob: -3.34097957611084
    5. '    ' → logprob: -3.84097957611084
    6. '<|end|>' → logprob: -4.34097957611084
    7. '_' → logprob: -4.46597957611084
    8. '  ' → logprob: -5.59097957611084
    9. ')' → logprob: -5.59097957611084
    10. ':' → logprob: -6.21597957611084

Token 173: ' many' (ID: 1991)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2768962383270264
    2. '_' → logprob: -1.2768962383270264
    3. '   ' → logprob: -1.2768962383270264
    4. ' many' → logprob: -2.9018962383270264
    5. ' ' → logprob: -3.6518962383270264
    6. '_many' → logprob: -4.1518964767456055
    7. 'many' → logprob: -4.4018964767456055
    8. '    ' → logprob: -4.7768964767456055
    9. ':' → logprob: -4.9018964767456055
    10. '  ' → logprob: -5.1518964767456055

Token 174: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5205667614936829
    2. '<|end|>' → logprob: -2.270566701889038
    3. ' ' → logprob: -2.520566701889038
    4. ')' → logprob: -2.645566701889038
    5. '_' → logprob: -2.770566701889038
    6. ':' → logprob: -4.020566940307617
    7. '_tokens' → logprob: -4.645566940307617
    8. 'def' → logprob: -4.770566940307617
    9. '<|end|>' → logprob: -4.895566940307617
    10. ' =' → logprob: -4.895566940307617

Token 175: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1494995653629303
    2. ' ' → logprob: -2.7744996547698975
    3. '    ' → logprob: -3.3994996547698975
    4. ':' → logprob: -4.024499416351318
    5. ')' → logprob: -5.024499416351318
    6. '<|end|>' → logprob: -5.524499416351318
    7. '  ' → logprob: -5.649499416351318
    8. ' tokens' → logprob: -6.524499416351318
    9. ',' → logprob: -6.774499416351318
    10. '       ' → logprob: -6.899499416351318

Token 176: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07299154996871948
    2. ' ' → logprob: -3.5729916095733643
    3. '    ' → logprob: -5.072991371154785
    4. ':' → logprob: -5.197991371154785
    5. '_' → logprob: -5.197991371154785
    6. ')' → logprob: -5.322991371154785
    7. '(' → logprob: -5.947991371154785
    8. '  ' → logprob: -6.072991371154785
    9. '_tokens' → logprob: -6.197991371154785
    10. ' =' → logprob: -6.322991371154785

Token 177: ' substr' (ID: 29234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08128272742033005
    2. ')' → logprob: -4.081282615661621
    3. 's' → logprob: -4.581282615661621
    4. ' ' → logprob: -4.581282615661621
    5. ' =' → logprob: -4.706282615661621
    6. 'def' → logprob: -4.831282615661621
    7. '_' → logprob: -5.081282615661621
    8. '()' → logprob: -6.081282615661621
    9. '    ' → logprob: -6.081282615661621
    10. '  ' → logprob: -6.206282615661621

Token 178: 'ings' (ID: 963)
  Prédit: 'ings'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ings' → logprob: -0.10072266310453415
    2. 's' → logprob: -3.600722551345825
    3. 'ines' → logprob: -4.100722789764404
    4. '<|end|>' → logprob: -4.100722789764404
    5. 'ences' → logprob: -4.600722789764404
    6. ')' → logprob: -5.100722789764404
    7. 'strings' → logprob: -5.475722789764404
    8. 'ments' → logprob: -5.975722789764404
    9. 'ents' → logprob: -5.975722789764404
    10. ']' → logprob: -6.475722789764404

Token 179: ' with' (ID: 483)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.055794596672058
    2. ')' → logprob: -1.180794596672058
    3. '<|end|>' → logprob: -1.680794596672058
    4. ':' → logprob: -2.8057947158813477
    5. '<|end|>' → logprob: -4.180794715881348
    6. ' =' → logprob: -4.180794715881348
    7. 'def' → logprob: -4.555794715881348
    8. 's' → logprob: -4.805794715881348
    9. '(' → logprob: -4.930794715881348
    10. '):' → logprob: -5.305794715881348

Token 180: ' a' (ID: 261)
  Prédit: ' valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' valid' → logprob: -0.3344205915927887
    2. ' the' → logprob: -2.084420680999756
    3. ' at' → logprob: -3.584420680999756
    4. ' a' → logprob: -3.959420680999756
    5. 'valid' → logprob: -4.084420680999756
    6. ' values' → logprob: -4.709420680999756
    7. ' unique' → logprob: -4.709420680999756
    8. ' ' → logprob: -4.709420680999756
    9. 'the' → logprob: -4.709420680999756
    10. ' different' → logprob: -4.959420680999756

Token 181: ' given' (ID: 4335)
  Prédit: ' given'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' given' → logprob: -0.5635436177253723
    2. 'll' → logprob: -1.9385435581207275
    3. 'given' → logprob: -2.3135435581207275
    4. ' valid' → logprob: -3.8135435581207275
    5. 're' → logprob: -3.8135435581207275
    6. 'valid' → logprob: -4.063543796539307
    7. ' value' → logprob: -4.188543796539307
    8. ' particular' → logprob: -4.188543796539307
    9. 'ny' → logprob: -4.563543796539307
    10. 'space' → logprob: -4.688543796539307

Token 182: ' value' (ID: 1432)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.13368456065654755
    2. '_' → logprob: -3.3836846351623535
    3. ' value' → logprob: -3.3836846351623535
    4. ' space' → logprob: -4.3836846351623535
    5. ')' → logprob: -5.1336846351623535
    6. ' _' → logprob: -5.2586846351623535
    7. ' values' → logprob: -5.2586846351623535
    8. ' \' → logprob: -5.6336846351623535
    9. ' result' → logprob: -5.8836846351623535
    10. 'value' → logprob: -6.0086846351623535

Token 183: ' exist' (ID: 4310)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2548118829727173
    2. '   ' → logprob: -1.6298118829727173
    3. 'def' → logprob: -4.379811763763428
    4. ')' → logprob: -5.879811763763428
    5. '
' → logprob: -6.004811763763428
    6. '():' → logprob: -6.129811763763428
    7. '(' → logprob: -6.379811763763428
    8. ':
' → logprob: -6.629811763763428
    9. '    
' → logprob: -7.004811763763428
    10. '_' → logprob: -7.254811763763428

Token 184: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12346342951059341
    2. '   ' → logprob: -2.3734633922576904
    3. 'def' → logprob: -4.3734636306762695
    4. '(' → logprob: -6.1234636306762695
    5. '():' → logprob: -6.3734636306762695
    6. ':
' → logprob: -6.4984636306762695
    7. '
' → logprob: -6.9984636306762695
    8. ',' → logprob: -7.2484636306762695
    9. '()' → logprob: -7.4984636306762695
    10. ')' → logprob: -7.7484636306762695

Token 185: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12304472178220749
    2. ':' → logprob: -2.498044729232788
    3. 'def' → logprob: -4.248044490814209
    4. ')' → logprob: -4.998044490814209
    5. '(' → logprob: -5.623044490814209
    6. '    
' → logprob: -5.998044490814209
    7. '    ' → logprob: -6.873044490814209
    8. '\' → logprob: -7.123044490814209
    9. '
' → logprob: -7.123044490814209
    10. '#' → logprob: -7.373044490814209

Token 186: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.060342077165842056
    2. ':' → logprob: -3.5603420734405518
    3. '    
' → logprob: -4.810342311859131
    4. 'def' → logprob: -4.935342311859131
    5. '
' → logprob: -5.810342311859131
    6. 'import' → logprob: -6.310342311859131
    7. '\' → logprob: -6.435342311859131
    8. ' 
' → logprob: -6.435342311859131
    9. '_' → logprob: -6.685342311859131
    10. '\n' → logprob: -6.810342311859131

Token 187: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.062060002237558365
    2. 'def' → logprob: -3.0620601177215576
    3. '#' → logprob: -5.6870598793029785
    4. '    ' → logprob: -6.0620598793029785
    5. '    
' → logprob: -6.1870598793029785
    6. 'import' → logprob: -6.5620598793029785
    7. '(' → logprob: -6.5620598793029785
    8. ')' → logprob: -6.9370598793029785
    9. ':' → logprob: -8.187060356140137
    10. '\' → logprob: -8.437060356140137

Token 188: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16993874311447144
    2. '#' (adapté à ' #') → logprob: -2.419938802719116
    3. 'def' → logprob: -3.294938802719116
    4. '    ' → logprob: -5.169938564300537
    5. 'class' → logprob: -5.169938564300537
    6. '    
' → logprob: -5.794938564300537
    7. ')' → logprob: -5.919938564300537
    8. 'import' → logprob: -6.044938564300537
    9. 'from' → logprob: -6.169938564300537
    10. '(' → logprob: -6.169938564300537

Token 189: ' To' (ID: 2514)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14521043002605438
    2. '#' → logprob: -2.8952105045318604
    3. '(' → logprob: -3.2702105045318604
    4. 'def' → logprob: -3.6452105045318604
    5. ' ' → logprob: -5.895210266113281
    6. '    ' → logprob: -6.020210266113281
    7. '    
' → logprob: -6.395210266113281
    8. ')' → logprob: -6.770210266113281
    9. ':' → logprob: -6.895210266113281
    10. 'class' → logprob: -7.270210266113281

Token 190: ' handle' (ID: 5318)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5902351140975952
    2. ':' → logprob: -1.4652351140975952
    3. '   ' → logprob: -2.0902352333068848
    4. ')' → logprob: -3.8402352333068848
    5. ' def' → logprob: -4.340235233306885
    6. '_' → logprob: -4.340235233306885
    7. ' ' → logprob: -4.590235233306885
    8. '(' → logprob: -4.840235233306885
    9. ' :' → logprob: -4.840235233306885
    10. 'import' → logprob: -6.215235233306885

Token 191: ' substr' (ID: 29234)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.7927075028419495
    2. '_' → logprob: -1.5427074432373047
    3. ')' → logprob: -2.4177074432373047
    4. ' ' → logprob: -2.5427074432373047
    5. 'the' → logprob: -2.7927074432373047
    6. ' a' → logprob: -3.7927074432373047
    7. ' recursion' → logprob: -4.417707443237305
    8. ' expressions' → logprob: -4.917707443237305
    9. ' an' → logprob: -5.167707443237305
    10. ' all' → logprob: -5.167707443237305

Token 192: 'ings' (ID: 963)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9512723684310913
    2. '_' → logprob: -1.9512723684310913
    3. 'essions' → logprob: -2.451272487640381
    4. '   ' → logprob: -2.576272487640381
    5. 'ers' → logprob: -2.701272487640381
    6. 'er' → logprob: -2.701272487640381
    7. 'import' → logprob: -2.951272487640381
    8. 'ing' → logprob: -2.951272487640381
    9. 'strings' → logprob: -3.826272487640381
    10. '...' → logprob: -3.826272487640381

Token 193: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8573128581047058
    2. '(' → logprob: -1.8573129177093506
    3. ' ' → logprob: -1.8573129177093506
    4. '_' → logprob: -2.2323129177093506
    5. ',' → logprob: -2.4823129177093506
    6. '   ' → logprob: -4.1073126792907715
    7. 's' → logprob: -4.3573126792907715
    8. ' of' → logprob: -4.8573126792907715
    9. ' (' → logprob: -5.1073126792907715
    10. '=' → logprob: -5.7323126792907715

Token 194: ' we' (ID: 581)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9137547612190247
    2. '   ' → logprob: -0.9137547612190247
    3. '    ' → logprob: -1.7887547016143799
    4. 'def' → logprob: -4.413754940032959
    5. 'import' → logprob: -5.913754940032959
    6. ' we' → logprob: -6.038754940032959
    7. '    
' → logprob: -6.163754940032959
    8. ' 
' → logprob: -6.413754940032959
    9. '  ' → logprob: -6.538754940032959
    10. '#' → logprob: -7.038754940032959

Token 195: ' parse' (ID: 8420)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.2370137870311737
    2. ' ' → logprob: -3.362013816833496
    3. ' def' → logprob: -3.362013816833496
    4. 'def' → logprob: -3.987013816833496
    5. 'continue' → logprob: -4.112013816833496
    6. ' need' → logprob: -4.237013816833496
    7. ' return' → logprob: -4.737013816833496
    8. '_' → logprob: -4.737013816833496
    9. ' split' → logprob: -4.737013816833496
    10. ''ll' → logprob: -5.237013816833496

Token 196: ' not' (ID: 625)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6548776030540466
    2. ' the' → logprob: -2.4048776626586914
    3. ' ' → logprob: -2.7798776626586914
    4. ' expressions' → logprob: -3.2798776626586914
    5. '(' → logprob: -3.5298776626586914
    6. '(expression' → logprob: -3.5298776626586914
    7. 'tokens' → logprob: -3.6548776626586914
    8. ',' → logprob: -3.6548776626586914
    9. 'the' → logprob: -3.6548776626586914
    10. ' =' → logprob: -4.154877662658691

Token 197: ' only' (ID: 1606)
  Prédit: ' only'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' only' → logprob: -0.4313909709453583
    2. '   ' → logprob: -1.8063910007476807
    3. ' =' → logprob: -3.6813910007476807
    4. ' ' → logprob: -3.6813910007476807
    5. '_tokens' → logprob: -4.056390762329102
    6. ' the' → logprob: -4.431390762329102
    7. 'ations' → logprob: -4.681390762329102
    8. ' tokens' → logprob: -4.806390762329102
    9. 'only' → logprob: -4.806390762329102
    10. 'ation' → logprob: -4.931390762329102

Token 198: ' whole' (ID: 6062)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.7815948724746704
    2. ' tokens' → logprob: -1.0315948724746704
    3. 'tokens' → logprob: -2.531594753265381
    4. ' expressions' → logprob: -3.031594753265381
    5. 'the' → logprob: -3.656594753265381
    6. ',' → logprob: -5.031594753265381
    7. ' full' → logprob: -5.031594753265381
    8. ' all' → logprob: -5.781594753265381
    9. 'token' → logprob: -6.781594753265381
    10. ' ' → logprob: -6.781594753265381

Token 199: ' nodes' (ID: 15749)
  Prédit: ' expressions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' expressions' → logprob: -0.3207269608974457
    2. ' tokens' → logprob: -2.0707268714904785
    3. ' ' → logprob: -2.8207268714904785
    4. '_' → logprob: -4.1957268714904785
    5. 'tokens' → logprob: -4.3207268714904785
    6. '_expression' → logprob: -4.5707268714904785
    7. ' code' → logprob: -4.6957268714904785
    8. ' expression' → logprob: -4.8207268714904785
    9. '_tokens' → logprob: -5.0707268714904785
    10. ' lines' → logprob: -5.3207268714904785

Token 200: ' but' (ID: 889)
  Prédit: ' but'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' but' → logprob: -0.07224437594413757
    2. ',' → logprob: -2.94724440574646
    3. 'but' → logprob: -5.072244167327881
    4. '   ' → logprob: -5.072244167327881
    5. ')' → logprob: -6.322244167327881
    6. ' tokens' → logprob: -8.072244644165039
    7. '<|end|>' → logprob: -8.072244644165039
    8. '_tokens' → logprob: -8.322244644165039
    9. 's' → logprob: -8.447244644165039
    10. '[' → logprob: -8.447244644165039

Token 201: ' also' (ID: 1217)
  Prédit: ' also'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' also' → logprob: -0.07334742695093155
    2. 'also' → logprob: -3.448347330093384
    3. ' substr' → logprob: -3.573347330093384
    4. '   ' → logprob: -6.073347568511963
    5. ' tokens' → logprob: -6.323347568511963
    6. ' all' → logprob: -6.323347568511963
    7. ' partial' → logprob: -6.573347568511963
    8. ' the' → logprob: -7.073347568511963
    9. ' parts' → logprob: -7.698347568511963
    10. 'all' → logprob: -8.323347091674805

Token 202: ' sub' (ID: 1543)
  Prédit: ' substr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' substr' → logprob: -0.9556054472923279
    2. ' partial' → logprob: -1.0806055068969727
    3. ' parts' → logprob: -2.3306055068969727
    4. ' their' → logprob: -3.0806055068969727
    5. ' all' → logprob: -3.3306055068969727
    6. ' tokens' → logprob: -3.7056055068969727
    7. ' prefixes' → logprob: -4.080605506896973
    8. ' sub' → logprob: -4.705605506896973
    9. ' shorter' → logprob: -5.205605506896973
    10. ' smaller' → logprob: -5.330605506896973

Token 203: '-n' (ID: 5219)
  Prédit: 'strings'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'strings' → logprob: -0.12198121845722198
    2. 'string' → logprob: -3.496981143951416
    3. 'tokens' → logprob: -4.246981143951416
    4. 'express' → logprob: -4.246981143951416
    5. 'str' → logprob: -4.371981143951416
    6. 's' → logprob: -4.746981143951416
    7. '_' → logprob: -4.996981143951416
    8. 'nodes' → logprob: -5.246981143951416
    9. 'tree' → logprob: -5.621981143951416
    10. 'trees' → logprob: -5.621981143951416

Token 204: 'odes' (ID: 3821)
  Prédit: 'odes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'odes' → logprob: -0.04435040056705475
    2. 'ode' → logprob: -3.2943503856658936
    3. 'on' → logprob: -6.169350624084473
    4. 'ames' → logprob: -6.669350624084473
    5. 'ame' → logprob: -6.794350624084473
    6. 'o' → logprob: -8.294350624084473
    7. 'otes' → logprob: -8.419350624084473
    8. '```' → logprob: -8.419350624084473
    9. 'a' → logprob: -8.669350624084473
    10. 'ot' → logprob: -8.794350624084473

Token 205: ' representing' (ID: 25389)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3242417871952057
    2. ')' → logprob: -2.574241876602173
    3. 'def' → logprob: -2.824241876602173
    4. ',' → logprob: -3.199241876602173
    5. ':' → logprob: -3.324241876602173
    6. '<|end|>' → logprob: -3.949241876602173
    7. ' ' → logprob: -4.949241638183594
    8. 's' → logprob: -5.324241638183594
    9. '_' → logprob: -5.324241638183594
    10. ']' → logprob: -5.574241638183594

Token 206: ' substr' (ID: 29234)
  Prédit: ' tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tokens' → logprob: -1.0619657039642334
    2. ' all' → logprob: -1.3119657039642334
    3. ' substr' → logprob: -2.3119657039642334
    4. ' parts' → logprob: -2.3119657039642334
    5. ' intervals' → logprob: -3.3119657039642334
    6. ' partial' → logprob: -3.4369657039642334
    7. ' ranges' → logprob: -3.6869657039642334
    8. ' possible' → logprob: -4.6869659423828125
    9. ' expressions' → logprob: -4.8119659423828125
    10. 'all' → logprob: -5.0619659423828125

Token 207: 'ings' (ID: 963)
  Prédit: 'ings'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ings' → logprob: -0.07401716709136963
    2. 'strings' → logprob: -3.57401704788208
    3. 's' → logprob: -3.69901704788208
    4. '   ' → logprob: -4.19901704788208
    5. 'rings' → logprob: -7.19901704788208
    6. ')' → logprob: -7.44901704788208
    7. 'ranges' → logprob: -7.94901704788208
    8. '(' → logprob: -8.699017524719238
    9. ']' → logprob: -8.699017524719238
    10. 'ing' → logprob: -8.824017524719238

Token 208: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.49447232484817505
    2. ':' → logprob: -1.2444722652435303
    3. 'def' → logprob: -3.3694722652435303
    4. ',' → logprob: -3.9944722652435303
    5. '<|end|>' → logprob: -3.9944722652435303
    6. ')' → logprob: -4.869472503662109
    7. '<|end|>' → logprob: -5.494472503662109
    8. ' =' → logprob: -5.744472503662109
    9. '):' → logprob: -5.744472503662109
    10. '_' → logprob: -5.869472503662109

Token 209: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01403762772679329
    2. 'def' → logprob: -4.514037609100342
    3. '    
' → logprob: -7.014037609100342
    4. '    ' → logprob: -7.889037609100342
    5. '#' → logprob: -8.0140380859375
    6. ')' → logprob: -8.1390380859375
    7. '(' → logprob: -8.1390380859375
    8. '<|end|>' → logprob: -8.3890380859375
    9. '...' → logprob: -8.6390380859375
    10. ':' → logprob: -9.6390380859375

Token 210: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09127098321914673
    2. '_' → logprob: -3.591270923614502
    3. ':' → logprob: -3.841270923614502
    4. ')' → logprob: -4.841270923614502
    5. 'def' → logprob: -4.841270923614502
    6. ' ' → logprob: -5.341270923614502
    7. '    ' → logprob: -5.341270923614502
    8. '    
' → logprob: -5.716270923614502
    9. ' 
' → logprob: -6.466270923614502
    10. '<|end|>' → logprob: -6.591270923614502

Token 211: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03474138304591179
    2. 'def' → logprob: -3.9097414016723633
    3. '    
' → logprob: -5.534741401672363
    4. '    ' → logprob: -5.659741401672363
    5. '(' → logprob: -6.409741401672363
    6. 'import' → logprob: -6.409741401672363
    7. '#' → logprob: -7.159741401672363
    8. ')' → logprob: -7.284741401672363
    9. ' 
' → logprob: -7.909741401672363
    10. ':' → logprob: -8.534741401672363

Token 212: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31284600496292114
    2. 'def' → logprob: -1.4378459453582764
    3. '#' (adapté à ' #') → logprob: -4.9378461837768555
    4. '    ' → logprob: -4.9378461837768555
    5. ')' → logprob: -5.5628461837768555
    6. '    
' → logprob: -5.8128461837768555
    7. ' ' → logprob: -6.0628461837768555
    8. '(' → logprob: -6.1878461837768555
    9. ' def' → logprob: -7.0628461837768555
    10. 'import' → logprob: -7.1878461837768555

Token 213: ' But' (ID: 3072)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5769233703613281
    2. '   ' → logprob: -1.2019233703613281
    3. '(' → logprob: -2.826923370361328
    4. '#' → logprob: -3.201923370361328
    5. ')' → logprob: -4.826923370361328
    6. ' ' → logprob: -4.826923370361328
    7. ':' → logprob: -5.201923370361328
    8. '    ' → logprob: -5.826923370361328
    9. 'class' → logprob: -6.076923370361328
    10. 'de' → logprob: -6.201923370361328

Token 214: ' enumer' (ID: 21093)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9791102409362793
    2. ':' → logprob: -1.3541102409362793
    3. '_' → logprob: -2.2291102409362793
    4. '(' → logprob: -2.6041102409362793
    5. ' ' → logprob: -3.4791102409362793
    6. ' def' → logprob: -3.8541102409362793
    7. ' (' → logprob: -3.8541102409362793
    8. '<|end|>' → logprob: -3.8541102409362793
    9. '<|end|>' → logprob: -4.229110240936279
    10. '#' → logprob: -4.479110240936279

Token 215: 'ating' (ID: 1365)
  Prédit: 'ate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ate' → logprob: -0.01513676904141903
    2. 'ating' → logprob: -4.64013671875
    3. 'ates' → logprob: -5.26513671875
    4. '_' → logprob: -10.51513671875
    5. 'rate' → logprob: -10.64013671875
    6. ' ate' → logprob: -11.14013671875
    7. ' ' → logprob: -11.39013671875
    8. 'at' → logprob: -11.51513671875
    9. 'a' → logprob: -11.51513671875
    10. 'ation' → logprob: -11.64013671875

Token 216: ' all' (ID: 722)
  Prédit: ' all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.9644976258277893
    2. '<|end|>' → logprob: -0.9644976258277893
    3. ' tokens' → logprob: -2.7144975662231445
    4. ' ' → logprob: -2.8394975662231445
    5. '<|end|>' → logprob: -3.3394975662231445
    6. ' the' → logprob: -3.9644975662231445
    7. 'all' → logprob: -4.5894975662231445
    8. 'tokens' → logprob: -4.7144975662231445
    9. '...' → logprob: -5.0894975662231445
    10. '_' → logprob: -5.3394975662231445

Token 217: ' substr' (ID: 29234)
  Prédit: ' tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tokens' → logprob: -0.4605708122253418
    2. '_tokens' → logprob: -2.085570812225342
    3. 'tokens' → logprob: -2.460570812225342
    4. '_token' → logprob: -3.335570812225342
    5. ' ' → logprob: -3.460570812225342
    6. '<|end|>' → logprob: -4.085570812225342
    7. ' substr' → logprob: -4.210570812225342
    8. ' possible' → logprob: -4.460570812225342
    9. '_' → logprob: -4.585570812225342
    10. ' token' → logprob: -4.585570812225342

Token 218: 'ings' (ID: 963)
  Prédit: 'ings'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ings' → logprob: -0.3940364718437195
    2. 'strings' → logprob: -1.1440365314483643
    3. 's' → logprob: -5.394036293029785
    4. 'tokens' → logprob: -6.894036293029785
    5. 'rings' → logprob: -7.519036293029785
    6. 'ing' → logprob: -8.019036293029785
    7. 'str' → logprob: -8.894036293029785
    8. 'ranges' → logprob: -9.019036293029785
    9. '_strings' → logprob: -9.519036293029785
    10. 'ingss' → logprob: -9.894036293029785

Token 219: ' and' (ID: 326)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 220: ' their' (ID: 1043)
  Prédit: ' storing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' storing' → logprob: -0.6172367334365845
    2. ' parsing' → logprob: -1.2422367334365845
    3. ' counting' → logprob: -2.742236614227295
    4. ' memo' → logprob: -3.492236614227295
    5. ' their' → logprob: -3.992236614227295
    6. ' computing' → logprob: -4.367236614227295
    7. ' tokens' → logprob: -5.367236614227295
    8. ' caching' → logprob: -5.367236614227295
    9. ' processing' → logprob: -5.492236614227295
    10. ' indexing' → logprob: -5.867236614227295

Token 221: ' values' (ID: 4824)
  Prédit: ' counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' counts' → logprob: -0.7940899729728699
    2. ' values' → logprob: -0.9190899729728699
    3. ' possible' → logprob: -2.5440900325775146
    4. ' count' → logprob: -4.0440897941589355
    5. ' frequencies' → logprob: -4.0440897941589355
    6. 'values' → logprob: -4.1690897941589355
    7. '_values' → logprob: -6.2940897941589355
    8. '_count' → logprob: -6.2940897941589355
    9. 'count' → logprob: -6.2940897941589355
    10. 'possible' → logprob: -6.4190897941589355

Token 222: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.48564445972442627
    2. ' ' → logprob: -1.1106444597244263
    3. ',' → logprob: -4.360644340515137
    4. 's' → logprob: -4.985644340515137
    5. ' would' → logprob: -5.235644340515137
    6. '
' → logprob: -5.360644340515137
    7. ')' → logprob: -5.610644340515137
    8. '  
' → logprob: -5.860644340515137
    9. ' 
' → logprob: -5.985644340515137
    10. ' continues' → logprob: -5.985644340515137

Token 223: ' impossible' (ID: 19786)
  Prédit: ' impossible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' impossible' → logprob: -0.03445683419704437
    2. ' infe' → logprob: -3.909456729888916
    3. ' not' → logprob: -4.409456729888916
    4. ' too' → logprob: -7.409456729888916
    5. ' impr' → logprob: -8.409457206726074
    6. ' ' → logprob: -8.534457206726074
    7. ' in' → logprob: -8.784457206726074
    8. ' space' → logprob: -9.409457206726074
    9. ' n' → logprob: -9.534457206726074
    10. 'n' → logprob: -10.034457206726074

Token 224: ' due' (ID: 5192)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4840109348297119
    2. '.' → logprob: -1.984010934829712
    3. ':' → logprob: -2.234010934829712
    4. '<|end|>' → logprob: -2.734010934829712
    5. ')' → logprob: -3.609010934829712
    6. '#' → logprob: -4.359010696411133
    7. '   ' → logprob: -4.984010696411133
    8. 'def' → logprob: -5.484010696411133
    9. '_' → logprob: -5.734010696411133
    10. '<|end|>' → logprob: -5.734010696411133

Token 225: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.23086118698120117
    2. '_' → logprob: -2.230861186981201
    3. ' ' → logprob: -2.980861186981201
    4. 'to' → logprob: -3.480861186981201
    5. '_to' → logprob: -4.855861186981201
    6. ' _' → logprob: -4.980861186981201
    7. '  ' → logprob: -7.605861186981201
    8. '<|end|>' → logprob: -7.855861186981201
    9. ' ▁' → logprob: -8.60586166381836
    10. '=' → logprob: -8.60586166381836

Token 226: ' problem' (ID: 4792)
  Prédit: ' memory'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' memory' → logprob: -0.2027553766965866
    2. ' space' → logprob: -2.2027554512023926
    3. ' time' → logprob: -3.4527554512023926
    4. ' length' → logprob: -4.077755451202393
    5. ' the' → logprob: -4.452755451202393
    6. ' ' → logprob: -5.827755451202393
    7. ' size' → logprob: -6.077755451202393
    8. ' code' → logprob: -6.202755451202393
    9. ' input' → logprob: -6.327755451202393
    10. ' n' → logprob: -6.952755451202393

Token 227: ' size' (ID: 2349)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 228: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8465112447738647
    2. '   ' → logprob: -1.2215112447738647
    3. ',' → logprob: -2.0965113639831543
    4. '.' → logprob: -2.8465113639831543
    5. '<|end|>' → logprob: -3.3465113639831543
    6. '<|end|>' → logprob: -4.096511363983154
    7. ')' → logprob: -4.221511363983154
    8. 'def' → logprob: -4.971511363983154
    9. ':
' → logprob: -5.846511363983154
    10. 'import' → logprob: -5.971511363983154

Token 229: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7150741219520569
    2. ':' → logprob: -1.090074062347412
    3. ')' → logprob: -2.840074062347412
    4. '
' → logprob: -3.715074062347412
    5. '<|end|>' → logprob: -3.715074062347412
    6. ',' → logprob: -3.965074062347412
    7. 'def' → logprob: -4.090074062347412
    8. ':
' → logprob: -5.465074062347412
    9. '):' → logprob: -5.465074062347412
    10. '#' → logprob: -5.840074062347412

Token 230: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1624450981616974
    2. '#' → logprob: -3.787445068359375
    3. ' 
' → logprob: -3.787445068359375
    4. '\' → logprob: -3.787445068359375
    5. 'def' → logprob: -4.037445068359375
    6. ')' → logprob: -4.412445068359375
    7. '    
' → logprob: -4.412445068359375
    8. '
' → logprob: -4.787445068359375
    9. ' ' → logprob: -5.287445068359375
    10. ',' → logprob: -5.287445068359375

Token 231: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.49313756823539734
    2. 'def' → logprob: -1.9931375980377197
    3. '#' → logprob: -2.6181375980377197
    4. 'import' → logprob: -3.1181375980377197
    5. ' 
' → logprob: -3.1181375980377197
    6. '    
' → logprob: -4.118137359619141
    7. '<|end|>' → logprob: -4.368137359619141
    8. '<|end|>' → logprob: -4.493137359619141
    9. '
' → logprob: -4.618137359619141
    10. ' ' → logprob: -4.993137359619141

Token 232: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28887054324150085
    2. '#' (adapté à ' #') → logprob: -1.9138705730438232
    3. 'def' → logprob: -3.5388705730438232
    4. ' 
' → logprob: -4.288870334625244
    5. '    
' → logprob: -4.288870334625244
    6. 'import' → logprob: -4.288870334625244
    7. ' ' → logprob: -4.663870334625244
    8. '    ' → logprob: -4.788870334625244
    9. '
' → logprob: -4.913870334625244
    10. ' #' → logprob: -6.788870334625244

Token 233: ' Hence' (ID: 47682)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.1547222137451172
    2. '#' → logprob: -1.4047222137451172
    3. '   ' → logprob: -2.154722213745117
    4. ' ' → logprob: -2.404722213745117
    5. 'import' → logprob: -2.529722213745117
    6. 'class' → logprob: -3.654722213745117
    7. '(' → logprob: -3.654722213745117
    8. ' #' → logprob: -3.904722213745117
    9. ' 
' → logprob: -4.029722213745117
    10. ' def' → logprob: -4.404722213745117

Token 234: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 235: ' the' (ID: 290)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '    ' → logprob: -1.1178052425384521
    2. 'def' → logprob: -1.4928052425384521
    3. ' ' → logprob: -1.8678052425384521
    4. '   ' → logprob: -2.117805242538452
    5. ' we' → logprob: -2.742805242538452
    6. ' def' → logprob: -3.117805242538452
    7. 'import' → logprob: -4.117805480957031
    8. ' ' → logprob: -4.367805480957031
    9. '<|end|>' → logprob: -4.742805480957031
    10. '#' → logprob: -5.992805480957031

Token 236: ' problem' (ID: 4792)
  Prédit: ' code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' code' → logprob: -0.3492284417152405
    2. '#' → logprob: -3.0992283821105957
    3. ' approach' → logprob: -3.0992283821105957
    4. ' def' → logprob: -3.0992283821105957
    5. 'def' → logprob: -3.4742283821105957
    6. ' rest' → logprob: -3.5992283821105957
    7. ' next' → logprob: -3.8492283821105957
    8. ' main' → logprob: -3.9742283821105957
    9. ' ' → logprob: -4.724228382110596
    10. ' parser' → logprob: -4.849228382110596

Token 237: ' is' (ID: 382)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 238: ' known' (ID: 5542)
  Prédit: ' incomplete'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' incomplete' → logprob: -1.0436447858810425
    2. ' to' → logprob: -1.6686447858810425
    3. ' hard' → logprob: -3.293644905090332
    4. '#' → logprob: -3.418644905090332
    5. ' simplified' → logprob: -3.418644905090332
    6. ' solved' → logprob: -3.668644905090332
    7. ' in' → logprob: -3.793644905090332
    8. ' #' → logprob: -3.793644905090332
    9. ' inherently' → logprob: -3.918644905090332
    10. ' rest' → logprob: -3.918644905090332

Token 239: ' as' (ID: 472)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.13040891289710999
    2. ' as' → logprob: -2.755409002304077
    3. 'to' → logprob: -4.005408763885498
    4. '_' → logprob: -4.630408763885498
    5. ':' → logprob: -4.880408763885498
    6. ' for' → logprob: -5.005408763885498
    7. '.' → logprob: -5.880408763885498
    8. ',' → logprob: -6.255408763885498
    9. 'from' → logprob: -6.505408763885498
    10. 'for' → logprob: -6.630408763885498

Token 240: ' counting' (ID: 43276)
  Prédit: 'NP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'NP' → logprob: -1.299182653427124
    2. ' NP' → logprob: -1.424182653427124
    3. '#' → logprob: -1.674182653427124
    4. '"' → logprob: -2.549182653427124
    5. ' #' → logprob: -3.299182653427124
    6. 'a' → logprob: -3.424182653427124
    7. ' a' → logprob: -3.674182653427124
    8. '"#' → logprob: -3.674182653427124
    9. 'hard' → logprob: -4.424182891845703
    10. ' "' → logprob: -4.549182891845703

Token 241: ' substr' (ID: 29234)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.15457087755203247
    2. '_sub' → logprob: -3.5295708179473877
    3. '<|end|>' → logprob: -3.6545708179473877
    4. '_tokens' → logprob: -4.029571056365967
    5. ' substr' → logprob: -4.154571056365967
    6. ')' → logprob: -4.279571056365967
    7. ' _' → logprob: -5.404571056365967
    8. ' subsets' → logprob: -5.529571056365967
    9. '_token' → logprob: -5.654571056365967
    10. ' the' → logprob: -5.904571056365967

Token 242: 'ings' (ID: 963)
  Prédit: 'ings'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ings' → logprob: -0.028987418860197067
    2. 'strings' → logprob: -3.903987407684326
    3. 'ing' → logprob: -5.528987407684326
    4. 's' → logprob: -6.153987407684326
    5. 'rings' → logprob: -6.653987407684326
    6. 'str' → logprob: -8.278987884521484
    7. ']' → logprob: -9.153987884521484
    8. 'ects' → logprob: -9.278987884521484
    9. 'substr' → logprob: -9.403987884521484
    10. ')' → logprob: -10.153987884521484

Token 243: ' that' (ID: 484)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0675157308578491
    2. ':' → logprob: -1.1925157308578491
    3. 's' → logprob: -2.3175158500671387
    4. ',' → logprob: -2.3175158500671387
    5. '=' → logprob: -3.1925158500671387
    6. ' =' → logprob: -4.317515850067139
    7. '   ' → logprob: -4.317515850067139
    8. ' that' → logprob: -4.567515850067139
    9. '.' → logprob: -4.817515850067139
    10. '(' → logprob: -4.817515850067139

Token 244: ' are' (ID: 553)
  Prédit: ' evaluate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' evaluate' → logprob: -1.5136632919311523
    2. 'evaluate' → logprob: -1.5136632919311523
    3. ' are' → logprob: -1.6386632919311523
    4. 'are' → logprob: -2.3886632919311523
    5. ' represent' → logprob: -3.2636632919311523
    6. 'represent' → logprob: -3.5136632919311523
    7. 'contain' → logprob: -3.8886632919311523
    8. ' contain' → logprob: -3.8886632919311523
    9. ' have' → logprob: -4.013663291931152
    10. ' match' → logprob: -4.013663291931152

Token 245: ' valid' (ID: 4529)
  Prédit: ' valid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' valid' → logprob: -0.10917384177446365
    2. 'valid' → logprob: -2.6091737747192383
    3. ' expressions' → logprob: -4.734173774719238
    4. ' arithmetic' → logprob: -4.859173774719238
    5. 'express' → logprob: -6.484173774719238
    6. ' balanced' → logprob: -6.609173774719238
    7. '+' → logprob: -6.984173774719238
    8. ' mathematical' → logprob: -7.359173774719238
    9. 'balanced' → logprob: -7.359173774719238
    10. ' +' → logprob: -7.484173774719238

Token 246: ' expressions' (ID: 43578)
  Prédit: ' expressions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' expressions' → logprob: -0.11304505914449692
    2. '_' → logprob: -3.6130449771881104
    3. ' ' → logprob: -3.8630449771881104
    4. ' tokens' → logprob: -3.9880449771881104
    5. 'express' → logprob: -4.7380452156066895
    6. ',' → logprob: -5.2380452156066895
    7. 's' → logprob: -5.2380452156066895
    8. '=' → logprob: -5.8630452156066895
    9. ':' → logprob: -6.2380452156066895
    10. ' and' → logprob: -6.7380452156066895

Token 247: ' with' (ID: 483)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0429399311542511
    2. '   ' → logprob: -4.167940139770508
    3. ',' → logprob: -4.792940139770508
    4. 'def' → logprob: -5.917940139770508
    5. '=' → logprob: -6.042940139770508
    6. '(' → logprob: -6.042940139770508
    7. ':
' → logprob: -6.292940139770508
    8. ' and' → logprob: -6.792940139770508
    9. '<|end|>' → logprob: -6.917940139770508
    10. '.' → logprob: -7.042940139770508

Token 248: ' value' (ID: 1432)
  Prédit: ' values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' values' → logprob: -0.8881508708000183
    2. ' value' → logprob: -1.513150930404663
    3. ' a' → logprob: -2.763150930404663
    4. 'value' → logprob: -3.013150930404663
    5. 'values' → logprob: -3.013150930404663
    6. ' given' → logprob: -3.138150930404663
    7. ' positive' → logprob: -3.638150930404663
    8. ' certain' → logprob: -3.763150930404663
    9. ' the' → logprob: -4.388150691986084
    10. 'a' → logprob: -4.388150691986084

Token 249: ' n' (ID: 297)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9098554253578186
    2. '=' → logprob: -1.0348553657531738
    3. ' ' → logprob: -2.409855365753174
    4. ' =' → logprob: -3.034855365753174
    5. ' s' → logprob: -4.034855365753174
    6. '>' → logprob: -4.284855365753174
    7. ' ==' → logprob: -4.409855365753174
    8. '==' → logprob: -4.659855365753174
    9. '.' → logprob: -5.034855365753174
    10. '_' → logprob: -5.159855365753174

Token 250: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.016715707257390022
    2. ':
' → logprob: -5.0167155265808105
    3. ',' → logprob: -6.0167155265808105
    4. 'def' → logprob: -6.6417155265808105
    5. '   ' → logprob: -6.8917155265808105
    6. '):' → logprob: -6.8917155265808105
    7. '=' → logprob: -7.1417155265808105
    8. '.' → logprob: -7.2667155265808105
    9. '
' → logprob: -7.2667155265808105
    10. ')' → logprob: -7.7667155265808105

Token 251: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13861240446567535
    2. ':' → logprob: -2.1386125087738037
    3. ':
' → logprob: -5.763612270355225
    4. '
' → logprob: -6.388612270355225
    5. '    
' → logprob: -6.513612270355225
    6. '):' → logprob: -6.763612270355225
    7. ')' → logprob: -6.763612270355225
    8. '  
' → logprob: -7.638612270355225
    9. '(
' → logprob: -8.013612747192383
    10. 'def' → logprob: -8.263612747192383

Token 252: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11134118586778641
    2. ':' → logprob: -2.6113412380218506
    3. ')' → logprob: -4.6113409996032715
    4. 'def' → logprob: -4.8613409996032715
    5. '
' → logprob: -5.3613409996032715
    6. '    
' → logprob: -6.2363409996032715
    7. '\' → logprob: -6.9863409996032715
    8. '):' → logprob: -7.1113409996032715
    9. 'import' → logprob: -7.3613409996032715
    10. '\n' → logprob: -7.3613409996032715

Token 253: ' The' (ID: 623)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1030915379524231
    2. ':' → logprob: -3.2280914783477783
    3. 'def' → logprob: -3.4780914783477783
    4. '
' → logprob: -4.228091716766357
    5. '    
' → logprob: -6.103091716766357
    6. '\n' → logprob: -6.353091716766357
    7. '(' → logprob: -6.478091716766357
    8. 'import' → logprob: -6.603091716766357
    9. ':
' → logprob: -6.978091716766357
    10. '(
' → logprob: -6.978091716766357

Token 254: ' grammar' (ID: 41735)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1899361610412598
    2. ' def' → logprob: -1.6899361610412598
    3. 'def' → logprob: -1.8149361610412598
    4. ' code' → logprob: -1.9399361610412598
    5. '_' → logprob: -2.4399361610412598
    6. ' input' → logprob: -3.5649361610412598
    7. ' next' → logprob: -4.06493616104126
    8. '#' → logprob: -4.68993616104126
    9. ' n' → logprob: -4.68993616104126
    10. ' #' → logprob: -4.81493616104126

Token 255: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5738016963005066
    2. ' is' → logprob: -1.5738017559051514
    3. '=' → logprob: -1.8238017559051514
    4. ':' → logprob: -3.5738017559051514
    5. 'is' → logprob: -3.8238017559051514
    6. ':
' → logprob: -5.948801517486572
    7. '_' → logprob: -6.073801517486572
    8. 's' → logprob: -6.448801517486572
    9. '=
' → logprob: -6.698801517486572
    10. '#' → logprob: -6.823801517486572

Token 256: ' un' (ID: 537)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'E' → logprob: -1.3559608459472656
    2. ':' → logprob: -1.6059608459472656
    3. ':
' → logprob: -1.6059608459472656
    4. ' =' → logprob: -2.1059608459472656
    5. ' E' → logprob: -2.4809608459472656
    6. '"""
' → logprob: -3.6059608459472656
    7. ' as' → logprob: -4.230960845947266
    8. '``' → logprob: -4.230960845947266
    9. ' defined' → logprob: -4.355960845947266
    10. 'defined' → logprob: -4.480960845947266

Token 257: 'amb' (ID: 1855)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.2091712951660156
    2. 'der' → logprob: -1.9591712951660156
    3. 'defined' → logprob: -2.0841712951660156
    4. 'ion' → logprob: -2.5841712951660156
    5. 'finished' → logprob: -2.5841712951660156
    6. 'iversal' → logprob: -2.9591712951660156
    7. 'def' → logprob: -3.7091712951660156
    8. 'rolled' → logprob: -4.209171295166016
    9. 'clear' → logprob: -4.209171295166016
    10. 'restricted' → logprob: -4.209171295166016

Token 258: 'iguous' (ID: 51394)
  Prédit: 'iguous'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iguous' → logprob: -0.004506781231611967
    2. 'er' → logprob: -5.754506587982178
    3. 'r' → logprob: -8.129507064819336
    4. 'ig' → logprob: -8.379507064819336
    5. 'igu' → logprob: -8.754507064819336
    6. '#' → logprob: -9.004507064819336
    7. 'le' → logprob: -9.004507064819336
    8. 'ar' → logprob: -9.129507064819336
    9. 'rig' → logprob: -10.129507064819336
    10. 'igious' → logprob: -10.254507064819336

Token 259: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.028918737545609474
    2. ',' → logprob: -4.403918743133545
    3. ':
' → logprob: -5.028918743133545
    4. 'def' → logprob: -5.778918743133545
    5. '.' → logprob: -6.278918743133545
    6. '<|end|>' → logprob: -6.528918743133545
    7. '
' → logprob: -7.028918743133545
    8. ')' → logprob: -7.778918743133545
    9. ':def' → logprob: -7.903918743133545
    10. '   ' → logprob: -8.028918266296387

Token 260: ' expressions' (ID: 43578)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.1117634773254395
    2. ' we' → logprob: -1.7367634773254395
    3. ' well' → logprob: -2.4867634773254395
    4. ' valid' → logprob: -2.7367634773254395
    5. ' tokens' → logprob: -2.9867634773254395
    6. 'def' → logprob: -3.4867634773254395
    7. ' all' → logprob: -3.6117634773254395
    8. ' def' → logprob: -3.8617634773254395
    9. ' only' → logprob: -3.8617634773254395
    10. ' a' → logprob: -4.3617634773254395

Token 261: ' correspond' (ID: 11095)
  Prédit: ' are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.2902432978153229
    2. ' can' → logprob: -2.29024338722229
    3. ' =' → logprob: -2.29024338722229
    4. '=' → logprob: -4.415243148803711
    5. ' continue' → logprob: -4.790243148803711
    6. ':' → logprob: -5.165243148803711
    7. ' must' → logprob: -5.540243148803711
    8. 'are' → logprob: -6.040243148803711
    9. 's' → logprob: -6.290243148803711
    10. ',' → logprob: -6.290243148803711

Token 262: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.03282987326383591
    2. 'to' → logprob: -3.657829761505127
    3. '=' → logprob: -6.032829761505127
    4. '_to' → logprob: -6.657829761505127
    5. ' only' → logprob: -7.282829761505127
    6. ' =' → logprob: -7.407829761505127
    7. '_' → logprob: -7.782829761505127
    8. '   ' → logprob: -8.032830238342285
    9. ' ' → logprob: -8.657830238342285
    10. 'ingly' → logprob: -9.157830238342285

Token 263: ' unique' (ID: 5746)
  Prédit: ' single'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' single' → logprob: -0.8232008814811707
    2. ' valid' → logprob: -1.9482009410858154
    3. 'single' → logprob: -2.4482009410858154
    4. ' a' → logprob: -2.8232009410858154
    5. ' unique' → logprob: -3.0732009410858154
    6. ' integers' → logprob: -3.0732009410858154
    7. ' tokens' → logprob: -3.1982009410858154
    8. 'a' → logprob: -3.9482009410858154
    9. ' numbers' → logprob: -4.323200702667236
    10. 'valid' → logprob: -4.948200702667236

Token 264: ' parse' (ID: 8420)
  Prédit: ' tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tokens' → logprob: -0.3206334412097931
    2. ' expressions' → logprob: -2.3206334114074707
    3. ' parse' → logprob: -2.8206334114074707
    4. ' ' → logprob: -3.4456334114074707
    5. 'tokens' → logprob: -3.6956334114074707
    6. ' nodes' → logprob: -4.070633411407471
    7. '_tokens' → logprob: -4.945633411407471
    8. ' _' → logprob: -5.195633411407471
    9. ' token' → logprob: -5.570633411407471
    10. ' parsing' → logprob: -5.820633411407471

Token 265: ' trees' (ID: 16979)
  Prédit: ' trees'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' trees' → logprob: -1.021328330039978
    2. '_tree' → logprob: -1.646328330039978
    3. ' tree' → logprob: -2.2713284492492676
    4. '_' → logprob: -2.3963284492492676
    5. '_nodes' → logprob: -2.3963284492492676
    6. ')' → logprob: -2.5213284492492676
    7. ' ' → logprob: -3.6463284492492676
    8. ' nodes' → logprob: -4.646328449249268
    9. '_tokens' → logprob: -4.771328449249268
    10. ' _' → logprob: -5.146328449249268

Token 266: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05658770352602005
    2. '   ' → logprob: -3.4315876960754395
    3. ',' → logprob: -4.5565876960754395
    4. '.' → logprob: -5.8065876960754395
    5. 'def' → logprob: -5.9315876960754395
    6. ':
' → logprob: -6.4315876960754395
    7. '<|end|>' → logprob: -6.5565876960754395
    8. ')' → logprob: -6.9315876960754395
    9. '):' → logprob: -7.9315876960754395
    10. '
' → logprob: -7.9315876960754395

Token 267: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16665294766426086
    2. ':' → logprob: -2.9166529178619385
    3. '
' → logprob: -3.2916529178619385
    4. 'def' → logprob: -3.6666529178619385
    5. ')' → logprob: -4.541653156280518
    6. '    
' → logprob: -5.041653156280518
    7. '<|end|>' → logprob: -6.041653156280518
    8. '\' → logprob: -6.166653156280518
    9. ',' → logprob: -6.291653156280518
    10. '):' → logprob: -6.666653156280518

Token 268: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.027291668578982353
    2. ':' → logprob: -4.652291774749756
    3. '    
' → logprob: -5.402291774749756
    4. 'def' → logprob: -5.527291774749756
    5. '
' → logprob: -6.527291774749756
    6. ')' → logprob: -6.527291774749756
    7. '\' → logprob: -6.652291774749756
    8. '    ' → logprob: -6.777291774749756
    9. '(' → logprob: -7.027291774749756
    10. '\n' → logprob: -7.277291774749756

Token 269: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06592448800802231
    2. 'def' → logprob: -3.4409244060516357
    3. '    
' → logprob: -4.565924644470215
    4. '
' → logprob: -5.065924644470215
    5. 'import' → logprob: -5.690924644470215
    6. '\' → logprob: -5.940924644470215
    7. '\n' → logprob: -6.190924644470215
    8. '(' → logprob: -6.315924644470215
    9. ')' → logprob: -7.065924644470215
    10. '#' → logprob: -7.565924644470215

Token 270: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012965735979378223
    2. 'def' → logprob: -4.762965679168701
    3. '    
' → logprob: -6.137965679168701
    4. 'import' → logprob: -7.262965679168701
    5. ')' → logprob: -8.01296615600586
    6. '(' → logprob: -8.38796615600586
    7. '    ' → logprob: -8.38796615600586
    8. '
' → logprob: -8.76296615600586
    9. '#' (adapté à ' #') → logprob: -9.13796615600586
    10. ':' → logprob: -9.63796615600586

Token 271: ' So' (ID: 2632)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.23062703013420105
    2. 'class' → logprob: -2.7306270599365234
    3. '   ' → logprob: -2.8556270599365234
    4. '#' → logprob: -3.2306270599365234
    5. 'from' → logprob: -4.230627059936523
    6. 'import' → logprob: -4.605627059936523
    7. '(' → logprob: -4.855627059936523
    8. 'n' → logprob: -6.105627059936523
    9. ')' → logprob: -6.480627059936523
    10. 'pass' → logprob: -6.480627059936523

Token 272: ' the' (ID: 290)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4195883572101593
    2. '   ' → logprob: -1.919588327407837
    3. '    ' → logprob: -2.794588327407837
    4. ' def' → logprob: -2.794588327407837
    5. '_' → logprob: -3.169588327407837
    6. ' ' → logprob: -4.294588565826416
    7. ' ' → logprob: -5.794588565826416
    8. ':' → logprob: -6.044588565826416
    9. ' we' → logprob: -6.294588565826416
    10. ',' → logprob: -6.419588565826416

Token 273: ' substr' (ID: 29234)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.854663074016571
    2. ' code' → logprob: -1.4796631336212158
    3. ' def' → logprob: -1.9796631336212158
    4. ' next' → logprob: -2.354663133621216
    5. ' parser' → logprob: -3.104663133621216
    6. ' main' → logprob: -3.854663133621216
    7. ' parse' → logprob: -4.604662895202637
    8. '#' → logprob: -5.104662895202637
    9. ' ' → logprob: -5.229662895202637
    10. ' rest' → logprob: -5.729662895202637

Token 274: 'ings' (ID: 963)
  Prédit: 'ing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ing' → logprob: -1.0164706707000732
    2. 'ings' → logprob: -1.3914706707000732
    3. 'strings' → logprob: -2.3914706707000732
    4. 'string' → logprob: -2.5164706707000732
    5. 'str' → logprob: -2.7664706707000732
    6. '   ' → logprob: -3.0164706707000732
    7. 'tring' → logprob: -3.5164706707000732
    8. 's' → logprob: -4.516470909118652
    9. 'r' → logprob: -4.516470909118652
    10. 'ring' → logprob: -4.641470909118652

Token 275: ' that' (ID: 484)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2440548986196518
    2. ' are' → logprob: -2.6190547943115234
    3. '   ' → logprob: -3.1190547943115234
    4. '=' → logprob: -3.4940547943115234
    5. ' ' → logprob: -4.244054794311523
    6. ' that' → logprob: -4.744054794311523
    7. '_' → logprob: -4.869054794311523
    8. ':' → logprob: -5.244054794311523
    9. ' can' → logprob: -5.369054794311523
    10. ',' → logprob: -5.494054794311523

Token 276: ' are' (ID: 553)
  Prédit: ' are'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.30436936020851135
    2. 'are' → logprob: -2.3043694496154785
    3. ' correspond' → logprob: -2.4293694496154785
    4. ' represent' → logprob: -3.1793694496154785
    5. ' can' → logprob: -3.9293694496154785
    6. ' form' → logprob: -5.5543694496154785
    7. 'can' → logprob: -6.8043694496154785
    8. ' follow' → logprob: -7.0543694496154785
    9. ' match' → logprob: -7.0543694496154785
    10. 'represent' → logprob: -7.0543694496154785

Token 277: ' valid' (ID: 4529)
  Prédit: ' valid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' valid' → logprob: -0.22062884271144867
    2. 'valid' → logprob: -1.7206288576126099
    3. ' expressions' → logprob: -4.97062873840332
    4. 'express' → logprob: -5.72062873840332
    5. ' full' → logprob: -6.97062873840332
    6. ' complete' → logprob: -7.09562873840332
    7. ')' → logprob: -7.09562873840332
    8. ' parse' → logprob: -7.09562873840332
    9. 'parsed' → logprob: -7.09562873840332
    10. ' part' → logprob: -7.22062873840332

Token 278: ' expressions' (ID: 43578)
  Prédit: ' expressions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' expressions' → logprob: -0.10476967692375183
    2. 'express' → logprob: -3.604769706726074
    3. '_expr' → logprob: -4.104769706726074
    4. '_' → logprob: -4.229769706726074
    5. ' _' → logprob: -4.729769706726074
    6. '_ex' → logprob: -4.979769706726074
    7. ' ' → logprob: -4.979769706726074
    8. '_expression' → logprob: -5.604769706726074
    9. ' are' → logprob: -6.229769706726074
    10. ' tokens' → logprob: -6.354769706726074

Token 279: ' correspond' (ID: 11095)
  Prédit: ' are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' are' → logprob: -1.0334868431091309
    2. ':' → logprob: -1.2834868431091309
    3. ' =' → logprob: -2.658486843109131
    4. ',' → logprob: -2.658486843109131
    5. ' that' → logprob: -3.408486843109131
    6. ' can' → logprob: -3.533486843109131
    7. '=' → logprob: -3.658486843109131
    8. '   ' → logprob: -3.908486843109131
    9. ' must' → logprob: -4.033486843109131
    10. '_' → logprob: -4.158486843109131

Token 280: ' exactly' (ID: 9707)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.11059403419494629
    2. 'to' → logprob: -2.3605940341949463
    3. '_to' → logprob: -5.235593795776367
    4. '_' → logprob: -5.610593795776367
    5. '   ' → logprob: -7.985593795776367
    6. ' ' → logprob: -8.235593795776367
    7. '=' → logprob: -8.860593795776367
    8. ' _' → logprob: -8.860593795776367
    9. '<|end|>' → logprob: -9.110593795776367
    10. '  ' → logprob: -9.235593795776367

Token 281: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.06215960159897804
    2. 'to' → logprob: -2.812159538269043
    3. '   ' → logprob: -9.062159538269043
    4. ' ' → logprob: -10.687159538269043
    5. '_to' → logprob: -11.437159538269043
    6. '  ' → logprob: -11.437159538269043
    7. '<|end|>' → logprob: -12.062159538269043
    8. ',' → logprob: -12.187159538269043
    9. ' of' → logprob: -12.812159538269043
    10. '    ' → logprob: -13.062159538269043

Token 282: ' nodes' (ID: 15749)
  Prédit: ' nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nodes' → logprob: -0.1447257399559021
    2. ' parse' → logprob: -3.269725799560547
    3. ' the' → logprob: -3.769725799560547
    4. ' valid' → logprob: -3.769725799560547
    5. 'nodes' → logprob: -4.269725799560547
    6. ' complete' → logprob: -4.644725799560547
    7. ' node' → logprob: -5.519725799560547
    8. ' substr' → logprob: -5.519725799560547
    9. ' tokens' → logprob: -5.644725799560547
    10. ' a' → logprob: -5.894725799560547

Token 283: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -1.1900991201400757
    2. ',' → logprob: -1.6900991201400757
    3. '   ' → logprob: -1.9400991201400757
    4. '<|end|>' → logprob: -2.4400992393493652
    5. '.' → logprob: -3.3150992393493652
    6. '[' → logprob: -3.3150992393493652
    7. ':' → logprob: -3.3150992393493652
    8. ' =' → logprob: -3.6900992393493652
    9. ' of' → logprob: -3.8150992393493652
    10. '_' → logprob: -4.065099239349365

Token 284: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.576572060585022
    2. ' the' → logprob: -0.826572060585022
    3. 'parse' → logprob: -8.32657241821289
    4. ' parse' → logprob: -8.82657241821289
    5. '   ' → logprob: -9.82657241821289
    6. 'self' → logprob: -10.57657241821289
    7. 'tree' → logprob: -10.95157241821289
    8. 'parsed' → logprob: -11.07657241821289
    9. 'node' → logprob: -11.32657241821289
    10. 'nodes' → logprob: -11.45157241821289

Token 285: ' parse' (ID: 8420)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.22632013261318207
    2. ' parse' → logprob: -1.6013201475143433
    3. 'parsed' → logprob: -7.726320266723633
    4. 'syntax' → logprob: -8.976320266723633
    5. 'par' → logprob: -9.226320266723633
    6. ' syntax' → logprob: -10.101320266723633
    7. 'abstract' → logprob: -10.101320266723633
    8. 'tree' → logprob: -10.351320266723633
    9. 'parser' → logprob: -10.976320266723633
    10. '_parse' → logprob: -11.101320266723633

Token 286: ' tree' (ID: 8165)
  Prédit: ' tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tree' → logprob: -0.35830244421958923
    2. '_tree' → logprob: -1.9833024740219116
    3. '_' → logprob: -2.733302354812622
    4. ' ' → logprob: -2.858302354812622
    5. ')' → logprob: -4.358302593231201
    6. ' trees' → logprob: -4.483302593231201
    7. 'tree' → logprob: -5.608302593231201
    8. '(tree' → logprob: -5.858302593231201
    9. ' _' → logprob: -5.858302593231201
    10. '
' → logprob: -6.608302593231201

Token 287: ',
' (ID: 412)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4815559685230255
    2. ':' → logprob: -1.1065559387207031
    3. ',' → logprob: -3.731555938720703
    4. ')' → logprob: -4.856555938720703
    5. '.' → logprob: -5.231555938720703
    6. 'def' → logprob: -5.356555938720703
    7. '<|end|>' → logprob: -6.106555938720703
    8. '):' → logprob: -6.606555938720703
    9. ':
' → logprob: -7.231555938720703
    10. '[' → logprob: -7.231555938720703

Token 288: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01935392990708351
    2. '#' → logprob: -5.394353866577148
    3. '.' → logprob: -5.644353866577148
    4. ':' → logprob: -6.019353866577148
    5. ' not' → logprob: -6.019353866577148
    6. ',' → logprob: -6.269353866577148
    7. ' and' → logprob: -6.769353866577148
    8. '    ' → logprob: -7.144353866577148
    9. ')' → logprob: -7.644353866577148
    10. 'def' → logprob: -7.769353866577148

Token 289: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1210348978638649
    2. ' not' → logprob: -2.871034860610962
    3. '#' (adapté à ' #') → logprob: -3.246034860610962
    4. ' and' → logprob: -4.996035099029541
    5. 'not' → logprob: -6.121035099029541
    6. '.' → logprob: -6.246035099029541
    7. ',' → logprob: -6.996035099029541
    8. ' which' → logprob: -6.996035099029541
    9. ' #' → logprob: -7.121035099029541
    10. 'except' → logprob: -7.246035099029541

Token 290: ' plus' (ID: 2932)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3872728645801544
    2. '#' → logprob: -1.262272834777832
    3. ' not' → logprob: -4.137272834777832
    4. ' and' → logprob: -4.762272834777832
    5. ' #' → logprob: -5.387272834777832
    6. 'and' → logprob: -5.887272834777832
    7. 'not' → logprob: -6.137272834777832
    8. ' which' → logprob: -7.262272834777832
    9. ',' → logprob: -7.512272834777832
    10. '    ' → logprob: -7.762272834777832

Token 291: ' smaller' (ID: 13679)
  Prédit: ' substr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' substr' → logprob: -0.7125118374824524
    2. ' tokens' → logprob: -1.9625117778778076
    3. ' nodes' → logprob: -2.0875117778778076
    4. ' the' → logprob: -2.7125117778778076
    5. ' their' → logprob: -3.0875117778778076
    6. ' possibly' → logprob: -3.3375117778778076
    7. ' intervals' → logprob: -4.087512016296387
    8. ' some' → logprob: -4.462512016296387
    9. 'tokens' → logprob: -4.712512016296387
    10. ' those' → logprob: -4.712512016296387

Token 292: ' nodes' (ID: 15749)
  Prédit: ' nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nodes' → logprob: -1.2392429113388062
    2. ' tokens' → logprob: -1.7392429113388062
    3. ' intervals' → logprob: -2.3642430305480957
    4. ' parts' → logprob: -2.8642430305480957
    5. 'tokens' → logprob: -2.9892430305480957
    6. ' substr' → logprob: -3.1142430305480957
    7. ' ones' → logprob: -3.3642430305480957
    8. ')' → logprob: -3.4892430305480957
    9. '_nodes' → logprob: -3.4892430305480957
    10. '<|end|>' → logprob: -3.4892430305480957

Token 293: ' corresponding' (ID: 21824)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 294: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.08926060795783997
    2. 'to' → logprob: -2.4642605781555176
    3. '<|end|>' → logprob: -8.839261054992676
    4. '_to' → logprob: -9.589261054992676
    5. ' exactly' → logprob: -10.714261054992676
    6. ' only' → logprob: -10.964261054992676
    7. '<|end|>' → logprob: -11.089261054992676
    8. '_' → logprob: -11.214261054992676
    9. ' ' → logprob: -11.464261054992676
    10. 'ly' → logprob: -12.339261054992676

Token 295: ' sub' (ID: 1543)
  Prédit: ' tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' tokens' → logprob: -1.1765570640563965
    2. ' valid' → logprob: -1.3015570640563965
    3. ' substr' → logprob: -2.1765570640563965
    4. ' digits' → logprob: -2.8015570640563965
    5. 'tokens' → logprob: -3.6765570640563965
    6. ' prefixes' → logprob: -3.8015570640563965
    7. ' single' → logprob: -3.9265570640563965
    8. ' F' → logprob: -3.9265570640563965
    9. ' partial' → logprob: -3.9265570640563965
    10. ' the' → logprob: -4.3015570640563965

Token 296: '-ex' (ID: 15801)
  Prédit: 'strings'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'strings' → logprob: -0.26603811979293823
    2. 'nodes' → logprob: -3.266038179397583
    3. 'string' → logprob: -3.391038179397583
    4. '-' → logprob: -3.516038179397583
    5. '_' → logprob: -3.766038179397583
    6. 'express' → logprob: -3.766038179397583
    7. '_nodes' → logprob: -4.391037940979004
    8. 'str' → logprob: -4.391037940979004
    9. 'trees' → logprob: -4.516037940979004
    10. 'tokens' → logprob: -4.641037940979004

Token 297: 'pressions' (ID: 69735)
  Prédit: 'pressions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pressions' → logprob: -0.05379420891404152
    2. 'pr' → logprob: -3.3037941455841064
    3. 'pression' → logprob: -4.1787943840026855
    4. 'prs' → logprob: -8.553793907165527
    5. 'p' → logprob: -9.803793907165527
    6. 'press' → logprob: -10.803793907165527
    7. 'pres' → logprob: -10.928793907165527
    8. 'ps' → logprob: -11.178793907165527
    9. '```' → logprob: -11.803793907165527
    10. '-' → logprob: -13.303793907165527

Token 298: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7148377895355225
    2. 's' → logprob: -1.2148377895355225
    3. ',' → logprob: -2.3398377895355225
    4. ':' → logprob: -3.4648377895355225
    5. '.' → logprob: -4.089838027954102
    6. 'def' → logprob: -4.464838027954102
    7. '<|end|>' → logprob: -4.464838027954102
    8. ' =' → logprob: -4.589838027954102
    9. '[' → logprob: -4.839838027954102
    10. ')' → logprob: -5.714838027954102

Token 299: 'children' (ID: 10961)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.19740335643291473
    2. ').' → logprob: -2.0724034309387207
    3. ' )' → logprob: -4.322403430938721
    4. ' and' → logprob: -5.072403430938721
    5. ' substr' → logprob: -5.197403430938721
    6. '   ' → logprob: -5.447403430938721
    7. ',' → logprob: -5.697403430938721
    8. '),' → logprob: -6.072403430938721
    9. ' that' → logprob: -6.197403430938721
    10. ' inside' → logprob: -6.322403430938721

Token 300: ').
' (ID: 6294)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5931737422943115
    2. ')' → logprob: -0.9681737422943115
    3. 's' → logprob: -3.7181737422943115
    4. ',' → logprob: -3.9681737422943115
    5. '[' → logprob: -5.093173980712891
    6. '])' → logprob: -6.093173980712891
    7. ']' → logprob: -6.218173980712891
    8. ' )' → logprob: -6.343173980712891
    9. '```' → logprob: -6.843173980712891
    10. ' of' → logprob: -7.218173980712891

Token 301: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.035349249839782715
    2. ':' → logprob: -3.9103493690490723
    3. 'def' → logprob: -5.285349369049072
    4. ')' → logprob: -6.160349369049072
    5. ',' → logprob: -6.160349369049072
    6. 'import' → logprob: -6.910349369049072
    7. '
' → logprob: -7.160349369049072
    8. '_' → logprob: -7.535349369049072
    9. '    
' → logprob: -7.660349369049072
    10. '):' → logprob: -7.910349369049072

Token 302: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03343716636300087
    2. ':' → logprob: -4.033437252044678
    3. 'def' → logprob: -5.408437252044678
    4. ')' → logprob: -5.783437252044678
    5. '    
' → logprob: -6.158437252044678
    6. '
' → logprob: -6.908437252044678
    7. '(' → logprob: -7.033437252044678
    8. '):' → logprob: -7.408437252044678
    9. '    ' → logprob: -7.533437252044678
    10. '\' → logprob: -7.783437252044678

Token 303: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0036076747346669436
    2. '    
' → logprob: -6.878607749938965
    3. 'def' → logprob: -6.878607749938965
    4. '    ' → logprob: -7.878607749938965
    5. '(' → logprob: -8.253607749938965
    6. ')' → logprob: -8.753607749938965
    7. '\' → logprob: -9.378607749938965
    8. ' ' → logprob: -9.628607749938965
    9. ' 
' → logprob: -9.628607749938965
    10. 'import' → logprob: -9.753607749938965

Token 304: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0036767981946468353
    2. 'def' → logprob: -6.253676891326904
    3. '    
' → logprob: -7.003676891326904
    4. 'import' → logprob: -7.878676891326904
    5. '
' → logprob: -8.753676414489746
    6. '    ' → logprob: -9.378676414489746
    7. ')' → logprob: -10.003676414489746
    8. 'from' → logprob: -10.628676414489746
    9. '\' → logprob: -11.003676414489746
    10. '       ' → logprob: -11.003676414489746

Token 305: ' We' (ID: 1416)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4384250044822693
    2. '   ' → logprob: -1.063425064086914
    3. 'class' → logprob: -6.188425064086914
    4. '#' → logprob: -6.188425064086914
    5. ')' → logprob: -6.938425064086914
    6. 'import' → logprob: -7.063425064086914
    7. '(' → logprob: -7.063425064086914
    8. ' def' → logprob: -7.188425064086914
    9. 'from' → logprob: -7.688425064086914
    10. '    ' → logprob: -7.813425064086914

Token 306: ' can' (ID: 665)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.9218388199806213
    2. ' def' → logprob: -1.2968387603759766
    3. '_' → logprob: -2.4218387603759766
    4. ' ' → logprob: -2.9218387603759766
    5. ' can' → logprob: -3.1718387603759766
    6. 'def' → logprob: -3.4218387603759766
    7. ' need' → logprob: -3.7968387603759766
    8. ' =' → logprob: -4.046838760375977
    9. ' will' → logprob: -4.421838760375977
    10. ' want' → logprob: -4.921838760375977

Token 307: ' obtain' (ID: 9579)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2352981567382812
    2. ' continue' → logprob: -1.4852981567382812
    3. ' use' → logprob: -1.9852981567382812
    4. 'def' → logprob: -2.2352981567382812
    5. 'continue' → logprob: -2.6102981567382812
    6. ' proceed' → logprob: -3.1102981567382812
    7. ' parse' → logprob: -3.9852981567382812
    8. ' define' → logprob: -4.360298156738281
    9. ' return' → logprob: -4.485298156738281
    10. 'return' → logprob: -4.735298156738281

Token 308: ' all' (ID: 722)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.29059773683547974
    2. ' a' → logprob: -2.415597677230835
    3. ' all' → logprob: -3.540597677230835
    4. ' nodes' → logprob: -3.540597677230835
    5. ' parse' → logprob: -3.665597677230835
    6. ' tokens' → logprob: -3.790597677230835
    7. 'the' → logprob: -4.040597915649414
    8. '   ' → logprob: -5.290597915649414
    9. 'parse' → logprob: -5.665597915649414
    10. 'tokens' → logprob: -5.790597915649414

Token 309: ' valid' (ID: 4529)
  Prédit: ' nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' nodes' → logprob: -1.0367927551269531
    2. '_nodes' → logprob: -1.0367927551269531
    3. ' parse' → logprob: -2.786792755126953
    4. ' tokens' → logprob: -3.036792755126953
    5. '_tokens' → logprob: -3.161792755126953
    6. ' _' → logprob: -3.786792755126953
    7. ' the' → logprob: -3.911792755126953
    8. 'nodes' → logprob: -4.036792755126953
    9. 'tokens' → logprob: -4.161792755126953
    10. '_sub' → logprob: -4.161792755126953

Token 310: ' expressions' (ID: 43578)
  Prédit: '_nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_nodes' → logprob: -0.08329062908887863
    2. '_sub' → logprob: -3.2082905769348145
    3. '_' → logprob: -4.3332905769348145
    4. '_ex' → logprob: -5.0832905769348145
    5. '_tokens' → logprob: -5.0832905769348145
    6. ' nodes' → logprob: -5.5832905769348145
    7. '_expr' → logprob: -5.9582905769348145
    8. ' expressions' → logprob: -6.0832905769348145
    9. 'nodes' → logprob: -6.0832905769348145
    10. 'express' → logprob: -7.8332905769348145

Token 311: ' substr' (ID: 29234)
  Prédit: '_nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_nodes' → logprob: -1.06217360496521
    2. '_' → logprob: -2.06217360496521
    3. ' =' → logprob: -2.06217360496521
    4. 's' → logprob: -2.31217360496521
    5. ' from' → logprob: -2.68717360496521
    6. 'from' → logprob: -3.81217360496521
    7. '(nodes' → logprob: -3.81217360496521
    8. ' in' → logprob: -3.81217360496521
    9. ',' → logprob: -3.93717360496521
    10. '_tokens' → logprob: -3.93717360496521

Token 312: 'ings' (ID: 963)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1376502513885498
    2. '_nodes' → logprob: -1.6376502513885498
    3. 'ings' → logprob: -1.7626502513885498
    4. 'rings' → logprob: -2.51265025138855
    5. 'strings' → logprob: -2.88765025138855
    6. 'nodes' → logprob: -3.88765025138855
    7. '[]' → logprob: -4.012650489807129
    8. '[' → logprob: -4.137650489807129
    9. '_tokens' → logprob: -4.512650489807129
    10. 'trees' → logprob: -4.637650489807129

Token 313: ' by' (ID: 656)
  Prédit: ' by'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' by' → logprob: -1.1594717502593994
    2. ' =' → logprob: -1.4094717502593994
    3. ' from' → logprob: -1.5344717502593994
    4. '   ' → logprob: -2.4094717502593994
    5. ' in' → logprob: -3.2844717502593994
    6. 'from' → logprob: -3.7844717502593994
    7. ' that' → logprob: -4.03447151184082
    8. ',' → logprob: -4.78447151184082
    9. ':' → logprob: -5.15947151184082
    10. '.' → logprob: -5.15947151184082

Token 314: ' enumer' (ID: 21093)
  Prédit: ' parsing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' parsing' → logprob: -0.40379515290260315
    2. ' travers' → logprob: -1.9037951231002808
    3. 'par' → logprob: -2.7787952423095703
    4. 'rec' → logprob: -3.6537952423095703
    5. 'dfs' → logprob: -3.9037952423095703
    6. ' visiting' → logprob: -4.27879524230957
    7. ' collecting' → logprob: -4.40379524230957
    8. ' storing' → logprob: -5.02879524230957
    9. 'tr' → logprob: -5.27879524230957
    10. ' rec' → logprob: -5.40379524230957

Token 315: 'ating' (ID: 1365)
  Prédit: 'ating'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ating' → logprob: -0.008743274956941605
    2. 'ate' → logprob: -4.7587432861328125
    3. 'at' → logprob: -9.258743286132812
    4. '   ' → logprob: -11.383743286132812
    5. ' ating' → logprob: -12.008743286132812
    6. 'atting' → logprob: -12.383743286132812
    7. 'ATING' → logprob: -12.758743286132812
    8. 'a' → logprob: -13.008743286132812
    9. '```' → logprob: -13.383743286132812
    10. ' at' → logprob: -13.633743286132812

Token 316: ' all' (ID: 722)
  Prédit: ' all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.6161835193634033
    2. ' nodes' → logprob: -1.7411835193634033
    3. ' node' → logprob: -2.4911835193634033
    4. ' the' → logprob: -2.6161835193634033
    5. 'all' → logprob: -3.2411835193634033
    6. ' parse' → logprob: -3.3661835193634033
    7. ' children' → logprob: -4.116183280944824
    8. ' tokens' → logprob: -4.741183280944824
    9. 'children' → logprob: -5.366183280944824
    10. 'nodes' → logprob: -5.491183280944824

Token 317: ' intervals' (ID: 49900)
  Prédit: ' nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' nodes' → logprob: -0.12092873454093933
    2. ' node' → logprob: -3.4959287643432617
    3. ' children' → logprob: -3.8709287643432617
    4. ' parse' → logprob: -3.8709287643432617
    5. ' tokens' → logprob: -4.245928764343262
    6. 'nodes' → logprob: -4.370928764343262
    7. ' child' → logprob: -5.120928764343262
    8. 'children' → logprob: -6.495928764343262
    9. ' valid' → logprob: -6.870928764343262
    10. ' positions' → logprob: -7.120928764343262

Token 318: ' corresponding' (ID: 21824)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.31660914421081543
    2. ',' → logprob: -2.6916091442108154
    3. '   ' → logprob: -2.9416091442108154
    4. ':' → logprob: -3.0666091442108154
    5. ' in' → logprob: -3.9416091442108154
    6. '[:]' → logprob: -4.1916093826293945
    7. '[i' → logprob: -4.5666093826293945
    8. ' [' → logprob: -5.3166093826293945
    9. '[
' → logprob: -5.4416093826293945
    10. '[start' → logprob: -5.4416093826293945

Token 319: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.2523215115070343
    2. 'to' → logprob: -1.502321481704712
    3. '_to' → logprob: -8.127321243286133
    4. '<|end|>' → logprob: -10.002321243286133
    5. '_' → logprob: -11.002321243286133
    6. '   ' → logprob: -11.377321243286133
    7. '<|end|>' → logprob: -12.377321243286133
    8. ' ' → logprob: -12.752321243286133
    9. '_token' → logprob: -12.877321243286133
    10. '_tokens' → logprob: -13.127321243286133

Token 320: ' parse' (ID: 8420)
  Prédit: ' nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nodes' → logprob: -0.19649407267570496
    2. ' parse' → logprob: -2.1964941024780273
    3. ' tokens' → logprob: -3.8214941024780273
    4. 'nodes' → logprob: -4.071494102478027
    5. ' valid' → logprob: -4.571494102478027
    6. 'parse' → logprob: -5.321494102478027
    7. ' node' → logprob: -5.571494102478027
    8. ' a' → logprob: -5.946494102478027
    9. 'tokens' → logprob: -6.821494102478027
    10. ' expressions' → logprob: -7.071494102478027

Token 321: ' tree' (ID: 8165)
  Prédit: '_nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_nodes' → logprob: -0.9344643354415894
    2. ' ' → logprob: -1.8094643354415894
    3. '_' → logprob: -2.059464454650879
    4. ' nodes' → logprob: -2.684464454650879
    5. '_tree' → logprob: -2.809464454650879
    6. ' trees' → logprob: -3.309464454650879
    7. ')' → logprob: -3.434464454650879
    8. ' _' → logprob: -3.684464454650879
    9. ' tree' → logprob: -3.684464454650879
    10. '   ' → logprob: -3.809464454650879

Token 322: ' nodes' (ID: 15749)
  Prédit: ' nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nodes' → logprob: -0.030072692781686783
    2. 's' → logprob: -3.7800726890563965
    3. '_nodes' → logprob: -5.7800726890563965
    4. 'nodes' → logprob: -6.5300726890563965
    5. ' s' → logprob: -7.9050726890563965
    6. ' leaves' → logprob: -8.030073165893555
    7. ' tokens' → logprob: -8.530073165893555
    8. '[' → logprob: -8.780073165893555
    9. ' ' → logprob: -8.905073165893555
    10. ')' → logprob: -8.905073165893555

Token 323: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1115160658955574
    2. ':' → logprob: -3.236515998840332
    3. ',' → logprob: -3.736515998840332
    4. '[' → logprob: -4.486515998840332
    5. ')' → logprob: -4.861515998840332
    6. '.' → logprob: -5.111515998840332
    7. '<|end|>' → logprob: -5.236515998840332
    8. 'def' → logprob: -5.736515998840332
    9. ']' → logprob: -6.236515998840332
    10. '):' → logprob: -6.986515998840332

Token 324: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007385247386991978
    2. ':' → logprob: -6.38238525390625
    3. 'def' → logprob: -6.38238525390625
    4. '    
' → logprob: -6.63238525390625
    5. ')' → logprob: -7.50738525390625
    6. ',' → logprob: -8.00738525390625
    7. '(' → logprob: -8.00738525390625
    8. '\' → logprob: -8.50738525390625
    9. '    ' → logprob: -8.75738525390625
    10. '
' → logprob: -8.75738525390625

Token 325: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016971703618764877
    2. ':' → logprob: -4.766971588134766
    3. 'def' → logprob: -6.016971588134766
    4. ')' → logprob: -6.266971588134766
    5. '    
' → logprob: -6.766971588134766
    6. '(' → logprob: -7.266971588134766
    7. '    ' → logprob: -7.766971588134766
    8. ',' → logprob: -8.266971588134766
    9. 'import' → logprob: -8.766971588134766
    10. '_' → logprob: -8.766971588134766

Token 326: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009691638872027397
    2. '    
' → logprob: -5.3846917152404785
    3. '
' → logprob: -5.8846917152404785
    4. 'def' → logprob: -6.7596917152404785
    5. 'import' → logprob: -7.7596917152404785
    6. '    ' → logprob: -8.13469123840332
    7. ' 
' → logprob: -9.38469123840332
    8. '#' → logprob: -9.75969123840332
    9. '    
    
' → logprob: -10.50969123840332
    10. '\' → logprob: -10.63469123840332

Token 327: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007466182112693787
    2. 'def' → logprob: -5.2574663162231445
    3. '    
' → logprob: -6.7574663162231445
    4. '(' → logprob: -8.257466316223145
    5. ')' → logprob: -8.257466316223145
    6. 'import' → logprob: -9.007466316223145
    7. '    ' → logprob: -9.132466316223145
    8. '       ' → logprob: -9.257466316223145
    9. ':' → logprob: -10.507466316223145
    10. '\' → logprob: -10.757466316223145

Token 328: ' So' (ID: 2632)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24879343807697296
    2. 'def' → logprob: -1.8737934827804565
    3. 'tokens' → logprob: -3.748793363571167
    4. 'class' → logprob: -4.248793601989746
    5. '(' → logprob: -4.748793601989746
    6. 'pos' → logprob: -5.248793601989746
    7. '#' → logprob: -5.498793601989746
    8. 'token' → logprob: -6.248793601989746
    9. '(
' → logprob: -6.498793601989746
    10. 'import' → logprob: -6.873793601989746

Token 329: ' the' (ID: 290)
  Prédit: ' we'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' we' → logprob: -0.517364501953125
    2. '   ' → logprob: -2.017364501953125
    3. '    ' → logprob: -2.392364501953125
    4. 'def' → logprob: -2.892364501953125
    5. ' the' → logprob: -3.392364501953125
    6. 'we' → logprob: -4.142364501953125
    7. ' for' → logprob: -4.267364501953125
    8. ',' → logprob: -4.642364501953125
    9. 'the' → logprob: -4.642364501953125
    10. 'for' → logprob: -4.642364501953125

Token 330: ' problem' (ID: 4792)
  Prédit: ' code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' code' → logprob: -0.8457890748977661
    2. ' parse' → logprob: -1.2207890748977661
    3. ' parser' → logprob: -2.2207889556884766
    4. ' def' → logprob: -3.2207889556884766
    5. ' root' → logprob: -3.3457889556884766
    6. ' tree' → logprob: -3.8457889556884766
    7. 'def' → logprob: -4.345788955688477
    8. ' ' → logprob: -4.595788955688477
    9. ' result' → logprob: -4.845788955688477
    10. '_' → logprob: -5.220788955688477

Token 331: ' reduces' (ID: 38566)
  Prédit: ' continues'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continues' → logprob: -0.98420649766922
    2. '   ' → logprob: -1.7342064380645752
    3. '_' → logprob: -1.9842064380645752
    4. ' is' → logprob: -2.359206438064575
    5. ':' → logprob: -2.859206438064575
    6. ' =' → logprob: -2.984206438064575
    7. '=' → logprob: -3.984206438064575
    8. 'contin' → logprob: -4.234206676483154
    9. ' ' → logprob: -4.484206676483154
    10. ',' → logprob: -4.859206676483154

Token 332: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.3489484488964081
    2. 'to' → logprob: -1.2239484786987305
    3. '   ' → logprob: -8.34894847869873
    4. '_to' → logprob: -9.09894847869873
    5. '<|end|>' → logprob: -9.47394847869873
    6. '<|end|>' → logprob: -10.59894847869873
    7. '    ' → logprob: -11.22394847869873
    8. ',' → logprob: -11.84894847869873
    9. '	to' → logprob: -11.97394847869873
    10. '_' → logprob: -12.22394847869873

Token 333: ':
' (ID: 734)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.08184187114238739
    2. 'count' → logprob: -2.9568419456481934
    3. 'building' → logprob: -5.081841945648193
    4. ' parsing' → logprob: -5.206841945648193
    5. 'finding' → logprob: -5.331841945648193
    6. 'return' → logprob: -5.706841945648193
    7. ' counting' → logprob: -6.206841945648193
    8. 'sol' → logprob: -6.581841945648193
    9. 'def' → logprob: -6.831841945648193
    10. 'processing' → logprob: -7.956841945648193

Token 334: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017563045024871826
    2. '    ' → logprob: -4.3925628662109375
    3. 'def' → logprob: -5.7675628662109375
    4. ' def' → logprob: -7.5175628662109375
    5. '```' → logprob: -7.5175628662109375
    6. 'import' → logprob: -8.767562866210938
    7. ')' → logprob: -9.392562866210938
    8. '[' → logprob: -9.517562866210938
    9. '#' → logprob: -9.767562866210938
    10. ' n' → logprob: -9.892562866210938

Token 335: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010414613410830498
    2. '    ' → logprob: -4.6354146003723145
    3. '#' (adapté à ' #') → logprob: -8.885415077209473
    4. ' #' → logprob: -9.135415077209473
    5. '       ' → logprob: -9.385415077209473
    6. '    
' → logprob: -9.635415077209473
    7. '[' → logprob: -10.135415077209473
    8. ' ' → logprob: -10.635415077209473
    9. 'def' → logprob: -10.635415077209473
    10. '"' → logprob: -11.135415077209473

Token 336: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.695752739906311
    2. ' def' → logprob: -1.445752739906311
    3. 'def' → logprob: -1.820752739906311
    4. ' n' → logprob: -3.0707526206970215
    5. ' #' → logprob: -3.9457526206970215
    6. ' dp' → logprob: -5.0707526206970215
    7. 'from' → logprob: -5.4457526206970215
    8. '#' → logprob: -5.5707526206970215
    9. '    ' → logprob: -5.6957526206970215
    10. ' parse' → logprob: -5.9457526206970215

Token 337: ' Parse' (ID: 26701)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.4816111922264099
    2. 'Parse' → logprob: -1.7316112518310547
    3. ' parse' → logprob: -2.2316112518310547
    4. 'build' → logprob: -4.106611251831055
    5. ' Parse' → logprob: -4.231611251831055
    6. 'par' → logprob: -4.481611251831055
    7. 'def' → logprob: -4.481611251831055
    8. 'Parsing' → logprob: -4.481611251831055
    9. 'Build' → logprob: -5.106611251831055
    10. ' parsing' → logprob: -5.231611251831055

Token 338: ' s' (ID: 265)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.39697787165641785
    2. 'the' → logprob: -1.1469779014587402
    3. 'tokens' → logprob: -5.52197790145874
    4. ' expressions' → logprob: -6.27197790145874
    5. ' tokens' → logprob: -6.64697790145874
    6. 'expr' → logprob: -7.64697790145874
    7. 'expression' → logprob: -7.89697790145874
    8. 'express' → logprob: -8.521977424621582
    9. 'def' → logprob: -8.896977424621582
    10. ' expression' → logprob: -8.896977424621582

Token 339: ' into' (ID: 1511)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.042142510414123535
    2. '[' → logprob: -4.917142391204834
    3. ')' → logprob: -5.292142391204834
    4. '=' → logprob: -5.417142391204834
    5. 's' → logprob: -5.542142391204834
    6. ':' → logprob: -5.667142391204834
    7. '<|end|>' → logprob: -5.792142391204834
    8. '   ' → logprob: -6.292142391204834
    9. '<|end|>' → logprob: -6.292142391204834
    10. ',' → logprob: -6.667142391204834

Token 340: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6288360953330994
    2. ' a' → logprob: -1.7538361549377441
    3. 'parse' → logprob: -2.378836154937744
    4. 'nodes' → logprob: -2.753836154937744
    5. ' an' → logprob: -3.253836154937744
    6. ' nodes' → logprob: -3.378836154937744
    7. 'an' → logprob: -3.753836154937744
    8. ' parse' → logprob: -3.878836154937744
    9. 'the' → logprob: -5.003836154937744
    10. 'tokens' → logprob: -5.253836154937744

Token 341: ' tree' (ID: 8165)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.43479418754577637
    2. ' parse' → logprob: -1.1847941875457764
    3. ' tree' → logprob: -3.4347941875457764
    4. 'tree' → logprob: -4.4347944259643555
    5. ' full' → logprob: -6.6847944259643555
    6. 'node' → logprob: -8.059794425964355
    7. 'syntax' → logprob: -8.559794425964355
    8. ' syntax' → logprob: -8.809794425964355
    9. 'full' → logprob: -9.434794425964355
    10. ' node' → logprob: -9.434794425964355

Token 342: ' of' (ID: 328)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6261729598045349
    2. ',' → logprob: -2.0011730194091797
    3. '<|end|>' → logprob: -2.2511730194091797
    4. '
' → logprob: -3.0011730194091797
    5. ':' → logprob: -3.2511730194091797
    6. '.' → logprob: -3.2511730194091797
    7. ',
' → logprob: -3.5011730194091797
    8. '(s' → logprob: -4.25117301940918
    9. '<|end|>' → logprob: -4.62617301940918
    10. 's' → logprob: -5.00117301940918

Token 343: ' expressions' (ID: 43578)
  Prédit: ' nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nodes' → logprob: -0.7905014157295227
    2. 'nodes' → logprob: -0.7905014157295227
    3. ' tokens' → logprob: -3.415501356124878
    4. 'tokens' → logprob: -3.790501356124878
    5. 'express' → logprob: -4.040501594543457
    6. ' expressions' → logprob: -4.915501594543457
    7. ' parse' → logprob: -5.040501594543457
    8. 'parse' → logprob: -5.665501594543457
    9. 'E' → logprob: -7.540501594543457
    10. 'expression' → logprob: -8.040501594543457

Token 344: ' where' (ID: 1919)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9365382194519043
    2. ' =' → logprob: -1.5615382194519043
    3. ',' → logprob: -1.6865382194519043
    4. ':' → logprob: -2.9365382194519043
    5. 's' → logprob: -3.0615382194519043
    6. '.' → logprob: -3.3115382194519043
    7. 'def' → logprob: -4.186538219451904
    8. ',
' → logprob: -4.561538219451904
    9. ' s' → logprob: -4.561538219451904
    10. '(s' → logprob: -4.686538219451904

Token 345: ' each' (ID: 2454)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -1.1812516450881958
    2. 'tokens' → logprob: -1.9312516450881958
    3. 'each' → logprob: -2.0562515258789062
    4. ' the' → logprob: -2.3062515258789062
    5. ' each' → logprob: -2.3062515258789062
    6. ' tokens' → logprob: -2.4312515258789062
    7. 'the' → logprob: -3.0562515258789062
    8. 's' → logprob: -3.1812515258789062
    9. ' nodes' → logprob: -3.9312515258789062
    10. 'nodes' → logprob: -4.806251525878906

Token 346: ' node' (ID: 4596)
  Prédit: ' node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' node' → logprob: -0.08819353580474854
    2. 'node' → logprob: -3.088193416595459
    3. ' token' → logprob: -4.088193416595459
    4. '_' → logprob: -4.463193416595459
    5. 'token' → logprob: -5.338193416595459
    6. ' ' → logprob: -5.963193416595459
    7. ' _' → logprob: -6.713193416595459
    8. ' character' → logprob: -7.588193416595459
    9. '_token' → logprob: -7.963193416595459
    10. ' part' → logprob: -8.338193893432617

Token 347: ' covers' (ID: 17804)
  Prédit: ' represents'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' represents' → logprob: -0.2849788963794708
    2. ' corresponds' → logprob: -2.0349788665771484
    3. ' is' → logprob: -2.2849788665771484
    4. 'rep' → logprob: -4.909978866577148
    5. ' has' → logprob: -6.534978866577148
    6. ' ' → logprob: -6.909978866577148
    7. ' =' → logprob: -6.909978866577148
    8. 's' → logprob: -6.909978866577148
    9. 'is' → logprob: -7.284978866577148
    10. ' covers' → logprob: -7.784978866577148

Token 348: ' an' (ID: 448)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.1920306384563446
    2. ' the' → logprob: -2.442030668258667
    3. 'a' → logprob: -3.192030668258667
    4. ' an' → logprob: -4.192030429840088
    5. ' s' → logprob: -4.567030429840088
    6. 'the' → logprob: -4.567030429840088
    7. ' one' → logprob: -5.317030429840088
    8. 's' → logprob: -5.567030429840088
    9. 'an' → logprob: -8.567030906677246
    10. ' ' → logprob: -8.567030906677246

Token 349: ' interval' (ID: 17116)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.2658059298992157
    2. ' interval' → logprob: -1.515805959701538
    3. 'expression' → logprob: -4.390805721282959
    4. ' expression' → logprob: -7.015805721282959
    5. 'index' → logprob: -9.390806198120117
    6. 'import' → logprob: -9.765806198120117
    7. 'internal' → logprob: -10.015806198120117
    8. ' ' → logprob: -10.140806198120117
    9. 'input' → logprob: -10.390806198120117
    10. ' s' → logprob: -10.390806198120117

Token 350: ' [' (ID: 723)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8551029562950134
    2. '   ' → logprob: -1.8551030158996582
    3. '[' → logprob: -1.9801030158996582
    4. ',' → logprob: -1.9801030158996582
    5. '[:]' → logprob: -3.105103015899658
    6. 's' → logprob: -4.230103015899658
    7. ' of' → logprob: -4.605103015899658
    8. ' (' → logprob: -4.605103015899658
    9. ' =' → logprob: -4.730103015899658
    10. '(' → logprob: -4.855103015899658

Token 351: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.029673540964722633
    2. ' l' → logprob: -4.2796735763549805
    3. 'start' → logprob: -4.4046735763549805
    4. '0' → logprob: -6.6546735763549805
    5. ' start' → logprob: -7.4046735763549805
    6. 'L' → logprob: -7.5296735763549805
    7. 's' → logprob: -7.9046735763549805
    8. 'i' → logprob: -8.77967357635498
    9. ' L' → logprob: -9.77967357635498
    10. '   ' → logprob: -9.90467357635498

Token 352: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004532181192189455
    2. ' ,' → logprob: -5.629532337188721
    3. ']' → logprob: -8.254531860351562
    4. ',l' → logprob: -8.379531860351562
    5. ',
' → logprob: -9.129531860351562
    6. '][' → logprob: -9.629531860351562
    7. '+' → logprob: -10.129531860351562
    8. ':' → logprob: -10.504531860351562
    9. ' ' → logprob: -10.754531860351562
    10. ',n' → logprob: -10.754531860351562

Token 353: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.016057949513196945
    2. ' r' → logprob: -4.141057968139648
    3. '   ' → logprob: -11.516057968139648
    4. 'l' → logprob: -11.641057968139648
    5. 's' → logprob: -13.516057968139648
    6. ',' → logprob: -13.641057968139648
    7. ',r' → logprob: -14.516057968139648
    8. ')' → logprob: -14.891057968139648
    9. ' l' → logprob: -14.891057968139648
    10. ' ' → logprob: -15.016057968139648

Token 354: ')
' (ID: 446)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.008445429615676403
    2. ')' → logprob: -5.3834452629089355
    3. '+' → logprob: -5.7584452629089355
    4. ',' → logprob: -8.508445739746094
    5. ']
' → logprob: -8.883445739746094
    6. '],' → logprob: -9.258445739746094
    7. ' ]' → logprob: -9.633445739746094
    8. '-' → logprob: -9.883445739746094
    9. ' +' → logprob: -10.633445739746094
    10. '   ' → logprob: -10.758445739746094

Token 355: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024059297516942024
    2. ':' → logprob: -4.649059295654297
    3. ',' → logprob: -5.399059295654297
    4. '
' → logprob: -5.524059295654297
    5. 'def' → logprob: -6.774059295654297
    6. ' =' → logprob: -7.024059295654297
    7. ':
' → logprob: -7.399059295654297
    8. ',
' → logprob: -7.649059295654297
    9. ')' → logprob: -7.649059295654297
    10. '.' → logprob: -7.899059295654297

Token 356: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0085289953276515
    2. ':' → logprob: -5.508529186248779
    3. ',' → logprob: -6.508529186248779
    4. '.' → logprob: -7.383529186248779
    5. '```' → logprob: -7.883529186248779
    6. '#' (adapté à ' #') → logprob: -8.008528709411621
    7. '
' → logprob: -8.133528709411621
    8. ',
' → logprob: -8.258528709411621
    9. 'def' → logprob: -8.508528709411621
    10. ':
' → logprob: -8.758528709411621

Token 357: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005646948236972094
    2. ':' → logprob: -6.2556471824646
    3. 'def' → logprob: -6.8806471824646
    4. '
' → logprob: -7.1306471824646
    5. ',' → logprob: -7.1306471824646
    6. '    
' → logprob: -8.755646705627441
    7. '#' → logprob: -9.255646705627441
    8. '.' → logprob: -9.380646705627441
    9. ' and' → logprob: -9.505646705627441
    10. ':
' → logprob: -9.505646705627441

Token 358: ' For' (ID: 2214)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -1.5727118253707886
    2. 'return' → logprob: -1.9477118253707886
    3. 'def' → logprob: -2.197711944580078
    4. ' nodes' → logprob: -2.197711944580078
    5. ' res' → logprob: -2.322711944580078
    6. ' stack' → logprob: -2.697711944580078
    7. ' def' → logprob: -3.072711944580078
    8. '   ' → logprob: -3.197711944580078
    9. 'nodes' → logprob: -3.322711944580078
    10. 'stack' → logprob: -3.697711944580078

Token 359: ' each' (ID: 2454)
  Prédit: ' node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' node' → logprob: -1.1287750005722046
    2. ' each' → logprob: -1.3787750005722046
    3. 'each' → logprob: -2.003775119781494
    4. ' s' → logprob: -2.253775119781494
    5. ' _' → logprob: -2.503775119781494
    6. 'node' → logprob: -3.628775119781494
    7. ' l' → logprob: -3.878775119781494
    8. '_' → logprob: -4.378775119781494
    9. ' all' → logprob: -5.003775119781494
    10. 's' → logprob: -5.003775119781494

Token 360: ' node' (ID: 4596)
  Prédit: ' node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' node' → logprob: -0.0523003526031971
    2. 'node' → logprob: -3.052300453186035
    3. ' token' → logprob: -6.177300453186035
    4. 'token' → logprob: -7.052300453186035
    5. ' ' → logprob: -7.802300453186035
    6. ' valid' → logprob: -8.802300453186035
    7. '_' → logprob: -10.802300453186035
    8. '(node' → logprob: -10.927300453186035
    9. ' character' → logprob: -11.052300453186035
    10. 'n' → logprob: -11.302300453186035

Token 361: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07320284843444824
    2. ':' → logprob: -3.1982028484344482
    3. '   ' → logprob: -4.323203086853027
    4. ' ,' → logprob: -4.323203086853027
    5. ' ' → logprob: -7.198203086853027
    6. '<|end|>' → logprob: -7.698203086853027
    7. ' :' → logprob: -8.073203086853027
    8. ' in' → logprob: -8.073203086853027
    9. '    ' → logprob: -8.198203086853027
    10. '[' → logprob: -8.198203086853027

Token 362: ' compute' (ID: 23864)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.3423173725605011
    2. '   ' → logprob: -2.5923173427581787
    3. 'return' → logprob: -3.2173173427581787
    4. ' pass' → logprob: -3.4673173427581787
    5. ' values' → logprob: -3.5923173427581787
    6. ' compute' → logprob: -3.5923173427581787
    7. ' #' → logprob: -3.8423173427581787
    8. ' for' → logprob: -4.342317581176758
    9. ' calculate' → logprob: -4.717317581176758
    10. ' ' → logprob: -5.092317581176758

Token 363: ' its' (ID: 1617)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.563048243522644
    2. ' its' → logprob: -1.938048243522644
    3. ' all' → logprob: -2.4380483627319336
    4. 'the' → logprob: -2.9380483627319336
    5. 'all' → logprob: -3.8130483627319336
    6. ' a' → logprob: -4.063048362731934
    7. 'possible' → logprob: -4.063048362731934
    8. ' possible' → logprob: -4.438048362731934
    9. ' values' → logprob: -4.688048362731934
    10. ' valid' → logprob: -4.813048362731934

Token 364: ' value' (ID: 1432)
  Prédit: ' value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.17640730738639832
    2. 'value' → logprob: -2.4264073371887207
    3. ' values' → logprob: -3.1764073371887207
    4. 'values' → logprob: -4.301407337188721
    5. '.value' → logprob: -5.426407337188721
    6. ' .' → logprob: -5.551407337188721
    7. '.values' → logprob: -6.176407337188721
    8. ' possible' → logprob: -6.301407337188721
    9. ' val' → logprob: -6.551407337188721
    10. ' result' → logprob: -6.676407337188721

Token 365: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5483152270317078
    2. ':' → logprob: -0.9233152270317078
    3. ',' → logprob: -4.423315048217773
    4. '(' → logprob: -6.048315048217773
    5. ' =' → logprob: -6.298315048217773
    6. '=' → logprob: -7.048315048217773
    7. ' ' → logprob: -7.173315048217773
    8. '    ' → logprob: -7.173315048217773
    9. '):' → logprob: -7.173315048217773
    10. ':
' → logprob: -7.298315048217773

Token 366: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004776857327669859
    2. ',' → logprob: -6.754776954650879
    3. '    ' → logprob: -6.754776954650879
    4. ':' → logprob: -6.754776954650879
    5. '    
' → logprob: -7.754776954650879
    6. ')' → logprob: -8.379776954650879
    7. '.' → logprob: -9.129776954650879
    8. '       ' → logprob: -9.129776954650879
    9. '<|end|>' → logprob: -9.379776954650879
    10. '#' → logprob: -10.254776954650879

Token 367: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0016707765171304345
    2. '    ' → logprob: -7.501670837402344
    3. '    
' → logprob: -8.126670837402344
    4. ':' → logprob: -8.501670837402344
    5. 'import' → logprob: -9.126670837402344
    6. ',' → logprob: -9.126670837402344
    7. '       ' → logprob: -9.876670837402344
    8. ')' → logprob: -10.001670837402344
    9. '
' → logprob: -10.001670837402344
    10. '#' (adapté à ' #') → logprob: -10.001670837402344

Token 368: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0024001512210816145
    2. ':' → logprob: -6.627399921417236
    3. 'def' → logprob: -8.127400398254395
    4. ',' → logprob: -8.502400398254395
    5. '    
' → logprob: -9.252400398254395
    6. ')' → logprob: -9.502400398254395
    7. 's' → logprob: -9.627400398254395
    8. 'import' → logprob: -9.752400398254395
    9. '#' → logprob: -10.002400398254395
    10. 'token' → logprob: -10.377400398254395

Token 369: ' Count' (ID: 6789)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.4298017919063568
    2. 'return' → logprob: -1.9298018217086792
    3. '   ' → logprob: -2.1798017024993896
    4. ' count' → logprob: -2.9298017024993896
    5. 'count' → logprob: -3.6798017024993896
    6. '#' → logprob: -5.929801940917969
    7. ' #' → logprob: -6.054801940917969
    8. ' result' → logprob: -6.054801940917969
    9. ' counts' → logprob: -6.929801940917969
    10. ' for' → logprob: -7.679801940917969

Token 370: ' how' (ID: 1495)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.012434482574463
    2. '(' → logprob: -1.137434482574463
    3. '+=' → logprob: -2.762434482574463
    4. ')' → logprob: -3.137434482574463
    5. ' +=' → logprob: -3.262434482574463
    6. ' =' → logprob: -3.262434482574463
    7. 's' → logprob: -3.262434482574463
    8. '   ' → logprob: -3.762434482574463
    9. '[' → logprob: -4.512434482574463
    10. ',' → logprob: -4.887434482574463

Token 371: ' many' (ID: 1991)
  Prédit: ' many'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' many' → logprob: -0.15889059007167816
    2. 'many' → logprob: -2.15889048576355
    3. '   ' → logprob: -4.283890724182129
    4. '_' → logprob: -5.658890724182129
    5. '_many' → logprob: -5.783890724182129
    6. ' ' → logprob: -5.783890724182129
    7. '=' → logprob: -6.158890724182129
    8. ')' → logprob: -7.033890724182129
    9. ' =' → logprob: -7.158890724182129
    10. '#' → logprob: -7.533890724182129

Token 372: ' nodes' (ID: 15749)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 373: ' have' (ID: 679)
  Prédit: ' with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' with' → logprob: -1.1395883560180664
    2. ' have' → logprob: -2.0145883560180664
    3. ')' → logprob: -2.2645883560180664
    4. 'with' → logprob: -2.3895883560180664
    5. ',' → logprob: -2.6395883560180664
    6. '<|end|>' → logprob: -2.7645883560180664
    7. ' are' → logprob: -3.2645883560180664
    8. ' that' → logprob: -3.3895883560180664
    9. '[' → logprob: -3.6395883560180664
    10. '   ' → logprob: -4.014588356018066

Token 374: ' value' (ID: 1432)
  Prédit: ' value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.20360970497131348
    2. 'value' → logprob: -1.7036097049713135
    3. ' a' → logprob: -7.203609466552734
    4. ' the' → logprob: -7.328609466552734
    5. ' their' → logprob: -8.078609466552734
    6. ' values' → logprob: -8.703609466552734
    7. ' val' → logprob: -9.703609466552734
    8. '```' → logprob: -9.828609466552734
    9. 'the' → logprob: -10.078609466552734
    10. 'a' → logprob: -10.203609466552734

Token 375: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.1397794783115387
    2. '_' → logprob: -3.264779567718506
    3. '==' → logprob: -3.389779567718506
    4. ' n' → logprob: -3.764779567718506
    5. ' _' → logprob: -4.889779567718506
    6. '_n' → logprob: -5.014779567718506
    7. '(s' → logprob: -5.389779567718506
    8. ' =' → logprob: -5.639779567718506
    9. ' ' → logprob: -5.889779567718506
    10. 'n' → logprob: -6.264779567718506

Token 376: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3874175548553467
    2. ' n' → logprob: -1.1374175548553467
    3. 'input' → logprob: -8.512417793273926
    4. ' input' → logprob: -9.262417793273926
    5. '   ' → logprob: -10.137417793273926
    6. ' ' → logprob: -10.137417793273926
    7. 'int' → logprob: -10.387417793273926
    8. '_n' → logprob: -10.387417793273926
    9. '0' → logprob: -10.512417793273926
    10. '1' → logprob: -10.762417793273926

Token 377: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04141799733042717
    2. ':
' → logprob: -3.9164180755615234
    3. '   ' → logprob: -4.541418075561523
    4. 'def' → logprob: -5.166418075561523
    5. '():' → logprob: -6.041418075561523
    6. ',' → logprob: -7.791418075561523
    7. 'import' → logprob: -8.041418075561523
    8. '```' → logprob: -8.916418075561523
    9. '":' → logprob: -9.041418075561523
    10. '=' → logprob: -9.166418075561523

Token 378: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.180160254240036
    2. '   ' → logprob: -1.9301602840423584
    3. ':
' → logprob: -4.930160045623779
    4. '():' → logprob: -5.555160045623779
    5. ',' → logprob: -6.055160045623779
    6. 'def' → logprob: -6.305160045623779
    7. '```' → logprob: -6.805160045623779
    8. '):' → logprob: -7.430160045623779
    9. '(' → logprob: -7.555160045623779
    10. '
' → logprob: -8.055160522460938

Token 379: ' #
' (ID: 21888)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1618083119392395
    2. '   ' → logprob: -2.0368082523345947
    3. '(' → logprob: -5.161808490753174
    4. ':
' → logprob: -5.661808490753174
    5. '():' → logprob: -5.786808490753174
    6. ',' → logprob: -6.036808490753174
    7. '(n' → logprob: -6.661808490753174
    8. '
' → logprob: -7.536808490753174
    9. ' ' → logprob: -8.286808013916016
    10. '(
' → logprob: -8.411808013916016

Token 380: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005341786425560713
    2. ':' → logprob: -6.25534200668335
    3. '    
' → logprob: -6.25534200668335
    4. '(' → logprob: -7.75534200668335
    5. 'def' → logprob: -8.130341529846191
    6. '
' → logprob: -9.380341529846191
    7. ')' → logprob: -9.380341529846191
    8. '    ' → logprob: -9.380341529846191
    9. 'import' → logprob: -9.630341529846191
    10. ',' → logprob: -9.630341529846191

Token 381: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024022748693823814
    2. 'def' → logprob: -4.774022579193115
    3. '(' → logprob: -4.899022579193115
    4. ':' → logprob: -6.274022579193115
    5. 'n' → logprob: -6.649022579193115
    6. '    
' → logprob: -6.649022579193115
    7. ',' → logprob: -7.774022579193115
    8. '    ' → logprob: -7.899022579193115
    9. '(n' → logprob: -8.024023056030273
    10. '\' → logprob: -8.149023056030273

Token 382: ' Since' (ID: 12265)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.03929227963089943
    2. '   ' → logprob: -3.789292335510254
    3. 'def' → logprob: -4.664292335510254
    4. 's' → logprob: -6.039292335510254
    5. 'thread' → logprob: -6.789292335510254
    6. '#' → logprob: -7.164292335510254
    7. 'class' → logprob: -7.289292335510254
    8. 'import' → logprob: -8.164292335510254
    9. 'from' → logprob: -8.539292335510254
    10. ' n' → logprob: -8.664292335510254

Token 383: ' nesting' (ID: 126051)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.7847065329551697
    2. 'the' → logprob: -1.4097065925598145
    3. ' threading' → logprob: -2.2847065925598145
    4. ' sys' → logprob: -2.9097065925598145
    5. ' n' → logprob: -3.1597065925598145
    6. 'n' → logprob: -3.5347065925598145
    7. 'sys' → logprob: -4.4097065925598145
    8. ' we' → logprob: -4.5347065925598145
    9. 'len' → logprob: -4.6597065925598145
    10. ' True' → logprob: -5.6597065925598145

Token 384: ' depth' (ID: 13636)
  Prédit: 'depth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'depth' → logprob: -0.9264295697212219
    2. 'levels' → logprob: -0.9264295697212219
    3. 'level' → logprob: -2.801429510116577
    4. 'is' → logprob: -3.051429510116577
    5. ' is' → logprob: -3.801429510116577
    6. 'and' → logprob: -4.051429748535156
    7. ' depth' → logprob: -4.551429748535156
    8. ' levels' → logprob: -4.676429748535156
    9. '_depth' → logprob: -5.051429748535156
    10. 'def' → logprob: -5.426429748535156

Token 385: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.5797843337059021
    2. 'is' → logprob: -1.2047843933105469
    3. 'may' → logprob: -3.329784393310547
    4. ' can' → logprob: -3.454784393310547
    5. ' may' → logprob: -3.579784393310547
    6. 'can' → logprob: -4.079784393310547
    7. 'could' → logprob: -4.954784393310547
    8. '=' → logprob: -5.454784393310547
    9. ' might' → logprob: -6.329784393310547
    10. ',' → logprob: -6.329784393310547

Token 386: ' at' (ID: 540)
  Prédit: ' limited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' limited' → logprob: -0.5124024748802185
    2. 'limited' → logprob: -1.7624025344848633
    3. 'small' → logprob: -2.5124025344848633
    4. ' small' → logprob: -3.1374025344848633
    5. ' at' → logprob: -3.3874025344848633
    6. 'up' → logprob: -4.387402534484863
    7. 'usually' → logprob: -4.762402534484863
    8. ' up' → logprob: -4.887402534484863
    9. 'at' → logprob: -4.887402534484863
    10. 'not' → logprob: -5.137402534484863

Token 387: ' most' (ID: 1645)
  Prédit: 'most'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'most' → logprob: -0.000229046301683411
    2. ' most' → logprob: -9.125228881835938
    3. 'least' → logprob: -9.125228881835938
    4. 'Most' → logprob: -12.000228881835938
    5. 'max' → logprob: -13.250228881835938
    6. 'mo' → logprob: -14.125228881835938
    7. 'mos' → logprob: -14.250228881835938
    8. '-most' → logprob: -14.500228881835938
    9. '```' → logprob: -15.125228881835938
    10. ' least' → logprob: -15.125228881835938

Token 388: ' ' (ID: 220)
  Prédit: '20'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '20' → logprob: -0.6471639275550842
    2. ' ' → logprob: -1.1471638679504395
    3. '10' → logprob: -2.3971638679504395
    4. '500' → logprob: -4.0221638679504395
    5. '100' → logprob: -4.1471638679504395
    6. ' around' → logprob: -5.0221638679504395
    7. '   ' → logprob: -5.0221638679504395
    8. '250' → logprob: -5.3971638679504395
    9. '25' → logprob: -5.7721638679504395
    10. '200' → logprob: -6.0221638679504395

Token 389: '100' (ID: 1353)
  Prédit: '20'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '20' → logprob: -0.8930168151855469
    2. '100' → logprob: -1.2680168151855469
    3. '10' → logprob: -1.7680168151855469
    4. '500' → logprob: -2.643016815185547
    5. '200' → logprob: -3.768016815185547
    6. '250' → logprob: -4.143016815185547
    7. '50' → logprob: -4.643016815185547
    8. '300' → logprob: -4.893016815185547
    9. '5' → logprob: -5.893016815185547
    10. '25' → logprob: -6.143016815185547

Token 390: '0' (ID: 15)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.14226534962654114
    2. ':' → logprob: -2.2672653198242188
    3. ',
' → logprob: -4.517265319824219
    4. '0' → logprob: -4.892265319824219
    5. ':
' → logprob: -5.642265319824219
    6. ' and' → logprob: -5.892265319824219
    7. '   ' → logprob: -6.017265319824219
    8. '.' → logprob: -7.517265319824219
    9. '
' → logprob: -7.642265319824219
    10. 'and' → logprob: -8.767265319824219

Token 391: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6258161067962646
    2. ',' → logprob: -1.1258161067962646
    3. '   ' → logprob: -2.0008161067962646
    4. ':
' → logprob: -6.000816345214844
    5. ',
' → logprob: -6.750816345214844
    6. '.' → logprob: -7.875816345214844
    7. ' and' → logprob: -8.125816345214844
    8. '
' → logprob: -8.375816345214844
    9. ')' → logprob: -8.625816345214844
    10. '<|end|>' → logprob: -8.625816345214844

Token 392: ' the' (ID: 290)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04690875858068466
    2. '    ' → logprob: -3.6719088554382324
    3. 'def' → logprob: -5.546908855438232
    4. ' threading' → logprob: -5.546908855438232
    5. ' ' → logprob: -5.921908855438232
    6. '#' → logprob: -6.296908855438232
    7. ' n' → logprob: -6.546908855438232
    8. '    
' → logprob: -6.671908855438232
    9. '<|end|>' → logprob: -6.921908855438232
    10. ' #' → logprob: -7.046908855438232

Token 393: ' number' (ID: 2086)
  Prédit: ' threading'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' threading' → logprob: -0.6386209726333618
    2. 'def' → logprob: -1.6386209726333618
    3. ' def' → logprob: -2.6386208534240723
    4. ' code' → logprob: -3.0136208534240723
    5. ' rest' → logprob: -3.6386208534240723
    6. ' n' → logprob: -3.6386208534240723
    7. ' #' → logprob: -3.7636208534240723
    8. '#' → logprob: -4.388620853424072
    9. ' parser' → logprob: -4.388620853424072
    10. ' pass' → logprob: -4.763620853424072

Token 394: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.592507004737854
    2. '<|end|>' → logprob: -1.467507004737854
    3. 'of' → logprob: -2.5925068855285645
    4. '_of' → logprob: -2.7175068855285645
    5. '_' → logprob: -3.3425068855285645
    6. ')' → logprob: -4.0925068855285645
    7. '<|end|>' → logprob: -5.3425068855285645
    8. '_tokens' → logprob: -5.4675068855285645
    9. ' ' → logprob: -6.2175068855285645
    10. '_token' → logprob: -6.4675068855285645

Token 395: ' nodes' (ID: 15749)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.20415987074375153
    2. '   ' → logprob: -3.07915997505188
    3. ' valid' → logprob: -3.57915997505188
    4. ' nodes' → logprob: -3.70415997505188
    5. 'nodes' → logprob: -3.70415997505188
    6. ' lines' → logprob: -3.95415997505188
    7. ' def' → logprob: -4.204159736633301
    8. 'valid' → logprob: -4.704159736633301
    9. 'tokens' → logprob: -5.454159736633301
    10. ')' → logprob: -5.829159736633301

Token 396: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12201276421546936
    2. '=' → logprob: -2.2470128536224365
    3. 'def' → logprob: -5.872012615203857
    4. '   ' → logprob: -5.997012615203857
    5. ' is' → logprob: -7.122012615203857
    6. ' <=' → logprob: -7.247012615203857
    7. ')' → logprob: -7.372012615203857
    8. ',' → logprob: -7.872012615203857
    9. 'import' → logprob: -7.997012615203857
    10. ' ' → logprob: -8.622013092041016

Token 397: ' manageable' (ID: 105350)
  Prédit: ' at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.06692798435688019
    2. 'at' → logprob: -3.191927909851074
    3. ' manageable' → logprob: -5.066927909851074
    4. ' about' → logprob: -5.191927909851074
    5. 'O' → logprob: -6.191927909851074
    6. ' roughly' → logprob: -6.316927909851074
    7. ' around' → logprob: -6.566927909851074
    8. ' up' → logprob: -6.816927909851074
    9. 'approximately' → logprob: -6.816927909851074
    10. ' approximately' → logprob: -6.816927909851074

Token 398: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7168948650360107
    2. 'def' → logprob: -1.0918948650360107
    3. '   ' → logprob: -2.2168948650360107
    4. ',' → logprob: -3.7168948650360107
    5. '=' → logprob: -4.71689510345459
    6. '.' → logprob: -4.84189510345459
    7. ' =' → logprob: -5.09189510345459
    8. '(' → logprob: -5.46689510345459
    9. 'import' → logprob: -5.59189510345459
    10. ':
' → logprob: -6.09189510345459

Token 399: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09807547926902771
    2. 'def' → logprob: -2.7230753898620605
    3. '    
' → logprob: -4.7230753898620605
    4. ':' → logprob: -5.0980753898620605
    5. '
' → logprob: -5.9730753898620605
    6. '\' → logprob: -6.0980753898620605
    7. 'import' → logprob: -6.3480753898620605
    8. '\n' → logprob: -6.4730753898620605
    9. ')' → logprob: -6.7230753898620605
    10. '```' → logprob: -6.8480753898620605

Token 400: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1665145754814148
    2. 'def' → logprob: -2.1665146350860596
    3. ':' → logprob: -3.9165146350860596
    4. '    
' → logprob: -5.1665143966674805
    5. '
' → logprob: -5.6665143966674805
    6. 'import' → logprob: -5.9165143966674805
    7. '\n' → logprob: -6.1665143966674805
    8. '\' → logprob: -6.4165143966674805
    9. '(' → logprob: -7.1665143966674805
    10. 'newline' → logprob: -7.7915143966674805

Token 401: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.000552555953618139
    2. 'def' → logprob: -8.2505521774292
    3. '    
' → logprob: -9.3755521774292
    4. 'n' → logprob: -9.5005521774292
    5. 'import' → logprob: -9.7505521774292
    6. ')' → logprob: -11.1255521774292
    7. ',' → logprob: -11.6255521774292
    8. '(' → logprob: -12.0005521774292
    9. 'if' → logprob: -12.2505521774292
    10. ':' → logprob: -12.2505521774292

Token 402: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20221105217933655
    2. 's' → logprob: -2.7022111415863037
    3. 'n' → logprob: -2.8272111415863037
    4. 'def' → logprob: -3.0772111415863037
    5. 'class' → logprob: -5.327210903167725
    6. 'import' → logprob: -6.452210903167725
    7. 'pass' → logprob: -6.702210903167725
    8. 'stack' → logprob: -7.452210903167725
    9. 'pos' → logprob: -7.827210903167725
    10. 'expr' → logprob: -8.077211380004883

Token 403: ' We'll' (ID: 46830)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.0825796127319336
    2. 'n' → logprob: -1.3325796127319336
    3. '   ' → logprob: -1.5825796127319336
    4. 'class' → logprob: -1.8325796127319336
    5. 'stack' → logprob: -4.582579612731934
    6. 'pos' → logprob: -4.957579612731934
    7. 'import' → logprob: -5.332579612731934
    8. 'from' → logprob: -5.832579612731934
    9. 's' → logprob: -6.082579612731934
    10. '#' → logprob: -6.832579612731934

Token 404: ' implement' (ID: 6365)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0868830680847168
    2. '   ' → logprob: -2.836883068084717
    3. 'import' → logprob: -4.961883068084717
    4. 'define' → logprob: -5.336883068084717
    5. ' use' → logprob: -5.961883068084717
    6. 'parse' → logprob: -6.086883068084717
    7. 'use' → logprob: -6.211883068084717
    8. ' def' → logprob: -6.836883068084717
    9. 'continue' → logprob: -6.836883068084717
    10. 'return' → logprob: -7.086883068084717

Token 405: ' a' (ID: 261)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3031684160232544
    2. ' a' → logprob: -2.053168296813965
    3. ' the' → logprob: -3.303168296813965
    4. 'the' → logprob: -3.428168296813965
    5. 'a' → logprob: -4.053168296813965
    6. '   ' → logprob: -4.428168296813965
    7. ' def' → logprob: -4.553168296813965
    8. 'dfs' → logprob: -4.803168296813965
    9. 'class' → logprob: -5.303168296813965
    10. ' parsing' → logprob: -5.428168296813965

Token 406: ' recursive' (ID: 66711)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4801103472709656
    2. 'class' → logprob: -1.2301104068756104
    3. ' def' → logprob: -2.9801104068756104
    4. ' class' → logprob: -3.6051104068756104
    5. ' parser' → logprob: -5.230110168457031
    6. 'Parser' → logprob: -6.605110168457031
    7. 'parser' → logprob: -6.730110168457031
    8. ' Parser' → logprob: -7.230110168457031
    9. ' threading' → logprob: -7.480110168457031
    10. 'parse' → logprob: -7.730110168457031

Token 407: ' descent' (ID: 67101)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.040040455758571625
    2. ' def' → logprob: -3.2900404930114746
    3. ' parser' → logprob: -6.415040493011475
    4. 'parser' → logprob: -8.415040016174316
    5. '_parser' → logprob: -9.665040016174316
    6. '   ' → logprob: -11.540040016174316
    7. ' function' → logprob: -11.540040016174316
    8. ' approach' → logprob: -11.665040016174316
    9. ' threading' → logprob: -11.915040016174316
    10. 'function' → logprob: -12.165040016174316

Token 408: ' parser' (ID: 14216)
  Prédit: ' parser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parser' → logprob: -0.1117648184299469
    2. 'parser' → logprob: -2.361764907836914
    3. 'def' → logprob: -4.736764907836914
    4. '_parser' → logprob: -6.111764907836914
    5. ' def' → logprob: -7.861764907836914
    6. '-parser' → logprob: -9.861764907836914
    7. 'parse' → logprob: -10.361764907836914
    8. 'Parser' → logprob: -10.861764907836914
    9. ' parse' → logprob: -12.111764907836914
    10. ' parsing' → logprob: -12.736764907836914

Token 409: ' with' (ID: 483)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7340523600578308
    2. 'def' → logprob: -0.7340523600578308
    3. '(' → logprob: -3.7340524196624756
    4. '   ' → logprob: -4.6090521812438965
    5. ':def' → logprob: -6.4840521812438965
    6. '(
' → logprob: -6.9840521812438965
    7. ' def' → logprob: -7.2340521812438965
    8. 'import' → logprob: -7.6090521812438965
    9. ',' → logprob: -7.6090521812438965
    10. ':
' → logprob: -7.7340521812438965

Token 410: ' position' (ID: 4010)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'memo' → logprob: -0.28495335578918457
    2. ' memo' → logprob: -2.0349533557891846
    3. 'l' → logprob: -3.6599533557891846
    4. 'manual' → logprob: -4.0349531173706055
    5. 'class' → logprob: -4.1599531173706055
    6. 'back' → logprob: -4.4099531173706055
    7. 'cache' → logprob: -4.5349531173706055
    8. 'functions' → logprob: -4.9099531173706055
    9. 'a' → logprob: -5.1599531173706055
    10. 'explicit' → logprob: -5.2849531173706055

Token 411: ' indexes' (ID: 50739)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4998210668563843
    2. ' =' → logprob: -0.9998210668563843
    3. ' +=' → logprob: -5.249821186065674
    4. '_' → logprob: -5.249821186065674
    5. ' ' → logprob: -6.374821186065674
    6. '   ' → logprob: -6.499821186065674
    7. ',' → logprob: -6.624821186065674
    8. '+=' → logprob: -6.624821186065674
    9. '_token' → logprob: -7.374821186065674
    10. '++' → logprob: -7.374821186065674

Token 412: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.049935732036828995
    2. 'def' → logprob: -4.049935817718506
    3. '(' → logprob: -4.799935817718506
    4. '   ' → logprob: -4.924935817718506
    5. ',' → logprob: -5.049935817718506
    6. '():' → logprob: -5.549935817718506
    7. '.' → logprob: -6.924935817718506
    8. '```' → logprob: -7.049935817718506
    9. ':
' → logprob: -7.924935817718506
    10. ':def' → logprob: -7.924935817718506

Token 413: ' gather' (ID: 13660)
  Prédit: ' memo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' memo' → logprob: -1.0475852489471436
    2. 'cache' → logprob: -1.9225852489471436
    3. 'def' → logprob: -2.5475852489471436
    4. ' tokens' → logprob: -2.6725852489471436
    5. 'memo' → logprob: -2.6725852489471436
    6. 'return' → logprob: -3.0475852489471436
    7. 'token' → logprob: -3.1725852489471436
    8. ' cache' → logprob: -3.4225852489471436
    9. 'tokens' → logprob: -3.4225852489471436
    10. ' return' → logprob: -3.5475852489471436

Token 414: ' (' (ID: 350)
  Prédit: 'tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tokens' → logprob: -0.14683087170124054
    2. 'results' → logprob: -3.3968307971954346
    3. '   ' → logprob: -3.6468307971954346
    4. 'nodes' → logprob: -4.146831035614014
    5. ' tokens' → logprob: -4.396831035614014
    6. '_tokens' → logprob: -4.646831035614014
    7. ')' → logprob: -5.021831035614014
    8. 'the' → logprob: -5.146831035614014
    9. 'token' → logprob: -5.146831035614014
    10. 'def' → logprob: -5.646831035614014

Token 415: 'start' (ID: 5236)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8460475206375122
    2. 'tokens' → logprob: -0.9710475206375122
    3. 'pos' → logprob: -3.2210474014282227
    4. ' tokens' → logprob: -3.3460474014282227
    5. 'nodes' → logprob: -3.5960474014282227
    6. '   ' → logprob: -4.096047401428223
    7. 'token' → logprob: -4.096047401428223
    8. 'expr' → logprob: -4.721047401428223
    9. 'node' → logprob: -4.846047401428223
    10. 'results' → logprob: -4.971047401428223

Token 416: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3995094895362854
    2. ')' → logprob: -1.5245094299316406
    3. '+' → logprob: -2.7745094299316406
    4. '   ' → logprob: -4.274509429931641
    5. '_token' → logprob: -4.399509429931641
    6. 'pos' → logprob: -5.399509429931641
    7. '_pos' → logprob: -5.399509429931641
    8. ' +' → logprob: -5.399509429931641
    9. '_tokens' → logprob: -6.149509429931641
    10. '=' → logprob: -6.899509429931641

Token 417: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.12703236937522888
    2. ' end' → logprob: -2.1270322799682617
    3. 'stop' → logprob: -9.252032279968262
    4. ',end' → logprob: -12.752032279968262
    5. '   ' → logprob: -13.502032279968262
    6. ' stop' → logprob: -13.877032279968262
    7. 'pos' → logprob: -13.877032279968262
    8. ' ' → logprob: -14.502032279968262
    9. '_end' → logprob: -14.627032279968262
    10. '	end' → logprob: -15.002032279968262

Token 418: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011687572114169598
    2. ',' → logprob: -4.511687755584717
    3. ')_' → logprob: -8.886687278747559
    4. '_positions' → logprob: -8.886687278747559
    5. 's' → logprob: -9.511687278747559
    6. '_' → logprob: -9.636687278747559
    7. ')s' → logprob: -9.886687278747559
    8. 'positions' → logprob: -10.261687278747559
    9. '_pos' → logprob: -10.886687278747559
    10. '_,' → logprob: -11.136687278747559

Token 419: ' value' (ID: 1432)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.72871333360672
    2. ')' → logprob: -1.8537132740020752
    3. ' value' → logprob: -1.9787132740020752
    4. 'type' → logprob: -2.478713274002075
    5. ' type' → logprob: -3.478713274002075
    6. 'node' → logprob: -3.603713274002075
    7. 'token' → logprob: -4.228713512420654
    8. ' node' → logprob: -4.228713512420654
    9. 'tokens' → logprob: -4.728713512420654
    10. 'kind' → logprob: -5.228713512420654

Token 420: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02981598675251007
    2. ',' → logprob: -4.029816150665283
    3. 's' → logprob: -4.529816150665283
    4. ')s' → logprob: -7.529816150665283
    5. '_s' → logprob: -9.904815673828125
    6. '   ' → logprob: -10.154815673828125
    7. '_' → logprob: -10.404815673828125
    8. ')_' → logprob: -10.654815673828125
    9. ' )' → logprob: -10.779815673828125
    10. ')
' → logprob: -10.904815673828125

Token 421: ' per' (ID: 777)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1368695497512817
    2. ':' → logprob: -1.8868695497512817
    3. '   ' → logprob: -2.011869430541992
    4. '_tokens' → logprob: -2.386869430541992
    5. 'tokens' → logprob: -2.761869430541992
    6. ')' → logprob: -2.761869430541992
    7. ' tokens' → logprob: -2.886869430541992
    8. '):' → logprob: -3.261869430541992
    9. '_' → logprob: -3.886869430541992
    10. '_token' → logprob: -4.386869430541992

Token 422: ' node' (ID: 4596)
  Prédit: ' node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' node' → logprob: -0.9775521159172058
    2. 'node' → logprob: -1.1025521755218506
    3. 'token' → logprob: -1.6025521755218506
    4. ' token' → logprob: -2.6025521755218506
    5. 'def' → logprob: -5.4775519371032715
    6. '_token' → logprob: -5.9775519371032715
    7. 'line' → logprob: -6.6025519371032715
    8. ' ' → logprob: -6.7275519371032715
    9. 'expression' → logprob: -6.8525519371032715
    10. ')' → logprob: -6.8525519371032715

Token 423: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.028876235708594322
    2. '():' → logprob: -4.903876304626465
    3. 'def' → logprob: -5.028876304626465
    4. ':
' → logprob: -5.153876304626465
    5. '   ' → logprob: -5.528876304626465
    6. ',' → logprob: -6.278876304626465
    7. '(' → logprob: -6.903876304626465
    8. ':def' → logprob: -8.278876304626465
    9. 'import' → logprob: -8.528876304626465
    10. '(
' → logprob: -8.653876304626465

Token 424: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5910524129867554
    2. '   ' → logprob: -1.0910524129867554
    3. '```' → logprob: -2.966052532196045
    4. 'def' → logprob: -4.466052532196045
    5. '():' → logprob: -4.591052532196045
    6. '(' → logprob: -4.716052532196045
    7. '    
' → logprob: -5.091052532196045
    8. ':
' → logprob: -5.341052532196045
    9. '\' → logprob: -5.466052532196045
    10. '(
' → logprob: -6.466052532196045

Token 425: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011797851882874966
    2. 'def' → logprob: -4.886797904968262
    3. '    
' → logprob: -6.511797904968262
    4. 'import' → logprob: -6.761797904968262
    5. '
' → logprob: -7.886797904968262
    6. ':' → logprob: -8.511797904968262
    7. '    ' → logprob: -9.261797904968262
    8. 'n' → logprob: -9.261797904968262
    9. '\' → logprob: -9.386797904968262
    10. '\t' → logprob: -9.386797904968262

Token 426: ' Then' (ID: 7801)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11062764376401901
    2. 'def' → logprob: -2.9856276512145996
    3. ':' → logprob: -3.3606276512145996
    4. '(' → logprob: -5.2356276512146
    5. '    
' → logprob: -5.9856276512146
    6. '(
' → logprob: -6.4856276512146
    7. 'import' → logprob: -6.7356276512146
    8. '\t' → logprob: -6.7356276512146
    9. 'class' → logprob: -7.2356276512146
    10. '\n' → logprob: -7.3606276512146

Token 427: ' count' (ID: 3605)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.539312481880188
    2. 'def' → logprob: -1.164312481880188
    3. 'pos' → logprob: -3.6643123626708984
    4. 'tokens' → logprob: -3.6643123626708984
    5. ' def' → logprob: -4.164312362670898
    6. ' pos' → logprob: -4.539312362670898
    7. ' tokens' → logprob: -4.664312362670898
    8. 'nodes' → logprob: -5.539312362670898
    9. ' nodes' → logprob: -6.289312362670898
    10. ' try' → logprob: -6.289312362670898

Token 428: ' those' (ID: 2617)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -1.4622044563293457
    2. ' the' → logprob: -1.5872044563293457
    3. '_tokens' → logprob: -1.7122044563293457
    4. ' =' → logprob: -2.0872044563293457
    5. '=' → logprob: -2.5872044563293457
    6. '   ' → logprob: -2.7122044563293457
    7. 'tokens' → logprob: -2.7122044563293457
    8. '_' → logprob: -5.087204456329346
    9. '(' → logprob: -5.212204456329346
    10. ' tokens' → logprob: -5.212204456329346

Token 429: ' with' (ID: 483)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.82477205991745
    2. '_tokens' → logprob: -1.8247721195220947
    3. 'def' → logprob: -2.1997721195220947
    4. ':' → logprob: -2.3247721195220947
    5. '(' → logprob: -3.3247721195220947
    6. ',' → logprob: -3.4497721195220947
    7. 'tokens' → logprob: -3.4497721195220947
    8. ' =' → logprob: -3.6997721195220947
    9. '_' → logprob: -3.6997721195220947
    10. '_token' → logprob: -4.949771881103516

Token 430: ' value' (ID: 1432)
  Prédit: ' value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.3135288655757904
    2. 'value' → logprob: -1.3135288953781128
    3. ' n' → logprob: -8.938529014587402
    4. 'n' → logprob: -9.313529014587402
    5. '```' → logprob: -11.188529014587402
    6. ' values' → logprob: -12.063529014587402
    7. 'values' → logprob: -12.438529014587402
    8. 'count' → logprob: -12.688529014587402
    9. ' count' → logprob: -12.813529014587402
    10. ' ' → logprob: -13.188529014587402

Token 431: ' =' (ID: 314)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.16424138844013214
    2. '==' → logprob: -1.9142414331436157
    3. '_' → logprob: -6.039241313934326
    4. '=' → logprob: -6.914241313934326
    5. ' _' → logprob: -8.289241790771484
    6. ' ' → logprob: -8.539241790771484
    7. ' =' → logprob: -9.414241790771484
    8. ')' → logprob: -10.789241790771484
    9. 's' → logprob: -10.914241790771484
    10. '  ' → logprob: -11.664241790771484

Token 432: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6932060122489929
    2. ' n' → logprob: -0.6932060122489929
    3. 'int' → logprob: -11.068205833435059
    4. '```' → logprob: -11.693205833435059
    5. ' ' → logprob: -11.818205833435059
    6. '`' → logprob: -12.068205833435059
    7. '_n' → logprob: -12.443205833435059
    8. 'input' → logprob: -12.943205833435059
    9. ' ' → logprob: -13.068205833435059
    10. ' sys' → logprob: -13.193205833435059

Token 433: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04535212367773056
    2. '():' → logprob: -3.5453522205352783
    3. '   ' → logprob: -5.545351982116699
    4. '(' → logprob: -6.295351982116699
    5. 'def' → logprob: -6.420351982116699
    6. ' :' → logprob: -6.420351982116699
    7. ':
' → logprob: -6.545351982116699
    8. '```' → logprob: -6.795351982116699
    9. '[:]' → logprob: -7.420351982116699
    10. ',' → logprob: -7.420351982116699

Token 434: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4220653474330902
    2. '   ' → logprob: -1.5470653772354126
    3. '
' → logprob: -3.797065258026123
    4. '():' → logprob: -3.922065258026123
    5. ':
' → logprob: -4.047065258026123
    6. '\' → logprob: -4.297065258026123
    7. '(' → logprob: -4.672065258026123
    8. '    
' → logprob: -4.797065258026123
    9. 'def' → logprob: -4.797065258026123
    10. '\n' → logprob: -4.922065258026123

Token 435: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13254328072071075
    2. ':' → logprob: -2.8825433254241943
    3. 'def' → logprob: -3.5075433254241943
    4. '
' → logprob: -4.257543087005615
    5. '    
' → logprob: -5.132543087005615
    6. ':
' → logprob: -5.507543087005615
    7. '\n' → logprob: -6.132543087005615
    8. '()' → logprob: -6.382543087005615
    9. '():' → logprob: -6.382543087005615
    10. '\' → logprob: -6.507543087005615

Token 436: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020625857636332512
    2. 'def' → logprob: -4.270626068115234
    3. '    
' → logprob: -5.395626068115234
    4. '    ' → logprob: -7.395626068115234
    5. 'import' → logprob: -7.395626068115234
    6. '(' → logprob: -9.145626068115234
    7. '
' → logprob: -9.270626068115234
    8. ' def' → logprob: -9.770626068115234
    9. '()' → logprob: -10.145626068115234
    10. '\' → logprob: -10.270626068115234

Token 437: ' #' (ID: 1069)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.4571721851825714
    2. '   ' → logprob: -1.082172155380249
    3. 'n' → logprob: -4.582172393798828
    4. ' pos' → logprob: -5.082172393798828
    5. 'class' → logprob: -5.207172393798828
    6. 'def' → logprob: -5.707172393798828
    7. 's' → logprob: -7.332172393798828
    8. 'tokens' → logprob: -7.332172393798828
    9. ' n' → logprob: -8.207172393798828
    10. 'import' → logprob: -8.332172393798828

Token 438: ' Parent' (ID: 33156)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.41725319623947144
    2. 'n' → logprob: -1.5422532558441162
    3. '   ' → logprob: -2.792253255844116
    4. 'class' → logprob: -3.417253255844116
    5. 'pos' → logprob: -3.917253255844116
    6. 'import' → logprob: -5.292253017425537
    7. 'thread' → logprob: -6.042253017425537
    8. 'from' → logprob: -6.417253017425537
    9. 's' → logprob: -6.917253017425537
    10. '(n' → logprob: -7.292253017425537

Token 439: 'heses' (ID: 109350)
  Prédit: 'heses'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heses' → logprob: -0.0472089909017086
    2. 'hesis' → logprob: -3.2972090244293213
    3. 'hes' → logprob: -5.047208786010742
    4. 'h' → logprob: -5.922208786010742
    5. '#' → logprob: -11.922208786010742
    6. ')' → logprob: -12.047208786010742
    7. 'hs' → logprob: -13.422208786010742
    8. 'def' → logprob: -13.922208786010742
    9. 'esis' → logprob: -14.172208786010742
    10. 'he' → logprob: -14.297208786010742

Token 440: ' must' (ID: 2804)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7708694934844971
    2. 'def' → logprob: -1.645869493484497
    3. ' =' → logprob: -2.145869493484497
    4. ':' → logprob: -2.145869493484497
    5. ' are' → logprob: -3.895869493484497
    6. 's' → logprob: -4.020869255065918
    7. ')' → logprob: -4.020869255065918
    8. ' parsing' → logprob: -4.395869255065918
    9. 'parse' → logprob: -4.895869255065918
    10. 'are' → logprob: -5.270869255065918

Token 441: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.06174468621611595
    2. 'be' → logprob: -3.0617446899414062
    3. 'match' → logprob: -5.061744689941406
    4. ' match' → logprob: -5.311744689941406
    5. ' not' → logprob: -7.811744689941406
    6. ')' → logprob: -7.811744689941406
    7. 'not' → logprob: -8.061744689941406
    8. ' always' → logprob: -9.061744689941406
    9. 'balance' → logprob: -9.436744689941406
    10. 'remain' → logprob: -9.936744689941406

Token 442: ' handled' (ID: 29594)
  Prédit: 'balanced'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'balanced' → logprob: -0.5709853172302246
    2. 'matched' → logprob: -1.0709853172302246
    3. ' balanced' → logprob: -3.0709853172302246
    4. ' matched' → logprob: -3.5709853172302246
    5. ' properly' → logprob: -5.445985317230225
    6. 'proper' → logprob: -5.695985317230225
    7. 'checked' → logprob: -6.320985317230225
    8. ')' → logprob: -6.320985317230225
    9. 'handled' → logprob: -6.445985317230225
    10. ' correctly' → logprob: -6.570985317230225

Token 443: ' properly' (ID: 13425)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.661054790019989
    2. 'def' → logprob: -0.911054790019989
    3. ',' → logprob: -3.786054849624634
    4. '```' → logprob: -4.161054611206055
    5. ':
' → logprob: -4.536054611206055
    6. '=' → logprob: -4.661054611206055
    7. '   ' → logprob: -5.286054611206055
    8. '.' → logprob: -5.536054611206055
    9. '(' → logprob: -6.036054611206055
    10. ' =' → logprob: -6.661054611206055

Token 444: ' to' (ID: 316)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2480725347995758
    2. 'def' → logprob: -1.8730725049972534
    3. '   ' → logprob: -3.873072624206543
    4. ',' → logprob: -4.123072624206543
    5. ':
' → logprob: -4.373072624206543
    6. '=' → logprob: -5.498072624206543
    7. '.' → logprob: -5.623072624206543
    8. ' =' → logprob: -6.623072624206543
    9. 'import' → logprob: -6.998072624206543
    10. '```' → logprob: -6.998072624206543

Token 445: ' define' (ID: 13174)
  Prédit: 'support'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'support' → logprob: -1.6763107776641846
    2. 'allow' → logprob: -1.8013107776641846
    3. 'match' → logprob: -1.9263107776641846
    4. 'parse' → logprob: -2.0513107776641846
    5. 'avoid' → logprob: -2.3013107776641846
    6. 'correct' → logprob: -3.3013107776641846
    7. ' correctly' → logprob: -3.4263107776641846
    8. 'ensure' → logprob: -3.4263107776641846
    9. 'handle' → logprob: -3.4263107776641846
    10. ' match' → logprob: -3.9263107776641846

Token 446: ' substr' (ID: 29234)
  Prédit: 'preced'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'preced' → logprob: -1.3757848739624023
    2. 'the' → logprob: -1.5007848739624023
    3. 'expression' → logprob: -1.7507848739624023
    4. ' the' → logprob: -1.7507848739624023
    5. ' expression' → logprob: -2.7507848739624023
    6. ' precedence' → logprob: -2.7507848739624023
    7. 'expr' → logprob: -5.375784873962402
    8. 'operator' → logprob: -5.500784873962402
    9. 'token' → logprob: -5.500784873962402
    10. 'express' → logprob: -5.500784873962402

Token 447: 'ings' (ID: 963)
  Prédit: 'ences'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ences' → logprob: -1.5209181308746338
    2. 'ment' → logprob: -1.8959181308746338
    3. 'ence' → logprob: -2.145918130874634
    4. '   ' → logprob: -2.520918130874634
    5. ')' → logprob: -2.770918130874634
    6. 'ation' → logprob: -2.895918130874634
    7. 'ments' → logprob: -3.020918130874634
    8. 'ictions' → logprob: -3.020918130874634
    9. 'iction' → logprob: -3.520918130874634
    10. 'expr' → logprob: -4.020917892456055

Token 448: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4421679675579071
    2. '   ' → logprob: -1.8171679973602295
    3. 'def' → logprob: -2.0671679973602295
    4. ':
' → logprob: -3.5671679973602295
    5. ',' → logprob: -4.56716775894165
    6. '=' → logprob: -5.06716775894165
    7. '
' → logprob: -5.94216775894165
    8. '.' → logprob: -5.94216775894165
    9. ' =' → logprob: -6.06716775894165
    10. '(' → logprob: -6.19216775894165

Token 449: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2844662666320801
    2. 'def' → logprob: -2.03446626663208
    3. ':' → logprob: -2.90946626663208
    4. '```' → logprob: -3.53446626663208
    5. '    
' → logprob: -4.90946626663208
    6. '\' → logprob: -4.90946626663208
    7. '
' → logprob: -5.53446626663208
    8. '\n' → logprob: -5.78446626663208
    9. '(' → logprob: -6.15946626663208
    10. ':
' → logprob: -6.53446626663208

Token 450: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.040913600474596024
    2. 'def' → logprob: -3.5409135818481445
    3. '    
' → logprob: -5.7909135818481445
    4. '\' → logprob: -5.7909135818481445
    5. '\n' → logprob: -7.2909135818481445
    6. '```' → logprob: -7.2909135818481445
    7. '    ' → logprob: -7.4159135818481445
    8. '\t' → logprob: -7.4159135818481445
    9. 'import' → logprob: -7.4159135818481445
    10. '
' → logprob: -7.5409135818481445

Token 451: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03619455546140671
    2. '    
' → logprob: -4.036194324493408
    3. 'def' → logprob: -4.286194324493408
    4. '
' → logprob: -6.411194324493408
    5. '    ' → logprob: -7.286194324493408
    6. 'import' → logprob: -8.161194801330566
    7. '\' → logprob: -8.161194801330566
    8. '\n' → logprob: -8.411194801330566
    9. '    
    
' → logprob: -8.911194801330566
    10. ' 
' → logprob: -9.036194801330566

Token 452: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08348935097455978
    2. 'def' → logprob: -2.833489418029785
    3. '    
' → logprob: -4.458489418029785
    4. '    ' → logprob: -5.458489418029785
    5. 's' → logprob: -7.208489418029785
    6. 'pos' → logprob: -7.333489418029785
    7. 'n' → logprob: -7.833489418029785
    8. 'class' → logprob: -7.958489418029785
    9. 'import' → logprob: -7.958489418029785
    10. ')' → logprob: -8.083489418029785

Token 453: ' The' (ID: 623)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19949521124362946
    2. 'def' → logprob: -1.9494951963424683
    3. 'n' → logprob: -3.949495315551758
    4. 's' → logprob: -4.449495315551758
    5. 'thread' → logprob: -6.199495315551758
    6. 'import' → logprob: -7.074495315551758
    7. '(' → logprob: -7.324495315551758
    8. 'class' → logprob: -7.324495315551758
    9. '    
' → logprob: -7.699495315551758
    10. '(n' → logprob: -7.699495315551758

Token 454: ' index' (ID: 3472)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.11145325750112534
    2. '   ' → logprob: -3.3614532947540283
    3. ' def' → logprob: -3.3614532947540283
    4. ':' → logprob: -4.361453056335449
    5. '#' → logprob: -5.486453056335449
    6. 's' → logprob: -6.236453056335449
    7. ' ' → logprob: -6.236453056335449
    8. ' s' → logprob: -6.361453056335449
    9. ' n' → logprob: -6.736453056335449
    10. 'n' → logprob: -6.736453056335449

Token 455: ' convention' (ID: 39395)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5029687285423279
    2. ' =' → logprob: -1.3779687881469727
    3. 's' → logprob: -2.2529687881469727
    4. 'es' → logprob: -3.7529687881469727
    5. '_' → logprob: -5.252968788146973
    6. ')' → logprob: -6.377968788146973
    7. ' +=' → logprob: -6.752968788146973
    8. '_pointer' → logprob: -6.752968788146973
    9. '0' → logprob: -7.252968788146973
    10. '_pos' → logprob: -7.377968788146973

Token 456: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4360877573490143
    2. '=' → logprob: -1.061087727546692
    3. ' is' → logprob: -5.561087608337402
    4. ':' → logprob: -6.686087608337402
    5. 's' → logprob: -6.936087608337402
    6. '_' → logprob: -7.311087608337402
    7. '[' → logprob: -8.561087608337402
    8. ',' → logprob: -9.436087608337402
    9. ' +=' → logprob: -10.061087608337402
    10. 'is' → logprob: -10.186087608337402

Token 457: ' start' (ID: 1604)
  Prédit: ' pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pos' → logprob: -0.7545175552368164
    2. 'pos' → logprob: -1.6295175552368164
    3. ' s' → logprob: -2.2545175552368164
    4. 'def' → logprob: -3.1295175552368164
    5. '0' → logprob: -3.2545175552368164
    6. ' def' → logprob: -3.6295175552368164
    7. 's' → logprob: -3.6295175552368164
    8. ' start' → logprob: -4.129517555236816
    9. '   ' → logprob: -4.504517555236816
    10. ' ' → logprob: -4.504517555236816

Token 458: ' inclusive' (ID: 29482)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.32663920521736145
    2. ' =' → logprob: -1.951639175415039
    3. ',' → logprob: -2.951639175415039
    4. '_' → logprob: -3.076639175415039
    5. '+' → logprob: -4.076639175415039
    6. ' +=' → logprob: -5.701639175415039
    7. ')' → logprob: -5.826639175415039
    8. '```' → logprob: -5.826639175415039
    9. ' +' → logprob: -6.076639175415039
    10. 's' → logprob: -6.201639175415039

Token 459: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10240904241800308
    2. '=' → logprob: -2.9774091243743896
    3. ',end' → logprob: -4.4774088859558105
    4. ' =' → logprob: -4.6024088859558105
    5. 'def' → logprob: -4.9774088859558105
    6. ',
' → logprob: -5.4774088859558105
    7. '```' → logprob: -5.4774088859558105
    8. ':' → logprob: -5.7274088859558105
    9. ')' → logprob: -6.2274088859558105
    10. '   ' → logprob: -7.1024088859558105

Token 460: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.10021281987428665
    2. ' end' → logprob: -2.350212812423706
    3. 'stop' → logprob: -12.850213050842285
    4. '=end' → logprob: -13.100213050842285
    5. ',end' → logprob: -14.600213050842285
    6. '_end' → logprob: -14.975213050842285
    7. ':end' → logprob: -15.225213050842285
    8. '#' → logprob: -16.10021209716797
    9. '```' → logprob: -16.22521209716797
    10. '(end' → logprob: -16.60021209716797

Token 461: ' exclusive' (ID: 17078)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.005737390834838152
    2. ')' → logprob: -6.1307373046875
    3. ',' → logprob: -6.3807373046875
    4. ' =' → logprob: -7.2557373046875
    5. '=end' → logprob: -7.8807373046875
    6. '+' → logprob: -8.0057373046875
    7. '==' → logprob: -9.5057373046875
    8. 'exclusive' → logprob: -9.7557373046875
    9. ':' → logprob: -10.0057373046875
    10. '```' → logprob: -10.1307373046875

Token 462: '.

' (ID: 364)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.34099528193473816
    2. '   ' → logprob: -1.7159953117370605
    3. ',' → logprob: -3.0909953117370605
    4. '=' → logprob: -4.0909953117370605
    5. 'def' → logprob: -4.2159953117370605
    6. ' =' → logprob: -4.5909953117370605
    7. ':
' → logprob: -4.7159953117370605
    8. '```' → logprob: -5.5909953117370605
    9. '(' → logprob: -6.8409953117370605
    10. ' ' → logprob: -6.9659953117370605

Token 463: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6329562664031982
    2. '   ' → logprob: -0.8829562664031982
    3. ':' → logprob: -3.2579562664031982
    4. '    
' → logprob: -5.757956504821777
    5. '(' → logprob: -5.882956504821777
    6. '```' → logprob: -6.007956504821777
    7. '():' → logprob: -6.507956504821777
    8. '\' → logprob: -6.882956504821777
    9. ' def' → logprob: -7.132956504821777
    10. '
' → logprob: -7.382956504821777

Token 464: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.8245277404785156
    2. '   ' → logprob: -1.1995277404785156
    3. 'n' → logprob: -1.4495277404785156
    4. 'class' → logprob: -4.324527740478516
    5. 'def' → logprob: -5.074527740478516
    6. 'pos' → logprob: -5.949527740478516
    7. 'expr' → logprob: -6.699527740478516
    8. 'import' → logprob: -7.824527740478516
    9. 'line' → logprob: -8.199527740478516
    10. 'tokens' → logprob: -8.449527740478516

Token 465: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5283877849578857
    2. '=' → logprob: -0.9033877849578857
    3. ',' → logprob: -5.653388023376465
    4. '   ' → logprob: -6.653388023376465
    5. '[' → logprob: -8.528388023376465
    6. '    ' → logprob: -9.778388023376465
    7. ' ' → logprob: -9.778388023376465
    8. ')' → logprob: -9.778388023376465
    9. '[:]' → logprob: -11.153388023376465
    10. '.' → logprob: -11.403388023376465

Token 466: ' []
' (ID: 8911)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.6326881647109985
    2. 'input' → logprob: -0.7576881647109985
    3. ' sys' → logprob: -10.507688522338867
    4. 'sys' → logprob: -10.632688522338867
    5. '   ' → logprob: -11.257688522338867
    6. ' ' → logprob: -11.632688522338867
    7. '""' → logprob: -11.757688522338867
    8. '"' → logprob: -13.507688522338867
    9. '''' → logprob: -13.632688522338867
    10. '(input' → logprob: -14.257688522338867

Token 467: '   ' (ID: 271)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2822945713996887
    2. '.append' → logprob: -2.157294511795044
    3. ' =' → logprob: -2.282294511795044
    4. '.extend' → logprob: -4.407294750213623
    5. ',' → logprob: -5.407294750213623
    6. '.' → logprob: -5.532294750213623
    7. 'append' → logprob: -6.532294750213623
    8. '_append' → logprob: -7.282294750213623
    9. '=input' → logprob: -7.282294750213623
    10. 'import' → logprob: -7.532294750213623

Token 468: ' while' (ID: 2049)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.4729396104812622
    2. ' =' → logprob: -1.8479396104812622
    3. 'line' → logprob: -2.3479394912719727
    4. 'def' → logprob: -2.5979394912719727
    5. '   ' → logprob: -2.8479394912719727
    6. 's' → logprob: -2.9729394912719727
    7. 'while' (adapté à ' while') → logprob: -2.9729394912719727
    8. ' n' → logprob: -3.2229394912719727
    9. 'for' → logprob: -3.4729394912719727
    10. 'input' → logprob: -3.4729394912719727

Token 469: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.5894700884819031
    2. ' True' → logprob: -0.8394700884819031
    3. '(True' → logprob: -4.339469909667969
    4. 'len' → logprob: -8.964469909667969
    5. '(' → logprob: -9.589469909667969
    6. ' (' → logprob: -9.714469909667969
    7. '1' → logprob: -9.839469909667969
    8. ' ' → logprob: -10.214469909667969
    9. ' len' → logprob: -11.214469909667969
    10. '(len' → logprob: -11.964469909667969

Token 470: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2937100827693939
    2. ':' → logprob: -1.5437101125717163
    3. ':
' → logprob: -4.293710231781006
    4. '       ' → logprob: -4.543710231781006
    5. 'char' → logprob: -5.168710231781006
    6. ' =' → logprob: -5.418710231781006
    7. '=' → logprob: -6.668710231781006
    8. ',' → logprob: -7.543710231781006
    9. '_line' → logprob: -7.793710231781006
    10. '    ' → logprob: -7.793710231781006

Token 471: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024396609514951706
    2. ' c' → logprob: -4.2743964195251465
    3. ' line' → logprob: -4.8993964195251465
    4. 'c' → logprob: -6.3993964195251465
    5. 'line' → logprob: -7.2743964195251465
    6. '       ' → logprob: -8.899396896362305
    7. ' ch' → logprob: -9.274396896362305
    8. 'ch' → logprob: -9.274396896362305
    9. '    ' → logprob: -10.899396896362305
    10. ' char' → logprob: -11.399396896362305

Token 472: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -1.1013661623001099
    2. 'c' → logprob: -1.2263661623001099
    3. 'line' (adapté à ' line') → logprob: -1.7263661623001099
    4. ' c' → logprob: -1.8513661623001099
    5. '   ' → logprob: -3.3513660430908203
    6. 'b' → logprob: -6.72636604309082
    7. 'l' → logprob: -7.10136604309082
    8. 'ch' → logprob: -7.22636604309082
    9. ' ch' → logprob: -7.97636604309082
    10. 'chunk' → logprob: -8.35136604309082

Token 473: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.17981015145778656
    2. ' =' → logprob: -1.8048101663589478
    3. '   ' → logprob: -10.554810523986816
    4. '=line' → logprob: -10.804810523986816
    5. '=sys' → logprob: -12.179810523986816
    6. '.append' → logprob: -12.304810523986816
    7. '+=' → logprob: -13.179810523986816
    8. '=input' → logprob: -13.429810523986816
    9. ' +=' → logprob: -13.429810523986816
    10. ' ' → logprob: -13.929810523986816

Token 474: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.3344370424747467
    2. 'input' → logprob: -1.5844370126724243
    3. ' sys' → logprob: -2.584437131881714
    4. ' input' → logprob: -5.584436893463135
    5. 'stdin' → logprob: -14.209437370300293
    6. '(sys' → logprob: -14.709437370300293
    7. '   ' → logprob: -15.834437370300293
    8. '=sys' → logprob: -16.584436416625977
    9. '	sys' → logprob: -17.209436416625977
    10. 'import' → logprob: -17.334436416625977

Token 475: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0003096023283433169
    2. '.stdout' → logprob: -8.125309944152832
    3. '.readline' → logprob: -11.875309944152832
    4. '.' → logprob: -12.375309944152832
    5. '.std' → logprob: -13.750309944152832
    6. 'stdin' → logprob: -13.875309944152832
    7. '.argv' → logprob: -15.750309944152832
    8. '(stdin' → logprob: -16.375308990478516
    9. '.stderr' → logprob: -16.750308990478516
    10. '.exit' → logprob: -17.750308990478516

Token 476: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -4.246537173457909e-06
    2. '.' → logprob: -13.375003814697266
    3. 'read' → logprob: -13.500003814697266
    4. ' readline' → logprob: -14.500003814697266
    5. '.read' → logprob: -14.625003814697266
    6. '().' → logprob: -16.000003814697266
    7. 'buffer' → logprob: -16.250003814697266
    8. '.stdin' → logprob: -16.625003814697266
    9. '_read' → logprob: -17.000003814697266
    10. '.readlines' → logprob: -17.375003814697266

Token 477: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.274700403213501
    2. '       ' → logprob: -1.649700403213501
    3. '.rstrip' → logprob: -4.024700164794922
    4. ' if' → logprob: -4.274700164794922
    5. 'if' → logprob: -4.899700164794922
    6. '()
' → logprob: -6.399700164794922
    7. ' =' → logprob: -6.649700164794922
    8. '()' → logprob: -6.774700164794922
    9. '[:-' → logprob: -6.774700164794922
    10. '=' → logprob: -7.149700164794922

Token 478: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.41379639506340027
    2. '       ' → logprob: -1.1637964248657227
    3. ' if' → logprob: -3.7887964248657227
    4. 'if' → logprob: -6.288796424865723
    5. ' =' → logprob: -7.288796424865723
    6. '.rstrip' → logprob: -7.788796424865723
    7. '=' → logprob: -8.288796424865723
    8. '           ' → logprob: -9.038796424865723
    9. '.strip' → logprob: -9.163796424865723
    10. '
' → logprob: -9.413796424865723

Token 479: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.157597616314888
    2. '   ' → logprob: -2.407597541809082
    3. 'if' (adapté à ' if') → logprob: -2.907597541809082
    4. '       ' → logprob: -6.782597541809082
    5. '	if' → logprob: -10.907597541809082
    6. '.rstrip' → logprob: -12.157597541809082
    7. '    ' → logprob: -12.907597541809082
    8. '.strip' → logprob: -13.407597541809082
    9. ' ' → logprob: -13.532597541809082
    10. '=' → logprob: -14.157597541809082

Token 480: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.06227553263306618
    2. 'not' → logprob: -2.8122756481170654
    3. ' line' → logprob: -8.187275886535645
    4. 'line' → logprob: -10.437275886535645
    5. '!' → logprob: -16.312274932861328
    6. ' ' → logprob: -16.437274932861328
    7. '#line' → logprob: -17.062274932861328
    8. '(line' → logprob: -17.187274932861328
    9. '	not' → logprob: -17.187274932861328
    10. '=line' → logprob: -18.062274932861328

Token 481: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.5759415030479431
    2. ' line' → logprob: -0.8259415030479431
    3. '(line' → logprob: -13.45094108581543
    4. '	line' → logprob: -15.07594108581543
    5. '#line' → logprob: -15.70094108581543
    6. '[line' → logprob: -16.07594108581543
    7. '=line' → logprob: -17.07594108581543
    8. ' ' → logprob: -18.20094108581543
    9. '```' → logprob: -19.20094108581543
    10. '1' → logprob: -19.45094108581543

Token 482: ':
' (ID: 734)
  Prédit: '.strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.017992012202739716
    2. ':
' → logprob: -4.51799201965332
    3. ':' → logprob: -5.76799201965332
    4. '   ' → logprob: -6.26799201965332
    5. '.rstrip' → logprob: -6.76799201965332
    6. '.' → logprob: -7.89299201965332
    7. ' or' → logprob: -8.51799201965332
    8. 'strip' → logprob: -9.76799201965332
    9. '       ' → logprob: -10.26799201965332
    10. '           ' → logprob: -11.39299201965332

Token 483: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005137138650752604
    2. '   ' → logprob: -7.875513553619385
    3. ':' → logprob: -9.750514030456543
    4. ' break' → logprob: -10.500514030456543
    5. '           ' → logprob: -10.875514030456543
    6. ':
' → logprob: -11.250514030456543
    7. ' ' → logprob: -12.750514030456543
    8. '      ' → logprob: -13.000514030456543
    9. ',' → logprob: -13.125514030456543
    10. 'break' → logprob: -13.500514030456543

Token 484: ' break' (ID: 2338)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012214821763336658
    2. 'break' (adapté à ' break') → logprob: -5.012214660644531
    3. ' break' → logprob: -5.262214660644531
    4. '   ' → logprob: -8.637214660644531
    5. '
' → logprob: -9.762214660644531
    6. '	break' → logprob: -10.262214660644531
    7. '           ' → logprob: -10.762214660644531
    8. ' ' → logprob: -12.887214660644531
    9. ' ' → logprob: -13.387214660644531
    10. '_break' → logprob: -13.512214660644531

Token 485: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25326797366142273
    2. '       ' → logprob: -1.5032680034637451
    3. ',' → logprob: -7.628267765045166
    4. 's' → logprob: -8.128268241882324
    5. ' s' → logprob: -8.378268241882324
    6. '    
' → logprob: -8.628268241882324
    7. '        
' → logprob: -10.253268241882324
    8. '\' → logprob: -11.003268241882324
    9. ')' → logprob: -11.003268241882324
    10. '           ' → logprob: -11.503268241882324

Token 486: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5767242312431335
    2. '       ' → logprob: -0.8267242312431335
    3. ' s' → logprob: -7.701724052429199
    4. 's' → logprob: -8.2017240524292
    5. '           ' → logprob: -11.2017240524292
    6. '    
' → logprob: -11.5767240524292
    7. ',' → logprob: -11.7017240524292
    8. ' =' → logprob: -12.4517240524292
    9. '        
' → logprob: -12.4517240524292
    10. '```' → logprob: -12.8267240524292

Token 487: ' n' (ID: 297)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.7989475727081299
    2. '   ' → logprob: -0.7989475727081299
    3. 's' → logprob: -2.29894757270813
    4. '       ' → logprob: -10.92394733428955
    5. '	s' → logprob: -12.42394733428955
    6. '_s' → logprob: -12.79894733428955
    7. ' if' → logprob: -13.79894733428955
    8. '
' → logprob: -13.92394733428955
    9. '(s' → logprob: -14.17394733428955
    10. '    ' → logprob: -14.54894733428955

Token 488: 'line' (ID: 1137)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.9032182693481445
    2. '.append' → logprob: -1.1532182693481445
    3. '.extend' → logprob: -2.1532182693481445
    4. '+=' → logprob: -2.9032182693481445
    5. '.' → logprob: -3.0282182693481445
    6. ' =' → logprob: -3.2782182693481445
    7. 's' → logprob: -5.0282182693481445
    8. '=' → logprob: -5.1532182693481445
    9. '   ' → logprob: -5.2782182693481445
    10. ' s' → logprob: -6.7782182693481445

Token 489: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.944184422492981
    2. '.extend' → logprob: -1.319184422492981
    3. '.' → logprob: -1.944184422492981
    4. '=' → logprob: -2.0691843032836914
    5. '.append' → logprob: -3.5691843032836914
    6. ' +=' → logprob: -3.6941843032836914
    7. '+=' → logprob: -4.944184303283691
    8. 's' → logprob: -5.194184303283691
    9. '   ' → logprob: -5.819184303283691
    10. ' ' → logprob: -6.319184303283691

Token 490: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.04301277548074722
    2. ' line' → logprob: -3.168012857437134
    3. '   ' → logprob: -12.043012619018555
    4. '(line' → logprob: -13.043012619018555
    5. '	line' → logprob: -13.418012619018555
    6. '#line' → logprob: -13.918012619018555
    7. '[line' → logprob: -14.043012619018555
    8. '=line' → logprob: -14.043012619018555
    9. 'list' → logprob: -14.793012619018555
    10. 's' → logprob: -15.543012619018555

Token 491: '.strip' (ID: 40613)
  Prédit: '.rstrip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.rstrip' → logprob: -0.2526308298110962
    2. '.strip' → logprob: -1.5026308298110962
    3. '.' → logprob: -7.752630710601807
    4. 'rstrip' → logprob: -8.752631187438965
    5. '[:-' → logprob: -9.627631187438965
    6. '   ' → logprob: -11.502631187438965
    7. ' =' → logprob: -11.502631187438965
    8. 'strip' → logprob: -11.752631187438965
    9. '=' → logprob: -12.002631187438965
    10. '.extend' → logprob: -12.252631187438965

Token 492: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.07950158417224884
    2. '()
' → logprob: -2.5795016288757324
    3. '())' → logprob: -8.079501152038574
    4. '();' → logprob: -9.579501152038574
    5. '():
' → logprob: -10.079501152038574
    6. ')' → logprob: -10.329501152038574
    7. '()\' → logprob: -10.454501152038574
    8. '().' → logprob: -10.954501152038574
    9. '('\' → logprob: -11.079501152038574
    10. '()==' → logprob: -11.079501152038574

Token 493: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015949556604027748
    2. '   ' → logprob: -4.390949726104736
    3. ' if' → logprob: -6.015949726104736
    4. 's' → logprob: -7.515949726104736
    5. ' s' → logprob: -8.390949249267578
    6. 'if' → logprob: -8.890949249267578
    7. '           ' → logprob: -10.015949249267578
    8. '```' → logprob: -11.015949249267578
    9. '=' → logprob: -11.890949249267578
    10. ',' → logprob: -12.515949249267578

Token 494: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.1951768845319748
    2. 's' → logprob: -2.070176839828491
    3. ' if' → logprob: -3.195176839828491
    4. '   ' → logprob: -5.07017707824707
    5. '       ' → logprob: -5.69517707824707
    6. ' s' → logprob: -7.69517707824707
    7. '           ' → logprob: -9.57017707824707
    8. '```' → logprob: -11.69517707824707
    9. '	if' → logprob: -13.19517707824707
    10. 'for' → logprob: -13.44517707824707

Token 495: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.055183641612529755
    2. 'n' → logprob: -3.4301836490631104
    3. 'not' → logprob: -4.055183410644531
    4. ' n' → logprob: -5.555183410644531
    5. 'n't' → logprob: -9.180183410644531
    6. 'len' → logprob: -13.680183410644531
    7. '   ' → logprob: -14.555183410644531
    8. '	not' → logprob: -14.555183410644531
    9. ' len' → logprob: -14.680183410644531
    10. ' ' → logprob: -14.805183410644531

Token 496: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.003600782947614789
    2. ' n' → logprob: -5.628600597381592
    3. 's' → logprob: -15.00360107421875
    4. '	n' → logprob: -15.87860107421875
    5. ')n' → logprob: -16.37860107421875
    6. '_n' → logprob: -16.75360107421875
    7. 'ndef' → logprob: -16.87860107421875
    8. 'n't' → logprob: -17.37860107421875
    9. 'line' → logprob: -17.62860107421875
    10. '   ' → logprob: -17.75360107421875

Token 497: 'line' (ID: 1137)
  Prédit: 'line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.0020918536465615034
    2. 'n' → logprob: -7.502091884613037
    3. ' n' → logprob: -7.752091884613037
    4. '_line' → logprob: -7.877091884613037
    5. 'l' → logprob: -8.377091407775879
    6. '   ' → logprob: -8.502091407775879
    7. ' line' → logprob: -9.252091407775879
    8. 'ine' → logprob: -10.002091407775879
    9. '```' → logprob: -10.627091407775879
    10. ' ' → logprob: -11.377091407775879

Token 498: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4891516864299774
    2. ':
' → logprob: -0.9891517162322998
    3. '           ' → logprob: -4.489151477813721
    4. ' or' → logprob: -6.239151477813721
    5. '   ' → logprob: -7.114151477813721
    6. ':return' → logprob: -8.364151954650879
    7. '==' → logprob: -8.989151954650879
    8. '       ' → logprob: -8.989151954650879
    9. '):' → logprob: -9.239151954650879
    10. '):
' → logprob: -9.364151954650879

Token 499: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0031452777329832315
    2. '       ' → logprob: -5.878145217895508
    3. ':' → logprob: -8.753145217895508
    4. ':
' → logprob: -9.378145217895508
    5. ',' → logprob: -10.753145217895508
    6. 'continue' → logprob: -11.003145217895508
    7. '               ' → logprob: -11.503145217895508
    8. '		' → logprob: -11.628145217895508
    9. ' continue' → logprob: -11.878145217895508
    10. '	       ' → logprob: -12.003145217895508

Token 500: ' continue' (ID: 4901)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.47483640909194946
    2. '           ' → logprob: -1.0998363494873047
    3. 'break' → logprob: -4.099836349487305
    4. 'continue' (adapté à ' continue') → logprob: -4.349836349487305
    5. ' break' → logprob: -4.599836349487305
    6. ' continue' → logprob: -5.474836349487305
    7. '               ' → logprob: -7.349836349487305
    8. '   ' → logprob: -7.599836349487305
    9. '	break' → logprob: -9.349836349487305
    10. '
' → logprob: -10.724836349487305

Token 501: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005345634999684989
    2. '   ' → logprob: -8.625535011291504
    3. ',' → logprob: -8.875535011291504
    4. '<|end|>' → logprob: -9.250535011291504
    5. '           ' → logprob: -10.375535011291504
    6. '        
' → logprob: -10.500535011291504
    7. ' s' → logprob: -11.500535011291504
    8. '<|end|>' → logprob: -12.125535011291504
    9. '
' → logprob: -12.375535011291504
    10. ')' → logprob: -12.375535011291504

Token 502: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0018733091419562697
    2. '   ' → logprob: -7.00187349319458
    3. 's' → logprob: -7.50187349319458
    4. ' s' → logprob: -8.001873016357422
    5. '           ' → logprob: -9.876873016357422
    6. ',' → logprob: -11.876873016357422
    7. '        
' → logprob: -12.626873016357422
    8. '
' → logprob: -12.876873016357422
    9. 'n' → logprob: -13.751873016357422
    10. ' ' → logprob: -14.001873016357422

Token 503: ' if' (ID: 538)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.07401683181524277
    2. '   ' → logprob: -2.949016809463501
    3. 'n' → logprob: -4.57401704788208
    4. ' s' → logprob: -5.44901704788208
    5. 'if' (adapté à ' if') → logprob: -6.57401704788208
    6. '       ' → logprob: -7.19901704788208
    7. ' if' → logprob: -7.44901704788208
    8. ' n' → logprob: -7.82401704788208
    9. 'def' → logprob: -8.199016571044922
    10. 'try' → logprob: -8.199016571044922

Token 504: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.5275904536247253
    2. 'n' → logprob: -0.9025904536247253
    3. 'len' → logprob: -6.402590274810791
    4. ' not' → logprob: -7.027590274810791
    5. ' len' → logprob: -7.277590274810791
    6. ''' → logprob: -7.402590274810791
    7. ' '' → logprob: -8.77759075164795
    8. ' all' → logprob: -8.77759075164795
    9. '"' → logprob: -10.15259075164795
    10. 'n't' → logprob: -10.40259075164795

Token 505: 'line' (ID: 1137)
  Prédit: 'line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.0016628009034320712
    2. 'len' → logprob: -7.751662731170654
    3. '[line' → logprob: -8.126663208007812
    4. '=line' → logprob: -8.501663208007812
    5. '   ' → logprob: -8.876663208007812
    6. '_line' → logprob: -8.876663208007812
    7. 'n' → logprob: -9.126663208007812
    8. '(line' → logprob: -9.751663208007812
    9. '#line' → logprob: -9.876663208007812
    10. '==' → logprob: -10.751663208007812

Token 506: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.8921568989753723
    2. ' ==' → logprob: -1.5171568393707275
    3. '.is' → logprob: -1.6421568393707275
    4. '.startswith' → logprob: -1.8921568393707275
    5. '[' → logprob: -3.7671568393707275
    6. '.' → logprob: -6.392157077789307
    7. '   ' → logprob: -7.892157077789307
    8. '=' → logprob: -8.017156600952148
    9. 'isdigit' → logprob: -8.142156600952148
    10. '=='' → logprob: -8.767156600952148

Token 507: ' '' (ID: 461)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.3885917663574219
    2. ''' → logprob: -1.6385917663574219
    3. ''end' → logprob: -2.888591766357422
    4. ''#' → logprob: -3.763591766357422
    5. ''ex' → logprob: -4.138591766357422
    6. ''q' → logprob: -4.513591766357422
    7. '"#' → logprob: -4.638591766357422
    8. ''n' → logprob: -5.388591766357422
    9. ''.' → logprob: -7.013591766357422
    10. ''E' → logprob: -7.388591766357422

Token 508: '0' (ID: 15)
  Prédit: '':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '':
' → logprob: -1.1823861598968506
    2. '```' → logprob: -1.1823861598968506
    3. '':' → logprob: -1.9323861598968506
    4. ''' → logprob: -2.1823861598968506
    5. ''''' → logprob: -3.3073861598968506
    6. '"' → logprob: -3.8073861598968506
    7. '#' → logprob: -4.18238639831543
    8. '"""' → logprob: -4.80738639831543
    9. '###' → logprob: -5.05738639831543
    10. ''''
' → logprob: -5.18238639831543

Token 509: '':
' (ID: 7669)
  Prédit: '':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':
' → logprob: -0.2939503788948059
    2. '':' → logprob: -2.043950319290161
    3. '\n' → logprob: -2.293950319290161
    4. ''' → logprob: -3.918950319290161
    5. ''):
' → logprob: -6.04395055770874
    6. '':
' → logprob: -7.54395055770874
    7. ' '' → logprob: -7.91895055770874
    8. ')' → logprob: -8.168950080871582
    9. '')' → logprob: -8.543950080871582
    10. '):
' → logprob: -8.668950080871582

Token 510: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6791040897369385
    2. '       ' → logprob: -0.9291040897369385
    3. ':' → logprob: -2.5541040897369385
    4. ':
' → logprob: -3.9291040897369385
    5. '		' → logprob: -9.05410385131836
    6. ' break' → logprob: -9.30410385131836
    7. '	' → logprob: -9.55410385131836
    8. '   ' → logprob: -10.05410385131836
    9. 'break' → logprob: -10.42910385131836
    10. ',' → logprob: -10.55410385131836

Token 511: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.646345853805542
    2. '       ' → logprob: -1.146345853805542
    3. ' break' → logprob: -2.521345853805542
    4. '           ' → logprob: -2.646345853805542
    5. '	break' → logprob: -5.146346092224121
    6. 'return' → logprob: -7.771346092224121
    7. '   ' → logprob: -8.021346092224121
    8. '
' → logprob: -8.646346092224121
    9. '		' → logprob: -9.396346092224121
    10. '               ' → logprob: -9.521346092224121

Token 512: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03339808061718941
    2. '   ' → logprob: -3.533398151397705
    3. '        
' → logprob: -6.408398151397705
    4. '    
' → logprob: -7.033398151397705
    5. '
' → logprob: -7.783398151397705
    6. '<|end|>' → logprob: -8.783397674560547
    7. ',' → logprob: -9.408397674560547
    8. ')' → logprob: -9.408397674560547
    9. '\' → logprob: -9.658397674560547
    10. '#' → logprob: -9.908397674560547

Token 513: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026317482814192772
    2. '   ' → logprob: -3.776317596435547
    3. '
' → logprob: -6.401317596435547
    4. '        
' → logprob: -7.276317596435547
    5. '    
' → logprob: -8.276317596435547
    6. '```' → logprob: -9.026317596435547
    7. '<|end|>' → logprob: -9.401317596435547
    8. ',' → logprob: -9.776317596435547
    9. ' s' → logprob: -10.276317596435547
    10. ')' → logprob: -10.651317596435547

Token 514: ' n' (ID: 297)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4114745557308197
    2. ' s' → logprob: -2.0364744663238525
    3. '       ' → logprob: -2.1614744663238525
    4. '   ' → logprob: -2.6614744663238525
    5. 'n' (adapté à ' n') → logprob: -4.161474704742432
    6. ' n' → logprob: -5.161474704742432
    7. ' parts' → logprob: -8.911474227905273
    8. '
' → logprob: -9.161474227905273
    9. ' ' → logprob: -10.411474227905273
    10. 'parts' → logprob: -10.536474227905273

Token 515: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1685914695262909
    2. '=' → logprob: -1.9185914993286133
    3. '=int' → logprob: -5.793591499328613
    4. ',' → logprob: -5.918591499328613
    5. 'um' → logprob: -6.918591499328613
    6. '   ' → logprob: -7.793591499328613
    7. '=line' → logprob: -8.043591499328613
    8. '.append' → logprob: -8.668591499328613
    9. '       ' → logprob: -8.918591499328613
    10. 'line' → logprob: -9.043591499328613

Token 516: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0009115827269852161
    2. ' int' → logprob: -7.000911712646484
    3. '   ' → logprob: -18.625911712646484
    4. ' ' → logprob: -18.750911712646484
    5. '[int' → logprob: -19.125911712646484
    6. 'n' → logprob: -19.250911712646484
    7. '  ' → logprob: -19.625911712646484
    8. '(int' → logprob: -19.625911712646484
    9. '=int' → logprob: -20.750911712646484
    10. '    ' → logprob: -21.500911712646484

Token 517: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.015689654275774956
    2. '(' → logprob: -4.515689849853516
    3. 'n' → logprob: -5.390689849853516
    4. ' (' → logprob: -10.515689849853516
    5. ' n' → logprob: -10.765689849853516
    6. '('' → logprob: -12.265689849853516
    7. ')' → logprob: -13.015689849853516
    8. '   ' → logprob: -13.140689849853516
    9. '`' → logprob: -13.140689849853516
    10. '(
' → logprob: -13.390689849853516

Token 518: 'line' (ID: 1137)
  Prédit: 'line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.00036846695002168417
    2. '(n' → logprob: -8.125368118286133
    3. '(line' → logprob: -10.125368118286133
    4. ')' → logprob: -10.750368118286133
    5. 'n' → logprob: -13.000368118286133
    6. '(' → logprob: -13.000368118286133
    7. ')n' → logprob: -14.000368118286133
    8. ')
' → logprob: -14.125368118286133
    9. '[n' → logprob: -14.250368118286133
    10. '_line' → logprob: -14.500368118286133

Token 519: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011143083684146404
    2. ')
' → logprob: -4.511143207550049
    3. '   ' → logprob: -10.01114273071289
    4. '       ' → logprob: -10.26114273071289
    5. ' )' → logprob: -12.26114273071289
    6. '[' → logprob: -13.51114273071289
    7. ')\' → logprob: -13.76114273071289
    8. ')
' → logprob: -13.88614273071289
    9. '')' → logprob: -14.26114273071289
    10. ')`' → logprob: -14.38614273071289

Token 520: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011240257881581783
    2. '   ' → logprob: -7.876123905181885
    3. '<|end|>' → logprob: -8.126124382019043
    4. 's' → logprob: -8.376124382019043
    5. '        
' → logprob: -9.251124382019043
    6. '	' → logprob: -9.876124382019043
    7. ',' → logprob: -10.876124382019043
    8. '<|end|>' → logprob: -11.751124382019043
    9. '           ' → logprob: -12.001124382019043
    10. '	   ' → logprob: -12.251124382019043

Token 521: ' s' (ID: 265)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6162480115890503
    2. 's' (adapté à ' s') → logprob: -0.9912480115890503
    3. 'expr' → logprob: -2.74124813079834
    4. ' s' → logprob: -4.49124813079834
    5. 'line' → logprob: -4.99124813079834
    6. '   ' → logprob: -6.24124813079834
    7. 'expression' → logprob: -6.36624813079834
    8. ' expr' → logprob: -7.11624813079834
    9. ' line' → logprob: -7.49124813079834
    10. 'code' → logprob: -7.61624813079834

Token 522: '_line' (ID: 14418)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8201123476028442
    2. ' =' → logprob: -1.3201123476028442
    3. '.append' → logprob: -2.0701122283935547
    4. '.' → logprob: -2.3201122283935547
    5. '.clear' → logprob: -3.1951122283935547
    6. '_line' → logprob: -4.070112228393555
    7. '[:]' → logprob: -5.320112228393555
    8. '.extend' → logprob: -6.695112228393555
    9. 's' → logprob: -6.945112228393555
    10. 'line' → logprob: -7.445112228393555

Token 523: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22556845843791962
    2. '=' → logprob: -1.600568413734436
    3. ',' → logprob: -9.725568771362305
    4. '   ' → logprob: -10.350568771362305
    5. 's' → logprob: -11.475568771362305
    6. '=line' → logprob: -11.725568771362305
    7. '    ' → logprob: -11.850568771362305
    8. '.append' → logprob: -11.975568771362305
    9. ' ' → logprob: -12.100568771362305
    10. '.' → logprob: -12.350568771362305

Token 524: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.09499158710241318
    2. ' sys' → logprob: -2.469991683959961
    3. 'input' → logprob: -5.219991683959961
    4. ' input' → logprob: -7.469991683959961
    5. '   ' → logprob: -10.344991683959961
    6. '       ' → logprob: -11.344991683959961
    7. '	sys' → logprob: -12.469991683959961
    8. '(sys' → logprob: -12.719991683959961
    9. '=sys' → logprob: -12.969991683959961
    10. ' ' → logprob: -13.969991683959961

Token 525: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.020220089703798294
    2. '.readline' → logprob: -4.7702202796936035
    3. 'stdin' → logprob: -5.2702202796936035
    4. '().' → logprob: -5.3952202796936035
    5. '()' → logprob: -7.5202202796936035
    6. '()
' → logprob: -8.145219802856445
    7. '=sys' → logprob: -8.270219802856445
    8. 'sys' → logprob: -8.395219802856445
    9. '(stdin' → logprob: -8.645219802856445
    10. '.stdout' → logprob: -9.145219802856445

Token 526: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.00029387109680101275
    2. 'read' → logprob: -8.250293731689453
    3. '.read' → logprob: -10.500293731689453
    4. '.' → logprob: -13.125293731689453
    5. '       ' → logprob: -13.875293731689453
    6. '   ' → logprob: -14.250293731689453
    7. 'line' → logprob: -14.250293731689453
    8. 'stdin' → logprob: -15.250293731689453
    9. '().' → logprob: -15.875293731689453
    10. '           ' → logprob: -16.250293731689453

Token 527: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3964281380176544
    2. '().' → logprob: -1.146428108215332
    3. '       ' → logprob: -5.271428108215332
    4. 'rstrip' → logprob: -6.646428108215332
    5. '.rstrip' → logprob: -6.771428108215332
    6. '<|end|>' → logprob: -7.021428108215332
    7. '()
' → logprob: -8.271428108215332
    8. '.strip' → logprob: -8.396428108215332
    9. '<|end|>' → logprob: -9.146428108215332
    10. '=' → logprob: -10.021428108215332

Token 528: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.027080411091446877
    2. 'rstrip' → logprob: -3.7770802974700928
    3. 's' → logprob: -5.777080535888672
    4. ' strip' → logprob: -7.277080535888672
    5. ' s' → logprob: -10.277080535888672
    6. '_strip' → logprob: -13.402080535888672
    7. 'r' → logprob: -13.652080535888672
    8. '   ' → logprob: -14.402080535888672
    9. '       ' → logprob: -15.277080535888672
    10. '.strip' → logprob: -15.402080535888672

Token 529: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03036230430006981
    2. '()
' → logprob: -3.655362367630005
    3. '       ' → logprob: -5.780362129211426
    4. '()\' → logprob: -7.905362129211426
    5. '   ' → logprob: -8.530362129211426
    6. '())' → logprob: -9.405362129211426
    7. ')' → logprob: -9.530362129211426
    8. '();' → logprob: -9.780362129211426
    9. '()+' → logprob: -10.780362129211426
    10. '        
' → logprob: -10.905362129211426

Token 530: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00071553117595613
    2. '<|end|>' → logprob: -7.750715732574463
    3. 's' → logprob: -9.500715255737305
    4. '        
' → logprob: -9.625715255737305
    5. '   ' → logprob: -9.875715255737305
    6. '<|end|>' → logprob: -11.000715255737305
    7. ' s' → logprob: -12.000715255737305
    8. ')' → logprob: -12.000715255737305
    9. '	' → logprob: -12.125715255737305
    10. '        ' → logprob: -12.125715255737305

Token 531: ' s' (ID: 265)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.28810349106788635
    2. 's' (adapté à ' s') → logprob: -1.413103461265564
    3. ' s' → logprob: -5.0381035804748535
    4. '   ' → logprob: -7.9131035804748535
    5. 'def' → logprob: -11.288103103637695
    6. '        
' → logprob: -11.288103103637695
    7. 'if' → logprob: -11.788103103637695
    8. '	s' → logprob: -12.038103103637695
    9. 'n' → logprob: -12.163103103637695
    10. '           ' → logprob: -12.413103103637695

Token 532: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0625252723693848
    2. '.append' → logprob: -1.1875252723693848
    3. '=' → logprob: -1.3125252723693848
    4. '.extend' → logprob: -2.8125252723693848
    5. '.' → logprob: -4.062525272369385
    6. '.=' → logprob: -7.187525272369385
    7. '+=' → logprob: -7.437525272369385
    8. ' +=' → logprob: -7.437525272369385
    9. '=s' → logprob: -7.812525272369385
    10. '   ' → logprob: -7.812525272369385

Token 533: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.038785669952631
    2. 'list' → logprob: -3.288785696029663
    3. ' s' → logprob: -7.538785457611084
    4. ' list' → logprob: -8.913785934448242
    5. 'n' → logprob: -9.538785934448242
    6. '[s' → logprob: -12.663785934448242
    7. '   ' → logprob: -14.413785934448242
    8. 'str' → logprob: -14.663785934448242
    9. '[' → logprob: -15.038785934448242
    10. ' ' → logprob: -15.163785934448242

Token 534: '_line' (ID: 14418)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3277592360973358
    2. '=' → logprob: -2.077759265899658
    3. '+=' → logprob: -2.952759265899658
    4. '_line' → logprob: -3.077759265899658
    5. '.append' → logprob: -4.077759265899658
    6. ' +' → logprob: -4.577759265899658
    7. ' =' → logprob: -4.577759265899658
    8. ' +=' → logprob: -4.952759265899658
    9. '.extend' → logprob: -5.452759265899658
    10. '+s' → logprob: -5.952759265899658

Token 535: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8427407741546631
    2. '<|end|>' → logprob: -1.217740774154663
    3. '   ' → logprob: -1.842740774154663
    4. '
' → logprob: -2.842740774154663
    5. '<|end|>' → logprob: -3.342740774154663
    6. ',' → logprob: -5.592741012573242
    7. 'def' → logprob: -5.717741012573242
    8. '[' → logprob: -6.092741012573242
    9. ')' → logprob: -6.467741012573242
    10. '        
' → logprob: -6.592741012573242

Token 536: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03268762677907944
    2. '
' → logprob: -3.9076876640319824
    3. '    
' → logprob: -4.657687664031982
    4. 'def' → logprob: -6.532687664031982
    5. '<|end|>' → logprob: -7.782687664031982
    6. '```' → logprob: -8.157687187194824
    7. '       ' → logprob: -9.532687187194824
    8. '        
' → logprob: -9.657687187194824
    9. ',' → logprob: -9.907687187194824
    10. ' 
' → logprob: -10.032687187194824

Token 537: ' length' (ID: 5517)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.012309144251048565
    2. '   ' → logprob: -5.0123090744018555
    3. 'class' → logprob: -5.8873090744018555
    4. 'def' → logprob: -6.1373090744018555
    5. 'idx' → logprob: -7.6373090744018555
    6. 'index' → logprob: -10.012309074401855
    7. '
' → logprob: -10.012309074401855
    8. 'n' → logprob: -10.387309074401855
    9. 'i' → logprob: -11.887309074401855
    10. ' pos' → logprob: -11.887309074401855

Token 538: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.997504472732544
    2. '[' → logprob: -1.372504472732544
    3. ' =' → logprob: -1.622504472732544
    4. '   ' → logprob: -3.122504472732544
    5. '<|end|>' → logprob: -3.747504472732544
    6. ')' → logprob: -3.872504472732544
    7. '<|end|>' → logprob: -3.997504472732544
    8. '==' → logprob: -4.372504234313965
    9. ' ==' → logprob: -4.622504234313965
    10. '    ' → logprob: -4.997504234313965

Token 539: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.006716079078614712
    2. ' len' → logprob: -5.006716251373291
    3. '(len' → logprob: -14.881715774536133
    4. '       ' → logprob: -15.006715774536133
    5. '[len' → logprob: -17.381715774536133
    6. '=len' → logprob: -18.631715774536133
    7. 'length' → logprob: -19.506715774536133
    8. ',len' → logprob: -19.756715774536133
    9. '	len' → logprob: -20.006715774536133
    10. '   ' → logprob: -20.006715774536133

Token 540: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0007248217007145286
    2. 's' → logprob: -7.250724792480469
    3. '(' → logprob: -11.125724792480469
    4. ' s' → logprob: -17.00072479248047
    5. '_s' → logprob: -17.50072479248047
    6. ' (' → logprob: -17.62572479248047
    7. '(
' → logprob: -17.87572479248047
    8. '(n' → logprob: -18.62572479248047
    9. '(S' → logprob: -19.75072479248047
    10. 'S' → logprob: -20.25072479248047

Token 541: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003512168535962701
    2. '   ' → logprob: -5.878512382507324
    3. ')
' → logprob: -7.378512382507324
    4. ' )' → logprob: -10.378512382507324
    5. '       ' → logprob: -10.378512382507324
    6. '
' → logprob: -12.003512382507324
    7. '<|end|>' → logprob: -13.253512382507324
    8. '[' → logprob: -13.503512382507324
    9. '<|end|>' → logprob: -13.503512382507324
    10. '#' → logprob: -13.628512382507324

Token 542: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05050813779234886
    2. 'pos' → logprob: -3.5505080223083496
    3. '       ' → logprob: -4.55050802230835
    4. ' pos' → logprob: -5.42550802230835
    5. '    
' → logprob: -6.05050802230835
    6. 'def' → logprob: -6.67550802230835
    7. '
' → logprob: -6.67550802230835
    8. '        
' → logprob: -8.425508499145508
    9. 'class' → logprob: -9.050508499145508
    10. '	pos' → logprob: -9.550508499145508

Token 543: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' (adapté à ' pos') → logprob: -0.0032668381463736296
    2. '   ' → logprob: -6.12826681137085
    3. 'def' → logprob: -7.37826681137085
    4. 'class' → logprob: -8.503267288208008
    5. 'idx' → logprob: -9.253267288208008
    6. '
' → logprob: -9.753267288208008
    7. 'index' → logprob: -10.128267288208008
    8. ' pos' → logprob: -11.128267288208008
    9. 'position' → logprob: -11.253267288208008
    10. '       ' → logprob: -11.503267288208008

Token 544: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132939338684082
    2. '=' → logprob: -1.3132939338684082
    3. ')' → logprob: -11.56329345703125
    4. ' ' → logprob: -12.18829345703125
    5. ',' → logprob: -12.56329345703125
    6. '  ' → logprob: -12.81329345703125
    7. 's' → logprob: -12.81329345703125
    8. '   ' → logprob: -13.31329345703125
    9. '_' → logprob: -13.81329345703125
    10. 'x' → logprob: -14.18829345703125

Token 545: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006715728435665369
    2. ' ' → logprob: -5.006715774536133
    3. '1' → logprob: -15.756715774536133
    4. '[' → logprob: -15.881715774536133
    5. '   ' → logprob: -16.256715774536133
    6. '  ' → logprob: -18.194215774536133
    7. ' [' → logprob: -18.256715774536133
    8. '=' → logprob: -18.506715774536133
    9. '۰' → logprob: -18.506715774536133
    10. ' ' → logprob: -18.694215774536133

Token 546: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.8889261304575484e-06
    2. '[' → logprob: -12.625003814697266
    3. ' ' → logprob: -14.500003814697266
    4. '   ' → logprob: -20.125003814697266
    5. ' [' → logprob: -20.250003814697266
    6. '```' → logprob: -20.875003814697266
    7. '{' → logprob: -21.000003814697266
    8. '1' → logprob: -21.375003814697266
    9. 'pos' → logprob: -21.375003814697266
    10. '-' → logprob: -22.125003814697266

Token 547: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5387790203094482
    2. '<|end|>' → logprob: -1.4137790203094482
    3. 'def' → logprob: -2.1637790203094482
    4. '   ' → logprob: -4.038779258728027
    5. '<|end|>' → logprob: -4.413779258728027
    6. '       ' → logprob: -5.163779258728027
    7. ',' → logprob: -5.538779258728027
    8. ':' → logprob: -6.038779258728027
    9. '    
' → logprob: -6.288779258728027
    10. ' def' → logprob: -6.413779258728027

Token 548: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4044347107410431
    2. 'def' → logprob: -1.4044346809387207
    3. '
' → logprob: -3.1544346809387207
    4. '    
' → logprob: -4.654434680938721
    5. '```' → logprob: -4.779434680938721
    6. '<|end|>' → logprob: -4.779434680938721
    7. '       ' → logprob: -5.154434680938721
    8. '    ' → logprob: -6.154434680938721
    9. '        
' → logprob: -6.529434680938721
    10. ':' → logprob: -6.654434680938721

Token 549: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5547078251838684
    2. '   ' → logprob: -1.4297077655792236
    3. 'class' → logprob: -1.9297077655792236
    4. '
' → logprob: -3.9297077655792236
    5. 'tokens' → logprob: -4.554708003997803
    6. '       ' → logprob: -5.304708003997803
    7. '    
' → logprob: -5.429708003997803
    8. '        
' → logprob: -7.304708003997803
    9. 'token' → logprob: -8.429707527160645
    10. 'stack' → logprob: -8.804707527160645

Token 550: ' Parsing' (ID: 173321)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1014319583773613
    2. 'class' → logprob: -2.6014318466186523
    3. '   ' → logprob: -3.8514318466186523
    4. '       ' → logprob: -7.476431846618652
    5. '
' → logprob: -8.476431846618652
    6. 'tokens' → logprob: -8.726431846618652
    7. 'indent' → logprob: -10.726431846618652
    8. '#' → logprob: -10.976431846618652
    9. 'import' → logprob: -11.601431846618652
    10. 'stack' → logprob: -11.601431846618652

Token 551: ' functions' (ID: 9964)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.11512009054422379
    2. '   ' → logprob: -2.7401201725006104
    3. ':' → logprob: -4.115119934082031
    4. '
' → logprob: -4.865119934082031
    5. ' def' → logprob: -4.990119934082031
    6. 'class' → logprob: -5.115119934082031
    7. '       ' → logprob: -6.865119934082031
    8. ' ' → logprob: -7.115119934082031
    9. '=' → logprob: -7.365119934082031
    10. '    ' → logprob: -7.365119934082031

Token 552: ' return' (ID: 622)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7937043309211731
    2. '
' → logprob: -1.0437042713165283
    3. '   ' → logprob: -1.7937042713165283
    4. ':' → logprob: -4.793704509735107
    5. '       ' → logprob: -4.793704509735107
    6. '    
' → logprob: -5.543704509735107
    7. '

' → logprob: -5.918704509735107
    8. '        
' → logprob: -6.168704509735107
    9. ' def' → logprob: -6.793704509735107
    10. '<|end|>' → logprob: -7.418704509735107

Token 553: ' (' (ID: 350)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.9010584354400635
    2. 'node' → logprob: -1.0260584354400635
    3. '(node' → logprob: -2.1510584354400635
    4. 'None' → logprob: -3.7760584354400635
    5. '(F' → logprob: -4.151058197021484
    6. '(pos' → logprob: -4.151058197021484
    7. '(None' → logprob: -4.276058197021484
    8. 'value' → logprob: -4.651058197021484
    9. 'def' → logprob: -4.651058197021484
    10. '(' → logprob: -5.151058197021484

Token 554: 'value' (ID: 1594)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.11381133645772934
    2. 'node' → logprob: -2.3638112545013428
    3. 'value' → logprob: -5.238811492919922
    4. 'None' → logprob: -5.988811492919922
    5. 'start' → logprob: -6.238811492919922
    6. ' pos' → logprob: -7.113811492919922
    7. 'result' → logprob: -7.613811492919922
    8. ' node' → logprob: -7.613811492919922
    9. '(pos' → logprob: -7.613811492919922
    10. 'val' → logprob: -8.363811492919922

Token 555: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.943783253314905e-05
    2. ' ,' → logprob: -9.875059127807617
    3. ')' → logprob: -12.375059127807617
    4. ',
' → logprob: -13.625059127807617
    5. '),' → logprob: -14.625059127807617
    6. '   ' → logprob: -14.750059127807617
    7. ',None' → logprob: -15.000059127807617
    8. ',int' → logprob: -15.625059127807617
    9. ',index' → logprob: -16.125059127807617
    10. ' ' → logprob: -16.125059127807617

Token 556: ' (' (ID: 350)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.03182206675410271
    2. ' pos' → logprob: -3.5318219661712646
    3. 'end' → logprob: -7.281822204589844
    4. 'next' → logprob: -8.031822204589844
    5. 'new' → logprob: -8.281822204589844
    6. ' new' → logprob: -8.906822204589844
    7. 'node' → logprob: -8.906822204589844
    8. ' next' → logprob: -8.906822204589844
    9. 'start' → logprob: -9.281822204589844
    10. ' end' → logprob: -9.406822204589844

Token 557: 'start' (ID: 5236)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.31651541590690613
    2. 'start' → logprob: -1.3165154457092285
    3. 'l' → logprob: -6.5665154457092285
    4. ' pos' → logprob: -7.5665154457092285
    5. ' start' → logprob: -7.5665154457092285
    6. 'node' → logprob: -8.31651496887207
    7. 'next' → logprob: -9.19151496887207
    8. '(pos' → logprob: -9.56651496887207
    9. '(start' → logprob: -9.69151496887207
    10. 'position' → logprob: -9.94151496887207

Token 558: '_index' (ID: 7748)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -7.827200897736475e-05
    2. ' ,' → logprob: -10.500078201293945
    3. ',end' → logprob: -11.125078201293945
    4. ',
' → logprob: -11.250078201293945
    5. ',pos' → logprob: -11.750078201293945
    6. ')' → logprob: -12.500078201293945
    7. '),' → logprob: -13.000078201293945
    8. '<|end|>' → logprob: -13.250078201293945
    9. ',next' → logprob: -13.625078201293945
    10. 'pos' → logprob: -13.625078201293945

Token 559: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.643152740551159e-05
    2. ' ,' → logprob: -10.875036239624023
    3. ',
' → logprob: -12.000036239624023
    4. '),' → logprob: -13.000036239624023
    5. '<|end|>' → logprob: -13.000036239624023
    6. ',pos' → logprob: -13.375036239624023
    7. ')' → logprob: -13.500036239624023
    8. ',end' → logprob: -14.125036239624023
    9. ',next' → logprob: -14.250036239624023
    10. '<|end|>' → logprob: -15.000036239624023

Token 560: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.16286607086658478
    2. ' end' → logprob: -1.9128661155700684
    3. 'pos' → logprob: -6.037866115570068
    4. ' pos' → logprob: -8.91286563873291
    5. ')' → logprob: -10.16286563873291
    6. ',end' → logprob: -10.91286563873291
    7. '_end' → logprob: -11.28786563873291
    8. '       ' → logprob: -11.66286563873291
    9. '        ' → logprob: -12.16286563873291
    10. '   ' → logprob: -12.28786563873291

Token 561: '_index' (ID: 7748)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014841186814010143
    2. '_' → logprob: -5.139841079711914
    3. '_pos' → logprob: -5.139841079711914
    4. '_token' → logprob: -7.139841079711914
    5. '))' → logprob: -7.389841079711914
    6. '),' → logprob: -7.639841079711914
    7. 'pos' → logprob: -8.014841079711914
    8. ',' → logprob: -8.389841079711914
    9. '_)' → logprob: -8.764841079711914
    10. '   ' → logprob: -9.139841079711914

Token 562: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13962438702583313
    2. '))' → logprob: -2.1396243572235107
    3. '),' → logprob: -4.38962459564209
    4. ',' → logprob: -9.13962459564209
    5. '       ' → logprob: -10.38962459564209
    6. '   ' → logprob: -10.88962459564209
    7. ')
' → logprob: -11.38962459564209
    8. '))
' → logprob: -12.26462459564209
    9. ')),' → logprob: -12.26462459564209
    10. ')))' → logprob: -12.26462459564209

Token 563: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0436246395111084
    2. '
' → logprob: -1.2936246395111084
    3. 'def' → logprob: -1.6686246395111084
    4. '   ' → logprob: -2.0436246395111084
    5. '        
' → logprob: -4.0436248779296875
    6. ',' → logprob: -4.6686248779296875
    7. ':' → logprob: -4.6686248779296875
    8. '    
' → logprob: -5.0436248779296875
    9. '<|end|>' → logprob: -5.9186248779296875
    10. '```' → logprob: -6.7936248779296875

Token 564: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.39056286215782166
    2. '       ' → logprob: -1.265562891960144
    3. '
' → logprob: -3.5155627727508545
    4. '        
' → logprob: -4.640563011169434
    5. '   ' → logprob: -7.515563011169434
    6. ' def' → logprob: -7.765563011169434
    7. 'class' → logprob: -8.515563011169434
    8. '    
' → logprob: -9.015563011169434
    9. 'import' → logprob: -9.265563011169434
    10. '<|end|>' → logprob: -9.890563011169434

Token 565: ' We'll' (ID: 46830)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.033511411398649216
    2. '       ' → logprob: -4.158511638641357
    3. '   ' → logprob: -4.783511638641357
    4. '
' → logprob: -4.783511638641357
    5. 'class' → logprob: -8.9085111618042
    6. ' def' → logprob: -9.0335111618042
    7. '        
' → logprob: -9.1585111618042
    8. '    
' → logprob: -9.1585111618042
    9. '	def' → logprob: -10.1585111618042
    10. 'import' → logprob: -11.2835111618042

Token 566: ' also' (ID: 1217)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.445529043674469
    2. 'define' → logprob: -1.0705289840698242
    3. '   ' → logprob: -4.945528984069824
    4. ' define' → logprob: -5.070528984069824
    5. 'continue' → logprob: -6.070528984069824
    6. 'parse' → logprob: -8.570528984069824
    7. ' def' → logprob: -8.695528984069824
    8. '
' → logprob: -8.820528984069824
    9. 'indent' → logprob: -8.820528984069824
    10. ' continue' → logprob: -10.320528984069824

Token 567: ' store' (ID: 4897)
  Prédit: 'store'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'store' → logprob: -1.115242600440979
    2. 'define' → logprob: -1.365242600440979
    3. 'def' → logprob: -1.740242600440979
    4. 'parse' → logprob: -2.4902424812316895
    5. 'track' → logprob: -3.3652424812316895
    6. '   ' → logprob: -3.4902424812316895
    7. 'cache' → logprob: -3.7402424812316895
    8. 'maint' → logprob: -4.1152424812316895
    9. 'annot' → logprob: -4.8652424812316895
    10. ' store' → logprob: -4.8652424812316895

Token 568: ' all' (ID: 722)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nodes' → logprob: -0.34694549441337585
    2. 'def' → logprob: -2.8469455242156982
    3. 'tokens' → logprob: -3.0969455242156982
    4. ' nodes' → logprob: -3.3469455242156982
    5. 'results' → logprob: -3.7219455242156982
    6. 'stack' → logprob: -3.9719455242156982
    7. '   ' → logprob: -3.9719455242156982
    8. '[]' → logprob: -4.346945285797119
    9. 'pos' → logprob: -4.596945285797119
    10. 'parse' → logprob: -4.846945285797119

Token 569: ' nodes' (ID: 15749)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nodes' → logprob: -0.05543506518006325
    2. ' nodes' → logprob: -3.3054351806640625
    3. '_nodes' → logprob: -4.1804351806640625
    4. 'tokens' → logprob: -6.8054351806640625
    5. 'results' → logprob: -8.180435180664062
    6. '   ' → logprob: -8.805435180664062
    7. '	nodes' → logprob: -9.180435180664062
    8. 'positions' → logprob: -9.680435180664062
    9. ' tokens' → logprob: -10.305435180664062
    10. ' intervals' → logprob: -10.430435180664062

Token 570: ' with' (ID: 483)
  Prédit: '_nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_nodes' → logprob: -0.9837061166763306
    2. 'nodes' → logprob: -1.2337061166763306
    3. ',' → logprob: -2.483705997467041
    4. '       ' → logprob: -2.858705997467041
    5. '   ' → logprob: -2.858705997467041
    6. '
' → logprob: -3.108705997467041
    7. 'def' → logprob: -3.358705997467041
    8. ' nodes' → logprob: -4.733705997467041
    9. ':' → logprob: -5.233705997467041
    10. ' =' → logprob: -5.358705997467041

Token 571: ' their' (ID: 1043)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.6763889789581299
    2. '[]' → logprob: -2.17638897895813
    3. 'their' → logprob: -2.55138897895813
    4. '(' → logprob: -3.05138897895813
    5. 'pos' → logprob: -3.42638897895813
    6. 'start' → logprob: -3.67638897895813
    7. ' their' → logprob: -3.67638897895813
    8. 'values' → logprob: -3.92638897895813
    9. 'nodes' → logprob: -4.051388740539551
    10. 'append' → logprob: -4.176388740539551

Token 572: ' intervals' (ID: 49900)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.9972670078277588
    2. ' intervals' → logprob: -1.6222670078277588
    3. 'positions' → logprob: -1.7472670078277588
    4. 'start' → logprob: -1.7472670078277588
    5. ' positions' → logprob: -3.497267007827759
    6. '(start' → logprob: -3.622267007827759
    7. 'ranges' → logprob: -4.24726676940918
    8. ' start' → logprob: -4.99726676940918
    9. '(l' → logprob: -5.87226676940918
    10. ' (' → logprob: -6.99726676940918

Token 573: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -1.4979954957962036
    2. '       ' → logprob: -1.7479954957962036
    3. 'def' → logprob: -1.7479954957962036
    4. ':' → logprob: -2.122995376586914
    5. '
' → logprob: -2.247995376586914
    6. ',' → logprob: -2.372995376586914
    7. '   ' → logprob: -3.122995376586914
    8. '<|end|>' → logprob: -3.872995376586914
    9. 'and' → logprob: -4.622995376586914
    10. '        
' → logprob: -4.872995376586914

Token 574: ' values' (ID: 4824)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'values' → logprob: -0.03684646263718605
    2. ' values' → logprob: -3.911846399307251
    3. 'types' → logprob: -4.28684663772583
    4. 'value' → logprob: -7.28684663772583
    5. 'results' → logprob: -7.53684663772583
    6. 'type' → logprob: -8.161846160888672
    7. ' types' → logprob: -8.286846160888672
    8. 'children' → logprob: -8.536846160888672
    9. 'counts' → logprob: -8.911846160888672
    10. 'vals' → logprob: -9.161846160888672

Token 575: '.
' (ID: 558)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2357153296470642
    2. 'def' → logprob: -2.235715389251709
    3. '   ' → logprob: -3.360715389251709
    4. '       ' → logprob: -3.860715389251709
    5. '<|end|>' → logprob: -3.985715389251709
    6. ':' → logprob: -5.110715389251709
    7. '        
' → logprob: -5.110715389251709
    8. ',' → logprob: -5.235715389251709
    9. '<|end|>' → logprob: -5.235715389251709
    10. '    
' → logprob: -6.360715389251709

Token 576: '       ' (ID: 309)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7035478353500366
    2. '       ' → logprob: -1.2035478353500366
    3. '
' → logprob: -2.078547954559326
    4. '        
' → logprob: -3.453547954559326
    5. '   ' → logprob: -3.953547954559326
    6. 'class' → logprob: -4.703547954559326
    7. '```' → logprob: -4.703547954559326
    8. '    
' → logprob: -5.328547954559326
    9. 'tabs' → logprob: -6.328547954559326
    10. '<|end|>' → logprob: -6.953547954559326

Token 577: ' #' (ID: 1069)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nodes' → logprob: -0.18613773584365845
    2. 'class' → logprob: -2.5611376762390137
    3. '
' → logprob: -3.5611376762390137
    4. '       ' → logprob: -3.8111376762390137
    5. '   ' → logprob: -3.8111376762390137
    6. 'def' → logprob: -4.561137676239014
    7. '        
' → logprob: -5.686137676239014
    8. '    
' → logprob: -6.186137676239014
    9. 'tokens' → logprob: -6.811137676239014
    10. '	nodes' → logprob: -7.186137676239014

Token 578: ' Decor' (ID: 32509)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.7817370295524597
    2. '
' → logprob: -1.6567370891571045
    3. 'def' → logprob: -1.7817370891571045
    4. '   ' → logprob: -2.4067370891571045
    5. '       ' → logprob: -2.5317370891571045
    6. '        
' → logprob: -5.281736850738525
    7. '    
' → logprob: -5.406736850738525
    8. ' class' → logprob: -6.906736850738525
    9. 'tokens' → logprob: -6.906736850738525
    10. 'nodes' → logprob: -7.156736850738525

Token 579: 'ate' (ID: 379)
  Prédit: 'ated'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ated' → logprob: -0.734710693359375
    2. 'ator' → logprob: -1.109710693359375
    3. '@' → logprob: -1.859710693359375
    4. 'ate' → logprob: -3.609710693359375
    5. 'ators' → logprob: -5.984710693359375
    6. 'at' → logprob: -6.234710693359375
    7. 'def' → logprob: -6.484710693359375
    8. 'r' → logprob: -7.609710693359375
    9. 'tor' → logprob: -7.859710693359375
    10. 'ater' → logprob: -7.859710693359375

Token 580: ' functions' (ID: 9964)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3003135919570923
    2. '
' → logprob: -1.5503135919570923
    3. 'ed' → logprob: -4.675313472747803
    4. 'd' → logprob: -4.800313472747803
    5. 'with' → logprob: -4.800313472747803
    6. ' def' → logprob: -5.550313472747803
    7. ' with' → logprob: -5.675313472747803
    8. '@' → logprob: -6.175313472747803
    9. 's' → logprob: -6.800313472747803
    10. 'ation' → logprob: -6.925313472747803

Token 581: ' with' (ID: 483)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2846018671989441
    2. 'with' → logprob: -2.409601926803589
    3. '@' → logprob: -2.909601926803589
    4. ' with' → logprob: -3.159601926803589
    5. '=' → logprob: -3.659601926803589
    6. '
' → logprob: -4.15960168838501
    7. '   ' → logprob: -5.40960168838501
    8. ' =' → logprob: -5.65960168838501
    9. ':' → logprob: -6.28460168838501
    10. 'import' → logprob: -6.65960168838501

Token 582: ' current' (ID: 2208)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '@' → logprob: -0.3560750484466553
    2. 'l' → logprob: -1.3560750484466553
    3. 'fun' → logprob: -3.2310750484466553
    4. 'thread' → logprob: -6.606075286865234
    5. 'sys' → logprob: -7.731075286865234
    6. '
' → logprob: -8.981075286865234
    7. ' l' → logprob: -9.106075286865234
    8. 'staticmethod' → logprob: -9.231075286865234
    9. 'cache' → logprob: -9.231075286865234
    10. ' functools' → logprob: -9.731075286865234

Token 583: ' start' (ID: 1604)
  Prédit: '_pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.19174009561538696
    2. '_token' → logprob: -2.191740036010742
    3. 'pos' → logprob: -3.191740036010742
    4. '_' → logprob: -4.191740036010742
    5. 'def' → logprob: -6.566740036010742
    6. '_position' → logprob: -6.566740036010742
    7. 'token' → logprob: -6.691740036010742
    8. '_parser' → logprob: -8.316740036010742
    9. '_tokens' → logprob: -8.316740036010742
    10. '_indent' → logprob: -8.691740036010742

Token 584: ' position' (ID: 4010)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.334639072418213
    2. '_' → logprob: -1.459639072418213
    3. '_token' → logprob: -1.584639072418213
    4. ',' → logprob: -2.209639072418213
    5. ' =' → logprob: -3.209639072418213
    6. ')' → logprob: -3.334639072418213
    7. '=' → logprob: -3.709639072418213
    8. '_pos' → logprob: -3.709639072418213
    9. ' def' → logprob: -4.709639072418213
    10. '_index' → logprob: -5.209639072418213

Token 585: '.
' (ID: 558)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0000107288360596
    2. '   ' → logprob: -1.2500107288360596
    3. 'def' → logprob: -1.3750107288360596
    4. '       ' → logprob: -2.8750107288360596
    5. ':' → logprob: -3.8750107288360596
    6. '    
' → logprob: -5.7500104904174805
    7. ',' → logprob: -6.2500104904174805
    8. '<|end|>' → logprob: -6.3750104904174805
    9. '        
' → logprob: -6.3750104904174805
    10. '    ' → logprob: -6.6250104904174805

Token 586: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5935918092727661
    2. 'def' → logprob: -1.5935918092727661
    3. '
' → logprob: -1.7185918092727661
    4. '       ' → logprob: -3.2185916900634766
    5. '    
' → logprob: -4.093591690063477
    6. '        
' → logprob: -5.593591690063477
    7. ' 
' → logprob: -6.968591690063477
    8. 'import' → logprob: -7.218591690063477
    9. '    ' → logprob: -7.468591690063477
    10. '\' → logprob: -8.218591690063477

Token 587: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.38430309295654297
    2. '       ' → logprob: -1.759303092956543
    3. '
' → logprob: -2.134303092956543
    4. '   ' → logprob: -4.384303092956543
    5. '        
' → logprob: -4.759303092956543
    6. 'class' → logprob: -5.634303092956543
    7. '    
' → logprob: -6.134303092956543
    8. ' def' → logprob: -7.509303092956543
    9. '	def' → logprob: -8.134303092956543
    10. '    ' → logprob: -8.884303092956543

Token 588: ' Global' (ID: 11459)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1545635312795639
    2. '       ' → logprob: -2.5295634269714355
    3. '
' → logprob: -3.2795634269714355
    4. '   ' → logprob: -3.7795634269714355
    5. 'class' → logprob: -6.2795634269714355
    6. '    
' → logprob: -7.9045634269714355
    7. '        
' → logprob: -8.029563903808594
    8. ' def' → logprob: -8.529563903808594
    9. 'indent' → logprob: -9.654563903808594
    10. 'import' → logprob: -10.029563903808594

Token 589: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.5920712351799011
    2. ' pos' → logprob: -1.217071294784546
    3. ' nodes' → logprob: -3.342071294784546
    4. '_nodes' → logprob: -3.467071294784546
    5. 'nodes' → logprob: -3.592071294784546
    6. ' node' → logprob: -4.467071056365967
    7. '_' → logprob: -4.717071056365967
    8. ' s' → logprob: -5.092071056365967
    9. '_pos' → logprob: -5.092071056365967
    10. 'node' → logprob: -5.217071056365967

Token 590: ' pointer' (ID: 16233)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20765002071857452
    2. ' =' → logprob: -1.707650065422058
    3. '+=' → logprob: -6.082650184631348
    4. ' +=' → logprob: -6.582650184631348
    5. ',' → logprob: -6.832650184631348
    6. '<|end|>' → logprob: -6.957650184631348
    7. '<|end|>' → logprob: -8.582650184631348
    8. '_' → logprob: -9.582650184631348
    9. ')' → logprob: -9.832650184631348
    10. '+' → logprob: -9.957650184631348

Token 591: ' to' (ID: 316)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9980081915855408
    2. '
' → logprob: -1.1230082511901855
    3. 'def' → logprob: -1.7480082511901855
    4. '   ' → logprob: -2.7480082511901855
    5. '=' → logprob: -4.2480082511901855
    6. '<|end|>' → logprob: -4.3730082511901855
    7. ':
' → logprob: -4.4980082511901855
    8. '       ' → logprob: -5.4980082511901855
    9. ',' → logprob: -5.6230082511901855
    10. '    
' → logprob: -5.7480082511901855

Token 592: ' parse' (ID: 8420)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0767755508422852
    2. 'pos' → logprob: -1.7017755508422852
    3. 'parse' → logprob: -1.8267755508422852
    4. 'None' → logprob: -2.701775550842285
    5. 's' → logprob: -2.826775550842285
    6. 'def' → logprob: -3.201775550842285
    7. 'continue' → logprob: -3.201775550842285
    8. 'advance' → logprob: -4.326775550842285
    9. '...' → logprob: -4.451775550842285
    10. 'pass' → logprob: -4.576775550842285

Token 593: ' s' (ID: 265)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5913791656494141
    2. ' =' → logprob: -1.466379165649414
    3. '=' → logprob: -1.966379165649414
    4. '   ' → logprob: -3.841379165649414
    5. ':' → logprob: -4.091379165649414
    6. '
' → logprob: -4.841379165649414
    7. ' def' → logprob: -4.966379165649414
    8. ' ' → logprob: -5.091379165649414
    9. '_' → logprob: -5.341379165649414
    10. ')' → logprob: -6.466379165649414

Token 594: '.

' (ID: 364)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0147556066513062
    2. '   ' → logprob: -1.0147556066513062
    3. '
' → logprob: -2.5147557258605957
    4. 'def' → logprob: -2.5147557258605957
    5. '       ' → logprob: -3.5147557258605957
    6. '<|end|>' → logprob: -3.5147557258605957
    7. '<|end|>' → logprob: -4.389755725860596
    8. '    
' → logprob: -4.764755725860596
    9. '=' → logprob: -5.264755725860596
    10. ',' → logprob: -5.514755725860596

Token 595: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5724663734436035
    2. 'def' → logprob: -1.0724663734436035
    3. '        
' → logprob: -3.4474663734436035
    4. '
' → logprob: -3.5724663734436035
    5. '   ' → logprob: -4.5724663734436035
    6. 'class' → logprob: -4.8224663734436035
    7. '<|end|>' → logprob: -4.8224663734436035
    8. '    
' → logprob: -6.1974663734436035
    9. '```' → logprob: -6.6974663734436035
    10. 'import' → logprob: -6.9474663734436035

Token 596: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.16387847065925598
    2. '   ' → logprob: -2.6638784408569336
    3. 'class' → logprob: -2.7888784408569336
    4. '       ' → logprob: -4.163878440856934
    5. '
' → logprob: -5.538878440856934
    6. '    
' → logprob: -8.663878440856934
    7. '        
' → logprob: -8.788878440856934
    8. 'pos' → logprob: -10.538878440856934
    9. 'import' → logprob: -10.663878440856934
    10. 'tokens' → logprob: -10.788878440856934

Token 597: ' We' (ID: 1416)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.12608440220355988
    2. 'class' → logprob: -2.376084327697754
    3. '   ' → logprob: -3.751084327697754
    4. '       ' → logprob: -7.001084327697754
    5. '
' → logprob: -7.376084327697754
    6. 'pos' → logprob: -8.251084327697754
    7. 'tokens' → logprob: -9.001084327697754
    8. 'stack' → logprob: -10.126084327697754
    9. '#' → logprob: -10.876084327697754
    10. 'indent' → logprob: -11.001084327697754

Token 598: ' will' (ID: 738)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2642163038253784
    2. ' =' → logprob: -1.6392163038253784
    3. '=' → logprob: -3.889216423034668
    4. ' def' → logprob: -4.264216423034668
    5. ' will' → logprob: -6.514216423034668
    6. ' define' → logprob: -7.264216423034668
    7. 'define' → logprob: -7.889216423034668
    8. '   ' → logprob: -8.889216423034668
    9. 'class' → logprob: -8.889216423034668
    10. ' need' → logprob: -9.264216423034668

Token 599: ' use' (ID: 1199)
  Prédit: 'define'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'define' → logprob: -0.3955141007900238
    2. ' define' → logprob: -1.6455141305923462
    3. 'def' → logprob: -2.1455140113830566
    4. '   ' → logprob: -4.145514011383057
    5. ' implement' → logprob: -9.020514488220215
    6. ' def' → logprob: -9.145514488220215
    7. 'indent' → logprob: -9.145514488220215
    8. 'continue' → logprob: -9.395514488220215
    9. 'class' → logprob: -9.770514488220215
    10. '    ' → logprob: -9.770514488220215

Token 600: ' a' (ID: 261)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0013223844580352306
    2. 'class' → logprob: -7.501322269439697
    3. ' def' → logprob: -7.876322269439697
    4. '   ' → logprob: -8.626322746276855
    5. 'pos' → logprob: -9.251322746276855
    6. 'import' → logprob: -9.876322746276855
    7. '
' → logprob: -11.251322746276855
    8. 'tokens' → logprob: -11.376322746276855
    9. 'stack' → logprob: -11.626322746276855
    10. 'from' → logprob: -12.126322746276855

Token 601: ' class' (ID: 744)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0811365395784378
    2. 'class' → logprob: -2.706136465072632
    3. 'pos' → logprob: -5.456136703491211
    4. 'stack' → logprob: -6.206136703491211
    5. ' def' → logprob: -6.331136703491211
    6. '
' → logprob: -6.706136703491211
    7. ' class' → logprob: -6.831136703491211
    8. '   ' → logprob: -8.206136703491211
    9. 'global' → logprob: -9.706136703491211
    10. 'tokens' → logprob: -10.581136703491211

Token 602: ' to' (ID: 316)
  Prédit: ' Parser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Parser' → logprob: -0.28747063875198364
    2. ' class' → logprob: -1.6624705791473389
    3. ' Token' → logprob: -3.662470579147339
    4. 'class' → logprob: -4.037470817565918
    5. 'Parser' → logprob: -4.537470817565918
    6. '
' → logprob: -6.662470817565918
    7. ' 
' → logprob: -6.912470817565918
    8. ' parser' → logprob: -7.537470817565918
    9. ' Parse' → logprob: -7.662470817565918
    10. 'Tokenizer' → logprob: -7.912470817565918

Token 603: ' represent' (ID: 5188)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.010459676384925842
    2. 'define' → logprob: -4.760459899902344
    3. ' class' → logprob: -7.260459899902344
    4. '   ' → logprob: -7.510459899902344
    5. ' define' → logprob: -7.885459899902344
    6. 'parse' → logprob: -9.260459899902344
    7. ' implement' → logprob: -10.385459899902344
    8. 'implement' → logprob: -10.510459899902344
    9. 'continue' → logprob: -11.010459899902344
    10. 'store' → logprob: -12.010459899902344

Token 604: ' the' (ID: 290)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.050110239535570145
    2. ' class' → logprob: -3.800110340118408
    3. 'Parser' → logprob: -3.800110340118408
    4. 'Node' → logprob: -6.175110340118408
    5. ' Parser' → logprob: -6.800110340118408
    6. 'Token' → logprob: -7.550110340118408
    7. ' the' → logprob: -8.92510986328125
    8. 'the' → logprob: -9.42510986328125
    9. ' parser' → logprob: -10.30010986328125
    10. ' Node' → logprob: -10.42510986328125

Token 605: ' parser' (ID: 14216)
  Prédit: 'Parser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Parser' → logprob: -0.17298825085163116
    2. ' parser' → logprob: -2.547988176345825
    3. 'parser' → logprob: -3.297988176345825
    4. ' Parser' → logprob: -3.797988176345825
    5. 'Node' → logprob: -4.797988414764404
    6. 'class' → logprob: -5.047988414764404
    7. 'node' → logprob: -6.672988414764404
    8. 'next' → logprob: -6.922988414764404
    9. 'Token' → logprob: -7.172988414764404
    10. ' next' → logprob: -7.172988414764404

Token 606: ' state' (ID: 2608)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.1544388085603714
    2. ' class' → logprob: -2.4044387340545654
    3. '
' → logprob: -3.1544387340545654
    4. '   ' → logprob: -5.6544389724731445
    5. ':' → logprob: -5.7794389724731445
    6. ':
' → logprob: -6.7794389724731445
    7. ' 
' → logprob: -7.2794389724731445
    8. '```' → logprob: -7.5294389724731445
    9. '(
' → logprob: -8.279438972473145
    10. '(class' → logprob: -8.529438972473145

Token 607: '.

' (ID: 364)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.23967860639095306
    2. '
' → logprob: -2.3646786212921143
    3. ':' → logprob: -2.7396786212921143
    4. ' class' → logprob: -3.3646786212921143
    5. '   ' → logprob: -4.739678382873535
    6. ':
' → logprob: -4.864678382873535
    7. '```' → logprob: -6.864678382873535
    8. '(class' → logprob: -7.489678382873535
    9. ',' → logprob: -7.614678382873535
    10. '

' → logprob: -8.489678382873535

Token 608: '       ' (ID: 309)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.027863968163728714
    2. '
' → logprob: -3.9028639793395996
    3. ' class' → logprob: -5.6528639793396
    4. '   ' → logprob: -6.6528639793396
    5. '\n' → logprob: -6.7778639793396
    6. ' 
' → logprob: -7.5278639793396
    7. '```' → logprob: -8.402863502502441
    8. '    
' → logprob: -8.527863502502441
    9. '

' → logprob: -8.652863502502441
    10. '<class' → logprob: -9.777863502502441

Token 609: ' class' (ID: 744)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' (adapté à ' class') → logprob: -0.2162705361843109
    2. '
' → logprob: -1.7162705659866333
    3. ' class' → logprob: -4.341270446777344
    4. '   ' → logprob: -6.716270446777344
    5. '    
' → logprob: -8.216270446777344
    6. ' 
' → logprob: -9.341270446777344
    7. '	class' → logprob: -9.466270446777344
    8. '

' → logprob: -9.966270446777344
    9. '        
' → logprob: -11.091270446777344
    10. '<class' → logprob: -12.216270446777344

Token 610: ' Parser' (ID: 44901)
  Prédit: 'Parser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Parser' → logprob: -0.029752222821116447
    2. ' Parser' → logprob: -3.529752254486084
    3. '_parser' → logprob: -14.279751777648926
    4. ' parser' → logprob: -14.279751777648926
    5. '(Parser' → logprob: -15.529751777648926
    6. 'parser' → logprob: -15.779751777648926
    7. '.Parser' → logprob: -15.904751777648926
    8. 'Parse' → logprob: -17.654752731323242
    9. 'Solver' → logprob: -18.404752731323242
    10. '   ' → logprob: -19.404752731323242

Token 611: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02191086858510971
    2. ':
' → logprob: -4.396910667419434
    3. '(' → logprob: -4.896910667419434
    4. '(Parser' → logprob: -6.896910667419434
    5. '():' → logprob: -7.896910667419434
    6. '(object' → logprob: -8.021910667419434
    7. ' :' → logprob: -9.896910667419434
    8. '):' → logprob: -10.146910667419434
    9. '():
' → logprob: -11.396910667419434
    10. '(
' → logprob: -11.521910667419434

Token 612: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8171322345733643
    2. '       ' → logprob: -0.8171322345733643
    3. '	   ' → logprob: -3.1921322345733643
    4. '    
' → logprob: -3.5671322345733643
    5. '
' → logprob: -4.567131996154785
    6. '        
' → logprob: -4.567131996154785
    7. '    ' → logprob: -4.692131996154785
    8. '	       ' → logprob: -5.817131996154785
    9. ' 
' → logprob: -5.817131996154785
    10. '    	
' → logprob: -6.192131996154785

Token 613: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.20269766449928284
    2. '   ' → logprob: -2.07769775390625
    3. 'def' (adapté à ' def') → logprob: -3.45269775390625
    4. '	def' → logprob: -3.70269775390625
    5. '    ' → logprob: -7.45269775390625
    6. '       ' → logprob: -7.82769775390625
    7. '               ' → logprob: -7.95269775390625
    8. ' ' → logprob: -9.07769775390625
    9. ' __' → logprob: -9.20269775390625
    10. '    
' → logprob: -9.70269775390625

Token 614: ' __' (ID: 2516)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.006760129705071449
    2. '__' → logprob: -5.006760120391846
    3. '_init' → logprob: -10.631760597229004
    4. ' __' → logprob: -11.131760597229004
    5. ' init' → logprob: -12.381760597229004
    6. 'def' → logprob: -13.756760597229004
    7. ' ' → logprob: -15.256760597229004
    8. 'int' → logprob: -15.881760597229004
    9. '```' → logprob: -15.881760597229004
    10. '  ' → logprob: -16.756759643554688

Token 615: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: 0.0
    2. 'iter' → logprob: -17.625
    3. 'inite' → logprob: -18.5
    4. '__' → logprob: -18.625
    5. 'int' → logprob: -19.125
    6. ' init' → logprob: -19.25
    7. 'it' → logprob: -19.625
    8. 'def' → logprob: -20.0
    9. 'ini' → logprob: -20.25
    10. '(init' → logprob: -20.25

Token 616: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0838443711400032
    2. '__(' → logprob: -3.0838444232940674
    3. '(' → logprob: -3.8338444232940674
    4. ' (' → logprob: -4.583844184875488
    5. 'self' → logprob: -7.208844184875488
    6. '(Parser' → logprob: -7.208844184875488
    7. '__(
' → logprob: -8.083844184875488
    8. '__' → logprob: -8.583844184875488
    9. ',' → logprob: -8.958844184875488
    10. ' self' → logprob: -9.583844184875488

Token 617: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0008963356958702207
    2. 's' → logprob: -7.125896453857422
    3. ' self' → logprob: -10.000896453857422
    4. '(self' → logprob: -11.000896453857422
    5. '           ' → logprob: -11.250896453857422
    6. ')' → logprob: -11.500896453857422
    7. ',' → logprob: -13.250896453857422
    8. '   ' → logprob: -13.375896453857422
    9. ',self' → logprob: -14.125896453857422
    10. '       ' → logprob: -14.375896453857422

Token 618: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.029997505247592926
    2. ' ,' → logprob: -4.1549973487854
    3. '):' → logprob: -5.0299973487854
    4. '):
' → logprob: -6.2799973487854
    5. 's' → logprob: -6.2799973487854
    6. ' s' → logprob: -6.6549973487854
    7. ',s' → logprob: -7.7799973487854
    8. ' ' → logprob: -8.154997825622559
    9. '=' → logprob: -8.154997825622559
    10. 'self' → logprob: -8.404997825622559

Token 619: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.04316452145576477
    2. ' s' → logprob: -3.1681644916534424
    3. 'self' → logprob: -9.293164253234863
    4. '   ' → logprob: -10.793164253234863
    5. ' ' → logprob: -11.168164253234863
    6. 'pos' → logprob: -11.418164253234863
    7. ' self' → logprob: -11.668164253234863
    8. ')' → logprob: -12.543164253234863
    9. '	s' → logprob: -13.043164253234863
    10. '       ' → logprob: -13.293164253234863

Token 620: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.2973403334617615
    2. '):' → logprob: -1.7973403930664062
    3. ',' → logprob: -2.4223403930664062
    4. '           ' → logprob: -7.297340393066406
    5. ')' → logprob: -7.547340393066406
    6. '               ' → logprob: -7.797340393066406
    7. '       ' → logprob: -8.547340393066406
    8. '   ' → logprob: -8.672340393066406
    9. '):
' → logprob: -8.672340393066406
    10. '=' → logprob: -8.797340393066406

Token 621: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0004927450208924711
    2. '           ' → logprob: -8.750493049621582
    3. '       ' → logprob: -9.500493049621582
    4. '                   ' → logprob: -10.000493049621582
    5. '                ' → logprob: -10.125493049621582
    6. '<|end|>' → logprob: -10.875493049621582
    7. '                
' → logprob: -11.000493049621582
    8. '[' → logprob: -11.000493049621582
    9. '```' → logprob: -11.375493049621582
    10. 'self' → logprob: -11.375493049621582

Token 622: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.3271184265613556
    2. 's' → logprob: -1.3271183967590332
    3. ' self' → logprob: -5.077118396759033
    4. '               ' → logprob: -5.077118396759033
    5. ' s' → logprob: -6.702118396759033
    6. '                   ' → logprob: -10.327118873596191
    7. '   ' → logprob: -11.577118873596191
    8. '           ' → logprob: -12.077118873596191
    9. '       ' → logprob: -12.702118873596191
    10. '                ' → logprob: -12.952118873596191

Token 623: '.s' (ID: 640)
  Prédit: '.s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.s' → logprob: -0.46240267157554626
    2. 's' → logprob: -1.2124027013778687
    3. ' s' → logprob: -2.837402582168579
    4. 'pos' → logprob: -5.337402820587158
    5. '           ' → logprob: -6.087402820587158
    6. ' =' → logprob: -6.337402820587158
    7. '_s' → logprob: -6.587402820587158
    8. '=s' → logprob: -6.837402820587158
    9. '=' → logprob: -7.212402820587158
    10. 'text' → logprob: -7.462402820587158

Token 624: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10043763369321823
    2. ' =' → logprob: -2.350437641143799
    3. '=self' → logprob: -8.85043716430664
    4. '            ' → logprob: -10.72543716430664
    5. ',' → logprob: -11.10043716430664
    6. '                ' → logprob: -11.97543716430664
    7. '    ' → logprob: -11.97543716430664
    8. '           ' → logprob: -12.22543716430664
    9. '   ' → logprob: -12.47543716430664
    10. '=s' → logprob: -12.47543716430664

Token 625: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.012514126487076283
    2. ' s' → logprob: -4.387514114379883
    3. '                   ' → logprob: -13.137514114379883
    4. '   ' → logprob: -14.387514114379883
    5. '               ' → logprob: -14.387514114379883
    6. '           ' → logprob: -14.762514114379883
    7. '	s' → logprob: -15.887514114379883
    8. ' ' → logprob: -16.012514114379883
    9. '    ' → logprob: -16.137514114379883
    10. '                ' → logprob: -16.387514114379883

Token 626: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.05977742746472359
    2. '<|end|>' → logprob: -3.4347774982452393
    3. '
' → logprob: -4.68477725982666
    4. '       ' → logprob: -5.18477725982666
    5. '           ' → logprob: -5.93477725982666
    6. ' ' → logprob: -6.43477725982666
    7. '<|end|>' → logprob: -6.80977725982666
    8. '                
' → logprob: -7.05977725982666
    9. '        
' → logprob: -7.30977725982666
    10. '   ' → logprob: -7.68477725982666

Token 627: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.10063308477401733
    2. '           ' → logprob: -2.350633144378662
    3. '            
' → logprob: -8.975632667541504
    4. '       ' → logprob: -8.975632667541504
    5. '   ' → logprob: -9.350632667541504
    6. '
' → logprob: -10.600632667541504
    7. '                   ' → logprob: -10.975632667541504
    8. '```' → logprob: -11.725632667541504
    9. '                
' → logprob: -11.975632667541504
    10. '    
' → logprob: -12.100632667541504

Token 628: ' self' (ID: 1051)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3521672487258911
    2. 'self' (adapté à ' self') → logprob: -1.6021672487258911
    3. 'pos' → logprob: -2.3521671295166016
    4. 'def' → logprob: -10.102167129516602
    5. ' self' → logprob: -10.227167129516602
    6. 'n' → logprob: -10.227167129516602
    7. '                   ' → logprob: -10.227167129516602
    8. ' pos' → logprob: -10.977167129516602
    9. '0' → logprob: -11.227167129516602
    10. '           ' → logprob: -11.602167129516602

Token 629: '.n' (ID: 1835)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.049097783863544464
    2. 'len' → logprob: -4.174098014831543
    3. 'length' → logprob: -4.424098014831543
    4. '_len' → logprob: -4.924098014831543
    5. '.pos' → logprob: -5.049098014831543
    6. '_pos' → logprob: -5.799098014831543
    7. 'n' → logprob: -6.799098014831543
    8. '.length' → logprob: -6.924098014831543
    9. '.len' → logprob: -7.924098014831543
    10. '_length' → logprob: -8.299098014831543

Token 630: ' =' (ID: 314)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.3664901852607727
    2. ' =' → logprob: -2.241490125656128
    3. '           ' → logprob: -2.366490125656128
    4. 'ext' → logprob: -3.116490125656128
    5. '=' → logprob: -3.616490125656128
    6. '       ' → logprob: -4.491490364074707
    7. '_pos' → logprob: -4.741490364074707
    8. '   ' → logprob: -4.991490364074707
    9. 'um' → logprob: -5.366490364074707
    10. 'xt' → logprob: -6.491490364074707

Token 631: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.000611763505730778
    2. '               ' → logprob: -8.250611305236816
    3. 'length' → logprob: -8.500611305236816
    4. ' len' → logprob: -9.000611305236816
    5. '                   ' → logprob: -11.375611305236816
    6. '           ' → logprob: -12.000611305236816
    7. '   ' → logprob: -13.000611305236816
    8. '              ' → logprob: -13.750611305236816
    9. '0' → logprob: -14.375611305236816
    10. '(len' → logprob: -14.875611305236816

Token 632: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.06765087693929672
    2. 's' → logprob: -2.81765079498291
    3. '(self' → logprob: -5.31765079498291
    4. 'self' → logprob: -7.19265079498291
    5. ')' → logprob: -12.06765079498291
    6. '(' → logprob: -13.56765079498291
    7. '   ' → logprob: -13.81765079498291
    8. ' s' → logprob: -14.19265079498291
    9. ')s' → logprob: -14.19265079498291
    10. '_s' → logprob: -15.06765079498291

Token 633: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0016262639546766877
    2. '               ' → logprob: -6.751626491546631
    3. ')
' → logprob: -7.876626491546631
    4. '           ' → logprob: -9.751626014709473
    5. '       ' → logprob: -12.251626014709473
    6. '                   ' → logprob: -12.501626014709473
    7. '<|end|>' → logprob: -12.501626014709473
    8. '   ' → logprob: -13.626626014709473
    9. ' )' → logprob: -13.751626014709473
    10. '')' → logprob: -14.126626014709473

Token 634: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1741737425327301
    2. '       ' → logprob: -2.4241738319396973
    3. '           ' → logprob: -2.9241738319396973
    4. '        
' → logprob: -4.924173831939697
    5. '   ' → logprob: -5.799173831939697
    6. '            
' → logprob: -6.299173831939697
    7. '```' → logprob: -6.924173831939697
    8. '                
' → logprob: -7.049173831939697
    9. '<|end|>' → logprob: -7.049173831939697
    10. '    
' → logprob: -7.174173831939697

Token 635: ' self' (ID: 1051)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1421041190624237
    2. 'self' (adapté à ' self') → logprob: -2.267104148864746
    3. 'pos' → logprob: -3.642104148864746
    4. 'def' → logprob: -6.642104148864746
    5. '           ' → logprob: -7.267104148864746
    6. '                   ' → logprob: -8.142104148864746
    7. '       ' → logprob: -8.517104148864746
    8. '   ' → logprob: -9.767104148864746
    9. '	' → logprob: -10.767104148864746
    10. '			' → logprob: -10.892104148864746

Token 636: '.pos' (ID: 25321)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.011659766547381878
    2. '.pos' → logprob: -4.511659622192383
    3. '_pos' → logprob: -8.011659622192383
    4. ' pos' → logprob: -9.011659622192383
    5. 'def' → logprob: -9.261659622192383
    6. 's' → logprob: -11.386659622192383
    7. '.' → logprob: -11.511659622192383
    8. '=' → logprob: -11.886659622192383
    9. '   ' → logprob: -12.261659622192383
    10. '           ' → logprob: -12.636659622192383

Token 637: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.09406179934740067
    2. ' =' → logprob: -2.469061851501465
    3. '+=' → logprob: -5.969061851501465
    4. ' +=' → logprob: -6.719061851501465
    5. '<|end|>' → logprob: -6.969061851501465
    6. '+' → logprob: -9.219061851501465
    7. '<|end|>' → logprob: -9.344061851501465
    8. ')' → logprob: -9.719061851501465
    9. '           ' → logprob: -10.344061851501465
    10. '               ' → logprob: -10.469061851501465

Token 638: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.747814349073451e-05
    2. ' ' → logprob: -11.000017166137695
    3. '               ' → logprob: -14.750017166137695
    4. '           ' → logprob: -15.875017166137695
    5. '                   ' → logprob: -15.875017166137695
    6. '   ' → logprob: -17.250017166137695
    7. '                       ' → logprob: -19.500017166137695
    8. '             ' → logprob: -20.000017166137695
    9. '                ' → logprob: -20.125017166137695
    10. '                 ' → logprob: -20.125017166137695

Token 639: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.625003814697266
    3. '   ' → logprob: -17.625003814697266
    4. '           ' → logprob: -17.625003814697266
    5. '               ' → logprob: -19.625003814697266
    6. '       ' → logprob: -20.000003814697266
    7. '[' → logprob: -20.125003814697266
    8. '  ' → logprob: -20.375003814697266
    9. '                   ' → logprob: -20.500003814697266
    10. '         ' → logprob: -20.625003814697266

Token 640: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.29474613070487976
    2. '            
' → logprob: -1.4197461605072021
    3. '
' → logprob: -5.044745922088623
    4. '        
' → logprob: -5.544745922088623
    5. '<|end|>' → logprob: -6.919745922088623
    6. '    
' → logprob: -7.169745922088623
    7. '```' → logprob: -8.294746398925781
    8. '       ' → logprob: -8.419746398925781
    9. 'def' → logprob: -9.044746398925781
    10. '<|end|>' → logprob: -9.544746398925781

Token 641: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2817353904247284
    2. '<|end|>' → logprob: -2.031735420227051
    3. '            
' → logprob: -2.656735420227051
    4. '
' → logprob: -3.781735420227051
    5. '        
' → logprob: -5.031735420227051
    6. '<|end|>' → logprob: -5.656735420227051
    7. '    
' → logprob: -5.906735420227051
    8. '       ' → logprob: -6.031735420227051
    9. '```' → logprob: -6.281735420227051
    10. '               ' → logprob: -7.156735420227051

Token 642: ' self' (ID: 1051)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5556034445762634
    2. 'def' → logprob: -1.6806035041809082
    3. '            
' → logprob: -1.8056035041809082
    4. '
' → logprob: -2.680603504180908
    5. '        
' → logprob: -5.430603504180908
    6. '       ' → logprob: -7.180603504180908
    7. '    
' → logprob: -7.805603504180908
    8. '   ' → logprob: -7.930603504180908
    9. ' def' → logprob: -8.30560302734375
    10. ' 
' → logprob: -8.80560302734375

Token 643: '.nodes' (ID: 44152)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nodes' → logprob: -0.2623506486415863
    2. '.nodes' → logprob: -2.137350559234619
    3. '_nodes' → logprob: -3.012350559234619
    4. 'tokens' → logprob: -3.762350559234619
    5. 'stack' → logprob: -4.012350559234619
    6. ' nodes' → logprob: -5.512350559234619
    7. '.stack' → logprob: -5.762350559234619
    8. '.tokens' → logprob: -5.762350559234619
    9. 'def' → logprob: -6.012350559234619
    10. '   ' → logprob: -6.387350559234619

Token 644: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.17980806529521942
    2. ' =' → logprob: -1.8048080205917358
    3. '=[]' → logprob: -9.929807662963867
    4. '   ' → logprob: -12.429807662963867
    5. ')' → logprob: -12.804807662963867
    6. ':' → logprob: -13.179807662963867
    7. '={}' → logprob: -14.179807662963867
    8. ' ' → logprob: -14.429807662963867
    9. '           ' → logprob: -14.679807662963867
    10. ',' → logprob: -14.804807662963867

Token 645: ' []' (ID: 6126)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -3.1186566047836095e-05
    2. '[]
' → logprob: -10.750031471252441
    3. ' []' → logprob: -12.500031471252441
    4. '{}' → logprob: -12.750031471252441
    5. '[]}' → logprob: -13.000031471252441
    6. '[]

' → logprob: -14.625031471252441
    7. '[' → logprob: -15.000031471252441
    8. '[],' → logprob: -17.125030517578125
    9. '[]"' → logprob: -17.375030517578125
    10. '[])' → logprob: -17.750030517578125

Token 646: ' ' (ID: 220)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07337489724159241
    2. '            
' → logprob: -2.8233749866485596
    3. '<|end|>' → logprob: -5.0733747482299805
    4. '
' → logprob: -5.9483747482299805
    5. '        
' → logprob: -7.5733747482299805
    6. '       ' → logprob: -7.8233747482299805
    7. '```' → logprob: -7.9483747482299805
    8. '    
' → logprob: -7.9483747482299805
    9. '<|end|>' → logprob: -8.69837474822998
    10. '               ' → logprob: -9.07337474822998

Token 647: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3659440577030182
    2. '            
' → logprob: -1.8659440279006958
    3. '
' → logprob: -2.4909441471099854
    4. 'def' → logprob: -3.1159441471099854
    5. '               ' → logprob: -5.240943908691406
    6. '        
' → logprob: -5.490943908691406
    7. '       ' → logprob: -5.490943908691406
    8. '    
' → logprob: -6.115943908691406
    9. '<|end|>' → logprob: -6.240943908691406
    10. '   ' → logprob: -6.365943908691406

Token 648: ' tuples' (ID: 112464)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.44335880875587463
    2. '[]
' → logprob: -2.193358898162842
    3. ' []' → logprob: -2.943358898162842
    4. '               ' → logprob: -3.068358898162842
    5. '           ' → logprob: -3.193358898162842
    6. '()' → logprob: -3.318358898162842
    7. 'tokens' → logprob: -4.068358898162842
    8. ' (' → logprob: -4.568358898162842
    9. 'def' → logprob: -5.068358898162842
    10. '[' → logprob: -5.193358898162842

Token 649: ':' (ID: 25)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -1.1205363273620605
    2. ' (' → logprob: -1.6205363273620605
    3. '           ' → logprob: -1.7455363273620605
    4. '(self' → logprob: -2.1205363273620605
    5. ':' → logprob: -2.7455363273620605
    6. '(' → logprob: -3.4955363273620605
    7. '=' → logprob: -3.9955363273620605
    8. ' =' → logprob: -3.9955363273620605
    9. ')' → logprob: -4.4955363273620605
    10. '          ' → logprob: -4.9955363273620605

Token 650: ' (' (ID: 350)
  Prédit: '(start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(start' → logprob: -0.2950766086578369
    2. '(self' → logprob: -1.420076608657837
    3. ' (' → logprob: -5.170076370239258
    4. '(' → logprob: -5.795076370239258
    5. '(pos' → logprob: -6.420076370239258
    6. '(l' → logprob: -7.045076370239258
    7. '('' → logprob: -7.295076370239258
    8. '               ' → logprob: -7.295076370239258
    9. '(value' → logprob: -8.545076370239258
    10. '(int' → logprob: -8.920076370239258

Token 651: 'start' (ID: 5236)
  Prédit: 'start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.09045306593179703
    2. 'self' → logprob: -2.4654531478881836
    3. ' start' → logprob: -6.965453147888184
    4. '(start' → logprob: -8.465453147888184
    5. ' self' → logprob: -8.840453147888184
    6. 'l' → logprob: -9.590453147888184
    7. 'int' → logprob: -9.965453147888184
    8. '(self' → logprob: -10.090453147888184
    9. ')' → logprob: -11.215453147888184
    10. '(' → logprob: -11.590453147888184

Token 652: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00045914790825918317
    2. '_,' → logprob: -8.750458717346191
    3. ' ,' → logprob: -9.125458717346191
    4. ',int' → logprob: -9.625458717346191
    5. '_index' → logprob: -10.500458717346191
    6. '_idx' → logprob: -10.875458717346191
    7. '_pos' → logprob: -11.375458717346191
    8. ',
' → logprob: -11.500458717346191
    9. ')' → logprob: -11.625458717346191
    10. '‌,' → logprob: -12.125458717346191

Token 653: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.006715728435665369
    2. ' end' → logprob: -5.006715774536133
    3. ''end' → logprob: -16.381715774536133
    4. ',end' → logprob: -16.506715774536133
    5. 'value' → logprob: -16.881715774536133
    6. '=end' → logprob: -17.131715774536133
    7. '   ' → logprob: -18.256715774536133
    8. '_end' → logprob: -18.256715774536133
    9. '>end' → logprob: -18.506715774536133
    10. '	end' → logprob: -19.006715774536133

Token 654: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02331559546291828
    2. ')' → logprob: -3.773315668106079
    3. '),' → logprob: -10.5233154296875
    4. ' ,' → logprob: -10.6483154296875
    5. ',
' → logprob: -12.2733154296875
    6. '           ' → logprob: -12.8983154296875
    7. '```' → logprob: -13.1483154296875
    8. 'token' → logprob: -13.5233154296875
    9. '_,' → logprob: -13.8983154296875
    10. '   ' → logprob: -14.0233154296875

Token 655: ' value' (ID: 1432)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.0015118853189051151
    2. ' value' → logprob: -6.501512050628662
    3. 'val' → logprob: -12.001511573791504
    4. ''value' → logprob: -13.126511573791504
    5. '"value' → logprob: -14.126511573791504
    6. '           ' → logprob: -15.501511573791504
    7. ')value' → logprob: -16.37651252746582
    8. '   ' → logprob: -16.50151252746582
    9. ' ' → logprob: -16.62651252746582
    10. 'int' → logprob: -16.75151252746582

Token 656: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003277887124568224
    2. ',' → logprob: -5.753277778625488
    3. '           ' → logprob: -10.378277778625488
    4. ')
' → logprob: -10.503277778625488
    5. '),' → logprob: -10.878277778625488
    6. ',)' → logprob: -12.003277778625488
    7. '```' → logprob: -12.753277778625488
    8. ' )' → logprob: -12.753277778625488
    9. '[' → logprob: -13.378277778625488
    10. '               ' → logprob: -13.378277778625488

Token 657: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0032164494041353464
    2. '            
' → logprob: -6.00321626663208
    3. '		' → logprob: -8.378216743469238
    4. '```' → logprob: -8.628216743469238
    5. '        
' → logprob: -10.128216743469238
    6. '   ' → logprob: -10.128216743469238
    7. '
' → logprob: -10.128216743469238
    8. '       ' → logprob: -10.253216743469238
    9. '	       ' → logprob: -10.378216743469238
    10. '    
' → logprob: -10.378216743469238

Token 658: ' def' (ID: 1056)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2566626965999603
    2. 'def' (adapté à ' def') → logprob: -1.5066627264022827
    3. '   ' → logprob: -5.881662845611572
    4. '       ' → logprob: -6.756662845611572
    5. ' def' → logprob: -7.381662845611572
    6. '            
' → logprob: -9.131662368774414
    7. '               ' → logprob: -11.881662368774414
    8. '
' → logprob: -12.006662368774414
    9. '        
' → logprob: -12.006662368774414
    10. '	def' → logprob: -12.006662368774414

Token 659: ' parse' (ID: 8420)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.09149990230798721
    2. 'eat' → logprob: -3.0914998054504395
    3. 'error' → logprob: -3.9664998054504395
    4. 'consume' → logprob: -4.8414998054504395
    5. 'peek' → logprob: -5.2164998054504395
    6. 'next' → logprob: -5.4664998054504395
    7. 'e' → logprob: -6.7164998054504395
    8. 'F' → logprob: -6.9664998054504395
    9. 'factor' → logprob: -7.2164998054504395
    10. 'skip' → logprob: -7.5914998054504395

Token 660: '_E' (ID: 6584)
  Prédit: '_F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_F' → logprob: -0.3646330237388611
    2. 'E' → logprob: -2.114633083343506
    3. 'F' → logprob: -2.364633083343506
    4. '_E' → logprob: -3.239633083343506
    5. '_T' → logprob: -4.114633083343506
    6. '_factor' → logprob: -4.114633083343506
    7. 'T' → logprob: -4.864633083343506
    8. '(self' → logprob: -5.489633083343506
    9. '_expression' → logprob: -6.364633083343506
    10. '_expr' → logprob: -6.489633083343506

Token 661: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7280499339103699
    2. '(self' → logprob: -0.7280499339103699
    3. '_' → logprob: -4.7280497550964355
    4. ':' → logprob: -4.9780497550964355
    5. '():' → logprob: -5.7280497550964355
    6. '[' → logprob: -6.2280497550964355
    7. '   ' → logprob: -6.2280497550964355
    8. '(
' → logprob: -6.4780497550964355
    9. '_token' → logprob: -6.4780497550964355
    10. '       ' → logprob: -6.9780497550964355

Token 662: '):
' (ID: 1883)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.5469281077384949
    2. '):' → logprob: -1.0469281673431396
    3. '):
' → logprob: -2.9219281673431396
    4. '():' → logprob: -5.4219279289245605
    5. 'self' → logprob: -5.6719279289245605
    6. '(' → logprob: -5.9219279289245605
    7. '   ' → logprob: -6.6719279289245605
    8. ')' → logprob: -6.7969279289245605
    9. '_token' → logprob: -7.4219279289245605
    10. ':' → logprob: -7.5469279289245605

Token 663: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.10353648662567139
    2. '       ' → logprob: -2.478536605834961
    3. ' 
' → logprob: -5.853536605834961
    4. '           ' → logprob: -6.353536605834961
    5. '                ' → logprob: -6.603536605834961
    6. '        ' → logprob: -6.603536605834961
    7. '        
' → logprob: -7.103536605834961
    8. ':' → logprob: -7.353536605834961
    9. '  
' → logprob: -7.478536605834961
    10. '    
' → logprob: -7.478536605834961

Token 664: ' start' (ID: 1604)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6348331570625305
    2. 'start' (adapté à ' start') → logprob: -1.5098330974578857
    3. 'val' → logprob: -2.3848330974578857
    4. 'value' → logprob: -3.5098330974578857
    5. '                   ' → logprob: -3.6348330974578857
    6. 'c' → logprob: -3.8848330974578857
    7. 'self' → logprob: -3.8848330974578857
    8. 'v' → logprob: -4.259833335876465
    9. '       ' → logprob: -4.634833335876465
    10. 'return' → logprob: -4.759833335876465

Token 665: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5210228562355042
    2. '<|end|>' → logprob: -1.6460227966308594
    3. ' =' → logprob: -2.3960227966308594
    4. '<|end|>' → logprob: -3.2710227966308594
    5. ':' → logprob: -3.7710227966308594
    6. ',' → logprob: -4.271022796630859
    7. '_token' → logprob: -4.271022796630859
    8. ')' → logprob: -4.396022796630859
    9. '_tokens' → logprob: -5.521022796630859
    10. 'token' → logprob: -5.896022796630859

Token 666: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -6.8497312895488e-05
    2. ' self' → logprob: -10.250068664550781
    3. '               ' → logprob: -10.375068664550781
    4. '                   ' → logprob: -13.375068664550781
    5. '           ' → logprob: -15.875068664550781
    6. '
' → logprob: -17.50006866455078
    7. '              ' → logprob: -17.62506866455078
    8. '   ' → logprob: -17.75006866455078
    9. '                 ' → logprob: -17.75006866455078
    10. '             ' → logprob: -18.37506866455078

Token 667: '.pos' (ID: 25321)
  Prédit: '.pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pos' → logprob: -0.0009720868547447026
    2. 'pos' → logprob: -7.000972270965576
    3. '               ' → logprob: -10.875971794128418
    4. '           ' → logprob: -11.000971794128418
    5. '_pos' → logprob: -12.250971794128418
    6. '                   ' → logprob: -12.625971794128418
    7. '.' → logprob: -13.000971794128418
    8. '[pos' → logprob: -13.000971794128418
    9. 'self' → logprob: -13.125971794128418
    10. '.parse' → logprob: -13.125971794128418

Token 668: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04584195464849472
    2. '
' → logprob: -3.920841932296753
    3. 'token' → logprob: -4.670842170715332
    4. '           ' → logprob: -5.545842170715332
    5. '                
' → logprob: -5.920842170715332
    6. '                ' → logprob: -6.295842170715332
    7. '  
' → logprob: -6.920842170715332
    8. ',' → logprob: -7.170842170715332
    9. ':' → logprob: -7.670842170715332
    10. '              ' → logprob: -7.795842170715332

Token 669: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01092202216386795
    2. 'token' → logprob: -5.010921955108643
    3. '       ' → logprob: -6.760921955108643
    4. 't' → logprob: -7.635921955108643
    5. 'self' → logprob: -7.760921955108643
    6. 'c' → logprob: -8.0109224319458
    7. '           ' → logprob: -8.3859224319458
    8. '
' → logprob: -8.6359224319458
    9. '   ' → logprob: -8.7609224319458
    10. 'while' → logprob: -8.8859224319458

Token 670: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' (adapté à ' val') → logprob: -0.46197274327278137
    2. 'value' → logprob: -1.461972713470459
    3. 'v' → logprob: -2.961972713470459
    4. 'left' → logprob: -3.336972713470459
    5. 'res' → logprob: -3.461972713470459
    6. 'node' → logprob: -4.711972713470459
    7. '               ' → logprob: -5.461972713470459
    8. 'lhs' → logprob: -6.086972713470459
    9. 'result' → logprob: -6.211972713470459
    10. 'term' → logprob: -7.211972713470459

Token 671: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16212259232997894
    2. ' =' → logprob: -1.9121226072311401
    3. ',' → logprob: -6.66212272644043
    4. ')' → logprob: -8.41212272644043
    5. ' ' → logprob: -8.53712272644043
    6. '_' → logprob: -10.16212272644043
    7. '+' → logprob: -10.66212272644043
    8. ' ,' → logprob: -10.78712272644043
    9. '[' → logprob: -11.41212272644043
    10. '=
' → logprob: -11.66212272644043

Token 672: ' _' (ID: 1175)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -1.1011130809783936
    2. 'node' → logprob: -1.6011130809783936
    3. 'rest' → logprob: -2.7261130809783936
    4. 'nodes' → logprob: -3.1011130809783936
    5. 'self' → logprob: -3.3511130809783936
    6. 'sub' → logprob: -3.3511130809783936
    7. 'end' → logprob: -3.3511130809783936
    8. 'res' → logprob: -3.4761130809783936
    9. 'val' → logprob: -3.6011130809783936
    10. 'term' → logprob: -3.8511130809783936

Token 673: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00018280261429026723
    2. ' =' → logprob: -8.62518310546875
    3. ',' → logprob: -13.25018310546875
    4. '=
' → logprob: -14.62518310546875
    5. '=self' → logprob: -15.25018310546875
    6. ')' → logprob: -15.50018310546875
    7. '               ' → logprob: -15.75018310546875
    8. ')=' → logprob: -16.50018310546875
    9. '                   ' → logprob: -17.12518310546875
    10. '<|end|>' → logprob: -17.12518310546875

Token 674: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00024013224174268544
    2. ' self' → logprob: -8.875240325927734
    3. '               ' → logprob: -9.250240325927734
    4. '                   ' → logprob: -13.125240325927734
    5. '(self' → logprob: -13.625240325927734
    6. '           ' → logprob: -15.000240325927734
    7. '
' → logprob: -16.000240325927734
    8. '                ' → logprob: -16.625240325927734
    9. '                 ' → logprob: -16.625240325927734
    10. '             ' → logprob: -16.750240325927734

Token 675: '.parse' (ID: 7259)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.0009598199394531548
    2. 'next' → logprob: -8.500959396362305
    3. '.parse' → logprob: -8.625959396362305
    4. 'factor' → logprob: -9.250959396362305
    5. 'consume' → logprob: -9.375959396362305
    6. 'call' → logprob: -9.875959396362305
    7. 'try' → logprob: -10.000959396362305
    8. 'F' → logprob: -10.000959396362305
    9. 'T' → logprob: -10.250959396362305
    10. 'term' → logprob: -10.500959396362305

Token 676: '_T' (ID: 2154)
  Prédit: '_T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_T' → logprob: -0.026382381096482277
    2. 'T' → logprob: -3.6513824462890625
    3. '_F' → logprob: -9.901382446289062
    4. 'F' → logprob: -11.526382446289062
    5. '_E' → logprob: -12.276382446289062
    6. '```' → logprob: -12.401382446289062
    7. '_' → logprob: -12.776382446289062
    8. '	T' → logprob: -12.901382446289062
    9. 'E' → logprob: -13.901382446289062
    10. '`' → logprob: -14.026382446289062

Token 677: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03988410532474518
    2. '()
' → logprob: -3.414884090423584
    3. '               ' → logprob: -5.164884090423584
    4. '       ' → logprob: -8.539884567260742
    5. '           ' → logprob: -8.789884567260742
    6. ' ()' → logprob: -10.664884567260742
    7. 'return' → logprob: -10.914884567260742
    8. '();' → logprob: -11.039884567260742
    9. '
' → logprob: -11.539884567260742
    10. '                ' → logprob: -11.914884567260742

Token 678: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0008048642775975168
    2. 'while' → logprob: -7.875804901123047
    3. '       ' → logprob: -8.375804901123047
    4. '
' → logprob: -10.250804901123047
    5. ' while' → logprob: -10.250804901123047
    6. ',' → logprob: -10.500804901123047
    7. '<|end|>' → logprob: -10.750804901123047
    8. '```' → logprob: -11.000804901123047
    9. '           ' → logprob: -11.125804901123047
    10. '                
' → logprob: -11.250804901123047

Token 679: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.15613439679145813
    2. 'while' → logprob: -2.0311343669891357
    3. ' while' → logprob: -4.406134605407715
    4. '                
' → logprob: -8.406134605407715
    5. 'if' → logprob: -8.781134605407715
    6. '       ' → logprob: -8.781134605407715
    7. '
' → logprob: -8.906134605407715
    8. ',' → logprob: -9.281134605407715
    9. 'While' → logprob: -9.531134605407715
    10. '```' → logprob: -9.906134605407715

Token 680: ' repeat' (ID: 22962)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.1398097276687622
    2. ' while' → logprob: -2.1398096084594727
    3. '               ' → logprob: -5.139809608459473
    4. 'if' → logprob: -5.389809608459473
    5. 'result' → logprob: -7.389809608459473
    6. ' if' → logprob: -7.514809608459473
    7. 'val' → logprob: -8.139809608459473
    8. '           ' → logprob: -8.639809608459473
    9. 'res' → logprob: -8.764809608459473
    10. '
' → logprob: -9.139809608459473

Token 681: ' +' (ID: 659)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.49658122658729553
    2. 'while' → logprob: -1.2465811967849731
    3. '           ' → logprob: -2.7465813159942627
    4. '               ' → logprob: -3.3715813159942627
    5. '            ' → logprob: -6.496581077575684
    6. '                   ' → logprob: -7.371581077575684
    7. '       ' → logprob: -7.621581077575684
    8. ':
' → logprob: -7.746581077575684
    9. '()
' → logprob: -8.121581077575684
    10. '()' → logprob: -8.496581077575684

Token 682: ' T' (ID: 353)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.20545126497745514
    2. ' while' → logprob: -1.830451250076294
    3. '           ' → logprob: -4.330451488494873
    4. '               ' → logprob: -5.205451488494873
    5. '   ' → logprob: -6.705451488494873
    6. '()' → logprob: -6.830451488494873
    7. ':
' → logprob: -7.080451488494873
    8. '                   ' → logprob: -7.455451488494873
    9. '       ' → logprob: -8.080451011657715
    10. '()
' → logprob: -8.205451011657715

Token 683: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.5330027341842651
    2. '               ' → logprob: -1.4080027341842651
    3. ' while' → logprob: -1.9080027341842651
    4. '           ' → logprob: -4.033002853393555
    5. '
' → logprob: -7.158002853393555
    6. '                   ' → logprob: -7.533002853393555
    7. '                
' → logprob: -8.658002853393555
    8. '       ' → logprob: -8.783002853393555
    9. ',' → logprob: -8.908002853393555
    10. 'While' → logprob: -9.158002853393555

Token 684: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.016400780528783798
    2. ' while' → logprob: -5.1414008140563965
    3. '           ' → logprob: -5.6414008140563965
    4. 'while' → logprob: -5.6414008140563965
    5. '       ' → logprob: -6.6414008140563965
    6. '()
' → logprob: -7.1414008140563965
    7. '()' → logprob: -7.5164008140563965
    8. '                   ' → logprob: -8.641400337219238
    9. ':
' → logprob: -9.141400337219238
    10. ',' → logprob: -9.141400337219238

Token 685: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.14793439209461212
    2. '               ' → logprob: -2.1479344367980957
    3. ' while' → logprob: -3.8979344367980957
    4. '       ' → logprob: -7.897934436798096
    5. '           ' → logprob: -9.272933959960938
    6. '                   ' → logprob: -10.647933959960938
    7. '   ' → logprob: -12.897933959960938
    8. 'While' → logprob: -13.022933959960938
    9. '	while' → logprob: -13.022933959960938
    10. '
' → logprob: -13.272933959960938

Token 686: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.4744277894496918
    2. ' self' → logprob: -0.9744278192520142
    3. ' True' → logprob: -8.599428176879883
    4. 'True' → logprob: -9.349428176879883
    5. '   ' → logprob: -10.349428176879883
    6. ' ' → logprob: -10.349428176879883
    7. '	self' → logprob: -12.849428176879883
    8. '(self' → logprob: -12.849428176879883
    9. '  ' → logprob: -13.224428176879883
    10. ' ' → logprob: -13.224428176879883

Token 687: '.pos' (ID: 25321)
  Prédit: '.s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.s' → logprob: -0.6586318612098694
    2. '.pos' → logprob: -0.7836318612098694
    3. 'pos' → logprob: -3.9086318016052246
    4. '.peek' → logprob: -6.408631801605225
    5. '.' → logprob: -6.783631801605225
    6. 's' → logprob: -7.158631801605225
    7. '<' → logprob: -7.658631801605225
    8. 'self' → logprob: -8.033632278442383
    9. ' ' → logprob: -8.533632278442383
    10. ' .' → logprob: -8.658632278442383

Token 688: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.31465381383895874
    2. '<' → logprob: -1.3146538734436035
    3. '<len' → logprob: -6.8146538734436035
    4. ' ' → logprob: -8.814653396606445
    5. '[' → logprob: -10.814653396606445
    6. '+' → logprob: -11.064653396606445
    7. '<n' → logprob: -11.189653396606445
    8. '<char' → logprob: -11.314653396606445
    9. ' !=' → logprob: -11.689653396606445
    10. ' +' → logprob: -11.814653396606445

Token 689: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0038310715463012457
    2. ' self' → logprob: -5.628830909729004
    3. 'len' → logprob: -8.503830909729004
    4. '               ' → logprob: -10.628830909729004
    5. 'length' → logprob: -13.628830909729004
    6. ' len' → logprob: -13.753830909729004
    7. '                   ' → logprob: -14.253830909729004
    8. '           ' → logprob: -15.503830909729004
    9. '              ' → logprob: -15.753830909729004
    10. '
' → logprob: -15.753830909729004

Token 690: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -0.6428109407424927
    2. 'n' → logprob: -0.7678109407424927
    3. ' n' → logprob: -5.642810821533203
    4. 'len' → logprob: -5.767810821533203
    5. ' .' → logprob: -6.767810821533203
    6. '.' → logprob: -7.642810821533203
    7. 's' → logprob: -8.017810821533203
    8. '_n' → logprob: -8.142810821533203
    9. '.s' → logprob: -8.517810821533203
    10. '<n' → logprob: -8.517810821533203

Token 691: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.4740864336490631
    2. 'and' → logprob: -0.9740864038467407
    3. '           ' → logprob: -12.84908676147461
    4. '	and' → logprob: -13.09908676147461
    5. '               ' → logprob: -14.22408676147461
    6. '            ' → logprob: -14.34908676147461
    7. ':
' → logprob: -14.72408676147461
    8. '          ' → logprob: -14.84908676147461
    9. '                   ' → logprob: -14.97408676147461
    10. ' и' → logprob: -15.22408676147461

Token 692: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.029791342094540596
    2. ' self' → logprob: -3.5297913551330566
    3. '               ' → logprob: -11.154790878295898
    4. '           ' → logprob: -11.654790878295898
    5. '   ' → logprob: -12.404790878295898
    6. 's' → logprob: -12.529790878295898
    7. '(self' → logprob: -12.779790878295898
    8. '                   ' → logprob: -13.029790878295898
    9. ' ' → logprob: -13.154790878295898
    10. '
' → logprob: -14.404790878295898

Token 693: '.s' (ID: 640)
  Prédit: '.s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.s' → logprob: -6.277553620748222e-05
    2. '.' → logprob: -10.000062942504883
    3. ' .' → logprob: -11.750062942504883
    4. 's' → logprob: -12.750062942504883
    5. '   ' → logprob: -13.625062942504883
    6. ' ' → logprob: -14.250062942504883
    7. '```' → logprob: -14.250062942504883
    8. '.
' → logprob: -14.500062942504883
    9. '       ' → logprob: -15.000062942504883
    10. '           ' → logprob: -15.000062942504883

Token 694: '[self' (ID: 33734)
  Prédit: '[self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[self' → logprob: -0.00012689977302215993
    2. '[' → logprob: -9.625126838684082
    3. 'self' → logprob: -9.750126838684082
    4. ' self' → logprob: -13.500126838684082
    5. ' [' → logprob: -14.000126838684082
    6. '[
' → logprob: -15.750126838684082
    7. '(self' → logprob: -16.7501277923584
    8. '   ' → logprob: -17.1251277923584
    9. '
' → logprob: -17.7501277923584
    10. '```' → logprob: -17.7501277923584

Token 695: '.pos' (ID: 25321)
  Prédit: '[self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[self' → logprob: -0.20009547472000122
    2. '.pos' → logprob: -1.8250954151153564
    3. 'self' → logprob: -3.9500954151153564
    4. ' self' → logprob: -8.450095176696777
    5. '.self' → logprob: -8.825095176696777
    6. ':self' → logprob: -8.950095176696777
    7. ' .' → logprob: -9.200095176696777
    8. '   ' → logprob: -9.825095176696777
    9. '.' → logprob: -9.950095176696777
    10. '	self' → logprob: -10.075095176696777

Token 696: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.2819415032863617
    2. '==' → logprob: -1.406941533088684
    3. ']==' → logprob: -8.156941413879395
    4. '[' → logprob: -8.906941413879395
    5. '=='' → logprob: -9.406941413879395
    6. '=' → logprob: -9.406941413879395
    7. ']' → logprob: -9.781941413879395
    8. ')==' → logprob: -9.906941413879395
    9. '==
' → logprob: -10.656941413879395
    10. ')' → logprob: -10.906941413879395

Token 697: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.048938311636447906
    2. ' ==' → logprob: -3.048938274383545
    3. ']==' → logprob: -9.298938751220703
    4. '=='' → logprob: -9.298938751220703
    5. '[' → logprob: -9.548938751220703
    6. '==
' → logprob: -9.673938751220703
    7. '=' → logprob: -11.048938751220703
    8. '           ' → logprob: -12.298938751220703
    9. ')==' → logprob: -12.423938751220703
    10. '===' → logprob: -13.798938751220703

Token 698: ' '+' (ID: 30120)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.6933305263519287
    2. ''+' → logprob: -0.6933305263519287
    3. ' '+' → logprob: -9.068330764770508
    4. '"+"' → logprob: -10.693330764770508
    5. ' '' → logprob: -11.443330764770508
    6. '"' → logprob: -11.568330764770508
    7. ' '+'' → logprob: -11.693330764770508
    8. '"+' → logprob: -11.693330764770508
    9. ' ' → logprob: -12.943330764770508
    10. '+' → logprob: -13.193330764770508

Token 699: '':
' (ID: 7669)
  Prédit: '':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':
' → logprob: -0.6390496492385864
    2. '':' → logprob: -1.1390496492385864
    3. ''):
' → logprob: -2.514049530029297
    4. ' '' → logprob: -3.514049530029297
    5. ''' → logprob: -3.889049530029297
    6. ':
' → logprob: -5.389049530029297
    7. ''):' → logprob: -5.389049530029297
    8. ':' → logprob: -6.139049530029297
    9. '']:
' → logprob: -6.389049530029297
    10. '):
' → logprob: -6.389049530029297

Token 700: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.1646103411912918
    2. '               ' → logprob: -2.2896103858947754
    3. ':' → logprob: -3.9146103858947754
    4. ':
' → logprob: -3.9146103858947754
    5. '                       ' → logprob: -5.789610385894775
    6. '                           ' → logprob: -6.664610385894775
    7. '<|end|>' → logprob: -7.164610385894775
    8. ',' → logprob: -7.289610385894775
    9. '):
' → logprob: -7.414610385894775
    10. '           ' → logprob: -7.414610385894775

Token 701: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.014479381963610649
    2. '                   ' → logprob: -4.389479160308838
    3. ' self' → logprob: -6.264479160308838
    4. '                       ' → logprob: -10.389479637145996
    5. '   ' → logprob: -11.139479637145996
    6. '               ' → logprob: -12.014479637145996
    7. '
' → logprob: -12.389479637145996
    8. '	self' → logprob: -13.014479637145996
    9. '           ' → logprob: -13.764479637145996
    10. '       ' → logprob: -13.889479637145996

Token 702: '.pos' (ID: 25321)
  Prédit: '.pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pos' → logprob: -1.2948405128554441e-05
    2. 'pos' → logprob: -11.37501335144043
    3. '.' → logprob: -13.87501335144043
    4. ' .' → logprob: -15.62501335144043
    5. '           ' → logprob: -16.37501335144043
    6. ' pos' → logprob: -16.87501335144043
    7. 'self' → logprob: -17.12501335144043
    8. '	pos' → logprob: -17.25001335144043
    9. '_pos' → logprob: -17.50001335144043
    10. '   ' → logprob: -17.75001335144043

Token 703: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.048592709004879
    2. ' +=' → logprob: -3.0485928058624268
    3. ']+=' → logprob: -12.298592567443848
    4. '                   ' → logprob: -14.798592567443848
    5. '           ' → logprob: -16.048593521118164
    6. '   ' → logprob: -16.048593521118164
    7. '               ' → logprob: -17.173593521118164
    8. '+' → logprob: -18.048593521118164
    9. '+='' → logprob: -18.173593521118164
    10. '```' → logprob: -18.298593521118164

Token 704: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.4391956685576588e-05
    2. ' ' → logprob: -10.625024795532227
    3. '   ' → logprob: -19.125024795532227
    4. '
' → logprob: -21.875024795532227
    5. '１' → logprob: -22.500024795532227
    6. '  ' → logprob: -22.625024795532227
    7. '```' → logprob: -22.875024795532227
    8. '2' → logprob: -23.375024795532227
    9. '۱' → logprob: -24.125024795532227
    10. ' ' → logprob: -24.250024795532227

Token 705: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.375001907348633
    3. '   ' → logprob: -18.875001907348633
    4. '
' → logprob: -21.375001907348633
    5. '           ' → logprob: -22.375001907348633
    6. '```' → logprob: -22.375001907348633
    7. '１' → logprob: -22.750001907348633
    8. '  ' → logprob: -23.000001907348633
    9. '       ' → logprob: -23.250001907348633
    10. '2' → logprob: -23.375001907348633

Token 706: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.13595552742481232
    2. 'val' → logprob: -2.510955572128296
    3. '
' → logprob: -3.135955572128296
    4. '               ' → logprob: -6.635955333709717
    5. ' val' → logprob: -7.135955333709717
    6. '           ' → logprob: -9.010955810546875
    7. ',' → logprob: -9.760955810546875
    8. '                    
' → logprob: -9.760955810546875
    9. '                       ' → logprob: -10.385955810546875
    10. '
' → logprob: -11.135955810546875

Token 707: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.9287779331207275
    2. ' val' → logprob: -1.1787779331207275
    3. 'val' → logprob: -1.3037779331207275
    4. '
' → logprob: -4.428777694702148
    5. '               ' → logprob: -4.553777694702148
    6. ',' → logprob: -7.053777694702148
    7. '                    
' → logprob: -7.178777694702148
    8. ',val' → logprob: -8.178777694702148
    9. '           ' → logprob: -8.428777694702148
    10. ' 
' → logprob: -8.428777694702148

Token 708: ' val' (ID: 1459)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.4194808006286621
    2. 'v' → logprob: -2.294480800628662
    3. 'val' (adapté à ' val') → logprob: -2.294480800628662
    4. 'right' → logprob: -2.294480800628662
    5. 'rhs' → logprob: -3.919480800628662
    6. 'r' → logprob: -4.794480800628662
    7. 'tv' → logprob: -5.294480800628662
    8. 'next' → logprob: -5.794480800628662
    9. 'sub' → logprob: -6.919480800628662
    10. 'rv' → logprob: -7.919480800628662

Token 709: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.3583146333694458
    2. ',' → logprob: -2.1083145141601562
    3. '_t' → logprob: -2.6083145141601562
    4. '_rhs' → logprob: -3.3583145141601562
    5. 'T' → logprob: -4.108314514160156
    6. '_,' → logprob: -4.233314514160156
    7. '_next' → logprob: -4.483314514160156
    8. '_T' → logprob: -4.483314514160156
    9. '_right' → logprob: -4.858314514160156
    10. '_tmp' → logprob: -5.858314514160156

Token 710: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000496436667162925
    2. ' ,' → logprob: -8.125496864318848
    3. ',val' → logprob: -8.750496864318848
    4. '=' → logprob: -10.875496864318848
    5. ',_' → logprob: -12.000496864318848
    6. ' =' → logprob: -12.625496864318848
    7. ',v' → logprob: -12.875496864318848
    8. '_,' → logprob: -13.125496864318848
    9. ',value' → logprob: -13.875496864318848
    10. '   ' → logprob: -14.250496864318848

Token 711: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.07712050527334213
    2. ' _' → logprob: -3.577120542526245
    3. 'self' → logprob: -3.577120542526245
    4. ' self' → logprob: -5.327120304107666
    5. '_=' → logprob: -5.327120304107666
    6. ' =' → logprob: -5.827120304107666
    7. '(self' → logprob: -6.452120304107666
    8. '(' → logprob: -6.952120304107666
    9. '_self' → logprob: -7.452120304107666
    10. ' (' → logprob: -7.827120304107666

Token 712: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06196846812963486
    2. ' =' → logprob: -2.8119685649871826
    3. ')' → logprob: -15.436968803405762
    4. ' ' → logprob: -16.561967849731445
    5. ',' → logprob: -16.686967849731445
    6. '   ' → logprob: -16.811967849731445
    7. '                   ' → logprob: -16.936967849731445
    8. ')=' → logprob: -16.936967849731445
    9. '    ' → logprob: -17.061967849731445
    10. '               ' → logprob: -18.186967849731445

Token 713: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00018697108316700906
    2. ' self' → logprob: -8.750186920166016
    3. '                   ' → logprob: -10.500186920166016
    4. '(self' → logprob: -14.875186920166016
    5. '               ' → logprob: -15.375186920166016
    6. '           ' → logprob: -16.125186920166016
    7. '[self' → logprob: -16.250186920166016
    8. '                       ' → logprob: -16.875186920166016
    9. '                    ' → logprob: -17.375186920166016
    10. 'def' → logprob: -17.750186920166016

Token 714: '.parse' (ID: 7259)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.05490146577358246
    2. '.parse' → logprob: -2.929901361465454
    3. 'parser' → logprob: -12.054901123046875
    4. ' parse' → logprob: -12.179901123046875
    5. '.' → logprob: -13.179901123046875
    6. 'Parser' → logprob: -13.304901123046875
    7. '(parse' → logprob: -14.179901123046875
    8. '=parse' → logprob: -14.554901123046875
    9. '_parse' → logprob: -14.679901123046875
    10. 'def' → logprob: -14.804901123046875

Token 715: '_T' (ID: 2154)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.00016194197814911604
    2. '_T' → logprob: -8.750162124633789
    3. 'E' → logprob: -12.875162124633789
    4. ' T' → logprob: -14.375162124633789
    5. '   ' → logprob: -16.87516212463379
    6. '	T' → logprob: -17.00016212463379
    7. ' ' → logprob: -17.25016212463379
    8. '```' → logprob: -17.25016212463379
    9. 'Т' → logprob: -17.37516212463379
    10. '.T' → logprob: -17.62516212463379

Token 716: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0007146967691369355
    2. '()
' → logprob: -7.2507147789001465
    3. '                   ' → logprob: -13.875714302062988
    4. '<|end|>' → logprob: -14.125714302062988
    5. '();' → logprob: -14.375714302062988
    6. '()

' → logprob: -14.750714302062988
    7. '()`' → logprob: -15.000714302062988
    8. '())' → logprob: -15.000714302062988
    9. '()\' → logprob: -15.000714302062988
    10. '()]' → logprob: -15.875714302062988

Token 717: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.013810628093779087
    2. 'val' → logprob: -4.513810634613037
    3. '               ' → logprob: -6.763810634613037
    4. ' val' → logprob: -7.513810634613037
    5. '                       ' → logprob: -8.388810157775879
    6. '
' → logprob: -8.513810157775879
    7. '           ' → logprob: -8.513810157775879
    8. '                    
' → logprob: -8.763810157775879
    9. '```' → logprob: -9.638810157775879
    10. '                    ' → logprob: -10.138810157775879

Token 718: ' val' (ID: 1459)
  Prédit: ' val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.4383907616138458
    2. 'val' (adapté à ' val') → logprob: -1.0633907318115234
    3. '                   ' → logprob: -4.688390731811523
    4. '                       ' → logprob: -9.313390731811523
    5. '               ' → logprob: -9.438390731811523
    6. '	val' → logprob: -9.688390731811523
    7. ',val' → logprob: -10.063390731811523
    8. '                    ' → logprob: -10.313390731811523
    9. '
' → logprob: -10.313390731811523
    10. '_val' → logprob: -11.313390731811523

Token 719: ' +=' (ID: 2757)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.46777239441871643
    2. '+=' → logprob: -1.092772364616394
    3. ' +=' → logprob: -3.7177724838256836
    4. ' =' → logprob: -4.342772483825684
    5. '*=' → logprob: -6.967772483825684
    6. ' *=' → logprob: -9.967772483825684
    7. '   ' → logprob: -11.342772483825684
    8. '+' → logprob: -11.467772483825684
    9. ' ' → logprob: -12.467772483825684
    10. '```' → logprob: -12.967772483825684

Token 720: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.011047814972698689
    2. ' val' → logprob: -4.511047840118408
    3. '	val' → logprob: -17.38604736328125
    4. '(val' → logprob: -18.26104736328125
    5. '_val' → logprob: -18.38604736328125
    6. '[val' → logprob: -18.51104736328125
    7. ' ' → logprob: -19.01104736328125
    8. 'v' → logprob: -19.26104736328125
    9. '```' → logprob: -20.63604736328125
    10. ',val' → logprob: -20.88604736328125

Token 721: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0001483564410591498
    2. 'val' → logprob: -9.12514877319336
    3. '*' → logprob: -11.25014877319336
    4. ' ' → logprob: -11.87514877319336
    5. '+' → logprob: -12.87514877319336
    6. '[val' → logprob: -12.87514877319336
    7. ' +' → logprob: -13.25014877319336
    8. 'token' → logprob: -13.37514877319336
    9. '.' → logprob: -13.50014877319336
    10. ' val' → logprob: -13.87514877319336

Token 722: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 723: '               ' (ID: 506)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 724: ' end' (ID: 1268)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.16127237677574158
    2. 'self' → logprob: -2.5362722873687744
    3. '                   ' → logprob: -2.9112722873687744
    4. 'return' → logprob: -4.9112725257873535
    5. '           ' → logprob: -5.6612725257873535
    6. ' self' → logprob: -6.0362725257873535
    7. ' return' → logprob: -7.4112725257873535
    8. '
' → logprob: -8.536272048950195
    9. '<|end|>' → logprob: -8.911272048950195
    10. '	           ' → logprob: -9.161272048950195

Token 725: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2287997007369995
    2. ' =' → logprob: -1.6037997007369995
    3. ')' → logprob: -5.978799819946289
    4. '<|end|>' → logprob: -7.603799819946289
    5. '   ' → logprob: -9.603799819946289
    6. '<|end|>' → logprob: -9.853799819946289
    7. ':' → logprob: -9.978799819946289
    8. ']' → logprob: -10.228799819946289
    9. '           ' → logprob: -10.478799819946289
    10. '```' → logprob: -10.728799819946289

Token 726: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.014216629788279533
    2. ' self' → logprob: -4.264216423034668
    3. '               ' → logprob: -10.264216423034668
    4. '           ' → logprob: -11.014216423034668
    5. '                   ' → logprob: -13.764216423034668
    6. '(self' → logprob: -15.514216423034668
    7. ' ' → logprob: -15.639216423034668
    8. '
' → logprob: -16.264217376708984
    9. '   ' → logprob: -16.514217376708984
    10. '            ' → logprob: -16.889217376708984

Token 727: '.pos' (ID: 25321)
  Prédit: '.pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pos' → logprob: -0.0031791406217962503
    2. 'pos' → logprob: -5.75317907333374
    3. '.val' → logprob: -14.878179550170898
    4. '.' → logprob: -15.128179550170898
    5. ' pos' → logprob: -15.503179550170898
    6. '           ' → logprob: -16.1281795501709
    7. '	pos' → logprob: -16.2531795501709
    8. '[pos' → logprob: -16.3781795501709
    9. ' .' → logprob: -16.6281795501709
    10. '.position' → logprob: -16.7531795501709

Token 728: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.07056427747011185
    2. '
' → logprob: -3.4455642700195312
    3. '<|end|>' → logprob: -3.4455642700195312
    4. '           ' → logprob: -6.695564270019531
    5. '<|end|>' → logprob: -7.195564270019531
    6. '       ' → logprob: -7.320564270019531
    7. '                   ' → logprob: -8.070564270019531
    8. ' return' → logprob: -8.320564270019531
    9. 'return' → logprob: -8.445564270019531
    10. ',' → logprob: -8.570564270019531

Token 729: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0036697944160550833
    2. '       ' → logprob: -6.503669738769531
    3. '<|end|>' → logprob: -6.628669738769531
    4. '                   ' → logprob: -8.128669738769531
    5. '           ' → logprob: -8.753669738769531
    6. ' return' → logprob: -9.628669738769531
    7. '	           ' → logprob: -10.128669738769531
    8. 'return' → logprob: -10.503669738769531
    9. '```' → logprob: -10.628669738769531
    10. '                       ' → logprob: -10.753669738769531

Token 730: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.029833558946847916
    2. '               ' → logprob: -3.5298335552215576
    3. ' self' → logprob: -10.029833793640137
    4. '           ' → logprob: -10.654833793640137
    5. '       ' → logprob: -11.779833793640137
    6. 'return' → logprob: -12.529833793640137
    7. '                   ' → logprob: -13.404833793640137
    8. 'node' → logprob: -13.779833793640137
    9. '   ' → logprob: -14.404833793640137
    10. 'if' → logprob: -14.779833793640137

Token 731: '.nodes' (ID: 44152)
  Prédit: '.nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.nodes' → logprob: -0.0004068395064678043
    2. '.' → logprob: -8.250407218933105
    3. '           ' → logprob: -9.500407218933105
    4. 'nodes' → logprob: -11.000407218933105
    5. '       ' → logprob: -11.125407218933105
    6. '   ' → logprob: -12.000407218933105
    7. ' .' → logprob: -12.125407218933105
    8. '               ' → logprob: -12.250407218933105
    9. 'class' → logprob: -12.250407218933105
    10. '.s' → logprob: -12.500407218933105

Token 732: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00010139751975657418
    2. '.' → logprob: -9.250101089477539
    3. '.app' → logprob: -12.875101089477539
    4. 'append' → logprob: -14.375101089477539
    5. '.setdefault' → logprob: -14.375101089477539
    6. '.add' → logprob: -15.125101089477539
    7. '.Append' → logprob: -15.250101089477539
    8. ').' → logprob: -15.375101089477539
    9. ' .' → logprob: -15.625101089477539
    10. '_append' → logprob: -16.12510108947754

Token 733: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.08121810108423233
    2. '(' → logprob: -2.5812180042266846
    3. '(start' → logprob: -6.081218242645264
    4. ' (' → logprob: -10.706217765808105
    5. '(
' → logprob: -11.456217765808105
    6. '   ' → logprob: -12.206217765808105
    7. ' ((' → logprob: -14.456217765808105
    8. '(('' → logprob: -14.956217765808105
    9. '(end' → logprob: -15.206217765808105
    10. '[(' → logprob: -15.456217765808105

Token 734: 'start' (ID: 5236)
  Prédit: 'start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -1.676292231422849e-05
    2. ' start' → logprob: -11.000017166137695
    3. '(start' → logprob: -18.875017166137695
    4. '   ' → logprob: -20.875017166137695
    5. '[start' → logprob: -21.375017166137695
    6. ',start' → logprob: -22.000017166137695
    7. '           ' → logprob: -23.500017166137695
    8. '               ' → logprob: -23.625017166137695
    9. '	start' → logprob: -23.625017166137695
    10. ')' → logprob: -24.250017166137695

Token 735: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00016313401283696294
    2. ',
' → logprob: -9.125163078308105
    3. ' ,' → logprob: -10.500163078308105
    4. ',end' → logprob: -11.750163078308105
    5. '<|end|>' → logprob: -12.125163078308105
    6. ',",' → logprob: -13.500163078308105
    7. '   ' → logprob: -13.500163078308105
    8. '‌,' → logprob: -13.500163078308105
    9. '           ' → logprob: -13.750163078308105
    10. '               ' → logprob: -14.000163078308105

Token 736: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.0004306692280806601
    2. ' end' → logprob: -7.750430583953857
    3. '(end' → logprob: -20.875431060791016
    4. ',end' → logprob: -21.875431060791016
    5. '[end' → logprob: -22.500431060791016
    6. '	end' → logprob: -23.000431060791016
    7. '=end' → logprob: -23.875431060791016
    8. '   ' → logprob: -24.250431060791016
    9. ')' → logprob: -24.625431060791016
    10. '_end' → logprob: -24.750431060791016

Token 737: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.567575034452602e-05
    2. ')' → logprob: -10.50009536743164
    3. ',
' → logprob: -10.62509536743164
    4. '<|end|>' → logprob: -11.00009536743164
    5. ' ,' → logprob: -11.50009536743164
    6. ',value' → logprob: -13.12509536743164
    7. '‌,' → logprob: -13.25009536743164
    8. ',)' → logprob: -13.37509536743164
    9. ',val' → logprob: -13.62509536743164
    10. '),' → logprob: -13.87509536743164

Token 738: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.018150296062231064
    2. ' val' → logprob: -4.018150329589844
    3. '                   ' → logprob: -15.518150329589844
    4. '               ' → logprob: -16.268150329589844
    5. '[val' → logprob: -16.768150329589844
    6. '                ' → logprob: -17.268150329589844
    7. '	val' → logprob: -17.393150329589844
    8. ',val' → logprob: -17.518150329589844
    9. '                    ' → logprob: -18.143150329589844
    10. '(val' → logprob: -18.393150329589844

Token 739: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.048662420362234116
    2. '))' → logprob: -3.0486624240875244
    3. ')
' → logprob: -9.923662185668945
    4. '))
' → logprob: -10.673662185668945
    5. ')}' → logprob: -14.173662185668945
    6. ')))' → logprob: -14.548662185668945
    7. '),' → logprob: -15.548662185668945
    8. '           ' → logprob: -15.548662185668945
    9. ' )' → logprob: -15.798662185668945
    10. ')`' → logprob: -15.798662185668945

Token 740: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.445204257965088
    2. '       ' → logprob: -1.570204257965088
    3. '
' → logprob: -2.070204257965088
    4. '```' → logprob: -2.320204257965088
    5. '               ' → logprob: -2.445204257965088
    6. '<|end|>' → logprob: -2.570204257965088
    7. '        
' → logprob: -3.570204257965088
    8. '    
' → logprob: -3.695204257965088
    9. '  
' → logprob: -3.820204257965088
    10. '	' → logprob: -4.445204257965088

Token 741: ' return' (ID: 622)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.20495745539665222
    2. 'return' (adapté à ' return') → logprob: -1.7049574851989746
    3. ' return' → logprob: -6.704957485198975
    4. '           ' → logprob: -7.079957485198975
    5. '       ' → logprob: -7.454957485198975
    6. '                   ' → logprob: -7.704957485198975
    7. '	return' → logprob: -8.454957008361816
    8. '```' → logprob: -9.704957008361816
    9. '	           ' → logprob: -10.204957008361816
    10. '   ' → logprob: -10.329957008361816

Token 742: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.47435152530670166
    2. ' val' → logprob: -0.9743515253067017
    3. '(val' → logprob: -8.34935188293457
    4. ' (' → logprob: -10.34935188293457
    5. '(' → logprob: -12.59935188293457
    6. '[val' → logprob: -14.34935188293457
    7. ',val' → logprob: -14.72435188293457
    8. '	val' → logprob: -14.72435188293457
    9. '_val' → logprob: -14.84935188293457
    10. ' ' → logprob: -15.09935188293457

Token 743: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.055327121168375015
    2. '<|end|>' → logprob: -2.9303271770477295
    3. '<|end|>' → logprob: -8.555327415466309
    4. ' ,' → logprob: -9.180327415466309
    5. ',
' → logprob: -9.430327415466309
    6. '```' → logprob: -11.305327415466309
    7. ')' → logprob: -11.430327415466309
    8. ',None' → logprob: -11.555327415466309
    9. '...' → logprob: -11.680327415466309
    10. ',...' → logprob: -12.805327415466309

Token 744: ' (' (ID: 350)
  Prédit: '(start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(start' → logprob: -0.005816686898469925
    2. ' (' → logprob: -5.255816459655762
    3. '(end' → logprob: -8.005816459655762
    4. '(' → logprob: -8.380816459655762
    5. '[start' → logprob: -12.005816459655762
    6. '(stop' → logprob: -12.755816459655762
    7. '(None' → logprob: -12.755816459655762
    8. '((' → logprob: -13.005816459655762
    9. '   ' → logprob: -13.005816459655762
    10. ' ' → logprob: -13.630816459655762

Token 745: 'start' (ID: 5236)
  Prédit: 'start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -2.629921436891891e-05
    2. ' start' → logprob: -10.75002670288086
    3. '(start' → logprob: -12.25002670288086
    4. '[start' → logprob: -18.12502670288086
    5. '(' → logprob: -19.25002670288086
    6. '   ' → logprob: -19.50002670288086
    7. ')' → logprob: -20.12502670288086
    8. '	start' → logprob: -20.25002670288086
    9. ',start' → logprob: -20.62502670288086
    10. '0' → logprob: -20.75002670288086

Token 746: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.3822154111694545e-05
    2. ',end' → logprob: -10.875043869018555
    3. ',
' → logprob: -11.000043869018555
    4. ' ,' → logprob: -11.750043869018555
    5. ',start' → logprob: -17.125043869018555
    6. '<|end|>' → logprob: -17.250043869018555
    7. ',None' → logprob: -17.250043869018555
    8. '‌,' → logprob: -17.375043869018555
    9. ')' → logprob: -17.375043869018555
    10. '
' → logprob: -17.625043869018555

Token 747: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.5012887716293335
    2. 'start' → logprob: -1.6262887716293335
    3. '0' → logprob: -1.7512887716293335
    4. ' end' → logprob: -3.876288890838623
    5. ' start' → logprob: -6.001288890838623
    6. ' ' → logprob: -7.251288890838623
    7. 'self' → logprob: -9.376288414001465
    8. 'pos' → logprob: -10.626288414001465
    9. ')' → logprob: -11.876288414001465
    10. '(end' → logprob: -12.876288414001465

Token 748: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5048530030981055e-06
    2. ')
' → logprob: -14.000001907348633
    3. '<|end|>' → logprob: -15.000001907348633
    4. '       ' → logprob: -16.125001907348633
    5. '```' → logprob: -17.250001907348633
    6. ' )' → logprob: -17.375001907348633
    7. '   ' → logprob: -17.500001907348633
    8. '),' → logprob: -17.625001907348633
    9. '))' → logprob: -17.750001907348633
    10. ')`' → logprob: -17.750001907348633

Token 749: '           ' (ID: 352)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.7360098958015442
    2. '           ' → logprob: -1.1110098361968994
    3. '<|end|>' → logprob: -2.4860098361968994
    4. '       ' → logprob: -2.7360098361968994
    5. '   ' → logprob: -3.8610098361968994
    6. '    
' → logprob: -5.4860100746154785
    7. '        
' → logprob: -5.6110100746154785
    8. '
' → logprob: -6.3610100746154785
    9. '<|end|>' → logprob: -6.3610100746154785
    10. '``' → logprob: -6.6110100746154785

Token 750: ' def' (ID: 1056)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8105095028877258
    2. 'def' (adapté à ' def') → logprob: -1.685509443283081
    3. '       ' → logprob: -1.810509443283081
    4. '
' → logprob: -2.185509443283081
    5. '   ' → logprob: -2.935509443283081
    6. '```' → logprob: -4.31050968170166
    7. '        
' → logprob: -4.56050968170166
    8. ' def' → logprob: -5.31050968170166
    9. '            
' → logprob: -5.93550968170166
    10. '    
' → logprob: -6.06050968170166

Token 751: ' parse' (ID: 8420)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.00010247035970678553
    2. ' parse' → logprob: -9.250102043151855
    3. 'def' → logprob: -12.125102043151855
    4. ' ' → logprob: -15.000102043151855
    5. '   ' → logprob: -16.125102996826172
    6. '  ' → logprob: -16.500102996826172
    7. '(parse' → logprob: -16.875102996826172
    8. '	parse' → logprob: -16.875102996826172
    9. '_parse' → logprob: -17.000102996826172
    10. '
' → logprob: -17.125102996826172

Token 752: '_T' (ID: 2154)
  Prédit: '_T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_T' → logprob: -1.3856492842023727e-06
    2. 'T' → logprob: -13.750000953674316
    3. '_F' → logprob: -16.125001907348633
    4. '_' → logprob: -16.500001907348633
    5. '```' → logprob: -17.500001907348633
    6. '_P' → logprob: -19.125001907348633
    7. '	T' → logprob: -19.750001907348633
    8. '`' → logprob: -19.750001907348633
    9. '__' → logprob: -20.000001907348633
    10. '   ' → logprob: -20.250001907348633

Token 753: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00012296605564188212
    2. '(' → logprob: -9.125123023986816
    3. '   ' → logprob: -12.375123023986816
    4. 'self' → logprob: -12.750123023986816
    5. '(s' → logprob: -13.500123023986816
    6. '(
' → logprob: -13.625123023986816
    7. '       ' → logprob: -13.750123023986816
    8. ' (' → logprob: -13.875123023986816
    9. '_(' → logprob: -14.625123023986816
    10. ':' → logprob: -15.000123023986816

Token 754: '):
' (ID: 1883)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.015279407612979412
    2. '):' → logprob: -4.890279293060303
    3. '):
' → logprob: -5.390279293060303
    4. 'self' → logprob: -6.015279293060303
    5. '   ' → logprob: -8.390279769897461
    6. ')' → logprob: -9.140279769897461
    7. '       ' → logprob: -9.515279769897461
    8. '():' → logprob: -9.515279769897461
    9. '():
' → logprob: -9.890279769897461
    10. '(' → logprob: -9.890279769897461

Token 755: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.12933994829654694
    2. '       ' → logprob: -2.1293399333953857
    3. '           ' → logprob: -6.754340171813965
    4. '                   ' → logprob: -8.254340171813965
    5. '   ' → logprob: -8.379340171813965
    6. '```' → logprob: -9.004340171813965
    7. '	       ' → logprob: -9.379340171813965
    8. '(' → logprob: -9.504340171813965
    9. 'start' → logprob: -9.504340171813965
    10. '		       ' → logprob: -9.504340171813965

Token 756: ' start' (ID: 1604)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.21879024803638458
    2. 'start' (adapté à ' start') → logprob: -1.7187902927398682
    3. 'self' → logprob: -4.843790054321289
    4. '       ' → logprob: -5.468790054321289
    5. 'def' → logprob: -6.093790054321289
    6. '           ' → logprob: -7.218790054321289
    7. '```' → logprob: -7.593790054321289
    8. 'val' → logprob: -7.968790054321289
    9. '                   ' → logprob: -7.968790054321289
    10. '   ' → logprob: -8.093790054321289

Token 757: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.020548075437545776
    2. '=' → logprob: -3.895548105239868
    3. '   ' → logprob: -13.395547866821289
    4. '=self' → logprob: -13.770547866821289
    5. ':' → logprob: -14.020547866821289
    6. '       ' → logprob: -14.270547866821289
    7. '           ' → logprob: -14.770547866821289
    8. '=start' → logprob: -15.145547866821289
    9. ' ' → logprob: -15.270547866821289
    10. '        ' → logprob: -15.770547866821289

Token 758: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -7.374227425316349e-05
    2. ' self' → logprob: -9.750073432922363
    3. '               ' → logprob: -11.125073432922363
    4. '0' → logprob: -14.500073432922363
    5. '                   ' → logprob: -15.875073432922363
    6. '           ' → logprob: -17.12507438659668
    7. '(self' → logprob: -17.25007438659668
    8. '
' → logprob: -19.00007438659668
    9. '[self' → logprob: -19.12507438659668
    10. '   ' → logprob: -19.37507438659668

Token 759: '.pos' (ID: 25321)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.06840318441390991
    2. 'self' → logprob: -2.8184032440185547
    3. '.pos' → logprob: -5.068403244018555
    4. '0' → logprob: -9.943403244018555
    5. '               ' → logprob: -10.193403244018555
    6. '_pos' → logprob: -10.943403244018555
    7. '           ' → logprob: -11.818403244018555
    8. ' pos' → logprob: -12.693403244018555
    9. ' self' → logprob: -13.068403244018555
    10. '(self' → logprob: -13.693403244018555

Token 760: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04429861903190613
    2. '<|end|>' → logprob: -4.4192986488342285
    3. '                ' → logprob: -4.9192986488342285
    4. '           ' → logprob: -4.9192986488342285
    5. '                   ' → logprob: -5.9192986488342285
    6. '<|end|>' → logprob: -6.4192986488342285
    7. '                
' → logprob: -6.6692986488342285
    8. '	           ' → logprob: -6.9192986488342285
    9. '	       ' → logprob: -6.9192986488342285
    10. '       ' → logprob: -7.0442986488342285

Token 761: '               ' (ID: 506)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.3170742988586426
    2. '               ' → logprob: -1.3170742988586426
    3. 'digit' → logprob: -6.692074298858643
    4. 'return' → logprob: -7.067074298858643
    5. 'token' → logprob: -8.067073822021484
    6. '       ' → logprob: -8.067073822021484
    7. ' val' → logprob: -8.192073822021484
    8. 'value' → logprob: -8.817073822021484
    9. 'factor' → logprob: -8.817073822021484
    10. 'num' → logprob: -9.442073822021484

Token 762: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' (adapté à ' val') → logprob: -0.00015586259542033076
    2. '               ' → logprob: -10.000155448913574
    3. 'factor' → logprob: -10.625155448913574
    4. ' val' → logprob: -11.125155448913574
    5. 'res' → logprob: -11.250155448913574
    6. 'left' → logprob: -11.625155448913574
    7. 'v' → logprob: -11.625155448913574
    8. 'value' → logprob: -11.625155448913574
    9. 'f' → logprob: -12.125155448913574
    10. '           ' → logprob: -12.250155448913574

Token 763: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00042102107545360923
    2. '=' → logprob: -8.375420570373535
    3. ' ,' → logprob: -9.000420570373535
    4. ' =' → logprob: -10.000420570373535
    5. ',val' → logprob: -11.375420570373535
    6. '           ' → logprob: -12.875420570373535
    7. '_,' → logprob: -13.000420570373535
    8. '(),' → logprob: -14.625420570373535
    9. 'def' → logprob: -14.625420570373535
    10. ',self' → logprob: -14.750420570373535

Token 764: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.002566383685916662
    2. ' _' → logprob: -6.127566337585449
    3. 'self' → logprob: -8.75256633758545
    4. ' self' → logprob: -9.87756633758545
    5. '_)' → logprob: -10.25256633758545
    6. ')' → logprob: -10.37756633758545
    7. ' ' → logprob: -10.75256633758545
    8. '_=' → logprob: -10.87756633758545
    9. '_self' → logprob: -11.50256633758545
    10. '(' → logprob: -11.87756633758545

Token 765: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04859941080212593
    2. ' =' → logprob: -3.0485994815826416
    3. ',' → logprob: -12.548599243164062
    4. '           ' → logprob: -12.798599243164062
    5. '=self' → logprob: -13.548599243164062
    6. '   ' → logprob: -13.673599243164062
    7. ')' → logprob: -14.048599243164062
    8. '               ' → logprob: -14.048599243164062
    9. ' ' → logprob: -14.798599243164062
    10. '       ' → logprob: -15.173599243164062

Token 766: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0010407903464511037
    2. ' self' → logprob: -6.876040935516357
    3. '               ' → logprob: -12.1260404586792
    4. '(self' → logprob: -13.6260404586792
    5. '                   ' → logprob: -13.8760404586792
    6. '           ' → logprob: -15.2510404586792
    7. 'def' → logprob: -16.501041412353516
    8. '[self' → logprob: -16.751041412353516
    9. '=self' → logprob: -17.251041412353516
    10. '
' → logprob: -17.876041412353516

Token 767: '.parse' (ID: 7259)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -3.7146746763028204e-05
    2. '.parse' → logprob: -10.37503719329834
    3. ' parse' → logprob: -12.25003719329834
    4. 'parser' → logprob: -15.37503719329834
    5. '_parse' → logprob: -15.37503719329834
    6. '=parse' → logprob: -15.75003719329834
    7. ' ' → logprob: -15.87503719329834
    8. 'def' → logprob: -16.000036239624023
    9. '(parse' → logprob: -16.000036239624023
    10. '	parse' → logprob: -16.750036239624023

Token 768: '_F' (ID: 2729)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.0009149204124696553
    2. '_F' → logprob: -7.000915050506592
    3. ' F' → logprob: -14.000914573669434
    4. '```' → logprob: -14.250914573669434
    5. '	F' → logprob: -15.000914573669434
    6. '
' → logprob: -15.250914573669434
    7. 'Ｆ' → logprob: -15.250914573669434
    8. '   ' → logprob: -15.625914573669434
    9. '`' → logprob: -15.875914573669434
    10. 'E' → logprob: -16.50091552734375

Token 769: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0013302408624440432
    2. '()
' → logprob: -6.626330375671387
    3. '(' → logprob: -13.876330375671387
    4. '()

' → logprob: -14.126330375671387
    5. '()`' → logprob: -14.251330375671387
    6. '```' → logprob: -14.376330375671387
    7. '()\' → logprob: -14.876330375671387
    8. '())' → logprob: -15.626330375671387
    9. '();' → logprob: -15.626330375671387
    10. '()]' → logprob: -15.751330375671387

Token 770: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.021605493500828743
    2. '<|end|>' → logprob: -4.146605491638184
    3. '```' → logprob: -6.521605491638184
    4. '                   ' → logprob: -7.021605491638184
    5. '       ' → logprob: -7.146605491638184
    6. '<|end|>' → logprob: -7.396605491638184
    7. '           ' → logprob: -7.896605491638184
    8. '                ' → logprob: -8.271605491638184
    9. '
' → logprob: -8.646605491638184
    10. '                
' → logprob: -9.271605491638184

Token 771: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.0033694924786686897
    2. '               ' → logprob: -5.753369331359863
    3. ' while' → logprob: -9.128369331359863
    4. 'While' → logprob: -9.753369331359863
    5. '                   ' → logprob: -11.628369331359863
    6. '	while' → logprob: -12.503369331359863
    7. '```' → logprob: -12.503369331359863
    8. '
' → logprob: -12.878369331359863
    9. '           ' → logprob: -12.878369331359863
    10. '#' → logprob: -13.503369331359863

Token 772: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.6932013034820557
    2. 'self' → logprob: -0.6932013034820557
    3. ' ' → logprob: -10.943201065063477
    4. ' True' → logprob: -11.318201065063477
    5. 'True' → logprob: -11.318201065063477
    6. '(self' → logprob: -12.568201065063477
    7. ' (' → logprob: -12.943201065063477
    8. ' ' → logprob: -13.068201065063477
    9. '	self' → logprob: -13.193201065063477
    10. '   ' → logprob: -14.443201065063477

Token 773: '.pos' (ID: 25321)
  Prédit: '.pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pos' → logprob: -0.005215736571699381
    2. 'pos' → logprob: -5.755215644836426
    3. ' <' → logprob: -6.880215644836426
    4. '<' → logprob: -7.130215644836426
    5. '[pos' → logprob: -9.130215644836426
    6. '.s' → logprob: -10.505215644836426
    7. '<s' → logprob: -11.255215644836426
    8. '.' → logprob: -11.505215644836426
    9. ' ' → logprob: -11.505215644836426
    10. ' pos' → logprob: -11.880215644836426

Token 774: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.038060080260038376
    2. '<' → logprob: -3.288060188293457
    3. '[' → logprob: -11.913060188293457
    4. ' ' → logprob: -12.288060188293457
    5. '<len' → logprob: -13.413060188293457
    6. '   ' → logprob: -13.538060188293457
    7. '    ' → logprob: -13.788060188293457
    8. '<n' → logprob: -14.913060188293457
    9. ' +=' → logprob: -14.913060188293457
    10. '+' → logprob: -15.163060188293457

Token 775: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0015046248445287347
    2. ' self' → logprob: -6.501504421234131
    3. '               ' → logprob: -13.376504898071289
    4. '(self' → logprob: -15.126504898071289
    5. '=self' → logprob: -16.25150489807129
    6. '[self' → logprob: -16.37650489807129
    7. '                   ' → logprob: -16.37650489807129
    8. 'len' → logprob: -17.12650489807129
    9. ' ' → logprob: -17.25150489807129
    10. '	self' → logprob: -17.87650489807129

Token 776: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -0.00034928982495330274
    2. 'n' → logprob: -8.000349044799805
    3. 'self' → logprob: -11.625349044799805
    4. '.' → logprob: -13.250349044799805
    5. '.s' → logprob: -14.000349044799805
    6. '<n' → logprob: -14.250349044799805
    7. '_n' → logprob: -14.500349044799805
    8. '	n' → logprob: -15.625349044799805
    9. ' .' → logprob: -15.625349044799805
    10. 'len' → logprob: -15.750349044799805

Token 777: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.061978891491889954
    2. 'and' → logprob: -2.811978816986084
    3. '           ' → logprob: -12.561979293823242
    4. '	and' → logprob: -12.811979293823242
    5. '   ' → logprob: -14.061979293823242
    6. ' ' → logprob: -14.061979293823242
    7. '        ' → logprob: -14.186979293823242
    8. '          ' → logprob: -14.561979293823242
    9. '       ' → logprob: -14.686979293823242
    10. '            ' → logprob: -14.811979293823242

Token 778: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0619756355881691
    2. ' self' → logprob: -2.8119757175445557
    3. ' ' → logprob: -13.061975479125977
    4. '               ' → logprob: -13.436975479125977
    5. '           ' → logprob: -13.686975479125977
    6. '(self' → logprob: -13.686975479125977
    7. '   ' → logprob: -13.686975479125977
    8. ' (' → logprob: -15.561975479125977
    9. '	self' → logprob: -15.811975479125977
    10. '             ' → logprob: -15.936975479125977

Token 779: '.s' (ID: 640)
  Prédit: '.s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.s' → logprob: -6.170270353322849e-05
    2. '.' → logprob: -10.000061988830566
    3. 'self' → logprob: -11.625061988830566
    4. 's' → logprob: -12.500061988830566
    5. ' .' → logprob: -13.875061988830566
    6. '   ' → logprob: -14.125061988830566
    7. 'pos' → logprob: -14.750061988830566
    8. 'parse' → logprob: -15.125061988830566
    9. '       ' → logprob: -15.500061988830566
    10. ' ' → logprob: -15.625061988830566

Token 780: '[self' (ID: 33734)
  Prédit: '[self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[self' → logprob: -5.7530574849806726e-05
    2. 'self' → logprob: -10.000057220458984
    3. '[' → logprob: -11.375057220458984
    4. '   ' → logprob: -15.250057220458984
    5. '[
' → logprob: -15.875057220458984
    6. '	self' → logprob: -16.250057220458984
    7. ' self' → logprob: -16.625057220458984
    8. ' ' → logprob: -17.250057220458984
    9. '           ' → logprob: -17.500057220458984
    10. ' [' → logprob: -17.750057220458984

Token 781: '.pos' (ID: 25321)
  Prédit: '.pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pos' → logprob: -0.0006095095886848867
    2. 'pos' → logprob: -7.875609397888184
    3. '[self' → logprob: -9.250609397888184
    4. '[pos' → logprob: -9.375609397888184
    5. 'self' → logprob: -10.375609397888184
    6. '_pos' → logprob: -12.250609397888184
    7. '	pos' → logprob: -12.625609397888184
    8. '.self' → logprob: -13.000609397888184
    9. '.' → logprob: -13.250609397888184
    10. '[' → logprob: -13.625609397888184

Token 782: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3539135754108429
    2. '==' → logprob: -1.2289135456085205
    3. '=='' → logprob: -5.2289137840271
    4. '=' → logprob: -10.728913307189941
    5. ')==' → logprob: -10.978913307189941
    6. ']==' → logprob: -11.353913307189941
    7. '==
' → logprob: -11.353913307189941
    8. ')' → logprob: -11.978913307189941
    9. '[' → logprob: -11.978913307189941
    10. ' =='' → logprob: -12.228913307189941

Token 783: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.08499552309513092
    2. ' ==' → logprob: -2.7099955081939697
    3. '=='' → logprob: -4.209995746612549
    4. '=' → logprob: -10.08499526977539
    5. '==
' → logprob: -10.58499526977539
    6. '=="' → logprob: -11.33499526977539
    7. '	' → logprob: -12.45999526977539
    8. '   ' → logprob: -12.58499526977539
    9. '[' → logprob: -12.95999526977539
    10. ')==' → logprob: -13.45999526977539

Token 784: ' '*' (ID: 34958)
  Prédit: ''*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''*' → logprob: -5.676981345459353e-06
    2. ' '*' → logprob: -12.625005722045898
    3. '"*' → logprob: -13.375005722045898
    4. ' '*'' → logprob: -15.000005722045898
    5. '('*' → logprob: -15.625005722045898
    6. ' ' → logprob: -15.750005722045898
    7. '`' → logprob: -16.8750057220459
    8. '	' → logprob: -17.3750057220459
    9. '*' → logprob: -17.7500057220459
    10. '   ' → logprob: -18.1250057220459

Token 785: '':
' (ID: 7669)
  Prédit: ''*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''*' → logprob: -0.2602628767490387
    2. ''' → logprob: -2.010262966156006
    3. '=' → logprob: -3.385262966156006
    4. '*' → logprob: -4.010262966156006
    5. '':
' → logprob: -4.010262966156006
    6. '':' → logprob: -4.135262966156006
    7. ':' → logprob: -5.260262966156006
    8. '='' → logprob: -6.885262966156006
    9. '+' → logprob: -7.010262966156006
    10. ''+' → logprob: -8.010262489318848

Token 786: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0014189229113981128
    2. 'self' → logprob: -7.0014190673828125
    3. '               ' → logprob: -8.376419067382812
    4. '```' → logprob: -9.376419067382812
    5. ' self' → logprob: -10.001419067382812
    6. '+' → logprob: -10.251419067382812
    7. '   ' → logprob: -10.876419067382812
    8. '++' → logprob: -11.001419067382812
    9. '                       ' → logprob: -11.126419067382812
    10. ':' → logprob: -11.126419067382812

Token 787: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.2044837772846222
    2. '                   ' → logprob: -1.7044837474822998
    3. ' self' → logprob: -5.954483985900879
    4. '               ' → logprob: -8.329483985900879
    5. '                       ' → logprob: -8.829483985900879
    6. '   ' → logprob: -9.954483985900879
    7. '           ' → logprob: -11.079483985900879
    8. '	self' → logprob: -12.579483985900879
    9. '
' → logprob: -12.829483985900879
    10. '       ' → logprob: -13.204483985900879

Token 788: '.pos' (ID: 25321)
  Prédit: '.pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pos' → logprob: -1.4617256056226324e-05
    2. 'pos' → logprob: -11.375014305114746
    3. '+=' → logprob: -13.500014305114746
    4. '.' → logprob: -14.125014305114746
    5. '	pos' → logprob: -14.625014305114746
    6. ' +=' → logprob: -15.750014305114746
    7. '_pos' → logprob: -15.750014305114746
    8. ' .' → logprob: -17.375015258789062
    9. '   ' → logprob: -17.500015258789062
    10. ' pos' → logprob: -17.625015258789062

Token 789: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.04862143099308014
    2. ' +=' → logprob: -3.048621416091919
    3. '+' → logprob: -11.67362117767334
    4. '           ' → logprob: -11.92362117767334
    5. '    ' → logprob: -12.17362117767334
    6. '            ' → logprob: -12.29862117767334
    7. '   ' → logprob: -13.04862117767334
    8. '                   ' → logprob: -13.04862117767334
    9. ']+=' → logprob: -13.79862117767334
    10. '        ' → logprob: -13.79862117767334

Token 790: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.008614808320999146
    2. ' ' → logprob: -4.758615016937256
    3. '   ' → logprob: -15.883614540100098
    4. '```' → logprob: -16.508615493774414
    5. '                   ' → logprob: -17.133615493774414
    6. '           ' → logprob: -17.258615493774414
    7. '               ' → logprob: -18.883615493774414
    8. ' ' → logprob: -19.133615493774414
    9. '(' → logprob: -19.258615493774414
    10. '0' → logprob: -19.383615493774414

Token 791: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.688212614681106e-05
    2. ' ' → logprob: -11.000017166137695
    3. '   ' → logprob: -16.125017166137695
    4. '```' → logprob: -17.875017166137695
    5. '
' → logprob: -18.000017166137695
    6. '           ' → logprob: -18.000017166137695
    7. '2' → logprob: -18.875017166137695
    8. '       ' → logprob: -19.312517166137695
    9. '0' → logprob: -20.000017166137695
    10. '１' → logprob: -20.062517166137695

Token 792: '
' (ID: 198)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.13361123204231262
    2. '                   ' → logprob: -2.2586112022399902
    3. ' val' → logprob: -4.88361120223999
    4. ',val' → logprob: -5.13361120223999
    5. ',' → logprob: -5.63361120223999
    6. '
' → logprob: -6.38361120223999
    7. '               ' → logprob: -6.75861120223999
    8. '	val' → logprob: -8.008611679077148
    9. '           ' → logprob: -8.883611679077148
    10. '```' → logprob: -10.008611679077148

Token 793: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.287521630525589
    2. 'val' → logprob: -1.4125216007232666
    3. ',' → logprob: -5.787521839141846
    4. ',val' → logprob: -6.537521839141846
    5. ' val' → logprob: -6.912521839141846
    6. '               ' → logprob: -7.787521839141846
    7. '
' → logprob: -8.912521362304688
    8. '                       ' → logprob: -9.662521362304688
    9. '           ' → logprob: -9.912521362304688
    10. '                    
' → logprob: -10.037521362304688

Token 794: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' (adapté à ' val') → logprob: -6.265633419388905e-05
    2. 'v' → logprob: -9.750062942504883
    3. ' val' → logprob: -12.625062942504883
    4. '           ' → logprob: -15.250062942504883
    5. '```' → logprob: -15.750062942504883
    6. '_val' → logprob: -16.000062942504883
    7. '	val' → logprob: -16.625062942504883
    8. '               ' → logprob: -16.750062942504883
    9. '   ' → logprob: -16.750062942504883
    10. 'next' → logprob: -17.000062942504883

Token 795: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.02325444668531418
    2. ',' → logprob: -3.77325439453125
    3. '```' → logprob: -12.52325439453125
    4. '_,' → logprob: -13.77325439453125
    5. ',val' → logprob: -13.77325439453125
    6. ' ,' → logprob: -13.89825439453125
    7. 'val' → logprob: -14.02325439453125
    8. ' *=' → logprob: -14.64825439453125
    9. '   ' → logprob: -15.39825439453125
    10. '*=' → logprob: -15.77325439453125

Token 796: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.860340752406046e-05
    2. ',val' → logprob: -10.5000581741333
    3. ' ,' → logprob: -10.6250581741333
    4. ',_' → logprob: -13.0000581741333
    5. '2' → logprob: -13.5000581741333
    6. 'val' → logprob: -14.6250581741333
    7. '_,' → logprob: -14.7500581741333
    8. '           ' → logprob: -15.0000581741333
    9. ',v' → logprob: -15.1250581741333
    10. '```' → logprob: -15.5000581741333

Token 797: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.018472637981176376
    2. 'self' → logprob: -4.268472671508789
    3. ' self' → logprob: -5.768472671508789
    4. ' _' → logprob: -7.393472671508789
    5. '_self' → logprob: -7.518472671508789
    6. '(self' → logprob: -12.268472671508789
    7. '_
' → logprob: -13.018472671508789
    8. ' ' → logprob: -13.518472671508789
    9. '_=' → logprob: -13.518472671508789
    10. '_,' → logprob: -13.768472671508789

Token 798: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00038134094211272895
    2. ' =' → logprob: -7.8753814697265625
    3. ',' → logprob: -13.625381469726562
    4. ')' → logprob: -17.000381469726562
    5. ')=' → logprob: -18.125381469726562
    6. '=
' → logprob: -18.500381469726562
    7. ' ' → logprob: -18.625381469726562
    8. '   ' → logprob: -19.125381469726562
    9. '```' → logprob: -19.625381469726562
    10. '=parse' → logprob: -19.750381469726562

Token 799: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -3.190178904333152e-05
    2. ' self' → logprob: -10.375031471252441
    3. '                   ' → logprob: -15.500031471252441
    4. '(self' → logprob: -15.500031471252441
    5. '           ' → logprob: -16.875032424926758
    6. '[self' → logprob: -17.125032424926758
    7. '               ' → logprob: -18.125032424926758
    8. '
' → logprob: -18.750032424926758
    9. '```' → logprob: -18.750032424926758
    10. 'def' → logprob: -18.875032424926758

Token 800: '.parse' (ID: 7259)
  Prédit: '.parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parse' → logprob: -0.0007107630372047424
    2. 'parse' → logprob: -7.250710964202881
    3. 'self' → logprob: -14.250710487365723
    4. '=parse' → logprob: -16.00071144104004
    5. '.' → logprob: -16.25071144104004
    6. ' parse' → logprob: -17.75071144104004
    7. '(parse' → logprob: -18.50071144104004
    8. '	parse' → logprob: -18.75071144104004
    9. 'def' → logprob: -18.87571144104004
    10. '_parse' → logprob: -19.37571144104004

Token 801: '_F' (ID: 2729)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.00033665422233752906
    2. '_F' → logprob: -8.000336647033691
    3. ' F' → logprob: -14.625336647033691
    4. 'T' → logprob: -14.750336647033691
    5. '	F' → logprob: -16.250337600708008
    6. '   ' → logprob: -16.250337600708008
    7. '(F' → logprob: -16.625337600708008
    8. '```' → logprob: -16.875337600708008
    9. 'Ｆ' → logprob: -17.625337600708008
    10. 'def' → logprob: -17.875337600708008

Token 802: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0019320894498378038
    2. '()
' → logprob: -6.251932144165039
    3. '(' → logprob: -13.876932144165039
    4. '()`' → logprob: -14.626932144165039
    5. '()

' → logprob: -14.876932144165039
    6. '();' → logprob: -15.001932144165039
    7. '()
' → logprob: -15.751932144165039
    8. '()[' → logprob: -15.876932144165039
    9. '()\' → logprob: -16.00193214416504
    10. '()]' → logprob: -16.00193214416504

Token 803: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.1320676952600479
    2. 'val' → logprob: -2.1320676803588867
    3. '               ' → logprob: -6.382067680358887
    4. '
' → logprob: -6.507067680358887
    5. ' val' → logprob: -7.257067680358887
    6. '                    
' → logprob: -7.757067680358887
    7. '                       ' → logprob: -8.507067680358887
    8. '           ' → logprob: -9.257067680358887
    9. ',val' → logprob: -9.257067680358887
    10. '```' → logprob: -9.382067680358887

Token 804: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' (adapté à ' val') → logprob: -0.029071951285004616
    2. ' val' → logprob: -3.7790720462799072
    3. '                   ' → logprob: -5.154071807861328
    4. '                       ' → logprob: -11.154071807861328
    5. '               ' → logprob: -11.654071807861328
    6. '                    ' → logprob: -12.779071807861328
    7. ' ' → logprob: -13.904071807861328
    8. '	val' → logprob: -13.904071807861328
    9. '           ' → logprob: -14.029071807861328
    10. ',val' → logprob: -14.404071807861328

Token 805: ' *=' (ID: 25253)
  Prédit: '*='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*=' → logprob: -0.017449067905545235
    2. '=' → logprob: -4.642448902130127
    3. ' *=' → logprob: -4.892448902130127
    4. ' =' → logprob: -9.392449378967285
    5. '*' → logprob: -9.892449378967285
    6. '   ' → logprob: -11.267449378967285
    7. '```' → logprob: -12.767449378967285
    8. ' ' → logprob: -12.767449378967285
    9. '	' → logprob: -12.892449378967285
    10. '  ' → logprob: -13.017449378967285

Token 806: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.0009114635176956654
    2. ' val' → logprob: -7.000911235809326
    3. '	val' → logprob: -18.500911712646484
    4. '(val' → logprob: -19.625911712646484
    5. '```' → logprob: -19.625911712646484
    6. '   ' → logprob: -20.125911712646484
    7. '[val' → logprob: -20.750911712646484
    8. '_val' → logprob: -20.875911712646484
    9. 'v' → logprob: -22.500911712646484
    10. '           ' → logprob: -22.875911712646484

Token 807: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.2471589798224159e-05
    2. '[' → logprob: -12.375012397766113
    3. '```' → logprob: -12.875012397766113
    4. '<|end|>' → logprob: -13.250012397766113
    5. '*' → logprob: -13.625012397766113
    6. ' ' → logprob: -14.125012397766113
    7. ',' → logprob: -14.375012397766113
    8. '<|end|>' → logprob: -15.125012397766113
    9. '   ' → logprob: -15.625012397766113
    10. '.' → logprob: -15.625012397766113

Token 808: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.009928793646395206
    2. '<|end|>' → logprob: -5.1349287033081055
    3. 'return' → logprob: -6.7599287033081055
    4. '       ' → logprob: -7.0099287033081055
    5. '
' → logprob: -8.009928703308105
    6. '           ' → logprob: -8.009928703308105
    7. ',' → logprob: -8.259928703308105
    8. ' return' → logprob: -8.384928703308105
    9. '<|end|>' → logprob: -8.634928703308105
    10. '                   ' → logprob: -9.009928703308105

Token 809: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0009124171338044107
    2. '<|end|>' → logprob: -7.875912189483643
    3. 'return' → logprob: -8.7509126663208
    4. '                   ' → logprob: -9.0009126663208
    5. '       ' → logprob: -9.3759126663208
    6. '           ' → logprob: -10.0009126663208
    7. '<|end|>' → logprob: -10.1259126663208
    8. '              ' → logprob: -10.7509126663208
    9. ' return' → logprob: -11.1259126663208
    10. '```' → logprob: -11.3759126663208

Token 810: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' (adapté à ' end') → logprob: -0.7397792935371399
    2. 'return' → logprob: -0.7397792935371399
    3. 'val' → logprob: -3.364779233932495
    4. '               ' → logprob: -5.114779472351074
    5. ' return' → logprob: -6.239779472351074
    6. ' end' → logprob: -6.364779472351074
    7. '           ' → logprob: -7.739779472351074
    8. '                   ' → logprob: -7.739779472351074
    9. '
' → logprob: -9.114779472351074
    10. ' val' → logprob: -9.239779472351074

Token 811: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759984850883484
    2. ' =' → logprob: -0.8259984850883484
    3. '   ' → logprob: -11.200998306274414
    4. '           ' → logprob: -11.450998306274414
    5. '<|end|>' → logprob: -11.950998306274414
    6. '       ' → logprob: -12.075998306274414
    7. ')' → logprob: -12.325998306274414
    8. ':' → logprob: -12.700998306274414
    9. '```' → logprob: -13.325998306274414
    10. ' ' → logprob: -13.325998306274414

Token 812: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.048589304089546204
    2. ' self' → logprob: -3.0485892295837402
    3. '           ' → logprob: -14.423589706420898
    4. '               ' → logprob: -14.423589706420898
    5. '   ' → logprob: -15.423589706420898
    6. ' ' → logprob: -15.673589706420898
    7. '(self' → logprob: -15.798589706420898
    8. '                   ' → logprob: -16.1735897064209
    9. '	self' → logprob: -16.6735897064209
    10. '[self' → logprob: -16.9235897064209

Token 813: '.pos' (ID: 25321)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0627613216638565
    2. 'pos' → logprob: -2.8127613067626953
    3. '.pos' → logprob: -7.187761306762695
    4. ' self' → logprob: -10.437761306762695
    5. '   ' → logprob: -12.687761306762695
    6. '       ' → logprob: -13.437761306762695
    7. '.self' → logprob: -14.187761306762695
    8. '_pos' → logprob: -14.312761306762695
    9. '```' → logprob: -14.312761306762695
    10. '
' → logprob: -14.937761306762695

Token 814: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.003953613340854645
    2. '           ' → logprob: -6.253953456878662
    3. '       ' → logprob: -7.253953456878662
    4. 'self' → logprob: -7.378953456878662
    5. '<|end|>' → logprob: -7.378953456878662
    6. '```' → logprob: -11.00395393371582
    7. '   ' → logprob: -11.37895393371582
    8. '                   ' → logprob: -11.75395393371582
    9. ',' → logprob: -12.00395393371582
    10. ' self' → logprob: -12.12895393371582

Token 815: '               ' (ID: 506)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3507528007030487
    2. '               ' → logprob: -1.225752830505371
    3. '           ' → logprob: -6.725752830505371
    4. '<|end|>' → logprob: -7.350752830505371
    5. 'self' → logprob: -8.100752830505371
    6. '```' → logprob: -9.725752830505371
    7. '                   ' → logprob: -10.850752830505371
    8. '   ' → logprob: -10.975752830505371
    9. '	       ' → logprob: -11.100752830505371
    10. '		       ' → logprob: -11.850752830505371

Token 816: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.03232875093817711
    2. '               ' → logprob: -3.5323288440704346
    3. '           ' → logprob: -6.0323286056518555
    4. '                   ' → logprob: -9.532328605651855
    5. '       ' → logprob: -10.032328605651855
    6. ' self' → logprob: -10.407328605651855
    7. '   ' → logprob: -10.657328605651855
    8. '```' → logprob: -13.407328605651855
    9. '	self' → logprob: -13.407328605651855
    10. '              ' → logprob: -14.907328605651855

Token 817: '.nodes' (ID: 44152)
  Prédit: '.nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.nodes' → logprob: -0.0003034074034076184
    2. 'nodes' → logprob: -8.125303268432617
    3. '.' → logprob: -12.375303268432617
    4. '	nodes' → logprob: -14.125303268432617
    5. '   ' → logprob: -15.000303268432617
    6. '       ' → logprob: -15.125303268432617
    7. 'class' → logprob: -15.375303268432617
    8. '.tokens' → logprob: -15.500303268432617
    9. '
' → logprob: -15.625303268432617
    10. '.
' → logprob: -15.750303268432617

Token 818: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -2.5822400857578032e-05
    2. '.' → logprob: -10.625025749206543
    3. '.app' → logprob: -14.000025749206543
    4. 'append' → logprob: -15.000025749206543
    5. ' .' → logprob: -15.625025749206543
    6. '           ' → logprob: -16.00002670288086
    7. '.ap' → logprob: -17.00002670288086
    8. '.Append' → logprob: -17.25002670288086
    9. '.setdefault' → logprob: -18.12502670288086
    10. '	append' → logprob: -18.50002670288086

Token 819: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0022413700353354216
    2. '(' → logprob: -6.127241134643555
    3. '(start' → logprob: -9.877241134643555
    4. '(
' → logprob: -12.877241134643555
    5. ' (' → logprob: -13.377241134643555
    6. '   ' → logprob: -15.252241134643555
    7. '(end' → logprob: -16.127241134643555
    8. ' ' → logprob: -16.252241134643555
    9. '```' → logprob: -16.502241134643555
    10. ' ((' → logprob: -16.627241134643555

Token 820: 'start' (ID: 5236)
  Prédit: 'start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.018163170665502548
    2. '(start' → logprob: -4.018163204193115
    3. '[start' → logprob: -11.643162727355957
    4. ' start' → logprob: -12.393162727355957
    5. '=start' → logprob: -15.643162727355957
    6. ',start' → logprob: -15.768162727355957
    7. ' (' → logprob: -17.268163681030273
    8. ':start' → logprob: -17.643163681030273
    9. '(' → logprob: -17.768163681030273
    10. '	start' → logprob: -17.768163681030273

Token 821: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.0100624169572257e-05
    2. ',end' → logprob: -11.000020027160645
    3. ',
' → logprob: -13.500020027160645
    4. ' ,' → logprob: -13.625020027160645
    5. '<|end|>' → logprob: -15.000020027160645
    6. '‌,' → logprob: -16.50002098083496
    7. '`,' → logprob: -17.00002098083496
    8. '',' → logprob: -17.12502098083496
    9. '),' → logprob: -17.12502098083496
    10. ',",' → logprob: -17.25002098083496

Token 822: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.2014182209968567
    2. ' end' → logprob: -1.701418161392212
    3. '(end' → logprob: -12.451417922973633
    4. '=end' → logprob: -14.451417922973633
    5. '[end' → logprob: -15.201417922973633
    6. ''end' → logprob: -16.826417922973633
    7. ',end' → logprob: -16.826417922973633
    8. '	end' → logprob: -17.826417922973633
    9. '>end' → logprob: -18.576417922973633
    10. '```' → logprob: -18.576417922973633

Token 823: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.6405310816480778e-05
    2. '<|end|>' → logprob: -12.000016212463379
    3. ')' → logprob: -12.750016212463379
    4. ' ,' → logprob: -12.875016212463379
    5. ',val' → logprob: -13.750016212463379
    6. ',value' → logprob: -14.000016212463379
    7. ',
' → logprob: -14.375016212463379
    8. '),' → logprob: -14.500016212463379
    9. '‌,' → logprob: -15.375016212463379
    10. '           ' → logprob: -15.500016212463379

Token 824: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.00861456897109747
    2. ' val' → logprob: -4.758614540100098
    3. '(val' → logprob: -16.883615493774414
    4. '[val' → logprob: -17.133615493774414
    5. '	val' → logprob: -18.758615493774414
    6. ',val' → logprob: -19.008615493774414
    7. ' ' → logprob: -19.758615493774414
    8. '```' → logprob: -20.508615493774414
    9. '_val' → logprob: -20.633615493774414
    10. 'valu' → logprob: -21.133615493774414

Token 825: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005245733540505171
    2. '))' → logprob: -5.255245685577393
    3. ')
' → logprob: -12.00524616241455
    4. ')}' → logprob: -13.63024616241455
    5. '),' → logprob: -14.00524616241455
    6. ')))' → logprob: -14.13024616241455
    7. ')`' → logprob: -14.38024616241455
    8. '           ' → logprob: -14.63024616241455
    9. ')]' → logprob: -14.88024616241455
    10. '       ' → logprob: -14.88024616241455

Token 826: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.07373827695846558
    2. '       ' → logprob: -2.6987383365631104
    3. 'return' → logprob: -6.198738098144531
    4. '```' → logprob: -7.948738098144531
    5. '	       ' → logprob: -8.448738098144531
    6. '		       ' → logprob: -8.573738098144531
    7. '                   ' → logprob: -8.698738098144531
    8. '           ' → logprob: -8.823738098144531
    9. '	' → logprob: -8.948738098144531
    10. '<|end|>' → logprob: -9.073738098144531

Token 827: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0009701796225272119
    2. '               ' → logprob: -7.000970363616943
    3. ' return' → logprob: -9.750969886779785
    4. '	return' → logprob: -15.750969886779785
    5. '                   ' → logprob: -16.0009708404541
    6. '       ' → logprob: -16.2509708404541
    7. '           ' → logprob: -16.6259708404541
    8. '   ' → logprob: -17.0009708404541
    9. ':return' → logprob: -18.8759708404541
    10. 'Return' → logprob: -19.1259708404541

Token 828: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.00016563729150220752
    2. ' val' → logprob: -8.750165939331055
    3. '(val' → logprob: -11.875165939331055
    4. '   ' → logprob: -16.000165939331055
    5. '(' → logprob: -17.750165939331055
    6. '[val' → logprob: -17.750165939331055
    7. ' (' → logprob: -18.000165939331055
    8. '	val' → logprob: -18.250165939331055
    9. ' ' → logprob: -19.000165939331055
    10. '  ' → logprob: -19.125165939331055

Token 829: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00035572313936427236
    2. ' ,' → logprob: -8.37535572052002
    3. ',(' → logprob: -9.50035572052002
    4. '(' → logprob: -10.37535572052002
    5. ' (' → logprob: -11.25035572052002
    6. '<|end|>' → logprob: -13.00035572052002
    7. ',
' → logprob: -13.12535572052002
    8. '   ' → logprob: -15.00035572052002
    9. ')' → logprob: -16.000356674194336
    10. ',self' → logprob: -16.125356674194336

Token 830: ' (' (ID: 350)
  Prédit: '(start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(start' → logprob: -0.038050100207328796
    2. ' (' → logprob: -3.2880501747131348
    3. '(end' → logprob: -12.788049697875977
    4. '   ' → logprob: -13.288049697875977
    5. '[start' → logprob: -13.788049697875977
    6. '(' → logprob: -13.913049697875977
    7. ' ' → logprob: -14.788049697875977
    8. '(stop' → logprob: -14.788049697875977
    9. '(None' → logprob: -15.163049697875977
    10. '(self' → logprob: -15.288049697875977

Token 831: 'start' (ID: 5236)
  Prédit: 'start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -1.981667537620524e-06
    2. '(start' → logprob: -13.250001907348633
    3. ' start' → logprob: -15.625001907348633
    4. 'end' → logprob: -17.625001907348633
    5. '[start' → logprob: -17.875001907348633
    6. '(' → logprob: -20.625001907348633
    7. '   ' → logprob: -20.625001907348633
    8. '           ' → logprob: -20.750001907348633
    9. '	start' → logprob: -21.125001907348633
    10. 'self' → logprob: -21.875001907348633

Token 832: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.069664333248511e-05
    2. ',end' → logprob: -11.125020980834961
    3. ' ,' → logprob: -12.750020980834961
    4. ',
' → logprob: -13.375020980834961
    5. '```' → logprob: -15.500020980834961
    6. '_,' → logprob: -15.750020980834961
    7. '<|end|>' → logprob: -15.875020980834961
    8. '       ' → logprob: -16.00002098083496
    9. '[' → logprob: -16.00002098083496
    10. '           ' → logprob: -16.12502098083496

Token 833: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.005237668287009001
    2. ' end' → logprob: -5.255237579345703
    3. '(end' → logprob: -12.630237579345703
    4. 'self' → logprob: -14.630237579345703
    5. '[end' → logprob: -16.130237579345703
    6. 'start' → logprob: -19.005237579345703
    7. ''end' → logprob: -19.505237579345703
    8. '	end' → logprob: -19.505237579345703
    9. '       ' → logprob: -20.005237579345703
    10. '   ' → logprob: -20.130237579345703

Token 834: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -9.729906196298543e-06
    2. '<|end|>' → logprob: -12.125009536743164
    3. ')
' → logprob: -12.500009536743164
    4. '       ' → logprob: -16.000009536743164
    5. ')return' → logprob: -16.000009536743164
    6. '```' → logprob: -16.625009536743164
    7. ')\
' → logprob: -17.250009536743164
    8. '),' → logprob: -17.375009536743164
    9. '))' → logprob: -17.750009536743164
    10. ')>' → logprob: -17.875009536743164

Token 835: '           ' (ID: 352)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.19088530540466309
    2. '           ' → logprob: -2.190885305404663
    3. '       ' → logprob: -3.315885305404663
    4. 'def' → logprob: -4.315885543823242
    5. '``' → logprob: -5.190885543823242
    6. '        
' → logprob: -5.690885543823242
    7. '            
' → logprob: -6.815885543823242
    8. '   ' → logprob: -7.315885543823242
    9. '
' → logprob: -7.440885543823242
    10. '`' → logprob: -8.940885543823242

Token 836: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00848586019128561
    2. '       ' → logprob: -5.758485794067383
    3. '           ' → logprob: -5.883485794067383
    4. '```' → logprob: -6.633485794067383
    5. '   ' → logprob: -7.133485794067383
    6. ' def' → logprob: -8.258485794067383
    7. '	def' → logprob: -9.258485794067383
    8. '``' → logprob: -11.758485794067383
    9. '        
' → logprob: -12.008485794067383
    10. '         ' → logprob: -12.508485794067383

Token 837: ' parse' (ID: 8420)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.00011546355381142348
    2. 'def' → logprob: -9.250115394592285
    3. ' parse' → logprob: -10.875115394592285
    4. '   ' → logprob: -16.6251163482666
    5. '.parse' → logprob: -16.8751163482666
    6. ' ' → logprob: -16.8751163482666
    7. 'par' → logprob: -16.8751163482666
    8. 'parser' → logprob: -17.1251163482666
    9. '(parse' → logprob: -17.2501163482666
    10. '_parse' → logprob: -17.3751163482666

Token 838: '_F' (ID: 2729)
  Prédit: '_F'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_F' → logprob: -0.0011705794604495168
    2. 'F' → logprob: -6.751170635223389
    3. '```' → logprob: -16.001171112060547
    4. '	F' → logprob: -16.251171112060547
    5. ' F' → logprob: -16.626171112060547
    6. '(F' → logprob: -17.501171112060547
    7. 'Ｆ' → logprob: -18.126171112060547
    8. '_f' → logprob: -18.126171112060547
    9. '<F' → logprob: -18.501171112060547
    10. '[F' → logprob: -18.501171112060547

Token 839: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -4.060365608893335e-05
    2. '(' → logprob: -10.250041007995605
    3. 'self' → logprob: -13.500041007995605
    4. '       ' → logprob: -13.500041007995605
    5. '   ' → logprob: -14.000041007995605
    6. 'def' → logprob: -14.000041007995605
    7. '           ' → logprob: -14.750041007995605
    8. '(
' → logprob: -15.750041007995605
    9. ' (' → logprob: -17.12504005432129
    10. '               ' → logprob: -17.62504005432129

Token 840: '):
' (ID: 1883)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0017320599872618914
    2. '):' → logprob: -7.376731872558594
    3. '(' → logprob: -7.751731872558594
    4. 'self' → logprob: -8.001731872558594
    5. '):
' → logprob: -8.501731872558594
    6. '   ' → logprob: -10.126731872558594
    7. '       ' → logprob: -10.251731872558594
    8. '():' → logprob: -10.751731872558594
    9. '():
' → logprob: -11.001731872558594
    10. ')' → logprob: -12.001731872558594

Token 841: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6020742654800415
    2. 'start' → logprob: -0.8520742654800415
    3. '       ' → logprob: -3.727074146270752
    4. '           ' → logprob: -7.352074146270752
    5. '```' → logprob: -7.602074146270752
    6. ' start' → logprob: -9.10207462310791
    7. '		       ' → logprob: -9.22707462310791
    8. '	       ' → logprob: -9.47707462310791
    9. '_start' → logprob: -9.97707462310791
    10. 'token' → logprob: -10.22707462310791

Token 842: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' (adapté à ' start') → logprob: -0.0033376486971974373
    2. 'if' → logprob: -5.753337860107422
    3. '               ' → logprob: -8.753337860107422
    4. ' start' → logprob: -14.003337860107422
    5. 'c' → logprob: -14.503337860107422
    6. '                   ' → logprob: -14.878337860107422
    7. 'ch' → logprob: -16.253337860107422
    8. ' if' → logprob: -16.503337860107422
    9. '           ' → logprob: -17.628337860107422
    10. 'char' → logprob: -17.753337860107422

Token 843: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.17998839914798737
    2. ' =' → logprob: -1.8049883842468262
    3. '<|end|>' → logprob: -9.429988861083984
    4. '           ' → logprob: -10.054988861083984
    5. '=self' → logprob: -10.429988861083984
    6. '=
' → logprob: -10.679988861083984
    7. '<|end|>' → logprob: -11.679988861083984
    8. '+=' → logprob: -11.804988861083984
    9. ' ' → logprob: -11.929988861083984
    10. '=True' → logprob: -12.554988861083984

Token 844: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -3.297462171758525e-05
    2. ' self' → logprob: -10.375033378601074
    3. '               ' → logprob: -13.375033378601074
    4. '                   ' → logprob: -16.125032424926758
    5. '(self' → logprob: -18.000032424926758
    6. '0' → logprob: -18.500032424926758
    7. '
' → logprob: -18.500032424926758
    8. '           ' → logprob: -19.000032424926758
    9. '	self' → logprob: -20.250032424926758
    10. '$self' → logprob: -20.250032424926758

Token 845: '.pos' (ID: 25321)
  Prédit: '.pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pos' → logprob: -0.0024813658092170954
    2. 'pos' → logprob: -6.002481460571289
    3. '.' → logprob: -12.252481460571289
    4. 'self' → logprob: -15.127481460571289
    5. ' .' → logprob: -15.252481460571289
    6. ' pos' → logprob: -16.62748146057129
    7. '_pos' → logprob: -16.75248146057129
    8. '	pos' → logprob: -16.75248146057129
    9. ',pos' → logprob: -17.12748146057129
    10. '   ' → logprob: -17.12748146057129

Token 846: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1425766497850418
    2. '<|end|>' → logprob: -2.2675766944885254
    3. ',' → logprob: -5.142576694488525
    4. 'if' → logprob: -5.517576694488525
    5. ' if' → logprob: -5.517576694488525
    6. '                ' → logprob: -6.017576694488525
    7. '<|end|>' → logprob: -6.267576694488525
    8. '       ' → logprob: -6.267576694488525
    9. '           ' → logprob: -6.392576694488525
    10. ' ' → logprob: -6.892576694488525

Token 847: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.34943699836730957
    2. 'if' → logprob: -1.3494369983673096
    3. 'char' → logprob: -4.3494367599487305
    4. 'ch' → logprob: -4.9744367599487305
    5. 'c' → logprob: -5.0994367599487305
    6. ' if' → logprob: -5.2244367599487305
    7. 'token' → logprob: -6.0994367599487305
    8. '       ' → logprob: -6.4744367599487305
    9. '```' → logprob: -8.97443675994873
    10. '           ' → logprob: -9.09943675994873

Token 848: ' c' (ID: 274)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.032086003571748734
    2. 'c' (adapté à ' c') → logprob: -4.03208589553833
    3. 'ch' → logprob: -4.28208589553833
    4. 'char' → logprob: -10.782086372375488
    5. ' if' → logprob: -12.532086372375488
    6. '   ' → logprob: -14.282086372375488
    7. '       ' → logprob: -14.657086372375488
    8. 'token' → logprob: -16.782085418701172
    9. '	if' → logprob: -16.907085418701172
    10. 'If' → logprob: -17.407085418701172

Token 849: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.038096461445093155
    2. ' =' → logprob: -3.2880964279174805
    3. '=self' → logprob: -10.03809642791748
    4. '=s' → logprob: -12.03809642791748
    5. '           ' → logprob: -13.53809642791748
    6. 'if' → logprob: -13.91309642791748
    7. '=
' → logprob: -14.28809642791748
    8. '=sys' → logprob: -15.16309642791748
    9. 's' → logprob: -15.28809642791748
    10. '=c' → logprob: -15.41309642791748

Token 850: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0009115827269852161
    2. ' self' → logprob: -7.000911712646484
    3. 's' → logprob: -16.125911712646484
    4. '   ' → logprob: -18.125911712646484
    5. ' ' → logprob: -18.250911712646484
    6. '(self' → logprob: -18.500911712646484
    7. '               ' → logprob: -18.500911712646484
    8. '	self' → logprob: -18.750911712646484
    9. '           ' → logprob: -19.000911712646484
    10. '
' → logprob: -19.000911712646484

Token 851: '.s' (ID: 640)
  Prédit: '.s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.s' → logprob: -0.00016146517009474337
    2. '.' → logprob: -9.500161170959473
    3. 'self' → logprob: -10.125161170959473
    4. 's' → logprob: -10.375161170959473
    5. ' .' → logprob: -11.750161170959473
    6. '.self' → logprob: -13.375161170959473
    7. '.pos' → logprob: -13.750161170959473
    8. '   ' → logprob: -14.125161170959473
    9. '```' → logprob: -14.125161170959473
    10. 'pos' → logprob: -14.375161170959473

Token 852: '[self' (ID: 33734)
  Prédit: '[self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[self' → logprob: -5.967624019831419e-05
    2. 'self' → logprob: -9.750060081481934
    3. '[' → logprob: -14.000060081481934
    4. '```' → logprob: -15.125060081481934
    5. '[
' → logprob: -16.625059127807617
    6. ' self' → logprob: -16.625059127807617
    7. '	self' → logprob: -18.000059127807617
    8. '(self' → logprob: -18.125059127807617
    9. '[start' → logprob: -18.500059127807617
    10. '   ' → logprob: -19.000059127807617

Token 853: '.pos' (ID: 25321)
  Prédit: '[self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[self' → logprob: -0.009774863719940186
    2. 'self' → logprob: -4.634774684906006
    3. ' self' → logprob: -11.759775161743164
    4. '[' → logprob: -11.884775161743164
    5. '[start' → logprob: -13.884775161743164
    6. '	self' → logprob: -14.134775161743164
    7. '[pos' → logprob: -14.259775161743164
    8. '[
' → logprob: -14.759775161743164
    9. '   ' → logprob: -14.884775161743164
    10. '(self' → logprob: -15.509775161743164

Token 854: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.23069395124912262
    2. ']
' → logprob: -1.9806939363479614
    3. '               ' → logprob: -3.105694055557251
    4. ')' → logprob: -4.230693817138672
    5. ')
' → logprob: -5.730693817138672
    6. '<|end|>' → logprob: -6.730693817138672
    7. '                   ' → logprob: -7.355693817138672
    8. '           ' → logprob: -7.605693817138672
    9. '[' → logprob: -7.605693817138672
    10. '<|end|>' → logprob: -7.730693817138672

Token 855: '               ' (ID: 506)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.10171207040548325
    2. '               ' → logprob: -2.4767119884490967
    3. 'self' → logprob: -4.476712226867676
    4. ' if' → logprob: -6.726712226867676
    5. '       ' → logprob: -9.851712226867676
    6. '```' → logprob: -10.476712226867676
    7. '           ' → logprob: -11.101712226867676
    8. ' self' → logprob: -12.476712226867676
    9. 'token' → logprob: -12.476712226867676
    10. '                
' → logprob: -12.476712226867676

Token 856: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.00043805985478684306
    2. '               ' → logprob: -8.00043773651123
    3. 'self' → logprob: -9.25043773651123
    4. ' if' → logprob: -12.00043773651123
    5. '```' → logprob: -15.12543773651123
    6. '           ' → logprob: -16.375438690185547
    7. '       ' → logprob: -16.625438690185547
    8. 'try' → logprob: -17.000438690185547
    9. 'token' → logprob: -17.500438690185547
    10. '	if' → logprob: -18.000438690185547

Token 857: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.03837411850690842
    2. ' c' → logprob: -3.288374185562134
    3. ''' → logprob: -8.038373947143555
    4. ' ' → logprob: -12.038373947143555
    5. ' '' → logprob: -13.038373947143555
    6. '   ' → logprob: -13.788373947143555
    7. '  ' → logprob: -15.288373947143555
    8. '	c' → logprob: -15.413373947143555
    9. '     ' → logprob: -16.413373947143555
    10. '    ' → logprob: -17.163373947143555

Token 858: ' ==' (ID: 951)
  Prédit: '.is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.is' → logprob: -1.0807169675827026
    2. '==' → logprob: -1.2057169675827026
    3. 'isdigit' → logprob: -1.5807169675827026
    4. ' ==' → logprob: -2.330717086791992
    5. '>=' → logprob: -3.705717086791992
    6. ' in' → logprob: -3.830717086791992
    7. 'is' → logprob: -5.205717086791992
    8. ' >=' → logprob: -6.205717086791992
    9. 'in' → logprob: -6.330717086791992
    10. '=='' → logprob: -6.830717086791992

Token 859: ' '('' (ID: 87284)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -6.599403423024341e-05
    2. '(' → logprob: -10.625065803527832
    3. ' '('' → logprob: -10.875065803527832
    4. ''(' → logprob: -11.250065803527832
    5. '"' → logprob: -12.125065803527832
    6. '('' → logprob: -13.500065803527832
    7. ''d' → logprob: -13.500065803527832
    8. '')' → logprob: -15.125065803527832
    9. ''''' → logprob: -15.250065803527832
    10. ''-' → logprob: -15.875065803527832

Token 860: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.0689295083284378
    2. ':' → logprob: -2.818929433822632
    3. '                   ' → logprob: -5.693929672241211
    4. '):
' → logprob: -6.693929672241211
    5. ' and' → logprob: -7.443929672241211
    6. 'self' → logprob: -7.693929672241211
    7. 'and' → logprob: -7.693929672241211
    8. '               ' → logprob: -8.693929672241211
    9. '[self' → logprob: -8.818929672241211
    10. '                       ' → logprob: -9.193929672241211

Token 861: '                   ' (ID: 699)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3356483280658722
    2. '                   ' → logprob: -1.8356482982635498
    3. '               ' → logprob: -2.08564829826355
    4. '           ' → logprob: -6.835648536682129
    5. '                       ' → logprob: -8.710648536682129
    6. ' self' → logprob: -9.210648536682129
    7. '   ' → logprob: -10.460648536682129
    8. '(self' → logprob: -12.460648536682129
    9. '```' → logprob: -12.710648536682129
    10. '	self' → logprob: -12.960648536682129

Token 862: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0010748496279120445
    2. '                   ' → logprob: -7.00107479095459
    3. '               ' → logprob: -8.87607479095459
    4. ' self' → logprob: -10.75107479095459
    5. '                       ' → logprob: -13.75107479095459
    6. '   ' → logprob: -14.37607479095459
    7. '	self' → logprob: -15.25107479095459
    8. '           ' → logprob: -16.001075744628906
    9. '(self' → logprob: -16.876075744628906
    10. '```' → logprob: -17.626075744628906

Token 863: '.pos' (ID: 25321)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.023250719532370567
    2. '.pos' → logprob: -3.7732508182525635
    3. ' pos' → logprob: -13.148250579833984
    4. '	pos' → logprob: -13.648250579833984
    5. 'self' → logprob: -14.148250579833984
    6. 'class' → logprob: -14.273250579833984
    7. '_pos' → logprob: -14.898250579833984
    8. '[pos' → logprob: -16.398250579833984
    9. '   ' → logprob: -16.898250579833984
    10. '           ' → logprob: -17.148250579833984

Token 864: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0011772511061280966
    2. ' +=' → logprob: -6.7511773109436035
    3. ']+=' → logprob: -12.126176834106445
    4. '+' → logprob: -14.126176834106445
    5. '                   ' → logprob: -14.876176834106445
    6. '=' → logprob: -14.876176834106445
    7. '   ' → logprob: -17.251176834106445
    8. '           ' → logprob: -17.376176834106445
    9. '+='' → logprob: -17.626176834106445
    10. '                       ' → logprob: -17.751176834106445

Token 865: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.611323624383658e-05
    2. ' ' → logprob: -9.625065803527832
    3. '```' → logprob: -18.50006675720215
    4. '   ' → logprob: -18.62506675720215
    5. '                   ' → logprob: -19.75006675720215
    6. '
' → logprob: -20.12506675720215
    7. '۱' → logprob: -21.00006675720215
    8. '2' → logprob: -21.06256675720215
    9. '(' → logprob: -21.12506675720215
    10. '+' → logprob: -21.37506675720215

Token 866: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.25
    3. '
' → logprob: -20.875
    4. '```' → logprob: -21.0
    5. '   ' → logprob: -21.875
    6. '(' → logprob: -22.875
    7. '۱' → logprob: -23.0
    8. '１' → logprob: -23.25
    9. '

' → logprob: -23.75
    10. '+' → logprob: -23.75

Token 867: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.36415427923202515
    2. 'return' → logprob: -1.73915433883667
    3. '                       ' → logprob: -2.36415433883667
    4. '               ' → logprob: -4.48915433883667
    5. '<|end|>' → logprob: -5.11415433883667
    6. 'token' → logprob: -5.86415433883667
    7. '                    ' → logprob: -5.98915433883667
    8. '	               ' → logprob: -6.61415433883667
    9. '
' → logprob: -6.73915433883667
    10. ' return' → logprob: -6.86415433883667

Token 868: '                   ' (ID: 699)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.5184452533721924
    2. '                   ' → logprob: -1.1434452533721924
    3. 'return' → logprob: -2.7684452533721924
    4. 'value' → logprob: -5.268445014953613
    5. ' val' → logprob: -5.268445014953613
    6. 'end' → logprob: -5.768445014953613
    7. 'res' → logprob: -6.143445014953613
    8. 'result' → logprob: -6.393445014953613
    9. 'v' → logprob: -6.643445014953613
    10. '               ' → logprob: -7.018445014953613

Token 869: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' (adapté à ' val') → logprob: -0.0013302408624440432
    2. 'v' → logprob: -7.001330375671387
    3. 'res' → logprob: -8.001330375671387
    4. 'value' → logprob: -10.251330375671387
    5. ' val' → logprob: -10.751330375671387
    6. 'ret' → logprob: -11.876330375671387
    7. '                   ' → logprob: -11.876330375671387
    8. '               ' → logprob: -12.376330375671387
    9. 'result' → logprob: -12.876330375671387
    10. '           ' → logprob: -13.626330375671387

Token 870: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0019593210890889168
    2. '=' → logprob: -6.251959323883057
    3. '<|end|>' → logprob: -11.001958847045898
    4. ' ,' → logprob: -12.376958847045898
    5. '<|end|>' → logprob: -12.751958847045898
    6. ' =' → logprob: -13.001958847045898
    7. '```' → logprob: -14.376958847045898
    8. '_,' → logprob: -14.751958847045898
    9. ')' → logprob: -14.876958847045898
    10. '                   ' → logprob: -15.001958847045898

Token 871: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.017079409211874008
    2. ' _' → logprob: -4.3920793533325195
    3. 'self' → logprob: -6.2670793533325195
    4. '_=' → logprob: -7.2670793533325195
    5. '   ' → logprob: -8.14207935333252
    6. '                   ' → logprob: -8.39207935333252
    7. '(' → logprob: -8.51707935333252
    8. ' self' → logprob: -9.01707935333252
    9. '(self' → logprob: -9.14207935333252
    10. ' =' → logprob: -9.26707935333252

Token 872: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0008062947308644652
    2. ' =' → logprob: -7.1258063316345215
    3. ')' → logprob: -14.125805854797363
    4. ')=' → logprob: -14.250805854797363
    5. '=self' → logprob: -15.500805854797363
    6. '<|end|>' → logprob: -16.00080680847168
    7. '=
' → logprob: -16.50080680847168
    8. ',' → logprob: -18.00080680847168
    9. '=}' → logprob: -18.12580680847168
    10. '```' → logprob: -18.37580680847168

Token 873: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -5.180879816180095e-05
    2. ' self' → logprob: -9.875051498413086
    3. '                   ' → logprob: -15.375051498413086
    4. '(self' → logprob: -17.375051498413086
    5. '                       ' → logprob: -19.625051498413086
    6. '               ' → logprob: -19.750051498413086
    7. ' ' → logprob: -19.875051498413086
    8. '   ' → logprob: -19.875051498413086
    9. '           ' → logprob: -20.000051498413086
    10. '	self' → logprob: -20.375051498413086

Token 874: '.parse' (ID: 7259)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.0012798800598829985
    2. ' parse' → logprob: -7.376279830932617
    3. '.parse' → logprob: -7.376279830932617
    4. '(parse' → logprob: -12.251279830932617
    5. '=parse' → logprob: -12.251279830932617
    6. '	parse' → logprob: -12.751279830932617
    7. ' ' → logprob: -13.126279830932617
    8. 'parser' → logprob: -13.251279830932617
    9. 'Parser' → logprob: -13.251279830932617
    10. '   ' → logprob: -13.376279830932617

Token 875: '_E' (ID: 6584)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.001328572048805654
    2. '_E' → logprob: -6.626328468322754
    3. 'F' → logprob: -13.751328468322754
    4. '	E' → logprob: -14.876328468322754
    5. ' E' → logprob: -15.001328468322754
    6. '(E' → logprob: -15.501328468322754
    7. 'expression' → logprob: -15.751328468322754
    8. 'Expression' → logprob: -16.62632942199707
    9. '```' → logprob: -16.75132942199707
    10. 'Ｅ' → logprob: -16.75132942199707

Token 876: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.007678553462028503
    2. '()
' → logprob: -4.882678508758545
    3. '                   ' → logprob: -10.132678985595703
    4. '(' → logprob: -11.382678985595703
    5. ')' → logprob: -11.882678985595703
    6. '();' → logprob: -12.757678985595703
    7. '```' → logprob: -13.007678985595703
    8. '               ' → logprob: -13.132678985595703
    9. '())' → logprob: -13.257678985595703
    10. '           ' → logprob: -14.132678985595703

Token 877: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0020891157910227776
    2. 'self' → logprob: -7.252089023590088
    3. '```' → logprob: -7.627089023590088
    4. '
' → logprob: -7.752089023590088
    5. '               ' → logprob: -8.752089500427246
    6. '           ' → logprob: -8.877089500427246
    7. '       ' → logprob: -9.502089500427246
    8. '                       ' → logprob: -10.502089500427246
    9. '   ' → logprob: -11.127089500427246
    10. '                    ' → logprob: -12.002089500427246

Token 878: ' if' (ID: 538)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.04534018039703369
    2. 'if' (adapté à ' if') → logprob: -3.295340061187744
    3. '                   ' → logprob: -5.420340061187744
    4. 'assert' → logprob: -5.920340061187744
    5. '               ' → logprob: -9.170340538024902
    6. ' self' → logprob: -10.545340538024902
    7. '           ' → logprob: -11.420340538024902
    8. '   ' → logprob: -12.045340538024902
    9. '       ' → logprob: -12.670340538024902
    10. ' if' → logprob: -12.795340538024902

Token 879: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3136788010597229
    2. ' self' → logprob: -1.3136787414550781
    3. '   ' → logprob: -8.813678741455078
    4. ' ' → logprob: -9.188678741455078
    5. ' not' → logprob: -9.563678741455078
    6. ')' → logprob: -10.813678741455078
    7. '(self' → logprob: -11.438678741455078
    8. 'c' → logprob: -11.563678741455078
    9. '           ' → logprob: -11.688678741455078
    10. 's' → logprob: -11.688678741455078

Token 880: '.pos' (ID: 25321)
  Prédit: '.pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pos' → logprob: -0.008856359869241714
    2. '.s' → logprob: -4.758856296539307
    3. 'pos' → logprob: -8.383856773376465
    4. 's' → logprob: -12.133856773376465
    5. '.' → logprob: -12.883856773376465
    6. '[pos' → logprob: -13.383856773376465
    7. 'self' → logprob: -13.633856773376465
    8. '	pos' → logprob: -14.383856773376465
    9. 'Pos' → logprob: -15.383856773376465
    10. ' pos' → logprob: -15.508856773376465

Token 881: ' >=' (ID: 5064)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.008511027321219444
    2. '[' → logprob: -5.883511066436768
    3. ' <' → logprob: -6.008511066436768
    4. '<len' → logprob: -6.758511066436768
    5. '<|end|>' → logprob: -7.758511066436768
    6. '==' → logprob: -8.13351058959961
    7. '>=' → logprob: -8.38351058959961
    8. '           ' → logprob: -8.63351058959961
    9. '<n' → logprob: -9.13351058959961
    10. '                   ' → logprob: -9.25851058959961

Token 882: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0016586360288783908
    2. 'len' → logprob: -6.5016584396362305
    3. ' self' → logprob: -9.50165843963623
    4. '                   ' → logprob: -9.50165843963623
    5. '               ' → logprob: -12.75165843963623
    6. '1' → logprob: -14.25165843963623
    7. '                       ' → logprob: -14.62665843963623
    8. '(self' → logprob: -14.75165843963623
    9. '0' → logprob: -15.00165843963623
    10. '```' → logprob: -15.00165843963623

Token 883: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -0.018230015411973
    2. 'n' → logprob: -4.018229961395264
    3. '.s' → logprob: -10.768230438232422
    4. 's' → logprob: -10.768230438232422
    5. 'len' → logprob: -11.268230438232422
    6. '<n' → logprob: -11.518230438232422
    7. 'self' → logprob: -12.393230438232422
    8. 'pos' → logprob: -13.268230438232422
    9. '_n' → logprob: -13.393230438232422
    10. '               ' → logprob: -13.643230438232422

Token 884: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.12710091471672058
    2. 'or' → logprob: -2.127100944519043
    3. '                   ' → logprob: -9.127100944519043
    4. '	or' → logprob: -10.752100944519043
    5. '               ' → logprob: -11.127100944519043
    6. '                       ' → logprob: -11.377100944519043
    7. ':
' → logprob: -12.002100944519043
    8. ':' → logprob: -12.127100944519043
    9. '           ' → logprob: -13.127100944519043
    10. ' and' → logprob: -14.002100944519043

Token 885: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.004172421991825104
    2. '                   ' → logprob: -5.504172325134277
    3. ' self' → logprob: -10.129172325134277
    4. '                       ' → logprob: -10.379172325134277
    5. '               ' → logprob: -11.254172325134277
    6. '           ' → logprob: -12.754172325134277
    7. '                  ' → logprob: -13.629172325134277
    8. '                           ' → logprob: -13.879172325134277
    9. '                    ' → logprob: -13.879172325134277
    10. '                 ' → logprob: -14.004172325134277

Token 886: '.s' (ID: 640)
  Prédit: '.s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.s' → logprob: -6.945094355614856e-05
    2. 's' → logprob: -9.625069618225098
    3. '.' → logprob: -12.750069618225098
    4. ' s' → logprob: -15.750069618225098
    5. '   ' → logprob: -16.87506866455078
    6. '	s' → logprob: -17.00006866455078
    7. ' .' → logprob: -17.12506866455078
    8. '           ' → logprob: -17.62506866455078
    9. ').' → logprob: -17.62506866455078
    10. '       ' → logprob: -18.12506866455078

Token 887: '[self' (ID: 33734)
  Prédit: '[self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[self' → logprob: -9.877503907773644e-05
    2. 'self' → logprob: -9.250099182128906
    3. '[' → logprob: -13.375099182128906
    4. '```' → logprob: -15.625099182128906
    5. ' self' → logprob: -15.750099182128906
    6. '[
' → logprob: -15.750099182128906
    7. '   ' → logprob: -15.750099182128906
    8. '                   ' → logprob: -16.000099182128906
    9. '	self' → logprob: -16.375099182128906
    10. '
' → logprob: -16.500099182128906

Token 888: '.pos' (ID: 25321)
  Prédit: '.pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pos' → logprob: -0.0005333751323632896
    2. '[self' → logprob: -8.375533103942871
    3. 'self' → logprob: -8.500533103942871
    4. 'pos' → logprob: -9.875533103942871
    5. '.self' → logprob: -10.500533103942871
    6. '[pos' → logprob: -11.500533103942871
    7. '.' → logprob: -12.250533103942871
    8. '].' → logprob: -13.500533103942871
    9. ').' → logprob: -14.625533103942871
    10. '.user' → logprob: -14.625533103942871

Token 889: ']' (ID: 60)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.716297447681427
    2. '!=' → logprob: -0.716297447681427
    3. ')' → logprob: -4.466297626495361
    4. ')!=' → logprob: -5.466297626495361
    5. ']!=' → logprob: -5.841297626495361
    6. ']' → logprob: -6.341297626495361
    7. '!='' → logprob: -7.091297626495361
    8. '                   ' → logprob: -7.591297626495361
    9. '()!=' → logprob: -8.091297149658203
    10. '==' → logprob: -8.341297149658203

Token 890: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.1750621348619461
    2. ' !=' → logprob: -1.9250621795654297
    3. ']' → logprob: -5.17506217956543
    4. ']!=' → logprob: -5.17506217956543
    5. ')' → logprob: -6.67506217956543
    6. ')!=' → logprob: -6.80006217956543
    7. '==' → logprob: -8.30006217956543
    8. '[' → logprob: -8.55006217956543
    9. '```' → logprob: -8.80006217956543
    10. '!='' → logprob: -9.30006217956543

Token 891: ' ')' (ID: 35910)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.004096208605915308
    2. ')' → logprob: -5.504096031188965
    3. ' ')' → logprob: -11.629096031188965
    4. ' ')'' → logprob: -12.629096031188965
    5. '")' → logprob: -12.879096031188965
    6. ''' → logprob: -13.129096031188965
    7. ''):' → logprob: -15.129096031188965
    8. '']' → logprob: -15.379096031188965
    9. ')'' → logprob: -15.379096031188965
    10. '`)' → logprob: -16.50409698486328

Token 892: '':
' (ID: 7669)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.1242971420288086
    2. '                   ' → logprob: -2.4992971420288086
    3. ':' → logprob: -3.9992971420288086
    4. '                       ' → logprob: -4.249297142028809
    5. '):
' → logprob: -6.624297142028809
    6. 'self' → logprob: -7.624297142028809
    7. '               ' → logprob: -9.249297142028809
    8. '):' → logprob: -9.999297142028809
    9. ')' → logprob: -10.124297142028809
    10. '':
' → logprob: -10.874297142028809

Token 893: '                       ' (ID: 968)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.1008676290512085
    2. '                       ' → logprob: -2.350867748260498
    3. 'self' → logprob: -7.475867748260498
    4. '               ' → logprob: -10.22586727142334
    5. '```' → logprob: -10.85086727142334
    6. '   ' → logprob: -11.35086727142334
    7. '           ' → logprob: -11.60086727142334
    8. '       ' → logprob: -12.47586727142334
    9. '                           ' → logprob: -12.60086727142334
    10. '                    ' → logprob: -12.72586727142334

Token 894: ' #' (ID: 1069)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'raise' → logprob: -0.030368205159902573
    2. ' raise' → logprob: -4.530368328094482
    3. '                   ' → logprob: -4.905368328094482
    4. 'self' → logprob: -5.030368328094482
    5. '                       ' → logprob: -5.530368328094482
    6. 'return' → logprob: -7.030368328094482
    7. '	raise' → logprob: -8.655367851257324
    8. '                    ' → logprob: -9.155367851257324
    9. 'Raise' → logprob: -11.030367851257324
    10. '                           ' → logprob: -11.280367851257324

Token 895: ' invalid' (ID: 15796)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'raise' → logprob: -0.000344044849043712
    2. 'return' → logprob: -8.000344276428223
    3. ' raise' → logprob: -12.000344276428223
    4. 'self' → logprob: -13.625344276428223
    5. '#' → logprob: -14.625344276428223
    6. '                   ' → logprob: -15.125344276428223
    7. '           ' → logprob: -15.750344276428223
    8. 'assert' → logprob: -15.750344276428223
    9. '               ' → logprob: -16.000343322753906
    10. 'Raise' → logprob: -17.125343322753906

Token 896: ' but' (ID: 889)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.23746636509895325
    2. 'self' → logprob: -1.7374663352966309
    3. 'raise' → logprob: -4.237466335296631
    4. 'return' → logprob: -4.612466335296631
    5. '                       ' → logprob: -5.362466335296631
    6. ')
' → logprob: -6.487466335296631
    7. '               ' → logprob: -6.737466335296631
    8. ')' → logprob: -6.987466335296631
    9. ' raise' → logprob: -6.987466335296631
    10. ' self' → logprob: -7.362466335296631

Token 897: ' input' (ID: 3422)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.08157073706388474
    2. ' return' → logprob: -3.331570625305176
    3. 'raise' → logprob: -3.581570625305176
    4. '                   ' → logprob: -5.206570625305176
    5. 'self' → logprob: -5.331570625305176
    6. ' raise' → logprob: -6.581570625305176
    7. '                       ' → logprob: -6.581570625305176
    8. 'pass' → logprob: -7.081570625305176
    9. ' self' → logprob: -8.331570625305176
    10. '#' → logprob: -8.456570625305176

Token 898: ' conforms' (ID: 198642)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.13998273015022278
    2. '                       ' → logprob: -2.6399827003479004
    3. 'self' → logprob: -3.0149827003479004
    4. '[self' → logprob: -5.8899827003479
    5. '                           ' → logprob: -6.1399827003479
    6. '               ' → logprob: -6.3899827003479
    7. ' self' → logprob: -6.6399827003479
    8. '```' → logprob: -8.014983177185059
    9. '                    ' → logprob: -8.264983177185059
    10. '                               ' → logprob: -8.389983177185059

Token 899: ',' (ID: 11)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.1121240183711052
    2. '                       ' → logprob: -2.737123966217041
    3. 'self' → logprob: -3.237123966217041
    4. ',' → logprob: -7.112123966217041
    5. ')' → logprob: -8.3621244430542
    6. ' self' → logprob: -8.6121244430542
    7. '               ' → logprob: -8.7371244430542
    8. '                           ' → logprob: -8.8621244430542
    9. '```' → logprob: -8.8621244430542
    10. '
' → logprob: -9.8621244430542

Token 900: ' so' (ID: 813)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.09394003450870514
    2. '                   ' → logprob: -2.843940019607544
    3. '                       ' → logprob: -3.468940019607544
    4. '                           ' → logprob: -8.718939781188965
    5. ' self' → logprob: -9.218939781188965
    6. 'return' → logprob: -11.343939781188965
    7. '
' → logprob: -11.593939781188965
    8. '               ' → logprob: -11.718939781188965
    9. 'pass' → logprob: -12.093939781188965
    10. '```' → logprob: -12.468939781188965

Token 901: ' ignore' (ID: 17887)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.012609835714101791
    2. 'pass' → logprob: -4.512609958648682
    3. '                   ' → logprob: -7.012609958648682
    4. 'assert' → logprob: -7.762609958648682
    5. 'return' → logprob: -8.887609481811523
    6. 'raise' → logprob: -9.387609481811523
    7. '#' → logprob: -12.512609481811523
    8. '                       ' → logprob: -12.637609481811523
    9. '   ' → logprob: -13.262609481811523
    10. '               ' → logprob: -13.387609481811523

Token 902: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.009294872172176838
    2. '                       ' → logprob: -5.0092949867248535
    3. 'self' → logprob: -6.1342949867248535
    4. '               ' → logprob: -8.634294509887695
    5. '
' → logprob: -9.384294509887695
    6. '                           ' → logprob: -10.259294509887695
    7. ')' → logprob: -10.384294509887695
    8. '           ' → logprob: -10.509294509887695
    9. '```' → logprob: -11.009294509887695
    10. ' self' → logprob: -11.509294509887695

Token 903: '                       ' (ID: 968)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.006900313310325146
    2. '                       ' → logprob: -5.131900310516357
    3. 'self' → logprob: -7.256900310516357
    4. '```' → logprob: -8.756900787353516
    5. '               ' → logprob: -10.006900787353516
    6. '                           ' → logprob: -10.756900787353516
    7. '
' → logprob: -11.131900787353516
    8. '           ' → logprob: -11.881900787353516
    9. '   ' → logprob: -11.881900787353516
    10. ' self' → logprob: -12.506900787353516

Token 904: ' pass' (ID: 1853)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.007331405766308308
    2. '                   ' → logprob: -5.007331371307373
    3. '                       ' → logprob: -7.632331371307373
    4. 'return' → logprob: -9.257331848144531
    5. ' self' → logprob: -11.382331848144531
    6. 'pass' (adapté à ' pass') → logprob: -11.757331848144531
    7. '                           ' → logprob: -12.257331848144531
    8. 'raise' → logprob: -12.382331848144531
    9. '               ' → logprob: -12.757331848144531
    10. '   ' → logprob: -13.132331848144531

Token 905: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -2.558399319241289e-05
    2. '               ' → logprob: -11.125025749206543
    3. 'self' → logprob: -12.250025749206543
    4. '                       ' → logprob: -12.625025749206543
    5. '           ' → logprob: -13.750025749206543
    6. '```' → logprob: -14.250025749206543
    7. 'else' → logprob: -14.875025749206543
    8. '				' → logprob: -15.500025749206543
    9. '
' → logprob: -15.625025749206543
    10. '   ' → logprob: -15.750025749206543

Token 906: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00014180023572407663
    2. '               ' → logprob: -9.000142097473145
    3. 'self' → logprob: -11.500142097473145
    4. '                       ' → logprob: -12.375142097473145
    5. '           ' → logprob: -12.750142097473145
    6. '				' → logprob: -15.000142097473145
    7. '```' → logprob: -15.125142097473145
    8. '       ' → logprob: -15.500142097473145
    9. '   ' → logprob: -15.625142097473145
    10. 'else' → logprob: -16.375141143798828

Token 907: ' self' (ID: 1051)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5763620734214783
    2. 'self' (adapté à ' self') → logprob: -0.8263620734214783
    3. '               ' → logprob: -8.076361656188965
    4. '                       ' → logprob: -9.701361656188965
    5. '           ' → logprob: -10.576361656188965
    6. ' self' → logprob: -11.201361656188965
    7. '   ' → logprob: -11.951361656188965
    8. '       ' → logprob: -13.076361656188965
    9. '				' → logprob: -14.201361656188965
    10. '	self' → logprob: -14.826361656188965

Token 908: '.pos' (ID: 25321)
  Prédit: '.pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pos' → logprob: -0.0002036595979006961
    2. 'pos' → logprob: -8.500204086303711
    3. '	pos' → logprob: -16.25020408630371
    4. '.s' → logprob: -16.87520408630371
    5. '.' → logprob: -17.50020408630371
    6. ' pos' → logprob: -17.75020408630371
    7. '[pos' → logprob: -18.62520408630371
    8. '_pos' → logprob: -18.75020408630371
    9. ',pos' → logprob: -18.75020408630371
    10. '   ' → logprob: -19.25020408630371

Token 909: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.001510335598140955
    2. ' +=' → logprob: -6.501510143280029
    3. ']+=' → logprob: -11.876510620117188
    4. '+' → logprob: -14.501510620117188
    5. '```' → logprob: -14.751510620117188
    6. '   ' → logprob: -16.501510620117188
    7. '           ' → logprob: -17.126510620117188
    8. '++' → logprob: -18.126510620117188
    9. '       ' → logprob: -18.126510620117188
    10. '                   ' → logprob: -18.501510620117188

Token 910: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '   ' → logprob: -19.125001907348633
    4. '```' → logprob: -21.375001907348633
    5. '           ' → logprob: -22.000001907348633
    6. '
' → logprob: -22.750001907348633
    7. '(' → logprob: -22.750001907348633
    8. '１' → logprob: -23.125001907348633
    9. '       ' → logprob: -23.500001907348633
    10. '                   ' → logprob: -23.750001907348633

Token 911: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -19.125
    3. '   ' → logprob: -23.5
    4. '```' → logprob: -23.75
    5. '１' → logprob: -25.0
    6. '(' → logprob: -25.625
    7. '-' → logprob: -26.0
    8. '۱' → logprob: -26.125
    9. '`' → logprob: -26.625
    10. '0' → logprob: -26.875

Token 912: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.001663516042754054
    2. '               ' → logprob: -7.001663684844971
    3. '<|end|>' → logprob: -8.251663208007812
    4. 'return' → logprob: -8.376663208007812
    5. '           ' → logprob: -8.626663208007812
    6. '```' → logprob: -10.376663208007812
    7. '                       ' → logprob: -11.251663208007812
    8. ' return' → logprob: -11.501663208007812
    9. '       ' → logprob: -11.876663208007812
    10. '		           ' → logprob: -12.376663208007812

Token 913: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0007366081699728966
    2. '               ' → logprob: -7.875736713409424
    3. 'return' → logprob: -8.250736236572266
    4. '           ' → logprob: -10.000736236572266
    5. '```' → logprob: -11.000736236572266
    6. '                       ' → logprob: -11.250736236572266
    7. '<|end|>' → logprob: -11.625736236572266
    8. '       ' → logprob: -12.500736236572266
    9. ' return' → logprob: -13.125736236572266
    10. '   ' → logprob: -13.375736236572266

Token 914: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' (adapté à ' end') → logprob: -0.006995019502937794
    2. 'self' → logprob: -5.25699520111084
    3. 'val' → logprob: -6.75699520111084
    4. '                   ' → logprob: -7.75699520111084
    5. 'return' → logprob: -9.25699520111084
    6. '               ' → logprob: -10.50699520111084
    7. ' end' → logprob: -10.88199520111084
    8. '                       ' → logprob: -11.25699520111084
    9. '   ' → logprob: -12.25699520111084
    10. '           ' → logprob: -12.88199520111084

Token 915: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.005235648714005947
    2. ' =' → logprob: -5.25523567199707
    3. '=end' → logprob: -13.63023567199707
    4. '   ' → logprob: -15.50523567199707
    5. ')' → logprob: -15.50523567199707
    6. ',' → logprob: -16.13023567199707
    7. '=start' → logprob: -17.00523567199707
    8. '    ' → logprob: -17.50523567199707
    9. '<|end|>' → logprob: -17.63023567199707
    10. '=
' → logprob: -18.00523567199707

Token 916: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0010731808142736554
    2. ' self' → logprob: -7.001073360443115
    3. '                   ' → logprob: -8.751072883605957
    4. '               ' → logprob: -13.376072883605957
    5. '                       ' → logprob: -13.876072883605957
    6. '           ' → logprob: -14.626072883605957
    7. '                           ' → logprob: -16.001073837280273
    8. '(self' → logprob: -16.001073837280273
    9. '   ' → logprob: -16.501073837280273
    10. '                               ' → logprob: -17.251073837280273

Token 917: '.pos' (ID: 25321)
  Prédit: '.pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pos' → logprob: -0.029753033071756363
    2. 'pos' → logprob: -3.5297529697418213
    3. 'self' → logprob: -13.654752731323242
    4. '	pos' → logprob: -14.904752731323242
    5. '.' → logprob: -15.279752731323242
    6. '[pos' → logprob: -15.529752731323242
    7. ' pos' → logprob: -15.779752731323242
    8. '   ' → logprob: -16.154752731323242
    9. '(pos' → logprob: -17.154752731323242
    10. '.p' → logprob: -17.404752731323242

Token 918: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0033129386138170958
    2. '               ' → logprob: -5.878313064575195
    3. '<|end|>' → logprob: -8.628313064575195
    4. '		           ' → logprob: -9.128313064575195
    5. '           ' → logprob: -9.378313064575195
    6. 'return' → logprob: -10.378313064575195
    7. '	               ' → logprob: -10.753313064575195
    8. '                       ' → logprob: -11.003313064575195
    9. '			       ' → logprob: -11.128313064575195
    10. '
' → logprob: -11.378313064575195

Token 919: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00011915886716451496
    2. 'return' → logprob: -9.87511920928955
    3. '               ' → logprob: -10.12511920928955
    4. '```' → logprob: -11.12511920928955
    5. '           ' → logprob: -12.00011920928955
    6. '       ' → logprob: -13.12511920928955
    7. '   ' → logprob: -13.37511920928955
    8. 'self' → logprob: -14.00011920928955
    9. '                       ' → logprob: -14.00011920928955
    10. ' return' → logprob: -15.00011920928955

Token 920: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0036796480417251587
    2. '                   ' → logprob: -5.6286797523498535
    3. 'val' → logprob: -9.878679275512695
    4. '               ' → logprob: -10.878679275512695
    5. '   ' → logprob: -12.753679275512695
    6. 'return' → logprob: -13.253679275512695
    7. ' self' → logprob: -13.253679275512695
    8. '           ' → logprob: -13.878679275512695
    9. '                       ' → logprob: -14.128679275512695
    10. '       ' → logprob: -14.878679275512695

Token 921: '.nodes' (ID: 44152)
  Prédit: '.nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.nodes' → logprob: -0.001052934443578124
    2. 'nodes' → logprob: -6.8760528564453125
    3. '           ' → logprob: -12.251052856445312
    4. '               ' → logprob: -12.626052856445312
    5. 'class' → logprob: -12.751052856445312
    6. '	nodes' → logprob: -13.001052856445312
    7. '
' → logprob: -13.001052856445312
    8. '       ' → logprob: -13.876052856445312
    9. '   ' → logprob: -13.876052856445312
    10. ').' → logprob: -14.251052856445312

Token 922: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -1.8670179997570813e-05
    2. '.' → logprob: -11.375019073486328
    3. 'append' → logprob: -12.500019073486328
    4. '.app' → logprob: -13.125019073486328
    5. '.Append' → logprob: -14.625019073486328
    6. '_append' → logprob: -15.250019073486328
    7. 'Append' → logprob: -15.375019073486328
    8. '           ' → logprob: -15.500019073486328
    9. '.setdefault' → logprob: -16.625019073486328
    10. ' .' → logprob: -17.250019073486328

Token 923: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0017106400337070227
    2. '(' → logprob: -6.626710414886475
    3. '(start' → logprob: -7.876710414886475
    4. '   ' → logprob: -13.126710891723633
    5. '(
' → logprob: -13.376710891723633
    6. ' (' → logprob: -14.376710891723633
    7. '```' → logprob: -15.376710891723633
    8. ' ' → logprob: -15.626710891723633
    9. ' ((' → logprob: -15.876710891723633
    10. '(Start' → logprob: -16.001710891723633

Token 924: 'start' (ID: 5236)
  Prédit: 'start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.0009144435753114522
    2. '(start' → logprob: -7.000914573669434
    3. ' start' → logprob: -12.875914573669434
    4. '[start' → logprob: -15.375914573669434
    5. ',start' → logprob: -17.125913619995117
    6. ' (' → logprob: -18.500913619995117
    7. '=start' → logprob: -18.625913619995117
    8. '	start' → logprob: -18.750913619995117
    9. '   ' → logprob: -19.375913619995117
    10. ')' → logprob: -19.625913619995117

Token 925: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1517960956552997e-05
    2. ',end' → logprob: -12.500011444091797
    3. ' ,' → logprob: -13.125011444091797
    4. '                   ' → logprob: -13.375011444091797
    5. ',
' → logprob: -13.625011444091797
    6. '<|end|>' → logprob: -14.125011444091797
    7. '           ' → logprob: -14.375011444091797
    8. '               ' → logprob: -14.750011444091797
    9. '   ' → logprob: -15.625011444091797
    10. '```' → logprob: -16.250011444091797

Token 926: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.1269282102584839
    2. ' end' → logprob: -2.1269283294677734
    3. '(end' → logprob: -16.126928329467773
    4. ')' → logprob: -18.001928329467773
    5. '   ' → logprob: -18.626928329467773
    6. '                           ' → logprob: -18.751928329467773
    7. ' ' → logprob: -19.001928329467773
    8. '                   ' → logprob: -19.251928329467773
    9. '                               ' → logprob: -19.251928329467773
    10. '=end' → logprob: -19.251928329467773

Token 927: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.129266067640856e-05
    2. '<|end|>' → logprob: -11.875020980834961
    3. '                   ' → logprob: -12.000020980834961
    4. ',
' → logprob: -12.875020980834961
    5. ' ,' → logprob: -14.000020980834961
    6. '               ' → logprob: -14.000020980834961
    7. '                       ' → logprob: -14.500020980834961
    8. ',val' → logprob: -14.625020980834961
    9. '‌,' → logprob: -14.750020980834961
    10. ',value' → logprob: -14.875020980834961

Token 928: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.0001766040368238464
    2. ' val' → logprob: -8.750176429748535
    3. '                   ' → logprob: -11.250176429748535
    4. '               ' → logprob: -13.500176429748535
    5. '           ' → logprob: -13.625176429748535
    6. '                       ' → logprob: -13.875176429748535
    7. '                           ' → logprob: -14.625176429748535
    8. '   ' → logprob: -15.500176429748535
    9. '	val' → logprob: -16.00017738342285
    10. '       ' → logprob: -16.12517738342285

Token 929: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5823713541030884
    2. '))' → logprob: -0.8323713541030884
    3. '))
' → logprob: -5.207371234893799
    4. ')
' → logprob: -7.082371234893799
    5. '               ' → logprob: -9.707371711730957
    6. '                   ' → logprob: -10.582371711730957
    7. '           ' → logprob: -12.582371711730957
    8. ')))' → logprob: -13.082371711730957
    9. '       ' → logprob: -14.582371711730957
    10. ')`' → logprob: -14.582371711730957

Token 930: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0011982052819803357
    2. '               ' → logprob: -7.2511982917785645
    3. '```' → logprob: -8.126197814941406
    4. 'return' → logprob: -9.501197814941406
    5. '           ' → logprob: -9.876197814941406
    6. '       ' → logprob: -10.501197814941406
    7. '		           ' → logprob: -11.126197814941406
    8. '                       ' → logprob: -11.876197814941406
    9. '   ' → logprob: -12.376197814941406
    10. '	               ' → logprob: -12.501197814941406

Token 931: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.014317571185529232
    2. '                   ' → logprob: -4.264317512512207
    3. ' return' → logprob: -9.389317512512207
    4. '               ' → logprob: -9.889317512512207
    5. '           ' → logprob: -11.514317512512207
    6. '       ' → logprob: -12.764317512512207
    7. '	return' → logprob: -12.889317512512207
    8. '```' → logprob: -13.264317512512207
    9. '   ' → logprob: -13.514317512512207
    10. '                       ' → logprob: -14.264317512512207

Token 932: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.0015036711702123284
    2. ' val' → logprob: -6.5015034675598145
    3. '   ' → logprob: -13.751503944396973
    4. '(val' → logprob: -15.626503944396973
    5. '           ' → logprob: -16.376502990722656
    6. '	val' → logprob: -16.876502990722656
    7. '    ' → logprob: -18.251502990722656
    8. ' ' → logprob: -18.251502990722656
    9. '  ' → logprob: -18.501502990722656
    10. '       ' → logprob: -18.626502990722656

Token 933: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005213391850702465
    2. '<|end|>' → logprob: -7.875521183013916
    3. ' ,' → logprob: -9.125521659851074
    4. ',
' → logprob: -11.875521659851074
    5. '<|end|>' → logprob: -12.000521659851074
    6. '                   ' → logprob: -12.125521659851074
    7. '   ' → logprob: -12.875521659851074
    8. ')' → logprob: -13.250521659851074
    9. '               ' → logprob: -13.750521659851074
    10. ',None' → logprob: -13.750521659851074

Token 934: ' (' (ID: 350)
  Prédit: '(start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(start' → logprob: -6.992775888647884e-05
    2. ' (' → logprob: -9.625069618225098
    3. '[start' → logprob: -13.000069618225098
    4. '   ' → logprob: -14.125069618225098
    5. 'start' → logprob: -15.375069618225098
    6. '(' → logprob: -15.875069618225098
    7. '(end' → logprob: -16.250070571899414
    8. '((' → logprob: -16.250070571899414
    9. '  ' → logprob: -16.375070571899414
    10. ' ' → logprob: -16.625070571899414

Token 935: 'start' (ID: 5236)
  Prédit: 'start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -4.320199877838604e-07
    2. '(start' → logprob: -15.5
    3. ' start' → logprob: -15.875
    4. '[start' → logprob: -18.75
    5. 'end' → logprob: -19.5
    6. '   ' → logprob: -21.5
    7. '(' → logprob: -21.75
    8. '	start' → logprob: -21.875
    9. '0' → logprob: -22.25
    10. ')' → logprob: -22.5

Token 936: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007623080164194107
    2. ',end' → logprob: -4.882623195648193
    3. 'end' → logprob: -11.882622718811035
    4. ',
' → logprob: -12.382622718811035
    5. ' ,' → logprob: -13.382622718811035
    6. '+' → logprob: -13.632622718811035
    7. '   ' → logprob: -14.382622718811035
    8. '           ' → logprob: -14.507622718811035
    9. '               ' → logprob: -14.882622718811035
    10. '                   ' → logprob: -15.007622718811035

Token 937: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.0027350971940904856
    2. 'self' → logprob: -6.252735137939453
    3. ' end' → logprob: -7.127735137939453
    4. ' self' → logprob: -12.877735137939453
    5. 'start' → logprob: -14.502735137939453
    6. '(end' → logprob: -15.377735137939453
    7. '   ' → logprob: -16.002735137939453
    8. ' ' → logprob: -16.502735137939453
    9. ''end' → logprob: -16.752735137939453
    10. ')' → logprob: -17.377735137939453

Token 938: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002214172709500417
    2. '               ' → logprob: -8.625221252441406
    3. ')
' → logprob: -10.125221252441406
    4. '           ' → logprob: -14.250221252441406
    5. '                   ' → logprob: -14.250221252441406
    6. '       ' → logprob: -15.000221252441406
    7. ' )' → logprob: -17.875221252441406
    8. '   ' → logprob: -17.875221252441406
    9. '()' → logprob: -18.125221252441406
    10. '')' → logprob: -18.375221252441406

Token 939: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004714091774076223
    2. '```' → logprob: -5.379714012145996
    3. 'else' → logprob: -10.004714012145996
    4. '``' → logprob: -11.504714012145996
    5. '                
' → logprob: -12.004714012145996
    6. '           ' → logprob: -12.004714012145996
    7. '                ' → logprob: -12.254714012145996
    8. '              ' → logprob: -12.254714012145996
    9. '                   ' → logprob: -12.379714012145996
    10. '
' → logprob: -12.879714012145996

Token 940: ' else' (ID: 1203)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.16990211606025696
    2. 'else' (adapté à ' else') → logprob: -2.1699020862579346
    3. 'elif' → logprob: -3.1699020862579346
    4. 'if' → logprob: -10.419901847839355
    5. '           ' → logprob: -11.169901847839355
    6. 'elseif' → logprob: -12.669901847839355
    7. ' else' → logprob: -12.794901847839355
    8. ' elif' → logprob: -13.294901847839355
    9. '
' → logprob: -13.294901847839355
    10. 'c' → logprob: -13.919901847839355

Token 941: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5908608436584473
    2. '                   ' → logprob: -0.8408608436584473
    3. '           ' → logprob: -4.840860843658447
    4. '```' → logprob: -6.715860843658447
    5. 'digit' → logprob: -6.715860843658447
    6. 'digits' → logprob: -6.965860843658447
    7. '                ' → logprob: -7.715860843658447
    8. '	               ' → logprob: -7.840860843658447
    9. '   ' → logprob: -8.090860366821289
    10. 'return' → logprob: -8.090860366821289

Token 942: '                   ' (ID: 699)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6797540187835693
    2. 'digit' → logprob: -1.3047540187835693
    3. '                   ' → logprob: -1.6797540187835693
    4. 'start' → logprob: -4.554754257202148
    5. 'digits' → logprob: -4.679754257202148
    6. 'val' → logprob: -5.429754257202148
    7. '```' → logprob: -5.679754257202148
    8. ' digit' → logprob: -6.054754257202148
    9. '   ' → logprob: -6.804754257202148
    10. '           ' → logprob: -7.179754257202148

Token 943: ' #' (ID: 1069)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.1399666666984558
    2. 'digit' → logprob: -2.2649667263031006
    3. '                   ' → logprob: -4.2649664878845215
    4. 'start' → logprob: -5.5149664878845215
    5. 'num' → logprob: -5.5149664878845215
    6. 'self' → logprob: -6.7649664878845215
    7. 'v' → logprob: -7.1399664878845215
    8. 'd' → logprob: -7.1399664878845215
    9. 'if' → logprob: -7.2649664878845215
    10. 'dig' → logprob: -7.7649664878845215

Token 944: ' digit' (ID: 19181)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.22011013329029083
    2. 'digit' → logprob: -2.2201101779937744
    3. 'self' → logprob: -2.9701101779937744
    4. 'start' → logprob: -3.8451101779937744
    5. 'if' → logprob: -4.720109939575195
    6. 'end' → logprob: -6.095109939575195
    7. 'num' → logprob: -6.595109939575195
    8. 'd' → logprob: -7.095109939575195
    9. 'digits' → logprob: -7.095109939575195
    10. 'dig' → logprob: -7.470109939575195

Token 945: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.019989803433418274
    2. '               ' → logprob: -4.519989967346191
    3. '                       ' → logprob: -6.394989967346191
    4. '           ' → logprob: -6.644989967346191
    5. 'digit' → logprob: -6.769989967346191
    6. '<|end|>' → logprob: -7.144989967346191
    7. '                    
' → logprob: -7.519989967346191
    8. '                    ' → logprob: -7.894989967346191
    9. '<|end|>' → logprob: -7.894989967346191
    10. '```' → logprob: -8.394989967346191

Token 946: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.008595781400799751
    2. 'digit' → logprob: -5.008595943450928
    3. '               ' → logprob: -7.008595943450928
    4. 'digits' → logprob: -8.88359546661377
    5. 'val' → logprob: -9.00859546661377
    6. '                    
' → logprob: -9.25859546661377
    7. 'num' → logprob: -9.25859546661377
    8. '           ' → logprob: -9.63359546661377
    9. 'start' → logprob: -9.63359546661377
    10. 'd' → logprob: -9.63359546661377

Token 947: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' (adapté à ' val') → logprob: -0.03606415539979935
    2. 'digit' → logprob: -3.9110641479492188
    3. 'self' → logprob: -5.411064147949219
    4. '                   ' → logprob: -5.411064147949219
    5. 'v' → logprob: -5.911064147949219
    6. 'd' → logprob: -6.161064147949219
    7. ' val' → logprob: -7.161064147949219
    8. 'value' → logprob: -7.661064147949219
    9. 'num' → logprob: -9.036064147949219
    10. 'c' → logprob: -9.036064147949219

Token 948: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011072227731347084
    2. ' =' → logprob: -4.761072158813477
    3. '=int' → logprob: -6.011072158813477
    4. 'int' → logprob: -13.261072158813477
    5. '=
' → logprob: -14.386072158813477
    6. '                   ' → logprob: -14.761072158813477
    7. '               ' → logprob: -16.011072158813477
    8. '=self' → logprob: -16.011072158813477
    9. '           ' → logprob: -16.511072158813477
    10. '   ' → logprob: -16.636072158813477

Token 949: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.014166799373924732
    2. ' int' → logprob: -4.264166831970215
    3. 'ord' → logprob: -12.764166831970215
    4. '   ' → logprob: -15.139166831970215
    5. ' ord' → logprob: -16.0141658782959
    6. '(int' → logprob: -17.7641658782959
    7. ' ' → logprob: -19.0141658782959
    8. '0' → logprob: -19.2641658782959
    9. '	int' → logprob: -19.3891658782959
    10. '  ' → logprob: -19.5141658782959

Token 950: '(c' (ID: 2410)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.039005130529403687
    2. '(self' → logprob: -4.039005279541016
    3. 's' → logprob: -4.539005279541016
    4. 'c' → logprob: -4.664005279541016
    5. '(s' → logprob: -8.039005279541016
    6. ' self' → logprob: -8.664005279541016
    7. '(c' → logprob: -11.039005279541016
    8. '(' → logprob: -12.289005279541016
    9. ')c' → logprob: -13.289005279541016
    10. '```' → logprob: -13.539005279541016

Token 951: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02696763537824154
    2. ')
' → logprob: -3.6519675254821777
    3. '[self' → logprob: -7.401967525482178
    4. '                   ' → logprob: -10.776968002319336
    5. 'self' → logprob: -10.776968002319336
    6. '               ' → logprob: -12.526968002319336
    7. '[' → logprob: -12.776968002319336
    8. '           ' → logprob: -13.026968002319336
    9. ')
' → logprob: -13.276968002319336
    10. ')`' → logprob: -14.276968002319336

Token 952: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0028057026211172342
    2. '               ' → logprob: -6.627805709838867
    3. 'self' → logprob: -6.877805709838867
    4. '           ' → logprob: -7.877805709838867
    5. '       ' → logprob: -10.127805709838867
    6. '```' → logprob: -11.127805709838867
    7. '                       ' → logprob: -12.252805709838867
    8. '   ' → logprob: -12.252805709838867
    9. '		           ' → logprob: -13.127805709838867
    10. '				' → logprob: -14.127805709838867

Token 953: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.007171993609517813
    2. '                   ' → logprob: -5.007172107696533
    3. '               ' → logprob: -7.757172107696533
    4. ' self' → logprob: -10.757171630859375
    5. '           ' → logprob: -12.007171630859375
    6. '   ' → logprob: -14.132171630859375
    7. '       ' → logprob: -14.632171630859375
    8. '	self' → logprob: -16.382171630859375
    9. '                       ' → logprob: -16.632171630859375
    10. '(self' → logprob: -17.882171630859375

Token 954: '.pos' (ID: 25321)
  Prédit: '.pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pos' → logprob: -2.339278580620885e-06
    2. 'pos' → logprob: -13.250001907348633
    3. '.' → logprob: -14.500001907348633
    4. '	pos' → logprob: -19.125001907348633
    5. ' .' → logprob: -20.750001907348633
    6. ' pos' → logprob: -21.000001907348633
    7. '.position' → logprob: -22.000001907348633
    8. ',pos' → logprob: -22.125001907348633
    9. '[pos' → logprob: -22.500001907348633
    10. '.val' → logprob: -22.625001907348633

Token 955: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.31326448917388916
    2. ' +=' → logprob: -1.3132644891738892
    3. ']+=' → logprob: -13.688264846801758
    4. '+' → logprob: -13.813264846801758
    5. '```' → logprob: -15.563264846801758
    6. '           ' → logprob: -16.063264846801758
    7. '+='' → logprob: -16.938264846801758
    8. ' +' → logprob: -17.063264846801758
    9. '   ' → logprob: -17.438264846801758
    10. ')' → logprob: -17.563264846801758

Token 956: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00029601677670143545
    2. ' ' → logprob: -8.125295639038086
    3. '```' → logprob: -20.750295639038086
    4. '１' → logprob: -21.875295639038086
    5. ' ' → logprob: -22.000295639038086
    6. '   ' → logprob: -22.000295639038086
    7. '۱' → logprob: -22.375295639038086
    8. '
' → logprob: -22.750295639038086
    9. '(' → logprob: -23.000295639038086
    10. '0' → logprob: -23.250295639038086

Token 957: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.625
    3. '```' → logprob: -20.75
    4. '   ' → logprob: -22.25
    5. '
' → logprob: -22.875
    6. '１' → logprob: -23.25
    7. '0' → logprob: -23.25
    8. '(' → logprob: -23.375
    9. '۱' → logprob: -23.375
    10. '' → logprob: -24.3125

Token 958: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.2887667715549469
    2. 'end' → logprob: -1.5387667417526245
    3. '
' → logprob: -4.038766860961914
    4. '```' → logprob: -5.038766860961914
    5. '           ' → logprob: -5.163766860961914
    6. '               ' → logprob: -6.288766860961914
    7. '       ' → logprob: -6.538766860961914
    8. '<|end|>' → logprob: -7.663766860961914
    9. ' end' → logprob: -8.038766860961914
    10. '                    ' → logprob: -8.038766860961914

Token 959: '                   ' (ID: 699)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.38913917541503906
    2. '                   ' → logprob: -1.139139175415039
    3. '           ' → logprob: -7.139139175415039
    4. '       ' → logprob: -7.389139175415039
    5. '               ' → logprob: -7.514139175415039
    6. '```' → logprob: -9.014139175415039
    7. '   ' → logprob: -9.264139175415039
    8. ' end' → logprob: -9.889139175415039
    9. 'return' → logprob: -11.264139175415039
    10. '``' → logprob: -12.264139175415039

Token 960: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' (adapté à ' end') → logprob: -1.0325924449716695e-05
    2. '                   ' → logprob: -11.87501049041748
    3. ' end' → logprob: -13.00001049041748
    4. 'self' → logprob: -14.62501049041748
    5. 'return' → logprob: -15.25001049041748
    6. '```' → logprob: -16.375009536743164
    7. '               ' → logprob: -16.625009536743164
    8. '       ' → logprob: -17.625009536743164
    9. '``' → logprob: -18.125009536743164
    10. '(end' → logprob: -18.125009536743164

Token 961: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1602369248867035
    2. ' =' → logprob: -1.9102369546890259
    3. '=end' → logprob: -11.910237312316895
    4. ',' → logprob: -12.285237312316895
    5. ')' → logprob: -14.660237312316895
    6. '<|end|>' → logprob: -14.910237312316895
    7. '=start' → logprob: -15.535237312316895
    8. '=
' → logprob: -16.160236358642578
    9. '=int' → logprob: -16.660236358642578
    10. '   ' → logprob: -17.160236358642578

Token 962: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.12737582623958588
    2. ' self' → logprob: -2.127375841140747
    3. 'start' → logprob: -7.877375602722168
    4. ' start' → logprob: -9.627375602722168
    5. '                   ' → logprob: -13.377375602722168
    6. '               ' → logprob: -15.252375602722168
    7. ' ' → logprob: -15.502375602722168
    8. 'end' → logprob: -15.877375602722168
    9. '                    ' → logprob: -16.127376556396484
    10. '(self' → logprob: -16.627376556396484

Token 963: '.pos' (ID: 25321)
  Prédit: '.pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pos' → logprob: -0.018151583150029182
    2. 'pos' → logprob: -4.018151760101318
    3. ' pos' → logprob: -14.39315128326416
    4. '.start' → logprob: -14.89315128326416
    5. 'start' → logprob: -14.89315128326416
    6. '[pos' → logprob: -15.64315128326416
    7. '(pos' → logprob: -16.268152236938477
    8. ',pos' → logprob: -16.518152236938477
    9. 'self' → logprob: -16.643152236938477
    10. '	pos' → logprob: -17.143152236938477

Token 964: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.009232042357325554
    2. '               ' → logprob: -5.259232044219971
    3. '           ' → logprob: -6.009232044219971
    4. '       ' → logprob: -7.259232044219971
    5. 'self' → logprob: -7.384232044219971
    6. '		           ' → logprob: -9.759231567382812
    7. '
' → logprob: -10.134231567382812
    8. '                       ' → logprob: -10.759231567382812
    9. '   ' → logprob: -10.759231567382812
    10. '			       ' → logprob: -10.884231567382812

Token 965: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0029414482414722443
    2. 'self' → logprob: -6.002941608428955
    3. '       ' → logprob: -8.502941131591797
    4. '               ' → logprob: -8.877941131591797
    5. '           ' → logprob: -9.502941131591797
    6. '   ' → logprob: -10.127941131591797
    7. '```' → logprob: -12.002941131591797
    8. 'return' → logprob: -14.502941131591797
    9. '                       ' → logprob: -14.752941131591797
    10. '				' → logprob: -14.752941131591797

Token 966: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -4.008129963040119e-06
    2. '                   ' → logprob: -12.500003814697266
    3. ' self' → logprob: -16.500003814697266
    4. '               ' → logprob: -17.000003814697266
    5. '           ' → logprob: -17.375003814697266
    6. '   ' → logprob: -19.375003814697266
    7. '       ' → logprob: -20.000003814697266
    8. '	self' → logprob: -20.125003814697266
    9. 'return' → logprob: -21.875003814697266
    10. '(self' → logprob: -22.500003814697266

Token 967: '.nodes' (ID: 44152)
  Prédit: '.nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.nodes' → logprob: -0.0024769625160843134
    2. 'nodes' → logprob: -6.002477169036865
    3. '	nodes' → logprob: -14.627476692199707
    4. '
' → logprob: -15.377476692199707
    5. ' nodes' → logprob: -15.377476692199707
    6. 's' → logprob: -16.002477645874023
    7. 'self' → logprob: -17.252477645874023
    8. '   ' → logprob: -17.377477645874023
    9. '           ' → logprob: -17.502477645874023
    10. '.tokens' → logprob: -17.627477645874023

Token 968: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -3.4121114822482923e-06
    2. '.' → logprob: -12.750003814697266
    3. '.app' → logprob: -14.875003814697266
    4. 'append' → logprob: -16.000003814697266
    5. '           ' → logprob: -17.375003814697266
    6. '.Append' → logprob: -18.375003814697266
    7. '_append' → logprob: -19.375003814697266
    8. ' .' → logprob: -19.875003814697266
    9. '.extend' → logprob: -19.875003814697266
    10. '	append' → logprob: -20.500003814697266

Token 969: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.4794756770133972
    2. '(start' → logprob: -0.9794756770133972
    3. '(' → logprob: -5.229475498199463
    4. '   ' → logprob: -11.729475975036621
    5. ' (' → logprob: -11.979475975036621
    6. '(end' → logprob: -12.229475975036621
    7. '(Start' → logprob: -12.729475975036621
    8. '(begin' → logprob: -14.104475975036621
    9. '(
' → logprob: -14.354475975036621
    10. '(stop' → logprob: -14.604475975036621

Token 970: 'start' (ID: 5236)
  Prédit: 'start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.00043126524542458355
    2. '(start' → logprob: -7.750431060791016
    3. ' start' → logprob: -14.500431060791016
    4. '[start' → logprob: -16.625431060791016
    5. ',start' → logprob: -18.625431060791016
    6. '	start' → logprob: -19.750431060791016
    7. '=start' → logprob: -20.000431060791016
    8. '(' → logprob: -20.625431060791016
    9. '   ' → logprob: -20.875431060791016
    10. ':start' → logprob: -20.875431060791016

Token 971: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002979240380227566
    2. ',end' → logprob: -8.125297546386719
    3. ' ,' → logprob: -13.875297546386719
    4. ',
' → logprob: -14.875297546386719
    5. '           ' → logprob: -15.750297546386719
    6. 'end' → logprob: -16.00029754638672
    7. '   ' → logprob: -16.37529754638672
    8. '                   ' → logprob: -17.12529754638672
    9. '       ' → logprob: -17.25029754638672
    10. '               ' → logprob: -17.50029754638672

Token 972: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.004078758880496025
    2. ' end' → logprob: -5.5040788650512695
    3. '(end' → logprob: -15.00407886505127
    4. '[end' → logprob: -18.129077911376953
    5. '=end' → logprob: -18.879077911376953
    6. ',end' → logprob: -19.504077911376953
    7. '   ' → logprob: -19.504077911376953
    8. '	end' → logprob: -19.504077911376953
    9. ' ' → logprob: -20.254077911376953
    10. ''end' → logprob: -20.629077911376953

Token 973: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.4894986785948277e-05
    2. '<|end|>' → logprob: -10.500044822692871
    3. ')' → logprob: -12.125044822692871
    4. ',
' → logprob: -12.625044822692871
    5. ' ,' → logprob: -12.750044822692871
    6. ',value' → logprob: -14.125044822692871
    7. '‌,' → logprob: -14.250044822692871
    8. ',val' → logprob: -14.625044822692871
    9. '),' → logprob: -14.750044822692871
    10. '           ' → logprob: -15.250044822692871

Token 974: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.0011706985533237457
    2. ' val' → logprob: -6.751170635223389
    3. '(val' → logprob: -14.626171112060547
    4. '[val' → logprob: -18.376171112060547
    5. '	val' → logprob: -18.876171112060547
    6. ',val' → logprob: -19.126171112060547
    7. '(' → logprob: -20.251171112060547
    8. ' ' → logprob: -21.126171112060547
    9. '   ' → logprob: -21.251171112060547
    10. 'valu' → logprob: -21.376171112060547

Token 975: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -7.779520092299208e-05
    2. ')
' → logprob: -9.500078201293945
    3. '                   ' → logprob: -13.500078201293945
    4. '               ' → logprob: -14.375078201293945
    5. '))' → logprob: -15.125078201293945
    6. '           ' → logprob: -15.625078201293945
    7. ')`' → logprob: -16.000078201293945
    8. '       ' → logprob: -16.125078201293945
    9. ')return' → logprob: -16.125078201293945
    10. '   ' → logprob: -17.250078201293945

Token 976: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.008820666931569576
    2. 'return' → logprob: -4.758820533752441
    3. '               ' → logprob: -9.258820533752441
    4. '       ' → logprob: -10.258820533752441
    5. '   ' → logprob: -10.383820533752441
    6. '           ' → logprob: -10.508820533752441
    7. ' return' → logprob: -11.633820533752441
    8. '```' → logprob: -12.883820533752441
    9. '		           ' → logprob: -13.008820533752441
    10. '				' → logprob: -14.133820533752441

Token 977: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0015694992616772652
    2. '                   ' → logprob: -6.5015692710876465
    3. ' return' → logprob: -9.751569747924805
    4. '               ' → logprob: -12.501569747924805
    5. '           ' → logprob: -12.751569747924805
    6. '       ' → logprob: -13.626569747924805
    7. '   ' → logprob: -14.126569747924805
    8. '	return' → logprob: -14.876569747924805
    9. '                       ' → logprob: -17.376569747924805
    10. '{return' → logprob: -18.126569747924805

Token 978: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.006716674659401178
    2. ' val' → logprob: -5.006716728210449
    3. '(val' → logprob: -13.75671672821045
    4. '   ' → logprob: -15.75671672821045
    5. '	val' → logprob: -16.506715774536133
    6. ' ' → logprob: -17.506715774536133
    7. ',val' → logprob: -18.131715774536133
    8. '  ' → logprob: -18.381715774536133
    9. '[val' → logprob: -18.381715774536133
    10. '_val' → logprob: -18.881715774536133

Token 979: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005314158275723457
    2. '(start' → logprob: -6.005314350128174
    3. ' (' → logprob: -6.630314350128174
    4. ' ,' → logprob: -7.005314350128174
    5. ',start' → logprob: -8.005313873291016
    6. '(' → logprob: -8.630313873291016
    7. '(end' → logprob: -10.130313873291016
    8. ',(' → logprob: -10.505313873291016
    9. ',end' → logprob: -11.130313873291016
    10. ',val' → logprob: -12.380313873291016

Token 980: ' (' (ID: 350)
  Prédit: '(start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(start' → logprob: -0.006761667784303427
    2. ' (' → logprob: -5.00676155090332
    3. '(end' → logprob: -11.00676155090332
    4. '(' → logprob: -11.13176155090332
    5. '(stop' → logprob: -12.38176155090332
    6. '(None' → logprob: -12.88176155090332
    7. '[start' → logprob: -13.25676155090332
    8. '(next' → logprob: -14.38176155090332
    9. '(last' → logprob: -14.38176155090332
    10. '   ' → logprob: -14.38176155090332

Token 981: 'start' (ID: 5236)
  Prédit: 'start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -1.8908587662735954e-05
    2. '(start' → logprob: -11.125019073486328
    3. 'val' → logprob: -12.750019073486328
    4. '(' → logprob: -14.375019073486328
    5. ' start' → logprob: -15.125019073486328
    6. ')' → logprob: -16.375019073486328
    7. '[start' → logprob: -16.375019073486328
    8. 'end' → logprob: -16.500019073486328
    9. '0' → logprob: -17.625019073486328
    10. '   ' → logprob: -17.625019073486328

Token 982: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6042237281799316
    2. 'end' → logprob: -1.1042237281799316
    3. ',end' → logprob: -2.1042237281799316
    4. '(end' → logprob: -10.479223251342773
    5. 'start' → logprob: -11.104223251342773
    6. '0' → logprob: -11.104223251342773
    7. '=end' → logprob: -11.729223251342773
    8. ',start' → logprob: -11.979223251342773
    9. ')' → logprob: -12.479223251342773
    10. ':end' → logprob: -12.729223251342773

Token 983: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -5.438573680294212e-06
    2. ' end' → logprob: -12.500005722045898
    3. 'start' → logprob: -13.500005722045898
    4. '(end' → logprob: -15.500005722045898
    5. '   ' → logprob: -17.8750057220459
    6. ')' → logprob: -18.6250057220459
    7. 'pos' → logprob: -18.7500057220459
    8. '	end' → logprob: -18.8750057220459
    9. ' ' → logprob: -19.6250057220459
    10. '[end' → logprob: -20.0000057220459

Token 984: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -9.610702363715973e-06
    2. ')
' → logprob: -11.625009536743164
    3. '               ' → logprob: -15.625009536743164
    4. ' )' → logprob: -16.000009536743164
    5. '<|end|>' → logprob: -16.125009536743164
    6. ')return' → logprob: -16.375009536743164
    7. '       ' → logprob: -16.750009536743164
    8. '           ' → logprob: -17.125009536743164
    9. '   ' → logprob: -17.500009536743164
    10. '),' → logprob: -18.125009536743164

Token 985: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.031358107924461365
    2. 'parser' → logprob: -3.531358003616333
    3. '   ' → logprob: -7.031358242034912
    4. 'p' → logprob: -7.531358242034912
    5. '        
' → logprob: -10.531357765197754
    6. '
' → logprob: -10.531357765197754
    7. '```' → logprob: -10.531357765197754
    8. '           ' → logprob: -10.781357765197754
    9. 'parse' → logprob: -10.906357765197754
    10. 'def' → logprob: -11.281357765197754

Token 986: ' parser' (ID: 14216)
  Prédit: 'parser'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parser' (adapté à ' parser') → logprob: -0.47183293104171753
    2. '       ' → logprob: -1.2218329906463623
    3. 'while' → logprob: -2.5968329906463623
    4. 'p' → logprob: -5.096832752227783
    5. '   ' → logprob: -7.721832752227783
    6. 'def' → logprob: -8.471833229064941
    7. '```' → logprob: -10.471833229064941
    8. ' parser' → logprob: -10.721833229064941
    9. ' while' → logprob: -10.846833229064941
    10. 'parse' → logprob: -11.346833229064941

Token 987: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3133885860443115
    2. '=' → logprob: -1.3133885860443115
    3. '.' → logprob: -9.06338882446289
    4. '.=' → logprob: -12.68838882446289
    5. ')' → logprob: -13.18838882446289
    6. '(' → logprob: -13.56338882446289
    7. '<|end|>' → logprob: -13.56338882446289
    8. ' =)' → logprob: -14.56338882446289
    9. '<|end|>' → logprob: -15.06338882446289
    10. '=parse' → logprob: -15.18838882446289

Token 988: ' Parser' (ID: 44901)
  Prédit: 'Parser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Parser' → logprob: -1.0206720617134124e-05
    2. ' Parser' → logprob: -11.50001049041748
    3. 'parser' → logprob: -19.875009536743164
    4. '.Parser' → logprob: -21.500009536743164
    5. '(Parser' → logprob: -22.250009536743164
    6. '_parser' → logprob: -23.125009536743164
    7. 'Parsed' → logprob: -23.250009536743164
    8. 'Parse' → logprob: -23.875009536743164
    9. 'Printer' → logprob: -24.250009536743164
    10. 'parse' → logprob: -24.375009536743164

Token 989: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.4741773307323456
    2. 's' → logprob: -0.974177360534668
    3. '       ' → logprob: -9.349177360534668
    4. '(' → logprob: -12.224177360534668
    5. ' s' → logprob: -12.599177360534668
    6. '   ' → logprob: -12.849177360534668
    7. '[s' → logprob: -14.224177360534668
    8. '           ' → logprob: -15.224177360534668
    9. '`s' → logprob: -15.349177360534668
    10. '
' → logprob: -15.474177360534668

Token 990: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.22740301489830017
    2. ')
' → logprob: -1.6024030447006226
    3. '       ' → logprob: -6.227403163909912
    4. '   ' → logprob: -12.227402687072754
    5. ');' → logprob: -12.977402687072754
    6. ')
' → logprob: -13.102402687072754
    7. ').' → logprob: -14.102402687072754
    8. ')

' → logprob: -14.227402687072754
    9. ');
' → logprob: -14.352402687072754
    10. 'parser' → logprob: -14.602402687072754

Token 991: '       ' (ID: 309)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.26791971921920776
    2. '       ' → logprob: -2.1429197788238525
    3. 'parser' → logprob: -2.3929197788238525
    4. 'value' → logprob: -4.142919540405273
    5. 'result' → logprob: -4.892919540405273
    6. 'res' → logprob: -6.267919540405273
    7. '_,' → logprob: -8.267919540405273
    8. 'ret' → logprob: -8.767919540405273
    9. 'v' → logprob: -8.767919540405273
    10. 'while' → logprob: -9.517919540405273

Token 992: ' parser' (ID: 14216)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.0840742290019989
    2. 'parser' (adapté à ' parser') → logprob: -3.0840742588043213
    3. 'res' → logprob: -4.334074020385742
    4. 'result' → logprob: -4.459074020385742
    5. 'value' → logprob: -4.834074020385742
    6. '_' → logprob: -7.459074020385742
    7. 'v' → logprob: -7.584074020385742
    8. '_,' → logprob: -7.959074020385742
    9. 'root' → logprob: -8.584074020385742
    10. 'while' → logprob: -8.834074020385742

Token 993: '.parse' (ID: 7259)
  Prédit: '.parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parse' → logprob: -0.00013381359167397022
    2. '.' → logprob: -9.000133514404297
    3. 'parse' → logprob: -11.750133514404297
    4. '=parse' → logprob: -14.500133514404297
    5. '.pos' → logprob: -15.000133514404297
    6. '.parser' → logprob: -15.375133514404297
    7. '.run' → logprob: -15.625133514404297
    8. ' .' → logprob: -15.750133514404297
    9. '.Parse' → logprob: -16.000133514404297
    10. '.val' → logprob: -16.875133514404297

Token 994: '_E' (ID: 6584)
  Prédit: '_E'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_E' → logprob: -0.0006267757853493094
    2. 'E' → logprob: -7.375626564025879
    3. '_EOL' → logprob: -16.500627517700195
    4. '\E' → logprob: -17.125627517700195
    5. '	E' → logprob: -17.375627517700195
    6. '<E' → logprob: -17.750627517700195
    7. '```' → logprob: -17.750627517700195
    8. '\' → logprob: -17.875627517700195
    9. '(E' → logprob: -18.500627517700195
    10. '`' → logprob: -18.750627517700195

Token 995: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0196502935141325
    2. '<|end|>' → logprob: -4.019650459289551
    3. '()
' → logprob: -7.019650459289551
    4. '       ' → logprob: -8.26965045928955
    5. '();' → logprob: -9.26965045928955
    6. '<|end|>' → logprob: -9.39465045928955
    7. '#' → logprob: -10.01965045928955
    8. '(' → logprob: -10.26965045928955
    9. '())' → logprob: -11.01965045928955
    10. '
' → logprob: -11.14465045928955

Token 996: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5817835927009583
    2. 'count' → logprob: -0.8317835927009583
    3. 'print' → logprob: -5.956783771514893
    4. 'counts' → logprob: -6.581783771514893
    5. '   ' → logprob: -7.206783771514893
    6. 'result' → logprob: -7.206783771514893
    7. 'from' → logprob: -9.456783294677734
    8. 'counter' → logprob: -9.456783294677734
    9. 'cnt' → logprob: -9.706783294677734
    10. 'answer' → logprob: -9.706783294677734

Token 997: ' #' (ID: 1069)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.1750217080116272
    2. 'print' → logprob: -2.4250216484069824
    3. 'cnt' → logprob: -3.4250216484069824
    4. 'result' → logprob: -3.9250216484069824
    5. 'ans' → logprob: -5.050021648406982
    6. 'res' → logprob: -5.300021648406982
    7. '       ' → logprob: -5.550021648406982
    8. 'answer' → logprob: -5.675021648406982
    9. 'counter' → logprob: -7.425021648406982
    10. 'from' → logprob: -8.67502212524414

Token 998: ' Count' (ID: 6789)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.09117317199707031
    2. 'print' → logprob: -2.8411731719970703
    3. 'cnt' → logprob: -4.59117317199707
    4. '       ' → logprob: -4.71617317199707
    5. 'result' → logprob: -4.96617317199707
    6. 'ans' → logprob: -6.71617317199707
    7. 'answer' → logprob: -7.21617317199707
    8. 'res' → logprob: -7.46617317199707
    9. 'counter' → logprob: -9.34117317199707
    10. '   ' → logprob: -10.21617317199707

Token 999: ' how' (ID: 1495)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.21703538298606873
    2. 'cnt' → logprob: -1.9670354127883911
    3. 'counter' → logprob: -3.7170352935791016
    4. 'ans' → logprob: -4.217035293579102
    5. 'result' → logprob: -4.842035293579102
    6. 'res' → logprob: -5.592035293579102
    7. '       ' → logprob: -5.967035293579102
    8. 'answer' → logprob: -6.342035293579102
    9. 'counts' → logprob: -8.842035293579102
    10. '
' → logprob: -10.842035293579102

Token 1000: ' many' (ID: 1991)
  Prédit: 'many'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'many' → logprob: -0.06382077187299728
    2. ' many' → logprob: -2.8138208389282227
    3. '       ' → logprob: -6.313820838928223
    4. '_many' → logprob: -10.813820838928223
    5. '=' → logprob: -11.313820838928223
    6. '   ' → logprob: -12.813820838928223
    7. '           ' → logprob: -13.438820838928223
    8. 'Many' → logprob: -13.688820838928223
    9. '        ' → logprob: -14.063820838928223
    10. '#' → logprob: -15.188820838928223

Token 1001: ' nodes' (ID: 15749)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.06709888577461243
    2. 'cnt' → logprob: -3.44209885597229
    3. 'result' → logprob: -4.192099094390869
    4. 'print' → logprob: -4.817099094390869
    5. '       ' → logprob: -5.317099094390869
    6. 'ans' → logprob: -6.317099094390869
    7. 'res' → logprob: -6.567099094390869
    8. 'answer' → logprob: -6.942099094390869
    9. 'counter' → logprob: -8.067098617553711
    10. 'nodes' → logprob: -8.942098617553711

Token 1002: ' have' (ID: 679)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8139257431030273
    2. 'with' → logprob: -1.0639257431030273
    3. ' =' → logprob: -2.3139257431030273
    4. '       ' → logprob: -3.1889257431030273
    5. 'equal' → logprob: -3.4389257431030273
    6. 'count' → logprob: -3.5639257431030273
    7. 'match' → logprob: -5.938925743103027
    8. 'equals' → logprob: -6.563925743103027
    9. 'answer' → logprob: -6.688925743103027
    10. 'result' → logprob: -7.063925743103027

Token 1003: ' value' (ID: 1432)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.005149673670530319
    2. ' value' → logprob: -5.880149841308594
    3. 'val' → logprob: -6.255149841308594
    4. 'node' → logprob: -8.005149841308594
    5. '```' → logprob: -10.005149841308594
    6. '
' → logprob: -11.880149841308594
    7. 'v' → logprob: -12.130149841308594
    8. '[' → logprob: -12.130149841308594
    9. '   ' → logprob: -12.255149841308594
    10. ' val' → logprob: -13.005149841308594

Token 1004: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.006193388253450394
    2. ' ==' → logprob: -6.006193161010742
    3. '==
' → logprob: -6.631193161010742
    4. 'equal' → logprob: -7.006193161010742
    5. '=' → logprob: -7.256193161010742
    6. '```' → logprob: -7.756193161010742
    7. 'with' → logprob: -8.881193161010742
    8. '_equal' → logprob: -9.881193161010742
    9. ' =' → logprob: -10.506193161010742
    10. '       ' → logprob: -10.506193161010742

Token 1005: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -9.615255839889869e-05
    2. ' n' → logprob: -9.250096321105957
    3. '       ' → logprob: -18.87509536743164
    4. '
' → logprob: -19.50009536743164
    5. '```' → logprob: -19.87509536743164
    6. '   ' → logprob: -20.00009536743164
    7. '	n' → logprob: -20.12509536743164
    8. '(n' → logprob: -21.37509536743164
    9. '$n' → logprob: -21.87509536743164
    10. '_n' → logprob: -21.87509536743164

Token 1006: '
' (ID: 198)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.1482251137495041
    2. '       ' → logprob: -2.7732250690460205
    3. 'cnt' → logprob: -3.1482250690460205
    4. 'ans' → logprob: -4.6482253074646
    5. 'answer' → logprob: -4.7732253074646
    6. 'result' → logprob: -4.8982253074646
    7. 'counter' → logprob: -5.2732253074646
    8. 'res' → logprob: -7.1482253074646
    9. '
' → logprob: -7.2732253074646
    10. '```' → logprob: -8.898224830627441

Token 1007: '       ' (ID: 309)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.06595886498689651
    2. '       ' → logprob: -3.1909589767456055
    3. 'cnt' → logprob: -4.8159589767456055
    4. 'answer' → logprob: -5.3159589767456055
    5. 'result' → logprob: -5.6909589767456055
    6. '```' → logprob: -5.8159589767456055
    7. 'ans' → logprob: -6.5659589767456055
    8. '
' → logprob: -6.9409589767456055
    9. 'counter' → logprob: -7.3159589767456055
    10. 'res' → logprob: -9.065958976745605

Token 1008: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.02647155150771141
    2. 'cnt' → logprob: -4.0264716148376465
    3. 'result' → logprob: -5.7764716148376465
    4. '       ' → logprob: -6.4014716148376465
    5. 'ans' → logprob: -6.5264716148376465
    6. 'answer' → logprob: -6.7764716148376465
    7. 'counter' → logprob: -7.4014716148376465
    8. 'res' → logprob: -8.651471138000488
    9. 'print' → logprob: -9.526471138000488
    10. '```' → logprob: -9.901471138000488

Token 1009: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10022036731243134
    2. '=' → logprob: -2.3502204418182373
    3. ' +=' → logprob: -11.350220680236816
    4. '+=' → logprob: -15.100220680236816
    5. ' ' → logprob: -15.350220680236816
    6. ' ' → logprob: -15.725220680236816
    7. ')' → logprob: -15.725220680236816
    8. '   ' → logprob: -15.725220680236816
    9. '_' → logprob: -16.1002197265625
    10. '    ' → logprob: -16.2252197265625

Token 1010: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007031376590020955
    2. 'sum' → logprob: -7.75070333480835
    3. ' ' → logprob: -8.375702857971191
    4. ' sum' → logprob: -10.125702857971191
    5. 'parser' → logprob: -13.625702857971191
    6. 's' → logprob: -14.625702857971191
    7. '   ' → logprob: -15.250702857971191
    8. '       ' → logprob: -16.875703811645508
    9. '```' → logprob: -16.875703811645508
    10. ' ' → logprob: -17.625703811645508

Token 1011: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.16023214161396027
    2. 'sum' → logprob: -1.9102321863174438
    3. ' sum' → logprob: -11.785232543945312
    4. 'parser' → logprob: -15.910232543945312
    5. 'len' → logprob: -16.035232543945312
    6. ' ' → logprob: -16.410232543945312
    7. '(sum' → logprob: -17.785232543945312
    8. '   ' → logprob: -17.910232543945312
    9. '```' → logprob: -18.035232543945312
    10. '1' → logprob: -18.660232543945312

Token 1012: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.011201432906091213
    2. '       ' → logprob: -4.51120138168335
    3. ' for' → logprob: -9.011201858520508
    4. '
' → logprob: -10.511201858520508
    5. '```' → logprob: -12.886201858520508
    6. '   ' → logprob: -13.886201858520508
    7. '	for' → logprob: -14.761201858520508
    8. '        
' → logprob: -15.386201858520508
    9. '``' → logprob: -16.011201858520508
    10. '<|end|>' → logprob: -17.636201858520508

Token 1013: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.31354594230651855
    2. '       ' → logprob: -1.3135459423065186
    3. ' for' → logprob: -8.313546180725098
    4. '   ' → logprob: -10.938546180725098
    5. '```' → logprob: -11.063546180725098
    6. '
' → logprob: -12.813546180725098
    7. '	for' → logprob: -13.563546180725098
    8. '           ' → logprob: -14.688546180725098
    9. '``' → logprob: -14.813546180725098
    10. '        
' → logprob: -15.938546180725098

Token 1014: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -5.512236498361744e-07
    2. ' for' → logprob: -15.250000953674316
    3. '
' → logprob: -16.0
    4. '```' → logprob: -16.0
    5. '       ' → logprob: -17.25
    6. '   ' → logprob: -21.625
    7. '	for' → logprob: -21.75
    8. '``' → logprob: -21.875
    9. '        
' → logprob: -23.875
    10. '           ' → logprob: -24.25

Token 1015: ' st' (ID: 420)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.003341690404340625
    2. '(start' → logprob: -5.7533416748046875
    3. ' start' → logprob: -9.253341674804688
    4. 'node' → logprob: -10.378341674804688
    5. 'st' → logprob: -10.753341674804688
    6. 'l' → logprob: -11.253341674804688
    7. '(st' → logprob: -13.503341674804688
    8. 's' → logprob: -15.128341674804688
    9. '(l' → logprob: -15.253341674804688
    10. '_start' → logprob: -15.378341674804688

Token 1016: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004178479313850403
    2. 'art' → logprob: -5.504178524017334
    3. ',pos' → logprob: -10.629178047180176
    4. 'r' → logprob: -10.879178047180176
    5. ' ,' → logprob: -11.004178047180176
    6. ',start' → logprob: -11.379178047180176
    7. '_,' → logprob: -12.129178047180176
    8. ',end' → logprob: -12.504178047180176
    9. ',r' → logprob: -12.754178047180176
    10. 'arts' → logprob: -13.379178047180176

Token 1017: ' en' (ID: 469)
  Prédit: 'en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.49796921014785767
    2. 'end' → logprob: -0.9979692101478577
    3. 'ed' → logprob: -3.747969150543213
    4. 'et' → logprob: -11.122969627380371
    5. 'e' → logprob: -11.247969627380371
    6. ' en' → logprob: -11.372969627380371
    7. ' end' → logprob: -13.622969627380371
    8. 'er' → logprob: -13.997969627380371
    9. 'ev' → logprob: -14.622969627380371
    10. 'nd' → logprob: -15.122969627380371

Token 1018: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00113176298327744
    2. ',val' → logprob: -7.501131534576416
    3. ',value' → logprob: -7.876131534576416
    4. ',v' → logprob: -9.001132011413574
    5. ' ,' → logprob: -11.126132011413574
    6. ',en' → logprob: -11.751132011413574
    7. ',c' → logprob: -12.001132011413574
    8. ',int' → logprob: -12.001132011413574
    9. ',count' → logprob: -12.251132011413574
    10. ',user' → logprob: -12.376132011413574

Token 1019: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.00038693982060067356
    2. ' val' → logprob: -8.250387191772461
    3. 'v' → logprob: -9.000387191772461
    4. 'value' → logprob: -13.750387191772461
    5. 'va' → logprob: -13.750387191772461
    6. 'vl' → logprob: -16.25038719177246
    7. '	val' → logprob: -17.75038719177246
    8. 'valu' → logprob: -18.25038719177246
    9. ' v' → logprob: -18.62538719177246
    10. '_val' → logprob: -18.75038719177246

Token 1020: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.16030952334403992
    2. 'in' → logprob: -1.9103095531463623
    3. ',' → logprob: -9.785309791564941
    4. '==' → logprob: -11.660309791564941
    5. '```' → logprob: -12.160309791564941
    6. '	in' → logprob: -12.785309791564941
    7. '       ' → logprob: -12.910309791564941
    8. '        ' → logprob: -13.160309791564941
    9. '_in' → logprob: -13.660309791564941
    10. ')' → logprob: -13.910309791564941

Token 1021: ' parser' (ID: 14216)
  Prédit: 'parser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parser' → logprob: -0.0001239196863025427
    2. ' parser' → logprob: -9.000123977661133
    3. '   ' → logprob: -15.250123977661133
    4. ' ' → logprob: -15.875123977661133
    5. '(parser' → logprob: -16.250123977661133
    6. '       ' → logprob: -18.500123977661133
    7. '	parser' → logprob: -18.625123977661133
    8. '  ' → logprob: -18.625123977661133
    9. '    ' → logprob: -19.125123977661133
    10. '
' → logprob: -19.250123977661133

Token 1022: '.nodes' (ID: 44152)
  Prédit: '.nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.nodes' → logprob: -0.20142397284507751
    2. 'nodes' → logprob: -1.7014240026474
    3. '	nodes' → logprob: -12.951423645019531
    4. '   ' → logprob: -13.076423645019531
    5. ' nodes' → logprob: -13.451423645019531
    6. '_nodes' → logprob: -13.451423645019531
    7. '.' → logprob: -13.951423645019531
    8. '(nodes' → logprob: -14.451423645019531
    9. 's' → logprob: -14.701423645019531
    10. 'parse' → logprob: -15.201423645019531

Token 1023: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2512800395488739
    2. '       ' → logprob: -2.7512800693511963
    3. ':
' → logprob: -2.8762800693511963
    4. 'if' → logprob: -3.5012800693511963
    5. ' if' → logprob: -3.6262800693511963
    6. '           ' → logprob: -3.7512800693511963
    7. '```' → logprob: -4.876279830932617
    8. ' in' → logprob: -5.876279830932617
    9. ',' → logprob: -6.126279830932617
    10. '   ' → logprob: -6.251279830932617

Token 1024: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01544973999261856
    2. ' if' → logprob: -4.890449523925781
    3. 'if' → logprob: -5.015449523925781
    4. '```' → logprob: -6.890449523925781
    5. '       ' → logprob: -9.640449523925781
    6. '   ' → logprob: -10.140449523925781
    7. '<|end|>' → logprob: -10.265449523925781
    8. '          ' → logprob: -12.265449523925781
    9. '<|end|>' → logprob: -12.765449523925781
    10. '``' → logprob: -12.765449523925781

Token 1025: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.07423289120197296
    2. '           ' → logprob: -3.074232816696167
    3. ' if' → logprob: -3.699232816696167
    4. '               ' → logprob: -7.574233055114746
    5. '```' → logprob: -10.449233055114746
    6. '       ' → logprob: -11.199233055114746
    7. '   ' → logprob: -11.449233055114746
    8. '	       ' → logprob: -12.199233055114746
    9. '	if' → logprob: -14.199233055114746
    10. '                   ' → logprob: -14.324233055114746

Token 1026: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.47407805919647217
    2. ' val' → logprob: -0.9740780591964722
    3. '           ' → logprob: -14.099078178405762
    4. '	val' → logprob: -15.849078178405762
    5. '(val' → logprob: -16.599077224731445
    6. '            ' → logprob: -17.099077224731445
    7. '[val' → logprob: -17.974077224731445
    8. '.val' → logprob: -18.849077224731445
    9. ',val' → logprob: -18.974077224731445
    10. '_val' → logprob: -19.224077224731445

Token 1027: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.20142649114131927
    2. '==' → logprob: -1.7014265060424805
    3. '==
' → logprob: -12.45142650604248
    4. ')==' → logprob: -12.82642650604248
    5. '=' → logprob: -12.95142650604248
    6. '()==' → logprob: -13.95142650604248
    7. '```' → logprob: -14.07642650604248
    8. ')' → logprob: -14.70142650604248
    9. ' ==
' → logprob: -14.70142650604248
    10. ' ' → logprob: -15.07642650604248

Token 1028: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.008615042082965374
    2. ' n' → logprob: -4.758615016937256
    3. '   ' → logprob: -15.258615493774414
    4. '	n' → logprob: -15.383615493774414
    5. '           ' → logprob: -16.758615493774414
    6. '       ' → logprob: -17.008615493774414
    7. '```' → logprob: -18.133615493774414
    8. '_n' → logprob: -18.258615493774414
    9. ')n' → logprob: -18.883615493774414
    10. '
' → logprob: -19.008615493774414

Token 1029: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01733039878308773
    2. ':
' → logprob: -4.767330169677734
    3. '           ' → logprob: -5.517330169677734
    4. ':' → logprob: -5.517330169677734
    5. '              ' → logprob: -8.642330169677734
    6. ',' → logprob: -9.267330169677734
    7. '<|end|>' → logprob: -9.517330169677734
    8. '):
' → logprob: -9.767330169677734
    9. '	           ' → logprob: -10.017330169677734
    10. '	       ' → logprob: -10.142330169677734

Token 1030: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0005288454121910036
    2. '           ' → logprob: -8.125529289245605
    3. 'count' → logprob: -9.000529289245605
    4. '   ' → logprob: -10.750529289245605
    5. '              ' → logprob: -11.000529289245605
    6. '       ' → logprob: -11.125529289245605
    7. '                   ' → logprob: -11.375529289245605
    8. '	       ' → logprob: -11.625529289245605
    9. '	           ' → logprob: -11.750529289245605
    10. '```' → logprob: -11.875529289245605

Token 1031: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -8.709308167453855e-05
    2. '               ' → logprob: -9.875086784362793
    3. ' count' → logprob: -11.250086784362793
    4. '                   ' → logprob: -11.250086784362793
    5. '```' → logprob: -12.125086784362793
    6. '	count' → logprob: -14.250086784362793
    7. '+' → logprob: -14.500086784362793
    8. '
' → logprob: -14.625086784362793
    9. '           ' → logprob: -14.875086784362793
    10. '[count' → logprob: -15.000086784362793

Token 1032: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.001079014502465725
    2. ' +=' → logprob: -6.876079082489014
    3. '+' → logprob: -11.126078605651855
    4. '=' → logprob: -11.126078605651855
    5. ']+=' → logprob: -11.751078605651855
    6. '               ' → logprob: -12.501078605651855
    7. '           ' → logprob: -12.751078605651855
    8. '                   ' → logprob: -13.876078605651855
    9. '```' → logprob: -14.376078605651855
    10. '            ' → logprob: -16.501079559326172

Token 1033: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '   ' → logprob: -19.875001907348633
    4. '+' → logprob: -21.375001907348633
    5. '```' → logprob: -21.625001907348633
    6. '
' → logprob: -22.750001907348633
    7. '       ' → logprob: -23.625001907348633
    8. '           ' → logprob: -23.875001907348633
    9. '１' → logprob: -24.375001907348633
    10. ' ' → logprob: -24.750001907348633

Token 1034: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -19.0
    3. '
' → logprob: -22.0
    4. '```' → logprob: -22.25
    5. '   ' → logprob: -22.5
    6. '１' → logprob: -23.375
    7. '+' → logprob: -23.75
    8. '`' → logprob: -24.5
    9. 'sys' → logprob: -24.625
    10. '۱' → logprob: -24.8125

Token 1035: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4887232482433319
    2. 'print' → logprob: -0.9887232780456543
    3. '
' → logprob: -4.738723278045654
    4. '   ' → logprob: -5.488723278045654
    5. '```' → logprob: -6.488723278045654
    6. '<|end|>' → logprob: -9.863722801208496
    7. ' print' → logprob: -10.613722801208496
    8. '``' → logprob: -10.863722801208496
    9. '        
' → logprob: -10.988722801208496
    10. '\' → logprob: -12.238722801208496

Token 1036: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.33528396487236023
    2. 'print' → logprob: -1.3352839946746826
    3. '   ' → logprob: -3.8352839946746826
    4. '
' → logprob: -9.210284233093262
    5. '```' → logprob: -9.585284233093262
    6. ' print' → logprob: -11.335284233093262
    7. '	print' → logprob: -13.210284233093262
    8. '        
' → logprob: -13.335284233093262
    9. '    
' → logprob: -13.960284233093262
    10. '           ' → logprob: -15.085284233093262

Token 1037: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0019969160202890635
    2. '       ' → logprob: -6.251996994018555
    3. '   ' → logprob: -10.251996994018555
    4. '```' → logprob: -10.376996994018555
    5. ' print' → logprob: -13.626996994018555
    6. '
' → logprob: -14.751996994018555
    7. '	print' → logprob: -15.501996994018555
    8. '``' → logprob: -16.751996994018555
    9. 'printf' → logprob: -17.251996994018555
    10. '        
' → logprob: -17.876996994018555

Token 1038: '(count' (ID: 25892)
  Prédit: '(count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(count' → logprob: -4.56102097814437e-05
    2. 'count' → logprob: -10.000045776367188
    3. '(' → logprob: -16.375045776367188
    4. '[count' → logprob: -19.500045776367188
    5. '=count' → logprob: -19.875045776367188
    6. ',count' → logprob: -20.375045776367188
    7. '$count' → logprob: -20.625045776367188
    8. '(cnt' → logprob: -20.875045776367188
    9. '(
' → logprob: -20.875045776367188
    10. ' count' → logprob: -21.000045776367188

Token 1039: ')


' (ID: 7861)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00015538577281404287
    2. '())' → logprob: -9.125155448913574
    3. '()' → logprob: -10.625155448913574
    4. ')
' → logprob: -11.375155448913574
    5. '   ' → logprob: -12.750155448913574
    6. '<|end|>' → logprob: -13.125155448913574
    7. ' )' → logprob: -13.625155448913574
    8. '       ' → logprob: -13.625155448913574
    9. '```' → logprob: -14.125155448913574
    10. '`)' → logprob: -14.625155448913574

Token 1040: 'thread' (ID: 9817)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1041: 'ing' (ID: 289)
  Prédit: 'ing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ing' → logprob: -0.5085416436195374
    2. 'ading' → logprob: -1.0085415840148926
    3. 'reading' → logprob: -3.6335415840148926
    4. 'ad' → logprob: -5.008541584014893
    5. 'ads' → logprob: -8.13354206085205
    6. 'heading' → logprob: -9.00854206085205
    7. '```' → logprob: -9.38354206085205
    8. 'read' → logprob: -10.25854206085205
    9. 'd' → logprob: -10.50854206085205
    10. 'import' → logprob: -10.50854206085205

Token 1042: '.Thread' (ID: 15531)
  Prédit: '.Thread'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.Thread' → logprob: -0.47526273131370544
    2. '.' → logprob: -0.9752627611160278
    3. '.stack' → logprob: -7.600262641906738
    4. '.thread' → logprob: -8.225262641906738
    5. '.start' → logprob: -8.850262641906738
    6. '.mainloop' → logprob: -9.600262641906738
    7. '.
' → logprob: -9.725262641906738
    8. '.Threading' → logprob: -10.225262641906738
    9. '```' → logprob: -10.475262641906738
    10. ' .' → logprob: -11.475262641906738

Token 1043: '(target' (ID: 16247)
  Prédit: '(target'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(target' → logprob: -0.0067771850153803825
    2. '().' → logprob: -5.256777286529541
    3. '(' → logprob: -7.131777286529541
    4. 'target' → logprob: -7.756777286529541
    5. '()' → logprob: -8.256776809692383
    6. '(
' → logprob: -11.131776809692383
    7. '.start' → logprob: -11.631776809692383
    8. '(start' → logprob: -11.631776809692383
    9. '.target' → logprob: -11.881776809692383
    10. ' target' → logprob: -12.756776809692383

Token 1044: '=' (ID: 28)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.005256764590740204
    2. '(main' → logprob: -5.255256652832031
    3. 'target' → logprob: -11.380256652832031
    4. ' main' → logprob: -11.755256652832031
    5. '(target' → logprob: -12.630256652832031
    6. '_main' → logprob: -16.13025665283203
    7. '	main' → logprob: -16.25525665283203
    8. '.main' → logprob: -16.75525665283203
    9. 'Main' → logprob: -17.00525665283203
    10. ')' → logprob: -18.25525665283203

Token 1045: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -1.9361264946837764e-07
    2. ' main' → logprob: -16.25
    3. '	main' → logprob: -21.5
    4. '(main' → logprob: -22.5
    5. 'Main' → logprob: -23.75
    6. '.main' → logprob: -24.375
    7. '_main' → logprob: -25.625
    8. '
' → logprob: -26.125
    9. 'target' → logprob: -26.5
    10. 'mainwindow' → logprob: -26.625

Token 1046: ',' (ID: 11)
  Prédit: ').'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -0.00012892624363303185
    2. ')' → logprob: -9.125128746032715
    3. ',' → logprob: -11.625128746032715
    4. '()).' → logprob: -11.625128746032715
    5. '()' → logprob: -14.000128746032715
    6. '   ' → logprob: -15.500128746032715
    7. '().' → logprob: -15.500128746032715
    8. '```' → logprob: -15.625128746032715
    9. ',start' → logprob: -15.875128746032715
    10. '(' → logprob: -15.875128746032715

Token 1047: ').' (ID: 741)
  Prédit: ').'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -4.632542913896032e-05
    2. 'daemon' → logprob: -10.125046730041504
    3. ')' → logprob: -12.625046730041504
    4. 'args' → logprob: -13.375046730041504
    5. 'target' → logprob: -14.750046730041504
    6. 'name' → logprob: -14.750046730041504
    7. '   ' → logprob: -15.375046730041504
    8. 'start' → logprob: -15.875046730041504
    9. ' ).' → logprob: -16.500045776367188
    10. '()).' → logprob: -16.875045776367188

Token 1048: 'start' (ID: 5236)
  Prédit: 'start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -9.014684110297821e-06
    2. 'run' → logprob: -11.750008583068848
    3. ')' → logprob: -14.500008583068848
    4. '```' → logprob: -14.875008583068848
    5. ' start' → logprob: -15.750008583068848
    6. ').' → logprob: -16.250009536743164
    7. '(start' → logprob: -19.250009536743164
    8. 'join' → logprob: -19.375009536743164
    9. '	start' → logprob: -19.500009536743164
    10. '.start' → logprob: -19.500009536743164

Token 1049: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1047
Tokens correctement prédits (1ère position, stricte): 320
Tokens correctement prédits (1ère position, avec adaptation): 357
Tokens correctement prédits (top 10): 736
Précision stricte (1ère position): 30.56%
Précision adaptée (1ère position): 34.10%
Précision (top 10): 70.30%
================================================================================
