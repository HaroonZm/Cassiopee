================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:32:29
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
class TradeBalanceAnalyzer:
    """
    Abstract base class for analyzing trade balance data streams.
    Designed for extensibility to support multiple analysis strategies.
    """

    def __init__(self, data_stream):
        """
        Initialize with data stream representing net inflow per nanosecond
        Args:
            data_stream (List[int]): List of integers indicating net data flow per nanosecond.
        """
        self.data_stream = data_stream

    def analyze(self):
        """
        Analyze the data stream to find the longest interval with zero sum.
        This method must be overridden by subclasses.
        Returns:
            int: Length of the longest subinterval with sum zero.
        """
        raise NotImplementedError("Subclasses should implement this!")


class PrefixSumBalanceAnalyzer(TradeBalanceAnalyzer):
    """
    Implements zero-sum longest subarray detection using prefix sums and hashing.
    """

    def analyze(self):
        # Dictionary to store earliest index of each prefix sum encountered
        prefix_index_map = dict()
        prefix_index_map[0] = -1  # prefix sum zero before array start

        max_len = 0
        prefix_sum = 0

        for i, val in enumerate(self.data_stream):
            prefix_sum += val
            if prefix_sum in prefix_index_map:
                # Calculate subarray length between previous occurrence and current
                subarray_len = i - prefix_index_map[prefix_sum]
                if subarray_len > max_len:
                    max_len = subarray_len
            else:
                prefix_index_map[prefix_sum] = i

        return max_len


class TradeDataInputParser:
    """
    Parses input according to the problem specification from standard input.
    Encapsulates input parsing for easier future input source extensions.
    """

    @staticmethod
    def parse():
        import sys
        input = sys.stdin.readline
        N_raw = input()
        while N_raw.strip() == '':
            N_raw = input()
        N = int(N_raw.strip())

        data = []
        read_count = 0
        while read_count < N:
            line = input()
            if line.strip() == '':
                continue
            data.append(int(line.strip()))
            read_count += 1

        return data


class LongestZeroSumIntervalSolution:
    """
    Orchestrates the full solution pipeline:
        input parsing -> analysis -> output
    """

    def __init__(self):
        self.data_stream = []

    def run(self):
        self._parse_input()
        analyzer = PrefixSumBalanceAnalyzer(self.data_stream)
        result = analyzer.analyze()
        self._output_result(result)

    def _parse_input(self):
        parser = TradeDataInputParser()
        self.data_stream = parser.parse()

    def _output_result(self, longest_length: int):
        print(longest_length)


if __name__ == "__main__":
    solution = LongestZeroSumIntervalSolution()
    solution.run()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'class' (ID: 1444)
  → Token d'amorce (pas de prédiction)

Token 1: ' Trade' (ID: 24794)
  → Token d'amorce (pas de prédiction)

Token 2: 'Balance' (ID: 20996)
  → Token d'amorce (pas de prédiction)

Token 3: 'Analyzer' (ID: 61604)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.058813076466321945
    2. '(' → logprob: -3.4338130950927734
    3. '{' → logprob: -4.058813095092773
    4. '.' → logprob: -4.933813095092773
    5. '(:' → logprob: -8.433813095092773
    6. '```' → logprob: -10.058813095092773
    7. ' {' → logprob: -10.308813095092773
    8. ' :' → logprob: -10.683813095092773
    9. '():' → logprob: -11.433813095092773
    10. '.:' → logprob: -11.683813095092773

Token 4: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12308687716722488
    2. '(' → logprob: -2.498086929321289
    3. '.' → logprob: -3.873086929321289
    4. '{' → logprob: -4.373086929321289
    5. '(:' → logprob: -9.998086929321289
    6. ' {' → logprob: -10.623086929321289
    7. '[' → logprob: -11.123086929321289
    8. '```' → logprob: -11.248086929321289
    9. ' :' → logprob: -11.498086929321289
    10. ' ' → logprob: -11.873086929321289

Token 5: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14174282550811768
    2. '(' → logprob: -2.766742706298828
    3. '   ' → logprob: -2.891742706298828
    4. '```' → logprob: -4.766742706298828
    5. ':
' → logprob: -6.141742706298828
    6. '.' → logprob: -7.391742706298828
    7. '\' → logprob: -7.516742706298828
    8. '(
' → logprob: -7.766742706298828
    9. '():' → logprob: -8.391742706298828
    10. '    ' → logprob: -8.391742706298828

Token 6: ' """
' (ID: 7037)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.160134196281433
    2. '   ' → logprob: -1.160134196281433
    3. '    ' → logprob: -1.160134196281433
    4. '    
' → logprob: -4.410134315490723
    5. ' 
' → logprob: -4.535134315490723
    6. '```' → logprob: -4.910134315490723
    7. '     
' → logprob: -5.410134315490723
    8. '       ' → logprob: -5.660134315490723
    9. '\n' → logprob: -5.910134315490723
    10. '(' → logprob: -6.035134315490723

Token 7: '   ' (ID: 271)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.6581400036811829
    2. 'Analy' → logprob: -1.033139944076538
    3. 'Analyze' → logprob: -2.533139944076538
    4. 'A' → logprob: -4.783140182495117
    5. ' """' → logprob: -4.783140182495117
    6. 'T' → logprob: -5.283140182495117
    7. 'Calculate' → logprob: -5.658140182495117
    8. 'This' → logprob: -5.783140182495117
    9. '   ' → logprob: -5.908140182495117
    10. 'Detect' → logprob: -6.033140182495117

Token 8: ' Abstract' (ID: 17413)
  Prédit: 'Analy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Analy' → logprob: -0.3218519687652588
    2. '"""' → logprob: -1.8218519687652588
    3. 'Analyze' → logprob: -2.696851968765259
    4. 'Class' → logprob: -4.94685173034668
    5. 'Trade' → logprob: -5.07185173034668
    6. 'This' → logprob: -5.07185173034668
    7. 'Detect' → logprob: -5.32185173034668
    8. 'Calcul' → logprob: -5.57185173034668
    9. 'Calculate' → logprob: -5.57185173034668
    10. 'An' → logprob: -5.82185173034668

Token 9: ' base' (ID: 3611)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.26522499322891235
    2. '   ' → logprob: -2.5152249336242676
    3. ' class' → logprob: -3.3902249336242676
    4. '(' → logprob: -3.6402249336242676
    5. 'C' → logprob: -3.7652249336242676
    6. '  ' → logprob: -4.015224933624268
    7. '```' → logprob: -4.515224933624268
    8. 'class' → logprob: -5.015224933624268
    9. '_' → logprob: -5.140224933624268
    10. 'T' → logprob: -5.640224933624268

Token 10: ' class' (ID: 744)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9744435548782349
    2. 'class' → logprob: -1.0994435548782349
    3. ' class' → logprob: -1.4744435548782349
    4. '   ' → logprob: -3.5994434356689453
    5. '  ' → logprob: -4.099443435668945
    6. '_' → logprob: -5.349443435668945
    7. '```' → logprob: -5.724443435668945
    8. '<class' → logprob: -5.849443435668945
    9. ' 
' → logprob: -6.724443435668945
    10. '    ' → logprob: -7.224443435668945

Token 11: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3453713059425354
    2. ' for' → logprob: -1.5953712463378906
    3. '```' → logprob: -2.9703712463378906
    4. '<|end|>' → logprob: -3.9703712463378906
    5. '    ' → logprob: -5.095371246337891
    6. '  ' → logprob: -5.595371246337891
    7. 'class' → logprob: -5.845371246337891
    8. '<|end|>' → logprob: -6.970371246337891
    9. '       ' → logprob: -7.345371246337891
    10. ' of' → logprob: -7.470371246337891

Token 12: ' analyzing' (ID: 57465)
  Prédit: ' analyzing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' analyzing' → logprob: -0.2376401573419571
    2. ' trade' → logprob: -1.737640142440796
    3. ' calculating' → logprob: -4.362640380859375
    4. ' trades' → logprob: -4.862640380859375
    5. 'trade' → logprob: -5.487640380859375
    6. ' analy' → logprob: -5.862640380859375
    7. ' financial' → logprob: -6.362640380859375
    8. ' trading' → logprob: -6.737640380859375
    9. ' performing' → logprob: -6.862640380859375
    10. ' analysis' → logprob: -7.237640380859375

Token 13: ' trade' (ID: 10552)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.03637009859085083
    2. ' Trade' → logprob: -4.536370277404785
    3. ' trade' → logprob: -4.786370277404785
    4. 'Trade' → logprob: -4.911370277404785
    5. '  ' → logprob: -5.536370277404785
    6. ' trades' → logprob: -6.786370277404785
    7. ' Trades' → logprob: -6.786370277404785
    8. '   ' → logprob: -7.411370277404785
    9. 's' → logprob: -7.661370277404785
    10. 'Trades' → logprob: -7.911370277404785

Token 14: ' balance' (ID: 10636)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.032854560762643814
    2. '_' → logprob: -4.1578545570373535
    3. ' s' → logprob: -4.6578545570373535
    4. ' balances' → logprob: -6.0328545570373535
    5. '   ' → logprob: -6.6578545570373535
    6. 'Balances' → logprob: -6.7828545570373535
    7. ' ' → logprob: -7.7828545570373535
    8. 'Balance' → logprob: -8.157855033874512
    9. '_s' → logprob: -8.282855033874512
    10. ''s' → logprob: -8.782855033874512

Token 15: ' data' (ID: 1238)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.19041182100772858
    2. '   ' → logprob: -2.6904118061065674
    3. '
' → logprob: -2.9404118061065674
    4. '.' → logprob: -4.3154120445251465
    5. '"""' → logprob: -5.3154120445251465
    6. ' """
' → logprob: -5.4404120445251465
    7. '"""
' → logprob: -5.4404120445251465
    8. ' 
' → logprob: -5.4404120445251465
    9. '    
' → logprob: -5.5654120445251465
    10. '.
' → logprob: -5.5654120445251465

Token 16: ' streams' (ID: 39230)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7744590640068054
    2. '```' → logprob: -1.6494591236114502
    3. '.' → logprob: -2.02445912361145
    4. '
' → logprob: -2.27445912361145
    5. '\n' → logprob: -3.14945912361145
    6. '"""' → logprob: -3.64945912361145
    7. '<|end|>' → logprob: -3.77445912361145
    8. '"""
' → logprob: -5.524458885192871
    9. '.
' → logprob: -6.024458885192871
    10. '    
' → logprob: -6.149458885192871

Token 17: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6153090596199036
    2. '.' → logprob: -0.9903090596199036
    3. '
' → logprob: -3.365309000015259
    4. '```' → logprob: -3.615309000015259
    5. '\n' → logprob: -4.865309238433838
    6. '"""' → logprob: -5.115309238433838
    7. '' → logprob: -6.490309238433838
    8. '.
' → logprob: -6.490309238433838
    9. '<|end|>' → logprob: -6.490309238433838
    10. ',' → logprob: -6.740309238433838

Token 18: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06732248514890671
    2. '```' → logprob: -3.4423224925994873
    3. '    
' → logprob: -5.067322254180908
    4. '\n' → logprob: -5.067322254180908
    5. '
' → logprob: -5.317322254180908
    6. '    ' → logprob: -5.442322254180908
    7. '"""' → logprob: -5.442322254180908
    8. ' 
' → logprob: -6.192322254180908
    9. ' ' → logprob: -7.067322254180908
    10. '<|end|>' → logprob: -7.567322254180908

Token 19: ' Designed' (ID: 53706)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08632171899080276
    2. '
' → logprob: -3.9613218307495117
    3. '    
' → logprob: -3.9613218307495117
    4. '\n' → logprob: -4.086321830749512
    5. '    ' → logprob: -4.586321830749512
    6. '```' → logprob: -5.086321830749512
    7. ' ' → logprob: -5.336321830749512
    8. '       ' → logprob: -6.836321830749512
    9. ' 
' → logprob: -6.836321830749512
    10. 'n' → logprob: -7.461321830749512

Token 20: ' for' (ID: 395)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.03275096416473389
    2. ' for' → logprob: -3.6577510833740234
    3. 'to' → logprob: -5.782751083374023
    4. '<|end|>' → logprob: -6.907751083374023
    5. '  ' → logprob: -7.657751083374023
    6. ' ' → logprob: -8.157751083374023
    7. '```' → logprob: -8.282751083374023
    8. ' with' → logprob: -8.407751083374023
    9. '   ' → logprob: -8.407751083374023
    10. ' as' → logprob: -8.657751083374023

Token 21: ' extens' (ID: 34241)
  Prédit: ' subclass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' subclass' → logprob: -1.2869465351104736
    2. ' real' → logprob: -2.0369465351104736
    3. ' analyzing' → logprob: -2.2869465351104736
    4. ' streaming' → logprob: -2.2869465351104736
    5. ' continuous' → logprob: -2.5369465351104736
    6. ' subclasses' → logprob: -3.2869465351104736
    7. ' extension' → logprob: -3.6619465351104736
    8. ' trade' → logprob: -3.7869465351104736
    9. ' extens' → logprob: -3.9119465351104736
    10. ' data' → logprob: -4.0369462966918945

Token 22: 'ibility' (ID: 4295)
  Prédit: 'ed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.4708755314350128
    2. 'e' → logprob: -1.0958755016326904
    3. 'ible' → logprob: -3.4708755016326904
    4. 'ion' → logprob: -5.5958757400512695
    5. '   ' → logprob: -5.7208757400512695
    6. 'ing' → logprob: -6.5958757400512695
    7. 'eded' → logprob: -7.4708757400512695
    8. 'ions' → logprob: -7.7208757400512695
    9. ' ' → logprob: -8.22087574005127
    10. 'ending' → logprob: -9.34587574005127

Token 23: ' to' (ID: 316)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22459904849529266
    2. '.' → logprob: -1.724599003791809
    3. '```' → logprob: -4.5995988845825195
    4. '\n' → logprob: -5.7245988845825195
    5. ',' → logprob: -6.0995988845825195
    6. ' and' → logprob: -6.5995988845825195
    7. '`' → logprob: -6.8495988845825195
    8. '    ' → logprob: -6.8495988845825195
    9. '
' → logprob: -7.3495988845825195
    10. '    
' → logprob: -7.5995988845825195

Token 24: ' support' (ID: 2498)
  Prédit: ' support'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' support' → logprob: -1.2485989332199097
    2. ' process' → logprob: -1.3735989332199097
    3. ' handle' → logprob: -1.3735989332199097
    4. ' provide' → logprob: -2.623599052429199
    5. ' analyze' → logprob: -2.748599052429199
    6. ' allow' → logprob: -4.498599052429199
    7. ' be' → logprob: -4.873599052429199
    8. ' ' → logprob: -4.998599052429199
    9. 'process' → logprob: -4.998599052429199
    10. ' different' → logprob: -5.623599052429199

Token 25: ' multiple' (ID: 7598)
  Prédit: ' various'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' various' → logprob: -0.2927611470222473
    2. ' different' → logprob: -2.1677610874176025
    3. ' multiple' → logprob: -2.1677610874176025
    4. ' diverse' → logprob: -4.667761325836182
    5. ' real' → logprob: -6.042761325836182
    6. 'different' → logprob: -6.167761325836182
    7. ' a' → logprob: -6.417761325836182
    8. ' both' → logprob: -6.417761325836182
    9. ' additional' → logprob: -6.542761325836182
    10. 'multiple' → logprob: -6.917761325836182

Token 26: ' analysis' (ID: 8450)
  Prédit: ' data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' data' → logprob: -1.0842978954315186
    2. ' trade' → logprob: -2.0842978954315186
    3. ' countries' → logprob: -2.3342978954315186
    4. ' trading' → logprob: -3.3342978954315186
    5. ' export' → logprob: -3.3342978954315186
    6. ' types' → logprob: -3.5842978954315186
    7. ' strategies' → logprob: -3.7092978954315186
    8. ' markets' → logprob: -3.7092978954315186
    9. ' exchange' → logprob: -3.7092978954315186
    10. ' industries' → logprob: -3.8342978954315186

Token 27: ' strategies' (ID: 15142)
  Prédit: ' methods'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' methods' → logprob: -0.7619358897209167
    2. ' strategies' → logprob: -1.2619359493255615
    3. 's' → logprob: -1.7619359493255615
    4. '   ' → logprob: -3.1369359493255615
    5. ' approaches' → logprob: -4.386935710906982
    6. ' s' → logprob: -5.636935710906982
    7. 'strateg' → logprob: -5.636935710906982
    8. ' ' → logprob: -5.761935710906982
    9. ' scenarios' → logprob: -6.011935710906982
    10. ' methodologies' → logprob: -6.136935710906982

Token 28: '.
' (ID: 558)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.9482988119125366
    2. '   ' → logprob: -1.0732988119125366
    3. '```' → logprob: -2.198298931121826
    4. '
' → logprob: -2.573298931121826
    5. '\n' → logprob: -2.948298931121826
    6. '<|end|>' → logprob: -3.948298931121826
    7. '\' → logprob: -5.573298931121826
    8. '"""' → logprob: -6.948298931121826
    9. '    
' → logprob: -7.073298931121826
    10. '.
' → logprob: -7.073298931121826

Token 29: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.028014669194817543
    2. '"""' → logprob: -3.903014659881592
    3. '```' → logprob: -5.528014659881592
    4. '
' → logprob: -7.153014659881592
    5. ' """' → logprob: -7.153014659881592
    6. '\n' → logprob: -7.528014659881592
    7. '    
' → logprob: -7.903014659881592
    8. ' 
' → logprob: -8.15301513671875
    9. '    ' → logprob: -8.27801513671875
    10. 'class' → logprob: -9.77801513671875

Token 30: ' """

' (ID: 28800)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18369179964065552
    2. '
' → logprob: -2.3086917400360107
    3. '"""' → logprob: -3.8086917400360107
    4. '```' → logprob: -4.05869197845459
    5. '\n' → logprob: -4.18369197845459
    6. '    
' → logprob: -4.68369197845459
    7. ' 
' → logprob: -6.80869197845459
    8. '    ' → logprob: -7.30869197845459
    9. 'class' → logprob: -8.05869197845459
    10. 'n' → logprob: -8.05869197845459

Token 31: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017117146402597427
    2. '    
' → logprob: -4.767117023468018
    3. '
' → logprob: -5.267117023468018
    4. '\n' → logprob: -6.892117023468018
    5. '```' → logprob: -7.017117023468018
    6. 'def' → logprob: -7.767117023468018
    7. '    ' → logprob: -8.017117500305176
    8. 'class' → logprob: -8.892117500305176
    9. '\' → logprob: -9.142117500305176
    10. ' 
' → logprob: -9.392117500305176

Token 32: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.10304442793130875
    2. 'd' → logprob: -2.3530445098876953
    3. '   ' → logprob: -6.353044509887695
    4. 'de' → logprob: -7.728044509887695
    5. ' def' → logprob: -8.478044509887695
    6. '@' → logprob: -8.728044509887695
    7. 'class' → logprob: -8.853044509887695
    8. 'import' → logprob: -10.728044509887695
    9. '```' → logprob: -10.853044509887695
    10. 's' → logprob: -11.103044509887695

Token 33: ' __' (ID: 2516)
  Prédit: ' analyze'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' analyze' → logprob: -0.13795484602451324
    2. ' __' → logprob: -3.1379549503326416
    3. ' calculate' → logprob: -3.2629549503326416
    4. ' process' → logprob: -3.7629549503326416
    5. ' init' → logprob: -4.8879547119140625
    6. ' ' → logprob: -5.0129547119140625
    7. '_' → logprob: -6.1379547119140625
    8. ' is' → logprob: -6.8879547119140625
    9. ' _' → logprob: -7.0129547119140625
    10. '_an' → logprob: -7.1379547119140625

Token 34: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -7.584239938296378e-06
    2. 'ini' → logprob: -11.875007629394531
    3. 'in' → logprob: -14.875007629394531
    4. ' init' → logprob: -15.750007629394531
    5. 'i' → logprob: -16.87500762939453
    6. 'int' → logprob: -19.12500762939453
    7. '	init' → logprob: -19.37500762939453
    8. 'inti' → logprob: -19.50000762939453
    9. 'innit' → logprob: -19.50000762939453
    10. '_init' → logprob: -20.12500762939453

Token 35: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.05507218837738037
    2. '__' → logprob: -3.30507230758667
    3. '(' → logprob: -4.55507230758667
    4. '(self' → logprob: -5.68007230758667
    5. '__(
' → logprob: -6.18007230758667
    6. ' (' → logprob: -8.805071830749512
    7. '```' → logprob: -8.805071830749512
    8. '<|end|>' → logprob: -9.180071830749512
    9. '__(*' → logprob: -9.180071830749512
    10. '__((' → logprob: -9.305071830749512

Token 36: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.04861030355095863
    2. ' self' → logprob: -3.048610210418701
    3. ')' → logprob: -10.92361068725586
    4. ' ' → logprob: -13.79861068725586
    5. '(self' → logprob: -13.92361068725586
    6. ' )' → logprob: -14.17361068725586
    7. '   ' → logprob: -14.29861068725586
    8. '       ' → logprob: -14.42361068725586
    9. ' ' → logprob: -14.54861068725586
    10. '	self' → logprob: -16.17361068725586

Token 37: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09918671101331711
    2. ')' → logprob: -2.974186658859253
    3. 'self' → logprob: -3.599186658859253
    4. ' ,' → logprob: -4.849186897277832
    5. ' self' → logprob: -5.224186897277832
    6. '<|end|>' → logprob: -6.849186897277832
    7. ' )' → logprob: -7.224186897277832
    8. ',self' → logprob: -7.599186897277832
    9. '(self' → logprob: -8.599186897277832
    10. ' ' → logprob: -9.474186897277832

Token 38: ' data' (ID: 1238)
  Prédit: ' data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' data' → logprob: -0.446478009223938
    2. ' self' → logprob: -1.571478009223938
    3. ' trade' → logprob: -3.3214778900146484
    4. 'self' → logprob: -3.5714778900146484
    5. 'data' → logprob: -3.8214778900146484
    6. ' initial' → logprob: -4.196477890014648
    7. ' start' → logprob: -4.321477890014648
    8. ' trades' → logprob: -4.571477890014648
    9. ' )' → logprob: -5.071477890014648
    10. ')' → logprob: -5.196477890014648

Token 39: '_stream' (ID: 29670)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1859401911497116
    2. '_data' → logprob: -2.5609402656555176
    3. '):' → logprob: -3.5609402656555176
    4. '_source' → logprob: -3.9359402656555176
    5. '_stream' → logprob: -4.310940265655518
    6. '_' → logprob: -5.060940265655518
    7. '[' → logprob: -5.060940265655518
    8. ')_' → logprob: -6.060940265655518
    9. '_reader' → logprob: -6.185940265655518
    10. '.' → logprob: -6.185940265655518

Token 40: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02442651055753231
    2. ')' → logprob: -3.7744264602661133
    3. '):
' → logprob: -7.399426460266113
    4. ',' → logprob: -8.024426460266113
    5. ':' → logprob: -9.774426460266113
    6. '<|end|>' → logprob: -10.149426460266113
    7. '=' → logprob: -10.399426460266113
    8. ' ):' → logprob: -10.524426460266113
    9. '[' → logprob: -10.774426460266113
    10. '   ' → logprob: -11.399426460266113

Token 41: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.834143340587616
    2. '    ' → logprob: -0.959143340587616
    3. '   ' → logprob: -2.2091434001922607
    4. ' ' → logprob: -3.3341434001922607
    5. '<|end|>' → logprob: -4.084143161773682
    6. ')' → logprob: -5.209143161773682
    7. '        ' → logprob: -5.834143161773682
    8. '     ' → logprob: -6.459143161773682
    9. '     
' → logprob: -6.709143161773682
    10. '    
' → logprob: -6.709143161773682

Token 42: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7650426626205444
    2. 'self' → logprob: -1.3900426626205444
    3. ' self' → logprob: -2.265042781829834
    4. ' ' → logprob: -2.890042781829834
    5. ' data' → logprob: -3.390042781829834
    6. 'data' → logprob: -3.640042781829834
    7. '    ' → logprob: -3.890042781829834
    8. '   ' → logprob: -4.015042781829834
    9. '        ' → logprob: -4.765042781829834
    10. '<|end|>' → logprob: -5.390042781829834

Token 43: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5440900325775146
    2. 'self' → logprob: -1.7940900325775146
    3. 'data' → logprob: -2.1690900325775146
    4. ' data' → logprob: -3.1690900325775146
    5. ' )' → logprob: -3.2940900325775146
    6. ')' → logprob: -3.7940900325775146
    7. 'd' → logprob: -4.544090270996094
    8. ' ' → logprob: -4.919090270996094
    9. ' self' → logprob: -5.169090270996094
    10. 's' → logprob: -5.294090270996094

Token 44: ' Initialize' (ID: 19496)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6761276721954346
    2. '       ' → logprob: -1.6761276721954346
    3. 'd' → logprob: -2.5511276721954346
    4. ')' → logprob: -2.9261276721954346
    5. ' data' → logprob: -2.9261276721954346
    6. 'data' → logprob: -3.3011276721954346
    7. ' )' → logprob: -3.6761276721954346
    8. '   ' → logprob: -4.4261274337768555
    9. '        ' → logprob: -4.5511274337768555
    10. 's' → logprob: -4.5511274337768555

Token 45: ' with' (ID: 483)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.4727519452571869
    2. ' self' → logprob: -1.9727519750595093
    3. ' ' → logprob: -2.4727518558502197
    4. '(self' → logprob: -2.7227518558502197
    5. '<|end|>' → logprob: -3.2227518558502197
    6. '(' → logprob: -4.097752094268799
    7. '_' → logprob: -5.097752094268799
    8. '   ' → logprob: -5.097752094268799
    9. ')' → logprob: -5.097752094268799
    10. '  ' → logprob: -6.222752094268799

Token 46: ' data' (ID: 1238)
  Prédit: ' data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' data' → logprob: -0.27007415890693665
    2. ' the' → logprob: -1.7700741291046143
    3. ' a' → logprob: -3.0200741291046143
    4. 'data' → logprob: -4.770074367523193
    5. ' trade' → logprob: -5.020074367523193
    6. ' self' → logprob: -7.020074367523193
    7. ' ' → logprob: -7.520074367523193
    8. ' an' → logprob: -7.645074367523193
    9. 'the' → logprob: -8.645073890686035
    10. 'self' → logprob: -8.770073890686035

Token 47: ' stream' (ID: 6855)
  Prédit: '_stream'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_stream' → logprob: -0.17371894419193268
    2. '_' → logprob: -1.9237189292907715
    3. ' _' → logprob: -4.6737189292907715
    4. '_source' → logprob: -5.9237189292907715
    5. '   ' → logprob: -7.7987189292907715
    6. '_data' → logprob: -7.9237189292907715
    7. ' stream' → logprob: -9.17371940612793
    8. ')' → logprob: -9.17371940612793
    9. '<|end|>' → logprob: -9.29871940612793
    10. ' data' → logprob: -10.42371940612793

Token 48: ' representing' (ID: 25389)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8552835583686829
    2. ':' → logprob: -0.9802835583686829
    3. '   ' → logprob: -3.355283498764038
    4. '):' → logprob: -3.355283498764038
    5. '.' → logprob: -3.480283498764038
    6. ')' → logprob: -3.480283498764038
    7. '_' → logprob: -4.480283737182617
    8. '=' → logprob: -4.730283737182617
    9. '```' → logprob: -4.730283737182617
    10. ',' → logprob: -4.855283737182617

Token 49: ' net' (ID: 2776)
  Prédit: ' trade'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' trade' → logprob: -0.11233338713645935
    2. ' the' → logprob: -2.362333297729492
    3. ' a' → logprob: -5.112333297729492
    4. 'trade' → logprob: -5.987333297729492
    5. ' ' → logprob: -6.862333297729492
    6. '_trade' → logprob: -7.362333297729492
    7. 'the' → logprob: -7.737333297729492
    8. ' trades' → logprob: -7.737333297729492
    9. 'Trade' → logprob: -8.487333297729492
    10. ' current' → logprob: -8.487333297729492

Token 50: ' infl' (ID: 5732)
  Prédit: '_trade'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_trade' → logprob: -0.7184193730354309
    2. ' trade' → logprob: -1.0934193134307861
    3. ' ' → logprob: -2.093419313430786
    4. '_' → logprob: -3.468419313430786
    5. '_balance' → logprob: -4.968419551849365
    6. 'trade' → logprob: -5.468419551849365
    7. ' trades' → logprob: -5.468419551849365
    8. '_tr' → logprob: -5.843419551849365
    9. ' balances' → logprob: -6.968419551849365
    10. ' _' → logprob: -7.093419551849365

Token 51: 'ow' (ID: 384)
  Prédit: 'ows'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ows' → logprob: -0.5317487716674805
    2. 'ow' → logprob: -0.9067487716674805
    3. '   ' → logprob: -5.4067487716674805
    4. 'o' → logprob: -6.4067487716674805
    5. ' o' → logprob: -7.6567487716674805
    6. 'u' → logprob: -7.7817487716674805
    7. ' ow' → logprob: -7.7817487716674805
    8. '  ' → logprob: -8.28174877166748
    9. 'ux' → logprob: -8.65674877166748
    10. '    ' → logprob: -9.28174877166748

Token 52: ' per' (ID: 777)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.05570648983120918
    2. '<|end|>' → logprob: -4.43070650100708
    3. '   ' → logprob: -4.68070650100708
    4. ' data' → logprob: -4.93070650100708
    5. ')' → logprob: -5.18070650100708
    6. ' )' → logprob: -5.18070650100708
    7. ' and' → logprob: -6.05570650100708
    8. '    ' → logprob: -6.05570650100708
    9. 's' → logprob: -6.43070650100708
    10. ' from' → logprob: -6.93070650100708

Token 53: ' nan' (ID: 8190)
  Prédit: ' trade'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' trade' → logprob: -0.305269330739975
    2. ' ' → logprob: -1.6802693605422974
    3. ' time' → logprob: -4.055269241333008
    4. 'trade' → logprob: -4.055269241333008
    5. ' day' → logprob: -4.305269241333008
    6. ' transaction' → logprob: -4.555269241333008
    7. '_trade' → logprob: -5.055269241333008
    8. ' trading' → logprob: -6.555269241333008
    9. ' data' → logprob: -6.680269241333008
    10. ' timestep' → logprob: -6.805269241333008

Token 54: 'ose' (ID: 918)
  Prédit: 'ose'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ose' → logprob: -0.004716345574706793
    2. 'oseconds' → logprob: -5.379716396331787
    3. '   ' → logprob: -10.129715919494629
    4. 'o' → logprob: -10.379715919494629
    5. '```' → logprob: -11.379715919494629
    6. 't' → logprob: -12.629715919494629
    7. 'isecond' → logprob: -12.754715919494629
    8. ' ' → logprob: -13.254715919494629
    9. '       ' → logprob: -13.379715919494629
    10. '  ' → logprob: -14.254715919494629

Token 55: 'cond' (ID: 1893)
  Prédit: 'cond'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cond' → logprob: -0.07062625885009766
    2. 'c' → logprob: -2.6956262588500977
    3. '```' → logprob: -8.820626258850098
    4. 'cs' → logprob: -9.570626258850098
    5. 'conde' → logprob: -9.570626258850098
    6. 'conds' → logprob: -9.695626258850098
    7. 'nd' → logprob: -9.820626258850098
    8. 'ond' → logprob: -10.445626258850098
    9. 'condition' → logprob: -10.695626258850098
    10. 'cd' → logprob: -10.695626258850098

Token 56: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2797841727733612
    2. '       ' → logprob: -1.7797842025756836
    3. ' of' → logprob: -3.7797842025756836
    4. '<|end|>' → logprob: -4.404784202575684
    5. ')' → logprob: -4.654784202575684
    6. ',' → logprob: -4.779784202575684
    7. ' in' → logprob: -5.529784202575684
    8. '        ' → logprob: -5.779784202575684
    9. 's' → logprob: -5.904784202575684
    10. ':' → logprob: -6.029784202575684

Token 57: '       ' (ID: 309)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.7453734874725342
    2. '       ' → logprob: -1.2453734874725342
    3. ')' → logprob: -2.245373487472534
    4. '   ' → logprob: -2.620373487472534
    5. '):' → logprob: -4.245373725891113
    6. ',' → logprob: -4.620373725891113
    7. ' )' → logprob: -5.245373725891113
    8. '_' → logprob: -5.495373725891113
    9. ' ,' → logprob: -5.620373725891113
    10. '    ' → logprob: -5.620373725891113

Token 58: ' Args' (ID: 39185)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3523080348968506
    2. '.' → logprob: -1.3523080348968506
    3. ':' → logprob: -4.22730827331543
    4. '   ' → logprob: -4.72730827331543
    5. '):' → logprob: -5.85230827331543
    6. '```' → logprob: -6.10230827331543
    7. ',' → logprob: -6.22730827331543
    8. ')' → logprob: -6.35230827331543
    9. ' of' → logprob: -6.60230827331543
    10. '        ' → logprob: -6.97730827331543

Token 59: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01730169542133808
    2. ' :' → logprob: -4.642301559448242
    3. '   ' → logprob: -6.017301559448242
    4. '=' → logprob: -6.517301559448242
    5. '):' → logprob: -7.142301559448242
    6. '<|end|>' → logprob: -7.142301559448242
    7. ',' → logprob: -7.392301559448242
    8. '       ' → logprob: -7.517301559448242
    9. ')' → logprob: -7.892301559448242
    10. '    ' → logprob: -9.142301559448242

Token 60: '           ' (ID: 352)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7449259161949158
    2. '       ' → logprob: -1.7449259757995605
    3. '    ' → logprob: -2.1199259757995605
    4. ' data' → logprob: -2.2449259757995605
    5. '        ' → logprob: -2.4949259757995605
    6. 'data' → logprob: -4.4949259757995605
    7. ' )' → logprob: -4.7449259757995605
    8. ' ' → logprob: -5.4949259757995605
    9. '```' → logprob: -5.7449259757995605
    10. '     ' → logprob: -6.2449259757995605

Token 61: ' data' (ID: 1238)
  Prédit: ' data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' data' → logprob: -0.07014472037553787
    2. 'data' (adapté à ' data') → logprob: -2.6951446533203125
    3. ' self' → logprob: -9.570144653320312
    4. '       ' → logprob: -9.945144653320312
    5. ' ' → logprob: -10.320144653320312
    6. 'self' → logprob: -10.945144653320312
    7. '    ' → logprob: -11.320144653320312
    8. '   ' → logprob: -11.445144653320312
    9. ' ' → logprob: -12.195144653320312
    10. 'd' → logprob: -12.570144653320312

Token 62: '_stream' (ID: 29670)
  Prédit: '_stream'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_stream' → logprob: -9.460291767027229e-05
    2. '_' → logprob: -9.750094413757324
    3. '_source' → logprob: -11.375094413757324
    4. ' _' → logprob: -11.750094413757324
    5. '_STREAM' → logprob: -12.375094413757324
    6. '_data' → logprob: -12.750094413757324
    7. '_Stream' → logprob: -13.375094413757324
    8. ':' → logprob: -13.625094413757324
    9. '_space' → logprob: -14.000094413757324
    10. '_s' → logprob: -14.250094413757324

Token 63: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2153972089290619
    2. '):' → logprob: -2.2153971195220947
    3. '<|end|>' → logprob: -3.0903971195220947
    4. ' :' → logprob: -3.5903971195220947
    5. ' ):' → logprob: -5.090397357940674
    6. ')' → logprob: -6.590397357940674
    7. ' (' → logprob: -6.840397357940674
    8. '<|end|>' → logprob: -7.465397357940674
    9. '=None' → logprob: -7.715397357940674
    10. ' ' → logprob: -7.840397357940674

Token 64: 'List' (ID: 950)
  Prédit: 'iter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iter' → logprob: -0.478870153427124
    2. 'Iterable' → logprob: -1.353870153427124
    3. 'list' → logprob: -2.853870153427124
    4. 'iterator' → logprob: -3.853870153427124
    5. ' iterable' → logprob: -3.978870153427124
    6. 'List' → logprob: -5.103870391845703
    7. 'Iterator' → logprob: -5.353870391845703
    8. 'generator' → logprob: -6.103870391845703
    9. ' list' → logprob: -6.228870391845703
    10. 'array' → logprob: -6.603870391845703

Token 65: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.006282952148467302
    2. '[' → logprob: -5.756282806396484
    3. ')' → logprob: -5.881282806396484
    4. '<int' → logprob: -9.381282806396484
    5. '[List' → logprob: -9.506282806396484
    6. '<|end|>' → logprob: -9.506282806396484
    7. 'int' → logprob: -11.131282806396484
    8. ' )' → logprob: -11.131282806396484
    9. '[str' → logprob: -11.756282806396484
    10. '```' → logprob: -11.756282806396484

Token 66: ']):' (ID: 60705)
  Prédit: ']):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']):' → logprob: -0.6292319297790527
    2. '])' → logprob: -0.8792319297790527
    3. ']' → logprob: -3.1292319297790527
    4. ')' → logprob: -5.504231929779053
    5. '<|end|>' → logprob: -6.004231929779053
    6. ']):
' → logprob: -7.504231929779053
    7. ')]' → logprob: -8.379232406616211
    8. '):' → logprob: -8.504232406616211
    9. '>):' → logprob: -9.004232406616211
    10. '<|end|>' → logprob: -9.379232406616211

Token 67: ' List' (ID: 2655)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.16423490643501282
    2. '<|end|>' → logprob: -1.9142348766326904
    3. '    ' → logprob: -6.7892351150512695
    4. ' )' → logprob: -6.9142351150512695
    5. ')' → logprob: -7.1642351150512695
    6. '<|end|>' → logprob: -7.7892351150512695
    7. ' The' → logprob: -8.41423511505127
    8. ' data' → logprob: -8.78923511505127
    9. '  ' → logprob: -9.78923511505127
    10. '   ' → logprob: -10.41423511505127

Token 68: ' of' (ID: 328)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.28174349665641785
    2. ' of' → logprob: -1.4067435264587402
    3. '<|end|>' → logprob: -8.156743049621582
    4. '[' → logprob: -9.656743049621582
    5. '<int' → logprob: -9.906743049621582
    6. ' representing' → logprob: -10.031743049621582
    7. '[token' → logprob: -10.281743049621582
    8. ' tokens' → logprob: -10.406743049621582
    9. ' or' → logprob: -10.906743049621582
    10. '<|end|>' → logprob: -11.156743049621582

Token 69: ' integers' (ID: 54912)
  Prédit: ' net'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' net' → logprob: -0.1015167236328125
    2. ' integers' → logprob: -2.8515167236328125
    3. ' trade' → logprob: -3.7265167236328125
    4. 'net' → logprob: -4.9765167236328125
    5. ' int' → logprob: -6.1015167236328125
    6. 'inte' → logprob: -6.2265167236328125
    7. 'trade' → logprob: -6.8515167236328125
    8. ' integer' → logprob: -7.6015167236328125
    9. ' data' → logprob: -7.8515167236328125
    10. 'int' → logprob: -7.9765167236328125

Token 70: ' indicating' (ID: 34700)
  Prédit: ' representing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' representing' → logprob: -0.04691433161497116
    2. ')' → logprob: -4.046914100646973
    3. '       ' → logprob: -4.796914100646973
    4. ' )' → logprob: -5.046914100646973
    5. '   ' → logprob: -5.296914100646973
    6. '<|end|>' → logprob: -5.546914100646973
    7. '    ' → logprob: -6.171914100646973
    8. ' ' → logprob: -7.296914100646973
    9. 'represent' → logprob: -7.421914100646973
    10. '<|end|>' → logprob: -8.671914100646973

Token 71: ' net' (ID: 2776)
  Prédit: ' net'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' net' → logprob: -0.025403127074241638
    2. ' trade' → logprob: -4.150403022766113
    3. ' the' → logprob: -4.775403022766113
    4. 'net' → logprob: -8.275403022766113
    5. ' infl' → logprob: -8.525403022766113
    6. ' ' → logprob: -9.025403022766113
    7. ' network' → logprob: -9.650403022766113
    8. 'the' → logprob: -9.900403022766113
    9. ' incoming' → logprob: -10.525403022766113
    10. ' data' → logprob: -10.650403022766113

Token 72: ' data' (ID: 1238)
  Prédit: ' infl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' infl' → logprob: -0.05011942237615585
    2. ' influx' → logprob: -3.550119400024414
    3. ' ' → logprob: -4.425119400024414
    4. ' net' → logprob: -5.800119400024414
    5. ' trade' → logprob: -6.425119400024414
    6. 'in' → logprob: -6.925119400024414
    7. '<|end|>' → logprob: -7.425119400024414
    8. ' flows' → logprob: -7.425119400024414
    9. ' flow' → logprob: -7.675119400024414
    10. ' )' → logprob: -8.300119400024414

Token 73: ' flow' (ID: 7845)
  Prédit: ' points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' points' → logprob: -1.1366686820983887
    2. ' flow' → logprob: -1.5116686820983887
    3. ' infl' → logprob: -1.8866686820983887
    4. ' flows' → logprob: -2.2616686820983887
    5. ' influx' → logprob: -2.8866686820983887
    6. ' per' → logprob: -3.0116686820983887
    7. ' flowing' → logprob: -3.5116686820983887
    8. '   ' → logprob: -4.011668682098389
    9. '_flow' → logprob: -4.261668682098389
    10. ' ' → logprob: -4.511668682098389

Token 74: ' per' (ID: 777)
  Prédit: ' per'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' per' → logprob: -0.8871644735336304
    2. '   ' → logprob: -1.3871644735336304
    3. ' )' → logprob: -2.01216459274292
    4. ')' → logprob: -2.01216459274292
    5. ' at' → logprob: -3.88716459274292
    6. '):
' → logprob: -4.51216459274292
    7. ' ):
' → logprob: -4.51216459274292
    8. '):' → logprob: -5.01216459274292
    9. ' in' → logprob: -5.13716459274292
    10. ' ):' → logprob: -5.51216459274292

Token 75: ' nan' (ID: 8190)
  Prédit: ' nan'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nan' → logprob: -0.18313899636268616
    2. ' ' → logprob: -2.3081390857696533
    3. 'nan' → logprob: -2.8081390857696533
    4. ' time' → logprob: -5.808138847351074
    5. '_nan' → logprob: -7.058138847351074
    6. '_' → logprob: -7.183138847351074
    7. '_n' → logprob: -7.308138847351074
    8. ' timestep' → logprob: -7.808138847351074
    9. ' data' → logprob: -8.058138847351074
    10. 'n' → logprob: -8.808138847351074

Token 76: 'ose' (ID: 918)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.5677818059921265
    2. 'ose' → logprob: -1.3177818059921265
    3. 'second' → logprob: -2.567781925201416
    4. 'isecond' → logprob: -3.067781925201416
    5. '_second' → logprob: -4.067781925201416
    6. 'sec' → logprob: -5.942781925201416
    7. '        ' → logprob: -5.942781925201416
    8. '       ' → logprob: -5.942781925201416
    9. 's' → logprob: -6.067781925201416
    10. '   ' → logprob: -6.317781925201416

Token 77: 'cond' (ID: 1893)
  Prédit: 'cond'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cond' → logprob: -0.0017340865451842546
    2. 'c' → logprob: -6.376734256744385
    3. '_cond' → logprob: -11.501733779907227
    4. 'second' → logprob: -12.626733779907227
    5. '```' → logprob: -12.626733779907227
    6. '-cond' → logprob: -12.876733779907227
    7. 'Cond' → logprob: -13.001733779907227
    8. 'condition' → logprob: -13.126733779907227
    9. ' cond' → logprob: -13.251733779907227
    10. 'conde' → logprob: -13.251733779907227

Token 78: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20023325085639954
    2. '       ' → logprob: -2.575233221054077
    3. '   ' → logprob: -2.575233221054077
    4. '<|end|>' → logprob: -4.450233459472656
    5. '```' → logprob: -4.700233459472656
    6. '):
' → logprob: -5.825233459472656
    7. '):' → logprob: -6.075233459472656
    8. '<|end|>' → logprob: -6.950233459472656
    9. ' ' → logprob: -8.200233459472656
    10. '
' → logprob: -8.325233459472656

Token 79: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05535035952925682
    2. ')' → logprob: -3.6803503036499023
    3. '   ' → logprob: -3.6803503036499023
    4. '```' → logprob: -6.055350303649902
    5. '):
' → logprob: -8.180350303649902
    6. '):' → logprob: -8.680350303649902
    7. '`' → logprob: -8.680350303649902
    8. ' ' → logprob: -9.305350303649902
    9. '           ' → logprob: -9.555350303649902
    10. '    ' → logprob: -9.805350303649902

Token 80: ' """
' (ID: 7037)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14563332498073578
    2. '       ' → logprob: -2.3956332206726074
    3. '   ' → logprob: -3.3956332206726074
    4. '):' → logprob: -5.395633220672607
    5. '```' → logprob: -5.770633220672607
    6. '\n' → logprob: -7.520633220672607
    7. ')
' → logprob: -7.520633220672607
    8. '):
' → logprob: -7.645633220672607
    9. '
' → logprob: -7.895633220672607
    10. ' )' → logprob: -8.270633697509766

Token 81: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0019013900309801102
    2. 'self' → logprob: -6.501901626586914
    3. '        
' → logprob: -8.376901626586914
    4. '```' → logprob: -10.376901626586914
    5. '   ' → logprob: -10.501901626586914
    6. ' 
' → logprob: -10.751901626586914
    7. '
' → logprob: -10.876901626586914
    8. ' self' → logprob: -11.251901626586914
    9. '\n' → logprob: -11.626901626586914
    10. '    
' → logprob: -12.126901626586914

Token 82: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.08489105105400085
    2. ' self' → logprob: -3.0848910808563232
    3. '       ' → logprob: -3.3348910808563232
    4. '   ' → logprob: -10.459891319274902
    5. ' ' → logprob: -13.084891319274902
    6. 'super' → logprob: -13.334891319274902
    7. '	self' → logprob: -14.584891319274902
    8. '```' → logprob: -15.209891319274902
    9. '      ' → logprob: -15.459891319274902
    10. ' super' → logprob: -15.959891319274902

Token 83: '.data' (ID: 3885)
  Prédit: '.data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.data' → logprob: -0.012631483376026154
    2. '.' → logprob: -4.387631416320801
    3. '._' → logprob: -9.6376314163208
    4. ' .' → logprob: -10.1376314163208
    5. 'data' → logprob: -11.7626314163208
    6. ' ' → logprob: -13.3876314163208
    7. '.value' → logprob: -14.0126314163208
    8. '.user' → logprob: -14.3876314163208
    9. ' data' → logprob: -14.5126314163208
    10. '.code' → logprob: -14.6376314163208

Token 84: '_stream' (ID: 29670)
  Prédit: '_stream'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_stream' → logprob: -0.0002695608709473163
    2. '_' → logprob: -8.250269889831543
    3. '_flow' → logprob: -12.875269889831543
    4. '_source' → logprob: -13.125269889831543
    5. ' _' → logprob: -13.750269889831543
    6. '_s' → logprob: -13.875269889831543
    7. '_stack' → logprob: -14.875269889831543
    8. '_data' → logprob: -15.250269889831543
    9. '_space' → logprob: -15.875269889831543
    10. '_str' → logprob: -16.250268936157227

Token 85: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.048601001501083374
    2. '=' → logprob: -3.048600912094116
    3. ' ' → logprob: -12.423601150512695
    4. '   ' → logprob: -13.423601150512695
    5. '[' → logprob: -13.548601150512695
    6. '.append' → logprob: -14.048601150512695
    7. '.' → logprob: -14.048601150512695
    8. '[:]' → logprob: -14.173601150512695
    9. ')' → logprob: -14.423601150512695
    10. ' =)' → logprob: -14.548601150512695

Token 86: ' data' (ID: 1238)
  Prédit: ' data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' data' → logprob: -0.023245712742209435
    2. 'data' → logprob: -3.7732458114624023
    3. ' ' → logprob: -16.148244857788086
    4. '	data' → logprob: -16.898244857788086
    5. ' ' → logprob: -17.523244857788086
    6. '$data' → logprob: -19.023244857788086
    7. '_data' → logprob: -19.023244857788086
    8. 'Data' → logprob: -19.398244857788086
    9. ' list' → logprob: -19.898244857788086
    10. '```' → logprob: -20.398244857788086

Token 87: '_stream' (ID: 29670)
  Prédit: '_stream'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_stream' → logprob: -1.9743012671824545e-05
    2. '_' → logprob: -11.000020027160645
    3. 'stream' → logprob: -14.125020027160645
    4. ' _' → logprob: -14.250020027160645
    5. '_data' → logprob: -15.000020027160645
    6. '_space' → logprob: -15.125020027160645
    7. '_STREAM' → logprob: -15.500020027160645
    8. '_line' → logprob: -15.500020027160645
    9. '_s' → logprob: -15.875020027160645
    10. 'Stream' → logprob: -16.375019073486328

Token 88: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4230136275291443
    2. '<|end|>' → logprob: -1.423013687133789
    3. '\n' → logprob: -2.923013687133789
    4. '   ' → logprob: -3.798013687133789
    5. '    
' → logprob: -4.423013687133789
    6. 'newline' → logprob: -5.923013687133789
    7. '<|end|>' → logprob: -5.923013687133789
    8. '```' → logprob: -6.298013687133789
    9. '' → logprob: -6.673013687133789
    10. ' 
' → logprob: -6.798013687133789

Token 89: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0628039762377739
    2. '   ' → logprob: -3.5628039836883545
    3. '<|end|>' → logprob: -3.5628039836883545
    4. '    
' → logprob: -6.937803745269775
    5. '\n' → logprob: -7.062803745269775
    6. 'def' → logprob: -7.562803745269775
    7. '<|end|>' → logprob: -7.562803745269775
    8. '

' → logprob: -7.812803745269775
    9. '```' → logprob: -8.312804222106934
    10. '' → logprob: -8.812804222106934

Token 90: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.29361608624458313
    2. '
' → logprob: -2.2936160564422607
    3. 'def' (adapté à ' def') → logprob: -2.6686160564422607
    4. '    
' → logprob: -3.4186160564422607
    5. ' 
' → logprob: -3.5436160564422607
    6. ' def' → logprob: -4.41861629486084
    7. '\n' → logprob: -6.16861629486084
    8. ' ' → logprob: -6.41861629486084
    9. 'n' → logprob: -6.91861629486084
    10. '```' → logprob: -6.91861629486084

Token 91: ' analyze' (ID: 30532)
  Prédit: ' analyze'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' analyze' → logprob: -0.00019495772721711546
    2. ' calculate' → logprob: -9.000194549560547
    3. ' process' → logprob: -10.125194549560547
    4. ' analyse' → logprob: -11.375194549560547
    5. ' compute' → logprob: -12.000194549560547
    6. ' evaluate' → logprob: -12.250194549560547
    7. ' validate' → logprob: -13.125194549560547
    8. ' analysis' → logprob: -13.625194549560547
    9. ' abstract' → logprob: -14.000194549560547
    10. ' analy' → logprob: -14.000194549560547

Token 92: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.47338032722473145
    2. '(' → logprob: -1.2233803272247314
    3. '_' → logprob: -2.5983803272247314
    4. '<|end|>' → logprob: -6.473380088806152
    5. '_data' → logprob: -6.723380088806152
    6. '_next' → logprob: -7.098380088806152
    7. '_self' → logprob: -7.348380088806152
    8. 'self' → logprob: -7.348380088806152
    9. '_stream' → logprob: -7.723380088806152
    10. '_balance' → logprob: -7.973380088806152

Token 93: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.022707698866724968
    2. ')' → logprob: -4.397707462310791
    3. '_data' → logprob: -5.522707462310791
    4. ',' → logprob: -6.022707462310791
    5. '_' → logprob: -6.772707462310791
    6. ' ):' → logprob: -7.022707462310791
    7. '_stream' → logprob: -7.147707462310791
    8. ')_' → logprob: -8.02270793914795
    9. '_balance' → logprob: -9.52270793914795
    10. 'data' → logprob: -9.89770793914795

Token 94: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001979668391868472
    2. ':' → logprob: -7.251979827880859
    3. ' raise' → logprob: -8.12697982788086
    4. '<|end|>' → logprob: -8.12697982788086
    5. '   ' → logprob: -9.00197982788086
    6. '
' → logprob: -9.50197982788086
    7. 'raise' → logprob: -9.75197982788086
    8. '(' → logprob: -9.87697982788086
    9. '...' → logprob: -10.00197982788086
    10. ' ' → logprob: -10.37697982788086

Token 95: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02733667567372322
    2. ' raise' → logprob: -3.652336597442627
    3. '   ' → logprob: -8.152337074279785
    4. 'raise' → logprob: -8.152337074279785
    5. ' pass' → logprob: -8.777337074279785
    6. '    ' → logprob: -9.277337074279785
    7. ' 
' → logprob: -9.777337074279785
    8. ' ' → logprob: -10.152337074279785
    9. '	raise' → logprob: -10.902337074279785
    10. 'pass' → logprob: -11.402337074279785

Token 96: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00041243841405957937
    2. ' raise' → logprob: -8.250411987304688
    3. ' pass' → logprob: -9.750411987304688
    4. '   ' → logprob: -9.875411987304688
    5. 'n' → logprob: -11.750411987304688
    6. '\n' → logprob: -11.750411987304688
    7. 'raise' → logprob: -12.000411987304688
    8. '
' → logprob: -13.125411987304688
    9. '      ' → logprob: -13.250411987304688
    10. '    ' → logprob: -13.250411987304688

Token 97: ' Analyze' (ID: 145290)
  Prédit: ' raise'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' raise' → logprob: -0.5771476626396179
    2. ' pass' → logprob: -1.4521477222442627
    3. '       ' → logprob: -1.7021477222442627
    4. 'raise' → logprob: -4.202147483825684
    5. 'pass' → logprob: -5.077147483825684
    6. '   ' → logprob: -7.452147483825684
    7. ' """' → logprob: -9.077147483825684
    8. '    ' → logprob: -10.077147483825684
    9. ' """
' → logprob: -10.202147483825684
    10. '        ' → logprob: -10.577147483825684

Token 98: ' the' (ID: 290)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.4782586693763733
    2. '   ' → logprob: -1.7282586097717285
    3. '<|end|>' → logprob: -2.4782586097717285
    4. '(self' → logprob: -3.4782586097717285
    5. '_trade' → logprob: -3.8532586097717285
    6. ' the' → logprob: -3.8532586097717285
    7. '<|end|>' → logprob: -4.7282586097717285
    8. '_' → logprob: -4.9782586097717285
    9. '       ' → logprob: -5.3532586097717285
    10. '    ' → logprob: -5.4782586097717285

Token 99: ' data' (ID: 1238)
  Prédit: ' trade'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' trade' → logprob: -0.6681334376335144
    2. ' data' → logprob: -0.7931334376335144
    3. ' current' → logprob: -3.793133497238159
    4. 'data' → logprob: -5.54313325881958
    5. ' ' → logprob: -6.16813325881958
    6. ' net' → logprob: -6.41813325881958
    7. 'trade' → logprob: -6.41813325881958
    8. ' balance' → logprob: -6.66813325881958
    9. ' cumulative' → logprob: -8.793133735656738
    10. ' next' → logprob: -8.918133735656738

Token 100: ' stream' (ID: 6855)
  Prédit: '_stream'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_stream' → logprob: -0.08577744662761688
    2. '_' → logprob: -2.710777521133423
    3. '       ' → logprob: -4.960777282714844
    4. '   ' → logprob: -5.085777282714844
    5. ' _' → logprob: -6.460777282714844
    6. '_data' → logprob: -7.960777282714844
    7. '_balance' → logprob: -9.335777282714844
    8. '_
' → logprob: -9.710777282714844
    9. ')_' → logprob: -9.710777282714844
    10. '_flow' → logprob: -9.710777282714844

Token 101: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22479747235774994
    2. '   ' → logprob: -1.9747974872589111
    3. '(self' → logprob: -3.349797487258911
    4. '_' → logprob: -4.224797248840332
    5. ':' → logprob: -5.349797248840332
    6. '<|end|>' → logprob: -6.224797248840332
    7. '    ' → logprob: -6.599797248840332
    8. '        
' → logprob: -7.599797248840332
    9. '        ' → logprob: -7.724797248840332
    10. ' and' → logprob: -7.849797248840332

Token 102: ' find' (ID: 1646)
  Prédit: ' find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' find' → logprob: -0.491498202085495
    2. ' compute' → logprob: -2.3664982318878174
    3. ' calculate' → logprob: -2.7414982318878174
    4. ' detect' → logprob: -2.8664982318878174
    5. ' identify' → logprob: -2.9914982318878174
    6. ' return' → logprob: -2.9914982318878174
    7. ' ' → logprob: -4.241497993469238
    8. ' determine' → logprob: -4.616497993469238
    9. ' raise' → logprob: -4.741497993469238
    10. ' maximize' → logprob: -5.116497993469238

Token 103: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.001695176586508751
    2. 'the' → logprob: -6.626695156097412
    3. ' ' → logprob: -8.25169563293457
    4. ' a' → logprob: -10.50169563293457
    5. ' maximum' → logprob: -11.12669563293457
    6. ' largest' → logprob: -11.37669563293457
    7. ' longest' → logprob: -11.75169563293457
    8. ' max' → logprob: -12.00169563293457
    9. '    ' → logprob: -12.25169563293457
    10. ' an' → logprob: -12.37669563293457

Token 104: ' longest' (ID: 37511)
  Prédit: ' maximum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' maximum' → logprob: -0.23795902729034424
    2. ' largest' → logprob: -2.3629589080810547
    3. ' longest' → logprob: -2.4879589080810547
    4. ' maximal' → logprob: -4.987958908081055
    5. 'maximum' → logprob: -5.362958908081055
    6. ' max' → logprob: -5.487958908081055
    7. ' contiguous' → logprob: -5.862958908081055
    8. 'max' → logprob: -5.862958908081055
    9. ' best' → logprob: -6.112958908081055
    10. ' sub' → logprob: -6.237958908081055

Token 105: ' interval' (ID: 17116)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.15493841469287872
    2. ' _' → logprob: -2.6549384593963623
    3. ' positive' → logprob: -3.9049384593963623
    4. ' continuous' → logprob: -3.9049384593963623
    5. '_positive' → logprob: -5.154938220977783
    6. ' balanced' → logprob: -5.279938220977783
    7. ' sub' → logprob: -5.404938220977783
    8. ' increasing' → logprob: -6.154938220977783
    9. '_bal' → logprob: -6.279938220977783
    10. ' ' → logprob: -6.404938220977783

Token 106: ' with' (ID: 483)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 107: ' zero' (ID: 12421)
  Prédit: ' positive'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' positive' → logprob: -0.7390024065971375
    2. ' a' → logprob: -1.2390024662017822
    3. ' net' → logprob: -1.4890024662017822
    4. 'positive' → logprob: -6.114002227783203
    5. ' non' → logprob: -6.864002227783203
    6. 'a' → logprob: -7.239002227783203
    7. ' balanced' → logprob: -7.364002227783203
    8. ' an' → logprob: -7.739002227783203
    9. ' increasing' → logprob: -7.864002227783203
    10. 'net' → logprob: -7.864002227783203

Token 108: ' sum' (ID: 4215)
  Prédit: ' net'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' net' → logprob: -0.19935105741024017
    2. ' sum' → logprob: -2.1993510723114014
    3. '-s' → logprob: -2.6993510723114014
    4. 'sum' → logprob: -6.199350833892822
    5. ' cumulative' → logprob: -8.69935131072998
    6. 'net' → logprob: -9.07435131072998
    7. ' trade' → logprob: -9.32435131072998
    8. ' balance' → logprob: -9.32435131072998
    9. '_sum' → logprob: -9.82435131072998
    10. '-net' → logprob: -10.69935131072998

Token 109: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02801617421209812
    2. '_' → logprob: -4.403016090393066
    3. '   ' → logprob: -5.403016090393066
    4. '<|end|>' → logprob: -5.403016090393066
    5. '        
' → logprob: -6.028016090393066
    6. '        ' → logprob: -6.778016090393066
    7. '    ' → logprob: -7.278016090393066
    8. ':' → logprob: -8.278016090393066
    9. '
' → logprob: -8.403016090393066
    10. ' _' → logprob: -8.903016090393066

Token 110: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5297835469245911
    2. '<|end|>' → logprob: -0.9047835469245911
    3. '<|end|>' → logprob: -6.529783725738525
    4. ':' → logprob: -6.529783725738525
    5. '   ' → logprob: -6.654783725738525
    6. '
' → logprob: -7.154783725738525
    7. '\' → logprob: -8.529783248901367
    8. '```' → logprob: -8.529783248901367
    9. '\n' → logprob: -8.654783248901367
    10. '    ' → logprob: -8.654783248901367

Token 111: ' This' (ID: 1328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005177781917154789
    2. '<|end|>' → logprob: -6.630177974700928
    3. '   ' → logprob: -7.005177974700928
    4. '        
' → logprob: -7.255177974700928
    5. '
' → logprob: -7.380177974700928
    6. '\n' → logprob: -8.00517749786377
    7. ' 
' → logprob: -8.00517749786377
    8. '  
' → logprob: -8.25517749786377
    9. '    
' → logprob: -8.75517749786377
    10. '```' → logprob: -9.13017749786377

Token 112: ' method' (ID: 2595)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8918988704681396
    2. ' def' → logprob: -1.3918988704681396
    3. ' method' → logprob: -2.1418988704681396
    4. ' analysis' → logprob: -2.8918988704681396
    5. ' is' → logprob: -3.6418988704681396
    6. ' can' → logprob: -4.016899108886719
    7. '_' → logprob: -4.141899108886719
    8. '   ' → logprob: -4.266899108886719
    9. '
' → logprob: -4.766899108886719
    10. ' should' → logprob: -4.891899108886719

Token 113: ' must' (ID: 2804)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.37750792503356934
    2. '   ' → logprob: -1.7525079250335693
    3. ' must' → logprob: -3.2525079250335693
    4. ':' → logprob: -3.7525079250335693
    5. ' raises' → logprob: -3.8775079250335693
    6. ' raise' → logprob: -4.127508163452148
    7. ' should' → logprob: -4.377508163452148
    8. '    ' → logprob: -4.877508163452148
    9. ' :' → logprob: -5.502508163452148
    10. ' is' → logprob: -5.627508163452148

Token 114: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.0042381929233670235
    2. ' raise' → logprob: -5.629238128662109
    3. ' ' → logprob: -8.75423812866211
    4. '    ' → logprob: -8.87923812866211
    5. 'be' → logprob: -9.12923812866211
    6. 'raise' → logprob: -10.12923812866211
    7. ' not' → logprob: -10.12923812866211
    8. '   ' → logprob: -10.37923812866211
    9. '_raise' → logprob: -10.50423812866211
    10. '	be' → logprob: -10.75423812866211

Token 115: ' overridden' (ID: 119591)
  Prédit: ' implemented'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' implemented' → logprob: -0.3943254053592682
    2. ' overridden' → logprob: -1.1443253755569458
    3. 'implemented' → logprob: -5.144325256347656
    4. '   ' → logprob: -7.144325256347656
    5. ' overr' → logprob: -8.644325256347656
    6. 'abstract' → logprob: -9.144325256347656
    7. ' completed' → logprob: -9.269325256347656
    8. ' overwritten' → logprob: -9.519325256347656
    9. '    ' → logprob: -9.644325256347656
    10. ' abstract' → logprob: -9.769325256347656

Token 116: ' by' (ID: 656)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.366067111492157
    2. '<|end|>' → logprob: -1.3660671710968018
    3. ' in' → logprob: -3.9910671710968018
    4. '   ' → logprob: -4.491066932678223
    5. ':' → logprob: -5.116066932678223
    6. '
' → logprob: -5.741066932678223
    7. '<|end|>' → logprob: -5.741066932678223
    8. '.' → logprob: -6.116066932678223
    9. '    ' → logprob: -6.366066932678223
    10. '\n' → logprob: -6.491066932678223

Token 117: ' subclasses' (ID: 162106)
  Prédit: ' subclasses'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' subclasses' → logprob: -0.03948986902832985
    2. ' subclass' → logprob: -3.789489984512329
    3. '   ' → logprob: -4.91448974609375
    4. ' the' → logprob: -5.16448974609375
    5. ' any' → logprob: -6.91448974609375
    6. ' raise' → logprob: -7.53948974609375
    7. '    ' → logprob: -7.66448974609375
    8. ' a' → logprob: -7.78948974609375
    9. ' ' → logprob: -8.28948974609375
    10. ' raising' → logprob: -9.66448974609375

Token 118: '.
' (ID: 558)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 119: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018468189984560013
    2. '
' → logprob: -4.268468379974365
    3. '\n' → logprob: -6.518468379974365
    4. '        
' → logprob: -7.018468379974365
    5. ' 
' → logprob: -7.393468379974365
    6. '   ' → logprob: -7.893468379974365
    7. '    
' → logprob: -8.393467903137207
    8. '\' → logprob: -8.393467903137207
    9. ' raise' → logprob: -9.268467903137207
    10. '<|end|>' → logprob: -9.268467903137207

Token 120: ' Returns' (ID: 9609)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.23435185849666595
    2. '       ' → logprob: -1.6093518733978271
    3. '\n' → logprob: -4.984351634979248
    4. ' 
' → logprob: -7.359351634979248
    5. 'n' → logprob: -7.859351634979248
    6. ' raise' → logprob: -7.984351634979248
    7. '        
' → logprob: -8.734352111816406
    8. '   ' → logprob: -8.734352111816406
    9. '    
' → logprob: -9.859352111816406
    10. '' → logprob: -9.984352111816406

Token 121: ':
' (ID: 734)
  Prédit: ' None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.0055307806469500065
    2. 'None' → logprob: -5.255530834197998
    3. '   ' → logprob: -9.25553035736084
    4. '<|end|>' → logprob: -9.25553035736084
    5. ' ' → logprob: -9.75553035736084
    6. ' Not' → logprob: -11.00553035736084
    7. '    ' → logprob: -11.63053035736084
    8. ' 
' → logprob: -12.38053035736084
    9. '  ' → logprob: -12.50553035736084
    10. '(None' → logprob: -13.13053035736084

Token 122: '           ' (ID: 352)
  Prédit: ' None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.06733975559473038
    2. 'None' → logprob: -2.8173396587371826
    3. '       ' → logprob: -5.442339897155762
    4. '   ' → logprob: -7.067339897155762
    5. ' Not' → logprob: -9.067339897155762
    6. 'Not' → logprob: -10.442339897155762
    7. '[]' → logprob: -12.067339897155762
    8. '(None' → logprob: -12.567339897155762
    9. ' ' → logprob: -12.692339897155762
    10. '0' → logprob: -12.692339897155762

Token 123: ' int' (ID: 677)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.2867110073566437
    2. ' None' → logprob: -1.7867109775543213
    3. 'List' → logprob: -3.2867109775543213
    4. 'int' (adapté à ' int') → logprob: -3.5367109775543213
    5. '   ' → logprob: -5.5367112159729
    6. 'Not' → logprob: -5.9117112159729
    7. 'Optional' → logprob: -6.0367112159729
    8. ' int' → logprob: -6.5367112159729
    9. ' List' → logprob: -6.7867112159729
    10. 'Tuple' → logprob: -7.0367112159729

Token 124: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.024294346570968628
    2. '<|end|>' → logprob: -4.774294376373291
    3. '       ' → logprob: -5.524294376373291
    4. ':
' → logprob: -5.899294376373291
    5. '
' → logprob: -5.899294376373291
    6. ' ' → logprob: -6.399294376373291
    7. '   ' → logprob: -6.649294376373291
    8. ' :' → logprob: -7.274294376373291
    9. 'None' → logprob: -7.274294376373291
    10. '0' → logprob: -7.649294376373291

Token 125: ' Length' (ID: 32926)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.4666686058044434
    2. 'The' → logprob: -1.4666686058044434
    3. ' The' → logprob: -1.4666686058044434
    4. ' raise' → logprob: -2.8416686058044434
    5. '       ' → logprob: -2.9666686058044434
    6. 'Longest' → logprob: -3.0916686058044434
    7. ' ' → logprob: -3.2166686058044434
    8. 'Length' → logprob: -3.5916686058044434
    9. ' length' → logprob: -3.9666686058044434
    10. ' Not' → logprob: -4.341668605804443

Token 126: ' of' (ID: 328)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 127: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.1910995990037918
    2. 'the' → logprob: -1.9410996437072754
    3. ' longest' → logprob: -3.5660996437072754
    4. '0' → logprob: -7.316099643707275
    5. ' zero' → logprob: -7.566099643707275
    6. 'long' → logprob: -7.816099643707275
    7. ' ' → logprob: -7.941099643707275
    8. 'zero' → logprob: -9.566099166870117
    9. 'interval' → logprob: -10.191099166870117
    10. ' interval' → logprob: -11.316099166870117

Token 128: ' longest' (ID: 37511)
  Prédit: ' longest'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' longest' → logprob: -0.00030805266578681767
    2. 'long' → logprob: -8.5003080368042
    3. ' zero' → logprob: -10.1253080368042
    4. 'zero' → logprob: -10.6253080368042
    5. 'Longest' → logprob: -10.8753080368042
    6. '0' → logprob: -11.3753080368042
    7. '最长' → logprob: -13.3753080368042
    8. 'max' → logprob: -13.3753080368042
    9. 'interval' → logprob: -13.7503080368042
    10. ' interval' → logprob: -14.0003080368042

Token 129: ' sub' (ID: 1543)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.7505042552947998
    2. ' zero' → logprob: -1.6255042552947998
    3. ' interval' → logprob: -1.6255042552947998
    4. 'zero' → logprob: -2.1255042552948
    5. 'sub' → logprob: -5.000504493713379
    6. ' sub' → logprob: -6.000504493713379
    7. ' continuous' → logprob: -6.750504493713379
    8. ' contiguous' → logprob: -6.875504493713379
    9. 'continuous' → logprob: -7.000504493713379
    10. ' sequence' → logprob: -7.125504493713379

Token 130: 'interval' (ID: 37558)
  Prédit: 'array'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'array' → logprob: -0.39623644948005676
    2. 'sequence' → logprob: -1.1462364196777344
    3. 'string' → logprob: -5.771236419677734
    4. 'interval' → logprob: -5.896236419677734
    5. '   ' → logprob: -6.896236419677734
    6. ' sequence' → logprob: -7.021236419677734
    7. ' array' → logprob: -7.771236419677734
    8. 'list' → logprob: -7.896236419677734
    9. '_' → logprob: -8.771236419677734
    10. 'class' → logprob: -8.896236419677734

Token 131: ' with' (ID: 483)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -1.2558587789535522
    2. '
' → logprob: -1.5058587789535522
    3. '<|end|>' → logprob: -1.5058587789535522
    4. '       ' → logprob: -1.6308587789535522
    5. ' with' → logprob: -3.505858898162842
    6. '   ' → logprob: -4.255858898162842
    7. ' that' → logprob: -4.880858898162842
    8. '\n' → logprob: -5.755858898162842
    9. ' (' → logprob: -6.005858898162842
    10. ' ' → logprob: -6.130858898162842

Token 132: ' sum' (ID: 4215)
  Prédit: ' zero'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' zero' → logprob: -0.6594208478927612
    2. 'zero' → logprob: -0.7844208478927612
    3. 'sum' → logprob: -4.784420967102051
    4. ' sum' → logprob: -5.409420967102051
    5. ' a' → logprob: -5.534420967102051
    6. ' net' → logprob: -5.659420967102051
    7. '0' → logprob: -6.034420967102051
    8. 'a' → logprob: -6.534420967102051
    9. 'net' → logprob: -7.409420967102051
    10. 'self' → logprob: -7.659420967102051

Token 133: ' zero' (ID: 12421)
  Prédit: ' zero'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' zero' → logprob: -0.38387659192085266
    2. '0' → logprob: -1.5088765621185303
    3. ' ' → logprob: -3.2588765621185303
    4. ' ==' → logprob: -3.3838765621185303
    5. '   ' → logprob: -4.258876800537109
    6. '==' → logprob: -6.008876800537109
    7. 'zero' → logprob: -6.383876800537109
    8. ' =' → logprob: -6.508876800537109
    9. ' equal' → logprob: -6.633876800537109
    10. ' of' → logprob: -6.758876800537109

Token 134: '.
' (ID: 558)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6029765009880066
    2. '       ' → logprob: -0.9779765009880066
    3. '<|end|>' → logprob: -2.7279765605926514
    4. '   ' → logprob: -5.227976322174072
    5. '\n' → logprob: -6.227976322174072
    6. ':' → logprob: -6.477976322174072
    7. ',' → logprob: -7.727976322174072
    8. '<|end|>' → logprob: -7.852976322174072
    9. ':
' → logprob: -8.22797679901123
    10. ')' → logprob: -8.85297679901123

Token 135: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09027881920337677
    2. '
' → logprob: -2.4652788639068604
    3. ' 
' → logprob: -7.840278625488281
    4. '   ' → logprob: -8.215278625488281
    5. '\n' → logprob: -8.840278625488281
    6. '    
' → logprob: -8.840278625488281
    7. '        
' → logprob: -8.965278625488281
    8. '  
' → logprob: -9.965278625488281
    9. ' raise' → logprob: -9.965278625488281
    10. ')' → logprob: -10.840278625488281

Token 136: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0620790496468544
    2. '
' → logprob: -2.8120789527893066
    3. ' raise' → logprob: -10.187079429626465
    4. '   ' → logprob: -11.187079429626465
    5. ' 
' → logprob: -11.687079429626465
    6. '\n' → logprob: -11.687079429626465
    7. '        
' → logprob: -11.812079429626465
    8. '      ' → logprob: -12.312079429626465
    9. '```' → logprob: -12.312079429626465
    10. '"""' → logprob: -12.437079429626465

Token 137: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00010783452307805419
    2. 'raise' → logprob: -9.875107765197754
    3. ' raise' → logprob: -10.500107765197754
    4. '   ' → logprob: -11.250107765197754
    5. '
' → logprob: -11.250107765197754
    6. '        
' → logprob: -14.125107765197754
    7. '      ' → logprob: -15.125107765197754
    8. '     ' → logprob: -15.250107765197754
    9. '	raise' → logprob: -15.250107765197754
    10. '\' → logprob: -15.375107765197754

Token 138: ' raise' (ID: 9338)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raise' (adapté à ' raise') → logprob: -0.015657616779208183
    2. ' raise' → logprob: -4.265657424926758
    3. '       ' → logprob: -6.515657424926758
    4. '   ' → logprob: -11.515657424926758
    5. 'pass' → logprob: -13.390657424926758
    6. '	raise' → logprob: -13.640657424926758
    7. '    ' → logprob: -16.390657424926758
    8. 'raises' → logprob: -17.265657424926758
    9. 'raising' → logprob: -17.515657424926758
    10. '     ' → logprob: -17.640657424926758

Token 139: ' Not' (ID: 4037)
  Prédit: ' Not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Not' → logprob: -0.0007133854669518769
    2. 'Not' → logprob: -7.250713348388672
    3. ' ' → logprob: -14.125713348388672
    4. '@Not' → logprob: -14.250713348388672
    5. '_Not' → logprob: -14.375713348388672
    6. '(Not' → logprob: -14.500713348388672
    7. ' No' → logprob: -15.000713348388672
    8. ' ' → logprob: -15.250713348388672
    9. '\Not' → logprob: -15.500713348388672
    10. '_not' → logprob: -15.875713348388672

Token 140: 'Implemented' (ID: 42030)
  Prédit: 'Implemented'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Implemented' → logprob: -0.006265896838158369
    2. 'plement' → logprob: -5.131266117095947
    3. 'implemented' → logprob: -8.131265640258789
    4. 'ot' → logprob: -10.881265640258789
    5. 'Implement' → logprob: -11.381265640258789
    6. 'Impl' → logprob: -12.256265640258789
    7. 'm' → logprob: -13.256265640258789
    8. 'p' → logprob: -13.506265640258789
    9. 'PL' → logprob: -13.881265640258789
    10. 'pl' → logprob: -14.256265640258789

Token 141: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -3.0948158382670954e-05
    2. 'rror' → logprob: -10.500030517578125
    3. 'ed' → logprob: -12.875030517578125
    4. 'error' → logprob: -15.375030517578125
    5. 'ror' → logprob: -15.625030517578125
    6. 'ated' → logprob: -15.875030517578125
    7. 'r' → logprob: -16.500030517578125
    8. 'ted' → logprob: -17.625030517578125
    9. 'Erro' → logprob: -17.875030517578125
    10. 'ation' → logprob: -18.000030517578125

Token 142: '("' (ID: 568)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 143: 'Sub' (ID: 3638)
  Prédit: 'an'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'an' → logprob: -0.31345272064208984
    2. 'Sub' → logprob: -1.5634527206420898
    3. 'Subclass' → logprob: -3.31345272064209
    4. 'This' → logprob: -4.43845272064209
    5. ' analyze' → logprob: -5.68845272064209
    6. 'Method' → logprob: -5.81345272064209
    7. 'Analyze' → logprob: -6.06345272064209
    8. 'Implement' → logprob: -6.31345272064209
    9. 'Must' → logprob: -7.68845272064209
    10. ' Sub' → logprob: -9.06345272064209

Token 144: 'classes' (ID: 17233)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.3138020634651184
    2. 'classes' → logprob: -1.3138020038604736
    3. '   ' → logprob: -9.313801765441895
    4. 'lasses' → logprob: -9.438801765441895
    5. '<class' → logprob: -9.688801765441895
    6. 'cls' → logprob: -9.938801765441895
    7. ' classes' → logprob: -10.188801765441895
    8. '```' → logprob: -10.188801765441895
    9. 'classmethod' → logprob: -10.438801765441895
    10. 'clas' → logprob: -10.438801765441895

Token 145: ' should' (ID: 1757)
  Prédit: ' must'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' must' → logprob: -0.01299044955521822
    2. ' should' → logprob: -4.387990474700928
    3. 'must' → logprob: -7.887990474700928
    4. ' need' → logprob: -9.76298999786377
    5. '<|end|>' → logprob: -10.88798999786377
    6. ' ' → logprob: -11.01298999786377
    7. 'should' → logprob: -11.63798999786377
    8. ' are' → logprob: -13.63798999786377
    9. '.must' → logprob: -14.76298999786377
    10. '  ' → logprob: -15.26298999786377

Token 146: ' implement' (ID: 6365)
  Prédit: ' implement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' implement' → logprob: -0.0015554478159174323
    2. ' override' → logprob: -7.126555442810059
    3. 'implement' → logprob: -7.376555442810059
    4. ' provide' → logprob: -9.376555442810059
    5. 'Implement' → logprob: -11.251555442810059
    6. 'override' → logprob: -11.501555442810059
    7. ' ' → logprob: -11.501555442810059
    8. ' imple' → logprob: -13.126555442810059
    9. ' implementar' → logprob: -13.876555442810059
    10. ' Implement' → logprob: -14.251555442810059

Token 147: ' this' (ID: 495)
  Prédit: ' analyze'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' analyze' → logprob: -0.09228415787220001
    2. ' this' → logprob: -2.4672842025756836
    3. ' the' → logprob: -5.717284202575684
    4. 'an' → logprob: -10.842284202575684
    5. ' ' → logprob: -10.967284202575684
    6. ' an' → logprob: -12.592284202575684
    7. ' def' → logprob: -13.342284202575684
    8. ' analysis' → logprob: -13.342284202575684
    9. '  ' → logprob: -13.467284202575684
    10. '   ' → logprob: -13.842284202575684

Token 148: '!"' (ID: 18313)
  Prédit: ' method'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' method' → logprob: -0.0067764767445623875
    2. ' analyze' → logprob: -5.131776332855225
    3. 'method' → logprob: -7.631776332855225
    4. 'an' → logprob: -8.256776809692383
    5. ' ' → logprob: -10.631776809692383
    6. '   ' → logprob: -10.756776809692383
    7. ' function' → logprob: -11.256776809692383
    8. '  ' → logprob: -11.381776809692383
    9. ' )' → logprob: -12.006776809692383
    10. ' analysis' → logprob: -12.131776809692383

Token 149: ')


' (ID: 7861)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0029754415154457092
    2. '<|end|>' → logprob: -6.5029754638671875
    3. '
' → logprob: -6.8779754638671875
    4. ')
' → logprob: -8.127975463867188
    5. '   ' → logprob: -9.752975463867188
    6. '\n' → logprob: -10.502975463867188
    7. ')

' → logprob: -11.252975463867188
    8. '<|end|>' → logprob: -11.377975463867188
    9. '```' → logprob: -11.502975463867188
    10. '}' → logprob: -12.502975463867188

Token 150: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.2781745493412018
    2. '
' → logprob: -1.5281745195388794
    3. '<|end|>' → logprob: -4.52817440032959
    4. '   ' → logprob: -5.77817440032959
    5. ' class' → logprob: -6.02817440032959
    6. '\n' → logprob: -6.15317440032959
    7. '' → logprob: -6.40317440032959
    8. '

' → logprob: -6.52817440032959
    9. 'c' → logprob: -6.52817440032959
    10. ' 
' → logprob: -7.27817440032959

Token 151: ' Prefix' (ID: 121368)
  Prédit: ' Trade'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Trade' → logprob: -0.5508542656898499
    2. ' Br' → logprob: -2.300854206085205
    3. ' Prefix' → logprob: -2.300854206085205
    4. 'Trade' → logprob: -2.800854206085205
    5. 'Prefix' → logprob: -3.425854206085205
    6. ' Zero' → logprob: -3.550854206085205
    7. 'Br' → logprob: -3.800854206085205
    8. ' Balanced' → logprob: -3.925854206085205
    9. ' Balance' → logprob: -4.175854206085205
    10. ' Na' → logprob: -4.800854206085205

Token 152: 'Sum' (ID: 17434)
  Prédit: 'Sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sum' → logprob: -0.0005511255003511906
    2. 'Zero' → logprob: -7.750551223754883
    3. 'Balance' → logprob: -9.250551223754883
    4. 'Trade' → logprob: -11.250551223754883
    5. 'sum' → logprob: -12.750551223754883
    6. 'S' → logprob: -13.125551223754883
    7. 'Based' → logprob: -13.375551223754883
    8. 'Span' → logprob: -14.000551223754883
    9. 'Suffix' → logprob: -14.250551223754883
    10. ' sum' → logprob: -14.375551223754883

Token 153: 'Balance' (ID: 20996)
  Prédit: 'Analyzer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Analyzer' → logprob: -0.04704774171113968
    2. 'Zero' → logprob: -3.5470478534698486
    3. 'Trade' → logprob: -4.4220476150512695
    4. 'Based' → logprob: -5.9220476150512695
    5. 'Longest' → logprob: -6.2970476150512695
    6. 'Method' → logprob: -8.29704761505127
    7. 'Calculator' → logprob: -9.29704761505127
    8. 'Appro' → logprob: -9.67204761505127
    9. 'Finder' → logprob: -10.04704761505127
    10. 'Balance' → logprob: -10.54704761505127

Token 154: 'Analyzer' (ID: 61604)
  Prédit: 'Analyzer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Analyzer' → logprob: -0.00016635251813568175
    2. 'Finder' → logprob: -8.875165939331055
    3. 'Analy' → logprob: -11.500165939331055
    4. 'Calculator' → logprob: -11.875165939331055
    5. 'Optimizer' → logprob: -12.750165939331055
    6. ' Analyzer' → logprob: -13.375165939331055
    7. 'Tracker' → logprob: -13.500165939331055
    8. 'Solver' → logprob: -14.500165939331055
    9. 'Indexer' → logprob: -14.500165939331055
    10. 'an' → logprob: -14.875165939331055

Token 155: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.20148378610610962
    2. ':' → logprob: -1.7014837265014648
    3. ':
' → logprob: -10.076483726501465
    4. ' :' → logprob: -11.451483726501465
    5. '(T' → logprob: -12.201483726501465
    6. '(:' → logprob: -13.076483726501465
    7. '():' → logprob: -13.451483726501465
    8. '(Abstract' → logprob: -13.701483726501465
    9. '(
' → logprob: -14.076483726501465
    10. '   ' → logprob: -14.076483726501465

Token 156: 'Trade' (ID: 35554)
  Prédit: ' Trade'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Trade' → logprob: -0.632622480392456
    2. 'Trade' → logprob: -0.757622480392456
    3. ')' → logprob: -11.632622718811035
    4. ' ' → logprob: -12.257622718811035
    5. '   ' → logprob: -12.257622718811035
    6. ' Trades' → logprob: -14.132622718811035
    7. '):
' → logprob: -14.257622718811035
    8. '):' → logprob: -14.257622718811035
    9. ' )' → logprob: -14.382622718811035
    10. '  ' → logprob: -14.382622718811035

Token 157: 'Balance' (ID: 20996)
  Prédit: 'Balance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Balance' → logprob: -8.895480277715251e-06
    2. ' Balance' → logprob: -12.625008583068848
    3. '_balance' → logprob: -12.750008583068848
    4. 'Balances' → logprob: -13.625008583068848
    5. 'Balancer' → logprob: -14.250008583068848
    6. 'Balanced' → logprob: -14.625008583068848
    7. 'Bal' → logprob: -15.625008583068848
    8. 'alance' → logprob: -16.250009536743164
    9. 'balance' → logprob: -17.375009536743164
    10. '_BAL' → logprob: -17.375009536743164

Token 158: 'Analyzer' (ID: 61604)
  Prédit: 'Analyzer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Analyzer' → logprob: -0.0006847949116490781
    2. 'Analy' → logprob: -7.37568473815918
    3. 'Analyze' → logprob: -10.62568473815918
    4. ' Analyzer' → logprob: -10.75068473815918
    5. 'A' → logprob: -12.12568473815918
    6. 'Anal' → logprob: -13.25068473815918
    7. ')' → logprob: -13.62568473815918
    8. 'an' → logprob: -14.12568473815918
    9. ' analyzer' → logprob: -14.37568473815918
    10. 'Optimizer' → logprob: -14.75068473815918

Token 159: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004096093121916056
    2. '):
' → logprob: -5.504096031188965
    3. ')' → logprob: -11.379096031188965
    4. ':' → logprob: -13.379096031188965
    5. ' ):' → logprob: -13.379096031188965
    6. '):
' → logprob: -13.504096031188965
    7. '):

' → logprob: -13.629096031188965
    8. '   ' → logprob: -15.129096031188965
    9. '>):' → logprob: -16.75409698486328
    10. '[]):' → logprob: -17.87909698486328

Token 160: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.036650657653808594
    2. ':' → logprob: -3.4116506576538086
    3. '    
' → logprob: -6.536650657653809
    4. '
' → logprob: -7.161650657653809
    5. ':
' → logprob: -7.286650657653809
    6. 'def' → logprob: -10.286650657653809
    7. ':def' → logprob: -11.036650657653809
    8. ' def' → logprob: -12.036650657653809
    9. '  
' → logprob: -12.286650657653809
    10. ' 
' → logprob: -12.536650657653809

Token 161: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5142793655395508
    2. '
' → logprob: -1.1392793655395508
    3. 'def' → logprob: -2.889279365539551
    4. ' def' → logprob: -3.764279365539551
    5. '    
' → logprob: -5.764279365539551
    6. ' 
' → logprob: -10.63927936553955
    7. '	def' → logprob: -11.38927936553955
    8. '    ' → logprob: -11.76427936553955
    9. '   
' → logprob: -11.88927936553955
    10. '

' → logprob: -12.01427936553955

Token 162: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015493767336010933
    2. 'def' → logprob: -4.765493869781494
    3. ' def' → logprob: -5.015493869781494
    4. '
' → logprob: -9.515493392944336
    5. '    ' → logprob: -9.890493392944336
    6. ' """
' → logprob: -10.140493392944336
    7. '"""
' → logprob: -10.515493392944336
    8. '"""' → logprob: -11.015493392944336
    9. ' """' → logprob: -12.140493392944336
    10. 'class' → logprob: -12.765493392944336

Token 163: ' Implements' (ID: 123308)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.42481330037117004
    2. ' def' → logprob: -2.2998132705688477
    3. ' Implements' → logprob: -2.7998132705688477
    4. 'Uses' → logprob: -3.1748132705688477
    5. 'Analy' → logprob: -3.2998132705688477
    6. 'Im' → logprob: -3.4248132705688477
    7. 'def' → logprob: -3.5498132705688477
    8. ' Uses' → logprob: -4.799813270568848
    9. '"""' → logprob: -5.299813270568848
    10. 'Implement' → logprob: -5.424813270568848

Token 164: ' zero' (ID: 12421)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.33481553196907043
    2. ' a' → logprob: -1.709815502166748
    3. ' an' → logprob: -2.334815502166748
    4. ' analysis' → logprob: -6.084815502166748
    5. ' Trade' → logprob: -7.084815502166748
    6. 'the' → logprob: -7.334815502166748
    7. ' analyze' → logprob: -7.459815502166748
    8. ' longest' → logprob: -7.834815502166748
    9. ' prefix' → logprob: -7.959815502166748
    10. ' ' → logprob: -8.084815979003906

Token 165: '-s' (ID: 2011)
  Prédit: ' sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.056729625910520554
    2. '-s' → logprob: -2.931729555130005
    3. 'sum' → logprob: -6.931729793548584
    4. '-based' → logprob: -7.431729793548584
    5. '_sum' → logprob: -8.806729316711426
    6. ' -' → logprob: -9.806729316711426
    7. '-' → logprob: -10.681729316711426
    8. '   ' → logprob: -11.181729316711426
    9. ' ' → logprob: -11.681729316711426
    10. ' based' → logprob: -11.806729316711426

Token 166: 'um' (ID: 394)
  Prédit: 'um'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.00025645215646363795
    2. 'u' → logprob: -9.750256538391113
    3. ' um' → logprob: -9.750256538391113
    4. 'ub' → logprob: -10.125256538391113
    5. '   ' → logprob: -10.375256538391113
    6. '```' → logprob: -11.875256538391113
    7. 'sum' → logprob: -12.125256538391113
    8. '       ' → logprob: -12.562756538391113
    9. 'un' → logprob: -12.750256538391113
    10. 'uml' → logprob: -12.812756538391113

Token 167: ' longest' (ID: 37511)
  Prédit: ' interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' interval' → logprob: -0.5914905071258545
    2. ' sub' → logprob: -0.9664905071258545
    3. 'interval' → logprob: -4.091490745544434
    4. 'sub' → logprob: -4.216490745544434
    5. ' balance' → logprob: -4.591490745544434
    6. ' trade' → logprob: -4.716490745544434
    7. ' analysis' → logprob: -5.216490745544434
    8. ' longest' → logprob: -5.341490745544434
    9. ' intervals' → logprob: -6.716490745544434
    10. ' substring' → logprob: -7.466490745544434

Token 168: ' sub' (ID: 1543)
  Prédit: ' sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sub' → logprob: -0.07981299608945847
    2. ' interval' → logprob: -2.704813003540039
    3. 'sub' → logprob: -4.829813003540039
    4. 'interval' → logprob: -6.954813003540039
    5. '_sub' → logprob: -7.704813003540039
    6. ' substring' → logprob: -8.204813003540039
    7. ' contiguous' → logprob: -9.579813003540039
    8. ' subse' → logprob: -11.079813003540039
    9. ' length' → logprob: -11.079813003540039
    10. ' segment' → logprob: -11.329813003540039

Token 169: 'array' (ID: 3361)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.049668967723846436
    2. '_interval' → logprob: -3.799669027328491
    3. 'array' → logprob: -4.424668788909912
    4. ' interval' → logprob: -5.174668788909912
    5. '_' → logprob: -5.299668788909912
    6. 'sequence' → logprob: -6.424668788909912
    7. '   ' → logprob: -7.049668788909912
    8. 'string' → logprob: -7.174668788909912
    9. 'class' → logprob: -9.54966926574707
    10. '-' → logprob: -10.29966926574707

Token 170: ' detection' (ID: 28385)
  Prédit: ' analysis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' analysis' → logprob: -0.9493893980979919
    2. ' detection' → logprob: -1.3243894577026367
    3. ' method' → logprob: -1.9493894577026367
    4. ' logic' → logprob: -2.1993894577026367
    5. ' length' → logprob: -3.6993894577026367
    6. ' finding' → logprob: -4.199389457702637
    7. ' finder' → logprob: -4.574389457702637
    8. ' approach' → logprob: -4.824389457702637
    9. ' solution' → logprob: -4.824389457702637
    10. ' search' → logprob: -5.074389457702637

Token 171: ' using' (ID: 2360)
  Prédit: ' using'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' using' → logprob: -0.6845421195030212
    2. '   ' → logprob: -0.8095421195030212
    3. ' method' → logprob: -4.184542179107666
    4. ' with' → logprob: -4.684542179107666
    5. ' for' → logprob: -4.809542179107666
    6. ' by' → logprob: -5.434542179107666
    7. '.' → logprob: -5.434542179107666
    8. ' in' → logprob: -5.809542179107666
    9. 'using' → logprob: -6.809542179107666
    10. ' logic' → logprob: -6.809542179107666

Token 172: ' prefix' (ID: 18633)
  Prédit: ' prefix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' prefix' → logprob: -0.0018036997644230723
    2. ' a' → logprob: -6.751803874969482
    3. 'prefix' → logprob: -7.626803874969482
    4. ' hash' → logprob: -9.751803398132324
    5. ' the' → logprob: -9.876803398132324
    6. ' hashing' → logprob: -11.376803398132324
    7. ' hashmap' → logprob: -11.501803398132324
    8. '_prefix' → logprob: -13.001803398132324
    9. 'Prefix' → logprob: -13.126803398132324
    10. ' prefixes' → logprob: -13.126803398132324

Token 173: ' sums' (ID: 73121)
  Prédit: '_sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.6422781944274902
    2. '_' → logprob: -1.1422781944274902
    3. ' _' → logprob: -2.0172781944274902
    4. '_s' → logprob: -4.64227819442749
    5. ' sum' → logprob: -5.01727819442749
    6. ' sums' → logprob: -5.26727819442749
    7. 'sum' → logprob: -8.267278671264648
    8. '   ' → logprob: -10.017278671264648
    9. 'Sum' → logprob: -11.017278671264648
    10. ' ' → logprob: -11.017278671264648

Token 174: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8759186863899231
    2. ' and' → logprob: -1.0009186267852783
    3. '.' → logprob: -1.7509186267852783
    4. ' with' → logprob: -3.3759186267852783
    5. 'and' → logprob: -6.250918865203857
    6. ' for' → logprob: -6.375918865203857
    7. ' to' → logprob: -6.875918865203857
    8. ' method' → logprob: -7.000918865203857
    9. ' technique' → logprob: -7.375918865203857
    10. ',' → logprob: -7.625918865203857

Token 175: ' hashing' (ID: 185245)
  Prédit: 'hash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hash' → logprob: -0.6761184930801392
    2. ' hash' → logprob: -1.3011184930801392
    3. ' a' → logprob: -2.0511183738708496
    4. ' hashmap' → logprob: -3.0511183738708496
    5. ' hashing' → logprob: -3.1761183738708496
    6. 'a' → logprob: -7.30111837387085
    7. ' hashes' → logprob: -7.80111837387085
    8. '_hash' → logprob: -9.301118850708008
    9. 'has' → logprob: -9.426118850708008
    10. ' dictionaries' → logprob: -10.051118850708008

Token 176: '.
' (ID: 558)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.7045266032218933
    2. '   ' → logprob: -0.7045266032218933
    3. '<|end|>' → logprob: -5.704526424407959
    4. '
' → logprob: -6.079526424407959
    5. ' for' → logprob: -6.454526424407959
    6. ' to' → logprob: -6.579526424407959
    7. '<|end|>' → logprob: -6.829526424407959
    8. ',' → logprob: -7.829526424407959
    9. ' with' → logprob: -7.954526424407959
    10. '.
' → logprob: -8.204526901245117

Token 177: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09056130051612854
    2. '   ' → logprob: -2.9655613899230957
    3. '<|end|>' → logprob: -3.4655613899230957
    4. '    
' → logprob: -6.340561389923096
    5. '<|end|>' → logprob: -6.965561389923096
    6. ')' → logprob: -8.090560913085938
    7. '

' → logprob: -8.215560913085938
    8. '```' → logprob: -8.340560913085938
    9. '\n' → logprob: -10.090560913085938
    10. '    ' → logprob: -10.215560913085938

Token 178: ' """

' (ID: 28800)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.01361154392361641
    2. '   ' → logprob: -4.388611316680908
    3. '    
' → logprob: -6.888611316680908
    4. '

' → logprob: -10.388611793518066
    5. '```' → logprob: -10.888611793518066
    6. '<|end|>' → logprob: -11.263611793518066
    7. '
' → logprob: -12.638611793518066
    8. 'def' → logprob: -12.763611793518066
    9. '<|end|>' → logprob: -12.763611793518066
    10. ' 
' → logprob: -12.888611793518066

Token 179: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06505962461233139
    2. 'def' → logprob: -2.8150596618652344
    3. ' def' → logprob: -5.815059661865234
    4. '
' → logprob: -9.315059661865234
    5. '    
' → logprob: -11.190059661865234
    6. '	def' → logprob: -15.690059661865234
    7. ' 
' → logprob: -15.940059661865234
    8. '    ' → logprob: -15.940059661865234
    9. '   ' → logprob: -16.065059661865234
    10. '```' → logprob: -16.315059661865234

Token 180: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -1.1637164789135568e-05
    2. ' def' → logprob: -11.375011444091797
    3. '   ' → logprob: -16.500011444091797
    4. '	def' → logprob: -19.500011444091797
    5. 'from' → logprob: -20.000011444091797
    6. 'import' → logprob: -20.125011444091797
    7. '
' → logprob: -20.375011444091797
    8. 'class' → logprob: -20.625011444091797
    9. 'an' → logprob: -21.000011444091797
    10. 'de' → logprob: -21.750011444091797

Token 181: ' analyze' (ID: 30532)
  Prédit: ' analyze'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' analyze' → logprob: -0.7010740637779236
    2. ' def' → logprob: -1.0760741233825684
    3. ' __' → logprob: -2.9510741233825684
    4. ' _' → logprob: -3.2010741233825684
    5. 'n' → logprob: -3.3260741233825684
    6. '_' → logprob: -4.076074123382568
    7. '_an' → logprob: -4.451074123382568
    8. ' ' → logprob: -5.951074123382568
    9. ' init' → logprob: -7.576074123382568
    10. ' n' → logprob: -7.701074123382568

Token 182: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0025078821927309036
    2. '(' → logprob: -6.00250768661499
    3. '   ' → logprob: -11.252508163452148
    4. '(
' → logprob: -11.377508163452148
    5. 'self' → logprob: -12.877508163452148
    6. ' (' → logprob: -13.127508163452148
    7. '(Self' → logprob: -13.877508163452148
    8. '(s' → logprob: -14.252508163452148
    9. '       ' → logprob: -14.377508163452148
    10. '	self' → logprob: -15.127508163452148

Token 183: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.16281044483184814
    2. '):
' → logprob: -1.9128104448318481
    3. '   ' → logprob: -7.287810325622559
    4. 'self' → logprob: -7.287810325622559
    5. ')' → logprob: -7.537810325622559
    6. '       ' → logprob: -8.037810325622559
    7. '):
' → logprob: -9.162810325622559
    8. ' ):' → logprob: -9.287810325622559
    9. ',' → logprob: -9.412810325622559
    10. '(self' → logprob: -10.412810325622559

Token 184: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01665298454463482
    2. ':' → logprob: -4.266653060913086
    3. '
' → logprob: -6.391653060913086
    4. '(self' → logprob: -8.391653060913086
    5. '        
' → logprob: -8.641653060913086
    6. ':
' → logprob: -8.891653060913086
    7. '   ' → logprob: -9.766653060913086
    8. '(' → logprob: -9.891653060913086
    9. '():' → logprob: -10.266653060913086
    10. '    
' → logprob: -10.391653060913086

Token 185: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003849133790936321
    2. 'n' → logprob: -9.000385284423828
    3. ' n' → logprob: -9.125385284423828
    4. '
' → logprob: -10.250385284423828
    5. '        ' → logprob: -10.250385284423828
    6. 'prefix' → logprob: -10.375385284423828
    7. 'index' → logprob: -12.000385284423828
    8. ' prefix' → logprob: -12.000385284423828
    9. 'sum' → logprob: -12.125385284423828
    10. '        
' → logprob: -12.375385284423828

Token 186: ' Dictionary' (ID: 21459)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.4951844811439514
    2. ' prefix' → logprob: -0.9951844811439514
    3. 'seen' → logprob: -5.120184421539307
    4. ' n' → logprob: -5.370184421539307
    5. ' seen' → logprob: -5.995184421539307
    6. 'n' → logprob: -6.245184421539307
    7. 'sum' → logprob: -6.370184421539307
    8. '   ' → logprob: -6.495184421539307
    9. '       ' → logprob: -7.245184421539307
    10. 'hash' → logprob: -7.495184421539307

Token 187: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.3148888349533081
    2. ' =' → logprob: -2.4398889541625977
    3. 'prefix' → logprob: -2.8148889541625977
    4. ' prefix' → logprob: -3.4398889541625977
    5. '=' → logprob: -3.5648889541625977
    6. ' mapping' → logprob: -4.064888954162598
    7. 'to' → logprob: -4.064888954162598
    8. ' for' → logprob: -5.689888954162598
    9. ' seen' → logprob: -5.814888954162598
    10. ' of' → logprob: -6.064888954162598

Token 188: ' store' (ID: 4897)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.9877697229385376
    2. 'store' → logprob: -0.9877697229385376
    3. ' store' → logprob: -1.6127697229385376
    4. 'map' → logprob: -4.237769603729248
    5. ' map' → logprob: -4.487769603729248
    6. 'hash' → logprob: -4.987769603729248
    7. ' {' → logprob: -4.987769603729248
    8. 'prefix' → logprob: -5.612769603729248
    9. 'index' → logprob: -5.987769603729248
    10. '{}' → logprob: -6.362769603729248

Token 189: ' earliest' (ID: 48721)
  Prédit: ' prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' prefix' → logprob: -0.17490170896053314
    2. 'prefix' → logprob: -1.9249017238616943
    3. ' cumulative' → logprob: -5.424901485443115
    4. '{' → logprob: -5.549901485443115
    5. ' {' → logprob: -5.799901485443115
    6. ' sum' → logprob: -6.674901485443115
    7. 'sum' → logprob: -7.049901485443115
    8. ' indices' → logprob: -7.799901485443115
    9. '_prefix' → logprob: -9.049901962280273
    10. ' first' → logprob: -9.174901962280273

Token 190: ' index' (ID: 3472)
  Prédit: ' indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' indices' → logprob: -0.7887576818466187
    2. ' occurrence' → logprob: -0.9137576818466187
    3. ' index' → logprob: -2.663757801055908
    4. '_occ' → logprob: -3.538757801055908
    5. ' occurrences' → logprob: -4.288757801055908
    6. ' prefix' → logprob: -4.663757801055908
    7. 'indices' → logprob: -5.663757801055908
    8. '_indices' → logprob: -5.663757801055908
    9. '_seen' → logprob: -5.913757801055908
    10. 'seen' → logprob: -5.913757801055908

Token 191: ' of' (ID: 328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.029321312904358
    2. ' =' → logprob: -1.654321312904358
    3. 's' → logprob: -2.0293211936950684
    4. '{' → logprob: -2.5293211936950684
    5. ' {' → logprob: -2.7793211936950684
    6. ' of' → logprob: -2.9043211936950684
    7. ':' → logprob: -3.4043211936950684
    8. ' seen' → logprob: -3.7793211936950684
    9. '_seen' → logprob: -4.404321193695068
    10. 'sum' → logprob: -4.904321193695068

Token 192: ' each' (ID: 2454)
  Prédit: ' each'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' each' → logprob: -0.44903573393821716
    2. ' prefix' → logprob: -1.3240357637405396
    3. 'each' → logprob: -3.32403564453125
    4. 'prefix' → logprob: -3.44903564453125
    5. ' a' → logprob: -3.94903564453125
    6. ' cumulative' → logprob: -4.94903564453125
    7. 'sum' → logprob: -7.57403564453125
    8. ' sum' → logprob: -8.07403564453125
    9. 'a' → logprob: -8.44903564453125
    10. ' seen' → logprob: -9.44903564453125

Token 193: ' prefix' (ID: 18633)
  Prédit: ' prefix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' prefix' → logprob: -0.11487526446580887
    2. 'prefix' → logprob: -2.239875316619873
    3. ' cumulative' → logprob: -6.364875316619873
    4. '_prefix' → logprob: -8.989874839782715
    5. ' sum' → logprob: -9.239874839782715
    6. 'sum' → logprob: -9.489874839782715
    7. '(prefix' → logprob: -12.114874839782715
    8. 'c' → logprob: -12.239874839782715
    9. ' cum' → logprob: -12.489874839782715
    10. '       ' → logprob: -12.614874839782715

Token 194: ' sum' (ID: 4215)
  Prédit: '_sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.05714459344744682
    2. ' sum' → logprob: -3.4321446418762207
    3. 'sum' → logprob: -3.9321446418762207
    4. '_s' → logprob: -6.182144641876221
    5. '       ' → logprob: -6.557144641876221
    6. ' _' → logprob: -9.557144165039062
    7. '        ' → logprob: -10.307144165039062
    8. '_' → logprob: -11.307144165039062
    9. 's' → logprob: -11.307144165039062
    10. ' sums' → logprob: -12.682144165039062

Token 195: ' encountered' (ID: 41065)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6711620688438416
    2. ' =' → logprob: -0.7961620688438416
    3. '{' → logprob: -3.7961621284484863
    4. ':' → logprob: -5.171162128448486
    5. '=' → logprob: -6.296162128448486
    6. ' {' → logprob: -6.421162128448486
    7. 'prefix' → logprob: -6.671162128448486
    8. ',' → logprob: -6.921162128448486
    9. '={' → logprob: -7.046162128448486
    10. ' prefix' → logprob: -7.546162128448486

Token 196: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.48401299118995667
    2. 'prefix' → logprob: -2.109013080596924
    3. ' =' → logprob: -2.234013080596924
    4. '{' → logprob: -2.484013080596924
    5. ' prefix' → logprob: -3.109013080596924
    6. '
' → logprob: -5.484013080596924
    7. ':' → logprob: -5.609013080596924
    8. 'sum' → logprob: -6.109013080596924
    9. 'self' → logprob: -6.109013080596924
    10. ' {' → logprob: -6.359013080596924

Token 197: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01613008975982666
    2. ' =' → logprob: -4.391129970550537
    3. '=' → logprob: -6.266129970550537
    4. 'prefix' → logprob: -7.641129970550537
    5. '{' → logprob: -8.391130447387695
    6. ' prefix' → logprob: -8.516130447387695
    7. ':' → logprob: -8.891130447387695
    8. 'sum' → logprob: -9.016130447387695
    9. 's' → logprob: -9.516130447387695
    10. '	' → logprob: -10.141130447387695

Token 198: ' prefix' (ID: 18633)
  Prédit: ' prefix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' prefix' → logprob: -0.1819036304950714
    2. 'prefix' (adapté à ' prefix') → logprob: -1.806903600692749
    3. '       ' → logprob: -6.431903839111328
    4. ' seen' → logprob: -8.931903839111328
    5. ' indices' → logprob: -9.556903839111328
    6. 'psum' → logprob: -9.806903839111328
    7. ' prefixes' → logprob: -9.931903839111328
    8. ' sum' → logprob: -10.056903839111328
    9. 'seen' → logprob: -10.306903839111328
    10. '   ' → logprob: -10.431903839111328

Token 199: '_index' (ID: 7748)
  Prédit: '_sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.20145641267299652
    2. '_s' → logprob: -1.7014564275741577
    3. 'sum' → logprob: -10.701456069946289
    4. '_' → logprob: -12.201456069946289
    5. '_map' → logprob: -12.326456069946289
    6. '_indices' → logprob: -12.326456069946289
    7. ' _' → logprob: -12.576456069946289
    8. 's' → logprob: -13.701456069946289
    9. ' sums' → logprob: -14.326456069946289
    10. ' sum' → logprob: -14.826456069946289

Token 200: '_map' (ID: 11824)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.363921582698822
    2. '=' → logprob: -1.3639216423034668
    3. ' =' → logprob: -3.363921642303467
    4. 's' → logprob: -4.238921642303467
    5. '_map' → logprob: -7.988921642303467
    6. '_' → logprob: -11.613921165466309
    7. '_es' → logprob: -11.613921165466309
    8. ' ' → logprob: -13.113921165466309
    9. 'Es' → logprob: -13.113921165466309
    10. ' es' → logprob: -13.238921165466309

Token 201: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005235648714005947
    2. '=' → logprob: -5.25523567199707
    3. '   ' → logprob: -14.38023567199707
    4. ' ={' → logprob: -15.00523567199707
    5. '[' → logprob: -15.13023567199707
    6. ' ' → logprob: -15.25523567199707
    7. '={}' → logprob: -15.88023567199707
    8. ':' → logprob: -16.50523567199707
    9. '	' → logprob: -17.13023567199707
    10. '={' → logprob: -17.13023567199707

Token 202: ' dict' (ID: 11878)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.06250770390033722
    2. ' {' → logprob: -2.8125076293945312
    3. '{}' → logprob: -7.562507629394531
    4. ' {}' → logprob: -11.062507629394531
    5. '{-' → logprob: -12.562507629394531
    6. ' {-' → logprob: -15.187507629394531
    7. ' defaultdict' → logprob: -15.437507629394531
    8. 'dict' → logprob: -15.812507629394531
    9. '{i' → logprob: -16.06250762939453
    10. '{return' → logprob: -16.18750762939453

Token 203: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03927462920546532
    2. '()
' → logprob: -3.9142746925354004
    3. '{' → logprob: -4.4142746925354
    4. '({' → logprob: -5.1642746925354
    5. '       ' → logprob: -8.164274215698242
    6. '()\' → logprob: -8.539274215698242
    7. '   ' → logprob: -9.164274215698242
    8. '(' → logprob: -10.289274215698242
    9. ' {' → logprob: -10.414274215698242
    10. '(){' → logprob: -11.164274215698242

Token 204: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001693984610028565
    2. ' prefix' → logprob: -7.126694202423096
    3. 'prefix' → logprob: -7.626694202423096
    4. '        
' → logprob: -9.126693725585938
    5. ' ' → logprob: -10.001693725585938
    6. '   ' → logprob: -10.001693725585938
    7. '
' → logprob: -10.376693725585938
    8. ',' → logprob: -11.001693725585938
    9. '        ' → logprob: -11.001693725585938
    10. '0' → logprob: -11.126693725585938

Token 205: ' prefix' (ID: 18633)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7031527757644653
    2. 'prefix' (adapté à ' prefix') → logprob: -1.0781527757644653
    3. ' prefix' → logprob: -1.8281527757644653
    4. 'sum' → logprob: -6.328152656555176
    5. 'current' → logprob: -7.453152656555176
    6. 'total' → logprob: -8.078152656555176
    7. ' cumulative' → logprob: -8.328152656555176
    8. ' current' → logprob: -8.453152656555176
    9. 'max' → logprob: -8.703152656555176
    10. ' sum' → logprob: -8.953152656555176

Token 206: '_index' (ID: 7748)
  Prédit: '_sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.000377645599655807
    2. '_s' → logprob: -8.375377655029297
    3. 'sum' → logprob: -9.125377655029297
    4. '_' → logprob: -11.250377655029297
    5. ' _' → logprob: -11.500377655029297
    6. ' =' → logprob: -12.000377655029297
    7. '=_' → logprob: -12.875377655029297
    8. '_prefix' → logprob: -13.625377655029297
    9. '=' → logprob: -13.875377655029297
    10. '_index' → logprob: -14.125377655029297

Token 207: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -0.0003981376066803932
    2. '=' → logprob: -8.625397682189941
    3. ' =' → logprob: -8.750397682189941
    4. '_' → logprob: -10.000397682189941
    5. ' _' → logprob: -12.625397682189941
    6. 'map' → logprob: -12.625397682189941
    7. 's' → logprob: -13.125397682189941
    8. 'Map' → logprob: -13.500397682189941
    9. '_=' → logprob: -13.750397682189941
    10. '_maps' → logprob: -14.250397682189941

Token 208: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.764977686339989e-05
    2. ' [' → logprob: -10.500057220458984
    3. ' =' → logprob: -10.750057220458984
    4. '=' → logprob: -12.125057220458984
    5. '0' → logprob: -14.375057220458984
    6. '
' → logprob: -14.500057220458984
    7. '=[' → logprob: -14.500057220458984
    8. '\[' → logprob: -14.875057220458984
    9. '   ' → logprob: -15.500057220458984
    10. '```' → logprob: -15.750057220458984

Token 209: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003450041403993964
    2. '[' → logprob: -6.2534499168396
    3. '{' → logprob: -6.5034499168396
    4. ' ' → logprob: -11.003450393676758
    5. '{
' → logprob: -13.628450393676758
    6. ' {' → logprob: -13.878450393676758
    7. ']' → logprob: -14.003450393676758
    8. ' =' → logprob: -14.253450393676758
    9. ')' → logprob: -14.878450393676758
    10. '=' → logprob: -15.378450393676758

Token 210: ']' (ID: 60)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6060728430747986
    2. ']' → logprob: -0.8560728430747986
    3. '=' → logprob: -3.7310729026794434
    4. ')' → logprob: -5.856072902679443
    5. ']=' → logprob: -6.981072902679443
    6. ' ]' → logprob: -7.106072902679443
    7. ':' → logprob: -7.106072902679443
    8. ']=-' → logprob: -9.106072425842285
    9. ' )' → logprob: -10.481072425842285
    10. ' ' → logprob: -10.731072425842285

Token 211: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06196869537234306
    2. ' =' → logprob: -2.8119688034057617
    3. '=-' → logprob: -14.186968803405762
    4. '0' → logprob: -15.436968803405762
    5. '=index' → logprob: -16.936967849731445
    6. ' ' → logprob: -17.061967849731445
    7. ')' → logprob: -17.311967849731445
    8. ']=' → logprob: -17.436967849731445
    9. ')=' → logprob: -17.686967849731445
    10. '[' → logprob: -18.436967849731445

Token 212: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -9.253090865968261e-06
    2. ' -' → logprob: -11.625009536743164
    3. '0' → logprob: -15.375009536743164
    4. '[-' → logprob: -19.250009536743164
    5. '−' → logprob: -19.250009536743164
    6. '   ' → logprob: -19.875009536743164
    7. '–' → logprob: -20.375009536743164
    8. '  ' → logprob: -20.500009536743164
    9. ' ' → logprob: -21.000009536743164
    10. '[' → logprob: -21.250009536743164

Token 213: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -18.875
    3. '```' → logprob: -19.625
    4. '۱' → logprob: -20.125
    5. '１' → logprob: -20.25
    6. '-' → logprob: -20.375
    7. '   ' → logprob: -20.875
    8. '१' → logprob: -20.875
    9. '১' → logprob: -21.0
    10. '' → logprob: -22.1875

Token 214: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.47466182708740234
    2. '       ' → logprob: -0.9746618270874023
    3. '        
' → logprob: -8.474661827087402
    4. ',' → logprob: -9.599661827087402
    5. 'sum' → logprob: -9.724661827087402
    6. '
' → logprob: -9.974661827087402
    7. ' sum' → logprob: -10.224661827087402
    8. '  
' → logprob: -10.349661827087402
    9. '```' → logprob: -10.849661827087402
    10. 'current' → logprob: -11.224661827087402

Token 215: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.25364601612091064
    2. '       ' → logprob: -1.5036460161209106
    3. 'sum' → logprob: -7.378645896911621
    4. '        
' → logprob: -7.753645896911621
    5. '
' → logprob: -9.003645896911621
    6. 'current' → logprob: -9.253645896911621
    7. 'prefix' → logprob: -9.253645896911621
    8. '  
' → logprob: -9.378645896911621
    9. ' sum' → logprob: -10.128645896911621
    10. '   ' → logprob: -10.503645896911621

Token 216: ' prefix' (ID: 18633)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0209741592407227
    2. '<|end|>' → logprob: -1.6459741592407227
    3. 'Initialize' → logprob: -2.0209741592407227
    4. '       ' → logprob: -2.0209741592407227
    5. ' ' → logprob: -2.8959741592407227
    6. 'length' → logprob: -3.7709741592407227
    7. 'start' → logprob: -4.270974159240723
    8. ' Initialize' → logprob: -4.395974159240723
    9. ' length' → logprob: -4.520974159240723
    10. 'max' → logprob: -5.145974159240723

Token 217: ' sum' (ID: 4215)
  Prédit: '_sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.4024481773376465
    2. ' sum' → logprob: -1.1524481773376465
    3. 'sum' → logprob: -4.4024481773376465
    4. '_s' → logprob: -6.5274481773376465
    5. ' _' → logprob: -7.0274481773376465
    6. '_index' → logprob: -7.5274481773376465
    7. '_' → logprob: -9.652448654174805
    8. ' sums' → logprob: -9.902448654174805
    9. '       ' → logprob: -10.027448654174805
    10. ' index' → logprob: -10.027448654174805

Token 218: ' zero' (ID: 12421)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 219: ' before' (ID: 2254)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 220: ' array' (ID: 2644)
  Prédit: ' any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' any' → logprob: -1.183623194694519
    2. ' the' → logprob: -1.558623194694519
    3. ' processing' → logprob: -2.0586233139038086
    4. 'any' → logprob: -2.5586233139038086
    5. 'starting' → logprob: -2.5586233139038086
    6. 'start' → logprob: -2.8086233139038086
    7. 'the' → logprob: -3.0586233139038086
    8. 'processing' → logprob: -3.3086233139038086
    9. ' starting' → logprob: -3.6836233139038086
    10. ' start' → logprob: -4.683623313903809

Token 221: ' start' (ID: 1604)
  Prédit: ' start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' start' → logprob: -1.6820521354675293
    2. ' index' → logprob: -1.6820521354675293
    3. '<|end|>' → logprob: -2.4320521354675293
    4. 'index' → logprob: -2.5570521354675293
    5. ' position' → logprob: -2.6820521354675293
    6. '       ' → logprob: -2.8070521354675293
    7. ' =' → logprob: -3.4320521354675293
    8. '0' → logprob: -3.4320521354675293
    9. '[' → logprob: -3.5570521354675293
    10. 'position' → logprob: -3.8070521354675293

Token 222: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0015610468108206987
    2. '
' → logprob: -7.251561164855957
    3. '        
' → logprob: -8.376561164855957
    4. 'sum' → logprob: -8.626561164855957
    5. ',' → logprob: -9.501561164855957
    6. 'prefix' → logprob: -9.501561164855957
    7. ' sum' → logprob: -9.626561164855957
    8. 'current' → logprob: -10.126561164855957
    9. '   ' → logprob: -10.876561164855957
    10. ':' → logprob: -11.251561164855957

Token 223: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.060711219906806946
    2. 'prefix' → logprob: -3.435711145401001
    3. ' prefix' → logprob: -3.685711145401001
    4. 'sum' → logprob: -7.43571138381958
    5. 'current' → logprob: -8.185710906982422
    6. ' current' → logprob: -8.310710906982422
    7. ' sum' → logprob: -8.685710906982422
    8. '   ' → logprob: -9.685710906982422
    9. ' cumulative' → logprob: -9.810710906982422
    10. ' max' → logprob: -10.685710906982422

Token 224: ' max' (ID: 2999)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.001997273648157716
    2. ' prefix' → logprob: -6.751997470855713
    3. '       ' → logprob: -7.376997470855713
    4. 'current' → logprob: -8.626996994018555
    5. 'curr' → logprob: -12.001996994018555
    6. 'n' → logprob: -12.376996994018555
    7. 'max' (adapté à ' max') → logprob: -12.751996994018555
    8. 'psum' → logprob: -13.251996994018555
    9. 'total' → logprob: -13.501996994018555
    10. 's' → logprob: -13.876996994018555

Token 225: '_len' (ID: 13683)
  Prédit: '_length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.03805296868085861
    2. '_len' → logprob: -3.288053035736084
    3. 'len' → logprob: -11.413052558898926
    4. 'length' → logprob: -14.913052558898926
    5. '_' → logprob: -15.788052558898926
    6. '_l' → logprob: -17.038053512573242
    7. 'Length' → logprob: -17.538053512573242
    8. '_lengths' → logprob: -17.788053512573242
    9. '_size' → logprob: -18.038053512573242
    10. '```' → logprob: -19.038053512573242

Token 226: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1602250337600708
    2. '=' → logprob: -1.9102250337600708
    3. ' ' → logprob: -14.785224914550781
    4. ',' → logprob: -14.785224914550781
    5. '   ' → logprob: -17.28522491455078
    6. '	' → logprob: -17.41022491455078
    7. '_' → logprob: -17.41022491455078
    8. ')' → logprob: -17.66022491455078
    9. '  ' → logprob: -17.78522491455078
    10. ' =
' → logprob: -18.16022491455078

Token 227: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0028049908578395844
    2. ' ' → logprob: -5.877804756164551
    3. '   ' → logprob: -15.75280475616455
    4. '=' → logprob: -16.877805709838867
    5. '۰' → logprob: -17.940305709838867
    6. '       ' → logprob: -18.690305709838867
    7. '  ' → logprob: -18.690305709838867
    8. ' ' → logprob: -18.752805709838867
    9. '	' → logprob: -19.190305709838867
    10. '```' → logprob: -19.502805709838867

Token 228: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.5
    3. '۰' → logprob: -18.0
    4. '=' → logprob: -19.0
    5. '```' → logprob: -19.375
    6. '-' → logprob: -19.875
    7. '０' → logprob: -20.0625
    8. '   ' → logprob: -20.5
    9. 'zero' → logprob: -20.6875
    10. '00' → logprob: -20.8125

Token 229: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08929505199193954
    2. '
' → logprob: -2.5892951488494873
    3. ',' → logprob: -4.964294910430908
    4. '        
' → logprob: -6.714294910430908
    5. 'prefix' → logprob: -7.714294910430908
    6. 'current' → logprob: -8.214295387268066
    7. ' 
' → logprob: -8.464295387268066
    8. 'sum' → logprob: -8.589295387268066
    9. ',
' → logprob: -8.964295387268066
    10. ' prefix' → logprob: -9.339295387268066

Token 230: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008823975920677185
    2. 'prefix' → logprob: -5.758823871612549
    3. ' prefix' → logprob: -5.883823871612549
    4. 'sum' → logprob: -7.383823871612549
    5. ' sum' → logprob: -7.633823871612549
    6. ' current' → logprob: -7.633823871612549
    7. 'current' → logprob: -8.258824348449707
    8. '
' → logprob: -8.383824348449707
    9. ',' → logprob: -8.883824348449707
    10. '        
' → logprob: -9.008824348449707

Token 231: ' prefix' (ID: 18633)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' (adapté à ' prefix') → logprob: -0.00839199312031269
    2. 'current' → logprob: -4.883391857147217
    3. 'curr' → logprob: -8.008392333984375
    4. '       ' → logprob: -8.133392333984375
    5. ' prefix' → logprob: -8.883392333984375
    6. 'c' → logprob: -12.508392333984375
    7. 'cur' → logprob: -12.758392333984375
    8. '_prefix' → logprob: -12.883392333984375
    9. 'psum' → logprob: -13.008392333984375
    10. 'cum' → logprob: -13.258392333984375

Token 232: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.001339527778327465
    2. 'sum' → logprob: -6.626339435577393
    3. '_s' → logprob: -11.75133991241455
    4. ' =' → logprob: -13.12633991241455
    5. ' sum' → logprob: -13.75133991241455
    6. 'Sum' → logprob: -14.37633991241455
    7. '=' → logprob: -14.37633991241455
    8. '=sum' → logprob: -15.00133991241455
    9. '_' → logprob: -15.25133991241455
    10. '_prefix' → logprob: -15.50133991241455

Token 233: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07889022678136826
    2. '=' → logprob: -2.578890323638916
    3. '_' → logprob: -15.078889846801758
    4. ' ' → logprob: -16.703889846801758
    5. ',' → logprob: -16.828889846801758
    6. '_=' → logprob: -16.828889846801758
    7. 's' → logprob: -17.953889846801758
    8. '<|end|>' → logprob: -18.203889846801758
    9. ':' → logprob: -18.578889846801758
    10. ' +=' → logprob: -18.578889846801758

Token 234: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006715370807796717
    2. ' ' → logprob: -5.006715297698975
    3. '   ' → logprob: -16.881715774536133
    4. '  ' → logprob: -18.881715774536133
    5. '۰' → logprob: -19.006715774536133
    6. '=' → logprob: -19.256715774536133
    7. ' ' → logprob: -20.069215774536133
    8. '000' → logprob: -20.444215774536133
    9. '00' → logprob: -20.756715774536133
    10. '    ' → logprob: -20.819215774536133

Token 235: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. '۰' → logprob: -18.1250057220459
    4. '000' → logprob: -19.0000057220459
    5. '   ' → logprob: -19.6250057220459
    6. '00' → logprob: -20.0625057220459
    7. '=' → logprob: -21.1875057220459
    8. '  ' → logprob: -21.5000057220459
    9. '０' → logprob: -21.5000057220459
    10. '০' → logprob: -21.5000057220459

Token 236: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6394559144973755
    2. '
' → logprob: -1.3894559144973755
    3. '<|end|>' → logprob: -2.014455795288086
    4. ' for' → logprob: -3.014455795288086
    5. 'for' → logprob: -3.889455795288086
    6. '   ' → logprob: -4.639455795288086
    7. '        
' → logprob: -6.389455795288086
    8. '<|end|>' → logprob: -6.639455795288086
    9. '    
' → logprob: -6.889455795288086
    10. '	' → logprob: -7.014455795288086

Token 237: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012903369031846523
    2. ' for' → logprob: -5.262903213500977
    3. '   ' → logprob: -5.887903213500977
    4. '
' → logprob: -6.137903213500977
    5. '        
' → logprob: -7.387903213500977
    6. 'for' → logprob: -7.512903213500977
    7. '<|end|>' → logprob: -7.512903213500977
    8. '  
' → logprob: -8.512903213500977
    9. '    
' → logprob: -8.637903213500977
    10. ' ' → logprob: -8.887903213500977

Token 238: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0034281739499419928
    2. '       ' → logprob: -6.253427982330322
    3. ' for' → logprob: -6.503427982330322
    4. '	for' → logprob: -15.87842845916748
    5. '   ' → logprob: -17.003427505493164
    6. '
' → logprob: -17.878427505493164
    7. 'n' → logprob: -18.003427505493164
    8. 'For' → logprob: -18.503427505493164
    9. '```' → logprob: -18.878427505493164
    10. '        
' → logprob: -19.378427505493164

Token 239: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.05623741075396538
    2. ' idx' → logprob: -3.3062374591827393
    3. 'i' → logprob: -4.18123722076416
    4. ' index' → logprob: -6.18123722076416
    5. 'idx' → logprob: -7.93123722076416
    6. 'index' → logprob: -8.30623722076416
    7. ' ' → logprob: -10.55623722076416
    8. '   ' → logprob: -10.93123722076416
    9. '(i' → logprob: -11.80623722076416
    10. '  ' → logprob: -12.05623722076416

Token 240: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.023473506793379784
    2. 'in' → logprob: -3.7734735012054443
    3. ' ' → logprob: -9.148473739624023
    4. ',' → logprob: -9.398473739624023
    5. '        ' → logprob: -12.148473739624023
    6. '    ' → logprob: -12.273473739624023
    7. '   ' → logprob: -12.398473739624023
    8. '  ' → logprob: -12.648473739624023
    9. '<|end|>' → logprob: -12.898473739624023
    10. ' ,' → logprob: -13.023473739624023

Token 241: ' val' (ID: 1459)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.5755770802497864
    2. ' value' → logprob: -0.9505770802497864
    3. 'num' → logprob: -3.5755770206451416
    4. ' num' → logprob: -4.325577259063721
    5. ' val' → logprob: -4.825577259063721
    6. 'val' → logprob: -6.450577259063721
    7. 'amount' → logprob: -9.450576782226562
    8. ' ' → logprob: -10.575576782226562
    9. ' amount' → logprob: -10.575576782226562
    10. 'net' → logprob: -10.950576782226562

Token 242: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.026309238746762276
    2. 'in' → logprob: -3.6513092517852783
    3. ' ' → logprob: -12.4013090133667
    4. '	in' → logprob: -13.4013090133667
    5. ',' → logprob: -13.6513090133667
    6. 'n' → logprob: -14.6513090133667
    7. '   ' → logprob: -15.2763090133667
    8. 'inthe' → logprob: -15.5263090133667
    9. 'import' → logprob: -15.6513090133667
    10. '_in' → logprob: -15.9013090133667

Token 243: ' enumerate' (ID: 29671)
  Prédit: ' enumerate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' enumerate' → logprob: -0.16022422909736633
    2. 'enumer' → logprob: -1.910224199295044
    3. 'self' → logprob: -17.16022491455078
    4. '   ' → logprob: -18.03522491455078
    5. 'enum' → logprob: -18.16022491455078
    6. ' ' → logprob: -18.28522491455078
    7. ' enumer' → logprob: -18.28522491455078
    8. '(en' → logprob: -19.03522491455078
    9. 'en' → logprob: -19.28522491455078
    10. ' enumeration' → logprob: -19.41022491455078

Token 244: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.000327956018736586
    2. '(' → logprob: -8.375328063964844
    3. 'self' → logprob: -10.000328063964844
    4. ' self' → logprob: -10.125328063964844
    5. ' (' → logprob: -11.375328063964844
    6. '(
' → logprob: -15.500328063964844
    7. ')' → logprob: -16.625328063964844
    8. '	self' → logprob: -16.750328063964844
    9. '(s' → logprob: -17.375328063964844
    10. '[self' → logprob: -17.625328063964844

Token 245: '.data' (ID: 3885)
  Prédit: '.data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.data' → logprob: -0.011150158941745758
    2. '.' → logprob: -4.511150360107422
    3. ' .' → logprob: -9.636150360107422
    4. '.user' → logprob: -10.386150360107422
    5. ').' → logprob: -13.011150360107422
    6. 'data' → logprob: -13.761150360107422
    7. ')' → logprob: -14.011150360107422
    8. ' data' → logprob: -14.886150360107422
    9. '[data' → logprob: -15.011150360107422
    10. '.
' → logprob: -15.136150360107422

Token 246: '_stream' (ID: 29670)
  Prédit: '_stream'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_stream' → logprob: -1.1472419600977446e-06
    2. 'stream' → logprob: -14.750000953674316
    3. ')' → logprob: -15.625000953674316
    4. '   ' → logprob: -15.875000953674316
    5. '_STREAM' → logprob: -16.250001907348633
    6. '       ' → logprob: -16.875001907348633
    7. 'Stream' → logprob: -17.000001907348633
    8. '[' → logprob: -17.375001907348633
    9. '_' → logprob: -17.375001907348633
    10. '[i' → logprob: -17.375001907348633

Token 247: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0022895447909832
    2. '):
' → logprob: -6.127289772033691
    3. ':' → logprob: -9.252289772033691
    4. '):
' → logprob: -12.502289772033691
    5. ' ):' → logprob: -12.627289772033691
    6. ')' → logprob: -14.002289772033691
    7. ']:' → logprob: -15.627289772033691
    8. '():' → logprob: -15.877289772033691
    9. '   ' → logprob: -16.002288818359375
    10. '}:' → logprob: -16.002288818359375

Token 248: '           ' (ID: 352)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8593092560768127
    2. '           ' → logprob: -1.109309196472168
    3. '<|end|>' → logprob: -2.109309196472168
    4. ':' → logprob: -2.859309196472168
    5. ' 
' → logprob: -3.609309196472168
    6. '       ' → logprob: -3.984309196472168
    7. '        ' → logprob: -5.234309196472168
    8. '            
' → logprob: -5.984309196472168
    9. '   ' → logprob: -6.109309196472168
    10. '        
' → logprob: -6.109309196472168

Token 249: ' prefix' (ID: 18633)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' (adapté à ' prefix') → logprob: -0.6426429748535156
    2. ' prefix' → logprob: -0.7676429748535156
    3. '           ' → logprob: -4.767642974853516
    4. ' 
' → logprob: -6.892642974853516
    5. '(prefix' → logprob: -9.267642974853516
    6. '            
' → logprob: -9.267642974853516
    7. '_prefix' → logprob: -9.767642974853516
    8. '   ' → logprob: -10.267642974853516
    9. '
' → logprob: -10.267642974853516
    10. '    
' → logprob: -10.517642974853516

Token 250: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -5.796184723294573e-06
    2. '_' → logprob: -12.500005722045898
    3. '_s' → logprob: -13.750005722045898
    4. 'sum' → logprob: -15.000005722045898
    5. ' _' → logprob: -15.500005722045898
    6. '_val' → logprob: -16.0000057220459
    7. '_SUM' → logprob: -17.2500057220459
    8. '##_' → logprob: -17.8750057220459
    9. '=_' → logprob: -18.1250057220459
    10. '_add' → logprob: -18.3750057220459

Token 251: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.127426415681839
    2. '+=' → logprob: -2.1274263858795166
    3. '+' → logprob: -7.627426624298096
    4. ' +' → logprob: -12.002426147460938
    5. '=' → logprob: -12.502426147460938
    6. ' =' → logprob: -14.502426147460938
    7. ']+=' → logprob: -14.877426147460938
    8. '+='' → logprob: -15.252426147460938
    9. '+="' → logprob: -16.127426147460938
    10. '+=(' → logprob: -16.752426147460938

Token 252: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.00861456897109747
    2. ' val' → logprob: -4.758614540100098
    3. '	val' → logprob: -19.883615493774414
    4. '(val' → logprob: -21.008615493774414
    5. '_val' → logprob: -21.258615493774414
    6. '[val' → logprob: -21.508615493774414
    7. '.val' → logprob: -23.008615493774414
    8. 'v' → logprob: -23.133615493774414
    9. 'Val' → logprob: -23.383615493774414
    10. ',val' → logprob: -23.633615493774414

Token 253: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.011028368026018143
    2. '           ' → logprob: -4.886028289794922
    3. '<|end|>' → logprob: -6.386028289794922
    4. '            
' → logprob: -7.636028289794922
    5. '       ' → logprob: -8.261028289794922
    6. 'if' → logprob: -8.511028289794922
    7. '\n' → logprob: -8.511028289794922
    8. ' if' → logprob: -8.636028289794922
    9. '  
' → logprob: -9.386028289794922
    10. '
' → logprob: -9.636028289794922

Token 254: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008114629425108433
    2. ' if' → logprob: -5.758114814758301
    3. '
' → logprob: -6.008114814758301
    4. 'if' → logprob: -7.008114814758301
    5. '            
' → logprob: -7.258114814758301
    6. '       ' → logprob: -7.758114814758301
    7. '```' → logprob: -8.7581148147583
    8. '<|end|>' → logprob: -9.0081148147583
    9. '   ' → logprob: -10.2581148147583
    10. '        
' → logprob: -11.0081148147583

Token 255: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3135778307914734
    2. 'if' (adapté à ' if') → logprob: -1.3135778903961182
    3. '           ' → logprob: -8.063577651977539
    4. 'If' → logprob: -14.688577651977539
    5. '            ' → logprob: -15.188577651977539
    6. '            
' → logprob: -15.438577651977539
    7. '	if' → logprob: -15.938577651977539
    8. '```' → logprob: -15.938577651977539
    9. '   ' → logprob: -17.68857765197754
    10. '       ' → logprob: -17.68857765197754

Token 256: ' prefix' (ID: 18633)
  Prédit: ' prefix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' prefix' → logprob: -0.16022564470767975
    2. 'prefix' → logprob: -1.9102256298065186
    3. '(prefix' → logprob: -13.535225868225098
    4. '_prefix' → logprob: -16.91022491455078
    5. ' ' → logprob: -17.41022491455078
    6. ' pref' → logprob: -17.66022491455078
    7. 'pref' → logprob: -17.91022491455078
    8. 'refix' → logprob: -18.41022491455078
    9. 'Prefix' → logprob: -18.66022491455078
    10. '   ' → logprob: -19.66022491455078

Token 257: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -2.2961512513575144e-05
    2. 'sum' → logprob: -10.875022888183594
    3. '_index' → logprob: -12.750022888183594
    4. '_s' → logprob: -14.875022888183594
    5. '_' → logprob: -15.500022888183594
    6. '_val' → logprob: -16.125022888183594
    7. ' _' → logprob: -16.750022888183594
    8. ' sum' → logprob: -16.750022888183594
    9. 'Sum' → logprob: -17.125022888183594
    10. 'index' → logprob: -18.000022888183594

Token 258: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0020703254267573357
    2. ' not' → logprob: -6.502070426940918
    3. 'in' → logprob: -7.502070426940918
    4. 'not' → logprob: -11.127070426940918
    5. ' ' → logprob: -14.002070426940918
    6. ')' → logprob: -15.752070426940918
    7. '<|end|>' → logprob: -17.2520694732666
    8. '	in' → logprob: -17.5020694732666
    9. ' is' → logprob: -17.7520694732666
    10. 's' → logprob: -18.2520694732666

Token 259: ' prefix' (ID: 18633)
  Prédit: ' prefix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' prefix' → logprob: -0.5759410262107849
    2. 'prefix' → logprob: -0.8259410262107849
    3. '(prefix' → logprob: -13.57594108581543
    4. '_prefix' → logprob: -15.32594108581543
    5. 'refix' → logprob: -17.32594108581543
    6. '.prefix' → logprob: -17.45094108581543
    7. 'Prefix' → logprob: -18.07594108581543
    8. '   ' → logprob: -18.45094108581543
    9. '-prefix' → logprob: -18.45094108581543
    10. ' prefixes' → logprob: -18.70094108581543

Token 260: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -3.128163257315464e-07
    2. 'index' → logprob: -15.75
    3. ' _' → logprob: -16.875
    4. '_' → logprob: -18.125
    5. '_INDEX' → logprob: -18.125
    6. '```' → logprob: -18.5
    7. '_sum' → logprob: -18.875
    8. ')_' → logprob: -19.125
    9. 'Index' → logprob: -19.25
    10. 's' → logprob: -19.375

Token 261: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -1.9361264946837764e-07
    2. 'map' → logprob: -15.875
    3. 'Map' → logprob: -18.0
    4. '_MAP' → logprob: -19.25
    5. '_index' → logprob: -19.375
    6. '-map' → logprob: -19.375
    7. '_maps' → logprob: -19.5
    8. '_m' → logprob: -21.0
    9. '_' → logprob: -21.125
    10. '   ' → logprob: -21.375

Token 262: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0003594184236135334
    2. ':
' → logprob: -8.125359535217285
    3. '<|end|>' → logprob: -9.875359535217285
    4. '):' → logprob: -12.875359535217285
    5. ':return' → logprob: -13.375359535217285
    6. ' :' → logprob: -13.500359535217285
    7. '<|end|>' → logprob: -13.875359535217285
    8. ':**' → logprob: -14.125359535217285
    9. ':

' → logprob: -14.125359535217285
    10. '=' → logprob: -14.250359535217285

Token 263: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03129560500383377
    2. '           ' → logprob: -3.6562955379486084
    3. ':' → logprob: -5.6562957763671875
    4. '<|end|>' → logprob: -7.1562957763671875
    5. '            ' → logprob: -8.406295776367188
    6. '                ' → logprob: -9.531295776367188
    7. ' ' → logprob: -9.656295776367188
    8. ',' → logprob: -10.031295776367188
    9. ')' → logprob: -10.406295776367188
    10. '       ' → logprob: -10.406295776367188

Token 264: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4166578948497772
    2. ' max' → logprob: -1.1666579246520996
    3. 'max' → logprob: -4.1666579246521
    4. ' length' → logprob: -5.6666579246521
    5. '           ' → logprob: -5.9166579246521
    6. ' current' → logprob: -6.1666579246521
    7. 'length' → logprob: -6.4166579246521
    8. ' if' → logprob: -6.5416579246521
    9. '                   ' → logprob: -7.1666579246521
    10. 'current' → logprob: -7.4166579246521

Token 265: ' Calculate' (ID: 38942)
  Prédit: ' current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' current' → logprob: -1.3150503635406494
    2. ' max' → logprob: -2.0650503635406494
    3. ' length' → logprob: -2.0650503635406494
    4. 'current' → logprob: -2.0650503635406494
    5. ' curr' → logprob: -2.1900503635406494
    6. 'length' → logprob: -2.4400503635406494
    7. 'curr' → logprob: -2.4400503635406494
    8. 'max' → logprob: -3.1900503635406494
    9. '               ' → logprob: -4.19005012512207
    10. 'cur' → logprob: -5.81505012512207

Token 266: ' sub' (ID: 1543)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -1.1369602680206299
    2. ' current' → logprob: -1.3869602680206299
    3. ' length' → logprob: -1.6369602680206299
    4. 'current' → logprob: -1.8869602680206299
    5. 'max' → logprob: -3.63696026802063
    6. ' max' → logprob: -4.261960029602051
    7. 'interval' → logprob: -4.761960029602051
    8. ' interval' → logprob: -5.136960029602051
    9. 'curr' → logprob: -5.136960029602051
    10. 'sub' → logprob: -5.261960029602051

Token 267: 'array' (ID: 3361)
  Prédit: 'array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'array' → logprob: -0.031711213290691376
    2. '               ' → logprob: -3.9067111015319824
    3. '_length' → logprob: -5.281711101531982
    4. 'interval' → logprob: -5.406711101531982
    5. '           ' → logprob: -7.406711101531982
    6. '_array' → logprob: -8.15671157836914
    7. 'arr' → logprob: -8.53171157836914
    8. 'length' → logprob: -8.65671157836914
    9. '_len' → logprob: -9.53171157836914
    10. '_interval' → logprob: -9.78171157836914

Token 268: ' length' (ID: 5517)
  Prédit: ' length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' length' → logprob: -0.03434787690639496
    2. '_length' → logprob: -3.5343477725982666
    3. 'length' → logprob: -5.409348011016846
    4. '_len' → logprob: -9.284347534179688
    5. 'len' → logprob: -11.409347534179688
    6. '_' → logprob: -12.534347534179688
    7. '               ' → logprob: -13.534347534179688
    8. 'Length' → logprob: -13.784347534179688
    9. ' len' → logprob: -14.659347534179688
    10. '长度' → logprob: -14.909347534179688

Token 269: ' between' (ID: 2870)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4495367109775543
    2. '               ' → logprob: -1.199536681175232
    3. '=' → logprob: -3.3245368003845215
    4. '           ' → logprob: -3.9495368003845215
    5. '                   ' → logprob: -5.8245368003845215
    6. ',' → logprob: -7.3245368003845215
    7. '                ' → logprob: -7.5745368003845215
    8. '=max' → logprob: -8.449536323547363
    9. '            ' → logprob: -8.699536323547363
    10. '	           ' → logprob: -8.949536323547363

Token 270: ' previous' (ID: 5880)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.9729970693588257
    2. 'i' → logprob: -1.0979970693588257
    3. ' prefix' → logprob: -1.4729970693588257
    4. ' i' → logprob: -2.8479971885681152
    5. 'index' → logprob: -7.972997188568115
    6. ' index' → logprob: -8.597996711730957
    7. ' current' → logprob: -8.722996711730957
    8. '   ' → logprob: -8.847996711730957
    9. 'current' → logprob: -9.222996711730957
    10. '(prefix' → logprob: -9.222996711730957

Token 271: ' occurrence' (ID: 55807)
  Prédit: ' index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' index' → logprob: -0.31858155131340027
    2. 'index' → logprob: -1.6935815811157227
    3. ' prefix' → logprob: -2.9435815811157227
    4. 'prefix' → logprob: -4.193581581115723
    5. '_index' → logprob: -4.193581581115723
    6. ' occurrence' → logprob: -6.193581581115723
    7. '_prefix' → logprob: -6.693581581115723
    8. ' and' → logprob: -6.818581581115723
    9. ' indices' → logprob: -8.318581581115723
    10. '_' → logprob: -8.318581581115723

Token 272: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.444209486246109
    2. '               ' → logprob: -1.3192094564437866
    3. '           ' → logprob: -2.944209575653076
    4. 'and' → logprob: -3.569209575653076
    5. '=' → logprob: -5.444209575653076
    6. ' =' → logprob: -6.694209575653076
    7. 's' → logprob: -6.819209575653076
    8. ',' → logprob: -7.194209575653076
    9. '                ' → logprob: -8.069209098815918
    10. ' -' → logprob: -8.319209098815918

Token 273: ' current' (ID: 2208)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.10771309584379196
    2. ' i' → logprob: -2.357712984085083
    3. ' current' → logprob: -5.107713222503662
    4. 'current' → logprob: -6.607713222503662
    5. ' the' → logprob: -9.857712745666504
    6. 'the' → logprob: -10.982712745666504
    7. 'index' → logprob: -13.357712745666504
    8. 'now' → logprob: -13.607712745666504
    9. '   ' → logprob: -13.857712745666504
    10. ' this' → logprob: -13.982712745666504

Token 274: '
' (ID: 198)
  Prédit: ' index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' index' → logprob: -0.8653433322906494
    2. ' i' → logprob: -1.6153433322906494
    3. '_index' → logprob: -1.9903433322906494
    4. 'i' → logprob: -2.1153433322906494
    5. 'index' → logprob: -2.1153433322906494
    6. ' ' → logprob: -7.99034309387207
    7. '_i' → logprob: -7.99034309387207
    8. '           ' → logprob: -8.24034309387207
    9. '   ' → logprob: -8.86534309387207
    10. '_' → logprob: -8.99034309387207

Token 275: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4338665008544922
    2. '               ' → logprob: -1.3088665008544922
    3. ' -' → logprob: -3.933866500854492
    4. ' i' → logprob: -4.433866500854492
    5. ' =' → logprob: -4.808866500854492
    6. 'i' → logprob: -5.308866500854492
    7. '=' → logprob: -5.683866500854492
    8. '_index' → logprob: -5.683866500854492
    9. '```' → logprob: -5.808866500854492
    10. ' +' → logprob: -5.808866500854492

Token 276: ' sub' (ID: 1543)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.29318493604660034
    2. 'i' → logprob: -1.5431849956512451
    3. ' length' → logprob: -4.418184757232666
    4. ' max' → logprob: -4.543184757232666
    5. '               ' → logprob: -4.918184757232666
    6. 'length' → logprob: -5.043184757232666
    7. 'max' → logprob: -6.168184757232666
    8. ' current' → logprob: -7.043184757232666
    9. 'current' → logprob: -8.793185234069824
    10. '           ' → logprob: -8.793185234069824

Token 277: 'array' (ID: 3361)
  Prédit: 'array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'array' → logprob: -0.4880426824092865
    2. '_len' → logprob: -0.9880427122116089
    3. 'arr' → logprob: -4.363042831420898
    4. '_array' → logprob: -7.863042831420898
    5. '_arr' → logprob: -7.988042831420898
    6. '_length' → logprob: -9.113042831420898
    7. '               ' → logprob: -9.488042831420898
    8. '           ' → logprob: -9.613042831420898
    9. 'arra' → logprob: -9.613042831420898
    10. 'len' → logprob: -9.863042831420898

Token 278: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -0.07889419049024582
    2. '_length' → logprob: -2.5788941383361816
    3. 'len' → logprob: -13.20389461517334
    4. '_' → logprob: -13.70389461517334
    5. 'length' → logprob: -15.07889461517334
    6. '_size' → logprob: -15.32889461517334
    7. '_le' → logprob: -15.57889461517334
    8. '_l' → logprob: -15.70389461517334
    9. ' _' → logprob: -16.078893661499023
    10. '_max' → logprob: -16.203893661499023

Token 279: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014166681095957756
    2. '=' → logprob: -4.264166831970215
    3. ' ' → logprob: -12.764166831970215
    4. ' ' → logprob: -16.0141658782959
    5. ')' → logprob: -16.2641658782959
    6. '	' → logprob: -16.7641658782959
    7. '_' → logprob: -17.6391658782959
    8. 's' → logprob: -17.7641658782959
    9. ' =
' → logprob: -17.8891658782959
    10. '<|end|>' → logprob: -18.5141658782959

Token 280: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.061967913061380386
    2. ' i' → logprob: -2.8119678497314453
    3. '	i' → logprob: -15.811967849731445
    4. '   ' → logprob: -17.311967849731445
    5. ' ' → logprob: -18.561967849731445
    6. '(i' → logprob: -19.311967849731445
    7. '           ' → logprob: -20.061967849731445
    8. '=i' → logprob: -20.061967849731445
    9. '_i' → logprob: -20.811967849731445
    10. '
' → logprob: -20.811967849731445

Token 281: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0005598236457444727
    2. '-' → logprob: -7.5005598068237305
    3. ' ' → logprob: -12.12555980682373
    4. ' ' → logprob: -14.37555980682373
    5. ' -
' → logprob: -15.37555980682373
    6. ')' → logprob: -16.000560760498047
    7. '-prefix' → logprob: -16.000560760498047
    8. ' –' → logprob: -16.625560760498047
    9. '<|end|>' → logprob: -16.875560760498047
    10. ',' → logprob: -17.000560760498047

Token 282: ' prefix' (ID: 18633)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.0019288709154352546
    2. ' prefix' → logprob: -6.251928806304932
    3. '(prefix' → logprob: -15.25192928314209
    4. '_prefix' → logprob: -19.251928329467773
    5. '   ' → logprob: -20.126928329467773
    6. 'refix' → logprob: -20.376928329467773
    7. 'pref' → logprob: -20.751928329467773
    8. 'PREFIX' → logprob: -21.626928329467773
    9. 'preced' → logprob: -21.751928329467773
    10. 'Prefix' → logprob: -21.751928329467773

Token 283: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -9.088346359931165e-07
    2. 'index' → logprob: -14.000000953674316
    3. 'Index' → logprob: -17.0
    4. '[index' → logprob: -17.75
    5. '_INDEX' → logprob: -19.625
    6. '_prefix' → logprob: -19.625
    7. ' index' → logprob: -19.75
    8. '@index' → logprob: -20.25
    9. '_user' → logprob: -20.5
    10. '	index' → logprob: -20.625

Token 284: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -1.981667537620524e-06
    2. 'map' → logprob: -13.375001907348633
    3. 'Map' → logprob: -16.125001907348633
    4. 'index' → logprob: -17.125001907348633
    5. '_MAP' → logprob: -17.250001907348633
    6. 'prefix' → logprob: -17.375001907348633
    7. '_index' → logprob: -17.625001907348633
    8. '_balance' → logprob: -18.125001907348633
    9. '_prefix' → logprob: -18.500001907348633
    10. '[' → logprob: -18.625001907348633

Token 285: '[p' (ID: 23234)
  Prédit: '[p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -1.2233183042553719e-05
    2. '[' → logprob: -11.500012397766113
    3. ' [' → logprob: -13.500012397766113
    4. 'prefix' → logprob: -15.500012397766113
    5. '[
' → logprob: -16.000011444091797
    6. '[parent' → logprob: -17.000011444091797
    7. '[key' → logprob: -17.125011444091797
    8. '```' → logprob: -17.250011444091797
    9. '[token' → logprob: -17.375011444091797
    10. ' ' → logprob: -17.500011444091797

Token 286: 'refix' (ID: 8902)
  Prédit: 'refix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'refix' → logprob: -1.664371848164592e-05
    2. 'ref' → logprob: -11.750016212463379
    3. 'REFIX' → logprob: -11.875016212463379
    4. 'prefix' → logprob: -14.375016212463379
    5. 'r' → logprob: -14.750016212463379
    6. '[p' → logprob: -15.125016212463379
    7. 're' → logprob: -15.250016212463379
    8. '[' → logprob: -16.375017166137695
    9. '   ' → logprob: -17.250017166137695
    10. ' prefix' → logprob: -17.625017166137695

Token 287: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.0015003408771008253
    2. 'sum' → logprob: -6.751500129699707
    3. '_map' → logprob: -8.126500129699707
    4. '_s' → logprob: -12.251500129699707
    5. '_index' → logprob: -12.251500129699707
    6. '_' → logprob: -12.876500129699707
    7. '[' → logprob: -12.876500129699707
    8. '[_' → logprob: -13.001500129699707
    9. ' sum' → logprob: -13.626500129699707
    10. ']' → logprob: -13.626500129699707

Token 288: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0007811574032530189
    2. '[' → logprob: -7.875781059265137
    3. ')' → logprob: -8.875781059265137
    4. ' ]' → logprob: -9.000781059265137
    5. '']' → logprob: -10.125781059265137
    6. '"]' → logprob: -10.500781059265137
    7. '```' → logprob: -11.250781059265137
    8. '[token' → logprob: -11.625781059265137
    9. ']
' → logprob: -11.750781059265137
    10. ']+' → logprob: -11.875781059265137

Token 289: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3526792526245117
    2. '               ' → logprob: -1.2276792526245117
    3. '<|end|>' → logprob: -5.602679252624512
    4. '
' → logprob: -9.352679252624512
    5. ' if' → logprob: -9.352679252624512
    6. '                   ' → logprob: -9.727679252624512
    7. '            
' → logprob: -9.852679252624512
    8. '       ' → logprob: -10.102679252624512
    9. '                
' → logprob: -10.477679252624512
    10. ')' → logprob: -10.477679252624512

Token 290: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.038362760096788406
    2. 'if' (adapté à ' if') → logprob: -3.788362741470337
    3. '           ' → logprob: -4.413362979888916
    4. '               ' → logprob: -5.913362979888916
    5. '
' → logprob: -9.913362503051758
    6. ' 
' → logprob: -10.163362503051758
    7. ' max' → logprob: -10.288362503051758
    8. '            ' → logprob: -10.913362503051758
    9. ' ' → logprob: -11.288362503051758
    10. '                ' → logprob: -11.788362503051758

Token 291: ' sub' (ID: 1543)
  Prédit: ' sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sub' → logprob: -0.3132656216621399
    2. 'sub' → logprob: -1.3132655620574951
    3. '	sub' → logprob: -12.688265800476074
    4. '(sub' → logprob: -14.563265800476074
    5. '_sub' → logprob: -15.688265800476074
    6. '[sub' → logprob: -17.063264846801758
    7. 'Sub' → logprob: -17.813264846801758
    8. '=sub' → logprob: -18.438264846801758
    9. '.sub' → logprob: -18.563264846801758
    10. '   ' → logprob: -18.688264846801758

Token 292: 'array' (ID: 3361)
  Prédit: 'array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'array' → logprob: -0.5236762762069702
    2. '_len' → logprob: -0.8986762762069702
    3. '_array' → logprob: -8.023675918579102
    4. 'arra' → logprob: -9.523675918579102
    5. 'ar' → logprob: -10.273675918579102
    6. '               ' → logprob: -10.523675918579102
    7. 'arr' → logprob: -11.273675918579102
    8. '_arr' → logprob: -11.273675918579102
    9. '           ' → logprob: -11.273675918579102
    10. '>' → logprob: -11.773675918579102

Token 293: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -0.0002226093056378886
    2. 'len' → logprob: -8.500222206115723
    3. '_' → logprob: -12.500222206115723
    4. '[len' → logprob: -13.125222206115723
    5. '<len' → logprob: -13.375222206115723
    6. '>' → logprob: -13.375222206115723
    7. 'en' → logprob: -13.625222206115723
    8. 'Len' → logprob: -13.875222206115723
    9. 'max' → logprob: -14.125222206115723
    10. 'length' → logprob: -14.125222206115723

Token 294: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.0297548845410347
    2. '>' → logprob: -3.529754877090454
    3. ' ' → logprob: -13.029754638671875
    4. ' ' → logprob: -14.154754638671875
    5. '   ' → logprob: -15.279754638671875
    6. ' >
' → logprob: -15.529754638671875
    7. '[' → logprob: -15.904754638671875
    8. '	' → logprob: -16.029754638671875
    9. '.' → logprob: -16.154754638671875
    10. '">' → logprob: -16.154754638671875

Token 295: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0005530327325686812
    2. ' max' → logprob: -7.500553131103516
    3. '           ' → logprob: -17.000553131103516
    4. '               ' → logprob: -18.500553131103516
    5. '	max' → logprob: -18.625553131103516
    6. '_max' → logprob: -19.500553131103516
    7. '
' → logprob: -19.500553131103516
    8. '(max' → logprob: -19.750553131103516
    9. '[max' → logprob: -20.375553131103516
    10. '=max' → logprob: -20.500553131103516

Token 296: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -4.320199877838604e-07
    2. ' _' → logprob: -15.5
    3. 'len' → logprob: -16.125
    4. '_' → logprob: -16.75
    5. '_LEN' → logprob: -17.75
    6. 'Len' → logprob: -18.375
    7. '_length' → logprob: -18.875
    8. '[len' → logprob: -19.0
    9. '_val' → logprob: -19.25
    10. '__' → logprob: -19.25

Token 297: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004955866374075413
    2. ':
' → logprob: -5.504955768585205
    3. '               ' → logprob: -7.879955768585205
    4. '           ' → logprob: -8.629956245422363
    5. '                   ' → logprob: -8.754956245422363
    6. '<|end|>' → logprob: -9.754956245422363
    7. '                       ' → logprob: -10.254956245422363
    8. '=' → logprob: -11.004956245422363
    9. '                           ' → logprob: -11.379956245422363
    10. '):' → logprob: -11.504956245422363

Token 298: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00021045419271104038
    2. '                       ' → logprob: -9.375210762023926
    3. '               ' → logprob: -9.750210762023926
    4. ':
' → logprob: -10.125210762023926
    5. '           ' → logprob: -12.000210762023926
    6. '                    ' → logprob: -12.500210762023926
    7. '                  ' → logprob: -12.500210762023926
    8. '                    
' → logprob: -12.875210762023926
    9. '
' → logprob: -13.250210762023926
    10. 'max' → logprob: -13.375210762023926

Token 299: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.6742757558822632
    2. '                   ' → logprob: -1.5492757558822632
    3. '                       ' → logprob: -1.5492757558822632
    4. 'max' (adapté à ' max') → logprob: -2.7992758750915527
    5. '               ' → logprob: -6.174275875091553
    6. '                    ' → logprob: -6.674275875091553
    7. '           ' → logprob: -7.799275875091553
    8. '                ' → logprob: -8.924275398254395
    9. '                    
' → logprob: -8.924275398254395
    10. '[max' → logprob: -9.049275398254395

Token 300: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -1.9361264946837764e-07
    2. '_' → logprob: -16.0
    3. '_l' → logprob: -17.625
    4. '_val' → logprob: -18.25
    5. '_le' → logprob: -18.375
    6. ' _' → logprob: -19.25
    7. '_length' → logprob: -19.375
    8. 'len' → logprob: -19.625
    9. '_max' → logprob: -20.5
    10. '_LEN' → logprob: -20.625

Token 301: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018150178715586662
    2. '=' → logprob: -4.018150329589844
    3. '=sub' → logprob: -15.643150329589844
    4. ' ' → logprob: -16.893150329589844
    5. ' =
' → logprob: -18.018150329589844
    6. '＝' → logprob: -18.018150329589844
    7. '                    ' → logprob: -19.143150329589844
    8. '                ' → logprob: -19.143150329589844
    9. '	' → logprob: -19.893150329589844
    10. ' ' → logprob: -20.143150329589844

Token 302: ' sub' (ID: 1543)
  Prédit: ' sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sub' → logprob: -0.014163628220558167
    2. 'sub' → logprob: -4.264163494110107
    3. '	sub' → logprob: -17.014163970947266
    4. '(sub' → logprob: -18.514163970947266
    5. '_sub' → logprob: -18.639163970947266
    6. '[sub' → logprob: -18.639163970947266
    7. '=sub' → logprob: -18.889163970947266
    8. ' subs' → logprob: -20.139163970947266
    9. '.sub' → logprob: -20.639163970947266
    10. ' subprocess' → logprob: -20.764163970947266

Token 303: 'array' (ID: 3361)
  Prédit: 'array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'array' → logprob: -0.006009852513670921
    2. '_len' → logprob: -5.256010055541992
    3. '_array' → logprob: -7.756010055541992
    4. 'arra' → logprob: -8.131010055541992
    5. 'ar' → logprob: -10.756010055541992
    6. '_' → logprob: -12.006010055541992
    7. 'arr' → logprob: -12.256010055541992
    8. ' array' → logprob: -12.256010055541992
    9. '_arr' → logprob: -12.881010055541992
    10. 'a' → logprob: -13.381010055541992

Token 304: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -2.1888679839321412e-05
    2. 'len' → logprob: -10.750021934509277
    3. '_' → logprob: -16.25002098083496
    4. '[len' → logprob: -16.50002098083496
    5. 'Len' → logprob: -16.75002098083496
    6. '_val' → logprob: -16.87502098083496
    7. 'sub' → logprob: -17.50002098083496
    8. '_LEN' → logprob: -17.75002098083496
    9. '_l' → logprob: -17.87502098083496
    10. 'en' → logprob: -18.00002098083496

Token 305: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0003500050224829465
    2. '               ' → logprob: -8.500349998474121
    3. '
' → logprob: -10.375349998474121
    4. '            
' → logprob: -10.500349998474121
    5. '                   ' → logprob: -10.625349998474121
    6. '       ' → logprob: -11.000349998474121
    7. 'else' → logprob: -11.000349998474121
    8. 'elif' → logprob: -11.625349998474121
    9. '                
' → logprob: -12.500349998474121
    10. ' else' → logprob: -13.000349998474121

Token 306: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0017021986423060298
    2. '                   ' → logprob: -7.251702308654785
    3. '               ' → logprob: -7.376702308654785
    4. '       ' → logprob: -8.251702308654785
    5. '            
' → logprob: -10.876702308654785
    6. 'return' → logprob: -11.126702308654785
    7. '```' → logprob: -11.126702308654785
    8. '          ' → logprob: -11.251702308654785
    9. 'else' → logprob: -11.626702308654785
    10. '            ' → logprob: -11.876702308654785

Token 307: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.45968005061149597
    2. '           ' → logprob: -1.5846800804138184
    3. ' else' → logprob: -2.3346800804138184
    4. '       ' → logprob: -2.7096800804138184
    5. '	else' → logprob: -10.70967960357666
    6. '         ' → logprob: -11.08467960357666
    7. '```' → logprob: -11.20967960357666
    8. '        ' → logprob: -11.33467960357666
    9. '          ' → logprob: -11.33467960357666
    10. '   ' → logprob: -11.45967960357666

Token 308: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.28115907311439514
    2. ':
' → logprob: -2.1561591625213623
    3. '               ' → logprob: -2.2811591625213623
    4. '           ' → logprob: -3.9061591625213623
    5. ' prefix' → logprob: -5.406158924102783
    6. '[' → logprob: -7.531158924102783
    7. '            ' → logprob: -7.781158924102783
    8. '{' → logprob: -7.906158924102783
    9. ' :
' → logprob: -8.281159400939941
    10. '       ' → logprob: -8.906159400939941

Token 309: '               ' (ID: 506)
  Prédit: ' prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' prefix' → logprob: -0.5162950158119202
    2. '               ' → logprob: -1.0162949562072754
    3. 'prefix' → logprob: -3.2662949562072754
    4. '           ' → logprob: -5.766294956207275
    5. ' ' → logprob: -10.766295433044434
    6. '   ' → logprob: -10.891295433044434
    7. '_prefix' → logprob: -12.391295433044434
    8. '(prefix' → logprob: -12.641295433044434
    9. '                   ' → logprob: -12.766295433044434
    10. '       ' → logprob: -13.141295433044434

Token 310: ' prefix' (ID: 18633)
  Prédit: ' prefix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' prefix' → logprob: -0.005539781413972378
    2. 'prefix' (adapté à ' prefix') → logprob: -5.255539894104004
    3. '               ' → logprob: -8.130539894104004
    4. '           ' → logprob: -11.630539894104004
    5. '_prefix' → logprob: -13.880539894104004
    6. '            ' → logprob: -14.630539894104004
    7. '(prefix' → logprob: -14.755539894104004
    8. '   ' → logprob: -15.255539894104004
    9. ' ' → logprob: -16.130538940429688
    10. '                ' → logprob: -16.380538940429688

Token 311: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -2.0100624169572257e-05
    2. ' _' → logprob: -11.500020027160645
    3. '_sum' → logprob: -11.875020027160645
    4. '```' → logprob: -13.625020027160645
    5. '_' → logprob: -13.750020027160645
    6. '
' → logprob: -16.62502098083496
    7. '`' → logprob: -16.75002098083496
    8. '_s' → logprob: -16.87502098083496
    9. '"_' → logprob: -17.00002098083496
    10. ''_' → logprob: -17.12502098083496

Token 312: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -1.3856492842023727e-06
    2. 'map' → logprob: -13.750000953674316
    3. 'Map' → logprob: -15.875000953674316
    4. '_MAP' → logprob: -17.875001907348633
    5. '_maps' → logprob: -18.750001907348633
    6. '[' → logprob: -18.875001907348633
    7. '```' → logprob: -19.250001907348633
    8. '_mapping' → logprob: -19.375001907348633
    9. '           ' → logprob: -19.500001907348633
    10. 'ermap' → logprob: -19.625001907348633

Token 313: '[p' (ID: 23234)
  Prédit: '[p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -3.054500666621607e-06
    2. '[' → logprob: -12.87500286102295
    3. '\[' → logprob: -15.37500286102295
    4. ' [' → logprob: -16.375003814697266
    5. '```' → logprob: -18.250003814697266
    6. '[parent' → logprob: -19.125003814697266
    7. 'prefix' → logprob: -19.375003814697266
    8. '[
' → logprob: -19.375003814697266
    9. '[val' → logprob: -19.375003814697266
    10. '[...]' → logprob: -20.375003814697266

Token 314: 'refix' (ID: 8902)
  Prédit: 'refix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'refix' → logprob: -3.666993507067673e-05
    2. 'prefix' → logprob: -10.875036239624023
    3. 'ref' → logprob: -11.250036239624023
    4. 'REFIX' → logprob: -13.125036239624023
    5. 'r' → logprob: -14.000036239624023
    6. '[' → logprob: -14.250036239624023
    7. '_prefix' → logprob: -15.250036239624023
    8. 're' → logprob: -15.500036239624023
    9. '[p' → logprob: -16.375036239624023
    10. 's' → logprob: -16.375036239624023

Token 315: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.0003365350130479783
    2. 'sum' → logprob: -8.000336647033691
    3. '_map' → logprob: -15.000336647033691
    4. '```' → logprob: -15.375336647033691
    5. ' sum' → logprob: -16.125335693359375
    6. '_s' → logprob: -16.500335693359375
    7. 'Sum' → logprob: -16.750335693359375
    8. '_' → logprob: -16.875335693359375
    9. 's' → logprob: -16.875335693359375
    10. '	sum' → logprob: -17.250335693359375

Token 316: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47408562898635864
    2. ' =' → logprob: -0.9740856289863586
    3. ']' → logprob: -12.224085807800293
    4. '=i' → logprob: -13.099085807800293
    5. ']=' → logprob: -13.724085807800293
    6. ')' → logprob: -14.724085807800293
    7. ')=' → logprob: -15.724085807800293
    8. '＝' → logprob: -17.724084854125977
    9. '   ' → logprob: -18.724084854125977
    10. '=index' → logprob: -18.849084854125977

Token 317: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01815146580338478
    2. ' =' → logprob: -4.01815128326416
    3. '=i' → logprob: -13.39315128326416
    4. '[i' → logprob: -18.143152236938477
    5. '＝' → logprob: -19.018152236938477
    6. '[' → logprob: -19.018152236938477
    7. '=

' → logprob: -19.018152236938477
    8. '   ' → logprob: -19.268152236938477
    9. '=index' → logprob: -19.268152236938477
    10. ' ' → logprob: -19.893152236938477

Token 318: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.01416350994259119
    2. ' i' → logprob: -4.264163494110107
    3. '	i' → logprob: -17.139163970947266
    4. ' ' → logprob: -21.139163970947266
    5. '_i' → logprob: -22.889163970947266
    6. '   ' → logprob: -23.139163970947266
    7. 'I' → logprob: -23.639163970947266
    8. '*i' → logprob: -23.639163970947266
    9. '{i' → logprob: -23.889163970947266
    10. '[i' → logprob: -23.889163970947266

Token 319: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 320: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00021438424300868064
    2. 'return' → logprob: -8.625214576721191
    3. ' return' → logprob: -10.875214576721191
    4. '   ' → logprob: -11.625214576721191
    5. '```' → logprob: -12.875214576721191
    6. '	return' → logprob: -13.750214576721191
    7. '<|end|>' → logprob: -14.000214576721191
    8. '        
' → logprob: -14.375214576721191
    9. '      ' → logprob: -14.375214576721191
    10. '	' → logprob: -15.000214576721191

Token 321: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.1603175401687622
    2. '       ' → logprob: -1.9103175401687622
    3. ' return' → logprob: -9.410317420959473
    4. '   ' → logprob: -11.785317420959473
    5. '	return' → logprob: -13.035317420959473
    6. '```' → logprob: -13.785317420959473
    7. '
' → logprob: -15.285317420959473
    8. '{return' → logprob: -15.910317420959473
    9. '	' → logprob: -16.16031837463379
    10. ':return' → logprob: -16.78531837463379

Token 322: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.03804149478673935
    2. 'max' → logprob: -3.288041591644287
    3. '(max' → logprob: -17.788042068481445
    4. '_max' → logprob: -18.663042068481445
    5. '	max' → logprob: -19.038042068481445
    6. '[max' → logprob: -19.038042068481445
    7. ' ' → logprob: -19.663042068481445
    8. '=max' → logprob: -19.913042068481445
    9. ',max' → logprob: -20.163042068481445
    10. ' maxlength' → logprob: -20.788042068481445

Token 323: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -9.088346359931165e-07
    2. 'len' → logprob: -14.000000953674316
    3. '_l' → logprob: -16.75
    4. '_val' → logprob: -17.375
    5. '_' → logprob: -18.0
    6. '_max' → logprob: -18.375
    7. 'Len' → logprob: -18.5
    8. '_LEN' → logprob: -19.25
    9. '\' → logprob: -19.375
    10. '_length' → logprob: -19.875

Token 324: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 325: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 326: ' Trade' (ID: 24794)
  Prédit: 'Suffix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Suffix' → logprob: -0.20718510448932648
    2. 'Zero' → logprob: -3.5821850299835205
    3. 'Prefix' → logprob: -4.0821852684021
    4. ' S' → logprob: -4.2071852684021
    5. 'Na' → logprob: -4.3321852684021
    6. ' Na' → logprob: -4.7071852684021
    7. ' Sliding' → logprob: -4.7071852684021
    8. 'Sliding' → logprob: -4.8321852684021
    9. 'S' → logprob: -4.9571852684021
    10. 'Max' → logprob: -5.0821852684021

Token 327: 'Data' (ID: 1186)
  Prédit: 'Balance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Balance' → logprob: -0.2353125512599945
    2. 'Volume' → logprob: -2.2353124618530273
    3. 'Flow' → logprob: -2.6103124618530273
    4. 'Interval' → logprob: -4.610312461853027
    5. 'Net' → logprob: -5.485312461853027
    6. 'Sequence' → logprob: -6.610312461853027
    7. 'Data' → logprob: -6.735312461853027
    8. 'Cycle' → logprob: -6.735312461853027
    9. 'Sum' → logprob: -7.110312461853027
    10. 'Difference' → logprob: -7.235312461853027

Token 328: 'Input' (ID: 3275)
  Prédit: 'Analyzer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Analyzer' → logprob: -0.2438671737909317
    2. 'Stream' → logprob: -1.9938671588897705
    3. 'Processor' → logprob: -3.2438671588897705
    4. 'Balance' → logprob: -4.49386739730835
    5. 'Aggregator' → logprob: -4.99386739730835
    6. 'Streamer' → logprob: -5.49386739730835
    7. 'Window' → logprob: -5.61886739730835
    8. 'Summary' → logprob: -6.36886739730835
    9. 'Balancer' → logprob: -6.49386739730835
    10. 'Flow' → logprob: -6.61886739730835

Token 329: 'Parser' (ID: 9231)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.013395269401371479
    2. '(' → logprob: -4.638395309448242
    3. 'Reader' → logprob: -6.513395309448242
    4. ':
' → logprob: -7.138395309448242
    5. 'Parser' → logprob: -7.138395309448242
    6. 'Handler' → logprob: -8.013395309448242
    7. 'Processor' → logprob: -9.638395309448242
    8. 'Stream' → logprob: -10.513395309448242
    9. '():' → logprob: -10.513395309448242
    10. 'Source' → logprob: -11.013395309448242

Token 330: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0001029471677611582
    2. '(' → logprob: -9.375102996826172
    3. ':
' → logprob: -11.000102996826172
    4. '():' → logprob: -14.500102996826172
    5. ':

' → logprob: -15.875102996826172
    6. ' :' → logprob: -15.875102996826172
    7. '(Abstract' → logprob: -16.125102996826172
    8. ':def' → logprob: -16.750102996826172
    9. ',' → logprob: -16.875102996826172
    10. '<|end|>' → logprob: -17.000102996826172

Token 331: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23256921768188477
    2. ':' → logprob: -1.9825692176818848
    3. ':
' → logprob: -2.7325692176818848
    4. '```' → logprob: -5.982569217681885
    5. '<|end|>' → logprob: -6.982569217681885
    6. '
' → logprob: -7.107569217681885
    7. 'def' → logprob: -8.982568740844727
    8. '    
' → logprob: -9.357568740844727
    9. '  ' → logprob: -10.107568740844727
    10. ' def' → logprob: -10.482568740844727

Token 332: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0008339279447682202
    2. 'def' → logprob: -7.625833988189697
    3. ' def' → logprob: -8.750833511352539
    4. '```' → logprob: -9.625833511352539
    5. 'class' → logprob: -9.750833511352539
    6. '"""
' (adapté à ' """
') → logprob: -11.125833511352539
    7. '    
' → logprob: -11.125833511352539
    8. '
' → logprob: -11.125833511352539
    9. ' """
' → logprob: -11.750833511352539
    10. '    ' → logprob: -12.375833511352539

Token 333: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004233681596815586
    2. ' """
' → logprob: -6.7542338371276855
    3. '"""
' → logprob: -6.8792338371276855
    4. 'def' → logprob: -7.1292338371276855
    5. '"""' → logprob: -7.1292338371276855
    6. 'class' → logprob: -8.254233360290527
    7. ' def' → logprob: -9.129233360290527
    8. ' """' → logprob: -10.254233360290527
    9. '```' → logprob: -12.129233360290527
    10. '  ' → logprob: -12.254233360290527

Token 334: ' Parses' (ID: 179117)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14340004324913025
    2. 'class' → logprob: -2.018399953842163
    3. '```' → logprob: -8.018400192260742
    4. 'def' → logprob: -8.893400192260742
    5. ' class' → logprob: -9.268400192260742
    6. 'Provides' → logprob: -10.268400192260742
    7. '    ' → logprob: -10.393400192260742
    8. 'Class' → logprob: -10.393400192260742
    9. '
' → logprob: -10.643400192260742
    10. ' def' → logprob: -11.518400192260742

Token 335: ' input' (ID: 3422)
  Prédit: ' trade'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' trade' → logprob: -0.3300929069519043
    2. ' input' → logprob: -2.0800929069519043
    3. 'trade' → logprob: -2.2050929069519043
    4. ' raw' → logprob: -3.9550929069519043
    5. ' lines' → logprob: -4.705092906951904
    6. 'input' → logprob: -4.955092906951904
    7. ' the' → logprob: -6.080092906951904
    8. ' user' → logprob: -6.205092906951904
    9. ' data' → logprob: -6.330092906951904
    10. ' a' → logprob: -6.705092906951904

Token 336: ' according' (ID: 7065)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 337: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.14285962283611298
    2. ' to' → logprob: -2.017859697341919
    3. '<|end|>' → logprob: -9.14285945892334
    4. 'ly' → logprob: -9.89285945892334
    5. 'class' → logprob: -11.14285945892334
    6. '
' → logprob: -13.26785945892334
    7. 't' → logprob: -13.39285945892334
    8. 's' → logprob: -13.51785945892334
    9. '"""
' → logprob: -13.76785945892334
    10. '_to' → logprob: -13.76785945892334

Token 338: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.6004073619842529
    2. ' specified' → logprob: -1.975407361984253
    3. ' given' → logprob: -2.475407361984253
    4. 'the' → logprob: -3.100407361984253
    5. ' a' → logprob: -3.225407361984253
    6. ' problem' → logprob: -3.600407361984253
    7. 'specified' → logprob: -3.850407361984253
    8. ' specification' → logprob: -3.975407361984253
    9. '"""
' → logprob: -4.225407600402832
    10. ' provided' → logprob: -4.350407600402832

Token 339: ' problem' (ID: 4792)
  Prédit: ' problem'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' problem' → logprob: -0.48087993264198303
    2. 'problem' → logprob: -2.35588002204895
    3. ' specified' → logprob: -2.35588002204895
    4. ' following' → logprob: -2.98088002204895
    5. 'specified' → logprob: -3.35588002204895
    6. ' given' → logprob: -3.85588002204895
    7. ' specification' → logprob: -4.230879783630371
    8. ' format' → logprob: -4.355879783630371
    9. ' input' → logprob: -4.355879783630371
    10. ' prompt' → logprob: -4.730879783630371

Token 340: ' specification' (ID: 44119)
  Prédit: ' description'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' description' → logprob: -0.7554246783256531
    2. ' statement' → logprob: -0.7554246783256531
    3. ' specification' → logprob: -3.130424737930298
    4. ' specifications' → logprob: -5.630424499511719
    5. 'description' → logprob: -5.880424499511719
    6. 'statement' → logprob: -5.880424499511719
    7. '   ' → logprob: -6.130424499511719
    8. 'spec' → logprob: -6.630424499511719
    9. ' prompt' → logprob: -6.755424499511719
    10. ' context' → logprob: -7.255424499511719

Token 341: ' from' (ID: 591)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.878533661365509
    2. '.' → logprob: -1.3785336017608643
    3. ':' → logprob: -1.7535336017608643
    4. ',' → logprob: -3.0035336017608643
    5. '<|end|>' → logprob: -3.1285336017608643
    6. ' and' → logprob: -3.3785336017608643
    7. ':
' → logprob: -4.628533840179443
    8. '
' → logprob: -4.628533840179443
    9. '.
' → logprob: -5.753533840179443
    10. ' to' → logprob: -5.753533840179443

Token 342: ' standard' (ID: 7024)
  Prédit: ' standard'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' standard' → logprob: -0.7649374008178711
    2. ' the' → logprob: -1.639937400817871
    3. ' input' → logprob: -2.514937400817871
    4. 'standard' → logprob: -2.764937400817871
    5. ' stdin' → logprob: -3.139937400817871
    6. 'the' → logprob: -3.389937400817871
    7. 'stdin' → logprob: -3.389937400817871
    8. 'sys' → logprob: -3.889937400817871
    9. 'input' → logprob: -4.264937400817871
    10. ' a' → logprob: -4.764937400817871

Token 343: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.029753616079688072
    2. 'input' → logprob: -3.5297536849975586
    3. 'import' → logprob: -12.779753684997559
    4. '_input' → logprob: -16.154752731323242
    5. '```' → logprob: -16.654752731323242
    6. '=input' → logprob: -17.529752731323242
    7. 'in' → logprob: -17.904752731323242
    8. '	input' → logprob: -18.029752731323242
    9. '
' → logprob: -18.279752731323242
    10. 'stdin' → logprob: -18.654752731323242

Token 344: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21994243562221527
    2. ':' → logprob: -1.9699424505233765
    3. '.' → logprob: -3.219942331314087
    4. ':
' → logprob: -4.594942569732666
    5. '
' → logprob: -6.344942569732666
    6. ',' → logprob: -6.594942569732666
    7. ' and' → logprob: -6.594942569732666
    8. '```' → logprob: -6.969942569732666
    9. 'import' → logprob: -7.219942569732666
    10. '.
' → logprob: -7.719942569732666

Token 345: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08339329063892365
    2. '   ' → logprob: -2.5833933353424072
    3. '```' → logprob: -6.083393096923828
    4. '    
' → logprob: -6.458393096923828
    5. '<|end|>' → logprob: -7.583393096923828
    6. '

' → logprob: -10.333393096923828
    7. '<|end|>' → logprob: -10.583393096923828
    8. '  
' → logprob: -11.083393096923828
    9. ')' → logprob: -11.583393096923828
    10. '"""' → logprob: -12.083393096923828

Token 346: ' Enc' (ID: 26858)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.023350296542048454
    2. '   ' → logprob: -3.898350238800049
    3. '```' → logprob: -6.148350238800049
    4. '    
' → logprob: -7.898350238800049
    5. '<|end|>' → logprob: -8.648350715637207
    6. 'class' → logprob: -10.148350715637207
    7. '

' → logprob: -10.648350715637207
    8. 'import' → logprob: -11.148350715637207
    9. 'def' → logprob: -11.773350715637207
    10. '<|end|>' → logprob: -11.898350715637207

Token 347: 'aps' (ID: 3506)
  Prédit: 'odes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'odes' → logprob: -0.08990810066461563
    2. 'ounter' → logprob: -3.8399081230163574
    3. 'ode' → logprob: -4.089908123016357
    4. 'lasses' → logprob: -4.589908123016357
    5. 'lass' → logprob: -4.714908123016357
    6. 'oding' → logprob: -4.839908123016357
    7. 'l' → logprob: -4.964908123016357
    8. 'aps' → logprob: -5.589908123016357
    9. '```' → logprob: -6.339908123016357
    10. 'ount' → logprob: -6.339908123016357

Token 348: 'ulates' (ID: 52494)
  Prédit: 'ulates'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ulates' → logprob: -3.893480243277736e-05
    2. 'ulating' → logprob: -10.375039100646973
    3. 'u' → logprob: -12.625039100646973
    4. 'ulated' → logprob: -13.500039100646973
    5. 'ules' → logprob: -13.625039100646973
    6. 'lates' → logprob: -14.000039100646973
    7. 'ulate' → logprob: -14.750039100646973
    8. 'ulation' → logprob: -15.375039100646973
    9. '   ' → logprob: -15.625039100646973
    10. 'ul' → logprob: -16.125038146972656

Token 349: ' input' (ID: 3422)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.8294796347618103
    2. ' parsing' → logprob: -1.579479694366455
    3. ' input' → logprob: -1.829479694366455
    4. ' logic' → logprob: -2.829479694366455
    5. 'input' → logprob: -3.079479694366455
    6. ' methods' → logprob: -3.704479694366455
    7. 'the' → logprob: -3.829479694366455
    8. ' functionality' → logprob: -4.079479694366455
    9. ' reading' → logprob: -4.704479694366455
    10. ' all' → logprob: -5.204479694366455

Token 350: ' parsing' (ID: 51039)
  Prédit: ' parsing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parsing' → logprob: -0.1402048021554947
    2. ' reading' → logprob: -2.265204906463623
    3. ' processing' → logprob: -4.140204906463623
    4. ' handling' → logprob: -6.015204906463623
    5. 'reading' → logprob: -6.640204906463623
    6. '   ' → logprob: -6.765204906463623
    7. 'def' → logprob: -7.015204906463623
    8. ' methods' → logprob: -7.140204906463623
    9. '()' → logprob: -7.140204906463623
    10. '_reader' → logprob: -7.390204906463623

Token 351: ' for' (ID: 395)
  Prédit: ' logic'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' logic' → logprob: -0.5507910847663879
    2. ' functionality' → logprob: -1.6757910251617432
    3. ' and' → logprob: -2.175791025161743
    4. '   ' → logprob: -2.675791025161743
    5. 'and' → logprob: -3.550791025161743
    6. ' methods' → logprob: -4.300791263580322
    7. ' for' → logprob: -5.425791263580322
    8. ' functionalities' → logprob: -6.300791263580322
    9. ' to' → logprob: -6.550791263580322
    10. ' into' → logprob: -6.800791263580322

Token 352: ' easier' (ID: 11087)
  Prédit: ' modular'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' modular' → logprob: -0.8146229386329651
    2. 'flex' → logprob: -1.9396228790283203
    3. 'mod' → logprob: -2.0646228790283203
    4. 'reuse' → logprob: -2.4396228790283203
    5. ' reuse' → logprob: -3.5646228790283203
    6. ' easy' → logprob: -3.5646228790283203
    7. ' flexibility' → logprob: -3.8146228790283203
    8. ' re' → logprob: -4.06462287902832
    9. 're' → logprob: -4.06462287902832
    10. ' potential' → logprob: -4.31462287902832

Token 353: ' future' (ID: 5277)
  Prédit: ' testing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' testing' → logprob: -0.7976906895637512
    2. 'unit' → logprob: -1.4226906299591064
    3. 'testing' → logprob: -2.0476906299591064
    4. ' unit' → logprob: -2.4226906299591064
    5. ' integration' → logprob: -3.1726906299591064
    6. 'integration' → logprob: -3.2976906299591064
    7. 'extension' → logprob: -5.0476908683776855
    8. ' extension' → logprob: -5.5476908683776855
    9. ' reuse' → logprob: -7.5476908683776855
    10. 'reuse' → logprob: -8.672690391540527

Token 354: ' input' (ID: 3422)
  Prédit: 'extension'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'extension' → logprob: -0.7856648564338684
    2. 'ext' → logprob: -1.9106647968292236
    3. ' extension' → logprob: -2.0356647968292236
    4. 'extensions' → logprob: -2.0356647968292236
    5. 'mod' → logprob: -3.1606647968292236
    6. ' extensions' → logprob: -3.6606647968292236
    7. ' extens' → logprob: -4.035665035247803
    8. ' maintenance' → logprob: -4.160665035247803
    9. 'maintenance' → logprob: -4.535665035247803
    10. 'exp' → logprob: -4.910665035247803

Token 355: ' source' (ID: 4256)
  Prédit: 'handling'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'handling' → logprob: -0.5722784996032715
    2. ' handling' → logprob: -1.4472784996032715
    3. 'mod' → logprob: -2.4472784996032715
    4. 'format' → logprob: -3.6972784996032715
    5. 'extensions' → logprob: -3.6972784996032715
    6. 'exp' → logprob: -4.1972784996032715
    7. 'management' → logprob: -4.8222784996032715
    8. 'adapt' → logprob: -4.9472784996032715
    9. ' management' → logprob: -5.1972784996032715
    10. 'processing' → logprob: -5.5722784996032715

Token 356: ' extensions' (ID: 34511)
  Prédit: ' support'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' support' → logprob: -1.4698563814163208
    2. ' handling' → logprob: -1.7198563814163208
    3. ' management' → logprob: -1.9698563814163208
    4. 'support' → logprob: -2.7198562622070312
    5. 'adapt' → logprob: -2.9698562622070312
    6. ' integration' → logprob: -3.2198562622070312
    7. ' adaptation' → logprob: -3.3448562622070312
    8. ' flexibility' → logprob: -3.3448562622070312
    9. ' expansion' → logprob: -3.3448562622070312
    10. 'handling' → logprob: -3.5948562622070312

Token 357: '.
' (ID: 558)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.16652920842170715
    2. '<|end|>' → logprob: -2.6665291786193848
    3. '   ' → logprob: -2.7915291786193848
    4. ':' → logprob: -4.666529178619385
    5. '
' → logprob: -5.041529178619385
    6. ',' → logprob: -6.041529178619385
    7. '.
' → logprob: -6.666529178619385
    8. '<|end|>' → logprob: -6.916529178619385
    9. '```' → logprob: -7.166529178619385
    10. '    
' → logprob: -8.166529655456543

Token 358: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.20047539472579956
    2. '   ' → logprob: -2.0754754543304443
    3. '```' → logprob: -2.9504754543304443
    4. '<|end|>' → logprob: -5.950475215911865
    5. '    
' → logprob: -7.325475215911865
    6. '"""' → logprob: -8.450475692749023
    7. 'class' → logprob: -9.450475692749023
    8. '

' → logprob: -9.575475692749023
    9. '"""
' → logprob: -9.825475692749023
    10. '<|end|>' → logprob: -10.075475692749023

Token 359: ' """

' (ID: 28800)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1599694788455963
    2. '   ' → logprob: -2.0349695682525635
    3. '```' → logprob: -4.409969329833984
    4. '"""' → logprob: -6.034969329833984
    5. 'class' → logprob: -7.034969329833984
    6. '"""
' → logprob: -7.159969329833984
    7. '    
' → logprob: -7.534969329833984
    8. '

' → logprob: -8.034969329833984
    9. '``' → logprob: -10.534969329833984
    10. '<|end|>' → logprob: -11.284969329833984

Token 360: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.45602890849113464
    2. ' def' → logprob: -1.206028938293457
    3. 'def' → logprob: -2.706028938293457
    4. '	def' → logprob: -12.206028938293457
    5. 'class' → logprob: -12.581028938293457
    6. '```' → logprob: -12.581028938293457
    7. 'import' → logprob: -13.206028938293457
    8. '   ' → logprob: -13.706028938293457
    9. ' ' → logprob: -14.081028938293457
    10. ' class' → logprob: -14.456028938293457

Token 361: ' @' (ID: 759)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04225518926978111
    2. '@' (adapté à ' @') → logprob: -3.292255163192749
    3. ' def' → logprob: -5.542255401611328
    4. '   ' → logprob: -8.792255401611328
    5. ' @' → logprob: -8.917255401611328
    6. 'import' → logprob: -14.292255401611328
    7. 'staticmethod' → logprob: -15.042255401611328
    8. '
' → logprob: -16.417255401611328
    9. '```' → logprob: -16.417255401611328
    10. '	def' → logprob: -16.917255401611328

Token 362: 'staticmethod' (ID: 53164)
  Prédit: 'staticmethod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'staticmethod' → logprob: -1.1637164789135568e-05
    2. 'classmethod' → logprob: -11.750011444091797
    3. 'static' → logprob: -12.500011444091797
    4. 'stat' → logprob: -19.625011444091797
    5. ' static' → logprob: -20.125011444091797
    6. 'dat' → logprob: -20.250011444091797
    7. 'st' → logprob: -20.875011444091797
    8. 'sta' → logprob: -22.375011444091797
    9. 'Static' → logprob: -22.375011444091797
    10. 'property' → logprob: -22.500011444091797

Token 363: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.018289709463715553
    2. '
' → logprob: -4.268289566040039
    3. '   ' → logprob: -6.018289566040039
    4. ' def' → logprob: -6.393289566040039
    5. '	def' → logprob: -12.143289566040039
    6. '    
' → logprob: -12.643289566040039
    7. '(def' → logprob: -13.768289566040039
    8. '  
' → logprob: -14.143289566040039
    9. '\' → logprob: -15.143289566040039
    10. ':def' → logprob: -15.768289566040039

Token 364: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0005398084758780897
    2. ' def' → logprob: -8.250539779663086
    3. '   ' → logprob: -8.500539779663086
    4. '
' → logprob: -9.500539779663086
    5. '	def' → logprob: -15.000539779663086
    6. ' ' → logprob: -17.500539779663086
    7. '    
' → logprob: -17.625539779663086
    8. '  ' → logprob: -18.000539779663086
    9. '```' → logprob: -18.750539779663086
    10. '  
' → logprob: -18.875539779663086

Token 365: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -2.5776860184123507e-06
    2. '
' → logprob: -13.00000286102295
    3. ' def' → logprob: -15.25000286102295
    4. '   ' → logprob: -16.750001907348633
    5. '```' → logprob: -19.500001907348633
    6. '    
' → logprob: -20.250001907348633
    7. 'de' → logprob: -20.500001907348633
    8. 'read' → logprob: -21.000001907348633
    9. '	def' → logprob: -21.375001907348633
    10. 'd' → logprob: -21.750001907348633

Token 366: ' parse' (ID: 8420)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.3137435019016266
    2. 'read' → logprob: -1.3137434720993042
    3. ' parse' → logprob: -7.938743591308594
    4. ' read' → logprob: -9.063743591308594
    5. 'def' → logprob: -12.313743591308594
    6. 'get' → logprob: -13.063743591308594
    7. 'from' → logprob: -13.188743591308594
    8. 'fetch' → logprob: -15.188743591308594
    9. 'load' → logprob: -15.938743591308594
    10. 'decode' → logprob: -17.188743591308594

Token 367: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.011077305302023888
    2. '():
' → logprob: -5.011077404022217
    3. '(input' → logprob: -5.761077404022217
    4. '_input' → logprob: -8.011076927185059
    5. '(data' → logprob: -8.261076927185059
    6. '()' → logprob: -8.636076927185059
    7. '(lines' → logprob: -9.011076927185059
    8. '(line' → logprob: -9.386076927185059
    9. '(stdin' → logprob: -10.011076927185059
    10. '(stream' → logprob: -10.011076927185059

Token 368: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0031143762171268463
    2. '()' → logprob: -6.128114223480225
    3. 'import' → logprob: -8.503114700317383
    4. '():
' → logprob: -8.503114700317383
    5. '```' → logprob: -9.128114700317383
    6. '()
' → logprob: -9.628114700317383
    7. '(' → logprob: -9.753114700317383
    8. '        
' → logprob: -9.878114700317383
    9. '():' → logprob: -9.878114700317383
    10. '   ' → logprob: -10.378114700317383

Token 369: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.25277817249298096
    2. 'import' (adapté à ' import') → logprob: -1.752778172492981
    3. ' n' → logprob: -3.6277780532836914
    4. '       ' → logprob: -4.252778053283691
    5. ' input' → logprob: -5.627778053283691
    6. 'n' → logprob: -5.627778053283691
    7. ' line' → logprob: -7.127778053283691
    8. ' data' → logprob: -7.752778053283691
    9. ' lines' → logprob: -7.877778053283691
    10. 'input' → logprob: -8.502778053283691

Token 370: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.011048289015889168
    2. ' sys' → logprob: -4.511048316955566
    3. '	sys' → logprob: -15.011048316955566
    4. '=sys' → logprob: -15.761048316955566
    5. '(sys' → logprob: -18.76104736328125
    6. '_sys' → logprob: -19.01104736328125
    7. '```' → logprob: -19.63604736328125
    8. '.sys' → logprob: -19.88604736328125
    9. 'sy' → logprob: -21.26104736328125
    10. 'stdin' → logprob: -21.26104736328125

Token 371: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005887199193239212
    2. '        
' → logprob: -5.505887031555176
    3. '
' → logprob: -6.755887031555176
    4. 'data' → logprob: -8.755887031555176
    5. 'input' → logprob: -9.630887031555176
    6. ' lines' → logprob: -9.755887031555176
    7. 'n' → logprob: -9.880887031555176
    8. ' 
' → logprob: -10.005887031555176
    9. '  
' → logprob: -10.380887031555176
    10. ' line' → logprob: -10.505887031555176

Token 372: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004002176690846682
    2. 'n' → logprob: -6.629002094268799
    3. 'data' → logprob: -7.379002094268799
    4. '        
' → logprob: -7.379002094268799
    5. 'input' → logprob: -8.004002571105957
    6. '
' → logprob: -8.254002571105957
    7. ' lines' → logprob: -8.379002571105957
    8. ' n' → logprob: -8.879002571105957
    9. ' data' → logprob: -8.879002571105957
    10. ' input' → logprob: -9.129002571105957

Token 373: ' input' (ID: 3422)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.033663567155599594
    2. ' lines' → logprob: -4.533663749694824
    3. 'data' → logprob: -5.033663749694824
    4. 'input' (adapté à ' input') → logprob: -5.408663749694824
    5. ' input' → logprob: -5.408663749694824
    6. 'n' → logprob: -6.283663749694824
    7. ' n' → logprob: -6.283663749694824
    8. ' data' → logprob: -6.408663749694824
    9. 'lines' → logprob: -7.533663749694824
    10. 'line' → logprob: -8.158663749694824

Token 374: ' =' (ID: 314)
  Prédit: '_line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.5094114542007446
    2. '_data' → logprob: -1.8844114542007446
    3. '_lines' → logprob: -2.009411334991455
    4. '()' → logprob: -2.509411334991455
    5. '_' → logprob: -4.009411334991455
    6. '().' → logprob: -5.259411334991455
    7. '=' → logprob: -5.634411334991455
    8. '.readline' → logprob: -6.134411334991455
    9. ' =' → logprob: -6.509411334991455
    10. '_list' → logprob: -8.509411811828613

Token 375: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.004078758880496025
    2. ' sys' → logprob: -5.5040788650512695
    3. '=sys' → logprob: -15.50407886505127
    4. '	sys' → logprob: -15.75407886505127
    5. '(sys' → logprob: -16.254077911376953
    6. '_sys' → logprob: -19.879077911376953
    7. 'lambda' → logprob: -20.629077911376953
    8. 'input' → logprob: -21.129077911376953
    9. '/sys' → logprob: -21.254077911376953
    10. '.sys' → logprob: -22.504077911376953

Token 376: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0031966082751750946
    2. '.stdout' → logprob: -6.378196716308594
    3. '.readline' → logprob: -6.878196716308594
    4. 'stdin' → logprob: -7.878196716308594
    5. '.' → logprob: -9.878196716308594
    6. ' .' → logprob: -11.378196716308594
    7. '.stderr' → logprob: -12.128196716308594
    8. 's' → logprob: -13.003196716308594
    9. '(stdin' → logprob: -13.003196716308594
    10. '   ' → logprob: -13.253196716308594

Token 377: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.00026264708139933646
    2. '.' → logprob: -8.500262260437012
    3. '.read' → logprob: -9.750262260437012
    4. '.readlines' → logprob: -14.500262260437012
    5. 'read' → logprob: -15.750262260437012
    6. ' readline' → logprob: -16.125263214111328
    7. '
' → logprob: -16.625263214111328
    8. '.
' → logprob: -17.875263214111328
    9. '.stdin' → logprob: -18.250263214111328
    10. ' .' → logprob: -18.875263214111328

Token 378: '
' (ID: 198)
  Prédit: '()
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.7222086787223816
    2. '()' → logprob: -0.9722086787223816
    3. '       ' → logprob: -2.4722087383270264
    4. '().' → logprob: -2.9722087383270264
    5. '        
' → logprob: -8.847208976745605
    6. '
' → logprob: -9.097208976745605
    7. '()\' → logprob: -9.472208976745605
    8. '()

' → logprob: -10.347208976745605
    9. 'return' → logprob: -10.847208976745605
    10. '()
' → logprob: -11.222208976745605

Token 379: '       ' (ID: 309)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.0157476663589478
    2. '()
' → logprob: -1.0157476663589478
    3. '       ' → logprob: -1.6407476663589478
    4. '().' → logprob: -2.515747547149658
    5. '        
' → logprob: -7.515747547149658
    6. '()\' → logprob: -8.640748023986816
    7. '
' → logprob: -9.390748023986816
    8. '()[' → logprob: -9.890748023986816
    9. '()

' → logprob: -9.890748023986816
    10. 'return' → logprob: -9.890748023986816

Token 380: ' N' (ID: 478)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.11614037305116653
    2. '       ' → logprob: -2.241140365600586
    3. ' n' → logprob: -5.991140365600586
    4. 'num' → logprob: -8.116140365600586
    5. 't' → logprob: -8.241140365600586
    6. 'N' (adapté à ' N') → logprob: -9.491140365600586
    7. 'line' → logprob: -9.991140365600586
    8. '        
' → logprob: -10.116140365600586
    9. '
' → logprob: -11.241140365600586
    10. 'q' → logprob: -11.491140365600586

Token 381: '_raw' (ID: 36128)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22716321051120758
    2. '=' → logprob: -1.6021631956100464
    3. '()' → logprob: -6.602163314819336
    4. ',' → logprob: -8.477163314819336
    5. '=int' → logprob: -8.852163314819336
    6. '   ' → logprob: -11.227163314819336
    7. ' ()' → logprob: -11.477163314819336
    8. ' ' → logprob: -12.602163314819336
    9. 'int' → logprob: -13.352163314819336
    10. '_' → logprob: -13.477163314819336

Token 382: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8133244514465332
    2. '()' → logprob: -0.8133244514465332
    3. ' =' → logprob: -2.188324451446533
    4. ' ()' → logprob: -7.188324451446533
    5. ',' → logprob: -8.813323974609375
    6. '(' → logprob: -9.063323974609375
    7. '   ' → logprob: -10.563323974609375
    8. '()
' → logprob: -10.813323974609375
    9. ' ' → logprob: -10.813323974609375
    10. '_' → logprob: -11.438323974609375

Token 383: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.5759458541870117
    2. ' input' → logprob: -0.8259458541870117
    3. 'int' → logprob: -12.700945854187012
    4. 'sys' → logprob: -13.325945854187012
    5. ' sys' → logprob: -13.825945854187012
    6. ' int' → logprob: -15.200945854187012
    7. '=input' → logprob: -15.825945854187012
    8. '(input' → logprob: -15.950945854187012
    9. ' ' → logprob: -16.825946807861328
    10. '	input' → logprob: -17.575946807861328

Token 384: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.07900611311197281
    2. '().' → logprob: -2.5790061950683594
    3. '()
' → logprob: -9.07900619506836
    4. ' ()' → logprob: -14.20400619506836
    5. '()

' → logprob: -14.82900619506836
    6. '())' → logprob: -14.82900619506836
    7. '()\' → logprob: -15.32900619506836
    8. '(' → logprob: -15.45400619506836
    9. '()<' → logprob: -16.20400619506836
    10. '()
' → logprob: -16.20400619506836

Token 385: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0028666856233030558
    2. '()' → logprob: -7.252866744995117
    3. '        
' → logprob: -7.627866744995117
    4. '.strip' → logprob: -7.877866744995117
    5. ' N' → logprob: -8.377866744995117
    6. '=' → logprob: -8.502866744995117
    7. 'N' → logprob: -8.877866744995117
    8. '().' → logprob: -9.002866744995117
    9. ' =' → logprob: -9.752866744995117
    10. '<|end|>' → logprob: -9.877866744995117

Token 386: ' while' (ID: 2049)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.551260769367218
    2. '       ' → logprob: -0.926260769367218
    3. ' N' → logprob: -3.8012607097625732
    4. 'n' → logprob: -5.426260948181152
    5. 'try' → logprob: -8.051260948181152
    6. 'if' → logprob: -8.426260948181152
    7. 'while' (adapté à ' while') → logprob: -9.051260948181152
    8. ' if' → logprob: -9.426260948181152
    9. ' n' → logprob: -9.426260948181152
    10. ' while' → logprob: -9.676260948181152

Token 387: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0072387405671179295
    2. ' N' → logprob: -5.257238864898682
    3. 'not' → logprob: -6.757238864898682
    4. ' not' → logprob: -7.132238864898682
    5. 'len' → logprob: -10.132238388061523
    6. ' len' → logprob: -14.632238388061523
    7. ' ' → logprob: -14.757238388061523
    8. 'True' → logprob: -15.007238388061523
    9. '   ' → logprob: -15.757238388061523
    10. ''N' → logprob: -15.757238388061523

Token 388: '_raw' (ID: 36128)
  Prédit: '_raw'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_raw' → logprob: -2.0100624169572257e-05
    2. '_RAW' → logprob: -12.125020027160645
    3. 'raw' → logprob: -12.625020027160645
    4. '.strip' → logprob: -13.000020027160645
    5. 'Raw' → logprob: -13.250020027160645
    6. '_' → logprob: -13.250020027160645
    7. '   ' → logprob: -14.250020027160645
    8. ' and' → logprob: -14.500020027160645
    9. '_strip' → logprob: -14.500020027160645
    10. '.raw' → logprob: -15.250020027160645

Token 389: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.008493777364492416
    2. '.' → logprob: -5.008493900299072
    3. '==' → logprob: -7.508493900299072
    4. ' and' → logprob: -7.633493900299072
    5. ' .' → logprob: -7.883493900299072
    6. 'strip' → logprob: -8.508493423461914
    7. ' ==' → logprob: -9.133493423461914
    8. 'and' → logprob: -10.758493423461914
    9. '.rstrip' → logprob: -11.258493423461914
    10. ' is' → logprob: -12.133493423461914

Token 390: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03836563229560852
    2. '()==' → logprob: -3.288365602493286
    3. '==' → logprob: -8.038365364074707
    4. ' ==' → logprob: -14.663365364074707
    5. '```' → logprob: -15.538365364074707
    6. '()=="' → logprob: -15.538365364074707
    7. '()!=' → logprob: -16.038366317749023
    8. '()<' → logprob: -16.288366317749023
    9. '=' → logprob: -16.788366317749023
    10. '():' → logprob: -17.163366317749023

Token 391: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.004978285636752844
    2. '()==' → logprob: -5.629978179931641
    3. ' ==' → logprob: -7.004978179931641
    4. '()' → logprob: -7.754978179931641
    5. '=' → logprob: -10.25497817993164
    6. '===' → logprob: -12.62997817993164
    7. '==
' → logprob: -13.75497817993164
    8. ')==' → logprob: -14.00497817993164
    9. ']==' → logprob: -14.50497817993164
    10. ')' → logprob: -16.37997817993164

Token 392: ' '':
' (ID: 125614)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''' → logprob: -0.10667355358600616
    2. ''' → logprob: -2.8566734790802
    3. '""' → logprob: -3.6066734790802
    4. '"":' → logprob: -4.106673717498779
    5. '"' → logprob: -9.106673240661621
    6. ' '':
' → logprob: -13.106673240661621
    7. ''''' → logprob: -13.856673240661621
    8. '''
' → logprob: -14.481673240661621
    9. ' '' → logprob: -14.731673240661621
    10. '''.' → logprob: -15.106673240661621

Token 393: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0006254645413719118
    2. ':' → logprob: -8.375625610351562
    3. ':
' → logprob: -8.750625610351562
    4. ',' → logprob: -9.125625610351562
    5. 'N' → logprob: -10.250625610351562
    6. '       ' → logprob: -10.625625610351562
    7. '          ' → logprob: -11.000625610351562
    8. ' N' → logprob: -11.250625610351562
    9. ' and' → logprob: -11.625625610351562
    10. '            ' → logprob: -12.375625610351562

Token 394: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' (adapté à ' N') → logprob: -0.001170460251159966
    2. ' N' → logprob: -6.751170635223389
    3. '   ' → logprob: -15.62617015838623
    4. '           ' → logprob: -16.501171112060547
    5. ' ' → logprob: -16.751171112060547
    6. '       ' → logprob: -18.001171112060547
    7. '	N' → logprob: -18.376171112060547
    8. '               ' → logprob: -19.001171112060547
    9. '  ' → logprob: -19.376171112060547
    10. '_N' → logprob: -20.001171112060547

Token 395: '_raw' (ID: 36128)
  Prédit: '_raw'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_raw' → logprob: -1.1279553291387856e-05
    2. 'raw' → logprob: -11.500011444091797
    3. 'Raw' → logprob: -14.500011444091797
    4. 'aw' → logprob: -15.250011444091797
    5. '_RAW' → logprob: -15.375011444091797
    6. '_' → logprob: -16.500011444091797
    7. '_aw' → logprob: -17.250011444091797
    8. '	raw' → logprob: -17.625011444091797
    9. '```' → logprob: -18.500011444091797
    10. '   ' → logprob: -18.500011444091797

Token 396: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.004084574058651924
    2. ' =' → logprob: -5.504084587097168
    3. '=N' → logprob: -12.004084587097168
    4. '=
' → logprob: -18.12908363342285
    5. ' ' → logprob: -18.37908363342285
    6. 'N' → logprob: -18.50408363342285
    7. '＝' → logprob: -18.62908363342285
    8. '=input' → logprob: -18.87908363342285
    9. ' N' → logprob: -18.87908363342285
    10. '=line' → logprob: -19.00408363342285

Token 397: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.023250950500369072
    2. ' input' → logprob: -3.7732510566711426
    3. 'sys' → logprob: -12.273250579833984
    4. ' sys' → logprob: -14.898250579833984
    5. 'import' → logprob: -15.273250579833984
    6. '	input' → logprob: -17.023250579833984
    7. '<input' → logprob: -17.148250579833984
    8. '=input' → logprob: -17.398250579833984
    9. '(input' → logprob: -17.648250579833984
    10. ' ' → logprob: -19.023250579833984

Token 398: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.25265568494796753
    2. '()' → logprob: -1.6276557445526123
    3. '       ' → logprob: -3.6276557445526123
    4. '
' → logprob: -8.627655982971191
    5. '()

' → logprob: -9.877655982971191
    6. '        
' → logprob: -11.252655982971191
    7. '())' → logprob: -11.377655982971191
    8. '()\' → logprob: -11.377655982971191
    9. '()
' → logprob: -11.627655982971191
    10. '())
' → logprob: -12.127655982971191

Token 399: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003955224819947034
    2. 'N' → logprob: -8.250395774841309
    3. ' N' → logprob: -9.625395774841309
    4. '
' → logprob: -9.875395774841309
    5. '   ' → logprob: -11.875395774841309
    6. '        
' → logprob: -12.750395774841309
    7. '           ' → logprob: -13.000395774841309
    8. '```' → logprob: -13.250395774841309
    9. 'n' → logprob: -13.875395774841309
    10. ',' → logprob: -15.125395774841309

Token 400: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' (adapté à ' N') → logprob: -0.0005371859879232943
    2. '       ' → logprob: -8.000536918640137
    3. ' N' → logprob: -8.875536918640137
    4. 'n' → logprob: -9.750536918640137
    5. 'try' → logprob: -12.625536918640137
    6. '   ' → logprob: -15.375536918640137
    7. '
' → logprob: -16.250537872314453
    8. ' n' → logprob: -17.250537872314453
    9. '#' → logprob: -18.250537872314453
    10. ' try' → logprob: -18.250537872314453

Token 401: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47429150342941284
    2. ' =' → logprob: -0.9742915034294128
    3. '=int' → logprob: -8.474291801452637
    4. '=
' → logprob: -12.974291801452637
    5. ' =
' → logprob: -13.349291801452637
    6. 'int' → logprob: -14.599291801452637
    7. ' ' → logprob: -14.849291801452637
    8. '   ' → logprob: -15.349291801452637
    9. '_raw' → logprob: -15.349291801452637
    10. '=

' → logprob: -15.974291801452637

Token 402: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0005530327325686812
    2. ' int' → logprob: -7.500553131103516
    3. '(int' → logprob: -20.750553131103516
    4. '   ' → logprob: -21.375553131103516
    5. '[int' → logprob: -21.500553131103516
    6. '=int' → logprob: -21.625553131103516
    7. '<int' → logprob: -22.250553131103516
    8. 'in' → logprob: -22.375553131103516
    9. '  ' → logprob: -22.625553131103516
    10. 'N' → logprob: -22.875553131103516

Token 403: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.00011033779446734115
    2. '(' → logprob: -9.125110626220703
    3. 'N' → logprob: -13.625110626220703
    4. '(
' → logprob: -15.750110626220703
    5. ' (' → logprob: -18.000110626220703
    6. '((' → logprob: -18.500110626220703
    7. '(n' → logprob: -19.250110626220703
    8. '	N' → logprob: -19.500110626220703
    9. '(

' → logprob: -20.250110626220703
    10. '(T' → logprob: -20.625110626220703

Token 404: '_raw' (ID: 36128)
  Prédit: '_raw'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_raw' → logprob: -1.282920129597187e-05
    2. 'Raw' → logprob: -11.625012397766113
    3. 'raw' → logprob: -12.750012397766113
    4. '(N' → logprob: -14.750012397766113
    5. '_RAW' → logprob: -15.000012397766113
    6. ')' → logprob: -15.375012397766113
    7. '.Raw' → logprob: -17.87501335144043
    8. ' Raw' → logprob: -18.00001335144043
    9. '
' → logprob: -18.12501335144043
    10. 'RAW' → logprob: -18.50001335144043

Token 405: '.strip' (ID: 40613)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.023377783596515656
    2. '.strip' → logprob: -3.7733778953552246
    3. ')
' → logprob: -9.023377418518066
    4. '.rstrip' → logprob: -12.273377418518066
    5. ' )' → logprob: -12.648377418518066
    6. '.trim' → logprob: -13.648377418518066
    7. '())' → logprob: -14.273377418518066
    8. ' ' → logprob: -14.898377418518066
    9. 'strip' → logprob: -14.898377418518066
    10. '[' → logprob: -15.398377418518066

Token 406: '())

' (ID: 27654)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5801350474357605
    2. '())' → logprob: -0.8301350474357605
    3. '())
' → logprob: -5.955134868621826
    4. '()' → logprob: -7.080134868621826
    5. ')
' → logprob: -7.205134868621826
    6. '()
' → logprob: -12.580135345458984
    7. '())

' → logprob: -13.830135345458984
    8. ')`' → logprob: -13.955135345458984
    9. '())
' → logprob: -14.080135345458984
    10. ' )' → logprob: -14.205135345458984

Token 407: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14666536450386047
    2. 'data' → logprob: -2.021665334701538
    3. ' data' → logprob: -5.771665573120117
    4. 'values' → logprob: -8.271665573120117
    5. 'numbers' → logprob: -8.521665573120117
    6. 'arr' → logprob: -9.521665573120117
    7. '   ' → logprob: -9.646665573120117
    8. 'lines' → logprob: -9.771665573120117
    9. '	data' → logprob: -10.646665573120117
    10. ' lines' → logprob: -11.146665573120117

Token 408: ' data' (ID: 1238)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' (adapté à ' data') → logprob: -0.015611735172569752
    2. 'arr' → logprob: -4.89061164855957
    3. 'values' → logprob: -5.76561164855957
    4. 'balance' → logprob: -7.14061164855957
    5. 'stream' → logprob: -7.14061164855957
    6. 'balances' → logprob: -7.14061164855957
    7. 'numbers' → logprob: -7.14061164855957
    8. 'result' → logprob: -7.39061164855957
    9. 'vals' → logprob: -8.76561164855957
    10. 'line' → logprob: -9.01561164855957

Token 409: ' =' (ID: 314)
  Prédit: '_stream'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_stream' → logprob: -0.11645829677581787
    2. ' =' → logprob: -2.2414584159851074
    3. '=' → logprob: -6.241458415985107
    4. '_' → logprob: -7.366458415985107
    5. '_list' → logprob: -7.616458415985107
    6. '=[]' → logprob: -7.991458415985107
    7. '=[]
' → logprob: -9.36645793914795
    8. '_line' → logprob: -9.61645793914795
    9. '_values' → logprob: -10.99145793914795
    10. '   ' → logprob: -11.49145793914795

Token 410: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.014245656318962574
    2. '[]
' → logprob: -4.264245510101318
    3. '[' → logprob: -10.139245986938477
    4. ' []' → logprob: -10.889245986938477
    5. '[]

' → logprob: -10.889245986938477
    6. 'list' → logprob: -12.264245986938477
    7. '[list' → logprob: -15.639245986938477
    8. ' []
' → logprob: -15.889245986938477
    9. '[]>' → logprob: -16.264245986938477
    10. '[]}' → logprob: -17.139245986938477

Token 411: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002318203216418624
    2. 'for' → logprob: -6.627318382263184
    3. ' for' → logprob: -7.002318382263184
    4. 'while' → logprob: -10.002318382263184
    5. '   ' → logprob: -11.627318382263184
    6. '
' → logprob: -11.627318382263184
    7. ' while' → logprob: -12.002318382263184
    8. '	' → logprob: -12.502318382263184
    9. '        
' → logprob: -12.877318382263184
    10. '	for' → logprob: -13.002318382263184

Token 412: ' read' (ID: 1729)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.3231518268585205
    2. '       ' → logprob: -1.3231518268585205
    3. ' while' → logprob: -5.073151588439941
    4. 'for' → logprob: -5.698151588439941
    5. 'count' → logprob: -8.823151588439941
    6. ' for' → logprob: -10.073151588439941
    7. '   ' → logprob: -10.823151588439941
    8. '	while' → logprob: -11.698151588439941
    9. '        
' → logprob: -12.823151588439941
    10. 'total' → logprob: -13.698151588439941

Token 413: '_count' (ID: 7536)
  Prédit: '_bytes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bytes' → logprob: -0.6541001796722412
    2. '_count' → logprob: -1.2791001796722412
    3. '_so' → logprob: -3.154100179672241
    4. '_len' → logprob: -3.279100179672241
    5. '_lines' → logprob: -3.779100179672241
    6. '=' → logprob: -4.27910041809082
    7. ' =' → logprob: -4.27910041809082
    8. 'ed' → logprob: -4.65410041809082
    9. '_data' → logprob: -4.77910041809082
    10. '_tokens' → logprob: -4.90410041809082

Token 414: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20141470432281494
    2. '=' → logprob: -1.701414704322815
    3. ' ' → logprob: -13.826415061950684
    4. '   ' → logprob: -15.826415061950684
    5. '  ' → logprob: -16.826414108276367
    6. 'while' → logprob: -16.951414108276367
    7. '0' → logprob: -17.451414108276367
    8. ',' → logprob: -17.701414108276367
    9. ' +=' → logprob: -18.076414108276367
    10. '_' → logprob: -18.076414108276367

Token 415: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.011048170737922192
    2. ' ' → logprob: -4.511048316955566
    3. '   ' → logprob: -15.636048316955566
    4. '1' → logprob: -17.19854736328125
    5. 'len' → logprob: -17.38604736328125
    6. '=' → logprob: -18.07354736328125
    7. 'N' → logprob: -18.51104736328125
    8. '  ' → logprob: -18.76104736328125
    9. '۰' → logprob: -18.88604736328125
    10. ' len' → logprob: -18.94854736328125

Token 416: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00043102685594931245
    2. ' ' → logprob: -7.750431060791016
    3. 'len' → logprob: -15.750431060791016
    4. '   ' → logprob: -16.375431060791016
    5. '1' → logprob: -17.000431060791016
    6. 'N' → logprob: -17.875431060791016
    7. '  ' → logprob: -19.125431060791016
    8. ' len' → logprob: -19.500431060791016
    9. '=' → logprob: -19.562931060791016
    10. '```' → logprob: -19.625431060791016

Token 417: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008635608479380608
    2. '<|end|>' → logprob: -5.758635520935059
    3. ' while' → logprob: -6.008635520935059
    4. 'while' → logprob: -6.258635520935059
    5. '
' → logprob: -8.133635520935059
    6. '        
' → logprob: -8.383635520935059
    7. '	while' → logprob: -8.633635520935059
    8. '   ' → logprob: -9.133635520935059
    9. '<|end|>' → logprob: -9.133635520935059
    10. ',' → logprob: -10.008635520935059

Token 418: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2955421209335327
    2. '
' → logprob: -1.6705421209335327
    3. ' while' → logprob: -3.1705422401428223
    4. 'while' → logprob: -3.9205422401428223
    5. '	while' → logprob: -6.045542240142822
    6. '<|end|>' → logprob: -6.670542240142822
    7. '        
' → logprob: -7.295542240142822
    8. '   ' → logprob: -7.670542240142822
    9. ' 
' → logprob: -7.670542240142822
    10. '  
' → logprob: -8.920541763305664

Token 419: ' while' (ID: 2049)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0173958539962769
    2. 'while' (adapté à ' while') → logprob: -1.1423958539962769
    3. ' while' → logprob: -1.1423958539962769
    4. '
' → logprob: -8.642395973205566
    5. '	while' → logprob: -8.892395973205566
    6. '   ' → logprob: -10.767395973205566
    7. 'While' → logprob: -11.642395973205566
    8. '        
' → logprob: -12.892395973205566
    9. '<|end|>' → logprob: -12.892395973205566
    10. '```' → logprob: -13.642395973205566

Token 420: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.03804229199886322
    2. ' read' → logprob: -3.2880423069000244
    3. '   ' → logprob: -14.788042068481445
    4. '	read' → logprob: -14.788042068481445
    5. '(read' → logprob: -16.038042068481445
    6. '_read' → logprob: -18.288042068481445
    7. ' ' → logprob: -19.538042068481445
    8. 'len' → logprob: -20.413042068481445
    9. '.read' → logprob: -20.413042068481445
    10. 'Read' → logprob: -20.413042068481445

Token 421: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.005938159301877022
    2. 'read' → logprob: -5.3809380531311035
    3. ' read' → logprob: -7.1309380531311035
    4. '_' → logprob: -8.130938529968262
    5. '(read' → logprob: -9.005938529968262
    6. 'count' → logprob: -10.630938529968262
    7. '_read' → logprob: -10.755938529968262
    8. '<' → logprob: -10.880938529968262
    9. ' <' → logprob: -11.630938529968262
    10. ' ' → logprob: -11.755938529968262

Token 422: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.08898668736219406
    2. '<' → logprob: -2.46398663520813
    3. '<N' → logprob: -10.46398639678955
    4. ' ' → logprob: -11.21398639678955
    5. '<n' → logprob: -13.58898639678955
    6. '<size' → logprob: -14.08898639678955
    7. '<num' → logprob: -14.21398639678955
    8. '<len' → logprob: -14.21398639678955
    9. '[' → logprob: -14.46398639678955
    10. '<data' → logprob: -14.96398639678955

Token 423: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.2014133334159851
    2. ' N' → logprob: -1.7014133930206299
    3. '	N' → logprob: -17.951414108276367
    4. '>N' → logprob: -17.951414108276367
    5. '=N' → logprob: -18.951414108276367
    6. ' ' → logprob: -19.201414108276367
    7. '<N' → logprob: -19.326414108276367
    8. '   ' → logprob: -19.326414108276367
    9. '       ' → logprob: -20.451414108276367
    10. '_N' → logprob: -21.701414108276367

Token 424: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.524957537651062
    2. ':' → logprob: -0.899957537651062
    3. '       ' → logprob: -6.649957656860352
    4. '           ' → logprob: -8.274957656860352
    5. '):
' → logprob: -9.274957656860352
    6. '   ' → logprob: -9.649957656860352
    7. ' and' → logprob: -10.149957656860352
    8. '=' → logprob: -10.524957656860352
    9. ' :
' → logprob: -11.524957656860352
    10. ':
' → logprob: -11.899957656860352

Token 425: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005566088366322219
    2. ' line' → logprob: -7.875556468963623
    3. '<|end|>' → logprob: -10.375556945800781
    4. '            
' → logprob: -10.625556945800781
    5. '<|end|>' → logprob: -10.750556945800781
    6. '	       ' → logprob: -11.375556945800781
    7. ' lines' → logprob: -11.375556945800781
    8. ',' → logprob: -11.625556945800781
    9. '   ' → logprob: -11.750556945800781
    10. '    
' → logprob: -11.875556945800781

Token 426: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.06712040305137634
    2. 'line' (adapté à ' line') → logprob: -3.317120313644409
    3. '           ' → logprob: -3.567120313644409
    4. ' batch' → logprob: -9.567120552062988
    5. ' lines' → logprob: -9.692120552062988
    6. '   ' → logprob: -9.942120552062988
    7. ' parts' → logprob: -10.067120552062988
    8. 'batch' → logprob: -10.567120552062988
    9. ' chunk' → logprob: -10.817120552062988
    10. '	line' → logprob: -10.817120552062988

Token 427: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011054890230298042
    2. '=' → logprob: -4.511054992675781
    3. '=line' → logprob: -12.011054992675781
    4. '           ' → logprob: -14.636054992675781
    5. 's' → logprob: -15.136054992675781
    6. ' ' → logprob: -15.761054992675781
    7. ' =
' → logprob: -17.26105499267578
    8. 'tokens' → logprob: -17.63605499267578
    9. '		' → logprob: -17.76105499267578
    10. '()' → logprob: -17.76105499267578

Token 428: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.5231437683105469
    2. 'input' → logprob: -0.8981437683105469
    3. ' sys' → logprob: -12.148143768310547
    4. 'sys' → logprob: -12.273143768310547
    5. '(input' → logprob: -13.148143768310547
    6. '	input' → logprob: -13.148143768310547
    7. 'import' → logprob: -14.023143768310547
    8. ' ' → logprob: -14.148143768310547
    9. '=input' → logprob: -14.148143768310547
    10. '       ' → logprob: -14.398143768310547

Token 429: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.5769200921058655
    2. '()' → logprob: -0.8269200921058655
    3. '().' → logprob: -6.951920032501221
    4. '()
' → logprob: -10.826920509338379
    5. '()\' → logprob: -13.201920509338379
    6. '()

' → logprob: -13.826920509338379
    7. '())' → logprob: -15.701920509338379
    8. '()`' → logprob: -16.076919555664062
    9. '().
' → logprob: -16.451919555664062
    10. '())
' → logprob: -16.951919555664062

Token 430: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.014970379881560802
    2. '<|end|>' → logprob: -4.264970302581787
    3. '            
' → logprob: -8.014970779418945
    4. '<|end|>' → logprob: -8.139970779418945
    5. ' if' → logprob: -10.014970779418945
    6. '
' → logprob: -10.264970779418945
    7. '       ' → logprob: -11.139970779418945
    8. '  
' → logprob: -11.514970779418945
    9. '	       ' → logprob: -11.764970779418945
    10. ' =' → logprob: -11.764970779418945

Token 431: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1389332413673401
    2. ' if' → logprob: -2.3889331817626953
    3. 'if' (adapté à ' if') → logprob: -3.3889331817626953
    4. 'tokens' → logprob: -6.013933181762695
    5. '       ' → logprob: -7.513933181762695
    6. '            
' → logprob: -7.763933181762695
    7. ' tokens' → logprob: -8.013933181762695
    8. '
' → logprob: -8.763933181762695
    9. ' parts' → logprob: -9.888933181762695
    10. '               ' → logprob: -10.138933181762695

Token 432: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.5129825472831726
    2. ' line' → logprob: -1.3879826068878174
    3. ' not' → logprob: -2.0129826068878174
    4. 'not' → logprob: -4.012982368469238
    5. '(line' → logprob: -11.512982368469238
    6. '	line' → logprob: -11.512982368469238
    7. '#line' → logprob: -11.887982368469238
    8. ' ' → logprob: -12.137982368469238
    9. '[line' → logprob: -12.137982368469238
    10. '=line' → logprob: -12.262982368469238

Token 433: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.007247026078402996
    2. '.' → logprob: -5.257246971130371
    3. ' is' → logprob: -7.132246971130371
    4. '==' → logprob: -7.382246971130371
    5. 'strip' → logprob: -7.507246971130371
    6. ' ==' → logprob: -10.382246971130371
    7. ' .' → logprob: -12.757246971130371
    8. '.trim' → logprob: -13.132246971130371
    9. 'is' → logprob: -14.007246971130371
    10. '===' → logprob: -14.257246971130371

Token 434: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6871927976608276
    2. '()==' → logprob: -0.9371927976608276
    3. '():' → logprob: -2.937192916870117
    4. '==' → logprob: -3.062192916870117
    5. ' ==' → logprob: -5.437192916870117
    6. '()!=' → logprob: -7.812192916870117
    7. ':' → logprob: -7.937192916870117
    8. '():
' → logprob: -8.312192916870117
    9. '<|end|>' → logprob: -10.062192916870117
    10. '()>' → logprob: -10.312192916870117

Token 435: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.001384997507557273
    2. ' ==' → logprob: -6.62638521194458
    3. ':' → logprob: -10.626384735107422
    4. '=='' → logprob: -11.126384735107422
    5. '()==' → logprob: -12.126384735107422
    6. '===' → logprob: -12.126384735107422
    7. '=' → logprob: -12.376384735107422
    8. '!=' → logprob: -13.501384735107422
    9. ')==' → logprob: -14.001384735107422
    10. '==
' → logprob: -14.126384735107422

Token 436: ' '':
' (ID: 125614)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''' → logprob: -0.07894476503133774
    2. ''' → logprob: -2.578944683074951
    3. '"":' → logprob: -10.70394515991211
    4. '""' → logprob: -10.95394515991211
    5. '''
' → logprob: -12.45394515991211
    6. ''',' → logprob: -12.57894515991211
    7. '''.' → logprob: -12.70394515991211
    8. ' '':
' → logprob: -13.32894515991211
    9. '"' → logprob: -13.57894515991211
    10. '':' → logprob: -14.45394515991211

Token 437: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -7.97024549683556e-05
    2. ' continue' → logprob: -10.250080108642578
    3. 'continue' → logprob: -10.375080108642578
    4. ':
' → logprob: -12.125080108642578
    5. ':' → logprob: -12.625080108642578
    6. '           ' → logprob: -12.750080108642578
    7. '                   ' → logprob: -14.750080108642578
    8. ',' → logprob: -15.250080108642578
    9. '	           ' → logprob: -15.625080108642578
    10. '              ' → logprob: -16.125080108642578

Token 438: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.4985395073890686
    2. '               ' → logprob: -1.2485394477844238
    3. ' continue' → logprob: -2.248539447784424
    4. '                   ' → logprob: -9.623539924621582
    5. '   ' → logprob: -10.873539924621582
    6. '	continue' → logprob: -11.248539924621582
    7. '           ' → logprob: -12.498539924621582
    8. 'Continue' → logprob: -13.623539924621582
    9. '_continue' → logprob: -13.748539924621582
    10. '
' → logprob: -14.623539924621582

Token 439: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008403460495173931
    2. '
' → logprob: -5.008403301239014
    3. '            
' → logprob: -6.508403301239014
    4. '<|end|>' → logprob: -9.758403778076172
    5. '    
' → logprob: -10.383403778076172
    6. '               ' → logprob: -10.508403778076172
    7. '  
' → logprob: -11.008403778076172
    8. '        
' → logprob: -11.258403778076172
    9. ',' → logprob: -11.383403778076172
    10. ' 
' → logprob: -11.758403778076172

Token 440: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0002895834331866354
    2. 'tokens' → logprob: -8.750289916992188
    3. '               ' → logprob: -10.000289916992188
    4. '            
' → logprob: -10.125289916992188
    5. ' tokens' → logprob: -10.875289916992188
    6. ',' → logprob: -12.000289916992188
    7. '       ' → logprob: -12.250289916992188
    8. '
' → logprob: -13.250289916992188
    9. '	       ' → logprob: -13.250289916992188
    10. 'data' → logprob: -13.375289916992188

Token 441: ' data' (ID: 1238)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2013973593711853
    2. 'values' → logprob: -2.45139741897583
    3. 'parts' → logprob: -3.95139741897583
    4. ' parts' → logprob: -4.07639741897583
    5. 'vals' → logprob: -4.57639741897583
    6. 'numbers' → logprob: -4.57639741897583
    7. 'nums' → logprob: -4.70139741897583
    8. ' values' → logprob: -4.70139741897583
    9. 'tokens' → logprob: -4.70139741897583
    10. 'for' → logprob: -5.57639741897583

Token 442: '.append' (ID: 3709)
  Prédit: '.extend'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.extend' → logprob: -0.0005877026706002653
    2. ' +=' → logprob: -7.7505879402160645
    3. '+=' → logprob: -8.875587463378906
    4. '.' → logprob: -11.250587463378906
    5. 'extend' → logprob: -12.875587463378906
    6. ' .' → logprob: -14.125587463378906
    7. '_tokens' → logprob: -15.500587463378906
    8. '_extend' → logprob: -15.500587463378906
    9. '_values' → logprob: -16.250587463378906
    10. ' extends' → logprob: -16.375587463378906

Token 443: '(int' (ID: 2742)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.024146800860762596
    2. '(int' → logprob: -3.774146795272827
    3. ' int' → logprob: -7.024147033691406
    4. '   ' → logprob: -11.774147033691406
    5. '[int' → logprob: -13.774147033691406
    6. '           ' → logprob: -14.399147033691406
    7. '	int' → logprob: -14.649147033691406
    8. '       ' → logprob: -15.274147033691406
    9. '<int' → logprob: -15.524147033691406
    10. '(' → logprob: -15.649147033691406

Token 444: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -8.101369894575328e-05
    2. '(' → logprob: -9.875081062316895
    3. 'line' → logprob: -10.750081062316895
    4. ' line' → logprob: -12.000081062316895
    5. '(
' → logprob: -13.750081062316895
    6. ' (' → logprob: -14.375081062316895
    7. ')' → logprob: -16.000080108642578
    8. '=line' → logprob: -16.375080108642578
    9. '[line' → logprob: -16.375080108642578
    10. '	line' → logprob: -17.750080108642578

Token 445: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.04362475499510765
    2. '().' → logprob: -3.1686246395111084
    3. '))' → logprob: -7.7936248779296875
    4. '()))' → logprob: -8.918624877929688
    5. '(strip' → logprob: -9.918624877929688
    6. '()' → logprob: -11.793624877929688
    7. 'strip' → logprob: -11.918624877929688
    8. '()))
' → logprob: -12.543624877929688
    9. '.rstrip' → logprob: -12.918624877929688
    10. '.trim' → logprob: -13.043624877929688

Token 446: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.2266048938035965
    2. '()))
' → logprob: -1.72660493850708
    3. '))' → logprob: -3.72660493850708
    4. '))
' → logprob: -7.22660493850708
    5. '()' → logprob: -9.976604461669922
    6. '())' → logprob: -11.101604461669922
    7. '()))
' → logprob: -11.976604461669922
    8. '()))

' → logprob: -12.476604461669922
    9. '(' → logprob: -13.851604461669922
    10. '       ' → logprob: -14.226604461669922

Token 447: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0048499382100999355
    2. '
' → logprob: -5.379849910736084
    3. '            
' → logprob: -9.379850387573242
    4. '               ' → logprob: -9.754850387573242
    5. '       ' → logprob: -10.004850387573242
    6. '   ' → logprob: -11.879850387573242
    7. '                   ' → logprob: -12.379850387573242
    8. '		' → logprob: -12.629850387573242
    9. '          ' → logprob: -12.629850387573242
    10. '<|end|>' → logprob: -12.629850387573242

Token 448: ' read' (ID: 1729)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.0989484786987305
    2. ' read' → logprob: -1.0989484786987305
    3. 'read' (adapté à ' read') → logprob: -1.0989484786987305
    4. '   ' → logprob: -8.84894847869873
    5. '	read' → logprob: -9.47394847869873
    6. '
' → logprob: -9.72394847869873
    7. '       ' → logprob: -10.97394847869873
    8. '		' → logprob: -11.22394847869873
    9. '               ' → logprob: -11.84894847869873
    10. ' ' → logprob: -12.09894847869873

Token 449: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -1.9361264946837764e-07
    2. 'count' → logprob: -16.625
    3. '_read' → logprob: -17.625
    4. '_' → logprob: -17.75
    5. ' _' → logprob: -18.5
    6. '_c' → logprob: -19.5
    7. '_COUNT' → logprob: -20.25
    8. '\' → logprob: -20.25
    9. '_counter' → logprob: -20.625
    10. '+' → logprob: -20.75

Token 450: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.12692999839782715
    2. ' +=' → logprob: -2.126929998397827
    3. '+' → logprob: -13.876930236816406
    4. '=' → logprob: -13.876930236816406
    5. ']+=' → logprob: -16.876930236816406
    6. '   ' → logprob: -18.001930236816406
    7. '+='' → logprob: -18.376930236816406
    8. '+="' → logprob: -18.751930236816406
    9. '<|end|>' → logprob: -19.251930236816406
    10. ' =' → logprob: -19.876930236816406

Token 451: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005233763717114925
    2. ' ' → logprob: -5.2552337646484375
    3. ' ' → logprob: -19.880233764648438
    4. '```' → logprob: -22.380233764648438
    5. '+' → logprob: -22.505233764648438
    6. '１' → logprob: -22.630233764648438
    7. '   ' → logprob: -22.755233764648438
    8. ' +' → logprob: -22.755233764648438
    9. '۱' → logprob: -23.067733764648438
    10. '`' → logprob: -23.317733764648438

Token 452: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.625
    3. '   ' → logprob: -21.875
    4. '```' → logprob: -23.375
    5. 'len' → logprob: -24.75
    6. '１' → logprob: -24.875
    7. '۱' → logprob: -24.875
    8. '0' → logprob: -25.5
    9. 'int' → logprob: -25.625
    10. '`' → logprob: -25.875

Token 453: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0064210714772343636
    2. '<|end|>' → logprob: -5.756421089172363
    3. '       ' → logprob: -5.881421089172363
    4. '\n' → logprob: -8.881421089172363
    5. '
' → logprob: -9.631421089172363
    6. 'return' → logprob: -9.756421089172363
    7. '

' → logprob: -10.256421089172363
    8. ' return' → logprob: -10.506421089172363
    9. '        
' → logprob: -10.506421089172363
    10. '<|end|>' → logprob: -10.881421089172363

Token 454: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00043949027894996107
    2. '
' → logprob: -8.500439643859863
    3. 'return' → logprob: -9.250439643859863
    4. '<|end|>' → logprob: -9.500439643859863
    5. '```' → logprob: -10.250439643859863
    6. '   ' → logprob: -11.125439643859863
    7. '        
' → logprob: -11.875439643859863
    8. ' return' → logprob: -12.875439643859863
    9. '	' → logprob: -13.625439643859863
    10. '           ' → logprob: -14.125439643859863

Token 455: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0312491562217474
    2. '       ' → logprob: -3.5312490463256836
    3. ' return' → logprob: -6.531249046325684
    4. '
' → logprob: -10.156249046325684
    5. '   ' → logprob: -13.906249046325684
    6. '	return' → logprob: -14.781249046325684
    7. '```' → logprob: -16.78125
    8. '{return' → logprob: -16.90625
    9. '        
' → logprob: -17.28125
    10. ' ' → logprob: -17.40625

Token 456: ' data' (ID: 1238)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.0002625278721097857
    2. 'Trade' → logprob: -8.625262260437012
    3. ' data' → logprob: -9.500262260437012
    4. 'N' → logprob: -12.000262260437012
    5. ' Trade' → logprob: -14.250262260437012
    6. '[data' → logprob: -14.750262260437012
    7. '(data' → logprob: -15.375262260437012
    8. 'cls' → logprob: -15.500262260437012
    9. 'Data' → logprob: -16.125263214111328
    10. '[' → logprob: -16.750263214111328

Token 457: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 458: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.5878375172615051
    2. '```' → logprob: -1.4628374576568604
    3. 'if' → logprob: -1.5878374576568604
    4. '<|end|>' → logprob: -5.0878376960754395
    5. '
' → logprob: -6.3378376960754395
    6. 'import' → logprob: -8.087837219238281
    7. ' if' → logprob: -9.712837219238281
    8. ' class' → logprob: -9.837837219238281
    9. 'def' → logprob: -9.837837219238281
    10. '``' → logprob: -10.462837219238281

Token 459: ' Long' (ID: 7790)
  Prédit: 'Trade'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Trade' → logprob: -0.10463365167379379
    2. 'Solution' → logprob: -2.7296335697174072
    3. ' Trade' → logprob: -4.104633808135986
    4. 'Main' → logprob: -5.229633808135986
    5. 'Balance' → logprob: -5.354633808135986
    6. 'Result' → logprob: -6.104633808135986
    7. ' Solution' → logprob: -6.729633808135986
    8. 'Analyzer' → logprob: -6.979633808135986
    9. 'Zero' → logprob: -7.104633808135986
    10. 'Longest' → logprob: -7.104633808135986

Token 460: 'est' (ID: 376)
  Prédit: 'est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.000841311237309128
    2. 'Trade' → logprob: -7.12584114074707
    3. 'uest' → logprob: -11.25084114074707
    4. 'Interval' → logprob: -12.75084114074707
    5. 'Est' → logprob: -13.00084114074707
    6. '```' → logprob: -13.37584114074707
    7. 'Longest' → logprob: -13.50084114074707
    8. 'Sub' → logprob: -13.50084114074707
    9. 'Term' → logprob: -13.62584114074707
    10. 'EST' → logprob: -13.87584114074707

Token 461: 'Zero' (ID: 20870)
  Prédit: 'Zero'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Zero' → logprob: -0.002044744323939085
    2. 'Balanced' → logprob: -6.627044677734375
    3. 'Interval' → logprob: -8.127044677734375
    4. 'Trade' → logprob: -8.377044677734375
    5. 'Sub' → logprob: -10.127044677734375
    6. 'Non' → logprob: -10.502044677734375
    7. 'Balance' → logprob: -10.752044677734375
    8. 'Prefix' → logprob: -11.002044677734375
    9. '```' → logprob: -11.002044677734375
    10. 'Continuous' → logprob: -11.377044677734375

Token 462: 'Sum' (ID: 17434)
  Prédit: 'Sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sum' → logprob: -0.012047347612679005
    2. 'Interval' → logprob: -4.762047290802002
    3. 'Sub' → logprob: -6.262047290802002
    4. 'Balance' → logprob: -6.512047290802002
    5. 'Trade' → logprob: -11.63704776763916
    6. 'sum' → logprob: -12.01204776763916
    7. 'Substring' → logprob: -12.63704776763916
    8. 'Span' → logprob: -12.76204776763916
    9. 'Balanced' → logprob: -12.88704776763916
    10. 'Prefix' → logprob: -12.88704776763916

Token 463: 'Interval' (ID: 13947)
  Prédit: 'Interval'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Interval' → logprob: -0.35011282563209534
    2. 'Sub' → logprob: -1.225112795829773
    3. 'Trade' → logprob: -7.6001129150390625
    4. 'Segment' → logprob: -8.225112915039062
    5. 'Sequence' → logprob: -8.475112915039062
    6. 'Substring' → logprob: -8.475112915039062
    7. 'Balance' → logprob: -9.475112915039062
    8. 'sub' → logprob: -9.600112915039062
    9. 'Span' → logprob: -9.600112915039062
    10. '```' → logprob: -9.975112915039062

Token 464: 'Solution' (ID: 44456)
  Prédit: 'Analyzer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Analyzer' → logprob: -0.19818057119846344
    2. '(' → logprob: -2.323180675506592
    3. ':' → logprob: -2.948180675506592
    4. 'Finder' → logprob: -3.573180675506592
    5. ':
' → logprob: -7.573180675506592
    6. 'Detector' → logprob: -8.448180198669434
    7. 'Analy' → logprob: -8.698180198669434
    8. 'Extractor' → logprob: -8.948180198669434
    9. 'Solver' → logprob: -9.448180198669434
    10. 'Analysis' → logprob: -9.698180198669434

Token 465: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001437493017874658
    2. '(' → logprob: -6.626437664031982
    3. ':
' → logprob: -9.126437187194824
    4. '():' → logprob: -13.751437187194824
    5. ' :' → logprob: -14.376437187194824
    6. ':

' → logprob: -14.626437187194824
    7. '   ' → logprob: -15.751437187194824
    8. ':`' → logprob: -16.25143814086914
    9. '(Abstract' → logprob: -16.25143814086914
    10. ':**' → logprob: -16.50143814086914

Token 466: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07068956643342972
    2. '
' → logprob: -2.8206896781921387
    3. '    
' → logprob: -5.695689678192139
    4. ':' → logprob: -6.445689678192139
    5. 'class' → logprob: -6.570689678192139
    6. '```' → logprob: -6.570689678192139
    7. ':
' → logprob: -7.570689678192139
    8. 'def' → logprob: -8.94568920135498
    9. '``' → logprob: -9.94568920135498
    10. ' def' → logprob: -10.19568920135498

Token 467: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005958187393844128
    2. 'def' → logprob: -5.255958080291748
    3. '
' → logprob: -8.130958557128906
    4. ' def' → logprob: -8.755958557128906
    5. '```' → logprob: -9.255958557128906
    6. '@' → logprob: -9.505958557128906
    7. 'class' → logprob: -9.880958557128906
    8. '"""
' (adapté à ' """
') → logprob: -10.755958557128906
    9. '    
' → logprob: -11.005958557128906
    10. '"""' → logprob: -12.255958557128906

Token 468: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004718245472759008
    2. 'def' → logprob: -5.87971830368042
    3. '"""
' → logprob: -6.62971830368042
    4. 'class' → logprob: -8.004717826843262
    5. ' def' → logprob: -9.004717826843262
    6. '"""' → logprob: -9.254717826843262
    7. '@' → logprob: -11.129717826843262
    8. ' """
' → logprob: -11.504717826843262
    9. '
' → logprob: -12.379717826843262
    10. ' ' → logprob: -13.129717826843262

Token 469: ' Or' (ID: 2604)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.23410417139530182
    2. ' def' → logprob: -2.2341041564941406
    3. '   ' → logprob: -2.6091041564941406
    4. '@' → logprob: -3.6091041564941406
    5. '
' → logprob: -8.10910415649414
    6. 'class' → logprob: -8.23410415649414
    7. ' @' → logprob: -8.60910415649414
    8. '"""
' → logprob: -8.85910415649414
    9. '"""' → logprob: -11.10910415649414
    10. ' ' → logprob: -11.73410415649414

Token 470: 'chestr' (ID: 163210)
  Prédit: 'chestr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chestr' → logprob: -0.13986612856388092
    2. '   ' → logprob: -2.2648661136627197
    3. 'iented' → logprob: -3.8898661136627197
    4. 'iginal' → logprob: -5.639866352081299
    5. 'class' → logprob: -7.389866352081299
    6. 'ches' → logprob: -7.764866352081299
    7. '__' → logprob: -8.26486587524414
    8. 'def' → logprob: -8.51486587524414
    9. '
' → logprob: -8.63986587524414
    10. 'gan' → logprob: -9.26486587524414

Token 471: 'ates' (ID: 1381)
  Prédit: 'ates'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ates' → logprob: -0.00029625516617670655
    2. '   ' → logprob: -8.750296592712402
    3. 'ator' → logprob: -9.250296592712402
    4. '```' → logprob: -11.125296592712402
    5. 'ate' → logprob: -11.875296592712402
    6. 'es' → logprob: -12.000296592712402
    7. '       ' → logprob: -12.500296592712402
    8. 'class' → logprob: -13.250296592712402
    9. ' at' → logprob: -13.500296592712402
    10. 'a' → logprob: -13.750296592712402

Token 472: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.21720106899738312
    2. 'the' → logprob: -1.7172011137008667
    3. 'def' → logprob: -5.842201232910156
    4. ' solution' → logprob: -5.842201232910156
    5. 'solution' → logprob: -6.092201232910156
    6. ' execution' → logprob: -6.092201232910156
    7. 'execution' → logprob: -6.092201232910156
    8. ' running' → logprob: -6.342201232910156
    9. 'running' → logprob: -7.842201232910156
    10. 'class' → logprob: -8.967201232910156

Token 473: ' full' (ID: 3149)
  Prédit: 'solution'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'solution' → logprob: -0.8299185037612915
    2. 'def' → logprob: -1.3299185037612915
    3. ' solution' → logprob: -1.5799185037612915
    4. 'process' → logprob: -3.329918384552002
    5. 'execution' → logprob: -3.704918384552002
    6. ' process' → logprob: -4.079918384552002
    7. ' def' → logprob: -5.579918384552002
    8. 'processing' → logprob: -6.329918384552002
    9. 'analysis' → logprob: -6.579918384552002
    10. ' execution' → logprob: -6.579918384552002

Token 474: ' solution' (ID: 7578)
  Prédit: ' solution'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' solution' → logprob: -0.5561624765396118
    2. 'solution' → logprob: -1.9311624765396118
    3. 'def' → logprob: -2.5561623573303223
    4. ' process' → logprob: -2.6811623573303223
    5. 'workflow' → logprob: -3.3061623573303223
    6. ' implementation' → logprob: -4.556162357330322
    7. ' flow' → logprob: -4.556162357330322
    8. 'implementation' → logprob: -4.681162357330322
    9. 'process' → logprob: -4.681162357330322
    10. 'execution' → logprob: -4.931162357330322

Token 475: ' pipeline' (ID: 29412)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39328691363334656
    2. ':' → logprob: -1.643286943435669
    3. ':
' → logprob: -2.768286943435669
    4. '<|end|>' → logprob: -4.14328670501709
    5. ' for' → logprob: -4.26828670501709
    6. '.' → logprob: -4.51828670501709
    7. ' to' → logprob: -4.89328670501709
    8. '<|end|>' → logprob: -5.39328670501709
    9. ':

' → logprob: -5.51828670501709
    10. ',' → logprob: -5.76828670501709

Token 476: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.42335137724876404
    2. ':
' → logprob: -1.7983514070510864
    3. '   ' → logprob: -1.9233514070510864
    4. ':

' → logprob: -3.923351287841797
    5. '
' → logprob: -4.673351287841797
    6. ',' → logprob: -6.173351287841797
    7. '.' → logprob: -7.048351287841797
    8. '<|end|>' → logprob: -7.923351287841797
    9. '

' → logprob: -8.173351287841797
    10. '.
' → logprob: -8.798351287841797

Token 477: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024209754541516304
    2. '
' → logprob: -4.649209976196289
    3. 'class' → logprob: -4.649209976196289
    4. 'from' → logprob: -6.024209976196289
    5. '```' → logprob: -7.399209976196289
    6. 'def' → logprob: -8.024209976196289
    7. '    
' → logprob: -8.024209976196289
    8. '    ' → logprob: -8.149209976196289
    9. ' from' → logprob: -9.024209976196289
    10. '"""
' → logprob: -9.274209976196289

Token 478: ' input' (ID: 3422)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7150044441223145
    2. '   ' → logprob: -1.2150044441223145
    3. 'from' → logprob: -2.3400044441223145
    4. ' def' → logprob: -3.2150044441223145
    5. 'parse' → logprob: -4.2150044441223145
    6. 'class' → logprob: -4.4650044441223145
    7. 'initialize' → logprob: -4.7150044441223145
    8. ' from' → logprob: -5.3400044441223145
    9. 'create' → logprob: -5.4650044441223145
    10. ' parse' → logprob: -5.7150044441223145

Token 479: ' parsing' (ID: 51039)
  Prédit: '_data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_data' → logprob: -0.6162518858909607
    2. '   ' → logprob: -1.8662519454956055
    3. ' =' → logprob: -1.8662519454956055
    4. 'data' → logprob: -3.7412519454956055
    5. ' parsing' → logprob: -4.1162519454956055
    6. '
' → logprob: -4.1162519454956055
    7. '       ' → logprob: -4.1162519454956055
    8. ',' → logprob: -4.2412519454956055
    9. '_parser' → logprob: -4.7412519454956055
    10. '=' → logprob: -4.8662519454956055

Token 480: ' ->' (ID: 2747)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.15512196719646454
    2. ',
' → logprob: -2.0301220417022705
    3. '   ' → logprob: -4.905121803283691
    4. '
' → logprob: -5.530121803283691
    5. '<|end|>' → logprob: -7.905121803283691
    6. '       ' → logprob: -8.405121803283691
    7. '    
' → logprob: -9.030121803283691
    8. ' ,' → logprob: -9.280121803283691
    9. '```' → logprob: -9.655121803283691
    10. 'from' → logprob: -10.780121803283691

Token 481: ' analysis' (ID: 8450)
  Prédit: 'analysis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'analysis' → logprob: -0.289531946182251
    2. 'data' → logprob: -2.789531946182251
    3. ' analysis' → logprob: -2.914531946182251
    4. 'an' → logprob: -2.914531946182251
    5. 'balance' → logprob: -3.789531946182251
    6. 'trade' → logprob: -3.789531946182251
    7. ' data' → logprob: -4.289531707763672
    8. ' trade' → logprob: -4.789531707763672
    9. 'inst' → logprob: -5.539531707763672
    10. ' balance' → logprob: -5.789531707763672

Token 482: ' ->' (ID: 2747)
  Prédit: ' ->'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ->' → logprob: -0.2184102088212967
    2. '   ' → logprob: -2.7184102535247803
    3. '       ' → logprob: -2.8434102535247803
    4. '->' → logprob: -2.9684102535247803
    5. '
' → logprob: -4.593410015106201
    6. 'def' → logprob: -5.718410015106201
    7. 'class' → logprob: -6.468410015106201
    8. '```' → logprob: -6.468410015106201
    9. '<|end|>' → logprob: -7.218410015106201
    10. ' ->
' → logprob: -7.343410015106201

Token 483: ' output' (ID: 4733)
  Prédit: 'output'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'output' → logprob: -0.20376889407634735
    2. ' output' → logprob: -1.7037688493728638
    3. 'result' → logprob: -6.328768730163574
    4. ' result' → logprob: -8.203768730163574
    5. 'printing' → logprob: -8.828768730163574
    6. ' printing' → logprob: -9.453768730163574
    7. 'print' → logprob: -9.828768730163574
    8. '   ' → logprob: -12.078768730163574
    9. 'Output' → logprob: -13.328768730163574
    10. ' print' → logprob: -13.453768730163574

Token 484: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.601425051689148
    2. '   ' → logprob: -0.851425051689148
    3. '    
' → logprob: -4.1014251708984375
    4. '```' → logprob: -6.1014251708984375
    5. '

' → logprob: -6.6014251708984375
    6. 'def' → logprob: -6.8514251708984375
    7. 'output' → logprob: -7.6014251708984375
    8. 'class' → logprob: -7.7264251708984375
    9. '"""
' → logprob: -8.101425170898438
    10. '  
' → logprob: -8.101425170898438

Token 485: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09032432734966278
    2. '   ' → logprob: -2.4653244018554688
    3. '    
' → logprob: -7.340324401855469
    4. '

' → logprob: -7.840324401855469
    5. '<|end|>' → logprob: -8.590324401855469
    6. '```' → logprob: -9.590324401855469
    7. ':' → logprob: -10.465324401855469
    8. '<|end|>' → logprob: -11.090324401855469
    9. ':
' → logprob: -11.465324401855469
    10. '
' → logprob: -11.715324401855469

Token 486: ' """

' (ID: 28800)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.027704421430826187
    2. '   ' → logprob: -3.6527044773101807
    3. '

' → logprob: -7.402704238891602
    4. '    
' → logprob: -8.152704238891602
    5. '```' → logprob: -8.777704238891602
    6. '<|end|>' → logprob: -8.902704238891602
    7. 'def' → logprob: -9.152704238891602
    8. ':
' → logprob: -10.652704238891602
    9. ':' → logprob: -10.777704238891602
    10. ' 
' → logprob: -11.402704238891602

Token 487: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0016290020430460572
    2. 'def' → logprob: -7.001628875732422
    3. '```' → logprob: -7.876628875732422
    4. ' def' → logprob: -8.126628875732422
    5. '
' → logprob: -10.501628875732422
    6. '@' → logprob: -12.126628875732422
    7. '    
' → logprob: -12.126628875732422
    8. 'class' → logprob: -13.501628875732422
    9. 'staticmethod' → logprob: -14.501628875732422
    10. 'classmethod' → logprob: -14.501628875732422

Token 488: ' def' (ID: 1056)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' → logprob: -0.014192064292728901
    2. 'def' (adapté à ' def') → logprob: -4.2641921043396
    3. ' @' → logprob: -10.764191627502441
    4. ' def' → logprob: -12.014191627502441
    5. '   ' → logprob: -13.889191627502441
    6. '
' → logprob: -16.139192581176758
    7. 'staticmethod' → logprob: -16.264192581176758
    8. '@
' → logprob: -16.889192581176758
    9. '@property' → logprob: -17.639192581176758
    10. '__' → logprob: -17.889192581176758

Token 489: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.20149178802967072
    2. 'init' → logprob: -2.0764918327331543
    3. 'def' → logprob: -3.4514918327331543
    4. ' __' → logprob: -4.451491832733154
    5. 'staticmethod' → logprob: -4.576491832733154
    6. 'run' → logprob: -6.076491832733154
    7. '_' → logprob: -7.826491832733154
    8. ' def' → logprob: -8.451491355895996
    9. 'main' → logprob: -8.701491355895996
    10. 'solve' → logprob: -9.076491355895996

Token 490: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: 0.0
    2. 'def' → logprob: -18.375
    3. 'new' → logprob: -18.5
    4. 'int' → logprob: -19.125
    5. 'call' → logprob: -19.375
    6. 'name' → logprob: -20.25
    7. ' init' → logprob: -20.375
    8. 'inite' → logprob: -21.125
    9. 'main' → logprob: -22.0
    10. 'in' → logprob: -22.25

Token 491: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.003918107133358717
    2. ' (' → logprob: -5.628918170928955
    3. '(' → logprob: -9.003917694091797
    4. '   ' → logprob: -9.128917694091797
    5. '__(' → logprob: -9.753917694091797
    6. 'self' → logprob: -11.503917694091797
    7. ' ' → logprob: -12.128917694091797
    8. '(
' → logprob: -12.753917694091797
    9. '
' → logprob: -13.253917694091797
    10. ',' → logprob: -13.753917694091797

Token 492: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00014978687977418303
    2. ')' → logprob: -9.500149726867676
    3. '):
' → logprob: -9.750149726867676
    4. 'data' → logprob: -11.750149726867676
    5. '
' → logprob: -12.375149726867676
    6. '       ' → logprob: -13.375149726867676
    7. '(self' → logprob: -13.750149726867676
    8. ' self' → logprob: -14.000149726867676
    9. '   ' → logprob: -14.250149726867676
    10. ')
' → logprob: -15.750149726867676

Token 493: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0038309525698423386
    2. 'self' → logprob: -6.003830909729004
    3. '):
' → logprob: -7.128830909729004
    4. ' ,' → logprob: -8.753830909729004
    5. '):' → logprob: -8.878830909729004
    6. ',data' → logprob: -9.253830909729004
    7. ',self' → logprob: -9.753830909729004
    8. '   ' → logprob: -10.128830909729004
    9. '       ' → logprob: -11.128830909729004
    10. '(self' → logprob: -11.253830909729004

Token 494: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.030175765976309776
    2. '       ' → logprob: -3.5301756858825684
    3. 'data' → logprob: -8.780176162719727
    4. '   ' → logprob: -8.905176162719727
    5. ' self' → logprob: -9.280176162719727
    6. '(self' → logprob: -10.155176162719727
    7. '	self' → logprob: -14.030176162719727
    8. '           ' → logprob: -14.530176162719727
    9. '[self' → logprob: -14.780176162719727
    10. '```' → logprob: -14.780176162719727

Token 495: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.31427979469299316
    2. 'self' (adapté à ' self') → logprob: -1.3142797946929932
    3. ' self' → logprob: -7.439279556274414
    4. '   ' → logprob: -8.439279556274414
    5. 'pass' → logprob: -8.814279556274414
    6. 'def' → logprob: -9.939279556274414
    7. ' pass' → logprob: -12.064279556274414
    8. '(self' → logprob: -12.314279556274414
    9. '	self' → logprob: -13.314279556274414
    10. '```' → logprob: -13.939279556274414

Token 496: '.data' (ID: 3885)
  Prédit: '.data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.data' → logprob: -0.28482139110565186
    2. '.an' → logprob: -1.6598213911056519
    3. '.parser' → logprob: -3.0348215103149414
    4. '.input' → logprob: -5.909821510314941
    5. '.trade' → logprob: -5.909821510314941
    6. '._' → logprob: -6.284821510314941
    7. '.' → logprob: -6.409821510314941
    8. '.processor' → logprob: -9.284821510314941
    9. '.solution' → logprob: -9.784821510314941
    10. '.reader' → logprob: -9.909821510314941

Token 497: '_stream' (ID: 29670)
  Prédit: '_stream'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_stream' → logprob: -0.001429047784768045
    2. ' =' → logprob: -7.501429080963135
    3. '_' → logprob: -7.626429080963135
    4. '_data' → logprob: -8.626428604125977
    5. '=' → logprob: -9.501428604125977
    6. '=[]' → logprob: -10.376428604125977
    7. '<|end|>' → logprob: -10.626428604125977
    8. '_source' → logprob: -10.876428604125977
    9. '   ' → logprob: -11.251428604125977
    10. 'Stream' → logprob: -11.376428604125977

Token 498: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07891678065061569
    2. ' =' → logprob: -2.5789167881011963
    3. '=[]' → logprob: -10.703916549682617
    4. '=None' → logprob: -12.953916549682617
    5. '<|end|>' → logprob: -13.578916549682617
    6. '=
' → logprob: -15.703916549682617
    7. '   ' → logprob: -15.953916549682617
    8. ':' → logprob: -16.078916549682617
    9. '<|end|>' → logprob: -16.203916549682617
    10. ')' → logprob: -16.453916549682617

Token 499: ' []

' (ID: 32833)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0303182452917099
    2. 'Trade' → logprob: -3.530318260192871
    3. ' []' → logprob: -8.155318260192871
    4. 'None' → logprob: -8.905318260192871
    5. '[]
' → logprob: -9.155318260192871
    6. ' Trade' → logprob: -10.530318260192871
    7. '[]

' → logprob: -12.405318260192871
    8. '[])' → logprob: -12.655318260192871
    9. '[]}' → logprob: -13.405318260192871
    10. 'self' → logprob: -14.280318260192871

Token 500: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4993187487125397
    2. '   ' → logprob: -0.9993187189102173
    3. 'def' → logprob: -3.874318838119507
    4. ' def' → logprob: -6.249318599700928
    5. '    
' → logprob: -6.749318599700928
    6. '<|end|>' → logprob: -7.249318599700928
    7. '```' → logprob: -8.499319076538086
    8. '

' → logprob: -9.749319076538086
    9. '        
' → logprob: -10.624319076538086
    10. '  
' → logprob: -11.374319076538086

Token 501: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0018384411232545972
    2. '   ' → logprob: -6.751838207244873
    3. ' def' → logprob: -7.376838207244873
    4. '
' → logprob: -10.126838684082031
    5. '    
' → logprob: -13.626838684082031
    6. '```' → logprob: -14.376838684082031
    7. '	def' → logprob: -14.501838684082031
    8. '        
' → logprob: -16.62683868408203
    9. '

' → logprob: -17.62683868408203
    10. ' 
' → logprob: -18.50183868408203

Token 502: ' run' (ID: 2461)
  Prédit: 'run'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'run' → logprob: -0.002657343400642276
    2. 'solve' → logprob: -6.252657413482666
    3. 'read' → logprob: -8.002656936645508
    4. ' run' → logprob: -8.502656936645508
    5. 'load' → logprob: -8.752656936645508
    6. 'execute' → logprob: -10.752656936645508
    7. 'parse' → logprob: -12.502656936645508
    8. 'process' → logprob: -12.752656936645508
    9. 'main' → logprob: -12.877656936645508
    10. ' solve' → logprob: -13.627656936645508

Token 503: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0005587508203461766
    2. '(' → logprob: -7.500558853149414
    3. 'self' → logprob: -13.125558853149414
    4. '   ' → logprob: -13.625558853149414
    5. '(
' → logprob: -14.000558853149414
    6. '       ' → logprob: -14.500558853149414
    7. ' (' → logprob: -14.875558853149414
    8. '(s' → logprob: -15.000558853149414
    9. '():' → logprob: -15.250558853149414
    10. '(Self' → logprob: -15.875558853149414

Token 504: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0029954127967357635
    2. '):
' → logprob: -5.877995491027832
    3. 'self' → logprob: -9.502995491027832
    4. ',' → logprob: -9.752995491027832
    5. '():' → logprob: -10.627995491027832
    6. '(self' → logprob: -11.127995491027832
    7. '   ' → logprob: -11.752995491027832
    8. '):
' → logprob: -12.502995491027832
    9. '       ' → logprob: -13.002995491027832
    10. ' ):' → logprob: -13.127995491027832

Token 505: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -5.848420551046729e-05
    2. 'data' → logprob: -10.6250581741333
    3. '```' → logprob: -10.8750581741333
    4. 'self' → logprob: -11.2500581741333
    5. '
' → logprob: -14.5000581741333
    6. '   ' → logprob: -14.7500581741333
    7. '        
' → logprob: -15.5000581741333
    8. '`' → logprob: -15.6250581741333
    9. ' data' → logprob: -15.8750581741333
    10. '``' → logprob: -16.000059127807617

Token 506: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.17580802738666534
    2. '       ' → logprob: -1.925808072090149
    3. 'data' → logprob: -4.175807952880859
    4. ' self' → logprob: -9.80080795288086
    5. 'parser' → logprob: -10.17580795288086
    6. '```' → logprob: -12.55080795288086
    7. 'input' → logprob: -13.80080795288086
    8. ' data' → logprob: -14.17580795288086
    9. '   ' → logprob: -14.80080795288086
    10. 'parsed' → logprob: -15.30080795288086

Token 507: '._' (ID: 2697)
  Prédit: '.data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.data' → logprob: -1.0445127372804563e-05
    2. '.' → logprob: -11.87501049041748
    3. 'data' → logprob: -12.87501049041748
    4. '.stream' → logprob: -14.62501049041748
    5. '=' → logprob: -16.625009536743164
    6. '=data' → logprob: -16.750009536743164
    7. ' .' → logprob: -16.875009536743164
    8. '
' → logprob: -17.875009536743164
    9. '   ' → logprob: -18.000009536743164
    10. '_data' → logprob: -18.125009536743164

Token 508: 'parse' (ID: 4841)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.2972208857536316
    2. 'parse' → logprob: -1.9222209453582764
    3. 'run' → logprob: -3.2972209453582764
    4. 'input' → logprob: -3.6722209453582764
    5. 'read' → logprob: -4.422220706939697
    6. 'main' → logprob: -4.422220706939697
    7. 'load' → logprob: -4.547220706939697
    8. 'prepare' → logprob: -5.172220706939697
    9. 'execute' → logprob: -6.172220706939697
    10. 'init' → logprob: -6.547220706939697

Token 509: '_input' (ID: 12507)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.000693016336299479
    2. '()
' → logprob: -7.375692844390869
    3. '_input' → logprob: -10.000693321228027
    4. '_data' → logprob: -11.375693321228027
    5. '()

' → logprob: -13.000693321228027
    6. '()\' → logprob: -13.000693321228027
    7. '()<' → logprob: -14.125693321228027
    8. '_inputs' → logprob: -14.250693321228027
    9. '())' → logprob: -14.375693321228027
    10. ' ()' → logprob: -14.625693321228027

Token 510: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00594479450955987
    2. '()
' → logprob: -5.130944728851318
    3. '       ' → logprob: -11.505945205688477
    4. '()

' → logprob: -12.505945205688477
    5. '()`' → logprob: -14.255945205688477
    6. '()\' → logprob: -14.630945205688477
    7. '()
' → logprob: -14.880945205688477
    8. '();' → logprob: -15.255945205688477
    9. '(),' → logprob: -16.005945205688477
    10. 'data' → logprob: -16.255945205688477

Token 511: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006314462516456842
    2. '
' → logprob: -5.506314277648926
    3. 'self' → logprob: -6.506314277648926
    4. '<|end|>' → logprob: -8.006314277648926
    5. '   ' → logprob: -8.881314277648926
    6. '```' → logprob: -9.131314277648926
    7. '        
' → logprob: -9.631314277648926
    8. ' self' → logprob: -10.381314277648926
    9. '(self' → logprob: -10.756314277648926
    10. '()' → logprob: -11.381314277648926

Token 512: ' analyzer' (ID: 107715)
  Prédit: 'an'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'an' → logprob: -0.10255450755357742
    2. '       ' → logprob: -2.3525545597076416
    3. ' analyzer' → logprob: -6.1025543212890625
    4. 'self' → logprob: -9.852554321289062
    5. '
' → logprob: -10.727554321289062
    6. 'result' → logprob: -11.727554321289062
    7. 'analysis' → logprob: -12.102554321289062
    8. 'anal' → logprob: -12.352554321289062
    9. '```' → logprob: -12.477554321289062
    10. '	an' → logprob: -13.102554321289062

Token 513: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018290530890226364
    2. '=' → logprob: -4.0182905197143555
    3. '.' → logprob: -8.893290519714355
    4. '.=' → logprob: -13.893290519714355
    5. '.an' → logprob: -14.393290519714355
    6. '   ' → logprob: -14.393290519714355
    7. '().' → logprob: -15.143290519714355
    8. ')' → logprob: -15.768290519714355
    9. ' ' → logprob: -16.268291473388672
    10. '(' → logprob: -16.268291473388672

Token 514: ' Prefix' (ID: 121368)
  Prédit: 'Prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Prefix' → logprob: -0.47407856583595276
    2. ' Prefix' → logprob: -0.9740785360336304
    3. 'Pref' → logprob: -13.849078178405762
    4. ' Pref' → logprob: -14.724078178405762
    5. 'PREFIX' → logprob: -16.724079132080078
    6. 'Prefixes' → logprob: -16.849079132080078
    7. 'Suffix' → logprob: -16.974079132080078
    8. ' prefix' → logprob: -17.474079132080078
    9. 'prefix' → logprob: -17.599079132080078
    10. '_prefix' → logprob: -18.224079132080078

Token 515: 'Sum' (ID: 17434)
  Prédit: 'Sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sum' → logprob: -9.088346359931165e-07
    2. 'sum' → logprob: -14.125000953674316
    3. 'Summ' → logprob: -16.625
    4. '_sum' → logprob: -17.75
    5. ' Sum' → logprob: -18.0
    6. 'Trade' → logprob: -18.0
    7. 'S' → logprob: -18.25
    8. 'Balance' → logprob: -18.375
    9. 's' → logprob: -20.0
    10. ' sum' → logprob: -20.25

Token 516: 'Balance' (ID: 20996)
  Prédit: 'Balance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Balance' → logprob: -2.5776860184123507e-06
    2. 'Trade' → logprob: -13.25000286102295
    3. '_balance' → logprob: -15.12500286102295
    4. 'Balanced' → logprob: -15.25000286102295
    5. ' Balance' → logprob: -16.375001907348633
    6. 'balance' → logprob: -17.875001907348633
    7. 'class' → logprob: -18.000001907348633
    8. '.' → logprob: -18.125001907348633
    9. 'Balancer' → logprob: -18.125001907348633
    10. 'B' → logprob: -18.250001907348633

Token 517: 'Analyzer' (ID: 61604)
  Prédit: 'Analyzer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Analyzer' → logprob: -2.2200749754119897e-06
    2. 'Analy' → logprob: -13.375001907348633
    3. 'Analyze' → logprob: -14.750001907348633
    4. ' Analyzer' → logprob: -16.375001907348633
    5. ' analyzer' → logprob: -16.750001907348633
    6. '   ' → logprob: -17.000001907348633
    7. '       ' → logprob: -18.000001907348633
    8. 'an' → logprob: -18.625001907348633
    9. '(' → logprob: -19.375001907348633
    10. 'Optimizer' → logprob: -20.125001907348633

Token 518: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -9.817902173381299e-05
    2. '(' → logprob: -9.25009822845459
    3. '(
' → logprob: -13.25009822845459
    4. '       ' → logprob: -16.250097274780273
    5. '(data' → logprob: -16.250097274780273
    6. '(this' → logprob: -17.750097274780273
    7. 'self' → logprob: -17.750097274780273
    8. '()' → logprob: -19.750097274780273
    9. '[self' → logprob: -19.875097274780273
    10. '(

' → logprob: -20.250097274780273

Token 519: '.data' (ID: 3885)
  Prédit: '.data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.data' → logprob: -9.949026571121067e-05
    2. '.' → logprob: -9.250099182128906
    3. ' .' → logprob: -13.625099182128906
    4. 'data' → logprob: -13.750099182128906
    5. ').' → logprob: -14.250099182128906
    6. ',' → logprob: -15.625099182128906
    7. ')' → logprob: -16.250099182128906
    8. '.
' → logprob: -16.500099182128906
    9. ' data' → logprob: -17.000099182128906
    10. ')data' → logprob: -17.500099182128906

Token 520: '_stream' (ID: 29670)
  Prédit: '_stream'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_stream' → logprob: -1.4378848391061183e-05
    2. ')' → logprob: -11.625014305114746
    3. '.stream' → logprob: -13.375014305114746
    4. 'stream' → logprob: -13.375014305114746
    5. '_parser' → logprob: -14.750014305114746
    6. '._' → logprob: -14.875014305114746
    7. '.Stream' → logprob: -15.625014305114746
    8. ')
' → logprob: -15.750014305114746
    9. '_STREAM' → logprob: -15.875014305114746
    10. '   ' → logprob: -16.000015258789062

Token 521: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6957941651344299
    2. ')
' → logprob: -0.6957941651344299
    3. '       ' → logprob: -5.945794105529785
    4. ')
' → logprob: -10.820794105529785
    5. '   ' → logprob: -13.070794105529785
    6. ')

' → logprob: -13.945794105529785
    7. ' )
' → logprob: -14.070794105529785
    8. '           ' → logprob: -14.695794105529785
    9. ').' → logprob: -15.070794105529785
    10. '),' → logprob: -15.195794105529785

Token 522: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22424130141735077
    2. 'result' → logprob: -1.8492412567138672
    3. 'return' → logprob: -3.224241256713867
    4. ' result' → logprob: -6.224241256713867
    5. '
' → logprob: -7.349241256713867
    6. ' return' → logprob: -7.599241256713867
    7. 'length' → logprob: -8.349241256713867
    8. 'max' → logprob: -8.599241256713867
    9. '```' → logprob: -9.724241256713867
    10. 'output' → logprob: -10.099241256713867

Token 523: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.3888002038002014
    2. 'length' → logprob: -1.1388001441955566
    3. 'max' → logprob: -6.638800144195557
    4. '       ' → logprob: -7.638800144195557
    5. 'print' → logprob: -9.638800621032715
    6. ' result' → logprob: -10.263800621032715
    7. ' length' → logprob: -11.013800621032715
    8. 'res' → logprob: -11.513800621032715
    9. 'output' → logprob: -12.388800621032715
    10. 'answer' → logprob: -12.513800621032715

Token 524: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03804321587085724
    2. '=' → logprob: -3.288043260574341
    3. '   ' → logprob: -14.538043022155762
    4. '.' → logprob: -14.663043022155762
    5. '=self' → logprob: -14.788043022155762
    6. '       ' → logprob: -15.288043022155762
    7. ' ' → logprob: -15.913043022155762
    8. ')' → logprob: -16.913043975830078
    9. ' =
' → logprob: -17.163043975830078
    10. '=result' → logprob: -17.163043975830078

Token 525: ' analyzer' (ID: 107715)
  Prédit: 'an'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'an' → logprob: -0.04860088601708412
    2. ' analyzer' → logprob: -3.048600912094116
    3. ' analy' → logprob: -12.048601150512695
    4. '	an' → logprob: -12.673601150512695
    5. '       ' → logprob: -13.048601150512695
    6. '   ' → logprob: -13.548601150512695
    7. ' ' → logprob: -15.548601150512695
    8. ' an' → logprob: -16.048601150512695
    9. 'Analyzer' → logprob: -16.423601150512695
    10. ' analyser' → logprob: -16.548601150512695

Token 526: '.an' (ID: 42697)
  Prédit: '.an'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.an' → logprob: -2.8325677703833207e-05
    2. 'an' → logprob: -10.875028610229492
    3. '.' → logprob: -11.625028610229492
    4. ' .' → logprob: -15.000028610229492
    5. '.An' → logprob: -17.000028610229492
    6. '	an' → logprob: -17.375028610229492
    7. '.run' → logprob: -17.500028610229492
    8. '_an' → logprob: -17.875028610229492
    9. '.evaluate' → logprob: -18.000028610229492
    10. '   ' → logprob: -18.000028610229492

Token 527: 'alyze' (ID: 71553)
  Prédit: 'alyze'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'alyze' → logprob: -3.047134305234067e-05
    2. 'al' → logprob: -11.375030517578125
    3. 'y' → logprob: -11.500030517578125
    4. 'ly' → logprob: -11.750030517578125
    5. 'aly' → logprob: -15.125030517578125
    6. 'ize' → logprob: -15.875030517578125
    7. 'a' → logprob: -16.000030517578125
    8. '   ' → logprob: -16.125030517578125
    9. 'ay' → logprob: -16.625030517578125
    10. 't' → logprob: -16.875030517578125

Token 528: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5622062683105469
    2. '()
' → logprob: -1.0622062683105469
    3. '
' → logprob: -2.562206268310547
    4. '()' → logprob: -5.312206268310547
    5. 'print' → logprob: -6.312206268310547
    6. '```' → logprob: -8.937206268310547
    7. 'return' → logprob: -9.562206268310547
    8. '(
' → logprob: -9.687206268310547
    9. '        
' → logprob: -9.937206268310547
    10. '(' → logprob: -10.062206268310547

Token 529: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004547134507447481
    2. 'print' → logprob: -5.879547119140625
    3. '
' → logprob: -6.379547119140625
    4. 'return' → logprob: -10.879547119140625
    5. '```' → logprob: -11.379547119140625
    6. '        
' → logprob: -11.629547119140625
    7. ' print' → logprob: -13.254547119140625
    8. '   ' → logprob: -13.629547119140625
    9. '
' → logprob: -14.004547119140625
    10. '<|end|>' → logprob: -14.504547119140625

Token 530: ' self' (ID: 1051)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -6.015305552864447e-05
    2. '       ' → logprob: -9.750060081481934
    3. '
' → logprob: -13.750060081481934
    4. ' print' → logprob: -14.250060081481934
    5. '```' → logprob: -15.750060081481934
    6. 'return' → logprob: -19.00006103515625
    7. 'import' → logprob: -20.25006103515625
    8. '	print' → logprob: -21.12506103515625
    9. '``' → logprob: -21.62506103515625
    10. '        
' → logprob: -21.75006103515625

Token 531: '._' (ID: 2697)
  Prédit: '.print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.print' → logprob: -0.1687702238559723
    2. 'print' → logprob: -2.6687703132629395
    3. '._' → logprob: -3.0437703132629395
    4. '.output' → logprob: -4.0437703132629395
    5. '.result' → logprob: -4.9187703132629395
    6. '.' → logprob: -5.0437703132629395
    7. 'def' → logprob: -6.6687703132629395
    8. '
' → logprob: -6.6687703132629395
    9. '.data' → logprob: -7.1687703132629395
    10. '_print' → logprob: -7.4187703132629395

Token 532: 'output' (ID: 6130)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2021196037530899
    2. 'output' → logprob: -1.7021195888519287
    3. 'write' → logprob: -7.577119827270508
    4. '_output' → logprob: -8.827119827270508
    5. '_print' → logprob: -10.827119827270508
    6. 'display' → logprob: -11.577119827270508
    7. 'produce' → logprob: -12.327119827270508
    8. 'emit' → logprob: -13.327119827270508
    9. 'report' → logprob: -13.327119827270508
    10. 'format' → logprob: -13.702119827270508

Token 533: '_result' (ID: 11623)
  Prédit: '(result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.0002964935847558081
    2. '_result' → logprob: -8.625296592712402
    3. '(str' → logprob: -9.875296592712402
    4. '(' → logprob: -10.625296592712402
    5. 'result' → logprob: -10.750296592712402
    6. '(print' → logprob: -12.000296592712402
    7. '(f' → logprob: -12.375296592712402
    8. '(len' → logprob: -13.250296592712402
    9. '(int' → logprob: -13.250296592712402
    10. 'print' → logprob: -13.625296592712402

Token 534: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.0007769925869069993
    2. '(' → logprob: -7.750776767730713
    3. 'result' → logprob: -8.000777244567871
    4. '       ' → logprob: -11.750777244567871
    5. '(
' → logprob: -13.375777244567871
    6. '(print' → logprob: -15.000777244567871
    7. 'print' → logprob: -15.125777244567871
    8. '(f' → logprob: -15.750777244567871
    9. ' result' → logprob: -15.750777244567871
    10. '(results' → logprob: -16.125776290893555

Token 535: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005406428826972842
    2. ')
' → logprob: -7.625540733337402
    3. '()' → logprob: -10.750540733337402
    4. '       ' → logprob: -10.875540733337402
    5. '   ' → logprob: -11.875540733337402
    6. '())' → logprob: -12.750540733337402
    7. ' )' → logprob: -14.000540733337402
    8. ')`' → logprob: -15.375540733337402
    9. ')return' → logprob: -15.500540733337402
    10. '`)' → logprob: -15.750540733337402

Token 536: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5939151048660278
    2. '   ' → logprob: -0.8439151048660278
    3. '    
' → logprob: -4.093914985656738
    4. '```' → logprob: -7.468914985656738
    5. 'def' → logprob: -7.718914985656738
    6. '        
' → logprob: -9.968914985656738
    7. '  
' → logprob: -10.468914985656738
    8. '``' → logprob: -11.343914985656738
    9. '   
' → logprob: -11.593914985656738
    10. '

' → logprob: -11.718914985656738

Token 537: ' def' (ID: 1056)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.532163679599762
    2. 'def' (adapté à ' def') → logprob: -1.0321636199951172
    3. '   ' → logprob: -2.907163619995117
    4. ' def' → logprob: -6.782163619995117
    5. '    
' → logprob: -7.782163619995117
    6. '```' → logprob: -9.032163619995117
    7. '	def' → logprob: -9.657163619995117
    8. '

' → logprob: -10.907163619995117
    9. '  
' → logprob: -10.907163619995117
    10. ' 
' → logprob: -11.907163619995117

Token 538: ' _' (ID: 1175)
  Prédit: '_parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_parse' → logprob: -0.00025895543512888253
    2. '_output' → logprob: -8.500259399414062
    3. ' _' → logprob: -10.875259399414062
    4. '_' → logprob: -10.875259399414062
    5. '_print' → logprob: -12.625259399414062
    6. '_write' → logprob: -12.625259399414062
    7. '_parser' → logprob: -12.875259399414062
    8. '_finalize' → logprob: -13.625259399414062
    9. '_get' → logprob: -13.750259399414062
    10. '_generate' → logprob: -14.250259399414062

Token 539: 'parse' (ID: 4841)
  Prédit: 'parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -1.1472419600977446e-06
    2. 'output' → logprob: -14.000000953674316
    3. '_parse' → logprob: -15.500000953674316
    4. 'print' → logprob: -18.500001907348633
    5. 'Parse' → logprob: -19.375001907348633
    6. 'parser' → logprob: -20.250001907348633
    7. ' parse' → logprob: -21.125001907348633
    8. '.parse' → logprob: -21.250001907348633
    9. '=parse' → logprob: -21.250001907348633
    10. '(parse' → logprob: -21.375001907348633

Token 540: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -1.0280383548888494e-06
    2. 'input' → logprob: -14.000000953674316
    3. '_' → logprob: -16.625001907348633
    4. '_output' → logprob: -17.875001907348633
    5. 'Input' → logprob: -18.250001907348633
    6. '_inputs' → logprob: -18.375001907348633
    7. '_Input' → logprob: -18.875001907348633
    8. '_INPUT' → logprob: -19.375001907348633
    9. '_data' → logprob: -20.125001907348633
    10. '_in' → logprob: -20.500001907348633

Token 541: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -6.52788148727268e-05
    2. '   ' → logprob: -10.875064849853516
    3. '       ' → logprob: -10.875064849853516
    4. 'self' → logprob: -11.125064849853516
    5. '(' → logprob: -11.375064849853516
    6. ' (' → logprob: -15.000064849853516
    7. '(
' → logprob: -15.375064849853516
    8. ' ' → logprob: -15.500064849853516
    9. '	self' → logprob: -16.250064849853516
    10. '(Self' → logprob: -16.500064849853516

Token 542: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.8111175894737244
    2. '):
' → logprob: -1.0611176490783691
    3. '(self' → logprob: -1.6861176490783691
    4. 'self' → logprob: -3.811117649078369
    5. ')' → logprob: -7.061117649078369
    6. '   ' → logprob: -7.311117649078369
    7. '       ' → logprob: -7.686117649078369
    8. ',' → logprob: -10.061117172241211
    9. '):

' → logprob: -10.311117172241211
    10. '):
' → logprob: -10.561117172241211

Token 543: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003017385315615684
    2. 'self' → logprob: -8.125301361083984
    3. ' self' → logprob: -12.875301361083984
    4. '   ' → logprob: -13.500301361083984
    5. '
' → logprob: -14.625301361083984
    6. '```' → logprob: -15.000301361083984
    7. 'data' → logprob: -15.250301361083984
    8. '(self' → logprob: -15.375301361083984
    9. '           ' → logprob: -15.750301361083984
    10. '	self' → logprob: -16.875301361083984

Token 544: ' parser' (ID: 14216)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00263118464499712
    2. '       ' → logprob: -6.002631187438965
    3. ' self' → logprob: -9.002631187438965
    4. 'parser' (adapté à ' parser') → logprob: -10.377631187438965
    5. 'data' → logprob: -13.627631187438965
    6. '```' → logprob: -16.62763023376465
    7. ' parser' → logprob: -17.50263023376465
    8. '	self' → logprob: -18.00263023376465
    9. '(self' → logprob: -18.37763023376465
    10. '   ' → logprob: -18.62763023376465

Token 545: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132804334163666
    2. ' =' → logprob: -1.313280463218689
    3. '.' → logprob: -11.68828010559082
    4. '=data' → logprob: -13.06328010559082
    5. 'data' → logprob: -13.31328010559082
    6. '   ' → logprob: -13.43828010559082
    7. '.=' → logprob: -13.43828010559082
    8. '       ' → logprob: -14.43828010559082
    9. '=self' → logprob: -14.43828010559082
    10. '_data' → logprob: -14.43828010559082

Token 546: ' Trade' (ID: 24794)
  Prédit: 'Trade'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Trade' → logprob: -7.941850526549388e-06
    2. ' Trade' → logprob: -11.750007629394531
    3. 'Trading' → logprob: -20.25000762939453
    4. 'Trader' → logprob: -20.50000762939453
    5. 'Trace' → logprob: -20.87500762939453
    6. 'trade' → logprob: -21.00000762939453
    7. ' trade' → logprob: -21.25000762939453
    8. 'Trades' → logprob: -21.50000762939453
    9. 'Travel' → logprob: -22.00000762939453
    10. 'Trust' → logprob: -22.50000762939453

Token 547: 'Data' (ID: 1186)
  Prédit: 'Data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Data' → logprob: 0.0
    2. '
' → logprob: -17.5
    3. '_data' → logprob: -18.875
    4. '```' → logprob: -19.0
    5. '	Data' → logprob: -19.75
    6. '`' → logprob: -19.75
    7. '**' → logprob: -20.125
    8. '   ' → logprob: -20.125
    9. 'data' → logprob: -20.25
    10. '\' → logprob: -20.625

Token 548: 'Input' (ID: 3275)
  Prédit: 'Input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Input' → logprob: 0.0
    2. 'input' → logprob: -17.375
    3. ' Input' → logprob: -18.0
    4. '_input' → logprob: -18.625
    5. 'Parser' → logprob: -18.75
    6. 'Data' → logprob: -19.25
    7. '\Input' → logprob: -19.625
    8. '	Input' → logprob: -19.75
    9. '_INPUT' → logprob: -20.125
    10. '<Input' → logprob: -20.375

Token 549: 'Parser' (ID: 9231)
  Prédit: 'Parser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Parser' → logprob: -6.704273118884885e-07
    2. 'parser' → logprob: -14.500000953674316
    3. 'Parse' → logprob: -17.25
    4. '_parser' → logprob: -17.25
    5. ' parser' → logprob: -18.5
    6. ' Parser' → logprob: -19.0
    7. '(Parser' → logprob: -19.125
    8. '.Parser' → logprob: -19.25
    9. 'Par' → logprob: -19.875
    10. '-parser' → logprob: -20.0

Token 550: '()
' (ID: 1234)
  Prédit: '.parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parse' → logprob: -0.09755074977874756
    2. '()
' → logprob: -2.597550868988037
    3. '()' → logprob: -4.222550868988037
    4. '.' → logprob: -7.097550868988037
    5. 'Parser' → logprob: -7.097550868988037
    6. 'parse' → logprob: -7.222550868988037
    7. '().' → logprob: -7.597550868988037
    8. '       ' → logprob: -7.972550868988037
    9. 'data' → logprob: -8.972550392150879
    10. 'parser' → logprob: -9.847550392150879

Token 551: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08529351651668549
    2. '
' → logprob: -3.2102935314178467
    3. 'self' → logprob: -3.2102935314178467
    4. 'data' → logprob: -7.335293292999268
    5. ' self' → logprob: -8.835293769836426
    6. '<|end|>' → logprob: -9.460293769836426
    7. '.data' → logprob: -10.210293769836426
    8. '   ' → logprob: -10.335293769836426
    9. '
' → logprob: -10.710293769836426
    10. '=' → logprob: -10.960293769836426

Token 552: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.011279122903943062
    2. '       ' → logprob: -4.511279106140137
    3. ' self' → logprob: -8.386279106140137
    4. '
' → logprob: -13.761279106140137
    5. '	self' → logprob: -14.011279106140137
    6. 'data' → logprob: -14.261279106140137
    7. '   ' → logprob: -14.761279106140137
    8. '(self' → logprob: -16.136280059814453
    9. '	' → logprob: -16.886280059814453
    10. '[self' → logprob: -16.886280059814453

Token 553: '.data' (ID: 3885)
  Prédit: '.data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.data' → logprob: -4.4849443838757e-06
    2. 'data' → logprob: -12.625004768371582
    3. '.' → logprob: -13.750004768371582
    4. '       ' → logprob: -17.250003814697266
    5. '   ' → logprob: -18.750003814697266
    6. ' .' → logprob: -19.000003814697266
    7. 'self' → logprob: -19.500003814697266
    8. '.stream' → logprob: -19.750003814697266
    9. '\data' → logprob: -20.250003814697266
    10. '_data' → logprob: -20.375003814697266

Token 554: '_stream' (ID: 29670)
  Prédit: '_stream'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_stream' → logprob: -1.2664456789934775e-06
    2. 'stream' → logprob: -14.375000953674316
    3. '_parser' → logprob: -14.500000953674316
    4. ' =' → logprob: -17.000001907348633
    5. '.stream' → logprob: -17.375001907348633
    6. '_st' → logprob: -17.625001907348633
    7. '=' → logprob: -17.625001907348633
    8. '_STREAM' → logprob: -18.875001907348633
    9. '_' → logprob: -19.000001907348633
    10. '	stream' → logprob: -19.125001907348633

Token 555: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011047814972698689
    2. ' =' → logprob: -4.511047840118408
    3. '.=' → logprob: -17.01104736328125
    4. '=self' → logprob: -19.63604736328125
    5. '＝' → logprob: -19.88604736328125
    6. '=

' → logprob: -20.26104736328125
    7. '+=' → logprob: -20.63604736328125
    8. '=
' → logprob: -20.63604736328125
    9. '=}' → logprob: -21.01104736328125
    10. '=parse' → logprob: -21.13604736328125

Token 556: ' parser' (ID: 14216)
  Prédit: 'parser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parser' → logprob: -0.002476016292348504
    2. ' parser' → logprob: -6.002476215362549
    3. 'Trade' → logprob: -15.25247573852539
    4. ' Trade' → logprob: -16.75247573852539
    5. '(parser' → logprob: -16.87747573852539
    6. '	parser' → logprob: -17.50247573852539
    7. 'parse' → logprob: -19.50247573852539
    8. 'Parser' → logprob: -19.50247573852539
    9. '.parser' → logprob: -20.50247573852539
    10. '   ' → logprob: -20.62747573852539

Token 557: '.parse' (ID: 7259)
  Prédit: '.parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parse' → logprob: -0.00014287306112237275
    2. '.' → logprob: -9.250143051147461
    3. '().' → logprob: -10.125143051147461
    4. ' .' → logprob: -12.750143051147461
    5. 'parse' → logprob: -14.000143051147461
    6. '{}.' → logprob: -14.625143051147461
    7. '.decode' → logprob: -14.750143051147461
    8. '   ' → logprob: -15.125143051147461
    9. '.readline' → logprob: -15.250143051147461
    10. '.Parse' → logprob: -15.375143051147461

Token 558: '()

' (ID: 5874)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0360802598297596
    2. '<|end|>' → logprob: -3.7860803604125977
    3. '   ' → logprob: -4.661080360412598
    4. '

' → logprob: -6.161080360412598
    5. '    
' → logprob: -7.161080360412598
    6. '<|end|>' → logprob: -8.661080360412598
    7. '```' → logprob: -8.911080360412598
    8. 'def' → logprob: -10.036080360412598
    9. '  
' → logprob: -10.911080360412598
    10. '        
' → logprob: -11.911080360412598

Token 559: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2590694725513458
    2. '   ' → logprob: -1.5090694427490234
    3. '```' → logprob: -5.384069442749023
    4. 'def' → logprob: -6.384069442749023
    5. '    
' → logprob: -7.509069442749023
    6. '<|end|>' → logprob: -9.134069442749023
    7. '

' → logprob: -9.259069442749023
    8. '  
' → logprob: -10.634069442749023
    9. ' def' → logprob: -10.634069442749023
    10. '``' → logprob: -11.384069442749023

Token 560: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.024708356708288193
    2. '
' → logprob: -4.274708271026611
    3. '   ' → logprob: -4.899708271026611
    4. ' def' → logprob: -5.899708271026611
    5. '```' → logprob: -8.14970874786377
    6. '	def' → logprob: -12.02470874786377
    7. '    
' → logprob: -12.52470874786377
    8. '        
' → logprob: -14.77470874786377
    9. '``' → logprob: -14.89970874786377
    10. '

' → logprob: -15.27470874786377

Token 561: ' _' (ID: 1175)
  Prédit: '_output'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_output' → logprob: -1.747814349073451e-05
    2. ' _' → logprob: -11.125017166137695
    3. '_outputs' → logprob: -13.875017166137695
    4. '_write' → logprob: -15.125017166137695
    5. '__' → logprob: -15.500017166137695
    6. '_finalize' → logprob: -15.625017166137695
    7. '_execute' → logprob: -15.875017166137695
    8. '_' → logprob: -16.000017166137695
    9. '_out' → logprob: -16.125017166137695
    10. '_input' → logprob: -16.375017166137695

Token 562: 'output' (ID: 6130)
  Prédit: 'output'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'output' → logprob: 0.0
    2. '_output' → logprob: -17.0
    3. ' output' → logprob: -17.5
    4. 'print' → logprob: -20.875
    5. '.output' → logprob: -21.0
    6. '(output' → logprob: -21.0
    7. 'Output' → logprob: -21.0
    8. '$output' → logprob: -21.875
    9. '	output' → logprob: -22.125
    10. 'out' → logprob: -23.875

Token 563: '_result' (ID: 11623)
  Prédit: '_result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -2.45848218582978e-06
    2. 'result' → logprob: -13.25000286102295
    3. '_RESULT' → logprob: -15.75000286102295
    4. 'Result' → logprob: -16.250001907348633
    5. '(self' → logprob: -16.375001907348633
    6. '_' → logprob: -16.625001907348633
    7. '   ' → logprob: -16.625001907348633
    8. '_output' → logprob: -17.125001907348633
    9. '```' → logprob: -17.250001907348633
    10. '_results' → logprob: -17.250001907348633

Token 564: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.005680618807673454
    2. '(' → logprob: -5.255680561065674
    3. '(result' → logprob: -8.755681037902832
    4. '   ' → logprob: -9.130681037902832
    5. 'self' → logprob: -9.630681037902832
    6. '(
' → logprob: -10.005681037902832
    7. ' (' → logprob: -10.255681037902832
    8. '       ' → logprob: -11.130681037902832
    9. '(s' → logprob: -12.505681037902832
    10. '```' → logprob: -12.880681037902832

Token 565: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001334559783572331
    2. 'self' → logprob: -9.750133514404297
    3. ',result' → logprob: -9.750133514404297
    4. '       ' → logprob: -12.500133514404297
    5. ' ,' → logprob: -12.500133514404297
    6. ')' → logprob: -12.750133514404297
    7. '   ' → logprob: -13.000133514404297
    8. ',self' → logprob: -13.750133514404297
    9. '):' → logprob: -13.875133514404297
    10. '(self' → logprob: -14.500133514404297

Token 566: ' longest' (ID: 37511)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.0003370118502061814
    2. ' result' → logprob: -8.000336647033691
    3. 'value' → logprob: -14.375336647033691
    4. 'res' → logprob: -14.875336647033691
    5. 'str' → logprob: -15.750336647033691
    6. 'output' → logprob: -15.875336647033691
    7. 'length' → logprob: -16.000337600708008
    8. '(result' → logprob: -16.375337600708008
    9. ')' → logprob: -16.750337600708008
    10. '   ' → logprob: -16.875337600708008

Token 567: '_length' (ID: 11514)
  Prédit: '_zero'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_zero' → logprob: -0.5989713668823242
    2. '_length' → logprob: -1.3489713668823242
    3. '_len' → logprob: -2.473971366882324
    4. '_' → logprob: -2.973971366882324
    5. ')' → logprob: -3.223971366882324
    6. '_interval' → logprob: -4.348971366882324
    7. ')_' → logprob: -6.598971366882324
    8. '_)' → logprob: -8.098971366882324
    9. '_inter' → logprob: -8.223971366882324
    10. '```' → logprob: -8.723971366882324

Token 568: ':' (ID: 25)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.2899862825870514
    2. '):' → logprob: -1.414986252784729
    3. '       ' → logprob: -5.5399861335754395
    4. '   ' → logprob: -6.5399861335754395
    5. 'self' → logprob: -6.6649861335754395
    6. '):
' → logprob: -6.7899861335754395
    7. '(self' → logprob: -7.1649861335754395
    8. ',' → logprob: -9.164986610412598
    9. ':' → logprob: -9.664986610412598
    10. ')' → logprob: -10.039986610412598

Token 569: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00040362097206525505
    2. ' int' → logprob: -8.00040340423584
    3. ')' → logprob: -10.00040340423584
    4. '   ' → logprob: -11.12540340423584
    5. '):
' → logprob: -12.25040340423584
    6. '):' → logprob: -13.12540340423584
    7. '[int' → logprob: -14.87540340423584
    8. ':int' → logprob: -15.50040340423584
    9. ' ' → logprob: -15.62540340423584
    10. '(int' → logprob: -15.75040340423584

Token 570: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.2035536766052246
    2. '):' → logprob: -1.7035536766052246
    3. ')' → logprob: -6.703553676605225
    4. '):
' → logprob: -7.203553676605225
    5. '       ' → logprob: -9.203554153442383
    6. '   ' → logprob: -9.703554153442383
    7. ')->' → logprob: -12.703554153442383
    8. '):

' → logprob: -13.453554153442383
    9. ':' → logprob: -14.578554153442383
    10. ' ' → logprob: -15.453554153442383

Token 571: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002084277366520837
    2. 'print' → logprob: -8.500208854675293
    3. ' print' → logprob: -12.875208854675293
    4. '```' → logprob: -13.625208854675293
    5. '   ' → logprob: -13.875208854675293
    6. '           ' → logprob: -16.375207901000977
    7. '`' → logprob: -17.625207901000977
    8. 'import' → logprob: -17.625207901000977
    9. '	' → logprob: -17.750207901000977
    10. '      ' → logprob: -17.875207901000977

Token 572: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -9.088346359931165e-07
    2. '       ' → logprob: -14.000000953674316
    3. ' print' → logprob: -16.75
    4. '```' → logprob: -17.75
    5. 'import' → logprob: -19.75
    6. '	print' → logprob: -23.5
    7. 'pr' → logprob: -23.875
    8. '``' → logprob: -24.5
    9. '#print' → logprob: -24.625
    10. '
' → logprob: -24.75

Token 573: '(long' (ID: 22019)
  Prédit: '(long'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(long' → logprob: -6.392202976712724e-06
    2. 'long' → logprob: -12.000006675720215
    3. '(' → logprob: -15.875006675720215
    4. '(f' → logprob: -17.7500057220459
    5. '(Long' → logprob: -18.5000057220459
    6. '<long' → logprob: -19.0000057220459
    7. '(last' → logprob: -20.0000057220459
    8. ' longest' → logprob: -20.1250057220459
    9. ',long' → logprob: -20.2500057220459
    10. '	long' → logprob: -20.6250057220459

Token 574: 'est' (ID: 376)
  Prédit: 'est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.004921700805425644
    2. 'st' → logprob: -5.504921913146973
    3. 'gest' → logprob: -7.129921913146973
    4. 't' → logprob: -10.629921913146973
    5. 'g' → logprob: -11.004921913146973
    6. 'test' → logprob: -15.004921913146973
    7. ' longest' → logprob: -16.129920959472656
    8. '```' → logprob: -16.254920959472656
    9. 'ost' → logprob: -16.504920959472656
    10. 's' → logprob: -16.504920959472656

Token 575: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -8.895480277715251e-06
    2. '_' → logprob: -11.750008583068848
    3. '_l' → logprob: -15.375008583068848
    4. 'length' → logprob: -15.500008583068848
    5. ')' → logprob: -16.000009536743164
    6. '_LENGTH' → logprob: -16.500009536743164
    7. '_le' → logprob: -16.750009536743164
    8. '__' → logprob: -16.750009536743164
    9. '_lengths' → logprob: -17.125009536743164
    10. ' _' → logprob: -17.250009536743164

Token 576: ')


' (ID: 7861)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -6.704273118884885e-07
    2. ')
' → logprob: -14.750000953674316
    3. ' )' → logprob: -16.75
    4. '```' → logprob: -18.25
    5. '')' → logprob: -19.0
    6. '`)' → logprob: -19.0
    7. '")' → logprob: -19.125
    8. '   ' → logprob: -19.25
    9. '())' → logprob: -19.25
    10. '}' → logprob: -19.25

Token 577: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00018411019118502736
    2. '```' → logprob: -8.875184059143066
    3. ' if' → logprob: -10.125184059143066
    4. '<|end|>' → logprob: -13.250184059143066
    5. 'solution' → logprob: -13.750184059143066
    6. 'def' → logprob: -14.500184059143066
    7. 'If' → logprob: -15.750184059143066
    8. '
' → logprob: -15.750184059143066
    9. '  
' → logprob: -16.125185012817383
    10. '    
' → logprob: -16.250185012817383

Token 578: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.023252932354807854
    2. '__' → logprob: -3.7732529640197754
    3. '_' → logprob: -12.148252487182617
    4. 'name' → logprob: -14.023252487182617
    5. '_name' → logprob: -14.148252487182617
    6. '___' → logprob: -15.148252487182617
    7. ' ' → logprob: -15.648252487182617
    8. '/__' → logprob: -16.898252487182617
    9. ' ' → logprob: -17.023252487182617
    10. 'Name' → logprob: -17.023252487182617

Token 579: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.255831778049469
    2. ' ==' → logprob: -1.8808317184448242
    3. ' __' → logprob: -2.755831718444824
    4. 'name' → logprob: -5.005831718444824
    5. '==' → logprob: -6.005831718444824
    6. 'if' → logprob: -8.880831718444824
    7. 'main' → logprob: -9.005831718444824
    8. '[' → logprob: -9.755831718444824
    9. '=="' → logprob: -10.755831718444824
    10. '.__' → logprob: -10.880831718444824

Token 580: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -5.6934557505883276e-05
    2. '==' → logprob: -9.875057220458984
    3. '__.__' → logprob: -12.750057220458984
    4. ' ==' → logprob: -13.500057220458984
    5. '=="' → logprob: -14.625057220458984
    6. '____' → logprob: -15.375057220458984
    7. '___' → logprob: -15.625057220458984
    8. 'name' → logprob: -15.750057220458984
    9. '__.' → logprob: -16.250057220458984
    10. '__
' → logprob: -17.500057220458984

Token 581: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.01947774551808834
    2. '==' → logprob: -4.394477844238281
    3. ' ==' → logprob: -5.019477844238281
    4. '=="' → logprob: -8.269477844238281
    5. '__.__' → logprob: -9.769477844238281
    6. '.__' → logprob: -11.144477844238281
    7. '=='' → logprob: -12.644477844238281
    8. '__.' → logprob: -13.769477844238281
    9. '___' → logprob: -13.894477844238281
    10. '.' → logprob: -14.894477844238281

Token 582: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.004107254091650248
    2. ''' → logprob: -5.504107475280762
    3. '__' → logprob: -11.004107475280762
    4. ' "__' → logprob: -11.379107475280762
    5. '"name' → logprob: -15.629107475280762
    6. ' '__' → logprob: -15.879107475280762
    7. '"class' → logprob: -15.879107475280762
    8. '"user' → logprob: -16.504106521606445
    9. '"_' → logprob: -16.629106521606445
    10. '"type' → logprob: -17.879106521606445

Token 583: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.003196727717295289
    2. '__' → logprob: -5.753196716308594
    3. 'name' → logprob: -11.128196716308594
    4. '_main' → logprob: -12.878196716308594
    5. 'py' → logprob: -14.003196716308594
    6. 'python' → logprob: -15.503196716308594
    7. '"' → logprob: -15.753196716308594
    8. '__":
' → logprob: -15.753196716308594
    9. 'built' → logprob: -16.003196716308594
    10. 'm' → logprob: -16.253196716308594

Token 584: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.16171583533287048
    2. '__' → logprob: -1.9117158651351929
    3. '__:' → logprob: -7.036715984344482
    4. '__':
' → logprob: -7.411715984344482
    5. ':' → logprob: -12.286715507507324
    6. '__
' → logprob: -13.661715507507324
    7. '__["' → logprob: -14.411715507507324
    8. '__.' → logprob: -15.411715507507324
    9. '__
' → logprob: -15.411715507507324
    10. '__",' → logprob: -15.661715507507324

Token 585: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00038705902989022434
    2. ' solution' → logprob: -8.125387191772461
    3. '(solution' → logprob: -10.375387191772461
    4. 'solution' → logprob: -10.875387191772461
    5. ':
' → logprob: -11.500387191772461
    6. 'Solution' → logprob: -11.750387191772461
    7. '```' → logprob: -11.875387191772461
    8. '    
' → logprob: -12.125387191772461
    9. '_solution' → logprob: -12.625387191772461
    10. ' Solution' → logprob: -13.250387191772461

Token 586: ' solution' (ID: 7578)
  Prédit: 'solution'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solution' (adapté à ' solution') → logprob: -0.02719062566757202
    2. ' solution' → logprob: -4.527190685272217
    3. 'Longest' → logprob: -4.652190685272217
    4. 'sol' → logprob: -5.527190685272217
    5. 'solver' → logprob: -6.902190685272217
    6. '   ' → logprob: -7.652190685272217
    7. 'Solution' → logprob: -7.777190685272217
    8. 'import' → logprob: -8.277190208435059
    9. 'Long' → logprob: -8.527190208435059
    10. '_solution' → logprob: -10.027190208435059

Token 587: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08721470087766647
    2. '=' → logprob: -2.587214708328247
    3. '.run' → logprob: -4.962214469909668
    4. '.' → logprob: -6.837214469909668
    5. '   ' → logprob: -9.212214469909668
    6. '().' → logprob: -9.712214469909668
    7. ' ' → logprob: -10.837214469909668
    8. '_' → logprob: -11.837214469909668
    9. '()' → logprob: -12.087214469909668
    10. '  ' → logprob: -12.212214469909668

Token 588: ' Long' (ID: 7790)
  Prédit: 'Longest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Longest' → logprob: -0.01825799234211445
    2. ' Long' → logprob: -4.018258094787598
    3. 'Long' → logprob: -9.143258094787598
    4. '	Long' → logprob: -14.393258094787598
    5. '_Long' → logprob: -15.268258094787598
    6. 'Shortest' → logprob: -16.26825714111328
    7. ' longest' → logprob: -16.76825714111328
    8. 'long' → logprob: -17.64325714111328
    9. '(Long' → logprob: -17.64325714111328
    10. '<Long' → logprob: -17.64325714111328

Token 589: 'est' (ID: 376)
  Prédit: 'est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -6.749814019713085e-06
    2. 'gest' → logprob: -12.750006675720215
    3. 'Longest' → logprob: -12.875006675720215
    4. 'Zero' → logprob: -15.375006675720215
    5. 'Shortest' → logprob: -15.500006675720215
    6. 'iest' → logprob: -15.625006675720215
    7. 'Solution' → logprob: -16.00000762939453
    8. 'Test' → logprob: -17.00000762939453
    9. 'esting' → logprob: -17.00000762939453
    10. 'st' → logprob: -17.12500762939453

Token 590: 'Zero' (ID: 20870)
  Prédit: 'Zero'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Zero' → logprob: 0.0
    2. ' Zero' → logprob: -17.5
    3. 'zero' → logprob: -19.0
    4. '_zero' → logprob: -20.125
    5. ' zero' → logprob: -20.375
    6. '```' → logprob: -20.625
    7. '.Zero' → logprob: -20.75
    8. 'Solution' → logprob: -21.875
    9. '_ZERO' → logprob: -22.0
    10. 'ZERO' → logprob: -23.5

Token 591: 'Sum' (ID: 17434)
  Prédit: 'Sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sum' → logprob: -1.3856492842023727e-06
    2. 'Zero' → logprob: -14.125000953674316
    3. 'Solution' → logprob: -15.125000953674316
    4. 'sum' → logprob: -15.500000953674316
    5. 'Length' → logprob: -17.375001907348633
    6. '_sum' → logprob: -17.625001907348633
    7. 'Interval' → logprob: -17.875001907348633
    8. ' sum' → logprob: -19.500001907348633
    9. 'SUM' → logprob: -19.500001907348633
    10. ' Sum' → logprob: -19.750001907348633

Token 592: 'Interval' (ID: 13947)
  Prédit: 'Interval'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Interval' → logprob: -1.3856492842023727e-06
    2. 'interval' → logprob: -13.750000953674316
    3. 'Solution' → logprob: -15.625000953674316
    4. ' Interval' → logprob: -17.375001907348633
    5. 'Length' → logprob: -17.875001907348633
    6. 'Intervals' → logprob: -18.000001907348633
    7. '_interval' → logprob: -18.125001907348633
    8. '_INTERVAL' → logprob: -19.625001907348633
    9. 'Inter' → logprob: -19.875001907348633
    10. '.Interval' → logprob: -20.500001907348633

Token 593: 'Solution' (ID: 44456)
  Prédit: 'Solution'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Solution' → logprob: -0.0002644351334311068
    2. 'solution' → logprob: -8.250264167785645
    3. '_solution' → logprob: -14.250264167785645
    4. 'olution' → logprob: -14.375264167785645
    5. '.solution' → logprob: -14.375264167785645
    6. ' solution' → logprob: -14.375264167785645
    7. 'Solver' → logprob: -14.750264167785645
    8. '(solution' → logprob: -16.12526512145996
    9. '   ' → logprob: -16.37526512145996
    10. ' Solution' → logprob: -16.75026512145996

Token 594: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25853151082992554
    2. '.solution' → logprob: -1.6335315704345703
    3. 'solution' → logprob: -3.8835315704345703
    4. '.run' → logprob: -5.00853157043457
    5. '
' → logprob: -5.88353157043457
    6. '(solution' → logprob: -6.63353157043457
    7. '.' → logprob: -7.38353157043457
    8. ' solution' → logprob: -9.25853157043457
    9. '.solve' → logprob: -9.38353157043457
    10. '    
' → logprob: -9.38353157043457

Token 595: '   ' (ID: 271)
  Prédit: 'solution'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solution' → logprob: -0.0019294669618830085
    2. '   ' → logprob: -6.25192928314209
    3. ' solution' → logprob: -14.37692928314209
    4. '(solution' → logprob: -15.75192928314209
    5. '_solution' → logprob: -16.876930236816406
    6. '.solution' → logprob: -17.626930236816406
    7. '```' → logprob: -18.876930236816406
    8. '    
' → logprob: -19.126930236816406
    9. 'Solution' → logprob: -19.876930236816406
    10. '
' → logprob: -19.876930236816406

Token 596: ' solution' (ID: 7578)
  Prédit: 'solution'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solution' (adapté à ' solution') → logprob: 0.0
    2. ' solution' → logprob: -17.75
    3. '   ' → logprob: -18.5
    4. '_solution' → logprob: -20.875
    5. '(solution' → logprob: -22.0
    6. '.solution' → logprob: -23.0
    7. '```' → logprob: -23.75
    8. 'Solution' → logprob: -24.375
    9. 'solver' → logprob: -25.875
    10. '       ' → logprob: -26.0

Token 597: '.run' (ID: 14795)
  Prédit: '.run'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.run' → logprob: -0.0015034328680485487
    2. '.' → logprob: -6.5015034675598145
    3. ' .' → logprob: -14.501502990722656
    4. '.
' → logprob: -15.126502990722656
    5. 'run' → logprob: -16.251502990722656
    6. '.solve' → logprob: -16.876502990722656
    7. '.execute' → logprob: -17.501502990722656
    8. '```' → logprob: -17.626502990722656
    9. '._' → logprob: -17.751502990722656
    10. '.start' → logprob: -17.876502990722656

Token 598: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.020558234304189682
    2. '
' → logprob: -4.2705583572387695
    3. '()
' → logprob: -5.2705583572387695
    4. '<|end|>' → logprob: -7.3955583572387695
    5. '(' → logprob: -7.7705583572387695
    6. '(
' → logprob: -9.64555835723877
    7. '```' → logprob: -10.02055835723877
    8. '\n' → logprob: -10.27055835723877
    9. '()\' → logprob: -11.14555835723877
    10. '#' → logprob: -11.77055835723877


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 596
Tokens correctement prédits (1ère position, stricte): 256
Tokens correctement prédits (1ère position, avec adaptation): 279
Tokens correctement prédits (top 10): 482
Précision stricte (1ère position): 42.95%
Précision adaptée (1ère position): 46.81%
Précision (top 10): 80.87%
================================================================================
