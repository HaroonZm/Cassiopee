================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:40:52
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
class Microbe:
    def __init__(self, index: int, release: int, capacity: int):
        self.index = index
        self.release = release
        self.capacity = capacity

    def can_survive(self, total_release: int, count: int) -> bool:
        # Each microbe takes equal amount: total_release / count
        # Must not exceed capacity
        return total_release <= self.capacity * count


class PetriDish:
    def __init__(self, microbes):
        self.microbes = microbes
        self.N = len(microbes)

    def max_survivors(self) -> int:
        # Sort microbes by capacity to release ratio or by capacity to enable a smart check
        # But condition is total_release / count <= min capacity among selected microbes
        # We'll use a binary search on k (number of microbes)
        left, right = 1, self.N
        microbes = self.microbes
        # Pre-sort by capacity asc and by release asc to facilitate efficient checks
        microbes_sorted = sorted(microbes, key=lambda m: (m.capacity, m.release))

        # To check if we can select k microbes with max total release <= capacity*k for all
        # We will attempt to select k microbes with minimal total release such that for each selected microbe, total_release <= capacity * k

        def can(k: int) -> bool:
            # Strategy:
            # For a fixed k, select k microbes that have the lowest release such that each microbe's capacity >= total_release/k
            # But total_release depends on selected microbes -> circular dependency
            # Approach:
            # Select microbes whose capacity >= threshold. Threshold = total_release / k.
            # So we try candidate microbes with capacity >= some threshold.
            # Instead, we do:
            # For microbe with capacity b_i, max total release allowed is b_i * k.
            #
            # Accordingly, if we select k microbes, total_release <= min(b_i * k)
            #
            # So for candidate k,
            # 1) Sort microbes by capacity
            # 2) Select the k microbes with lowest releases among those that have capacity * k >= total_release
            # But total_release is sum of release_i of these microbes
            
            # We do instead:
            # For each microbe, define max total_release allowed = b_i * k
            # So the minimal among these is min(b_i * k)
            # We want sum of release_i <= min(b_i * k)
            #
            # To maximize survivors, pick k microbes with minimal release with capacity constraints
            
            # We'll select all microbes with capacity * k >= X (some threshold)
            # We want minimal total release sum among k microbes with capacity*b_i >= sum_release, circular
            #
            # The accepted approach:
            # Sort microbes by capacity ascending
            # For k, collect all microbes with b_i >= threshold
            # select k microbes with smallest release from those
            #
            # Try all k from 1..N
            
            # Because constraints are large, use an efficient way:
            # For given k, find all microbes where b_i >= min_b = (sum_release / k )
            # Instead of iterating, we binary search on capacity
            
            # To avoid circular dependency, use the classical binary search on k and a priority queue
            # The approach from editorials: 
            # For fixed k, select microbes with minimal release whose capacity >= S/k where S is sum release and S depends on selection
            
            # We try:
            # Sort microbes by capacity ascending
            # Maintain a heap of releases to select k minimal releases from those that satisfy b_i*k >= total_release
            
            # Implement a solution similar to editorial:
            # For fixed k:
            # 1. Filter microbes where capacity >= minimal capacity required
            # 2. From these, pick k microbes with smallest releases
            # 3. If sum of releases <= min capacity * k (which is capacity * k of minimal microbe in the set), return True

            # But we don't know threshold in advance, try an alternative approach:
            # Sort by capacity ascending.
            # For k, traverse from large capacity to small => can pick sets with capacity>= current capacity
            # We can do a data structure approach: pick k microbes with minimal release among microbes with capacity >= threshold

            # More pragmatic approach:
            # We try to pick k microbes that satisfy b_i >= X (some threshold)
            # For all possible threshold, try selecting k microbes with capacity >= threshold
            # And sum releases <= threshold * k
            #
            # Because of constraints, we simulate:
            # Sort all microbes by capacity ascending.
            # For largest capacity assigned to the k-th microbe in the selected group,
            # sum of their releases must <= capacity * k

            # Binary search on k tries:
            # For each k, from microbes sorted by capacity descending, try to pick k microbes with minimal release values.

            # Implementation:
            # Sort microbes by capacity descending (because minimal b_i * k is determined by minimal capacity in selected set)
            # Then for given k, take first k microbes with smallest release (use a min-heap or sort the k first microbes by release)
            # Calculate total release and check if total_release <= minimal b_i * k among selected microbes

            # So pick k microbes with largest capacity, and within them choose those with smallest release.

            # We'll pick top N by capacity descending, pick top k minimal releases among them.

            candidates = [m for m in microbes if m.capacity >= 0]  # all microbes
            candidates.sort(key=lambda m: -m.capacity)

            # To pick k microbes with smallest releases among first idx microbes
            heap = []
            total_release = 0
            count = 0
            min_capacity = None

            for i in range(len(candidates)):
                m = candidates[i]
                # Push release
                if len(heap) < k:
                    import heapq
                    heapq.heappush(heap, -m.release)  # max heap by pushing negative
                    total_release += m.release
                    count += 1
                    # Track min capacity in selected
                    if min_capacity is None or m.capacity < min_capacity:
                        min_capacity = m.capacity
                else:
                    # Check if current release smaller than max in heap
                    if -heap[0] > m.release:
                        removed = -heapq.heappop(heap)
                        total_release -= removed
                        heapq.heappush(heap, -m.release)
                        total_release += m.release
                        if m.capacity < min_capacity:
                            min_capacity = m.capacity
                    # else skip

                if count == k:
                    # Check condition total_release <= min_capacity * k
                    if total_release <= min_capacity * k:
                        return True
            return False

        # classic binary search for max k
        while left < right:
            mid = (left + right + 1) // 2
            if can(mid):
                left = mid
            else:
                right = mid - 1
        return left


class MicrobeFactory:
    @staticmethod
    def from_input() -> PetriDish:
        import sys
        input = sys.stdin.readline
        N = int(input())
        microbes = []
        for i in range(N):
            a, b = map(int, input().split())
            microbes.append(Microbe(i + 1, a, b))
        return PetriDish(microbes)


def main():
    petri_dish = MicrobeFactory.from_input()
    print(petri_dish.max_survivors())


if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'class' (ID: 1444)
  → Token d'amorce (pas de prédiction)

Token 1: ' Micro' (ID: 24356)
  → Token d'amorce (pas de prédiction)

Token 2: 'be' (ID: 1464)
  → Token d'amorce (pas de prédiction)

Token 3: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6576027870178223
    2. '{' → logprob: -0.9076027870178223
    3. ' {' → logprob: -2.7826027870178223
    4. '(' → logprob: -4.782602787017822
    5. '.' → logprob: -5.157602787017822
    6. '```' → logprob: -6.532602787017822
    7. ' :' → logprob: -7.657602787017822
    8. ' ' → logprob: -8.782602310180664
    9. '[' → logprob: -9.157602310180664
    10. ' ```' → logprob: -10.407602310180664

Token 4: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5251471996307373
    2. '(' → logprob: -1.0251471996307373
    3. '```' → logprob: -3.7751471996307373
    4. '   ' → logprob: -4.025147438049316
    5. '.' → logprob: -5.650147438049316
    6. ''' → logprob: -5.900147438049316
    7. '\' → logprob: -7.025147438049316
    8. '():' → logprob: -7.650147438049316
    9. '`' → logprob: -8.650147438049316
    10. ':
' → logprob: -8.775147438049316

Token 5: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5575078725814819
    2. 'def' (adapté à ' def') → logprob: -1.807507872581482
    3. '```' → logprob: -1.807507872581482
    4. ' def' → logprob: -3.3075079917907715
    5. '_' → logprob: -3.8075079917907715
    6. '`' → logprob: -5.1825079917907715
    7. '    ' → logprob: -5.3075079917907715
    8. '\' → logprob: -5.4325079917907715
    9. '(' → logprob: -5.4325079917907715
    10. ''' → logprob: -5.6825079917907715

Token 6: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.18700900673866272
    2. '__' → logprob: -2.18700909614563
    3. ' ' → logprob: -2.93700909614563
    4. ' init' → logprob: -6.187008857727051
    5. ' ' → logprob: -6.562008857727051
    6. '  ' → logprob: -7.937008857727051
    7. ' process' → logprob: -8.43700885772705
    8. 'init' → logprob: -8.68700885772705
    9. ' add' → logprob: -8.93700885772705
    10. ' def' → logprob: -9.18700885772705

Token 7: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -2.935296834039036e-06
    2. ' init' → logprob: -13.37500286102295
    3. '_init' → logprob: -14.25000286102295
    4. 'ini' → logprob: -14.87500286102295
    5. 'i' → logprob: -16.625003814697266
    6. 'in' → logprob: -16.625003814697266
    7. '	init' → logprob: -17.375003814697266
    8. '_' → logprob: -18.375003814697266
    9. 'innit' → logprob: -18.875003814697266
    10. 'int' → logprob: -19.000003814697266

Token 8: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.3733315169811249
    2. '__' → logprob: -1.2483315467834473
    3. '(' → logprob: -3.8733315467834473
    4. '_' → logprob: -6.248331546783447
    5. '__(
' → logprob: -6.748331546783447
    6. '(self' → logprob: -7.998331546783447
    7. '__((' → logprob: -8.748331069946289
    8. '__('' → logprob: -9.748331069946289
    9. '_(' → logprob: -10.373331069946289
    10. '```' → logprob: -10.873331069946289

Token 9: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.002191779436543584
    2. ' self' → logprob: -6.127191543579102
    3. '(self' → logprob: -12.502191543579102
    4. ')' → logprob: -13.127191543579102
    5. '_self' → logprob: -15.627191543579102
    6. ' ' → logprob: -15.627191543579102
    7. '   ' → logprob: -16.0021915435791
    8. '       ' → logprob: -16.0021915435791
    9. '	self' → logprob: -16.2521915435791
    10. ',self' → logprob: -16.6271915435791

Token 10: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18777452409267426
    2. 'self' → logprob: -2.062774419784546
    3. ' ,' → logprob: -4.312774658203125
    4. ')' → logprob: -4.437774658203125
    5. '):' → logprob: -5.062774658203125
    6. '(self' → logprob: -5.437774658203125
    7. ' self' → logprob: -5.812774658203125
    8. '<|end|>' → logprob: -6.562774658203125
    9. ',self' → logprob: -6.937774658203125
    10. ' )' → logprob: -7.312774658203125

Token 11: ' index' (ID: 3472)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.390417218208313
    2. ' self' → logprob: -1.640417218208313
    3. ' name' → logprob: -2.7654170989990234
    4. 'name' → logprob: -3.3904170989990234
    5. 'species' → logprob: -4.640417098999023
    6. ' )' → logprob: -4.890417098999023
    7. ' species' → logprob: -4.890417098999023
    8. ')' → logprob: -5.015417098999023
    9. 's' → logprob: -8.015417098999023
    10. 'n' → logprob: -8.640417098999023

Token 12: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2569616138935089
    2. ',' → logprob: -1.6319615840911865
    3. ')' → logprob: -3.5069615840911865
    4. ':' → logprob: -7.506961822509766
    5. '):
' → logprob: -9.131961822509766
    6. '   ' → logprob: -9.506961822509766
    7. '_' → logprob: -9.506961822509766
    8. '=' → logprob: -9.881961822509766
    9. '```' → logprob: -10.006961822509766
    10. ' ,' → logprob: -10.131961822509766

Token 13: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.06636879593133926
    2. ' int' → logprob: -2.941368818283081
    3. 'self' → logprob: -4.566368579864502
    4. ' self' → logprob: -7.441368579864502
    5. ')' → logprob: -8.69136905670166
    6. ' )' → logprob: -9.44136905670166
    7. 's' → logprob: -9.56636905670166
    8. '=int' → logprob: -10.44136905670166
    9. ':int' → logprob: -11.06636905670166
    10. ' ' → logprob: -11.31636905670166

Token 14: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.49352237582206726
    2. ',' → logprob: -0.9935224056243896
    3. ')' → logprob: -3.9935224056243896
    4. '):
' → logprob: -7.9935221672058105
    5. '   ' → logprob: -8.368522644042969
    6. ':' → logprob: -10.368522644042969
    7. '<|end|>' → logprob: -10.493522644042969
    8. ',
' → logprob: -10.618522644042969
    9. ' ,' → logprob: -10.868522644042969
    10. '),' → logprob: -10.993522644042969

Token 15: ' release' (ID: 8232)
  Prédit: ' name'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' name' → logprob: -0.2717685401439667
    2. ' species' → logprob: -1.771768569946289
    3. ' population' → logprob: -3.771768569946289
    4. ' position' → logprob: -4.021768569946289
    5. ' environment' → logprob: -5.521768569946289
    6. ' dna' → logprob: -5.771768569946289
    7. ' energy' → logprob: -5.896768569946289
    8. ')' → logprob: -6.271768569946289
    9. ' genome' → logprob: -6.396768569946289
    10. ' space' → logprob: -6.396768569946289

Token 16: ':' (ID: 25)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.19639281928539276
    2. '_rate' → logprob: -2.071392774581909
    3. '_time' → logprob: -4.321393013000488
    4. ')' → logprob: -4.571393013000488
    5. ' _' → logprob: -5.196393013000488
    6. '_factor' → logprob: -5.321393013000488
    7. '_token' → logprob: -5.696393013000488
    8. '_date' → logprob: -6.321393013000488
    9. '_space' → logprob: -6.821393013000488
    10. '_val' → logprob: -6.946393013000488

Token 17: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.41946515440940857
    2. ' )' → logprob: -1.544465184211731
    3. ')' → logprob: -2.6694650650024414
    4. 'int' → logprob: -3.2944650650024414
    5. ' ' → logprob: -5.169465065002441
    6. ' float' → logprob: -5.919465065002441
    7. '[int' → logprob: -6.044465065002441
    8. ' rate' → logprob: -6.544465065002441
    9. ' value' → logprob: -6.919465065002441
    10. ' energy' → logprob: -7.419465065002441

Token 18: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.18159066140651703
    2. ',' → logprob: -2.0565905570983887
    3. ')' → logprob: -3.3065905570983887
    4. '   ' → logprob: -6.931590557098389
    5. ':' → logprob: -8.306591033935547
    6. ' ):' → logprob: -9.181591033935547
    7. ' ,' → logprob: -10.306591033935547
    8. '       ' → logprob: -10.431591033935547
    9. '):
' → logprob: -10.556591033935547
    10. '=' → logprob: -10.931591033935547

Token 19: ' capacity' (ID: 12241)
  Prédit: ' position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' position' → logprob: -1.3135744333267212
    2. ' flow' → logprob: -1.9385744333267212
    3. ' name' → logprob: -2.3135743141174316
    4. ' energy' → logprob: -2.3135743141174316
    5. ' pressure' → logprob: -2.9385743141174316
    6. ' capacity' → logprob: -3.3135743141174316
    7. ' location' → logprob: -3.8135743141174316
    8. ' positions' → logprob: -4.063574314117432
    9. ' time' → logprob: -4.313574314117432
    10. ' state' → logprob: -4.438574314117432

Token 20: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.13144360482692719
    2. '):' → logprob: -2.131443500518799
    3. ')' → logprob: -5.756443500518799
    4. ',' → logprob: -6.756443500518799
    5. ':int' → logprob: -10.006443977355957
    6. '_capacity' → logprob: -10.256443977355957
    7. ' ):' → logprob: -10.381443977355957
    8. ' :' → logprob: -11.256443977355957
    9. '   ' → logprob: -11.506443977355957
    10. '_' → logprob: -11.631443977355957

Token 21: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.16038690507411957
    2. 'int' → logprob: -1.9103869199752808
    3. '[int' → logprob: -9.78538703918457
    4. ')' → logprob: -10.28538703918457
    5. ':int' → logprob: -10.53538703918457
    6. '	int' → logprob: -11.53538703918457
    7. '=int' → logprob: -11.78538703918457
    8. '(int' → logprob: -12.16038703918457
    9. ' )' → logprob: -12.41038703918457
    10. ' ' → logprob: -12.66038703918457

Token 22: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.005225697997957468
    2. ',' → logprob: -5.755225658416748
    3. ')' → logprob: -6.255225658416748
    4. '   ' → logprob: -10.130226135253906
    5. '):
' → logprob: -10.130226135253906
    6. ':' → logprob: -10.255226135253906
    7. '```' → logprob: -12.505226135253906
    8. ''):' → logprob: -13.130226135253906
    9. '       ' → logprob: -13.880226135253906
    10. '),' → logprob: -14.130226135253906

Token 23: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020899776369333267
    2. '   ' → logprob: -4.520899772644043
    3. '\n' → logprob: -5.770899772644043
    4. '\' → logprob: -6.395899772644043
    5. '        
' → logprob: -6.520899772644043
    6. 'self' → logprob: -6.895899772644043
    7. '    ' → logprob: -7.520899772644043
    8. '<|end|>' → logprob: -7.520899772644043
    9. '```' → logprob: -8.020899772644043
    10. 'newline' → logprob: -8.895899772644043

Token 24: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.09598217159509659
    2. '       ' → logprob: -2.720982074737549
    3. ' self' → logprob: -3.720982074737549
    4. '        ' → logprob: -7.720982074737549
    5. '   ' → logprob: -7.720982074737549
    6. '           ' → logprob: -8.595982551574707
    7. ' ' → logprob: -9.470982551574707
    8. '```' → logprob: -9.720982551574707
    9. '_self' → logprob: -9.720982551574707
    10. ' ' → logprob: -9.970982551574707

Token 25: '.index' (ID: 9736)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.002186545403674245
    2. '.index' → logprob: -6.7521867752075195
    3. ' .' → logprob: -7.8771867752075195
    4. '.release' → logprob: -8.50218677520752
    5. '.name' → logprob: -9.62718677520752
    6. '._' → logprob: -9.87718677520752
    7. '.user' → logprob: -10.00218677520752
    8. '.data' → logprob: -11.00218677520752
    9. '.__' → logprob: -11.25218677520752
    10. '.is' → logprob: -11.25218677520752

Token 26: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7202333211898804
    2. ' =' → logprob: -0.9702333211898804
    3. '.' → logprob: -2.09523344039917
    4. '<|end|>' → logprob: -5.34523344039917
    5. ')' → logprob: -6.09523344039917
    6. ',' → logprob: -6.22023344039917
    7. ' ' → logprob: -7.22023344039917
    8. '<|end|>' → logprob: -7.97023344039917
    9. '   ' → logprob: -8.470232963562012
    10. '_' → logprob: -8.845232963562012

Token 27: ' index' (ID: 3472)
  Prédit: ' index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' index' → logprob: -0.20141790807247162
    2. 'index' → logprob: -1.7014179229736328
    3. '	index' → logprob: -13.326417922973633
    4. '#index' → logprob: -14.201417922973633
    5. '=index' → logprob: -14.201417922973633
    6. ' ' → logprob: -14.701417922973633
    7. '(index' → logprob: -14.951417922973633
    8. '[index' → logprob: -15.326417922973633
    9. ' ' → logprob: -16.201417922973633
    10. '@index' → logprob: -16.326417922973633

Token 28: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14727121591567993
    2. '<|end|>' → logprob: -2.772271156311035
    3. 'newline' → logprob: -4.272271156311035
    4. ' ' → logprob: -4.522271156311035
    5. '.' → logprob: -4.772271156311035
    6. '        
' → logprob: -5.022271156311035
    7. '   ' → logprob: -5.022271156311035
    8. '\' → logprob: -5.272271156311035
    9. '
' → logprob: -5.772271156311035
    10. '\n' → logprob: -5.897271156311035

Token 29: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18177522718906403
    2. '<|end|>' → logprob: -2.3067753314971924
    3. '
' → logprob: -4.056775093078613
    4. '.' → logprob: -4.681775093078613
    5. 'newline' → logprob: -5.056775093078613
    6. ' ' → logprob: -5.306775093078613
    7. '_' → logprob: -5.556775093078613
    8. ',' → logprob: -5.556775093078613
    9. '   ' → logprob: -5.931775093078613
    10. ')' → logprob: -5.931775093078613

Token 30: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.6121228933334351
    2. ' self' → logprob: -0.8621228933334351
    3. '       ' → logprob: -3.3621230125427246
    4. '        ' → logprob: -7.362123012542725
    5. ' ' → logprob: -8.862122535705566
    6. ' ' → logprob: -9.862122535705566
    7. '    ' → logprob: -11.612122535705566
    8. '        
' → logprob: -11.737122535705566
    9. '   ' → logprob: -11.987122535705566
    10. '	self' → logprob: -12.237122535705566

Token 31: '.release' (ID: 50070)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.05804915726184845
    2. '.release' → logprob: -2.933049201965332
    3. '.capacity' → logprob: -5.933049201965332
    4. ' .' → logprob: -8.933049201965332
    5. '.re' → logprob: -9.933049201965332
    6. '.index' → logprob: -10.058049201965332
    7. '.cap' → logprob: -10.183049201965332
    8. '.Release' → logprob: -10.308049201965332
    9. '.space' → logprob: -10.683049201965332
    10. '.value' → logprob: -10.808049201965332

Token 32: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6474876999855042
    2. ' =' → logprob: -1.0224876403808594
    3. ' ==' → logprob: -3.3974876403808594
    4. '_' → logprob: -3.3974876403808594
    5. ' ' → logprob: -4.147487640380859
    6. ')' → logprob: -4.897487640380859
    7. '.' → logprob: -5.022487640380859
    8. ',' → logprob: -5.022487640380859
    9. '<|end|>' → logprob: -5.522487640380859
    10. '<|end|>' → logprob: -6.522487640380859

Token 33: ' release' (ID: 8232)
  Prédit: ' release'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' release' → logprob: -0.014168561436235905
    2. 'release' → logprob: -4.264168739318848
    3. ' ' → logprob: -12.514168739318848
    4. ' ' → logprob: -14.139168739318848
    5. '_release' → logprob: -14.889168739318848
    6. '.release' → logprob: -15.264168739318848
    7. 'Release' → logprob: -17.76416778564453
    8. '    ' → logprob: -17.88916778564453
    9. '0' → logprob: -18.26416778564453
    10. '```' → logprob: -18.38916778564453

Token 34: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05214839056134224
    2. '<|end|>' → logprob: -3.0521483421325684
    3. '
' → logprob: -6.802148342132568
    4. 'self' → logprob: -6.927148342132568
    5. '        
' → logprob: -7.427148342132568
    6. ' 
' → logprob: -9.052148818969727
    7. 'newline' → logprob: -9.177148818969727
    8. '\' → logprob: -9.302148818969727
    9. '        ' → logprob: -9.302148818969727
    10. ' ' → logprob: -9.427148818969727

Token 35: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009704149328172207
    2. '<|end|>' → logprob: -5.384704113006592
    3. '        
' → logprob: -6.134704113006592
    4. '\' → logprob: -7.384704113006592
    5. 'self' → logprob: -7.509704113006592
    6. '```' → logprob: -7.884704113006592
    7. '
' → logprob: -8.38470458984375
    8. '\n' → logprob: -8.75970458984375
    9. '        ' → logprob: -8.75970458984375
    10. 'newline' → logprob: -8.75970458984375

Token 36: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08325114101171494
    2. 'self' (adapté à ' self') → logprob: -2.7082512378692627
    3. ' self' → logprob: -4.333250999450684
    4. '        ' → logprob: -10.708250999450684
    5. '      ' → logprob: -11.333250999450684
    6. '   ' → logprob: -11.458250999450684
    7. '	self' → logprob: -11.458250999450684
    8. ' ' → logprob: -11.583250999450684
    9. '```' → logprob: -11.708250999450684
    10. '
' → logprob: -11.833250999450684

Token 37: '.capacity' (ID: 124122)
  Prédit: '.capacity'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.capacity' → logprob: -0.525396466255188
    2. '.' → logprob: -0.900396466255188
    3. '.cap' → logprob: -7.025396347045898
    4. 'capacity' → logprob: -7.275396347045898
    5. '_capacity' → logprob: -7.900396347045898
    6. '._' → logprob: -9.025396347045898
    7. ' .' → logprob: -9.525396347045898
    8. '_cap' → logprob: -10.150396347045898
    9. ' capacity' → logprob: -10.775396347045898
    10. '_' → logprob: -10.775396347045898

Token 38: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07914093881845474
    2. '=' → logprob: -2.5791409015655518
    3. '<|end|>' → logprob: -8.454140663146973
    4. ' ' → logprob: -10.954140663146973
    5. ' =
' → logprob: -11.454140663146973
    6. ')' → logprob: -12.579140663146973
    7. '<|end|>' → logprob: -13.204140663146973
    8. '   ' → logprob: -13.454140663146973
    9. '_' → logprob: -13.954140663146973
    10. ',' → logprob: -15.204140663146973

Token 39: ' capacity' (ID: 12241)
  Prédit: ' capacity'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' capacity' → logprob: -0.17975617945194244
    2. 'capacity' → logprob: -1.8047561645507812
    3. '0' → logprob: -12.304756164550781
    4. 'cap' → logprob: -13.304756164550781
    5. '.capacity' → logprob: -13.679756164550781
    6. ' ' → logprob: -13.804756164550781
    7. ' ' → logprob: -14.179756164550781
    8. '_capacity' → logprob: -14.679756164550781
    9. '(cap' → logprob: -14.929756164550781
    10. 'capac' → logprob: -15.054756164550781

Token 40: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7813532948493958
    2. '<|end|>' → logprob: -0.7813532948493958
    3. ':' → logprob: -3.406353235244751
    4. '   ' → logprob: -4.03135347366333
    5. '\n' → logprob: -4.78135347366333
    6. '.' → logprob: -5.40635347366333
    7. '<|end|>' → logprob: -5.90635347366333
    8. '    
' → logprob: -5.90635347366333
    9. '\' → logprob: -6.03135347366333
    10. ',' → logprob: -6.15635347366333

Token 41: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06200197711586952
    2. '   ' → logprob: -3.062001943588257
    3. '<|end|>' → logprob: -4.812002182006836
    4. '    
' → logprob: -6.812002182006836
    5. ' 
' → logprob: -7.437002182006836
    6. '\n' → logprob: -7.812002182006836
    7. '```' → logprob: -7.812002182006836
    8. ':' → logprob: -8.062002182006836
    9. 'n' → logprob: -8.187002182006836
    10. '#' → logprob: -8.187002182006836

Token 42: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.026256758719682693
    2. '   ' → logprob: -3.901256799697876
    3. 'd' → logprob: -5.776256561279297
    4. ' def' → logprob: -6.151256561279297
    5. '    
' → logprob: -8.276256561279297
    6. ' ' → logprob: -10.151256561279297
    7. '```' → logprob: -10.401256561279297
    8. '
' → logprob: -10.526256561279297
    9. '       ' → logprob: -10.526256561279297
    10. '    ' → logprob: -10.901256561279297

Token 43: ' can' (ID: 665)
  Prédit: ' space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' space' → logprob: -0.4560104012489319
    2. ' ' → logprob: -1.831010341644287
    3. '_' → logprob: -2.706010341644287
    4. ' __' → logprob: -2.831010341644287
    5. ' get' → logprob: -4.456010341644287
    6. ' release' → logprob: -4.456010341644287
    7. ' _' → logprob: -4.706010341644287
    8. 'space' → logprob: -4.831010341644287
    9. ' calculate' → logprob: -5.081010341644287
    10. ' a' → logprob: -5.581010341644287

Token 44: '_sur' (ID: 160451)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.013485362753272057
    2. ' _' → logprob: -5.263485431671143
    3. '_release' → logprob: -5.638485431671143
    4. 'Release' → logprob: -6.763485431671143
    5. '_space' → logprob: -7.263485431671143
    6. '_re' → logprob: -8.263484954833984
    7. '_merge' → logprob: -8.388484954833984
    8. ' ' → logprob: -8.513484954833984
    9. '_accept' → logprob: -8.763484954833984
    10. '_expand' → logprob: -9.138484954833984

Token 45: 'vive' (ID: 131935)
  Prédit: 'vive'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vive' → logprob: -0.0005071613122709095
    2. ' vive' → logprob: -8.875507354736328
    3. 'v' → logprob: -9.250507354736328
    4. '_v' → logprob: -9.875507354736328
    5. '_' → logprob: -10.375507354736328
    6. '#' → logprob: -10.625507354736328
    7. 'rive' → logprob: -10.625507354736328
    8. 'pass' → logprob: -10.750507354736328
    9. 'vice' → logprob: -10.750507354736328
    10. 'face' → logprob: -10.750507354736328

Token 46: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08032896369695663
    2. '(self' → logprob: -2.955328941345215
    3. '_' → logprob: -3.830328941345215
    4. ' (' → logprob: -5.955328941345215
    5. '(
' → logprob: -8.330328941345215
    6. '_(' → logprob: -9.330328941345215
    7. '()' → logprob: -9.580328941345215
    8. '_space' → logprob: -9.580328941345215
    9. 'self' → logprob: -9.955328941345215
    10. 's' → logprob: -10.080328941345215

Token 47: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4530908465385437
    2. '):' → logprob: -1.2030909061431885
    3. ')' → logprob: -3.3280909061431885
    4. ' ):' → logprob: -4.328090667724609
    5. 'self' → logprob: -5.328090667724609
    6. ' ,' → logprob: -5.578090667724609
    7. ' )' → logprob: -5.953090667724609
    8. ' ' → logprob: -6.328090667724609
    9. '(self' → logprob: -7.578090667724609
    10. '(' → logprob: -7.703090667724609

Token 48: ' total' (ID: 3609)
  Prédit: ' environment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' environment' → logprob: -1.2674988508224487
    2. ' self' → logprob: -1.7674988508224487
    3. ' nutrient' → logprob: -2.0174989700317383
    4. ' )' → logprob: -2.1424989700317383
    5. ' other' → logprob: -2.2674989700317383
    6. ' capacity' → logprob: -2.7674989700317383
    7. ' world' → logprob: -4.142498970031738
    8. ' current' → logprob: -4.642498970031738
    9. ' resource' → logprob: -4.642498970031738
    10. ' survival' → logprob: -5.017498970031738

Token 49: '_release' (ID: 59589)
  Prédit: '_release'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_release' → logprob: -0.4584824740886688
    2. '_capacity' → logprob: -1.9584825038909912
    3. '_' → logprob: -2.333482503890991
    4. ' )' → logprob: -3.208482503890991
    5. ')' → logprob: -3.833482503890991
    6. '_sur' → logprob: -3.958482503890991
    7. '_resources' → logprob: -4.458482265472412
    8. '_space' → logprob: -5.083482265472412
    9. ' >=' → logprob: -6.083482265472412
    10. '):' → logprob: -6.208482265472412

Token 50: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.593374490737915
    2. ',' → logprob: -1.093374490737915
    3. ' ):' → logprob: -2.968374490737915
    4. ' ,' → logprob: -3.468374490737915
    5. ')' → logprob: -4.343374252319336
    6. ' )' → logprob: -5.593374252319336
    7. ' ' → logprob: -5.718374252319336
    8. ' >=' → logprob: -5.718374252319336
    9. ':' → logprob: -5.843374252319336
    10. '):
' → logprob: -6.968374252319336

Token 51: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.302634596824646
    2. ' )' → logprob: -2.1776347160339355
    3. 'int' → logprob: -2.4276347160339355
    4. ')' → logprob: -3.3026347160339355
    5. ' ' → logprob: -4.6776347160339355
    6. ' ):' → logprob: -4.6776347160339355
    7. '):' → logprob: -6.3026347160339355
    8. ',' → logprob: -7.3026347160339355
    9. ':int' → logprob: -7.6776347160339355
    10. ' total' → logprob: -8.552634239196777

Token 52: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6936986446380615
    2. '):' → logprob: -0.6936986446380615
    3. ',' → logprob: -8.06869888305664
    4. '):
' → logprob: -9.31869888305664
    5. ':' → logprob: -9.69369888305664
    6. ')->' → logprob: -10.69369888305664
    7. ' ):' → logprob: -10.69369888305664
    8. '   ' → logprob: -10.81869888305664
    9. ' )' → logprob: -11.44369888305664
    10. ')>' → logprob: -12.31869888305664

Token 53: ' count' (ID: 3605)
  Prédit: ' capacity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' capacity' → logprob: -1.4069573879241943
    2. ' total' → logprob: -1.9069573879241943
    3. ' current' → logprob: -2.0319573879241943
    4. ' available' → logprob: -2.6569573879241943
    5. ' remaining' → logprob: -2.6569573879241943
    6. ' )' → logprob: -3.0319573879241943
    7. ' threshold' → logprob: -3.0319573879241943
    8. ' other' → logprob: -3.5319573879241943
    9. ' max' → logprob: -3.6569573879241943
    10. ' required' → logprob: -3.9069573879241943

Token 54: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.42134132981300354
    2. ':' → logprob: -1.4213413000106812
    3. ')' → logprob: -2.5463414192199707
    4. 's' → logprob: -4.421341419219971
    5. ' ):' → logprob: -5.546341419219971
    6. '_' → logprob: -6.296341419219971
    7. ',' → logprob: -6.296341419219971
    8. ' ' → logprob: -7.046341419219971
    9. '_sur' → logprob: -7.296341419219971
    10. ' )' → logprob: -7.296341419219971

Token 55: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.1905839741230011
    2. 'int' → logprob: -2.6905839443206787
    3. ' )' → logprob: -3.0655839443206787
    4. ')' → logprob: -3.1905839443206787
    5. ' ):' → logprob: -4.815584182739258
    6. '):' → logprob: -5.565584182739258
    7. ' ' → logprob: -5.815584182739258
    8. ':int' → logprob: -7.565584182739258
    9. ' ):
' → logprob: -7.565584182739258
    10. '[int' → logprob: -7.940584182739258

Token 56: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1135844960808754
    2. ')' → logprob: -2.238584518432617
    3. ',' → logprob: -7.863584518432617
    4. '   ' → logprob: -8.738584518432617
    5. '):
' → logprob: -8.863584518432617
    6. ')->' → logprob: -10.613584518432617
    7. ' ):' → logprob: -10.738584518432617
    8. ':' → logprob: -11.863584518432617
    9. '       ' → logprob: -12.113584518432617
    10. ' ' → logprob: -13.113584518432617

Token 57: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0021954562980681658
    2. '):' → logprob: -6.502195358276367
    3. ' ->' → logprob: -8.752195358276367
    4. ' :' → logprob: -9.127195358276367
    5. ':return' → logprob: -9.252195358276367
    6. '():' → logprob: -9.377195358276367
    7. '       ' → logprob: -9.502195358276367
    8. '   ' → logprob: -9.627195358276367
    9. '->' → logprob: -10.502195358276367
    10. ')' → logprob: -10.627195358276367

Token 58: ' bool' (ID: 3792)
  Prédit: ' bool'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bool' → logprob: -0.013139873743057251
    2. ' ' → logprob: -4.513139724731445
    3. 'bool' → logprob: -6.388139724731445
    4. ' ' → logprob: -8.888139724731445
    5. '  ' → logprob: -9.263139724731445
    6. ' '' → logprob: -10.013139724731445
    7. ' "' → logprob: -10.138139724731445
    8. '	bool' → logprob: -10.263139724731445
    9. '   ' → logprob: -11.763139724731445
    10. ' None' → logprob: -11.888139724731445

Token 59: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00011188744247192517
    2. '):' → logprob: -9.87511157989502
    3. '():' → logprob: -10.62511157989502
    4. ':
' → logprob: -10.75011157989502
    5. ':return' → logprob: -12.25011157989502
    6. ':**' → logprob: -12.75011157989502
    7. ' :' → logprob: -13.50011157989502
    8. '       ' → logprob: -13.75011157989502
    9. '>:' → logprob: -14.25011157989502
    10. ',' → logprob: -14.25011157989502

Token 60: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0035053957253694534
    2. '   ' → logprob: -6.753505229949951
    3. ' ' → logprob: -7.878505229949951
    4. ':' → logprob: -7.878505229949951
    5. ' return' → logprob: -7.878505229949951
    6. '    ' → logprob: -7.878505229949951
    7. '(' → logprob: -8.25350570678711
    8. ':return' → logprob: -9.62850570678711
    9. '      ' → logprob: -9.75350570678711
    10. ' :' → logprob: -10.00350570678711

Token 61: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5493443012237549
    2. ' return' → logprob: -0.9243443012237549
    3. 'return' → logprob: -4.299344062805176
    4. ' 
' → logprob: -5.674344062805176
    5. '        
' → logprob: -5.799344062805176
    6. ' ' → logprob: -6.674344062805176
    7. '   ' → logprob: -7.174344062805176
    8. '
' → logprob: -7.674344062805176
    9. '        ' → logprob: -7.799344062805176
    10. '```' → logprob: -7.799344062805176

Token 62: ' Each' (ID: 11555)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12382613122463226
    2. ' return' → logprob: -2.498826026916504
    3. 'return' → logprob: -4.248826026916504
    4. ' ' → logprob: -4.873826026916504
    5. '   ' → logprob: -5.123826026916504
    6. '        ' → logprob: -6.123826026916504
    7. '    ' → logprob: -7.248826026916504
    8. ' if' → logprob: -7.248826026916504
    9. '        
' → logprob: -7.498826026916504
    10. ' ' → logprob: -7.873826026916504

Token 63: ' micro' (ID: 10449)
  Prédit: ' release'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' release' → logprob: -0.995209276676178
    2. ' micro' → logprob: -1.1202092170715332
    3. ' microorgan' → logprob: -1.9952092170715332
    4. ' Micro' → logprob: -3.120209217071533
    5. ' space' → logprob: -4.120209217071533
    6. '_' → logprob: -4.120209217071533
    7. '_micro' → logprob: -4.245209217071533
    8. ' ' → logprob: -4.620209217071533
    9. ' unit' → logprob: -4.745209217071533
    10. 'micro' → logprob: -4.995209217071533

Token 64: 'be' (ID: 1464)
  Prédit: 'be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'be' → logprob: -0.09755519032478333
    2. 'b' → logprob: -2.722555160522461
    3. 'bial' → logprob: -4.597555160522461
    4. '   ' → logprob: -4.972555160522461
    5. 'organ' → logprob: -5.472555160522461
    6. 'bes' → logprob: -6.472555160522461
    7. '       ' → logprob: -6.597555160522461
    8. ':' → logprob: -7.597555160522461
    9. 'environment' → logprob: -8.222555160522461
    10. 's' → logprob: -8.472555160522461

Token 65: ' takes' (ID: 6948)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8725783824920654
    2. ' ' → logprob: -1.7475783824920654
    3. ''s' → logprob: -2.6225783824920654
    4. ' has' → logprob: -2.7475783824920654
    5. '   ' → logprob: -2.8725783824920654
    6. ' can' → logprob: -2.9975783824920654
    7. ' must' → logprob: -3.4975783824920654
    8. ''' → logprob: -4.3725786209106445
    9. '    ' → logprob: -4.3725786209106445
    10. ' release' → logprob: -4.3725786209106445

Token 66: ' equal' (ID: 12629)
  Prédit: ' up'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' up' → logprob: -0.3450719118118286
    2. ' a' → logprob: -2.470071792602539
    3. ' self' → logprob: -3.470071792602539
    4. ' the' → logprob: -3.595071792602539
    5. ' total' → logprob: -3.720071792602539
    6. ' ' → logprob: -3.720071792602539
    7. ' some' → logprob: -3.845071792602539
    8. ' space' → logprob: -3.970071792602539
    9. ' one' → logprob: -4.345071792602539
    10. ' an' → logprob: -4.595071792602539

Token 67: ' amount' (ID: 4527)
  Prédit: ' amount'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' amount' → logprob: -1.2842378616333008
    2. ' space' → logprob: -1.2842378616333008
    3. ' share' → logprob: -1.7842378616333008
    4. 'amount' → logprob: -2.784237861633301
    5. ' shares' → logprob: -2.784237861633301
    6. 'space' → logprob: -2.784237861633301
    7. 'portion' → logprob: -3.409237861633301
    8. 'share' → logprob: -3.909237861633301
    9. ' part' → logprob: -5.034237861633301
    10. ' portion' → logprob: -5.284237861633301

Token 68: ':' (ID: 25)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.053953930735588074
    2. '       ' → logprob: -3.8039538860321045
    3. 'of' → logprob: -4.678954124450684
    4. '        ' → logprob: -4.803954124450684
    5. ' ' → logprob: -4.928954124450684
    6. '    ' → logprob: -5.803954124450684
    7. '   ' → logprob: -7.303954124450684
    8. '  ' → logprob: -7.928954124450684
    9. ' if' → logprob: -8.178954124450684
    10. '        
' → logprob: -8.928954124450684

Token 69: ' total' (ID: 3609)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.3780214488506317
    2. ' total' → logprob: -1.628021478652954
    3. ' (' → logprob: -2.878021478652954
    4. ' return' → logprob: -3.753021478652954
    5. '       ' → logprob: -4.503021240234375
    6. '(total' → logprob: -4.628021240234375
    7. 'self' → logprob: -5.628021240234375
    8. 'total' → logprob: -5.753021240234375
    9. '```' → logprob: -5.878021240234375
    10. ' ' → logprob: -6.253021240234375

Token 70: '_release' (ID: 59589)
  Prédit: '_release'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_release' → logprob: -0.0009675608016550541
    2. 'release' → logprob: -7.375967502593994
    3. '_' → logprob: -9.625967979431152
    4. ' /' → logprob: -9.625967979431152
    5. ' release' → logprob: -9.625967979431152
    6. ' _' → logprob: -9.875967979431152
    7. '/' → logprob: -10.875967979431152
    8. '_re' → logprob: -10.875967979431152
    9. '_capacity' → logprob: -11.250967979431152
    10. '```' → logprob: -11.625967979431152

Token 71: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.49547332525253296
    2. ' //' → logprob: -1.1204733848571777
    3. '/' → logprob: -2.8704733848571777
    4. '//' → logprob: -5.620473384857178
    5. ' *' → logprob: -6.745473384857178
    6. ' ' → logprob: -7.245473384857178
    7. '*' → logprob: -7.745473384857178
    8. ' >=' → logprob: -8.12047290802002
    9. '>' → logprob: -8.24547290802002
    10. '```' → logprob: -8.37047290802002

Token 72: ' count' (ID: 3605)
  Prédit: ' count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.11356320977210999
    2. 'count' → logprob: -2.238563299179077
    3. ' capacity' → logprob: -7.613563060760498
    4. 'capacity' → logprob: -9.113563537597656
    5. '(count' → logprob: -9.863563537597656
    6. ' ' → logprob: -10.488563537597656
    7. ' (' → logprob: -11.363563537597656
    8. ' max' → logprob: -11.488563537597656
    9. ' ' → logprob: -11.988563537597656
    10. '(' → logprob: -12.113563537597656

Token 73: '
' (ID: 198)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.03343658894300461
    2. '<=' → logprob: -4.6584367752075195
    3. ' ' → logprob: -5.1584367752075195
    4. ' >=' → logprob: -5.6584367752075195
    5. ' ==' → logprob: -5.9084367752075195
    6. ' *' → logprob: -5.9084367752075195
    7. ' <' → logprob: -6.1584367752075195
    8. ' and' → logprob: -6.6584367752075195
    9. ' >' → logprob: -7.0334367752075195
    10. ')' → logprob: -7.1584367752075195

Token 74: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2215251475572586
    2. ' 
' → logprob: -2.721525192260742
    3. '        
' → logprob: -2.846525192260742
    4. '
' → logprob: -3.721525192260742
    5. '<|end|>' → logprob: -4.096525192260742
    6. ' return' → logprob: -5.096525192260742
    7. '  
' → logprob: -5.346525192260742
    8. '\n' → logprob: -5.721525192260742
    9. ',' → logprob: -5.846525192260742
    10. '    
' → logprob: -5.971525192260742

Token 75: ' #' (ID: 1069)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.9095301032066345
    2. '       ' → logprob: -1.2845301628112793
    3. ' 
' → logprob: -2.0345301628112793
    4. 'return' → logprob: -2.1595301628112793
    5. '        
' → logprob: -3.7845301628112793
    6. ' ' → logprob: -4.534530162811279
    7. '
' → logprob: -4.909530162811279
    8. '\n' → logprob: -5.659530162811279
    9. '```' → logprob: -5.659530162811279
    10. '<|end|>' → logprob: -5.784530162811279

Token 76: ' Must' (ID: 20953)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.2925665080547333
    2. '       ' → logprob: -1.6675665378570557
    3. 'return' → logprob: -2.7925665378570557
    4. ' if' → logprob: -6.667566299438477
    5. ' amount' → logprob: -8.042566299438477
    6. '        ' → logprob: -8.042566299438477
    7. ' ' → logprob: -8.292566299438477
    8. '   ' → logprob: -8.417566299438477
    9. '```' → logprob: -8.542566299438477
    10. ' release' → logprob: -8.667566299438477

Token 77: ' not' (ID: 625)
  Prédit: ' be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.02442057430744171
    2. ' return' → logprob: -4.774420738220215
    3. 'be' → logprob: -5.774420738220215
    4. ' <=' → logprob: -5.774420738220215
    5. ' >=' → logprob: -6.274420738220215
    6. ' not' → logprob: -6.524420738220215
    7. ' *' → logprob: -6.649420738220215
    8. ' have' → logprob: -7.024420738220215
    9. 'return' → logprob: -7.774420738220215
    10. '>' → logprob: -7.774420738220215

Token 78: ' exceed' (ID: 23275)
  Prédit: ' exceed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' exceed' → logprob: -0.04576784372329712
    2. ' be' → logprob: -3.1707677841186523
    3. 'ex' → logprob: -6.920767784118652
    4. ' surpass' → logprob: -7.295767784118652
    5. ' ' → logprob: -7.545767784118652
    6. ' have' → logprob: -8.920767784118652
    7. '>' → logprob: -8.920767784118652
    8. ' self' → logprob: -9.920767784118652
    9. ' >' → logprob: -10.045767784118652
    10. ' return' → logprob: -10.420767784118652

Token 79: ' capacity' (ID: 12241)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.00866763386875391
    2. 'self' → logprob: -5.133667469024658
    3. ' the' → logprob: -6.508667469024658
    4. ' capacity' → logprob: -6.883667469024658
    5. ' their' → logprob: -9.758667945861816
    6. ' ' → logprob: -10.008667945861816
    7. ' its' → logprob: -10.508667945861816
    8. ' ' → logprob: -11.258667945861816
    9. ' `' → logprob: -11.258667945861816
    10. '```' → logprob: -11.258667945861816

Token 80: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.807205080986023
    2. ':' → logprob: -1.557205080986023
    3. '       ' → logprob: -1.557205080986023
    4. ' and' → logprob: -3.3072052001953125
    5. '\n' → logprob: -3.9322052001953125
    6. '<|end|>' → logprob: -4.0572052001953125
    7. '        
' → logprob: -4.5572052001953125
    8. ',' → logprob: -4.8072052001953125
    9. '   ' → logprob: -5.4322052001953125
    10. '\' → logprob: -5.4322052001953125

Token 81: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0708286240696907
    2. '
' → logprob: -2.820828676223755
    3. '        
' → logprob: -5.445828437805176
    4. '\n' → logprob: -6.320828437805176
    5. '<|end|>' → logprob: -7.570828437805176
    6. ' return' → logprob: -7.695828437805176
    7. '   ' → logprob: -8.320828437805176
    8. ':' → logprob: -8.320828437805176
    9. 'return' → logprob: -8.445828437805176
    10. '    
' → logprob: -8.445828437805176

Token 82: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.048786405473947525
    2. '
' → logprob: -3.4237864017486572
    3. 'return' (adapté à ' return') → logprob: -5.048786640167236
    4. ' return' → logprob: -5.173786640167236
    5. '        
' → logprob: -6.548786640167236
    6. ' 
' → logprob: -7.173786640167236
    7. '   ' → logprob: -8.423786163330078
    8. '\n' → logprob: -9.048786163330078
    9. '    
' → logprob: -9.048786163330078
    10. '```' → logprob: -9.423786163330078

Token 83: ' total' (ID: 3609)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.01441475935280323
    2. ' total' → logprob: -4.5144147872924805
    3. ' (' → logprob: -6.1394147872924805
    4. 'self' → logprob: -7.0144147872924805
    5. ' ' → logprob: -8.63941478729248
    6. ' ' → logprob: -9.26441478729248
    7. '(' → logprob: -11.01441478729248
    8. '(self' → logprob: -12.26441478729248
    9. 'total' → logprob: -12.26441478729248
    10. ' int' → logprob: -12.51441478729248

Token 84: '_release' (ID: 59589)
  Prédit: '_release'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_release' → logprob: -0.007940782234072685
    2. '_' → logprob: -5.132940769195557
    3. ' _' → logprob: -6.507940769195557
    4. '._' → logprob: -8.507941246032715
    5. '.' → logprob: -8.632941246032715
    6. '_re' → logprob: -10.757941246032715
    7. 'release' → logprob: -10.757941246032715
    8. '_raise' → logprob: -11.507941246032715
    9. '_sur' → logprob: -11.882941246032715
    10. '.release' → logprob: -12.007941246032715

Token 85: ' <=' (ID: 5017)
  Prédit: ' /'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.00763703603297472
    2. '/' → logprob: -4.882637023925781
    3. ' <=' → logprob: -11.257637023925781
    4. ' ' → logprob: -11.757637023925781
    5. ' ' → logprob: -12.132637023925781
    6. '   ' → logprob: -13.257637023925781
    7. '/count' → logprob: -13.882637023925781
    8. ' /
' → logprob: -15.007637023925781
    9. ' //' → logprob: -15.132637023925781
    10. '/code' → logprob: -15.382637023925781

Token 86: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.026341410353779793
    2. 'self' → logprob: -3.651341438293457
    3. '	self' → logprob: -11.401341438293457
    4. ' ' → logprob: -11.776341438293457
    5. ' count' → logprob: -12.151341438293457
    6. ' ' → logprob: -12.526341438293457
    7. '(self' → logprob: -12.526341438293457
    8. 'count' → logprob: -13.276341438293457
    9. '0' → logprob: -13.901341438293457
    10. ' (' → logprob: -14.151341438293457

Token 87: '.capacity' (ID: 124122)
  Prédit: '.capacity'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.capacity' → logprob: -0.04407895728945732
    2. '.' → logprob: -3.169079065322876
    3. '.cap' → logprob: -7.544078826904297
    4. '.release' → logprob: -8.044078826904297
    5. ' .' → logprob: -8.544078826904297
    6. 'capacity' → logprob: -10.794078826904297
    7. '.
' → logprob: -12.544078826904297
    8. '.Cap' → logprob: -13.669078826904297
    9. '.cost' → logprob: -13.919078826904297
    10. ' capacity' → logprob: -13.919078826904297

Token 88: ' *' (ID: 425)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.24399617314338684
    2. '<|end|>' → logprob: -1.9939961433410645
    3. 'and' → logprob: -3.1189961433410645
    4. ' *' → logprob: -4.4939961433410645
    5. ' ' → logprob: -4.7439961433410645
    6. '*' → logprob: -5.1189961433410645
    7. '<|end|>' → logprob: -5.6189961433410645
    8. '
' → logprob: -5.8689961433410645
    9. ' or' → logprob: -6.9939961433410645
    10. '   ' → logprob: -8.118996620178223

Token 89: ' count' (ID: 3605)
  Prédit: ' count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.005238736979663372
    2. 'count' → logprob: -5.2552385330200195
    3. ' ' → logprob: -12.75523853302002
    4. '	count' → logprob: -13.38023853302002
    5. '(count' → logprob: -15.75523853302002
    6. ' ' → logprob: -16.380239486694336
    7. ' coun' → logprob: -16.755239486694336
    8. '$count' → logprob: -16.755239486694336
    9. '=count' → logprob: -16.880239486694336
    10. '[count' → logprob: -16.880239486694336

Token 90: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 91: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 92: ' Pet' (ID: 12824)
  Prédit: ' Colony'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Colony' → logprob: -0.7375128865242004
    2. ' Micro' → logprob: -1.3625128269195557
    3. ' Pet' → logprob: -1.9875128269195557
    4. ' Environment' → logprob: -2.4875128269195557
    5. ' Solution' → logprob: -4.612513065338135
    6. ' Container' → logprob: -4.987513065338135
    7. ' Population' → logprob: -5.237513065338135
    8. ' Simulation' → logprob: -5.737513065338135
    9. ' Col' → logprob: -5.862513065338135
    10. ' Reservoir' → logprob: -5.987513065338135

Token 93: 'ri' (ID: 872)
  Prédit: 'ri'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ri' → logprob: -0.0028915368020534515
    2. ':' → logprob: -6.127891540527344
    3. 'er' → logprob: -8.377891540527344
    4. 'shop' → logprob: -9.127891540527344
    5. 'Shop' → logprob: -9.252891540527344
    6. ':
' → logprob: -10.627891540527344
    7. 'al' → logprob: -10.877891540527344
    8. 'Micro' → logprob: -10.877891540527344
    9. 'roleum' → logprob: -11.502891540527344
    10. 's' → logprob: -11.502891540527344

Token 94: 'Dish' (ID: 101209)
  Prédit: 'Dish'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Dish' → logprob: -0.005528404377400875
    2. ':' → logprob: -5.880528450012207
    3. ' dish' → logprob: -6.755528450012207
    4. 'D' → logprob: -7.005528450012207
    5. ' ' → logprob: -7.630528450012207
    6. ' Dish' → logprob: -10.005528450012207
    7. 'Net' → logprob: -10.380528450012207
    8. '_' → logprob: -11.255528450012207
    9. '.' → logprob: -11.505528450012207
    10. 'Plate' → logprob: -11.505528450012207

Token 95: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00013810492237098515
    2. '<|end|>' → logprob: -9.875138282775879
    3. ':
' → logprob: -10.500138282775879
    4. '(' → logprob: -10.500138282775879
    5. ' :' → logprob: -11.000138282775879
    6. '):' → logprob: -12.000138282775879
    7. '():' → logprob: -12.250138282775879
    8. ':**' → logprob: -14.375138282775879
    9. '<|end|>' → logprob: -14.375138282775879
    10. ',' → logprob: -15.000138282775879

Token 96: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009705687873065472
    2. ' def' → logprob: -5.259705543518066
    3. '
' → logprob: -6.884705543518066
    4. '(' → logprob: -6.884705543518066
    5. 'def' → logprob: -7.509705543518066
    6. '    
' → logprob: -7.759705543518066
    7. ':
' → logprob: -8.259705543518066
    8. ':' → logprob: -8.384705543518066
    9. '```' → logprob: -9.009705543518066
    10. '  
' → logprob: -9.259705543518066

Token 97: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.2950964868068695
    2. 'def' (adapté à ' def') → logprob: -1.420096516609192
    3. '   ' → logprob: -4.295096397399902
    4. 'class' → logprob: -8.920096397399902
    5. '    ' → logprob: -10.045096397399902
    6. ' ' → logprob: -11.295096397399902
    7. '```' → logprob: -12.045096397399902
    8. '	def' → logprob: -12.420096397399902
    9. 'de' → logprob: -12.545096397399902
    10. ' class' → logprob: -12.545096397399902

Token 98: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.24514327943325043
    2. '_' → logprob: -2.370143175125122
    3. ' _' → logprob: -2.370143175125122
    4. ' ' → logprob: -3.745143175125122
    5. '_init' → logprob: -5.370143413543701
    6. '__' → logprob: -6.495143413543701
    7. ' ```' → logprob: -7.995143413543701
    8. ' init' → logprob: -9.245142936706543
    9. ' ___' → logprob: -9.745142936706543
    10. 'itialize' → logprob: -10.245142936706543

Token 99: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.009991695173084736
    2. '__' → logprob: -4.634991645812988
    3. '```' → logprob: -9.259991645812988
    4. '_init' → logprob: -9.884991645812988
    5. ' __' → logprob: -10.759991645812988
    6. ' init' → logprob: -11.009991645812988
    7. '   ' → logprob: -11.884991645812988
    8. 'class' → logprob: -12.009991645812988
    9. 'ini' → logprob: -12.259991645812988
    10. 'def' → logprob: -12.259991645812988

Token 100: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0017760884948074818
    2. '__' → logprob: -6.376776218414307
    3. '__(
' → logprob: -9.751775741577148
    4. '(self' → logprob: -11.751775741577148
    5. '__((' → logprob: -12.251775741577148
    6. '_(' → logprob: -13.626775741577148
    7. '__('' → logprob: -14.626775741577148
    8. '_' → logprob: -14.751775741577148
    9. '(' → logprob: -14.876775741577148
    10. '__("' → logprob: -15.376775741577148

Token 101: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00218987581320107
    2. ' self' → logprob: -6.127190113067627
    3. ')' → logprob: -12.627189636230469
    4. '
' → logprob: -15.002189636230469
    5. '   ' → logprob: -15.127189636230469
    6. '0' → logprob: -15.377189636230469
    7. '(self' → logprob: -15.752189636230469
    8. ' ' → logprob: -15.877189636230469
    9. '	self' → logprob: -16.25218963623047
    10. '

' → logprob: -16.37718963623047

Token 102: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001254634466022253
    2. ' ,' → logprob: -6.751254558563232
    3. 'self' → logprob: -9.87625503540039
    4. ')' → logprob: -10.62625503540039
    5. ',self' → logprob: -12.75125503540039
    6. ' ' → logprob: -13.87625503540039
    7. ' self' → logprob: -14.00125503540039
    8. '<|end|>' → logprob: -14.37625503540039
    9. '‌,' → logprob: -14.62625503540039
    10. '(self' → logprob: -14.75125503540039

Token 103: ' microbes' (ID: 156044)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -1.1709145307540894
    2. 'self' → logprob: -1.2959145307540894
    3. ' microbes' → logprob: -1.6709145307540894
    4. ' capacity' → logprob: -1.9209145307540894
    5. ')' → logprob: -3.795914649963379
    6. 'capacity' → logprob: -4.045914649963379
    7. ' total' → logprob: -4.670914649963379
    8. 'micro' → logprob: -5.170914649963379
    9. ' size' → logprob: -5.295914649963379
    10. ' micro' → logprob: -5.420914649963379

Token 104: '):
' (ID: 1883)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20512612164020538
    2. '):' → logprob: -1.705126166343689
    3. ',' → logprob: -5.8301262855529785
    4. '):
' → logprob: -7.8301262855529785
    5. ')' → logprob: -8.58012580871582
    6. ' ):' → logprob: -9.70512580871582
    7. '=None' → logprob: -10.08012580871582
    8. ':list' → logprob: -10.95512580871582
    9. ' :' → logprob: -11.08012580871582
    10. '=[]' → logprob: -11.33012580871582

Token 105: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009376663947477937
    2. ':' → logprob: -7.625937461853027
    3. 'self' → logprob: -8.500937461853027
    4. ' self' → logprob: -9.375937461853027
    5. ',' → logprob: -9.750937461853027
    6. '<|end|>' → logprob: -9.750937461853027
    7. '   ' → logprob: -11.875937461853027
    8. '        
' → logprob: -11.875937461853027
    9. '(self' → logprob: -12.250937461853027
    10. ':
' → logprob: -12.250937461853027

Token 106: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.20779895782470703
    2. 'self' (adapté à ' self') → logprob: -1.707798957824707
    3. '       ' → logprob: -5.082798957824707
    4. '   ' → logprob: -9.207798957824707
    5. ' ' → logprob: -9.832798957824707
    6. '	self' → logprob: -12.082798957824707
    7. '  ' → logprob: -14.332798957824707
    8. ' ' → logprob: -14.332798957824707
    9. '    ' → logprob: -14.457798957824707
    10. '     ' → logprob: -14.832798957824707

Token 107: '.micro' (ID: 104704)
  Prédit: '.micro'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.micro' → logprob: -0.002401339588686824
    2. '.' → logprob: -6.502401351928711
    3. '.m' → logprob: -7.127401351928711
    4. ' .' → logprob: -9.377401351928711
    5. '.mi' → logprob: -13.252401351928711
    6. ' =' → logprob: -13.252401351928711
    7. '.mc' → logprob: -13.502401351928711
    8. '_micro' → logprob: -13.752401351928711
    9. '.м' → logprob: -14.252401351928711
    10. '.mar' → logprob: -15.002401351928711

Token 108: 'bes' (ID: 13639)
  Prédit: 'bes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bes' → logprob: -0.001019471324980259
    2. 'be' → logprob: -7.251019477844238
    3. '   ' → logprob: -9.751019477844238
    4. '```' → logprob: -9.876019477844238
    5. 'ob' → logprob: -10.001019477844238
    6. 'bi' → logprob: -11.251019477844238
    7. 'bio' → logprob: -11.501019477844238
    8. 'bial' → logprob: -11.501019477844238
    9. 'beg' → logprob: -11.626019477844238
    10. '
' → logprob: -11.626019477844238

Token 109: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004623087588697672
    2. '=' → logprob: -5.379622936248779
    3. ' ' → logprob: -13.379623413085938
    4. '    ' → logprob: -14.129623413085938
    5. '   ' → logprob: -14.504623413085938
    6. '.' → logprob: -17.004623413085938
    7. '  ' → logprob: -17.129623413085938
    8. '.extend' → logprob: -18.129623413085938
    9. '_' → logprob: -18.379623413085938
    10. ' =
' → logprob: -18.629623413085938

Token 110: ' microbes' (ID: 156044)
  Prédit: ' microbes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' microbes' → logprob: -0.11496898531913757
    2. 'micro' → logprob: -2.23996901512146
    3. 'mic' → logprob: -7.114968776702881
    4. ' micro' → logprob: -7.239968776702881
    5. ' microorganisms' → logprob: -7.864968776702881
    6. ' ' → logprob: -9.239969253540039
    7. ' microbial' → logprob: -10.739969253540039
    8. 'mik' → logprob: -11.239969253540039
    9. ' microbi' → logprob: -11.239969253540039
    10. '[]' → logprob: -11.489969253540039

Token 111: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.012637254782021046
    2. '<|end|>' → logprob: -4.512637138366699
    3. '    
' → logprob: -7.637637138366699
    4. '

' → logprob: -7.762637138366699
    5. '   ' → logprob: -8.0126371383667
    6. ' 
' → logprob: -9.0126371383667
    7. '<|end|>' → logprob: -9.2626371383667
    8. '  
' → logprob: -10.5126371383667
    9. '       ' → logprob: -10.5126371383667
    10. '        
' → logprob: -11.0126371383667

Token 112: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.21345658600330353
    2. '   ' → logprob: -2.213456630706787
    3. '<|end|>' → logprob: -2.713456630706787
    4. '    
' → logprob: -4.963456630706787
    5. '

' → logprob: -5.713456630706787
    6. '<|end|>' → logprob: -5.963456630706787
    7. ' def' → logprob: -7.088456630706787
    8. '  
' → logprob: -7.463456630706787
    9. 'def' → logprob: -7.463456630706787
    10. ' ' → logprob: -7.588456630706787

Token 113: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.27386876940727234
    2. ' self' → logprob: -1.7738687992095947
    3. '       ' → logprob: -3.1488687992095947
    4. 'def' → logprob: -4.148868560791016
    5. '   ' → logprob: -4.773868560791016
    6. '
' → logprob: -7.648868560791016
    7. ' ' → logprob: -7.648868560791016
    8. '        
' → logprob: -8.023868560791016
    9. ' def' → logprob: -8.648868560791016
    10. 'import' → logprob: -8.648868560791016

Token 114: '.N' (ID: 4439)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.42335715889930725
    2. '._' → logprob: -2.2983572483062744
    3. ' .' → logprob: -2.4233572483062744
    4. '_count' → logprob: -3.0483572483062744
    5. '.total' → logprob: -3.4233572483062744
    6. '.count' → logprob: -3.7983572483062744
    7. '.size' → logprob: -4.673357009887695
    8. '.current' → logprob: -5.173357009887695
    9. '.release' → logprob: -5.173357009887695
    10. '_total' → logprob: -5.298357009887695

Token 115: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018255416303873062
    2. '=' → logprob: -4.018255233764648
    3. ' ' → logprob: -9.643255233764648
    4. '<|end|>' → logprob: -10.893255233764648
    5. '=len' → logprob: -11.393255233764648
    6. ',' → logprob: -13.018255233764648
    7. '_' → logprob: -13.268255233764648
    8. '  ' → logprob: -13.393255233764648
    9. '=int' → logprob: -13.768255233764648
    10. '   ' → logprob: -14.143255233764648

Token 116: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.008615399710834026
    2. 'len' → logprob: -4.758615493774414
    3. '	len' → logprob: -14.633615493774414
    4. '(len' → logprob: -15.133615493774414
    5. '=len' → logprob: -16.133615493774414
    6. '[len' → logprob: -17.258615493774414
    7. ',len' → logprob: -19.008615493774414
    8. '<len' → logprob: -19.133615493774414
    9. ' ' → logprob: -19.258615493774414
    10. '<|end|>' → logprob: -19.883615493774414

Token 117: '(m' (ID: 2145)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.611251950263977
    2. '(m' → logprob: -0.861251950263977
    3. '(' → logprob: -3.3612518310546875
    4. '(s' → logprob: -13.111251831054688
    5. '(
' → logprob: -14.111251831054688
    6. ' (' → logprob: -14.111251831054688
    7. '(this' → logprob: -15.236251831054688
    8. '(

' → logprob: -15.486251831054688
    9. 'self' → logprob: -16.236251831054688
    10. '(mi' → logprob: -16.486251831054688

Token 118: 'icro' (ID: 4031)
  Prédit: 'icro'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icro' → logprob: -0.0002003218833124265
    2. 'self' → logprob: -9.500200271606445
    3. 'micro' → logprob: -9.875200271606445
    4. 'ic' → logprob: -9.875200271606445
    5. '```' → logprob: -11.750200271606445
    6. 'icrobial' → logprob: -12.250200271606445
    7. '   ' → logprob: -13.000200271606445
    8. '(self' → logprob: -13.000200271606445
    9. ' microbes' → logprob: -13.250200271606445
    10. ' ' → logprob: -13.875200271606445

Token 119: 'bes' (ID: 13639)
  Prédit: 'bes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bes' → logprob: -0.0017013642936944962
    2. 'be' → logprob: -6.751701354980469
    3. 'b' → logprob: -8.751701354980469
    4. 'es' → logprob: -9.251701354980469
    5. '```' → logprob: -9.376701354980469
    6. '   ' → logprob: -9.626701354980469
    7. 'ob' → logprob: -9.876701354980469
    8. ' ' → logprob: -11.501701354980469
    9. ')' → logprob: -11.501701354980469
    10. 'ibes' → logprob: -12.126701354980469

Token 120: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.7252845029579476e-05
    2. ' )' → logprob: -10.875027656555176
    3. ')
' → logprob: -12.750027656555176
    4. '<|end|>' → logprob: -12.875027656555176
    5. '       ' → logprob: -13.125027656555176
    6. '   ' → logprob: -15.375027656555176
    7. ' ' → logprob: -15.625027656555176
    8. '<|end|>' → logprob: -16.50002670288086
    9. '())' → logprob: -17.25002670288086
    10. '}' → logprob: -17.25002670288086

Token 121: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.14302144944667816
    2. '   ' → logprob: -2.89302134513855
    3. '<|end|>' → logprob: -2.89302134513855
    4. '

' → logprob: -4.768021583557129
    5. 'def' → logprob: -5.143021583557129
    6. '    
' → logprob: -5.268021583557129
    7. ' def' → logprob: -6.643021583557129
    8. '<|end|>' → logprob: -7.518021583557129
    9. ' 
' → logprob: -7.893021583557129
    10. '
    
' → logprob: -9.018021583557129

Token 122: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.004788357764482498
    2. ' def' → logprob: -5.379788398742676
    3. '   ' → logprob: -8.754788398742676
    4. '
' → logprob: -12.004788398742676
    5. ' ' → logprob: -13.629788398742676
    6. 'd' → logprob: -14.004788398742676
    7. '    
' → logprob: -14.129788398742676
    8. 'de' → logprob: -14.254788398742676
    9. '

' → logprob: -15.254788398742676
    10. '	def' → logprob: -15.879788398742676

Token 123: ' max' (ID: 2999)
  Prédit: ' maximize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' maximize' → logprob: -1.4914252758026123
    2. ' can' → logprob: -1.8664252758026123
    3. ' find' → logprob: -1.8664252758026123
    4. ' max' → logprob: -1.9914252758026123
    5. ' simulate' → logprob: -2.1164252758026123
    6. ' survive' → logprob: -3.2414252758026123
    7. ' optimize' → logprob: -3.7414252758026123
    8. ' get' → logprob: -3.7414252758026123
    9. ' distribute' → logprob: -4.366425514221191
    10. 'simulate' → logprob: -4.491425514221191

Token 124: '_sur' (ID: 160451)
  Prédit: '_sur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sur' → logprob: -0.016995849087834358
    2. '_release' → logprob: -4.766995906829834
    3. '_' → logprob: -6.141995906829834
    4. '_micro' → logprob: -6.266995906829834
    5. '_re' → logprob: -6.891995906829834
    6. '_s' → logprob: -6.891995906829834
    7. '_capacity' → logprob: -8.016995429992676
    8. '_count' → logprob: -8.266995429992676
    9. '_safe' → logprob: -8.391995429992676
    10. '_alive' → logprob: -8.516995429992676

Token 125: 'viv' (ID: 37442)
  Prédit: 'vive'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vive' → logprob: -0.14618366956710815
    2. 'ive' → logprob: -2.146183729171753
    3. 'iv' → logprob: -5.396183490753174
    4. 'vival' → logprob: -5.646183490753174
    5. 'viv' → logprob: -5.771183490753174
    6. 'ivable' → logprob: -5.771183490753174
    7. 'v' → logprob: -6.146183490753174
    8. 'able' → logprob: -7.521183490753174
    9. 'ival' → logprob: -7.896183490753174
    10. 'vi' → logprob: -8.271183967590332

Token 126: 'ors' (ID: 914)
  Prédit: 'ive'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ive' → logprob: -0.13937479257583618
    2. 'e' → logprob: -2.5143747329711914
    3. 'able' → logprob: -3.2643747329711914
    4. 'iving' → logprob: -5.889374732971191
    5. 'ivable' → logprob: -5.889374732971191
    6. 'ors' → logprob: -6.264374732971191
    7. 'ival' → logprob: -7.139374732971191
    8. 'al' → logprob: -7.389374732971191
    9. 've' → logprob: -7.764374732971191
    10. 'ing' → logprob: -7.889374732971191

Token 127: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0001487140398239717
    2. '(' → logprob: -9.25014877319336
    3. ' (' → logprob: -9.87514877319336
    4. 'self' → logprob: -14.87514877319336
    5. '(s' → logprob: -15.37514877319336
    6. '   ' → logprob: -15.75014877319336
    7. '(
' → logprob: -15.87514877319336
    8. ' self' → logprob: -15.87514877319336
    9. ' ' → logprob: -17.37514877319336
    10. '(sel' → logprob: -17.62514877319336

Token 128: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7492993474006653
    2. '(self' → logprob: -0.7492993474006653
    3. 'self' → logprob: -3.6242992877960205
    4. ' self' → logprob: -4.7492995262146
    5. '):
' → logprob: -5.4992995262146
    6. ' (' → logprob: -5.6242995262146
    7. ' ,' → logprob: -5.7492995262146
    8. ')' → logprob: -5.7492995262146
    9. '):' → logprob: -6.4992995262146
    10. '   ' → logprob: -6.9992995262146

Token 129: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0009158630855381489
    2. '(' → logprob: -7.125916004180908
    3. ':' → logprob: -10.50091552734375
    4. ' (' → logprob: -10.62591552734375
    5. 'self' → logprob: -10.75091552734375
    6. '       ' → logprob: -10.75091552734375
    7. '(
' → logprob: -12.25091552734375
    8. '   ' → logprob: -12.37591552734375
    9. ' self' → logprob: -12.75091552734375
    10. ':self' → logprob: -14.00091552734375

Token 130: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.17988832294940948
    2. 'int' → logprob: -1.804888367652893
    3. ' ' → logprob: -9.804888725280762
    4. '   ' → logprob: -10.554888725280762
    5. '(int' → logprob: -11.054888725280762
    6. ' None' → logprob: -11.679888725280762
    7. ' List' → logprob: -11.804888725280762
    8. ' Optional' → logprob: -11.804888725280762
    9. ' list' → logprob: -12.304888725280762
    10. 'List' → logprob: -13.304888725280762

Token 131: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0550004243850708
    2. ':
' → logprob: -2.9300003051757812
    3. '       ' → logprob: -9.555000305175781
    4. '):' → logprob: -11.055000305175781
    5. '):
' → logprob: -11.555000305175781
    6. '(self' → logprob: -11.680000305175781
    7. ':
' → logprob: -12.930000305175781
    8. '   ' → logprob: -13.055000305175781
    9. ':self' → logprob: -13.180000305175781
    10. '(' → logprob: -13.430000305175781

Token 132: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03947347775101662
    2. '
' → logprob: -3.289473533630371
    3. '        
' → logprob: -7.664473533630371
    4. '```' → logprob: -8.289473533630371
    5. '  
' → logprob: -8.789473533630371
    6. ' ' → logprob: -9.164473533630371
    7. '    
' → logprob: -9.414473533630371
    8. ' 
' → logprob: -9.664473533630371
    9. ':' → logprob: -9.789473533630371
    10. ',' → logprob: -10.039473533630371

Token 133: ' #' (ID: 1069)
  Prédit: ' left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' left' → logprob: -0.3823325037956238
    2. ' low' → logprob: -2.2573325634002686
    3. 'left' → logprob: -2.5073325634002686
    4. ' lo' → logprob: -3.0073325634002686
    5. 'low' → logprob: -3.0073325634002686
    6. '       ' → logprob: -4.6323323249816895
    7. ' self' → logprob: -5.1323323249816895
    8. ' max' → logprob: -5.2573323249816895
    9. ' for' → logprob: -5.8823323249816895
    10. ' l' → logprob: -6.1323323249816895

Token 134: ' Sort' (ID: 25945)
  Prédit: ' left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' left' → logprob: -0.8001439571380615
    2. 'left' → logprob: -1.6751439571380615
    3. 'low' → logprob: -2.3001439571380615
    4. ' low' → logprob: -2.4251439571380615
    5. ' lo' → logprob: -2.9251439571380615
    6. ' sorted' → logprob: -3.6751439571380615
    7. ' max' → logprob: -4.300144195556641
    8. '#' → logprob: -4.675144195556641
    9. 'max' → logprob: -4.675144195556641
    10. ' for' → logprob: -4.675144195556641

Token 135: ' microbes' (ID: 156044)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.07355997711420059
    2. ' self' → logprob: -3.3235599994659424
    3. ' microbes' → logprob: -4.073559761047363
    4. '(' → logprob: -4.573559761047363
    5. '_micro' → logprob: -6.198559761047363
    6. 'self' → logprob: -6.448559761047363
    7. '       ' → logprob: -6.823559761047363
    8. ' microorganisms' → logprob: -7.323559761047363
    9. '(
' → logprob: -7.698559761047363
    10. '	self' → logprob: -7.823559761047363

Token 136: ' by' (ID: 656)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.12730371952056885
    2. ' by' → logprob: -3.3773036003112793
    3. '(key' → logprob: -3.6273036003112793
    4. '(
' → logprob: -4.002303600311279
    5. '(lambda' → logprob: -4.377303600311279
    6. ' =' → logprob: -4.627303600311279
    7. '(sorted' → logprob: -4.877303600311279
    8. '(self' → logprob: -5.377303600311279
    9. 'by' → logprob: -6.627303600311279
    10. '_by' → logprob: -7.002303600311279

Token 137: ' capacity' (ID: 12241)
  Prédit: ' release'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' release' → logprob: -0.1749628484249115
    2. ' self' → logprob: -2.6749627590179443
    3. ' capacity' → logprob: -3.0499627590179443
    4. ' lambda' → logprob: -3.5499627590179443
    5. 'release' → logprob: -5.049962997436523
    6. ' ' → logprob: -5.674962997436523
    7. ' their' → logprob: -6.049962997436523
    8. 'self' → logprob: -7.049962997436523
    9. 'lambda' → logprob: -7.299962997436523
    10. ' key' → logprob: -7.924962997436523

Token 138: ' to' (ID: 316)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9965410232543945
    2. '(self' → logprob: -1.2465410232543945
    3. ' =' → logprob: -2.6215410232543945
    4. 'sorted' → logprob: -2.6215410232543945
    5. '       ' → logprob: -2.7465410232543945
    6. '(' → logprob: -3.4965410232543945
    7. '(sorted' → logprob: -3.4965410232543945
    8. '_sorted' → logprob: -3.8715410232543945
    9. 'self' → logprob: -4.6215410232543945
    10. '=' → logprob: -4.6215410232543945

Token 139: ' release' (ID: 8232)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -1.358074426651001
    2. ' reverse' → logprob: -1.358074426651001
    3. ' capacity' → logprob: -1.858074426651001
    4. 'self' → logprob: -2.233074426651001
    5. '   ' → logprob: -2.733074426651001
    6. 'reverse' → logprob: -3.358074426651001
    7. 'capacity' → logprob: -3.358074426651001
    8. '       ' → logprob: -3.733074426651001
    9. '_capacity' → logprob: -4.733074188232422
    10. '    ' → logprob: -4.983074188232422

Token 140: ' ratio' (ID: 18051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7806713581085205
    2. ',' → logprob: -1.5306713581085205
    3. '(self' → logprob: -2.0306713581085205
    4. '_sorted' → logprob: -3.4056713581085205
    5. 'sorted' → logprob: -3.4056713581085205
    6. '(' → logprob: -3.7806713581085205
    7. '.sort' → logprob: -3.9056713581085205
    8. 's' → logprob: -4.155671119689941
    9. '(sorted' → logprob: -4.280671119689941
    10. ':' → logprob: -5.155671119689941

Token 141: ' or' (ID: 503)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0267345905303955
    2. ',' → logprob: -1.4017345905303955
    3. '       ' → logprob: -1.5267345905303955
    4. '(self' → logprob: -2.9017345905303955
    5. '(
' → logprob: -3.2767345905303955
    6. '(sorted' → logprob: -3.4017345905303955
    7. 'sorted' → logprob: -4.276734352111816
    8. '<|end|>' → logprob: -4.901734352111816
    9. ':' → logprob: -5.276734352111816
    10. '        
' → logprob: -5.776734352111816

Token 142: ' by' (ID: 656)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -1.22342050075531
    2. ' release' → logprob: -1.34842050075531
    3. ' capacity' → logprob: -1.97342050075531
    4. ' their' → logprob: -2.2234206199645996
    5. ' reverse' → logprob: -3.2234206199645996
    6. 'release' → logprob: -3.2234206199645996
    7. 'capacity' → logprob: -3.7234206199645996
    8. ' ' → logprob: -3.9734206199645996
    9. '_release' → logprob: -4.2234206199646
    10. 'self' → logprob: -4.2234206199646

Token 143: ' capacity' (ID: 12241)
  Prédit: ' release'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' release' → logprob: -1.0339077711105347
    2. ' self' → logprob: -1.1589077711105347
    3. ' ' → logprob: -1.5339077711105347
    4. ' their' → logprob: -3.158907890319824
    5. ' capacity' → logprob: -3.408907890319824
    6. ' lambda' → logprob: -4.408907890319824
    7. 'release' → logprob: -4.533907890319824
    8. 'self' → logprob: -5.158907890319824
    9. ' micro' → logprob: -5.658907890319824
    10. 'capacity' → logprob: -6.408907890319824

Token 144: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7561635375022888
    2. ',' → logprob: -2.0061635971069336
    3. '(sorted' → logprob: -2.2561635971069336
    4. ':' → logprob: -2.5061635971069336
    5. '(' → logprob: -2.8811635971069336
    6. '(self' → logprob: -3.0061635971069336
    7. '(
' → logprob: -3.8811635971069336
    8. '()' → logprob: -4.381163597106934
    9. ':
' → logprob: -4.756163597106934
    10. 'sorted' → logprob: -4.756163597106934

Token 145: ' enable' (ID: 11434)
  Prédit: 'release'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'release' → logprob: -1.3363338708877563
    2. '<|end|>' → logprob: -1.4613338708877563
    3. ' survive' → logprob: -1.7113338708877563
    4. ' release' → logprob: -2.336333751678467
    5. 'capacity' → logprob: -3.461333751678467
    6. ' ' → logprob: -3.461333751678467
    7. 'maximize' → logprob: -3.836333751678467
    8. 'sur' → logprob: -4.086333751678467
    9. ' capacity' → logprob: -4.461333751678467
    10. 'self' → logprob: -4.961333751678467

Token 146: ' a' (ID: 261)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -1.3505005836486816
    2. ' a' → logprob: -1.7255005836486816
    3. ' survival' → logprob: -2.4755005836486816
    4. '       ' → logprob: -2.8505005836486816
    5. ' their' → logprob: -3.1005005836486816
    6. '_' → logprob: -3.1005005836486816
    7. ' sorting' → logprob: -3.1005005836486816
    8. ' the' → logprob: -3.1005005836486816
    9. ':' → logprob: -3.4755005836486816
    10. '   ' → logprob: -3.4755005836486816

Token 147: ' smart' (ID: 8847)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -1.47736394405365
    2. ' safe' → logprob: -1.85236394405365
    3. '       ' → logprob: -1.97736394405365
    4. 'return' → logprob: -2.1023640632629395
    5. '   ' → logprob: -2.4773640632629395
    6. ' gradual' → logprob: -2.8523640632629395
    7. 'max' → logprob: -4.1023640632629395
    8. 'n' → logprob: -4.2273640632629395
    9. ' greater' → logprob: -4.2273640632629395
    10. 'def' → logprob: -4.4773640632629395

Token 148: ' check' (ID: 2371)
  Prédit: ' survival'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' survival' → logprob: -1.283219575881958
    2. ' selection' → logprob: -1.908219575881958
    3. ' return' → logprob: -2.283219575881958
    4. ' sort' → logprob: -2.533219575881958
    5. ' approach' → logprob: -2.533219575881958
    6. ' sorting' → logprob: -2.908219575881958
    7. 'sur' → logprob: -3.658219575881958
    8. '_sur' → logprob: -3.783219575881958
    9. ' ' → logprob: -3.908219575881958
    10. '       ' → logprob: -3.908219575881958

Token 149: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8360758423805237
    2. '       ' → logprob: -1.461075782775879
    3. '(' → logprob: -1.836075782775879
    4. ':' → logprob: -2.836075782775879
    5. ',' → logprob: -3.211075782775879
    6. '        
' → logprob: -4.461075782775879
    7. '(
' → logprob: -4.461075782775879
    8. '<|end|>' → logprob: -4.586075782775879
    9. '()' → logprob: -5.086075782775879
    10. ' ' → logprob: -5.461075782775879

Token 150: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.024577390402555466
    2. ':' → logprob: -4.899577617645264
    3. '
' → logprob: -5.274577617645264
    4. ',' → logprob: -5.774577617645264
    5. '(self' → logprob: -6.149577617645264
    6. '        
' → logprob: -6.274577617645264
    7. '(' → logprob: -6.899577617645264
    8. 'self' → logprob: -7.274577617645264
    9. '<|end|>' → logprob: -7.649577617645264
    10. ':
' → logprob: -8.274577140808105

Token 151: ' #' (ID: 1069)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.5786937475204468
    2. 'self' → logprob: -1.5786937475204468
    3. '       ' → logprob: -2.0786938667297363
    4. ' sorted' → logprob: -3.0786938667297363
    5. ' left' → logprob: -3.9536938667297363
    6. 'sorted' → logprob: -4.203693866729736
    7. 'left' → logprob: -4.703693866729736
    8. ' capacity' → logprob: -4.953693866729736
    9. ' capacities' → logprob: -5.203693866729736
    10. 'capacity' → logprob: -6.078693866729736

Token 152: ' But' (ID: 3072)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -1.0951224565505981
    2. 'self' → logprob: -1.2201224565505981
    3. ' sorted' → logprob: -1.4701224565505981
    4. 'sorted' → logprob: -2.5951223373413086
    5. ' left' → logprob: -3.5951223373413086
    6. '       ' → logprob: -4.220122337341309
    7. 'left' → logprob: -4.470122337341309
    8. '#' → logprob: -6.220122337341309
    9. ' capacities' → logprob: -6.220122337341309
    10. ' capacity' → logprob: -6.345122337341309

Token 153: ' condition' (ID: 7060)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.11437150835990906
    2. 'self' → logprob: -2.8643715381622314
    3. '       ' → logprob: -3.8643715381622314
    4. ' sorted' → logprob: -4.239371299743652
    5. '        ' → logprob: -5.989371299743652
    6. ' not' → logprob: -6.114371299743652
    7. ' ' → logprob: -6.239371299743652
    8. ' return' → logprob: -6.364371299743652
    9. ' for' → logprob: -6.739371299743652
    10. '    ' → logprob: -6.739371299743652

Token 154: ' is' (ID: 382)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05233699828386307
    2. '       ' → logprob: -4.177337169647217
    3. ' :' → logprob: -4.427337169647217
    4. 's' → logprob: -4.802337169647217
    5. ' =' → logprob: -5.302337169647217
    6. ' for' → logprob: -5.552337169647217
    7. ' if' → logprob: -6.302337169647217
    8. ' s' → logprob: -6.677337169647217
    9. ' is' → logprob: -7.427337169647217
    10. '=' → logprob: -7.677337169647217

Token 155: ' total' (ID: 3609)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.8489852547645569
    2. ' all' → logprob: -1.723985195159912
    3. ' True' → logprob: -2.473985195159912
    4. ' not' → logprob: -2.598985195159912
    5. ' lambda' → logprob: -2.598985195159912
    6. 'self' → logprob: -3.348985195159912
    7. ' total' → logprob: -3.723985195159912
    8. ' that' → logprob: -3.973985195159912
    9. ' to' → logprob: -4.348985195159912
    10. 'lambda' → logprob: -4.598985195159912

Token 156: '_release' (ID: 59589)
  Prédit: '_release'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_release' → logprob: -0.05209838226437569
    2. '_' → logprob: -3.052098274230957
    3. 'release' → logprob: -6.677098274230957
    4. ' _' → logprob: -6.677098274230957
    5. ' release' → logprob: -8.052098274230957
    6. '_re' → logprob: -8.302098274230957
    7. '   ' → logprob: -8.927098274230957
    8. '_sur' → logprob: -9.802098274230957
    9. '_capacity' → logprob: -9.927098274230957
    10. '_RELEASE' → logprob: -10.302098274230957

Token 157: ' /' (ID: 820)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.6377829909324646
    2. ' =' → logprob: -1.5127830505371094
    3. ' /' → logprob: -2.6377830505371094
    4. ' ' → logprob: -2.8877830505371094
    5. '       ' → logprob: -3.6377830505371094
    6. ' >=' → logprob: -3.7627830505371094
    7. '   ' → logprob: -4.262783050537109
    8. '=' → logprob: -5.012783050537109
    9. '<|end|>' → logprob: -5.012783050537109
    10. '_needed' → logprob: -5.262783050537109

Token 158: ' count' (ID: 3605)
  Prédit: ' count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.07898496091365814
    2. 'count' → logprob: -2.5789849758148193
    3. ' self' → logprob: -10.703985214233398
    4. '(count' → logprob: -10.953985214233398
    5. ' ' → logprob: -11.328985214233398
    6. 'self' → logprob: -11.453985214233398
    7. ' max' → logprob: -12.453985214233398
    8. ' total' → logprob: -12.578985214233398
    9. '	count' → logprob: -12.828985214233398
    10. '=count' → logprob: -12.828985214233398

Token 159: ' <=' (ID: 5017)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.31990453600883484
    2. '       ' → logprob: -1.5699045658111572
    3. '        
' → logprob: -3.5699045658111572
    4. '        ' → logprob: -4.319904327392578
    5. ',' → logprob: -5.319904327392578
    6. '<|end|>' → logprob: -6.194904327392578
    7. ':' → logprob: -6.319904327392578
    8. ' 
' → logprob: -6.569904327392578
    9. '=' → logprob: -6.569904327392578
    10. '  
' → logprob: -6.944904327392578

Token 160: ' min' (ID: 1349)
  Prédit: ' capacity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' capacity' → logprob: -0.48439472913742065
    2. ' self' → logprob: -1.2343947887420654
    3. 'self' → logprob: -3.2343947887420654
    4. 'capacity' → logprob: -3.4843947887420654
    5. ' micro' → logprob: -4.234394550323486
    6. 'micro' → logprob: -5.109394550323486
    7. ' microbes' → logprob: -6.609394550323486
    8. ' max' → logprob: -8.734395027160645
    9. ' microbial' → logprob: -8.859395027160645
    10. '_capacity' → logprob: -9.359395027160645

Token 161: ' capacity' (ID: 12241)
  Prédit: '_capacity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_capacity' → logprob: -0.9497798085212708
    2. '([' → logprob: -1.574779748916626
    3. '(self' → logprob: -1.699779748916626
    4. '(' → logprob: -1.949779748916626
    5. '(m' → logprob: -3.199779748916626
    6. '(
' → logprob: -4.449779987335205
    7. '(lambda' → logprob: -4.824779987335205
    8. '_cap' → logprob: -4.824779987335205
    9. '(cap' → logprob: -5.074779987335205
    10. '_' → logprob: -6.824779987335205

Token 162: ' among' (ID: 6200)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6461582779884338
    2. '
' → logprob: -0.7711582779884338
    3. '        
' → logprob: -5.146158218383789
    4. '<|end|>' → logprob: -5.396158218383789
    5. ',' → logprob: -6.896158218383789
    6. '  
' → logprob: -8.396158218383789
    7. '    
' → logprob: -8.896158218383789
    8. ' 
' → logprob: -9.021158218383789
    9. '' → logprob: -9.021158218383789
    10. '   ' → logprob: -9.021158218383789

Token 163: ' selected' (ID: 6386)
  Prédit: ' surviving'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' surviving' → logprob: -1.0930384397506714
    2. ' survivors' → logprob: -1.4680384397506714
    3. ' microbes' → logprob: -2.343038558959961
    4. ' the' → logprob: -2.593038558959961
    5. ' selected' → logprob: -2.843038558959961
    6. 'sur' → logprob: -2.968038558959961
    7. ' self' → logprob: -3.093038558959961
    8. 'self' → logprob: -3.718038558959961
    9. ' all' → logprob: -3.718038558959961
    10. ' current' → logprob: -3.968038558959961

Token 164: ' microbes' (ID: 156044)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10655408352613449
    2. '<|end|>' → logprob: -2.7315540313720703
    3. '
' → logprob: -3.9815540313720703
    4. '<|end|>' → logprob: -5.10655403137207
    5. '        
' → logprob: -6.35655403137207
    6. ' microbes' → logprob: -6.35655403137207
    7. ' microorganisms' → logprob: -6.60655403137207
    8. 's' → logprob: -6.73155403137207
    9. ',' → logprob: -7.23155403137207
    10. '_sorted' → logprob: -7.60655403137207

Token 165: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12145506590604782
    2. '
' → logprob: -2.246454954147339
    3. '        
' → logprob: -5.496455192565918
    4. '<|end|>' → logprob: -6.371455192565918
    5. ',' → logprob: -6.996455192565918
    6. ':' → logprob: -7.996455192565918
    7. '  
' → logprob: -8.746455192565918
    8. '```' → logprob: -8.996455192565918
    9. '' → logprob: -9.246455192565918
    10. '        ' → logprob: -9.371455192565918

Token 166: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05128840357065201
    2. '
' → logprob: -3.426288366317749
    3. '        
' → logprob: -5.551288604736328
    4. ':' → logprob: -5.926288604736328
    5. '<|end|>' → logprob: -5.926288604736328
    6. ',' → logprob: -6.051288604736328
    7. '\' → logprob: -6.426288604736328
    8. '\n' → logprob: -6.551288604736328
    9. '   ' → logprob: -7.551288604736328
    10. ':
' → logprob: -8.301288604736328

Token 167: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09300252050161362
    2. ' sorted' → logprob: -3.4680025577545166
    3. ' left' → logprob: -4.2180023193359375
    4. ' self' → logprob: -4.7180023193359375
    5. 'left' → logprob: -4.7180023193359375
    6. 'sorted' → logprob: -5.0930023193359375
    7. 'self' → logprob: -5.3430023193359375
    8. ' microbes' → logprob: -5.7180023193359375
    9. 'low' → logprob: -5.9680023193359375
    10. '        
' → logprob: -6.5930023193359375

Token 168: ' We'll' (ID: 46830)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.155164435505867
    2. ' left' → logprob: -3.1551644802093506
    3. ' sorted' → logprob: -3.2801644802093506
    4. ' self' → logprob: -3.5301644802093506
    5. 'left' → logprob: -4.2801642417907715
    6. 'self' → logprob: -5.5301642417907715
    7. ' #' → logprob: -5.7801642417907715
    8. '#' → logprob: -5.7801642417907715
    9. ' low' → logprob: -5.9051642417907715
    10. 'low' → logprob: -6.1551642417907715

Token 169: ' use' (ID: 1199)
  Prédit: ' sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sort' → logprob: -1.2658437490463257
    2. ' use' → logprob: -1.3908437490463257
    3. ' implement' → logprob: -2.0158438682556152
    4. 'sort' → logprob: -2.2658438682556152
    5. ' perform' → logprob: -2.7658438682556152
    6. ' continue' → logprob: -3.8908438682556152
    7. ' first' → logprob: -4.015843868255615
    8. ' do' → logprob: -4.140843868255615
    9. 'perform' → logprob: -4.390843868255615
    10. ' check' → logprob: -4.515843868255615

Token 170: ' a' (ID: 261)
  Prédit: ' binary'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' binary' → logprob: -0.050596535205841064
    2. ' a' → logprob: -3.4255964756011963
    3. 'binary' → logprob: -4.175596714019775
    4. ' sorted' → logprob: -7.175596714019775
    5. 'a' → logprob: -8.300596237182617
    6. ' self' → logprob: -9.300596237182617
    7. ' sorting' → logprob: -9.300596237182617
    8. 'sorted' → logprob: -9.800596237182617
    9. ' capacity' → logprob: -10.050596237182617
    10. ' the' → logprob: -10.675596237182617

Token 171: ' binary' (ID: 15600)
  Prédit: ' binary'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' binary' → logprob: -0.040650952607393265
    2. 'binary' → logprob: -3.4156508445739746
    3. ' sorted' → logprob: -5.790650844573975
    4. ' b' → logprob: -6.415650844573975
    5. ' sort' → logprob: -6.665650844573975
    6. 'n' → logprob: -7.915650844573975
    7. 'b' → logprob: -8.040651321411133
    8. 'sorted' → logprob: -9.165651321411133
    9. 'sort' → logprob: -10.165651321411133
    10. ' sorting' → logprob: -10.665651321411133

Token 172: ' search' (ID: 3684)
  Prédit: ' search'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' search' → logprob: -0.09222664684057236
    2. 'search' → logprob: -2.96722674369812
    3. '_search' → logprob: -3.46722674369812
    4. '_' → logprob: -5.342226505279541
    5. ' _' → logprob: -7.592226505279541
    6. ' ' → logprob: -8.8422269821167
    7. '   ' → logprob: -12.3422269821167
    8. '	search' → logprob: -12.3422269821167
    9. '-search' → logprob: -13.3422269821167
    10. '_SEARCH' → logprob: -13.7172269821167

Token 173: ' on' (ID: 402)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13728198409080505
    2. '
' → logprob: -3.012281894683838
    3. '(' → logprob: -3.887281894683838
    4. '        ' → logprob: -4.262281894683838
    5. '        
' → logprob: -4.262281894683838
    6. ' for' → logprob: -4.762281894683838
    7. '   ' → logprob: -5.262281894683838
    8. ' ' → logprob: -5.387281894683838
    9. ' to' → logprob: -6.512281894683838
    10. ' (' → logprob: -6.762281894683838

Token 174: ' k' (ID: 372)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.13483016192913055
    2. ' self' → logprob: -2.7598302364349365
    3. ' range' → logprob: -3.1348302364349365
    4. ' count' → logprob: -5.134829998016357
    5. 'the' → logprob: -5.384829998016357
    6. ' possible' → logprob: -5.759829998016357
    7. 'self' → logprob: -6.134829998016357
    8. ' number' → logprob: -7.259829998016357
    9. 'range' → logprob: -7.634829998016357
    10. ' ' → logprob: -7.759829998016357

Token 175: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9404928088188171
    2. '
' → logprob: -1.690492868423462
    3. '       ' → logprob: -1.940492868423462
    4. ' =' → logprob: -1.940492868423462
    5. '=' → logprob: -3.690492868423462
    6. ' ' → logprob: -3.690492868423462
    7. ' for' → logprob: -4.065492630004883
    8. ':
' → logprob: -4.190492630004883
    9. ',' → logprob: -4.565492630004883
    10. '   ' → logprob: -4.690492630004883

Token 176: 'number' (ID: 8096)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.8275876641273499
    2. ' self' → logprob: -0.8275876641273499
    3. 'self' → logprob: -2.702587604522705
    4. ')' → logprob: -3.952587604522705
    5. 'the' → logprob: -4.702587604522705
    6. ' range' → logprob: -4.702587604522705
    7. ' ' → logprob: -5.202587604522705
    8. ' for' → logprob: -5.952587604522705
    9. ' )' → logprob: -6.077587604522705
    10. ' a' → logprob: -6.577587604522705

Token 177: ' of' (ID: 328)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09462620317935944
    2. ' )' → logprob: -2.9696261882781982
    3. ' of' → logprob: -4.844626426696777
    4. '_of' → logprob: -4.969626426696777
    5. '_' → logprob: -5.094626426696777
    6. 'of' → logprob: -5.219626426696777
    7. '=' → logprob: -5.844626426696777
    8. '_)' → logprob: -5.969626426696777
    9. '_tokens' → logprob: -6.219626426696777
    10. ')_' → logprob: -6.344626426696777

Token 178: ' microbes' (ID: 156044)
  Prédit: ' survivors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' survivors' → logprob: -0.11788579821586609
    2. 'sur' → logprob: -2.6178858280181885
    3. '_sur' → logprob: -3.8678858280181885
    4. ' microbes' → logprob: -5.117885589599609
    5. ')' → logprob: -5.617885589599609
    6. ' surviving' → logprob: -6.617885589599609
    7. ' surviv' → logprob: -6.742885589599609
    8. ' ' → logprob: -6.742885589599609
    9. '_' → logprob: -7.367885589599609
    10. 'micro' → logprob: -7.617885589599609

Token 179: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6343764662742615
    2. '):' → logprob: -1.5093765258789062
    3. '       ' → logprob: -2.1343765258789062
    4. ' )' → logprob: -2.8843765258789062
    5. '   ' → logprob: -3.8843765258789062
    6. ' ):' → logprob: -4.384376525878906
    7. ' to' → logprob: -4.884376525878906
    8. '):
' → logprob: -4.884376525878906
    9. ' for' → logprob: -5.259376525878906
    10. ' ' → logprob: -5.384376525878906

Token 180: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2978766858577728
    2. '
' → logprob: -1.7978767156600952
    3. ' ' → logprob: -3.7978765964508057
    4. '<|end|>' → logprob: -3.7978765964508057
    5. ':' → logprob: -4.172876834869385
    6. ' 
' → logprob: -5.172876834869385
    7. '        
' → logprob: -5.422876834869385
    8. '\' → logprob: -5.547876834869385
    9. ',' → logprob: -5.672876834869385
    10. '   ' → logprob: -5.797876834869385

Token 181: ' left' (ID: 3561)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.501244068145752
    2. '       ' → logprob: -1.251244068145752
    3. ' 
' → logprob: -2.876244068145752
    4. '        
' → logprob: -3.501244068145752
    5. '  
' → logprob: -5.376244068145752
    6. '    
' → logprob: -5.501244068145752
    7. 'n' → logprob: -5.751244068145752
    8. '\n' → logprob: -6.001244068145752
    9. '\' → logprob: -6.626244068145752
    10. ' ' → logprob: -6.751244068145752

Token 182: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12738192081451416
    2. '=' → logprob: -2.1273818016052246
    3. ' ' → logprob: -8.127382278442383
    4. ',' → logprob: -8.877382278442383
    5. ' =
' → logprob: -11.502382278442383
    6. ' ,' → logprob: -11.752382278442383
    7. '<|end|>' → logprob: -15.502382278442383
    8. '0' → logprob: -15.627382278442383
    9. '=
' → logprob: -15.877382278442383
    10. '    ' → logprob: -16.502382278442383

Token 183: ' right' (ID: 1849)
  Prédit: ' right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' right' → logprob: -0.000808082812000066
    2. 'right' → logprob: -7.125808238983154
    3. ' ' → logprob: -13.500807762145996
    4. '	right' → logprob: -13.625807762145996
    5. ' self' → logprob: -14.875807762145996
    6. ' 
' → logprob: -15.125807762145996
    7. '=' → logprob: -15.875807762145996
    8. ',right' → logprob: -16.125808715820312
    9. ' rights' → logprob: -16.500808715820312
    10. '[right' → logprob: -16.625808715820312

Token 184: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004656306933611631
    2. '=' → logprob: -5.3796563148498535
    3. ' ' → logprob: -10.254655838012695
    4. '<|end|>' → logprob: -14.629655838012695
    5. ' =
' → logprob: -15.504655838012695
    6. '=int' → logprob: -16.754655838012695
    7. ',' → logprob: -17.379655838012695
    8. ')' → logprob: -17.504655838012695
    9. '=len' → logprob: -17.879655838012695
    10. ' =)' → logprob: -18.129655838012695

Token 185: ' ' (ID: 220)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.47015130519866943
    2. ' ' → logprob: -1.0951513051986694
    3. '1' → logprob: -4.095151424407959
    4. '0' → logprob: -4.220151424407959
    5. 'self' → logprob: -4.720151424407959
    6. ' len' → logprob: -8.2201509475708
    7. 'len' → logprob: -10.4701509475708
    8. ' 
' → logprob: -10.9701509475708
    9. '
' → logprob: -12.0951509475708
    10. '	self' → logprob: -12.0951509475708

Token 186: '1' (ID: 16)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.20222817361354828
    2. ' self' → logprob: -2.20222806930542
    3. '1' → logprob: -3.20222806930542
    4. '0' → logprob: -3.57722806930542
    5. ' ' → logprob: -5.95222806930542
    6. 'len' → logprob: -6.70222806930542
    7. ' len' → logprob: -9.702228546142578
    8. '
' → logprob: -11.577228546142578
    9. '   ' → logprob: -12.827228546142578
    10. '	self' → logprob: -13.202228546142578

Token 187: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0016628009034320712
    2. ' ,' → logprob: -6.501662731170654
    3. ',
' → logprob: -9.751663208007812
    4. ',len' → logprob: -10.001663208007812
    5. '=' → logprob: -11.501663208007812
    6. ' =' → logprob: -11.751663208007812
    7. '       ' → logprob: -11.751663208007812
    8. '=len' → logprob: -11.751663208007812
    9. ' ' → logprob: -12.251663208007812
    10. ',self' → logprob: -12.376663208007812

Token 188: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.048598840832710266
    2. 'self' → logprob: -3.0485987663269043
    3. ' len' → logprob: -11.673599243164062
    4. 'len' → logprob: -12.798599243164062
    5. '	self' → logprob: -15.798599243164062
    6. '_self' → logprob: -16.798599243164062
    7. ' ' → logprob: -17.048599243164062
    8. '=self' → logprob: -17.423599243164062
    9. '[self' → logprob: -17.548599243164062
    10. '(self' → logprob: -17.798599243164062

Token 189: '.N' (ID: 4439)
  Prédit: '.N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.N' → logprob: -0.00016480287013109773
    2. '.' → logprob: -9.000164985656738
    3. ' .' → logprob: -10.875164985656738
    4. '	N' → logprob: -12.000164985656738
    5. 'N' → logprob: -12.375164985656738
    6. '.micro' → logprob: -12.625164985656738
    7. '.n' → logprob: -12.750164985656738
    8. '_N' → logprob: -13.500164985656738
    9. '   ' → logprob: -14.375164985656738
    10. '```' → logprob: -14.500164985656738

Token 190: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.159151092171669
    2. '+' → logprob: -2.034151077270508
    3. ' +' → logprob: -5.034151077270508
    4. '<|end|>' → logprob: -5.409151077270508
    5. ' 
' → logprob: -5.784151077270508
    6. ' ' → logprob: -7.909151077270508
    7. '       ' → logprob: -7.909151077270508
    8. '  
' → logprob: -8.159151077270508
    9. '
' → logprob: -8.284151077270508
    10. '\n' → logprob: -8.534151077270508

Token 191: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0005703099304810166
    2. '
' → logprob: -8.625570297241211
    3. '       ' → logprob: -9.250570297241211
    4. ' 
' → logprob: -9.375570297241211
    5. '        
' → logprob: -9.375570297241211
    6. '    
' → logprob: -9.875570297241211
    7. '  
' → logprob: -10.000570297241211
    8. '\n' → logprob: -11.500570297241211
    9. '

' → logprob: -12.250570297241211
    10. '' → logprob: -12.875570297241211

Token 192: ' microbes' (ID: 156044)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0474749319255352
    2. ' 
' → logprob: -3.1724748611450195
    3. ' while' → logprob: -6.1724748611450195
    4. '       ' → logprob: -7.0474748611450195
    5. '        
' → logprob: -7.9224748611450195
    6. '\n' → logprob: -8.04747486114502
    7. '    
' → logprob: -8.42247486114502
    8. '  
' → logprob: -8.54747486114502
    9. 'while' → logprob: -8.92247486114502
    10. '
' → logprob: -9.29747486114502

Token 193: ' =' (ID: 314)
  Prédit: '_sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sorted' → logprob: -0.35434210300445557
    2. ' =' → logprob: -1.2293421030044556
    3. '=' → logprob: -5.229341983795166
    4. 'sorted' → logprob: -8.604342460632324
    5. '_' → logprob: -8.854342460632324
    6. '.sort' → logprob: -9.229342460632324
    7. '_by' → logprob: -10.479342460632324
    8. ' sorted' → logprob: -10.854342460632324
    9. 's' → logprob: -11.354342460632324
    10. '_sort' → logprob: -11.604342460632324

Token 194: ' self' (ID: 1051)
  Prédit: ' sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sorted' → logprob: -0.10859373211860657
    2. 'sorted' → logprob: -2.608593702316284
    3. ' self' → logprob: -3.733593702316284
    4. 'self' → logprob: -5.233593940734863
    5. '   ' → logprob: -11.233593940734863
    6. ' ' → logprob: -11.858593940734863
    7. ' list' → logprob: -13.733593940734863
    8. ' ' → logprob: -13.983593940734863
    9. '.sorted' → logprob: -14.108593940734863
    10. '(sorted' → logprob: -14.358593940734863

Token 195: '.micro' (ID: 104704)
  Prédit: '.micro'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.micro' → logprob: -5.204720582696609e-05
    2. 'micro' → logprob: -10.125052452087402
    3. '.sorted' → logprob: -11.625052452087402
    4. '.' → logprob: -13.375052452087402
    5. ' micro' → logprob: -14.125052452087402
    6. '.mi' → logprob: -15.750052452087402
    7. '.sort' → logprob: -16.000051498413086
    8. '.mc' → logprob: -16.500051498413086
    9. 'icro' → logprob: -16.500051498413086
    10. '_micro' → logprob: -16.750051498413086

Token 196: 'bes' (ID: 13639)
  Prédit: 'bes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bes' → logprob: -0.00048620346933603287
    2. 'be' → logprob: -7.750486373901367
    3. 'b' → logprob: -10.625486373901367
    4. 'bs' → logprob: -11.375486373901367
    5. 'es' → logprob: -12.500486373901367
    6. 'ves' → logprob: -12.875486373901367
    7. 'ob' → logprob: -13.250486373901367
    8. '```' → logprob: -13.375486373901367
    9. '   ' → logprob: -13.500486373901367
    10. 'ibes' → logprob: -14.375486373901367

Token 197: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0793902575969696
    2. '.sort' → logprob: -3.579390287399292
    3. '        
' → logprob: -4.329390048980713
    4. '       ' → logprob: -4.454390048980713
    5. 'sorted' → logprob: -5.204390048980713
    6. '_sorted' → logprob: -5.204390048980713
    7. ' 
' → logprob: -5.704390048980713
    8. '.sorted' → logprob: -5.704390048980713
    9. ' sorted' → logprob: -6.079390048980713
    10. '        ' → logprob: -7.704390048980713

Token 198: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04459884762763977
    2. '       ' → logprob: -3.5445988178253174
    3. '        
' → logprob: -5.0445990562438965
    4. ' 
' → logprob: -6.0445990562438965
    5. '<|end|>' → logprob: -6.0445990562438965
    6. '  
' → logprob: -7.0445990562438965
    7. '
' → logprob: -7.2945990562438965
    8. '    
' → logprob: -7.7945990562438965
    9. ' while' → logprob: -8.544598579406738
    10. ' ' → logprob: -8.544598579406738

Token 199: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.17416884005069733
    2. '       ' → logprob: -2.799168825149536
    3. ' 
' → logprob: -2.924168825149536
    4. '        
' → logprob: -3.549168825149536
    5. ' while' → logprob: -4.924169063568115
    6. 'while' → logprob: -6.299169063568115
    7. ' ' → logprob: -6.424169063568115
    8. '    
' → logprob: -6.549169063568115
    9. '<|end|>' → logprob: -6.924169063568115
    10. '  
' → logprob: -7.174169063568115

Token 200: ' Pre' (ID: 4659)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.17048874497413635
    2. 'while' → logprob: -2.0454888343811035
    3. ' result' → logprob: -4.1704888343811035
    4. '       ' → logprob: -5.0454888343811035
    5. 'result' → logprob: -5.9204888343811035
    6. ' microbes' → logprob: -6.1704888343811035
    7. 'res' → logprob: -8.920488357543945
    8. ' sorted' → logprob: -9.545488357543945
    9. ' micro' → logprob: -9.670488357543945
    10. '        
' → logprob: -9.920488357543945

Token 201: '-sort' (ID: 115128)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.09074366092681885
    2. 'sort' → logprob: -2.9657435417175293
    3. '       ' → logprob: -4.215743541717529
    4. 'sum' → logprob: -4.965743541717529
    5. ' sorted' → logprob: -5.465743541717529
    6. '_sorted' → logprob: -5.715743541717529
    7. 'compute' → logprob: -6.465743541717529
    8. 'fix' → logprob: -6.840743541717529
    9. '   ' → logprob: -7.590743541717529
    10. 'import' → logprob: -7.715743541717529

Token 202: ' by' (ID: 656)
  Prédit: ' microbes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' microbes' → logprob: -1.2406275272369385
    2. 'sorted' → logprob: -1.6156275272369385
    3. '       ' → logprob: -1.9906275272369385
    4. ' =' → logprob: -2.1156275272369385
    5. '=' → logprob: -3.1156275272369385
    6. 'micro' → logprob: -3.3656275272369385
    7. 'self' → logprob: -3.3656275272369385
    8. '_micro' → logprob: -3.7406275272369385
    9. 'd' → logprob: -3.8656275272369385
    10. 'by' → logprob: -3.8656275272369385

Token 203: ' capacity' (ID: 12241)
  Prédit: 'capacity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'capacity' → logprob: -0.3705379068851471
    2. ' capacity' → logprob: -1.2455378770828247
    3. 'lambda' → logprob: -4.245537757873535
    4. ' lambda' → logprob: -5.620537757873535
    5. 'cap' → logprob: -6.495537757873535
    6. 'micro' → logprob: -7.370537757873535
    7. 'm' → logprob: -7.995537757873535
    8. 'c' → logprob: -8.245537757873535
    9. '.capacity' → logprob: -8.620537757873535
    10. 'attr' → logprob: -8.745537757873535

Token 204: ' asc' (ID: 23334)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5805458426475525
    2. '=' → logprob: -0.8305458426475525
    3. '.sort' → logprob: -6.205545902252197
    4. 'sorted' → logprob: -6.455545902252197
    5. '_sorted' → logprob: -7.955545902252197
    6. '       ' → logprob: -8.580545425415039
    7. ',' → logprob: -9.330545425415039
    8. '   ' → logprob: -9.705545425415039
    9. 'sort' → logprob: -9.955545425415039
    10. '.' → logprob: -10.205545425415039

Token 205: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00492846267297864
    2. 'sorted' → logprob: -6.5049285888671875
    3. '
' → logprob: -6.8799285888671875
    4. ',' → logprob: -7.1299285888671875
    5. 'micro' → logprob: -8.004928588867188
    6. '        
' → logprob: -8.254928588867188
    7. ' microbes' → logprob: -8.879928588867188
    8. 'sort' → logprob: -9.129928588867188
    9. ':' → logprob: -9.254928588867188
    10. 's' → logprob: -9.504928588867188

Token 206: ' by' (ID: 656)
  Prédit: ' release'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' release' → logprob: -0.732057511806488
    2. 'release' → logprob: -1.6070575714111328
    3. ' microbes' → logprob: -2.107057571411133
    4. ' capacity' → logprob: -3.357057571411133
    5. ' index' → logprob: -3.857057571411133
    6. 'index' → logprob: -3.982057571411133
    7. 'capacity' → logprob: -4.232057571411133
    8. 'sort' → logprob: -4.607057571411133
    9. ' sort' → logprob: -4.607057571411133
    10. 'micro' → logprob: -4.607057571411133

Token 207: ' release' (ID: 8232)
  Prédit: ' release'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' release' → logprob: -0.1372290998697281
    2. 'release' → logprob: -2.1372292041778564
    3. ' capacity' → logprob: -5.387228965759277
    4. ' index' → logprob: -5.512228965759277
    5. 'index' → logprob: -7.762228965759277
    6. 'capacity' → logprob: -8.012228965759277
    7. '-release' → logprob: -8.762228965759277
    8. ' ' → logprob: -8.762228965759277
    9. ' micro' → logprob: -9.137228965759277
    10. ' self' → logprob: -9.512228965759277

Token 208: ' asc' (ID: 23334)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.041613440960645676
    2. '=' → logprob: -3.6666133403778076
    3. '=lambda' → logprob: -4.791613578796387
    4. ' ,' → logprob: -6.166613578796387
    5. '_sorted' → logprob: -6.666613578796387
    6. 'sorted' → logprob: -6.791613578796387
    7. ',
' → logprob: -7.791613578796387
    8. '<|end|>' → logprob: -7.916613578796387
    9. 'asc' → logprob: -8.166613578796387
    10. ' =' → logprob: -8.166613578796387

Token 209: ' to' (ID: 316)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09705334156751633
    2. '       ' → logprob: -2.722053289413452
    3. ',
' → logprob: -5.097053527832031
    4. '        
' → logprob: -5.097053527832031
    5. 'sorted' → logprob: -5.472053527832031
    6. ',' → logprob: -5.847053527832031
    7. ' microbes' → logprob: -6.097053527832031
    8. 'micro' → logprob: -6.972053527832031
    9. '.sort' → logprob: -7.597053527832031
    10. ' 
' → logprob: -8.097053527832031

Token 210: ' facilitate' (ID: 36296)
  Prédit: ' optimize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' optimize' → logprob: -1.4852073192596436
    2. ' ensure' → logprob: -1.6102073192596436
    3. ' facilitate' → logprob: -2.3602073192596436
    4. ' continue' → logprob: -2.4852073192596436
    5. 'sorted' → logprob: -3.2352073192596436
    6. ' reverse' → logprob: -3.4852073192596436
    7. 'continue' → logprob: -3.6102073192596436
    8. 'sort' → logprob: -4.110207557678223
    9. ' enable' → logprob: -4.110207557678223
    10. '    ' → logprob: -4.235207557678223

Token 211: ' efficient' (ID: 12430)
  Prédit: ' microbes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' microbes' → logprob: -0.02102516032755375
    2. 'micro' → logprob: -5.02102518081665
    3. ' capacity' → logprob: -5.77102518081665
    4. ' microorganisms' → logprob: -6.27102518081665
    5. ' the' → logprob: -6.39602518081665
    6. ' sorting' → logprob: -6.64602518081665
    7. 'capacity' → logprob: -7.02102518081665
    8. 'sort' → logprob: -7.27102518081665
    9. 'self' → logprob: -7.39602518081665
    10. ' micro' → logprob: -7.64602518081665

Token 212: ' checks' (ID: 22097)
  Prédit: 'search'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'search' → logprob: -0.6620233058929443
    2. ' sorting' → logprob: -1.6620233058929443
    3. ' search' → logprob: -2.5370233058929443
    4. 'sorting' → logprob: -2.5370233058929443
    5. 'sort' → logprob: -3.0370233058929443
    6. ' checking' → logprob: -3.9120233058929443
    7. 'micro' → logprob: -4.162023544311523
    8. ' searching' → logprob: -4.412023544311523
    9. ' access' → logprob: -5.287023544311523
    10. 'checking' → logprob: -5.287023544311523

Token 213: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.012340821325778961
    2. '       ' → logprob: -5.012341022491455
    3. '        
' → logprob: -5.637341022491455
    4. ',
' → logprob: -8.387340545654297
    5. '\n' → logprob: -8.512340545654297
    6. ',' → logprob: -8.637340545654297
    7. '
' → logprob: -8.637340545654297
    8. '<|end|>' → logprob: -8.637340545654297
    9. ':' → logprob: -8.762340545654297
    10. '    
' → logprob: -9.012340545654297

Token 214: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4989545941352844
    2. '       ' → logprob: -0.9989545941352844
    3. '        
' → logprob: -4.873954772949219
    4. ':' → logprob: -5.373954772949219
    5. ',' → logprob: -5.998954772949219
    6. '\n' → logprob: -6.498954772949219
    7. '<|end|>' → logprob: -6.748954772949219
    8. '    
' → logprob: -7.248954772949219
    9. '  
' → logprob: -7.373954772949219
    10. ':
' → logprob: -7.498954772949219

Token 215: ' microbes' (ID: 156044)
  Prédit: 'micro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'micro' → logprob: -0.5210156440734863
    2. ' microbes' → logprob: -1.0210156440734863
    3. '       ' → logprob: -3.6460156440734863
    4. 'self' → logprob: -4.646015644073486
    5. ' micro' → logprob: -5.771015644073486
    6. 'sorted' → logprob: -6.021015644073486
    7. 'mic' → logprob: -6.521015644073486
    8. ' self' → logprob: -7.146015644073486
    9. ' microorganisms' → logprob: -7.271015644073486
    10. '        
' → logprob: -7.271015644073486

Token 216: '_sorted' (ID: 104993)
  Prédit: '.sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.2208547294139862
    2. '=' → logprob: -1.9708547592163086
    3. ' =' → logprob: -2.8458547592163086
    4. '.' → logprob: -7.595854759216309
    5. '_sorted' → logprob: -8.845854759216309
    6. 'sorted' → logprob: -10.345854759216309
    7. '.sorted' → logprob: -10.345854759216309
    8. '.=' → logprob: -11.345854759216309
    9. 'sort' → logprob: -11.970854759216309
    10. ' .' → logprob: -12.095854759216309

Token 217: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16024871170520782
    2. '=' → logprob: -1.9102487564086914
    3. ' ' → logprob: -11.535248756408691
    4. 'sorted' → logprob: -12.660248756408691
    5. '.sort' → logprob: -12.660248756408691
    6. ' =
' → logprob: -13.035248756408691
    7. ',' → logprob: -13.285248756408691
    8. '_sorted' → logprob: -14.160248756408691
    9. '_' → logprob: -14.660248756408691
    10. '.' → logprob: -14.660248756408691

Token 218: ' sorted' (ID: 20099)
  Prédit: ' sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sorted' → logprob: -0.3868734836578369
    2. 'sorted' → logprob: -1.136873483657837
    3. '   ' → logprob: -14.011873245239258
    4. '(sorted' → logprob: -14.011873245239258
    5. ' ' → logprob: -14.386873245239258
    6. '.sorted' → logprob: -16.636873245239258
    7. 's' → logprob: -17.011873245239258
    8. '  ' → logprob: -17.636873245239258
    9. 'sort' → logprob: -18.261873245239258
    10. '[' → logprob: -18.386873245239258

Token 219: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.06383553892374039
    2. '(self' → logprob: -2.813835620880127
    3. '(' → logprob: -6.313835620880127
    4. '(
' → logprob: -9.938835144042969
    5. '((' → logprob: -12.438835144042969
    6. ' (' → logprob: -13.813835144042969
    7. 'self' → logprob: -14.813835144042969
    8. '(

' → logprob: -15.063835144042969
    9. '(mc' → logprob: -15.813835144042969
    10. 'micro' → logprob: -15.813835144042969

Token 220: 'icro' (ID: 4031)
  Prédit: 'icro'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icro' → logprob: -0.0006120019243098795
    2. '.micro' → logprob: -8.000612258911133
    3. 'micro' → logprob: -9.000612258911133
    4. 'ic' → logprob: -9.375612258911133
    5. '(self' → logprob: -10.750612258911133
    6. 'robes' → logprob: -11.625612258911133
    7. 'icrobial' → logprob: -11.875612258911133
    8. '.' → logprob: -12.125612258911133
    9. 'cro' → logprob: -12.750612258911133
    10. '(' → logprob: -12.750612258911133

Token 221: 'bes' (ID: 13639)
  Prédit: 'bes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bes' → logprob: -0.029084686189889908
    2. 'es' → logprob: -3.9040846824645996
    3. 'be' → logprob: -5.6540846824646
    4. 'ob' → logprob: -6.0290846824646
    5. 'robes' → logprob: -6.7790846824646
    6. 'res' → logprob: -7.5290846824646
    7. 'ibes' → logprob: -8.279085159301758
    8. 'ro' → logprob: -8.529085159301758
    9. 'ores' → logprob: -9.154085159301758
    10. ' microbes' → logprob: -9.279085159301758

Token 222: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0017963236896321177
    2. ',key' → logprob: -6.376796245574951
    3. 'key' → logprob: -9.50179672241211
    4. ' ,' → logprob: -11.50179672241211
    5. ')' → logprob: -11.87679672241211
    6. '(),' → logprob: -13.75179672241211
    7. '(key' → logprob: -14.75179672241211
    8. ' key' → logprob: -14.75179672241211
    9. '   ' → logprob: -15.75179672241211
    10. '_key' → logprob: -16.50179672241211

Token 223: ' key' (ID: 2140)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.4740946590900421
    2. ' key' → logprob: -0.9740946292877197
    3. ',key' → logprob: -11.47409439086914
    4. '(key' → logprob: -12.59909439086914
    5. '       ' → logprob: -13.34909439086914
    6. '   ' → logprob: -13.72409439086914
    7. 'lambda' → logprob: -14.59909439086914
    8. ',' → logprob: -15.09909439086914
    9. '	key' → logprob: -15.22409439086914
    10. '[key' → logprob: -15.97409439086914

Token 224: '=lambda' (ID: 64865)
  Prédit: '=lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -0.00407923199236393
    2. '=' → logprob: -5.504079341888428
    3. '=
' → logprob: -14.50407886505127
    4. 'lambda' → logprob: -16.379079818725586
    5. '=

' → logprob: -16.379079818725586
    6. '(lambda' → logprob: -17.254079818725586
    7. '=(' → logprob: -17.254079818725586
    8. '=l' → logprob: -17.504079818725586
    9. '=}' → logprob: -18.879079818725586
    10. ' =' → logprob: -19.504079818725586

Token 225: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.06902564316987991
    2. ' x' → logprob: -2.819025754928589
    3. ' micro' → logprob: -5.31902551651001
    4. 'm' → logprob: -6.69402551651001
    5. 'x' → logprob: -7.69402551651001
    6. 'micro' → logprob: -8.194025993347168
    7. ':' → logprob: -10.319025993347168
    8. ' mc' → logprob: -10.569025993347168
    9. '	m' → logprob: -10.569025993347168
    10. ' ' → logprob: -11.069025993347168

Token 226: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0001307142956648022
    2. ':m' → logprob: -9.000130653381348
    3. ' :' → logprob: -12.000130653381348
    4. 'm' → logprob: -14.500130653381348
    5. ':(' → logprob: -15.750130653381348
    6. ' m' → logprob: -15.750130653381348
    7. '(m' → logprob: -16.000131607055664
    8. ':
' → logprob: -16.000131607055664
    9. '	m' → logprob: -18.250131607055664
    10. ':mm' → logprob: -18.500131607055664

Token 227: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.3785831034183502
    2. '(m' → logprob: -1.2535830736160278
    3. ' m' → logprob: -3.7535831928253174
    4. 'm' → logprob: -5.378582954406738
    5. '(' → logprob: -6.628582954406738
    6. '(
' → logprob: -9.128582954406738
    7. ' (
' → logprob: -9.503582954406738
    8. '(min' → logprob: -9.628582954406738
    9. ' ' → logprob: -11.003582954406738
    10. '(max' → logprob: -11.878582954406738

Token 228: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.004663899540901184
    2. ' m' → logprob: -5.379663944244385
    3. '(m' → logprob: -10.254663467407227
    4. ' (' → logprob: -12.629663467407227
    5. ')m' → logprob: -13.254663467407227
    6. '   ' → logprob: -14.004663467407227
    7. ')' → logprob: -14.504663467407227
    8. '	m' → logprob: -14.504663467407227
    9. ' ' → logprob: -14.754663467407227
    10. '  ' → logprob: -15.129663467407227

Token 229: '.capacity' (ID: 124122)
  Prédit: '.capacity'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.capacity' → logprob: -0.0005028736195527017
    2. '.release' → logprob: -7.875503063201904
    3. '.cap' → logprob: -10.000502586364746
    4. '.index' → logprob: -10.250502586364746
    5. 'capacity' → logprob: -10.875502586364746
    6. '.' → logprob: -11.000502586364746
    7. ').' → logprob: -13.625502586364746
    8. ' .' → logprob: -13.750502586364746
    9. '.
' → logprob: -14.125502586364746
    10. '.cost' → logprob: -14.875502586364746

Token 230: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0029441863298416138
    2. ',m' → logprob: -6.252943992614746
    3. '))' → logprob: -7.377943992614746
    4. ' ,' → logprob: -8.377943992614746
    5. '.release' → logprob: -10.002943992614746
    6. ',
' → logprob: -10.127943992614746
    7. '.m' → logprob: -10.502943992614746
    8. ' ))' → logprob: -11.752943992614746
    9. ',re' → logprob: -11.752943992614746
    10. ',index' → logprob: -11.877943992614746

Token 231: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.06993776559829712
    2. 'm' → logprob: -2.6949377059936523
    3. ' ' → logprob: -14.694937705993652
    4. ' ' → logprob: -14.694937705993652
    5. '    ' → logprob: -15.319937705993652
    6. ' -' → logprob: -16.63243865966797
    7. ' 
' → logprob: -16.75743865966797
    8. ',' → logprob: -16.81993865966797
    9. ')m' → logprob: -16.88243865966797
    10. '	m' → logprob: -17.00743865966797

Token 232: '.release' (ID: 50070)
  Prédit: '.release'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.release' → logprob: -0.00043674863991327584
    2. '.' → logprob: -7.875436782836914
    3. 'release' → logprob: -10.875436782836914
    4. '.re' → logprob: -11.125436782836914
    5. '.
' → logprob: -11.625436782836914
    6. ' .' → logprob: -11.750436782836914
    7. '.rel' → logprob: -13.000436782836914
    8. '.Release' → logprob: -13.500436782836914
    9. '.capacity' → logprob: -15.250436782836914
    10. ' release' → logprob: -15.375436782836914

Token 233: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0003467865171842277
    2. ' ))' → logprob: -8.625347137451172
    3. ')' → logprob: -8.875347137451172
    4. '))
' → logprob: -11.125347137451172
    5. '),' → logprob: -11.750347137451172
    6. ')))' → logprob: -13.750347137451172
    7. ',' → logprob: -13.875347137451172
    8. '()))' → logprob: -14.375347137451172
    9. ' ' → logprob: -14.500347137451172
    10. ' )' → logprob: -15.000347137451172

Token 234: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.003791292430832982
    2. ' 
' → logprob: -6.628791332244873
    3. '<|end|>' → logprob: -7.628791332244873
    4. '\n' → logprob: -7.878791332244873
    5. '  
' → logprob: -8.128790855407715
    6. '       ' → logprob: -8.253790855407715
    7. 'while' → logprob: -8.753790855407715
    8. '        
' → logprob: -8.753790855407715
    9. ' while' → logprob: -8.878790855407715
    10. ')' → logprob: -9.128790855407715

Token 235: ' #' (ID: 1069)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.6458853483200073
    2. 'while' → logprob: -1.5208853483200073
    3. 'result' → logprob: -1.7708853483200073
    4. '       ' → logprob: -3.270885467529297
    5. ' result' → logprob: -3.770885467529297
    6. '
' → logprob: -4.020885467529297
    7. ' 
' → logprob: -6.145885467529297
    8. '        
' → logprob: -6.145885467529297
    9. 'def' → logprob: -7.145885467529297
    10. 'res' → logprob: -7.270885467529297

Token 236: ' To' (ID: 2514)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.23238876461982727
    2. 'while' → logprob: -1.6073887348175049
    3. ' result' → logprob: -5.732388973236084
    4. 'result' → logprob: -6.482388973236084
    5. ' import' → logprob: -7.982388973236084
    6. ' best' → logprob: -8.107388496398926
    7. ' ans' → logprob: -8.607388496398926
    8. ' total' → logprob: -8.732388496398926
    9. 'import' → logprob: -8.857388496398926
    10. 'def' → logprob: -8.982388496398926

Token 237: ' check' (ID: 2371)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.3565618991851807
    2. ' survive' → logprob: -1.3565618991851807
    3. ' import' → logprob: -2.2315618991851807
    4. 'from' → logprob: -3.3565618991851807
    5. ' calculate' → logprob: -3.4815618991851807
    6. ' from' → logprob: -3.7315618991851807
    7. ' find' → logprob: -3.7315618991851807
    8. ' achieve' → logprob: -3.9815618991851807
    9. ' def' → logprob: -4.231561660766602
    10. 'calculate' → logprob: -4.231561660766602

Token 238: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.11091341823339462
    2. ' def' → logprob: -2.9859135150909424
    3. ' ' → logprob: -4.110913276672363
    4. '(' → logprob: -4.610913276672363
    5. ' (' → logprob: -4.610913276672363
    6. 'def' → logprob: -4.860913276672363
    7. ' for' → logprob: -5.985913276672363
    8. 'if' → logprob: -6.610913276672363
    9. '    ' → logprob: -6.735913276672363
    10. ' k' → logprob: -6.860913276672363

Token 239: ' we' (ID: 581)
  Prédit: ' any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' any' → logprob: -0.5019479990005493
    2. ' we' → logprob: -2.7519478797912598
    3. ' there' → logprob: -2.7519478797912598
    4. ' k' → logprob: -3.0019478797912598
    5. ' microbes' → logprob: -3.1269478797912598
    6. ' for' → logprob: -3.3769478797912598
    7. ' mid' → logprob: -3.5019478797912598
    8. ' a' → logprob: -3.5019478797912598
    9. ' possible' → logprob: -3.8769478797912598
    10. 'mid' → logprob: -4.12694787979126

Token 240: ' can' (ID: 665)
  Prédit: ' can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.0063841138035058975
    2. 'can' → logprob: -5.131383895874023
    3. ' have' → logprob: -8.256383895874023
    4. ' ' → logprob: -9.131383895874023
    5. '   ' → logprob: -10.381383895874023
    6. '_can' → logprob: -11.131383895874023
    7. '	can' → logprob: -11.381383895874023
    8. ' ' → logprob: -12.256383895874023
    9. ' find' → logprob: -12.881383895874023
    10. ')' → logprob: -13.131383895874023

Token 241: ' select' (ID: 4736)
  Prédit: ' select'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' select' → logprob: -0.49972304701805115
    2. ' survive' → logprob: -1.6247230768203735
    3. 'select' → logprob: -2.874722957611084
    4. ' find' → logprob: -3.374722957611084
    5. ' release' → logprob: -3.749722957611084
    6. ' pick' → logprob: -3.749722957611084
    7. ' choose' → logprob: -4.249722957611084
    8. ' have' → logprob: -4.624722957611084
    9. 'sur' → logprob: -4.874722957611084
    10. 'release' → logprob: -5.374722957611084

Token 242: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.004364371299743652
    2. 'k' → logprob: -5.879364490509033
    3. ' a' → logprob: -6.629364490509033
    4. ' ' → logprob: -9.879364013671875
    5. ' mid' → logprob: -10.004364013671875
    6. 'mid' → logprob: -10.129364013671875
    7. ' at' → logprob: -10.879364013671875
    8. ' microbes' → logprob: -11.754364013671875
    9. ' some' → logprob: -11.879364013671875
    10. ' for' → logprob: -11.879364013671875

Token 243: ' microbes' (ID: 156044)
  Prédit: ' microbes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' microbes' → logprob: -0.008331112563610077
    2. 'micro' → logprob: -5.633331298828125
    3. ' microorganisms' → logprob: -6.008331298828125
    4. '_micro' → logprob: -6.758331298828125
    5. ' micro' → logprob: -7.258331298828125
    6. '=' → logprob: -9.508331298828125
    7. ' ' → logprob: -9.883331298828125
    8. '<|end|>' → logprob: -10.133331298828125
    9. ':' → logprob: -10.508331298828125
    10. '```' → logprob: -10.758331298828125

Token 244: ' with' (ID: 483)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.21667176485061646
    2. ',' → logprob: -1.8416717052459717
    3. '       ' → logprob: -3.5916717052459717
    4. ' for' → logprob: -5.216671943664551
    5. ' :' → logprob: -6.966671943664551
    6. ' to' → logprob: -8.21667194366455
    7. '<|end|>' → logprob: -8.21667194366455
    8. '<|end|>' → logprob: -8.46667194366455
    9. '   ' → logprob: -8.59167194366455
    10. ' ,' → logprob: -8.59167194366455

Token 245: ' max' (ID: 2999)
  Prédit: ' total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.18076109886169434
    2. 'total' → logprob: -1.9307610988616943
    3. ' a' → logprob: -4.680761337280273
    4. ' sum' → logprob: -5.680761337280273
    5. 'sum' → logprob: -6.180761337280273
    6. ' capacity' → logprob: -6.430761337280273
    7. ' average' → logprob: -7.180761337280273
    8. 'a' → logprob: -7.305761337280273
    9. ' release' → logprob: -7.430761337280273
    10. 'capacity' → logprob: -8.305761337280273

Token 246: ' total' (ID: 3609)
  Prédit: '_release'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_release' → logprob: -0.6377115249633789
    2. ' release' → logprob: -2.012711524963379
    3. '_sur' → logprob: -2.012711524963379
    4. ' total' → logprob: -2.887711524963379
    5. 'release' → logprob: -3.012711524963379
    6. ' capacity' → logprob: -3.762711524963379
    7. ' survival' → logprob: -3.762711524963379
    8. ' surviv' → logprob: -4.512711524963379
    9. 'sur' → logprob: -5.137711524963379
    10. 'capacity' → logprob: -5.262711524963379

Token 247: ' release' (ID: 8232)
  Prédit: '_release'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_release' → logprob: -0.20346146821975708
    2. 'release' → logprob: -2.3284614086151123
    3. ' release' → logprob: -2.4534614086151123
    4. '_' → logprob: -8.203461647033691
    5. ' _' → logprob: -8.453461647033691
    6. ' releases' → logprob: -9.828461647033691
    7. 'Release' → logprob: -11.203461647033691
    8. '_re' → logprob: -11.203461647033691
    9. '```' → logprob: -11.328461647033691
    10. '   ' → logprob: -11.578461647033691

Token 248: ' <=' (ID: 5017)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5272706747055054
    2. ':' → logprob: -1.0272706747055054
    3. '       ' → logprob: -3.277270793914795
    4. ' ,' → logprob: -5.277270793914795
    5. ' for' → logprob: -6.277270793914795
    6. ' :' → logprob: -6.402270793914795
    7. '        ' → logprob: -7.027270793914795
    8. '   ' → logprob: -7.152270793914795
    9. ' and' → logprob: -7.777270793914795
    10. ' that' → logprob: -8.027270317077637

Token 249: ' capacity' (ID: 12241)
  Prédit: ' microbes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' microbes' → logprob: -0.18540199100971222
    2. 'micro' → logprob: -2.6854019165039062
    3. 'm' → logprob: -3.4354019165039062
    4. ' micro' → logprob: -3.9354019165039062
    5. ' k' → logprob: -4.060401916503906
    6. ' m' → logprob: -4.435401916503906
    7. 'k' → logprob: -4.935401916503906
    8. 'min' → logprob: -5.185401916503906
    9. ' min' → logprob: -5.685401916503906
    10. 'mic' → logprob: -7.435401916503906

Token 250: '*k' (ID: 81061)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4182811677455902
    2. '       ' → logprob: -2.668281078338623
    3. ' and' → logprob: -2.918281078338623
    4. '   ' → logprob: -3.043281078338623
    5. ',' → logprob: -3.293281078338623
    6. '_sum' → logprob: -3.543281078338623
    7. '    ' → logprob: -4.543281078338623
    8. 's' → logprob: -4.668281078338623
    9. 'sum' → logprob: -4.793281078338623
    10. ' for' → logprob: -4.918281078338623

Token 251: ' for' (ID: 395)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.40558958053588867
    2. '       ' → logprob: -1.1555895805358887
    3. ':
' → logprob: -4.655589580535889
    4. '
' → logprob: -6.030589580535889
    5. '):' → logprob: -6.655589580535889
    6. ',' → logprob: -6.655589580535889
    7. '   ' → logprob: -6.780589580535889
    8. '        
' → logprob: -7.280589580535889
    9. ')' → logprob: -7.530589580535889
    10. '):
' → logprob: -8.030590057373047

Token 252: ' all' (ID: 722)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' k' → logprob: -1.021523356437683
    2. ' some' → logprob: -1.021523356437683
    3. ' any' → logprob: -2.1465234756469727
    4. 'k' → logprob: -2.5215234756469727
    5. 'some' → logprob: -2.8965234756469727
    6. 'any' → logprob: -5.396523475646973
    7. 'm' → logprob: -5.521523475646973
    8. ' micro' → logprob: -6.021523475646973
    9. 'micro' → logprob: -6.021523475646973
    10. ' a' → logprob: -6.146523475646973

Token 253: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.1941450834274292
    2. '):' → logprob: -1.9441450834274292
    3. 'k' → logprob: -2.0691452026367188
    4. 'micro' → logprob: -2.1941452026367188
    5. '):
' → logprob: -2.3191452026367188
    6. ')' → logprob: -2.5691452026367188
    7. ' microbes' → logprob: -2.9441452026367188
    8. 'selected' → logprob: -3.6941452026367188
    9. 'm' → logprob: -4.819145202636719
    10. '       ' → logprob: -4.944145202636719

Token 254: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06956610083580017
    2. ':' → logprob: -2.819566011428833
    3. '   ' → logprob: -5.194566249847412
    4. ',' → logprob: -7.694566249847412
    5. '        
' → logprob: -8.694565773010254
    6. '<|end|>' → logprob: -8.694565773010254
    7. ')' → logprob: -8.819565773010254
    8. '           ' → logprob: -8.944565773010254
    9. ':
' → logprob: -9.194565773010254
    10. '):' → logprob: -9.194565773010254

Token 255: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.563167154788971
    2. '       ' → logprob: -1.4381670951843262
    3. ' 
' → logprob: -2.438167095184326
    4. ' while' → logprob: -3.438167095184326
    5. 'while' → logprob: -3.938167095184326
    6. '        
' → logprob: -4.313167095184326
    7. ' ' → logprob: -4.438167095184326
    8. '  
' → logprob: -4.563167095184326
    9. ':' → logprob: -5.063167095184326
    10. '    
' → logprob: -5.938167095184326

Token 256: ' We' (ID: 1416)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.1717788130044937
    2. 'while' → logprob: -2.171778917312622
    3. '       ' → logprob: -3.421778917312622
    4. ' def' → logprob: -5.171778678894043
    5. 'def' → logprob: -5.546778678894043
    6. '   ' → logprob: -8.171778678894043
    7. '
' → logprob: -8.296778678894043
    8. ' 
' → logprob: -8.546778678894043
    9. '        
' → logprob: -8.671778678894043
    10. '    ' → logprob: -8.671778678894043

Token 257: ' will' (ID: 738)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.330832302570343
    2. '   ' → logprob: -1.8308322429656982
    3. 'def' → logprob: -2.9558322429656982
    4. 'import' → logprob: -3.8308322429656982
    5. 'while' → logprob: -4.455832481384277
    6. '    ' → logprob: -5.205832481384277
    7. ' while' → logprob: -5.205832481384277
    8. ' def' → logprob: -5.580832481384277
    9. ' can' → logprob: -5.955832481384277
    10. 'will' → logprob: -6.330832481384277

Token 258: ' attempt' (ID: 8704)
  Prédit: 'select'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'select' → logprob: -1.4417340755462646
    2. 'import' → logprob: -1.8167340755462646
    3. '   ' → logprob: -2.0667340755462646
    4. 'sum' → logprob: -2.5667340755462646
    5. ' select' → logprob: -2.5667340755462646
    6. ' use' → logprob: -2.6917340755462646
    7. ' import' → logprob: -2.9417340755462646
    8. ' continue' → logprob: -3.5667340755462646
    9. ' sum' → logprob: -3.6917340755462646
    10. 'continue' → logprob: -4.191734313964844

Token 259: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.04197357967495918
    2. '    ' → logprob: -4.29197359085083
    3. ':' → logprob: -4.91697359085083
    4. ' for' → logprob: -5.04197359085083
    5. '   ' → logprob: -5.29197359085083
    6. 'to' → logprob: -5.41697359085083
    7. ' k' → logprob: -7.29197359085083
    8. '        ' → logprob: -7.66697359085083
    9. ' ' → logprob: -7.79197359085083
    10. '       ' → logprob: -7.91697359085083

Token 260: ' select' (ID: 4736)
  Prédit: 'select'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'select' → logprob: -0.6359639763832092
    2. ' select' → logprob: -1.2609639167785645
    3. '   ' → logprob: -3.3859639167785645
    4. ' for' → logprob: -3.7609639167785645
    5. 'import' → logprob: -3.7609639167785645
    6. 'def' → logprob: -3.7609639167785645
    7. 'find' → logprob: -4.0109639167785645
    8. ' find' → logprob: -4.0109639167785645
    9. ' def' → logprob: -4.5109639167785645
    10. '       ' → logprob: -5.0109639167785645

Token 261: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.3809402585029602
    2. 'k' → logprob: -1.6309401988983154
    3. ' microbes' → logprob: -2.6309401988983154
    4. ' the' → logprob: -3.1309401988983154
    5. 'the' → logprob: -6.1309404373168945
    6. 'micro' → logprob: -6.7559404373168945
    7. ' a' → logprob: -8.005940437316895
    8. '_k' → logprob: -8.005940437316895
    9. ' microorganisms' → logprob: -8.755940437316895
    10. ' micro' → logprob: -9.005940437316895

Token 262: ' microbes' (ID: 156044)
  Prédit: ' microbes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' microbes' → logprob: -0.27873897552490234
    2. ':' → logprob: -3.0287389755249023
    3. ')' → logprob: -3.2787389755249023
    4. '<|end|>' → logprob: -3.5287389755249023
    5. '_micro' → logprob: -3.5287389755249023
    6. ' microorganisms' → logprob: -4.028738975524902
    7. 'micro' → logprob: -4.153738975524902
    8. '):
' → logprob: -5.028738975524902
    9. ' =' → logprob: -5.028738975524902
    10. ' micro' → logprob: -5.278738975524902

Token 263: ' with' (ID: 483)
  Prédit: ' with'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' with' → logprob: -0.4130295515060425
    2. '       ' → logprob: -1.6630295515060425
    3. ' =' → logprob: -3.663029670715332
    4. 'with' → logprob: -3.788029670715332
    5. '<|end|>' → logprob: -4.038029670715332
    6. ' that' → logprob: -4.413029670715332
    7. ',' → logprob: -4.413029670715332
    8. '<|end|>' → logprob: -4.663029670715332
    9. ' for' → logprob: -5.038029670715332
    10. '_sorted' → logprob: -5.288029670715332

Token 264: ' minimal' (ID: 19957)
  Prédit: ' lowest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lowest' → logprob: -0.6070678234100342
    2. 'lowest' → logprob: -1.6070678234100342
    3. ' smallest' → logprob: -2.232067823410034
    4. ' the' → logprob: -2.357067823410034
    5. ' minimal' → logprob: -3.482067823410034
    6. ' highest' → logprob: -5.232068061828613
    7. 'the' → logprob: -5.357068061828613
    8. ' minimum' → logprob: -5.482068061828613
    9. ' least' → logprob: -5.732068061828613
    10. 'minimal' → logprob: -6.732068061828613

Token 265: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.39468181133270264
    2. ' release' → logprob: -1.2696818113327026
    3. 'release' → logprob: -4.144681930541992
    4. ' releases' → logprob: -4.269681930541992
    5. 'total' → logprob: -4.644681930541992
    6. ' sum' → logprob: -6.019681930541992
    7. ' capacity' → logprob: -6.519681930541992
    8. ' ' → logprob: -7.644681930541992
    9. '_release' → logprob: -7.894681930541992
    10. ' cumulative' → logprob: -8.519681930541992

Token 266: ' release' (ID: 8232)
  Prédit: '_release'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_release' → logprob: -0.16407640278339386
    2. 'release' → logprob: -2.289076328277588
    3. ' release' → logprob: -3.039076328277588
    4. ' _' → logprob: -6.664076328277588
    5. '_' → logprob: -7.539076328277588
    6. ' ' → logprob: -9.664076805114746
    7. '   ' → logprob: -9.789076805114746
    8. '```' → logprob: -10.164076805114746
    9. ' releases' → logprob: -10.539076805114746
    10. '
' → logprob: -10.789076805114746

Token 267: ' such' (ID: 2238)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1896439790725708
    2. ':' → logprob: -2.1896438598632812
    3. ',' → logprob: -3.4396438598632812
    4. '.' → logprob: -4.439643859863281
    5. '        
' → logprob: -5.314643859863281
    6. '
' → logprob: -6.689643859863281
    7. ' and' → logprob: -6.814643859863281
    8. '   ' → logprob: -6.814643859863281
    9. '<|end|>' → logprob: -7.064643859863281
    10. ')' → logprob: -7.064643859863281

Token 268: ' that' (ID: 484)
  Prédit: ' that'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' that' → logprob: -0.07197285443544388
    2. ':' → logprob: -3.9469728469848633
    3. 'that' → logprob: -4.446972846984863
    4. '=' → logprob: -4.696972846984863
    5. '   ' → logprob: -5.196972846984863
    6. '       ' → logprob: -5.196972846984863
    7. ',' → logprob: -5.196972846984863
    8. ' <=' → logprob: -5.946972846984863
    9. ' possible' → logprob: -6.821972846984863
    10. ' release' → logprob: -6.946972846984863

Token 269: ' for' (ID: 395)
  Prédit: ' total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' total' → logprob: -1.5811352729797363
    2. 'total' → logprob: -1.7061352729797363
    3. ' microbes' → logprob: -1.8311352729797363
    4. ' all' → logprob: -2.4561352729797363
    5. ' sum' → logprob: -2.8311352729797363
    6. ' the' → logprob: -2.8311352729797363
    7. 'sum' → logprob: -2.9561352729797363
    8. 'micro' → logprob: -3.0811352729797363
    9. 'all' → logprob: -3.4561352729797363
    10. ' release' → logprob: -3.8311352729797363

Token 270: ' each' (ID: 2454)
  Prédit: ' m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.5007511973381042
    2. ' all' → logprob: -1.250751256942749
    3. ' micro' → logprob: -4.12575101852417
    4. ' i' → logprob: -4.25075101852417
    5. ' any' → logprob: -4.25075101852417
    6. ' each' → logprob: -4.62575101852417
    7. ' the' → logprob: -4.75075101852417
    8. 'm' → logprob: -5.12575101852417
    9. ' _' → logprob: -5.37575101852417
    10. ' some' → logprob: -5.50075101852417

Token 271: ' selected' (ID: 6386)
  Prédit: 'micro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'micro' → logprob: -1.7215889692306519
    2. ')' → logprob: -2.0965890884399414
    3. ' micro' → logprob: -2.2215890884399414
    4. '_' → logprob: -2.4715890884399414
    5. '_micro' → logprob: -2.7215890884399414
    6. ' selected' → logprob: -2.8465890884399414
    7. '<|end|>' → logprob: -2.9715890884399414
    8. ' k' → logprob: -3.2215890884399414
    9. ' _' → logprob: -3.4715890884399414
    10. ':' → logprob: -3.8465890884399414

Token 272: ' micro' (ID: 10449)
  Prédit: 'micro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'micro' → logprob: -0.18605341017246246
    2. ' micro' → logprob: -2.686053514480591
    3. '_micro' → logprob: -3.436053514480591
    4. 'm' → logprob: -4.061053276062012
    5. ' microbes' → logprob: -4.061053276062012
    6. ':' → logprob: -5.061053276062012
    7. '_m' → logprob: -5.561053276062012
    8. ' release' → logprob: -5.811053276062012
    9. ',' → logprob: -6.186053276062012
    10. ')' → logprob: -6.311053276062012

Token 273: 'be' (ID: 1464)
  Prédit: 'be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'be' → logprob: -0.07517429441213608
    2. 'bes' → logprob: -2.700174331665039
    3. 'b' → logprob: -5.825174331665039
    4. '   ' → logprob: -7.700174331665039
    5. '       ' → logprob: -7.700174331665039
    6. ')' → logprob: -8.575174331665039
    7. '=' → logprob: -9.325174331665039
    8. 'obe' → logprob: -9.450174331665039
    9. '```' → logprob: -9.575174331665039
    10. 's' → logprob: -9.637674331665039

Token 274: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05489379167556763
    2. ':' → logprob: -3.054893732070923
    3. '       ' → logprob: -5.804893970489502
    4. ' the' → logprob: -6.804893970489502
    5. ' their' → logprob: -7.054893970489502
    6. ' ,' → logprob: -8.179893493652344
    7. ',
' → logprob: -8.554893493652344
    8. ':
' → logprob: -8.804893493652344
    9. 'their' → logprob: -9.179893493652344
    10. '           ' → logprob: -9.554893493652344

Token 275: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.11938737332820892
    2. ' the' → logprob: -3.11938738822937
    3. 'total' → logprob: -3.74438738822937
    4. ' release' → logprob: -3.86938738822937
    5. ' their' → logprob: -4.619387149810791
    6. ' return' → logprob: -5.369387149810791
    7. ' if' → logprob: -6.244387149810791
    8. 'release' → logprob: -6.619387149810791
    9. '   ' → logprob: -7.369387149810791
    10. ' ' → logprob: -7.494387149810791

Token 276: '_release' (ID: 59589)
  Prédit: '_release'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_release' → logprob: -0.32908526062965393
    2. '_' → logprob: -1.3290852308273315
    3. ' _' → logprob: -4.204085350036621
    4. '_re' → logprob: -8.329085350036621
    5. 'release' → logprob: -8.704085350036621
    6. ')_' → logprob: -10.454085350036621
    7. '<|end|>' → logprob: -10.454085350036621
    8. '.release' → logprob: -10.579085350036621
    9. '._' → logprob: -10.579085350036621
    10. ')' → logprob: -10.829085350036621

Token 277: ' <=' (ID: 5017)
  Prédit: ' /'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.6646040678024292
    2. ' <=' → logprob: -0.9146040678024292
    3. '/' → logprob: -3.2896041870117188
    4. '<=' → logprob: -3.9146041870117188
    5. ' *' → logprob: -4.039604187011719
    6. '*' → logprob: -5.789604187011719
    7. '<|end|>' → logprob: -5.789604187011719
    8. '<|end|>' → logprob: -7.164604187011719
    9. ' ' → logprob: -7.289604187011719
    10. '/k' → logprob: -7.539604187011719

Token 278: ' capacity' (ID: 12241)
  Prédit: ' m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.020013293251395226
    2. 'm' → logprob: -4.145013332366943
    3. ' micro' → logprob: -6.645013332366943
    4. ' microbes' → logprob: -6.645013332366943
    5. 'micro' → logprob: -7.020013332366943
    6. ' k' → logprob: -8.770012855529785
    7. ' capacity' → logprob: -8.895012855529785
    8. 'k' → logprob: -10.020012855529785
    9. 'capacity' → logprob: -10.145012855529785
    10. ' ' → logprob: -11.270012855529785

Token 279: ' *' (ID: 425)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.2037503719329834
    2. ':' → logprob: -1.4537503719329834
    3. ')' → logprob: -2.4537503719329834
    4. ' *' → logprob: -2.5787503719329834
    5. '<|end|>' → logprob: -2.9537503719329834
    6. ' and' → logprob: -3.0787503719329834
    7. '           ' → logprob: -3.4537503719329834
    8. '*' → logprob: -3.7037503719329834
    9. '   ' → logprob: -4.0787506103515625
    10. '**' → logprob: -4.0787506103515625

Token 280: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.06326577812433243
    2. ' k' → logprob: -2.813265800476074
    3. 'm' → logprob: -7.438265800476074
    4. '1' → logprob: -8.063265800476074
    5. '
' → logprob: -9.688265800476074
    6. ' m' → logprob: -9.813265800476074
    7. ' ' → logprob: -10.063265800476074
    8. 'count' → logprob: -10.188265800476074
    9. 'micro' → logprob: -10.438265800476074
    10. ' microbes' → logprob: -10.875765800476074

Token 281: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018865767866373062
    2. '
' → logprob: -4.143865585327148
    3. '        
' → logprob: -6.643865585327148
    4. '<|end|>' → logprob: -8.143865585327148
    5. ',' → logprob: -8.268865585327148
    6. 'while' → logprob: -8.643865585327148
    7. ')' → logprob: -8.643865585327148
    8. ' while' → logprob: -8.768865585327148
    9. '<|end|>' → logprob: -9.143865585327148
    10. ':' → logprob: -9.143865585327148

Token 282: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6143854856491089
    2. '
' → logprob: -0.8643854856491089
    3. '        
' → logprob: -3.8643856048583984
    4. ' 
' → logprob: -5.614385604858398
    5. '    
' → logprob: -5.989385604858398
    6. '   ' → logprob: -6.114385604858398
    7. ':' → logprob: -6.239385604858398
    8. '  
' → logprob: -6.864385604858398
    9. 'while' → logprob: -6.989385604858398
    10. '<|end|>' → logprob: -6.989385604858398

Token 283: ' def' (ID: 1056)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.505399227142334
    2. '
' → logprob: -1.380399227142334
    3. 'while' → logprob: -2.380399227142334
    4. ' while' → logprob: -3.380399227142334
    5. ' 
' → logprob: -4.755399227142334
    6. '        
' → logprob: -4.880399227142334
    7. '    
' → logprob: -7.255399227142334
    8. '  
' → logprob: -7.630399227142334
    9. '   ' → logprob: -7.880399227142334
    10. 'def' (adapté à ' def') → logprob: -8.630399703979492

Token 284: ' can' (ID: 665)
  Prédit: ' can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.043157096952199936
    2. ' check' → logprob: -3.2931571006774902
    3. 'can' → logprob: -5.41815710067749
    4. ' is' → logprob: -7.79315710067749
    5. 'check' → logprob: -8.793156623840332
    6. ' possible' → logprob: -9.918156623840332
    7. ' feasible' → logprob: -10.668156623840332
    8. '_can' → logprob: -11.418156623840332
    9. ' valid' → logprob: -12.793156623840332
    10. '	can' → logprob: -12.918156623840332

Token 285: '(k' (ID: 12125)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.029921848326921463
    2. '_sur' → logprob: -3.779921770095825
    3. '_choose' → logprob: -5.904922008514404
    4. '_continue' → logprob: -6.404922008514404
    5. ' _' → logprob: -7.029922008514404
    6. '_select' → logprob: -7.779922008514404
    7. '_s' → logprob: -8.029921531677246
    8. '_find' → logprob: -8.654921531677246
    9. '_accept' → logprob: -9.154921531677246
    10. '_validate' → logprob: -10.029921531677246

Token 286: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.027012063190340996
    2. ')' → logprob: -3.7770121097564697
    3. ',' → logprob: -5.652011871337891
    4. '):
' → logprob: -8.65201187133789
    5. ':' → logprob: -10.52701187133789
    6. ' ):' → logprob: -10.65201187133789
    7. 'self' → logprob: -12.02701187133789
    8. '   ' → logprob: -12.27701187133789
    9. ' )' → logprob: -13.40201187133789
    10. '       ' → logprob: -13.40201187133789

Token 287: ' int' (ID: 677)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7398880124092102
    2. 'int' → logprob: -0.7398880124092102
    3. '):' → logprob: -3.8648879528045654
    4. '):
' → logprob: -4.4898881912231445
    5. ' int' → logprob: -4.9898881912231445
    6. ' )' → logprob: -5.3648881912231445
    7. ' ' → logprob: -7.7398881912231445
    8. ' ):' → logprob: -7.8648881912231445
    9. '[int' → logprob: -8.239888191223145
    10. ' ):
' → logprob: -8.364888191223145

Token 288: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1429155319929123
    2. '):' → logprob: -2.0179154872894287
    3. '):
' → logprob: -9.017915725708008
    4. ' )' → logprob: -9.767915725708008
    5. ')->' → logprob: -10.267915725708008
    6. ' ):' → logprob: -11.142915725708008
    7. '   ' → logprob: -12.517915725708008
    8. ',' → logprob: -12.767915725708008
    9. ':' → logprob: -12.892915725708008
    10. '):
' → logprob: -13.392915725708008

Token 289: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0003020961594302207
    2. ':
' → logprob: -8.8753023147583
    3. '):' → logprob: -9.1253023147583
    4. '():' → logprob: -10.1253023147583
    5. ' :' → logprob: -11.7503023147583
    6. '       ' → logprob: -14.1253023147583
    7. '->' → logprob: -14.2503023147583
    8. '():
' → logprob: -14.2503023147583
    9. '>:' → logprob: -14.3753023147583
    10. ':return' → logprob: -14.6253023147583

Token 290: ' bool' (ID: 3792)
  Prédit: ' bool'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bool' → logprob: -0.4740905463695526
    2. 'bool' → logprob: -0.974090576171875
    3. ' ' → logprob: -11.974090576171875
    4. ' ' → logprob: -12.724090576171875
    5. '	bool' → logprob: -13.099090576171875
    6. '   ' → logprob: -14.474090576171875
    7. '<bool' → logprob: -14.724090576171875
    8. '(bool' → logprob: -15.099090576171875
    9. '  ' → logprob: -15.224090576171875
    10. ')' → logprob: -16.099090576171875

Token 291: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002600387902930379
    2. ':
' → logprob: -6.127600193023682
    3. '):' → logprob: -8.25260066986084
    4. '       ' → logprob: -9.00260066986084
    5. '):
' → logprob: -11.25260066986084
    6. ',' → logprob: -11.87760066986084
    7. '():' → logprob: -12.50260066986084
    8. ' :' → logprob: -13.12760066986084
    9. '<|end|>' → logprob: -13.37760066986084
    10. ':

' → logprob: -14.25260066986084

Token 292: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13671952486038208
    2. '
' → logprob: -3.1367194652557373
    3. ' 
' → logprob: -3.7617194652557373
    4. '        
' → logprob: -4.761719703674316
    5. '        ' → logprob: -4.886719703674316
    6. '<|end|>' → logprob: -4.886719703674316
    7. ' ' → logprob: -5.011719703674316
    8. '' → logprob: -5.386719703674316
    9. '   ' → logprob: -5.511719703674316
    10. '    ' → logprob: -5.636719703674316

Token 293: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08157853782176971
    2. '       ' → logprob: -3.706578493118286
    3. 'selected' → logprob: -3.831578493118286
    4. ' selected' → logprob: -4.706578731536865
    5. ' releases' → logprob: -5.206578731536865
    6. 'total' → logprob: -5.456578731536865
    7. ' microbes' → logprob: -6.081578731536865
    8. ' total' → logprob: -6.581578731536865
    9. 'micro' → logprob: -6.956578731536865
    10. 'sorted' → logprob: -7.206578731536865

Token 294: ' Strategy' (ID: 39435)
  Prédit: 'selected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'selected' → logprob: -0.2675163745880127
    2. ' selected' → logprob: -2.2675163745880127
    3. 'c' → logprob: -2.5175163745880127
    4. 'sorted' → logprob: -4.767516136169434
    5. ' candidates' → logprob: -5.017516136169434
    6. '           ' → logprob: -5.267516136169434
    7. '       ' → logprob: -5.392516136169434
    8. 'subset' → logprob: -5.392516136169434
    9. 'possible' → logprob: -5.892516136169434
    10. 'valid' → logprob: -6.142516136169434

Token 295: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5094817876815796
    2. '           ' → logprob: -1.0094817876815796
    3. '            
' → logprob: -4.384481906890869
    4. '       ' → logprob: -5.259481906890869
    5. ',' → logprob: -5.759481906890869
    6. ':
' → logprob: -5.884481906890869
    7. '        
' → logprob: -6.634481906890869
    8. '
' → logprob: -6.759481906890869
    9. '    
' → logprob: -6.759481906890869
    10. '<|end|>' → logprob: -6.759481906890869

Token 296: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0037363029550760984
    2. '       ' → logprob: -6.75373649597168
    3. ' selected' → logprob: -7.12873649597168
    4. 'selected' → logprob: -7.50373649597168
    5. ' releases' → logprob: -8.37873649597168
    6. ' candidates' → logprob: -8.62873649597168
    7. ' sorted' → logprob: -9.37873649597168
    8. '   ' → logprob: -9.50373649597168
    9. '            
' → logprob: -9.62873649597168
    10. 'total' → logprob: -10.00373649597168

Token 297: ' #' (ID: 1069)
  Prédit: ' selected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' selected' → logprob: -0.6900700926780701
    2. '           ' → logprob: -1.3150701522827148
    3. 'selected' → logprob: -1.9400701522827148
    4. ' candidates' → logprob: -3.690070152282715
    5. 'c' → logprob: -5.065070152282715
    6. ' releases' → logprob: -5.190070152282715
    7. ' sorted' → logprob: -5.190070152282715
    8. ' valid' → logprob: -5.565070152282715
    9. ' subset' → logprob: -5.940070152282715
    10. '#' (adapté à ' #') → logprob: -6.065070152282715

Token 298: ' For' (ID: 2214)
  Prédit: ' selected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' selected' → logprob: -0.5594715476036072
    2. 'selected' → logprob: -1.309471607208252
    3. '           ' → logprob: -2.809471607208252
    4. ' candidates' → logprob: -3.434471607208252
    5. 'c' → logprob: -3.934471607208252
    6. ' sorted' → logprob: -4.934471607208252
    7. ' microbes' → logprob: -5.059471607208252
    8. '#' → logprob: -5.184471607208252
    9. 'sorted' → logprob: -6.059471607208252
    10. ' valid' → logprob: -6.059471607208252

Token 299: ' a' (ID: 261)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -1.2466518878936768
    2. ' m' → logprob: -1.4966518878936768
    3. ' selected' → logprob: -2.2466518878936768
    4. ' k' → logprob: -2.8716518878936768
    5. ' microbes' → logprob: -3.1216518878936768
    6. ' micro' → logprob: -3.2466518878936768
    7. ' _' → logprob: -3.8716518878936768
    8. 'm' → logprob: -3.9966518878936768
    9. ' subset' → logprob: -3.9966518878936768
    10. ' release' → logprob: -3.9966518878936768

Token 300: ' fixed' (ID: 13213)
  Prédit: 'll'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'll' → logprob: -0.33017608523368835
    2. ' given' → logprob: -3.2051761150360107
    3. 'selected' → logprob: -3.5801761150360107
    4. ' selected' → logprob: -3.8301761150360107
    5. 'i' → logprob: -3.9551761150360107
    6. 'm' → logprob: -3.9551761150360107
    7. 'micro' → logprob: -4.080175876617432
    8. ' i' → logprob: -4.205175876617432
    9. 'given' → logprob: -4.455175876617432
    10. ' k' → logprob: -4.455175876617432

Token 301: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.7380488514900208
    2. ' k' → logprob: -0.7380488514900208
    3. ' release' → logprob: -4.238049030303955
    4. 'release' → logprob: -4.863049030303955
    5. 'count' → logprob: -5.488049030303955
    6. ' number' → logprob: -5.988049030303955
    7. ' subset' → logprob: -6.363049030303955
    8. ' total' → logprob: -6.488049030303955
    9. ' micro' → logprob: -6.738049030303955
    10. 'micro' → logprob: -7.113049030303955

Token 302: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01460215449333191
    2. ':' → logprob: -4.514602184295654
    3. '           ' → logprob: -6.014602184295654
    4. ',
' → logprob: -7.389602184295654
    5. ' ,' → logprob: -9.139601707458496
    6. ':
' → logprob: -9.264601707458496
    7. '       ' → logprob: -10.264601707458496
    8. ')' → logprob: -10.389601707458496
    9. '
' → logprob: -10.514601707458496
    10. '               ' → logprob: -10.639601707458496

Token 303: ' select' (ID: 4736)
  Prédit: ' selected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' selected' → logprob: -0.4161539375782013
    2. ' releases' → logprob: -2.291153907775879
    3. '           ' → logprob: -2.541153907775879
    4. 'selected' → logprob: -2.791153907775879
    5. ' sorted' → logprob: -4.041153907775879
    6. ' candidates' → logprob: -4.291153907775879
    7. ' microbes' → logprob: -4.416153907775879
    8. ' total' → logprob: -4.666153907775879
    9. ' release' → logprob: -5.041153907775879
    10. ' return' → logprob: -5.291153907775879

Token 304: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.7648691534996033
    2. 'k' → logprob: -1.514869213104248
    3. ' microbes' → logprob: -1.764869213104248
    4. ' the' → logprob: -2.139869213104248
    5. 'the' → logprob: -4.389869213104248
    6. 'micro' → logprob: -5.014869213104248
    7. ' ' → logprob: -6.639869213104248
    8. ' micro' → logprob: -7.264869213104248
    9. 'lowest' → logprob: -7.639869213104248
    10. ' lowest' → logprob: -7.639869213104248

Token 305: ' microbes' (ID: 156044)
  Prédit: ' microbes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' microbes' → logprob: -0.021398037672042847
    2. 'micro' → logprob: -4.521398067474365
    3. ' microorganisms' → logprob: -5.396398067474365
    4. '_micro' → logprob: -5.646398067474365
    5. ' micro' → logprob: -6.771398067474365
    6. ')' → logprob: -8.896397590637207
    7. '.micro' → logprob: -8.896397590637207
    8. '=' → logprob: -9.021397590637207
    9. '-' → logprob: -9.271397590637207
    10. ' microbial' → logprob: -9.771397590637207

Token 306: ' that' (ID: 484)
  Prédit: ' with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' with' → logprob: -0.11176523566246033
    2. 'with' → logprob: -3.111765146255493
    3. '           ' → logprob: -3.611765146255493
    4. '<|end|>' → logprob: -4.986765384674072
    5. '_sorted' → logprob: -4.986765384674072
    6. 'sorted' → logprob: -5.736765384674072
    7. ' sorted' → logprob: -5.861765384674072
    8. ' that' → logprob: -5.986765384674072
    9. '<|end|>' → logprob: -5.986765384674072
    10. '[' → logprob: -6.611765384674072

Token 307: ' have' (ID: 679)
  Prédit: ' have'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' have' → logprob: -0.2993873357772827
    2. 'min' → logprob: -2.5493874549865723
    3. 'have' → logprob: -2.5493874549865723
    4. ' minimize' → logprob: -2.5493874549865723
    5. ' can' → logprob: -5.549387454986572
    6. ' are' → logprob: -5.799387454986572
    7. ' release' → logprob: -6.299387454986572
    8. 'm' → logprob: -6.424387454986572
    9. 'micro' → logprob: -6.424387454986572
    10. 'sorted' → logprob: -6.924387454986572

Token 308: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.768044114112854
    2. 'lowest' → logprob: -0.893044114112854
    3. ' lowest' → logprob: -2.6430439949035645
    4. 'the' → logprob: -3.5180439949035645
    5. ' smallest' → logprob: -4.7680439949035645
    6. 'release' → logprob: -5.8930439949035645
    7. 'capacity' → logprob: -6.0180439949035645
    8. 'low' → logprob: -6.2680439949035645
    9. ' release' → logprob: -6.3930439949035645
    10. ' minimal' → logprob: -6.6430439949035645

Token 309: ' lowest' (ID: 23120)
  Prédit: 'lowest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lowest' → logprob: -0.11036336421966553
    2. 'small' → logprob: -2.985363483428955
    3. ' smallest' → logprob: -3.360363483428955
    4. ' lowest' → logprob: -4.610363483428955
    5. 'least' → logprob: -4.985363483428955
    6. 'capacity' → logprob: -6.485363483428955
    7. ' least' → logprob: -7.860363483428955
    8. 'release' → logprob: -8.735363006591797
    9. '
' → logprob: -9.235363006591797
    10. 'minimal' → logprob: -9.360363006591797

Token 310: ' release' (ID: 8232)
  Prédit: 'release'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'release' → logprob: -0.34405842423439026
    2. ' release' → logprob: -1.3440583944320679
    3. ' releases' → logprob: -4.094058513641357
    4. '.release' → logprob: -4.844058513641357
    5. '_release' → logprob: -5.719058513641357
    6. '   ' → logprob: -7.344058513641357
    7. ' .' → logprob: -7.594058513641357
    8. 'total' → logprob: -8.3440580368042
    9. ' total' → logprob: -8.3440580368042
    10. 're' → logprob: -8.4690580368042

Token 311: ' such' (ID: 2238)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5942035913467407
    2. ' values' → logprob: -2.094203472137451
    3. ' amounts' → logprob: -2.594203472137451
    4. ')' → logprob: -2.969203472137451
    5. '           ' → logprob: -3.469203472137451
    6. '   ' → logprob: -3.469203472137451
    7. 'values' → logprob: -3.719203472137451
    8. '[:' → logprob: -4.094203472137451
    9. '       ' → logprob: -4.219203472137451
    10. '_values' → logprob: -4.719203472137451

Token 312: ' that' (ID: 484)
  Prédit: ' than'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' than' → logprob: -0.881565511226654
    2. ':' → logprob: -1.5065655708312988
    3. '           ' → logprob: -2.006565570831299
    4. ' that' → logprob: -2.756565570831299
    5. 'than' → logprob: -3.256565570831299
    6. 'that' → logprob: -3.756565570831299
    7. ',' → logprob: -3.756565570831299
    8. '=' → logprob: -4.006565570831299
    9. '<|end|>' → logprob: -4.881565570831299
    10. '<|end|>' → logprob: -4.881565570831299

Token 313: ' each' (ID: 2454)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' all' → logprob: -1.023880958557129
    2. ' sum' → logprob: -1.898880958557129
    3. 'sum' → logprob: -2.023880958557129
    4. ' for' → logprob: -2.773880958557129
    5. ' total' → logprob: -2.773880958557129
    6. 'all' → logprob: -2.898880958557129
    7. 'micro' → logprob: -3.148880958557129
    8. 'total' → logprob: -3.523880958557129
    9. ' microbes' → logprob: -3.648880958557129
    10. ' micro' → logprob: -4.023880958557129

Token 314: ' micro' (ID: 10449)
  Prédit: '.micro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.micro' → logprob: -0.7195766568183899
    2. 'micro' → logprob: -1.4695765972137451
    3. ' micro' → logprob: -2.219576597213745
    4. '.release' → logprob: -3.469576597213745
    5. ' has' → logprob: -3.844576597213745
    6. ' selected' → logprob: -3.969576597213745
    7. ' release' → logprob: -4.094576835632324
    8. '_micro' → logprob: -4.094576835632324
    9. ' .' → logprob: -4.344576835632324
    10. '.selected' → logprob: -4.969576835632324

Token 315: 'be' (ID: 1464)
  Prédit: 'be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'be' → logprob: -0.021735787391662598
    2. 'bes' → logprob: -4.271735668182373
    3. '_release' → logprob: -5.771735668182373
    4. '       ' → logprob: -6.271735668182373
    5. 'release' → logprob: -7.021735668182373
    6. '           ' → logprob: -7.271735668182373
    7. '   ' → logprob: -7.896735668182373
    8. ' release' → logprob: -8.896736145019531
    9. '               ' → logprob: -9.146736145019531
    10. '_be' → logprob: -9.521736145019531

Token 316: ''s' (ID: 885)
  Prédit: '.capacity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.capacity' → logprob: -0.01141029316931963
    2. ' .' → logprob: -5.636410236358643
    3. '.release' → logprob: -5.761410236358643
    4. '.' → logprob: -6.511410236358643
    5. '.can' → logprob: -7.261410236358643
    6. ' can' → logprob: -7.636410236358643
    7. 'capacity' → logprob: -7.761410236358643
    8. '.has' → logprob: -8.1364107131958
    9. '   ' → logprob: -8.2614107131958
    10. ' has' → logprob: -8.5114107131958

Token 317: ' capacity' (ID: 12241)
  Prédit: 'capacity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'capacity' → logprob: -0.31337061524391174
    2. ' capacity' → logprob: -1.3133705854415894
    3. '.capacity' → logprob: -9.813370704650879
    4. '   ' → logprob: -10.813370704650879
    5. '```' → logprob: -10.813370704650879
    6. '
' → logprob: -12.563370704650879
    7. 'release' → logprob: -13.313370704650879
    8. '_capacity' → logprob: -13.563370704650879
    9. 'cap' → logprob: -13.563370704650879
    10. ' ' → logprob: -13.938370704650879

Token 318: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.24544626474380493
    2. ' *' → logprob: -1.9954462051391602
    3. '>=' → logprob: -2.62044620513916
    4. '*' → logprob: -5.37044620513916
    5. '           ' → logprob: -6.87044620513916
    6. ' is' → logprob: -6.99544620513916
    7. '```' → logprob: -7.37044620513916
    8. ')' → logprob: -8.24544620513916
    9. ' ' → logprob: -8.49544620513916
    10. ')>=' → logprob: -8.62044620513916

Token 319: ' total' (ID: 3609)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.765823483467102
    2. ' microbes' → logprob: -1.390823483467102
    3. ' k' → logprob: -1.765823483467102
    4. 'micro' → logprob: -2.8908233642578125
    5. ' micro' → logprob: -4.5158233642578125
    6. ' total' → logprob: -4.8908233642578125
    7. 'max' → logprob: -5.0158233642578125
    8. 'total' → logprob: -5.1408233642578125
    9. ' max' → logprob: -5.3908233642578125
    10. '(k' → logprob: -5.8908233642578125

Token 320: '_release' (ID: 59589)
  Prédit: '_release'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_release' → logprob: -0.005446008872240782
    2. 'release' → logprob: -6.130445957183838
    3. ' _' → logprob: -6.505445957183838
    4. '_' → logprob: -7.005445957183838
    5. '           ' → logprob: -8.005446434020996
    6. ' release' → logprob: -8.880446434020996
    7. '   ' → logprob: -9.130446434020996
    8. '```' → logprob: -9.880446434020996
    9. '       ' → logprob: -10.005446434020996
    10. ' ' → logprob: -10.880446434020996

Token 321: '/k' (ID: 28096)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06517903506755829
    2. ' //' → logprob: -3.6901791095733643
    3. ' /' → logprob: -4.565178871154785
    4. '//' → logprob: -5.065178871154785
    5. '       ' → logprob: -5.315178871154785
    6. ':' → logprob: -5.815178871154785
    7. ' and' → logprob: -6.065178871154785
    8. '               ' → logprob: -6.190178871154785
    9. '            
' → logprob: -6.315178871154785
    10. ' if' → logprob: -6.690178871154785

Token 322: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5525994896888733
    2. ':' → logprob: -1.0525994300842285
    3. '       ' → logprob: -3.6775994300842285
    4. ':
' → logprob: -4.5525994300842285
    5. '
' → logprob: -4.6775994300842285
    6. '):' → logprob: -5.3025994300842285
    7. ')' → logprob: -5.6775994300842285
    8. '               ' → logprob: -5.6775994300842285
    9. ',' → logprob: -5.8025994300842285
    10. '            
' → logprob: -5.9275994300842285

Token 323: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11052636057138443
    2. '       ' → logprob: -2.3605263233184814
    3. ')' → logprob: -5.6105265617370605
    4. ':' → logprob: -6.2355265617370605
    5. '               ' → logprob: -6.3605265617370605
    6. ',' → logprob: -6.9855265617370605
    7. '):' → logprob: -7.6105265617370605
    8. '   ' → logprob: -7.7355265617370605
    9. '            
' → logprob: -8.360526084899902
    10. '.' → logprob: -8.985526084899902

Token 324: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.23824211955070496
    2. '       ' → logprob: -1.7382421493530273
    3. '            
' → logprob: -4.738242149353027
    4. 'return' → logprob: -4.988242149353027
    5. '
' → logprob: -5.363242149353027
    6. '        
' → logprob: -5.488242149353027
    7. ' return' → logprob: -5.488242149353027
    8. ':' → logprob: -6.863242149353027
    9. '    
' → logprob: -6.863242149353027
    10. '  
' → logprob: -7.238242149353027

Token 325: ' But' (ID: 3072)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02596106566488743
    2. '            
' → logprob: -4.775960922241211
    3. '       ' → logprob: -5.525960922241211
    4. '
' → logprob: -5.525960922241211
    5. 'total' → logprob: -6.025960922241211
    6. ' total' → logprob: -6.525960922241211
    7. ' 
' → logprob: -7.150960922241211
    8. ' return' → logprob: -7.150960922241211
    9. 'return' → logprob: -7.150960922241211
    10. '        
' → logprob: -7.275960922241211

Token 326: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.46818286180496216
    2. ' if' → logprob: -1.9681828022003174
    3. ' for' → logprob: -2.8431828022003174
    4. ' we' → logprob: -2.9681828022003174
    5. 'total' → logprob: -3.4681828022003174
    6. '           ' → logprob: -4.0931830406188965
    7. ' the' → logprob: -4.3431830406188965
    8. ' return' → logprob: -4.3431830406188965
    9. '            ' → logprob: -4.7181830406188965
    10. ' k' → logprob: -4.9681830406188965

Token 327: '_release' (ID: 59589)
  Prédit: '_release'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_release' → logprob: -0.11541019380092621
    2. '_' → logprob: -2.240410089492798
    3. ' _' → logprob: -6.615410327911377
    4. 'release' → logprob: -7.865410327911377
    5. '_re' → logprob: -8.240409851074219
    6. '_return' → logprob: -8.740409851074219
    7. '```' → logprob: -9.115409851074219
    8. ')_' → logprob: -10.365409851074219
    9. '_RELEASE' → logprob: -10.740409851074219
    10. '_
' → logprob: -10.990409851074219

Token 328: ' depends' (ID: 20102)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.28514984250068665
    2. '=' → logprob: -1.7851498126983643
    3. 'tokens' → logprob: -4.660150051116943
    4. ' <=' → logprob: -4.910150051116943
    5. '_tokens' → logprob: -5.035150051116943
    6. ',' → logprob: -5.160150051116943
    7. ')' → logprob: -5.160150051116943
    8. ' /' → logprob: -5.410150051116943
    9. '_needed' → logprob: -5.410150051116943
    10. '/' → logprob: -5.660150051116943

Token 329: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.022441968321800232
    2. 'on' → logprob: -3.897441864013672
    3. '<|end|>' → logprob: -7.147441864013672
    4. '<|end|>' → logprob: -8.272441864013672
    5. ' ' → logprob: -8.522441864013672
    6. ' only' → logprob: -9.022441864013672
    7. '_on' → logprob: -9.647441864013672
    8. ' ' → logprob: -9.897441864013672
    9. '    ' → logprob: -10.022441864013672
    10. '	on' → logprob: -10.459941864013672

Token 330: ' selected' (ID: 6386)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.6174102425575256
    2. 'the' → logprob: -1.4924101829528809
    3. ' sum' → logprob: -2.492410182952881
    4. 'sum' → logprob: -2.992410182952881
    5. ' k' → logprob: -4.117410182952881
    6. ' selected' → logprob: -4.242410182952881
    7. 'selected' → logprob: -4.242410182952881
    8. ' total' → logprob: -4.242410182952881
    9. ' selecting' → logprob: -4.367410182952881
    10. 'total' → logprob: -4.867410182952881

Token 331: ' microbes' (ID: 156044)
  Prédit: '_release'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_release' → logprob: -0.42018571496009827
    2. '_' → logprob: -1.9201856851577759
    3. '_micro' → logprob: -2.1701858043670654
    4. ' microbes' → logprob: -3.1701858043670654
    5. 'micro' → logprob: -4.545185565948486
    6. '_re' → logprob: -4.795185565948486
    7. 'release' → logprob: -5.170185565948486
    8. ' _' → logprob: -5.295185565948486
    9. ' release' → logprob: -6.045185565948486
    10. ' micro' → logprob: -6.045185565948486

Token 332: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6771369576454163
    2. '           ' → logprob: -1.1771368980407715
    3. '       ' → logprob: -2.3021368980407715
    4. '):' → logprob: -3.8021368980407715
    5. ',' → logprob: -4.3021368980407715
    6. ':
' → logprob: -4.5521368980407715
    7. ')' → logprob: -4.5521368980407715
    8. '   ' → logprob: -5.6771368980407715
    9. '            
' → logprob: -5.8021368980407715
    10. '
' → logprob: -5.9271368980407715

Token 333: ' circular' (ID: 37626)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.4116984009742737
    2. '           ' → logprob: -2.661698341369629
    3. ' total' → logprob: -2.786698341369629
    4. ' continue' → logprob: -3.411698341369629
    5. '            ' → logprob: -3.411698341369629
    6. ' selected' → logprob: -3.786698341369629
    7. 'return' → logprob: -3.911698341369629
    8. ' sum' → logprob: -4.286698341369629
    9. ' pass' → logprob: -4.786698341369629
    10. ' we' → logprob: -5.036698341369629

Token 334: ' dependency' (ID: 50228)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.5458474159240723
    2. ' logic' → logprob: -1.5458474159240723
    3. '_' → logprob: -1.6708474159240723
    4. ' return' → logprob: -2.5458474159240723
    5. '       ' → logprob: -2.6708474159240723
    6. ':' → logprob: -3.4208474159240723
    7. '           ' → logprob: -3.4208474159240723
    8. ' reasoning' → logprob: -3.6708474159240723
    9. ' 
' → logprob: -3.7958474159240723
    10. 'return' → logprob: -3.9208474159240723

Token 335: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03278038650751114
    2. '       ' → logprob: -4.157780170440674
    3. '            
' → logprob: -5.032780170440674
    4. '
' → logprob: -6.407780170440674
    5. ':' → logprob: -6.657780170440674
    6. ',' → logprob: -6.782780170440674
    7. '        
' → logprob: -7.032780170440674
    8. ')' → logprob: -7.407780170440674
    9. 'return' → logprob: -7.407780170440674
    10. '    
' → logprob: -7.407780170440674

Token 336: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3844110369682312
    2. '       ' → logprob: -1.259411096572876
    3. ':' → logprob: -4.634410858154297
    4. '        
' → logprob: -5.259410858154297
    5. '    
' → logprob: -5.634410858154297
    6. '            
' → logprob: -5.759410858154297
    7. '   ' → logprob: -5.884410858154297
    8. ')' → logprob: -6.134410858154297
    9. '<|end|>' → logprob: -6.134410858154297
    10. '
' → logprob: -6.384410858154297

Token 337: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09551376849412918
    2. '
' → logprob: -2.9705138206481934
    3. '            
' → logprob: -4.220513820648193
    4. '    
' → logprob: -4.720513820648193
    5. ' 
' → logprob: -5.095513820648193
    6. '       ' → logprob: -5.470513820648193
    7. '  
' → logprob: -6.345513820648193
    8. '        
' → logprob: -6.470513820648193
    9. ' return' → logprob: -7.470513820648193
    10. 'return' → logprob: -7.845513820648193

Token 338: ' Approach' (ID: 86383)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.30272427201271057
    2. '
' → logprob: -2.3027243614196777
    3. ' selected' → logprob: -3.1777243614196777
    4. '#' → logprob: -4.052724361419678
    5. '            ' → logprob: -4.177724361419678
    6. ' 
' → logprob: -4.177724361419678
    7. ' return' → logprob: -4.302724361419678
    8. '            
' → logprob: -4.302724361419678
    9. ' #' → logprob: -4.677724361419678
    10. ' total' → logprob: -4.927724361419678

Token 339: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1696484237909317
    2. '           ' → logprob: -2.4196484088897705
    3. ' =' → logprob: -3.6696484088897705
    4. ':
' → logprob: -4.54464864730835
    5. ' :' → logprob: -5.04464864730835
    6. ' is' → logprob: -5.16964864730835
    7. '            ' → logprob: -5.16964864730835
    8. '            
' → logprob: -5.66964864730835
    9. ' ' → logprob: -6.79464864730835
    10. ',' → logprob: -6.91964864730835

Token 340: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002362325321882963
    2. '       ' → logprob: -7.377362251281738
    3. '            ' → logprob: -7.377362251281738
    4. '            
' → logprob: -8.002362251281738
    5. '
' → logprob: -9.002362251281738
    6. ' return' → logprob: -9.127362251281738
    7. 'import' → logprob: -9.127362251281738
    8. '        ' → logprob: -9.627362251281738
    9. '          ' → logprob: -9.627362251281738
    10. ' from' → logprob: -10.627362251281738

Token 341: ' #' (ID: 1069)
  Prédit: ' low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' low' → logprob: -0.8670704960823059
    2. ' selected' → logprob: -1.7420704364776611
    3. ' left' → logprob: -1.9920704364776611
    4. '           ' → logprob: -2.742070436477661
    5. 'low' → logprob: -3.117070436477661
    6. ' releases' → logprob: -3.367070436477661
    7. ' #' → logprob: -3.992070436477661
    8. 'selected' → logprob: -3.992070436477661
    9. ' valid' → logprob: -4.49207067489624
    10. ' lo' → logprob: -4.61707067489624

Token 342: ' Select' (ID: 13482)
  Prédit: ' low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' low' → logprob: -1.1232887506484985
    2. ' selected' → logprob: -1.4982887506484985
    3. '#' → logprob: -2.248288631439209
    4. ' #' → logprob: -2.748288631439209
    5. ' left' → logprob: -2.873288631439209
    6. 'low' → logprob: -3.498288631439209
    7. ' select' → logprob: -3.623288631439209
    8. 'selected' → logprob: -3.748288631439209
    9. ' Select' → logprob: -4.123288631439209
    10. ' sorted' → logprob: -4.123288631439209

Token 343: ' microbes' (ID: 156044)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.472936749458313
    2. ' the' → logprob: -1.597936749458313
    3. ' microbes' → logprob: -2.4729366302490234
    4. 'the' → logprob: -2.8479366302490234
    5. ' =' → logprob: -2.9729366302490234
    6. 'c' → logprob: -3.2229366302490234
    7. ' candidates' → logprob: -3.4729366302490234
    8. 'micro' → logprob: -3.4729366302490234
    9. '_candidates' → logprob: -3.7229366302490234
    10. ' k' → logprob: -3.7229366302490234

Token 344: ' whose' (ID: 12119)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5705639719963074
    2. '_sorted' → logprob: -1.6955640316009521
    3. '=' → logprob: -2.320564031600952
    4. 'with' → logprob: -2.945564031600952
    5. '_with' → logprob: -3.195564031600952
    6. ' with' → logprob: -3.320564031600952
    7. '           ' → logprob: -4.945563793182373
    8. '_filtered' → logprob: -5.195563793182373
    9. 'sorted' → logprob: -6.320563793182373
    10. '_selected' → logprob: -7.070563793182373

Token 345: ' capacity' (ID: 12241)
  Prédit: 'capacity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'capacity' → logprob: -0.12695088982582092
    2. ' capacity' → logprob: -2.126950979232788
    3. '.capacity' → logprob: -11.001951217651367
    4. '   ' → logprob: -12.876951217651367
    5. 'cap' → logprob: -13.876951217651367
    6. '_capacity' → logprob: -14.376951217651367
    7. ' capacities' → logprob: -14.751951217651367
    8. '```' → logprob: -14.751951217651367
    9. 'capac' → logprob: -15.001951217651367
    10. ' ' → logprob: -15.001951217651367

Token 346: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.07983105629682541
    2. '>=' → logprob: -2.579831123352051
    3. ']>=' → logprob: -7.829831123352051
    4. ')>=' → logprob: -8.32983112335205
    5. '```' → logprob: -9.57983112335205
    6. '<|end|>' → logprob: -9.82983112335205
    7. '   ' → logprob: -9.95483112335205
    8. ')' → logprob: -10.45483112335205
    9. '    ' → logprob: -11.07983112335205
    10. ' ' → logprob: -11.07983112335205

Token 347: ' threshold' (ID: 24313)
  Prédit: ' microbes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' microbes' → logprob: -0.9438417553901672
    2. 'micro' → logprob: -1.4438416957855225
    3. 'k' → logprob: -1.9438416957855225
    4. ' k' → logprob: -2.8188416957855225
    5. ' total' → logprob: -3.4438416957855225
    6. ' micro' → logprob: -3.4438416957855225
    7. '0' → logprob: -3.6938416957855225
    8. 'total' → logprob: -3.6938416957855225
    9. 'min' → logprob: -4.818841934204102
    10. '(k' → logprob: -4.943841934204102

Token 348: '.' (ID: 13)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7962245345115662
    2. '
' → logprob: -1.796224594116211
    3. '=' → logprob: -1.921224594116211
    4. '           ' → logprob: -1.921224594116211
    5. ':' → logprob: -3.171224594116211
    6. '            
' → logprob: -4.546224594116211
    7. ':
' → logprob: -5.296224594116211
    8. '       ' → logprob: -5.296224594116211
    9. ',' → logprob: -5.546224594116211
    10. '    
' → logprob: -5.921224594116211

Token 349: ' Threshold' (ID: 129362)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06371306627988815
    2. '
' → logprob: -3.4387130737304688
    3. '            
' → logprob: -4.688713073730469
    4. 'threshold' → logprob: -5.188713073730469
    5. '  
' → logprob: -6.313713073730469
    6. '       ' → logprob: -6.438713073730469
    7. ' 
' → logprob: -6.438713073730469
    8. 'return' → logprob: -6.563713073730469
    9. '               ' → logprob: -6.563713073730469
    10. ' threshold' → logprob: -6.813713073730469

Token 350: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16156411170959473
    2. '=' → logprob: -1.9115641117095947
    3. ' is' → logprob: -7.911563873291016
    4. ':' → logprob: -7.911563873291016
    5. ' ' → logprob: -8.911563873291016
    6. '   ' → logprob: -9.286563873291016
    7. ' =
' → logprob: -9.786563873291016
    8. ',' → logprob: -10.286563873291016
    9. '=
' → logprob: -10.536563873291016
    10. 's' → logprob: -10.661563873291016

Token 351: ' total' (ID: 3609)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5853031277656555
    2. ' microbes' → logprob: -2.2103030681610107
    3. 'micro' → logprob: -2.2103030681610107
    4. 'total' → logprob: -2.5853030681610107
    5. ' total' → logprob: -3.0853030681610107
    6. ' ' → logprob: -3.9603030681610107
    7. 'm' → logprob: -4.33530330657959
    8. ' micro' → logprob: -4.33530330657959
    9. '(total' → logprob: -4.71030330657959
    10. '?' → logprob: -4.96030330657959

Token 352: '_release' (ID: 59589)
  Prédit: '_release'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_release' → logprob: -0.005482521839439869
    2. 'release' → logprob: -5.3804826736450195
    3. '_' → logprob: -8.00548267364502
    4. 'Release' → logprob: -8.75548267364502
    5. '_capacity' → logprob: -9.00548267364502
    6. ' _' → logprob: -9.88048267364502
    7. '_RELEASE' → logprob: -10.50548267364502
    8. ' release' → logprob: -10.50548267364502
    9. '_return' → logprob: -11.38048267364502
    10. '```' → logprob: -11.38048267364502

Token 353: ' /' (ID: 820)
  Prédit: ' //'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.6610831022262573
    2. ' /' → logprob: -1.0360831022262573
    3. '/k' → logprob: -2.661083221435547
    4. '           ' → logprob: -3.411083221435547
    5. '//' → logprob: -4.411083221435547
    6. '_threshold' → logprob: -6.411083221435547
    7. '       ' → logprob: -6.536083221435547
    8. ' =' → logprob: -7.036083221435547
    9. '**' → logprob: -7.348583221435547
    10. '
' → logprob: -7.348583221435547

Token 354: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.008614808320999146
    2. ' k' → logprob: -4.758615016937256
    3. '```' → logprob: -16.008615493774414
    4. '{k' → logprob: -16.133615493774414
    5. ' ' → logprob: -16.883615493774414
    6. '
' → logprob: -17.008615493774414
    7. '(k' → logprob: -17.133615493774414
    8. ' (' → logprob: -18.133615493774414
    9. '`' → logprob: -18.133615493774414
    10. '_k' → logprob: -18.258615493774414

Token 355: '.
' (ID: 558)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07696687430143356
    2. '
' → logprob: -2.9519667625427246
    3. '            
' → logprob: -4.201966762542725
    4. ',' → logprob: -6.701966762542725
    5. ':' → logprob: -6.951966762542725
    6. ')' → logprob: -7.326966762542725
    7. '  
' → logprob: -7.701966762542725
    8. '        
' → logprob: -7.701966762542725
    9. '       ' → logprob: -7.826966762542725
    10. '\n' → logprob: -7.951966762542725

Token 356: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003942567389458418
    2. '            
' → logprob: -6.378942489624023
    3. '       ' → logprob: -6.628942489624023
    4. '
' → logprob: -7.628942489624023
    5. '        
' → logprob: -9.628942489624023
    6. ' 
' → logprob: -9.753942489624023
    7. '               ' → logprob: -9.878942489624023
    8. ',' → logprob: -10.128942489624023
    9. '   ' → logprob: -10.253942489624023
    10. '    
' → logprob: -10.378942489624023

Token 357: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.030259495601058006
    2. '       ' → logprob: -4.530259609222412
    3. '
' → logprob: -5.030259609222412
    4. '            
' → logprob: -5.155259609222412
    5. ' 
' → logprob: -6.655259609222412
    6. '    
' → logprob: -6.655259609222412
    7. '   ' → logprob: -6.655259609222412
    8. '        
' → logprob: -7.155259609222412
    9. '  
' → logprob: -8.155259132385254
    10. '               ' → logprob: -8.280259132385254

Token 358: ' So' (ID: 2632)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.29932501912117004
    2. 'threshold' → logprob: -1.9243249893188477
    3. ' threshold' → logprob: -2.9243249893188477
    4. '
' → logprob: -4.549324989318848
    5. '            
' → logprob: -4.799324989318848
    6. ' return' → logprob: -4.799324989318848
    7. ' selected' → logprob: -5.674324989318848
    8. 'return' → logprob: -6.049324989318848
    9. ' candidates' → logprob: -6.299324989318848
    10. '#' → logprob: -6.299324989318848

Token 359: ' we' (ID: 581)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7582973837852478
    2. ' for' → logprob: -1.8832974433898926
    3. ' left' → logprob: -2.2582974433898926
    4. ',' → logprob: -2.8832974433898926
    5. ' return' → logprob: -3.0082974433898926
    6. ' we' → logprob: -3.8832974433898926
    7. '   ' → logprob: -4.008297443389893
    8. 'left' → logprob: -4.258297443389893
    9. 'threshold' → logprob: -4.258297443389893
    10. ' threshold' → logprob: -4.383297443389893

Token 360: ' try' (ID: 2075)
  Prédit: 'need'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'need' → logprob: -0.5851842164993286
    2. 'can' → logprob: -2.085184097290039
    3. ' can' → logprob: -2.210184097290039
    4. ' need' → logprob: -2.460184097290039
    5. 'try' → logprob: -3.710184097290039
    6. 'do' → logprob: -4.460184097290039
    7. 'should' → logprob: -4.585184097290039
    8. 'start' → logprob: -4.835184097290039
    9. 'cannot' → logprob: -4.960184097290039
    10. 'have' → logprob: -5.085184097290039

Token 361: ' candidate' (ID: 17098)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.1876699924468994
    2. 'threshold' → logprob: -1.3126699924468994
    3. 'to' → logprob: -1.5626699924468994
    4. ':
' → logprob: -2.8126699924468994
    5. ' to' → logprob: -2.8126699924468994
    6. '           ' → logprob: -3.1876699924468994
    7. 'possible' → logprob: -4.56266975402832
    8. '   ' → logprob: -5.06266975402832
    9. 'capac' → logprob: -5.06266975402832
    10. 'capacity' → logprob: -5.18766975402832

Token 362: ' microbes' (ID: 156044)
  Prédit: '_release'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_release' → logprob: -1.4199644327163696
    2. '_threshold' → logprob: -2.04496431350708
    3. 'capac' → logprob: -2.16996431350708
    4. '_cap' → logprob: -2.29496431350708
    5. 'threshold' → logprob: -2.41996431350708
    6. '_capacity' → logprob: -2.54496431350708
    7. '_' → logprob: -3.04496431350708
    8. '_micro' → logprob: -3.16996431350708
    9. 'release' → logprob: -3.91996431350708
    10. 'capacity' → logprob: -4.04496431350708

Token 363: ' with' (ID: 483)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6571597456932068
    2. '           ' → logprob: -1.0321598052978516
    3. ',' → logprob: -2.7821598052978516
    4. '       ' → logprob: -4.907159805297852
    5. '):' → logprob: -4.907159805297852
    6. ' =' → logprob: -5.032159805297852
    7. ')' → logprob: -5.282159805297852
    8. ' for' → logprob: -5.657159805297852
    9. '=' → logprob: -5.657159805297852
    10. ' with' → logprob: -5.782159805297852

Token 364: ' capacity' (ID: 12241)
  Prédit: 'capacity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'capacity' → logprob: -0.013623068109154701
    2. ' capacity' → logprob: -4.388623237609863
    3. 'm' → logprob: -7.763623237609863
    4. 'cap' → logprob: -8.263623237609863
    5. 'capac' → logprob: -8.263623237609863
    6. ' capacities' → logprob: -10.513623237609863
    7. ' m' → logprob: -10.763623237609863
    8. 'c' → logprob: -10.763623237609863
    9. '[' → logprob: -11.013623237609863
    10. 'micro' → logprob: -11.138623237609863

Token 365: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.39591333270072937
    2. '>=' → logprob: -1.1459133625030518
    3. ')' → logprob: -5.895913124084473
    4. ']>=' → logprob: -6.020913124084473
    5. ')>=' → logprob: -7.020913124084473
    6. '<|end|>' → logprob: -7.520913124084473
    7. '=' → logprob: -7.895913124084473
    8. '    ' → logprob: -8.020913124084473
    9. 's' → logprob: -8.270913124084473
    10. ']' → logprob: -8.645913124084473

Token 366: ' some' (ID: 1236)
  Prédit: 'micro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'micro' → logprob: -1.1917169094085693
    2. '0' → logprob: -1.4417169094085693
    3. 'k' → logprob: -1.6917169094085693
    4. 'threshold' → logprob: -1.9417169094085693
    5. ' microbes' → logprob: -2.9417169094085693
    6. 'min' → logprob: -4.191717147827148
    7. 'm' → logprob: -4.816717147827148
    8. ' micro' → logprob: -5.191717147827148
    9. 'mid' → logprob: -5.316717147827148
    10. ' k' → logprob: -5.316717147827148

Token 367: ' threshold' (ID: 24313)
  Prédit: 'threshold'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'threshold' → logprob: -0.5204601883888245
    2. ' threshold' → logprob: -2.0204601287841797
    3. 'value' → logprob: -3.0204601287841797
    4. 'capacity' → logprob: -3.1454601287841797
    5. ' value' → logprob: -3.5204601287841797
    6. 'm' → logprob: -3.6454601287841797
    7. 'x' → logprob: -3.6454601287841797
    8. ' capacity' → logprob: -4.39546012878418
    9. 'c' → logprob: -4.39546012878418
    10. 'micro' → logprob: -4.64546012878418

Token 368: '.
' (ID: 558)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03310703858733177
    2. '            
' → logprob: -4.158106803894043
    3. '
' → logprob: -5.033106803894043
    4. ',' → logprob: -5.658106803894043
    5. ':' → logprob: -6.283106803894043
    6. '       ' → logprob: -7.033106803894043
    7. '        
' → logprob: -7.033106803894043
    8. '               ' → logprob: -7.658106803894043
    9. '    
' → logprob: -7.908106803894043
    10. '.' → logprob: -8.158106803894043

Token 369: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005627985578030348
    2. '
' → logprob: -6.1306281089782715
    3. '            
' → logprob: -6.3806281089782715
    4. '       ' → logprob: -6.7556281089782715
    5. ' 
' → logprob: -9.005627632141113
    6. '        
' → logprob: -9.130627632141113
    7. '    
' → logprob: -9.380627632141113
    8. '               ' → logprob: -9.880627632141113
    9. '   ' → logprob: -10.255627632141113
    10. ',' → logprob: -10.505627632141113

Token 370: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03001358173787594
    2. '       ' → logprob: -4.655013561248779
    3. '            
' → logprob: -4.780013561248779
    4. '
' → logprob: -5.530013561248779
    5. ' 
' → logprob: -6.405013561248779
    6. '        
' → logprob: -6.655013561248779
    7. '    
' → logprob: -6.780013561248779
    8. '   ' → logprob: -7.155013561248779
    9. ',' → logprob: -8.030014038085938
    10. '  
' → logprob: -8.155014038085938

Token 371: ' Instead' (ID: 21050)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.13264508545398712
    2. 'threshold' → logprob: -3.2576451301574707
    3. ' threshold' → logprob: -3.3826451301574707
    4. '
' → logprob: -3.6326451301574707
    5. '            
' → logprob: -4.132645130157471
    6. ' for' → logprob: -6.132645130157471
    7. '    
' → logprob: -7.132645130157471
    8. '       ' → logprob: -7.132645130157471
    9. ' 
' → logprob: -7.382645130157471
    10. '   ' → logprob: -7.757645130157471

Token 372: ',' (ID: 11)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.8162657022476196
    2. 'of' → logprob: -1.3162657022476196
    3. '           ' → logprob: -1.3162657022476196
    4. ',' → logprob: -4.81626558303833
    5. '       ' → logprob: -5.06626558303833
    6. ':' → logprob: -5.94126558303833
    7. '=' → logprob: -7.19126558303833
    8. '   ' → logprob: -7.56626558303833
    9. '          ' → logprob: -7.81626558303833
    10. '               ' → logprob: -8.066266059875488

Token 373: ' we' (ID: 581)
  Prédit: ' low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' low' → logprob: -1.2525198459625244
    2. ' left' → logprob: -1.3775198459625244
    3. ' for' → logprob: -1.8775198459625244
    4. ' lo' → logprob: -2.2525198459625244
    5. 'low' → logprob: -2.8775198459625244
    6. ' #' → logprob: -3.6275198459625244
    7. '           ' → logprob: -3.6275198459625244
    8. 'left' → logprob: -4.002519607543945
    9. '#' → logprob: -4.502519607543945
    10. ' return' → logprob: -4.627519607543945

Token 374: ' do' (ID: 621)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.1928108036518097
    2. ' try' → logprob: -2.6928107738494873
    3. 'can' → logprob: -2.8178107738494873
    4. 'try' → logprob: -3.6928107738494873
    5. ' use' → logprob: -5.442811012268066
    6. ''ll' → logprob: -5.817811012268066
    7. ' could' → logprob: -5.817811012268066
    8. ' will' → logprob: -6.067811012268066
    9. 'binary' → logprob: -6.442811012268066
    10. 'could' → logprob: -6.942811012268066

Token 375: ':
' (ID: 734)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.4854567050933838
    2. 'a' → logprob: -1.8604567050933838
    3. 'binary' → logprob: -2.610456705093384
    4. ' binary' → logprob: -2.735456705093384
    5. 'left' → logprob: -3.485456705093384
    6. '           ' → logprob: -3.735456705093384
    7. ' left' → logprob: -4.735456466674805
    8. 'for' → logprob: -4.735456466674805
    9. ' an' → logprob: -5.235456466674805
    10. ' for' → logprob: -5.860456466674805

Token 376: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008417770266532898
    2. '            
' → logprob: -5.88341760635376
    3. ' for' → logprob: -6.00841760635376
    4. '       ' → logprob: -6.88341760635376
    5. ' return' → logprob: -8.258418083190918
    6. '               ' → logprob: -8.383418083190918
    7. '
' → logprob: -8.508418083190918
    8. ' k' → logprob: -8.758418083190918
    9. '    
' → logprob: -9.008418083190918
    10. '   ' → logprob: -9.008418083190918

Token 377: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.5272564888000488
    2. 'low' → logprob: -1.5272564888000488
    3. ' low' → logprob: -1.7772564888000488
    4. ' lo' → logprob: -2.027256488800049
    5. ' left' → logprob: -2.652256488800049
    6. ' for' → logprob: -2.777256488800049
    7. 'left' → logprob: -3.027256488800049
    8. 'lo' → logprob: -3.902256488800049
    9. 'for' → logprob: -4.027256488800049
    10. '#' (adapté à ' #') → logprob: -4.652256488800049

Token 378: ' For' (ID: 2214)
  Prédit: ' low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' low' → logprob: -0.9629877209663391
    2. 'low' → logprob: -1.4629876613616943
    3. ' left' → logprob: -1.9629876613616943
    4. ' lo' → logprob: -2.5879876613616943
    5. 'left' → logprob: -2.9629876613616943
    6. '#' → logprob: -3.8379876613616943
    7. ' releases' → logprob: -4.712987899780273
    8. ' selected' → logprob: -4.712987899780273
    9. 'lo' → logprob: -4.837987899780273
    10. ' for' → logprob: -4.837987899780273

Token 379: ' micro' (ID: 10449)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.1217223405838013
    2. ' k' → logprob: -1.6217223405838013
    3. 'cap' → logprob: -1.9967223405838013
    4. 'mid' → logprob: -2.6217222213745117
    5. ' capacity' → logprob: -2.7467222213745117
    6. 'capacity' → logprob: -2.7467222213745117
    7. ' cap' → logprob: -3.2467222213745117
    8. ' mid' → logprob: -3.3717222213745117
    9. ' c' → logprob: -4.621722221374512
    10. 'c' → logprob: -5.121722221374512

Token 380: 'be' (ID: 1464)
  Prédit: 'bes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bes' → logprob: -0.005097256973385811
    2. 'be' → logprob: -5.380097389221191
    3. '       ' → logprob: -8.880097389221191
    4. '   ' → logprob: -9.255097389221191
    5. '           ' → logprob: -9.505097389221191
    6. 'b' → logprob: -9.880097389221191
    7. '```' → logprob: -11.005097389221191
    8. '               ' → logprob: -11.130097389221191
    9. ')' → logprob: -11.630097389221191
    10. 'bs' → logprob: -12.005097389221191

Token 381: ' with' (ID: 483)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.11356054991483688
    2. 's' → logprob: -2.238560438156128
    3. 'in' → logprob: -7.988560676574707
    4. ' ' → logprob: -9.488560676574707
    5. 'capacity' → logprob: -9.738560676574707
    6. ' s' → logprob: -9.988560676574707
    7. ',' → logprob: -10.113560676574707
    8. '_capacity' → logprob: -10.488560676574707
    9. '   ' → logprob: -10.613560676574707
    10. '_sorted' → logprob: -10.738560676574707

Token 382: ' capacity' (ID: 12241)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.9239742159843445
    2. 'capacity' → logprob: -0.9239742159843445
    3. ' capacity' → logprob: -2.2989742755889893
    4. ' m' → logprob: -2.7989742755889893
    5. 'cap' → logprob: -4.42397403717041
    6. 'micro' → logprob: -4.42397403717041
    7. ' in' → logprob: -4.54897403717041
    8. 'c' → logprob: -5.54897403717041
    9. ' cap' → logprob: -6.79897403717041
    10. 'in' → logprob: -7.29897403717041

Token 383: ' b' (ID: 287)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08440208435058594
    2. ',' → logprob: -2.709402084350586
    3. '>=' → logprob: -5.209402084350586
    4. 'in' → logprob: -5.709402084350586
    5. ' >=' → logprob: -5.959402084350586
    6. 'capacity' → logprob: -7.084402084350586
    7. ' ,' → logprob: -7.334402084350586
    8. 's' → logprob: -7.459402084350586
    9. ' capacity' → logprob: -8.209402084350586
    10. '_capacity' → logprob: -8.834402084350586

Token 384: '_i' (ID: 10853)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.7532209753990173
    2. ' >=' → logprob: -1.128221035003662
    3. '>=' → logprob: -2.378221035003662
    4. 'in' → logprob: -3.128221035003662
    5. ',' → logprob: -3.253221035003662
    6. ')' → logprob: -5.378221035003662
    7. ' <=' → logprob: -6.128221035003662
    8. '       ' → logprob: -6.378221035003662
    9. '),' → logprob: -6.628221035003662
    10. '           ' → logprob: -6.628221035003662

Token 385: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3404109477996826
    2. ',' → logprob: -1.8404109477996826
    3. ' >=' → logprob: -2.9654109477996826
    4. '>=' → logprob: -3.4654109477996826
    5. '),' → logprob: -4.590411186218262
    6. 's' → logprob: -4.965411186218262
    7. '           ' → logprob: -5.090411186218262
    8. ')' → logprob: -5.340411186218262
    9. ':' → logprob: -5.465411186218262
    10. '       ' → logprob: -5.840411186218262

Token 386: ' max' (ID: 2999)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7476143836975098
    2. ' select' → logprob: -1.4976143836975098
    3. ' if' → logprob: -3.2476143836975098
    4. ' return' → logprob: -3.3726143836975098
    5. '#' → logprob: -3.7476143836975098
    6. ' for' → logprob: -3.8726143836975098
    7. ' selected' → logprob: -3.8726143836975098
    8. ' we' → logprob: -3.9976143836975098
    9. '            ' → logprob: -4.12261438369751
    10. ' possible' → logprob: -4.49761438369751

Token 387: ' total' (ID: 3609)
  Prédit: '_release'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_release' → logprob: -0.1565777063369751
    2. 'release' → logprob: -2.5315775871276855
    3. ' release' → logprob: -2.9065775871276855
    4. ' total' → logprob: -5.4065775871276855
    5. 'total' → logprob: -6.4065775871276855
    6. '_total' → logprob: -6.4065775871276855
    7. '_possible' → logprob: -6.9065775871276855
    8. ' capacity' → logprob: -7.7815775871276855
    9. '_capacity' → logprob: -8.281578063964844
    10. 'possible' → logprob: -8.531578063964844

Token 388: ' release' (ID: 8232)
  Prédit: '_release'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_release' → logprob: -0.01929161325097084
    2. 'release' → logprob: -4.394291400909424
    3. '_' → logprob: -5.519291400909424
    4. ' release' → logprob: -6.144291400909424
    5. ' _' → logprob: -7.644291400909424
    6. 'Release' → logprob: -10.519291877746582
    7. '_RELEASE' → logprob: -11.019291877746582
    8. '           ' → logprob: -11.269291877746582
    9. '_return' → logprob: -11.269291877746582
    10. ')' → logprob: -11.644291877746582

Token 389: ' allowed' (ID: 9279)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6901586651802063
    2. '=' → logprob: -0.8151586651802063
    3. ' <=' → logprob: -3.9401586055755615
    4. '<=' → logprob: -4.690158843994141
    5. '_possible' → logprob: -5.440158843994141
    6. ' possible' → logprob: -5.440158843994141
    7. ' that' → logprob: -5.690158843994141
    8. 'possible' → logprob: -5.940158843994141
    9. ' is' → logprob: -6.690158843994141
    10. 's' → logprob: -6.815158843994141

Token 390: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14581982791423798
    2. '=' → logprob: -2.270819902420044
    3. ' <=' → logprob: -3.895819902420044
    4. ' is' → logprob: -5.520819664001465
    5. '           ' → logprob: -6.145819664001465
    6. '<=' → logprob: -6.395819664001465
    7. ':' → logprob: -6.520819664001465
    8. ' >=' → logprob: -7.520819664001465
    9. ' for' → logprob: -8.395819664001465
    10. '   ' → logprob: -8.395819664001465

Token 391: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.3485448956489563
    2. 'b' → logprob: -1.2235448360443115
    3. 'k' → logprob: -10.09854507446289
    4. ' k' → logprob: -10.34854507446289
    5. '`' → logprob: -11.59854507446289
    6. '```' → logprob: -11.84854507446289
    7. ' `' → logprob: -13.34854507446289
    8. ' ' → logprob: -13.47354507446289
    9. ' ' → logprob: -13.59854507446289
    10. ' capacity' → logprob: -13.72354507446289

Token 392: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.0007051641005091369
    2. ' _' → logprob: -8.375704765319824
    3. '_' → logprob: -9.125704765319824
    4. 'i' → logprob: -9.625704765319824
    5. '_capacity' → logprob: -10.000704765319824
    6. '*' → logprob: -10.250704765319824
    7. 'capacity' → logprob: -10.250704765319824
    8. '[i' → logprob: -10.625704765319824
    9. '```' → logprob: -10.750704765319824
    10. ' *' → logprob: -11.125704765319824

Token 393: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.019780736416578293
    2. '*' → logprob: -4.01978063583374
    3. '*k' → logprob: -6.51978063583374
    4. ' ' → logprob: -10.769781112670898
    5. '```' → logprob: -11.019781112670898
    6. '       ' → logprob: -11.644781112670898
    7. '           ' → logprob: -11.644781112670898
    8. '   ' → logprob: -11.894781112670898
    9. '
' → logprob: -11.894781112670898
    10. 's' → logprob: -11.894781112670898

Token 394: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.03804539144039154
    2. ' k' → logprob: -3.2880454063415527
    3. '
' → logprob: -12.788044929504395
    4. ' ' → logprob: -14.788044929504395
    5. '```' → logprob: -15.288044929504395
    6. ' 
' → logprob: -16.53804588317871
    7. '(k' → logprob: -16.66304588317871
    8. '	k' → logprob: -16.66304588317871
    9. '`' → logprob: -16.66304588317871
    10. '{k' → logprob: -17.03804588317871

Token 395: '.
' (ID: 558)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.19333326816558838
    2. '
' → logprob: -2.193333148956299
    3. '<|end|>' → logprob: -3.693333148956299
    4. ',' → logprob: -4.818333148956299
    5. '<|end|>' → logprob: -4.943333148956299
    6. '       ' → logprob: -4.943333148956299
    7. '            
' → logprob: -5.068333148956299
    8. ')' → logprob: -6.193333148956299
    9. '    
' → logprob: -6.818333148956299
    10. '        
' → logprob: -6.943333148956299

Token 396: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005863024853169918
    2. '       ' → logprob: -6.005863189697266
    3. '            
' → logprob: -6.630863189697266
    4. '
' → logprob: -7.005863189697266
    5. '<|end|>' → logprob: -8.255863189697266
    6. '        
' → logprob: -8.755863189697266
    7. ' for' → logprob: -9.255863189697266
    8. ',' → logprob: -9.255863189697266
    9. '    
' → logprob: -9.505863189697266
    10. 'return' → logprob: -9.505863189697266

Token 397: ' #
' (ID: 21888)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06018528714776039
    2. '       ' → logprob: -3.560185194015503
    3. '            
' → logprob: -4.435185432434082
    4. 'return' → logprob: -6.060185432434082
    5. '   ' → logprob: -6.185185432434082
    6. '        
' → logprob: -6.185185432434082
    7. '    
' → logprob: -6.310185432434082
    8. ' return' → logprob: -6.435185432434082
    9. '
' → logprob: -6.560185432434082
    10. ' for' → logprob: -7.060185432434082

Token 398: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0011565317399799824
    2. '       ' → logprob: -8.1261568069458
    3. '            
' → logprob: -8.6261568069458
    4. 'tokens' → logprob: -8.7511568069458
    5. 'total' → logprob: -9.2511568069458
    6. 'release' → logprob: -9.7511568069458
    7. 'selected' → logprob: -10.1261568069458
    8. 'possible' → logprob: -10.2511568069458
    9. 'max' → logprob: -10.3761568069458
    10. 'candidate' → logprob: -10.3761568069458

Token 399: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12638027966022491
    2. 'selected' → logprob: -2.876380205154419
    3. 'valid' → logprob: -4.251380443572998
    4. 'c' → logprob: -4.626380443572998
    5. '#' (adapté à ' #') → logprob: -4.751380443572998
    6. '       ' → logprob: -5.126380443572998
    7. 'possible' → logprob: -5.251380443572998
    8. 'threshold' → logprob: -5.501380443572998
    9. 'candidate' → logprob: -5.876380443572998
    10. 'filtered' → logprob: -7.001380443572998

Token 400: ' Accordingly' (ID: 104294)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.746713399887085
    2. 'selected' → logprob: -1.371713399887085
    3. ' selected' → logprob: -2.621713399887085
    4. 'c' → logprob: -3.246713399887085
    5. 'valid' → logprob: -3.496713399887085
    6. '#' → logprob: -4.121713638305664
    7. ' candidates' → logprob: -4.371713638305664
    8. 'possible' → logprob: -4.371713638305664
    9. 'candidate' → logprob: -4.746713638305664
    10. '       ' → logprob: -4.996713638305664

Token 401: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.030242951586842537
    2. ',' → logprob: -3.655242919921875
    3. '       ' → logprob: -6.655242919921875
    4. '
' → logprob: -7.405242919921875
    5. 'def' → logprob: -7.905242919921875
    6. 'selected' → logprob: -8.280242919921875
    7. '   ' → logprob: -8.655242919921875
    8. 'for' → logprob: -8.905242919921875
    9. 'available' → logprob: -9.405242919921875
    10. ' for' → logprob: -9.405242919921875

Token 402: ' if' (ID: 538)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.6825916171073914
    2. 'selected' → logprob: -1.4325916767120361
    3. ' selected' → logprob: -2.807591676712036
    4. 'valid' → logprob: -3.307591676712036
    5. ' candidates' → logprob: -3.807591676712036
    6. 'possible' → logprob: -3.932591676712036
    7. '#' → logprob: -4.182591438293457
    8. 'candidate' → logprob: -4.182591438293457
    9. ' valid' → logprob: -4.807591438293457
    10. ' feasible' → logprob: -4.807591438293457

Token 403: ' we' (ID: 581)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -1.7253578901290894
    2. ' we' → logprob: -1.9753578901290894
    3. 'k' → logprob: -2.225358009338379
    4. 'max' → logprob: -2.350358009338379
    5. 'we' → logprob: -2.475358009338379
    6. 'total' → logprob: -2.975358009338379
    7. ' any' → logprob: -3.225358009338379
    8. ' k' → logprob: -3.475358009338379
    9. 'the' → logprob: -3.475358009338379
    10. ' total' → logprob: -3.475358009338379

Token 404: ' select' (ID: 4736)
  Prédit: 'sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sort' → logprob: -0.7432897686958313
    2. 'can' → logprob: -1.6182897090911865
    3. ' can' → logprob: -2.2432897090911865
    4. 'select' → logprob: -2.2432897090911865
    5. 'sum' → logprob: -3.6182897090911865
    6. 'choose' → logprob: -4.118289947509766
    7. ' select' → logprob: -4.243289947509766
    8. ' sort' → logprob: -4.243289947509766
    9. 'pick' → logprob: -4.243289947509766
    10. '   ' → logprob: -4.993289947509766

Token 405: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.45298752188682556
    2. ' k' → logprob: -1.202987551689148
    3. ' the' → logprob: -4.0779876708984375
    4. 'the' → logprob: -4.3279876708984375
    5. 'micro' → logprob: -4.5779876708984375
    6. ' microbes' → logprob: -4.5779876708984375
    7. ' any' → logprob: -5.3279876708984375
    8. 'any' → logprob: -6.0779876708984375
    9. ' a' → logprob: -6.9529876708984375
    10. '```' → logprob: -6.9529876708984375

Token 406: ' microbes' (ID: 156044)
  Prédit: ' microbes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' microbes' → logprob: -0.023805202916264534
    2. 'micro' → logprob: -4.023805141448975
    3. ' micro' → logprob: -5.523805141448975
    4. ' microorganisms' → logprob: -7.398805141448975
    5. ' of' → logprob: -8.273805618286133
    6. ' microbial' → logprob: -8.898805618286133
    7. ' lowest' → logprob: -9.023805618286133
    8. '#' → logprob: -9.398805618286133
    9. ')' → logprob: -9.398805618286133
    10. ' smallest' → logprob: -10.148805618286133

Token 407: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7602648735046387
    2. ' with' → logprob: -1.0102648735046387
    3. 'with' → logprob: -2.1352648735046387
    4. ':' → logprob: -4.260264873504639
    5. '           ' → logprob: -4.510264873504639
    6. '#' → logprob: -5.635264873504639
    7. ',
' → logprob: -5.885264873504639
    8. '<|end|>' → logprob: -6.135264873504639
    9. '<|end|>' → logprob: -6.260264873504639
    10. 'sorted' → logprob: -6.385264873504639

Token 408: ' total' (ID: 3609)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5362496972084045
    2. ' releases' → logprob: -1.6612496376037598
    3. 'selected' → logprob: -3.0362496376037598
    4. 're' → logprob: -3.2862496376037598
    5. ' selected' → logprob: -3.2862496376037598
    6. '               ' → logprob: -4.41124963760376
    7. 'return' → logprob: -4.53624963760376
    8. 'total' → logprob: -4.78624963760376
    9. ' total' → logprob: -5.03624963760376
    10. 'release' → logprob: -5.03624963760376

Token 409: '_release' (ID: 59589)
  Prédit: '_release'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_release' → logprob: -0.01657232642173767
    2. 'release' → logprob: -4.14157247543335
    3. ' release' → logprob: -8.266571998596191
    4. '_' → logprob: -8.641571998596191
    5. '_re' → logprob: -11.016571998596191
    6. ' _' → logprob: -11.016571998596191
    7. 'Release' → logprob: -11.266571998596191
    8. '_return' → logprob: -11.641571998596191
    9. '_capacity' → logprob: -11.891571998596191
    10. '_selected' → logprob: -11.891571998596191

Token 410: ' <=' (ID: 5017)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6544350385665894
    2. ' =' → logprob: -0.7794350385665894
    3. ' <=' → logprob: -5.154435157775879
    4. '<=' → logprob: -5.279435157775879
    5. 'tokens' → logprob: -5.779435157775879
    6. '_tokens' → logprob: -6.279435157775879
    7. 's' → logprob: -6.654435157775879
    8. '_candidates' → logprob: -6.779435157775879
    9. '=sum' → logprob: -7.154435157775879
    10. '_possible' → logprob: -8.529435157775879

Token 411: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.6626998782157898
    2. 'b' → logprob: -1.0376999378204346
    3. ' min' → logprob: -2.4126999378204346
    4. ' b' → logprob: -3.5376999378204346
    5. 'micro' → logprob: -5.2876996994018555
    6. 'm' → logprob: -6.0376996994018555
    7. 'capacity' → logprob: -7.5376996994018555
    8. ' microbes' → logprob: -7.5376996994018555
    9. ' micro' → logprob: -7.9126996994018555
    10. 'sum' → logprob: -8.037699699401855

Token 412: '(b' (ID: 3229)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.20781582593917847
    2. '([' → logprob: -2.0828158855438232
    3. '(' → logprob: -3.0828158855438232
    4. '(cap' → logprob: -5.707815647125244
    5. '(_' → logprob: -6.082815647125244
    6. '(
' → logprob: -6.082815647125244
    7. 'capacity' → logprob: -6.457815647125244
    8. '(b' → logprob: -6.582815647125244
    9. '_capacity' → logprob: -6.957815647125244
    10. 'micro' → logprob: -7.207815647125244

Token 413: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.05456480011343956
    2. '_capacity' → logprob: -3.6795647144317627
    3. '.capacity' → logprob: -4.054564952850342
    4. 'capacity' → logprob: -5.304564952850342
    5. '.micro' → logprob: -6.554564952850342
    6. '_micro' → logprob: -6.679564952850342
    7. 'i' → logprob: -6.929564952850342
    8. '._' → logprob: -7.679564952850342
    9. '_' → logprob: -8.304564476013184
    10. 'micro' → logprob: -8.554564476013184

Token 414: ' *' (ID: 425)
  Prédit: '.capacity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.capacity' → logprob: -0.6249828338623047
    2. ')' → logprob: -1.4999828338623047
    3. ' *' → logprob: -1.6249828338623047
    4. '*' → logprob: -3.7499828338623047
    5. ')*' → logprob: -4.499982833862305
    6. 'capacity' → logprob: -5.374982833862305
    7. ' capacity' → logprob: -6.624982833862305
    8. '_capacity' → logprob: -6.999982833862305
    9. '   ' → logprob: -7.249982833862305
    10. '```' → logprob: -7.499982833862305

Token 415: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.6933028697967529
    2. ' k' → logprob: -0.6933028697967529
    3. ')' → logprob: -9.568303108215332
    4. '
' → logprob: -10.193303108215332
    5. 'right' → logprob: -11.068303108215332
    6. ' ' → logprob: -11.568303108215332
    7. 'count' → logprob: -12.068303108215332
    8. ' right' → logprob: -12.443303108215332
    9. '```' → logprob: -12.943303108215332
    10. ' 
' → logprob: -13.693303108215332

Token 416: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09121713042259216
    2. ' for' → logprob: -3.091217041015625
    3. 'for' → logprob: -3.341217041015625
    4. ' )' → logprob: -5.216217041015625
    5. ')
' → logprob: -7.966217041015625
    6. ' -' → logprob: -8.341217041015625
    7. ' ' → logprob: -9.466217041015625
    8. '),' → logprob: -9.966217041015625
    9. '-' → logprob: -10.091217041015625
    10. '   ' → logprob: -10.716217041015625

Token 417: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007541434373706579
    2. ')' → logprob: -5.132541656494141
    3. ',' → logprob: -7.757541656494141
    4. '       ' → logprob: -7.882541656494141
    5. '            
' → logprob: -8.00754165649414
    6. '.' → logprob: -9.63254165649414
    7. ' and' → logprob: -10.00754165649414
    8. '   ' → logprob: -10.13254165649414
    9. '<|end|>' → logprob: -10.38254165649414
    10. '               ' → logprob: -10.38254165649414

Token 418: ' #
' (ID: 21888)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03146912157535553
    2. ')' → logprob: -4.281469345092773
    3. '       ' → logprob: -5.406469345092773
    4. '
' → logprob: -5.781469345092773
    5. '            
' → logprob: -5.906469345092773
    6. '\n' → logprob: -6.281469345092773
    7. '   ' → logprob: -7.156469345092773
    8. '    
' → logprob: -7.281469345092773
    9. ',' → logprob: -7.531469345092773
    10. '        
' → logprob: -7.906469345092773

Token 419: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006762975826859474
    2. '       ' → logprob: -5.381762981414795
    3. '   ' → logprob: -6.631762981414795
    4. '            
' → logprob: -8.756762504577637
    5. ')' → logprob: -9.381762504577637
    6. '<|end|>' → logprob: -9.631762504577637
    7. ',' → logprob: -10.006762504577637
    8. '    
' → logprob: -10.006762504577637
    9. '               ' → logprob: -10.131762504577637
    10. '...' → logprob: -10.256762504577637

Token 420: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.020757457241415977
    2. '#' (adapté à ' #') → logprob: -5.020757675170898
    3. 'selected' → logprob: -6.145757675170898
    4. '            
' → logprob: -6.270757675170898
    5. '       ' → logprob: -6.395757675170898
    6. '   ' → logprob: -6.895757675170898
    7. 'return' → logprob: -7.020757675170898
    8. '
' → logprob: -7.145757675170898
    9. 'max' → logprob: -7.270757675170898
    10. 'total' → logprob: -7.395757675170898

Token 421: ' So' (ID: 2632)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7382073998451233
    2. ' releases' → logprob: -1.9882073402404785
    3. 'selected' → logprob: -2.4882073402404785
    4. '#' → logprob: -2.8632073402404785
    5. ' selected' → logprob: -2.8632073402404785
    6. 'release' → logprob: -3.3632073402404785
    7. ' release' → logprob: -3.8632073402404785
    8. '       ' → logprob: -3.9882073402404785
    9. ' #' → logprob: -4.3632073402404785
    10. '   ' → logprob: -4.9882073402404785

Token 422: ' for' (ID: 395)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9485487937927246
    2. ' left' → logprob: -2.1985487937927246
    3. ' releases' → logprob: -2.1985487937927246
    4. ' selected' → logprob: -2.5735487937927246
    5. ' low' → logprob: -3.0735487937927246
    6. '#' → logprob: -3.4485487937927246
    7. 'low' → logprob: -3.5735487937927246
    8. 'selected' → logprob: -3.6985487937927246
    9. 'left' → logprob: -3.8235487937927246
    10. ' for' → logprob: -3.8235487937927246

Token 423: ' candidate' (ID: 17098)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.962482750415802
    2. ' k' → logprob: -2.5874826908111572
    3. 'the' → logprob: -2.5874826908111572
    4. 'i' → logprob: -2.7124826908111572
    5. 'a' → logprob: -2.7124826908111572
    6. ' the' → logprob: -3.0874826908111572
    7. 'selected' → logprob: -3.0874826908111572
    8. ' a' → logprob: -3.2124826908111572
    9. ' i' → logprob: -3.7124826908111572
    10. 'candidate' → logprob: -3.9624826908111572

Token 424: ' k' (ID: 372)
  Prédit: ' microbes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' microbes' → logprob: -0.799235463142395
    2. 'micro' → logprob: -1.049235463142395
    3. 's' → logprob: -2.5492353439331055
    4. '_micro' → logprob: -2.6742353439331055
    5. ' micro' → logprob: -3.2992353439331055
    6. ' set' → logprob: -6.2992353439331055
    7. 'set' → logprob: -6.6742353439331055
    8. 'subset' → logprob: -6.7992353439331055
    9. ' release' → logprob: -6.9242353439331055
    10. 'mic' → logprob: -6.9242353439331055

Token 425: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2461058646440506
    2. ' microbes' → logprob: -1.9961059093475342
    3. ':' → logprob: -3.121105909347534
    4. '),' → logprob: -4.746105670928955
    5. 'micro' → logprob: -5.121105670928955
    6. '):' → logprob: -5.496105670928955
    7. '_micro' → logprob: -5.621105670928955
    8. '):
' → logprob: -5.871105670928955
    9. ')' → logprob: -5.871105670928955
    10. ' ,' → logprob: -5.996105670928955

Token 426: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011704538948833942
    2. '       ' → logprob: -4.636704444885254
    3. '   ' → logprob: -7.011704444885254
    4. ' selected' → logprob: -7.886704444885254
    5. 'selected' → logprob: -8.761704444885254
    6. ',' → logprob: -9.011704444885254
    7. ' we' → logprob: -9.761704444885254
    8. ' for' → logprob: -10.386704444885254
    9. '            
' → logprob: -10.386704444885254
    10. '
' → logprob: -10.886704444885254

Token 427: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.268942654132843
    2. 'selected' → logprob: -2.7689425945281982
    3. ' selected' → logprob: -3.0189425945281982
    4. 'c' → logprob: -3.7689425945281982
    5. 'candidate' → logprob: -3.8939425945281982
    6. ' releases' → logprob: -4.143942832946777
    7. ' candidates' → logprob: -4.393942832946777
    8. ' if' → logprob: -4.518942832946777
    9. ' candidate' → logprob: -4.643942832946777
    10. 're' → logprob: -5.268942832946777

Token 428: ' ' (ID: 220)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8346015810966492
    2. ' selected' → logprob: -1.334601640701294
    3. 'selected' → logprob: -2.459601640701294
    4. ' candidates' → logprob: -3.334601640701294
    5. 'c' → logprob: -3.584601640701294
    6. ' releases' → logprob: -3.584601640701294
    7. ' low' → logprob: -4.584601402282715
    8. ' candidate' → logprob: -4.584601402282715
    9. 'candidate' → logprob: -4.584601402282715
    10. '#' → logprob: -4.834601402282715

Token 429: '1' (ID: 16)
  Prédit: 'selected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'selected' → logprob: -0.4869405925273895
    2. 'c' → logprob: -2.236940622329712
    3. '#' → logprob: -2.861940622329712
    4. 're' → logprob: -3.111940622329712
    5. 'possible' → logprob: -3.486940622329712
    6. 'candidate' → logprob: -3.736940622329712
    7. 'valid' → logprob: -3.986940622329712
    8. 'filtered' → logprob: -4.236940383911133
    9. 'min' → logprob: -4.361940383911133
    10. 'release' → logprob: -4.486940383911133

Token 430: ')' (ID: 8)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04104918986558914
    2. '.' → logprob: -4.416049003601074
    3. ')' → logprob: -5.041049003601074
    4. '       ' → logprob: -5.166049003601074
    5. ':' → logprob: -5.416049003601074
    6. ' selected' → logprob: -6.166049003601074
    7. 'selected' → logprob: -6.416049003601074
    8. '   ' → logprob: -6.541049003601074
    9. '#' → logprob: -6.541049003601074
    10. ',' → logprob: -6.666049003601074

Token 431: ' Sort' (ID: 25945)
  Prédit: 'Select'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Select' → logprob: -1.7535803318023682
    2. ' candidates' → logprob: -2.003580331802368
    3. 'c' → logprob: -2.128580331802368
    4. 'selected' → logprob: -2.503580331802368
    5. ' selected' → logprob: -2.628580331802368
    6. ' select' → logprob: -2.753580331802368
    7. ' Select' → logprob: -2.878580331802368
    8. ' Filter' → logprob: -3.503580331802368
    9. 'Filter' → logprob: -3.628580331802368
    10. 'select' → logprob: -3.628580331802368

Token 432: ' microbes' (ID: 156044)
  Prédit: 'micro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'micro' → logprob: -0.7190619707107544
    2. ' microbes' → logprob: -1.2190619707107544
    3. 'selected' → logprob: -3.344061851501465
    4. ' the' → logprob: -3.469061851501465
    5. 'by' → logprob: -3.594061851501465
    6. 'the' → logprob: -3.844061851501465
    7. '           ' → logprob: -4.094061851501465
    8. ' selected' → logprob: -4.469061851501465
    9. ' by' → logprob: -4.469061851501465
    10. '_micro' → logprob: -4.594061851501465

Token 433: ' by' (ID: 656)
  Prédit: 'by'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'by' → logprob: -0.38700446486473083
    2. ' by' → logprob: -1.2620044946670532
    3. '[:' → logprob: -3.5120043754577637
    4. '           ' → logprob: -5.512004375457764
    5. '[' → logprob: -6.387004375457764
    6. '_sorted' → logprob: -7.637004375457764
    7. ',' → logprob: -8.137004852294922
    8. '```' → logprob: -8.262004852294922
    9. '       ' → logprob: -8.887004852294922
    10. '[:]' → logprob: -9.137004852294922

Token 434: ' capacity' (ID: 12241)
  Prédit: 'release'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'release' → logprob: -0.25278759002685547
    2. ' release' → logprob: -1.5027875900268555
    3. ' capacity' → logprob: -8.502787590026855
    4. 'capacity' → logprob: -8.752787590026855
    5. '   ' → logprob: -9.002787590026855
    6. ' their' → logprob: -9.127787590026855
    7. '```' → logprob: -9.877787590026855
    8. '.release' → logprob: -10.627787590026855
    9. ' ' → logprob: -10.627787590026855
    10. 'their' → logprob: -10.627787590026855

Token 435: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3681981563568115
    2. 'asc' → logprob: -2.2431981563568115
    3. ' and' → logprob: -2.9931981563568115
    4. ',
' → logprob: -3.2431981563568115
    5. '<|end|>' → logprob: -3.2431981563568115
    6. 'and' → logprob: -3.8681981563568115
    7. 'ascending' → logprob: -4.368198394775391
    8. ')' → logprob: -4.993198394775391
    9. '<|end|>' → logprob: -4.993198394775391
    10. '),' → logprob: -5.743198394775391

Token 436: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.017403149977326393
    2. ',' → logprob: -4.2674031257629395
    3. ' and' → logprob: -6.3924031257629395
    4. 'and' → logprob: -7.3924031257629395
    5. ' for' → logprob: -9.392403602600098
    6. '       ' → logprob: -9.392403602600098
    7. '```' → logprob: -9.392403602600098
    8. '<|end|>' → logprob: -9.392403602600098
    9. '[' → logprob: -9.767403602600098
    10. '            
' → logprob: -10.142403602600098

Token 437: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02581353858113289
    2. ',' → logprob: -4.525813579559326
    3. ' and' → logprob: -4.650813579559326
    4. 'and' → logprob: -7.025813579559326
    5. ' for' → logprob: -7.525813579559326
    6. '            
' → logprob: -7.525813579559326
    7. '       ' → logprob: -7.775813579559326
    8. '
' → logprob: -7.900813579559326
    9. '.' → logprob: -8.150813102722168
    10. ',
' → logprob: -8.275813102722168

Token 438: ' ' (ID: 220)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004106896463781595
    2. ',' → logprob: -6.5041069984436035
    3. '            
' → logprob: -7.3791069984436035
    4. '
' → logprob: -7.5041069984436035
    5. '       ' → logprob: -7.7541069984436035
    6. ' and' → logprob: -8.254106521606445
    7. '```' → logprob: -9.254106521606445
    8. ' for' → logprob: -9.504106521606445
    9. '#' → logprob: -9.754106521606445
    10. ' #' → logprob: -9.879106521606445

Token 439: '2' (ID: 17)
  Prédit: 'release'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'release' → logprob: -0.5948715806007385
    2. '#' → logprob: -2.4698715209960938
    3. '           ' → logprob: -2.9698715209960938
    4. 'micro' → logprob: -3.2198715209960938
    5. '   ' → logprob: -3.4698715209960938
    6. 'for' → logprob: -3.4698715209960938
    7. '       ' → logprob: -3.5948715209960938
    8. '2' → logprob: -3.5948715209960938
    9. 'right' → logprob: -3.5948715209960938
    10. 'def' → logprob: -4.094871520996094

Token 440: ')' (ID: 8)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5931187272071838
    2. ')' → logprob: -0.8431187272071838
    3. '       ' → logprob: -5.093118667602539
    4. ',' → logprob: -5.718118667602539
    5. '),' → logprob: -6.093118667602539
    6. '
' → logprob: -6.593118667602539
    7. ' )' → logprob: -7.218118667602539
    8. ')
' → logprob: -7.843118667602539
    9. ':' → logprob: -8.093118667602539
    10. '   ' → logprob: -8.343118667602539

Token 441: ' Select' (ID: 13482)
  Prédit: 'Select'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Select' → logprob: -1.9652563333511353
    2. 'Filter' → logprob: -2.0902562141418457
    3. ' Filter' → logprob: -2.7152562141418457
    4. 'for' → logprob: -2.8402562141418457
    5. 'Find' → logprob: -2.8402562141418457
    6. 'filter' → logprob: -3.0902562141418457
    7. 'For' → logprob: -3.0902562141418457
    8. 'Pick' → logprob: -3.0902562141418457
    9. 'Check' → logprob: -3.3402562141418457
    10. 'from' → logprob: -3.4652562141418457

Token 442: ' the' (ID: 290)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.6309133768081665
    2. 'the' → logprob: -1.1309133768081665
    3. 'micro' → logprob: -3.005913257598877
    4. ' the' → logprob: -3.255913257598877
    5. ' k' → logprob: -3.505913257598877
    6. 'lowest' → logprob: -4.630913257598877
    7. 'top' → logprob: -5.505913257598877
    8. '[k' → logprob: -6.130913257598877
    9. ' microbes' → logprob: -6.130913257598877
    10. 'candidate' → logprob: -6.755913257598877

Token 443: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.44714775681495667
    2. ' k' → logprob: -1.8221477270126343
    3. ' first' → logprob: -2.572147846221924
    4. 'first' → logprob: -2.572147846221924
    5. 'lowest' → logprob: -3.697147846221924
    6. 'micro' → logprob: -4.572147846221924
    7. 'release' → logprob: -6.697147846221924
    8. 'best' → logprob: -6.822147846221924
    9. 'top' → logprob: -6.822147846221924
    10. ' lowest' → logprob: -7.072147846221924

Token 444: ' microbes' (ID: 156044)
  Prédit: ' microbes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' microbes' → logprob: -0.188373863697052
    2. ' lowest' → logprob: -2.5633738040924072
    3. 'lowest' → logprob: -3.6883738040924072
    4. 'micro' → logprob: -3.8133738040924072
    5. ' smallest' → logprob: -4.063374042510986
    6. ' ones' → logprob: -4.688374042510986
    7. '[' → logprob: -5.063374042510986
    8. ' with' → logprob: -5.438374042510986
    9. ' micro' → logprob: -6.313374042510986
    10. '[:' → logprob: -6.938374042510986

Token 445: ' with' (ID: 483)
  Prédit: ' with'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' with' → logprob: -0.09819424897432327
    2. 'with' → logprob: -2.4731943607330322
    3. '[:' → logprob: -5.348194122314453
    4. '           ' → logprob: -6.473194122314453
    5. '[-' → logprob: -7.098194122314453
    6. '[' → logprob: -7.473194122314453
    7. 'sorted' → logprob: -8.723194122314453
    8. '#' → logprob: -8.973194122314453
    9. ' that' → logprob: -9.098194122314453
    10. '[::-' → logprob: -9.223194122314453

Token 446: ' lowest' (ID: 23120)
  Prédit: 'lowest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lowest' → logprob: -0.8216305375099182
    2. ' lowest' → logprob: -1.0716304779052734
    3. ' the' → logprob: -1.6966304779052734
    4. ' smallest' → logprob: -4.071630477905273
    5. 'the' → logprob: -4.071630477905273
    6. ' least' → logprob: -8.571630477905273
    7. 'least' → logprob: -9.196630477905273
    8. ' minimal' → logprob: -9.821630477905273
    9. 'minimal' → logprob: -10.321630477905273
    10. 'Lowest' → logprob: -11.196630477905273

Token 447: ' releases' (ID: 30979)
  Prédit: ' release'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' release' → logprob: -0.20859915018081665
    2. 'release' → logprob: -1.8335990905761719
    3. '.release' → logprob: -3.583599090576172
    4. ' .' → logprob: -8.083599090576172
    5. ' releases' → logprob: -8.833599090576172
    6. '_release' → logprob: -9.708599090576172
    7. '.' → logprob: -10.208599090576172
    8. '   ' → logprob: -10.333599090576172
    9. '```' → logprob: -10.333599090576172
    10. ' ' → logprob: -11.083599090576172

Token 448: ' among' (ID: 6200)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0799587219953537
    2. '[:' → logprob: -4.079958915710449
    3. '
' → logprob: -4.329958915710449
    4. ' if' → logprob: -4.454958915710449
    5. '[' → logprob: -5.079958915710449
    6. ',' → logprob: -5.579958915710449
    7. ' that' → logprob: -5.829958915710449
    8. '       ' → logprob: -5.954958915710449
    9. ' among' → logprob: -6.204958915710449
    10. '.' → logprob: -6.579958915710449

Token 449: ' those' (ID: 2617)
  Prédit: ' microbes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' microbes' → logprob: -0.6749566793441772
    2. 'micro' → logprob: -0.7999566793441772
    3. ' micro' → logprob: -4.299956798553467
    4. ' the' → logprob: -5.299956798553467
    5. ' those' → logprob: -5.299956798553467
    6. 'those' → logprob: -5.424956798553467
    7. 'the' → logprob: -5.799956798553467
    8. '[' → logprob: -5.924956798553467
    9. 'mic' → logprob: -6.674956798553467
    10. '[m' → logprob: -7.049956798553467

Token 450: ' that' (ID: 484)
  Prédit: ' with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' with' → logprob: -0.3774781823158264
    2. 'with' → logprob: -1.2524781227111816
    3. ' whose' → logprob: -4.502478122711182
    4. ' that' → logprob: -5.127478122711182
    5. '           ' → logprob: -5.127478122711182
    6. 'whose' → logprob: -6.502478122711182
    7. ' having' → logprob: -6.627478122711182
    8. 'that' → logprob: -7.377478122711182
    9. 'having' → logprob: -7.627478122711182
    10. '<|end|>' → logprob: -8.37747859954834

Token 451: ' have' (ID: 679)
  Prédit: 'have'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'have' → logprob: -0.3533044755458832
    2. ' have' → logprob: -1.2283045053482056
    3. 'capacity' → logprob: -5.978304386138916
    4. ' capacity' → logprob: -6.853304386138916
    5. '   ' → logprob: -7.728304386138916
    6. ' ' → logprob: -8.478304862976074
    7. ' can' → logprob: -9.603304862976074
    8. '       ' → logprob: -9.728304862976074
    9. '  ' → logprob: -9.853304862976074
    10. '           ' → logprob: -9.978304862976074

Token 452: ' capacity' (ID: 12241)
  Prédit: 'capacity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'capacity' → logprob: -0.35256415605545044
    2. ' capacity' → logprob: -1.2275640964508057
    3. '   ' → logprob: -5.727564334869385
    4. 'micro' → logprob: -8.477563858032227
    5. '           ' → logprob: -8.602563858032227
    6. 'm' → logprob: -8.977563858032227
    7. '       ' → logprob: -9.727563858032227
    8. '_capacity' → logprob: -9.977563858032227
    9. '.capacity' → logprob: -9.977563858032227
    10. 'b' → logprob: -10.477563858032227

Token 453: ' *' (ID: 425)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.029372036457061768
    2. '>=' → logprob: -3.779371976852417
    3. '           ' → logprob: -5.279372215270996
    4. ')' → logprob: -8.779372215270996
    5. ']>=' → logprob: -9.529372215270996
    6. ')>=' → logprob: -9.654372215270996
    7. ',' → logprob: -9.779372215270996
    8. '               ' → logprob: -9.904372215270996
    9. ' <=' → logprob: -9.966872215270996
    10. '            ' → logprob: -10.216872215270996

Token 454: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.5991410613059998
    2. ' k' → logprob: -0.8491410613059998
    3. '>=' → logprob: -4.2241411209106445
    4. ' >=' → logprob: -5.4741411209106445
    5. ' ' → logprob: -6.9741411209106445
    6. ')>=' → logprob: -7.4741411209106445
    7. 'right' → logprob: -7.5991411209106445
    8. ')' → logprob: -7.8491411209106445
    9. '
' → logprob: -8.099141120910645
    10. '1' → logprob: -8.224141120910645

Token 455: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.03371059522032738
    2. '>=' → logprob: -3.658710479736328
    3. '           ' → logprob: -5.658710479736328
    4. ')' → logprob: -6.783710479736328
    5. '   ' → logprob: -8.033710479736328
    6. ' <=' → logprob: -8.283710479736328
    7. ' ' → logprob: -8.283710479736328
    8. ' >' → logprob: -8.283710479736328
    9. '       ' → logprob: -8.658710479736328
    10. '>' → logprob: -8.783710479736328

Token 456: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.7334572076797485
    2. '0' → logprob: -1.6084572076797485
    3. 'sum' → logprob: -2.233457088470459
    4. 'max' → logprob: -2.233457088470459
    5. 'min' → logprob: -2.858457088470459
    6. ' total' → logprob: -4.608457088470459
    7. 'current' → logprob: -5.108457088470459
    8. 'release' → logprob: -5.233457088470459
    9. 'selected' → logprob: -5.858457088470459
    10. 'mid' → logprob: -5.858457088470459

Token 457: '_release' (ID: 59589)
  Prédit: '_release'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_release' → logprob: -0.0071906885132193565
    2. 'release' → logprob: -5.007190704345703
    3. ' _' → logprob: -8.757190704345703
    4. '_' → logprob: -9.257190704345703
    5. ' release' → logprob: -9.882190704345703
    6. '   ' → logprob: -10.382190704345703
    7. '_re' → logprob: -10.757190704345703
    8. ' ' → logprob: -11.257190704345703
    9. '_return' → logprob: -11.257190704345703
    10. '```' → logprob: -11.257190704345703

Token 458: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3749001622200012
    2. ':' → logprob: -1.4999001026153564
    3. '       ' → logprob: -3.4999001026153564
    4. '
' → logprob: -4.3749003410339355
    5. ',' → logprob: -4.7499003410339355
    6. ')' → logprob: -4.8749003410339355
    7. '):' → logprob: -5.1249003410339355
    8. ':
' → logprob: -5.8749003410339355
    9. '            
' → logprob: -6.1249003410339355
    10. '.' → logprob: -6.4999003410339355

Token 459: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08571638911962509
    2. ':' → logprob: -3.085716485977173
    3. '       ' → logprob: -3.960716485977173
    4. ')' → logprob: -5.210716247558594
    5. '):' → logprob: -5.710716247558594
    6. ',' → logprob: -6.710716247558594
    7. '   ' → logprob: -6.835716247558594
    8. '               ' → logprob: -6.960716247558594
    9. '
' → logprob: -7.085716247558594
    10. '<|end|>' → logprob: -7.585716247558594

Token 460: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09148009866476059
    2. '       ' → logprob: -2.966480016708374
    3. ':' → logprob: -4.216480255126953
    4. ')' → logprob: -5.341480255126953
    5. '
' → logprob: -5.466480255126953
    6. '            
' → logprob: -6.216480255126953
    7. '):' → logprob: -6.341480255126953
    8. '   ' → logprob: -6.466480255126953
    9. '        
' → logprob: -6.466480255126953
    10. ':
' → logprob: -6.966480255126953

Token 461: ' But' (ID: 3072)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05202075093984604
    2. '
' → logprob: -3.427020788192749
    3. '            
' → logprob: -4.55202054977417
    4. '       ' → logprob: -5.92702054977417
    5. ' 
' → logprob: -6.42702054977417
    6. '    
' → logprob: -7.42702054977417
    7. '        
' → logprob: -7.55202054977417
    8. '  
' → logprob: -7.80202054977417
    9. ' return' → logprob: -8.427021026611328
    10. ',' → logprob: -8.552021026611328

Token 462: ' total' (ID: 3609)
  Prédit: ' we'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' we' → logprob: -0.33287882804870605
    2. 'we' → logprob: -2.457878828048706
    3. ' total' → logprob: -2.582878828048706
    4. '           ' → logprob: -3.207878828048706
    5. ' for' → logprob: -3.832878828048706
    6. ' return' → logprob: -4.707879066467285
    7. ' the' → logprob: -4.707879066467285
    8. 'total' → logprob: -5.082879066467285
    9. ' if' → logprob: -5.207879066467285
    10. ' since' → logprob: -5.707879066467285

Token 463: '_release' (ID: 59589)
  Prédit: '_release'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_release' → logprob: -0.007928364910185337
    2. '_' → logprob: -4.882928371429443
    3. 'release' → logprob: -8.632927894592285
    4. '_return' → logprob: -10.007927894592285
    5. '_re' → logprob: -10.882927894592285
    6. '   ' → logprob: -11.257927894592285
    7. ' _' → logprob: -11.382927894592285
    8. '       ' → logprob: -11.382927894592285
    9. '           ' → logprob: -12.007927894592285
    10. '_
' → logprob: -12.257927894592285

Token 464: ' is' (ID: 382)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.237326741218567
    2. ' =' → logprob: -1.862326741218567
    3. ' is' → logprob: -2.2373266220092773
    4. ')' → logprob: -2.3623266220092773
    5. ' <=' → logprob: -2.6123266220092773
    6. '>' → logprob: -3.2373266220092773
    7. '<=' → logprob: -3.4873266220092773
    8. ' can' → logprob: -3.6123266220092773
    9. ':' → logprob: -4.112326622009277
    10. '<|end|>' → logprob: -4.237326622009277

Token 465: ' sum' (ID: 4215)
  Prédit: 'unknown'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'unknown' → logprob: -0.9894639849662781
    2. '0' → logprob: -1.8644640445709229
    3. 'None' → logprob: -1.9894640445709229
    4. 'sum' → logprob: -1.9894640445709229
    5. 'not' → logprob: -2.614464044570923
    6. ' unknown' → logprob: -3.489464044570923
    7. ' None' → logprob: -3.489464044570923
    8. 'undefined' → logprob: -3.614464044570923
    9. ' not' → logprob: -4.739463806152344
    10. ' sum' → logprob: -5.239463806152344

Token 466: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.9901883602142334
    2. '(selected' → logprob: -1.9901883602142334
    3. 'of' → logprob: -2.3651883602142334
    4. '_release' → logprob: -2.6151883602142334
    5. '_' → logprob: -2.9901883602142334
    6. '<|end|>' → logprob: -3.2401883602142334
    7. ')' → logprob: -3.6151883602142334
    8. '(m' → logprob: -3.6151883602142334
    9. '_selected' → logprob: -3.7401883602142334
    10. '           ' → logprob: -4.1151885986328125

Token 467: ' release' (ID: 8232)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.4611187279224396
    2. '[m' → logprob: -1.7111186981201172
    3. ' m' → logprob: -2.836118698120117
    4. 'release' → logprob: -3.086118698120117
    5. 'micro' → logprob: -3.211118698120117
    6. '[' → logprob: -3.836118698120117
    7. '(m' → logprob: -5.336118698120117
    8. ' release' → logprob: -5.586118698120117
    9. ' [' → logprob: -5.586118698120117
    10. ' micro' → logprob: -6.836118698120117

Token 468: '_i' (ID: 10853)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.068630337715149
    2. '           ' → logprob: -1.068630337715149
    3. ')' → logprob: -1.818630337715149
    4. '[:' → logprob: -3.3186302185058594
    5. ' of' → logprob: -4.568630218505859
    6. '       ' → logprob: -4.818630218505859
    7. '_of' → logprob: -4.818630218505859
    8. ' +' → logprob: -4.818630218505859
    9. ']' → logprob: -5.318630218505859
    10. '   ' → logprob: -5.318630218505859

Token 469: ' of' (ID: 328)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8575068712234497
    2. ')' → logprob: -1.2325068712234497
    3. '[:' → logprob: -2.35750675201416
    4. 's' → logprob: -3.23250675201416
    5. ' for' → logprob: -4.23250675201416
    6. '       ' → logprob: -4.48250675201416
    7. ' if' → logprob: -4.73250675201416
    8. ' +' → logprob: -4.73250675201416
    9. ',' → logprob: -4.85750675201416
    10. ' =' → logprob: -4.98250675201416

Token 470: ' these' (ID: 1879)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.8762803077697754
    2. ' selected' → logprob: -1.3762803077697754
    3. 'the' → logprob: -1.8762803077697754
    4. 'selected' → logprob: -2.1262803077697754
    5. 'micro' → logprob: -4.126280307769775
    6. ' chosen' → logprob: -4.626280307769775
    7. 'chosen' → logprob: -4.751280307769775
    8. ' microbes' → logprob: -4.876280307769775
    9. ' micro' → logprob: -5.876280307769775
    10. ' these' → logprob: -5.876280307769775

Token 471: ' microbes' (ID: 156044)
  Prédit: '_selected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_selected' → logprob: -0.7499927282333374
    2. 'selected' → logprob: -1.7499927282333374
    3. ')' → logprob: -2.124992847442627
    4. ' selected' → logprob: -2.499992847442627
    5. 's' → logprob: -3.374992847442627
    6. '_i' → logprob: -3.374992847442627
    7. '_' → logprob: -4.374992847442627
    8. '_k' → logprob: -4.499992847442627
    9. ' microbes' → logprob: -4.624992847442627
    10. 'k' → logprob: -5.124992847442627

Token 472: '
            
' (ID: 45334)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.022346142679452896
    2. '            
' → logprob: -5.272346019744873
    3. ':' → logprob: -5.522346019744873
    4. '
' → logprob: -5.772346019744873
    5. ',' → logprob: -6.272346019744873
    6. '       ' → logprob: -6.272346019744873
    7. '<|end|>' → logprob: -7.147346019744873
    8. ')' → logprob: -7.272346019744873
    9. '<|end|>' → logprob: -7.272346019744873
    10. '    
' → logprob: -7.397346019744873

Token 473: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0061340294778347015
    2. '       ' → logprob: -6.506134033203125
    3. '            
' → logprob: -6.506134033203125
    4. '
' → logprob: -6.631134033203125
    5. '\n' → logprob: -7.881134033203125
    6. '    
' → logprob: -8.006134033203125
    7. '   ' → logprob: -8.506134033203125
    8. ')' → logprob: -8.506134033203125
    9. '        
' → logprob: -8.881134033203125
    10. ':' → logprob: -9.256134033203125

Token 474: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11100656539201736
    2. '       ' → logprob: -4.111006736755371
    3. ' left' → logprob: -4.236006736755371
    4. ' releases' → logprob: -4.486006736755371
    5. 'left' → logprob: -4.611006736755371
    6. 'low' → logprob: -4.611006736755371
    7. '#' (adapté à ' #') → logprob: -5.236006736755371
    8. ' low' → logprob: -5.236006736755371
    9. ' selected' → logprob: -5.361006736755371
    10. '   ' → logprob: -5.486006736755371

Token 475: ' We' (ID: 1416)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'low' → logprob: -1.6418544054031372
    2. 'left' → logprob: -2.0168542861938477
    3. '       ' → logprob: -2.5168542861938477
    4. 'selected' → logprob: -2.5168542861938477
    5. ' left' → logprob: -2.6418542861938477
    6. ' releases' → logprob: -2.8918542861938477
    7. ' low' → logprob: -2.8918542861938477
    8. '   ' → logprob: -3.0168542861938477
    9. ' selected' → logprob: -3.1418542861938477
    10. 'c' → logprob: -3.3918542861938477

Token 476: ' do' (ID: 621)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.2934774160385132
    2. ''ll' → logprob: -1.2934774160385132
    3. ' can' → logprob: -1.6684774160385132
    4. '   ' → logprob: -3.1684775352478027
    5. '           ' → logprob: -3.1684775352478027
    6. ' try' → logprob: -3.4184775352478027
    7. ' ' → logprob: -3.4184775352478027
    8. 're' → logprob: -3.9184775352478027
    9. ' will' → logprob: -4.043477535247803
    10. ' need' → logprob: -4.543477535247803

Token 477: ' instead' (ID: 7665)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6412925124168396
    2. 'left' → logprob: -2.3912925720214844
    3. 'import' → logprob: -2.6412925720214844
    4. 'for' → logprob: -2.8912925720214844
    5. 'from' → logprob: -3.0162925720214844
    6. ' for' → logprob: -3.1412925720214844
    7. ' left' → logprob: -3.3912925720214844
    8. 'low' → logprob: -3.5162925720214844
    9. '   ' → logprob: -3.6412925720214844
    10. ' low' → logprob: -4.641292572021484

Token 478: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1211671233177185
    2. '
' → logprob: -3.4961671829223633
    3. ' left' → logprob: -4.496167182922363
    4. 'import' → logprob: -4.746167182922363
    5. '   ' → logprob: -4.871167182922363
    6. ' selected' → logprob: -4.871167182922363
    7. '#' → logprob: -4.871167182922363
    8. ':' → logprob: -4.996167182922363
    9. 'left' → logprob: -5.496167182922363
    10. '       ' → logprob: -5.621167182922363

Token 479: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00402152631431818
    2. '       ' → logprob: -6.504021644592285
    3. '            
' → logprob: -6.879021644592285
    4. '
' → logprob: -7.629021644592285
    5. '            ' → logprob: -8.129021644592285
    6. '        
' → logprob: -9.129021644592285
    7. ' return' → logprob: -9.129021644592285
    8. ' for' → logprob: -9.504021644592285
    9. 'import' → logprob: -9.879021644592285
    10. '          ' → logprob: -10.004021644592285

Token 480: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7066463828086853
    2. ' releases' → logprob: -1.45664644241333
    3. ' left' → logprob: -2.83164644241333
    4. ' selected' → logprob: -3.83164644241333
    5. ' release' → logprob: -4.08164644241333
    6. ' low' → logprob: -4.08164644241333
    7. '       ' → logprob: -4.08164644241333
    8. ' #' → logprob: -4.45664644241333
    9. 'left' → logprob: -4.45664644241333
    10. '#' (adapté à ' #') → logprob: -4.58164644241333

Token 481: ' For' (ID: 2214)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'low' → logprob: -1.8285847902297974
    2. '           ' → logprob: -2.078584671020508
    3. 'left' → logprob: -2.078584671020508
    4. '#' → logprob: -2.578584671020508
    5. 'selected' → logprob: -2.578584671020508
    6. 'possible' → logprob: -2.953584671020508
    7. 'c' → logprob: -3.078584671020508
    8. ' left' → logprob: -3.078584671020508
    9. ' low' → logprob: -3.328584671020508
    10. ' releases' → logprob: -3.578584671020508

Token 482: ' each' (ID: 2454)
  Prédit: ' capacity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' capacity' → logprob: -1.22855806350708
    2. ' k' → logprob: -1.85355806350708
    3. 'capacity' → logprob: -2.22855806350708
    4. ' cap' → logprob: -2.47855806350708
    5. 'cap' → logprob: -2.72855806350708
    6. 'k' → logprob: -2.85355806350708
    7. ' each' → logprob: -3.60355806350708
    8. ' candidate' → logprob: -3.85355806350708
    9. ' threshold' → logprob: -3.85355806350708
    10. ' b' → logprob: -4.22855806350708

Token 483: ' micro' (ID: 10449)
  Prédit: 'micro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'micro' → logprob: -0.8114403486251831
    2. 'capacity' → logprob: -1.561440348625183
    3. ' capacity' → logprob: -1.686440348625183
    4. ' micro' → logprob: -2.5614404678344727
    5. 'i' → logprob: -3.8114404678344727
    6. 'm' → logprob: -4.311440467834473
    7. 'k' → logprob: -4.311440467834473
    8. ' i' → logprob: -4.436440467834473
    9. 'candidate' → logprob: -5.311440467834473
    10. ' k' → logprob: -5.936440467834473

Token 484: 'be' (ID: 1464)
  Prédit: 'be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'be' → logprob: -0.0006558468448929489
    2. 'organ' → logprob: -7.875655651092529
    3. 'bes' → logprob: -9.250656127929688
    4. 'bi' → logprob: -9.875656127929688
    5. '   ' → logprob: -11.000656127929688
    6. '       ' → logprob: -11.250656127929688
    7. 'obe' → logprob: -11.250656127929688
    8. 'bial' → logprob: -11.250656127929688
    9. '```' → logprob: -11.625656127929688
    10. '           ' → logprob: -11.750656127929688

Token 485: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06348900496959686
    2. ',' → logprob: -3.0634889602661133
    3. 'in' → logprob: -5.438488960266113
    4. '           ' → logprob: -5.563488960266113
    5. ' with' → logprob: -6.063488960266113
    6. ':' → logprob: -6.063488960266113
    7. '       ' → logprob: -7.563488960266113
    8. ' m' → logprob: -8.563488960266113
    9. ' ,' → logprob: -8.688488960266113
    10. 'with' → logprob: -8.813488960266113

Token 486: ' define' (ID: 13174)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.3861139118671417
    2. ' if' → logprob: -2.0111138820648193
    3. 'max' → logprob: -2.1361138820648193
    4. '           ' → logprob: -3.7611138820648193
    5. 'if' → logprob: -4.511114120483398
    6. ' capacity' → logprob: -5.136114120483398
    7. ' limit' → logprob: -5.386114120483398
    8. 'limit' → logprob: -5.636114120483398
    9. ' allowed' → logprob: -5.761114120483398
    10. ' possible' → logprob: -6.386114120483398

Token 487: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.10006462037563324
    2. 'max' → logprob: -2.600064516067505
    3. 'limit' → logprob: -5.600064754486084
    4. ' limit' → logprob: -5.725064754486084
    5. ' threshold' → logprob: -5.850064754486084
    6. 'threshold' → logprob: -6.100064754486084
    7. ' capacity' → logprob: -6.475064754486084
    8. ' min' → logprob: -6.850064754486084
    9. ' a' → logprob: -6.850064754486084
    10. ' the' → logprob: -7.100064754486084

Token 488: ' total' (ID: 3609)
  Prédit: '_release'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_release' → logprob: -0.022120077162981033
    2. '_total' → logprob: -3.8971199989318848
    3. 'release' → logprob: -7.022119998931885
    4. 'total' → logprob: -7.772119998931885
    5. '_possible' → logprob: -9.022120475769043
    6. '_allowed' → logprob: -9.772120475769043
    7. ' total' → logprob: -10.397120475769043
    8. ' release' → logprob: -10.772120475769043
    9. '```' → logprob: -11.272120475769043
    10. 'Release' → logprob: -12.022120475769043

Token 489: '_release' (ID: 59589)
  Prédit: '_release'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_release' → logprob: -0.08762475103139877
    2. 'release' → logprob: -2.5876247882843018
    3. ' release' → logprob: -4.837624549865723
    4. '_' → logprob: -7.587624549865723
    5. ' _' → logprob: -8.962624549865723
    6. 'Release' → logprob: -10.087624549865723
    7. '_re' → logprob: -11.087624549865723
    8. '_RELEASE' → logprob: -11.462624549865723
    9. '.release' → logprob: -11.712624549865723
    10. '   ' → logprob: -11.962624549865723

Token 490: ' allowed' (ID: 9279)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.29582858085632324
    2. '_allowed' → logprob: -1.9208285808563232
    3. '=' → logprob: -2.4208285808563232
    4. '_possible' → logprob: -4.670828819274902
    5. 's' → logprob: -4.920828819274902
    6. '_limit' → logprob: -6.920828819274902
    7. 'allowed' → logprob: -7.170828819274902
    8. '_per' → logprob: -7.795828819274902
    9. '           ' → logprob: -8.045828819274902
    10. ' allowed' → logprob: -8.170828819274902

Token 491: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11998417973518372
    2. '=' → logprob: -2.9949841499328613
    3. '           ' → logprob: -3.1199841499328613
    4. '_allowed' → logprob: -4.744984149932861
    5. ':' → logprob: -5.869984149932861
    6. '_limit' → logprob: -6.369984149932861
    7. '_possible' → logprob: -6.744984149932861
    8. 's' → logprob: -7.244984149932861
    9. ',' → logprob: -7.869984149932861
    10. '            ' → logprob: -7.994984149932861

Token 492: ' b' (ID: 287)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.5895352959632874
    2. ' m' → logprob: -1.2145352363586426
    3. 'micro' → logprob: -2.0895352363586426
    4. ' micro' → logprob: -3.8395352363586426
    5. 'b' → logprob: -7.339535236358643
    6. 'int' → logprob: -7.464535236358643
    7. 'mic' → logprob: -8.0895357131958
    8. 'self' → logprob: -8.3395357131958
    9. '   ' → logprob: -8.7770357131958
    10. '```' → logprob: -8.9020357131958

Token 493: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.000513952283654362
    2. '_' → logprob: -8.625514030456543
    3. '_capacity' → logprob: -9.000514030456543
    4. 'capacity' → logprob: -9.250514030456543
    5. 'i' → logprob: -10.125514030456543
    6. '_micro' → logprob: -11.375514030456543
    7. '[i' → logprob: -11.500514030456543
    8. '   ' → logprob: -12.500514030456543
    9. ' capacity' → logprob: -12.500514030456543
    10. '_
' → logprob: -12.500514030456543

Token 494: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.005307396873831749
    2. '*' → logprob: -5.255307197570801
    3. '   ' → logprob: -10.7553071975708
    4. '[' → logprob: -12.0053071975708
    5. 's' → logprob: -12.2553071975708
    6. ' ' → logprob: -12.2553071975708
    7. '_' → logprob: -12.5053071975708
    8. ')' → logprob: -12.5053071975708
    9. '           ' → logprob: -12.6303071975708
    10. '  ' → logprob: -12.7553071975708

Token 495: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.1797594577074051
    2. ' k' → logprob: -1.8047595024108887
    3. ' ' → logprob: -12.55475902557373
    4. '
' → logprob: -12.92975902557373
    5. '(k' → logprob: -13.67975902557373
    6. ' 
' → logprob: -13.92975902557373
    7. '```' → logprob: -14.05475902557373
    8. '"' → logprob: -14.17975902557373
    9. '`' → logprob: -14.30475902557373
    10. ')' → logprob: -14.55475902557373

Token 496: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6609005331993103
    2. '           ' → logprob: -0.7859005331993103
    3. '<|end|>' → logprob: -4.910900592803955
    4. '<|end|>' → logprob: -5.035900592803955
    5. ',' → logprob: -5.285900592803955
    6. '            
' → logprob: -5.285900592803955
    7. ':' → logprob: -7.535900592803955
    8. ',
' → logprob: -7.785900592803955
    9. '       ' → logprob: -8.160900115966797
    10. ')' → logprob: -8.410900115966797

Token 497: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010717170313000679
    2. '
' → logprob: -5.135717391967773
    3. '            
' → logprob: -6.385717391967773
    4. ',' → logprob: -6.760717391967773
    5. '#' → logprob: -7.260717391967773
    6. '       ' → logprob: -7.385717391967773
    7. 'tokens' → logprob: -9.010717391967773
    8. 'import' → logprob: -9.635717391967773
    9. '```' → logprob: -10.135717391967773
    10. ' tokens' → logprob: -10.135717391967773

Token 498: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.024944303557276726
    2. '
' → logprob: -4.149944305419922
    3. '            
' → logprob: -5.774944305419922
    4. '       ' → logprob: -6.024944305419922
    5. ',' → logprob: -6.774944305419922
    6. '#' (adapté à ' #') → logprob: -7.649944305419922
    7. 'tokens' → logprob: -8.399944305419922
    8. '    
' → logprob: -8.649944305419922
    9. '        
' → logprob: -8.899944305419922
    10. '   ' → logprob: -8.899944305419922

Token 499: ' So' (ID: 2632)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.013993545435369015
    2. ' releases' → logprob: -5.388993740081787
    3. '       ' → logprob: -5.763993740081787
    4. '            
' → logprob: -6.888993740081787
    5. 'release' → logprob: -7.263993740081787
    6. 'threshold' → logprob: -7.388993740081787
    7. ' release' → logprob: -7.638993740081787
    8. 'selected' → logprob: -8.013993263244629
    9. '#' → logprob: -8.138993263244629
    10. ' selected' → logprob: -8.513993263244629

Token 500: ' the' (ID: 290)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.0441986322402954
    2. 'max' → logprob: -2.169198513031006
    3. 'selected' → logprob: -2.419198513031006
    4. 'possible' → logprob: -2.669198513031006
    5. 'min' → logprob: -2.919198513031006
    6. '#' → logprob: -2.919198513031006
    7. 'c' → logprob: -3.044198513031006
    8. 'valid' → logprob: -3.044198513031006
    9. 'candidate' → logprob: -3.544198513031006
    10. 'total' → logprob: -3.544198513031006

Token 501: ' minimal' (ID: 19957)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.2383980751037598
    2. 'max' → logprob: -1.9883980751037598
    3. 'low' → logprob: -2.3633980751037598
    4. 'selected' → logprob: -2.3633980751037598
    5. 'possible' → logprob: -2.6133980751037598
    6. 'left' → logprob: -2.8633980751037598
    7. 'candidate' → logprob: -2.9883980751037598
    8. 'micro' → logprob: -2.9883980751037598
    9. 'c' → logprob: -3.2383980751037598
    10. 're' → logprob: -3.6133980751037598

Token 502: ' among' (ID: 6200)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.2585298418998718
    2. ' total' → logprob: -2.5085299015045166
    3. 're' → logprob: -2.6335299015045166
    4. 'possible' → logprob: -3.6335299015045166
    5. 'release' → logprob: -3.7585299015045166
    6. ' releases' → logprob: -4.3835296630859375
    7. 'micro' → logprob: -5.8835296630859375
    8. 'required' → logprob: -6.3835296630859375
    9. '#' → logprob: -6.5085296630859375
    10. ' release' → logprob: -6.8835296630859375

Token 503: ' these' (ID: 1879)
  Prédit: 'micro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'micro' → logprob: -1.1657967567443848
    2. '[m' → logprob: -1.4157967567443848
    3. 'm' → logprob: -1.6657967567443848
    4. '[' → logprob: -2.1657967567443848
    5. 'the' → logprob: -3.5407967567443848
    6. 'b' → logprob: -3.7907967567443848
    7. '[i' → logprob: -3.9157967567443848
    8. '(m' → logprob: -4.165796756744385
    9. '[b' → logprob: -4.290796756744385
    10. 'them' → logprob: -5.165796756744385

Token 504: ' is' (ID: 382)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.4532887935638428
    2. ' max' → logprob: -2.4532887935638428
    3. '           ' → logprob: -2.9532887935638428
    4. '_max' → logprob: -3.2032887935638428
    5. 'allowed' → logprob: -3.5782887935638428
    6. ' allowed' → logprob: -3.7032887935638428
    7. '_allowed' → logprob: -4.078289031982422
    8. ' _' → logprob: -4.453289031982422
    9. ')' → logprob: -4.578289031982422
    10. '_release' → logprob: -4.828289031982422

Token 505: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.04639256000518799
    2. ' min' → logprob: -3.1713924407958984
    3. 'float' → logprob: -6.171392440795898
    4. '   ' → logprob: -8.421392440795898
    5. ' float' → logprob: -8.421392440795898
    6. 'max' → logprob: -8.546392440795898
    7. 'b' → logprob: -8.671392440795898
    8. 'inf' → logprob: -9.171392440795898
    9. 'micro' → logprob: -9.546392440795898
    10. 'capacity' → logprob: -9.921392440795898

Token 506: '(b' (ID: 3229)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.18496297299861908
    2. '([' → logprob: -2.1849629878997803
    3. '(b' → logprob: -3.8099629878997803
    4. '_capacity' → logprob: -4.184962749481201
    5. 'capacity' → logprob: -5.434962749481201
    6. '(cap' → logprob: -5.809962749481201
    7. 'micro' → logprob: -6.184962749481201
    8. '(' → logprob: -6.309962749481201
    9. '```' → logprob: -6.934962749481201
    10. 'b' → logprob: -7.184962749481201

Token 507: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.00484910374507308
    2. '.capacity' → logprob: -6.379848957061768
    3. 'i' → logprob: -6.879848957061768
    4. '_capacity' → logprob: -7.754848957061768
    5. 'capacity' → logprob: -7.879848957061768
    6. '[i' → logprob: -8.254849433898926
    7. '(cap' → logprob: -8.379849433898926
    8. '(m' → logprob: -9.379849433898926
    9. '.micro' → logprob: -9.379849433898926
    10. '           ' → logprob: -9.504849433898926

Token 508: ' *' (ID: 425)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.33169370889663696
    2. '.capacity' → logprob: -1.4566936492919922
    3. ')*' → logprob: -4.081693649291992
    4. '[' → logprob: -4.581693649291992
    5. ').' → logprob: -5.081693649291992
    6. ',' → logprob: -5.081693649291992
    7. '   ' → logprob: -6.206693649291992
    8. ' *' → logprob: -6.331693649291992
    9. '```' → logprob: -6.831693649291992
    10. '*' → logprob: -6.956693649291992

Token 509: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.07910238206386566
    2. ' k' → logprob: -2.5791022777557373
    3. ')' → logprob: -9.329102516174316
    4. '[k' → logprob: -10.579102516174316
    5. '
' → logprob: -10.704102516174316
    6. 'micro' → logprob: -11.329102516174316
    7. '```' → logprob: -11.454102516174316
    8. ' ' → logprob: -11.829102516174316
    9. '{k' → logprob: -12.204102516174316
    10. '`' → logprob: -12.579102516174316

Token 510: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018978187814354897
    2. ')
' → logprob: -4.143978118896484
    3. '           ' → logprob: -6.018978118896484
    4. ' )' → logprob: -8.768978118896484
    5. '),' → logprob: -9.518978118896484
    6. '       ' → logprob: -9.768978118896484
    7. '   ' → logprob: -10.518978118896484
    8. ').' → logprob: -10.518978118896484
    9. ')
' → logprob: -10.768978118896484
    10. '               ' → logprob: -11.018978118896484

Token 511: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011095807887613773
    2. ')' → logprob: -5.511096000671387
    3. '
' → logprob: -5.886096000671387
    4. ',' → logprob: -6.636096000671387
    5. '            
' → logprob: -7.261096000671387
    6. '       ' → logprob: -7.761096000671387
    7. '.' → logprob: -8.011096000671387
    8. ':' → logprob: -8.511096000671387
    9. '<|end|>' → logprob: -8.511096000671387
    10. '<|end|>' → logprob: -9.261096000671387

Token 512: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010940054431557655
    2. '       ' → logprob: -5.135940074920654
    3. '            
' → logprob: -6.260940074920654
    4. ')' → logprob: -7.260940074920654
    5. ',' → logprob: -7.385940074920654
    6. '.' → logprob: -8.010939598083496
    7. '        
' → logprob: -8.260939598083496
    8. '
' → logprob: -8.635939598083496
    9. '   ' → logprob: -8.760939598083496
    10. 'return' → logprob: -9.135939598083496

Token 513: ' We' (ID: 1416)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06797880679368973
    2. '       ' → logprob: -3.317978858947754
    3. ' releases' → logprob: -4.067978858947754
    4. '   ' → logprob: -6.317978858947754
    5. 'release' → logprob: -6.317978858947754
    6. ' selected' → logprob: -6.442978858947754
    7. 'selected' → logprob: -6.817978858947754
    8. '            
' → logprob: -7.067978858947754
    9. '#' → logprob: -7.067978858947754
    10. ' release' → logprob: -7.192978858947754

Token 514: ' want' (ID: 1682)
  Prédit: ' need'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' need' → logprob: -1.6007543802261353
    2. ' want' → logprob: -1.7257543802261353
    3. '           ' → logprob: -1.9757543802261353
    4. 'need' → logprob: -2.1007542610168457
    5. ' can' → logprob: -2.7257542610168457
    6. ' try' → logprob: -3.1007542610168457
    7. 'want' → logprob: -3.4757542610168457
    8. ' must' → logprob: -3.7257542610168457
    9. 'must' → logprob: -3.7257542610168457
    10. '#' → logprob: -3.9757542610168457

Token 515: ' sum' (ID: 4215)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.2890821695327759
    2. 'to' → logprob: -1.5390821695327759
    3. '           ' → logprob: -3.6640820503234863
    4. 'total' → logprob: -5.914082050323486
    5. '   ' → logprob: -6.039082050323486
    6. '       ' → logprob: -6.414082050323486
    7. ' total' → logprob: -6.414082050323486
    8. '    ' → logprob: -7.664082050323486
    9. 'return' → logprob: -8.164082527160645
    10. '     ' → logprob: -8.289082527160645

Token 516: ' of' (ID: 328)
  Prédit: '_release'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_release' → logprob: -0.8046964406967163
    2. '_' → logprob: -1.8046964406967163
    3. '(' → logprob: -2.429696559906006
    4. '           ' → logprob: -2.804696559906006
    5. '(re' → logprob: -3.179696559906006
    6. 'release' → logprob: -3.179696559906006
    7. ' of' → logprob: -3.554696559906006
    8. '([' → logprob: -4.054696559906006
    9. '(m' → logprob: -4.179696559906006
    10. '(
' → logprob: -4.554696559906006

Token 517: ' release' (ID: 8232)
  Prédit: 'release'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'release' → logprob: -0.06025779992341995
    2. ' release' → logprob: -3.685257911682129
    3. 'm' → logprob: -3.810257911682129
    4. ' m' → logprob: -5.435257911682129
    5. '[m' → logprob: -6.185257911682129
    6. 'micro' → logprob: -6.310257911682129
    7. 'r' → logprob: -7.310257911682129
    8. 're' → logprob: -7.685257911682129
    9. '[' → logprob: -7.810257911682129
    10. '_release' → logprob: -8.310257911682129

Token 518: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.40268275141716003
    2. ' <=' → logprob: -2.0276827812194824
    3. 's' → logprob: -2.4026827812194824
    4. '_' → logprob: -3.0276827812194824
    5. '           ' → logprob: -3.5276827812194824
    6. ')' → logprob: -4.902682781219482
    7. '   ' → logprob: -5.277682781219482
    8. '<=' → logprob: -5.402682781219482
    9. ' _' → logprob: -5.777682781219482
    10. '[i' → logprob: -5.902682781219482

Token 519: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.03437391296029091
    2. ')' → logprob: -4.159373760223389
    3. '<=' → logprob: -4.534373760223389
    4. 's' → logprob: -6.659373760223389
    5. '           ' → logprob: -6.659373760223389
    6. ' ' → logprob: -7.034373760223389
    7. ')<=' → logprob: -7.034373760223389
    8. '_' → logprob: -7.909373760223389
    9. '_i' → logprob: -8.034374237060547
    10. ',' → logprob: -8.284374237060547

Token 520: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.010148663073778152
    2. ' min' → logprob: -4.635148525238037
    3. 'micro' → logprob: -8.260149002075195
    4. '	min' → logprob: -10.760149002075195
    5. 'minimal' → logprob: -11.135149002075195
    6. 'm' → logprob: -11.385149002075195
    7. '   ' → logprob: -11.572649002075195
    8. 'minimum' → logprob: -11.635149002075195
    9. '```' → logprob: -11.885149002075195
    10. '(min' → logprob: -11.885149002075195

Token 521: '(b' (ID: 3229)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8733490705490112
    2. '(b' → logprob: -0.8733490705490112
    3. '(
' → logprob: -3.248349189758301
    4. '(m' → logprob: -3.498349189758301
    5. ')' → logprob: -4.373349189758301
    6. '([' → logprob: -4.373349189758301
    7. '[' → logprob: -4.623349189758301
    8. '           ' → logprob: -4.623349189758301
    9. '_' → logprob: -5.123349189758301
    10. '```' → logprob: -5.498349189758301

Token 522: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.07785534113645554
    2. '(b' → logprob: -2.702855348587036
    3. '(m' → logprob: -5.202855110168457
    4. '(i' → logprob: -7.452855110168457
    5. '(' → logprob: -7.827855110168457
    6. 'i' → logprob: -8.077855110168457
    7. '([' → logprob: -8.202855110168457
    8. 'micro' → logprob: -8.577855110168457
    9. '(cap' → logprob: -8.702855110168457
    10. '(_' → logprob: -8.827855110168457

Token 523: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.04689260199666023
    2. '*' → logprob: -3.1718926429748535
    3. ')' → logprob: -5.9218926429748535
    4. '_i' → logprob: -7.9218926429748535
    5. ')*' → logprob: -8.296892166137695
    6. '*i' → logprob: -8.421892166137695
    7. '*k' → logprob: -8.921892166137695
    8. '   ' → logprob: -9.921892166137695
    9. '*b' → logprob: -10.796892166137695
    10. '[i' → logprob: -10.921892166137695

Token 524: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.2041207104921341
    2. ' k' → logprob: -1.7041207551956177
    3. '
' → logprob: -7.204120635986328
    4. ')' → logprob: -7.579120635986328
    5. '*k' → logprob: -7.579120635986328
    6. '```' → logprob: -8.454120635986328
    7. ' *' → logprob: -8.579120635986328
    8. '_k' → logprob: -8.954120635986328
    9. '*' → logprob: -9.579120635986328
    10. '[k' → logprob: -9.704120635986328

Token 525: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06840484589338303
    2. ')
' → logprob: -3.4434049129486084
    3. '           ' → logprob: -3.4434049129486084
    4. '       ' → logprob: -7.943404674530029
    5. ' )' → logprob: -7.943404674530029
    6. ')
' → logprob: -8.818405151367188
    7. '               ' → logprob: -9.068405151367188
    8. ')`' → logprob: -9.068405151367188
    9. '
' → logprob: -9.193405151367188
    10. '   ' → logprob: -9.443405151367188

Token 526: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01717398129403591
    2. '       ' → logprob: -4.767173767089844
    3. ')' → logprob: -5.017173767089844
    4. '
' → logprob: -7.892173767089844
    5. '            
' → logprob: -7.892173767089844
    6. ',' → logprob: -8.517173767089844
    7. 'return' → logprob: -8.642173767089844
    8. ':' → logprob: -8.767173767089844
    9. '.' → logprob: -8.767173767089844
    10. '   ' → logprob: -9.767173767089844

Token 527: ' #
' (ID: 21888)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09358467161655426
    2. '
' → logprob: -2.8435847759246826
    3. '       ' → logprob: -4.7185845375061035
    4. '\n' → logprob: -4.8435845375061035
    5. '            
' → logprob: -4.8435845375061035
    6. '        
' → logprob: -6.5935845375061035
    7. '    
' → logprob: -6.8435845375061035
    8. ',' → logprob: -7.3435845375061035
    9. ')' → logprob: -7.7185845375061035
    10. ':' → logprob: -8.218585014343262

Token 528: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0017530106706544757
    2. '       ' → logprob: -6.501752853393555
    3. '            
' → logprob: -9.251752853393555
    4. '
' → logprob: -9.501752853393555
    5. 'import' → logprob: -10.501752853393555
    6. '        
' → logprob: -11.251752853393555
    7. ',' → logprob: -11.501752853393555
    8. '          ' → logprob: -12.751752853393555
    9. '            ' → logprob: -12.751752853393555
    10. 'return' → logprob: -12.751752853393555

Token 529: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.024275146424770355
    2. '       ' → logprob: -3.899275064468384
    3. '            
' → logprob: -6.899275302886963
    4. 'import' → logprob: -7.774275302886963
    5. 'return' → logprob: -7.899275302886963
    6. 'total' → logprob: -8.024274826049805
    7. 'release' → logprob: -8.149274826049805
    8. '
' → logprob: -8.399274826049805
    9. 'from' → logprob: -8.649274826049805
    10. '#' (adapté à ' #') → logprob: -8.899274826049805

Token 530: ' To' (ID: 2514)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.28415387868881226
    2. '       ' → logprob: -3.284153938293457
    3. 'selected' → logprob: -3.284153938293457
    4. '#' → logprob: -4.284153938293457
    5. 'release' → logprob: -4.284153938293457
    6. 're' → logprob: -4.284153938293457
    7. '   ' → logprob: -4.409153938293457
    8. 'c' → logprob: -4.409153938293457
    9. 'low' → logprob: -4.409153938293457
    10. 'min' → logprob: -4.534153938293457

Token 531: ' maximize' (ID: 44207)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'check' → logprob: -1.171129584312439
    2. ' check' → logprob: -1.296129584312439
    3. 'select' → logprob: -2.0461297035217285
    4. '       ' → logprob: -2.2961297035217285
    5. ' select' → logprob: -3.2961297035217285
    6. '           ' → logprob: -3.4211297035217285
    7. 'ach' → logprob: -3.5461297035217285
    8. 'find' → logprob: -4.5461297035217285
    9. 'solve' → logprob: -4.5461297035217285
    10. '   ' → logprob: -4.6711297035217285

Token 532: ' survivors' (ID: 65221)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.6199737191200256
    2. ' sum' → logprob: -1.4949736595153809
    3. 'total' → logprob: -2.619973659515381
    4. ' total' → logprob: -2.869973659515381
    5. 'sur' → logprob: -3.744973659515381
    6. 'the' → logprob: -3.869973659515381
    7. ' the' → logprob: -4.369973659515381
    8. 'return' → logprob: -4.619973659515381
    9. 'release' → logprob: -4.619973659515381
    10. 'k' → logprob: -5.119973659515381

Token 533: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.39632830023765564
    2. '       ' → logprob: -1.521328330039978
    3. '           ' → logprob: -3.2713282108306885
    4. ',' → logprob: -3.8963282108306885
    5. '):' → logprob: -3.8963282108306885
    6. ':
' → logprob: -4.521328449249268
    7. '
' → logprob: -5.396328449249268
    8. '   ' → logprob: -5.646328449249268
    9. ')' → logprob: -5.771328449249268
    10. '        
' → logprob: -6.521328449249268

Token 534: ' pick' (ID: 5230)
  Prédit: ' we'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' we' → logprob: -0.8255947828292847
    2. '           ' → logprob: -1.4505947828292847
    3. 'we' → logprob: -2.700594902038574
    4. ' return' → logprob: -2.700594902038574
    5. ' left' → logprob: -3.075594902038574
    6. ' while' → logprob: -3.700594902038574
    7. ' for' → logprob: -4.325594902038574
    8. '#' → logprob: -4.450594902038574
    9. 'return' → logprob: -4.575594902038574
    10. ' mid' → logprob: -4.700594902038574

Token 535: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.0901798009872437
    2. ' the' → logprob: -1.2151798009872437
    3. ' k' → logprob: -1.3401798009872437
    4. 'the' → logprob: -3.090179920196533
    5. ' microbes' → logprob: -3.340179920196533
    6. 'lowest' → logprob: -4.715179920196533
    7. ' lowest' → logprob: -5.090179920196533
    8. 'micro' → logprob: -5.340179920196533
    9. ' a' → logprob: -7.465179920196533
    10. ' micro' → logprob: -7.715179920196533

Token 536: ' microbes' (ID: 156044)
  Prédit: ' microbes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' microbes' → logprob: -0.0918135941028595
    2. '_micro' → logprob: -3.341813564300537
    3. 'micro' → logprob: -3.591813564300537
    4. ')' → logprob: -4.966813564300537
    5. ' micro' → logprob: -5.591813564300537
    6. ' lowest' → logprob: -5.716813564300537
    7. ' microorganisms' → logprob: -6.341813564300537
    8. 'lowest' → logprob: -6.716813564300537
    9. '_sorted' → logprob: -7.091813564300537
    10. '_release' → logprob: -7.341813564300537

Token 537: ' with' (ID: 483)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3364473879337311
    2. '           ' → logprob: -1.8364473581314087
    3. '       ' → logprob: -3.4614474773406982
    4. '<|end|>' → logprob: -3.7114474773406982
    5. '<|end|>' → logprob: -3.9614474773406982
    6. ',' → logprob: -4.211447238922119
    7. '   ' → logprob: -4.461447238922119
    8. '):' → logprob: -5.461447238922119
    9. ':
' → logprob: -5.711447238922119
    10. ')' → logprob: -5.711447238922119

Token 538: ' minimal' (ID: 19957)
  Prédit: 'lowest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lowest' → logprob: -0.029749451205134392
    2. ' lowest' → logprob: -4.029749393463135
    3. 'the' → logprob: -5.154749393463135
    4. ' smallest' → logprob: -6.029749393463135
    5. ' the' → logprob: -6.529749393463135
    6. 'minimal' → logprob: -7.029749393463135
    7. 'least' → logprob: -7.904749393463135
    8. 'small' → logprob: -8.029749870300293
    9. 'minimum' → logprob: -8.904749870300293
    10. ' minimal' → logprob: -9.029749870300293

Token 539: ' release' (ID: 8232)
  Prédit: ' release'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' release' → logprob: -0.2564971446990967
    2. 'release' → logprob: -1.5064971446990967
    3. ' releases' → logprob: -6.006497383117676
    4. ' sum' → logprob: -6.756497383117676
    5. ' total' → logprob: -7.631497383117676
    6. '_release' → logprob: -8.506497383117676
    7. 'sum' → logprob: -8.756497383117676
    8. 'total' → logprob: -10.256497383117676
    9. ' ' → logprob: -10.756497383117676
    10. '.release' → logprob: -11.756497383117676

Token 540: ' with' (ID: 483)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8009272813796997
    2. '           ' → logprob: -0.8009272813796997
    3. '       ' → logprob: -3.17592716217041
    4. '
' → logprob: -4.55092716217041
    5. ',' → logprob: -4.55092716217041
    6. ')' → logprob: -5.05092716217041
    7. '.' → logprob: -5.42592716217041
    8. '   ' → logprob: -5.42592716217041
    9. '):' → logprob: -5.55092716217041
    10. '<|end|>' → logprob: -5.55092716217041

Token 541: ' capacity' (ID: 12241)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.41424164175987244
    2. ' release' → logprob: -2.2892415523529053
    3. 'release' → logprob: -3.0392415523529053
    4. 'out' → logprob: -3.1642415523529053
    5. 'lowest' → logprob: -3.2892415523529053
    6. ' capacity' → logprob: -3.4142415523529053
    7. ' lowest' → logprob: -3.9142415523529053
    8. 'capacity' → logprob: -4.164241790771484
    9. ' releases' → logprob: -5.039241790771484
    10. ' highest' → logprob: -5.414241790771484

Token 542: ' constraints' (ID: 31060)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.25039350986480713
    2. '>=' → logprob: -1.8753935098648071
    3. '_sorted' → logprob: -3.5003933906555176
    4. ' *' → logprob: -4.125393390655518
    5. ')' → logprob: -4.500393390655518
    6. 's' → logprob: -5.875393390655518
    7. ' ' → logprob: -6.750393390655518
    8. '[' → logprob: -6.750393390655518
    9. ')>=' → logprob: -6.750393390655518
    10. '*' → logprob: -7.000393390655518

Token 543: '
            
' (ID: 45334)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06492368131875992
    2. ':' → logprob: -3.6899237632751465
    3. '       ' → logprob: -4.3149237632751465
    4. '<|end|>' → logprob: -4.6899237632751465
    5. ',' → logprob: -5.6899237632751465
    6. '
' → logprob: -5.6899237632751465
    7. '<|end|>' → logprob: -5.6899237632751465
    8. '.' → logprob: -6.6899237632751465
    9. '            
' → logprob: -6.6899237632751465
    10. ':
' → logprob: -7.4399237632751465

Token 544: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4879381060600281
    2. '           ' → logprob: -0.9879381060600281
    3. '
' → logprob: -5.237937927246094
    4. '        
' → logprob: -5.487937927246094
    5. '    
' → logprob: -6.612937927246094
    6. '   ' → logprob: -7.112937927246094
    7. '            
' → logprob: -7.362937927246094
    8. '\n' → logprob: -7.612937927246094
    9. ':' → logprob: -7.737937927246094
    10. ',' → logprob: -9.737937927246094

Token 545: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1244775727391243
    2. ' releases' → logprob: -3.9994776248931885
    3. 'c' → logprob: -4.124477386474609
    4. '       ' → logprob: -4.374477386474609
    5. 'selected' → logprob: -4.374477386474609
    6. 're' → logprob: -5.124477386474609
    7. 'threshold' → logprob: -5.249477386474609
    8. 'candidate' → logprob: -5.374477386474609
    9. ' candidates' → logprob: -5.624477386474609
    10. 'left' → logprob: -5.624477386474609

Token 546: ' We'll' (ID: 46830)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'low' → logprob: -1.5507093667984009
    2. 'left' → logprob: -1.9257093667984009
    3. 'c' → logprob: -2.1757092475891113
    4. '   ' → logprob: -2.5507092475891113
    5. 'capacity' → logprob: -2.8007092475891113
    6. 'capac' → logprob: -3.0507092475891113
    7. 'selected' → logprob: -3.3007092475891113
    8. 're' → logprob: -3.4257092475891113
    9. 'threshold' → logprob: -3.4257092475891113
    10. ' left' → logprob: -3.6757092475891113

Token 547: ' select' (ID: 4736)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.1005107164382935
    2. 'select' → logprob: -1.3505107164382935
    3. 'try' → logprob: -1.6005107164382935
    4. 'use' → logprob: -3.475510597229004
    5. 'filter' → logprob: -3.475510597229004
    6. '   ' → logprob: -3.725510597229004
    7. 'continue' → logprob: -3.850510597229004
    8. 'consider' → logprob: -4.225510597229004
    9. 'check' → logprob: -4.350510597229004
    10. 'collect' → logprob: -4.475510597229004

Token 548: ' all' (ID: 722)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.2775396406650543
    2. 'candidate' → logprob: -2.2775397300720215
    3. ' candidates' → logprob: -2.7775397300720215
    4. ' candidate' → logprob: -4.6525397300720215
    5. 'subset' → logprob: -4.6525397300720215
    6. 'the' → logprob: -4.9025397300720215
    7. 'valid' → logprob: -4.9025397300720215
    8. 'selected' → logprob: -5.2775397300720215
    9. '           ' → logprob: -5.4025397300720215
    10. 'filtered' → logprob: -5.7775397300720215

Token 549: ' microbes' (ID: 156044)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.40680158138275146
    2. '_candidates' → logprob: -2.031801700592041
    3. '           ' → logprob: -3.031801700592041
    4. '=' → logprob: -3.656801700592041
    5. 'candidate' → logprob: -4.031801700592041
    6. ' =' → logprob: -4.281801700592041
    7. 'cap' → logprob: -4.531801700592041
    8. 'with' → logprob: -4.531801700592041
    9. 'micro' → logprob: -4.531801700592041
    10. 'for' → logprob: -4.656801700592041

Token 550: ' with' (ID: 483)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.0547549724578857
    2. '           ' → logprob: -2.0547549724578857
    3. ' with' → logprob: -2.0547549724578857
    4. '=' → logprob: -2.8047549724578857
    5. 'with' → logprob: -2.8047549724578857
    6. ' =' → logprob: -3.0547549724578857
    7. '_with' → logprob: -3.1797549724578857
    8. '_sorted' → logprob: -3.1797549724578857
    9. '[:' → logprob: -3.5547549724578857
    10. ':' → logprob: -3.6797549724578857

Token 551: ' capacity' (ID: 12241)
  Prédit: 'capacity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'capacity' → logprob: -0.20472627878189087
    2. ' capacity' → logprob: -1.704726219177246
    3. 'micro' → logprob: -6.079726219177246
    4. 'm' → logprob: -7.579726219177246
    5. 'cap' → logprob: -8.579726219177246
    6. ' micro' → logprob: -9.204726219177246
    7. 'b' → logprob: -9.829726219177246
    8. '   ' → logprob: -10.079726219177246
    9. ' m' → logprob: -10.204726219177246
    10. '_capacity' → logprob: -11.204726219177246

Token 552: ' *' (ID: 425)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.2554479241371155
    2. '>=' → logprob: -1.5054478645324707
    3. '           ' → logprob: -6.755447864532471
    4. ')' → logprob: -7.755447864532471
    5. '=' → logprob: -8.130448341369629
    6. ']>=' → logprob: -8.130448341369629
    7. ')>=' → logprob: -8.380448341369629
    8. ' ' → logprob: -8.755448341369629
    9. '   ' → logprob: -8.880448341369629
    10. '       ' → logprob: -9.130448341369629

Token 553: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.3868790566921234
    2. ' k' → logprob: -1.1368790864944458
    3. ' ' → logprob: -12.386878967285156
    4. '[k' → logprob: -14.136878967285156
    5. '_k' → logprob: -14.136878967285156
    6. '   ' → logprob: -15.011878967285156
    7. '```' → logprob: -15.136878967285156
    8. '  ' → logprob: -15.386878967285156
    9. '	k' → logprob: -15.386878967285156
    10. '{k' → logprob: -15.511878967285156

Token 554: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.07368013262748718
    2. '>=' → logprob: -2.6986801624298096
    3. '           ' → logprob: -6.9486799240112305
    4. ' <=' → logprob: -7.1986799240112305
    5. ')' → logprob: -8.19867992401123
    6. ' ' → logprob: -8.44867992401123
    7. ':' → logprob: -8.44867992401123
    8. '=' → logprob: -8.82367992401123
    9. '```' → logprob: -9.07367992401123
    10. '<=' → logprob: -9.19867992401123

Token 555: ' X' (ID: 2127)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.09213196486234665
    2. 'min' → logprob: -3.2171318531036377
    3. 'sum' → logprob: -3.5921318531036377
    4. 'max' → logprob: -4.467132091522217
    5. 'total' → logprob: -6.592132091522217
    6. 'micro' → logprob: -6.717132091522217
    7. 'm' → logprob: -6.967132091522217
    8. ' sum' → logprob: -6.967132091522217
    9. ' ' → logprob: -6.967132091522217
    10. 'release' → logprob: -7.217132091522217

Token 556: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20053784549236298
    2. '           ' → logprob: -2.450537919998169
    3. '=' → logprob: -3.700537919998169
    4. ':
' → logprob: -4.20053768157959
    5. ' =' → logprob: -4.57553768157959
    6. '):' → logprob: -4.95053768157959
    7. '
' → logprob: -5.20053768157959
    8. ',' → logprob: -5.20053768157959
    9. '       ' → logprob: -5.32553768157959
    10. ')' → logprob: -5.45053768157959

Token 557: 'some' (ID: 25231)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.030074777081608772
    2. ')' → logprob: -4.030074596405029
    3. ' ' → logprob: -5.155074596405029
    4. '           ' → logprob: -5.905074596405029
    5. 'min' → logprob: -7.405074596405029
    6. 'total' → logprob: -7.530074596405029
    7. '1' → logprob: -8.155075073242188
    8. 'float' → logprob: -8.405075073242188
    9. ' min' → logprob: -8.530075073242188
    10. ' total' → logprob: -8.780075073242188

Token 558: ' threshold' (ID: 24313)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.25660809874534607
    2. ')' → logprob: -2.506608009338379
    3. 'threshold' → logprob: -2.631608009338379
    4. ' value' → logprob: -4.131608009338379
    5. 'number' → logprob: -4.381608009338379
    6. '0' → logprob: -4.631608009338379
    7. 'candidate' → logprob: -4.756608009338379
    8. 'unknown' → logprob: -4.881608009338379
    9. 'variable' → logprob: -5.631608009338379
    10. 'total' → logprob: -6.006608009338379

Token 559: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5888624787330627
    2. '           ' → logprob: -1.088862419128418
    3. ':' → logprob: -3.088862419128418
    4. '):' → logprob: -3.588862419128418
    5. '),' → logprob: -5.213862419128418
    6. '=' → logprob: -5.213862419128418
    7. '       ' → logprob: -5.338862419128418
    8. ' =' → logprob: -5.713862419128418
    9. ' and' → logprob: -5.838862419128418
    10. '
' → logprob: -5.963862419128418

Token 560: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.014935961924493313
    2. ',' → logprob: -5.5149359703063965
    3. '       ' → logprob: -5.6399359703063965
    4. ' and' → logprob: -6.0149359703063965
    5. ':' → logprob: -6.5149359703063965
    6. ' for' → logprob: -6.8899359703063965
    7. '.' → logprob: -7.6399359703063965
    8. '            
' → logprob: -8.139935493469238
    9. '   ' → logprob: -8.514935493469238
    10. '
' → logprob: -9.264935493469238

Token 561: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09577377885580063
    2. '
' → logprob: -3.970773696899414
    3. ' 
' → logprob: -4.220773696899414
    4. '            
' → logprob: -4.345773696899414
    5. '       ' → logprob: -4.595773696899414
    6. ' ' → logprob: -4.720773696899414
    7. '    
' → logprob: -5.595773696899414
    8. ',' → logprob: -6.095773696899414
    9. '  
' → logprob: -6.220773696899414
    10. '            ' → logprob: -6.220773696899414

Token 562: ' We' (ID: 1416)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07414358109235764
    2. '       ' → logprob: -3.074143648147583
    3. ' return' → logprob: -5.449143409729004
    4. '            
' → logprob: -5.699143409729004
    5. 'return' → logprob: -5.824143409729004
    6. '   ' → logprob: -5.824143409729004
    7. '
' → logprob: -6.699143409729004
    8. ' 
' → logprob: -6.824143409729004
    9. '    ' → logprob: -7.199143409729004
    10. ' for' → logprob: -7.199143409729004

Token 563: ' want' (ID: 1682)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' can' → logprob: -1.4672315120697021
    2. 'need' → logprob: -1.5922315120697021
    3. ' need' → logprob: -2.467231512069702
    4. ' try' → logprob: -2.467231512069702
    5. 'try' → logprob: -2.592231512069702
    6. 'can' → logprob: -2.842231512069702
    7. 'def' → logprob: -3.342231512069702
    8. ' will' → logprob: -3.342231512069702
    9. 'import' → logprob: -3.467231512069702
    10. '       ' → logprob: -3.592231512069702

Token 564: ' minimal' (ID: 19957)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.47446006536483765
    2. 'to' → logprob: -1.0994601249694824
    3. 'False' → logprob: -4.599460124969482
    4. 'True' → logprob: -4.974460124969482
    5. 'total' → logprob: -5.474460124969482
    6. ' True' → logprob: -5.724460124969482
    7. 'min' → logprob: -5.974460124969482
    8. ' False' → logprob: -5.974460124969482
    9. 'sum' → logprob: -6.224460124969482
    10. 'k' → logprob: -6.349460124969482

Token 565: ' total' (ID: 3609)
  Prédit: ' release'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' release' → logprob: -1.0425469875335693
    2. 'release' → logprob: -1.0425469875335693
    3. '_release' → logprob: -1.6675469875335693
    4. ' total' → logprob: -3.1675469875335693
    5. ' releases' → logprob: -3.1675469875335693
    6. 'total' → logprob: -4.667547225952148
    7. 'import' → logprob: -6.167547225952148
    8. '_total' → logprob: -6.667547225952148
    9. '   ' → logprob: -6.667547225952148
    10. '_' → logprob: -6.917547225952148

Token 566: ' release' (ID: 8232)
  Prédit: '_release'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_release' → logprob: -0.17541560530662537
    2. 'release' → logprob: -1.9254156351089478
    3. ' release' → logprob: -4.300415515899658
    4. '_' → logprob: -7.050415515899658
    5. ' _' → logprob: -7.800415515899658
    6. '           ' → logprob: -10.175415992736816
    7. '   ' → logprob: -10.550415992736816
    8. '```' → logprob: -10.550415992736816
    9. '_re' → logprob: -10.800415992736816
    10. '_return' → logprob: -10.925415992736816

Token 567: ' sum' (ID: 4215)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3969208598136902
    2. '           ' → logprob: -1.396920919418335
    3. '):' → logprob: -4.271920680999756
    4. '       ' → logprob: -4.396920680999756
    5. '=' → logprob: -4.396920680999756
    6. ',' → logprob: -4.521920680999756
    7. ')' → logprob: -4.896920680999756
    8. ' =' → logprob: -5.021920680999756
    9. '   ' → logprob: -5.771920680999756
    10. '
' → logprob: -6.271920680999756

Token 568: ' among' (ID: 6200)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12966753542423248
    2. '       ' → logprob: -3.6296675205230713
    3. ',' → logprob: -4.12966775894165
    4. ':' → logprob: -4.12966775894165
    5. '
' → logprob: -4.25466775894165
    6. '<|end|>' → logprob: -4.25466775894165
    7. '<|end|>' → logprob: -4.75466775894165
    8. '            
' → logprob: -5.25466775894165
    9. ' =' → logprob: -5.87966775894165
    10. '   ' → logprob: -6.25466775894165

Token 569: ' k' (ID: 372)
  Prédit: 'micro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'micro' → logprob: -0.3176356852054596
    2. '[' → logprob: -1.8176356554031372
    3. '[m' → logprob: -3.6926357746124268
    4. ' microbes' → logprob: -3.6926357746124268
    5. 'those' → logprob: -4.692635536193848
    6. 'm' → logprob: -4.942635536193848
    7. 'the' → logprob: -4.942635536193848
    8. '[i' → logprob: -5.442635536193848
    9. '[]' → logprob: -5.567635536193848
    10. ' [' → logprob: -5.692635536193848

Token 570: ' microbes' (ID: 156044)
  Prédit: ' microbes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' microbes' → logprob: -0.2338324636220932
    2. '           ' → logprob: -3.233832359313965
    3. 'micro' → logprob: -3.358832359313965
    4. ' releases' → logprob: -3.983832359313965
    5. '   ' → logprob: -4.233832359313965
    6. ' micro' → logprob: -4.358832359313965
    7. ' release' → logprob: -4.358832359313965
    8. ' that' → logprob: -4.483832359313965
    9. '_micro' → logprob: -4.983832359313965
    10. ')' → logprob: -5.108832359313965

Token 571: ' with' (ID: 483)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09159638732671738
    2. '       ' → logprob: -3.8415963649749756
    3. ':' → logprob: -4.091596603393555
    4. '<|end|>' → logprob: -4.216596603393555
    5. ',' → logprob: -4.591596603393555
    6. '<|end|>' → logprob: -4.716596603393555
    7. '            
' → logprob: -5.466596603393555
    8. '.' → logprob: -5.841596603393555
    9. '
' → logprob: -6.091596603393555
    10. '   ' → logprob: -7.091596603393555

Token 572: ' capacity' (ID: 12241)
  Prédit: 'capacity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'capacity' → logprob: -0.040496643632650375
    2. ' capacity' → logprob: -3.290496587753296
    3. 'highest' → logprob: -6.665496826171875
    4. 'micro' → logprob: -8.415496826171875
    5. 'high' → logprob: -8.540496826171875
    6. 'lowest' → logprob: -8.540496826171875
    7. 'capac' → logprob: -9.165496826171875
    8. 'the' → logprob: -9.415496826171875
    9. 's' → logprob: -10.290496826171875
    10. ' capacities' → logprob: -10.290496826171875

Token 573: '*b' (ID: 72162)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.04766840860247612
    2. ' >=' → logprob: -3.67266845703125
    3. '>=' → logprob: -5.04766845703125
    4. '*' → logprob: -5.29766845703125
    5. '   ' → logprob: -5.79766845703125
    6. ')' → logprob: -6.17266845703125
    7. '           ' → logprob: -6.42266845703125
    8. ' ' → logprob: -7.42266845703125
    9. '*k' → logprob: -7.67266845703125
    10. '=' → logprob: -8.54766845703125

Token 574: '_i' (ID: 10853)
  Prédit: '_k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_k' → logprob: -0.7547401785850525
    2. '_i' → logprob: -1.3797402381896973
    3. 'k' → logprob: -1.8797402381896973
    4. ' _' → logprob: -3.2547402381896973
    5. '_' → logprob: -3.5047402381896973
    6. 'y' → logprob: -3.7547402381896973
    7. ' k' → logprob: -5.004740238189697
    8. '```' → logprob: -5.129740238189697
    9. '   ' → logprob: -5.629740238189697
    10. '           ' → logprob: -5.879740238189697

Token 575: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.18849807977676392
    2. '>=' → logprob: -1.9384980201721191
    3. ' *' → logprob: -4.688498020172119
    4. '           ' → logprob: -4.813498020172119
    5. ')' → logprob: -5.438498020172119
    6. '   ' → logprob: -6.813498020172119
    7. '*' → logprob: -7.188498020172119
    8. ')>=' → logprob: -7.313498020172119
    9. '       ' → logprob: -7.688498020172119
    10. ' ' → logprob: -7.813498020172119

Token 576: ' sum' (ID: 4215)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.9814389944076538
    2. '0' → logprob: -1.2314389944076538
    3. ' k' → logprob: -2.4814391136169434
    4. 'total' → logprob: -3.1064391136169434
    5. 'min' → logprob: -3.1064391136169434
    6. ' total' → logprob: -3.4814391136169434
    7. '1' → logprob: -3.4814391136169434
    8. ' ' → logprob: -3.8564391136169434
    9. ' min' → logprob: -4.106439113616943
    10. 'self' → logprob: -4.731439113616943

Token 577: '_release' (ID: 59589)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.8540329933166504
    2. ':' → logprob: -2.1040329933166504
    3. ')' → logprob: -2.2290329933166504
    4. '_' → logprob: -2.3540329933166504
    5. ' _' → logprob: -2.3540329933166504
    6. '       ' → logprob: -2.7290329933166504
    7. ' =' → logprob: -2.8540329933166504
    8. '):' → logprob: -2.9790329933166504
    9. '   ' → logprob: -3.4790329933166504
    10. '_threshold' → logprob: -3.7290329933166504

Token 578: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1646219491958618
    2. ':' → logprob: -1.2896219491958618
    3. '           ' → logprob: -1.4146219491958618
    4. '
' → logprob: -2.4146218299865723
    5. ':
' → logprob: -4.039621829986572
    6. '        
' → logprob: -4.289621829986572
    7. '):' → logprob: -4.414621829986572
    8. ')' → logprob: -5.039621829986572
    9. '            
' → logprob: -5.414621829986572
    10. '):
' → logprob: -5.664621829986572

Token 579: ' circular' (ID: 37626)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05621599406003952
    2. '       ' → logprob: -4.181215763092041
    3. '            
' → logprob: -4.806215763092041
    4. '               ' → logprob: -5.056215763092041
    5. ' return' → logprob: -5.806215763092041
    6. ' 
' → logprob: -5.806215763092041
    7. '   ' → logprob: -6.056215763092041
    8. ')' → logprob: -6.056215763092041
    9. '
' → logprob: -6.556215763092041
    10. ':' → logprob: -6.556215763092041

Token 580: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4855360686779022
    2. ':' → logprob: -1.6105360984802246
    3. '       ' → logprob: -2.7355360984802246
    4. ')' → logprob: -3.2355360984802246
    5. '):' → logprob: -3.3605360984802246
    6. '
' → logprob: -4.485536098480225
    7. '):
' → logprob: -5.235536098480225
    8. '   ' → logprob: -5.235536098480225
    9. ' =' → logprob: -5.360536098480225
    10. ':
' → logprob: -5.485536098480225

Token 581: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00483985710889101
    2. '       ' → logprob: -5.629839897155762
    3. '            
' → logprob: -7.629839897155762
    4. '
' → logprob: -8.379839897155762
    5. ')' → logprob: -8.504839897155762
    6. '        
' → logprob: -10.129839897155762
    7. 'def' → logprob: -10.254839897155762
    8. '#' → logprob: -10.379839897155762
    9. ',' → logprob: -10.504839897155762
    10. '   ' → logprob: -10.879839897155762

Token 582: ' #
' (ID: 21888)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4457714259624481
    2. '       ' → logprob: -1.0707714557647705
    3. '   ' → logprob: -5.695771217346191
    4. '
' → logprob: -5.945771217346191
    5. '        
' → logprob: -6.070771217346191
    6. '            
' → logprob: -6.070771217346191
    7. '    
' → logprob: -6.695771217346191
    8. ' 
' → logprob: -7.070771217346191
    9. '#' → logprob: -7.570771217346191
    10. ' return' → logprob: -7.695771217346191

Token 583: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011250240728259087
    2. '       ' → logprob: -4.886250019073486
    3. '
' → logprob: -6.261250019073486
    4. '            
' → logprob: -6.761250019073486
    5. '        
' → logprob: -8.261250495910645
    6. 'import' → logprob: -9.011250495910645
    7. '<|end|>' → logprob: -10.636250495910645
    8. '    
' → logprob: -10.886250495910645
    9. 'return' → logprob: -11.011250495910645
    10. '            ' → logprob: -11.136250495910645

Token 584: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.380608469247818
    2. '#' (adapté à ' #') → logprob: -2.380608558654785
    3. 'threshold' → logprob: -3.255608558654785
    4. ' threshold' → logprob: -3.380608558654785
    5. '       ' → logprob: -3.630608558654785
    6. ' left' → logprob: -3.755608558654785
    7. ' #' → logprob: -3.880608558654785
    8. ' low' → logprob: -4.380608558654785
    9. ' return' → logprob: -4.380608558654785
    10. 'low' → logprob: -4.755608558654785

Token 585: ' The' (ID: 623)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8393868207931519
    2. 'threshold' → logprob: -0.8393868207931519
    3. '#' → logprob: -3.0893869400024414
    4. 'capacity' → logprob: -4.089386940002441
    5. 'min' → logprob: -4.714386940002441
    6. 'possible' → logprob: -4.714386940002441
    7. ' threshold' → logprob: -5.089386940002441
    8. 'low' → logprob: -5.089386940002441
    9. 'release' → logprob: -5.464386940002441
    10. '       ' → logprob: -5.464386940002441

Token 586: ' accepted' (ID: 17562)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -2.400242328643799
    2. ' approach' → logprob: -2.400242328643799
    3. 'def' → logprob: -2.525242328643799
    4. ' threshold' → logprob: -2.525242328643799
    5. ' best' → logprob: -2.650242328643799
    6. ' return' → logprob: -2.775242328643799
    7. '#' → logprob: -3.025242328643799
    8. ' capacity' → logprob: -3.025242328643799
    9. '       ' → logprob: -3.025242328643799
    10. 'threshold' → logprob: -3.400242328643799

Token 587: ' approach' (ID: 7139)
  Prédit: ' microbes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' microbes' → logprob: -1.0368093252182007
    2. 'micro' → logprob: -2.1618094444274902
    3. 'threshold' → logprob: -2.4118094444274902
    4. ' return' → logprob: -2.9118094444274902
    5. ' threshold' → logprob: -3.0368094444274902
    6. ' approach' → logprob: -3.2868094444274902
    7. 'return' → logprob: -3.2868094444274902
    8. '           ' → logprob: -3.7868094444274902
    9. ' release' → logprob: -3.7868094444274902
    10. '_micro' → logprob: -3.9118094444274902

Token 588: ':
' (ID: 734)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.18295931816101074
    2. '           ' → logprob: -2.1829593181610107
    3. ':' → logprob: -3.1829593181610107
    4. 'is' → logprob: -5.18295955657959
    5. '       ' → logprob: -6.43295955657959
    6. '#' → logprob: -6.68295955657959
    7. ':
' → logprob: -6.80795955657959
    8. '            
' → logprob: -7.30795955657959
    9. ',' → logprob: -7.80795955657959
    10. 'return' → logprob: -8.30795955657959

Token 589: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0032095611095428467
    2. '
' → logprob: -6.878209590911865
    3. '            ' → logprob: -7.503209590911865
    4. '            
' → logprob: -7.503209590911865
    5. '       ' → logprob: -7.753209590911865
    6. 'import' → logprob: -8.878209114074707
    7. ' return' → logprob: -9.003209114074707
    8. ' from' → logprob: -10.128209114074707
    9. '          ' → logprob: -10.253209114074707
    10. 'return' → logprob: -10.253209114074707

Token 590: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.4102580547332764
    2. 'low' → logprob: -1.5352580547332764
    3. ' left' → logprob: -1.9102580547332764
    4. 'left' → logprob: -1.9102580547332764
    5. ' low' → logprob: -2.5352580547332764
    6. ' lo' → logprob: -3.4102580547332764
    7. 'lo' → logprob: -4.0352582931518555
    8. 'selected' → logprob: -4.0352582931518555
    9. ' releases' → logprob: -4.4102582931518555
    10. '#' (adapté à ' #') → logprob: -4.4102582931518555

Token 591: ' Sort' (ID: 25945)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'low' → logprob: -0.5349454283714294
    2. 'left' → logprob: -1.7849454879760742
    3. 'lo' → logprob: -3.034945487976074
    4. ' low' → logprob: -3.284945487976074
    5. '#' → logprob: -3.409945487976074
    6. ' lo' → logprob: -3.659945487976074
    7. ' left' → logprob: -3.659945487976074
    8. 'threshold' → logprob: -4.784945487976074
    9. 'selected' → logprob: -4.909945487976074
    10. 'import' → logprob: -5.034945487976074

Token 592: ' microbes' (ID: 156044)
  Prédit: 'micro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'micro' → logprob: -1.0846916437149048
    2. 're' → logprob: -1.5846916437149048
    3. 'by' → logprob: -2.5846915245056152
    4. '_release' → logprob: -2.8346915245056152
    5. ' microbes' → logprob: -2.8346915245056152
    6. '_re' → logprob: -2.9596915245056152
    7. ' the' → logprob: -3.5846915245056152
    8. 'the' → logprob: -3.8346915245056152
    9. '_micro' → logprob: -3.8346915245056152
    10. 'release' → logprob: -3.9596915245056152

Token 593: ' by' (ID: 656)
  Prédit: 'by'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'by' → logprob: -0.5136144757270813
    2. '_sorted' → logprob: -2.1386144161224365
    3. '           ' → logprob: -2.7636144161224365
    4. ' by' → logprob: -2.8886144161224365
    5. '_by' → logprob: -2.8886144161224365
    6. '=' → logprob: -3.2636144161224365
    7. ' =' → logprob: -3.6386144161224365
    8. '[:' → logprob: -4.263614654541016
    9. ',' → logprob: -5.263614654541016
    10. '       ' → logprob: -5.638614654541016

Token 594: ' capacity' (ID: 12241)
  Prédit: 'release'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'release' → logprob: -0.03698708862066269
    2. ' release' → logprob: -3.536987066268921
    3. 'capacity' → logprob: -5.2869873046875
    4. 'm' → logprob: -7.4119873046875
    5. 'self' → logprob: -7.4119873046875
    6. ' capacity' → logprob: -7.7869873046875
    7. ' m' → logprob: -9.1619873046875
    8. 'micro' → logprob: -9.4119873046875
    9. '   ' → logprob: -10.0369873046875
    10. '_release' → logprob: -10.2869873046875

Token 595: ' ascending' (ID: 75564)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.3069425821304321
    2. ')' → logprob: -1.4319425821304321
    3. '_sorted' → logprob: -1.6819425821304321
    4. '       ' → logprob: -2.1819424629211426
    5. ':' → logprob: -3.3069424629211426
    6. ',' → logprob: -3.6819424629211426
    7. '[' → logprob: -4.306942462921143
    8. '):
' → logprob: -4.431942462921143
    9. ' if' → logprob: -4.431942462921143
    10. ':
' → logprob: -4.556942462921143

Token 596: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1061653271317482
    2. ',' → logprob: -3.1061654090881348
    3. ' and' → logprob: -3.7311654090881348
    4. '       ' → logprob: -4.731165409088135
    5. '<|end|>' → logprob: -5.856165409088135
    6. '<|end|>' → logprob: -6.356165409088135
    7. '            
' → logprob: -6.481165409088135
    8. '[' → logprob: -6.481165409088135
    9. ')' → logprob: -6.606165409088135
    10. '
' → logprob: -6.731165409088135

Token 597: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008669999428093433
    2. '<|end|>' → logprob: -5.883669853210449
    3. ',' → logprob: -6.008669853210449
    4. ' and' → logprob: -6.883669853210449
    5. '<|end|>' → logprob: -7.383669853210449
    6. '       ' → logprob: -7.633669853210449
    7. ')' → logprob: -7.883669853210449
    8. '
' → logprob: -8.13366985321045
    9. '            
' → logprob: -8.50866985321045
    10. '.' → logprob: -10.25866985321045

Token 598: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0252275038510561
    2. ',' → logprob: -4.5252275466918945
    3. '       ' → logprob: -5.4002275466918945
    4. ' and' → logprob: -6.1502275466918945
    5. ')' → logprob: -6.6502275466918945
    6. '.' → logprob: -7.1502275466918945
    7. ' if' → logprob: -7.2752275466918945
    8. '<|end|>' → logprob: -7.4002275466918945
    9. '            
' → logprob: -7.5252275466918945
    10. '   ' → logprob: -7.5252275466918945

Token 599: ' For' (ID: 2214)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.245326966047287
    2. '       ' → logprob: -2.4953269958496094
    3. ' left' → logprob: -3.6203269958496094
    4. ' selected' → logprob: -4.370326995849609
    5. 'left' → logprob: -4.620326995849609
    6. '   ' → logprob: -4.870326995849609
    7. ' from' → logprob: -5.245326995849609
    8. ' for' → logprob: -5.370326995849609
    9. 'selected' → logprob: -5.370326995849609
    10. ' if' → logprob: -5.495326995849609

Token 600: ' k' (ID: 372)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.1779227256774902
    2. 'k' → logprob: -1.5529227256774902
    3. ' i' → logprob: -1.9279227256774902
    4. ' k' → logprob: -2.0529227256774902
    5. 'capacity' → logprob: -2.9279227256774902
    6. ' capacity' → logprob: -3.0529227256774902
    7. 'each' → logprob: -4.55292272567749
    8. 'cap' → logprob: -4.67792272567749
    9. ' each' → logprob: -4.80292272567749
    10. '_i' → logprob: -4.80292272567749

Token 601: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.30423128604888916
    2. ',' → logprob: -2.3042311668395996
    3. ' microbes' → logprob: -3.1792311668395996
    4. 'in' → logprob: -3.6792311668395996
    5. ':' → logprob: -4.0542311668396
    6. '=' → logprob: -4.0542311668396
    7. '),' → logprob: -4.5542311668396
    8. ' ,' → logprob: -4.9292311668396
    9. '):' → logprob: -5.0542311668396
    10. ')' → logprob: -5.4292311668396

Token 602: ' collect' (ID: 7916)
  Prédit: ' low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' low' → logprob: -1.4314442873001099
    2. '           ' → logprob: -1.5564442873001099
    3. 'low' → logprob: -1.8064442873001099
    4. ' left' → logprob: -2.1814441680908203
    5. ' lo' → logprob: -2.5564441680908203
    6. 'left' → logprob: -3.0564441680908203
    7. '   ' → logprob: -3.6814441680908203
    8. ' releases' → logprob: -3.9314441680908203
    9. 'import' → logprob: -4.30644416809082
    10. 'lo' → logprob: -4.55644416809082

Token 603: ' all' (ID: 722)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -1.9558374881744385
    2. 'micro' → logprob: -2.0808374881744385
    3. 'all' → logprob: -2.2058374881744385
    4. 'the' → logprob: -2.3308374881744385
    5. ' the' → logprob: -2.4558374881744385
    6. '   ' → logprob: -2.4558374881744385
    7. '[m' → logprob: -3.2058374881744385
    8. ' all' → logprob: -3.2058374881744385
    9. ' releases' → logprob: -3.5808374881744385
    10. 'release' → logprob: -3.7058374881744385

Token 604: ' microbes' (ID: 156044)
  Prédit: 'micro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'micro' → logprob: -0.37330397963523865
    2. 'm' → logprob: -1.998304009437561
    3. ' microbes' → logprob: -2.6233038902282715
    4. '[m' → logprob: -3.7483038902282715
    5. ' micro' → logprob: -4.6233038902282715
    6. ' m' → logprob: -4.7483038902282715
    7. 're' → logprob: -4.8733038902282715
    8. '   ' → logprob: -4.8733038902282715
    9. '[' → logprob: -5.1233038902282715
    10. 'release' → logprob: -5.2483038902282715

Token 605: ' with' (ID: 483)
  Prédit: ' with'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' with' → logprob: -0.40645653009414673
    2. 'with' → logprob: -1.531456470489502
    3. '           ' → logprob: -2.906456470489502
    4. ' if' → logprob: -3.531456470489502
    5. '[:' → logprob: -4.156456470489502
    6. '[' → logprob: -6.031456470489502
    7. ' that' → logprob: -6.531456470489502
    8. ',' → logprob: -6.781456470489502
    9. '_with' → logprob: -6.781456470489502
    10. '       ' → logprob: -6.906456470489502

Token 606: ' b' (ID: 287)
  Prédit: 'capacity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'capacity' → logprob: -0.06550789624452591
    2. ' capacity' → logprob: -3.4405078887939453
    3. 'm' → logprob: -4.065507888793945
    4. 'micro' → logprob: -4.440507888793945
    5. 'b' → logprob: -6.815507888793945
    6. ' m' → logprob: -7.565507888793945
    7. 'cap' → logprob: -8.315507888793945
    8. 'lambda' → logprob: -8.565507888793945
    9. ' micro' → logprob: -9.440507888793945
    10. '   ' → logprob: -9.440507888793945

Token 607: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.3879299759864807
    2. 'capacity' → logprob: -1.512929916381836
    3. '_capacity' → logprob: -2.762929916381836
    4. '.capacity' → logprob: -4.137929916381836
    5. 'y' → logprob: -4.637929916381836
    6. 'i' → logprob: -5.137929916381836
    7. ' capacity' → logprob: -6.512929916381836
    8. '>=' → logprob: -7.012929916381836
    9. '_' → logprob: -7.262929916381836
    10. '>' → logprob: -7.762929916381836

Token 608: ' >=' (ID: 5064)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.3392985761165619
    2. ' >=' → logprob: -1.7142986059188843
    3. '>=' → logprob: -2.5892984867095947
    4. 'capacity' → logprob: -4.214298725128174
    5. '*' → logprob: -4.589298725128174
    6. '_capacity' → logprob: -5.964298725128174
    7. ' capacity' → logprob: -6.339298725128174
    8. '.capacity' → logprob: -7.089298725128174
    9. '```' → logprob: -7.714298725128174
    10. '   ' → logprob: -7.839298725128174

Token 609: ' threshold' (ID: 24313)
  Prédit: 'micro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'micro' → logprob: -0.9356850981712341
    2. 'min' → logprob: -1.935685157775879
    3. '(min' → logprob: -2.185685157775879
    4. 'threshold' → logprob: -2.435685157775879
    5. ' microbes' → logprob: -2.435685157775879
    6. '(m' → logprob: -2.810685157775879
    7. ' (' → logprob: -3.685685157775879
    8. 'left' → logprob: -4.310685157775879
    9. '((' → logprob: -4.435685157775879
    10. '(k' → logprob: -4.935685157775879

Token 610: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5428574681282043
    2. '       ' → logprob: -2.0428574085235596
    3. '           ' → logprob: -2.4178574085235596
    4. ')' → logprob: -2.6678574085235596
    5. '):' → logprob: -2.6678574085235596
    6. '   ' → logprob: -3.9178574085235596
    7. '):
' → logprob: -4.792857646942139
    8. ':
' → logprob: -4.917857646942139
    9. '
' → logprob: -5.167857646942139
    10. '        
' → logprob: -6.167857646942139

Token 611: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6491011381149292
    2. ' =' → logprob: -1.6491011381149292
    3. '=' → logprob: -2.0241012573242188
    4. ':' → logprob: -2.6491012573242188
    5. '       ' → logprob: -3.8991012573242188
    6. ')' → logprob: -4.024101257324219
    7. '               ' → logprob: -5.274101257324219
    8. ' and' → logprob: -5.524101257324219
    9. '[' → logprob: -5.774101257324219
    10. '   ' → logprob: -5.899101257324219

Token 612: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16144685447216034
    2. '       ' → logprob: -2.9114468097686768
    3. ':' → logprob: -3.2864468097686768
    4. ')' → logprob: -4.036447048187256
    5. '=' → logprob: -5.036447048187256
    6. ' =' → logprob: -5.036447048187256
    7. '   ' → logprob: -5.286447048187256
    8. ',' → logprob: -6.036447048187256
    9. '<|end|>' → logprob: -6.036447048187256
    10. ' ' → logprob: -6.661447048187256

Token 613: ' select' (ID: 4736)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14103814959526062
    2. '       ' → logprob: -2.391038179397583
    3. '   ' → logprob: -4.766037940979004
    4. 'threshold' → logprob: -4.766037940979004
    5. ' ' → logprob: -5.766037940979004
    6. ' return' → logprob: -5.891037940979004
    7. ' threshold' → logprob: -6.016037940979004
    8. ' 
' → logprob: -6.391037940979004
    9. 'return' → logprob: -6.516037940979004
    10. '    ' → logprob: -6.766037940979004

Token 614: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.887347936630249
    2. ' k' → logprob: -1.637347936630249
    3. ' the' → logprob: -2.137347936630249
    4. 'micro' → logprob: -2.512347936630249
    5. 'the' → logprob: -2.887347936630249
    6. ' microbes' → logprob: -3.137347936630249
    7. ' release' → logprob: -4.137348175048828
    8. 'lowest' → logprob: -4.512348175048828
    9. 'release' → logprob: -4.762348175048828
    10. '[' → logprob: -5.137348175048828

Token 615: ' microbes' (ID: 156044)
  Prédit: '_micro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_micro' → logprob: -0.7006624341011047
    2. ' microbes' → logprob: -1.82566237449646
    3. '           ' → logprob: -2.45066237449646
    4. 'micro' → logprob: -2.70066237449646
    5. ')' → logprob: -3.32566237449646
    6. ' if' → logprob: -3.95066237449646
    7. ' _' → logprob: -4.075662612915039
    8. '```' → logprob: -4.325662612915039
    9. '_' → logprob: -4.575662612915039
    10. '_release' → logprob: -4.700662612915039

Token 616: ' with' (ID: 483)
  Prédit: ' with'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' with' → logprob: -0.46143838763237
    2. '           ' → logprob: -1.5864384174346924
    3. 'with' → logprob: -2.2114384174346924
    4. ' if' → logprob: -4.336438179016113
    5. ' =' → logprob: -4.336438179016113
    6. ':' → logprob: -4.461438179016113
    7. '=' → logprob: -5.836438179016113
    8. '[' → logprob: -6.211438179016113
    9. '       ' → logprob: -6.336438179016113
    10. ')' → logprob: -6.461438179016113

Token 617: ' smallest' (ID: 42173)
  Prédit: 'lowest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lowest' → logprob: -0.014612016268074512
    2. ' lowest' → logprob: -4.389612197875977
    3. 'the' → logprob: -6.639612197875977
    4. ' smallest' → logprob: -7.889612197875977
    5. ' the' → logprob: -8.014612197875977
    6. 'least' → logprob: -10.389612197875977
    7. 'minimal' → logprob: -10.639612197875977
    8. 'small' → logprob: -11.014612197875977
    9. 'release' → logprob: -12.264612197875977
    10. ' minimal' → logprob: -12.889612197875977

Token 618: ' release' (ID: 8232)
  Prédit: 'release'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'release' → logprob: -0.1930566430091858
    2. ' release' → logprob: -1.943056583404541
    3. '.release' → logprob: -3.443056583404541
    4. ' .' → logprob: -9.1930570602417
    5. ' releases' → logprob: -9.1930570602417
    6. '   ' → logprob: -9.8180570602417
    7. '_release' → logprob: -10.1930570602417
    8. ' ' → logprob: -11.8180570602417
    9. '.' → logprob: -11.9430570602417
    10. '```' → logprob: -12.4430570602417

Token 619: ' from' (ID: 591)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2106127291917801
    2. '           ' → logprob: -2.0856127738952637
    3. '):' → logprob: -3.3356127738952637
    4. ')' → logprob: -4.460612773895264
    5. ':
' → logprob: -5.585612773895264
    6. ',' → logprob: -6.085612773895264
    7. '       ' → logprob: -6.085612773895264
    8. '):
' → logprob: -6.335612773895264
    9. '   ' → logprob: -6.835612773895264
    10. '
' → logprob: -6.960612773895264

Token 620: ' those' (ID: 2617)
  Prédit: ' those'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' those' → logprob: -0.6212753057479858
    2. 'those' → logprob: -1.7462753057479858
    3. ' microbes' → logprob: -2.8712754249572754
    4. ' the' → logprob: -2.9962754249572754
    5. ' that' → logprob: -2.9962754249572754
    6. '[' → logprob: -3.4962754249572754
    7. 'the' → logprob: -3.6212754249572754
    8. ' [' → logprob: -3.8712754249572754
    9. 'micro' → logprob: -4.371275424957275
    10. ' these' → logprob: -4.996275424957275

Token 621: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7087806463241577
    2. ':' → logprob: -0.9587806463241577
    3. '       ' → logprob: -2.5837807655334473
    4. '):' → logprob: -4.208780765533447
    5. '        
' → logprob: -4.958780765533447
    6. ')' → logprob: -4.958780765533447
    7. '
' → logprob: -5.708780765533447
    8. '            
' → logprob: -5.708780765533447
    9. ':
' → logprob: -5.958780765533447
    10. ',' → logprob: -6.333780765533447

Token 622: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04725595563650131
    2. ':' → logprob: -3.4222559928894043
    3. '       ' → logprob: -5.297255992889404
    4. ')' → logprob: -5.672255992889404
    5. '):' → logprob: -6.172255992889404
    6. ',' → logprob: -7.547255992889404
    7. '            
' → logprob: -7.797255992889404
    8. '.' → logprob: -7.922255992889404
    9. ':
' → logprob: -8.047255516052246
    10. '   ' → logprob: -8.672255516052246

Token 623: ' #
' (ID: 21888)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1052878350019455
    2. '       ' → logprob: -2.480287790298462
    3. ':' → logprob: -5.730288028717041
    4. '   ' → logprob: -6.230288028717041
    5. '        
' → logprob: -6.230288028717041
    6. '            
' → logprob: -6.355288028717041
    7. '
' → logprob: -6.855288028717041
    8. '    
' → logprob: -6.980288028717041
    9. 'return' → logprob: -7.105288028717041
    10. ',' → logprob: -7.730288028717041

Token 624: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001109851524233818
    2. '       ' → logprob: -7.126110076904297
    3. '            
' → logprob: -8.501110076904297
    4. '
' → logprob: -10.251110076904297
    5. '        
' → logprob: -10.876110076904297
    6. 'import' → logprob: -11.501110076904297
    7. '               ' → logprob: -11.751110076904297
    8. '            ' → logprob: -12.001110076904297
    9. 'return' → logprob: -12.251110076904297
    10. ',' → logprob: -12.876110076904297

Token 625: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.15695099532604218
    2. 'threshold' → logprob: -2.6569509506225586
    3. '       ' → logprob: -3.0319509506225586
    4. ' threshold' → logprob: -4.406950950622559
    5. 'return' → logprob: -5.656950950622559
    6. ' return' → logprob: -5.906950950622559
    7. '   ' → logprob: -6.281950950622559
    8. '
' → logprob: -6.781950950622559
    9. ' if' → logprob: -6.906950950622559
    10. '            
' → logprob: -7.156950950622559

Token 626: ' Try' (ID: 14720)
  Prédit: 'threshold'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'threshold' → logprob: -0.47930842638015747
    2. '           ' → logprob: -1.3543083667755127
    3. ' threshold' → logprob: -2.2293083667755127
    4. '       ' → logprob: -4.604308605194092
    5. '#' → logprob: -6.729308605194092
    6. 'capacity' → logprob: -7.229308605194092
    7. '   ' → logprob: -7.354308605194092
    8. ' capacity' → logprob: -7.729308605194092
    9. ' #' → logprob: -8.479308128356934
    10. 'def' → logprob: -8.479308128356934

Token 627: ' all' (ID: 722)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6058251261711121
    2. ' None' → logprob: -2.730825185775757
    3. '       ' → logprob: -2.730825185775757
    4. ':' → logprob: -2.980825185775757
    5. '   ' → logprob: -2.980825185775757
    6. ' threshold' → logprob: -3.230825185775757
    7. ' ' → logprob: -3.480825185775757
    8. '    ' → logprob: -3.480825185775757
    9. 'threshold' → logprob: -3.480825185775757
    10. ' return' → logprob: -4.230824947357178

Token 628: ' k' (ID: 372)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.1280022859573364
    2. '           ' → logprob: -1.5030022859573364
    3. ')' → logprob: -1.6280022859573364
    4. '       ' → logprob: -2.628002166748047
    5. '   ' → logprob: -3.128002166748047
    6. '):' → logprob: -3.503002166748047
    7. '():' → logprob: -4.753002166748047
    8. '    ' → logprob: -4.878002166748047
    9. ' return' → logprob: -4.878002166748047
    10. 'return' → logprob: -5.003002166748047

Token 629: ' from' (ID: 591)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9548951387405396
    2. '           ' → logprob: -1.3298951387405396
    3. ':' → logprob: -1.5798951387405396
    4. ')' → logprob: -3.07989501953125
    5. '):' → logprob: -3.32989501953125
    6. '
' → logprob: -4.45489501953125
    7. ':
' → logprob: -4.95489501953125
    8. '   ' → logprob: -4.95489501953125
    9. '):
' → logprob: -5.20489501953125
    10. 'threshold' → logprob: -5.57989501953125

Token 630: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7588940262794495
    2. 'k' → logprob: -1.0088939666748047
    3. 'left' → logprob: -1.8838939666748047
    4. ' k' → logprob: -4.758893966674805
    5. 'right' → logprob: -5.758893966674805
    6. 'range' → logprob: -6.633893966674805
    7. ' left' → logprob: -7.258893966674805
    8. '```' → logprob: -7.758893966674805
    9. ' ' → logprob: -8.133893966674805
    10. 'the' → logprob: -8.633893966674805

Token 631: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.12343265116214752
    2. 'k' → logprob: -2.4984326362609863
    3. 'left' → logprob: -3.7484326362609863
    4. 'right' → logprob: -4.623432636260986
    5. '0' → logprob: -8.498433113098145
    6. ' k' → logprob: -9.623433113098145
    7. ' ' → logprob: -9.873433113098145
    8. 'range' → logprob: -10.123433113098145
    9. '```' → logprob: -10.248433113098145
    10. '
' → logprob: -10.873433113098145

Token 632: '..' (ID: 485)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2548612356185913
    2. '       ' → logprob: -2.629861354827881
    3. '           ' → logprob: -2.879861354827881
    4. '   ' → logprob: -3.879861354827881
    5. ',' → logprob: -4.129861354827881
    6. ' to' → logprob: -4.754861354827881
    7. '0' → logprob: -4.879861354827881
    8. ':return' → logprob: -5.004861354827881
    9. 'def' → logprob: -5.254861354827881
    10. ':
' → logprob: -5.504861354827881

Token 633: 'N' (ID: 45)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.4244162440299988
    2. 'k' → logprob: -1.7994163036346436
    3. ' microbes' → logprob: -2.6744163036346436
    4. ' right' → logprob: -3.1744163036346436
    5. 'right' → logprob: -3.7994163036346436
    6. 'self' → logprob: -4.1744160652160645
    7. ' self' → logprob: -4.5494160652160645
    8. ')' → logprob: -5.0494160652160645
    9. '1' → logprob: -5.9244160652160645
    10. '       ' → logprob: -6.4244160652160645

Token 634: '
            
' (ID: 45334)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14445824921131134
    2. ':' → logprob: -2.769458293914795
    3. '           ' → logprob: -3.269458293914795
    4. '   ' → logprob: -4.769458293914795
    5. 'threshold' → logprob: -5.144458293914795
    6. '
' → logprob: -5.394458293914795
    7. '        
' → logprob: -6.019458293914795
    8. 'return' → logprob: -6.144458293914795
    9. ')' → logprob: -6.644458293914795
    10. ',' → logprob: -6.769458293914795

Token 635: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0893092229962349
    2. '       ' → logprob: -2.4643092155456543
    3. '        
' → logprob: -9.589309692382812
    4. '            
' → logprob: -9.589309692382812
    5. '
' → logprob: -9.839309692382812
    6. 'return' → logprob: -9.964309692382812
    7. '```' → logprob: -10.964309692382812
    8. '<|end|>' → logprob: -10.964309692382812
    9. ' return' → logprob: -11.214309692382812
    10. '   ' → logprob: -11.339309692382812

Token 636: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.30961981415748596
    2. 'threshold' → logprob: -2.559619903564453
    3. '       ' → logprob: -2.684619903564453
    4. ' releases' → logprob: -4.059619903564453
    5. 'capacity' → logprob: -4.309619903564453
    6. 'left' → logprob: -4.434619903564453
    7. ' left' → logprob: -4.559619903564453
    8. ' threshold' → logprob: -4.684619903564453
    9. ' capacity' → logprob: -4.934619903564453
    10. 'low' → logprob: -5.184619903564453

Token 637: ' Because' (ID: 13602)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4060054123401642
    2. '       ' → logprob: -1.2810053825378418
    3. ' capacity' → logprob: -4.531005382537842
    4. 'threshold' → logprob: -4.656005382537842
    5. 'capacity' → logprob: -5.031005382537842
    6. '   ' → logprob: -5.906005382537842
    7. ' left' → logprob: -5.906005382537842
    8. 'left' → logprob: -6.156005382537842
    9. ' releases' → logprob: -6.281005382537842
    10. ' if' → logprob: -6.281005382537842

Token 638: ' constraints' (ID: 31060)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.8874169588088989
    2. ' not' → logprob: -1.137416958808899
    3. 'k' → logprob: -2.0124168395996094
    4. ' microbes' → logprob: -2.7624168395996094
    5. ' True' → logprob: -3.7624168395996094
    6. 'not' → logprob: -4.512416839599609
    7. ' len' → logprob: -4.887416839599609
    8. 'len' → logprob: -5.012416839599609
    9. ' capacity' → logprob: -5.012416839599609
    10. 'capacity' → logprob: -5.887416839599609

Token 639: ' are' (ID: 553)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.1591684818267822
    2. ':' → logprob: -1.2841684818267822
    3. '       ' → logprob: -1.5341684818267822
    4. '
' → logprob: -2.7841684818267822
    5. ' if' → logprob: -3.4091684818267822
    6. ':
' → logprob: -4.034168243408203
    7. ' ' → logprob: -4.784168243408203
    8. '            
' → logprob: -5.034168243408203
    9. ' 
' → logprob: -5.159168243408203
    10. '   ' → logprob: -5.159168243408203

Token 640: ' large' (ID: 4410)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.639556646347046
    2. ' k' → logprob: -1.639556646347046
    3. ' True' → logprob: -1.639556646347046
    4. ' not' → logprob: -1.764556646347046
    5. ' len' → logprob: -3.139556646347046
    6. 'k' → logprob: -3.389556646347046
    7. 'True' → logprob: -3.639556646347046
    8. 'len' → logprob: -3.639556646347046
    9. '   ' → logprob: -3.764556646347046
    10. '       ' → logprob: -3.889556646347046

Token 641: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5507520437240601
    2. ':' → logprob: -1.30075204372406
    3. '       ' → logprob: -2.3007521629333496
    4. '
' → logprob: -4.42575216293335
    5. ':
' → logprob: -4.55075216293335
    6. ',' → logprob: -4.92575216293335
    7. '            
' → logprob: -5.42575216293335
    8. '        
' → logprob: -6.05075216293335
    9. '<|end|>' → logprob: -6.17575216293335
    10. '   ' → logprob: -6.30075216293335

Token 642: ' use' (ID: 1199)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.4221511483192444
    2. '           ' → logprob: -2.1721510887145996
    3. ' import' → logprob: -2.1721510887145996
    4. 'import' → logprob: -2.7971510887145996
    5. 'return' → logprob: -3.2971510887145996
    6. ' #' → logprob: -5.0471510887146
    7. '       ' → logprob: -5.7971510887146
    8. '#' → logprob: -6.7971510887146
    9. ' from' → logprob: -7.1721510887146
    10. ' if' → logprob: -7.2971510887146

Token 643: ' an' (ID: 448)
  Prédit: 'binary'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'binary' → logprob: -1.1801365613937378
    2. 'heap' → logprob: -1.3051365613937378
    3. ' a' → logprob: -1.9301365613937378
    4. 'a' → logprob: -2.0551366806030273
    5. ' binary' → logprob: -2.4301366806030273
    6. 'import' → logprob: -3.9301366806030273
    7. ' heap' → logprob: -3.9301366806030273
    8. 'prefix' → logprob: -5.680136680603027
    9. 'two' → logprob: -5.680136680603027
    10. 'bis' → logprob: -5.805136680603027

Token 644: ' efficient' (ID: 12430)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.6323037147521973
    2. ' import' → logprob: -1.5073037147521973
    3. ' heap' → logprob: -2.3823037147521973
    4. ' efficient' → logprob: -2.8823037147521973
    5. 'heap' → logprob: -3.3823037147521973
    6. 'efficient' → logprob: -3.6323037147521973
    7. ' approach' → logprob: -4.757303714752197
    8. ' optimized' → logprob: -5.257303714752197
    9. 'early' → logprob: -5.757303714752197
    10. 'optimized' → logprob: -5.757303714752197

Token 645: ' way' (ID: 2006)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.2713417410850525
    2. ' heap' → logprob: -2.5213418006896973
    3. ' method' → logprob: -3.0213418006896973
    4. ' approach' → logprob: -3.2713418006896973
    5. 'priority' → logprob: -3.5213418006896973
    6. 'appro' → logprob: -4.771341800689697
    7. 'method' → logprob: -4.771341800689697
    8. 'import' → logprob: -5.146341800689697
    9. ' priority' → logprob: -5.771341800689697
    10. 'data' → logprob: -6.021341800689697

Token 646: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11770198494195938
    2. '       ' → logprob: -2.742702007293701
    3. ':' → logprob: -3.742702007293701
    4. '            
' → logprob: -5.242702007293701
    5. '
' → logprob: -5.492702007293701
    6. '        
' → logprob: -5.867702007293701
    7. '   ' → logprob: -6.367702007293701
    8. ':
' → logprob: -6.617702007293701
    9. '<|end|>' → logprob: -6.617702007293701
    10. '    
' → logprob: -6.742702007293701

Token 647: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004314160905778408
    2. '       ' → logprob: -6.004313945770264
    3. '            ' → logprob: -7.254313945770264
    4. '            
' → logprob: -7.629313945770264
    5. '
' → logprob: -8.129314422607422
    6. '        
' → logprob: -9.504314422607422
    7. '        ' → logprob: -9.754314422607422
    8. 'import' → logprob: -10.129314422607422
    9. '          ' → logprob: -10.504314422607422
    10. '    ' → logprob: -10.629314422607422

Token 648: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.667938232421875
    2. ' import' → logprob: -2.167938232421875
    3. '       ' → logprob: -2.417938232421875
    4. 'import' → logprob: -2.417938232421875
    5. ' left' → logprob: -3.417938232421875
    6. ' low' → logprob: -3.417938232421875
    7. ' from' → logprob: -3.792938232421875
    8. ' releases' → logprob: -3.917938232421875
    9. 'low' → logprob: -4.542938232421875
    10. ' selected' → logprob: -4.667938232421875

Token 649: ' For' (ID: 2214)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.0477160215377808
    2. '       ' → logprob: -1.9227160215377808
    3. ' left' → logprob: -2.5477161407470703
    4. 'import' → logprob: -2.6727161407470703
    5. ' import' → logprob: -3.2977161407470703
    6. 'possible' → logprob: -3.4227161407470703
    7. 'low' → logprob: -3.5477161407470703
    8. 'left' → logprob: -3.6727161407470703
    9. ' low' → logprob: -3.9227161407470703
    10. ' selected' → logprob: -3.9227161407470703

Token 650: ' given' (ID: 4335)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.926594078540802
    2. ' k' → logprob: -1.0515940189361572
    3. 'capacity' → logprob: -2.8015940189361572
    4. 'i' → logprob: -3.3015940189361572
    5. ' capacity' → logprob: -3.6765940189361572
    6. 'micro' → logprob: -3.9265940189361572
    7. ' i' → logprob: -4.051594257354736
    8. 'release' → logprob: -4.301594257354736
    9. 'cap' → logprob: -4.676594257354736
    10. 'candidate' → logprob: -5.176594257354736

Token 651: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.6331126689910889
    2. ' k' → logprob: -0.7581126689910889
    3. 'def' → logprob: -9.258112907409668
    4. '
' → logprob: -9.883112907409668
    5. ')' → logprob: -10.008112907409668
    6. ' ' → logprob: -10.133112907409668
    7. '   ' → logprob: -10.258112907409668
    8. 'capacity' → logprob: -10.258112907409668
    9. ' def' → logprob: -10.508112907409668
    10. ' capacity' → logprob: -10.633112907409668

Token 652: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0813005268573761
    2. ',' → logprob: -2.5813004970550537
    3. ':
' → logprob: -6.331300735473633
    4. '           ' → logprob: -8.456300735473633
    5. ' :' → logprob: -9.456300735473633
    6. ' ,' → logprob: -10.081300735473633
    7. '=' → logprob: -10.081300735473633
    8. '   ' → logprob: -10.206300735473633
    9. ':return' → logprob: -10.206300735473633
    10. ',
' → logprob: -10.456300735473633

Token 653: ' find' (ID: 1646)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.9531333446502686
    2. 'left' → logprob: -2.0781333446502686
    3. 'low' → logprob: -2.3281333446502686
    4. 'valid' → logprob: -2.5781333446502686
    5. 'selected' → logprob: -2.7031333446502686
    6. 'capacity' → logprob: -3.2031333446502686
    7. 'possible' → logprob: -3.7031333446502686
    8. 'cap' → logprob: -4.078133583068848
    9. '   ' → logprob: -4.078133583068848
    10. ' left' → logprob: -4.078133583068848

Token 654: ' all' (ID: 722)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'low' → logprob: -1.2943799495697021
    2. ' min' → logprob: -2.169379949569702
    3. 'threshold' → logprob: -2.294379949569702
    4. ' low' → logprob: -2.544379949569702
    5. 'min' → logprob: -2.544379949569702
    6. ' lo' → logprob: -2.669379949569702
    7. 'lo' → logprob: -2.919379949569702
    8. 'left' → logprob: -3.419379949569702
    9. 'capacity' → logprob: -3.419379949569702
    10. 'mid' → logprob: -3.669379949569702

Token 655: ' microbes' (ID: 156044)
  Prédit: 'micro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'micro' → logprob: -0.6766124963760376
    2. 'm' → logprob: -1.5516124963760376
    3. ' microbes' → logprob: -2.551612377166748
    4. 'i' → logprob: -3.176612377166748
    5. ' m' → logprob: -3.426612377166748
    6. ' micro' → logprob: -3.676612377166748
    7. ' capacity' → logprob: -4.176612377166748
    8. 'capacity' → logprob: -4.301612377166748
    9. 'b' → logprob: -4.551612377166748
    10. '(m' → logprob: -5.051612377166748

Token 656: ' where' (ID: 1919)
  Prédit: ' with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' with' → logprob: -0.26944947242736816
    2. 'with' → logprob: -1.5194494724273682
    3. ' =' → logprob: -5.269449234008789
    4. '           ' → logprob: -5.269449234008789
    5. '_with' → logprob: -6.269449234008789
    6. ' that' → logprob: -6.519449234008789
    7. ',' → logprob: -6.894449234008789
    8. 'that' → logprob: -7.519449234008789
    9. '=' → logprob: -7.644449234008789
    10. '<|end|>' → logprob: -8.394449234008789

Token 657: ' b' (ID: 287)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.008122669532895088
    2. 'micro' → logprob: -5.258122444152832
    3. ' m' → logprob: -6.008122444152832
    4. 'b' → logprob: -8.883122444152832
    5. 'capacity' → logprob: -9.633122444152832
    6. 'mic' → logprob: -9.758122444152832
    7. '(m' → logprob: -10.508122444152832
    8. 'mik' → logprob: -10.633122444152832
    9. '   ' → logprob: -10.758122444152832
    10. '```' → logprob: -11.133122444152832

Token 658: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.00012439649435691535
    2. 'i' → logprob: -9.250123977661133
    3. '_' → logprob: -11.625123977661133
    4. '[i' → logprob: -12.250123977661133
    5. 'capacity' → logprob: -12.500123977661133
    6. '>=' → logprob: -12.500123977661133
    7. '```' → logprob: -13.500123977661133
    8. '_capacity' → logprob: -14.000123977661133
    9. 'y' → logprob: -14.000123977661133
    10. 'e' → logprob: -14.500123977661133

Token 659: ' >=' (ID: 5064)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.3084406554698944
    2. ' >=' → logprob: -2.058440685272217
    3. '>=' → logprob: -2.308440685272217
    4. '*' → logprob: -3.308440685272217
    5. '```' → logprob: -7.683440685272217
    6. ']>=' → logprob: -7.808440685272217
    7. '*k' → logprob: -8.558440208435059
    8. ')>=' → logprob: -8.683440208435059
    9. '   ' → logprob: -9.183440208435059
    10. ' ' → logprob: -9.433440208435059

Token 660: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -1.4582056999206543
    2. 'micro' → logprob: -2.2082056999206543
    3. '(min' → logprob: -2.4582056999206543
    4. 'sum' → logprob: -2.5832056999206543
    5. 'total' → logprob: -2.5832056999206543
    6. '0' → logprob: -2.8332056999206543
    7. ' microbes' → logprob: -2.9582056999206543
    8. ' (' → logprob: -3.2082056999206543
    9. '(sum' → logprob: -3.3332056999206543
    10. 'threshold' → logprob: -3.3332056999206543

Token 661: '_b' (ID: 1535)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(m' → logprob: -1.3038718700408936
    2. 'micro' → logprob: -2.0538718700408936
    3. ' microbes' → logprob: -2.5538718700408936
    4. '(k' → logprob: -2.6788718700408936
    5. ')' → logprob: -2.8038718700408936
    6. '_capacity' → logprob: -2.8038718700408936
    7. 'capacity' → logprob: -2.9288718700408936
    8. '_release' → logprob: -3.4288718700408936
    9. '_micro' → logprob: -3.5538718700408936
    10. '           ' → logprob: -3.5538718700408936

Token 662: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.5851114988327026
    2. '_capacity' → logprob: -1.5851114988327026
    3. '_threshold' → logprob: -1.9601114988327026
    4. '_i' → logprob: -2.585111618041992
    5. '_' → logprob: -2.710111618041992
    6. '_cap' → logprob: -2.835111618041992
    7. ' _' → logprob: -3.210111618041992
    8. 'capacity' → logprob: -3.710111618041992
    9. '
' → logprob: -3.960111618041992
    10. 'reshold' → logprob: -4.210111618041992

Token 663: ' (' (ID: 350)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -1.581527590751648
    2. '(min' → logprob: -1.581527590751648
    3. '0' → logprob: -1.831527590751648
    4. '(m' → logprob: -2.2065277099609375
    5. 'micro' → logprob: -2.2065277099609375
    6. ' (' → logprob: -3.7065277099609375
    7. '(total' → logprob: -3.8315277099609375
    8. 'sum' → logprob: -3.8315277099609375
    9. 'total' → logprob: -3.8315277099609375
    10. '1' → logprob: -4.0815277099609375

Token 664: 'sum' (ID: 12298)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.8548885583877563
    2. 'min' → logprob: -1.3548885583877563
    3. 'sum' → logprob: -2.354888439178467
    4. 'total' → logprob: -3.104888439178467
    5. '(min' → logprob: -3.104888439178467
    6. ')' → logprob: -3.604888439178467
    7. '1' → logprob: -4.104888439178467
    8. '(m' → logprob: -4.354888439178467
    9. '(sum' → logprob: -4.479888439178467
    10. 'micro' → logprob: -4.604888439178467

Token 665: '_release' (ID: 59589)
  Prédit: '_release'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_release' → logprob: -0.02238519676029682
    2. 'release' → logprob: -4.772385120391846
    3. '_' → logprob: -5.272385120391846
    4. ')' → logprob: -6.022385120391846
    5. '           ' → logprob: -6.647385120391846
    6. '   ' → logprob: -7.147385120391846
    7. '_re' → logprob: -7.772385120391846
    8. ' _' → logprob: -7.897385120391846
    9. '[' → logprob: -8.272385597229004
    10. '(' → logprob: -8.522385597229004

Token 666: ' /' (ID: 820)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05794251710176468
    2. '           ' → logprob: -4.1829423904418945
    3. ' //' → logprob: -4.3079423904418945
    4. '//' → logprob: -5.6829423904418945
    5. ' )' → logprob: -5.6829423904418945
    6. ')//' → logprob: -5.8079423904418945
    7. ' /' → logprob: -5.9329423904418945
    8. ' +' → logprob: -5.9329423904418945
    9. ')
' → logprob: -6.9329423904418945
    10. ':' → logprob: -7.1829423904418945

Token 667: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.006718809716403484
    2. ' k' → logprob: -5.006718635559082
    3. ')' → logprob: -13.506718635559082
    4. '{k' → logprob: -14.131718635559082
    5. '```' → logprob: -15.131718635559082
    6. '
' → logprob: -15.131718635559082
    7. '(k' → logprob: -15.256718635559082
    8. ' ' → logprob: -16.2567195892334
    9. '           ' → logprob: -16.6317195892334
    10. ',k' → logprob: -17.0067195892334

Token 668: ' )
' (ID: 3270)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02112717553973198
    2. ')
' → logprob: -4.771127223968506
    3. '           ' → logprob: -5.271127223968506
    4. '):' → logprob: -6.021127223968506
    5. ' +' → logprob: -6.896127223968506
    6. ' )' → logprob: -7.271127223968506
    7. ')+' → logprob: -7.521127223968506
    8. '):
' → logprob: -7.521127223968506
    9. '       ' → logprob: -8.021126747131348
    10. ')
' → logprob: -8.396126747131348

Token 669: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4856882691383362
    2. '       ' → logprob: -1.6106882095336914
    3. ')' → logprob: -2.4856882095336914
    4. ':' → logprob: -2.7356882095336914
    5. '):' → logprob: -4.110688209533691
    6. '
' → logprob: -5.235688209533691
    7. '   ' → logprob: -5.610688209533691
    8. ',' → logprob: -6.360688209533691
    9. '):
' → logprob: -6.860688209533691
    10. '               ' → logprob: -6.985688209533691

Token 670: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01991349644958973
    2. '       ' → logprob: -4.394913673400879
    3. ')' → logprob: -6.019913673400879
    4. '<|end|>' → logprob: -6.519913673400879
    5. '            
' → logprob: -6.894913673400879
    6. '            ' → logprob: -7.644913673400879
    7. ',' → logprob: -8.269913673400879
    8. '.' → logprob: -8.519913673400879
    9. '   ' → logprob: -8.644913673400879
    10. '        ' → logprob: -8.769913673400879

Token 671: ' Instead' (ID: 21050)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03475002199411392
    2. '       ' → logprob: -3.534749984741211
    3. ')' → logprob: -6.409749984741211
    4. '   ' → logprob: -6.909749984741211
    5. '            
' → logprob: -7.784749984741211
    6. '               ' → logprob: -7.909749984741211
    7. 'return' → logprob: -7.909749984741211
    8. '<|end|>' → logprob: -8.659749984741211
    9. '    ' → logprob: -8.909749984741211
    10. '            ' → logprob: -8.909749984741211

Token 672: ' of' (ID: 328)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.23467083275318146
    2. ':' → logprob: -1.859670877456665
    3. '               ' → logprob: -4.109670639038086
    4. '       ' → logprob: -4.859670639038086
    5. ',' → logprob: -5.234670639038086
    6. ' of' → logprob: -5.484670639038086
    7. 'return' → logprob: -5.484670639038086
    8. ':
' → logprob: -6.109670639038086
    9. '=' → logprob: -6.484670639038086
    10. '   ' → logprob: -6.609670639038086

Token 673: ' iter' (ID: 10621)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5044205188751221
    2. 'binary' → logprob: -1.879420518875122
    3. 'b' → logprob: -2.879420518875122
    4. 'continu' → logprob: -3.004420518875122
    5. 'search' → logprob: -4.379420280456543
    6. 'calcul' → logprob: -4.379420280456543
    7. 'using' → logprob: -4.504420280456543
    8. 'checking' → logprob: -4.629420280456543
    9. 'bis' → logprob: -4.754420280456543
    10. '           ' → logprob: -4.754420280456543

Token 674: 'ating' (ID: 1365)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6025711297988892
    2. '```' → logprob: -1.4775711297988892
    3. 'import' → logprob: -3.2275710105895996
    4. 'port' → logprob: -3.4775710105895996
    5. 'ating' → logprob: -3.8525710105895996
    6. 'def' → logprob: -3.9775710105895996
    7. 'cut' → logprob: -4.6025710105896
    8. 'plement' → logprob: -4.7275710105896
    9. '
' → logprob: -4.9775710105896
    10. 'python' → logprob: -5.2275710105896

Token 675: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8809558153152466
    2. ' for' → logprob: -0.8809558153152466
    3. ':' → logprob: -2.380955696105957
    4. 'for' → logprob: -3.755955696105957
    5. ' over' → logprob: -4.130955696105957
    6. '       ' → logprob: -4.880955696105957
    7. ' in' → logprob: -5.505955696105957
    8. ' return' → logprob: -5.630955696105957
    9. 'return' → logprob: -6.005955696105957
    10. '...' → logprob: -6.130955696105957

Token 676: ' we' (ID: 581)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7680917978286743
    2. 'return' → logprob: -1.2680917978286743
    3. ' return' → logprob: -2.0180916786193848
    4. '       ' → logprob: -2.8930916786193848
    5. 'import' → logprob: -4.018091678619385
    6. 'threshold' → logprob: -4.518091678619385
    7. '#' → logprob: -4.893091678619385
    8. '   ' → logprob: -5.393091678619385
    9. ' for' → logprob: -5.893091678619385
    10. 'for' → logprob: -6.018091678619385

Token 677: ' binary' (ID: 15600)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6055291891098022
    2. 'return' → logprob: -1.4805291891098022
    3. ' continue' → logprob: -2.730529308319092
    4. ' can' → logprob: -2.730529308319092
    5. 'continue' → logprob: -3.605529308319092
    6. ' break' → logprob: -3.855529308319092
    7. ' try' → logprob: -3.980529308319092
    8. ' use' → logprob: -5.105529308319092
    9. 'import' → logprob: -5.230529308319092
    10. 'break' → logprob: -5.355529308319092

Token 678: ' search' (ID: 3684)
  Prédit: ' search'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' search' → logprob: -0.733338475227356
    2. 'search' → logprob: -1.233338475227356
    3. '_search' → logprob: -1.483338475227356
    4. '_' → logprob: -7.358338356018066
    5. 'earch' → logprob: -7.858338356018066
    6. ' _' → logprob: -8.108338356018066
    7. '
' → logprob: -10.108338356018066
    8. '```' → logprob: -10.483338356018066
    9. 'Search' → logprob: -11.108338356018066
    10. ' ' → logprob: -11.233338356018066

Token 679: ' on' (ID: 402)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.879834771156311
    2. ':' → logprob: -1.004834771156311
    3. '       ' → logprob: -1.879834771156311
    4. ')' → logprob: -3.5048346519470215
    5. '   ' → logprob: -5.0048346519470215
    6. '               ' → logprob: -5.5048346519470215
    7. '):' → logprob: -5.5048346519470215
    8. ',' → logprob: -5.7548346519470215
    9. ' :' → logprob: -5.7548346519470215
    10. ' for' → logprob: -6.2548346519470215

Token 680: ' capacity' (ID: 12241)
  Prédit: 'micro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'micro' → logprob: -0.3218543827533722
    2. 'min' → logprob: -2.94685435295105
    3. 'capacity' → logprob: -2.94685435295105
    4. '0' → logprob: -3.19685435295105
    5. ' microbes' → logprob: -3.44685435295105
    6. 'right' → logprob: -3.94685435295105
    7. 'threshold' → logprob: -4.196854591369629
    8. 'the' → logprob: -4.446854591369629
    9. 'left' → logprob: -4.571854591369629
    10. 'b' → logprob: -4.821854591369629

Token 681: '
            
' (ID: 45334)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4659995436668396
    2. '       ' → logprob: -1.4659996032714844
    3. ')' → logprob: -2.8409996032714844
    4. '           ' → logprob: -2.9659996032714844
    5. ':
' → logprob: -4.590999603271484
    6. '):' → logprob: -4.715999603271484
    7. '
' → logprob: -5.965999603271484
    8. '   ' → logprob: -5.965999603271484
    9. ',' → logprob: -6.215999603271484
    10. '):
' → logprob: -7.340999603271484

Token 682: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03137265890836716
    2. '       ' → logprob: -3.781372547149658
    3. '
' → logprob: -6.281372547149658
    4. ')' → logprob: -6.656372547149658
    5. '            
' → logprob: -6.656372547149658
    6. ',' → logprob: -6.781372547149658
    7. '<|end|>' → logprob: -7.031372547149658
    8. '        
' → logprob: -7.656372547149658
    9. '   ' → logprob: -9.031373023986816
    10. '    
' → logprob: -9.156373023986816

Token 683: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3020777702331543
    2. '       ' → logprob: -1.4270777702331543
    3. '
' → logprob: -5.177077770233154
    4. '   ' → logprob: -5.552077770233154
    5. '            
' → logprob: -6.177077770233154
    6. '        
' → logprob: -6.677077770233154
    7. '    
' → logprob: -6.677077770233154
    8. 'import' → logprob: -6.802077770233154
    9. 'threshold' → logprob: -7.177077770233154
    10. ',' → logprob: -7.302077770233154

Token 684: ' To' (ID: 2514)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0705281496047974
    2. '           ' → logprob: -1.1955281496047974
    3. 'threshold' → logprob: -1.6955281496047974
    4. 'low' → logprob: -3.070528030395508
    5. 'capacity' → logprob: -3.445528030395508
    6. 'if' → logprob: -4.570528030395508
    7. 'return' → logprob: -4.820528030395508
    8. 'min' → logprob: -4.820528030395508
    9. 'def' → logprob: -4.820528030395508
    10. '#' → logprob: -4.945528030395508

Token 685: ' avoid' (ID: 8397)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.5419209003448486
    2. 'find' → logprob: -1.9169209003448486
    3. 'solve' → logprob: -2.7919209003448486
    4. 'det' → logprob: -3.0419209003448486
    5. 'continue' → logprob: -3.2919209003448486
    6. '           ' → logprob: -3.5419209003448486
    7. ' check' → logprob: -4.2919206619262695
    8. 'do' → logprob: -4.5419206619262695
    9. 'ach' → logprob: -4.6669206619262695
    10. 'implement' → logprob: -4.9169206619262695

Token 686: ' circular' (ID: 37626)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 're' → logprob: -1.0705214738845825
    2. 'floating' → logprob: -1.4455214738845825
    3. 'timeout' → logprob: -1.9455214738845825
    4. 'overflow' → logprob: -2.320521354675293
    5. 'redu' → logprob: -3.945521354675293
    6. 'T' → logprob: -4.070521354675293
    7. 'precision' → logprob: -4.195521354675293
    8. 'time' → logprob: -4.320521354675293
    9. ' timeout' → logprob: -4.445521354675293
    10. 'import' → logprob: -4.445521354675293

Token 687: ' dependency' (ID: 50228)
  Prédit: ' dependency'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dependency' → logprob: -0.9270083904266357
    2. 'dependency' → logprob: -1.4270083904266357
    3. '_dependency' → logprob: -1.8020083904266357
    4. ' reasoning' → logprob: -2.3020083904266357
    5. '_reason' → logprob: -4.177008628845215
    6. 'ity' → logprob: -4.177008628845215
    7. '_' → logprob: -4.177008628845215
    8. ' logic' → logprob: -4.302008628845215
    9. 'import' → logprob: -4.927008628845215
    10. '       ' → logprob: -5.802008628845215

Token 688: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.016376499086618423
    2. '       ' → logprob: -5.141376495361328
    3. '            
' → logprob: -5.891376495361328
    4. ',' → logprob: -6.016376495361328
    5. '<|end|>' → logprob: -6.766376495361328
    6. 'return' → logprob: -7.141376495361328
    7. '            ' → logprob: -7.516376495361328
    8. ' return' → logprob: -8.016376495361328
    9. '
' → logprob: -8.016376495361328
    10. '        
' → logprob: -8.141376495361328

Token 689: ' use' (ID: 1199)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.4031587541103363
    2. 'return' → logprob: -1.7781587839126587
    3. '           ' → logprob: -2.153158664703369
    4. ' for' → logprob: -4.653158664703369
    5. ' pass' → logprob: -4.778158664703369
    6. '#' → logprob: -5.403158664703369
    7. '       ' → logprob: -5.778158664703369
    8. 'threshold' → logprob: -5.778158664703369
    9. ' we' → logprob: -6.153158664703369
    10. 'import' → logprob: -6.403158664703369

Token 690: ' the' (ID: 290)
  Prédit: 'binary'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'binary' → logprob: -0.2796097695827484
    2. ' binary' → logprob: -1.7796097993850708
    3. 'left' → logprob: -3.5296096801757812
    4. 'a' → logprob: -4.404609680175781
    5. ' a' → logprob: -4.654609680175781
    6. 'total' → logprob: -5.279609680175781
    7. 'return' → logprob: -5.529609680175781
    8. 'the' → logprob: -5.904609680175781
    9. 'release' → logprob: -6.529609680175781
    10. ' total' → logprob: -6.654609680175781

Token 691: ' classical' (ID: 40663)
  Prédit: 'release'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'release' → logprob: -1.131838083267212
    2. 'binary' → logprob: -1.881838083267212
    3. 'sum' → logprob: -2.256838083267212
    4. 'capacity' → logprob: -2.631838083267212
    5. 're' → logprob: -3.506838083267212
    6. 'total' → logprob: -3.631838083267212
    7. ' release' → logprob: -3.631838083267212
    8. 'remaining' → logprob: -3.756838083267212
    9. 'threshold' → logprob: -4.131837844848633
    10. ' releases' → logprob: -4.131837844848633

Token 692: ' binary' (ID: 15600)
  Prédit: 'binary'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'binary' → logprob: -0.21216809749603271
    2. ' binary' → logprob: -2.3371682167053223
    3. '```' → logprob: -3.3371682167053223
    4. ' approach' → logprob: -4.212168216705322
    5. 'def' → logprob: -4.837168216705322
    6. 'k' → logprob: -5.087168216705322
    7. 'appro' → logprob: -5.462168216705322
    8. 'import' → logprob: -5.712168216705322
    9. 'capacity' → logprob: -5.837168216705322
    10. 'b' → logprob: -5.962168216705322

Token 693: ' search' (ID: 3684)
  Prédit: ' search'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' search' → logprob: -0.271718829870224
    2. 'search' → logprob: -2.021718740463257
    3. '_search' → logprob: -2.396718740463257
    4. '_' → logprob: -4.271718978881836
    5. ' _' → logprob: -8.021718978881836
    6. ')' → logprob: -9.771718978881836
    7. '
' → logprob: -10.021718978881836
    8. ' ' → logprob: -10.646718978881836
    9. '   ' → logprob: -10.771718978881836
    10. '```' → logprob: -11.021718978881836

Token 694: ' on' (ID: 402)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08063386380672455
    2. '       ' → logprob: -3.2056338787078857
    3. ',' → logprob: -4.455633640289307
    4. ' for' → logprob: -5.205633640289307
    5. '            
' → logprob: -5.705633640289307
    6. '               ' → logprob: -6.205633640289307
    7. '            ' → logprob: -6.205633640289307
    8. ' on' → logprob: -6.455633640289307
    9. ':' → logprob: -6.455633640289307
    10. '
' → logprob: -6.580633640289307

Token 695: ' k' (ID: 372)
  Prédit: ' total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' total' → logprob: -1.046625018119812
    2. 'total' → logprob: -1.671625018119812
    3. 'release' → logprob: -2.4216251373291016
    4. 'capacity' → logprob: -2.4216251373291016
    5. ' capacity' → logprob: -2.5466251373291016
    6. ' release' → logprob: -2.9216251373291016
    7. 'threshold' → logprob: -3.1716251373291016
    8. 'mid' → logprob: -3.9216251373291016
    9. 'sum' → logprob: -4.046625137329102
    10. ' sum' → logprob: -4.296625137329102

Token 696: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09154733270406723
    2. ':' → logprob: -2.9665472507476807
    3. ')' → logprob: -4.21654748916626
    4. '
' → logprob: -5.46654748916626
    5. '<|end|>' → logprob: -5.59154748916626
    6. '           ' → logprob: -5.71654748916626
    7. '   ' → logprob: -5.96654748916626
    8. '):' → logprob: -6.21654748916626
    9. ':
' → logprob: -6.96654748916626
    10. ',' → logprob: -7.21654748916626

Token 697: ' a' (ID: 261)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.36903896927833557
    2. 'release' → logprob: -2.9940390586853027
    3. 'heap' → logprob: -3.1190390586853027
    4. 'capacity' → logprob: -3.4940390586853027
    5. ' return' → logprob: -3.6190390586853027
    6. 'sum' → logprob: -3.7440390586853027
    7. 'min' → logprob: -3.9940390586853027
    8. 'the' → logprob: -4.619039058685303
    9. 'binary' → logprob: -4.619039058685303
    10. 'check' → logprob: -4.744039058685303

Token 698: ' priority' (ID: 17621)
  Prédit: 'pp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pp' → logprob: -0.4665406048297882
    2. 'gre' → logprob: -2.091540575027466
    3. 'heap' → logprob: -3.091540575027466
    4. 'priority' → logprob: -3.466540575027466
    5. 'p' → logprob: -3.716540575027466
    6. 'dp' → logprob: -3.841540575027466
    7. 'll' → logprob: -3.841540575027466
    8. 'pr' → logprob: -4.716540813446045
    9. 'ss' → logprob: -4.716540813446045
    10. 'threshold' → logprob: -4.841540813446045

Token 699: ' queue' (ID: 13661)
  Prédit: ' queue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' queue' → logprob: -0.018220528960227966
    2. '_queue' → logprob: -4.6432204246521
    3. 'queue' → logprob: -5.0182204246521
    4. ' heap' → logprob: -7.0182204246521
    5. '           ' → logprob: -8.143220901489258
    6. '       ' → logprob: -8.643220901489258
    7. 'heap' → logprob: -9.393220901489258
    8. '   ' → logprob: -9.518220901489258
    9. ' import' → logprob: -9.643220901489258
    10. ' ' → logprob: -10.268220901489258

Token 700: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5760880708694458
    2. ':' → logprob: -0.9510880708694458
    3. '):' → logprob: -4.201087951660156
    4. '           ' → logprob: -4.576087951660156
    5. '
' → logprob: -4.951087951660156
    6. ':
' → logprob: -5.451087951660156
    7. ')' → logprob: -5.701087951660156
    8. '        
' → logprob: -5.951087951660156
    9. '<|end|>' → logprob: -5.951087951660156
    10. ',' → logprob: -6.451087951660156

Token 701: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9691729545593262
    2. '       ' → logprob: -1.0941729545593262
    3. '           ' → logprob: -1.3441729545593262
    4. '):' → logprob: -5.094172954559326
    5. ')' → logprob: -5.594172954559326
    6. ':
' → logprob: -5.719172954559326
    7. '
' → logprob: -5.844172954559326
    8. ',' → logprob: -6.094172954559326
    9. '   ' → logprob: -6.469172954559326
    10. '        
' → logprob: -6.969172954559326

Token 702: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05547543987631798
    2. '           ' → logprob: -3.0554754734039307
    3. '
' → logprob: -6.055475234985352
    4. '        
' → logprob: -6.805475234985352
    5. '   ' → logprob: -7.055475234985352
    6. ':' → logprob: -7.805475234985352
    7. 'import' → logprob: -7.805475234985352
    8. ')' → logprob: -7.930475234985352
    9. ',' → logprob: -8.305475234985352
    10. '            
' → logprob: -8.805475234985352

Token 703: ' The' (ID: 623)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2840942144393921
    2. '           ' → logprob: -1.909094214439392
    3. ':' → logprob: -2.6590943336486816
    4. '   ' → logprob: -4.784094333648682
    5. '        
' → logprob: -5.909094333648682
    6. ':
' → logprob: -6.159094333648682
    7. ')' → logprob: -6.284094333648682
    8. 'def' → logprob: -6.534094333648682
    9. '            
' → logprob: -6.659094333648682
    10. '
' → logprob: -6.659094333648682

Token 704: ' approach' (ID: 7139)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.04434335231781
    2. 'capacity' → logprob: -1.54434335231781
    3. 'left' → logprob: -2.2943434715270996
    4. 'def' → logprob: -3.4193434715270996
    5. '   ' → logprob: -3.4193434715270996
    6. 'heap' → logprob: -3.5443434715270996
    7. 'low' → logprob: -3.5443434715270996
    8. '           ' → logprob: -3.9193434715270996
    9. 'threshold' → logprob: -4.0443434715271
    10. '       ' → logprob: -4.0443434715271

Token 705: ' from' (ID: 591)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3337015211582184
    2. ':' → logprob: -1.833701491355896
    3. ' is' → logprob: -2.4587016105651855
    4. '       ' → logprob: -3.7087016105651855
    5. ':
' → logprob: -5.5837016105651855
    6. '   ' → logprob: -6.2087016105651855
    7. ' continues' → logprob: -6.2087016105651855
    8. '               ' → logprob: -7.0837016105651855
    9. '=' → logprob: -7.4587016105651855
    10. 'is' → logprob: -7.5837016105651855

Token 706: ' editor' (ID: 9836)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.486399382352829
    2. 'here' → logprob: -2.4863994121551514
    3. 'Le' → logprob: -2.8613994121551514
    4. 'heap' → logprob: -2.9863994121551514
    5. 'previous' → logprob: -2.9863994121551514
    6. 'At' → logprob: -3.3613994121551514
    7. 'user' → logprob: -4.486399173736572
    8. 'this' → logprob: -4.611399173736572
    9. 'leetcode' → logprob: -4.736399173736572
    10. 'competitive' → logprob: -5.611399173736572

Token 707: 'ials' (ID: 16596)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.03870689868927
    2. ':' → logprob: -1.66370689868927
    3. '           ' → logprob: -2.0387067794799805
    4. '
' → logprob: -2.5387067794799805
    5. '       ' → logprob: -3.2887067794799805
    6. '#' → logprob: -3.9137067794799805
    7. ' ' → logprob: -4.1637067794799805
    8. ']' → logprob: -4.2887067794799805
    9. '_' → logprob: -4.4137067794799805
    10. 'def' → logprob: -4.4137067794799805

Token 708: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5791221857070923
    2. ':' → logprob: -0.9541221857070923
    3. '           ' → logprob: -4.204122066497803
    4. '):' → logprob: -4.454122066497803
    5. ':
' → logprob: -4.829122066497803
    6. ')' → logprob: -4.954122066497803
    7. '
' → logprob: -5.454122066497803
    8. '   ' → logprob: -6.079122066497803
    9. ',' → logprob: -6.704122066497803
    10. '):
' → logprob: -7.329122066497803

Token 709: ' 
' (ID: 793)
  Prédit: ' import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' import' → logprob: -1.7871787548065186
    2. 'import' → logprob: -1.9121787548065186
    3. '       ' → logprob: -2.4121787548065186
    4. ' releases' → logprob: -2.5371787548065186
    5. ' left' → logprob: -2.7871787548065186
    6. ' low' → logprob: -3.0371787548065186
    7. '           ' → logprob: -3.0371787548065186
    8. 'low' → logprob: -3.1621787548065186
    9. 'heap' → logprob: -3.6621787548065186
    10. ' selected' → logprob: -3.7871787548065186

Token 710: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.015659024938941002
    2. '       ' → logprob: -4.640658855438232
    3. 'import' → logprob: -6.015658855438232
    4. '
' → logprob: -6.765658855438232
    5. ' import' → logprob: -7.515658855438232
    6. ' from' → logprob: -8.14065933227539
    7. '```' → logprob: -8.39065933227539
    8. '            
' → logprob: -8.51565933227539
    9. '   ' → logprob: -8.64065933227539
    10. ' for' → logprob: -9.01565933227539

Token 711: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9354845285415649
    2. 'import' → logprob: -1.935484528541565
    3. '       ' → logprob: -2.4354844093322754
    4. 'selected' → logprob: -2.6854844093322754
    5. ' import' → logprob: -3.3104844093322754
    6. 'heap' → logprob: -3.4354844093322754
    7. 'left' → logprob: -3.5604844093322754
    8. ' selected' → logprob: -3.5604844093322754
    9. 'low' → logprob: -3.9354844093322754
    10. ' left' → logprob: -4.060484409332275

Token 712: ' For' (ID: 2214)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7176600098609924
    2. '           ' → logprob: -2.4676599502563477
    3. 'import' → logprob: -2.5926599502563477
    4. 'selected' → logprob: -3.2176599502563477
    5. 'low' → logprob: -3.3426599502563477
    6. 'left' → logprob: -3.5926599502563477
    7. 'mid' → logprob: -3.9676599502563477
    8. ' import' → logprob: -4.092659950256348
    9. 'lo' → logprob: -4.217659950256348
    10. '#' → logprob: -4.217659950256348

Token 713: ' fixed' (ID: 13213)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.8509200811386108
    2. ' k' → logprob: -1.3509200811386108
    3. ' capacity' → logprob: -2.2259202003479004
    4. 'capacity' → logprob: -2.3509202003479004
    5. 'cap' → logprob: -3.8509202003479004
    6. 'mid' → logprob: -3.9759202003479004
    7. 'i' → logprob: -4.8509202003479
    8. ' cap' → logprob: -4.9759202003479
    9. ' mid' → logprob: -5.1009202003479
    10. ' i' → logprob: -5.3509202003479

Token 714: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.4742380380630493
    2. 'k' → logprob: -0.9742380380630493
    3. '```' → logprob: -10.349238395690918
    4. 'def' → logprob: -10.474238395690918
    5. 'mid' → logprob: -11.099238395690918
    6. '   ' → logprob: -11.099238395690918
    7. ')' → logprob: -11.599238395690918
    8. '`' → logprob: -11.974238395690918
    9. ' ' → logprob: -11.974238395690918
    10. 'size' → logprob: -12.099238395690918

Token 715: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.27889350056648254
    2. ':' → logprob: -1.6538934707641602
    3. ':
' → logprob: -3.40389347076416
    4. '           ' → logprob: -4.52889347076416
    5. ',
' → logprob: -6.02889347076416
    6. '       ' → logprob: -6.27889347076416
    7. '):
' → logprob: -7.27889347076416
    8. '   ' → logprob: -7.40389347076416
    9. '=' → logprob: -7.90389347076416
    10. '):' → logprob: -8.15389347076416

Token 716: ' select' (ID: 4736)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.8399434089660645
    2. 'selected' → logprob: -1.3399434089660645
    3. 'heap' → logprob: -2.3399434089660645
    4. ' selected' → logprob: -3.7149434089660645
    5. 'capacity' → logprob: -3.8399434089660645
    6. 'cap' → logprob: -4.0899434089660645
    7. 'left' → logprob: -4.0899434089660645
    8. 'low' → logprob: -4.2149434089660645
    9. 'min' → logprob: -4.4649434089660645
    10. '   ' → logprob: -4.7149434089660645

Token 717: ' microbes' (ID: 156044)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.9936572313308716
    2. 'the' → logprob: -1.3686572313308716
    3. '[]' → logprob: -2.368657112121582
    4. 'micro' → logprob: -2.618657112121582
    5. 'all' → logprob: -3.243657112121582
    6. '[k' → logprob: -3.743657112121582
    7. ' the' → logprob: -3.743657112121582
    8. '[' → logprob: -3.993657112121582
    9. 'those' → logprob: -4.243657112121582
    10. 'capacity' → logprob: -4.743657112121582

Token 718: ' with' (ID: 483)
  Prédit: ' with'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' with' → logprob: -0.7407524585723877
    2. 'with' → logprob: -0.7407524585723877
    3. '_sorted' → logprob: -4.240752220153809
    4. '           ' → logprob: -4.615752220153809
    5. ' that' → logprob: -5.615752220153809
    6. 'that' → logprob: -5.865752220153809
    7. ',' → logprob: -6.365752220153809
    8. '[' → logprob: -6.615752220153809
    9. 'sorted' → logprob: -6.740752220153809
    10. ' whose' → logprob: -6.740752220153809

Token 719: ' minimal' (ID: 19957)
  Prédit: 'capacity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'capacity' → logprob: -0.1458679437637329
    2. ' capacity' → logprob: -2.0208678245544434
    3. 'b' → logprob: -6.520867824554443
    4. 'micro' → logprob: -7.270867824554443
    5. 'highest' → logprob: -8.020868301391602
    6. ' b' → logprob: -9.020868301391602
    7. ' capacities' → logprob: -9.145868301391602
    8. 'm' → logprob: -9.270868301391602
    9. '   ' → logprob: -9.895868301391602
    10. 'release' → logprob: -10.020868301391602

Token 720: ' release' (ID: 8232)
  Prédit: ' release'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' release' → logprob: -0.4886588752269745
    2. 'release' → logprob: -0.9886589050292969
    3. ' releases' → logprob: -4.363658905029297
    4. '_release' → logprob: -6.488658905029297
    5. '.release' → logprob: -9.613658905029297
    6. 'import' → logprob: -9.988658905029297
    7. 're' → logprob: -11.113658905029297
    8. '   ' → logprob: -11.238658905029297
    9. ' import' → logprob: -11.363658905029297
    10. '```' → logprob: -11.613658905029297

Token 721: ' whose' (ID: 12119)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09178900718688965
    2. '       ' → logprob: -2.9667890071868896
    3. ':' → logprob: -4.841789245605469
    4. ' =' → logprob: -5.091789245605469
    5. ')' → logprob: -5.466789245605469
    6. '   ' → logprob: -5.716789245605469
    7. '[' → logprob: -6.341789245605469
    8. ' if' → logprob: -6.591789245605469
    9. '
' → logprob: -6.966789245605469
    10. '.' → logprob: -6.966789245605469

Token 722: ' capacity' (ID: 12241)
  Prédit: 'capacity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'capacity' → logprob: -0.04301128908991814
    2. ' capacity' → logprob: -3.16801118850708
    3. '.capacity' → logprob: -12.668011665344238
    4. 'b' → logprob: -13.043011665344238
    5. ' capacities' → logprob: -13.543011665344238
    6. 'capac' → logprob: -13.918011665344238
    7. '
' → logprob: -14.043011665344238
    8. '```' → logprob: -14.168011665344238
    9. 'index' → logprob: -14.293011665344238
    10. 'cap' → logprob: -14.793011665344238

Token 723: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.3478003144264221
    2. ' *' → logprob: -1.7228002548217773
    3. '>=' → logprob: -2.2228002548217773
    4. '*' → logprob: -5.597800254821777
    5. '   ' → logprob: -6.972800254821777
    6. ' is' → logprob: -7.472800254821777
    7. ']>=' → logprob: -7.472800254821777
    8. ')>=' → logprob: -8.097800254821777
    9. ' ' → logprob: -8.847800254821777
    10. '```' → logprob: -9.097800254821777

Token 724: ' S' (ID: 336)
  Prédit: 'micro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'micro' → logprob: -0.50157231092453
    2. '0' → logprob: -2.126572370529175
    3. ' microbes' → logprob: -2.126572370529175
    4. 'min' → logprob: -2.626572370529175
    5. 'k' → logprob: -3.501572370529175
    6. 'threshold' → logprob: -4.626572132110596
    7. '1' → logprob: -5.001572132110596
    8. 'right' → logprob: -5.251572132110596
    9. ' micro' → logprob: -5.376572132110596
    10. '(min' → logprob: -5.626572132110596

Token 725: '/k' (ID: 28096)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8356238007545471
    2. ')' → logprob: -1.3356237411499023
    3. '       ' → logprob: -2.5856237411499023
    4. '_' → logprob: -2.9606237411499023
    5. '           ' → logprob: -3.0856237411499023
    6. '   ' → logprob: -4.085623741149902
    7. '):' → logprob: -4.085623741149902
    8. '=' → logprob: -4.460623741149902
    9. ' =' → logprob: -4.460623741149902
    10. '.' → logprob: -4.460623741149902

Token 726: ' where' (ID: 1919)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8751779198646545
    2. ':' → logprob: -1.0001778602600098
    3. '           ' → logprob: -1.8751778602600098
    4. '
' → logprob: -4.25017786026001
    5. ')' → logprob: -4.62517786026001
    6. '):' → logprob: -4.62517786026001
    7. ':
' → logprob: -4.75017786026001
    8. '   ' → logprob: -5.62517786026001
    9. ':return' → logprob: -5.75017786026001
    10. ',' → logprob: -6.25017786026001

Token 727: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.03903608024120331
    2. 'k' → logprob: -4.289036273956299
    3. ' S' → logprob: -4.664036273956299
    4. 'release' → logprob: -4.789036273956299
    5. 'capacity' → logprob: -6.789036273956299
    6. 'total' → logprob: -7.039036273956299
    7. 'self' → logprob: -7.039036273956299
    8. '0' → logprob: -7.664036273956299
    9. ' k' → logprob: -8.03903579711914
    10. 'micro' → logprob: -8.03903579711914

Token 728: ' is' (ID: 382)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.0824174880981445
    2. ' <=' → logprob: -1.5824174880981445
    3. ' is' → logprob: -2.2074174880981445
    4. ')' → logprob: -2.4574174880981445
    5. ' >=' → logprob: -2.4574174880981445
    6. '<=' → logprob: -2.8324174880981445
    7. ' =' → logprob: -2.9574174880981445
    8. '>=' → logprob: -3.4574174880981445
    9. '>' → logprob: -4.9574174880981445
    10. ':' → logprob: -5.3324174880981445

Token 729: ' sum' (ID: 4215)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.9947910308837891
    2. 'sum' → logprob: -1.494791030883789
    3. 'k' → logprob: -2.244791030883789
    4. 'the' → logprob: -2.744791030883789
    5. ' sum' → logprob: -2.744791030883789
    6. ' the' → logprob: -3.119791030883789
    7. ' k' → logprob: -3.244791030883789
    8. 'total' → logprob: -4.119791030883789
    9. 'unknown' → logprob: -4.494791030883789
    10. ' total' → logprob: -4.619791030883789

Token 730: ' release' (ID: 8232)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.23197972774505615
    2. ')' → logprob: -2.7319798469543457
    3. ' _' → logprob: -3.1069798469543457
    4. '_release' → logprob: -3.1069798469543457
    5. '       ' → logprob: -4.106979846954346
    6. '           ' → logprob: -4.356979846954346
    7. '   ' → logprob: -4.981979846954346
    8. 'release' → logprob: -6.106979846954346
    9. 'of' → logprob: -7.106979846954346
    10. '     ' → logprob: -7.231979846954346

Token 731: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7032320499420166
    2. '       ' → logprob: -1.2032320499420166
    3. '           ' → logprob: -1.9532320499420166
    4. '):' → logprob: -3.8282320499420166
    5. ')' → logprob: -4.4532318115234375
    6. '
' → logprob: -5.2032318115234375
    7. '   ' → logprob: -5.3282318115234375
    8. ':
' → logprob: -5.5782318115234375
    9. ',' → logprob: -5.7032318115234375
    10. '        
' → logprob: -6.0782318115234375

Token 732: ' S' (ID: 336)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.5644213557243347
    2. ' k' → logprob: -1.1894214153289795
    3. 'capacity' → logprob: -3.4394214153289795
    4. ' capacity' → logprob: -4.5644211769104
    5. 'S' → logprob: -4.6894211769104
    6. 'we' → logprob: -4.8144211769104
    7. ' S' → logprob: -4.8144211769104
    8. 'the' → logprob: -4.9394211769104
    9. ' we' → logprob: -5.0644211769104
    10. '#' → logprob: -5.1894211769104

Token 733: ' depends' (ID: 20102)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <=' → logprob: -1.4877910614013672
    2. ')' → logprob: -1.6127910614013672
    3. ' is' → logprob: -1.9877910614013672
    4. '=' → logprob: -2.112791061401367
    5. ' =' → logprob: -2.362791061401367
    6. '<=' → logprob: -2.737791061401367
    7. '<|end|>' → logprob: -2.737791061401367
    8. '<|end|>' → logprob: -3.612791061401367
    9. ' >=' → logprob: -5.487791061401367
    10. '.' → logprob: -5.737791061401367

Token 734: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.3155530095100403
    2. 'on' → logprob: -1.4405529499053955
    3. ' not' → logprob: -4.565553188323975
    4. 'not' → logprob: -4.815553188323975
    5. '           ' → logprob: -5.315553188323975
    6. ' only' → logprob: -5.440553188323975
    7. 'only' → logprob: -6.565553188323975
    8. ')' → logprob: -7.190553188323975
    9. 'import' → logprob: -7.315553188323975
    10. '=' → logprob: -7.565553188323975

Token 735: ' selection' (ID: 8441)
  Prédit: 'selected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'selected' → logprob: -0.3862493932247162
    2. 'the' → logprob: -1.6362494230270386
    3. 'selection' → logprob: -3.011249303817749
    4. 'k' → logprob: -3.386249303817749
    5. ' selected' → logprob: -4.636249542236328
    6. ' the' → logprob: -4.886249542236328
    7. 'chosen' → logprob: -4.886249542236328
    8. ' selection' → logprob: -5.386249542236328
    9. 'micro' → logprob: -5.636249542236328
    10. ' k' → logprob: -5.636249542236328

Token 736: '
            
' (ID: 45334)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8696134090423584
    2. '           ' → logprob: -0.9946134090423584
    3. '       ' → logprob: -1.8696134090423584
    4. ')' → logprob: -3.9946134090423584
    5. '):' → logprob: -4.7446136474609375
    6. ':
' → logprob: -4.7446136474609375
    7. '.' → logprob: -4.8696136474609375
    8. ',' → logprob: -5.7446136474609375
    9. '   ' → logprob: -5.9946136474609375
    10. '
' → logprob: -6.8696136474609375

Token 737: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.17405667901039124
    2. '       ' → logprob: -2.2990567684173584
    3. ':' → logprob: -3.2990567684173584
    4. ')' → logprob: -4.674056529998779
    5. '   ' → logprob: -5.674056529998779
    6. '            
' → logprob: -6.549056529998779
    7. '.' → logprob: -6.674056529998779
    8. '    ' → logprob: -7.299056529998779
    9. '):' → logprob: -7.299056529998779
    10. ',' → logprob: -7.299056529998779

Token 738: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5497804284095764
    2. '       ' → logprob: -0.9247804284095764
    3. 'return' → logprob: -4.674780368804932
    4. '   ' → logprob: -5.299780368804932
    5. 'import' → logprob: -6.299780368804932
    6. '            
' → logprob: -6.674780368804932
    7. 'threshold' → logprob: -6.799780368804932
    8. ' return' → logprob: -6.924780368804932
    9. '        
' → logprob: -7.049780368804932
    10. 'k' → logprob: -7.174780368804932

Token 739: ' We' (ID: 1416)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.2976843118667603
    2. '           ' → logprob: -1.7976843118667603
    3. 'left' → logprob: -2.4226841926574707
    4. 'import' → logprob: -2.6726841926574707
    5. 'low' → logprob: -2.9226841926574707
    6. '#' → logprob: -3.1726841926574707
    7. 'lo' → logprob: -3.2976841926574707
    8. 'k' → logprob: -3.2976841926574707
    9. 'if' → logprob: -3.4226841926574707
    10. 'threshold' → logprob: -3.5476841926574707

Token 740: ' try' (ID: 2075)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.8811804056167603
    2. '       ' → logprob: -1.2561804056167603
    3. ' can' → logprob: -2.7561802864074707
    4. 'return' → logprob: -2.8811802864074707
    5. ''ll' → logprob: -3.5061802864074707
    6. '   ' → logprob: -3.7561802864074707
    7. 'import' → logprob: -4.131180286407471
    8. '           ' → logprob: -4.131180286407471
    9. ' continue' → logprob: -4.256180286407471
    10. ' ' → logprob: -4.506180286407471

Token 741: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0178779363632202
    2. 'k' → logprob: -2.0178780555725098
    3. 'to' → logprob: -2.2678780555725098
    4. ':' → logprob: -2.3928780555725098
    5. ':
' → logprob: -2.8928780555725098
    6. '           ' → logprob: -3.0178780555725098
    7. ' to' → logprob: -3.0178780555725098
    8. '       ' → logprob: -3.7678780555725098
    9. ' k' → logprob: -4.26787805557251
    10. 'selected' → logprob: -4.39287805557251

Token 742: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01947295106947422
    2. '       ' → logprob: -4.019473075866699
    3. '   ' → logprob: -7.519473075866699
    4. 'import' → logprob: -7.894473075866699
    5. ' for' → logprob: -9.8944730758667
    6. '```' → logprob: -10.0194730758667
    7. 'for' → logprob: -10.3944730758667
    8. '            
' → logprob: -10.5194730758667
    9. '
' → logprob: -10.6444730758667
    10. 'k' → logprob: -10.8944730758667

Token 743: ' #' (ID: 1069)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.0814874172210693
    2. 'selected' → logprob: -1.7064874172210693
    3. 'left' → logprob: -2.0814874172210693
    4. 'low' → logprob: -2.7064874172210693
    5. '       ' → logprob: -3.0814874172210693
    6. ' selected' → logprob: -3.4564874172210693
    7. ' left' → logprob: -3.5814874172210693
    8. '   ' → logprob: -4.206487655639648
    9. 'possible' → logprob: -4.206487655639648
    10. 'import' → logprob: -4.456487655639648

Token 744: ' Sort' (ID: 25945)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -1.7361184358596802
    2. 'low' → logprob: -1.7361184358596802
    3. '       ' → logprob: -2.1111183166503906
    4. ' left' → logprob: -2.6111183166503906
    5. 'selected' → logprob: -2.6111183166503906
    6. '           ' → logprob: -2.9861183166503906
    7. ' low' → logprob: -3.1111183166503906
    8. ' lo' → logprob: -3.6111183166503906
    9. ' selected' → logprob: -3.6111183166503906
    10. '   ' → logprob: -3.8611183166503906

Token 745: ' microbes' (ID: 156044)
  Prédit: 'micro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'micro' → logprob: -0.3605257272720337
    2. '           ' → logprob: -2.735525608062744
    3. ' microbes' → logprob: -3.110525608062744
    4. 'by' → logprob: -3.610525608062744
    5. '(m' → logprob: -3.610525608062744
    6. '_micro' → logprob: -4.110525608062744
    7. '       ' → logprob: -4.360525608062744
    8. ')' → logprob: -4.360525608062744
    9. '=' → logprob: -4.735525608062744
    10. 'mic' → logprob: -4.735525608062744

Token 746: ' by' (ID: 656)
  Prédit: 'by'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'by' → logprob: -1.017529010772705
    2. '_sorted' → logprob: -1.267529010772705
    3. ',' → logprob: -1.892529010772705
    4. ' by' → logprob: -2.392529010772705
    5. '=' → logprob: -3.767529010772705
    6. '_by' → logprob: -4.267529010772705
    7. ' =' → logprob: -4.767529010772705
    8. '           ' → logprob: -4.767529010772705
    9. '<|end|>' → logprob: -4.892529010772705
    10. '       ' → logprob: -4.892529010772705

Token 747: ' capacity' (ID: 12241)
  Prédit: 'capacity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'capacity' → logprob: -0.5117677450180054
    2. 'release' → logprob: -1.1367677450180054
    3. ' capacity' → logprob: -2.761767864227295
    4. ' release' → logprob: -4.136767864227295
    5. '   ' → logprob: -9.386767387390137
    6. 'micro' → logprob: -9.636767387390137
    7. 'cap' → logprob: -9.761767387390137
    8. 'capac' → logprob: -10.324267387390137
    9. 'lambda' → logprob: -10.386767387390137
    10. ' ' → logprob: -11.074267387390137

Token 748: ' ascending' (ID: 75564)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8055449724197388
    2. '_sorted' → logprob: -1.3055449724197388
    3. '       ' → logprob: -2.805544853210449
    4. ':
' → logprob: -2.930544853210449
    5. ':' → logprob: -3.805544853210449
    6. ',' → logprob: -3.930544853210449
    7. ')' → logprob: -3.930544853210449
    8. '
' → logprob: -4.055544853210449
    9. '[' → logprob: -4.680544853210449
    10. 'ascending' → logprob: -5.055544853210449

Token 749: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2075517177581787
    2. '       ' → logprob: -2.7075517177581787
    3. '
' → logprob: -3.4575517177581787
    4. ',' → logprob: -3.4575517177581787
    5. ':' → logprob: -4.707551956176758
    6. ' and' → logprob: -4.832551956176758
    7. ')' → logprob: -4.957551956176758
    8. ':
' → logprob: -5.457551956176758
    9. '<|end|>' → logprob: -5.832551956176758
    10. '   ' → logprob: -5.957551956176758

Token 750: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02946765348315239
    2. '       ' → logprob: -3.9044675827026367
    3. ',' → logprob: -5.529467582702637
    4. ' and' → logprob: -6.779467582702637
    5. '
' → logprob: -7.404467582702637
    6. ' for' → logprob: -7.404467582702637
    7. '            
' → logprob: -7.654467582702637
    8. ')' → logprob: -8.029467582702637
    9. '   ' → logprob: -8.029467582702637
    10. '        
' → logprob: -8.404467582702637

Token 751: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4337683618068695
    2. '       ' → logprob: -1.433768391609192
    3. '   ' → logprob: -3.1837682723999023
    4. ' for' → logprob: -4.683768272399902
    5. ')' → logprob: -4.808768272399902
    6. ',' → logprob: -5.433768272399902
    7. '    
' → logprob: -5.558768272399902
    8. '            
' → logprob: -5.558768272399902
    9. 'def' → logprob: -5.808768272399902
    10. 'for' → logprob: -5.808768272399902

Token 752: ' Maintain' (ID: 103908)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7240041494369507
    2. '       ' → logprob: -2.2240042686462402
    3. ' left' → logprob: -2.3490042686462402
    4. 'left' → logprob: -2.4740042686462402
    5. 'low' → logprob: -2.9740042686462402
    6. ' low' → logprob: -3.2240042686462402
    7. ' lo' → logprob: -4.09900426864624
    8. '   ' → logprob: -4.22400426864624
    9. ' capacity' → logprob: -4.47400426864624
    10. '
' → logprob: -4.84900426864624

Token 753: ' a' (ID: 261)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.8371732831001282
    2. 'a' → logprob: -1.2121732234954834
    3. ' a' → logprob: -1.4621732234954834
    4. ' import' → logprob: -4.3371734619140625
    5. 'heap' → logprob: -4.5871734619140625
    6. 'release' → logprob: -4.7121734619140625
    7. '   ' → logprob: -6.8371734619140625
    8. ' release' → logprob: -6.9621734619140625
    9. 'min' → logprob: -7.2121734619140625
    10. ' heap' → logprob: -7.7121734619140625

Token 754: ' heap' (ID: 37237)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.7314392328262329
    2. 'heap' → logprob: -1.731439232826233
    3. 'import' → logprob: -1.856439232826233
    4. ' min' → logprob: -1.981439232826233
    5. '[]' → logprob: -3.3564391136169434
    6. ' heap' → logprob: -4.981439113616943
    7. ' import' → logprob: -5.731439113616943
    8. ' []' → logprob: -6.981439113616943
    9. 'max' → logprob: -7.231439113616943
    10. '[]
' → logprob: -7.856439113616943

Token 755: ' of' (ID: 328)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9871987700462341
    2. '           ' → logprob: -2.112198829650879
    3. 'import' → logprob: -2.112198829650879
    4. ' of' → logprob: -2.237198829650879
    5. '       ' → logprob: -2.862198829650879
    6. ',' → logprob: -2.987198829650879
    7. ' for' → logprob: -3.737198829650879
    8. '=' → logprob: -3.987198829650879
    9. ' ' → logprob: -4.112198829650879
    10. '[' → logprob: -4.237198829650879

Token 756: ' releases' (ID: 30979)
  Prédit: 'release'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'release' → logprob: -0.7028703093528748
    2. 're' → logprob: -1.9528703689575195
    3. ' releases' → logprob: -1.9528703689575195
    4. '(re' → logprob: -2.2028703689575195
    5. ' release' → logprob: -2.4528703689575195
    6. ' (' → logprob: -4.7028703689575195
    7. 'the' → logprob: -6.0778703689575195
    8. '(' → logprob: -6.0778703689575195
    9. '(-' → logprob: -6.2028703689575195
    10. ' the' → logprob: -6.2028703689575195

Token 757: ' to' (ID: 316)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.36315086483955383
    2. '       ' → logprob: -2.1131508350372314
    3. '
' → logprob: -3.4881508350372314
    4. ',' → logprob: -3.8631508350372314
    5. ':' → logprob: -3.8631508350372314
    6. ' =' → logprob: -3.8631508350372314
    7. '.' → logprob: -3.9881508350372314
    8. ':
' → logprob: -4.4881510734558105
    9. ')' → logprob: -4.6131510734558105
    10. ' for' → logprob: -4.7381510734558105

Token 758: ' select' (ID: 4736)
  Prédit: 'keep'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'keep' → logprob: -0.37692496180534363
    2. ' keep' → logprob: -1.751924991607666
    3. 'select' → logprob: -3.251924991607666
    4. 'push' → logprob: -3.626924991607666
    5. 'maint' → logprob: -4.001924991607666
    6. ' select' → logprob: -4.626924991607666
    7. 'consider' → logprob: -5.376924991607666
    8. 'include' → logprob: -5.501924991607666
    9. 'add' → logprob: -5.626924991607666
    10. ' maintain' → logprob: -5.626924991607666

Token 759: ' k' (ID: 372)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12193236500024796
    2. '       ' → logprob: -2.6219322681427
    3. ' =' → logprob: -4.621932506561279
    4. ')' → logprob: -5.121932506561279
    5. ' for' → logprob: -5.621932506561279
    6. ':' → logprob: -5.621932506561279
    7. ',' → logprob: -5.746932506561279
    8. '   ' → logprob: -5.871932506561279
    9. '[' → logprob: -5.996932506561279
    10. '.' → logprob: -6.496932506561279

Token 760: ' minimal' (ID: 19957)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2250378429889679
    2. '       ' → logprob: -2.4750378131866455
    3. ' =' → logprob: -3.2250378131866455
    4. ')' → logprob: -3.6000378131866455
    5. '   ' → logprob: -3.9750378131866455
    6. ',' → logprob: -5.600038051605225
    7. ':' → logprob: -5.600038051605225
    8. '=' → logprob: -6.225038051605225
    9. '[' → logprob: -6.350038051605225
    10. ' for' → logprob: -6.600038051605225

Token 761: ' releases' (ID: 30979)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2011699378490448
    2. '       ' → logprob: -2.701169967651367
    3. ' =' → logprob: -3.576169967651367
    4. ':' → logprob: -4.076169967651367
    5. ' releases' → logprob: -4.076169967651367
    6. ')' → logprob: -5.201169967651367
    7. '_release' → logprob: -5.326169967651367
    8. '   ' → logprob: -5.326169967651367
    9. '               ' → logprob: -5.576169967651367
    10. 'import' → logprob: -5.951169967651367

Token 762: ' from' (ID: 591)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6879652142524719
    2. '           ' → logprob: -0.9379652142524719
    3. ':' → logprob: -2.562965154647827
    4. '
' → logprob: -5.062965393066406
    5. '   ' → logprob: -5.562965393066406
    6. ' =' → logprob: -5.687965393066406
    7. ':
' → logprob: -5.812965393066406
    8. ',' → logprob: -6.312965393066406
    9. ')' → logprob: -6.312965393066406
    10. 'import' → logprob: -6.687965393066406

Token 763: ' those' (ID: 2617)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7256337404251099
    2. '           ' → logprob: -0.7256337404251099
    3. '   ' → logprob: -4.35063362121582
    4. ' =' → logprob: -5.60063362121582
    5. '            
' → logprob: -6.35063362121582
    6. 'import' → logprob: -6.35063362121582
    7. '
' → logprob: -6.35063362121582
    8. '        
' → logprob: -6.47563362121582
    9. ' for' → logprob: -6.85063362121582
    10. '```' → logprob: -7.10063362121582

Token 764: ' that' (ID: 484)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3819965720176697
    2. '       ' → logprob: -1.2569966316223145
    3. ':' → logprob: -3.7569966316223145
    4. '   ' → logprob: -5.6319966316223145
    5. ' =' → logprob: -6.8819966316223145
    6. '
' → logprob: -7.3819966316223145
    7. '.' → logprob: -7.5069966316223145
    8. '        
' → logprob: -7.7569966316223145
    9. ':
' → logprob: -7.8819966316223145
    10. ')' → logprob: -7.8819966316223145

Token 765: ' satisfy' (ID: 35441)
  Prédit: 'have'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'have' → logprob: -0.11110161244869232
    2. ' have' → logprob: -2.6111016273498535
    3. 'capacity' → logprob: -3.6111016273498535
    4. ' capacity' → logprob: -6.6111016273498535
    5. 'can' → logprob: -6.9861016273498535
    6. 'meet' → logprob: -7.4861016273498535
    7. '   ' → logprob: -7.4861016273498535
    8. 'has' → logprob: -8.736101150512695
    9. 'are' → logprob: -9.111101150512695
    10. ' has' → logprob: -9.611101150512695

Token 766: ' b' (ID: 287)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5822408199310303
    2. ':' → logprob: -1.7072408199310303
    3. '       ' → logprob: -1.9572408199310303
    4. '):' → logprob: -2.9572408199310303
    5. ')' → logprob: -3.9572408199310303
    6. '):
' → logprob: -4.457241058349609
    7. ':
' → logprob: -4.707241058349609
    8. '   ' → logprob: -4.832241058349609
    9. '               ' → logprob: -5.582241058349609
    10. ',' → logprob: -6.457241058349609

Token 767: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.00020568605395965278
    2. '>=' → logprob: -9.750205993652344
    3. '_' → logprob: -10.250205993652344
    4. '>' → logprob: -11.000205993652344
    5. 'i' → logprob: -11.250205993652344
    6. 'y' → logprob: -11.250205993652344
    7. '```' → logprob: -11.500205993652344
    8. '_capacity' → logprob: -11.625205993652344
    9. '[i' → logprob: -11.875205993652344
    10. 'capacity' → logprob: -11.875205993652344

Token 768: '*k' (ID: 81061)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.06926793605089188
    2. '>=' → logprob: -2.819267988204956
    3. '           ' → logprob: -6.319267749786377
    4. '   ' → logprob: -6.319267749786377
    5. ' *' → logprob: -7.319267749786377
    6. '       ' → logprob: -7.569267749786377
    7. ')' → logprob: -7.819267749786377
    8. ' ' → logprob: -8.194268226623535
    9. '_i' → logprob: -8.444268226623535
    10. '[i' → logprob: -8.694268226623535

Token 769: ' >=' (ID: 5064)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5041936039924622
    2. '       ' → logprob: -1.5041935443878174
    3. '           ' → logprob: -2.3791935443878174
    4. '):' → logprob: -3.3791935443878174
    5. ':
' → logprob: -4.0041937828063965
    6. '   ' → logprob: -5.0041937828063965
    7. '):
' → logprob: -5.2541937828063965
    8. ')' → logprob: -5.3791937828063965
    9. '
' → logprob: -5.6291937828063965
    10. ',' → logprob: -6.5041937828063965

Token 770: ' total' (ID: 3609)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1783939599990845
    2. 'sum' → logprob: -1.3033939599990845
    3. ' sum' → logprob: -1.9283939599990845
    4. 'total' → logprob: -2.303393840789795
    5. ' total' → logprob: -2.803393840789795
    6. ' ' → logprob: -4.053393840789795
    7. 'min' → logprob: -4.178393840789795
    8. 's' → logprob: -4.428393840789795
    9. 'S' → logprob: -4.553393840789795
    10. ' min' → logprob: -4.803393840789795

Token 771: '_release' (ID: 59589)
  Prédit: '_release'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_release' → logprob: -0.001579374773427844
    2. 'release' → logprob: -6.876579284667969
    3. '_' → logprob: -7.876579284667969
    4. '_re' → logprob: -10.001579284667969
    5. ' _' → logprob: -10.251579284667969
    6. '_return' → logprob: -11.001579284667969
    7. '           ' → logprob: -11.751579284667969
    8. ' release' → logprob: -11.751579284667969
    9. ')' → logprob: -11.876579284667969
    10. 'Release' → logprob: -12.126579284667969

Token 772: '
            
' (ID: 45334)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.30505627393722534
    2. ':' → logprob: -1.8050563335418701
    3. '           ' → logprob: -2.68005633354187
    4. ':
' → logprob: -4.555056095123291
    5. '):' → logprob: -4.680056095123291
    6. ')' → logprob: -6.305056095123291
    7. '   ' → logprob: -6.305056095123291
    8. '):
' → logprob: -6.930056095123291
    9. '        
' → logprob: -6.930056095123291
    10. '               ' → logprob: -7.305056095123291

Token 773: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.028946535661816597
    2. '       ' → logprob: -4.028946399688721
    3. ':' → logprob: -5.403946399688721
    4. ')' → logprob: -6.153946399688721
    5. '
' → logprob: -6.778946399688721
    6. '   ' → logprob: -7.528946399688721
    7. '            
' → logprob: -7.653946399688721
    8. ':
' → logprob: -7.778946399688721
    9. '               ' → logprob: -8.528946876525879
    10. ',' → logprob: -8.653946876525879

Token 774: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.49677565693855286
    2. '           ' → logprob: -0.9967756271362305
    3. '   ' → logprob: -3.9967756271362305
    4. '
' → logprob: -6.4967756271362305
    5. '            
' → logprob: -8.12177562713623
    6. 'import' → logprob: -8.24677562713623
    7. 'left' → logprob: -8.24677562713623
    8. '    
' → logprob: -8.24677562713623
    9. 'for' → logprob: -8.62177562713623
    10. '        
' → logprob: -8.62177562713623

Token 775: ' Implement' (ID: 32889)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11403737962245941
    2. '           ' → logprob: -2.739037275314331
    3. '   ' → logprob: -4.36403751373291
    4. 'capacity' → logprob: -5.11403751373291
    5. 'left' → logprob: -5.98903751373291
    6. '        
' → logprob: -6.23903751373291
    7. 'import' → logprob: -6.23903751373291
    8. 'return' → logprob: -6.23903751373291
    9. 'def' → logprob: -6.48903751373291
    10. '
' → logprob: -6.61403751373291

Token 776: ' a' (ID: 261)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.31000328063964844
    2. '
' → logprob: -2.0600032806396484
    3. '       ' → logprob: -2.6850032806396484
    4. '[]' → logprob: -4.310003280639648
    5. '        
' → logprob: -4.810003280639648
    6. '            
' → logprob: -4.935003280639648
    7. '   ' → logprob: -5.310003280639648
    8. ' =' → logprob: -5.685003280639648
    9. ' 
' → logprob: -5.685003280639648
    10. '    
' → logprob: -5.810003280639648

Token 777: ' solution' (ID: 7578)
  Prédit: 'pp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pp' → logprob: -0.6097580194473267
    2. '       ' → logprob: -2.484757900238037
    3. 'heap' → logprob: -2.609757900238037
    4. '           ' → logprob: -3.109757900238037
    5. ' heap' → logprob: -3.109757900238037
    6. 'rray' → logprob: -3.359757900238037
    7. 'def' → logprob: -3.484757900238037
    8. 'priority' → logprob: -3.859757900238037
    9. ' priority' → logprob: -4.359757900238037
    10. 'b' → logprob: -4.484757900238037

Token 778: ' similar' (ID: 6771)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6835095286369324
    2. '       ' → logprob: -0.9335095286369324
    3. ':
' → logprob: -2.433509588241577
    4. '():' → logprob: -5.433509349822998
    5. '
' → logprob: -5.933509349822998
    6. '           ' → logprob: -6.558509349822998
    7. '):' → logprob: -6.933509349822998
    8. '        
' → logprob: -6.933509349822998
    9. '():
' → logprob: -7.058509349822998
    10. '):
' → logprob: -7.058509349822998

Token 779: ' to' (ID: 316)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3626115918159485
    2. ' to' → logprob: -1.7376115322113037
    3. '       ' → logprob: -2.3626115322113037
    4. 'to' → logprob: -3.8626115322113037
    5. 'def' → logprob: -5.737611770629883
    6. '   ' → logprob: -6.112611770629883
    7. '```' → logprob: -6.112611770629883
    8. ':' → logprob: -6.237611770629883
    9. 'import' → logprob: -6.612611770629883
    10. '               ' → logprob: -7.112611770629883

Token 780: ' editorial' (ID: 37857)
  Prédit: 'binary'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'binary' → logprob: -1.0392053127288818
    2. 'heap' → logprob: -1.5392053127288818
    3. 'the' → logprob: -1.7892053127288818
    4. 'sorted' → logprob: -2.164205312728882
    5. 'def' → logprob: -3.414205312728882
    6. 'bis' → logprob: -3.914205312728882
    7. 'import' → logprob: -4.914205551147461
    8. '#' → logprob: -4.914205551147461
    9. 'two' → logprob: -4.914205551147461
    10. 'k' → logprob: -5.289205551147461

Token 781: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6699727773666382
    2. '       ' → logprob: -1.0449727773666382
    3. ':
' → logprob: -2.7949728965759277
    4. '):' → logprob: -3.2949728965759277
    5. '):
' → logprob: -4.669972896575928
    6. '   ' → logprob: -4.919972896575928
    7. '
' → logprob: -5.169972896575928
    8. ')' → logprob: -5.669972896575928
    9. '        
' → logprob: -5.919972896575928
    10. '():' → logprob: -6.294972896575928

Token 782: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10184450447559357
    2. '       ' → logprob: -2.351844549179077
    3. '
' → logprob: -7.476844310760498
    4. '            
' → logprob: -7.976844310760498
    5. '        
' → logprob: -8.351844787597656
    6. '   ' → logprob: -9.226844787597656
    7. ' for' → logprob: -9.601844787597656
    8. '        ' → logprob: -9.851844787597656
    9. '    
' → logprob: -9.976844787597656
    10. '            ' → logprob: -10.601844787597656

Token 783: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3836662471294403
    2. 'capacity' → logprob: -3.2586662769317627
    3. 'left' → logprob: -3.5086662769317627
    4. 'low' → logprob: -3.7586662769317627
    5. '           ' → logprob: -3.7586662769317627
    6. '   ' → logprob: -3.8836662769317627
    7. 'res' → logprob: -3.8836662769317627
    8. 'selected' → logprob: -4.008666038513184
    9. 'threshold' → logprob: -4.008666038513184
    10. 'freq' → logprob: -4.383666038513184

Token 784: ' For' (ID: 2214)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4838540554046631
    2. 'low' → logprob: -2.483854055404663
    3. 'left' → logprob: -2.483854055404663
    4. 'capacity' → logprob: -3.358854055404663
    5. 'threshold' → logprob: -3.858854055404663
    6. '           ' → logprob: -4.233854293823242
    7. 'lo' → logprob: -4.358854293823242
    8. 'selected' → logprob: -4.483854293823242
    9. '   ' → logprob: -4.483854293823242
    10. 'import' → logprob: -4.608854293823242

Token 785: ' fixed' (ID: 13213)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.4266184866428375
    2. ' k' → logprob: -1.4266184568405151
    3. 'i' → logprob: -3.8016185760498047
    4. 'capacity' → logprob: -3.8016185760498047
    5. ' capacity' → logprob: -4.051618576049805
    6. 'cap' → logprob: -5.051618576049805
    7. ' i' → logprob: -5.051618576049805
    8. 'b' → logprob: -5.676618576049805
    9. ' cap' → logprob: -5.801618576049805
    10. ' _' → logprob: -5.801618576049805

Token 786: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.4761042594909668
    2. 'k' → logprob: -0.9761042594909668
    3. ')' → logprob: -7.726104259490967
    4. '```' → logprob: -8.476104736328125
    5. '_k' → logprob: -8.601104736328125
    6. ' _' → logprob: -8.601104736328125
    7. '   ' → logprob: -8.726104736328125
    8. '_' → logprob: -9.226104736328125
    9. '(k' → logprob: -9.351104736328125
    10. '           ' → logprob: -9.476104736328125

Token 787: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3937167525291443
    2. ',' → logprob: -1.768716812133789
    3. '       ' → logprob: -3.018716812133789
    4. ':
' → logprob: -3.018716812133789
    5. '           ' → logprob: -3.143716812133789
    6. '):' → logprob: -5.518716812133789
    7. '   ' → logprob: -5.643716812133789
    8. '
' → logprob: -5.893716812133789
    9. '):
' → logprob: -7.143716812133789
    10. ',
' → logprob: -7.268716812133789

Token 788: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03215019032359123
    2. '       ' → logprob: -3.5321502685546875
    3. '
' → logprob: -6.4071502685546875
    4. '            
' → logprob: -8.657150268554688
    5. '   ' → logprob: -9.282150268554688
    6. '            ' → logprob: -9.407150268554688
    7. '        
' → logprob: -9.407150268554688
    8. '        ' → logprob: -9.782150268554688
    9. '    
' → logprob: -10.157150268554688
    10. ',' → logprob: -10.532150268554688

Token 789: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5333102941513062
    2. '       ' → logprob: -1.2833102941513062
    3. ' left' → logprob: -3.5333104133605957
    4. '   ' → logprob: -3.7833104133605957
    5. 'left' → logprob: -4.408310413360596
    6. ' releases' → logprob: -4.408310413360596
    7. ' capacity' → logprob: -4.658310413360596
    8. ' selected' → logprob: -4.783310413360596
    9. '
' → logprob: -4.908310413360596
    10. 'selected' → logprob: -5.283310413360596

Token 790: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1307333707809448
    2. 'left' → logprob: -1.8807333707809448
    3. 'selected' → logprob: -2.3807334899902344
    4. 'low' → logprob: -2.5057334899902344
    5. ' selected' → logprob: -2.8807334899902344
    6. '       ' → logprob: -2.8807334899902344
    7. 'c' → logprob: -3.0057334899902344
    8. ' left' → logprob: -3.0057334899902344
    9. ' low' → logprob: -4.005733489990234
    10. 'lo' → logprob: -4.505733489990234

Token 791: '1' (ID: 16)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.9539186954498291
    2. 'low' → logprob: -1.328918695449829
    3. 'heap' → logprob: -2.578918695449829
    4. 'selected' → logprob: -2.953918695449829
    5. 'c' → logprob: -3.203918695449829
    6. 'lo' → logprob: -3.203918695449829
    7. 'l' → logprob: -3.828918695449829
    8. 'capacity' → logprob: -3.953918695449829
    9. 'def' → logprob: -4.20391845703125
    10. '   ' → logprob: -4.45391845703125

Token 792: '.' (ID: 13)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2660689949989319
    2. ')' → logprob: -2.141068935394287
    3. '       ' → logprob: -2.266068935394287
    4. ':' → logprob: -5.641068935394287
    5. '   ' → logprob: -6.016068935394287
    6. '.' → logprob: -6.516068935394287
    7. ',' → logprob: -7.141068935394287
    8. ']' → logprob: -7.391068935394287
    9. ' =' → logprob: -8.016069412231445
    10. '```' → logprob: -8.016069412231445

Token 793: ' Filter' (ID: 20308)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -1.4285433292388916
    2. 'low' → logprob: -1.9285433292388916
    3. 'lo' → logprob: -2.1785433292388916
    4. 'heap' → logprob: -2.4285433292388916
    5. ' left' → logprob: -2.9285433292388916
    6. 'import' → logprob: -2.9285433292388916
    7. 'c' → logprob: -3.1785433292388916
    8. '   ' → logprob: -3.4285433292388916
    9. ' lo' → logprob: -3.5535433292388916
    10. ' low' → logprob: -3.8035433292388916

Token 794: ' microbes' (ID: 156044)
  Prédit: 'micro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'micro' → logprob: -1.1250836849212646
    2. '(lambda' → logprob: -1.3750836849212646
    3. ' microbes' → logprob: -1.7500836849212646
    4. '(m' → logprob: -2.6250836849212646
    5. 'lambda' → logprob: -3.6250836849212646
    6. '[' → logprob: -3.7500836849212646
    7. 'm' → logprob: -3.7500836849212646
    8. '[m' → logprob: -3.8750836849212646
    9. '=lambda' → logprob: -4.750083923339844
    10. '   ' → logprob: -5.125083923339844

Token 795: ' where' (ID: 1919)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3574388027191162
    2. ' with' → logprob: -2.732438802719116
    3. 'with' → logprob: -2.982438802719116
    4. '=' → logprob: -2.982438802719116
    5. '=lambda' → logprob: -3.107438802719116
    6. '           ' → logprob: -3.232438802719116
    7. '(lambda' → logprob: -4.107439041137695
    8. ',' → logprob: -4.232439041137695
    9. '       ' → logprob: -5.607439041137695
    10. ':' → logprob: -6.357439041137695

Token 796: ' capacity' (ID: 12241)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.06275191158056259
    2. 'micro' → logprob: -3.1877520084381104
    3. ' m' → logprob: -4.312751770019531
    4. 'capacity' → logprob: -5.437751770019531
    5. ' capacity' → logprob: -7.437751770019531
    6. 'mic' → logprob: -8.062751770019531
    7. '   ' → logprob: -8.312751770019531
    8. ' micro' → logprob: -8.562751770019531
    9. 'b' → logprob: -8.812751770019531
    10. 'mik' → logprob: -10.312751770019531

Token 797: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.35388460755348206
    2. '>=' → logprob: -1.3538845777511597
    3. ' *' → logprob: -3.478884696960449
    4. '   ' → logprob: -6.478884696960449
    5. ')' → logprob: -6.603884696960449
    6. '*' → logprob: -6.603884696960449
    7. ']>=' → logprob: -6.603884696960449
    8. ')>=' → logprob: -6.978884696960449
    9. ' ' → logprob: -7.853884696960449
    10. '```' → logprob: -7.978884696960449

Token 798: ' minimal' (ID: 19957)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.236281156539917
    2. 'micro' → logprob: -1.236281156539917
    3. 'k' → logprob: -1.986281156539917
    4. ' microbes' → logprob: -2.361281156539917
    5. 'min' → logprob: -3.236281156539917
    6. '(k' → logprob: -3.611281156539917
    7. '1' → logprob: -3.611281156539917
    8. '(m' → logprob: -4.361281394958496
    9. '(min' → logprob: -4.361281394958496
    10. ' k' → logprob: -4.611281394958496

Token 799: ' capacity' (ID: 12241)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' _' → logprob: -1.4011614322662354
    2. '_release' → logprob: -1.4011614322662354
    3. '_' → logprob: -2.0261614322662354
    4. '_capacity' → logprob: -2.1511614322662354
    5. ' k' → logprob: -3.2761614322662354
    6. '_k' → logprob: -3.6511614322662354
    7. '_micro' → logprob: -4.026161193847656
    8. '_cap' → logprob: -4.151161193847656
    9. '_threshold' → logprob: -4.151161193847656
    10. '`' → logprob: -4.276161193847656

Token 800: ' required' (ID: 3759)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >=' → logprob: -1.2888590097427368
    2. '           ' → logprob: -1.6638590097427368
    3. '>=' → logprob: -2.1638588905334473
    4. '_threshold' → logprob: -2.1638588905334473
    5. '       ' → logprob: -3.2888588905334473
    6. '=' → logprob: -3.4138588905334473
    7. ' if' → logprob: -3.4138588905334473
    8. ' =' → logprob: -3.6638588905334473
    9. ')' → logprob: -3.9138588905334473
    10. ' and' → logprob: -4.288858890533447

Token 801: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8912283182144165
    2. ' =' → logprob: -1.8912283182144165
    3. ':' → logprob: -2.266228199005127
    4. '=' → logprob: -2.516228199005127
    5. '       ' → logprob: -2.516228199005127
    6. '   ' → logprob: -3.641228199005127
    7. '_' → logprob: -4.016228199005127
    8. ')' → logprob: -4.266228199005127
    9. ' ' → logprob: -4.641228199005127
    10. '
' → logprob: -5.141228199005127

Token 802: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0995716005563736
    2. '       ' → logprob: -2.724571704864502
    3. ':' → logprob: -4.224571704864502
    4. ')' → logprob: -5.599571704864502
    5. ' =' → logprob: -6.099571704864502
    6. '   ' → logprob: -6.349571704864502
    7. ',' → logprob: -7.474571704864502
    8. '            
' → logprob: -7.474571704864502
    9. '               ' → logprob: -7.599571704864502
    10. ':
' → logprob: -7.599571704864502

Token 803: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.127586230635643
    2. '       ' → logprob: -2.2525861263275146
    3. ')' → logprob: -5.627586364746094
    4. '            ' → logprob: -6.377586364746094
    5. '   ' → logprob: -6.627586364746094
    6. ':' → logprob: -6.752586364746094
    7. ',' → logprob: -6.877586364746094
    8. '.' → logprob: -7.377586364746094
    9. '               ' → logprob: -7.502586364746094
    10. '    ' → logprob: -7.502586364746094

Token 804: ' ' (ID: 220)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07729066163301468
    2. '       ' → logprob: -3.3272907733917236
    3. ')' → logprob: -4.9522905349731445
    4. ' for' → logprob: -5.5772905349731445
    5. 'return' → logprob: -5.7022905349731445
    6. '   ' → logprob: -5.9522905349731445
    7. '#' → logprob: -6.2022905349731445
    8. 'for' → logprob: -6.2022905349731445
    9. ' =' → logprob: -6.3272905349731445
    10. '.' → logprob: -6.4522905349731445

Token 805: '2' (ID: 17)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.481870174407959
    2. 'for' → logprob: -1.606870174407959
    3. '   ' → logprob: -1.856870174407959
    4. ' for' → logprob: -2.731870174407959
    5. '#' → logprob: -2.856870174407959
    6. ':' → logprob: -3.106870174407959
    7. ')' → logprob: -3.106870174407959
    8. '       ' → logprob: -3.106870174407959
    9. 'def' → logprob: -3.356870174407959
    10. 'return' → logprob: -3.981870174407959

Token 806: '.' (ID: 13)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5024980902671814
    2. '       ' → logprob: -1.0024981498718262
    3. '   ' → logprob: -4.002498149871826
    4. 'def' → logprob: -5.752498149871826
    5. ':' → logprob: -6.877498149871826
    6. ' for' → logprob: -7.502498149871826
    7. '
' → logprob: -7.627498149871826
    8. '    ' → logprob: -7.752498149871826
    9. 'import' → logprob: -7.752498149871826
    10. '#' → logprob: -8.002497673034668

Token 807: ' From' (ID: 7217)
  Prédit: 'release'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'release' → logprob: -1.7009674310684204
    2. 'import' → logprob: -1.8259674310684204
    3. 'heap' → logprob: -1.9509674310684204
    4. 'filtered' → logprob: -2.700967311859131
    5. ' releases' → logprob: -2.825967311859131
    6. 're' → logprob: -2.825967311859131
    7. 'selected' → logprob: -3.200967311859131
    8. '       ' → logprob: -3.325967311859131
    9. 'c' → logprob: -3.450967311859131
    10. '#' → logprob: -3.575967311859131

Token 808: ' these' (ID: 1879)
  Prédit: 'micro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'micro' → logprob: -0.24080660939216614
    2. '[' → logprob: -2.7408065795898438
    3. '[m' → logprob: -2.9908065795898438
    4. 'm' → logprob: -3.6158065795898438
    5. 'the' → logprob: -3.8658065795898438
    6. ' microbes' → logprob: -4.615806579589844
    7. 'those' → logprob: -4.740806579589844
    8. 'mic' → logprob: -5.240806579589844
    9. ' [' → logprob: -5.615806579589844
    10. '           ' → logprob: -5.865806579589844

Token 809: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6083700656890869
    2. ':' → logprob: -1.983370065689087
    3. 'micro' → logprob: -2.608370065689087
    4. '   ' → logprob: -2.983370065689087
    5. '_micro' → logprob: -3.358370065689087
    6. ' microbes' → logprob: -3.483370065689087
    7. ' ,' → logprob: -3.608370065689087
    8. ' select' → logprob: -4.608369827270508
    9. ':
' → logprob: -4.858369827270508
    10. ' micro' → logprob: -5.358369827270508

Token 810: ' pick' (ID: 5230)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.2416331768035889
    2. 'release' → logprob: -1.8666331768035889
    3. ' releases' → logprob: -1.8666331768035889
    4. 're' → logprob: -2.616633176803589
    5. '   ' → logprob: -2.741633176803589
    6. 'heap' → logprob: -3.491633176803589
    7. ' select' → logprob: -3.491633176803589
    8. ' release' → logprob: -3.616633176803589
    9. 'import' → logprob: -3.616633176803589
    10. 'select' → logprob: -3.866633176803589

Token 811: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -1.0264105796813965
    2. 'k' → logprob: -1.4014105796813965
    3. ' the' → logprob: -1.5264105796813965
    4. 'the' → logprob: -1.7764105796813965
    5. '   ' → logprob: -6.2764105796813965
    6. 'micro' → logprob: -6.5264105796813965
    7. '```' → logprob: -6.9014105796813965
    8. ' smallest' → logprob: -7.5264105796813965
    9. ' microbes' → logprob: -7.5264105796813965
    10. 'lowest' → logprob: -7.5264105796813965

Token 812: ' microbes' (ID: 156044)
  Prédit: ' microbes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' microbes' → logprob: -0.8218472003936768
    2. ' _' → logprob: -1.4468472003936768
    3. '_micro' → logprob: -2.0718472003936768
    4. 'micro' → logprob: -3.0718472003936768
    5. '_' → logprob: -3.5718472003936768
    6. ')' → logprob: -3.9468472003936768
    7. ',' → logprob: -4.571846961975098
    8. '_release' → logprob: -4.696846961975098
    9. '_re' → logprob: -4.696846961975098
    10. '   ' → logprob: -4.821846961975098

Token 813: ' with' (ID: 483)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.20127980411052704
    2. ':' → logprob: -2.451279878616333
    3. '       ' → logprob: -2.451279878616333
    4. ',' → logprob: -5.951279640197754
    5. '):' → logprob: -6.451279640197754
    6. ':
' → logprob: -7.076279640197754
    7. '   ' → logprob: -7.201279640197754
    8. '.' → logprob: -7.826279640197754
    9. ')' → logprob: -7.826279640197754
    10. ' =' → logprob: -8.076279640197754

Token 814: ' smallest' (ID: 42173)
  Prédit: 'lowest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lowest' → logprob: -0.1883363425731659
    2. ' smallest' → logprob: -2.3133363723754883
    3. ' lowest' → logprob: -3.5633363723754883
    4. 'the' → logprob: -3.9383363723754883
    5. ' the' → logprob: -4.688336372375488
    6. 'small' → logprob: -4.813336372375488
    7. 'release' → logprob: -5.063336372375488
    8. ' release' → logprob: -7.188336372375488
    9. 'minimal' → logprob: -8.938336372375488
    10. '```' → logprob: -9.563336372375488

Token 815: ' releases' (ID: 30979)
  Prédit: 'release'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'release' → logprob: -0.5247200727462769
    2. ' release' → logprob: -0.8997200727462769
    3. ' releases' → logprob: -6.774720191955566
    4. '_release' → logprob: -8.024720191955566
    5. '.release' → logprob: -9.649720191955566
    6. 're' → logprob: -10.524720191955566
    7. '```' → logprob: -11.399720191955566
    8. '`' → logprob: -12.149720191955566
    9. '   ' → logprob: -12.399720191955566
    10. ' ' → logprob: -13.149720191955566

Token 816: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5050724744796753
    2. '       ' → logprob: -1.6300724744796753
    3. ':' → logprob: -1.7550724744796753
    4. ':
' → logprob: -5.005072593688965
    5. '):' → logprob: -5.255072593688965
    6. '   ' → logprob: -5.755072593688965
    7. '
' → logprob: -6.380072593688965
    8. ')' → logprob: -6.380072593688965
    9. ',' → logprob: -6.505072593688965
    10. '        
' → logprob: -6.630072593688965

Token 817: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008390100672841072
    2. '       ' → logprob: -4.883389949798584
    3. '            
' → logprob: -8.508390426635742
    4. '<|end|>' → logprob: -9.008390426635742
    5. ',' → logprob: -9.383390426635742
    6. '   ' → logprob: -9.633390426635742
    7. '        
' → logprob: -9.758390426635742
    8. '
' → logprob: -10.008390426635742
    9. '    
' → logprob: -10.508390426635742
    10. '            ' → logprob: -10.758390426635742

Token 818: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09008055925369263
    2. '       ' → logprob: -2.465080499649048
    3. '   ' → logprob: -7.840080738067627
    4. '            
' → logprob: -8.715080261230469
    5. '        
' → logprob: -8.840080261230469
    6. '    
' → logprob: -9.465080261230469
    7. '
' → logprob: -9.965080261230469
    8. ')' → logprob: -10.215080261230469
    9. 'return' → logprob: -10.340080261230469
    10. '    ' → logprob: -10.340080261230469

Token 819: ' ' (ID: 220)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11516407132148743
    2. '       ' → logprob: -2.240164041519165
    3. '   ' → logprob: -7.865164279937744
    4. '            
' → logprob: -7.865164279937744
    5. '        
' → logprob: -7.990164279937744
    6. '
' → logprob: -7.990164279937744
    7. 'def' → logprob: -8.740163803100586
    8. 'return' → logprob: -9.240163803100586
    9. ',' → logprob: -9.615163803100586
    10. '    
' → logprob: -9.865163803100586

Token 820: '3' (ID: 18)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5252742171287537
    2. '           ' → logprob: -1.1502742767333984
    3. 'return' → logprob: -3.1502742767333984
    4. '   ' → logprob: -3.6502742767333984
    5. 'if' → logprob: -5.400274276733398
    6. 'release' → logprob: -5.525274276733398
    7. 'for' → logprob: -5.900274276733398
    8. ' return' → logprob: -6.400274276733398
    9. ' if' → logprob: -6.650274276733398
    10. 'def' → logprob: -6.775274276733398

Token 821: '.' (ID: 13)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.35562747716903687
    2. '       ' → logprob: -1.3556275367736816
    3. ':' → logprob: -3.3556275367736816
    4. '   ' → logprob: -6.230627536773682
    5. ':
' → logprob: -6.730627536773682
    6. 'return' → logprob: -7.230627536773682
    7. '
' → logprob: -7.730627536773682
    8. ' return' → logprob: -8.105627059936523
    9. '               ' → logprob: -8.105627059936523
    10. 'def' → logprob: -8.230627059936523

Token 822: ' If' (ID: 1843)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.097859263420105
    2. 'release' → logprob: -1.972859263420105
    3. ' releases' → logprob: -2.0978593826293945
    4. '           ' → logprob: -2.2228593826293945
    5. 'def' → logprob: -2.4728593826293945
    6. 'return' → logprob: -2.9728593826293945
    7. '   ' → logprob: -3.5978593826293945
    8. 'selected' → logprob: -3.7228593826293945
    9. 'min' → logprob: -3.8478593826293945
    10. ' release' → logprob: -4.5978593826293945

Token 823: ' sum' (ID: 4215)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -1.0166559219360352
    2. ' sum' → logprob: -1.2666559219360352
    3. ' len' → logprob: -1.5166559219360352
    4. 'sum' → logprob: -2.766655921936035
    5. ' the' → logprob: -3.641655921936035
    6. ' total' → logprob: -3.891655921936035
    7. 'the' → logprob: -5.016655921936035
    8. ' k' → logprob: -5.141655921936035
    9. ' releases' → logprob: -5.766655921936035
    10. 'total' → logprob: -6.391655921936035

Token 824: ' of' (ID: 328)
  Prédit: '_release'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_release' → logprob: -0.015997180715203285
    2. '(re' → logprob: -5.015997409820557
    3. '           ' → logprob: -5.390997409820557
    4. ' of' → logprob: -6.640997409820557
    5. '_of' → logprob: -7.265997409820557
    6. 'release' → logprob: -7.640997409820557
    7. '```' → logprob: -7.640997409820557
    8. '_re' → logprob: -7.765997409820557
    9. 'of' → logprob: -8.015996932983398
    10. '_' → logprob: -8.390996932983398

Token 825: ' releases' (ID: 30979)
  Prédit: 'release'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'release' → logprob: -0.07247025519609451
    2. ' release' → logprob: -2.822470188140869
    3. ' releases' → logprob: -4.697470188140869
    4. 're' → logprob: -6.947470188140869
    5. '   ' → logprob: -8.822470664978027
    6. '_release' → logprob: -8.947470664978027
    7. ' ' → logprob: -11.197470664978027
    8. ' ' → logprob: -11.572470664978027
    9. '```' → logprob: -11.572470664978027
    10. '       ' → logprob: -11.822470664978027

Token 826: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.07108680158853531
    2. '<=' → logprob: -3.446086883544922
    3. '_' → logprob: -3.821086883544922
    4. '           ' → logprob: -6.071086883544922
    5. ' _' → logprob: -6.196086883544922
    6. ' >=' → logprob: -6.446086883544922
    7. '_selected' → logprob: -6.696086883544922
    8. ' of' → logprob: -6.946086883544922
    9. '_of' → logprob: -7.071086883544922
    10. ')' → logprob: -7.071086883544922

Token 827: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.6280344128608704
    2. 'micro' → logprob: -1.3780343532562256
    3. ' min' → logprob: -2.7530343532562256
    4. 'capacity' → logprob: -3.1280343532562256
    5. ' capacity' → logprob: -3.6280343532562256
    6. ' microbes' → logprob: -3.6280343532562256
    7. 'b' → logprob: -3.7530343532562256
    8. ' micro' → logprob: -4.878034591674805
    9. 'mic' → logprob: -5.378034591674805
    10. ' b' → logprob: -5.878034591674805

Token 828: ' capacity' (ID: 12241)
  Prédit: '(b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(b' → logprob: -1.2591317892074585
    2. '_capacity' → logprob: -1.2591317892074585
    3. '_b' → logprob: -1.3841317892074585
    4. '_' → logprob: -2.009131908416748
    5. '_cap' → logprob: -3.884131908416748
    6. '_release' → logprob: -4.884131908416748
    7. '_micro' → logprob: -5.134131908416748
    8. '(cap' → logprob: -5.759131908416748
    9. '(m' → logprob: -6.384131908416748
    10. '(' → logprob: -6.884131908416748

Token 829: ' *' (ID: 425)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8849961161613464
    2. '):' → logprob: -0.8849961161613464
    3. '           ' → logprob: -2.884996175765991
    4. ')' → logprob: -3.134996175765991
    5. '_' → logprob: -3.759996175765991
    6. '       ' → logprob: -4.634995937347412
    7. ' _' → logprob: -4.884995937347412
    8. '):
' → logprob: -5.259995937347412
    9. '   ' → logprob: -5.634995937347412
    10. ']:' → logprob: -6.134995937347412

Token 830: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.07005146890878677
    2. ' k' → logprob: -2.695051431655884
    3. '```' → logprob: -9.570051193237305
    4. '`' → logprob: -10.570051193237305
    5. '``' → logprob: -12.445051193237305
    6. '
' → logprob: -12.820051193237305
    7. '_k' → logprob: -12.820051193237305
    8. '   ' → logprob: -12.945051193237305
    9. ' ' → logprob: -13.195051193237305
    10. '(k' → logprob: -13.570051193237305

Token 831: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07211095839738846
    2. '           ' → logprob: -3.572110891342163
    3. '):' → logprob: -4.197111129760742
    4. ':
' → logprob: -5.072111129760742
    5. ')' → logprob: -5.197111129760742
    6. '       ' → logprob: -5.322111129760742
    7. '   ' → logprob: -5.947111129760742
    8. '               ' → logprob: -6.697111129760742
    9. '():' → logprob: -7.322111129760742
    10. ',' → logprob: -7.447111129760742

Token 832: 'which' (ID: 13980)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.8405036330223083
    2. ')' → logprob: -0.9655036330223083
    3. '),' → logprob: -2.715503692626953
    4. '):' → logprob: -2.840503692626953
    5. 'k' → logprob: -3.715503692626953
    6. '           ' → logprob: -4.340503692626953
    7. ' k' → logprob: -4.715503692626953
    8. ')
' → logprob: -5.090503692626953
    9. ':' → logprob: -6.590503692626953
    10. ' ):
' → logprob: -6.590503692626953

Token 833: ' is' (ID: 382)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6461365818977356
    2. ')' → logprob: -1.6461365222930908
    3. '):
' → logprob: -2.271136522293091
    4. ':' → logprob: -2.271136522293091
    5. '),' → logprob: -3.396136522293091
    6. ' is' → logprob: -4.02113676071167
    7. '):

' → logprob: -5.64613676071167
    8. ':
' → logprob: -5.64613676071167
    9. '#' → logprob: -5.77113676071167
    10. '   ' → logprob: -6.14613676071167

Token 834: ' capacity' (ID: 12241)
  Prédit: 'micro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'micro' → logprob: -0.7619622349739075
    2. ' microbes' → logprob: -0.7619622349739075
    3. 'min' → logprob: -3.2619621753692627
    4. ' micro' → logprob: -4.386962413787842
    5. ' capacity' → logprob: -5.136962413787842
    6. 'capacity' → logprob: -5.761962413787842
    7. ' min' → logprob: -5.886962413787842
    8. 'mic' → logprob: -6.636962413787842
    9. '   ' → logprob: -7.511962413787842
    10. 'b' → logprob: -7.636962413787842

Token 835: ' *' (ID: 425)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4962230920791626
    2. ' *' → logprob: -1.4962230920791626
    3. ' >=' → logprob: -2.746222972869873
    4. '),' → logprob: -2.746222972869873
    5. ']' → logprob: -2.996222972869873
    6. '>=' → logprob: -2.996222972869873
    7. '):
' → logprob: -3.121222972869873
    8. 's' → logprob: -3.496222972869873
    9. '):' → logprob: -3.496222972869873
    10. '   ' → logprob: -3.621222972869873

Token 836: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.11328980326652527
    2. ' k' → logprob: -2.2382898330688477
    3. '`' → logprob: -8.863289833068848
    4. '```' → logprob: -8.988289833068848
    5. '
' → logprob: -10.238289833068848
    6. ' ' → logprob: -10.238289833068848
    7. ')' → logprob: -10.238289833068848
    8. ' 
' → logprob: -11.113289833068848
    9. 'min' → logprob: -11.988289833068848
    10. '   ' → logprob: -12.113289833068848

Token 837: ' of' (ID: 328)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5680654048919678
    2. '):
' → logprob: -1.0680654048919678
    3. ')' → logprob: -3.1930654048919678
    4. '           ' → logprob: -3.5680654048919678
    5. ':' → logprob: -4.568065643310547
    6. '),' → logprob: -5.943065643310547
    7. ':
' → logprob: -6.568065643310547
    8. '       ' → logprob: -6.693065643310547
    9. '               ' → logprob: -6.818065643310547
    10. '):
' → logprob: -7.068065643310547

Token 838: ' minimal' (ID: 19957)
  Prédit: 'micro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'micro' → logprob: -0.2024684101343155
    2. ' microbes' → logprob: -1.9524683952331543
    3. 'the' → logprob: -4.452468395233154
    4. ' micro' → logprob: -4.577468395233154
    5. '           ' → logprob: -4.952468395233154
    6. ' the' → logprob: -5.827468395233154
    7. ' selected' → logprob: -5.952468395233154
    8. 'selected' → logprob: -5.952468395233154
    9. '   ' → logprob: -6.952468395233154
    10. 'mic' → logprob: -7.702468395233154

Token 839: ' micro' (ID: 10449)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1789758205413818
    2. 'capacity' → logprob: -1.5539758205413818
    3. '_capacity' → logprob: -1.6789758205413818
    4. ' capacity' → logprob: -2.428975820541382
    5. ')_' → logprob: -3.553975820541382
    6. '_cap' → logprob: -3.803975820541382
    7. '```' → logprob: -4.178976058959961
    8. '   ' → logprob: -4.178976058959961
    9. '_release' → logprob: -4.303976058959961
    10. '_micro' → logprob: -4.303976058959961

Token 840: 'be' (ID: 1464)
  Prédit: 'bes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bes' → logprob: -0.2919817864894867
    2. 'be' → logprob: -1.791981816291809
    3. ')' → logprob: -2.6669816970825195
    4. 'b' → logprob: -5.1669816970825195
    5. '   ' → logprob: -6.1669816970825195
    6. 'capacity' → logprob: -6.6669816970825195
    7. ')
' → logprob: -6.9169816970825195
    8. ']' → logprob: -7.4169816970825195
    9. '```' → logprob: -7.5419816970825195
    10. '       ' → logprob: -7.7919816970825195

Token 841: ' in' (ID: 306)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -1.3257017135620117
    2. '):' → logprob: -1.4507017135620117
    3. ')' → logprob: -1.9507017135620117
    4. '_selected' → logprob: -2.2007017135620117
    5. '           ' → logprob: -2.5757017135620117
    6. '),' → logprob: -3.3257017135620117
    7. ' selected' → logprob: -3.4507017135620117
    8. 'selected' → logprob: -3.5757017135620117
    9. ' among' → logprob: -4.200701713562012
    10. '               ' → logprob: -4.575701713562012

Token 842: ' the' (ID: 290)
  Prédit: 'selected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'selected' → logprob: -0.46590885519981384
    2. 'the' → logprob: -1.9659088850021362
    3. ' selected' → logprob: -2.5909087657928467
    4. 'micro' → logprob: -2.7159087657928467
    5. ' microbes' → logprob: -3.5909087657928467
    6. ' the' → logprob: -4.090909004211426
    7. '   ' → logprob: -4.465909004211426
    8. 'heap' → logprob: -4.465909004211426
    9. ')' → logprob: -5.340909004211426
    10. '           ' → logprob: -5.715909004211426

Token 843: ' set' (ID: 920)
  Prédit: 'selected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'selected' → logprob: -0.06732627004384995
    2. ' selected' → logprob: -3.442326307296753
    3. 'heap' → logprob: -3.817326307296753
    4. 'selection' → logprob: -5.067326068878174
    5. 'subset' → logprob: -6.442326068878174
    6. ' selection' → logprob: -6.692326068878174
    7. ' heap' → logprob: -7.317326068878174
    8. 'k' → logprob: -8.692326545715332
    9. 'chosen' → logprob: -9.067326545715332
    10. 'list' → logprob: -9.067326545715332

Token 844: '),' (ID: 936)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8057938814163208
    2. '):
' → logprob: -0.8057938814163208
    3. '):' → logprob: -2.8057937622070312
    4. '               ' → logprob: -4.180793762207031
    5. ':' → logprob: -5.180793762207031
    6. ':
' → logprob: -5.180793762207031
    7. '       ' → logprob: -5.305793762207031
    8. ')' → logprob: -5.805793762207031
    9. ' selected' → logprob: -5.930793762207031
    10. 'selected' → logprob: -6.180793762207031

Token 845: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8306849598884583
    2. ':' → logprob: -1.7056849002838135
    3. ' return' → logprob: -1.8306849002838135
    4. 'return' → logprob: -2.8306849002838135
    5. '               ' → logprob: -2.9556849002838135
    6. ')' → logprob: -2.9556849002838135
    7. '):' → logprob: -3.8306849002838135
    8. ':return' → logprob: -4.205685138702393
    9. '       ' → logprob: -5.080685138702393
    10. '   ' → logprob: -5.455685138702393

Token 846: ' True' (ID: 6432)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.24986253678798676
    2. '       ' → logprob: -2.1248624324798584
    3. '   ' → logprob: -3.6248624324798584
    4. ')' → logprob: -4.4998626708984375
    5. '            ' → logprob: -4.7498626708984375
    6. ' k' → logprob: -4.8748626708984375
    7. '               ' → logprob: -4.8748626708984375
    8. ':' → logprob: -4.8748626708984375
    9. '    ' → logprob: -5.4998626708984375
    10. '        ' → logprob: -5.8748626708984375

Token 847: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.043695736676454544
    2. ':' → logprob: -4.04369592666626
    3. '           ' → logprob: -4.04369592666626
    4. '        
' → logprob: -5.91869592666626
    5. ':
' → logprob: -6.66869592666626
    6. '
' → logprob: -6.79369592666626
    7. '   ' → logprob: -7.54369592666626
    8. '):' → logprob: -8.168695449829102
    9. '    
' → logprob: -8.293695449829102
    10. '\n' → logprob: -8.668695449829102

Token 848: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01622544415295124
    2. '           ' → logprob: -4.266225337982178
    3. '        
' → logprob: -6.766225337982178
    4. '
' → logprob: -7.391225337982178
    5. '    
' → logprob: -9.516225814819336
    6. '   ' → logprob: -9.516225814819336
    7. 'return' → logprob: -10.641225814819336
    8. '            
' → logprob: -10.766225814819336
    9. 'def' → logprob: -11.516225814819336
    10. '```' → logprob: -11.641225814819336

Token 849: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.37752828001976013
    2. '       ' → logprob: -1.5025283098220825
    3. 'threshold' → logprob: -4.252528190612793
    4. 'return' → logprob: -4.377528190612793
    5. 'capacity' → logprob: -4.502528190612793
    6. 'min' → logprob: -4.752528190612793
    7. 'left' → logprob: -4.877528190612793
    8. 'for' → logprob: -5.377528190612793
    9. 'k' → logprob: -5.627528190612793
    10. 'low' → logprob: -6.002528190612793

Token 850: ' But' (ID: 3072)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3752741515636444
    2. '           ' → logprob: -1.2502741813659668
    3. '   ' → logprob: -5.000274181365967
    4. '
' → logprob: -5.750274181365967
    5. 'return' → logprob: -5.875274181365967
    6. 'def' → logprob: -6.875274181365967
    7. '        
' → logprob: -6.875274181365967
    8. '```' → logprob: -6.875274181365967
    9. 'capacity' → logprob: -7.000274181365967
    10. 'import' → logprob: -7.000274181365967

Token 851: ' we' (ID: 581)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.6922534704208374
    2. ' True' → logprob: -0.8172534704208374
    3. 'True' → logprob: -4.317253589630127
    4. ' k' → logprob: -4.567253589630127
    5. 'not' → logprob: -4.567253589630127
    6. '           ' → logprob: -5.692253589630127
    7. ' False' → logprob: -5.817253589630127
    8. ' ' → logprob: -5.942253589630127
    9. ' ' → logprob: -6.067253589630127
    10. ' def' → logprob: -6.192253589630127

Token 852: ' don't' (ID: 4128)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -1.6832690238952637
    2. ' ' → logprob: -1.8082690238952637
    3. ' continue' → logprob: -1.9332690238952637
    4. '   ' → logprob: -2.3082690238952637
    5. '       ' → logprob: -2.4332690238952637
    6. ''ll' → logprob: -3.3082690238952637
    7. ' try' → logprob: -3.4332690238952637
    8. ' don't' → logprob: -3.4332690238952637
    9. ' return' → logprob: -3.5582690238952637
    10. ' have' → logprob: -3.8082690238952637

Token 853: ' know' (ID: 1761)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -1.0976002216339111
    2. ' return' → logprob: -1.8476002216339111
    3. '   ' → logprob: -1.9726002216339111
    4. '       ' → logprob: -2.347600221633911
    5. ' have' → logprob: -2.597600221633911
    6. 'have' → logprob: -2.972600221633911
    7. 'continue' → logprob: -3.097600221633911
    8. 'indent' → logprob: -3.472600221633911
    9. '           ' → logprob: -3.972600221633911
    10. '
' → logprob: -4.347599983215332

Token 854: ' threshold' (ID: 24313)
  Prédit: ' total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.7382365465164185
    2. ' the' → logprob: -1.7382365465164185
    3. '   ' → logprob: -2.613236427307129
    4. ' ' → logprob: -2.863236427307129
    5. '           ' → logprob: -3.238236427307129
    6. '       ' → logprob: -3.488236427307129
    7. 'total' → logprob: -3.488236427307129
    8. 'the' → logprob: -3.613236427307129
    9. ' k' → logprob: -4.363236427307129
    10. ')' → logprob: -4.488236427307129

Token 855: ' in' (ID: 306)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.81149822473526
    2. '       ' → logprob: -1.0614981651306152
    3. ':' → logprob: -1.9364981651306152
    4. ':
' → logprob: -4.561498165130615
    5. '   ' → logprob: -4.686498165130615
    6. 'return' → logprob: -4.936498165130615
    7. ',' → logprob: -5.186498165130615
    8. '        
' → logprob: -5.186498165130615
    9. ' return' → logprob: -5.686498165130615
    10. ')' → logprob: -6.061498165130615

Token 856: ' advance' (ID: 14805)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -1.121139407157898
    2. 'this' → logprob: -1.621139407157898
    3. 'complete' → logprob: -2.1211395263671875
    4. 'can' → logprob: -2.9961395263671875
    5. 'return' → logprob: -2.9961395263671875
    6. ' this' → logprob: -3.1211395263671875
    7. 'k' → logprob: -3.2461395263671875
    8. ' the' → logprob: -3.4961395263671875
    9. 'def' → logprob: -3.6211395263671875
    10. ' k' → logprob: -3.7461395263671875

Token 857: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6526231169700623
    2. '       ' → logprob: -0.7776231169700623
    3. '   ' → logprob: -5.402623176574707
    4. ':' → logprob: -5.652623176574707
    5. '        
' → logprob: -5.902623176574707
    6. 'return' → logprob: -6.152623176574707
    7. '
' → logprob: -6.777623176574707
    8. '    
' → logprob: -7.027623176574707
    9. '            
' → logprob: -7.152623176574707
    10. ',' → logprob: -7.152623176574707

Token 858: ' try' (ID: 2075)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3679051697254181
    2. '       ' → logprob: -1.7429051399230957
    3. 'return' → logprob: -3.1179051399230957
    4. ' return' → logprob: -3.1179051399230957
    5. '               ' → logprob: -3.8679051399230957
    6. '   ' → logprob: -4.742905139923096
    7. ' for' → logprob: -5.242905139923096
    8. '            ' → logprob: -6.492905139923096
    9. 'for' → logprob: -6.492905139923096
    10. '            
' → logprob: -7.242905139923096

Token 859: ' an' (ID: 448)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4634193480014801
    2. '       ' → logprob: -1.8384193181991577
    3. '           ' → logprob: -3.4634194374084473
    4. ':' → logprob: -3.4634194374084473
    5. '[]' → logprob: -3.5884194374084473
    6. ' None' → logprob: -3.7134194374084473
    7. '```' → logprob: -4.213419437408447
    8. '    ' → logprob: -4.338419437408447
    9. 'return' → logprob: -4.338419437408447
    10. ' return' → logprob: -4.713419437408447

Token 860: ' alternative' (ID: 13319)
  Prédit: ' iterative'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' iterative' → logprob: -0.08867757022380829
    2. 'other' → logprob: -3.4636776447296143
    3. '       ' → logprob: -4.088677406311035
    4. 'initial' → logprob: -5.338677406311035
    5. 'iter' → logprob: -5.463677406311035
    6. ' initial' → logprob: -5.463677406311035
    7. 'def' → logprob: -6.213677406311035
    8. '           ' → logprob: -6.338677406311035
    9. 'approx' → logprob: -6.338677406311035
    10. ' iteration' → logprob: -6.463677406311035

Token 861: ' approach' (ID: 7139)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07744414359331131
    2. '           ' → logprob: -3.327444076538086
    3. '
' → logprob: -4.327444076538086
    4. ':' → logprob: -4.952444076538086
    5. '   ' → logprob: -5.077444076538086
    6. '        
' → logprob: -5.327444076538086
    7. 'return' → logprob: -5.952444076538086
    8. '    
' → logprob: -6.577444076538086
    9. ':
' → logprob: -7.452444076538086
    10. ' return' → logprob: -7.702444076538086

Token 862: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.654899537563324
    2. '           ' → logprob: -0.779899537563324
    3. '
' → logprob: -5.029899597167969
    4. '```' → logprob: -5.404899597167969
    5. '   ' → logprob: -6.029899597167969
    6. '        
' → logprob: -6.279899597167969
    7. ' for' → logprob: -6.654899597167969
    8. ':' → logprob: -6.779899597167969
    9. '            
' → logprob: -7.154899597167969
    10. 'for' → logprob: -7.279899597167969

Token 863: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.23221422731876373
    2. '       ' → logprob: -1.6072142124176025
    3. '
' → logprob: -5.607214450836182
    4. '        
' → logprob: -6.482214450836182
    5. '            
' → logprob: -7.982214450836182
    6. '   ' → logprob: -8.107213973999023
    7. '    
' → logprob: -8.357213973999023
    8. 'return' → logprob: -8.857213973999023
    9. ' 
' → logprob: -9.607213973999023
    10. '               ' → logprob: -9.732213973999023

Token 864: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.38391122221946716
    2. '       ' → logprob: -1.3839112520217896
    3. 'selected' → logprob: -4.3839111328125
    4. ' releases' → logprob: -4.6339111328125
    5. 'possible' → logprob: -4.8839111328125
    6. '   ' → logprob: -5.0089111328125
    7. ' selected' → logprob: -5.2589111328125
    8. 'import' → logprob: -5.5089111328125
    9. 'release' → logprob: -6.1339111328125
    10. ' left' → logprob: -6.6339111328125

Token 865: ' Sort' (ID: 25945)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4112679958343506
    2. '           ' → logprob: -1.2862679958343506
    3. '   ' → logprob: -5.03626823425293
    4. '#' → logprob: -5.16126823425293
    5. 'k' → logprob: -5.16126823425293
    6. 'left' → logprob: -5.16126823425293
    7. 'low' → logprob: -5.28626823425293
    8. ' if' → logprob: -5.28626823425293
    9. ' left' → logprob: -5.41126823425293
    10. 'possible' → logprob: -5.78626823425293

Token 866: ' by' (ID: 656)
  Prédit: 'micro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'micro' → logprob: -0.6645651459693909
    2. ' microbes' → logprob: -1.164565086364746
    3. '   ' → logprob: -2.914565086364746
    4. '_micro' → logprob: -3.789565086364746
    5. '       ' → logprob: -4.164565086364746
    6. '_' → logprob: -4.289565086364746
    7. ')' → logprob: -4.414565086364746
    8. '(m' → logprob: -4.664565086364746
    9. ' micro' → logprob: -4.789565086364746
    10. '           ' → logprob: -4.914565086364746

Token 867: ' capacity' (ID: 12241)
  Prédit: 'release'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'release' → logprob: -0.49773260951042175
    2. 'capacity' → logprob: -1.1227326393127441
    3. ' release' → logprob: -3.372732639312744
    4. ' capacity' → logprob: -3.497732639312744
    5. 'micro' → logprob: -6.622732639312744
    6. '   ' → logprob: -8.747732162475586
    7. 're' → logprob: -8.872732162475586
    8. 'm' → logprob: -9.247732162475586
    9. ' micro' → logprob: -10.185232162475586
    10. ' m' → logprob: -10.247732162475586

Token 868: ' ascending' (ID: 75564)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1394479125738144
    2. '           ' → logprob: -3.2644479274749756
    3. ':' → logprob: -3.7644479274749756
    4. '_sorted' → logprob: -3.8894479274749756
    5. '   ' → logprob: -4.0144476890563965
    6. ')' → logprob: -5.0144476890563965
    7. '[' → logprob: -5.5144476890563965
    8. ':
' → logprob: -5.5144476890563965
    9. '):
' → logprob: -6.0144476890563965
    10. '```' → logprob: -6.3894476890563965

Token 869: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1131000965833664
    2. '           ' → logprob: -2.613100051879883
    3. ':' → logprob: -4.613100051879883
    4. '```' → logprob: -4.863100051879883
    5. ' for' → logprob: -5.613100051879883
    6. ',' → logprob: -6.238100051879883
    7. '   ' → logprob: -6.363100051879883
    8. 'for' → logprob: -6.363100051879883
    9. '
' → logprob: -6.488100051879883
    10. '        
' → logprob: -6.988100051879883

Token 870: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.019790906459093094
    2. '       ' → logprob: -4.019791126251221
    3. '
' → logprob: -6.894791126251221
    4. ' for' → logprob: -8.769790649414062
    5. '```' → logprob: -8.894790649414062
    6. '        
' → logprob: -9.269790649414062
    7. 'for' → logprob: -9.394790649414062
    8. '            
' → logprob: -9.519790649414062
    9. '   ' → logprob: -10.644790649414062
    10. ',' → logprob: -10.894790649414062

Token 871: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17021358013153076
    2. '           ' → logprob: -1.9202135801315308
    3. ' for' → logprob: -5.67021369934082
    4. '   ' → logprob: -5.92021369934082
    5. 'for' → logprob: -6.54521369934082
    6. '        
' → logprob: -7.79521369934082
    7. '
' → logprob: -8.42021369934082
    8. ')' → logprob: -8.54521369934082
    9. 'return' → logprob: -8.79521369934082
    10. '            
' → logprob: -8.79521369934082

Token 872: ' For' (ID: 2214)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20624013245105743
    2. '           ' → logprob: -2.081240177154541
    3. '   ' → logprob: -4.831240177154541
    4. ' for' → logprob: -4.831240177154541
    5. 'left' → logprob: -5.581240177154541
    6. 'for' → logprob: -5.706240177154541
    7. ' left' → logprob: -5.831240177154541
    8. ' capacity' → logprob: -5.956240177154541
    9. 'threshold' → logprob: -5.956240177154541
    10. 'low' → logprob: -6.081240177154541

Token 873: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.2709596157073975
    2. 'micro' → logprob: -1.5209596157073975
    3. 'capacity' → logprob: -1.7709596157073975
    4. 'i' → logprob: -2.1459596157073975
    5. ' k' → logprob: -3.0209596157073975
    6. ' capacity' → logprob: -3.3959596157073975
    7. 'm' → logprob: -4.020959854125977
    8. ' i' → logprob: -4.145959854125977
    9. 'mid' → logprob: -4.145959854125977
    10. 'cap' → logprob: -4.145959854125977

Token 874: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.14319851994514465
    2. ':' → logprob: -2.8931984901428223
    3. 'in' → logprob: -3.5181984901428223
    4. ':
' → logprob: -4.018198490142822
    5. '=' → logprob: -5.143198490142822
    6. ',' → logprob: -5.143198490142822
    7. '       ' → logprob: -5.518198490142822
    8. '):
' → logprob: -5.518198490142822
    9. '           ' → logprob: -5.768198490142822
    10. ' =' → logprob: -6.018198490142822

Token 875: ' traverse' (ID: 66957)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.9792702198028564
    2. '   ' → logprob: -2.1042702198028564
    3. '           ' → logprob: -2.1042702198028564
    4. ' import' → logprob: -2.2292702198028564
    5. ' left' → logprob: -2.3542702198028564
    6. ' i' → logprob: -2.6042702198028564
    7. 'import' → logprob: -2.9792702198028564
    8. ' idx' → logprob: -3.1042702198028564
    9. ' releases' → logprob: -3.3542702198028564
    10. 'left' → logprob: -3.7292702198028564

Token 876: ' from' (ID: 591)
  Prédit: ' microbes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' microbes' → logprob: -0.3020015358924866
    2. 'micro' → logprob: -1.6770014762878418
    3. '           ' → logprob: -3.802001476287842
    4. ' the' → logprob: -4.802001476287842
    5. ' micro' → logprob: -4.927001476287842
    6. '   ' → logprob: -5.302001476287842
    7. ' range' → logprob: -5.552001476287842
    8. 'the' → logprob: -5.927001476287842
    9. ' in' → logprob: -5.927001476287842
    10. ' microorganisms' → logprob: -6.052001476287842

Token 877: ' large' (ID: 4410)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01947014406323433
    2. 'the' → logprob: -5.14447021484375
    3. 'i' → logprob: -5.64447021484375
    4. 'k' → logprob: -5.76947021484375
    5. 'index' → logprob: -5.76947021484375
    6. 'left' → logprob: -6.89447021484375
    7. 'micro' → logprob: -7.39447021484375
    8. 'right' → logprob: -7.64447021484375
    9. 'start' → logprob: -8.26947021484375
    10. 'lowest' → logprob: -8.51947021484375

Token 878: ' capacity' (ID: 12241)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -1.0768487453460693
    2. 'capacity' → logprob: -1.5768487453460693
    3. '-' → logprob: -1.9518487453460693
    4. '-cap' → logprob: -2.2018487453460693
    5. ' capacity' → logprob: -2.5768487453460693
    6. '_capacity' → logprob: -3.7018487453460693
    7. ' microbes' → logprob: -4.201848983764648
    8. '   ' → logprob: -4.451848983764648
    9. 'micro' → logprob: -4.576848983764648
    10. '_index' → logprob: -4.951848983764648

Token 879: ' to' (ID: 316)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.342598557472229
    2. '       ' → logprob: -2.5925984382629395
    3. '):' → logprob: -3.2175984382629395
    4. ')' → logprob: -3.3425984382629395
    5. '   ' → logprob: -3.4675984382629395
    6. '           ' → logprob: -3.5925984382629395
    7. ']' → logprob: -4.5925984382629395
    8. ':
' → logprob: -4.7175984382629395
    9. ' ' → logprob: -4.7175984382629395
    10. '[' → logprob: -4.8425984382629395

Token 880: ' small' (ID: 3291)
  Prédit: 'small'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'small' → logprob: -0.08829469978809357
    2. '0' → logprob: -3.463294744491577
    3. 'low' → logprob: -3.713294744491577
    4. ' small' → logprob: -4.588294506072998
    5. 'left' → logprob: -4.838294506072998
    6. 'k' → logprob: -5.588294506072998
    7. ' ' → logprob: -6.338294506072998
    8. ' k' → logprob: -6.463294506072998
    9. ' low' → logprob: -7.213294506072998
    10. 'lowest' → logprob: -7.588294506072998

Token 881: ' =>' (ID: 871)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1303475946187973
    2. '       ' → logprob: -2.880347490310669
    3. '           ' → logprob: -4.005347728729248
    4. ':
' → logprob: -4.380347728729248
    5. '):' → logprob: -4.630347728729248
    6. '   ' → logprob: -5.130347728729248
    7. ' :' → logprob: -5.130347728729248
    8. ')' → logprob: -5.505347728729248
    9. ',' → logprob: -6.380347728729248
    10. '():' → logprob: -6.505347728729248

Token 882: ' can' (ID: 665)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.37250378727912903
    2. ' for' → logprob: -1.7475037574768066
    3. '       ' → logprob: -3.2475037574768066
    4. 'for' → logprob: -3.8725037574768066
    5. ':' → logprob: -4.497503757476807
    6. ' return' → logprob: -4.747503757476807
    7. '   ' → logprob: -4.997503757476807
    8. '               ' → logprob: -4.997503757476807
    9. '            ' → logprob: -4.997503757476807
    10. '#' → logprob: -5.622503757476807

Token 883: ' pick' (ID: 5230)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.5032992362976074
    2. '_select' → logprob: -1.6282992362976074
    3. ' select' → logprob: -2.3782992362976074
    4. '   ' → logprob: -2.3782992362976074
    5. 'not' → logprob: -2.8782992362976074
    6. '_choose' → logprob: -3.0032992362976074
    7. ' be' → logprob: -3.2532992362976074
    8. 'select' → logprob: -3.3782992362976074
    9. '_pick' → logprob: -3.3782992362976074
    10. 'pick' → logprob: -3.5032992362976074

Token 884: ' sets' (ID: 11982)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.24411365389823914
    2. '```' → logprob: -2.8691136837005615
    3. ' microbes' → logprob: -3.4941136837005615
    4. '       ' → logprob: -3.8691136837005615
    5. '[]' → logprob: -4.244113445281982
    6. '               ' → logprob: -4.494113445281982
    7. '   ' → logprob: -4.619113445281982
    8. ' for' → logprob: -4.619113445281982
    9. ')' → logprob: -4.994113445281982
    10. 'micro' → logprob: -5.244113445281982

Token 885: ' with' (ID: 483)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14118173718452454
    2. '           ' → logprob: -2.141181707382202
    3. ':' → logprob: -4.891181945800781
    4. '   ' → logprob: -6.391181945800781
    5. '        
' → logprob: -6.516181945800781
    6. '
' → logprob: -7.266181945800781
    7. ':
' → logprob: -7.891181945800781
    8. ' for' → logprob: -8.141181945800781
    9. '```' → logprob: -8.391181945800781
    10. '               ' → logprob: -8.391181945800781

Token 886: ' capacity' (ID: 12241)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.2908273935317993
    2. ' smallest' → logprob: -1.6658273935317993
    3. ' k' → logprob: -1.9158273935317993
    4. ' releases' → logprob: -2.5408272743225098
    5. 'lowest' → logprob: -3.0408272743225098
    6. 're' → logprob: -3.4158272743225098
    7. 'capacity' → logprob: -3.5408272743225098
    8. ' capacity' → logprob: -3.5408272743225098
    9. 'release' → logprob: -4.16582727432251
    10. 'heap' → logprob: -4.16582727432251

Token 887: '>=' (ID: 20974)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.36011576652526855
    2. ':' → logprob: -1.6101157665252686
    3. '           ' → logprob: -2.9851157665252686
    4. ')' → logprob: -4.235116004943848
    5. '):' → logprob: -4.485116004943848
    6. '   ' → logprob: -4.610116004943848
    7. ':
' → logprob: -6.235116004943848
    8. '
' → logprob: -6.235116004943848
    9. '=' → logprob: -6.360116004943848
    10. '.' → logprob: -6.485116004943848

Token 888: ' current' (ID: 2208)
  Prédit: 'micro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'micro' → logprob: -0.5453585386276245
    2. ' microbes' → logprob: -1.4203585386276245
    3. 'k' → logprob: -1.9203585386276245
    4. ' k' → logprob: -4.170358657836914
    5. ' micro' → logprob: -4.795358657836914
    6. 'mic' → logprob: -6.420358657836914
    7. 'threshold' → logprob: -6.545358657836914
    8. 'capacity' → logprob: -7.045358657836914
    9. '```' → logprob: -7.170358657836914
    10. 'm' → logprob: -7.420358657836914

Token 889: ' capacity' (ID: 12241)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4958621859550476
    2. '   ' → logprob: -1.9958622455596924
    3. ':' → logprob: -2.1208622455596924
    4. '           ' → logprob: -3.1208622455596924
    5. ')' → logprob: -3.3708622455596924
    6. '):' → logprob: -4.370862007141113
    7. '_' → logprob: -5.120862007141113
    8. 'def' → logprob: -5.120862007141113
    9. '
' → logprob: -5.495862007141113
    10. ' ' → logprob: -5.870862007141113

Token 890: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1339351236820221
    2. ':' → logprob: -2.3839352130889893
    3. '           ' → logprob: -4.13393497467041
    4. '):' → logprob: -5.25893497467041
    5. ':
' → logprob: -5.38393497467041
    6. '
' → logprob: -6.38393497467041
    7. '):
' → logprob: -6.75893497467041
    8. ')' → logprob: -6.88393497467041
    9. '   ' → logprob: -7.00893497467041
    10. '        
' → logprob: -7.00893497467041

Token 891: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16653244197368622
    2. '       ' → logprob: -1.9165323972702026
    3. ':' → logprob: -5.416532516479492
    4. '   ' → logprob: -7.791532516479492
    5. ',' → logprob: -8.416532516479492
    6. ')' → logprob: -8.666532516479492
    7. '):' → logprob: -8.916532516479492
    8. 'def' → logprob: -8.916532516479492
    9. ' for' → logprob: -9.041532516479492
    10. '```' → logprob: -9.291532516479492

Token 892: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04723628982901573
    2. '       ' → logprob: -3.172236204147339
    3. ':' → logprob: -6.047236442565918
    4. ')' → logprob: -7.922236442565918
    5. '            
' → logprob: -8.172236442565918
    6. '):' → logprob: -8.797236442565918
    7. '        
' → logprob: -8.922236442565918
    8. ' for' → logprob: -9.047236442565918
    9. '   ' → logprob: -9.047236442565918
    10. ',' → logprob: -9.172236442565918

Token 893: ' We' (ID: 1416)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04210158810019493
    2. '       ' → logprob: -3.2921016216278076
    3. ':' → logprob: -6.4171013832092285
    4. ' for' → logprob: -6.7921013832092285
    5. '   ' → logprob: -7.7921013832092285
    6. 'for' → logprob: -8.667101860046387
    7. '
' → logprob: -9.042101860046387
    8. '               ' → logprob: -9.042101860046387
    9. ' :' → logprob: -9.917101860046387
    10. ':
' → logprob: -10.167101860046387

Token 894: ' can' (ID: 665)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -1.1854501962661743
    2. '       ' → logprob: -1.4354501962661743
    3. '           ' → logprob: -1.5604501962661743
    4. 'continue' → logprob: -2.6854500770568848
    5. ' will' → logprob: -3.3104500770568848
    6. 'import' → logprob: -3.6854500770568848
    7. ' try' → logprob: -3.9354500770568848
    8. '   ' → logprob: -4.185450077056885
    9. ' can' → logprob: -4.310450077056885
    10. ' ' → logprob: -4.560450077056885

Token 895: ' do' (ID: 621)
  Prédit: ' use'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' use' → logprob: -0.7862981557846069
    2. 'import' → logprob: -1.911298155784607
    3. 'use' → logprob: -1.911298155784607
    4. 'maint' → logprob: -2.1612982749938965
    5. '   ' → logprob: -3.4112982749938965
    6. ' try' → logprob: -3.7862982749938965
    7. '       ' → logprob: -4.1612982749938965
    8. 'try' → logprob: -4.1612982749938965
    9. ' import' → logprob: -4.2862982749938965
    10. 'continue' → logprob: -5.0362982749938965

Token 896: ' a' (ID: 261)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.23845374584198
    2. 'import' → logprob: -1.86345374584198
    3. 'from' → logprob: -1.98845374584198
    4. '       ' → logprob: -2.1134538650512695
    5. '           ' → logprob: -2.4884538650512695
    6. 'heap' → logprob: -2.6134538650512695
    7. '[]' → logprob: -3.1134538650512695
    8. '```' → logprob: -3.2384538650512695
    9. 'for' → logprob: -4.8634538650512695
    10. '[]
' → logprob: -5.2384538650512695

Token 897: ' data' (ID: 1238)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.18384137749671936
    2. ' heap' → logprob: -2.6838414669036865
    3. ' min' → logprob: -2.9338414669036865
    4. 'min' → logprob: -3.6838414669036865
    5. 'priority' → logprob: -5.558841228485107
    6. 'binary' → logprob: -5.808841228485107
    7. 'n' → logprob: -6.308841228485107
    8. 'reverse' → logprob: -6.558841228485107
    9. '       ' → logprob: -6.683841228485107
    10. ' binary' → logprob: -6.808841228485107

Token 898: ' structure' (ID: 8866)
  Prédit: 'structure'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'structure' → logprob: -0.42891472578048706
    2. ' structure' → logprob: -1.1789147853851318
    3. 'struct' → logprob: -3.678914785385132
    4. '   ' → logprob: -5.928914546966553
    5. '_structure' → logprob: -6.303914546966553
    6. '_struct' → logprob: -6.553914546966553
    7. '       ' → logprob: -6.553914546966553
    8. '-' → logprob: -6.678914546966553
    9. 'truct' → logprob: -6.678914546966553
    10. 'tructure' → logprob: -7.053914546966553

Token 899: ' approach' (ID: 7139)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.252172589302063
    2. '           ' → logprob: -1.752172589302063
    3. ':' → logprob: -4.127172470092773
    4. '   ' → logprob: -5.127172470092773
    5. 'import' → logprob: -5.377172470092773
    6. ')' → logprob: -5.502172470092773
    7. ':
' → logprob: -6.252172470092773
    8. ' for' → logprob: -6.252172470092773
    9. ' =' → logprob: -6.377172470092773
    10. '[' → logprob: -6.752172470092773

Token 900: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5383374094963074
    2. ':' → logprob: -1.4133374691009521
    3. '           ' → logprob: -1.9133374691009521
    4. '   ' → logprob: -4.788337230682373
    5. ':
' → logprob: -5.413337230682373
    6. '
' → logprob: -6.288337230682373
    7. '):' → logprob: -6.663337230682373
    8. ')' → logprob: -6.788337230682373
    9. '        
' → logprob: -6.913337230682373
    10. ',' → logprob: -7.038337230682373

Token 901: ' pick' (ID: 5230)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5480886101722717
    2. '       ' → logprob: -0.9230886101722717
    3. '   ' → logprob: -5.048088550567627
    4. ' for' → logprob: -5.923088550567627
    5. '        
' → logprob: -6.548088550567627
    6. '
' → logprob: -6.548088550567627
    7. '            
' → logprob: -6.548088550567627
    8. '```' → logprob: -7.173088550567627
    9. 'for' → logprob: -7.298088550567627
    10. 'heap' → logprob: -7.298088550567627

Token 902: ' k' (ID: 372)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.6407099962234497
    2. ' k' → logprob: -1.6407099962234497
    3. 'k' → logprob: -1.7657099962234497
    4. ' releases' → logprob: -2.26570987701416
    5. ' microbes' → logprob: -2.51570987701416
    6. 'the' → logprob: -2.76570987701416
    7. 'micro' → logprob: -3.51570987701416
    8. '           ' → logprob: -3.76570987701416
    9. '```' → logprob: -4.01570987701416
    10. '   ' → logprob: -4.26570987701416

Token 903: ' microbes' (ID: 156044)
  Prédit: ' releases'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' releases' → logprob: -0.6059848070144653
    2. ' microbes' → logprob: -1.1059848070144653
    3. ' from' → logprob: -4.105984687805176
    4. '_micro' → logprob: -4.355984687805176
    5. ' smallest' → logprob: -4.605984687805176
    6. ' micro' → logprob: -4.605984687805176
    7. ' release' → logprob: -4.730984687805176
    8. '   ' → logprob: -4.730984687805176
    9. '_release' → logprob: -5.105984687805176
    10. '_re' → logprob: -5.105984687805176

Token 904: ' with' (ID: 483)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5241607427597046
    2. ':' → logprob: -1.3991607427597046
    3. '           ' → logprob: -2.149160861968994
    4. ':
' → logprob: -3.899160861968994
    5. '):' → logprob: -4.774160861968994
    6. '
' → logprob: -5.274160861968994
    7. '):
' → logprob: -6.024160861968994
    8. '   ' → logprob: -6.274160861968994
    9. '        
' → logprob: -6.649160861968994
    10. ' =' → logprob: -7.149160861968994

Token 905: ' minimal' (ID: 19957)
  Prédit: 'lowest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lowest' → logprob: -0.0493641272187233
    2. ' lowest' → logprob: -3.6743640899658203
    3. ' smallest' → logprob: -4.04936408996582
    4. 'small' → logprob: -5.54936408996582
    5. 'the' → logprob: -7.42436408996582
    6. 'least' → logprob: -8.54936408996582
    7. 'minimal' → logprob: -8.54936408996582
    8. ' the' → logprob: -8.67436408996582
    9. ' minimal' → logprob: -9.42436408996582
    10. 'release' → logprob: -9.67436408996582

Token 906: ' release' (ID: 8232)
  Prédit: ' release'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' release' → logprob: -0.4811156988143921
    2. 'release' → logprob: -0.9811156988143921
    3. ' releases' → logprob: -4.981115818023682
    4. '_release' → logprob: -9.356115341186523
    5. ' ' → logprob: -10.981115341186523
    6. '   ' → logprob: -11.356115341186523
    7. '```' → logprob: -11.606115341186523
    8. ' ' → logprob: -11.856115341186523
    9. 're' → logprob: -11.856115341186523
    10. '.release' → logprob: -13.481115341186523

Token 907: ' among' (ID: 6200)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09567812830209732
    2. '           ' → logprob: -3.0956780910491943
    3. ':' → logprob: -3.2206780910491943
    4. ':
' → logprob: -6.720678329467773
    5. '   ' → logprob: -6.845678329467773
    6. '        
' → logprob: -6.970678329467773
    7. '
' → logprob: -7.345678329467773
    8. '):' → logprob: -7.595678329467773
    9. ')' → logprob: -8.095678329467773
    10. 'def' → logprob: -8.595678329467773

Token 908: ' microbes' (ID: 156044)
  Prédit: ' microbes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' microbes' → logprob: -1.1006293296813965
    2. 'micro' → logprob: -1.4756293296813965
    3. 'those' → logprob: -1.6006293296813965
    4. ' those' → logprob: -2.4756293296813965
    5. 'the' → logprob: -2.9756293296813965
    6. 'all' → logprob: -3.4756293296813965
    7. ' all' → logprob: -3.7256293296813965
    8. ' the' → logprob: -3.9756293296813965
    9. 'higher' → logprob: -4.9756293296813965
    10. ' micro' → logprob: -5.7256293296813965

Token 909: ' with' (ID: 483)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4079951345920563
    2. '           ' → logprob: -1.2829951047897339
    3. ':' → logprob: -3.1579952239990234
    4. '   ' → logprob: -5.782995223999023
    5. ' =' → logprob: -5.782995223999023
    6. ' with' → logprob: -6.282995223999023
    7. ' for' → logprob: -6.657995223999023
    8. '.' → logprob: -7.407995223999023
    9. ':
' → logprob: -7.407995223999023
    10. '):' → logprob: -7.782995223999023

Token 910: ' capacity' (ID: 12241)
  Prédit: 'capacity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'capacity' → logprob: -0.1800038367509842
    2. ' capacity' → logprob: -1.8050038814544678
    3. '   ' → logprob: -9.680004119873047
    4. ' capacities' → logprob: -10.055004119873047
    5. '```' → logprob: -10.680004119873047
    6. 'cap' → logprob: -10.805004119873047
    7. 'capac' → logprob: -10.805004119873047
    8. '.capacity' → logprob: -11.180004119873047
    9. '_capacity' → logprob: -11.430004119873047
    10. '
' → logprob: -11.805004119873047

Token 911: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.14890511333942413
    2. '>=' → logprob: -2.898905038833618
    3. ')' → logprob: -4.023905277252197
    4. '       ' → logprob: -4.773905277252197
    5. '           ' → logprob: -4.898905277252197
    6. '_' → logprob: -5.023905277252197
    7. '=' → logprob: -5.023905277252197
    8. '   ' → logprob: -5.148905277252197
    9. '_sorted' → logprob: -5.148905277252197
    10. ' ' → logprob: -5.523905277252197

Token 912: ' threshold' (ID: 24313)
  Prédit: ' microbes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' microbes' → logprob: -0.46568992733955383
    2. 'micro' → logprob: -1.0906898975372314
    3. ' micro' → logprob: -4.8406901359558105
    4. ' capacity' → logprob: -5.0906901359558105
    5. 'capacity' → logprob: -5.3406901359558105
    6. ' current' → logprob: -5.3406901359558105
    7. 'current' → logprob: -5.4656901359558105
    8. 'm' → logprob: -5.7156901359558105
    9. 'b' → logprob: -6.5906901359558105
    10. '```' → logprob: -7.0906901359558105

Token 913: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.051927946507930756
    2. ':' → logprob: -3.4269280433654785
    3. '           ' → logprob: -4.3019280433654785
    4. '   ' → logprob: -7.3019280433654785
    5. '):' → logprob: -7.3019280433654785
    6. ':
' → logprob: -7.3019280433654785
    7. '        
' → logprob: -7.3019280433654785
    8. ')' → logprob: -7.8019280433654785
    9. '
' → logprob: -8.17692756652832
    10. ',' → logprob: -8.92692756652832

Token 914: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6920861601829529
    2. '           ' → logprob: -1.0670862197875977
    3. ':' → logprob: -2.1920862197875977
    4. '):' → logprob: -4.442086219787598
    5. ')' → logprob: -4.817086219787598
    6. ':
' → logprob: -4.942086219787598
    7. '   ' → logprob: -5.317086219787598
    8. '
' → logprob: -5.442086219787598
    9. '):
' → logprob: -6.567086219787598
    10. '        
' → logprob: -7.317086219787598

Token 915: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5263018608093262
    2. '       ' → logprob: -0.9013018608093262
    3. '   ' → logprob: -6.401301860809326
    4. '
' → logprob: -8.651302337646484
    5. 'return' → logprob: -8.776302337646484
    6. 'from' → logprob: -8.776302337646484
    7. 'import' → logprob: -8.901302337646484
    8. 'def' → logprob: -9.151302337646484
    9. '        
' → logprob: -9.151302337646484
    10. ' for' → logprob: -9.276302337646484

Token 916: ' More' (ID: 4633)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3209525942802429
    2. '       ' → logprob: -1.3209526538848877
    3. '
' → logprob: -6.320952415466309
    4. 'import' → logprob: -6.445952415466309
    5. '   ' → logprob: -7.195952415466309
    6. 'for' → logprob: -7.820952415466309
    7. '            
' → logprob: -7.820952415466309
    8. 'return' → logprob: -7.945952415466309
    9. 'def' → logprob: -8.070952415466309
    10. ' for' → logprob: -8.195952415466309

Token 917: ' pragmatic' (ID: 132346)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5539783239364624
    2. '           ' → logprob: -1.8039783239364624
    3. '   ' → logprob: -2.928978443145752
    4. 'import' → logprob: -3.303978443145752
    5. ' efficient' → logprob: -3.303978443145752
    6. ' =' → logprob: -4.053978443145752
    7. 'efficient' → logprob: -4.428978443145752
    8. 'from' → logprob: -4.678978443145752
    9. '...' → logprob: -4.678978443145752
    10. '=' → logprob: -4.803978443145752

Token 918: ' approach' (ID: 7139)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07105448842048645
    2. ':' → logprob: -3.821054458618164
    3. '           ' → logprob: -3.946054458618164
    4. '   ' → logprob: -4.321054458618164
    5. '
' → logprob: -5.821054458618164
    6. ' =' → logprob: -5.946054458618164
    7. 'def' → logprob: -6.071054458618164
    8. ' for' → logprob: -7.071054458618164
    9. '():' → logprob: -7.196054458618164
    10. ':
' → logprob: -7.571054458618164

Token 919: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03390628099441528
    2. '           ' → logprob: -3.6589062213897705
    3. ':' → logprob: -5.78390645980835
    4. '
' → logprob: -5.90890645980835
    5. '        
' → logprob: -6.90890645980835
    6. '   ' → logprob: -8.533905982971191
    7. 'import' → logprob: -9.158905982971191
    8. '    
' → logprob: -9.783905982971191
    9. ':
' → logprob: -9.783905982971191
    10. ',' → logprob: -9.783905982971191

Token 920: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0433628186583519
    2. '       ' → logprob: -3.168362855911255
    3. '
' → logprob: -8.168362617492676
    4. 'import' → logprob: -10.668362617492676
    5. '        
' → logprob: -11.293362617492676
    6. '   ' → logprob: -11.793362617492676
    7. '            
' → logprob: -11.918362617492676
    8. '```' → logprob: -12.043362617492676
    9. '        ' → logprob: -12.168362617492676
    10. '            ' → logprob: -12.543362617492676

Token 921: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14143520593643188
    2. '           ' → logprob: -2.891435146331787
    3. ' releases' → logprob: -4.641435146331787
    4. 'import' → logprob: -5.016435146331787
    5. 'left' → logprob: -5.016435146331787
    6. 'selected' → logprob: -5.141435146331787
    7. 'from' → logprob: -5.641435146331787
    8. '#' (adapté à ' #') → logprob: -5.641435146331787
    9. ' left' → logprob: -5.641435146331787
    10. 're' → logprob: -5.766435146331787

Token 922: ' We' (ID: 1416)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16450899839401245
    2. '           ' → logprob: -2.9145090579986572
    3. 'left' → logprob: -3.9145090579986572
    4. 'possible' → logprob: -4.539508819580078
    5. 'selected' → logprob: -4.789508819580078
    6. '#' → logprob: -4.914508819580078
    7. '   ' → logprob: -4.914508819580078
    8. 'k' → logprob: -5.539508819580078
    9. 'capacity' → logprob: -5.664508819580078
    10. ' left' → logprob: -5.789508819580078

Token 923: ' try' (ID: 2075)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4319489002227783
    2. ' try' → logprob: -1.6819489002227783
    3. '   ' → logprob: -2.6819489002227783
    4. ' continue' → logprob: -3.5569489002227783
    5. ' can' → logprob: -3.8069489002227783
    6. '    ' → logprob: -4.306948661804199
    7. ' will' → logprob: -4.806948661804199
    8. ' return' → logprob: -5.681948661804199
    9. '           ' → logprob: -5.806948661804199
    10. ' proceed' → logprob: -5.931948661804199

Token 924: ' to' (ID: 316)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6855838298797607
    2. '           ' → logprob: -2.8105838298797607
    3. 'for' → logprob: -2.8105838298797607
    4. 'mid' → logprob: -3.1855838298797607
    5. ' microbes' → logprob: -3.3105838298797607
    6. ' for' → logprob: -3.4355838298797607
    7. '       ' → logprob: -3.4355838298797607
    8. 'k' → logprob: -3.4355838298797607
    9. ' k' → logprob: -3.9355838298797607
    10. 'threshold' → logprob: -4.06058406829834

Token 925: ' pick' (ID: 5230)
  Prédit: 'select'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'select' → logprob: -0.490161657333374
    2. 'find' → logprob: -1.865161657333374
    3. 'pick' → logprob: -3.115161657333374
    4. '   ' → logprob: -3.365161657333374
    5. ' select' → logprob: -3.490161657333374
    6. 'maint' → logprob: -3.865161657333374
    7. 'left' → logprob: -3.990161657333374
    8. 'import' → logprob: -4.740161895751953
    9. 'def' → logprob: -4.740161895751953
    10. ' find' → logprob: -4.865161895751953

Token 926: ' k' (ID: 372)
  Prédit: ' microbes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' microbes' → logprob: -1.2084041833877563
    2. 'k' → logprob: -1.7084041833877563
    3. '   ' → logprob: -1.8334041833877563
    4. ' k' → logprob: -2.583404064178467
    5. 'micro' → logprob: -2.583404064178467
    6. ' the' → logprob: -3.458404064178467
    7. '           ' → logprob: -3.583404064178467
    8. 'the' → logprob: -3.833404064178467
    9. ' all' → logprob: -3.958404064178467
    10. 'all' → logprob: -4.458404064178467

Token 927: ' microbes' (ID: 156044)
  Prédit: ' microbes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' microbes' → logprob: -0.24058200418949127
    2. '_micro' → logprob: -1.86558198928833
    3. 'micro' → logprob: -3.86558198928833
    4. ' micro' → logprob: -4.61558198928833
    5. ' _' → logprob: -5.11558198928833
    6. '   ' → logprob: -5.61558198928833
    7. '_' → logprob: -5.86558198928833
    8. ' microorganisms' → logprob: -5.99058198928833
    9. ':' → logprob: -6.49058198928833
    10. ')' → logprob: -6.61558198928833

Token 928: ' that' (ID: 484)
  Prédit: ' with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' with' → logprob: -0.9566130042076111
    2. '           ' → logprob: -1.2066130638122559
    3. '       ' → logprob: -1.5816130638122559
    4. 'with' → logprob: -2.706613063812256
    5. ':' → logprob: -3.831613063812256
    6. '_sorted' → logprob: -5.456613063812256
    7. ' sorted' → logprob: -5.706613063812256
    8. ' that' → logprob: -6.581613063812256
    9. ',' → logprob: -6.706613063812256
    10. ' =' → logprob: -6.831613063812256

Token 929: ' satisfy' (ID: 35441)
  Prédit: ' have'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' have' → logprob: -0.29556286334991455
    2. 'have' → logprob: -1.4205628633499146
    3. ' can' → logprob: -5.295562744140625
    4. ' are' → logprob: -5.420562744140625
    5. ' all' → logprob: -6.295562744140625
    6. ' capacity' → logprob: -7.045562744140625
    7. ' release' → logprob: -7.670562744140625
    8. 'capacity' → logprob: -8.295562744140625
    9. 'can' → logprob: -8.795562744140625
    10. 'release' → logprob: -8.795562744140625

Token 930: ' b' (ID: 287)
  Prédit: ' capacity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' capacity' → logprob: -0.7157101035118103
    2. 'capacity' → logprob: -1.840710163116455
    3. ' microbes' → logprob: -1.840710163116455
    4. 'micro' → logprob: -2.715710163116455
    5. ' release' → logprob: -3.840710163116455
    6. ' micro' → logprob: -4.340710163116455
    7. ' releases' → logprob: -4.465710163116455
    8. 'len' → logprob: -4.465710163116455
    9. '           ' → logprob: -4.590710163116455
    10. 'm' → logprob: -4.590710163116455

Token 931: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.003669317811727524
    2. '>=' → logprob: -6.628669261932373
    3. '_' → logprob: -7.253669261932373
    4. ' >=' → logprob: -7.628669261932373
    5. ' _' → logprob: -8.503669738769531
    6. '>' → logprob: -8.628669738769531
    7. '```' → logprob: -8.628669738769531
    8. '   ' → logprob: -9.003669738769531
    9. ''_' → logprob: -9.753669738769531
    10. 'i' → logprob: -9.878669738769531

Token 932: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.15921157598495483
    2. ' *' → logprob: -2.4092116355895996
    3. '>=' → logprob: -2.9092116355895996
    4. '*' → logprob: -6.7842116355896
    5. '   ' → logprob: -7.2842116355896
    6. '           ' → logprob: -8.284211158752441
    7. '*k' → logprob: -8.409211158752441
    8. ' ' → logprob: -9.159211158752441
    9. '>' → logprob: -9.784211158752441
    10. '       ' → logprob: -10.284211158752441

Token 933: ' X' (ID: 2127)
  Prédit: 'micro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'micro' → logprob: -0.9452047348022461
    2. ' microbes' → logprob: -1.070204734802246
    3. 'k' → logprob: -1.570204734802246
    4. ' k' → logprob: -3.695204734802246
    5. ' micro' → logprob: -5.070204734802246
    6. '0' → logprob: -5.070204734802246
    7. 'threshold' → logprob: -5.195204734802246
    8. 'mic' → logprob: -5.570204734802246
    9. 'min' → logprob: -6.320204734802246
    10. '1' → logprob: -6.445204734802246

Token 934: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.13583441078662872
    2. '           ' → logprob: -2.5108344554901123
    3. '=' → logprob: -4.510834217071533
    4. ':
' → logprob: -5.135834217071533
    5. '):' → logprob: -5.260834217071533
    6. ' =' → logprob: -5.260834217071533
    7. ')' → logprob: -5.510834217071533
    8. '       ' → logprob: -6.010834217071533
    9. ',' → logprob: -6.510834217071533
    10. '.' → logprob: -6.510834217071533

Token 935: 'some' (ID: 25231)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.6720699667930603
    2. ')' → logprob: -0.7970699667930603
    3. ' k' → logprob: -5.422070026397705
    4. 'capacity' → logprob: -5.422070026397705
    5. '1' → logprob: -5.547070026397705
    6. '   ' → logprob: -5.672070026397705
    7. '           ' → logprob: -5.797070026397705
    8. '       ' → logprob: -6.172070026397705
    9. 'm' → logprob: -6.297070026397705
    10. ' )' → logprob: -6.547070026397705

Token 936: ' threshold' (ID: 24313)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.969130277633667
    2. 'threshold' → logprob: -2.094130277633667
    3. ' ' → logprob: -2.344130277633667
    4. ')' → logprob: -2.719130277633667
    5. ' threshold' → logprob: -2.719130277633667
    6. ':' → logprob: -2.719130277633667
    7. '   ' → logprob: -2.969130277633667
    8. ' _' → logprob: -2.969130277633667
    9. '
' → logprob: -3.344130277633667
    10. '_threshold' → logprob: -3.344130277633667

Token 937: ')
' (ID: 446)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9843083024024963
    2. ':' → logprob: -1.3593082427978516
    3. ')' → logprob: -1.8593082427978516
    4. '):' → logprob: -1.9843082427978516
    5. '):
' → logprob: -3.3593082427978516
    6. ':
' → logprob: -5.109308242797852
    7. '               ' → logprob: -5.234308242797852
    8. '
' → logprob: -5.359308242797852
    9. ',' → logprob: -5.734308242797852
    10. ' =' → logprob: -5.859308242797852

Token 938: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005034983158111572
    2. '       ' → logprob: -5.505034923553467
    3. '            
' → logprob: -8.255035400390625
    4. ' for' → logprob: -9.130035400390625
    5. '               ' → logprob: -9.380035400390625
    6. '   ' → logprob: -9.630035400390625
    7. ',' → logprob: -9.880035400390625
    8. '```' → logprob: -10.005035400390625
    9. ')' → logprob: -10.380035400390625
    10. 'return' → logprob: -10.630035400390625

Token 939: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005404388532042503
    2. '       ' → logprob: -5.380404472351074
    3. '            
' → logprob: -8.505404472351074
    4. ' for' → logprob: -9.130404472351074
    5. 'return' → logprob: -9.755404472351074
    6. '   ' → logprob: -9.880404472351074
    7. 'for' → logprob: -10.130404472351074
    8. '               ' → logprob: -10.255404472351074
    9. ')' → logprob: -10.380404472351074
    10. ' if' → logprob: -10.755404472351074

Token 940: ' For' (ID: 2214)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.29564446210861206
    2. '       ' → logprob: -2.420644521713257
    3. 'threshold' → logprob: -2.670644521713257
    4. '
' → logprob: -2.920644521713257
    5. '   ' → logprob: -4.420644283294678
    6. 'return' → logprob: -4.795644283294678
    7. 'if' → logprob: -5.545644283294678
    8. 'for' → logprob: -5.795644283294678
    9. ' if' → logprob: -5.920644283294678
    10. '            
' → logprob: -6.420644283294678

Token 941: ' all' (ID: 722)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -1.2058680057525635
    2. 'i' → logprob: -1.4558680057525635
    3. ' b' → logprob: -2.2058680057525635
    4. ' k' → logprob: -2.3308680057525635
    5. 'k' → logprob: -2.7058680057525635
    6. 'capacity' → logprob: -3.3308680057525635
    7. ' capacity' → logprob: -3.5808680057525635
    8. ' _' → logprob: -3.7058680057525635
    9. '_' → logprob: -3.7058680057525635
    10. 'b' → logprob: -3.9558680057525635

Token 942: ' possible' (ID: 4149)
  Prédit: 'micro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'micro' → logprob: -1.509779691696167
    2. ' microbes' → logprob: -2.009779691696167
    3. ' capacity' → logprob: -2.384779691696167
    4. 'b' → logprob: -2.384779691696167
    5. 'k' → logprob: -2.384779691696167
    6. ' k' → logprob: -2.759779691696167
    7. 'i' → logprob: -2.884779691696167
    8. 'capacity' → logprob: -3.384779691696167
    9. ' micro' → logprob: -3.384779691696167
    10. ' i' → logprob: -3.384779691696167

Token 943: ' threshold' (ID: 24313)
  Prédit: 'threshold'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'threshold' → logprob: -1.7694470882415771
    2. ' capacity' → logprob: -1.8944470882415771
    3. ' thresholds' → logprob: -1.8944470882415771
    4. ' _' → logprob: -2.269447088241577
    5. 'capacity' → logprob: -2.394447088241577
    6. 'b' → logprob: -2.519447088241577
    7. ' b' → logprob: -2.769447088241577
    8. ' capacities' → logprob: -3.019447088241577
    9. '_threshold' → logprob: -3.144447088241577
    10. ' threshold' → logprob: -3.394447088241577

Token 944: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2436397671699524
    2. '           ' → logprob: -2.3686397075653076
    3. '       ' → logprob: -3.3686397075653076
    4. '):' → logprob: -3.3686397075653076
    5. ')' → logprob: -4.368639945983887
    6. ' :' → logprob: -4.743639945983887
    7. '   ' → logprob: -5.118639945983887
    8. '=' → logprob: -5.368639945983887
    9. ' =' → logprob: -5.618639945983887
    10. ',' → logprob: -5.743639945983887

Token 945: ' try' (ID: 2075)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16291001439094543
    2. ' for' → logprob: -3.162909984588623
    3. '       ' → logprob: -3.287909984588623
    4. '               ' → logprob: -4.162909984588623
    5. ':' → logprob: -4.787909984588623
    6. ' return' → logprob: -5.037909984588623
    7. ' if' → logprob: -5.037909984588623
    8. 'for' → logprob: -5.287909984588623
    9. 'return' → logprob: -5.662909984588623
    10. '#' → logprob: -5.662909984588623

Token 946: ' selecting' (ID: 31615)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14473193883895874
    2. '       ' → logprob: -3.6447319984436035
    3. ' for' → logprob: -4.0197319984436035
    4. ':' → logprob: -4.2697319984436035
    5. ' return' → logprob: -4.2697319984436035
    6. ' None' → logprob: -4.5197319984436035
    7. 'return' → logprob: -4.6447319984436035
    8. ')' → logprob: -5.0197319984436035
    9. '   ' → logprob: -5.1447319984436035
    10. 'for' → logprob: -5.3947319984436035

Token 947: ' k' (ID: 372)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7902529835700989
    2. '       ' → logprob: -1.040252923965454
    3. ':' → logprob: -2.290252923965454
    4. ')' → logprob: -3.540252923965454
    5. '   ' → logprob: -3.790252923965454
    6. 'return' → logprob: -5.040253162384033
    7. ' return' → logprob: -5.790253162384033
    8. '):' → logprob: -5.915253162384033
    9. ' for' → logprob: -6.165253162384033
    10. '               ' → logprob: -6.290253162384033

Token 948: ' microbes' (ID: 156044)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0244176387786865
    2. '       ' → logprob: -1.2744176387786865
    3. '           ' → logprob: -1.3994176387786865
    4. '):' → logprob: -3.0244176387786865
    5. ')' → logprob: -3.1494176387786865
    6. '   ' → logprob: -4.774417877197266
    7. ':
' → logprob: -6.399417877197266
    8. '):
' → logprob: -6.524417877197266
    9. '():' → logprob: -6.899417877197266
    10. '               ' → logprob: -6.899417877197266

Token 949: ' with' (ID: 483)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.37340161204338074
    2. '           ' → logprob: -1.2484016418457031
    3. ':' → logprob: -4.123401641845703
    4. '   ' → logprob: -5.873401641845703
    5. '        
' → logprob: -6.998401641845703
    6. 'return' → logprob: -7.373401641845703
    7. 'def' → logprob: -7.623401641845703
    8. ')' → logprob: -7.623401641845703
    9. ',' → logprob: -7.873401641845703
    10. '
' → logprob: -7.998401641845703

Token 950: ' capacity' (ID: 12241)
  Prédit: 'lowest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lowest' → logprob: -0.15326429903507233
    2. 'minimal' → logprob: -2.903264284133911
    3. 'release' → logprob: -3.403264284133911
    4. 'small' → logprob: -3.653264284133911
    5. ' smallest' → logprob: -4.27826452255249
    6. ' lowest' → logprob: -5.40326452255249
    7. ' minimal' → logprob: -5.40326452255249
    8. 'the' → logprob: -6.40326452255249
    9. 'minimum' → logprob: -6.90326452255249
    10. ' release' → logprob: -7.27826452255249

Token 951: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.15286780893802643
    2. '>=' → logprob: -2.5278677940368652
    3. '_' → logprob: -3.7778677940368652
    4. ')' → logprob: -4.152867794036865
    5. '>' → logprob: -5.402867794036865
    6. ' _' → logprob: -5.527867794036865
    7. '   ' → logprob: -6.027867794036865
    8. ' >' → logprob: -6.027867794036865
    9. ' ' → logprob: -6.527867794036865
    10. '           ' → logprob: -6.902867794036865

Token 952: ' threshold' (ID: 24313)
  Prédit: 'threshold'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'threshold' → logprob: -0.5062007308006287
    2. ' threshold' → logprob: -1.0062007904052734
    3. ' microbes' → logprob: -4.006200790405273
    4. ' current' → logprob: -6.006200790405273
    5. 'micro' → logprob: -6.381200790405273
    6. 'm' → logprob: -6.756200790405273
    7. 'current' → logprob: -6.756200790405273
    8. ' b' → logprob: -7.131200790405273
    9. ' m' → logprob: -7.131200790405273
    10. 'k' → logprob: -7.256200790405273

Token 953: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3590073585510254
    2. '           ' → logprob: -1.6090073585510254
    3. ':' → logprob: -2.4840073585510254
    4. '   ' → logprob: -5.359007358551025
    5. '):' → logprob: -5.609007358551025
    6. ')' → logprob: -5.734007358551025
    7. '        
' → logprob: -6.484007358551025
    8. ':
' → logprob: -6.984007358551025
    9. '               ' → logprob: -7.984007358551025
    10. ',' → logprob: -7.984007358551025

Token 954: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008597912266850471
    2. '       ' → logprob: -5.2585978507995605
    3. ' and' → logprob: -7.5085978507995605
    4. ',' → logprob: -7.6335978507995605
    5. ':' → logprob: -7.7585978507995605
    6. '            
' → logprob: -8.133598327636719
    7. ' for' → logprob: -8.258598327636719
    8. '```' → logprob: -8.508598327636719
    9. '               ' → logprob: -8.633598327636719
    10. '.' → logprob: -9.383598327636719

Token 955: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04883953556418419
    2. '       ' → logprob: -3.173839569091797
    3. ':' → logprob: -6.673839569091797
    4. '   ' → logprob: -7.423839569091797
    5. 'return' → logprob: -7.423839569091797
    6. '               ' → logprob: -7.798839569091797
    7. '            
' → logprob: -7.923839569091797
    8. '.' → logprob: -8.298839569091797
    9. ',' → logprob: -8.298839569091797
    10. ')' → logprob: -8.298839569091797

Token 956: ' And' (ID: 1958)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02203798107802868
    2. '       ' → logprob: -4.022037982940674
    3. '
' → logprob: -6.897037982940674
    4. '#' → logprob: -7.272037982940674
    5. ' for' → logprob: -7.772037982940674
    6. '            
' → logprob: -7.772037982940674
    7. 'for' → logprob: -8.022037506103516
    8. '   ' → logprob: -8.272037506103516
    9. 'import' → logprob: -9.272037506103516
    10. 'return' → logprob: -9.397037506103516

Token 957: ' sum' (ID: 4215)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -1.3407502174377441
    2. '           ' → logprob: -1.5907502174377441
    3. ' check' → logprob: -2.340750217437744
    4. 'release' → logprob: -2.465750217437744
    5. ' return' → logprob: -2.590750217437744
    6. 'check' → logprob: -2.715750217437744
    7. ' find' → logprob: -3.340750217437744
    8. ' release' → logprob: -3.590750217437744
    9. ' see' → logprob: -3.965750217437744
    10. ' if' → logprob: -4.090750217437744

Token 958: ' releases' (ID: 30979)
  Prédit: '_release'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_release' → logprob: -0.2896968722343445
    2. '_' → logprob: -1.6646969318389893
    3. '_of' → logprob: -4.03969669342041
    4. ' of' → logprob: -4.03969669342041
    5. 'of' → logprob: -4.28969669342041
    6. 'release' → logprob: -5.16469669342041
    7. '           ' → logprob: -6.16469669342041
    8. '_return' → logprob: -6.66469669342041
    9. ' _' → logprob: -6.66469669342041
    10. '   ' → logprob: -7.03969669342041

Token 959: ' <=' (ID: 5017)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5883522033691406
    2. '           ' → logprob: -1.4633522033691406
    3. ':' → logprob: -1.9633522033691406
    4. ')' → logprob: -3.4633522033691406
    5. '):' → logprob: -3.9633522033691406
    6. '   ' → logprob: -5.213352203369141
    7. ':
' → logprob: -5.713352203369141
    8. '):
' → logprob: -5.838352203369141
    9. '
' → logprob: -6.463352203369141
    10. 'def' → logprob: -6.463352203369141

Token 960: ' threshold' (ID: 24313)
  Prédit: 'threshold'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'threshold' → logprob: -0.7888288497924805
    2. ' threshold' → logprob: -1.4138288497924805
    3. 'capacity' → logprob: -2.4138288497924805
    4. 'k' → logprob: -2.7888288497924805
    5. ' k' → logprob: -2.7888288497924805
    6. ' capacity' → logprob: -2.9138288497924805
    7. 'micro' → logprob: -4.9138288497924805
    8. 'b' → logprob: -5.2888288497924805
    9. ' total' → logprob: -5.6638288497924805
    10. ' micro' → logprob: -6.0388288497924805

Token 961: ' *' (ID: 425)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6686033606529236
    2. ')' → logprob: -1.5436034202575684
    3. '):' → logprob: -2.1686034202575684
    4. '           ' → logprob: -2.4186034202575684
    5. '       ' → logprob: -3.4186034202575684
    6. '_' → logprob: -5.043603420257568
    7. '):
' → logprob: -5.168603420257568
    8. ':
' → logprob: -5.418603420257568
    9. '   ' → logprob: -5.418603420257568
    10. '
' → logprob: -6.168603420257568

Token 962: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.007609824184328318
    2. ' k' → logprob: -4.882609844207764
    3. '	k' → logprob: -12.882609367370605
    4. '   ' → logprob: -14.757609367370605
    5. '`' → logprob: -15.257609367370605
    6. ' ' → logprob: -15.257609367370605
    7. '```' → logprob: -15.882609367370605
    8. ' к' → logprob: -17.382610321044922
    9. '           ' → logprob: -17.632610321044922
    10. ' ' → logprob: -17.632610321044922

Token 963: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6436927318572998
    2. '       ' → logprob: -1.0186927318572998
    3. ':' → logprob: -2.7686927318573
    4. '):' → logprob: -4.518692970275879
    5. '   ' → logprob: -5.018692970275879
    6. ')' → logprob: -5.018692970275879
    7. '               ' → logprob: -5.268692970275879
    8. 'return' → logprob: -5.393692970275879
    9. '```' → logprob: -5.768692970275879
    10. 'def' → logprob: -6.518692970275879

Token 964: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010288963094353676
    2. '       ' → logprob: -4.635289192199707
    3. '            
' → logprob: -8.260289192199707
    4. '        
' → logprob: -9.635289192199707
    5. ')' → logprob: -9.760289192199707
    6. '<|end|>' → logprob: -10.010289192199707
    7. '.' → logprob: -10.760289192199707
    8. '               ' → logprob: -11.635289192199707
    9. 'import' → logprob: -11.635289192199707
    10. '<|end|>' → logprob: -11.760289192199707

Token 965: ' #
' (ID: 21888)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09487906843423843
    2. '       ' → logprob: -2.469879150390625
    3. '
' → logprob: -6.719879150390625
    4. '        
' → logprob: -6.844879150390625
    5. '            
' → logprob: -6.969879150390625
    6. '   ' → logprob: -7.469879150390625
    7. 'return' → logprob: -7.844879150390625
    8. '    
' → logprob: -7.969879150390625
    9. ')' → logprob: -8.719879150390625
    10. 'def' → logprob: -8.844879150390625

Token 966: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0015030752401798964
    2. '       ' → logprob: -7.251502990722656
    3. '            
' → logprob: -7.751502990722656
    4. '
' → logprob: -8.251502990722656
    5. '        
' → logprob: -10.876502990722656
    6. '            ' → logprob: -11.126502990722656
    7. 'import' → logprob: -11.251502990722656
    8. '          ' → logprob: -11.376502990722656
    9. '<|end|>' → logprob: -12.001502990722656
    10. '               ' → logprob: -12.251502990722656

Token 967: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006903625559061766
    2. '       ' → logprob: -5.006903648376465
    3. '            
' → logprob: -9.631903648376465
    4. '               ' → logprob: -10.506903648376465
    5. '   ' → logprob: -11.131903648376465
    6. 'import' → logprob: -11.131903648376465
    7. 'return' → logprob: -11.131903648376465
    8. '
' → logprob: -11.131903648376465
    9. '          ' → logprob: -11.756903648376465
    10. '            ' → logprob: -11.881903648376465

Token 968: ' Because' (ID: 13602)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.012087751179933548
    2. 'for' → logprob: -5.387087821960449
    3. '       ' → logprob: -5.762087821960449
    4. '
' → logprob: -6.637087821960449
    5. 'return' → logprob: -6.887087821960449
    6. ' for' → logprob: -7.637087821960449
    7. '               ' → logprob: -7.762087821960449
    8. '            
' → logprob: -8.01208782196045
    9. '```' → logprob: -9.01208782196045
    10. 'if' → logprob: -9.01208782196045

Token 969: ' of' (ID: 328)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.5840315818786621
    2. ' True' → logprob: -1.584031581878662
    3. 'k' → logprob: -1.959031581878662
    4. ' microbes' → logprob: -3.709031581878662
    5. ' not' → logprob: -4.209031581878662
    6. 'len' → logprob: -4.459031581878662
    7. 'True' → logprob: -4.834031581878662
    8. ' len' → logprob: -5.084031581878662
    9. ' capacity' → logprob: -5.209031581878662
    10. ' threshold' → logprob: -5.459031581878662

Token 970: ' constraints' (ID: 31060)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.8038095831871033
    2. 'the' → logprob: -1.428809642791748
    3. ' k' → logprob: -1.678809642791748
    4. ' constraints' → logprob: -3.303809642791748
    5. ' indentation' → logprob: -3.553809642791748
    6. 'k' → logprob: -4.553809642791748
    7. ' space' → logprob: -5.553809642791748
    8. ' time' → logprob: -5.553809642791748
    9. ' constraint' → logprob: -5.678809642791748
    10. ' range' → logprob: -5.678809642791748

Token 971: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.19072042405605316
    2. '       ' → logprob: -2.565720319747925
    3. '           ' → logprob: -2.815720319747925
    4. '):' → logprob: -4.315720558166504
    5. ')' → logprob: -5.065720558166504
    6. ':
' → logprob: -5.190720558166504
    7. '   ' → logprob: -5.940720558166504
    8. ',' → logprob: -6.315720558166504
    9. '
' → logprob: -6.440720558166504
    10. ':return' → logprob: -6.815720558166504

Token 972: ' we' (ID: 581)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.18548467755317688
    2. ' return' → logprob: -2.6854846477508545
    3. 'return' → logprob: -3.3104846477508545
    4. '       ' → logprob: -3.4354846477508545
    5. '               ' → logprob: -4.310484886169434
    6. ')' → logprob: -5.560484886169434
    7. ':' → logprob: -6.310484886169434
    8. ' if' → logprob: -6.435484886169434
    9. '            ' → logprob: -6.560484886169434
    10. '   ' → logprob: -6.560484886169434

Token 973: ' simulate' (ID: 66687)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.1807610988616943
    2. ' continue' → logprob: -1.8057610988616943
    3. '       ' → logprob: -2.1807610988616943
    4. 'continue' → logprob: -2.1807610988616943
    5. 'import' → logprob: -2.9307610988616943
    6. ' return' → logprob: -3.0557610988616943
    7. '
' → logprob: -3.5557610988616943
    8. '#' → logprob: -3.5557610988616943
    9. 'return' → logprob: -3.6807610988616943
    10. '   ' → logprob: -3.6807610988616943

Token 974: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3206213414669037
    2. '       ' → logprob: -1.570621371269226
    3. ':' → logprob: -3.3206212520599365
    4. '               ' → logprob: -4.820621490478516
    5. '            
' → logprob: -5.945621490478516
    6. '   ' → logprob: -6.070621490478516
    7. ')' → logprob: -6.070621490478516
    8. '        
' → logprob: -6.445621490478516
    9. '
' → logprob: -6.570621490478516
    10. '        ' → logprob: -6.695621490478516

Token 975: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0020090530160814524
    2. '            
' → logprob: -7.50200891494751
    3. '       ' → logprob: -7.75200891494751
    4. '
' → logprob: -8.002009391784668
    5. '```' → logprob: -8.752009391784668
    6. '            ' → logprob: -9.002009391784668
    7. ' for' → logprob: -9.252009391784668
    8. '               ' → logprob: -9.502009391784668
    9. ',' → logprob: -9.752009391784668
    10. '        
' → logprob: -10.877009391784668

Token 976: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.013177643530070782
    2. '       ' → logprob: -4.888177871704102
    3. '               ' → logprob: -6.263177871704102
    4. 'import' → logprob: -7.138177871704102
    5. ' for' → logprob: -8.013177871704102
    6. 'for' → logprob: -8.138177871704102
    7. ' if' → logprob: -8.263177871704102
    8. 'from' → logprob: -8.513177871704102
    9. 'threshold' → logprob: -8.638177871704102
    10. '```' → logprob: -8.638177871704102

Token 977: ' Sort' (ID: 25945)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.34663861989974976
    2. '       ' → logprob: -1.3466386795043945
    3. ' if' → logprob: -5.7216386795043945
    4. 'if' → logprob: -6.0966386795043945
    5. 'for' → logprob: -6.0966386795043945
    6. ' for' → logprob: -6.2216386795043945
    7. 'threshold' → logprob: -6.2216386795043945
    8. '   ' → logprob: -6.4716386795043945
    9. 'selected' → logprob: -6.4716386795043945
    10. 'import' → logprob: -6.4716386795043945

Token 978: ' all' (ID: 722)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.8842936158180237
    2. 'micro' → logprob: -1.134293556213379
    3. ' microbes' → logprob: -2.634293556213379
    4. '_micro' → logprob: -2.634293556213379
    5. 'by' → logprob: -3.134293556213379
    6. '_' → logprob: -4.759293556213379
    7. ' by' → logprob: -4.759293556213379
    8. '_m' → logprob: -5.009293556213379
    9. 'm' → logprob: -5.259293556213379
    10. '=' → logprob: -5.384293556213379

Token 979: ' microbes' (ID: 156044)
  Prédit: 'micro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'micro' → logprob: -0.8966525793075562
    2. '(m' → logprob: -1.0216525793075562
    3. '_micro' → logprob: -1.8966525793075562
    4. ' microbes' → logprob: -2.8966526985168457
    5. '_m' → logprob: -5.271652698516846
    6. 'by' → logprob: -5.396652698516846
    7. 'm' → logprob: -5.521652698516846
    8. '(' → logprob: -6.271652698516846
    9. ' by' → logprob: -6.521652698516846
    10. '_' → logprob: -6.521652698516846

Token 980: ' by' (ID: 656)
  Prédit: '_sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sorted' → logprob: -0.2722586989402771
    2. '       ' → logprob: -1.6472587585449219
    3. ' by' → logprob: -5.147258758544922
    4. 'by' → logprob: -5.272258758544922
    5. '           ' → logprob: -5.522258758544922
    6. ')' → logprob: -5.522258758544922
    7. ':
' → logprob: -5.647258758544922
    8. '[::-' → logprob: -5.772258758544922
    9. '[' → logprob: -5.897258758544922
    10. ':' → logprob: -6.147258758544922

Token 981: ' capacity' (ID: 12241)
  Prédit: 'capacity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'capacity' → logprob: -0.12362998723983765
    2. ' capacity' → logprob: -2.7486300468444824
    3. 'release' → logprob: -2.9986300468444824
    4. ' release' → logprob: -6.123630046844482
    5. '-release' → logprob: -10.123629570007324
    6. '   ' → logprob: -10.311129570007324
    7. 'cap' → logprob: -11.061129570007324
    8. 'b' → logprob: -11.123629570007324
    9. 'capac' → logprob: -11.373629570007324
    10. '-' → logprob: -11.436129570007324

Token 982: ' ascending' (ID: 75564)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8532324433326721
    2. ':
' → logprob: -1.4782323837280273
    3. '       ' → logprob: -1.9782323837280273
    4. '           ' → logprob: -2.7282323837280273
    5. '
' → logprob: -3.3532323837280273
    6. '[' → logprob: -3.6032323837280273
    7. ')' → logprob: -4.353232383728027
    8. '):
' → logprob: -4.478232383728027
    9. '):' → logprob: -4.603232383728027
    10. '   ' → logprob: -4.603232383728027

Token 983: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22588463127613068
    2. ':' → logprob: -2.2258846759796143
    3. '
' → logprob: -3.7258846759796143
    4. '           ' → logprob: -3.7258846759796143
    5. ':
' → logprob: -4.475884437561035
    6. '):' → logprob: -5.225884437561035
    7. '        
' → logprob: -5.225884437561035
    8. ',' → logprob: -5.350884437561035
    9. ')' → logprob: -5.350884437561035
    10. '):
' → logprob: -6.100884437561035

Token 984: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.017278024926781654
    2. '       ' → logprob: -4.26727819442749
    3. '
' → logprob: -6.39227819442749
    4. '            
' → logprob: -7.51727819442749
    5. '        
' → logprob: -8.392277717590332
    6. ' for' → logprob: -9.017277717590332
    7. ',' → logprob: -9.517277717590332
    8. '   ' → logprob: -9.642277717590332
    9. '<|end|>' → logprob: -9.892277717590332
    10. '    
' → logprob: -9.892277717590332

Token 985: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08276708424091339
    2. '       ' → logprob: -2.5827670097351074
    3. '   ' → logprob: -7.582767009735107
    4. 'for' → logprob: -8.082767486572266
    5. ',' → logprob: -8.207767486572266
    6. ' for' → logprob: -8.207767486572266
    7. 'threshold' → logprob: -8.207767486572266
    8. '            
' → logprob: -8.332767486572266
    9. 'left' → logprob: -8.707767486572266
    10. 'capacity' → logprob: -8.707767486572266

Token 986: ' For' (ID: 2214)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7295958399772644
    2. '           ' → logprob: -1.8545958995819092
    3. ' lo' → logprob: -2.604595899581909
    4. ' left' → logprob: -3.354595899581909
    5. ' for' → logprob: -3.479595899581909
    6. 'low' → logprob: -3.604595899581909
    7. 'left' → logprob: -3.729595899581909
    8. ' low' → logprob: -3.979595899581909
    9. ' from' → logprob: -4.22959566116333
    10. 'right' → logprob: -4.22959566116333

Token 987: ' largest' (ID: 10574)
  Prédit: 'capacity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'capacity' → logprob: -1.0334917306900024
    2. 'i' → logprob: -1.5334917306900024
    3. 'k' → logprob: -1.9084917306900024
    4. ' capacity' → logprob: -2.283491611480713
    5. ' i' → logprob: -3.283491611480713
    6. 'cap' → logprob: -3.658491611480713
    7. 'threshold' → logprob: -4.033491611480713
    8. ' k' → logprob: -4.033491611480713
    9. 'c' → logprob: -4.408491611480713
    10. 'micro' → logprob: -4.658491611480713

Token 988: ' capacity' (ID: 12241)
  Prédit: 'capacity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'capacity' → logprob: -0.3424510359764099
    2. ' capacity' → logprob: -1.3424510955810547
    3. '_capacity' → logprob: -4.342451095581055
    4. 'micro' → logprob: -5.842451095581055
    5. 'cap' → logprob: -6.092451095581055
    6. 'index' → logprob: -6.217451095581055
    7. ' index' → logprob: -6.592451095581055
    8. '-cap' → logprob: -6.842451095581055
    9. 'threshold' → logprob: -7.342451095581055
    10. '-' → logprob: -7.467451095581055

Token 989: ' assigned' (ID: 21482)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.5376371145248413
    2. ',' → logprob: -2.037637233734131
    3. '_sorted' → logprob: -2.787637233734131
    4. ' in' → logprob: -2.912637233734131
    5. ')' → logprob: -3.037637233734131
    6. '_index' → logprob: -3.162637233734131
    7. '+' → logprob: -3.537637233734131
    8. '_micro' → logprob: -3.537637233734131
    9. ']' → logprob: -3.787637233734131
    10. 'descending' → logprob: -3.912637233734131

Token 990: ' to' (ID: 316)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9135215282440186
    2. ':
' → logprob: -2.2885215282440186
    3. '       ' → logprob: -2.5385215282440186
    4. '   ' → logprob: -2.9135215282440186
    5. ' -' → logprob: -3.1635215282440186
    6. '):
' → logprob: -3.5385215282440186
    7. ']' → logprob: -3.6635215282440186
    8. ' ' → logprob: -3.6635215282440186
    9. '           ' → logprob: -3.6635215282440186
    10. '-' → logprob: -3.9135215282440186

Token 991: ' the' (ID: 290)
  Prédit: 'micro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'micro' → logprob: -1.1955909729003906
    2. 'the' → logprob: -2.0705909729003906
    3. ' microbes' → logprob: -2.0705909729003906
    4. 'each' → logprob: -2.5705909729003906
    5. 'sur' → logprob: -2.8205909729003906
    6. 'index' → logprob: -2.9455909729003906
    7. 'selected' → logprob: -2.9455909729003906
    8. 'i' → logprob: -3.8205909729003906
    9. ' the' → logprob: -3.8205909729003906
    10. 'k' → logprob: -4.320590972900391

Token 992: ' k' (ID: 372)
  Prédit: 'micro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'micro' → logprob: -0.6593990921974182
    2. ' microbes' → logprob: -1.4093990325927734
    3. 'k' → logprob: -3.0343990325927734
    4. 'selected' → logprob: -3.6593990325927734
    5. 'right' → logprob: -3.6593990325927734
    6. 'current' → logprob: -4.034399032592773
    7. ' current' → logprob: -4.409399032592773
    8. ' micro' → logprob: -4.534399032592773
    9. 'i' → logprob: -4.534399032592773
    10. ' selected' → logprob: -4.534399032592773

Token 993: '-th' (ID: 14928)
  Prédit: ' microbes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' microbes' → logprob: -0.7872495651245117
    2. '-' → logprob: -2.1622495651245117
    3. ' -' → logprob: -2.2872495651245117
    4. ' _' → logprob: -2.4122495651245117
    5. '_micro' → logprob: -2.4122495651245117
    6. '_' → logprob: -3.0372495651245117
    7. '_m' → logprob: -4.162249565124512
    8. ']' → logprob: -4.287249565124512
    9. 'micro' → logprob: -4.537249565124512
    10. ' ' → logprob: -4.662249565124512

Token 994: ' micro' (ID: 10449)
  Prédit: '_micro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_micro' → logprob: -0.6936907172203064
    2. 'micro' → logprob: -1.6936907768249512
    3. ' -' → logprob: -2.568690776824951
    4. '-' → logprob: -2.818690776824951
    5. ' micro' → logprob: -3.068690776824951
    6. '_m' → logprob: -3.443690776824951
    7. ' _' → logprob: -3.693690776824951
    8. '`' → logprob: -4.443690776824951
    9. '_index' → logprob: -4.943690776824951
    10. '_' → logprob: -4.943690776824951

Token 995: 'be' (ID: 1464)
  Prédit: 'be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'be' → logprob: -0.09348685294389725
    2. 'bes' → logprob: -2.593486785888672
    3. 'b' → logprob: -5.343486785888672
    4. '   ' → logprob: -6.593486785888672
    5. ')' → logprob: -6.843486785888672
    6. '=' → logprob: -7.218486785888672
    7. 'obe' → logprob: -7.718486785888672
    8. '
' → logprob: -7.843486785888672
    9. '[
' → logprob: -7.843486785888672
    10. '       ' → logprob: -8.093486785888672

Token 996: ' in' (ID: 306)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4133870005607605
    2. '):' → logprob: -2.5383870601654053
    3. '       ' → logprob: -3.0383870601654053
    4. '           ' → logprob: -3.1633870601654053
    5. ']' → logprob: -3.4133870601654053
    6. ']:' → logprob: -3.6633870601654053
    7. ':
' → logprob: -3.6633870601654053
    8. ')' → logprob: -3.9133870601654053
    9. '[' → logprob: -4.288386821746826
    10. '   ' → logprob: -4.538386821746826

Token 997: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.5474024415016174
    2. 'micro' → logprob: -1.4224023818969727
    3. ' microbes' → logprob: -2.0474023818969727
    4. ' the' → logprob: -3.2974023818969727
    5. 'sorted' → logprob: -5.047402381896973
    6. 'reverse' → logprob: -5.672402381896973
    7. 'descending' → logprob: -6.797402381896973
    8. 'mic' → logprob: -7.297402381896973
    9. 'a' → logprob: -7.797402381896973
    10. ' micro' → logprob: -8.297402381896973

Token 998: ' selected' (ID: 6386)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.4832887351512909
    2. 'micro' → logprob: -1.3582887649536133
    3. 'list' → logprob: -2.2332887649536133
    4. ' list' → logprob: -5.483288764953613
    5. ' microbes' → logprob: -5.983288764953613
    6. 'array' → logprob: -5.983288764953613
    7. 'selected' → logprob: -6.108288764953613
    8. 'subset' → logprob: -6.233288764953613
    9. 'selection' → logprob: -6.483288764953613
    10. 'filtered' → logprob: -7.233288764953613

Token 999: ' group' (ID: 3566)
  Prédit: '_sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sorted' → logprob: -0.7576276659965515
    2. '_' → logprob: -0.8826276659965515
    3. 's' → logprob: -3.0076277256011963
    4. ' _' → logprob: -4.007627487182617
    5. '_micro' → logprob: -4.257627487182617
    6. '_set' → logprob: -4.257627487182617
    7. '_list' → logprob: -5.132627487182617
    8. 'micro' → logprob: -5.382627487182617
    9. ' microbes' → logprob: -6.382627487182617
    10. '_m' → logprob: -6.632627487182617

Token 1000: ',
' (ID: 412)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1638628989458084
    2. '           ' → logprob: -2.038862943649292
    3. ':' → logprob: -4.163862705230713
    4. '        
' → logprob: -6.788862705230713
    5. '):' → logprob: -7.538862705230713
    6. ')' → logprob: -7.538862705230713
    7. ',' → logprob: -7.663862705230713
    8. ':
' → logprob: -7.913862705230713
    9. '               ' → logprob: -8.163863182067871
    10. '   ' → logprob: -8.163863182067871

Token 1001: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.039897624403238297
    2. '               ' → logprob: -4.289897441864014
    3. '       ' → logprob: -4.414897441864014
    4. ' for' → logprob: -4.664897441864014
    5. ' ' → logprob: -7.539897441864014
    6. '#' → logprob: -7.914897441864014
    7. 'for' → logprob: -8.039897918701172
    8. '   ' → logprob: -8.164897918701172
    9. ' return' → logprob: -8.164897918701172
    10. '                   ' → logprob: -8.289897918701172

Token 1002: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2351485937833786
    2. '       ' → logprob: -2.4851486682891846
    3. '#' (adapté à ' #') → logprob: -2.9851486682891846
    4. ' for' → logprob: -3.3601486682891846
    5. '               ' → logprob: -4.2351484298706055
    6. ' we' → logprob: -4.9851484298706055
    7. ' #' → logprob: -5.3601484298706055
    8. 'for' → logprob: -5.4851484298706055
    9. '   ' → logprob: -6.1101484298706055
    10. '                   ' → logprob: -7.1101484298706055

Token 1003: ' sum' (ID: 4215)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.22809620201587677
    2. '       ' → logprob: -2.6030962467193604
    3. '#' → logprob: -3.3530962467193604
    4. ' for' → logprob: -3.9780962467193604
    5. '   ' → logprob: -4.728096008300781
    6. 'micro' → logprob: -4.728096008300781
    7. ' #' → logprob: -4.978096008300781
    8. ' we' → logprob: -5.353096008300781
    9. 'for' → logprob: -5.728096008300781
    10. ' if' → logprob: -5.728096008300781

Token 1004: ' of' (ID: 328)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.18791058659553528
    2. '_release' → logprob: -1.812910556793213
    3. 'release' → logprob: -6.562910556793213
    4. '_
' → logprob: -7.187910556793213
    5. 'of' → logprob: -7.312910556793213
    6. ' _' → logprob: -7.312910556793213
    7. '_of' → logprob: -7.437910556793213
    8. '           ' → logprob: -7.937910556793213
    9. '_re' → logprob: -7.937910556793213
    10. '   ' → logprob: -8.062911033630371

Token 1005: ' their' (ID: 1043)
  Prédit: 'release'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'release' → logprob: -0.523945689201355
    2. 're' → logprob: -1.523945689201355
    3. ' releases' → logprob: -2.0239458084106445
    4. ' release' → logprob: -2.8989458084106445
    5. '   ' → logprob: -6.7739458084106445
    6. 'selected' → logprob: -8.023945808410645
    7. '```' → logprob: -8.273945808410645
    8. 'micro' → logprob: -8.898945808410645
    9. ' selected' → logprob: -9.148945808410645
    10. 'the' → logprob: -9.273945808410645

Token 1006: ' releases' (ID: 30979)
  Prédit: 'release'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'release' → logprob: -0.20112082362174988
    2. ' release' → logprob: -2.9511208534240723
    3. ' releases' → logprob: -3.0761208534240723
    4. '_release' → logprob: -3.2011208534240723
    5. '.release' → logprob: -4.076120853424072
    6. 're' → logprob: -4.326120853424072
    7. '_re' → logprob: -5.451120853424072
    8. 'capacity' → logprob: -6.076120853424072
    9. '   ' → logprob: -6.451120853424072
    10. '[' → logprob: -7.076120853424072

Token 1007: ' must' (ID: 2804)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8746616244316101
    2. '           ' → logprob: -1.4996616840362549
    3. '):' → logprob: -1.8746616840362549
    4. '       ' → logprob: -2.124661684036255
    5. ')' → logprob: -3.249661684036255
    6. '   ' → logprob: -4.749661445617676
    7. ',' → logprob: -5.374661445617676
    8. '[' → logprob: -5.374661445617676
    9. '
' → logprob: -5.374661445617676
    10. '               ' → logprob: -5.999661445617676

Token 1008: ' <=' (ID: 5017)
  Prédit: ' be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.22997897863388062
    2. 'be' → logprob: -1.7299790382385254
    3. '<=' → logprob: -4.729979038238525
    4. 'not' → logprob: -4.854979038238525
    5. ' not' → logprob: -5.104979038238525
    6. ' <=' → logprob: -5.229979038238525
    7. '```' → logprob: -10.354978561401367
    8. 'n't' → logprob: -10.854978561401367
    9. '_be' → logprob: -11.354978561401367
    10. 'remain' → logprob: -11.604978561401367

Token 1009: ' capacity' (ID: 12241)
  Prédit: ' microbes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' microbes' → logprob: -0.716555655002594
    2. 'micro' → logprob: -1.2165555953979492
    3. ' capacity' → logprob: -2.091555595397949
    4. ' micro' → logprob: -3.216555595397949
    5. 'capacity' → logprob: -3.966555595397949
    6. ' threshold' → logprob: -4.216555595397949
    7. 'threshold' → logprob: -4.466555595397949
    8. ' b' → logprob: -6.716555595397949
    9. 'm' → logprob: -6.716555595397949
    10. 'mic' → logprob: -6.841555595397949

Token 1010: ' *' (ID: 425)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.372945636510849
    2. '           ' → logprob: -1.2479456663131714
    3. ':' → logprob: -4.122945785522461
    4. '               ' → logprob: -5.997945785522461
    5. '):' → logprob: -6.247945785522461
    6. ')' → logprob: -7.122945785522461
    7. ':
' → logprob: -7.247945785522461
    8. '        
' → logprob: -7.872945785522461
    9. '                   ' → logprob: -8.497945785522461
    10. '   ' → logprob: -8.497945785522461

Token 1011: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.023246407508850098
    2. ' k' → logprob: -3.7732462882995605
    3. '
' → logprob: -15.023246765136719
    4. '	k' → logprob: -15.523246765136719
    5. '```' → logprob: -16.02324676513672
    6. ' ' → logprob: -16.27324676513672
    7. '           ' → logprob: -17.14824676513672
    8. '   ' → logprob: -17.27324676513672
    9. '`' → logprob: -17.77324676513672
    10. '``' → logprob: -18.39824676513672

Token 1012: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10787342488765717
    2. '           ' → logprob: -3.1078734397888184
    3. ':' → logprob: -3.9828734397888184
    4. '
' → logprob: -4.107873439788818
    5. '        
' → logprob: -5.107873439788818
    6. '):' → logprob: -5.607873439788818
    7. ')' → logprob: -5.857873439788818
    8. '   ' → logprob: -6.107873439788818
    9. ':
' → logprob: -6.982873439788818
    10. '\n' → logprob: -7.107873439788818

Token 1013: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005885183811187744
    2. '       ' → logprob: -5.880885124206543
    3. '
' → logprob: -6.130885124206543
    4. '            
' → logprob: -7.380885124206543
    5. '        
' → logprob: -8.880885124206543
    6. '               ' → logprob: -9.880885124206543
    7. '\n' → logprob: -10.880885124206543
    8. '    
' → logprob: -11.005885124206543
    9. ',' → logprob: -11.380885124206543
    10. '```' → logprob: -11.880885124206543

Token 1014: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.25391194224357605
    2. '       ' → logprob: -1.5039119720458984
    3. 'from' → logprob: -7.503911972045898
    4. '
' → logprob: -8.128911972045898
    5. '   ' → logprob: -8.128911972045898
    6. 'import' → logprob: -9.128911972045898
    7. 'def' → logprob: -9.253911972045898
    8. 'for' → logprob: -9.628911972045898
    9. 'k' → logprob: -9.753911972045898
    10. '            
' → logprob: -9.753911972045898

Token 1015: ' Binary' (ID: 32672)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3287327289581299
    2. '       ' → logprob: -1.7037327289581299
    3. 'i' → logprob: -3.95373272895813
    4. '#' → logprob: -4.578732490539551
    5. 'if' → logprob: -4.578732490539551
    6. 'capacity' → logprob: -4.703732490539551
    7. 'left' → logprob: -5.078732490539551
    8. 'selected' → logprob: -5.203732490539551
    9. 'mid' → logprob: -5.453732490539551
    10. 'for' → logprob: -5.578732490539551

Token 1016: ' search' (ID: 3684)
  Prédit: '_search'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_search' → logprob: -0.33875584602355957
    2. ' search' → logprob: -1.7137558460235596
    3. 'search' → logprob: -2.5887558460235596
    4. '_' → logprob: -3.7137558460235596
    5. ' _' → logprob: -5.5887556076049805
    6. '
' → logprob: -6.4637556076049805
    7. ')' → logprob: -6.5887556076049805
    8. 'Search' → logprob: -8.08875560760498
    9. '       ' → logprob: -8.71375560760498
    10. '   ' → logprob: -8.96375560760498

Token 1017: ' on' (ID: 402)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04816166311502457
    2. '           ' → logprob: -4.173161506652832
    3. '   ' → logprob: -4.673161506652832
    4. ')' → logprob: -5.298161506652832
    5. ':' → logprob: -5.548161506652832
    6. ':
' → logprob: -5.548161506652832
    7. '
' → logprob: -6.923161506652832
    8. ' =' → logprob: -7.048161506652832
    9. '(' → logprob: -7.423161506652832
    10. '=' → logprob: -7.423161506652832

Token 1018: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.239791989326477
    2. 'capacity' → logprob: -1.364791989326477
    3. ' capacity' → logprob: -1.614791989326477
    4. 'right' → logprob: -2.8647918701171875
    5. ' k' → logprob: -2.9897918701171875
    6. 'left' → logprob: -2.9897918701171875
    7. ' left' → logprob: -3.4897918701171875
    8. 'mid' → logprob: -3.8647918701171875
    9. ' right' → logprob: -4.2397918701171875
    10. 'threshold' → logprob: -4.7397918701171875

Token 1019: ' tries' (ID: 30519)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2824760377407074
    2. '       ' → logprob: -2.2824759483337402
    3. ':
' → logprob: -2.7824759483337402
    4. ')' → logprob: -3.4074759483337402
    5. '
' → logprob: -4.15747594833374
    6. '   ' → logprob: -4.78247594833374
    7. '           ' → logprob: -4.90747594833374
    8. '\n' → logprob: -5.28247594833374
    9. '):' → logprob: -5.40747594833374
    10. '):
' → logprob: -6.65747594833374

Token 1020: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09816333651542664
    2. ':' → logprob: -2.848163366317749
    3. '   ' → logprob: -4.09816312789917
    4. '           ' → logprob: -4.34816312789917
    5. ':
' → logprob: -6.59816312789917
    6. '
' → logprob: -7.22316312789917
    7. '        
' → logprob: -7.47316312789917
    8. '               ' → logprob: -7.59816312789917
    9. ')' → logprob: -7.72316312789917
    10. '\n' → logprob: -8.098163604736328

Token 1021: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3185558021068573
    2. '       ' → logprob: -1.3185558319091797
    3. ' for' → logprob: -6.44355583190918
    4. '
' → logprob: -7.31855583190918
    5. '   ' → logprob: -7.81855583190918
    6. 'left' → logprob: -7.81855583190918
    7. ' left' → logprob: -7.94355583190918
    8. ' if' → logprob: -8.19355583190918
    9. '            
' → logprob: -8.81855583190918
    10. ')' → logprob: -8.81855583190918

Token 1022: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19303570687770844
    2. '           ' → logprob: -1.9430357217788696
    3. 'left' → logprob: -4.19303560256958
    4. '
' → logprob: -5.19303560256958
    5. 'while' → logprob: -5.94303560256958
    6. 'if' → logprob: -6.19303560256958
    7. '   ' → logprob: -6.44303560256958
    8. 'for' → logprob: -6.81803560256958
    9. ' left' → logprob: -7.06803560256958
    10. 'mid' → logprob: -7.31803560256958

Token 1023: ' For' (ID: 2214)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12767070531845093
    2. '           ' → logprob: -3.0026707649230957
    3. 'while' → logprob: -3.0026707649230957
    4. ' while' → logprob: -4.752670764923096
    5. '   ' → logprob: -5.877670764923096
    6. 'if' → logprob: -6.127670764923096
    7. ' if' → logprob: -6.377670764923096
    8. 'left' → logprob: -6.627670764923096
    9. '
' → logprob: -6.877670764923096
    10. 'right' → logprob: -7.252670764923096

Token 1024: ' each' (ID: 2454)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mid' → logprob: -1.4821208715438843
    2. 'k' → logprob: -2.232120990753174
    3. ' k' → logprob: -2.232120990753174
    4. 'capacity' → logprob: -2.357120990753174
    5. ' capacity' → logprob: -2.482120990753174
    6. 'micro' → logprob: -2.482120990753174
    7. ' mid' → logprob: -2.732120990753174
    8. 'm' → logprob: -3.232120990753174
    9. 'cap' → logprob: -3.232120990753174
    10. ' m' → logprob: -3.607120990753174

Token 1025: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.3820953965187073
    2. 'k' → logprob: -1.6320953369140625
    3. ' micro' → logprob: -3.3820953369140625
    4. 'micro' → logprob: -3.3820953369140625
    5. ' capacity' → logprob: -4.1320953369140625
    6. ' i' → logprob: -5.6320953369140625
    7. ' step' → logprob: -5.7570953369140625
    8. 'capacity' → logprob: -5.8820953369140625
    9. ' for' → logprob: -6.2570953369140625
    10. ' in' → logprob: -6.2570953369140625

Token 1026: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14625370502471924
    2. ':
' → logprob: -2.8962535858154297
    3. '       ' → logprob: -3.1462535858154297
    4. '           ' → logprob: -3.5212535858154297
    5. ',' → logprob: -5.52125358581543
    6. '   ' → logprob: -7.14625358581543
    7. '):' → logprob: -7.27125358581543
    8. ' in' → logprob: -7.39625358581543
    9. ' :' → logprob: -8.14625358581543
    10. '=' → logprob: -8.39625358581543

Token 1027: ' from' (ID: 591)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.8027539253234863
    2. ' left' → logprob: -2.0527539253234863
    3. ' releases' → logprob: -2.4277539253234863
    4. 'left' → logprob: -2.6777539253234863
    5. '       ' → logprob: -2.6777539253234863
    6. ' selected' → logprob: -2.8027539253234863
    7. 'min' → logprob: -3.1777539253234863
    8. 'selected' → logprob: -3.3027539253234863
    9. 'low' → logprob: -3.3027539253234863
    10. ' low' → logprob: -3.3027539253234863

Token 1028: ' microbes' (ID: 156044)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.9119749665260315
    2. 'right' → logprob: -2.0369749069213867
    3. 'k' → logprob: -2.4119749069213867
    4. 'the' → logprob: -2.5369749069213867
    5. 'len' → logprob: -2.6619749069213867
    6. 'i' → logprob: -3.4119749069213867
    7. '1' → logprob: -3.5369749069213867
    8. 'N' → logprob: -3.6619749069213867
    9. 'micro' → logprob: -4.036974906921387
    10. 'capacity' → logprob: -4.161974906921387

Token 1029: ' sorted' (ID: 20099)
  Prédit: '_sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sorted' → logprob: -0.0009337326046079397
    2. '       ' → logprob: -8.750933647155762
    3. '   ' → logprob: -9.000933647155762
    4. 'sorted' → logprob: -9.000933647155762
    5. '```' → logprob: -9.500933647155762
    6. 'Sorted' → logprob: -9.750933647155762
    7. ':' → logprob: -9.875933647155762
    8. '           ' → logprob: -10.125933647155762
    9. ',' → logprob: -10.250933647155762
    10. '[' → logprob: -10.375933647155762

Token 1030: ' by' (ID: 656)
  Prédit: 'by'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'by' → logprob: -0.7839430570602417
    2. '_sorted' → logprob: -0.9089430570602417
    3. '_by' → logprob: -3.4089431762695312
    4. '[' → logprob: -3.6589431762695312
    5. ' by' → logprob: -3.7839431762695312
    6. '_' → logprob: -4.158943176269531
    7. '[
' → logprob: -4.658943176269531
    8. '   ' → logprob: -5.033943176269531
    9. ',' → logprob: -5.158943176269531
    10. '[:' → logprob: -5.658943176269531

Token 1031: ' capacity' (ID: 12241)
  Prédit: 'capacity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'capacity' → logprob: -0.00015347852604463696
    2. ' capacity' → logprob: -9.250153541564941
    3. 'release' → logprob: -10.250153541564941
    4. 'cap' → logprob: -12.500153541564941
    5. 'index' → logprob: -12.875153541564941
    6. 'b' → logprob: -13.250153541564941
    7. 'lambda' → logprob: -13.375153541564941
    8. '.capacity' → logprob: -13.375153541564941
    9. 'capac' → logprob: -13.500153541564941
    10. 'ascending' → logprob: -13.625153541564941

Token 1032: ' descending' (ID: 89489)
  Prédit: '_sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sorted' → logprob: -0.5410881042480469
    2. '[i' → logprob: -2.666088104248047
    3. ',' → logprob: -3.291088104248047
    4. '       ' → logprob: -3.291088104248047
    5. '):
' → logprob: -3.666088104248047
    6. ':
' → logprob: -3.666088104248047
    7. 'ascending' → logprob: -3.666088104248047
    8. '[' → logprob: -3.791088104248047
    9. '[::-' → logprob: -3.791088104248047
    10. ':' → logprob: -3.916088104248047

Token 1033: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.40988731384277344
    2. ':
' → logprob: -2.2848873138427734
    3. '[::-' → logprob: -2.6598873138427734
    4. '[' → logprob: -3.4098873138427734
    5. '       ' → logprob: -3.7848873138427734
    6. ',' → logprob: -4.159887313842773
    7. ']' → logprob: -4.284887313842773
    8. '           ' → logprob: -4.534887313842773
    9. '):
' → logprob: -4.659887313842773
    10. '   ' → logprob: -4.659887313842773

Token 1034: ' try' (ID: 2075)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4637615382671356
    2. ' for' → logprob: -1.713761568069458
    3. 'for' → logprob: -2.963761568069458
    4. '       ' → logprob: -3.213761568069458
    5. '   ' → logprob: -3.463761568069458
    6. ' pick' → logprob: -4.338761329650879
    7. '               ' → logprob: -4.838761329650879
    8. ' iterate' → logprob: -4.963761329650879
    9. ' try' → logprob: -5.213761329650879
    10. ' reverse' → logprob: -5.588761329650879

Token 1035: ' to' (ID: 316)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20762600004673004
    2. '       ' → logprob: -3.3326261043548584
    3. ' to' → logprob: -3.5826261043548584
    4. '           ' → logprob: -3.5826261043548584
    5. 'to' → logprob: -3.9576261043548584
    6. '```' → logprob: -4.332625865936279
    7. ':' → logprob: -4.707625865936279
    8. ':
' → logprob: -4.832625865936279
    9. 'for' → logprob: -5.332625865936279
    10. ' ' → logprob: -5.707625865936279

Token 1036: ' pick' (ID: 5230)
  Prédit: 'select'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'select' → logprob: -0.6827862858772278
    2. 'pick' → logprob: -1.932786226272583
    3. ' accumulate' → logprob: -2.682786226272583
    4. 'maint' → logprob: -2.682786226272583
    5. 'collect' → logprob: -2.932786226272583
    6. ' pick' → logprob: -3.557786226272583
    7. 'acc' → logprob: -3.682786226272583
    8. ' select' → logprob: -3.682786226272583
    9. 'push' → logprob: -4.057786464691162
    10. 'find' → logprob: -4.057786464691162

Token 1037: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.8234782218933105
    2. ' k' → logprob: -0.8234782218933105
    3. ' the' → logprob: -2.6984782218933105
    4. 'the' → logprob: -3.3234782218933105
    5. '```' → logprob: -5.3234782218933105
    6. ' smallest' → logprob: -6.0734782218933105
    7. 'micro' → logprob: -6.4484782218933105
    8. ' microbes' → logprob: -6.4484782218933105
    9. ' releases' → logprob: -6.5734782218933105
    10. '   ' → logprob: -6.8234782218933105

Token 1038: ' microbes' (ID: 156044)
  Prédit: ' microbes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' microbes' → logprob: -0.20411178469657898
    2. '_micro' → logprob: -2.8291118144989014
    3. '_' → logprob: -2.9541118144989014
    4. '_sorted' → logprob: -4.079111576080322
    5. ' _' → logprob: -4.204111576080322
    6. 'micro' → logprob: -4.829111576080322
    7. ')' → logprob: -5.204111576080322
    8. '```' → logprob: -5.329111576080322
    9. ' micro' → logprob: -5.954111576080322
    10. '   ' → logprob: -6.079111576080322

Token 1039: ' with' (ID: 483)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2612437903881073
    2. ':' → logprob: -1.7612438201904297
    3. '           ' → logprob: -3.6362438201904297
    4. ':
' → logprob: -4.01124382019043
    5. '):' → logprob: -5.88624382019043
    6. '):
' → logprob: -6.51124382019043
    7. ',' → logprob: -6.63624382019043
    8. '   ' → logprob: -6.76124382019043
    9. '[' → logprob: -6.76124382019043
    10. '        
' → logprob: -6.88624382019043

Token 1040: ' minimal' (ID: 19957)
  Prédit: 'lowest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lowest' → logprob: -0.010714461095631123
    2. ' lowest' → logprob: -5.635714530944824
    3. 'small' → logprob: -5.760714530944824
    4. ' smallest' → logprob: -6.135714530944824
    5. 'the' → logprob: -6.760714530944824
    6. 'minimal' → logprob: -8.510714530944824
    7. '```' → logprob: -8.635714530944824
    8. 'release' → logprob: -9.385714530944824
    9. ' the' → logprob: -9.760714530944824
    10. 'least' → logprob: -10.635714530944824

Token 1041: ' release' (ID: 8232)
  Prédit: ' release'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' release' → logprob: -0.6046720743179321
    2. 'release' → logprob: -0.8546720743179321
    3. ' releases' → logprob: -3.6046719551086426
    4. '_release' → logprob: -7.604671955108643
    5. 're' → logprob: -7.979671955108643
    6. '```' → logprob: -9.2296724319458
    7. '   ' → logprob: -10.1046724319458
    8. 'heap' → logprob: -10.6046724319458
    9. '`' → logprob: -11.1046724319458
    10. ' ' → logprob: -11.1046724319458

Token 1042: ' values' (ID: 4824)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.38263607025146484
    2. '       ' → logprob: -1.5076360702514648
    3. ':
' → logprob: -2.882636070251465
    4. '           ' → logprob: -4.007636070251465
    5. '
' → logprob: -5.132636070251465
    6. '):' → logprob: -5.882636070251465
    7. '   ' → logprob: -6.007636070251465
    8. '.' → logprob: -6.132636070251465
    9. ',' → logprob: -6.507636070251465
    10. ')' → logprob: -6.757636070251465

Token 1043: '.

' (ID: 364)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5238316655158997
    2. '       ' → logprob: -1.5238316059112549
    3. ':
' → logprob: -2.023831605911255
    4. '           ' → logprob: -3.398831605911255
    5. '):' → logprob: -4.898831844329834
    6. '
' → logprob: -5.398831844329834
    7. '   ' → logprob: -5.898831844329834
    8. ')' → logprob: -6.273831844329834
    9. '):
' → logprob: -6.773831844329834
    10. '.' → logprob: -7.023831844329834

Token 1044: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.23216582834720612
    2. '       ' → logprob: -1.607165813446045
    3. '
' → logprob: -5.607165813446045
    4. ' for' → logprob: -6.607165813446045
    5. 'for' → logprob: -7.857165813446045
    6. '            
' → logprob: -8.357166290283203
    7. '        
' → logprob: -8.482166290283203
    8. '   ' → logprob: -8.607166290283203
    9. '```' → logprob: -9.107166290283203
    10. '               ' → logprob: -9.357166290283203

Token 1045: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17133107781410217
    2. '           ' → logprob: -2.2963311672210693
    3. '
' → logprob: -2.9213311672210693
    4. '        
' → logprob: -7.04633092880249
    5. '   ' → logprob: -7.42133092880249
    6. 'for' → logprob: -8.296331405639648
    7. ' for' → logprob: -8.671331405639648
    8. '    
' → logprob: -8.671331405639648
    9. '            
' → logprob: -8.671331405639648
    10. 'right' → logprob: -8.921331405639648

Token 1046: ' Implementation' (ID: 60216)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13200679421424866
    2. '           ' → logprob: -2.757006883621216
    3. 'for' → logprob: -3.507006883621216
    4. '   ' → logprob: -4.632006645202637
    5. ' for' → logprob: -5.382006645202637
    6. '
' → logprob: -5.882006645202637
    7. 'right' → logprob: -5.882006645202637
    8. '#' → logprob: -6.632006645202637
    9. 'return' → logprob: -6.757006645202637
    10. 'if' → logprob: -6.882006645202637

Token 1047: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5322933197021484
    2. ':' → logprob: -1.0322933197021484
    3. ':
' → logprob: -3.0322933197021484
    4. '
' → logprob: -5.282293319702148
    5. '        
' → logprob: -6.907293319702148
    6. ',' → logprob: -7.782293319702148
    7. '           ' → logprob: -8.157293319702148
    8. '):' → logprob: -8.157293319702148
    9. '```' → logprob: -8.407293319702148
    10. '):
' → logprob: -8.657293319702148

Token 1048: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012813578359782696
    2. '           ' → logprob: -4.387813568115234
    3. '        
' → logprob: -9.012813568115234
    4. '
' → logprob: -9.387813568115234
    5. '   ' → logprob: -10.512813568115234
    6. ' for' → logprob: -10.762813568115234
    7. '        ' → logprob: -11.262813568115234
    8. ' left' → logprob: -11.887813568115234
    9. '```' → logprob: -12.137813568115234
    10. '            
' → logprob: -12.262813568115234

Token 1049: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13395598530769348
    2. '           ' → logprob: -3.508955955505371
    3. 'selected' → logprob: -3.758955955505371
    4. 'capacity' → logprob: -4.383955955505371
    5. 'left' → logprob: -4.508955955505371
    6. 'c' → logprob: -4.633955955505371
    7. 'res' → logprob: -4.758955955505371
    8. 'micro' → logprob: -5.258955955505371
    9. '   ' → logprob: -5.758955955505371
    10. 'freq' → logprob: -6.383955955505371

Token 1050: ' Sort' (ID: 25945)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0583709254860878
    2. 'left' → logprob: -4.558371067047119
    3. '           ' → logprob: -4.808371067047119
    4. 'micro' → logprob: -5.058371067047119
    5. '   ' → logprob: -5.183371067047119
    6. '#' → logprob: -5.308371067047119
    7. 'capacity' → logprob: -5.683371067047119
    8. 're' → logprob: -6.058371067047119
    9. 'right' → logprob: -6.058371067047119
    10. 'l' → logprob: -6.558371067047119

Token 1051: ' microbes' (ID: 156044)
  Prédit: 'micro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'micro' → logprob: -0.44256260991096497
    2. 'by' → logprob: -1.3175625801086426
    3. '=' → logprob: -3.3175625801086426
    4. '(m' → logprob: -3.6925625801086426
    5. '_micro' → logprob: -5.192562580108643
    6. 'mic' → logprob: -5.442562580108643
    7. 'm' → logprob: -5.692562580108643
    8. ' by' → logprob: -5.942562580108643
    9. '=m' → logprob: -6.692562580108643
    10. 'reverse' → logprob: -6.692562580108643

Token 1052: ' by' (ID: 656)
  Prédit: '_sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sorted' → logprob: -0.42746099829673767
    2. 'by' → logprob: -1.80246102809906
    3. '=' → logprob: -2.5524609088897705
    4. ' =' → logprob: -2.9274609088897705
    5. ' by' → logprob: -3.4274609088897705
    6. '       ' → logprob: -5.55246114730835
    7. '   ' → logprob: -5.67746114730835
    8. '_by' → logprob: -6.17746114730835
    9. '```' → logprob: -6.30246114730835
    10. ',' → logprob: -6.42746114730835

Token 1053: ' capacity' (ID: 12241)
  Prédit: 'capacity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'capacity' → logprob: -0.003044262295588851
    2. 'release' → logprob: -6.503044128417969
    3. ' capacity' → logprob: -6.628044128417969
    4. 'lambda' → logprob: -8.628044128417969
    5. 'reverse' → logprob: -11.878044128417969
    6. 'cap' → logprob: -12.128044128417969
    7. '-release' → logprob: -12.128044128417969
    8. '-cap' → logprob: -12.753044128417969
    9. '   ' → logprob: -13.003044128417969
    10. ' release' → logprob: -13.128044128417969

Token 1054: ' descending' (ID: 89489)
  Prédit: '_sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sorted' → logprob: -0.5554648637771606
    2. 'descending' → logprob: -1.9304648637771606
    3. '_desc' → logprob: -2.055464744567871
    4. 'Descending' → logprob: -3.430464744567871
    5. '_' → logprob: -3.680464744567871
    6. ',' → logprob: -3.680464744567871
    7. ' descending' → logprob: -4.055464744567871
    8. '   ' → logprob: -4.680464744567871
    9. '```' → logprob: -4.680464744567871
    10. '       ' → logprob: -4.930464744567871

Token 1055: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8258479833602905
    2. ':
' → logprob: -1.0758479833602905
    3. '       ' → logprob: -1.9508479833602905
    4. '):
' → logprob: -3.95084810256958
    5. ',' → logprob: -4.20084810256958
    6. '):' → logprob: -4.20084810256958
    7. ')' → logprob: -4.82584810256958
    8. '           ' → logprob: -5.20084810256958
    9. '[' → logprob: -5.70084810256958
    10. ',
' → logprob: -6.07584810256958

Token 1056: 'because' (ID: 53081)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18378384411334991
    2. 'reverse' → logprob: -2.558783769607544
    3. 'key' → logprob: -3.183783769607544
    4. 'm' → logprob: -4.933784008026123
    5. ',' → logprob: -4.933784008026123
    6. ')
' → logprob: -5.183784008026123
    7. '):
' → logprob: -5.308784008026123
    8. 'lambda' → logprob: -5.433784008026123
    9. 'capacity' → logprob: -5.808784008026123
    10. '),' → logprob: -5.808784008026123

Token 1057: ' minimal' (ID: 19957)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.4003233909606934
    2. 'micro' → logprob: -1.5253233909606934
    3. ')' → logprob: -1.7753233909606934
    4. 'capacity' → logprob: -2.7753233909606934
    5. 're' → logprob: -3.0253233909606934
    6. 'reverse' → logprob: -3.4003233909606934
    7. ' microbes' → logprob: -3.5253233909606934
    8. ' capacity' → logprob: -3.5253233909606934
    9. '):
' → logprob: -3.7753233909606934
    10. 'release' → logprob: -4.025323390960693

Token 1058: ' b' (ID: 287)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.3256033658981323
    2. '_capacity' → logprob: -1.4506033658981323
    3. 'capacity' → logprob: -1.7006033658981323
    4. ' capacity' → logprob: -2.325603485107422
    5. ')' → logprob: -2.450603485107422
    6. '_release' → logprob: -3.200603485107422
    7. '_' → logprob: -4.200603485107422
    8. '),' → logprob: -4.325603485107422
    9. '_micro' → logprob: -4.825603485107422
    10. ' ,' → logprob: -4.825603485107422

Token 1059: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.030239015817642212
    2. ')_' → logprob: -4.155239105224609
    3. '_' → logprob: -5.280239105224609
    4. ')' → logprob: -5.530239105224609
    5. 'y' → logprob: -7.280239105224609
    6. ''_' → logprob: -7.280239105224609
    7. '_capacity' → logprob: -7.655239105224609
    8. '_sorted' → logprob: -8.03023910522461
    9. ',' → logprob: -8.15523910522461
    10. ' _' → logprob: -8.40523910522461

Token 1060: ' *' (ID: 425)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9176718592643738
    2. ',' → logprob: -1.5426719188690186
    3. '),' → logprob: -2.6676719188690186
    4. '):
' → logprob: -3.1676719188690186
    5. ')[' → logprob: -3.4176719188690186
    6. ',
' → logprob: -3.7926719188690186
    7. '_sorted' → logprob: -4.0426716804504395
    8. 'descending' → logprob: -4.0426716804504395
    9. '[' → logprob: -4.1676716804504395
    10. '       ' → logprob: -4.4176716804504395

Token 1061: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.03811975196003914
    2. ' k' → logprob: -3.2881197929382324
    3. ')' → logprob: -10.788119316101074
    4. 'right' → logprob: -11.163119316101074
    5. '```' → logprob: -12.163119316101074
    6. '   ' → logprob: -12.288119316101074
    7. 'count' → logprob: -12.288119316101074
    8. ' ' → logprob: -12.413119316101074
    9. '`' → logprob: -12.538119316101074
    10. '=' → logprob: -12.788119316101074

Token 1062: ' is' (ID: 382)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5150564908981323
    2. ',' → logprob: -2.140056610107422
    3. '),' → logprob: -2.515056610107422
    4. 'descending' → logprob: -3.015056610107422
    5. '):
' → logprob: -3.890056610107422
    6. ')
' → logprob: -3.890056610107422
    7. ',
' → logprob: -4.390056610107422
    8. '[::-' → logprob: -4.515056610107422
    9. ' descending' → logprob: -4.765056610107422
    10. '))' → logprob: -5.015056610107422

Token 1063: ' determined' (ID: 16817)
  Prédit: 'descending'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'descending' → logprob: -1.5850363969802856
    2. ')' → logprob: -1.8350363969802856
    3. '>' → logprob: -2.085036277770996
    4. '),' → logprob: -3.085036277770996
    5. 'capacity' → logprob: -3.085036277770996
    6. ' capacity' → logprob: -3.460036277770996
    7. ',' → logprob: -3.585036277770996
    8. 'reverse' → logprob: -3.585036277770996
    9. 'micro' → logprob: -3.710036277770996
    10. '-' → logprob: -3.835036277770996

Token 1064: ' by' (ID: 656)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6937135457992554
    2. ',' → logprob: -1.9437135457992554
    3. '=' → logprob: -2.193713665008545
    4. 'by' → logprob: -2.443713665008545
    5. ' by' → logprob: -2.693713665008545
    6. '_' → logprob: -4.443713665008545
    7. '```' → logprob: -4.443713665008545
    8. '[::-' → logprob: -4.568713665008545
    9. '),' → logprob: -4.943713665008545
    10. 'descending' → logprob: -5.068713665008545

Token 1065: ' minimal' (ID: 19957)
  Prédit: 'capacity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'capacity' → logprob: -0.7768992185592651
    2. ' capacity' → logprob: -1.6518992185592651
    3. 'micro' → logprob: -1.7768992185592651
    4. 'the' → logprob: -3.5268993377685547
    5. ' microbes' → logprob: -3.5268993377685547
    6. ')' → logprob: -3.9018993377685547
    7. ' the' → logprob: -4.026899337768555
    8. 'lambda' → logprob: -4.151899337768555
    9. 'reverse' → logprob: -4.276899337768555
    10. ' their' → logprob: -4.776899337768555

Token 1066: ' capacity' (ID: 12241)
  Prédit: 'capacity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'capacity' → logprob: -0.5718185901641846
    2. ')' → logprob: -2.0718185901641846
    3. ' capacity' → logprob: -2.6968185901641846
    4. ',' → logprob: -2.6968185901641846
    5. '),' → logprob: -3.1968185901641846
    6. '_capacity' → logprob: -3.3218185901641846
    7. 'release' → logprob: -3.9468185901641846
    8. '_release' → logprob: -4.0718183517456055
    9. ',
' → logprob: -4.0718183517456055
    10. 'micro' → logprob: -4.9468183517456055

Token 1067: ' in' (ID: 306)
  Prédit: '_sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sorted' → logprob: -1.5825244188308716
    2. ')' → logprob: -2.332524299621582
    3. ',' → logprob: -2.457524299621582
    4. '=' → logprob: -2.582524299621582
    5. '[' → logprob: -2.582524299621582
    6. '       ' → logprob: -2.832524299621582
    7. '```' → logprob: -2.832524299621582
    8. '   ' → logprob: -3.082524299621582
    9. '):
' → logprob: -3.332524299621582
    10. '[::-' → logprob: -3.332524299621582

Token 1068: ' selected' (ID: 6386)
  Prédit: 'selected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'selected' → logprob: -0.5532824397087097
    2. 'the' → logprob: -1.4282824993133545
    3. 'micro' → logprob: -3.3032824993133545
    4. ' the' → logprob: -3.3032824993133545
    5. 'descending' → logprob: -3.4282824993133545
    6. ' microbes' → logprob: -3.6782824993133545
    7. ' selected' → logprob: -3.8032824993133545
    8. 'selection' → logprob: -5.053282260894775
    9. ')' → logprob: -5.053282260894775
    10. 'reverse' → logprob: -5.428282260894775

Token 1069: ' set' (ID: 920)
  Prédit: '_sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sorted' → logprob: -0.8199445009231567
    2. ')' → logprob: -1.5699445009231567
    3. 'descending' → logprob: -2.069944381713867
    4. '_desc' → logprob: -3.069944381713867
    5. ' descending' → logprob: -3.569944381713867
    6. ',' → logprob: -4.069944381713867
    7. '_micro' → logprob: -4.069944381713867
    8. '_' → logprob: -4.194944381713867
    9. ' microbes' → logprob: -4.194944381713867
    10. '```' → logprob: -4.819944381713867

Token 1070: ')
' (ID: 446)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0894696712493896
    2. ':' → logprob: -1.8394696712493896
    3. '):
' → logprob: -1.8394696712493896
    4. '):' → logprob: -1.9644696712493896
    5. ')' → logprob: -2.8394696712493896
    6. ':
' → logprob: -3.2144696712493896
    7. ',' → logprob: -3.9644696712493896
    8. '=' → logprob: -4.214469909667969
    9. '           ' → logprob: -4.214469909667969
    10. '   ' → logprob: -4.464469909667969

Token 1071: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.052848346531391144
    2. ':' → logprob: -3.8028483390808105
    3. '           ' → logprob: -4.5528483390808105
    4. ':
' → logprob: -5.0528483390808105
    5. '```' → logprob: -5.8028483390808105
    6. ',' → logprob: -6.6778483390808105
    7. '):
' → logprob: -6.8028483390808105
    8. ')' → logprob: -6.9278483390808105
    9. '   ' → logprob: -6.9278483390808105
    10. '[' → logprob: -7.1778483390808105

Token 1072: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1357763260602951
    2. ':' → logprob: -2.3857762813568115
    3. ':
' → logprob: -4.510776519775391
    4. '):' → logprob: -4.760776519775391
    5. '):
' → logprob: -5.385776519775391
    6. ')' → logprob: -5.635776519775391
    7. '   ' → logprob: -6.385776519775391
    8. ',' → logprob: -6.510776519775391
    9. '           ' → logprob: -7.510776519775391
    10. '.' → logprob: -7.635776519775391

Token 1073: ' Then' (ID: 7801)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09235937148332596
    2. ':' → logprob: -3.0923593044281006
    3. '```' → logprob: -4.59235954284668
    4. '           ' → logprob: -5.46735954284668
    5. '[' → logprob: -5.71735954284668
    6. ':
' → logprob: -5.71735954284668
    7. ')' → logprob: -5.71735954284668
    8. '   ' → logprob: -5.84235954284668
    9. '=' → logprob: -6.09235954284668
    10. ',' → logprob: -6.21735954284668

Token 1074: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2015997171401978
    2. 'left' → logprob: -1.5765997171401978
    3. 'lo' → logprob: -2.451599597930908
    4. '           ' → logprob: -2.576599597930908
    5. '       ' → logprob: -2.701599597930908
    6. 'import' → logprob: -3.451599597930908
    7. ' left' → logprob: -3.576599597930908
    8. '```' → logprob: -3.576599597930908
    9. ' for' → logprob: -3.951599597930908
    10. 'low' → logprob: -4.076599597930908

Token 1075: ' given' (ID: 4335)
  Prédit: 'micro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'micro' → logprob: -1.2354552745819092
    2. 'i' → logprob: -1.4854552745819092
    3. 'k' → logprob: -1.4854552745819092
    4. 'm' → logprob: -2.485455274581909
    5. 'capacity' → logprob: -2.610455274581909
    6. 'each' → logprob: -3.610455274581909
    7. ' capacity' → logprob: -4.235455513000488
    8. ' k' → logprob: -4.360455513000488
    9. ' i' → logprob: -4.610455513000488
    10. '```' → logprob: -5.485455513000488

Token 1076: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.11694242805242538
    2. 'k' → logprob: -2.3669424057006836
    3. ' capacity' → logprob: -4.616942405700684
    4. ' microbes' → logprob: -5.866942405700684
    5. 'capacity' → logprob: -6.491942405700684
    6. ' micro' → logprob: -7.241942405700684
    7. ' ' → logprob: -7.991942405700684
    8. 'micro' → logprob: -7.991942405700684
    9. '`' → logprob: -8.491942405700684
    10. '   ' → logprob: -8.741942405700684

Token 1077: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11470276862382889
    2. ',' → logprob: -2.8647027015686035
    3. ':
' → logprob: -3.1147027015686035
    4. '_sorted' → logprob: -6.1147027015686035
    5. '   ' → logprob: -6.6147027015686035
    6. '):' → logprob: -7.3647027015686035
    7. ',
' → logprob: -7.3647027015686035
    8. '):
' → logprob: -7.7397027015686035
    9. ' :' → logprob: -8.114703178405762
    10. '       ' → logprob: -8.739703178405762

Token 1078: ' take' (ID: 2304)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.5447314977645874
    2. '           ' → logprob: -1.9197314977645874
    3. 'import' → logprob: -2.044731616973877
    4. ' releases' → logprob: -2.294731616973877
    5. '   ' → logprob: -2.794731616973877
    6. 'heap' → logprob: -3.169731616973877
    7. ' if' → logprob: -3.294731616973877
    8. 'def' → logprob: -3.544731616973877
    9. ' left' → logprob: -3.669731616973877
    10. ' import' → logprob: -3.794731616973877

Token 1079: ' first' (ID: 1577)
  Prédit: 'micro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'micro' → logprob: -0.3176039159297943
    2. 'the' → logprob: -1.9426039457321167
    3. ' microbes' → logprob: -2.567603826522827
    4. ' the' → logprob: -3.317603826522827
    5. ' micro' → logprob: -5.442604064941406
    6. '```' → logprob: -5.567604064941406
    7. 'mic' → logprob: -6.192604064941406
    8. '`' → logprob: -6.567604064941406
    9. '   ' → logprob: -6.942604064941406
    10. 'k' → logprob: -7.692604064941406

Token 1080: ' k' (ID: 372)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.655225396156311
    2. 'k' → logprob: -1.780225396156311
    3. ' k' → logprob: -2.6552252769470215
    4. 'micro' → logprob: -3.2802252769470215
    5. '`' → logprob: -3.5302252769470215
    6. ')' → logprob: -3.5302252769470215
    7. ' microbes' → logprob: -3.6552252769470215
    8. '[
' → logprob: -4.1552252769470215
    9. '   ' → logprob: -4.1552252769470215
    10. '(' → logprob: -4.2802252769470215

Token 1081: ' microbes' (ID: 156044)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9561957120895386
    2. ')' → logprob: -1.3311957120895386
    3. ':' → logprob: -2.331195831298828
    4. ']' → logprob: -2.706195831298828
    5. '[' → logprob: -3.206195831298828
    6. '_micro' → logprob: -3.706195831298828
    7. ' microbes' → logprob: -3.706195831298828
    8. '_sorted' → logprob: -4.081195831298828
    9. '   ' → logprob: -4.206195831298828
    10. ',' → logprob: -4.206195831298828

Token 1082: ' with' (ID: 483)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4675116539001465
    2. '       ' → logprob: -1.8425116539001465
    3. '           ' → logprob: -2.0925116539001465
    4. ':
' → logprob: -3.2175116539001465
    5. '):' → logprob: -4.4675116539001465
    6. '[' → logprob: -4.8425116539001465
    7. ')' → logprob: -5.0925116539001465
    8. '   ' → logprob: -5.0925116539001465
    9. ']' → logprob: -5.5925116539001465
    10. '):
' → logprob: -5.8425116539001465

Token 1083: ' smallest' (ID: 42173)
  Prédit: 'lowest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lowest' → logprob: -0.03607714921236038
    2. 'small' → logprob: -4.41107702255249
    3. 'minimal' → logprob: -4.53607702255249
    4. 'the' → logprob: -4.91107702255249
    5. ' smallest' → logprob: -6.28607702255249
    6. 'least' → logprob: -6.66107702255249
    7. ' lowest' → logprob: -6.91107702255249
    8. ' minimal' → logprob: -8.161077499389648
    9. ' the' → logprob: -8.286077499389648
    10. '```' → logprob: -8.911077499389648

Token 1084: ' release' (ID: 8232)
  Prédit: 'release'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'release' → logprob: -0.08320353180170059
    2. '.release' → logprob: -3.0832035541534424
    3. ' release' → logprob: -3.7082035541534424
    4. '_release' → logprob: -5.333203315734863
    5. '
' → logprob: -6.833203315734863
    6. ' .' → logprob: -7.083203315734863
    7. '```' → logprob: -7.708203315734863
    8. '`' → logprob: -7.708203315734863
    9. ' releases' → logprob: -7.958203315734863
    10. '   ' → logprob: -8.333203315734863

Token 1085: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0140773057937622
    2. '       ' → logprob: -1.1390773057937622
    3. ':
' → logprob: -1.5140773057937622
    4. '):
' → logprob: -3.6390771865844727
    5. '):' → logprob: -3.7640771865844727
    6. '   ' → logprob: -4.014077186584473
    7. ')' → logprob: -4.514077186584473
    8. '           ' → logprob: -4.764077186584473
    9. '
' → logprob: -5.889077186584473
    10. ')
' → logprob: -6.889077186584473

Token 1086: 'use' (ID: 1821)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03559846058487892
    2. ')
' → logprob: -4.410598278045654
    3. ':' → logprob: -5.410598278045654
    4. '),' → logprob: -5.660598278045654
    5. '):' → logprob: -5.910598278045654
    6. 'key' → logprob: -6.785598278045654
    7. '()' → logprob: -6.910598278045654
    8. ',' → logprob: -6.910598278045654
    9. ').' → logprob: -7.035598278045654
    10. '   ' → logprob: -7.535598278045654

Token 1087: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.5951052308082581
    2. ' heap' → logprob: -1.7201051712036133
    3. 'heap' → logprob: -1.8451051712036133
    4. 'a' → logprob: -2.2201051712036133
    5. 'import' → logprob: -6.720105171203613
    6. '```' → logprob: -8.095105171203613
    7. '
' → logprob: -8.595105171203613
    8. ' n' → logprob: -8.595105171203613
    9. '`' → logprob: -8.845105171203613
    10. ')' → logprob: -8.845105171203613

Token 1088: ' min' (ID: 1349)
  Prédit: ' heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' heap' → logprob: -0.10063362121582031
    2. 'heap' → logprob: -2.3506336212158203
    3. ' min' → logprob: -8.22563362121582
    4. ')' → logprob: -10.60063362121582
    5. 'min' → logprob: -10.60063362121582
    6. ' max' → logprob: -11.10063362121582
    7. ' n' → logprob: -11.22563362121582
    8. '
' → logprob: -11.47563362121582
    9. 'import' → logprob: -12.10063362121582
    10. '_heap' → logprob: -12.22563362121582

Token 1089: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.8265083432197571
    2. 'heap' → logprob: -0.9515083432197571
    3. ' heap' → logprob: -2.5765082836151123
    4. ')' → logprob: -3.0765082836151123
    5. '_heap' → logprob: -3.4515082836151123
    6. '
' → logprob: -4.451508522033691
    7. '_' → logprob: -5.951508522033691
    8. '```' → logprob: -6.076508522033691
    9. ')
' → logprob: -6.326508522033691
    10. '``' → logprob: -7.576508522033691

Token 1090: 'heap' (ID: 38535)
  Prédit: 'heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -5.955703818472102e-05
    2. ' heap' → logprob: -9.750059127807617
    3. '```' → logprob: -14.500059127807617
    4. '-' → logprob: -14.750059127807617
    5. 'he' → logprob: -15.625059127807617
    6. '``' → logprob: -16.750059127807617
    7. '
' → logprob: -17.000059127807617
    8. '1' → logprob: -18.500059127807617
    9. '_heap' → logprob: -18.500059127807617
    10. 'queue' → logprob: -18.625059127807617

Token 1091: ' or' (ID: 503)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.15041351318359375
    2. '[' → logprob: -3.7754135131835938
    3. ':' → logprob: -3.9004135131835938
    4. '):' → logprob: -3.9004135131835938
    5. ']' → logprob: -4.150413513183594
    6. ')
' → logprob: -4.400413513183594
    7. '[
' → logprob: -4.525413513183594
    8. '):
' → logprob: -4.775413513183594
    9. ',' → logprob: -5.275413513183594
    10. '```' → logprob: -5.525413513183594

Token 1092: ' sort' (ID: 4506)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.18926048278808594
    2. ' max' → logprob: -2.189260482788086
    3. 'heap' → logprob: -3.814260482788086
    4. 'sorted' → logprob: -3.939260482788086
    5. 'import' → logprob: -5.189260482788086
    6. ' n' → logprob: -5.564260482788086
    7. ' heap' → logprob: -5.814260482788086
    8. 'sort' → logprob: -6.564260482788086
    9. ')' → logprob: -6.689260482788086
    10. ' sorted' → logprob: -6.689260482788086

Token 1093: ' the' (ID: 290)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3638211488723755
    2. '()' → logprob: -1.3638211488723755
    3. '       ' → logprob: -2.363821029663086
    4. '```' → logprob: -3.113821029663086
    5. 'reverse' → logprob: -3.238821029663086
    6. '   ' → logprob: -3.363821029663086
    7. '[' → logprob: -3.488821029663086
    8. ']' → logprob: -3.738821029663086
    9. '_reverse' → logprob: -3.738821029663086
    10. '[::-' → logprob: -3.738821029663086

Token 1094: ' k' (ID: 372)
  Prédit: 'release'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'release' → logprob: -0.8140062689781189
    2. ' release' → logprob: -1.9390063285827637
    3. ' releases' → logprob: -2.0640063285827637
    4. '.release' → logprob: -2.4390063285827637
    5. ',' → logprob: -2.9390063285827637
    6. 're' → logprob: -3.1890063285827637
    7. '_release' → logprob: -3.4390063285827637
    8. '[' → logprob: -3.8140063285827637
    9. 'micro' → logprob: -4.939006328582764
    10. ')' → logprob: -4.939006328582764

Token 1095: ' first' (ID: 1577)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6388561725616455
    2. '_' → logprob: -2.2638561725616455
    3. '```' → logprob: -2.3888561725616455
    4. '_re' → logprob: -2.5138561725616455
    5. ']' → logprob: -3.2638561725616455
    6. '_release' → logprob: -4.638855934143066
    7. '[' → logprob: -4.638855934143066
    8. ' )' → logprob: -4.638855934143066
    9. ',' → logprob: -4.763855934143066
    10. '``' → logprob: -4.888855934143066

Token 1096: ' microbes' (ID: 156044)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13451114296913147
    2. ' microbes' → logprob: -3.1345112323760986
    3. '_' → logprob: -3.3845112323760986
    4. '_micro' → logprob: -4.7595109939575195
    5. 'micro' → logprob: -4.8845109939575195
    6. '[' → logprob: -5.2595109939575195
    7. ',' → logprob: -5.6345109939575195
    8. ' )' → logprob: -5.7595109939575195
    9. '```' → logprob: -5.8845109939575195
    10. ')_' → logprob: -6.2595109939575195

Token 1097: ' by' (ID: 656)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6360839009284973
    2. ']' → logprob: -1.5110838413238525
    3. '[' → logprob: -2.5110838413238525
    4. '       ' → logprob: -3.3860838413238525
    5. '[
' → logprob: -3.3860838413238525
    6. ':' → logprob: -3.7610838413238525
    7. '   ' → logprob: -4.011084079742432
    8. '```' → logprob: -4.261084079742432
    9. '           ' → logprob: -4.636084079742432
    10. ')
' → logprob: -5.136084079742432

Token 1098: ' release' (ID: 8232)
  Prédit: 'release'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'release' → logprob: -0.0016843474004417658
    2. ' release' → logprob: -6.501684188842773
    3. 'capacity' → logprob: -8.751684188842773
    4. '.release' → logprob: -11.876684188842773
    5. '_release' → logprob: -12.251684188842773
    6. '```' → logprob: -12.376684188842773
    7. '-release' → logprob: -12.751684188842773
    8. '`' → logprob: -13.626684188842773
    9. '   ' → logprob: -14.001684188842773
    10. ' capacity' → logprob: -14.001684188842773

Token 1099: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6076712012290955
    2. ':' → logprob: -1.9826712608337402
    3. ']' → logprob: -2.3576712608337402
    4. '       ' → logprob: -3.1076712608337402
    5. '   ' → logprob: -3.7326712608337402
    6. '):' → logprob: -3.7326712608337402
    7. '[' → logprob: -3.8576712608337402
    8. ')
' → logprob: -4.23267126083374
    9. ',' → logprob: -4.35767126083374
    10. '):
' → logprob: -4.48267126083374

Token 1100: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5445685982704163
    2. '           ' → logprob: -1.4195685386657715
    3. ':' → logprob: -2.1695685386657715
    4. ':
' → logprob: -3.7945685386657715
    5. '):' → logprob: -3.9195685386657715
    6. ')' → logprob: -5.0445685386657715
    7. '):
' → logprob: -5.4195685386657715
    8. '   ' → logprob: -6.4195685386657715
    9. '```' → logprob: -6.6695685386657715
    10. '[' → logprob: -6.7945685386657715

Token 1101: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6284183263778687
    2. '           ' → logprob: -1.2534183263778687
    3. ':' → logprob: -2.003418445587158
    4. ':
' → logprob: -3.878418445587158
    5. '):' → logprob: -4.253418445587158
    6. ')' → logprob: -5.878418445587158
    7. '):
' → logprob: -6.378418445587158
    8. '   ' → logprob: -6.878418445587158
    9. '[' → logprob: -7.253418445587158
    10. '.' → logprob: -7.503418445587158

Token 1102: ' Calculate' (ID: 38942)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7654102444648743
    2. '       ' → logprob: -1.0154101848602295
    3. ':
' → logprob: -2.0154101848602295
    4. '):' → logprob: -4.515410423278809
    5. '           ' → logprob: -5.140410423278809
    6. ')' → logprob: -5.265410423278809
    7. '   ' → logprob: -5.265410423278809
    8. '[' → logprob: -5.640410423278809
    9. '):
' → logprob: -5.765410423278809
    10. ',' → logprob: -7.515410423278809

Token 1103: ' total' (ID: 3609)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.7234020829200745
    2. ' total' → logprob: -2.0984020233154297
    3. ' sum' → logprob: -2.0984020233154297
    4. 'total' → logprob: -2.3484020233154297
    5. 'release' → logprob: -2.4734020233154297
    6. ' release' → logprob: -3.7234020233154297
    7. ' their' → logprob: -4.34840202331543
    8. '           ' → logprob: -4.59840202331543
    9. ' the' → logprob: -4.72340202331543
    10. '
' → logprob: -4.97340202331543

Token 1104: ' release' (ID: 8232)
  Prédit: '_release'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_release' → logprob: -0.5965214967727661
    2. '_' → logprob: -0.8465214967727661
    3. ' _' → logprob: -4.221521377563477
    4. '_re' → logprob: -6.096521377563477
    5. '_return' → logprob: -6.346521377563477
    6. '_sum' → logprob: -7.596521377563477
    7. 'release' → logprob: -8.346521377563477
    8. ''_' → logprob: -9.096521377563477
    9. '   ' → logprob: -9.471521377563477
    10. ')_' → logprob: -9.471521377563477

Token 1105: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.31982773542404175
    2. ':' → logprob: -1.5698277950286865
    3. ':
' → logprob: -3.6948277950286865
    4. '           ' → logprob: -4.069827556610107
    5. '):' → logprob: -4.819827556610107
    6. '   ' → logprob: -5.444827556610107
    7. ')' → logprob: -5.944827556610107
    8. '):
' → logprob: -5.944827556610107
    9. '```' → logprob: -6.944827556610107
    10. '[' → logprob: -7.069827556610107

Token 1106: ' check' (ID: 2371)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.2816281020641327
    2. ' return' → logprob: -1.906628131866455
    3. ' check' → logprob: -2.781628131866455
    4. 'check' → logprob: -4.156628131866455
    5. 'compare' → logprob: -4.531628131866455
    6. ' compare' → logprob: -5.656628131866455
    7. 'if' → logprob: -5.906628131866455
    8. '   ' → logprob: -7.281628131866455
    9. '```' → logprob: -7.281628131866455
    10. ' if' → logprob: -7.531628131866455

Token 1107: ' if' (ID: 538)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7479439973831177
    2. '       ' → logprob: -0.9979439973831177
    3. ':
' → logprob: -2.497943878173828
    4. '):' → logprob: -3.872943878173828
    5. '   ' → logprob: -3.997943878173828
    6. ')' → logprob: -4.497943878173828
    7. '):
' → logprob: -4.747943878173828
    8. '```' → logprob: -5.622943878173828
    9. '           ' → logprob: -5.872943878173828
    10. '
' → logprob: -6.247943878173828

Token 1108: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.05499444529414177
    2. 'total' → logprob: -2.9299943447113037
    3. ' <=' → logprob: -9.429994583129883
    4. '<=' → logprob: -11.679994583129883
    5. ' release' → logprob: -11.929994583129883
    6. '(total' → logprob: -12.054994583129883
    7. '   ' → logprob: -13.054994583129883
    8. ' return' → logprob: -13.429994583129883
    9. 'release' → logprob: -13.929994583129883
    10. ' ' → logprob: -13.929994583129883

Token 1109: '_release' (ID: 59589)
  Prédit: '_release'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_release' → logprob: -0.06525251269340515
    2. '_' → logprob: -2.8152525424957275
    3. ' _' → logprob: -6.940252304077148
    4. 'release' → logprob: -7.065252304077148
    5. '_
' → logprob: -7.065252304077148
    6. '_capacity' → logprob: -8.690252304077148
    7. '_re' → logprob: -8.940252304077148
    8. ' release' → logprob: -9.440252304077148
    9. '```' → logprob: -9.940252304077148
    10. '_return' → logprob: -10.565252304077148

Token 1110: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.03376037999987602
    2. '<=' → logprob: -3.4087603092193604
    3. '```' → logprob: -9.533760070800781
    4. ')' → logprob: -11.283760070800781
    5. ')<=' → logprob: -12.283760070800781
    6. '   ' → logprob: -12.408760070800781
    7. ' ' → logprob: -12.533760070800781
    8. '_' → logprob: -13.158760070800781
    9. '<|end|>' → logprob: -13.283760070800781
    10. ' <' → logprob: -13.658760070800781

Token 1111: ' minimal' (ID: 19957)
  Prédit: ' microbes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' microbes' → logprob: -0.6508784294128418
    2. ' capacity' → logprob: -1.6508784294128418
    3. 'micro' → logprob: -1.6508784294128418
    4. ' micro' → logprob: -2.650878429412842
    5. 'capacity' → logprob: -4.275878429412842
    6. ' min' → logprob: -6.025878429412842
    7. 'min' → logprob: -6.025878429412842
    8. ' m' → logprob: -6.400878429412842
    9. ' b' → logprob: -7.150878429412842
    10. 'm' → logprob: -7.525878429412842

Token 1112: ' b' (ID: 287)
  Prédit: '_capacity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_capacity' → logprob: -0.13390175998210907
    2. 'capacity' → logprob: -2.508901834487915
    3. '_' → logprob: -4.008901596069336
    4. ' capacity' → logprob: -4.508901596069336
    5. '_micro' → logprob: -5.508901596069336
    6. '_cap' → logprob: -5.758901596069336
    7. '`' → logprob: -6.258901596069336
    8. ' _' → logprob: -7.133901596069336
    9. 'micro' → logprob: -7.258901596069336
    10. ')' → logprob: -7.508901596069336

Token 1113: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.014087220653891563
    2. '_capacity' → logprob: -4.514087200164795
    3. 'capacity' → logprob: -6.889087200164795
    4. '_' → logprob: -7.514087200164795
    5. '_cap' → logprob: -7.514087200164795
    6. 'i' → logprob: -7.889087200164795
    7. '_micro' → logprob: -8.264087677001953
    8. '_e' → logprob: -10.014087677001953
    9. '_id' → logprob: -10.264087677001953
    10. ')' → logprob: -11.014087677001953

Token 1114: ' *' (ID: 425)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.1735976934432983
    2. '       ' → logprob: -1.7985976934432983
    3. ')' → logprob: -2.048597812652588
    4. '[' → logprob: -2.798597812652588
    5. ']' → logprob: -2.923597812652588
    6. '           ' → logprob: -3.048597812652588
    7. '):' → logprob: -3.173597812652588
    8. '_sorted' → logprob: -3.298597812652588
    9. '   ' → logprob: -3.548597812652588
    10. ':
' → logprob: -3.548597812652588

Token 1115: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.16023853421211243
    2. 'k' → logprob: -1.91023850440979
    3. ' ' → logprob: -12.160238265991211
    4. '_k' → logprob: -12.785238265991211
    5. '	k' → logprob: -13.285238265991211
    6. '```' → logprob: -13.910238265991211
    7. ' 
' → logprob: -14.035238265991211
    8. '`' → logprob: -14.410238265991211
    9. ' ' → logprob: -14.410238265991211
    10. '"k' → logprob: -15.035238265991211

Token 1116: ' among' (ID: 6200)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4275848865509033
    2. ':
' → logprob: -2.0525848865509033
    3. '       ' → logprob: -2.3025848865509033
    4. '):' → logprob: -2.8025848865509033
    5. ')' → logprob: -3.9275848865509033
    6. '):
' → logprob: -4.177584648132324
    7. '   ' → logprob: -4.927584648132324
    8. ',' → logprob: -5.927584648132324
    9. '           ' → logprob: -6.302584648132324
    10. '[' → logprob: -6.302584648132324

Token 1117: ' selected' (ID: 6386)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.9311379790306091
    2. 'selected' → logprob: -1.056138038635254
    3. ' the' → logprob: -2.306138038635254
    4. 'micro' → logprob: -2.681138038635254
    5. ' selected' → logprob: -3.556138038635254
    6. ' microbes' → logprob: -3.931138038635254
    7. ')' → logprob: -4.306138038635254
    8. 'those' → logprob: -4.806138038635254
    9. '[' → logprob: -5.306138038635254
    10. 'them' → logprob: -5.931138038635254

Token 1118: ' microbes' (ID: 156044)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8094872236251831
    2. ':' → logprob: -1.059487223625183
    3. '):' → logprob: -2.1844873428344727
    4. '   ' → logprob: -3.3094873428344727
    5. '):
' → logprob: -3.8094873428344727
    6. ':
' → logprob: -4.184487342834473
    7. ')' → logprob: -4.434487342834473
    8. '```' → logprob: -5.684487342834473
    9. '():' → logprob: -7.059487342834473
    10. '           ' → logprob: -7.309487342834473

Token 1119: '

' (ID: 279)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7803555727005005
    2. '       ' → logprob: -1.0303555727005005
    3. ':
' → logprob: -2.280355453491211
    4. '   ' → logprob: -3.530355453491211
    5. '):' → logprob: -4.280355453491211
    6. '):
' → logprob: -4.405355453491211
    7. ')' → logprob: -4.655355453491211
    8. '```' → logprob: -5.655355453491211
    9. '[' → logprob: -6.155355453491211
    10. '           ' → logprob: -6.280355453491211

Token 1120: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5971742868423462
    2. ':' → logprob: -1.3471742868423462
    3. '           ' → logprob: -2.4721741676330566
    4. ':
' → logprob: -2.8471741676330566
    5. '):' → logprob: -3.5971741676330566
    6. '):
' → logprob: -4.972174167633057
    7. ')' → logprob: -5.347174167633057
    8. '   ' → logprob: -5.847174167633057
    9. '():' → logprob: -6.972174167633057
    10. '```' → logprob: -7.222174167633057

Token 1121: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0027858614921569824
    2. '           ' → logprob: -6.127785682678223
    3. '
' → logprob: -8.127785682678223
    4. '   ' → logprob: -9.002785682678223
    5. '        
' → logprob: -9.377785682678223
    6. '```' → logprob: -10.252785682678223
    7. 'return' → logprob: -11.002785682678223
    8. 'def' → logprob: -11.127785682678223
    9. '    
' → logprob: -12.002785682678223
    10. ',' → logprob: -12.252785682678223

Token 1122: ' So' (ID: 2632)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011050770990550518
    2. '           ' → logprob: -5.636050701141357
    3. '   ' → logprob: -6.011050701141357
    4. ')' → logprob: -6.636050701141357
    5. 'def' → logprob: -6.636050701141357
    6. '```' → logprob: -6.886050701141357
    7. 'return' → logprob: -8.011051177978516
    8. '):
' → logprob: -8.261051177978516
    9. '        
' → logprob: -9.136051177978516
    10. ',' → logprob: -9.261051177978516

Token 1123: ' pick' (ID: 5230)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10450320690870285
    2. ':' → logprob: -2.9795031547546387
    3. '           ' → logprob: -3.8545031547546387
    4. ':
' → logprob: -4.229503154754639
    5. '   ' → logprob: -5.104503154754639
    6. 'def' → logprob: -6.854503154754639
    7. 'm' → logprob: -7.104503154754639
    8. ',' → logprob: -7.229503154754639
    9. 'return' → logprob: -7.354503154754639
    10. '):
' → logprob: -7.979503154754639

Token 1124: ' k' (ID: 372)
  Prédit: ' microbes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' microbes' → logprob: -0.6011129021644592
    2. 'micro' → logprob: -1.4761128425598145
    3. 'k' → logprob: -3.1011128425598145
    4. '   ' → logprob: -3.6011128425598145
    5. '(
' → logprob: -3.8511128425598145
    6. ' micro' → logprob: -4.1011128425598145
    7. '_micro' → logprob: -4.2261128425598145
    8. '[' → logprob: -4.6011128425598145
    9. ' the' → logprob: -4.8511128425598145
    10. ')' → logprob: -4.8511128425598145

Token 1125: ' microbes' (ID: 156044)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0776238441467285
    2. '_micro' → logprob: -1.4526238441467285
    3. '_sorted' → logprob: -2.3276238441467285
    4. '_m' → logprob: -2.4526238441467285
    5. '_desc' → logprob: -3.4526238441467285
    6. ')' → logprob: -3.4526238441467285
    7. 's' → logprob: -3.7026238441467285
    8. 'micro' → logprob: -3.9526238441467285
    9. '```' → logprob: -4.3276238441467285
    10. ' =' → logprob: -4.3276238441467285

Token 1126: ' with' (ID: 483)
  Prédit: '_sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sorted' → logprob: -0.05564910173416138
    2. '_' → logprob: -4.055649280548096
    3. ' =' → logprob: -4.430649280548096
    4. '[' → logprob: -5.180649280548096
    5. '=' → logprob: -5.180649280548096
    6. '[
' → logprob: -6.180649280548096
    7. 'sorted' → logprob: -6.180649280548096
    8. 'with' → logprob: -6.305649280548096
    9. '       ' → logprob: -6.805649280548096
    10. 's' → logprob: -6.805649280548096

Token 1127: ' largest' (ID: 10574)
  Prédit: 'minimal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'minimal' → logprob: -0.9871750473976135
    2. 'lowest' → logprob: -1.7371749877929688
    3. 'small' → logprob: -1.9871749877929688
    4. 'highest' → logprob: -2.4871749877929688
    5. ' smallest' → logprob: -2.4871749877929688
    6. ' minimal' → logprob: -2.6121749877929688
    7. 'the' → logprob: -3.3621749877929688
    8. 'capacity' → logprob: -4.362174987792969
    9. 'minimum' → logprob: -4.862174987792969
    10. 'largest' → logprob: -5.112174987792969

Token 1128: ' capacity' (ID: 12241)
  Prédit: 'capacity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'capacity' → logprob: -0.3766022026538849
    2. '_capacity' → logprob: -1.7516021728515625
    3. ' capacity' → logprob: -2.0016021728515625
    4. ')' → logprob: -6.5016021728515625
    5. '_cap' → logprob: -6.6266021728515625
    6. ' _' → logprob: -8.251602172851562
    7. '_' → logprob: -8.251602172851562
    8. ',' → logprob: -8.251602172851562
    9. '   ' → logprob: -8.501602172851562
    10. '```' → logprob: -8.751602172851562

Token 1129: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8191995024681091
    2. ':' → logprob: -0.9441995024681091
    3. ':
' → logprob: -3.069199562072754
    4. '   ' → logprob: -3.444199562072754
    5. '):' → logprob: -3.444199562072754
    6. '):
' → logprob: -4.319199562072754
    7. '           ' → logprob: -4.569199562072754
    8. ')' → logprob: -5.069199562072754
    9. '_sorted' → logprob: -5.194199562072754
    10. '[' → logprob: -5.319199562072754

Token 1130: ' and' (ID: 326)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.0153090953826904
    2. ' then' → logprob: -1.0153090953826904
    3. '       ' → logprob: -2.5153090953826904
    4. ' smallest' → logprob: -2.7653090953826904
    5. ' but' → logprob: -3.3903090953826904
    6. 'lowest' → logprob: -3.7653090953826904
    7. ' and' → logprob: -4.2653093338012695
    8. '               ' → logprob: -4.8903093338012695
    9. 'then' → logprob: -4.8903093338012695
    10. '   ' → logprob: -5.5153093338012695

Token 1131: ' within' (ID: 3518)
  Prédit: 'small'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'small' → logprob: -1.02224862575531
    2. ' smallest' → logprob: -1.52224862575531
    3. 'lowest' → logprob: -1.64724862575531
    4. ' then' → logprob: -3.3972487449645996
    5. 'then' → logprob: -3.3972487449645996
    6. ' among' → logprob: -3.5222487449645996
    7. ' minimal' → logprob: -3.7722487449645996
    8. 'sort' → logprob: -3.7722487449645996
    9. 'minimal' → logprob: -3.8972487449645996
    10. 'among' → logprob: -4.6472487449646

Token 1132: ' them' (ID: 1373)
  Prédit: 'those'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'those' → logprob: -0.49013587832450867
    2. ' those' → logprob: -1.990135908126831
    3. 'them' → logprob: -2.615135908126831
    4. 'that' → logprob: -2.990135908126831
    5. 'the' → logprob: -3.615135908126831
    6. ' them' → logprob: -3.615135908126831
    7. ' that' → logprob: -3.740135908126831
    8. 'these' → logprob: -3.990135908126831
    9. ' these' → logprob: -5.240135669708252
    10. ' the' → logprob: -5.615135669708252

Token 1133: ' choose' (ID: 5655)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5684134364128113
    2. 'sort' → logprob: -2.443413496017456
    3. ' pick' → logprob: -2.818413496017456
    4. '#' → logprob: -3.318413496017456
    5. ' sort' → logprob: -3.318413496017456
    6. 'pick' → logprob: -3.443413496017456
    7. 'select' → logprob: -3.693413496017456
    8. 'with' → logprob: -3.943413496017456
    9. ' select' → logprob: -4.068413257598877
    10. '```' → logprob: -4.068413257598877

Token 1134: ' those' (ID: 2617)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' k' → logprob: -1.0496188402175903
    2. ' smallest' → logprob: -1.4246188402175903
    3. 'k' → logprob: -1.5496188402175903
    4. ' the' → logprob: -2.549618721008301
    5. 'the' → logprob: -2.799618721008301
    6. '```' → logprob: -3.799618721008301
    7. 'lowest' → logprob: -4.424618721008301
    8. 'small' → logprob: -4.924618721008301
    9. 'those' → logprob: -6.049618721008301
    10. '`' → logprob: -6.424618721008301

Token 1135: ' with' (ID: 483)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.094186782836914
    2. '_sorted' → logprob: -1.094186782836914
    3. ' with' → logprob: -2.094186782836914
    4. 'with' → logprob: -2.219186782836914
    5. '```' → logprob: -3.844186782836914
    6. '[
' → logprob: -3.844186782836914
    7. '[:' → logprob: -3.969186782836914
    8. '_with' → logprob: -4.719186782836914
    9. '   ' → logprob: -5.344186782836914
    10. '_' → logprob: -5.719186782836914

Token 1136: ' smallest' (ID: 42173)
  Prédit: 'lowest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lowest' → logprob: -0.08944384753704071
    2. ' smallest' → logprob: -3.2144439220428467
    3. 'small' → logprob: -3.7144439220428467
    4. ' lowest' → logprob: -3.9644439220428467
    5. 'minimal' → logprob: -6.839443683624268
    6. 'the' → logprob: -8.214444160461426
    7. ' minimal' → logprob: -8.214444160461426
    8. '```' → logprob: -8.964444160461426
    9. ' the' → logprob: -9.214444160461426
    10. ' small' → logprob: -9.964444160461426

Token 1137: ' release' (ID: 8232)
  Prédit: 'release'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'release' → logprob: -0.10551043599843979
    2. ' release' → logprob: -2.6055104732513428
    3. '_release' → logprob: -3.7305104732513428
    4. 're' → logprob: -6.980510234832764
    5. ' releases' → logprob: -7.480510234832764
    6. '_re' → logprob: -8.605510711669922
    7. ' _' → logprob: -9.355510711669922
    8. '_' → logprob: -9.355510711669922
    9. '```' → logprob: -9.355510711669922
    10. '   ' → logprob: -9.605510711669922

Token 1138: '.

' (ID: 364)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5640596151351929
    2. ')' → logprob: -2.1890597343444824
    3. '       ' → logprob: -2.3140597343444824
    4. '):' → logprob: -3.3140597343444824
    5. ',' → logprob: -3.5640597343444824
    6. ':
' → logprob: -3.6890597343444824
    7. '_sorted' → logprob: -3.8140597343444824
    8. '[' → logprob: -3.8140597343444824
    9. '   ' → logprob: -4.314059734344482
    10. '.' → logprob: -4.814059734344482

Token 1139: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0550168976187706
    2. '           ' → logprob: -3.6800169944763184
    3. ':' → logprob: -4.180016994476318
    4. '):' → logprob: -5.180016994476318
    5. ':
' → logprob: -6.430016994476318
    6. '):
' → logprob: -6.930016994476318
    7. '   ' → logprob: -6.930016994476318
    8. ')' → logprob: -6.930016994476318
    9. '        
' → logprob: -6.930016994476318
    10. '```' → logprob: -7.680016994476318

Token 1140: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04098237305879593
    2. '           ' → logprob: -3.790982484817505
    3. ':' → logprob: -5.665982246398926
    4. ':
' → logprob: -5.665982246398926
    5. '
' → logprob: -5.790982246398926
    6. '   ' → logprob: -5.915982246398926
    7. '):
' → logprob: -6.790982246398926
    8. '        
' → logprob: -7.290982246398926
    9. '):' → logprob: -7.415982246398926
    10. 'return' → logprob: -7.415982246398926

Token 1141: ' We'll' (ID: 46830)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01315741054713726
    2. '   ' → logprob: -5.638157367706299
    3. ':' → logprob: -6.263157367706299
    4. '```' → logprob: -6.388157367706299
    5. '           ' → logprob: -6.638157367706299
    6. ')' → logprob: -6.638157367706299
    7. '):
' → logprob: -7.013157367706299
    8. 'def' → logprob: -7.263157367706299
    9. '):' → logprob: -7.513157367706299
    10. '_sorted' → logprob: -8.763157844543457

Token 1142: ' pick' (ID: 5230)
  Prédit: 'sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sort' → logprob: -0.9869098663330078
    2. 'continue' → logprob: -1.4869098663330078
    3. 'reverse' → logprob: -2.111909866333008
    4. '   ' → logprob: -3.111909866333008
    5. 'implement' → logprob: -3.361909866333008
    6. 'use' → logprob: -3.361909866333008
    7. '       ' → logprob: -3.986909866333008
    8. 'try' → logprob: -4.111909866333008
    9. '
' → logprob: -4.236909866333008
    10. ' continue' → logprob: -4.361909866333008

Token 1143: ' top' (ID: 2344)
  Prédit: ' microbes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' microbes' → logprob: -0.6499307751655579
    2. '[' → logprob: -2.149930715560913
    3. 'micro' → logprob: -2.399930715560913
    4. '   ' → logprob: -3.024930715560913
    5. '[
' → logprob: -3.149930715560913
    6. ' the' → logprob: -3.149930715560913
    7. '_' → logprob: -3.649930715560913
    8. '_micro' → logprob: -3.899930715560913
    9. ']' → logprob: -4.399930953979492
    10. 'self' → logprob: -4.524930953979492

Token 1144: ' N' (ID: 478)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.1976122856140137
    2. '_' → logprob: -1.5726122856140137
    3. ' _' → logprob: -2.4476122856140137
    4. ' microbes' → logprob: -2.4476122856140137
    5. '_micro' → logprob: -2.9476122856140137
    6. '_k' → logprob: -2.9476122856140137
    7. '_capacity' → logprob: -3.0726122856140137
    8. ' ' → logprob: -3.9476122856140137
    9. ' =' → logprob: -3.9476122856140137
    10. ' k' → logprob: -4.072612285614014

Token 1145: ' by' (ID: 656)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9513975977897644
    2. '_sorted' → logprob: -1.4513976573944092
    3. '_micro' → logprob: -2.701397657394409
    4. '[' → logprob: -2.826397657394409
    5. ')' → logprob: -2.951397657394409
    6. '[::-' → logprob: -3.326397657394409
    7. 'sorted' → logprob: -3.826397657394409
    8. ' microbes' → logprob: -3.826397657394409
    9. ']' → logprob: -3.951397657394409
    10. '```' → logprob: -4.20139741897583

Token 1146: ' capacity' (ID: 12241)
  Prédit: 'capacity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'capacity' → logprob: -0.11483604460954666
    2. ' capacity' → logprob: -2.2398359775543213
    3. 'release' → logprob: -6.7398362159729
    4. '_capacity' → logprob: -8.114835739135742
    5. ' release' → logprob: -8.614835739135742
    6. ' ' → logprob: -8.864835739135742
    7. 'cap' → logprob: -9.614835739135742
    8. 'reverse' → logprob: -10.239835739135742
    9. '   ' → logprob: -10.489835739135742
    10. '_release' → logprob: -11.614835739135742

Token 1147: ' descending' (ID: 89489)
  Prédit: '_sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sorted' → logprob: -1.489444375038147
    2. ']' → logprob: -1.739444375038147
    3. '[' → logprob: -1.864444375038147
    4. '_' → logprob: -2.6144442558288574
    5. '[
' → logprob: -2.7394442558288574
    6. '   ' → logprob: -2.8644442558288574
    7. ')' → logprob: -3.1144442558288574
    8. 'Descending' → logprob: -3.1144442558288574
    9. '```' → logprob: -3.7394442558288574
    10. ',' → logprob: -3.7394442558288574

Token 1148: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19442319869995117
    2. ':' → logprob: -2.069423198699951
    3. '_sorted' → logprob: -4.319423198699951
    4. '   ' → logprob: -4.694423198699951
    5. ':
' → logprob: -4.694423198699951
    6. '[' → logprob: -5.444423198699951
    7. '):' → logprob: -5.819423198699951
    8. '):
' → logprob: -6.069423198699951
    9. ',' → logprob: -6.819423198699951
    10. ')' → logprob: -6.944423198699951

Token 1149: ' pick' (ID: 5230)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.49399158358573914
    2. '[' → logprob: -1.8689916133880615
    3. '           ' → logprob: -2.9939916133880615
    4. ' then' → logprob: -3.1189916133880615
    5. ':' → logprob: -3.6189916133880615
    6. ' microbes' → logprob: -3.7439916133880615
    7. '[:' → logprob: -4.368991374969482
    8. ',' → logprob: -4.618991374969482
    9. '[
' → logprob: -5.243991374969482
    10. ' and' → logprob: -5.243991374969482

Token 1150: ' top' (ID: 2344)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.9126868844032288
    2. ' k' → logprob: -1.037686824798584
    3. 'k' → logprob: -2.412686824798584
    4. 'the' → logprob: -2.662686824798584
    5. ' first' → logprob: -3.787686824798584
    6. '[:' → logprob: -4.662686824798584
    7. '[' → logprob: -4.662686824798584
    8. ' ' → logprob: -5.037686824798584
    9. ' smallest' → logprob: -5.287686824798584
    10. '```' → logprob: -5.287686824798584

Token 1151: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.6481640338897705
    2. ' k' → logprob: -0.7731640338897705
    3. '-k' → logprob: -5.398163795471191
    4. '_k' → logprob: -5.648163795471191
    5. ' N' → logprob: -6.523163795471191
    6. ' ' → logprob: -6.898163795471191
    7. '`' → logprob: -6.898163795471191
    8. '```' → logprob: -7.148163795471191
    9. 'n' → logprob: -7.773163795471191
    10. '_' → logprob: -7.898163795471191

Token 1152: ' minimal' (ID: 19957)
  Prédit: '_sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sorted' → logprob: -0.7678338885307312
    2. '_' → logprob: -1.767833948135376
    3. '[' → logprob: -2.017833948135376
    4. '[
' → logprob: -2.892833948135376
    5. '```' → logprob: -2.892833948135376
    6. ')' → logprob: -3.642833948135376
    7. ']' → logprob: -3.767833948135376
    8. '[::-' → logprob: -3.892833948135376
    9. '   ' → logprob: -4.517833709716797
    10. ',' → logprob: -4.892833709716797

Token 1153: ' releases' (ID: 30979)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4292646050453186
    2. ']' → logprob: -1.9292645454406738
    3. ')' → logprob: -3.054264545440674
    4. '[' → logprob: -3.054264545440674
    5. '```' → logprob: -3.554264545440674
    6. '_sorted' → logprob: -3.804264545440674
    7. '[
' → logprob: -4.554264545440674
    8. '   ' → logprob: -4.804264545440674
    9. ',' → logprob: -5.304264545440674
    10. '_
' → logprob: -5.554264545440674

Token 1154: ' among' (ID: 6200)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6766170263290405
    2. '       ' → logprob: -1.3016170263290405
    3. ':
' → logprob: -2.17661714553833
    4. '   ' → logprob: -3.30161714553833
    5. '):' → logprob: -3.80161714553833
    6. '):
' → logprob: -4.17661714553833
    7. ')' → logprob: -4.55161714553833
    8. '           ' → logprob: -5.17661714553833
    9. '():' → logprob: -6.17661714553833
    10. '[' → logprob: -6.30161714553833

Token 1155: ' them' (ID: 1373)
  Prédit: 'them'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'them' → logprob: -0.548533022403717
    2. ' them' → logprob: -1.7985329627990723
    3. 'those' → logprob: -1.9235329627990723
    4. ' those' → logprob: -3.0485329627990723
    5. 'these' → logprob: -4.048532962799072
    6. 'the' → logprob: -4.423532962799072
    7. ' these' → logprob: -4.798532962799072
    8. 'micro' → logprob: -5.173532962799072
    9. ' microbes' → logprob: -5.423532962799072
    10. '   ' → logprob: -5.673532962799072

Token 1156: '.

' (ID: 364)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10090566426515579
    2. ':
' → logprob: -3.725905656814575
    3. '       ' → logprob: -3.725905656814575
    4. '):' → logprob: -4.350905895233154
    5. '[' → logprob: -4.975905895233154
    6. ')' → logprob: -4.975905895233154
    7. ',' → logprob: -5.475905895233154
    8. '():' → logprob: -5.975905895233154
    9. '.' → logprob: -6.350905895233154
    10. '(
' → logprob: -6.475905895233154

Token 1157: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16447857022285461
    2. ':' → logprob: -2.4144785404205322
    3. '):' → logprob: -4.039478778839111
    4. '           ' → logprob: -4.539478778839111
    5. ':
' → logprob: -4.539478778839111
    6. '   ' → logprob: -4.664478778839111
    7. ')' → logprob: -5.539478778839111
    8. '):
' → logprob: -5.664478778839111
    9. '
' → logprob: -6.414478778839111
    10. '        
' → logprob: -7.039478778839111

Token 1158: ' candidates' (ID: 18116)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011101466603577137
    2. ':' → logprob: -5.761101245880127
    3. '           ' → logprob: -6.261101245880127
    4. '):' → logprob: -6.261101245880127
    5. '):
' → logprob: -6.886101245880127
    6. 'def' → logprob: -7.136101245880127
    7. '   ' → logprob: -7.261101245880127
    8. ':
' → logprob: -7.886101245880127
    9. ')' → logprob: -8.011101722717285
    10. 'return' → logprob: -8.636101722717285

Token 1159: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02647794783115387
    2. '=' → logprob: -3.6514780521392822
    3. '_sorted' → logprob: -9.776477813720703
    4. '=[]' → logprob: -10.151477813720703
    5. 's' → logprob: -11.276477813720703
    6. ')' → logprob: -11.276477813720703
    7. ',' → logprob: -11.276477813720703
    8. '=[]
' → logprob: -11.651477813720703
    9. ':' → logprob: -11.901477813720703
    10. '[' → logprob: -12.026477813720703

Token 1160: ' [' (ID: 723)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.9325124621391296
    2. 'micro' → logprob: -1.4325125217437744
    3. '[]' → logprob: -1.9325125217437744
    4. ' microbes' → logprob: -2.5575125217437744
    5. ' sorted' → logprob: -2.9325125217437744
    6. '[m' → logprob: -3.4325125217437744
    7. '[' → logprob: -3.4325125217437744
    8. 'mic' → logprob: -4.807512283325195
    9. '[]
' → logprob: -5.307512283325195
    10. ' []' → logprob: -5.307512283325195

Token 1161: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.018322836607694626
    2. 'micro' → logprob: -4.268322944641113
    3. '(m' → logprob: -5.643322944641113
    4. 'mic' → logprob: -8.393322944641113
    5. ' m' → logprob: -10.018322944641113
    6. 'mc' → logprob: -10.143322944641113
    7. '*' → logprob: -10.268322944641113
    8. '   ' → logprob: -10.268322944641113
    9. 'ms' → logprob: -10.643322944641113
    10. '(-' → logprob: -10.643322944641113

Token 1162: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.08349549770355225
    2. 'for' → logprob: -2.708495616912842
    3. '.capacity' → logprob: -4.458495616912842
    4. ']' → logprob: -7.958495616912842
    5. '   ' → logprob: -7.958495616912842
    6. '.' → logprob: -8.208495140075684
    7. '
' → logprob: -8.333495140075684
    8. ')' → logprob: -8.708495140075684
    9. '	for' → logprob: -9.583495140075684
    10. 'capacity' → logprob: -9.708495140075684

Token 1163: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.5788430571556091
    2. ' m' → logprob: -0.8288430571556091
    3. ' microbes' → logprob: -6.828843116760254
    4. 'micro' → logprob: -7.328843116760254
    5. ' microorganisms' → logprob: -7.953843116760254
    6. ' ' → logprob: -8.703843116760254
    7. '	m' → logprob: -9.391343116760254
    8. ' micro' → logprob: -9.578843116760254
    9. 'c' → logprob: -9.766343116760254
    10. ' c' → logprob: -9.891343116760254

Token 1164: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10032646358013153
    2. 'in' → logprob: -2.3503265380859375
    3. ' ' → logprob: -10.475326538085938
    4. ' m' → logprob: -10.600326538085938
    5. 'm' → logprob: -11.350326538085938
    6. '   ' → logprob: -11.475326538085938
    7. '  ' → logprob: -11.725326538085938
    8. '.' → logprob: -12.100326538085938
    9. '
' → logprob: -12.225326538085938
    10. 'capacity' → logprob: -12.475326538085938

Token 1165: ' microbes' (ID: 156044)
  Prédit: 'micro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'micro' → logprob: -0.001613173633813858
    2. 'mic' → logprob: -6.626613140106201
    3. ' microbes' → logprob: -8.37661361694336
    4. 'mik' → logprob: -11.00161361694336
    5. 'm' → logprob: -11.62661361694336
    6. '[m' → logprob: -11.87661361694336
    7. ' micro' → logprob: -12.12661361694336
    8. 'self' → logprob: -12.25161361694336
    9. '[' → logprob: -12.62661361694336
    10. 'ms' → logprob: -13.12661361694336

Token 1166: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.09555906057357788
    2. 'if' → logprob: -2.4705591201782227
    3. '_sorted' → logprob: -5.345559120178223
    4. '           ' → logprob: -6.595559120178223
    5. '   ' → logprob: -8.970559120178223
    6. '       ' → logprob: -9.220559120178223
    7. '               ' → logprob: -9.970559120178223
    8. '            ' → logprob: -9.970559120178223
    9. '          ' → logprob: -10.095559120178223
    10. '        ' → logprob: -10.720559120178223

Token 1167: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.007637747563421726
    2. ' m' → logprob: -4.882637977600098
    3. '   ' → logprob: -10.507637977600098
    4. '(m' → logprob: -13.632637977600098
    5. 'capacity' → logprob: -14.007637977600098
    6. '	m' → logprob: -14.132637977600098
    7. ' capacity' → logprob: -15.257637977600098
    8. '    ' → logprob: -15.257637977600098
    9. '       ' → logprob: -15.757637977600098
    10. '           ' → logprob: -15.757637977600098

Token 1168: '.capacity' (ID: 124122)
  Prédit: '.capacity'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.capacity' → logprob: -0.0027876459062099457
    2. '.' → logprob: -6.7527875900268555
    3. '.cap' → logprob: -6.8777875900268555
    4. 'capacity' → logprob: -7.7527875900268555
    5. '   ' → logprob: -9.627787590026855
    6. ' .' → logprob: -9.752787590026855
    7. '```' → logprob: -11.502787590026855
    8. ' capacity' → logprob: -12.627787590026855
    9. '`.' → logprob: -13.002787590026855
    10. ').' → logprob: -13.002787590026855

Token 1169: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.5763927102088928
    2. ' >=' → logprob: -0.8263927102088928
    3. ']>=' → logprob: -8.826393127441406
    4. ')>=' → logprob: -9.326393127441406
    5. ' ' → logprob: -10.201393127441406
    6. '   ' → logprob: -10.201393127441406
    7. '>' → logprob: -10.826393127441406
    8. ')' → logprob: -10.826393127441406
    9. '```' → logprob: -11.076393127441406
    10. ']' → logprob: -11.451393127441406

Token 1170: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4973234534263611
    2. 'micro' → logprob: -1.2473235130310059
    3. ' microbes' → logprob: -3.122323513031006
    4. 'm' → logprob: -3.872323513031006
    5. 'k' → logprob: -4.122323513031006
    6. '1' → logprob: -5.122323513031006
    7. 'mic' → logprob: -5.747323513031006
    8. ' ' → logprob: -5.997323513031006
    9. 'min' → logprob: -6.122323513031006
    10. '(m' → logprob: -6.122323513031006

Token 1171: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1088438481092453
    2. 'micro' → logprob: -2.6088438034057617
    3. 'm' → logprob: -4.608843803405762
    4. 'min' → logprob: -5.233843803405762
    5. '1' → logprob: -5.358843803405762
    6. '(m' → logprob: -5.483843803405762
    7. 'k' → logprob: -6.358843803405762
    8. ' microbes' → logprob: -7.233843803405762
    9. 'mic' → logprob: -7.358843803405762
    10. '(' → logprob: -7.858843803405762

Token 1172: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.16730663180351257
    2. ']
' → logprob: -2.042306661605835
    3. ' and' → logprob: -4.542306423187256
    4. ' *' → logprob: -5.417306423187256
    5. '*k' → logprob: -5.667306423187256
    6. ' ]' → logprob: -6.542306423187256
    7. 'and' → logprob: -6.917306423187256
    8. ' ]
' → logprob: -7.542306423187256
    9. '][' → logprob: -7.792306423187256
    10. '*' → logprob: -7.792306423187256

Token 1173: ' ' (ID: 220)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1690698862075806
    2. '<|end|>' → logprob: -1.6690698862075806
    3. ']' → logprob: -2.169069766998291
    4. '
' → logprob: -2.294069766998291
    5. ':' → logprob: -2.669069766998291
    6. '.' → logprob: -2.919069766998291
    7. ')' → logprob: -3.044069766998291
    8. '[:]' → logprob: -3.669069766998291
    9. '<|end|>' → logprob: -4.294069766998291
    10. '       ' → logprob: -4.419069766998291

Token 1174: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.645864486694336
    2. '<|end|>' → logprob: -1.645864486694336
    3. ']' → logprob: -2.020864486694336
    4. '[' → logprob: -2.020864486694336
    5. ':' → logprob: -2.895864486694336
    6. ' if' → logprob: -3.020864486694336
    7. ')' → logprob: -3.145864486694336
    8. '[:' → logprob: -3.645864486694336
    9. 'if' → logprob: -3.645864486694336
    10. '.' → logprob: -3.770864486694336

Token 1175: ' all' (ID: 722)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.26094546914100647
    2. ')' → logprob: -2.8859455585479736
    3. ']' → logprob: -3.1359455585479736
    4. '<|end|>' → logprob: -3.7609455585479736
    5. '[' → logprob: -3.8859455585479736
    6. '       ' → logprob: -4.3859453201293945
    7. '#' → logprob: -4.7609453201293945
    8. '[:' → logprob: -5.1359453201293945
    9. '[:]' → logprob: -5.2609453201293945
    10. '```' → logprob: -5.2609453201293945

Token 1176: ' microbes' (ID: 156044)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3343089520931244
    2. '<|end|>' → logprob: -1.9593089818954468
    3. ')' → logprob: -2.4593088626861572
    4. '
' → logprob: -4.209309101104736
    5. '<|end|>' → logprob: -4.709309101104736
    6. '[' → logprob: -5.209309101104736
    7. ' if' → logprob: -5.334309101104736
    8. '.' → logprob: -5.584309101104736
    9. 'if' → logprob: -5.709309101104736
    10. '[:]' → logprob: -5.834309101104736

Token 1177: '
' (ID: 198)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.3826314210891724
    2. ']' → logprob: -1.6326314210891724
    3. '
' → logprob: -1.8826314210891724
    4. ')' → logprob: -2.007631301879883
    5. '<|end|>' → logprob: -2.632631301879883
    6. '.' → logprob: -2.882631301879883
    7. ':' → logprob: -3.507631301879883
    8. '[:]' → logprob: -3.757631301879883
    9. ' if' → logprob: -4.257631301879883
    10. '       ' → logprob: -4.382631301879883

Token 1178: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.7542226314544678
    2. '[' → logprob: -1.8792226314544678
    3. '           ' → logprob: -1.8792226314544678
    4. '.' → logprob: -2.0042226314544678
    5. '.sort' → logprob: -2.0042226314544678
    6. '[:]' → logprob: -2.7542226314544678
    7. '<|end|>' → logprob: -3.2542226314544678
    8. '
' → logprob: -3.3792226314544678
    9. '[:' → logprob: -3.7542226314544678
    10. ':' → logprob: -4.004222869873047

Token 1179: ' candidates' (ID: 18116)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9935240745544434
    2. '           ' → logprob: -1.8685240745544434
    3. '
' → logprob: -1.8685240745544434
    4. 'for' → logprob: -2.7435240745544434
    5. '.' → logprob: -2.8685240745544434
    6. 'if' → logprob: -3.1185240745544434
    7. ' if' → logprob: -3.6185240745544434
    8. '[' → logprob: -4.243524074554443
    9. ')' → logprob: -4.243524074554443
    10. '        
' → logprob: -4.493524074554443

Token 1180: '.sort' (ID: 19551)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1181: '(key' (ID: 8932)
  Prédit: '(key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(key' → logprob: -0.5396599769592285
    2. '(reverse' → logprob: -1.0396599769592285
    3. 'reverse' → logprob: -2.7896599769592285
    4. '(lambda' → logprob: -7.2896599769592285
    5. 'key' → logprob: -7.6646599769592285
    6. '(' → logprob: -8.28965950012207
    7. '(
' → logprob: -8.66465950012207
    8. '_reverse' → logprob: -8.66465950012207
    9. 'Reverse' → logprob: -8.91465950012207
    10. ' reverse' → logprob: -10.16465950012207

Token 1182: '=lambda' (ID: 64865)
  Prédit: '=lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -0.006704951170831919
    2. '(lambda' → logprob: -5.506704807281494
    3. '=' → logprob: -6.131704807281494
    4. 'lambda' → logprob: -8.256705284118652
    5. ' =' → logprob: -8.756705284118652
    6. ' lambda' → logprob: -12.381705284118652
    7. 'reverse' → logprob: -12.506705284118652
    8. '    ' → logprob: -12.756705284118652
    9. ')' → logprob: -12.756705284118652
    10. '   ' → logprob: -12.881705284118652

Token 1183: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.6462717652320862
    2. ' m' → logprob: -1.0212717056274414
    3. 'lambda' → logprob: -2.8962717056274414
    4. ' lambda' → logprob: -3.0212717056274414
    5. '=lambda' → logprob: -4.521271705627441
    6. '(lambda' → logprob: -7.646271705627441
    7. 'c' → logprob: -8.521271705627441
    8. '   ' → logprob: -9.521271705627441
    9. ' ' → logprob: -10.146271705627441
    10. '(m' → logprob: -10.396271705627441

Token 1184: ':' (ID: 25)
  Prédit: '=lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -0.03018801286816597
    2. '.capacity' → logprob: -4.155188083648682
    3. ',' → logprob: -4.905188083648682
    4. '.' → logprob: -5.530188083648682
    5. '.lambda' → logprob: -7.280188083648682
    6. '(lambda' → logprob: -7.655188083648682
    7. ':' → logprob: -8.280187606811523
    8. '=' → logprob: -8.280187606811523
    9. '.c' → logprob: -8.530187606811523
    10. ')' → logprob: -9.030187606811523

Token 1185: ' -' (ID: 533)
  Prédit: '(-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.6902987360954285
    2. '-cap' → logprob: -1.0652987957000732
    3. 'capacity' → logprob: -3.3152987957000732
    4. '-' → logprob: -3.3152987957000732
    5. 'm' → logprob: -3.5652987957000732
    6. ' -' → logprob: -4.565298557281494
    7. ' (-' → logprob: -4.815298557281494
    8. '(m' → logprob: -4.940298557281494
    9. '(cap' → logprob: -5.065298557281494
    10. '(lambda' → logprob: -5.440298557281494

Token 1186: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -1.1472419600977446e-06
    2. ' m' → logprob: -13.750000953674316
    3. '(m' → logprob: -16.750001907348633
    4. '   ' → logprob: -17.875001907348633
    5. ')m' → logprob: -18.750001907348633
    6. 'capacity' → logprob: -19.125001907348633
    7. '	m' → logprob: -19.750001907348633
    8. '
' → logprob: -20.500001907348633
    9. ')' → logprob: -20.875001907348633
    10. '(
' → logprob: -21.875001907348633

Token 1187: '.capacity' (ID: 124122)
  Prédit: '.capacity'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.capacity' → logprob: -2.8444881536415778e-05
    2. '.cap' → logprob: -10.750028610229492
    3. 'capacity' → logprob: -12.250028610229492
    4. '.' → logprob: -13.250028610229492
    5. ' .' → logprob: -16.375028610229492
    6. '.cost' → logprob: -16.750028610229492
    7. '._' → logprob: -17.125028610229492
    8. '.Cap' → logprob: -17.625028610229492
    9. ' capacity' → logprob: -18.000028610229492
    10. '
' → logprob: -18.250028610229492

Token 1188: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0029248257633298635
    2. '           ' → logprob: -6.877924919128418
    3. ')
' → logprob: -7.002924919128418
    4. '       ' → logprob: -8.002924919128418
    5. '[' → logprob: -8.377924919128418
    6. '[:' → logprob: -8.502924919128418
    7. ' )' → logprob: -9.627924919128418
    8. ')[' → logprob: -10.502924919128418
    9. ',' → logprob: -10.627924919128418
    10. '   ' → logprob: -10.627924919128418

Token 1189: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0776716098189354
    2. ' if' → logprob: -3.952671527862549
    3. '       ' → logprob: -4.327671527862549
    4. 'release' → logprob: -4.327671527862549
    5. '
' → logprob: -4.452671527862549
    6. 'if' → logprob: -5.827671527862549
    7. ' release' → logprob: -6.202671527862549
    8. ' releases' → logprob: -6.327671527862549
    9. '```' → logprob: -6.327671527862549
    10. ' for' → logprob: -6.702671527862549

Token 1190: ' #' (ID: 1069)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.40206897258758545
    2. 'release' → logprob: -2.152069091796875
    3. 'import' → logprob: -2.527069091796875
    4. '           ' → logprob: -3.027069091796875
    5. '       ' → logprob: -3.652069091796875
    6. 'if' → logprob: -3.777069091796875
    7. 're' → logprob: -4.277069091796875
    8. 'selected' → logprob: -5.902069091796875
    9. 'idx' → logprob: -6.027069091796875
    10. 'top' → logprob: -6.152069091796875

Token 1191: ' To' (ID: 2514)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.644055187702179
    2. 'import' → logprob: -1.3940551280975342
    3. 'if' → logprob: -2.394055128097534
    4. 'selected' → logprob: -3.269055128097534
    5. 'release' → logprob: -3.769055128097534
    6. 'left' → logprob: -3.769055128097534
    7. 're' → logprob: -4.019055366516113
    8. 'best' → logprob: -5.019055366516113
    9. 'min' → logprob: -5.394055366516113
    10. '   ' → logprob: -5.394055366516113

Token 1192: ' pick' (ID: 5230)
  Prédit: 'select'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'select' → logprob: -0.4565786123275757
    2. 'import' → logprob: -2.0815787315368652
    3. 'check' → logprob: -2.7065787315368652
    4. 'pick' → logprob: -3.0815787315368652
    5. 'avoid' → logprob: -3.2065787315368652
    6. 'find' → logprob: -3.9565787315368652
    7. 'from' → logprob: -4.456578731536865
    8. 'keep' → logprob: -4.831578731536865
    9. ' select' → logprob: -5.206578731536865
    10. 'def' → logprob: -5.456578731536865

Token 1193: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.035095952451229095
    2. 'the' → logprob: -3.5350959300994873
    3. ' the' → logprob: -6.410096168518066
    4. ' k' → logprob: -6.785096168518066
    5. 'top' → logprob: -7.035096168518066
    6. '`' → logprob: -8.410096168518066
    7. '```' → logprob: -8.410096168518066
    8. '   ' → logprob: -8.785096168518066
    9. 'first' → logprob: -8.910096168518066
    10. 'heap' → logprob: -9.160096168518066

Token 1194: ' microbes' (ID: 156044)
  Prédit: ' microbes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' microbes' → logprob: -0.7055858969688416
    2. 'c' → logprob: -2.0805859565734863
    3. 'micro' → logprob: -2.2055859565734863
    4. ' smallest' → logprob: -2.3305859565734863
    5. ' candidates' → logprob: -2.3305859565734863
    6. ' micro' → logprob: -4.205585956573486
    7. ' if' → logprob: -4.580585956573486
    8. '#' → logprob: -4.580585956573486
    9. ' releases' → logprob: -4.705585956573486
    10. ' #' → logprob: -5.205585956573486

Token 1195: ' with' (ID: 483)
  Prédit: 'with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'with' → logprob: -0.9584048986434937
    2. ' with' → logprob: -1.0834048986434937
    3. ',' → logprob: -2.083405017852783
    4. ':' → logprob: -2.583405017852783
    5. '           ' → logprob: -3.833405017852783
    6. ' if' → logprob: -4.833405017852783
    7. 'selected' → logprob: -5.083405017852783
    8. ' =' → logprob: -5.333405017852783
    9. '       ' → logprob: -5.583405017852783
    10. 'from' → logprob: -5.708405017852783

Token 1196: ' smallest' (ID: 42173)
  Prédit: 'lowest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lowest' → logprob: -0.3174673318862915
    2. ' smallest' → logprob: -1.9424673318862915
    3. 'small' → logprob: -2.442467212677002
    4. 'the' → logprob: -3.692467212677002
    5. 'minimal' → logprob: -4.817467212677002
    6. ' lowest' → logprob: -5.942467212677002
    7. 'release' → logprob: -6.192467212677002
    8. ' the' → logprob: -6.192467212677002
    9. ' minimal' → logprob: -7.317467212677002
    10. 'least' → logprob: -8.69246768951416

Token 1197: ' releases' (ID: 30979)
  Prédit: 'release'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'release' → logprob: -0.018905775621533394
    2. ' release' → logprob: -4.0189056396484375
    3. ' releases' → logprob: -7.5189056396484375
    4. '_release' → logprob: -9.268905639648438
    5. '.release' → logprob: -9.643905639648438
    6. 're' → logprob: -10.393905639648438
    7. ' m' → logprob: -11.893905639648438
    8. 'm' → logprob: -12.018905639648438
    9. '   ' → logprob: -13.143905639648438
    10. '-release' → logprob: -13.268905639648438

Token 1198: ' among' (ID: 6200)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0427651405334473
    2. ' releases' → logprob: -1.4177651405334473
    3. '           ' → logprob: -2.4177651405334473
    4. '[:' → logprob: -3.0427651405334473
    5. ',' → logprob: -3.2927651405334473
    6. 'selected' → logprob: -3.5427651405334473
    7. '=' → logprob: -3.5427651405334473
    8. '[' → logprob: -3.5427651405334473
    9. ' candidates' → logprob: -3.7927651405334473
    10. 'release' → logprob: -4.042765140533447

Token 1199: ' first' (ID: 1577)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.010032771155238152
    2. ' candidates' → logprob: -5.010032653808594
    3. 'the' → logprob: -5.760032653808594
    4. 'these' → logprob: -9.760032653808594
    5. 'those' → logprob: -10.260032653808594
    6. ' the' → logprob: -11.010032653808594
    7. '```' → logprob: -11.760032653808594
    8. 'them' → logprob: -12.260032653808594
    9. '   ' → logprob: -12.260032653808594
    10. '_candidates' → logprob: -12.260032653808594

Token 1200: ' idx' (ID: 14016)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0003273600013926625
    2. ' k' → logprob: -8.375327110290527
    3. 'c' → logprob: -9.375327110290527
    4. '`' → logprob: -12.125327110290527
    5. ' candidates' → logprob: -13.250327110290527
    6. '```' → logprob: -13.375327110290527
    7. '
' → logprob: -13.375327110290527
    8. '[k' → logprob: -14.625327110290527
    9. '[' → logprob: -16.000328063964844
    10. '   ' → logprob: -16.125328063964844

Token 1201: ' microbes' (ID: 156044)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.3745254278182983
    2. '=' → logprob: -1.6245254278182983
    3. '=k' → logprob: -1.9995254278182983
    4. '+' → logprob: -2.499525547027588
    5. '+k' → logprob: -2.499525547027588
    6. ' =' → logprob: -2.999525547027588
    7. '_candidates' → logprob: -3.124525547027588
    8. ' +' → logprob: -3.374525547027588
    9. 'k' → logprob: -3.749525547027588
    10. '_k' → logprob: -3.749525547027588

Token 1202: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8532276153564453
    2. '[:' → logprob: -0.9782276153564453
    3. '[' → logprob: -2.1032276153564453
    4. '=' → logprob: -4.103227615356445
    5. ':' → logprob: -4.103227615356445
    6. '_' → logprob: -4.853227615356445
    7. 's' → logprob: -4.978227615356445
    8. '_candidates' → logprob: -5.228227615356445
    9. '[:]' → logprob: -5.478227615356445
    10. ',' → logprob: -5.978227615356445

Token 1203: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12456114590167999
    2. '[' → logprob: -3.124561071395874
    3. ':' → logprob: -4.374561309814453
    4. ' =' → logprob: -4.499561309814453
    5. ' for' → logprob: -4.499561309814453
    6. '```' → logprob: -4.624561309814453
    7. 'for' → logprob: -4.874561309814453
    8. '       ' → logprob: -6.124561309814453
    9. '[
' → logprob: -6.249561309814453
    10. ':
' → logprob: -6.249561309814453

Token 1204: ' heap' (ID: 37237)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.706186056137085
    2. ' if' → logprob: -2.331186056137085
    3. ' for' → logprob: -2.456186056137085
    4. 'for' → logprob: -2.581186056137085
    5. 'i' → logprob: -2.956186056137085
    6. 'idx' → logprob: -3.331186056137085
    7. 'if' → logprob: -3.456186056137085
    8. '```' → logprob: -3.956186056137085
    9. ' i' → logprob: -4.081186294555664
    10. '       ' → logprob: -4.206186294555664

Token 1205: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10338182002305984
    2. '=' → logprob: -2.353381872177124
    3. '=[]' → logprob: -5.978381633758545
    4. '<|end|>' → logprob: -8.728382110595703
    5. '[' → logprob: -8.978382110595703
    6. ')' → logprob: -9.603382110595703
    7. '.' → logprob: -9.728382110595703
    8. ' ' → logprob: -9.853382110595703
    9. '=[]
' → logprob: -10.228382110595703
    10. '[
' → logprob: -10.728382110595703

Token 1206: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.06197194382548332
    2. ' []' → logprob: -2.81197190284729
    3. '[]
' → logprob: -13.186971664428711
    4. '[]}' → logprob: -13.561971664428711
    5. '[' → logprob: -14.186971664428711
    6. '[]>' → logprob: -15.311971664428711
    7. '[],' → logprob: -16.06197166442871
    8. '[]

' → logprob: -16.93697166442871
    9. '[])' → logprob: -17.06197166442871
    10. ' ' → logprob: -17.81197166442871

Token 1207: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4908120036125183
    2. ' for' → logprob: -1.490812063217163
    3. '       ' → logprob: -2.740812063217163
    4. ' total' → logprob: -3.490812063217163
    5. 'import' → logprob: -3.615812063217163
    6. 'for' → logprob: -4.240811824798584
    7. 'total' → logprob: -4.615811824798584
    8. ' import' → logprob: -5.740811824798584
    9. '   ' → logprob: -5.990811824798584
    10. '
' → logprob: -6.490811824798584

Token 1208: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.7284080982208252
    2. 'total' (adapté à ' total') → logprob: -1.2284080982208252
    3. ' for' → logprob: -2.478408098220825
    4. 'import' → logprob: -3.603408098220825
    5. 'sum' → logprob: -3.603408098220825
    6. 'for' → logprob: -3.978408098220825
    7. ' sum' → logprob: -4.103407859802246
    8. 'release' → logprob: -4.228407859802246
    9. ' import' → logprob: -4.853407859802246
    10. 'count' → logprob: -4.978407859802246

Token 1209: '_release' (ID: 59589)
  Prédit: '_release'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_release' → logprob: -0.00877139251679182
    2. '_' → logprob: -4.7587714195251465
    3. ' _' → logprob: -9.633770942687988
    4. '_re' → logprob: -10.633770942687988
    5. 'release' → logprob: -10.758770942687988
    6. '_rel' → logprob: -11.758770942687988
    7. '_sum' → logprob: -12.008770942687988
    8. '_return' → logprob: -12.133770942687988
    9. '_
' → logprob: -12.383770942687988
    10. '
' → logprob: -12.508770942687988

Token 1210: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.09980713576078415
    2. ' =' → logprob: -2.474807024002075
    3. ' +=' → logprob: -4.849807262420654
    4. '+=' → logprob: -5.849807262420654
    5. '+' → logprob: -10.474806785583496
    6. '_' → logprob: -10.974806785583496
    7. ' ' → logprob: -11.224806785583496
    8. ')' → logprob: -11.224806785583496
    9. '   ' → logprob: -11.599806785583496
    10. ' +' → logprob: -12.474806785583496

Token 1211: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0019286326132714748
    2. ' ' → logprob: -6.251928806304932
    3. ' ' → logprob: -17.251928329467773
    4. '   ' → logprob: -18.376928329467773
    5. '  ' → logprob: -18.876928329467773
    6. '    ' → logprob: -20.876928329467773
    7. '	' → logprob: -21.626928329467773
    8. '000' → logprob: -21.626928329467773
    9. ' ' → logprob: -21.876928329467773
    10. '
' → logprob: -22.126928329467773

Token 1212: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.625
    3. '000' → logprob: -19.875
    4. '   ' → logprob: -21.0
    5. '00' → logprob: -21.0
    6. '۰' → logprob: -22.0
    7. '=' → logprob: -22.625
    8. ' ' → logprob: -22.625
    9. ' ' → logprob: -23.0
    10. 'sum' → logprob: -23.125

Token 1213: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5983675718307495
    2. ' for' → logprob: -1.4733675718307495
    3. '       ' → logprob: -1.9733675718307495
    4. '
' → logprob: -3.223367691040039
    5. '           ' → logprob: -4.098367691040039
    6. '	for' → logprob: -4.973367691040039
    7. '   ' → logprob: -5.098367691040039
    8. ':' → logprob: -5.723367691040039
    9. ')' → logprob: -6.348367691040039
    10. '.' → logprob: -6.973367691040039

Token 1214: '           ' (ID: 352)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5871492624282837
    2. 'for' → logprob: -1.3371492624282837
    3. '           ' → logprob: -1.9621492624282837
    4. '       ' → logprob: -3.337149143218994
    5. '   ' → logprob: -5.587149143218994
    6. 'For' → logprob: -8.337149620056152
    7. '
' → logprob: -8.462149620056152
    8. '               ' → logprob: -8.712149620056152
    9. '	for' → logprob: -8.712149620056152
    10. '```' → logprob: -8.837149620056152

Token 1215: ' count' (ID: 3605)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.15588411688804626
    2. ' for' → logprob: -2.030884027481079
    3. '       ' → logprob: -4.780884265899658
    4. '           ' → logprob: -5.780884265899658
    5. '   ' → logprob: -6.905884265899658
    6. '	for' → logprob: -8.6558837890625
    7. 'i' → logprob: -8.9058837890625
    8. '```' → logprob: -9.0308837890625
    9. '
' → logprob: -10.0308837890625
    10. 'idx' → logprob: -10.5308837890625

Token 1216: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2520505487918854
    2. ' =' → logprob: -1.502050518989563
    3. ' +=' → logprob: -9.877050399780273
    4. '+=' → logprob: -10.627050399780273
    5. ',' → logprob: -10.877050399780273
    6. ')' → logprob: -12.252050399780273
    7. 'for' → logprob: -13.127050399780273
    8. '=
' → logprob: -13.377050399780273
    9. ':' → logprob: -13.502050399780273
    10. '<|end|>' → logprob: -13.502050399780273

Token 1217: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.022940978407859802
    2. 'k' → logprob: -3.8979408740997314
    3. ' ' → logprob: -6.1479411125183105
    4. ' k' → logprob: -8.272940635681152
    5. '
' → logprob: -14.522940635681152
    6. '1' → logprob: -15.022940635681152
    7. '	k' → logprob: -15.147940635681152
    8. '   ' → logprob: -15.460440635681152
    9. '```' → logprob: -16.02294158935547
    10. '[k' → logprob: -16.46044158935547

Token 1218: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.12696747481822968
    2. 'k' → logprob: -2.126967430114746
    3. ' ' → logprob: -10.751967430114746
    4. ' k' → logprob: -11.626967430114746
    5. '1' → logprob: -12.376967430114746
    6. 'len' → logprob: -14.501967430114746
    7. '[k' → logprob: -14.626967430114746
    8. '{k' → logprob: -14.751967430114746
    9. '[]' → logprob: -15.001967430114746
    10. '(k' → logprob: -15.126967430114746

Token 1219: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.1286710500717163
    2. 'for' → logprob: -1.2536710500717163
    3. '
' → logprob: -1.7536710500717163
    4. '           ' → logprob: -2.628671169281006
    5. '       ' → logprob: -2.628671169281006
    6. ':' → logprob: -3.503671169281006
    7. '   ' → logprob: -4.503671169281006
    8. '	for' → logprob: -4.753671169281006
    9. ':
' → logprob: -5.128671169281006
    10. '\n' → logprob: -5.378671169281006

Token 1220: '           ' (ID: 352)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6316811442375183
    2. '           ' → logprob: -1.131681203842163
    3. ' for' → logprob: -2.631681203842163
    4. '       ' → logprob: -2.756681203842163
    5. '   ' → logprob: -5.256680965423584
    6. '
' → logprob: -6.256680965423584
    7. '	for' → logprob: -6.756680965423584
    8. '               ' → logprob: -7.381680965423584
    9. '```' → logprob: -8.881681442260742
    10. ':' → logprob: -9.006681442260742

Token 1221: ' min' (ID: 1349)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7071632146835327
    2. ' for' → logprob: -0.8321632146835327
    3. '       ' → logprob: -3.2071633338928223
    4. '           ' → logprob: -3.7071633338928223
    5. '   ' → logprob: -5.707163333892822
    6. '
' → logprob: -5.832163333892822
    7. 'i' → logprob: -9.332162857055664
    8. ' 
' → logprob: -9.457162857055664
    9. '    
' → logprob: -9.832162857055664
    10. '            
' → logprob: -9.957162857055664

Token 1222: '_capacity' (ID: 85527)
  Prédit: '_capacity'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_capacity' → logprob: -0.03130611404776573
    2. '_cap' → logprob: -4.156306266784668
    3. '_' → logprob: -4.781306266784668
    4. '_b' → logprob: -5.156306266784668
    5. 'capacity' → logprob: -8.156306266784668
    6. '_c' → logprob: -9.031306266784668
    7. '_micro' → logprob: -9.031306266784668
    8. '_release' → logprob: -9.406306266784668
    9. '_m' → logprob: -9.531306266784668
    10. '_caps' → logprob: -9.906306266784668

Token 1223: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5252284407615662
    2. ' =' → logprob: -0.9002284407615662
    3. ')' → logprob: -7.025228500366211
    4. ',' → logprob: -7.775228500366211
    5. '_' → logprob: -8.150228500366211
    6. '_idx' → logprob: -9.025228500366211
    7. '```' → logprob: -9.400228500366211
    8. '_index' → logprob: -9.775228500366211
    9. '_=' → logprob: -10.900228500366211
    10. ':' → logprob: -11.025228500366211

Token 1224: ' None' (ID: 4662)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.6283165216445923
    2. 'float' → logprob: -0.8783165216445923
    3. 'micro' → logprob: -3.6283164024353027
    4. '10' → logprob: -4.503316402435303
    5. '1' → logprob: -5.253316402435303
    6. 'None' → logprob: -5.503316402435303
    7. ' float' → logprob: -6.628316402435303
    8. 'mic' → logprob: -7.003316402435303
    9. ' candidates' → logprob: -7.753316402435303
    10. 'm' → logprob: -7.753316402435303

Token 1225: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3661535084247589
    2. ':
' → logprob: -2.3661534786224365
    3. '           ' → logprob: -2.9911534786224365
    4. ' for' → logprob: -3.2411534786224365
    5. '       ' → logprob: -3.3661534786224365
    6. ':' → logprob: -3.6161534786224365
    7. 'for' → logprob: -4.116153717041016
    8. '\n' → logprob: -4.741153717041016
    9. ' 
' → logprob: -4.991153717041016
    10. '   ' → logprob: -5.366153717041016

Token 1226: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2776336669921875
    2. '       ' → logprob: -2.4026336669921875
    3. '
' → logprob: -2.4026336669921875
    4. ' for' → logprob: -3.2776336669921875
    5. '   ' → logprob: -4.7776336669921875
    6. 'for' → logprob: -4.9026336669921875
    7. '\n' → logprob: -6.4026336669921875
    8. '    
' → logprob: -6.5276336669921875
    9. '            
' → logprob: -7.2776336669921875
    10. '<|end|>' → logprob: -7.5276336669921875

Token 1227: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.22010201215744019
    2. '           ' → logprob: -2.345102071762085
    3. ' for' → logprob: -2.720102071762085
    4. '       ' → logprob: -3.345102071762085
    5. '   ' → logprob: -7.595101833343506
    6. 'i' → logprob: -9.845102310180664
    7. '
' → logprob: -10.970102310180664
    8. '```' → logprob: -11.095102310180664
    9. 'index' → logprob: -12.845102310180664
    10. ' i' → logprob: -13.345102310180664

Token 1228: ' i' (ID: 575)
  Prédit: ' m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.08189503848552704
    2. 'm' → logprob: -2.706895112991333
    3. ' i' → logprob: -4.831894874572754
    4. 'i' → logprob: -6.456894874572754
    5. ' micro' → logprob: -6.706894874572754
    6. 'micro' → logprob: -7.331894874572754
    7. ' ' → logprob: -8.456894874572754
    8. ' _' → logprob: -9.581894874572754
    9. ' idx' → logprob: -9.956894874572754
    10. '	m' → logprob: -10.206894874572754

Token 1229: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.14795084297657013
    2. 'in' → logprob: -2.0229508876800537
    3. '<|end|>' → logprob: -6.522950649261475
    4. '=' → logprob: -6.772950649261475
    5. ' ' → logprob: -7.147950649261475
    6. '+' → logprob: -8.022951126098633
    7. '0' → logprob: -8.397951126098633
    8. '[' → logprob: -8.772951126098633
    9. '<|end|>' → logprob: -9.022951126098633
    10. ',' → logprob: -9.147951126098633

Token 1230: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.01274766307324171
    2. ' range' → logprob: -4.387747764587402
    3. 'c' → logprob: -8.387747764587402
    4. 're' → logprob: -12.887747764587402
    5. 'micro' → logprob: -13.262747764587402
    6. '0' → logprob: -13.387747764587402
    7. ' candidates' → logprob: -13.762747764587402
    8. '	range' → logprob: -13.887747764587402
    9. 'm' → logprob: -14.262747764587402
    10. 'len' → logprob: -14.887747764587402

Token 1231: '(len' (ID: 14990)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.047427646815776825
    2. 'self' → logprob: -3.4224276542663574
    3. '0' → logprob: -4.547427654266357
    4. 'len' → logprob: -6.047427654266357
    5. 'count' → logprob: -8.5474271774292
    6. ' k' → logprob: -8.9224271774292
    7. 'i' → logprob: -9.2974271774292
    8. ' self' → logprob: -9.5474271774292
    9. '1' → logprob: -9.7974271774292
    10. '(k' → logprob: -10.4224271774292

Token 1232: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.06429005414247513
    2. '(m' → logprob: -3.0642900466918945
    3. 'c' → logprob: -4.1892900466918945
    4. ' (' → logprob: -9.064290046691895
    5. '(' → logprob: -9.189290046691895
    6. 'micro' → logprob: -9.564290046691895
    7. '(heap' → logprob: -9.939290046691895
    8. ')' → logprob: -11.189290046691895
    9. ' candidates' → logprob: -11.439290046691895
    10. ')c' → logprob: -11.439290046691895

Token 1233: 'andidates' (ID: 38168)
  Prédit: 'andidates'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'andidates' → logprob: -0.13228149712085724
    2. 'a' → logprob: -3.257281541824341
    3. ')' → logprob: -3.382281541824341
    4. 'and' → logprob: -3.757281541824341
    5. 'an' → logprob: -5.132281303405762
    6. '[' → logprob: -5.507281303405762
    7. 'micro' → logprob: -5.882281303405762
    8. '```' → logprob: -6.257281303405762
    9. 'andidate' → logprob: -6.382281303405762
    10. 'andidat' → logprob: -6.757281303405762

Token 1234: ')):
' (ID: 22530)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.044005148112773895
    2. '):' → logprob: -3.1690051555633545
    3. '       ' → logprob: -8.044005393981934
    4. '           ' → logprob: -8.169005393981934
    5. ')' → logprob: -8.919005393981934
    6. '   ' → logprob: -9.919005393981934
    7. '-' → logprob: -10.169005393981934
    8. ')):
' → logprob: -10.669005393981934
    9. '):
' → logprob: -10.794005393981934
    10. '[' → logprob: -10.919005393981934

Token 1235: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.14645904302597046
    2. '       ' → logprob: -2.8964591026306152
    3. ' if' → logprob: -3.2714591026306152
    4. '           ' → logprob: -3.3964591026306152
    5. '   ' → logprob: -5.521459102630615
    6. '    ' → logprob: -6.771459102630615
    7. '            ' → logprob: -7.021459102630615
    8. '        ' → logprob: -7.771459102630615
    9. ' ' → logprob: -8.146458625793457
    10. '	           ' → logprob: -8.146458625793457

Token 1236: ' m' (ID: 284)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.284130573272705
    2. 'm' (adapté à ' m') → logprob: -1.409130573272705
    3. 'if' → logprob: -1.909130573272705
    4. 'micro' → logprob: -2.034130573272705
    5. '       ' → logprob: -2.534130573272705
    6. '           ' → logprob: -2.909130573272705
    7. ' m' → logprob: -3.659130573272705
    8. '               ' → logprob: -4.284130573272705
    9. '   ' → logprob: -4.784130573272705
    10. ' micro' → logprob: -5.159130573272705

Token 1237: ' =' (ID: 314)
  Prédit: '.capacity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.capacity' → logprob: -0.4015354514122009
    2. '.' → logprob: -1.6515355110168457
    3. ' =' → logprob: -2.7765355110168457
    4. '=' → logprob: -3.1515355110168457
    5. ' .' → logprob: -5.526535511016846
    6. 'capacity' → logprob: -5.651535511016846
    7. '   ' → logprob: -5.651535511016846
    8. '       ' → logprob: -5.776535511016846
    9. '```' → logprob: -6.401535511016846
    10. '.c' → logprob: -6.526535511016846

Token 1238: ' candidates' (ID: 18116)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.42888161540031433
    2. ' candidates' → logprob: -1.0538816452026367
    3. ' c' → logprob: -9.053881645202637
    4. '_candidates' → logprob: -10.678881645202637
    5. '	c' → logprob: -11.553881645202637
    6. ' candidats' → logprob: -11.678881645202637
    7. ')c' → logprob: -12.053881645202637
    8. 'cand' → logprob: -12.553881645202637
    9. 'andidates' → logprob: -13.053881645202637
    10. ' candidatos' → logprob: -13.178881645202637

Token 1239: '[i' (ID: 1768)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1240: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.28164589405059814
    2. '):
' → logprob: -1.7816458940505981
    3. ')
' → logprob: -2.6566457748413086
    4. '):' → logprob: -5.406645774841309
    5. ',' → logprob: -8.031645774841309
    6. '               ' → logprob: -8.156645774841309
    7. '       ' → logprob: -8.156645774841309
    8. '           ' → logprob: -8.531645774841309
    9. '                   ' → logprob: -8.656645774841309
    10. '   ' → logprob: -8.906645774841309

Token 1241: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2722918391227722
    2. ' if' → logprob: -2.022291898727417
    3. '           ' → logprob: -2.522291898727417
    4. '   ' → logprob: -4.522291660308838
    5. '       ' → logprob: -5.022291660308838
    6. '                   ' → logprob: -5.647291660308838
    7. '	           ' → logprob: -6.647291660308838
    8. 'if' → logprob: -7.147291660308838
    9. '	       ' → logprob: -7.772291660308838
    10. '
' → logprob: -7.772291660308838

Token 1242: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5127902626991272
    2. ' if' → logprob: -1.3877902030944824
    3. 'import' → logprob: -2.5127902030944824
    4. '   ' → logprob: -3.5127902030944824
    5. '           ' → logprob: -3.5127902030944824
    6. 'heap' → logprob: -5.762790203094482
    7. ' import' → logprob: -5.887790203094482
    8. '               ' → logprob: -6.512790203094482
    9. '       ' → logprob: -6.887790203094482
    10. '```' → logprob: -7.137790203094482

Token 1243: ' Push' (ID: 42245)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.1933714896440506
    2. ' if' → logprob: -2.568371534347534
    3. 'import' → logprob: -2.568371534347534
    4. 'heap' → logprob: -4.818371295928955
    5. '           ' → logprob: -5.193371295928955
    6. '   ' → logprob: -5.193371295928955
    7. ' import' → logprob: -6.443371295928955
    8. ' heap' → logprob: -7.943371295928955
    9. '```' → logprob: -8.193371772766113
    10. '               ' → logprob: -8.318371772766113

Token 1244: ' release' (ID: 8232)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.3204478621482849
    2. ' heap' → logprob: -1.6954479217529297
    3. 'm' → logprob: -3.5704479217529297
    4. '(-' → logprob: -4.57044792175293
    5. 'he' → logprob: -4.69544792175293
    6. '(' → logprob: -4.82044792175293
    7. '(m' → logprob: -4.94544792175293
    8. '(heap' → logprob: -4.94544792175293
    9. ' m' → logprob: -5.07044792175293
    10. ' (' → logprob: -5.57044792175293

Token 1245: '
' (ID: 198)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.8952754139900208
    2. '(heap' → logprob: -1.520275354385376
    3. '               ' → logprob: -1.770275354385376
    4. ' heap' → logprob: -2.770275354385376
    5. '           ' → logprob: -2.770275354385376
    6. ',' → logprob: -3.395275354385376
    7. ')' → logprob: -4.395275592803955
    8. '.' → logprob: -5.270275592803955
    9. 'import' → logprob: -5.395275592803955
    10. '=' → logprob: -5.520275592803955

Token 1246: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7672363519668579
    2. '           ' → logprob: -1.017236351966858
    3. ',' → logprob: -2.6422362327575684
    4. 'heap' → logprob: -3.6422362327575684
    5. '(heap' → logprob: -3.7672362327575684
    6. ')' → logprob: -4.267236232757568
    7. ' =' → logprob: -4.892236232757568
    8. '=' → logprob: -5.267236232757568
    9. '                   ' → logprob: -5.267236232757568
    10. ' heap' → logprob: -5.767236232757568

Token 1247: ' if' (ID: 538)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.1600145846605301
    2. '               ' → logprob: -3.2850146293640137
    3. 'heap' → logprob: -3.4100146293640137
    4. ' if' → logprob: -3.5350146293640137
    5. 'if' (adapté à ' if') → logprob: -3.6600146293640137
    6. ' heap' → logprob: -4.785014629364014
    7. ' import' → logprob: -5.285014629364014
    8. '                   ' → logprob: -5.785014629364014
    9. 'from' → logprob: -6.660014629364014
    10. '```' → logprob: -6.910014629364014

Token 1248: ' len' (ID: 4631)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.26335883140563965
    2. 'len' → logprob: -1.5133588314056396
    3. ' count' → logprob: -5.013359069824219
    4. ' len' → logprob: -5.388359069824219
    5. '(len' → logprob: -9.388359069824219
    6. '(count' → logprob: -10.263359069824219
    7. '   ' → logprob: -11.638359069824219
    8. ' ' → logprob: -12.138359069824219
    9. 'i' → logprob: -12.763359069824219
    10. ' (' → logprob: -12.888359069824219

Token 1249: '(heap' (ID: 173794)
  Prédit: '(heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(heap' → logprob: -0.1020844578742981
    2. 'heap' → logprob: -2.3520843982696533
    3. '(
' → logprob: -6.977084636688232
    4. '(' → logprob: -7.727084636688232
    5. ' heap' → logprob: -7.977084636688232
    6. ' (' → logprob: -8.977084159851074
    7. '```' → logprob: -10.977084159851074
    8. ' (
' → logprob: -12.727084159851074
    9. '_heap' → logprob: -12.852084159851074
    10. 'he' → logprob: -13.102084159851074

Token 1250: ')' (ID: 8)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.4217194616794586
    2. ' <' → logprob: -1.4217194318771362
    3. ')' → logprob: -2.671719551086426
    4. '==' → logprob: -3.921719551086426
    5. ' ==' → logprob: -4.921719551086426
    6. '>' → logprob: -6.171719551086426
    7. ')<' → logprob: -6.921719551086426
    8. '<int' → logprob: -7.421719551086426
    9. '```' → logprob: -7.796719551086426
    10. '<size' → logprob: -8.171719551086426

Token 1251: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.3878437578678131
    2. ' <' → logprob: -1.1378437280654907
    3. '==' → logprob: -7.887843608856201
    4. ' ==' → logprob: -8.76284408569336
    5. '<int' → logprob: -9.38784408569336
    6. '<size' → logprob: -9.76284408569336
    7. '```' → logprob: -10.13784408569336
    8. '>' → logprob: -10.38784408569336
    9. '<
' → logprob: -10.38784408569336
    10. '<len' → logprob: -10.76284408569336

Token 1252: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -3.054500666621607e-06
    2. ' k' → logprob: -12.75000286102295
    3. '{k' → logprob: -15.87500286102295
    4. '	k' → logprob: -18.375003814697266
    5. '
' → logprob: -18.875003814697266
    6. '[k' → logprob: -19.625003814697266
    7. '```' → logprob: -19.750003814697266
    8. '=k' → logprob: -20.125003814697266
    9. '[' → logprob: -20.125003814697266
    10. '(k' → logprob: -20.500003814697266

Token 1253: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3889259099960327
    2. ':
' → logprob: -1.1389259099960327
    3. '               ' → logprob: -7.013926029205322
    4. ' or' → logprob: -7.763926029205322
    5. '           ' → logprob: -8.013925552368164
    6. '   ' → logprob: -9.138925552368164
    7. '                   ' → logprob: -9.388925552368164
    8. 'heap' → logprob: -10.513925552368164
    9. '                       ' → logprob: -10.638925552368164
    10. '       ' → logprob: -11.138925552368164

Token 1254: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.2380426675081253
    2. '               ' → logprob: -1.6130427122116089
    3. '                       ' → logprob: -4.988042831420898
    4. '```' → logprob: -5.738042831420898
    5. ' heap' → logprob: -7.238042831420898
    6. '
' → logprob: -7.738042831420898
    7. '``' → logprob: -8.738042831420898
    8. '                           ' → logprob: -8.738042831420898
    9. '                ' → logprob: -8.863042831420898
    10. '   ' → logprob: -9.113042831420898

Token 1255: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' (adapté à ' import') → logprob: -0.28641414642333984
    2. 'heap' → logprob: -1.5364141464233398
    3. '                   ' → logprob: -4.53641414642334
    4. 'he' → logprob: -4.66141414642334
    5. '                           ' → logprob: -5.41141414642334
    6. ' heap' → logprob: -5.66141414642334
    7. '               ' → logprob: -6.16141414642334
    8. '                       ' → logprob: -6.66141414642334
    9. '```' → logprob: -7.16141414642334
    10. ' he' → logprob: -7.78641414642334

Token 1256: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.00043162284418940544
    2. ' heap' → logprob: -7.750431537628174
    3. 'he' → logprob: -14.500432014465332
    4. '   ' → logprob: -15.125432014465332
    5. '```' → logprob: -15.500432014465332
    6. '_heap' → logprob: -17.625431060791016
    7. '`' → logprob: -18.875431060791016
    8. '
' → logprob: -19.125431060791016
    9. '       ' → logprob: -19.125431060791016
    10. '(heap' → logprob: -19.625431060791016

Token 1257: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -4.008129963040119e-06
    2. 'queue' → logprob: -13.875003814697266
    3. '[' → logprob: -14.000003814697266
    4. '```' → logprob: -14.250003814697266
    5. 'push' → logprob: -14.500003814697266
    6. 'p' → logprob: -15.000003814697266
    7. 'ify' → logprob: -15.000003814697266
    8. 't' → logprob: -17.000003814697266
    9. '[
' → logprob: -17.125003814697266
    10. 'heap' → logprob: -17.250003814697266

Token 1258: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.2751958966255188
    2. '
' → logprob: -2.150195837020874
    3. 'heap' → logprob: -2.525195837020874
    4. '(heap' → logprob: -4.275196075439453
    5. '               ' → logprob: -4.650196075439453
    6. 'he' → logprob: -5.150196075439453
    7. '           ' → logprob: -5.400196075439453
    8. '                       ' → logprob: -5.650196075439453
    9. '       ' → logprob: -6.150196075439453
    10. '   ' → logprob: -7.025196075439453

Token 1259: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.17512856423854828
    2. 'heap' → logprob: -2.05012845993042
    3. '                       ' → logprob: -4.67512845993042
    4. '
' → logprob: -5.30012845993042
    5. '               ' → logprob: -5.42512845993042
    6. '(heap' → logprob: -5.55012845993042
    7. 'he' → logprob: -5.80012845993042
    8. ' heap' → logprob: -5.92512845993042
    9. '           ' → logprob: -6.42512845993042
    10. '                           ' → logprob: -7.42512845993042

Token 1260: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' (adapté à ' heap') → logprob: -0.003675490617752075
    2. '                   ' → logprob: -5.75367546081543
    3. 'he' → logprob: -8.50367546081543
    4. '                       ' → logprob: -8.75367546081543
    5. '               ' → logprob: -9.75367546081543
    6. ' heap' → logprob: -9.87867546081543
    7. '           ' → logprob: -11.50367546081543
    8. '                           ' → logprob: -12.00367546081543
    9. '   ' → logprob: -12.25367546081543
    10. '       ' → logprob: -13.00367546081543

Token 1261: 'q' (ID: 80)
  Prédit: '.he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -0.02639957144856453
    2. '.' → logprob: -4.276399612426758
    3. 'q' → logprob: -4.776399612426758
    4. '.push' → logprob: -6.401399612426758
    5. '.heap' → logprob: -6.651399612426758
    6. ').' → logprob: -8.401399612426758
    7. 'he' → logprob: -8.651399612426758
    8. '.append' → logprob: -8.901399612426758
    9. ' .' → logprob: -9.776399612426758
    10. 'app' → logprob: -10.401399612426758

Token 1262: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -0.00029470553272403777
    2. '.' → logprob: -8.62529468536377
    3. '.heap' → logprob: -9.25029468536377
    4. '.push' → logprob: -11.12529468536377
    5. 'he' → logprob: -13.25029468536377
    6. ' .' → logprob: -14.12529468536377
    7. ' he' → logprob: -14.50029468536377
    8. ').' → logprob: -15.12529468536377
    9. '.He' → logprob: -15.62529468536377
    10. '.put' → logprob: -15.87529468536377

Token 1263: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -8.625866030342877e-05
    2. 'ap' → logprob: -9.625085830688477
    3. 'push' → logprob: -11.750085830688477
    4. 'pp' → logprob: -12.000085830688477
    5. '```' → logprob: -12.500085830688477
    6. 'append' → logprob: -14.500085830688477
    7. 'a' → logprob: -14.750085830688477
    8. 'appen' → logprob: -14.875085830688477
    9. 'p' → logprob: -15.250085830688477
    10. '
' → logprob: -15.750085830688477

Token 1264: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.36976268887519836
    2. 'app' → logprob: -1.244762659072876
    3. 'ap' → logprob: -4.744762897491455
    4. 'op' → logprob: -4.869762897491455
    5. 'push' → logprob: -5.494762897491455
    6. '[' → logprob: -9.119762420654297
    7. 'pp' → logprob: -9.244762420654297
    8. '```' → logprob: -9.244762420654297
    9. 'p' → logprob: -9.369762420654297
    10. 'u' → logprob: -9.869762420654297

Token 1265: '(heap' (ID: 173794)
  Prédit: '(heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(heap' → logprob: -0.0008282098569907248
    2. '(' → logprob: -7.125828266143799
    3. ' (' → logprob: -10.87582778930664
    4. '(
' → logprob: -12.75082778930664
    5. ' heap' → logprob: -13.87582778930664
    6. 'heap' → logprob: -14.12582778930664
    7. ')' → logprob: -16.37582778930664
    8. '```' → logprob: -16.75082778930664
    9. '(h' → logprob: -17.12582778930664
    10. ' (
' → logprob: -17.12582778930664

Token 1266: ',' (ID: 11)
  Prédit: '(heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(heap' → logprob: -0.012297602370381355
    2. ',' → logprob: -5.012297630310059
    3. ' heap' → logprob: -6.512297630310059
    4. ' (' → logprob: -6.512297630310059
    5. ')' → logprob: -6.637297630310059
    6. 'heap' → logprob: -7.512297630310059
    7. ' ,' → logprob: -7.762297630310059
    8. '(' → logprob: -8.762297630310059
    9. ' )' → logprob: -9.512297630310059
    10. '[' → logprob: -11.012297630310059

Token 1267: ' -' (ID: 533)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.00043674863991327584
    2. ' m' → logprob: -7.750436782836914
    3. '                   ' → logprob: -12.625436782836914
    4. '(m' → logprob: -13.625436782836914
    5. '               ' → logprob: -14.125436782836914
    6. '           ' → logprob: -15.250436782836914
    7. '(' → logprob: -15.375436782836914
    8. ' (' → logprob: -15.875436782836914
    9. '                       ' → logprob: -16.250436782836914
    10. '   ' → logprob: -16.750436782836914

Token 1268: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -4.320199877838604e-07
    2. ' m' → logprob: -14.875
    3. '(m' → logprob: -18.125
    4. ')' → logprob: -18.625
    5. '```' → logprob: -19.5
    6. ')m' → logprob: -19.875
    7. 'heap' → logprob: -20.625
    8. '   ' → logprob: -21.0
    9. '           ' → logprob: -21.25
    10. '	m' → logprob: -21.25

Token 1269: '.release' (ID: 50070)
  Prédit: '.release'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.release' → logprob: -0.0010559145594015718
    2. 'release' → logprob: -6.876055717468262
    3. '.' → logprob: -11.001055717468262
    4. ' .' → logprob: -13.126055717468262
    5. '.re' → logprob: -14.126055717468262
    6. '_release' → logprob: -14.376055717468262
    7. '```' → logprob: -14.376055717468262
    8. '   ' → logprob: -14.501055717468262
    9. '.capacity' → logprob: -14.876055717468262
    10. ' release' → logprob: -15.126055717468262

Token 1270: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002671768015716225
    2. ' )' → logprob: -8.500267028808594
    3. ')
' → logprob: -9.750267028808594
    4. '<|end|>' → logprob: -12.750267028808594
    5. '               ' → logprob: -14.250267028808594
    6. '           ' → logprob: -15.000267028808594
    7. '                   ' → logprob: -15.000267028808594
    8. ')return' → logprob: -15.375267028808594
    9. ')#' → logprob: -15.750267028808594
    10. ' )
' → logprob: -16.000267028808594

Token 1271: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1272: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1273: ' max' (ID: 2999)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1625484675168991
    2. ' )' → logprob: -2.537548542022705
    3. 'heap' → logprob: -3.537548542022705
    4. 'm' → logprob: -3.537548542022705
    5. '<|end|>' → logprob: -5.162548542022705
    6. ''' → logprob: -7.037548542022705
    7. '')' → logprob: -7.037548542022705
    8. '(heap' → logprob: -7.287548542022705
    9. ' ' → logprob: -7.412548542022705
    10. ' m' → logprob: -7.412548542022705

Token 1274: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.21898238360881805
    2. ')' → logprob: -2.218982458114624
    3. '_heap' → logprob: -2.468982458114624
    4. ' heap' → logprob: -6.343982219696045
    5. '(heap' → logprob: -7.343982219696045
    6. 'q' → logprob: -8.468982696533203
    7. '-' → logprob: -8.593982696533203
    8. 'Heap' → logprob: -8.593982696533203
    9. 'he' → logprob: -9.093982696533203
    10. '.heap' → logprob: -10.218982696533203

Token 1275: ' by' (ID: 656)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5822345614433289
    2. '<|end|>' → logprob: -0.9572345614433289
    3. '               ' → logprob: -3.8322346210479736
    4. '                   ' → logprob: -4.3322343826293945
    5. '<|end|>' → logprob: -5.3322343826293945
    6. ' 
' → logprob: -5.5822343826293945
    7. '           ' → logprob: -5.9572343826293945
    8. ' )' → logprob: -6.2072343826293945
    9. ' ' → logprob: -6.4572343826293945
    10. '
' → logprob: -6.8322343826293945

Token 1276: ' pushing' (ID: 34364)
  Prédit: 'release'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'release' → logprob: -0.14140105247497559
    2. ' release' → logprob: -2.3914010524749756
    3. 'm' → logprob: -3.3914010524749756
    4. ' m' → logprob: -5.516401290893555
    5. '-release' → logprob: -6.641401290893555
    6. 'value' → logprob: -7.766401290893555
    7. ')' → logprob: -8.391401290893555
    8. 'push' → logprob: -8.391401290893555
    9. '_release' → logprob: -9.141401290893555
    10. 'import' → logprob: -9.641401290893555

Token 1277: ' negative' (ID: 12626)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.2837951183319092
    2. '-m' → logprob: -2.283795118331909
    3. ' -' → logprob: -2.283795118331909
    4. '-' → logprob: -3.783795118331909
    5. ' m' → logprob: -3.908795118331909
    6. '(-' → logprob: -8.408795356750488
    7. '+m' → logprob: -9.158795356750488
    8. '   ' → logprob: -10.658795356750488
    9. ' ' → logprob: -11.158795356750488
    10. '+' → logprob: -11.533795356750488

Token 1278: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01544716116040945
    2. '<|end|>' → logprob: -4.26544713973999
    3. ' )' → logprob: -6.89044713973999
    4. '<|end|>' → logprob: -8.765447616577148
    5. ')
' → logprob: -10.640447616577148
    6. ')return' → logprob: -10.640447616577148
    7. '),' → logprob: -12.140447616577148
    8. ']' → logprob: -12.515447616577148
    9. '_release' → logprob: -12.515447616577148
    10. ' ' → logprob: -12.765447616577148

Token 1279: '                   ' (ID: 699)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1280: ' total' (ID: 3609)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.8819920420646667
    2. '               ' → logprob: -1.1319921016693115
    3. ' ' → logprob: -2.8819921016693115
    4. '           ' → logprob: -2.8819921016693115
    5. '                ' → logprob: -3.6319921016693115
    6. 'total' (adapté à ' total') → logprob: -4.006991863250732
    7. ')' → logprob: -4.131991863250732
    8. '                               ' → logprob: -4.381991863250732
    9. '                           ' → logprob: -4.506991863250732
    10. ' total' → logprob: -4.631991863250732

Token 1281: '_release' (ID: 59589)
  Prédit: '_release'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_release' → logprob: -0.0049997554160654545
    2. '_' → logprob: -5.87999963760376
    3. 'q' → logprob: -7.37999963760376
    4. '_heap' → logprob: -7.62999963760376
    5. 'release' → logprob: -8.755000114440918
    6. '+' → logprob: -9.130000114440918
    7. 'heap' → logprob: -9.380000114440918
    8. '```' → logprob: -9.380000114440918
    9. ')' → logprob: -9.505000114440918
    10. '_RELEASE' → logprob: -9.630000114440918

Token 1282: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.6345012784004211
    2. '+=' → logprob: -0.7595012784004211
    3. '+' → logprob: -6.7595014572143555
    4. ' +' → logprob: -7.8845014572143555
    5. ' -=' → logprob: -8.509501457214355
    6. '=' → logprob: -9.259501457214355
    7. '-=' → logprob: -10.884501457214355
    8. ' =' → logprob: -11.509501457214355
    9. ']+=' → logprob: -11.509501457214355
    10. ')' → logprob: -11.884501457214355

Token 1283: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.002475777640938759
    2. ' m' → logprob: -6.002475738525391
    3. '+m' → logprob: -17.50247573852539
    4. '	m' → logprob: -18.00247573852539
    5. '   ' → logprob: -18.12747573852539
    6. '+' → logprob: -20.25247573852539
    7. '(m' → logprob: -20.37747573852539
    8. ' ' → logprob: -20.37747573852539
    9. '    ' → logprob: -20.87747573852539
    10. '                   ' → logprob: -21.00247573852539

Token 1284: '.release' (ID: 50070)
  Prédit: '.release'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.release' → logprob: -4.1318875446449965e-05
    2. '.' → logprob: -10.250041007995605
    3. ' .' → logprob: -12.875041007995605
    4. 'release' → logprob: -13.125041007995605
    5. '.Release' → logprob: -14.750041007995605
    6. '.
' → logprob: -15.250041007995605
    7. '```' → logprob: -15.500041007995605
    8. '`.' → logprob: -16.750041961669922
    9. '.capacity' → logprob: -16.750041961669922
    10. '.return' → logprob: -17.000041961669922

Token 1285: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1286: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.18715158104896545
    2. '               ' → logprob: -2.0621516704559326
    3. '<|end|>' → logprob: -3.5621516704559326
    4. '           ' → logprob: -5.8121514320373535
    5. '                ' → logprob: -6.3121514320373535
    6. ')' → logprob: -6.6871514320373535
    7. ' 
' → logprob: -7.0621514320373535
    8. '                       ' → logprob: -7.1871514320373535
    9. '                    ' → logprob: -7.3121514320373535
    10. '       ' → logprob: -7.4371514320373535

Token 1287: ' count' (ID: 3605)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.9032954573631287
    2. '                   ' → logprob: -1.2782955169677734
    3. ' if' → logprob: -1.7782955169677734
    4. '               ' → logprob: -2.4032955169677734
    5. '           ' → logprob: -3.5282955169677734
    6. 'continue' → logprob: -4.528295516967773
    7. 'count' (adapté à ' count') → logprob: -5.528295516967773
    8. ' continue' → logprob: -5.903295516967773
    9. '                       ' → logprob: -6.528295516967773
    10. '       ' → logprob: -6.528295516967773

Token 1288: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.259773313999176
    2. ' +=' → logprob: -1.5097732543945312
    3. '+' → logprob: -5.259773254394531
    4. '==' → logprob: -6.509773254394531
    5. '=' → logprob: -7.009773254394531
    6. ' +' → logprob: -9.259773254394531
    7. ' ==' → logprob: -10.009773254394531
    8. '<|end|>' → logprob: -10.134773254394531
    9. ' =' → logprob: -11.134773254394531
    10. '<=' → logprob: -11.884773254394531

Token 1289: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0206720617134124e-05
    2. ' ' → logprob: -11.50001049041748
    3. '   ' → logprob: -21.875009536743164
    4. '```' → logprob: -22.375009536743164
    5. '  ' → logprob: -23.375009536743164
    6. '
' → logprob: -23.625009536743164
    7. '0' → logprob: -24.000009536743164
    8. '۱' → logprob: -24.500009536743164
    9. '<|end|>' → logprob: -24.500009536743164
    10. ' ' → logprob: -25.000009536743164

Token 1290: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.625
    3. '```' → logprob: -20.125
    4. '   ' → logprob: -20.625
    5. '۱' → logprob: -21.75
    6. '
' → logprob: -21.75
    7. '0' → logprob: -22.4375
    8. '' → logprob: -22.6875
    9. '  ' → logprob: -23.1875
    10. '`' → logprob: -23.3125

Token 1291: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5803528428077698
    2. '                   ' → logprob: -0.8303528428077698
    3. '           ' → logprob: -6.955352783203125
    4. '<|end|>' → logprob: -7.330352783203125
    5. '```' → logprob: -7.580352783203125
    6. ' continue' → logprob: -8.455352783203125
    7. ' if' → logprob: -8.580352783203125
    8. '			' → logprob: -8.580352783203125
    9. '		           ' → logprob: -8.580352783203125
    10. '   ' → logprob: -8.955352783203125

Token 1292: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.4774502217769623
    2. '               ' → logprob: -0.9774502515792847
    3. '           ' → logprob: -6.227450370788574
    4. '```' → logprob: -7.977450370788574
    5. '<|end|>' → logprob: -8.477450370788574
    6. '   ' → logprob: -8.602450370788574
    7. '       ' → logprob: -8.852450370788574
    8. '                       ' → logprob: -9.227450370788574
    9. ' if' → logprob: -9.852450370788574
    10. ' continue' → logprob: -10.352450370788574

Token 1293: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.10384207218885422
    2. '                   ' → logprob: -2.47884202003479
    3. '               ' → logprob: -4.728842258453369
    4. ' if' → logprob: -5.353842258453369
    5. 'continue' → logprob: -7.353842258453369
    6. '           ' → logprob: -7.853842258453369
    7. '                       ' → logprob: -9.853841781616211
    8. ' continue' → logprob: -10.478841781616211
    9. 'else' → logprob: -10.728841781616211
    10. 'elif' → logprob: -10.728841781616211

Token 1294: ' Track' (ID: 30844)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6390195488929749
    2. '                   ' → logprob: -1.26401948928833
    3. 'if' → logprob: -1.88901948928833
    4. '               ' → logprob: -3.51401948928833
    5. '           ' → logprob: -5.51401948928833
    6. ' continue' → logprob: -6.63901948928833
    7. 'continue' → logprob: -6.88901948928833
    8. '                       ' → logprob: -7.13901948928833
    9. 'If' → logprob: -7.88901948928833
    10. '       ' → logprob: -8.639019966125488

Token 1295: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.21887491643428802
    2. ' min' → logprob: -1.7188749313354492
    3. 'm' → logprob: -4.968874931335449
    4. 'if' → logprob: -5.718874931335449
    5. ' if' → logprob: -6.343874931335449
    6. 'capacity' → logprob: -6.468874931335449
    7. 'minimal' → logprob: -7.218874931335449
    8. ' minimal' → logprob: -7.343874931335449
    9. ' m' → logprob: -7.468874931335449
    10. ' capacity' → logprob: -7.593874931335449

Token 1296: ' capacity' (ID: 12241)
  Prédit: '_capacity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_capacity' → logprob: -0.003114614635705948
    2. '_' → logprob: -6.003114700317383
    3. 'capacity' → logprob: -8.128114700317383
    4. '_m' → logprob: -8.753114700317383
    5. '_cap' → logprob: -10.503114700317383
    6. 'm' → logprob: -10.503114700317383
    7. '_micro' → logprob: -10.878114700317383
    8. ' capacity' → logprob: -11.128114700317383
    9. '_c' → logprob: -11.128114700317383
    10. 'if' → logprob: -11.253114700317383

Token 1297: ' in' (ID: 306)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.15599346160888672
    2. '               ' → logprob: -2.2809934616088867
    3. ' if' → logprob: -3.9059934616088867
    4. '           ' → logprob: -4.155993461608887
    5. '
' → logprob: -5.530993461608887
    6. '                       ' → logprob: -7.530993461608887
    7. 'if' → logprob: -7.905993461608887
    8. ',' → logprob: -8.030993461608887
    9. '<|end|>' → logprob: -8.280993461608887
    10. '       ' → logprob: -8.780993461608887

Token 1298: ' selected' (ID: 6386)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.001414877362549305
    2. 'selected' → logprob: -6.876414775848389
    3. ' heap' → logprob: -8.376415252685547
    4. 'the' → logprob: -9.126415252685547
    5. '```' → logprob: -12.001415252685547
    6. '(heap' → logprob: -12.001415252685547
    7. '   ' → logprob: -12.251415252685547
    8. 'selection' → logprob: -12.626415252685547
    9. 'stack' → logprob: -12.876415252685547
    10. ' selected' → logprob: -13.001415252685547

Token 1299: '
' (ID: 198)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.30241453647613525
    2. 'if' → logprob: -1.6774145364761353
    3. '                   ' → logprob: -3.1774144172668457
    4. '               ' → logprob: -3.8024144172668457
    5. '           ' → logprob: -4.802414417266846
    6. '                       ' → logprob: -7.427414417266846
    7. '```' → logprob: -8.302414894104004
    8. ')' → logprob: -8.677414894104004
    9. ' =' → logprob: -9.052414894104004
    10. ':
' → logprob: -9.177414894104004

Token 1300: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.006128345150500536
    2. '               ' → logprob: -5.381128311157227
    3. 'if' → logprob: -8.006128311157227
    4. ' if' → logprob: -8.006128311157227
    5. '           ' → logprob: -8.256128311157227
    6. '                       ' → logprob: -8.756128311157227
    7. '		           ' → logprob: -9.131128311157227
    8. '				' → logprob: -9.381128311157227
    9. '```' → logprob: -9.881128311157227
    10. '<|end|>' → logprob: -10.006128311157227

Token 1301: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5316202044487
    2. 'if' (adapté à ' if') → logprob: -0.9066202044487
    3. '                   ' → logprob: -4.906620025634766
    4. 'min' → logprob: -7.906620025634766
    5. ' min' → logprob: -8.281620025634766
    6. '               ' → logprob: -8.781620025634766
    7. '```' → logprob: -8.781620025634766
    8. '           ' → logprob: -10.156620025634766
    9. '                       ' → logprob: -10.531620025634766
    10. 'continue' → logprob: -11.156620025634766

Token 1302: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.029755467548966408
    2. ' min' → logprob: -3.5297553539276123
    3. '(min' → logprob: -13.029755592346191
    4. '	min' → logprob: -13.904755592346191
    5. 'not' → logprob: -14.529755592346191
    6. '               ' → logprob: -14.529755592346191
    7. '           ' → logprob: -15.404755592346191
    8. ' not' → logprob: -15.654755592346191
    9. '   ' → logprob: -15.654755592346191
    10. '                   ' → logprob: -16.029754638671875

Token 1303: '_capacity' (ID: 85527)
  Prédit: '_capacity'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_capacity' → logprob: -0.00015419373812619597
    2. 'capacity' → logprob: -9.750154495239258
    3. '_' → logprob: -10.125154495239258
    4. '_cap' → logprob: -10.875154495239258
    5. '(m' → logprob: -11.750154495239258
    6. '_c' → logprob: -12.125154495239258
    7. 'Capacity' → logprob: -12.625154495239258
    8. '\' → logprob: -12.750154495239258
    9. '(cap' → logprob: -13.000154495239258
    10. '```' → logprob: -13.250154495239258

Token 1304: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.252235472202301
    2. 'is' → logprob: -1.5022354125976562
    3. '=' → logprob: -8.627235412597656
    4. '==' → logprob: -9.252235412597656
    5. '===' → logprob: -11.127235412597656
    6. ' =' → logprob: -12.252235412597656
    7. '>' → logprob: -13.127235412597656
    8. '=None' → logprob: -13.627235412597656
    9. '	is' → logprob: -13.627235412597656
    10. '```' → logprob: -14.002235412597656

Token 1305: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -1.9504606825648807e-05
    2. ' None' → logprob: -11.000019073486328
    3. 'm' → logprob: -13.125019073486328
    4. '   ' → logprob: -14.625019073486328
    5. '=None' → logprob: -16.500019073486328
    6. 'not' → logprob: -17.000019073486328
    7. 'N' → logprob: -17.125019073486328
    8. '_None' → logprob: -17.250019073486328
    9. 'none' → logprob: -17.375019073486328
    10. '(None' → logprob: -17.750019073486328

Token 1306: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.03648446127772331
    2. 'or' → logprob: -3.411484479904175
    3. '                       ' → logprob: -6.536484241485596
    4. '                   ' → logprob: -6.911484241485596
    5. '               ' → logprob: -8.786484718322754
    6. ':' → logprob: -9.536484718322754
    7. '	or' → logprob: -9.786484718322754
    8. ':
' → logprob: -9.911484718322754
    9. '                           ' → logprob: -10.786484718322754
    10. '=' → logprob: -10.786484718322754

Token 1307: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0003037650021724403
    2. ' m' → logprob: -8.375304222106934
    3. '   ' → logprob: -9.875304222106934
    4. 'min' → logprob: -11.750304222106934
    5. '                   ' → logprob: -12.500304222106934
    6. '	m' → logprob: -13.000304222106934
    7. '           ' → logprob: -13.125304222106934
    8. '               ' → logprob: -13.250304222106934
    9. '                       ' → logprob: -13.625304222106934
    10. '```' → logprob: -14.625304222106934

Token 1308: '.capacity' (ID: 124122)
  Prédit: '.capacity'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.capacity' → logprob: -3.607391408877447e-05
    2. 'capacity' → logprob: -11.000036239624023
    3. '.cap' → logprob: -11.625036239624023
    4. '.' → logprob: -11.875036239624023
    5. ' .' → logprob: -13.750036239624023
    6. '
' → logprob: -14.625036239624023
    7. '```' → logprob: -14.625036239624023
    8. '.capitalize' → logprob: -15.875036239624023
    9. '_capacity' → logprob: -16.000036239624023
    10. '.frequency' → logprob: -16.125036239624023

Token 1309: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.6282052993774414
    2. '>' → logprob: -1.2532052993774414
    3. ' <' → logprob: -1.8782052993774414
    4. ' >' → logprob: -3.6282052993774414
    5. '>
' → logprob: -7.753205299377441
    6. '<
' → logprob: -8.003205299377441
    7. '<m' → logprob: -8.878205299377441
    8. '<|end|>' → logprob: -9.253205299377441
    9. '<int' → logprob: -9.378205299377441
    10. ' >
' → logprob: -10.003205299377441

Token 1310: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0033778147771954536
    2. 'heap' → logprob: -6.003377914428711
    3. 'm' → logprob: -7.128377914428711
    4. ' min' → logprob: -9.628377914428711
    5. 'micro' → logprob: -11.253377914428711
    6. '   ' → logprob: -11.628377914428711
    7. '           ' → logprob: -13.253377914428711
    8. '
' → logprob: -13.378377914428711
    9. 'max' → logprob: -13.753377914428711
    10. '(min' → logprob: -14.128377914428711

Token 1311: '_capacity' (ID: 85527)
  Prédit: '_capacity'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_capacity' → logprob: -4.632542913896032e-05
    2. 'capacity' → logprob: -10.250046730041504
    3. '(m' → logprob: -13.000046730041504
    4. 'c' → logprob: -13.375046730041504
    5. '_c' → logprob: -13.375046730041504
    6. 'Capacity' → logprob: -13.375046730041504
    7. '_cap' → logprob: -13.625046730041504
    8. 'm' → logprob: -14.500046730041504
    9. '(min' → logprob: -15.000046730041504
    10. '
' → logprob: -15.250046730041504

Token 1312: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3532833158969879
    2. ':' → logprob: -1.2282832860946655
    3. '                       ' → logprob: -6.853283405303955
    4. '               ' → logprob: -6.853283405303955
    5. '=' → logprob: -6.978283405303955
    6. '):
' → logprob: -7.103283405303955
    7. '                   ' → logprob: -8.103282928466797
    8. '<|end|>' → logprob: -8.228282928466797
    9. ',' → logprob: -9.478282928466797
    10. '                               ' → logprob: -9.978282928466797

Token 1313: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0001302374730585143
    2. ':
' → logprob: -9.750130653381348
    3. '                   ' → logprob: -10.125130653381348
    4. ':' → logprob: -11.375130653381348
    5. '                           ' → logprob: -12.250130653381348
    6. '               ' → logprob: -12.500130653381348
    7. '                      ' → logprob: -12.500130653381348
    8. '<|end|>' → logprob: -13.375130653381348
    9. '	                   ' → logprob: -14.000130653381348
    10. '                        ' → logprob: -14.000130653381348

Token 1314: ' min' (ID: 1349)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0938272774219513
    2. 'min' (adapté à ' min') → logprob: -2.468827247619629
    3. ' min' → logprob: -6.343827247619629
    4. ' m' → logprob: -6.718827247619629
    5. '                   ' → logprob: -6.968827247619629
    6. '                           ' → logprob: -7.593827247619629
    7. '                       ' → logprob: -7.843827247619629
    8. '                               ' → logprob: -10.843827247619629
    9. '               ' → logprob: -10.968827247619629
    10. '           ' → logprob: -11.218827247619629

Token 1315: '_capacity' (ID: 85527)
  Prédit: '_capacity'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_capacity' → logprob: -1.981667537620524e-06
    2. '_cap' → logprob: -13.750001907348633
    3. 'capacity' → logprob: -14.250001907348633
    4. 'Capacity' → logprob: -16.000001907348633
    5. '_' → logprob: -18.250001907348633
    6. ' capacity' → logprob: -18.375001907348633
    7. '_cost' → logprob: -18.500001907348633
    8. '
' → logprob: -19.250001907348633
    9. '```' → logprob: -19.500001907348633
    10. '_c' → logprob: -19.750001907348633

Token 1316: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014164921827614307
    2. ' =' → logprob: -4.264164924621582
    3. '=
' → logprob: -13.889164924621582
    4. '=m' → logprob: -14.889164924621582
    5. '＝' → logprob: -17.014163970947266
    6. ' =
' → logprob: -17.264163970947266
    7. '=

' → logprob: -18.264163970947266
    8. '<|end|>' → logprob: -18.389163970947266
    9. '=None' → logprob: -18.639163970947266
    10. ',' → logprob: -19.389163970947266

Token 1317: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.01416350994259119
    2. ' m' → logprob: -4.264163494110107
    3. '                   ' → logprob: -18.014163970947266
    4. '	m' → logprob: -18.014163970947266
    5. '   ' → logprob: -19.514163970947266
    6. '```' → logprob: -20.889163970947266
    7. '                       ' → logprob: -21.139163970947266
    8. '               ' → logprob: -21.139163970947266
    9. ' ' → logprob: -21.514163970947266
    10. '           ' → logprob: -21.889163970947266

Token 1318: '.capacity' (ID: 124122)
  Prédit: '.capacity'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.capacity' → logprob: -0.0034180781804025173
    2. 'capacity' → logprob: -5.75341796875
    3. '.' → logprob: -8.62841796875
    4. '.cap' → logprob: -10.75341796875
    5. 'm' → logprob: -11.75341796875
    6. '.micro' → logprob: -12.00341796875
    7. ' .' → logprob: -12.75341796875
    8. '.m' → logprob: -12.75341796875
    9. '```' → logprob: -12.87841796875
    10. '_capacity' → logprob: -13.37841796875

Token 1319: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.34609466791152954
    2. '                   ' → logprob: -1.4710946083068848
    3. '<|end|>' → logprob: -3.4710946083068848
    4. '           ' → logprob: -4.471094608306885
    5. '
' → logprob: -4.971094608306885
    6. '```' → logprob: -6.096094608306885
    7. ' else' → logprob: -6.346094608306885
    8. '                       ' → logprob: -6.596094608306885
    9. '<|end|>' → logprob: -6.596094608306885
    10. '       ' → logprob: -6.971094608306885

Token 1320: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.15075252950191498
    2. '                   ' → logprob: -2.025752544403076
    3. '           ' → logprob: -5.275752544403076
    4. '```' → logprob: -6.275752544403076
    5. '<|end|>' → logprob: -7.775752544403076
    6. '                       ' → logprob: -9.150752067565918
    7. '
' → logprob: -9.275752067565918
    8. '       ' → logprob: -9.525752067565918
    9. ' else' → logprob: -9.775752067565918
    10. 'else' → logprob: -10.275752067565918

Token 1321: ' else' (ID: 1203)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2582506239414215
    2. ' else' → logprob: -1.7582505941390991
    3. 'else' (adapté à ' else') → logprob: -4.133250713348389
    4. '                ' → logprob: -5.008250713348389
    5. ' elif' → logprob: -5.133250713348389
    6. ' ' → logprob: -5.383250713348389
    7. '           ' → logprob: -5.508250713348389
    8. '			' → logprob: -6.133250713348389
    9. '<|end|>' → logprob: -6.133250713348389
    10. '
' → logprob: -6.258250713348389

Token 1322: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.07744546234607697
    2. '               ' → logprob: -2.9524455070495605
    3. '                       ' → logprob: -5.0774455070495605
    4. ':
' → logprob: -5.8274455070495605
    5. ':' → logprob: -6.0774455070495605
    6. ' if' → logprob: -6.3274455070495605
    7. '<|end|>' → logprob: -6.3274455070495605
    8. '```' → logprob: -6.9524455070495605
    9. '           ' → logprob: -7.0774455070495605
    10. '   ' → logprob: -7.2024455070495605

Token 1323: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.19742068648338318
    2. '               ' → logprob: -1.9474207162857056
    3. ' if' → logprob: -3.947420597076416
    4. '```' → logprob: -4.947420597076416
    5. '                       ' → logprob: -5.197420597076416
    6. '                ' → logprob: -6.822420597076416
    7. 'if' → logprob: -6.947420597076416
    8. '           ' → logprob: -7.072420597076416
    9. '   ' → logprob: -8.072421073913574
    10. '	               ' → logprob: -8.322421073913574

Token 1324: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.13312655687332153
    2. 'if' → logprob: -2.1331264972686768
    3. '                   ' → logprob: -5.633126735687256
    4. ' heap' → logprob: -7.133126735687256
    5. 'import' → logprob: -7.258126735687256
    6. 'heap' → logprob: -7.883126735687256
    7. '   ' → logprob: -8.258126258850098
    8. '               ' → logprob: -8.508126258850098
    9. ' import' → logprob: -9.258126258850098
    10. '                       ' → logprob: -10.383126258850098

Token 1325: ' Check' (ID: 6208)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2989725172519684
    2. ' if' → logprob: -1.423972487449646
    3. '                   ' → logprob: -4.2989726066589355
    4. 'import' → logprob: -6.6739726066589355
    5. 'heap' → logprob: -6.6739726066589355
    6. '   ' → logprob: -7.5489726066589355
    7. '               ' → logprob: -7.7989726066589355
    8. '                       ' → logprob: -9.048972129821777
    9. ' heap' → logprob: -9.298972129821777
    10. 'm' → logprob: -9.798972129821777

Token 1326: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4322985112667084
    2. 'if' → logprob: -1.1822985410690308
    3. '                   ' → logprob: -3.932298421859741
    4. 'm' → logprob: -4.05729866027832
    5. '   ' → logprob: -6.05729866027832
    6. '               ' → logprob: -6.30729866027832
    7. ' m' → logprob: -6.30729866027832
    8. '           ' → logprob: -8.18229866027832
    9. '       ' → logprob: -8.30729866027832
    10. '                       ' → logprob: -8.43229866027832

Token 1327: ' current' (ID: 2208)
  Prédit: '-m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-m' → logprob: -0.1806536316871643
    2. 'm' → logprob: -2.5556535720825195
    3. ' -' → logprob: -2.5556535720825195
    4. '-' → logprob: -5.0556535720825195
    5. ' m' → logprob: -6.4306535720825195
    6. '   ' → logprob: -7.1806535720825195
    7. 'heap' → logprob: -7.5556535720825195
    8. '
' → logprob: -8.80565357208252
    9. ' heap' → logprob: -8.80565357208252
    10. '(-' → logprob: -9.05565357208252

Token 1328: ' release' (ID: 8232)
  Prédit: '.release'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.release' → logprob: -0.03077695518732071
    2. ' .' → logprob: -4.7807769775390625
    3. '.capacity' → logprob: -4.7807769775390625
    4. '.heap' → logprob: -5.9057769775390625
    5. 'release' → logprob: -6.1557769775390625
    6. '.' → logprob: -6.4057769775390625
    7. '   ' → logprob: -6.6557769775390625
    8. 'm' → logprob: -6.7807769775390625
    9. '```' → logprob: -7.1557769775390625
    10. ' release' → logprob: -7.5307769775390625

Token 1329: ' smaller' (ID: 13679)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.5918369889259338
    2. ' >' → logprob: -0.8418369889259338
    3. '>' → logprob: -4.591836929321289
    4. '<' → logprob: -5.216836929321289
    5. '```' → logprob: -9.591836929321289
    6. '<m' → logprob: -9.966836929321289
    7. ' ' → logprob: -11.216836929321289
    8. ' <=' → logprob: -11.216836929321289
    9. ' is' → logprob: -11.466836929321289
    10. '`' → logprob: -11.716836929321289

Token 1330: ' than' (ID: 1572)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.08070973306894302
    2. '<' → logprob: -2.95570969581604
    3. ' >' → logprob: -4.205709934234619
    4. '>' → logprob: -5.580709934234619
    5. ' or' → logprob: -5.705709934234619
    6. ' than' → logprob: -6.955709934234619
    7. '                   ' → logprob: -7.080709934234619
    8. '<m' → logprob: -7.080709934234619
    9. ':' → logprob: -8.330709457397461
    10. ' ' → logprob: -9.830709457397461

Token 1331: ' max' (ID: 2999)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.021034957841038704
    2. ' -' → logprob: -4.771035194396973
    3. '(-' → logprob: -4.896035194396973
    4. '-p' → logprob: -5.646035194396973
    5. '-m' → logprob: -7.771035194396973
    6. '-he' → logprob: -8.146035194396973
    7. '-release' → logprob: -9.021035194396973
    8. '-n' → logprob: -9.271035194396973
    9. '-e' → logprob: -9.771035194396973
    10. '-h' → logprob: -9.771035194396973

Token 1332: ' in' (ID: 306)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.13257689774036407
    2. '(heap' → logprob: -3.6325769424438477
    3. '-' → logprob: -3.7575769424438477
    4. ' heap' → logprob: -4.007576942443848
    5. '_heap' → logprob: -4.132576942443848
    6. '_release' → logprob: -4.632576942443848
    7. 'release' → logprob: -5.007576942443848
    8. '                   ' → logprob: -5.382576942443848
    9. ' -' → logprob: -5.507576942443848
    10. '-release' → logprob: -5.757576942443848

Token 1333: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.0002346488763578236
    2. ' heap' → logprob: -8.375234603881836
    3. '(heap' → logprob: -13.250234603881836
    4. '-' → logprob: -13.875234603881836
    5. '```' → logprob: -14.375234603881836
    6. '_heap' → logprob: -14.375234603881836
    7. '.heap' → logprob: -16.375234603881836
    8. 'he' → logprob: -17.000234603881836
    9. '
' → logprob: -17.000234603881836
    10. '`' → logprob: -17.875234603881836

Token 1334: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.6071397662162781
    2. '                       ' → logprob: -1.6071398258209229
    3. ' and' → logprob: -1.9821398258209229
    4. ':' → logprob: -2.732139825820923
    5. ':
' → logprob: -3.482139825820923
    6. '               ' → logprob: -4.982139587402344
    7. ' if' → logprob: -5.482139587402344
    8. ' or' → logprob: -5.482139587402344
    9. ',' → logprob: -6.732139587402344
    10. 'and' → logprob: -7.357139587402344

Token 1335: '                   ' (ID: 699)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.9773082733154297
    2. '                       ' → logprob: -1.1023082733154297
    3. '                   ' → logprob: -1.6023082733154297
    4. ':
' → logprob: -3.1023082733154297
    5. 'and' → logprob: -3.9773082733154297
    6. '```' → logprob: -4.60230827331543
    7. ':' → logprob: -4.85230827331543
    8. ' or' → logprob: -6.35230827331543
    9. '               ' → logprob: -6.97730827331543
    10. ',' → logprob: -6.97730827331543

Token 1336: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4132537543773651
    2. '                   ' → logprob: -1.9132537841796875
    3. 'if' (adapté à ' if') → logprob: -2.0382537841796875
    4. '                       ' → logprob: -3.6632537841796875
    5. ' and' → logprob: -4.4132537841796875
    6. ' -' → logprob: -4.7882537841796875
    7. '               ' → logprob: -6.0382537841796875
    8. '-' → logprob: -6.1632537841796875
    9. ')' → logprob: -6.7882537841796875
    10. ':
' → logprob: -6.9132537841796875

Token 1337: ' -' (ID: 533)
  Prédit: '-m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-m' → logprob: -0.4787746071815491
    2. ' -' → logprob: -0.9787746071815491
    3. '-' → logprob: -5.978774547576904
    4. '(-' → logprob: -6.978774547576904
    5. '   ' → logprob: -7.853774547576904
    6. 'heap' → logprob: -7.978774547576904
    7. 'm' → logprob: -8.478775024414062
    8. ' heap' → logprob: -8.853775024414062
    9. ' (-' → logprob: -10.103775024414062
    10. '-h' → logprob: -11.103775024414062

Token 1338: 'heap' (ID: 38535)
  Prédit: 'heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.002198313595727086
    2. 'm' → logprob: -6.127198219299316
    3. ' heap' → logprob: -12.127198219299316
    4. '(heap' → logprob: -12.127198219299316
    5. '   ' → logprob: -14.627198219299316
    6. 'h' → logprob: -15.002198219299316
    7. '```' → logprob: -15.252198219299316
    8. 'he' → logprob: -15.377198219299316
    9. '.heap' → logprob: -15.752198219299316
    10. 'import' → logprob: -16.002199172973633

Token 1339: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.000556843588128686
    2. 'q' → logprob: -8.875556945800781
    3. '>' → logprob: -9.000556945800781
    4. '.he' → logprob: -9.500556945800781
    5. '   ' → logprob: -10.125556945800781
    6. '0' → logprob: -10.250556945800781
    7. '```' → logprob: -10.250556945800781
    8. 'he' → logprob: -10.875556945800781
    9. '.' → logprob: -11.125556945800781
    10. '.peek' → logprob: -11.250556945800781

Token 1340: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -16.5
    3. '   ' → logprob: -16.625
    4. '[' → logprob: -16.875
    5. '
' → logprob: -17.5
    6. '```' → logprob: -18.8125
    7. '۰' → logprob: -19.3125
    8. '1' → logprob: -19.9375
    9. '#' → logprob: -20.1875
    10. '  ' → logprob: -20.25

Token 1341: ']' (ID: 60)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.8769006133079529
    2. ']' → logprob: -1.1269006729125977
    3. ' >' → logprob: -1.8769006729125977
    4. ']>' → logprob: -2.2519006729125977
    5. ')' → logprob: -7.501900672912598
    6. '()>' → logprob: -8.251900672912598
    7. ')>' → logprob: -8.376900672912598
    8. ' ]' → logprob: -8.626900672912598
    9. ' >
' → logprob: -9.501900672912598
    10. ']>
' → logprob: -9.751900672912598

Token 1342: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.2811978757381439
    2. '>' → logprob: -1.4061979055404663
    3. ' >
' → logprob: -11.031197547912598
    4. ' <' → logprob: -11.281197547912598
    5. ')' → logprob: -12.781197547912598
    6. ')>' → logprob: -13.031197547912598
    7. '>
' → logprob: -13.031197547912598
    8. ' ' → logprob: -13.531197547912598
    9. 'm' → logprob: -13.531197547912598
    10. '()>' → logprob: -13.656197547912598

Token 1343: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.25192946195602417
    2. ' m' → logprob: -1.501929521560669
    3. '	m' → logprob: -15.00192928314209
    4. '   ' → logprob: -17.626930236816406
    5. '```' → logprob: -17.751930236816406
    6. ' м' → logprob: -18.251930236816406
    7. '    ' → logprob: -18.876930236816406
    8. ' ' → logprob: -19.376930236816406
    9. '                   ' → logprob: -19.751930236816406
    10. '`' → logprob: -20.126930236816406

Token 1344: '.release' (ID: 50070)
  Prédit: '.release'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.release' → logprob: -0.0007487560505978763
    2. '.' → logprob: -7.250748634338379
    3. ' .' → logprob: -10.500748634338379
    4. 'release' → logprob: -11.875748634338379
    5. '.re' → logprob: -14.000748634338379
    6. '.Release' → logprob: -14.250748634338379
    7. '```' → logprob: -14.500748634338379
    8. '`.' → logprob: -14.625748634338379
    9. '   ' → logprob: -14.625748634338379
    10. ' release' → logprob: -15.750748634338379

Token 1345: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.32623934745788574
    2. ':' → logprob: -2.3262393474578857
    3. '                       ' → logprob: -2.4512393474578857
    4. '):
' → logprob: -2.4512393474578857
    5. '):' → logprob: -6.201239585876465
    6. '                   ' → logprob: -6.201239585876465
    7. '<|end|>' → logprob: -6.326239585876465
    8. '():
' → logprob: -6.951239585876465
    9. ']:
' → logprob: -8.201239585876465
    10. ')' → logprob: -8.201239585876465

Token 1346: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.014756395481526852
    2. '```' → logprob: -5.014756202697754
    3. '                   ' → logprob: -5.889756202697754
    4. '                        
' → logprob: -6.514756202697754
    5. '<|end|>' → logprob: -7.389756202697754
    6. '                        ' → logprob: -7.389756202697754
    7. ':
' → logprob: -7.889756202697754
    8. '                           ' → logprob: -8.389756202697754
    9. '):
' → logprob: -8.514756202697754
    10. '					' → logprob: -8.764756202697754

Token 1347: ' removed' (ID: 11906)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.20986102521419525
    2. 'import' → logprob: -1.8348610401153564
    3. ' heap' → logprob: -3.9598610401153564
    4. 'pop' → logprob: -6.209860801696777
    5. '   ' → logprob: -6.334860801696777
    6. ' popped' → logprob: -6.584860801696777
    7. 'removed' (adapté à ' removed') → logprob: -7.084860801696777
    8. 'x' → logprob: -7.209860801696777
    9. '                           ' → logprob: -7.459860801696777
    10. '                   ' → logprob: -7.459860801696777

Token 1348: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5344154834747314
    2. '=' → logprob: -0.9094154834747314
    3. 'heap' → logprob: -5.034415245056152
    4. '_release' → logprob: -6.159415245056152
    5. 'release' → logprob: -7.409415245056152
    6. '(heap' → logprob: -7.659415245056152
    7. '_heap' → logprob: -7.909415245056152
    8. ',' → logprob: -8.659415245056152
    9. '_value' → logprob: -8.659415245056152
    10. 'import' → logprob: -8.784415245056152

Token 1349: ' -' (ID: 533)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.05009550228714943
    2. ' heap' → logprob: -3.050095558166504
    3. '-' → logprob: -6.925095558166504
    4. ' -' → logprob: -7.675095558166504
    5. 'he' → logprob: -10.675095558166504
    6. 'import' → logprob: -11.300095558166504
    7. '(heap' → logprob: -11.300095558166504
    8. '-he' → logprob: -11.925095558166504
    9. '_heap' → logprob: -13.550095558166504
    10. '   ' → logprob: -13.800095558166504

Token 1350: 'heap' (ID: 38535)
  Prédit: 'heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -7.896309739408025e-07
    2. 'import' → logprob: -14.500000953674316
    3. '(heap' → logprob: -16.0
    4. ' heap' → logprob: -16.625
    5. 'he' → logprob: -17.125
    6. '.heap' → logprob: -19.25
    7. '_heap' → logprob: -20.75
    8. '
' → logprob: -20.75
    9. '```' → logprob: -22.25
    10. 'queue' → logprob: -22.75

Token 1351: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.2820180356502533
    2. '[' → logprob: -1.4070180654525757
    3. 'he' → logprob: -8.282017707824707
    4. '0' → logprob: -8.407017707824707
    5. 'heap' → logprob: -8.782017707824707
    6. '.he' → logprob: -9.657017707824707
    7. '```' → logprob: -9.657017707824707
    8. '.heap' → logprob: -10.282017707824707
    9. 'app' → logprob: -10.782017707824707
    10. 'pop' → logprob: -11.032017707824707

Token 1352: '.he' (ID: 67786)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.009609933942556381
    2. '.he' → logprob: -4.759609699249268
    3. 'heap' → logprob: -7.009609699249268
    4. '.heap' → logprob: -9.634610176086426
    5. '```' → logprob: -11.509610176086426
    6. '[' → logprob: -12.009610176086426
    7. 'q' → logprob: -12.134610176086426
    8. 'op' → logprob: -13.509610176086426
    9. 'ush' → logprob: -14.509610176086426
    10. 'replace' → logprob: -14.759610176086426

Token 1353: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.0023633979726582766
    2. 'pp' → logprob: -6.377363204956055
    3. 'op' → logprob: -7.502363204956055
    4. 'pop' → logprob: -10.002363204956055
    5. 'ush' → logprob: -10.502363204956055
    6. 'ap' → logprob: -11.377363204956055
    7. '```' → logprob: -11.627363204956055
    8. 'p' → logprob: -12.377363204956055
    9. '[' → logprob: -12.502363204956055
    10. 'he' → logprob: -13.002363204956055

Token 1354: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.011430453509092331
    2. 'ush' → logprob: -4.511430263519287
    3. 'pop' → logprob: -8.386430740356445
    4. 'app' → logprob: -8.886430740356445
    5. 'he' → logprob: -12.261430740356445
    6. 'opp' → logprob: -12.511430740356445
    7. 'p' → logprob: -12.886430740356445
    8. '```' → logprob: -13.261430740356445
    9. '[' → logprob: -13.636430740356445
    10. 'pp' → logprob: -13.761430740356445

Token 1355: '(heap' (ID: 173794)
  Prédit: '(heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(heap' → logprob: -0.38698992133140564
    2. 'heap' → logprob: -1.136989951133728
    3. ' heap' → logprob: -9.13698959350586
    4. '.heap' → logprob: -12.38698959350586
    5. '[' → logprob: -12.76198959350586
    6. '(' → logprob: -12.88698959350586
    7. ')' → logprob: -14.26198959350586
    8. '_heap' → logprob: -15.01198959350586
    9. '
' → logprob: -15.38698959350586
    10. '```' → logprob: -15.76198959350586

Token 1356: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.6372477412223816
    2. ')' → logprob: -0.7622477412223816
    3. '(heap' → logprob: -5.512247562408447
    4. '())
' → logprob: -8.512248039245605
    5. 'heap' → logprob: -8.762248039245605
    6. ')
' → logprob: -9.637248039245605
    7. '                   ' → logprob: -11.012248039245605
    8. '())' → logprob: -11.012248039245605
    9. '                       ' → logprob: -11.012248039245605
    10. '       ' → logprob: -11.137248039245605

Token 1357: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.09456470608711243
    2. '```' → logprob: -2.71956467628479
    3. 'heap' → logprob: -5.219564914703369
    4. ',' → logprob: -5.469564914703369
    5. ' heap' → logprob: -5.594564914703369
    6. '                           ' → logprob: -5.594564914703369
    7. '                   ' → logprob: -5.719564914703369
    8. '                        
' → logprob: -6.969564914703369
    9. '                        ' → logprob: -7.219564914703369
    10. '
' → logprob: -7.594564914703369

Token 1358: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' (adapté à ' total') → logprob: -0.0024040776770561934
    2. 'heap' → logprob: -6.25240421295166
    3. '                           ' → logprob: -8.62740421295166
    4. ' total' → logprob: -9.00240421295166
    5. 'removed' → logprob: -9.12740421295166
    6. '                               ' → logprob: -10.50240421295166
    7. '                       ' → logprob: -11.62740421295166
    8. 'release' → logprob: -12.00240421295166
    9. 'import' → logprob: -12.50240421295166
    10. 'released' → logprob: -13.00240421295166

Token 1359: '_release' (ID: 59589)
  Prédit: '_release'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_release' → logprob: -2.856408536899835e-05
    2. 'release' → logprob: -10.875028610229492
    3. '_return' → logprob: -12.500028610229492
    4. '```' → logprob: -13.750028610229492
    5. 'Release' → logprob: -13.875028610229492
    6. 'import' → logprob: -14.125028610229492
    7. '_RELEASE' → logprob: -14.125028610229492
    8. '_re' → logprob: -14.250028610229492
    9. '_heap' → logprob: -15.125028610229492
    10. '_purchase' → logprob: -15.500028610229492

Token 1360: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.2786999046802521
    2. ' -=' → logprob: -2.1536998748779297
    3. '+=' → logprob: -2.1536998748779297
    4. '-' → logprob: -5.15369987487793
    5. '=' → logprob: -5.90369987487793
    6. ' +=' → logprob: -6.40369987487793
    7. '```' → logprob: -8.02869987487793
    8. '        ' → logprob: -8.77869987487793
    9. '           ' → logprob: -9.52869987487793
    10. '       ' → logprob: -9.52869987487793

Token 1361: ' removed' (ID: 11906)
  Prédit: 'removed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'removed' → logprob: -2.8087270038668066e-05
    2. ' removed' → logprob: -10.500027656555176
    3. 'rem' → logprob: -14.625027656555176
    4. 'remove' → logprob: -19.125028610229492
    5. '
' → logprob: -19.375028610229492
    6. '_removed' → logprob: -19.375028610229492
    7. 'Removed' → logprob: -20.125028610229492
    8. 'released' → logprob: -20.375028610229492
    9. '```' → logprob: -20.875028610229492
    10. '   ' → logprob: -21.125028610229492

Token 1362: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.003145158290863037
    2. '
' → logprob: -6.878145217895508
    3. '                   ' → logprob: -7.753145217895508
    4. '```' → logprob: -7.753145217895508
    5. 'heap' → logprob: -7.878145217895508
    6. '                           ' → logprob: -8.128145217895508
    7. '                        
' → logprob: -8.878145217895508
    8. 'import' → logprob: -9.253145217895508
    9. '               ' → logprob: -9.378145217895508
    10. '					' → logprob: -9.628145217895508

Token 1363: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.40177369117736816
    2. '```' → logprob: -1.1517736911773682
    3. '                   ' → logprob: -4.651773452758789
    4. '                           ' → logprob: -6.526773452758789
    5. 'heap' → logprob: -6.901773452758789
    6. '               ' → logprob: -7.401773452758789
    7. '                        ' → logprob: -7.776773452758789
    8. '           ' → logprob: -8.151773452758789
    9. '                        
' → logprob: -8.151773452758789
    10. '					' → logprob: -8.651773452758789

Token 1364: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' (adapté à ' heap') → logprob: -0.034190647304058075
    2. ' heap' → logprob: -3.5341906547546387
    3. '                       ' → logprob: -6.534190654754639
    4. 'import' → logprob: -7.034190654754639
    5. '                           ' → logprob: -7.034190654754639
    6. '```' → logprob: -7.784190654754639
    7. '                   ' → logprob: -8.03419017791748
    8. ' ' → logprob: -8.90919017791748
    9. 'm' → logprob: -9.15919017791748
    10. '   ' → logprob: -9.90919017791748

Token 1365: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0005083533469587564
    2. 'he' → logprob: -8.375508308410645
    3. '.he' → logprob: -8.750508308410645
    4. '```' → logprob: -9.750508308410645
    5. '[' → logprob: -10.875508308410645
    6. 'heap' → logprob: -11.125508308410645
    7. '.heap' → logprob: -11.875508308410645
    8. 'h' → logprob: -12.250508308410645
    9. 'ush' → logprob: -12.500508308410645
    10. '.push' → logprob: -12.625508308410645

Token 1366: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -0.006791513413190842
    2. 'he' → logprob: -5.006791591644287
    3. 'q' → logprob: -10.381791114807129
    4. '```' → logprob: -11.131791114807129
    5. '.heap' → logprob: -11.256791114807129
    6. 'heap' → logprob: -12.006791114807129
    7. '_he' → logprob: -12.256791114807129
    8. ' he' → logprob: -12.756791114807129
    9. '   ' → logprob: -13.756791114807129
    10. '-he' → logprob: -14.131791114807129

Token 1367: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.00020354038861114532
    2. 'ap' → logprob: -8.625203132629395
    3. 'pp' → logprob: -10.750203132629395
    4. 'p' → logprob: -14.250203132629395
    5. 'push' → logprob: -14.625203132629395
    6. 'q' → logprob: -14.875203132629395
    7. '```' → logprob: -15.500203132629395
    8. 'ush' → logprob: -15.625203132629395
    9. 'appe' → logprob: -15.875203132629395
    10. 'appen' → logprob: -16.00020408630371

Token 1368: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.008961634710431099
    2. 'app' → logprob: -4.7589616775512695
    3. 'ap' → logprob: -8.50896167755127
    4. 'op' → logprob: -8.88396167755127
    5. 'push' → logprob: -12.38396167755127
    6. 'e' → logprob: -13.63396167755127
    7. 'he' → logprob: -15.25896167755127
    8. '```' → logprob: -15.38396167755127
    9. '[' → logprob: -15.63396167755127
    10. 'u' → logprob: -16.008960723876953

Token 1369: '(heap' (ID: 173794)
  Prédit: '(heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(heap' → logprob: -0.16559189558029175
    2. 'heap' → logprob: -1.9155919551849365
    3. '(' → logprob: -5.415591716766357
    4. ' heap' → logprob: -7.415591716766357
    5. '(
' → logprob: -8.165592193603516
    6. '(-' → logprob: -11.790592193603516
    7. ' (' → logprob: -12.290592193603516
    8. '(h' → logprob: -13.290592193603516
    9. '```' → logprob: -13.290592193603516
    10. '-' → logprob: -13.915592193603516

Token 1370: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09075923264026642
    2. '(heap' → logprob: -2.46575927734375
    3. '(' → logprob: -6.71575927734375
    4. 'heap' → logprob: -7.71575927734375
    5. ' ,' → logprob: -9.71575927734375
    6. ',k' → logprob: -10.96575927734375
    7. '```' → logprob: -11.09075927734375
    8. ',m' → logprob: -11.46575927734375
    9. ',
' → logprob: -11.84075927734375
    10. ',h' → logprob: -11.96575927734375

Token 1371: ' -' (ID: 533)
  Prédit: '-m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-m' → logprob: -0.0542411208152771
    2. ' -' → logprob: -3.054241180419922
    3. '-' → logprob: -5.179241180419922
    4. 'm' → logprob: -12.804241180419922
    5. '   ' → logprob: -13.679241180419922
    6. '(-' → logprob: -14.429241180419922
    7. '-
' → logprob: -15.679241180419922
    8. ' m' → logprob: -16.054241180419922
    9. '−' → logprob: -16.179241180419922
    10. '-м' → logprob: -16.429241180419922

Token 1372: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -1.9361264946837764e-07
    2. ' m' → logprob: -16.625
    3. '(m' → logprob: -19.75
    4. '	m' → logprob: -20.25
    5. ')m' → logprob: -20.625
    6. '[m' → logprob: -21.5
    7. ''m' → logprob: -21.5
    8. 'м' → logprob: -21.625
    9. '```' → logprob: -22.0
    10. '_m' → logprob: -22.375

Token 1373: '.release' (ID: 50070)
  Prédit: '.release'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.release' → logprob: -0.0007100477814674377
    2. 'release' → logprob: -7.2507100105285645
    3. 'm' → logprob: -16.375709533691406
    4. '.return' → logprob: -17.500709533691406
    5. '_release' → logprob: -17.875709533691406
    6. '.' → logprob: -18.125709533691406
    7. ' release' → logprob: -18.500709533691406
    8. '.Release' → logprob: -18.625709533691406
    9. '-release' → logprob: -19.250709533691406
    10. ' .' → logprob: -19.375709533691406

Token 1374: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.017927029868588e-05
    2. '                       ' → logprob: -10.250080108642578
    3. ')
' → logprob: -10.625080108642578
    4. '<|end|>' → logprob: -11.125080108642578
    5. ' )' → logprob: -12.875080108642578
    6. '                   ' → logprob: -14.250080108642578
    7. '                           ' → logprob: -15.125080108642578
    8. ')return' → logprob: -15.125080108642578
    9. ')#' → logprob: -15.375080108642578
    10. '),' → logprob: -15.375080108642578

Token 1375: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0006805036100558937
    2. '```' → logprob: -7.625680446624756
    3. '                        
' → logprob: -10.250680923461914
    4. '                   ' → logprob: -10.500680923461914
    5. 'total' → logprob: -10.500680923461914
    6. '                           ' → logprob: -10.750680923461914
    7. '               ' → logprob: -10.875680923461914
    8. '<|end|>' → logprob: -10.875680923461914
    9. '                        ' → logprob: -11.250680923461914
    10. '					' → logprob: -12.375680923461914

Token 1376: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' (adapté à ' total') → logprob: -0.00032402228680439293
    2. ' total' → logprob: -8.125324249267578
    3. '                           ' → logprob: -11.375324249267578
    4. '                               ' → logprob: -12.125324249267578
    5. '```' → logprob: -12.500324249267578
    6. '                       ' → logprob: -12.625324249267578
    7. '
' → logprob: -13.125324249267578
    8. 'removed' → logprob: -13.625324249267578
    9. '	total' → logprob: -15.500324249267578
    10. '                   ' → logprob: -15.625324249267578

Token 1377: '_release' (ID: 59589)
  Prédit: '_release'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_release' → logprob: -8.101369894575328e-05
    2. 'q' → logprob: -10.750081062316895
    3. '_return' → logprob: -10.875081062316895
    4. 'release' → logprob: -11.250081062316895
    5. 'Release' → logprob: -11.875081062316895
    6. '_RELEASE' → logprob: -12.125081062316895
    7. '_' → logprob: -12.750081062316895
    8. '_queue' → logprob: -12.750081062316895
    9. 'import' → logprob: -13.375081062316895
    10. '       ' → logprob: -13.625081062316895

Token 1378: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.6751100420951843
    2. ' +=' → logprob: -0.9251100420951843
    3. '+' → logprob: -2.550110101699829
    4. '<|end|>' → logprob: -4.67510986328125
    5. ' +' → logprob: -5.05010986328125
    6. '=' → logprob: -8.42510986328125
    7. ' -=' → logprob: -9.30010986328125
    8. '<|end|>' → logprob: -9.92510986328125
    9. ']+=' → logprob: -10.05010986328125
    10. '+
' → logprob: -10.30010986328125

Token 1379: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.005233882926404476
    2. ' m' → logprob: -5.2552337646484375
    3. '	m' → logprob: -17.130233764648438
    4. '   ' → logprob: -19.130233764648438
    5. ' м' → logprob: -22.130233764648438
    6. ' ' → logprob: -22.255233764648438
    7. '_m' → logprob: -23.380233764648438
    8. '```' → logprob: -23.380233764648438
    9. '(m' → logprob: -23.630233764648438
    10. 'м' → logprob: -23.880233764648438

Token 1380: '.release' (ID: 50070)
  Prédit: '.release'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.release' → logprob: -1.1279553291387856e-05
    2. 'release' → logprob: -12.250011444091797
    3. '.' → logprob: -12.625011444091797
    4. '.return' → logprob: -13.625011444091797
    5. '.Release' → logprob: -14.875011444091797
    6. '```' → logprob: -15.250011444091797
    7. ' .' → logprob: -15.375011444091797
    8. '.reserve' → logprob: -16.000011444091797
    9. '.reload' → logprob: -16.250011444091797
    10. '.micro' → logprob: -16.625011444091797

Token 1381: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.005138881038874388
    2. '                   ' → logprob: -6.130138874053955
    3. '```' → logprob: -6.755138874053955
    4. '               ' → logprob: -7.380138874053955
    5. '                        
' → logprob: -7.755138874053955
    6. '<|end|>' → logprob: -8.130139350891113
    7. '                           ' → logprob: -9.005139350891113
    8. '           ' → logprob: -9.505139350891113
    9. '                        ' → logprob: -9.630139350891113
    10. '
' → logprob: -10.005139350891113

Token 1382: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0031608492136001587
    2. '                   ' → logprob: -6.6281609535217285
    3. '```' → logprob: -7.0031609535217285
    4. '               ' → logprob: -7.8781609535217285
    5. '<|end|>' → logprob: -8.87816047668457
    6. '           ' → logprob: -9.25316047668457
    7. '                        
' → logprob: -9.37816047668457
    8. '                        ' → logprob: -9.75316047668457
    9. '       ' → logprob: -9.87816047668457
    10. '                           ' → logprob: -10.87816047668457

Token 1383: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.1048162654042244
    2. 'min' → logprob: -2.854816198348999
    3. 'for' → logprob: -4.229816436767578
    4. '               ' → logprob: -4.729816436767578
    5. '#' → logprob: -5.104816436767578
    6. '                   ' → logprob: -5.729816436767578
    7. '                       ' → logprob: -6.229816436767578
    8. 'i' → logprob: -6.479816436767578
    9. 'continue' → logprob: -6.604816436767578
    10. '           ' → logprob: -6.854816436767578

Token 1384: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.006864678580313921
    2. ' m' → logprob: -5.006864547729492
    3. 'min' → logprob: -9.256864547729492
    4. '   ' → logprob: -10.381864547729492
    5. ' min' → logprob: -11.256864547729492
    6. '	m' → logprob: -12.381864547729492
    7. 'False' → logprob: -13.256864547729492
    8. ' ' → logprob: -14.381864547729492
    9. '(m' → logprob: -14.756864547729492
    10. '    ' → logprob: -14.756864547729492

Token 1385: '.capacity' (ID: 124122)
  Prédit: '.capacity'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.capacity' → logprob: -4.811348480870947e-05
    2. 'capacity' → logprob: -10.25004768371582
    3. '.' → logprob: -11.75004768371582
    4. '.cap' → logprob: -12.62504768371582
    5. '```' → logprob: -14.87504768371582
    6. ' .' → logprob: -15.12504768371582
    7. '   ' → logprob: -15.25004768371582
    8. 'Capacity' → logprob: -15.37504768371582
    9. '.frequency' → logprob: -16.25004768371582
    10. ' capacity' → logprob: -17.37504768371582

Token 1386: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.6328325271606445
    2. ' <' → logprob: -0.7578325271606445
    3. '<m' → logprob: -8.757832527160645
    4. '>' → logprob: -11.257832527160645
    5. '<|end|>' → logprob: -11.632832527160645
    6. '<p' → logprob: -12.257832527160645
    7. '<span' → logprob: -12.257832527160645
    8. ' >' → logprob: -12.382832527160645
    9. '<size' → logprob: -12.757832527160645
    10. '<int' → logprob: -12.757832527160645

Token 1387: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -1.8624639324116288e-06
    2. ' min' → logprob: -13.250001907348633
    3. '_min' → logprob: -21.500001907348633
    4. '	min' → logprob: -22.125001907348633
    5. '(min' → logprob: -22.125001907348633
    6. '           ' → logprob: -23.625001907348633
    7. '   ' → logprob: -23.875001907348633
    8. '
' → logprob: -24.000001907348633
    9. '[min' → logprob: -24.625001907348633
    10. 'mini' → logprob: -24.750001907348633

Token 1388: '_capacity' (ID: 85527)
  Prédit: '_capacity'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_capacity' → logprob: -0.0002087853499688208
    2. 'capacity' → logprob: -8.500208854675293
    3. 'Capacity' → logprob: -12.500208854675293
    4. 'min' → logprob: -13.875208854675293
    5. '(min' → logprob: -14.875208854675293
    6. 'c' → logprob: -16.125207901000977
    7. 'heap' → logprob: -16.750207901000977
    8. '_cap' → logprob: -16.875207901000977
    9. 'import' → logprob: -17.250207901000977
    10. 'm' → logprob: -17.500207901000977

Token 1389: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.24480409920215607
    2. ':
' → logprob: -1.6198041439056396
    3. '                           ' → logprob: -4.2448039054870605
    4. '                       ' → logprob: -6.1198039054870605
    5. '                               ' → logprob: -6.6198039054870605
    6. ')' → logprob: -8.369804382324219
    7. '):' → logprob: -8.369804382324219
    8. '):
' → logprob: -8.744804382324219
    9. '<|end|>' → logprob: -9.369804382324219
    10. '=' → logprob: -9.619804382324219

Token 1390: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.10295162349939346
    2. '                               ' → logprob: -3.1029515266418457
    3. '=' → logprob: -3.8529515266418457
    4. ' =' → logprob: -3.9779515266418457
    5. '                       ' → logprob: -5.102951526641846
    6. ':' → logprob: -5.852951526641846
    7. '```' → logprob: -6.477951526641846
    8. ':
' → logprob: -7.227951526641846
    9. '                   ' → logprob: -7.727951526641846
    10. '                                   ' → logprob: -8.477952003479004

Token 1391: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' (adapté à ' min') → logprob: -0.25210800766944885
    2. 'm' → logprob: -1.5021079778671265
    3. ' min' → logprob: -9.002107620239258
    4. '                           ' → logprob: -10.627107620239258
    5. '                               ' → logprob: -10.752107620239258
    6. ' m' → logprob: -12.002107620239258
    7. '   ' → logprob: -13.627107620239258
    8. '```' → logprob: -13.627107620239258
    9. '``' → logprob: -15.502107620239258
    10. '               ' → logprob: -15.627107620239258

Token 1392: '_capacity' (ID: 85527)
  Prédit: '_capacity'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_capacity' → logprob: -6.630610641877865e-06
    2. 'capacity' → logprob: -12.250006675720215
    3. 'Capacity' → logprob: -13.750006675720215
    4. '_cap' → logprob: -14.250006675720215
    5. '_cost' → logprob: -17.2500057220459
    6. ' capacity' → logprob: -18.0000057220459
    7. '.capacity' → logprob: -18.7500057220459
    8. '_priority' → logprob: -19.6250057220459
    9. '_CAP' → logprob: -19.7500057220459
    10. '_' → logprob: -20.0000057220459

Token 1393: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20146869122982025
    2. ' =' → logprob: -1.7014687061309814
    3. '=
' → logprob: -10.326468467712402
    4. '=None' → logprob: -10.951468467712402
    5. '=min' → logprob: -13.951468467712402
    6. '=

' → logprob: -14.451468467712402
    7. '=True' → logprob: -14.576468467712402
    8. ' =
' → logprob: -14.826468467712402
    9. '                               ' → logprob: -15.076468467712402
    10. ',' → logprob: -15.201468467712402

Token 1394: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.004078401252627373
    2. ' m' → logprob: -5.504078388214111
    3. '	m' → logprob: -19.129077911376953
    4. '                           ' → logprob: -21.254077911376953
    5. '                       ' → logprob: -21.879077911376953
    6. '                   ' → logprob: -22.129077911376953
    7. '_m' → logprob: -22.379077911376953
    8. ' м' → logprob: -22.504077911376953
    9. '                               ' → logprob: -22.629077911376953
    10. ' ' → logprob: -22.754077911376953

Token 1395: '.capacity' (ID: 124122)
  Prédit: '.capacity'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.capacity' → logprob: -0.0008062947308644652
    2. 'capacity' → logprob: -7.1258063316345215
    3. '_capacity' → logprob: -14.125805854797363
    4. '.' → logprob: -15.125805854797363
    5. 'Capacity' → logprob: -15.750805854797363
    6. '.cap' → logprob: -15.875805854797363
    7. ' capacity' → logprob: -15.875805854797363
    8. '.release' → logprob: -16.50080680847168
    9. '.cost' → logprob: -17.12580680847168
    10. 'cap' → logprob: -17.25080680847168

Token 1396: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1397: '                   ' (ID: 699)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1398: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1399: ' else' (ID: 1203)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.9396666884422302
    2. '           ' → logprob: -1.314666748046875
    3. '                   ' → logprob: -2.314666748046875
    4. ' continue' → logprob: -2.439666748046875
    5. 'continue' → logprob: -2.439666748046875
    6. '
' → logprob: -4.064666748046875
    7. '       ' → logprob: -4.314666748046875
    8. 'return' → logprob: -4.814666748046875
    9. '```' → logprob: -5.439666748046875
    10. '                       ' → logprob: -5.689666748046875

Token 1400: ' skip' (ID: 16677)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.8907380104064941
    2. 'continue' → logprob: -0.8907380104064941
    3. '               ' → logprob: -1.8907380104064941
    4. '                   ' → logprob: -3.765738010406494
    5. '                       ' → logprob: -5.765738010406494
    6. ' pass' → logprob: -6.890738010406494
    7. 'pass' → logprob: -7.265738010406494
    8. '   ' → logprob: -8.765737533569336
    9. '           ' → logprob: -9.515737533569336
    10. '       ' → logprob: -10.640737533569336

Token 1401: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1402: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2008948028087616
    2. '
' → logprob: -1.825894832611084
    3. '           ' → logprob: -4.075894832611084
    4. '<|end|>' → logprob: -6.450894832611084
    5. '                   ' → logprob: -6.950894832611084
    6. '            
' → logprob: -8.325894355773926
    7. '       ' → logprob: -8.950894355773926
    8. '\n' → logprob: -9.075894355773926
    9. ' continue' → logprob: -9.200894355773926
    10. '    
' → logprob: -9.325894355773926

Token 1403: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.07318966835737228
    2. '           ' → logprob: -3.1981897354125977
    3. '
' → logprob: -3.9481897354125977
    4. ' if' → logprob: -5.573189735412598
    5. ' continue' → logprob: -6.698189735412598
    6. 'if' (adapté à ' if') → logprob: -6.948189735412598
    7. '                
' → logprob: -7.073189735412598
    8. '            
' → logprob: -7.198189735412598
    9. 'continue' → logprob: -7.823189735412598
    10. '                   ' → logprob: -7.948189735412598

Token 1404: ' count' (ID: 3605)
  Prédit: ' count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.34881120920181274
    2. 'count' → logprob: -1.223811149597168
    3. ' len' → logprob: -8.348811149597168
    4. 'len' → logprob: -9.223811149597168
    5. '   ' → logprob: -11.598811149597168
    6. '(count' → logprob: -11.973811149597168
    7. '	count' → logprob: -12.723811149597168
    8. ' ' → logprob: -13.098811149597168
    9. ' heap' → logprob: -13.098811149597168
    10. ' i' → logprob: -13.598811149597168

Token 1405: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.12711551785469055
    2. '==' → logprob: -2.127115488052368
    3. ' <' → logprob: -9.627115249633789
    4. ' >=' → logprob: -9.877115249633789
    5. ' ==
' → logprob: -10.877115249633789
    6. '==
' → logprob: -11.252115249633789
    7. '>=' → logprob: -11.377115249633789
    8. '<' → logprob: -11.877115249633789
    9. '=' → logprob: -12.377115249633789
    10. ' ' → logprob: -12.377115249633789

Token 1406: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.011048289015889168
    2. ' k' → logprob: -4.511048316955566
    3. ' ' → logprob: -16.01104736328125
    4. '   ' → logprob: -16.38604736328125
    5. '1' → logprob: -16.38604736328125
    6. '{k' → logprob: -16.38604736328125
    7. '	k' → logprob: -16.88604736328125
    8. '`' → logprob: -17.13604736328125
    9. '```' → logprob: -18.13604736328125
    10. '_k' → logprob: -18.26104736328125

Token 1407: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2918051481246948
    2. ' and' → logprob: -1.9168051481246948
    3. ':
' → logprob: -2.2918052673339844
    4. 'and' → logprob: -5.666805267333984
    5. '               ' → logprob: -7.166805267333984
    6. '           ' → logprob: -7.916805267333984
    7. ':return' → logprob: -8.791805267333984
    8. '<|end|>' → logprob: -9.666805267333984
    9. '                   ' → logprob: -10.666805267333984
    10. '       ' → logprob: -11.041805267333984

Token 1408: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.2366648018360138
    2. '               ' → logprob: -1.6116647720336914
    3. '                       ' → logprob: -4.736664772033691
    4. ' and' → logprob: -6.986664772033691
    5. ':
' → logprob: -7.236664772033691
    6. ':' → logprob: -7.611664772033691
    7. '           ' → logprob: -9.486664772033691
    8. '```' → logprob: -10.111664772033691
    9. '       ' → logprob: -10.236664772033691
    10. '
' → logprob: -10.986664772033691

Token 1409: ' #' (ID: 1069)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.13321012258529663
    2. '                   ' → logprob: -2.1332101821899414
    3. '               ' → logprob: -5.258210182189941
    4. 'return' → logprob: -7.758210182189941
    5. '
' → logprob: -8.133210182189941
    6. ' return' → logprob: -9.383210182189941
    7. '           ' → logprob: -9.633210182189941
    8. '       ' → logprob: -9.883210182189941
    9. 'if' → logprob: -10.133210182189941
    10. ' if' → logprob: -10.133210182189941

Token 1410: ' Check' (ID: 6208)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.07687415927648544
    2. '                       ' → logprob: -3.201874256134033
    3. 'if' → logprob: -4.326874256134033
    4. ' if' → logprob: -4.576874256134033
    5. 'return' → logprob: -5.201874256134033
    6. ' return' → logprob: -6.076874256134033
    7. '               ' → logprob: -6.451874256134033
    8. '           ' → logprob: -8.576873779296875
    9. '       ' → logprob: -8.951873779296875
    10. 'break' → logprob: -10.326873779296875

Token 1411: ' condition' (ID: 7060)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.048044200986623764
    2. ' if' → logprob: -3.298044204711914
    3. 'if' → logprob: -5.548044204711914
    4. '(total' → logprob: -6.173044204711914
    5. ' total' → logprob: -6.548044204711914
    6. 'total' → logprob: -6.798044204711914
    7. '               ' → logprob: -7.423044204711914
    8. '                       ' → logprob: -7.673044204711914
    9. '           ' → logprob: -8.673044204711914
    10. 'return' → logprob: -10.048044204711914

Token 1412: ' total' (ID: 3609)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.011765341274440289
    2. '                       ' → logprob: -4.511765480041504
    3. ':' → logprob: -8.011765480041504
    4. '               ' → logprob: -8.636765480041504
    5. ' if' → logprob: -9.511765480041504
    6. ':
' → logprob: -10.761765480041504
    7. '\' → logprob: -10.886765480041504
    8. '
' → logprob: -11.011765480041504
    9. '\n' → logprob: -11.511765480041504
    10. '           ' → logprob: -11.636765480041504

Token 1413: '_release' (ID: 59589)
  Prédit: '_release'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_release' → logprob: -0.0001126026691053994
    2. 'release' → logprob: -10.125112533569336
    3. '_' → logprob: -10.250112533569336
    4. '```' → logprob: -10.875112533569336
    5. '                   ' → logprob: -11.625112533569336
    6. '_re' → logprob: -13.125112533569336
    7. '               ' → logprob: -13.375112533569336
    8. '_return' → logprob: -13.875112533569336
    9. '_RELEASE' → logprob: -14.000112533569336
    10. '           ' → logprob: -14.500112533569336

Token 1414: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.25284573435783386
    2. '<=' → logprob: -1.5028457641601562
    3. '                   ' → logprob: -7.127845764160156
    4. '```' → logprob: -9.752845764160156
    5. '           ' → logprob: -11.752845764160156
    6. ')<=' → logprob: -11.752845764160156
    7. '               ' → logprob: -11.877845764160156
    8. '                  ' → logprob: -12.127845764160156
    9. '                       ' → logprob: -12.252845764160156
    10. '   ' → logprob: -12.752845764160156

Token 1415: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.20144714415073395
    2. ' min' → logprob: -1.7014471292495728
    3. '                   ' → logprob: -10.451447486877441
    4. '               ' → logprob: -13.576447486877441
    5. '   ' → logprob: -13.701447486877441
    6. '                       ' → logprob: -14.076447486877441
    7. '(min' → logprob: -14.826447486877441
    8. '```' → logprob: -15.451447486877441
    9. 'k' → logprob: -15.576447486877441
    10. '           ' → logprob: -15.576447486877441

Token 1416: '_capacity' (ID: 85527)
  Prédit: '_capacity'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_capacity' → logprob: -1.3306015716807451e-05
    2. 'capacity' → logprob: -12.37501335144043
    3. '```' → logprob: -13.00001335144043
    4. '_' → logprob: -13.25001335144043
    5. 'Capacity' → logprob: -13.62501335144043
    6. '\' → logprob: -14.00001335144043
    7. '_cap' → logprob: -14.12501335144043
    8. '(cap' → logprob: -14.37501335144043
    9. '``' → logprob: -14.87501335144043
    10. '_
' → logprob: -15.12501335144043

Token 1417: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.018214095383882523
    2. '*' → logprob: -4.018214225769043
    3. '*k' → logprob: -10.643214225769043
    4. '```' → logprob: -11.018214225769043
    5. '`' → logprob: -11.643214225769043
    6. '                   ' → logprob: -12.518214225769043
    7. ' ' → logprob: -13.018214225769043
    8. '   ' → logprob: -13.143214225769043
    9. ' ' → logprob: -13.143214225769043
    10. ')' → logprob: -14.518214225769043

Token 1418: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.005234002135694027
    2. ' k' → logprob: -5.2552337646484375
    3. '                   ' → logprob: -16.005233764648438
    4. '   ' → logprob: -18.380233764648438
    5. ' ' → logprob: -19.005233764648438
    6. '               ' → logprob: -19.130233764648438
    7. '```' → logprob: -19.130233764648438
    8. '                       ' → logprob: -19.380233764648438
    9. '{k' → logprob: -19.380233764648438
    10. '	k' → logprob: -19.630233764648438

Token 1419: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.09251608699560165
    2. '                       ' → logprob: -2.4675161838531494
    3. ':' → logprob: -6.59251594543457
    4. ':
' → logprob: -6.71751594543457
    5. ' and' → logprob: -7.71751594543457
    6. '               ' → logprob: -8.59251594543457
    7. '
' → logprob: -8.59251594543457
    8. '           ' → logprob: -10.46751594543457
    9. '       ' → logprob: -10.46751594543457
    10. '\' → logprob: -11.21751594543457

Token 1420: '                   ' (ID: 699)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.5782138705253601
    2. '                   ' → logprob: -0.8282138705253601
    3. ':' → logprob: -7.078213691711426
    4. ':
' → logprob: -7.453213691711426
    5. '
' → logprob: -7.828213691711426
    6. ' and' → logprob: -9.578213691711426
    7. '                        
' → logprob: -9.703213691711426
    8. '               ' → logprob: -9.828213691711426
    9. '```' → logprob: -10.078213691711426
    10. '\' → logprob: -10.328213691711426

Token 1421: ' if' (ID: 538)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.31614992022514343
    2. '                       ' → logprob: -1.3161499500274658
    3. '
' → logprob: -6.316149711608887
    4. 'return' → logprob: -8.066149711608887
    5. '               ' → logprob: -8.191149711608887
    6. ' return' → logprob: -9.066149711608887
    7. ' if' → logprob: -9.316149711608887
    8. 'if' (adapté à ' if') → logprob: -9.441149711608887
    9. '       ' → logprob: -9.566149711608887
    10. '           ' → logprob: -9.941149711608887

Token 1422: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.018151111900806427
    2. 'total' → logprob: -4.01815128326416
    3. '                   ' → logprob: -13.64315128326416
    4. '(total' → logprob: -17.518150329589844
    5. '	total' → logprob: -17.893150329589844
    6. '                       ' → logprob: -18.143150329589844
    7. ' ' → logprob: -18.643150329589844
    8. '               ' → logprob: -18.768150329589844
    9. '   ' → logprob: -19.268150329589844
    10. '                    ' → logprob: -19.768150329589844

Token 1423: '_release' (ID: 59589)
  Prédit: '_release'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_release' → logprob: -4.11996734328568e-05
    2. '_capacity' → logprob: -10.250041007995605
    3. 'release' → logprob: -12.625041007995605
    4. 'Release' → logprob: -14.000041007995605
    5. '_return' → logprob: -14.625041007995605
    6. '_' → logprob: -15.250041007995605
    7. '_RELEASE' → logprob: -15.250041007995605
    8. '           ' → logprob: -16.000041961669922
    9. '_re' → logprob: -16.250041961669922
    10. '   ' → logprob: -16.625041961669922

Token 1424: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.014219917356967926
    2. '<=' → logprob: -4.264219760894775
    3. ' ' → logprob: -10.639220237731934
    4. '```' → logprob: -11.514220237731934
    5. '                   ' → logprob: -12.389220237731934
    6. ' >=' → logprob: -12.514220237731934
    7. '                    ' → logprob: -13.014220237731934
    8. ')<=' → logprob: -13.514220237731934
    9. ' ≤' → logprob: -13.764220237731934
    10. ')' → logprob: -14.014220237731934

Token 1425: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.001170225441455841
    2. 'min' → logprob: -6.7511701583862305
    3. '(min' → logprob: -17.751171112060547
    4. '                   ' → logprob: -18.126171112060547
    5. '[min' → logprob: -18.751171112060547
    6. '	min' → logprob: -19.126171112060547
    7. ' k' → logprob: -19.126171112060547
    8. '               ' → logprob: -19.501171112060547
    9. '_min' → logprob: -20.001171112060547
    10. '    ' → logprob: -20.001171112060547

Token 1426: '_capacity' (ID: 85527)
  Prédit: '_capacity'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_capacity' → logprob: -3.292907877039397e-06
    2. 'capacity' → logprob: -12.87500286102295
    3. '_cap' → logprob: -15.00000286102295
    4. 'Capacity' → logprob: -15.75000286102295
    5. '_cost' → logprob: -16.125003814697266
    6. '_' → logprob: -17.625003814697266
    7. '\' → logprob: -18.000003814697266
    8. '_
' → logprob: -18.625003814697266
    9. ' capacity' → logprob: -18.875003814697266
    10. '
' → logprob: -19.000003814697266

Token 1427: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.1131882444024086
    2. '*' → logprob: -2.2381882667541504
    3. '*k' → logprob: -8.238187789916992
    4. '```' → logprob: -10.738187789916992
    5. '   ' → logprob: -10.988187789916992
    6. ' ' → logprob: -11.238187789916992
    7. '`' → logprob: -11.488187789916992
    8. '*object' → logprob: -11.738187789916992
    9. '**' → logprob: -12.113187789916992
    10. '                   ' → logprob: -12.363187789916992

Token 1428: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0001234428636962548
    2. ' k' → logprob: -9.000123023986816
    3. '   ' → logprob: -22.875123977661133
    4. '	k' → logprob: -23.000123977661133
    5. '
' → logprob: -23.250123977661133
    6. '{k' → logprob: -23.875123977661133
    7. '           ' → logprob: -24.625123977661133
    8. '                   ' → logprob: -25.000123977661133
    9. '               ' → logprob: -25.125123977661133
    10. '_k' → logprob: -25.500123977661133

Token 1429: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.9654116630554199
    2. '                       ' → logprob: -0.9654116630554199
    3. ':' → logprob: -1.46541166305542
    4. '                   ' → logprob: -5.09041166305542
    5. ':return' → logprob: -7.34041166305542
    6. '):
' → logprob: -8.215412139892578
    7. '():
' → logprob: -9.590412139892578
    8. '               ' → logprob: -9.590412139892578
    9. '                           ' → logprob: -10.840412139892578
    10. ' and' → logprob: -10.840412139892578

Token 1430: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0002979240380227566
    2. ':
' → logprob: -9.125297546386719
    3. '                   ' → logprob: -9.375297546386719
    4. ':' → logprob: -10.500297546386719
    5. 'return' → logprob: -10.625297546386719
    6. ' return' → logprob: -11.500297546386719
    7. '                           ' → logprob: -11.750297546386719
    8. '
' → logprob: -11.750297546386719
    9. '):
' → logprob: -12.250297546386719
    10. '                        
' → logprob: -12.500297546386719

Token 1431: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.25947079062461853
    2. '                       ' → logprob: -1.509470820426941
    3. '                           ' → logprob: -5.3844709396362305
    4. ' return' → logprob: -5.8844709396362305
    5. '                               ' → logprob: -9.75947093963623
    6. '                   ' → logprob: -10.50947093963623
    7. '               ' → logprob: -11.63447093963623
    8. '	return' → logprob: -11.88447093963623
    9. '{return' → logprob: -11.88447093963623
    10. '
' → logprob: -12.00947093963623

Token 1432: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.474077433347702
    2. ' True' → logprob: -0.9740774631500244
    3. '(True' → logprob: -15.599077224731445
    4. '
' → logprob: -15.724077224731445
    5. '                   ' → logprob: -16.349077224731445
    6. '   ' → logprob: -18.099077224731445
    7. '                       ' → logprob: -18.224077224731445
    8. '               ' → logprob: -18.349077224731445
    9. 'False' → logprob: -18.349077224731445
    10. '=True' → logprob: -18.599077224731445

Token 1433: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.3381196856498718
    2. '
' → logprob: -2.0881197452545166
    3. '               ' → logprob: -2.9631197452545166
    4. '           ' → logprob: -2.9631197452545166
    5. '            
' → logprob: -4.5881195068359375
    6. '                
' → logprob: -4.8381195068359375
    7. '    
' → logprob: -5.5881195068359375
    8. '        
' → logprob: -5.5881195068359375
    9. '```' → logprob: -5.7131195068359375
    10. '                        
' → logprob: -5.8381195068359375

Token 1434: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009889957495033741
    2. '               ' → logprob: -5.884890079498291
    3. '
' → logprob: -6.259890079498291
    4. '       ' → logprob: -6.509890079498291
    5. 'return' → logprob: -6.884890079498291
    6. '            
' → logprob: -6.884890079498291
    7. '\n' → logprob: -7.509890079498291
    8. '    
' → logprob: -8.384889602661133
    9. '                   ' → logprob: -8.509889602661133
    10. ' return' → logprob: -8.884889602661133

Token 1435: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19857218861579895
    2. '           ' → logprob: -1.8235721588134766
    3. 'return' (adapté à ' return') → logprob: -4.823572158813477
    4. '
' → logprob: -5.073572158813477
    5. '   ' → logprob: -6.323572158813477
    6. ' return' → logprob: -7.198572158813477
    7. '\n' → logprob: -8.073572158813477
    8. '               ' → logprob: -8.073572158813477
    9. '        
' → logprob: -8.198572158813477
    10. '	return' → logprob: -8.198572158813477

Token 1436: ' False' (ID: 7983)
  Prédit: ' False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.6931473612785339
    2. 'False' → logprob: -0.6931473612785339
    3. '(False' → logprob: -15.568147659301758
    4. '=False' → logprob: -17.318147659301758
    5. '_false' → logprob: -18.693147659301758
    6. '.False' → logprob: -20.693147659301758
    7. ' ' → logprob: -22.068147659301758
    8. ' false' → logprob: -22.193147659301758
    9. '_FALSE' → logprob: -22.318147659301758
    10. 'false' → logprob: -22.318147659301758

Token 1437: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09451503306627274
    2. '
' → logprob: -2.969515085220337
    3. '        
' → logprob: -3.844515085220337
    4. '\n' → logprob: -5.344514846801758
    5. '    
' → logprob: -5.469514846801758
    6. ' 
' → logprob: -6.094514846801758
    7. '```' → logprob: -6.344514846801758
    8. '   ' → logprob: -6.594514846801758
    9. '<|end|>' → logprob: -7.594514846801758
    10. ')' → logprob: -7.719514846801758

Token 1438: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0018467707559466362
    2. '   ' → logprob: -6.626846790313721
    3. '        
' → logprob: -8.751846313476562
    4. '```' → logprob: -9.626846313476562
    5. '"' → logprob: -9.751846313476562
    6. '	' → logprob: -9.876846313476562
    7. ')' → logprob: -10.126846313476562
    8. ':' → logprob: -10.376846313476562
    9. '           ' → logprob: -10.876846313476562
    10. '    ' → logprob: -11.501846313476562

Token 1439: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9065560698509216
    2. '
' → logprob: -1.4065561294555664
    3. 'while' → logprob: -1.6565561294555664
    4. 'return' → logprob: -2.6565561294555664
    5. '```' → logprob: -3.6565561294555664
    6. ' while' → logprob: -3.9065561294555664
    7. '   ' → logprob: -4.031556129455566
    8. '        
' → logprob: -4.656556129455566
    9. '  
' → logprob: -5.656556129455566
    10. '    
' → logprob: -5.781556129455566

Token 1440: ' classic' (ID: 13686)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.0012636866886168718
    2. 'result' → logprob: -7.001263618469238
    3. ' while' → logprob: -9.001263618469238
    4. '       ' → logprob: -9.376263618469238
    5. 'return' → logprob: -9.751263618469238
    6. 'res' → logprob: -10.501263618469238
    7. 'best' → logprob: -10.751263618469238
    8. 'answer' → logprob: -11.001263618469238
    9. '        
' → logprob: -11.751263618469238
    10. '
' → logprob: -12.876263618469238

Token 1441: ' binary' (ID: 15600)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.6389827728271484
    2. ' while' → logprob: -0.7639827728271484
    3. ' 
' → logprob: -5.513982772827148
    4. '
' → logprob: -6.888982772827148
    5. '       ' → logprob: -7.763982772827148
    6. '        
' → logprob: -8.513982772827148
    7. 'return' → logprob: -8.763982772827148
    8. ' return' → logprob: -9.638982772827148
    9. '   ' → logprob: -9.763982772827148
    10. ' for' → logprob: -9.888982772827148

Token 1442: ' search' (ID: 3684)
  Prédit: '_search'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_search' → logprob: -0.5072170495986938
    2. ' search' → logprob: -1.5072170495986938
    3. 'search' → logprob: -1.7572170495986938
    4. '_' → logprob: -5.632216930389404
    5. ' _' → logprob: -9.007217407226562
    6. '       ' → logprob: -11.007217407226562
    7. 'space' → logprob: -11.007217407226562
    8. '   ' → logprob: -11.132217407226562
    9. '
' → logprob: -11.882217407226562
    10. ')' → logprob: -12.382217407226562

Token 1443: ' for' (ID: 395)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3481728136539459
    2. '       ' → logprob: -1.5981727838516235
    3. 'while' → logprob: -2.973172903060913
    4. ' while' → logprob: -3.973172903060913
    5. ':
' → logprob: -4.723172664642334
    6. '   ' → logprob: -5.598172664642334
    7. '        
' → logprob: -5.723172664642334
    8. '  
' → logprob: -6.348172664642334
    9. ':' → logprob: -6.973172664642334
    10. ' 
' → logprob: -7.223172664642334

Token 1444: ' max' (ID: 2999)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.2831401228904724
    2. ' k' → logprob: -1.4081401824951172
    3. 'mid' → logprob: -6.783140182495117
    4. ' left' → logprob: -8.283140182495117
    5. 'left' → logprob: -8.283140182495117
    6. ' mid' → logprob: -8.408140182495117
    7. 'max' → logprob: -10.158140182495117
    8. 'sur' → logprob: -11.033140182495117
    9. ' survivors' → logprob: -11.533140182495117
    10. 'low' → logprob: -11.658140182495117

Token 1445: ' k' (ID: 372)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.47584807872772217
    2. ' while' → logprob: -1.8508480787277222
    3. 'while' → logprob: -1.9758480787277222
    4. '   ' → logprob: -3.7258481979370117
    5. '
' → logprob: -4.350848197937012
    6. '_' → logprob: -5.225848197937012
    7. ' ' → logprob: -5.350848197937012
    8. ' left' → logprob: -5.475848197937012
    9. ' =' → logprob: -5.850848197937012
    10. ' _' → logprob: -6.100848197937012

Token 1446: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06459014862775803
    2. '       ' → logprob: -2.9395902156829834
    3. 'while' → logprob: -5.189589977264404
    4. '        
' → logprob: -6.814589977264404
    5. ' while' → logprob: -6.939589977264404
    6. '   ' → logprob: -7.689589977264404
    7. ' 
' → logprob: -8.064590454101562
    8. '    
' → logprob: -8.064590454101562
    9. '  
' → logprob: -8.439590454101562
    10. '\n' → logprob: -8.439590454101562

Token 1447: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5187125205993652
    2. 'while' → logprob: -1.7687125205993652
    3. '       ' → logprob: -2.0187125205993652
    4. '   ' → logprob: -3.6437125205993652
    5. ' while' → logprob: -3.7687125205993652
    6. ' 
' → logprob: -4.268712520599365
    7. '  
' → logprob: -4.268712520599365
    8. '    
' → logprob: -4.643712520599365
    9. '        
' → logprob: -5.018712520599365
    10. ':
' → logprob: -7.143712520599365

Token 1448: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.052326932549476624
    2. ' while' → logprob: -3.1773269176483154
    3. '       ' → logprob: -5.1773271560668945
    4. '
' → logprob: -5.8023271560668945
    5. 'result' → logprob: -8.427327156066895
    6. 'mid' → logprob: -9.052327156066895
    7. '        
' → logprob: -9.302327156066895
    8. '```' → logprob: -9.927327156066895
    9. '   ' → logprob: -10.552327156066895
    10. ' 
' → logprob: -10.552327156066895

Token 1449: ' left' (ID: 3561)
  Prédit: ' left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' left' → logprob: -0.005236479919403791
    2. 'left' → logprob: -5.255236625671387
    3. ' lef' → logprob: -13.005236625671387
    4. ' right' → logprob: -15.630236625671387
    5. '	left' → logprob: -15.755236625671387
    6. '_left' → logprob: -16.25523567199707
    7. '(left' → logprob: -17.63023567199707
    8. '    ' → logprob: -17.63023567199707
    9. ' not' → logprob: -17.75523567199707
    10. ' True' → logprob: -18.00523567199707

Token 1450: ' <' (ID: 464)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.1702856719493866
    2. '<=' → logprob: -1.920285701751709
    3. ' <' → logprob: -4.795285701751709
    4. '<' → logprob: -6.420285701751709
    5. '=' → logprob: -9.79528522491455
    6. ' ≤' → logprob: -11.29528522491455
    7. '<int' → logprob: -11.67028522491455
    8. ' <<=' → logprob: -11.92028522491455
    9. ' ' → logprob: -12.17028522491455
    10. ' !=' → logprob: -12.54528522491455

Token 1451: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.014183126389980316
    2. ' right' → logprob: -4.264183044433594
    3. '=' → logprob: -10.889183044433594
    4. '	right' → logprob: -14.889183044433594
    5. '[right' → logprob: -15.139183044433594
    6. '
' → logprob: -15.389183044433594
    7. '```' → logprob: -16.764183044433594
    8. ':right' → logprob: -17.139183044433594
    9. ',right' → logprob: -17.639183044433594
    10. '(right' → logprob: -18.014183044433594

Token 1452: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9674993753433228
    2. '=' → logprob: -1.3424993753433228
    3. ' =' → logprob: -1.4674993753433228
    4. '<|end|>' → logprob: -2.842499256134033
    5. ':
' → logprob: -3.467499256134033
    6. '+' → logprob: -4.467499256134033
    7. ' +=' → logprob: -4.717499256134033
    8. '<|end|>' → logprob: -5.217499256134033
    9. '+=' → logprob: -5.842499256134033
    10. ' +' → logprob: -6.592499256134033

Token 1453: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10696302354335785
    2. '       ' → logprob: -2.6069629192352295
    3. '   ' → logprob: -4.981963157653809
    4. '```' → logprob: -5.481963157653809
    5. ' =' → logprob: -5.731963157653809
    6. ':
' → logprob: -5.981963157653809
    7. '    ' → logprob: -6.856963157653809
    8. '        ' → logprob: -6.856963157653809
    9. '=' → logprob: -6.981963157653809
    10. ':' → logprob: -6.981963157653809

Token 1454: ' mid' (ID: 6959)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -1.0483379364013672
    2. ' right' → logprob: -1.0483379364013672
    3. ' mid' → logprob: -1.9233379364013672
    4. ' middle' → logprob: -2.798337936401367
    5. 'mid' (adapté à ' mid') → logprob: -3.798337936401367
    6. '(mid' → logprob: -3.923337936401367
    7. '(right' → logprob: -4.423337936401367
    8. 'right' → logprob: -4.548337936401367
    9. '    ' → logprob: -5.048337936401367
    10. 'middle' → logprob: -5.798337936401367

Token 1455: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07018361985683441
    2. '=' → logprob: -2.695183515548706
    3. '<|end|>' → logprob: -9.320183753967285
    4. ' =
' → logprob: -9.945183753967285
    5. ')' → logprob: -10.070183753967285
    6. ' +=' → logprob: -11.320183753967285
    7. ' ' → logprob: -11.695183753967285
    8. '=int' → logprob: -11.820183753967285
    9. '=
' → logprob: -12.195183753967285
    10. 'space' → logprob: -12.570183753967285

Token 1456: ' (' (ID: 350)
  Prédit: '(left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(left' → logprob: -0.04869966581463814
    2. ' (' → logprob: -3.0486996173858643
    3. 'left' → logprob: -9.548699378967285
    4. ' left' → logprob: -10.423699378967285
    5. '(right' → logprob: -11.423699378967285
    6. '[left' → logprob: -15.298699378967285
    7. '   ' → logprob: -17.1737003326416
    8. ',left' → logprob: -17.2987003326416
    9. ' ' → logprob: -18.1737003326416
    10. '(' → logprob: -18.5487003326416

Token 1457: 'left' (ID: 4530)
  Prédit: 'left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -1.8193366486229934e-05
    2. 'right' → logprob: -11.000018119812012
    3. ' left' → logprob: -13.500018119812012
    4. '(left' → logprob: -19.250019073486328
    5. '	left' → logprob: -20.500019073486328
    6. '[left' → logprob: -20.625019073486328
    7. 'lef' → logprob: -21.375019073486328
    8. '.left' → logprob: -22.000019073486328
    9. '   ' → logprob: -22.125019073486328
    10. '           ' → logprob: -22.375019073486328

Token 1458: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.03364973142743111
    2. '+' → logprob: -3.4086496829986572
    3. ' +
' → logprob: -13.158649444580078
    4. ')' → logprob: -13.533649444580078
    5. '+
' → logprob: -15.783649444580078
    6. ')+' → logprob: -16.283649444580078
    7. '<|end|>' → logprob: -16.283649444580078
    8. ' plus' → logprob: -16.408649444580078
    9. '+b' → logprob: -16.533649444580078
    10. '+k' → logprob: -17.033649444580078

Token 1459: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -1.306760805164231e-05
    2. ' right' → logprob: -11.25001335144043
    3. '(right' → logprob: -17.12501335144043
    4. '	right' → logprob: -18.87501335144043
    5. '1' → logprob: -19.12501335144043
    6. '
' → logprob: -19.25001335144043
    7. '[right' → logprob: -20.25001335144043
    8. '.right' → logprob: -20.87501335144043
    9. '   ' → logprob: -21.00001335144043
    10. ',right' → logprob: -21.87501335144043

Token 1460: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07287518680095673
    2. ' +' → logprob: -3.0728752613067627
    3. '+' → logprob: -3.8228752613067627
    4. ')//' → logprob: -6.947875022888184
    5. ' )' → logprob: -7.697875022888184
    6. ')>>' → logprob: -8.197875022888184
    7. ' //' → logprob: -8.697875022888184
    8. '```' → logprob: -9.572875022888184
    9. ' >>' → logprob: -9.822875022888184
    10. '>>' → logprob: -9.947875022888184

Token 1461: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000553151941858232
    2. ' ' → logprob: -7.500553131103516
    3. ')' → logprob: -16.500553131103516
    4. '   ' → logprob: -18.625553131103516
    5. '```' → logprob: -18.625553131103516
    6. '
' → logprob: -19.625553131103516
    7. '  ' → logprob: -20.750553131103516
    8. '0' → logprob: -21.750553131103516
    9. 'right' → logprob: -22.250553131103516
    10. '``' → logprob: -22.750553131103516

Token 1462: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5451681974809617e-05
    2. ' ' → logprob: -11.125015258789062
    3. '2' → logprob: -15.125015258789062
    4. '-' → logprob: -16.000015258789062
    5. ')' → logprob: -16.125015258789062
    6. '   ' → logprob: -16.750015258789062
    7. '```' → logprob: -17.000015258789062
    8. '0' → logprob: -17.125015258789062
    9. '
' → logprob: -18.625015258789062
    10. 'right' → logprob: -19.375015258789062

Token 1463: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00020056030189152807
    2. ')//' → logprob: -8.625200271606445
    3. ' )' → logprob: -11.250200271606445
    4. ')>>' → logprob: -11.750200271606445
    5. ')
' → logprob: -16.250200271606445
    6. '//' → logprob: -18.375200271606445
    7. '
' → logprob: -18.375200271606445
    8. '```' → logprob: -18.750200271606445
    9. '   ' → logprob: -19.000200271606445
    10. '）' → logprob: -19.000200271606445

Token 1464: ' //' (ID: 602)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011083780787885189
    2. '>>' → logprob: -5.886083602905273
    3. ')//' → logprob: -5.886083602905273
    4. ')>>' → logprob: -6.011083602905273
    5. '//' → logprob: -6.636083602905273
    6. ' //' → logprob: -6.886083602905273
    7. ' >>' → logprob: -7.886083602905273
    8. ' )' → logprob: -8.886083602905273
    9. '
' → logprob: -9.886083602905273
    10. '```' → logprob: -10.511083602905273

Token 1465: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0001234428636962548
    2. ' ' → logprob: -9.000123023986816
    3. '```' → logprob: -19.000123977661133
    4. '   ' → logprob: -19.625123977661133
    5. '
' → logprob: -20.000123977661133
    6. '    ' → logprob: -21.875123977661133
    7. '۲' → logprob: -21.875123977661133
    8. '  ' → logprob: -22.250123977661133
    9. '=' → logprob: -22.625123977661133
    10. '     ' → logprob: -22.875123977661133

Token 1466: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -13.875000953674316
    3. '```' → logprob: -19.250001907348633
    4. '
' → logprob: -20.500001907348633
    5. '   ' → logprob: -21.125001907348633
    6. '۲' → logprob: -21.750001907348633
    7. '=' → logprob: -22.125001907348633
    8. '２' → logprob: -22.875001907348633
    9. '२' → logprob: -23.250001907348633
    10. '``' → logprob: -23.625001907348633

Token 1467: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00112426420673728
    2. '       ' → logprob: -7.626124382019043
    3. '<|end|>' → logprob: -7.876124382019043
    4. '
' → logprob: -9.251124382019043
    5. '<|end|>' → logprob: -10.126124382019043
    6. '            
' → logprob: -10.751124382019043
    7. ':
' → logprob: -10.751124382019043
    8. ')' → logprob: -11.001124382019043
    9. ',' → logprob: -11.751124382019043
    10. ' if' → logprob: -11.876124382019043

Token 1468: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -4.8232690460281447e-05
    2. '       ' → logprob: -10.375048637390137
    3. '
' → logprob: -12.000048637390137
    4. '<|end|>' → logprob: -12.875048637390137
    5. ' if' → logprob: -13.125048637390137
    6. 'if' → logprob: -13.250048637390137
    7. '            
' → logprob: -13.375048637390137
    8. '<|end|>' → logprob: -14.000048637390137
    9. '               ' → logprob: -14.500048637390137
    10. '   ' → logprob: -14.625048637390137

Token 1469: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03392598405480385
    2. ' if' → logprob: -4.033926010131836
    3. 'if' (adapté à ' if') → logprob: -4.158926010131836
    4. '
' → logprob: -11.658926010131836
    5. '	       ' → logprob: -12.533926010131836
    6. '   ' → logprob: -12.658926010131836
    7. '       ' → logprob: -12.783926010131836
    8. '		' → logprob: -12.908926010131836
    9. '            
' → logprob: -13.033926010131836
    10. '               ' → logprob: -13.533926010131836

Token 1470: ' can' (ID: 665)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'can' → logprob: -0.12693241238594055
    2. ' can' → logprob: -2.126932382583618
    3. '	can' → logprob: -13.251932144165039
    4. '           ' → logprob: -13.376932144165039
    5. ' self' → logprob: -14.626932144165039
    6. 'self' → logprob: -15.251932144165039
    7. '   ' → logprob: -15.876932144165039
    8. '(can' → logprob: -16.00193214416504
    9. '_can' → logprob: -16.62693214416504
    10. '.can' → logprob: -17.37693214416504

Token 1471: '(mid' (ID: 121498)
  Prédit: '(mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mid' → logprob: -0.0012323728296905756
    2. '(' → logprob: -7.251232147216797
    3. '_sur' → logprob: -8.001232147216797
    4. '(m' → logprob: -9.876232147216797
    5. 'sur' → logprob: -9.876232147216797
    6. '(
' → logprob: -10.251232147216797
    7. '[mid' → logprob: -11.126232147216797
    8. ' survive' → logprob: -11.626232147216797
    9. ')' → logprob: -12.001232147216797
    10. ' (' → logprob: -12.251232147216797

Token 1472: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01772456057369709
    2. ')' → logprob: -4.267724514007568
    3. '):
' → logprob: -5.642724514007568
    4. ' ):' → logprob: -11.767724990844727
    5. ':' → logprob: -13.517724990844727
    6. ')==' → logprob: -14.017724990844727
    7. '):
' → logprob: -15.017724990844727
    8. '):

' → logprob: -15.142724990844727
    9. ' )' → logprob: -15.392724990844727
    10. '           ' → logprob: -15.392724990844727

Token 1473: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00015157493180595338
    2. ':
' → logprob: -9.500151634216309
    3. '<|end|>' → logprob: -11.000151634216309
    4. '           ' → logprob: -11.125151634216309
    5. ')' → logprob: -11.625151634216309
    6. '):
' → logprob: -12.125151634216309
    7. ':' → logprob: -12.250151634216309
    8. '                
' → logprob: -12.500151634216309
    9. '                ' → logprob: -13.125151634216309
    10. '{' → logprob: -13.250151634216309

Token 1474: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' (adapté à ' left') → logprob: -0.08054323494434357
    2. ' left' → logprob: -2.580543279647827
    3. '               ' → logprob: -6.455543041229248
    4. '[left' → logprob: -9.955543518066406
    5. '	left' → logprob: -10.705543518066406
    6. '.left' → logprob: -12.580543518066406
    7. '_left' → logprob: -13.080543518066406
    8. '
' → logprob: -13.955543518066406
    9. '           ' → logprob: -13.955543518066406
    10. 'right' → logprob: -14.330543518066406

Token 1475: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759435892105103
    2. ' =' → logprob: -0.8259435892105103
    3. ' =
' → logprob: -12.825943946838379
    4. '=
' → logprob: -13.700943946838379
    5. ' ' → logprob: -16.575942993164062
    6. '<|end|>' → logprob: -16.700942993164062
    7. ' =)' → logprob: -17.325942993164062
    8. ',' → logprob: -17.450942993164062
    9. '=

' → logprob: -17.450942993164062
    10. '＝' → logprob: -17.575942993164062

Token 1476: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.0380416102707386
    2. ' mid' → logprob: -3.288041591644287
    3. '[mid' → logprob: -17.163042068481445
    4. '(mid' → logprob: -17.538042068481445
    5. '_mid' → logprob: -18.038042068481445
    6. '
' → logprob: -19.663042068481445
    7. '.mid' → logprob: -20.413042068481445
    8. 'middle' → logprob: -22.163042068481445
    9. ' midpoint' → logprob: -22.413042068481445
    10. ' mids' → logprob: -23.788042068481445

Token 1477: '
' (ID: 198)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.3884320557117462
    2. '           ' → logprob: -1.3884320259094238
    3. ' else' → logprob: -2.638432025909424
    4. '
' → logprob: -7.763432025909424
    5. '<|end|>' → logprob: -8.763432502746582
    6. '       ' → logprob: -9.138432502746582
    7. '               ' → logprob: -10.013432502746582
    8. 'elif' → logprob: -10.138432502746582
    9. '	else' → logprob: -10.513432502746582
    10. '		' → logprob: -10.638432502746582

Token 1478: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.016703875735402107
    2. 'else' → logprob: -4.266704082489014
    3. ' else' → logprob: -6.016704082489014
    4. '
' → logprob: -9.516703605651855
    5. '       ' → logprob: -11.641703605651855
    6. '		' → logprob: -12.516703605651855
    7. '```' → logprob: -12.891703605651855
    8. '            
' → logprob: -13.016703605651855
    9. '<|end|>' → logprob: -13.266703605651855
    10. '    
' → logprob: -13.516703605651855

Token 1479: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.2597458064556122
    2. ' else' → logprob: -1.5097458362579346
    3. '           ' → logprob: -4.8847455978393555
    4. '       ' → logprob: -8.509745597839355
    5. '	else' → logprob: -11.759745597839355
    6. '   ' → logprob: -12.134745597839355
    7. '
' → logprob: -12.759745597839355
    8. '```' → logprob: -13.259745597839355
    9. '<|end|>' → logprob: -13.759745597839355
    10. '_else' → logprob: -14.009745597839355

Token 1480: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.48909157514572144
    2. '               ' → logprob: -1.1140916347503662
    3. ':' → logprob: -2.864091634750366
    4. '           ' → logprob: -7.489091396331787
    5. '):
' → logprob: -8.364091873168945
    6. ',' → logprob: -8.614091873168945
    7. '=' → logprob: -9.239091873168945
    8. ' =' → logprob: -9.864091873168945
    9. ')' → logprob: -10.114091873168945
    10. '<|end|>' → logprob: -10.114091873168945

Token 1481: '               ' (ID: 506)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.47754791378974915
    2. '               ' → logprob: -1.6025478839874268
    3. ' right' → logprob: -1.7275478839874268
    4. '	right' → logprob: -8.102547645568848
    5. '           ' → logprob: -8.852547645568848
    6. '   ' → logprob: -10.352547645568848
    7. '[right' → logprob: -10.852547645568848
    8. ',right' → logprob: -10.852547645568848
    9. ':right' → logprob: -10.977547645568848
    10. '(right' → logprob: -11.352547645568848

Token 1482: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' (adapté à ' right') → logprob: -0.011124689131975174
    2. ' right' → logprob: -4.511124610900879
    3. '               ' → logprob: -9.511124610900879
    4. '	right' → logprob: -13.011124610900879
    5. '[right' → logprob: -15.761124610900879
    6. '.right' → logprob: -16.136125564575195
    7. '   ' → logprob: -16.261125564575195
    8. '_right' → logprob: -16.261125564575195
    9. ',right' → logprob: -16.636125564575195
    10. '           ' → logprob: -16.886125564575195

Token 1483: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12859608232975006
    2. ' =' → logprob: -2.128596067428589
    3. ' +=' → logprob: -6.878596305847168
    4. '+=' → logprob: -8.128596305847168
    5. '+' → logprob: -8.878596305847168
    6. ' -=' → logprob: -9.128596305847168
    7. ' +' → logprob: -9.878596305847168
    8. '=
' → logprob: -11.378596305847168
    9. ')' → logprob: -11.753596305847168
    10. ' =
' → logprob: -12.128596305847168

Token 1484: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.014169150963425636
    2. ' mid' → logprob: -4.264169216156006
    3. 'right' → logprob: -12.889168739318848
    4. 'middle' → logprob: -13.389168739318848
    5. 'left' → logprob: -13.639168739318848
    6. ' right' → logprob: -15.514168739318848
    7. '(mid' → logprob: -17.014169692993164
    8. ' left' → logprob: -17.139169692993164
    9. '[mid' → logprob: -17.389169692993164
    10. '_mid' → logprob: -17.514169692993164

Token 1485: ' -' (ID: 533)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02545287273824215
    2. '
' → logprob: -3.9004528522491455
    3. '        
' → logprob: -6.775453090667725
    4. '           ' → logprob: -7.150453090667725
    5. 'return' → logprob: -7.400453090667725
    6. '<|end|>' → logprob: -7.775453090667725
    7. 'else' → logprob: -8.400452613830566
    8. '```' → logprob: -8.400452613830566
    9. '   ' → logprob: -8.775452613830566
    10. ':
' → logprob: -8.900452613830566

Token 1486: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.125
    3. '<|end|>' → logprob: -19.75
    4. '
' → logprob: -20.125
    5. '```' → logprob: -20.25
    6. '{
' → logprob: -21.625
    7. '   ' → logprob: -21.75
    8. '=' → logprob: -22.0
    9. '0' → logprob: -22.0
    10. '۱' → logprob: -22.25

Token 1487: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.125
    3. '```' → logprob: -17.625
    4. '<|end|>' → logprob: -17.625
    5. '{
' → logprob: -19.75
    6. '{' → logprob: -19.75
    7. '`' → logprob: -20.875
    8. '=' → logprob: -20.875
    9. '[' → logprob: -21.125
    10. '0' → logprob: -21.5

Token 1488: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0015378349926322699
    2. 'return' → logprob: -7.626537799835205
    3. '
' → logprob: -7.876537799835205
    4. '        
' → logprob: -8.501538276672363
    5. ' return' → logprob: -8.501538276672363
    6. '   ' → logprob: -9.001538276672363
    7. '<|end|>' → logprob: -10.251538276672363
    8. '           ' → logprob: -10.626538276672363
    9. '[' → logprob: -11.001538276672363
    10. '    
' → logprob: -11.126538276672363

Token 1489: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0081238504499197
    2. '
' → logprob: -5.883123874664307
    3. 'return' → logprob: -5.883123874664307
    4. '        
' → logprob: -6.758123874664307
    5. ' return' → logprob: -7.258123874664307
    6. '<|end|>' → logprob: -8.383123397827148
    7. '	return' → logprob: -8.883123397827148
    8. '   ' → logprob: -9.758123397827148
    9. '```' → logprob: -9.883123397827148
    10. '	' → logprob: -9.883123397827148

Token 1490: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04900459572672844
    2. 'return' (adapté à ' return') → logprob: -3.049004554748535
    3. '   ' → logprob: -8.299004554748535
    4. ' return' → logprob: -8.799004554748535
    5. '	return' → logprob: -12.049004554748535
    6. '
' → logprob: -12.799004554748535
    7. '           ' → logprob: -12.924004554748535
    8. '```' → logprob: -13.299004554748535
    9. '        
' → logprob: -13.549004554748535
    10. ':return' → logprob: -14.049004554748535

Token 1491: ' left' (ID: 3561)
  Prédit: ' left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' left' → logprob: -0.011048528365790844
    2. 'left' → logprob: -4.511048316955566
    3. ' lef' → logprob: -14.386048316955566
    4. '	left' → logprob: -16.261049270629883
    5. '_left' → logprob: -17.511049270629883
    6. ' self' → logprob: -18.261049270629883
    7. '[left' → logprob: -18.386049270629883
    8. '(left' → logprob: -19.136049270629883
    9. 'self' → logprob: -19.386049270629883
    10. 'lef' → logprob: -19.761049270629883

Token 1492: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1493: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1494: ' Micro' (ID: 24356)
  Prédit: 'Solution'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Solution' → logprob: -0.18506669998168945
    2. 'Micro' → logprob: -2.8100666999816895
    3. 'Test' → logprob: -2.9350666999816895
    4. 'Pet' → logprob: -3.6850666999816895
    5. 'Experiment' → logprob: -4.1850666999816895
    6. 'Simulation' → logprob: -5.0600666999816895
    7. 'Main' → logprob: -6.5600666999816895
    8. 'Solver' → logprob: -6.8100666999816895
    9. ' Solution' → logprob: -6.9350666999816895
    10. 'Simulator' → logprob: -7.0600666999816895

Token 1495: 'be' (ID: 1464)
  Prédit: 'be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'be' → logprob: -0.05809157341718674
    2. 'bial' → logprob: -3.558091640472412
    3. 'bi' → logprob: -4.433091640472412
    4. 'organ' → logprob: -4.558091640472412
    5. 'biology' → logprob: -6.308091640472412
    6. 'b' → logprob: -7.308091640472412
    7. 'bes' → logprob: -7.683091640472412
    8. 'bio' → logprob: -7.933091640472412
    9. 'controller' → logprob: -8.183091163635254
    10. 'bie' → logprob: -9.058091163635254

Token 1496: 'Factory' (ID: 4870)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03788069263100624
    2. 'Manager' → logprob: -4.662880897521973
    3. '(' → logprob: -5.287880897521973
    4. 'Aggregator' → logprob: -5.912880897521973
    5. '<|end|>' → logprob: -6.162880897521973
    6. 'Group' → logprob: -6.287880897521973
    7. 'Collector' → logprob: -6.412880897521973
    8. ':
' → logprob: -6.537880897521973
    9. 'Sampler' → logprob: -6.662880897521973
    10. 'Optimizer' → logprob: -7.037880897521973

Token 1497: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004101077560335398
    2. ':
' → logprob: -5.504101276397705
    3. '(M' → logprob: -11.254100799560547
    4. '<|end|>' → logprob: -12.254100799560547
    5. ':

' → logprob: -12.879100799560547
    6. ':def' → logprob: -14.004100799560547
    7. '(' → logprob: -14.379100799560547
    8. '```' → logprob: -15.129100799560547
    9. ' :' → logprob: -16.254100799560547
    10. '(object' → logprob: -16.504100799560547

Token 1498: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011287610046565533
    2. 'def' → logprob: -5.261287689208984
    3. ' def' → logprob: -5.386287689208984
    4. '<|end|>' → logprob: -7.011287689208984
    5. '```' → logprob: -8.636287689208984
    6. '    
' → logprob: -8.886287689208984
    7. '	def' → logprob: -9.886287689208984
    8. ':
' → logprob: -10.136287689208984
    9. ':' → logprob: -10.761287689208984
    10. ' ' → logprob: -11.011287689208984

Token 1499: ' @' (ID: 759)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.27377039194107056
    2. '   ' → logprob: -1.5237703323364258
    3. ' def' → logprob: -4.023770332336426
    4. 'class' → logprob: -5.773770332336426
    5. 'staticmethod' → logprob: -7.898770332336426
    6. 'classmethod' → logprob: -8.773770332336426
    7. '```' → logprob: -10.523770332336426
    8. '@' (adapté à ' @') → logprob: -10.648770332336426
    9. '	def' → logprob: -11.148770332336426
    10. ' ' → logprob: -12.148770332336426

Token 1500: 'staticmethod' (ID: 53164)
  Prédit: 'staticmethod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'staticmethod' → logprob: -0.0009218233171850443
    2. 'classmethod' → logprob: -7.000921726226807
    3. 'dat' → logprob: -11.500922203063965
    4. 'static' → logprob: -15.750922203063965
    5. 'property' → logprob: -17.00092124938965
    6. ' static' → logprob: -23.50092124938965
    7. 'st' → logprob: -23.75092124938965
    8. 'cache' → logprob: -24.75092124938965
    9. '@' → logprob: -25.37592124938965
    10. 'typing' → logprob: -25.62592124938965

Token 1501: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04000036418437958
    2. '   ' → logprob: -3.2900004386901855
    3. '
' → logprob: -6.5400004386901855
    4. ' def' → logprob: -7.6650004386901855
    5. '	def' → logprob: -11.039999961853027
    6. '    
' → logprob: -11.414999961853027
    7. '  ' → logprob: -12.539999961853027
    8. '(def' → logprob: -12.539999961853027
    9. '```' → logprob: -12.914999961853027
    10. '('' → logprob: -13.789999961853027

Token 1502: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0010925926035270095
    2. '   ' → logprob: -7.001092433929443
    3. ' def' → logprob: -8.751092910766602
    4. '
' → logprob: -11.376092910766602
    5. '	def' → logprob: -11.876092910766602
    6. '    
' → logprob: -13.376092910766602
    7. '```' → logprob: -13.376092910766602
    8. '  ' → logprob: -14.376092910766602
    9. ' ' → logprob: -15.126092910766602
    10. 'classmethod' → logprob: -15.751092910766602

Token 1503: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -2.2200749754119897e-06
    2. ' def' → logprob: -13.125001907348633
    3. '   ' → logprob: -16.250001907348633
    4. 'classmethod' → logprob: -19.125001907348633
    5. 'from' → logprob: -19.375001907348633
    6. '
' → logprob: -19.750001907348633
    7. 'class' → logprob: -20.375001907348633
    8. '	def' → logprob: -20.875001907348633
    9. 'staticmethod' → logprob: -21.125001907348633
    10. 'de' → logprob: -21.750001907348633

Token 1504: ' from' (ID: 591)
  Prédit: 'create'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'create' → logprob: -0.007491389289498329
    2. ' create' → logprob: -5.632491588592529
    3. 'from' → logprob: -6.132491588592529
    4. 'generate' → logprob: -6.632491588592529
    5. 'build' → logprob: -8.882491111755371
    6. 'def' → logprob: -9.257491111755371
    7. 'get' → logprob: -9.882491111755371
    8. 'make' → logprob: -10.132491111755371
    9. 'produce' → logprob: -10.132491111755371
    10. ' from' → logprob: -12.132491111755371

Token 1505: '_input' (ID: 12507)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.00917616207152605
    2. '_micro' → logprob: -5.634176254272461
    3. '_array' → logprob: -6.634176254272461
    4. '_name' → logprob: -7.134176254272461
    5. '_lists' → logprob: -7.384176254272461
    6. '_iter' → logprob: -7.634176254272461
    7. '_collection' → logprob: -8.384176254272461
    8. '_' → logprob: -8.384176254272461
    9. '_json' → logprob: -8.884176254272461
    10. '_tokens' → logprob: -8.884176254272461

Token 1506: '()' (ID: 416)
  Prédit: '_string'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_string' → logprob: -0.2466210424900055
    2. '_list' → logprob: -2.9966211318969727
    3. '(data' → logprob: -3.3716211318969727
    4. '(lines' → logprob: -3.3716211318969727
    5. '(' → logprob: -3.7466211318969727
    6. 'string' → logprob: -3.8716211318969727
    7. '_line' → logprob: -4.246621131896973
    8. '(list' → logprob: -4.496621131896973
    9. '(cls' → logprob: -4.996621131896973
    10. '_lines' → logprob: -5.621621131896973

Token 1507: ' ->' (ID: 2747)
  Prédit: '(lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(lines' → logprob: -0.445102721452713
    2. '(' → logprob: -1.8201026916503906
    3. '(cls' → logprob: -2.5701026916503906
    4. '[' → logprob: -3.0701026916503906
    5. '(list' → logprob: -4.070102691650391
    6. '(line' → logprob: -4.695102691650391
    7. ':' → logprob: -4.945102691650391
    8. 'def' → logprob: -5.320102691650391
    9. '(lst' → logprob: -5.320102691650391
    10. '(tokens' → logprob: -5.695102691650391

Token 1508: ' Pet' (ID: 12824)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.004289946053177118
    2. ''' → logprob: -6.5042901039123535
    3. ' list' → logprob: -6.6292901039123535
    4. '"' → logprob: -7.2542901039123535
    5. 'Micro' → logprob: -8.379289627075195
    6. '[]' → logprob: -8.754289627075195
    7. '[list' → logprob: -8.879289627075195
    8. 'tuple' → logprob: -9.879289627075195
    9. 'List' → logprob: -10.504289627075195
    10. '[' → logprob: -10.629289627075195

Token 1509: 'ri' (ID: 872)
  Prédit: 'ri'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ri' → logprob: -3.3213025744771585e-05
    2. 'r' → logprob: -10.750033378601074
    3. 'tri' → logprob: -12.250033378601074
    4. '```' → logprob: -13.500033378601074
    5. 'i' → logprob: -13.750033378601074
    6. 'Tri' → logprob: -14.375033378601074
    7. 'rid' → logprob: -14.625033378601074
    8. 'rie' → logprob: -14.625033378601074
    9. 'Pet' → logprob: -14.875033378601074
    10. 'ti' → logprob: -15.250033378601074

Token 1510: 'Dish' (ID: 101209)
  Prédit: 'Dish'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Dish' → logprob: -1.9361264946837764e-07
    2. 'dish' → logprob: -17.25
    3. 'Dis' → logprob: -18.0
    4. '
' → logprob: -18.875
    5. '```' → logprob: -18.875
    6. ' dish' → logprob: -19.0
    7. ' Dish' → logprob: -19.625
    8. 'Disk' → logprob: -20.0
    9. '   ' → logprob: -20.125
    10. 'Dock' → logprob: -20.5

Token 1511: ':
' (ID: 734)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.6806461215019226
    2. '():
' → logprob: -0.8056461215019226
    3. ':' → logprob: -3.5556461811065674
    4. ':
' → logprob: -5.180645942687988
    5. '   ' → logprob: -5.305645942687988
    6. '(' → logprob: -5.680645942687988
    7. '       ' → logprob: -6.680645942687988
    8. '()' → logprob: -6.930645942687988
    9. '(lines' → logprob: -7.180645942687988
    10. '[' → logprob: -7.930645942687988

Token 1512: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004165064077824354
    2. '```' → logprob: -6.629165172576904
    3. 'import' → logprob: -7.004165172576904
    4. 'tokens' → logprob: -7.379165172576904
    5. 'input' → logprob: -7.504165172576904
    6. ' lines' → logprob: -8.754164695739746
    7. 'lines' → logprob: -9.129164695739746
    8. 'line' → logprob: -9.379164695739746
    9. ' line' → logprob: -9.629164695739746
    10. '...' → logprob: -9.754164695739746

Token 1513: ' import' (ID: 1588)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.013283640146255493
    2. 'import' (adapté à ' import') → logprob: -4.513283729553223
    3. ' n' → logprob: -6.263283729553223
    4. 'num' → logprob: -8.888283729553223
    5. 'N' → logprob: -9.013283729553223
    6. '       ' → logprob: -9.888283729553223
    7. ' import' → logprob: -12.138283729553223
    8. '```' → logprob: -12.513283729553223
    9. 'size' → logprob: -13.013283729553223
    10. '   ' → logprob: -13.138283729553223

Token 1514: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -3.5597102396423e-05
    2. ' sys' → logprob: -10.250035285949707
    3. '=sys' → logprob: -16.500036239624023
    4. '(sys' → logprob: -19.250036239624023
    5. '_sys' → logprob: -19.250036239624023
    6. 'io' → logprob: -19.375036239624023
    7. 'heap' → logprob: -20.625036239624023
    8. '	sys' → logprob: -20.750036239624023
    9. 'json' → logprob: -21.125036239624023
    10. 'bis' → logprob: -21.250036239624023

Token 1515: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2510988712310791
    2. 'input' → logprob: -2.001098871231079
    3. 'data' → logprob: -3.376098871231079
    4. '
' → logprob: -3.626098871231079
    5. '        
' → logprob: -4.6260986328125
    6. '```' → logprob: -4.8760986328125
    7. 'line' → logprob: -5.6260986328125
    8. ' lines' → logprob: -6.6260986328125
    9. 'lines' → logprob: -6.7510986328125
    10. '.readline' → logprob: -7.6260986328125

Token 1516: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002901282161474228
    2. 'input' → logprob: -6.252901077270508
    3. '        
' → logprob: -7.252901077270508
    4. 'data' → logprob: -9.252901077270508
    5. '
' → logprob: -10.002901077270508
    6. 'line' → logprob: -10.752901077270508
    7. 'lines' → logprob: -11.002901077270508
    8. ' lines' → logprob: -11.002901077270508
    9. 'import' → logprob: -11.377901077270508
    10. 'n' → logprob: -11.502901077270508

Token 1517: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' (adapté à ' input') → logprob: -0.09573673456907272
    2. 'data' → logprob: -2.5957367420196533
    3. 'n' → logprob: -5.220736503601074
    4. 'lines' → logprob: -5.470736503601074
    5. '       ' → logprob: -5.845736503601074
    6. ' input' → logprob: -5.970736503601074
    7. ' lines' → logprob: -6.845736503601074
    8. 'line' → logprob: -8.095736503601074
    9. ' data' → logprob: -9.845736503601074
    10. ' readline' → logprob: -9.970736503601074

Token 1518: ' =' (ID: 314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.08554842323064804
    2. '_data' → logprob: -3.3355484008789062
    3. '_line' → logprob: -3.7105484008789062
    4. '=' → logprob: -4.585548400878906
    5. ' =' → logprob: -5.460548400878906
    6. '_' → logprob: -5.835548400878906
    7. 'data' → logprob: -6.710548400878906
    8. '_lines' → logprob: -7.085548400878906
    9. '().' → logprob: -7.210548400878906
    10. '.readline' → logprob: -7.335548400878906

Token 1519: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.00010199354437645525
    2. ' sys' → logprob: -9.250102043151855
    3. '=sys' → logprob: -12.500102043151855
    4. 'input' → logprob: -13.250102043151855
    5. '	sys' → logprob: -15.375102043151855
    6. '(sys' → logprob: -16.37510108947754
    7. 'lambda' → logprob: -16.62510108947754
    8. '
' → logprob: -16.87510108947754
    9. '__' → logprob: -17.87510108947754
    10. '_sys' → logprob: -18.62510108947754

Token 1520: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.00031091354321688414
    2. '.readline' → logprob: -9.125310897827148
    3. '.stdout' → logprob: -9.625310897827148
    4. '.input' → logprob: -10.000310897827148
    5. 'import' → logprob: -10.750310897827148
    6. 'stdin' → logprob: -10.875310897827148
    7. '.' → logprob: -11.500310897827148
    8. '._' → logprob: -11.875310897827148
    9. ' .' → logprob: -12.250310897827148
    10. '.__' → logprob: -12.375310897827148

Token 1521: '.readline' (ID: 74673)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.16057221591472626
    2. '.readline' → logprob: -1.9105721712112427
    3. ' readline' → logprob: -8.160572052001953
    4. 'reader' → logprob: -10.285572052001953
    5. 'buffer' → logprob: -11.785572052001953
    6. '_read' → logprob: -12.160572052001953
    7. '.read' → logprob: -12.285572052001953
    8. 'input' → logprob: -12.535572052001953
    9. 'readonly' → logprob: -12.535572052001953
    10. 'stdin' → logprob: -13.160572052001953

Token 1522: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0019906130619347095
    2. '
' → logprob: -7.251990795135498
    3. '        
' → logprob: -7.501990795135498
    4. '()
' → logprob: -8.25199031829834
    5. '()' → logprob: -8.62699031829834
    6. 'n' → logprob: -9.00199031829834
    7. 'return' → logprob: -10.12699031829834
    8. 'line' → logprob: -10.62699031829834
    9. '    
' → logprob: -11.37699031829834
    10. '().' → logprob: -11.37699031829834

Token 1523: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.029749451205134392
    2. '()' → logprob: -4.154749393463135
    3. '()
' → logprob: -4.529749393463135
    4. 'return' → logprob: -6.654749393463135
    5. '        
' → logprob: -7.529749393463135
    6. '[]' → logprob: -9.154749870300293
    7. 'def' → logprob: -9.279749870300293
    8. 'data' → logprob: -9.279749870300293
    9. '[]
' → logprob: -9.404749870300293
    10. '().' → logprob: -9.404749870300293

Token 1524: ' N' (ID: 478)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0047918036580085754
    2. '       ' → logprob: -5.879791736602783
    3. 'N' (adapté à ' N') → logprob: -7.254791736602783
    4. ' n' → logprob: -7.379791736602783
    5. 't' → logprob: -8.004792213439941
    6. 'num' → logprob: -8.379792213439941
    7. '```' → logprob: -10.129792213439941
    8. '_n' → logprob: -11.504792213439941
    9. 'Q' → logprob: -11.879792213439941
    10. 'q' → logprob: -12.129792213439941

Token 1525: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4144878089427948
    2. '=' → logprob: -1.4144878387451172
    3. ' =' → logprob: -2.539487838745117
    4. '()' → logprob: -4.164487838745117
    5. '(),' → logprob: -7.789487838745117
    6. '(' → logprob: -8.164487838745117
    7. ',
' → logprob: -8.664487838745117
    8. '   ' → logprob: -8.664487838745117
    9. '       ' → logprob: -8.664487838745117
    10. ' ,' → logprob: -8.789487838745117

Token 1526: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00020354038861114532
    2. ' int' → logprob: -8.500203132629395
    3. '[int' → logprob: -18.75020408630371
    4. '(int' → logprob: -19.00020408630371
    5. '=int' → logprob: -20.12520408630371
    6. '	int' → logprob: -21.00020408630371
    7. '<int' → logprob: -21.50020408630371
    8. '   ' → logprob: -22.00020408630371
    9. '
' → logprob: -22.25020408630371
    10. ' ' → logprob: -23.12520408630371

Token 1527: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.00139047356788069
    2. '()' → logprob: -7.25139045715332
    3. 'input' → logprob: -7.50139045715332
    4. '(' → logprob: -9.00139045715332
    5. '(sys' → logprob: -12.75139045715332
    6. '(
' → logprob: -14.12639045715332
    7. '()
' → logprob: -14.50139045715332
    8. ' input' → logprob: -16.00139045715332
    9. '=input' → logprob: -16.12639045715332
    10. '().' → logprob: -16.25139045715332

Token 1528: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.04115627706050873
    2. '().' → logprob: -3.29115629196167
    3. '()' → logprob: -5.79115629196167
    4. '())
' → logprob: -10.041155815124512
    5. ' ())' → logprob: -12.041155815124512
    6. ')' → logprob: -13.291155815124512
    7. '(' → logprob: -13.916155815124512
    8. '();)' → logprob: -14.041155815124512
    9. '()
' → logprob: -14.166155815124512
    10. '()[' → logprob: -14.166155815124512

Token 1529: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015002788975834846
    2. 'micro' → logprob: -4.390002727508545
    3. 'm' → logprob: -7.515002727508545
    4. '	' → logprob: -7.640002727508545
    5. '<|end|>' → logprob: -7.890002727508545
    6. ' microbes' → logprob: -8.265003204345703
    7. ' microorganisms' → logprob: -8.515003204345703
    8. '        
' → logprob: -9.390003204345703
    9. ' micro' → logprob: -10.015003204345703
    10. '	m' → logprob: -10.015003204345703

Token 1530: ' microbes' (ID: 156044)
  Prédit: 'micro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'micro' → logprob: -0.002819851040840149
    2. '       ' → logprob: -6.252820014953613
    3. 'mic' → logprob: -7.627820014953613
    4. 'm' → logprob: -8.252820014953613
    5. '_micro' → logprob: -9.752820014953613
    6. ' microbes' → logprob: -10.127820014953613
    7. '```' → logprob: -11.002820014953613
    8. '.micro' → logprob: -11.627820014953613
    9. ' micro' → logprob: -11.752820014953613
    10. 'mites' → logprob: -13.002820014953613

Token 1531: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04859520494937897
    2. ' =' → logprob: -3.0485951900482178
    3. '=[]' → logprob: -11.798595428466797
    4. '=[]
' → logprob: -15.298595428466797
    5. '[]' → logprob: -16.798595428466797
    6. '   ' → logprob: -17.548595428466797
    7. 's' → logprob: -18.923595428466797
    8. '=
' → logprob: -19.548595428466797
    9. ':' → logprob: -19.673595428466797
    10. '[:]' → logprob: -19.798595428466797

Token 1532: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.15672947466373444
    2. '[]
' → logprob: -2.4067294597625732
    3. '[' → logprob: -2.9067294597625732
    4. ' []' → logprob: -8.656729698181152
    5. '[
' → logprob: -9.656729698181152
    6. '[n' → logprob: -11.406729698181152
    7. '[int' → logprob: -11.531729698181152
    8. '[p' → logprob: -11.781729698181152
    9. '[m' → logprob: -11.906729698181152
    10. ' [' → logprob: -11.906729698181152

Token 1533: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009047918138094246
    2. 'for' → logprob: -7.250904560089111
    3. ' for' → logprob: -8.75090503692627
    4. '	for' → logprob: -11.00090503692627
    5. '	' → logprob: -11.87590503692627
    6. '	   ' → logprob: -12.37590503692627
    7. '   ' → logprob: -12.50090503692627
    8. '<|end|>' → logprob: -12.87590503692627
    9. '```' → logprob: -13.87590503692627
    10. '	       ' → logprob: -14.62590503692627

Token 1534: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0007118358626030385
    2. '       ' → logprob: -7.500711917877197
    3. ' for' → logprob: -8.750711441040039
    4. '	for' → logprob: -14.500711441040039
    5. '
' → logprob: -17.25071144104004
    6. '   ' → logprob: -18.37571144104004
    7. '        
' → logprob: -19.12571144104004
    8. '```' → logprob: -19.37571144104004
    9. '	' → logprob: -20.12571144104004
    10. 'while' → logprob: -20.62571144104004

Token 1535: ' i' (ID: 575)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -2.935296834039036e-06
    2. ' _' → logprob: -13.25000286102295
    3. '_i' → logprob: -14.25000286102295
    4. '_
' → logprob: -14.50000286102295
    5. '_range' → logprob: -19.000003814697266
    6. '
' → logprob: -19.250003814697266
    7. '_=' → logprob: -19.250003814697266
    8. 'i' → logprob: -20.125003814697266
    9. '_
' → logprob: -20.500003814697266
    10. '_in' → logprob: -20.500003814697266

Token 1536: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.022355351597070694
    2. 'in' → logprob: -3.897355318069458
    3. '_' → logprob: -6.397355556488037
    4. 'n' → logprob: -9.022355079650879
    5. ' _' → logprob: -11.272355079650879
    6. ' ' → logprob: -12.522355079650879
    7. '	in' → logprob: -12.897355079650879
    8. '_in' → logprob: -13.272355079650879
    9. 's' → logprob: -14.022355079650879
    10. '    ' → logprob: -14.147355079650879

Token 1537: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0004306692280806601
    2. ' range' → logprob: -7.750430583953857
    3. '
' → logprob: -18.125431060791016
    4. '_' → logprob: -18.375431060791016
    5. '	range' → logprob: -18.625431060791016
    6. 'in' → logprob: -18.750431060791016
    7. '   ' → logprob: -19.625431060791016
    8. ' ' → logprob: -20.000431060791016
    9. '```' → logprob: -20.125431060791016
    10. '_range' → logprob: -20.250431060791016

Token 1538: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.39838993549346924
    2. 'N' → logprob: -1.1483899354934692
    3. ' N' → logprob: -4.64838981628418
    4. '(' → logprob: -6.89838981628418
    5. ' range' → logprob: -8.14838981628418
    6. ' (' → logprob: -8.52338981628418
    7. 'range' → logprob: -8.64838981628418
    8. '   ' → logprob: -9.27338981628418
    9. '(n' → logprob: -10.64838981628418
    10. '
' → logprob: -11.02338981628418

Token 1539: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.021479839459061623
    2. '):' → logprob: -3.896479845046997
    3. '       ' → logprob: -8.021479606628418
    4. ',' → logprob: -8.646479606628418
    5. ':
' → logprob: -8.646479606628418
    6. ':' → logprob: -8.896479606628418
    7. '   ' → logprob: -9.646479606628418
    8. '):
' → logprob: -10.771479606628418
    9. ')' → logprob: -11.646479606628418
    10. '():
' → logprob: -11.646479606628418

Token 1540: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0016409041127189994
    2. ' line' → logprob: -6.501640796661377
    3. '            
' → logprob: -10.376641273498535
    4. '	       ' → logprob: -10.626641273498535
    5. 'line' → logprob: -11.001641273498535
    6. '```' → logprob: -11.376641273498535
    7. ' ' → logprob: -11.751641273498535
    8. ' readline' → logprob: -12.001641273498535
    9. ' code' → logprob: -12.376641273498535
    10. '          ' → logprob: -12.376641273498535

Token 1541: ' a' (ID: 261)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.23244886100292206
    2. ' parts' → logprob: -2.9824488162994385
    3. 'line' → logprob: -2.9824488162994385
    4. ' r' → logprob: -3.4824488162994385
    5. ' release' → logprob: -3.4824488162994385
    6. 'release' → logprob: -4.357449054718018
    7. '           ' → logprob: -5.107449054718018
    8. 'r' → logprob: -5.107449054718018
    9. ' data' → logprob: -5.482449054718018
    10. 'a' (adapté à ' a') → logprob: -5.982449054718018

Token 1542: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2267400324344635
    2. ',b' → logprob: -1.6017400026321411
    3. ' ,' → logprob: -7.226739883422852
    4. ',c' → logprob: -8.851739883422852
    5. ',l' → logprob: -9.726739883422852
    6. ',s' → logprob: -9.976739883422852
    7. ',p' → logprob: -10.226739883422852
    8. 'b' → logprob: -10.226739883422852
    9. ',m' → logprob: -10.601739883422852
    10. ',v' → logprob: -10.601739883422852

Token 1543: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.02324594371020794
    2. ' b' → logprob: -3.7732460498809814
    3. 's' → logprob: -15.898245811462402
    4. 'c' → logprob: -16.02324676513672
    5. 'd' → logprob: -16.27324676513672
    6. 'r' → logprob: -16.77324676513672
    7. 'release' → logprob: -17.02324676513672
    8. '            
' → logprob: -17.77324676513672
    9. 't' → logprob: -18.02324676513672
    10. '           ' → logprob: -18.39824676513672

Token 1544: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16022635996341705
    2. ' =' → logprob: -1.9102263450622559
    3. ',' → logprob: -13.410226821899414
    4. '=input' → logprob: -14.785226821899414
    5. '=line' → logprob: -16.285226821899414
    6. '=int' → logprob: -16.785226821899414
    7. '=
' → logprob: -17.035226821899414
    8. ')' → logprob: -17.160226821899414
    9. ' ' → logprob: -17.160226821899414
    10. ')=' → logprob: -18.160226821899414

Token 1545: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.474078506231308
    2. ' map' → logprob: -0.9740785360336304
    3. 'list' → logprob: -13.974078178405762
    4. 'input' → logprob: -15.349078178405762
    5. '	map' → logprob: -15.849078178405762
    6. ' list' → logprob: -16.349079132080078
    7. 'tuple' → logprob: -16.724079132080078
    8. '(map' → logprob: -17.724079132080078
    9. '
' → logprob: -17.849079132080078
    10. '[' → logprob: -17.849079132080078

Token 1546: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0007112398743629456
    2. 'int' → logprob: -7.250711441040039
    3. '(lambda' → logprob: -14.875711441040039
    4. '(' → logprob: -15.250711441040039
    5. '<int' → logprob: -15.875711441040039
    6. '(input' → logprob: -16.00071144104004
    7. '[int' → logprob: -16.12571144104004
    8. '(
' → logprob: -16.12571144104004
    9. ' int' → logprob: -17.00071144104004
    10. 'input' → logprob: -17.25071144104004

Token 1547: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.05133970081806183
    2. ',input' → logprob: -3.301339626312256
    3. ',' → logprob: -4.926339626312256
    4. 'input' → logprob: -5.176339626312256
    5. '(' → logprob: -8.801340103149414
    6. ')' → logprob: -9.676340103149414
    7. '=input' → logprob: -10.801340103149414
    8. '   ' → logprob: -10.926340103149414
    9. '           ' → logprob: -11.301340103149414
    10. '(
' → logprob: -11.426340103149414

Token 1548: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.00020354038861114532
    2. ' input' → logprob: -8.500203132629395
    3. '           ' → logprob: -17.37520408630371
    4. '(input' → logprob: -17.87520408630371
    5. '_input' → logprob: -19.87520408630371
    6. '=input' → logprob: -20.75020408630371
    7. ',input' → logprob: -21.25020408630371
    8. '<input' → logprob: -21.25020408630371
    9. '[input' → logprob: -21.37520408630371
    10. '	input' → logprob: -21.50020408630371

Token 1549: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -5.347765181795694e-05
    2. '()' → logprob: -9.875053405761719
    3. '()
' → logprob: -13.250053405761719
    4. '(' → logprob: -16.50005340576172
    5. ' ().' → logprob: -17.62505340576172
    6. '().
' → logprob: -18.12505340576172
    7. '()[' → logprob: -19.37505340576172
    8. '.readline' → logprob: -19.50005340576172
    9. '.split' → logprob: -19.75005340576172
    10. ')' → logprob: -20.00005340576172

Token 1550: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.01855549030005932
    2. 'strip' → logprob: -4.018555641174316
    3. 'read' → logprob: -8.393555641174316
    4. 'rstrip' → logprob: -8.893555641174316
    5. '().' → logprob: -10.518555641174316
    6. ')' → logprob: -11.893555641174316
    7. '.readline' → logprob: -12.768555641174316
    8. ' split' → logprob: -13.143555641174316
    9. '(split' → logprob: -14.393555641174316
    10. ').' → logprob: -14.393555641174316

Token 1551: '())
' (ID: 4574)
  Prédit: '())
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())
' → logprob: -0.972857654094696
    2. ')' → logprob: -1.2228577136993408
    3. ')
' → logprob: -1.5978577136993408
    4. '())' → logprob: -2.097857713699341
    5. '()' → logprob: -6.472857475280762
    6. '           ' → logprob: -7.222857475280762
    7. '       ' → logprob: -9.472857475280762
    8. ')`
' → logprob: -9.722857475280762
    9. '())
' → logprob: -10.222857475280762
    10. '()
' → logprob: -10.472857475280762

Token 1552: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0030868053436279297
    2. '<|end|>' → logprob: -6.253087043762207
    3. '               ' → logprob: -7.503087043762207
    4. ' microorganisms' → logprob: -8.753087043762207
    5. ' microbes' → logprob: -9.378087043762207
    6. '            
' → logprob: -9.503087043762207
    7. '       ' → logprob: -10.128087043762207
    8. 'micro' → logprob: -10.128087043762207
    9. ',' → logprob: -10.503087043762207
    10. '```' → logprob: -10.628087043762207

Token 1553: ' microbes' (ID: 156044)
  Prédit: 'micro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'micro' → logprob: -0.48760154843330383
    2. '           ' → logprob: -1.3626015186309814
    3. ' microbes' → logprob: -2.1126015186309814
    4. ' micro' → logprob: -5.7376017570495605
    5. 'm' → logprob: -5.7376017570495605
    6. ' microorganisms' → logprob: -6.6126017570495605
    7. '       ' → logprob: -7.7376017570495605
    8. 'mic' → logprob: -8.362601280212402
    9. '.micro' → logprob: -8.987601280212402
    10. '_micro' → logprob: -9.112601280212402

Token 1554: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0006724014529027045
    2. '.' → logprob: -7.375672340393066
    3. 'append' → logprob: -10.750672340393066
    4. ' .' → logprob: -11.500672340393066
    5. '.Append' → logprob: -12.500672340393066
    6. '.app' → logprob: -12.875672340393066
    7. '().' → logprob: -13.375672340393066
    8. '.py' → logprob: -13.375672340393066
    9. '​.' → logprob: -14.000672340393066
    10. 'Append' → logprob: -14.875672340393066

Token 1555: '(M' (ID: 6103)
  Prédit: '(M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.01819548010826111
    2. 'Micro' → logprob: -4.018195629119873
    3. ' Micro' → logprob: -10.018195152282715
    4. 'M' → logprob: -14.268195152282715
    5. '(' → logprob: -15.893195152282715
    6. '	M' → logprob: -16.39319610595703
    7. 'Mic' → logprob: -16.89319610595703
    8. '(
' → logprob: -17.14319610595703
    9. 'MIC' → logprob: -17.51819610595703
    10. 'micro' → logprob: -17.89319610595703

Token 1556: 'icro' (ID: 4031)
  Prédit: 'icro'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icro' → logprob: -4.008129963040119e-06
    2. 'Micro' → logprob: -13.000003814697266
    3. 'icrobial' → logprob: -13.500003814697266
    4. 'ic' → logprob: -15.375003814697266
    5. 'icrosoft' → logprob: -18.625003814697266
    6. 'i' → logprob: -19.000003814697266
    7. ' Micro' → logprob: -19.500003814697266
    8. 'micro' → logprob: -19.875003814697266
    9. '[' → logprob: -20.000003814697266
    10. '_micro' → logprob: -20.125003814697266

Token 1557: 'be' (ID: 1464)
  Prédit: 'be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'be' → logprob: -6.968934758333489e-05
    2. 'icro' → logprob: -10.375069618225098
    3. 'b' → logprob: -10.500069618225098
    4. 'obe' → logprob: -12.750069618225098
    5. 'o' → logprob: -13.750069618225098
    6. 'e' → logprob: -13.750069618225098
    7. 'ube' → logprob: -14.125069618225098
    8. '(be' → logprob: -14.125069618225098
    9. 'Micro' → logprob: -14.500069618225098
    10. 'code' → logprob: -14.625069618225098

Token 1558: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -5.5027299822540954e-05
    2. 'i' → logprob: -10.000055313110352
    3. '(' → logprob: -12.000055313110352
    4. '           ' → logprob: -13.750055313110352
    5. '(
' → logprob: -13.750055313110352
    6. '	i' → logprob: -14.625055313110352
    7. ')i' → logprob: -15.375055313110352
    8. ' i' → logprob: -15.625055313110352
    9. '=i' → logprob: -16.12505531311035
    10. '{i' → logprob: -16.37505531311035

Token 1559: ' +' (ID: 659)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001086874515749514
    2. ',a' → logprob: -6.876086711883545
    3. 'a' → logprob: -10.751087188720703
    4. ',i' → logprob: -11.126087188720703
    5. ' ,' → logprob: -11.626087188720703
    6. ',
' → logprob: -12.501087188720703
    7. '           ' → logprob: -13.376087188720703
    8. '       ' → logprob: -13.376087188720703
    9. '   ' → logprob: -14.001087188720703
    10. ',b' → logprob: -15.626087188720703

Token 1560: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.650518920039758e-06
    2. ' ' → logprob: -12.625003814697266
    3. '   ' → logprob: -15.500003814697266
    4. '0' → logprob: -17.000003814697266
    5. '=' → logprob: -18.250003814697266
    6. '  ' → logprob: -19.625003814697266
    7. '+' → logprob: -20.000003814697266
    8. '    
' → logprob: -20.125003814697266
    9. '<|end|>' → logprob: -20.250003814697266
    10. '
' → logprob: -20.250003814697266

Token 1561: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. '   ' → logprob: -16.75
    4. '0' → logprob: -17.0
    5. '
' → logprob: -18.375
    6. '2' → logprob: -19.5
    7. '=' → logprob: -19.625
    8. '```' → logprob: -20.25
    9. '       ' → logprob: -21.125
    10. '  ' → logprob: -21.5

Token 1562: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011876109056174755
    2. ',b' → logprob: -6.876187801361084
    3. ',a' → logprob: -8.876187324523926
    4. ' ,' → logprob: -11.751187324523926
    5. '           ' → logprob: -12.376187324523926
    6. ',
' → logprob: -13.626187324523926
    7. 'a' → logprob: -14.501187324523926
    8. '       ' → logprob: -15.376187324523926
    9. 'b' → logprob: -15.501187324523926
    10. ',p' → logprob: -15.626187324523926

Token 1563: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0005632805987261236
    2. 'b' → logprob: -7.625563144683838
    3. ' a' → logprob: -9.500563621520996
    4. ' b' → logprob: -15.500563621520996
    5. '           ' → logprob: -16.12556266784668
    6. '	a' → logprob: -16.50056266784668
    7. '0' → logprob: -17.00056266784668
    8. '   ' → logprob: -17.12556266784668
    9. ')a' → logprob: -18.50056266784668
    10. '    ' → logprob: -18.75056266784668

Token 1564: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008046272210776806
    2. ',b' → logprob: -4.8830461502075195
    3. ' ,' → logprob: -7.8830461502075195
    4. ',
' → logprob: -10.13304615020752
    5. '   ' → logprob: -12.25804615020752
    6. '           ' → logprob: -12.50804615020752
    7. '       ' → logprob: -12.50804615020752
    8. '),' → logprob: -13.13304615020752
    9. ',a' → logprob: -13.50804615020752
    10. ',p' → logprob: -13.88304615020752

Token 1565: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -3.547789674485102e-05
    2. ' b' → logprob: -10.250035285949707
    3. ')b' → logprob: -17.000036239624023
    4. '           ' → logprob: -17.375036239624023
    5. '               ' → logprob: -18.000036239624023
    6. '                               ' → logprob: -18.125036239624023
    7. '       ' → logprob: -18.875036239624023
    8. '                                   ' → logprob: -19.000036239624023
    9. '                   ' → logprob: -19.375036239624023
    10. '	b' → logprob: -19.625036239624023

Token 1566: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.03873508423566818
    2. '))
' → logprob: -3.2887351512908936
    3. '           ' → logprob: -7.2887349128723145
    4. '               ' → logprob: -12.538735389709473
    5. '       ' → logprob: -13.163735389709473
    6. ')' → logprob: -13.538735389709473
    7. '))

' → logprob: -13.913735389709473
    8. '))
' → logprob: -14.163735389709473
    9. ' ))' → logprob: -14.413735389709473
    10. ')))' → logprob: -14.413735389709473

Token 1567: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003501242317724973
    2. 'return' → logprob: -8.000349998474121
    3. '<|end|>' → logprob: -12.000349998474121
    4. '
' → logprob: -13.000349998474121
    5. ' return' → logprob: -13.250349998474121
    6. '```' → logprob: -13.375349998474121
    7. '   ' → logprob: -14.125349998474121
    8. '           ' → logprob: -14.250349998474121
    9. '	' → logprob: -14.750349998474121
    10. '        
' → logprob: -14.750349998474121

Token 1568: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.5779612064361572
    2. '       ' → logprob: -0.8279612064361572
    3. ' return' → logprob: -6.327960968017578
    4. '<|end|>' → logprob: -8.952960968017578
    5. '
' → logprob: -9.952960968017578
    6. '	return' → logprob: -10.827960968017578
    7. '```' → logprob: -11.702960968017578
    8. '        
' → logprob: -11.702960968017578
    9. '   ' → logprob: -11.952960968017578
    10. ')return' → logprob: -12.202960968017578

Token 1569: ' Pet' (ID: 12824)
  Prédit: 'Pet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Pet' → logprob: -0.029750484973192215
    2. ' Pet' → logprob: -3.5297505855560303
    3. '   ' → logprob: -17.77975082397461
    4. 'Pets' → logprob: -18.65475082397461
    5. 'Pat' → logprob: -18.90475082397461
    6. 'pet' → logprob: -20.15475082397461
    7. 'Micro' → logprob: -20.40475082397461
    8. '_P' → logprob: -21.27975082397461
    9. '_pet' → logprob: -21.27975082397461
    10. 'Pot' → logprob: -21.65475082397461

Token 1570: 'ri' (ID: 872)
  Prédit: 'ri'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ri' → logprob: -4.320199877838604e-07
    2. 'r' → logprob: -15.125
    3. 'i' → logprob: -16.75
    4. 'ри' → logprob: -18.375
    5. 'ry' → logprob: -18.75
    6. 'Ri' → logprob: -18.75
    7. 'rid' → logprob: -19.625
    8. 'ti' → logprob: -20.0
    9. ' ri' → logprob: -20.25
    10. 'tri' → logprob: -20.375

Token 1571: 'Dish' (ID: 101209)
  Prédit: 'Dish'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Dish' → logprob: 0.0
    2. 'dish' → logprob: -16.75
    3. ' dish' → logprob: -19.25
    4. ' Dish' → logprob: -21.0
    5. 'Dis' → logprob: -21.125
    6. 'Disk' → logprob: -21.375
    7. 'Dash' → logprob: -21.5
    8. 'Fish' → logprob: -22.5
    9. '
' → logprob: -22.75
    10. 'ish' → logprob: -23.375

Token 1572: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -3.128163257315464e-07
    2. '(mi' → logprob: -16.5
    3. 'micro' → logprob: -16.875
    4. '(
' → logprob: -17.5
    5. '```' → logprob: -18.0
    6. ' (' → logprob: -18.375
    7. '(mc' → logprob: -18.375
    8. '[m' → logprob: -18.625
    9. '(mac' → logprob: -18.625
    10. '.micro' → logprob: -18.75

Token 1573: 'icro' (ID: 4031)
  Prédit: 'icro'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icro' → logprob: -0.00026872646412812173
    2. 'micro' → logprob: -8.375268936157227
    3. 'cro' → logprob: -10.625268936157227
    4. 'icrobial' → logprob: -11.750268936157227
    5. 'robes' → logprob: -12.750268936157227
    6. 'c' → logprob: -13.500268936157227
    7. 'ic' → logprob: -14.250268936157227
    8. ' microbes' → logprob: -14.750268936157227
    9. 'Micro' → logprob: -16.125268936157227
    10. '.micro' → logprob: -16.250268936157227

Token 1574: 'bes' (ID: 13639)
  Prédit: 'bes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bes' → logprob: -1.194728136062622
    2. 'ces' → logprob: -1.569728136062622
    3. 'ves' → logprob: -1.569728136062622
    4. 'es' → logprob: -2.069728136062622
    5. 's' → logprob: -2.319728136062622
    6. 'cs' → logprob: -3.819728136062622
    7. 'b' → logprob: -4.944727897644043
    8. 'cles' → logprob: -5.194727897644043
    9. 'be' → logprob: -5.194727897644043
    10. 'tes' → logprob: -6.194727897644043

Token 1575: ')


' (ID: 7861)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0010580566013231874
    2. '<|end|>' → logprob: -6.876058101654053
    3. ')
' → logprob: -12.251057624816895
    4. '       ' → logprob: -12.376057624816895
    5. '   ' → logprob: -12.876057624816895
    6. '())' → logprob: -13.251057624816895
    7. '`)' → logprob: -13.376057624816895
    8. ')return' → logprob: -13.501057624816895
    9. '<|end|>' → logprob: -13.626057624816895
    10. '[' → logprob: -13.626057624816895

Token 1576: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1577: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.000712670327629894
    2. 'main' → logprob: -7.375712871551514
    3. ' solve' → logprob: -10.125712394714355
    4. ' run' → logprob: -10.250712394714355
    5. '__' → logprob: -12.625712394714355
    6. '_main' → logprob: -12.750712394714355
    7. ' solution' → logprob: -13.250712394714355
    8. ' __' → logprob: -13.750712394714355
    9. '_' → logprob: -14.250712394714355
    10. 'solve' → logprob: -14.625712394714355

Token 1578: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0067534977570176125
    2. '():
' → logprob: -5.006753444671631
    3. '()' → logprob: -10.756753921508789
    4. '()>' → logprob: -12.131753921508789
    5. ' ():' → logprob: -12.506753921508789
    6. '():
' → logprob: -12.631753921508789
    7. '():

' → logprob: -13.506753921508789
    8. '()">' → logprob: -13.881753921508789
    9. '().' → logprob: -14.631753921508789
    10. '()->' → logprob: -14.756753921508789

Token 1579: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0002538296685088426
    2. ' dish' → logprob: -9.000253677368164
    3. '(p' → logprob: -10.250253677368164
    4. '    
' → logprob: -10.500253677368164
    5. 'def' → logprob: -11.375253677368164
    6. '```' → logprob: -11.375253677368164
    7. ' pet' → logprob: -11.500253677368164
    8. 'pet' → logprob: -12.000253677368164
    9. '   ' → logprob: -12.125253677368164
    10. 'import' → logprob: -12.625253677368164

Token 1580: ' pet' (ID: 5716)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20502270758152008
    2. 'import' → logprob: -1.7050226926803589
    3. 'pet' (adapté à ' pet') → logprob: -6.330022811889648
    4. ' import' → logprob: -7.080022811889648
    5. 'dish' → logprob: -7.955022811889648
    6. ' pet' → logprob: -8.080022811889648
    7. ' dish' → logprob: -8.830022811889648
    8. 'p' → logprob: -9.330022811889648
    9. 'pd' → logprob: -10.330022811889648
    10. 'd' → logprob: -10.955022811889648

Token 1581: 'ri' (ID: 872)
  Prédit: 'ri'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ri' → logprob: -2.6776029699249193e-05
    2. 'rid' → logprob: -10.62502670288086
    3. 'r' → logprob: -13.37502670288086
    4. '   ' → logprob: -15.25002670288086
    5. 'ри' → logprob: -15.62502670288086
    6. 'riad' → logprob: -16.25002670288086
    7. 'i' → logprob: -17.75002670288086
    8. '\' → logprob: -17.75002670288086
    9. 'ry' → logprob: -17.87502670288086
    10. '
' → logprob: -17.87502670288086

Token 1582: '_d' (ID: 1565)
  Prédit: 'Dish'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Dish' → logprob: -0.04563324153423309
    2. 'dish' → logprob: -3.420633316040039
    3. '_d' → logprob: -4.795633316040039
    4. ' =' → logprob: -5.920633316040039
    5. '   ' → logprob: -7.545633316040039
    6. '=' → logprob: -8.295633316040039
    7. ' dish' → logprob: -9.295633316040039
    8. 'd' → logprob: -9.545633316040039
    9. ' Dish' → logprob: -11.170633316040039
    10. ' ' → logprob: -12.420633316040039

Token 1583: 'ish' (ID: 1109)
  Prédit: 'ish'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ish' → logprob: -1.9146995327901095e-05
    2. '   ' → logprob: -12.875019073486328
    3. '=' → logprob: -13.125019073486328
    4. 'i' → logprob: -13.125019073486328
    5. 'sh' → logprob: -13.125019073486328
    6. '
' → logprob: -13.375019073486328
    7. '```' → logprob: -13.375019073486328
    8. '_' → logprob: -14.125019073486328
    9. ' ish' → logprob: -14.250019073486328
    10. 'ash' → logprob: -14.375019073486328

Token 1584: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.523245632648468
    2. '=' → logprob: -0.898245632648468
    3. '.' → logprob: -9.148245811462402
    4. ' ' → logprob: -11.898245811462402
    5. '   ' → logprob: -13.023245811462402
    6. '.run' → logprob: -13.523245811462402
    7. ')' → logprob: -13.773245811462402
    8. '  ' → logprob: -14.148245811462402
    9. '.=' → logprob: -14.398245811462402
    10. '.py' → logprob: -15.023245811462402

Token 1585: ' Micro' (ID: 24356)
  Prédit: 'Micro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Micro' → logprob: -0.006773868575692177
    2. 'Pet' → logprob: -5.006773948669434
    3. ' Micro' → logprob: -9.756773948669434
    4. 'Mic' → logprob: -14.506773948669434
    5. ' Pet' → logprob: -15.756773948669434
    6. 'micro' → logprob: -19.131772994995117
    7. 'Pets' → logprob: -21.131772994995117
    8. ' micro' → logprob: -22.381772994995117
    9. 'Mi' → logprob: -22.631772994995117
    10. '   ' → logprob: -23.006772994995117

Token 1586: 'be' (ID: 1464)
  Prédit: 'be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'be' → logprob: -0.052824147045612335
    2. 'Dish' → logprob: -3.4278242588043213
    3. 'bi' → logprob: -4.177824020385742
    4. 'b' → logprob: -6.677824020385742
    5. 'ri' → logprob: -6.802824020385742
    6. 'bie' → logprob: -8.052824020385742
    7. 'r' → logprob: -8.302824020385742
    8. 'ibe' → logprob: -8.677824020385742
    9. 'e' → logprob: -9.052824020385742
    10. 're' → logprob: -9.177824020385742

Token 1587: 'Factory' (ID: 4870)
  Prédit: 'Factory'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Factory' → logprob: -0.20142191648483276
    2. 'Dish' → logprob: -1.7014219760894775
    3. 'factory' → logprob: -12.826421737670898
    4. '_factory' → logprob: -13.076421737670898
    5. '.Factory' → logprob: -13.076421737670898
    6. '.factory' → logprob: -14.576421737670898
    7. 'Farm' → logprob: -15.076421737670898
    8. '(factory' → logprob: -15.451421737670898
    9. '```' → logprob: -15.576421737670898
    10. '   ' → logprob: -15.576421737670898

Token 1588: '.from' (ID: 10935)
  Prédit: '.from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.from' → logprob: -0.0001600347168277949
    2. 'from' → logprob: -8.750160217285156
    3. '.' → logprob: -15.125160217285156
    4. '#from' → logprob: -15.125160217285156
    5. '	from' → logprob: -15.250160217285156
    6. '```' → logprob: -15.625160217285156
    7. '.From' → logprob: -15.750160217285156
    8. '_from' → logprob: -16.250160217285156
    9. '   ' → logprob: -16.250160217285156
    10. ' .' → logprob: -16.375160217285156

Token 1589: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -8.180258191714529e-06
    2. 'Input' → logprob: -11.875008583068848
    3. '_Input' → logprob: -14.250008583068848
    4. 'input' → logprob: -15.000008583068848
    5. '_INPUT' → logprob: -16.37500762939453
    6. '_output' → logprob: -17.12500762939453
    7. '_inputs' → logprob: -17.25000762939453
    8. '\Input' → logprob: -17.75000762939453
    9. '```' → logprob: -18.62500762939453
    10. '_user' → logprob: -19.00000762939453

Token 1590: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.06209047511219978
    2. '()
' → logprob: -2.8120903968811035
    3. '().' → logprob: -10.062090873718262
    4. '   ' → logprob: -10.187090873718262
    5. '()
' → logprob: -11.187090873718262
    6. '()

' → logprob: -11.437090873718262
    7. '()`' → logprob: -12.437090873718262
    8. '();' → logprob: -12.687090873718262
    9. '()\' → logprob: -13.312090873718262
    10. '():
' → logprob: -13.312090873718262

Token 1591: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007130279554985464
    2. 'result' → logprob: -7.500712871551514
    3. 'print' → logprob: -8.750713348388672
    4. ' result' → logprob: -14.000713348388672
    5. '    
' → logprob: -15.375713348388672
    6. '```' → logprob: -15.375713348388672
    7. '
' → logprob: -15.875713348388672
    8. '       ' → logprob: -16.000713348388672
    9. ' print' → logprob: -16.750713348388672
    10. '    ' → logprob: -17.625713348388672

Token 1592: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.10650960355997086
    2. 'result' → logprob: -2.3565096855163574
    3. '   ' → logprob: -5.356509685516357
    4. 'res' → logprob: -6.731509685516357
    5. 'k' → logprob: -8.1065092086792
    6. 'answer' → logprob: -10.8565092086792
    7. 'max' → logprob: -10.9815092086792
    8. 'ans' → logprob: -10.9815092086792
    9. ' print' → logprob: -11.8565092086792
    10. 'sur' → logprob: -12.1065092086792

Token 1593: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -1.981667537620524e-06
    2. '(' → logprob: -13.750001907348633
    3. 'pet' → logprob: -14.625001907348633
    4. '(
' → logprob: -14.875001907348633
    5. 'p' → logprob: -18.125001907348633
    6. ' (' → logprob: -18.375001907348633
    7. '((' → logprob: -19.625001907348633
    8. '   ' → logprob: -19.875001907348633
    9. ' pet' → logprob: -20.000001907348633
    10. '(P' → logprob: -20.375001907348633

Token 1594: 'etri' (ID: 118459)
  Prédit: 'etri'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'etri' → logprob: -4.320199877838604e-07
    2. 'pet' → logprob: -15.125
    3. 'tri' → logprob: -17.5
    4. 'et' → logprob: -17.5
    5. 'etric' → logprob: -17.5
    6. 'etr' → logprob: -17.625
    7. 'etry' → logprob: -18.5
    8. 'etris' → logprob: -18.875
    9. 'atri' → logprob: -19.375
    10. 'e' → logprob: -19.375

Token 1595: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -2.696889623621246e-06
    2. 'dish' → logprob: -13.00000286102295
    3. 'Dish' → logprob: -15.37500286102295
    4. '_' → logprob: -17.000001907348633
    5. ' dish' → logprob: -17.000001907348633
    6. 'd' → logprob: -17.750001907348633
    7. '_disk' → logprob: -18.000001907348633
    8. '   ' → logprob: -18.000001907348633
    9. '\' → logprob: -18.500001907348633
    10. ')' → logprob: -18.875001907348633

Token 1596: 'ish' (ID: 1109)
  Prédit: 'ish'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ish' → logprob: -0.2816462516784668
    2. 'sh' → logprob: -1.4066462516784668
    3. '_sh' → logprob: -8.156646728515625
    4. 'ash' → logprob: -10.156646728515625
    5. '```' → logprob: -10.156646728515625
    6. '_' → logprob: -10.531646728515625
    7. 'ush' → logprob: -10.906646728515625
    8. '__' → logprob: -11.406646728515625
    9. '_d' → logprob: -11.906646728515625
    10. '   ' → logprob: -11.906646728515625

Token 1597: '.max' (ID: 11883)
  Prédit: '.max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.max' → logprob: -7.576873758807778e-05
    2. '.' → logprob: -10.125075340270996
    3. '.mainloop' → logprob: -11.875075340270996
    4. ').' → logprob: -12.125075340270996
    5. '.maximum' → logprob: -13.000075340270996
    6. '.argmax' → logprob: -13.000075340270996
    7. '.min' → logprob: -13.375075340270996
    8. ')' → logprob: -13.500075340270996
    9. ' .' → logprob: -13.625075340270996
    10. '.readline' → logprob: -13.875075340270996

Token 1598: '_sur' (ID: 160451)
  Prédit: '_sur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sur' → logprob: -1.9361264946837764e-07
    2. 'sur' → logprob: -15.875
    3. '_serv' → logprob: -18.25
    4. ' survivors' → logprob: -18.5
    5. '```' → logprob: -18.75
    6. '()' → logprob: -19.0
    7. ' Surviv' → logprob: -19.0
    8. '\' → logprob: -19.0
    9. ')' → logprob: -19.25
    10. '_' → logprob: -20.125

Token 1599: 'viv' (ID: 37442)
  Prédit: 'viv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'viv' → logprob: -0.051184315234422684
    2. 'iv' → logprob: -3.0511844158172607
    3. 'ivers' → logprob: -6.426184177398682
    4. 'v' → logprob: -7.926184177398682
    5. '```' → logprob: -9.05118465423584
    6. 'vive' → logprob: -9.17618465423584
    7. '_' → logprob: -9.30118465423584
    8. ' survivors' → logprob: -10.17618465423584
    9. '_sur' → logprob: -10.55118465423584
    10. '_iv' → logprob: -10.80118465423584

Token 1600: 'ors' (ID: 914)
  Prédit: 'ors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ors' → logprob: -4.008129963040119e-06
    2. 'als' → logprob: -12.750003814697266
    3. '```' → logprob: -14.750003814697266
    4. 'vors' → logprob: -15.625003814697266
    5. 'iors' → logprob: -16.375003814697266
    6. '   ' → logprob: -16.750003814697266
    7. 'iv' → logprob: -17.375003814697266
    8. 'or' → logprob: -17.375003814697266
    9. '_' → logprob: -17.750003814697266
    10. '[' → logprob: -17.750003814697266

Token 1601: '())


' (ID: 131583)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0009165783412754536
    2. '()' → logprob: -7.000916481018066
    3. ')' → logprob: -12.625916481018066
    4. '())
' → logprob: -13.375916481018066
    5. ' ())' → logprob: -16.000917434692383
    6. '()
' → logprob: -16.625917434692383
    7. '();)' → logprob: -18.000917434692383
    8. '(),' → logprob: -18.250917434692383
    9. '(' → logprob: -18.250917434692383
    10. '()]' → logprob: -18.750917434692383

Token 1602: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -5.080963092041202e-06
    2. '```' → logprob: -12.750004768371582
    3. ' if' → logprob: -13.125004768371582
    4. 'main' → logprob: -16.2500057220459
    5. '
' → logprob: -16.8750057220459
    6. '#' → logprob: -17.0000057220459
    7. '\n' → logprob: -19.1250057220459
    8. '__' → logprob: -19.5000057220459
    9. '<|end|>' → logprob: -19.6250057220459
    10. '\' → logprob: -19.6250057220459

Token 1603: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.1602357029914856
    2. '__' → logprob: -1.9102356433868408
    3. '___' → logprob: -12.035235404968262
    4. '_' → logprob: -12.660235404968262
    5. '_name' → logprob: -13.660235404968262
    6. '____' → logprob: -14.785235404968262
    7. ' ___' → logprob: -15.035235404968262
    8. ' _' → logprob: -15.785235404968262
    9. 'name' → logprob: -16.035236358642578
    10. '.__' → logprob: -17.160236358642578

Token 1604: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.07198628038167953
    2. '==' → logprob: -2.821986198425293
    3. ' ==' → logprob: -4.696986198425293
    4. '=="' → logprob: -7.821986198425293
    5. 'name' → logprob: -8.071986198425293
    6. '=='' → logprob: -10.321986198425293
    7. '__.__' → logprob: -10.571986198425293
    8. ' __' → logprob: -11.071986198425293
    9. '```' → logprob: -11.321986198425293
    10. '.__' → logprob: -11.696986198425293

Token 1605: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -3.607391408877447e-05
    2. '__.__' → logprob: -10.375036239624023
    3. '==' → logprob: -12.625036239624023
    4. '=="' → logprob: -14.750036239624023
    5. '__
' → logprob: -15.375036239624023
    6. '__.' → logprob: -15.375036239624023
    7. '__["' → logprob: -15.625036239624023
    8. ' ==' → logprob: -16.000036239624023
    9. '```' → logprob: -16.125036239624023
    10. '___' → logprob: -16.625036239624023

Token 1606: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.39026734232902527
    2. '==' → logprob: -1.1402673721313477
    3. '=="' → logprob: -6.390267372131348
    4. ' ==' → logprob: -6.515267372131348
    5. '=='' → logprob: -8.890267372131348
    6. '==
' → logprob: -9.765267372131348
    7. '__.__' → logprob: -11.265267372131348
    8. '=' → logprob: -11.765267372131348
    9. '===' → logprob: -12.140267372131348
    10. '_' → logprob: -12.640267372131348

Token 1607: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.07889628410339355
    2. ''' → logprob: -2.5788962841033936
    3. '__' → logprob: -12.078896522521973
    4. ' "__' → logprob: -14.328896522521973
    5. '   ' → logprob: -16.203895568847656
    6. ' '__' → logprob: -17.578895568847656
    7. '"name' → logprob: -17.578895568847656
    8. '"user' → logprob: -17.828895568847656
    9. ''"' → logprob: -18.203895568847656
    10. '("__' → logprob: -18.203895568847656

Token 1608: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.011052536778151989
    2. '__' → logprob: -4.51105260848999
    3. 'name' → logprob: -13.136052131652832
    4. 'built' → logprob: -14.136052131652832
    5. '__":
' → logprob: -14.386052131652832
    6. '"' → logprob: -14.761052131652832
    7. ''' → logprob: -15.386052131652832
    8. '__':
' → logprob: -15.761052131652832
    9. '____' → logprob: -16.01105308532715
    10. ' main' → logprob: -16.38605308532715

Token 1609: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.08051034808158875
    2. '__' → logprob: -2.580510377883911
    3. '__':
' → logprob: -6.455510139465332
    4. '__.' → logprob: -10.955510139465332
    5. '__.__' → logprob: -11.080510139465332
    6. '__["' → logprob: -11.830510139465332
    7. '__
' → logprob: -12.580510139465332
    8. '"' → logprob: -13.955510139465332
    9. '__",' → logprob: -14.455510139465332
    10. '```' → logprob: -14.580510139465332

Token 1610: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.003459302708506584
    2. '   ' → logprob: -6.503459453582764
    3. '__' → logprob: -6.503459453582764
    4. '	main' → logprob: -8.378458976745605
    5. ' main' → logprob: -8.878458976745605
    6. '_main' → logprob: -10.003458976745605
    7. '    
' → logprob: -11.003458976745605
    8. '
' → logprob: -11.378458976745605
    9. '____' → logprob: -12.128458976745605
    10. '(main' → logprob: -13.003458976745605

Token 1611: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: 0.0
    2. ' main' → logprob: -17.25
    3. 'import' → logprob: -20.25
    4. '	main' → logprob: -20.25
    5. '   ' → logprob: -22.125
    6. '(main' → logprob: -24.375
    7. '
' → logprob: -25.125
    8. '.main' → logprob: -25.75
    9. '_main' → logprob: -25.875
    10. '```' → logprob: -26.125

Token 1612: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1610
Tokens correctement prédits (1ère position, stricte): 451
Tokens correctement prédits (1ère position, avec adaptation): 475
Tokens correctement prédits (top 10): 1003
Précision stricte (1ère position): 28.01%
Précision adaptée (1ère position): 29.50%
Précision (top 10): 62.30%
================================================================================
