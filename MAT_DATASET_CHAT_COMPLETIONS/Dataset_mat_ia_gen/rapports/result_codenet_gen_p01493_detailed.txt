================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:18:01
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
sys.setrecursionlimit(10**7)

def main():
    V = int(sys.stdin.readline().strip())
    graph = [sys.stdin.readline().strip() for _ in range(V)]

    # Union-Find (Disjoint Set Union) implementation
    class UnionFind:
        def __init__(self, n):
            self.parent = list(range(n))
            self.size = [1] * n
            self.components = n  # Track number of connected components
        
        def find(self, x):
            while self.parent[x] != x:
                self.parent[x] = self.parent[self.parent[x]]  # Path compression
                x = self.parent[x]
            return x
        
        def unite(self, x, y):
            x_root = self.find(x)
            y_root = self.find(y)
            if x_root == y_root:
                return False
            if self.size[x_root] < self.size[y_root]:
                x_root, y_root = y_root, x_root
            self.parent[y_root] = x_root
            self.size[x_root] += self.size[y_root]
            self.components -= 1
            return True
        
        def same(self, x, y):
            return self.find(x) == self.find(y)

    uf = UnionFind(V)

    # Build connected components from input
    for i in range(V):
        for j in range(i+1, V):
            if graph[i][j] == 'Y':
                uf.unite(i, j)

    # Since the original graph is disconnected, uf.components >= 2

    # The game moves consist in adding edges between distinct components,
    # so each move reduces number of components by one.
    # Player who makes the graph connected (components = 1) loses.

    # Initial number of moves possible = uf.components - 1,
    # because to connect all components, at least that many edges are needed.

    # Players alternate moves:
    # If the number of moves (uf.components - 1) is odd, first player (Taro) wins, else second player (Hanako) wins.

    # Explanation:
    # This is because the player forced to do the last move (connecting the graph) loses.
    # So apply normal parity logic on the number of moves.

    if (uf.components - 1) % 2 == 1:
        print("Taro")
    else:
        print("Hanako")

if __name__ == '__main__':
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'sys' (ID: 17324)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.29739612340927124
    2. '\n' → logprob: -1.547396183013916
    3. '<|end|>' → logprob: -3.797396183013916
    4. '\' → logprob: -4.922396183013916
    5. 'newline' → logprob: -5.672396183013916
    6. 'import' → logprob: -5.672396183013916
    7. '<|end|>' → logprob: -6.047396183013916
    8. '
' → logprob: -6.922396183013916
    9. '```' → logprob: -6.922396183013916
    10. '' → logprob: -7.547396183013916

Token 4: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0001657565007917583
    2. ' .' → logprob: -9.125165939331055
    3. '.import' → logprob: -11.625165939331055
    4. '.readline' → logprob: -12.000165939331055
    5. '.exit' → logprob: -12.625165939331055
    6. '.​' → logprob: -12.625165939331055
    7. '.user' → logprob: -12.750165939331055
    8. '​.' → logprob: -13.000165939331055
    9. '.stdout' → logprob: -13.125165939331055
    10. '.print' → logprob: -13.125165939331055

Token 5: 'rec' (ID: 9285)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5776441097259521
    2. '_trace' → logprob: -1.3276441097259521
    3. ' _' → logprob: -2.702644109725952
    4. '_version' → logprob: -3.577644109725952
    5. '_soft' → logprob: -4.577644348144531
    6. '_exc' → logprob: -4.702644348144531
    7. '_encoding' → logprob: -5.702644348144531
    8. '_ex' → logprob: -5.702644348144531
    9. '_exception' → logprob: -5.702644348144531
    10. '_default' → logprob: -5.827644348144531

Token 6: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.0007462600478902459
    2. 'ursive' → logprob: -7.500746250152588
    3. 'limit' → logprob: -10.000746726989746
    4. 'urs' → logprob: -10.000746726989746
    5. 'ur' → logprob: -10.875746726989746
    6. 't' → logprob: -11.125746726989746
    7. '_limit' → logprob: -11.250746726989746
    8. 'urf' → logprob: -11.250746726989746
    9. '_' → logprob: -11.500746726989746
    10. 'ursor' → logprob: -11.875746726989746

Token 7: 'limit' (ID: 19698)
  Prédit: '_limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limit' → logprob: -0.4866597652435303
    2. 'limit' → logprob: -0.9866597652435303
    3. '_depth' → logprob: -4.486660003662109
    4. 'depth' → logprob: -7.486660003662109
    5. '_' → logprob: -8.36166000366211
    6. '_rate' → logprob: -9.98666000366211
    7. 'lim' → logprob: -10.23666000366211
    8. '(' → logprob: -10.36166000366211
    9. '_factor' → logprob: -10.36166000366211
    10. '_stack' → logprob: -10.61166000366211

Token 8: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -8.494741632603109e-05
    2. '(
' → logprob: -10.25008487701416
    3. ' (' → logprob: -11.12508487701416
    4. '40' → logprob: -11.62508487701416
    5. '(

' → logprob: -12.25008487701416
    6. '```' → logprob: -12.50008487701416
    7. '((' → logprob: -12.62508487701416
    8. '(.' → logprob: -12.75008487701416
    9. '('' → logprob: -12.87508487701416
    10. '("("' → logprob: -13.12508487701416

Token 9: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.10064796358346939
    2. '100' → logprob: -2.3506479263305664
    3. ' ' → logprob: -8.100647926330566
    4. '500' → logprob: -9.850647926330566
    5. '300' → logprob: -9.975647926330566
    6. '250' → logprob: -10.725647926330566
    7. '  ' → logprob: -12.350647926330566
    8. '   ' → logprob: -12.600647926330566
    9. '200' → logprob: -12.975647926330566
    10. '999' → logprob: -13.100647926330566

Token 10: '**' (ID: 410)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006857931148260832
    2. '000' → logprob: -5.756857872009277
    3. '00' → logprob: -5.881857872009277
    4. '4' → logprob: -7.256857872009277
    5. '6' → logprob: -8.881857872009277
    6. '5' → logprob: -11.506857872009277
    7. '```' → logprob: -12.006857872009277
    8. ')' → logprob: -12.256857872009277
    9. '3' → logprob: -12.381857872009277
    10. '**' → logprob: -12.381857872009277

Token 11: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.00762082589790225
    2. '9' → logprob: -5.507620811462402
    3. '6' → logprob: -5.757620811462402
    4. '8' → logprob: -7.882620811462402
    5. '```' → logprob: -15.757620811462402
    6. ' ' → logprob: -16.38262176513672
    7. '(' → logprob: -17.13262176513672
    8. '5' → logprob: -17.75762176513672
    9. '``' → logprob: -18.25762176513672
    10. '999' → logprob: -18.38262176513672

Token 12: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3663626305060461e-05
    2. '))' → logprob: -11.75001335144043
    3. ' )' → logprob: -12.12501335144043
    4. ')
' → logprob: -15.62501335144043
    5. ')))' → logprob: -16.75001335144043
    6. ')`' → logprob: -17.00001335144043
    7. ' ' → logprob: -17.25001335144043
    8. '）' → logprob: -18.12501335144043
    9. '`)' → logprob: -18.12501335144043
    10. '```' → logprob: -18.50001335144043

Token 13: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0465119332075119
    2. '
' → logprob: -3.5465118885040283
    3. '

' → logprob: -4.921512126922607
    4. '```' → logprob: -5.296512126922607
    5. '\' → logprob: -6.421512126922607
    6. '
' → logprob: -7.046512126922607
    7. 'class' → logprob: -7.546512126922607
    8. '\n' → logprob: -7.671512126922607
    9. 'import' → logprob: -8.04651165008545
    10. ')' → logprob: -8.92151165008545

Token 14: ' main' (ID: 2758)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.16084302961826324
    2. ' factorial' → logprob: -2.1608431339263916
    3. ' dfs' → logprob: -3.7858431339263916
    4. ' fibonacci' → logprob: -5.6608428955078125
    5. ' space' → logprob: -6.6608428955078125
    6. ' factor' → logprob: -6.7858428955078125
    7. ' recursive' → logprob: -7.5358428955078125
    8. ' fib' → logprob: -7.6608428955078125
    9. ' main' → logprob: -7.7858428955078125
    10. '_' → logprob: -7.9108428955078125

Token 15: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00538316834717989
    2. '():' → logprob: -5.755383014678955
    3. ':' → logprob: -7.005383014678955
    4. '(:' → logprob: -7.380383014678955
    5. '_' → logprob: -8.255383491516113
    6. '):' → logprob: -9.130383491516113
    7. ' (' → logprob: -9.255383491516113
    8. '```' → logprob: -10.130383491516113
    9. ')' → logprob: -10.505383491516113
    10. '.' → logprob: -11.255383491516113

Token 16: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011926613748073578
    2. '    ' → logprob: -5.136926651000977
    3. '    
' → logprob: -5.386926651000977
    4. '\' → logprob: -8.261926651000977
    5. '\n' → logprob: -8.261926651000977
    6. 'n' → logprob: -8.761926651000977
    7. ' 
' → logprob: -8.886926651000977
    8. '<|end|>' → logprob: -9.261926651000977
    9. '
' → logprob: -9.761926651000977
    10. '(' → logprob: -9.761926651000977

Token 17: ' V' (ID: 631)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.42851799726486206
    2. '   ' → logprob: -1.6785180568695068
    3. ' n' → logprob: -1.9285180568695068
    4. 'a' → logprob: -5.678517818450928
    5. 'print' → logprob: -6.178517818450928
    6. 'for' → logprob: -6.678517818450928
    7. '    ' → logprob: -6.678517818450928
    8. 'i' → logprob: -7.053517818450928
    9. ' while' → logprob: -7.053517818450928
    10. ' ' → logprob: -7.053517818450928

Token 18: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4910619258880615
    2. ' =' → logprob: -1.2410619258880615
    3. ' ,' → logprob: -2.3660619258880615
    4. '=' → logprob: -5.616062164306641
    5. 'ALUE' → logprob: -8.24106216430664
    6. '   ' → logprob: -8.36606216430664
    7. '[' → logprob: -8.86606216430664
    8. ' ' → logprob: -9.24106216430664
    9. ',E' → logprob: -9.36606216430664
    10. '=int' → logprob: -9.49106216430664

Token 19: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.127101868391037
    2. 'int' → logprob: -2.1271018981933594
    3. ' ' → logprob: -9.00210189819336
    4. '10' → logprob: -11.00210189819336
    5. '[int' → logprob: -11.25210189819336
    6. ' []' → logprob: -12.00210189819336
    7. '20' → logprob: -13.00210189819336
    8. '0' → logprob: -13.37710189819336
    9. ' map' → logprob: -13.50210189819336
    10. '  ' → logprob: -13.75210189819336

Token 20: '(sys' (ID: 41042)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.31346210837364197
    2. '(' → logprob: -1.3134621381759644
    3. '(sys' → logprob: -9.063462257385254
    4. 'input' → logprob: -9.563462257385254
    5. ' (' → logprob: -12.438462257385254
    6. '(
' → logprob: -12.813462257385254
    7. '(open' → logprob: -13.438462257385254
    8. '('' → logprob: -13.438462257385254
    9. ' input' → logprob: -13.563462257385254
    10. '(V' → logprob: -14.313462257385254

Token 21: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.03570279851555824
    2. '.argv' → logprob: -3.660702705383301
    3. '.' → logprob: -5.160702705383301
    4. '.readline' → logprob: -5.660702705383301
    5. '.input' → logprob: -9.7857027053833
    6. ' .' → logprob: -10.0357027053833
    7. '.read' → logprob: -10.9107027053833
    8. '.stdout' → logprob: -11.2857027053833
    9. '.std' → logprob: -12.5357027053833
    10. 'stdin' → logprob: -13.9107027053833

Token 22: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0007119550718925893
    2. '.' → logprob: -7.375711917877197
    3. '.read' → logprob: -9.375712394714355
    4. ' readline' → logprob: -15.000712394714355
    5. '.readlines' → logprob: -16.25071144104004
    6. '.)' → logprob: -16.25071144104004
    7. ')' → logprob: -16.62571144104004
    8. '.Read' → logprob: -16.75071144104004
    9. 'read' → logprob: -17.00071144104004
    10. ' .' → logprob: -17.00071144104004

Token 23: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.00954440701752901
    2. '()' → logprob: -5.009544372558594
    3. '().' → logprob: -5.884544372558594
    4. '())
' → logprob: -11.009544372558594
    5. ')' → logprob: -11.134544372558594
    6. ' ())' → logprob: -12.009544372558594
    7. '(' → logprob: -13.009544372558594
    8. '()))' → logprob: -14.134544372558594
    9. '())

' → logprob: -14.259544372558594
    10. '()),' → logprob: -15.134544372558594

Token 24: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.017766838893294334
    2. 'rstrip' → logprob: -4.267766952514648
    3. 'read' → logprob: -5.642766952514648
    4. 'split' → logprob: -10.142766952514648
    5. ' strip' → logprob: -11.642766952514648
    6. ')' → logprob: -12.267766952514648
    7. ' readline' → logprob: -14.642766952514648
    8. ' ' → logprob: -15.767766952514648
    9. '_strip' → logprob: -16.39276695251465
    10. 'replace' → logprob: -16.51776695251465

Token 25: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.26617953181266785
    2. ')' → logprob: -1.5161795616149902
    3. '()' → logprob: -4.26617956161499
    4. '())
' → logprob: -9.266179084777832
    5. '))' → logprob: -12.391179084777832
    6. ')
' → logprob: -12.516179084777832
    7. '(' → logprob: -12.891179084777832
    8. ' )' → logprob: -13.516179084777832
    9. '()
' → logprob: -13.766179084777832
    10. ' ())' → logprob: -13.766179084777832

Token 26: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26838770508766174
    2. ')' → logprob: -1.5183876752853394
    3. '    
' → logprob: -5.268387794494629
    4. '
' → logprob: -6.018387794494629
    5. ' ' → logprob: -6.518387794494629
    6. '    ' → logprob: -7.018387794494629
    7. '<|end|>' → logprob: -7.018387794494629
    8. '  ' → logprob: -7.143387794494629
    9. '\n' → logprob: -7.268387794494629
    10. '```' → logprob: -7.393387794494629

Token 27: ' graph' (ID: 7465)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -1.4117754697799683
    2. ' edges' → logprob: -1.7867754697799683
    3. '   ' → logprob: -2.036775588989258
    4. ' E' → logprob: -2.161775588989258
    5. ' G' → logprob: -2.411775588989258
    6. 'G' → logprob: -2.786775588989258
    7. ' graph' → logprob: -2.911775588989258
    8. 'graph' (adapté à ' graph') → logprob: -3.536775588989258
    9. 'edges' → logprob: -3.786775588989258
    10. ' tree' → logprob: -4.161775588989258

Token 28: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04121622070670128
    2. '=' → logprob: -3.2912161350250244
    3. '[' → logprob: -5.7912163734436035
    4. ' ' → logprob: -10.541215896606445
    5. '[]' → logprob: -11.041215896606445
    6. '.' → logprob: -11.166215896606445
    7. '.setdefault' → logprob: -11.416215896606445
    8. '[:]' → logprob: -12.041215896606445
    9. '=[]' → logprob: -12.416215896606445
    10. ')' → logprob: -12.416215896606445

Token 29: ' [' (ID: 723)
  Prédit: ' [[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [[]' → logprob: -0.14471955597400665
    2. '[' → logprob: -3.1447196006774902
    3. ' [' → logprob: -3.5197196006774902
    4. ' {}' → logprob: -3.6447196006774902
    5. ' {' → logprob: -3.8947196006774902
    6. '{}' → logprob: -4.89471960067749
    7. ' [{}' → logprob: -5.39471960067749
    8. ' defaultdict' → logprob: -6.26971960067749
    9. '{' → logprob: -6.51971960067749
    10. ' []' → logprob: -9.769719123840332

Token 30: 'sys' (ID: 17324)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0011730826226994395
    2. ' []' → logprob: -6.75117301940918
    3. '[]
' → logprob: -13.75117301940918
    4. 'set' → logprob: -13.87617301940918
    5. '   ' → logprob: -15.00117301940918
    6. '[' → logprob: -15.87617301940918
    7. 'list' → logprob: -16.50117301940918
    8. '[]}' → logprob: -16.50117301940918
    9. ']' → logprob: -16.75117301940918
    10. ' ' → logprob: -16.75117301940918

Token 31: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.01215487252920866
    2. '.max' → logprob: -4.512155055999756
    3. '.stdout' → logprob: -7.137155055999756
    4. '.' → logprob: -9.387154579162598
    5. '.setdefault' → logprob: -9.387154579162598
    6. '.set' → logprob: -10.012154579162598
    7. '.st' → logprob: -10.387154579162598
    8. '.std' → logprob: -10.762154579162598
    9. '.modules' → logprob: -10.887154579162598
    10. '.exit' → logprob: -11.887154579162598

Token 32: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0031553804874420166
    2. '.stdin' → logprob: -6.12815523147583
    3. '.' → logprob: -7.62815523147583
    4. '.read' → logprob: -8.128155708312988
    5. '.readlines' → logprob: -9.253155708312988
    6. 'read' → logprob: -10.378155708312988
    7. '.stdout' → logprob: -11.378155708312988
    8. 'stdin' → logprob: -11.628155708312988
    9. '.setdefault' → logprob: -11.878155708312988
    10. '.append' → logprob: -11.878155708312988

Token 33: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -6.754368223482743e-05
    2. '()' → logprob: -9.625067710876465
    3. ' ().' → logprob: -14.250067710876465
    4. '()].' → logprob: -14.875067710876465
    5. '()).' → logprob: -15.000067710876465
    6. '()]' → logprob: -17.12506675720215
    7. '())' → logprob: -17.37506675720215
    8. '.readline' → logprob: -17.50006675720215
    9. '.strip' → logprob: -17.87506675720215
    10. '()
' → logprob: -17.87506675720215

Token 34: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.03286367654800415
    2. 'rstrip' → logprob: -3.5328636169433594
    3. 'split' → logprob: -5.782863616943359
    4. 'read' → logprob: -10.53286361694336
    5. ' strip' → logprob: -14.03286361694336
    6. 'rs' → logprob: -14.65786361694336
    7. 'decode' → logprob: -14.78286361694336
    8. '_strip' → logprob: -17.15786361694336
    9. 'str' → logprob: -17.40786361694336
    10. '(strip' → logprob: -17.53286361694336

Token 35: '()' (ID: 416)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.002650690032169223
    2. '()' → logprob: -6.002650737762451
    3. '())' → logprob: -9.377650260925293
    4. '()]' → logprob: -9.502650260925293
    5. '()].' → logprob: -12.127650260925293
    6. ' ().' → logprob: -12.877650260925293
    7. '()).' → logprob: -13.002650260925293
    8. ')' → logprob: -13.127650260925293
    9. '.split' → logprob: -14.502650260925293
    10. '(),' → logprob: -14.627650260925293

Token 36: ' for' (ID: 395)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.5304882526397705
    2. ')' → logprob: -1.9054882526397705
    3. ' for' → logprob: -2.1554882526397705
    4. '()' → logprob: -2.6554882526397705
    5. '.split' → logprob: -3.2804882526397705
    6. 'for' → logprob: -3.9054882526397705
    7. '('').' → logprob: -5.405488014221191
    8. '.' → logprob: -6.030488014221191
    9. ']' → logprob: -6.280488014221191
    10. '())' → logprob: -6.405488014221191

Token 37: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.1116846427321434
    2. ' _' → logprob: -2.486684560775757
    3. '_' → logprob: -4.486684799194336
    4. 'range' → logprob: -4.736684799194336
    5. ' ' → logprob: -6.486684799194336
    6. '_range' → logprob: -7.111684799194336
    7. ' in' → logprob: -9.986684799194336
    8. ' i' → logprob: -10.111684799194336
    9. '	range' → logprob: -10.736684799194336
    10. '_i' → logprob: -12.611684799194336

Token 38: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.14097115397453308
    2. ' range' → logprob: -2.1409711837768555
    3. 'in' → logprob: -4.8909711837768555
    4. '(range' → logprob: -5.5159711837768555
    5. '_' → logprob: -6.7659711837768555
    6. ' in' → logprob: -7.2659711837768555
    7. '(' → logprob: -8.640971183776855
    8. 'ange' → logprob: -8.890971183776855
    9. '_range' → logprob: -9.390971183776855
    10. '	range' → logprob: -10.015971183776855

Token 39: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3134182095527649
    2. ' range' → logprob: -1.3134181499481201
    3. '(range' → logprob: -8.8134183883667
    4. ' ' → logprob: -12.8134183883667
    5. '	range' → logprob: -13.4384183883667
    6. '(V' → logprob: -14.0634183883667
    7. ' xrange' → logprob: -14.0634183883667
    8. ')' → logprob: -14.3134183883667
    9. ' V' → logprob: -15.4384183883667
    10. '(' → logprob: -15.4384183883667

Token 40: '(V' (ID: 16949)
  Prédit: '(V'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(V' → logprob: -0.00043102685594931245
    2. '(' → logprob: -7.750431060791016
    3. '(
' → logprob: -16.375431060791016
    4. ' (' → logprob: -16.625431060791016
    5. 'V' → logprob: -16.875431060791016
    6. '(

' → logprob: -17.625431060791016
    7. '(v' → logprob: -18.000431060791016
    8. '(s' → logprob: -18.375431060791016
    9. '(E' → logprob: -18.375431060791016
    10. '((' → logprob: -18.500431060791016

Token 41: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0008831187733449042
    2. ')' → logprob: -7.375883102416992
    3. ']' → logprob: -8.375883102416992
    4. ')])' → logprob: -11.375883102416992
    5. ' )' → logprob: -11.625883102416992
    6. '])]' → logprob: -12.750883102416992
    7. '))' → logprob: -13.875883102416992
    8. '])' → logprob: -14.625883102416992
    9. '')]' → logprob: -15.125883102416992
    10. ' ]' → logprob: -15.375883102416992

Token 42: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3208598792552948
    2. '
' → logprob: -1.8208599090576172
    3. ')' → logprob: -3.445859909057617
    4. 'def' → logprob: -3.570859909057617
    5. '    
' → logprob: -3.820859909057617
    6. '<|end|>' → logprob: -5.320859909057617
    7. '[' → logprob: -5.570859909057617
    8. ' ' → logprob: -5.570859909057617
    9. '#' → logprob: -5.945859909057617
    10. 'for' → logprob: -6.445859909057617

Token 43: ' #' (ID: 1069)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.8159904479980469
    2. 'for' → logprob: -1.8159904479980469
    3. 'dp' → logprob: -1.9409904479980469
    4. '   ' → logprob: -3.065990447998047
    5. ' visited' → logprob: -3.315990447998047
    6. 'd' → logprob: -3.690990447998047
    7. 'dist' → logprob: -3.690990447998047
    8. 'def' → logprob: -4.565990447998047
    9. ' for' → logprob: -4.565990447998047
    10. 'depth' → logprob: -4.565990447998047

Token 44: ' Union' (ID: 14746)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.06692563742399216
    2. '    ' → logprob: -4.316925525665283
    3. '   ' → logprob: -4.566925525665283
    4. ' for' → logprob: -4.691925525665283
    5. 'for' → logprob: -5.191925525665283
    6. ' #' → logprob: -5.316925525665283
    7. ' visited' → logprob: -5.441925525665283
    8. '  ' → logprob: -6.066925525665283
    9. ' )' → logprob: -6.441925525665283
    10. 'd' → logprob: -6.441925525665283

Token 45: '-F' (ID: 8074)
  Prédit: 'Find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Find' → logprob: -0.026793675497174263
    2. '-F' → logprob: -4.026793479919434
    3. '-' → logprob: -5.026793479919434
    4. '-find' → logprob: -7.276793479919434
    5. 'find' → logprob: -7.401793479919434
    6. '_find' → logprob: -7.901793479919434
    7. ' Find' → logprob: -9.151793479919434
    8. '_Find' → logprob: -9.401793479919434
    9. ' -' → logprob: -10.026793479919434
    10. ' find' → logprob: -10.151793479919434

Token 46: 'ind' (ID: 521)
  Prédit: 'ind'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ind' → logprob: -4.56102097814437e-05
    2. '```' → logprob: -10.625045776367188
    3. 'find' → logprob: -11.250045776367188
    4. 'in' → logprob: -12.375045776367188
    5. 'Find' → logprob: -14.500045776367188
    6. 'i' → logprob: -14.500045776367188
    7. '`' → logprob: -14.875045776367188
    8. 'ield' → logprob: -15.250045776367188
    9. '#' → logprob: -15.625045776367188
    10. '   ' → logprob: -15.750045776367188

Token 47: ' (' (ID: 350)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3063230514526367
    2. 'class' → logprob: -1.5563230514526367
    3. 'data' → logprob: -3.6813230514526367
    4. '(' → logprob: -4.556323051452637
    5. ' class' → logprob: -4.806323051452637
    6. ':' → logprob: -5.806323051452637
    7. '()
' → logprob: -5.806323051452637
    8. '   ' → logprob: -7.306323051452637
    9. 'parent' → logprob: -7.681323051452637
    10. '()

' → logprob: -8.056323051452637

Token 48: 'Dis' (ID: 3538)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06420943886041641
    2. 'data' → logprob: -3.064209461212158
    3. ' data' → logprob: -4.564209461212158
    4. ')data' → logprob: -6.189209461212158
    5. 'Data' → logprob: -6.564209461212158
    6. 'ds' → logprob: -8.314208984375
    7. 'class' → logprob: -8.564208984375
    8. ' )' → logprob: -8.814208984375
    9. 'DS' → logprob: -8.939208984375
    10. 'Dis' → logprob: -9.064208984375

Token 49: 'joint' (ID: 69164)
  Prédit: 'joint'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'joint' → logprob: -0.0017496729269623756
    2. 'join' → logprob: -7.376749515533447
    3. 't' → logprob: -8.126749992370605
    4. 'j' → logprob: -8.251749992370605
    5. '```' → logprob: -8.751749992370605
    6. 'jo' → logprob: -8.751749992370605
    7. '-' → logprob: -9.626749992370605
    8. '-j' → logprob: -9.751749992370605
    9. ')' → logprob: -10.876749992370605
    10. '_joint' → logprob: -11.126749992370605

Token 50: ' Set' (ID: 3957)
  Prédit: ' Set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Set' → logprob: -0.525891900062561
    2. 'Set' → logprob: -0.900891900062561
    3. '-set' → logprob: -6.9008917808532715
    4. '-' → logprob: -7.4008917808532715
    5. ' set' → logprob: -8.02589225769043
    6. ')' → logprob: -8.40089225769043
    7. 'set' → logprob: -9.27589225769043
    8. '_set' → logprob: -9.40089225769043
    9. ' ' → logprob: -9.52589225769043
    10. '  ' → logprob: -9.77589225769043

Token 51: ' Union' (ID: 14746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002246365649625659
    2. 'Union' → logprob: -6.502246379852295
    3. ' )' → logprob: -7.627246379852295
    4. ')data' → logprob: -9.252245903015137
    5. ' data' → logprob: -9.877245903015137
    6. ' Union' → logprob: -10.377245903015137
    7. ')
' → logprob: -10.377245903015137
    8. 'Data' → logprob: -11.127245903015137
    9. '）' → logprob: -12.252245903015137
    10. ')

' → logprob: -12.377245903015137

Token 52: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003559615579433739
    2. ')
' → logprob: -8.25035572052002
    3. 'class' → logprob: -10.87535572052002
    4. ' )' → logprob: -10.87535572052002
    5. '   ' → logprob: -11.12535572052002
    6. ' class' → logprob: -11.62535572052002
    7. ')

' → logprob: -11.87535572052002
    8. ')data' → logprob: -12.00035572052002
    9. 'data' → logprob: -12.50035572052002
    10. '())' → logprob: -12.87535572052002

Token 53: ' implementation' (ID: 13847)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.025184614583849907
    2. ' class' → logprob: -4.275184631347656
    3. '()' → logprob: -5.400184631347656
    4. ':' → logprob: -6.650184631347656
    5. 'parent' → logprob: -6.775184631347656
    6. '
' → logprob: -7.150184631347656
    7. '(' → logprob: -7.275184631347656
    8. ')' → logprob: -7.525184631347656
    9. '<|end|>' → logprob: -7.525184631347656
    10. 'data' → logprob: -8.400184631347656

Token 54: '
' (ID: 198)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.04224125295877457
    2. '
' → logprob: -3.292241334915161
    3. ' class' → logprob: -5.667241096496582
    4. '```' → logprob: -7.917241096496582
    5. ':' → logprob: -8.417241096496582
    6. '

' → logprob: -10.292241096496582
    7. '' → logprob: -10.792241096496582
    8. '``' → logprob: -11.292241096496582
    9. '   ' → logprob: -11.542241096496582
    10. ':
' → logprob: -11.792241096496582

Token 55: '   ' (ID: 271)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.16417188942432404
    2. '
' → logprob: -1.9141719341278076
    3. ' class' → logprob: -5.9141716957092285
    4. '```' → logprob: -7.4141716957092285
    5. '

' → logprob: -8.414172172546387
    6. ':' → logprob: -8.914172172546387
    7. '   ' → logprob: -9.914172172546387
    8. '' → logprob: -10.039172172546387
    9. '``' → logprob: -10.539172172546387
    10. 'n' → logprob: -10.664172172546387

Token 56: ' class' (ID: 744)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' (adapté à ' class') → logprob: -0.022803839296102524
    2. ' class' → logprob: -4.397803783416748
    3. '
' → logprob: -4.647803783416748
    4. 'parent' → logprob: -7.897803783416748
    5. ' 
' → logprob: -9.522804260253906
    6. '  
' → logprob: -9.897804260253906
    7. '    
' → logprob: -10.272804260253906
    8. '

' → logprob: -10.897804260253906
    9. '```' → logprob: -11.397804260253906
    10. '   
' → logprob: -11.772804260253906

Token 57: ' Union' (ID: 14746)
  Prédit: ' Union'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Union' → logprob: -0.0005299181793816388
    2. ' Dis' → logprob: -8.250530242919922
    3. 'Union' → logprob: -8.500530242919922
    4. ' ' → logprob: -10.375530242919922
    5. ' union' → logprob: -11.250530242919922
    6. '_union' → logprob: -11.625530242919922
    7. ' DS' → logprob: -12.250530242919922
    8. 'union' → logprob: -13.125530242919922
    9. 'Dis' → logprob: -13.250530242919922
    10. ' Node' → logprob: -13.875530242919922

Token 58: 'Find' (ID: 11437)
  Prédit: 'Find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Find' → logprob: -0.00599823659285903
    2. '-' → logprob: -5.755998134613037
    3. '-F' → logprob: -6.005998134613037
    4. 'F' → logprob: -8.005998611450195
    5. ' -' → logprob: -11.755998611450195
    6. ' Find' → logprob: -12.880998611450195
    7. 'Fi' → logprob: -13.380998611450195
    8. '-find' → logprob: -13.380998611450195
    9. '_Find' → logprob: -13.505998611450195
    10. '[' → logprob: -13.505998611450195

Token 59: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005848454311490059
    2. '):' → logprob: -8.125584602355957
    3. '(object' → logprob: -9.000584602355957
    4. '():' → logprob: -9.375584602355957
    5. ':
' → logprob: -9.750584602355957
    6. ' :' → logprob: -11.250584602355957
    7. '>:' → logprob: -12.125584602355957
    8. '(' → logprob: -13.875584602355957
    9. ':**' → logprob: -14.250584602355957
    10. '}:' → logprob: -15.000584602355957

Token 60: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.279666543006897
    2. '       ' → logprob: -1.654666543006897
    3. '    ' → logprob: -2.1546664237976074
    4. ':' → logprob: -2.2796664237976074
    5. '<|end|>' → logprob: -2.6546664237976074
    6. '(n' → logprob: -2.9046664237976074
    7. '
' → logprob: -3.1546664237976074
    8. '    
' → logprob: -3.4046664237976074
    9. '(' → logprob: -3.5296664237976074
    10. '(object' → logprob: -3.6546664237976074

Token 61: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.47425687313079834
    2. 'def' (adapté à ' def') → logprob: -0.9742568731307983
    3. '   ' → logprob: -8.72425651550293
    4. '	def' → logprob: -12.34925651550293
    5. ' ' → logprob: -12.59925651550293
    6. '       ' → logprob: -12.72425651550293
    7. '           ' → logprob: -13.09925651550293
    8. '    ' → logprob: -13.09925651550293
    9. ' __' → logprob: -14.09925651550293
    10. '__' → logprob: -14.34925651550293

Token 62: ' __' (ID: 2516)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.7150880694389343
    2. 'nit' → logprob: -1.090088129043579
    3. ' __' → logprob: -2.340088129043579
    4. '__' → logprob: -3.340088129043579
    5. ' nit' → logprob: -3.715088129043579
    6. 'n' → logprob: -4.590087890625
    7. ' init' → logprob: -5.715087890625
    8. '_init' → logprob: -6.215087890625
    9. '```' → logprob: -6.840087890625
    10. ' def' → logprob: -7.715087890625

Token 63: 'init' (ID: 3287)
  Prédit: 'nit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nit' → logprob: -0.07895974069833755
    2. 'init' → logprob: -2.5789597034454346
    3. 'n' → logprob: -9.953959465026855
    4. ' nit' → logprob: -12.078959465026855
    5. 'ni' → logprob: -12.203959465026855
    6. '_init' → logprob: -12.328959465026855
    7. 'innit' → logprob: -13.578959465026855
    8. '   ' → logprob: -13.703959465026855
    9. '	init' → logprob: -14.078959465026855
    10. 'int' → logprob: -14.203959465026855

Token 64: '__(' (ID: 8241)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2431347370147705
    2. '__(' → logprob: -1.8681347370147705
    3. ' (' → logprob: -3.7431347370147705
    4. '(self' → logprob: -3.8681347370147705
    5. '_' → logprob: -5.118134498596191
    6. '_(' → logprob: -5.243134498596191
    7. '__' → logprob: -5.868134498596191
    8. ')(' → logprob: -6.868134498596191
    9. ' ' → logprob: -7.743134498596191
    10. '(space' → logprob: -8.368134498596191

Token 65: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -5.1928003813372925e-05
    2. ' self' → logprob: -9.875051498413086
    3. '(self' → logprob: -15.750051498413086
    4. ')' → logprob: -17.000051498413086
    5. ',self' → logprob: -17.250051498413086
    6. '   ' → logprob: -17.625051498413086
    7. 's' → logprob: -17.750051498413086
    8. ' ' → logprob: -18.125051498413086
    9. '	self' → logprob: -18.250051498413086
    10. 'size' → logprob: -18.375051498413086

Token 66: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10044367611408234
    2. ' ,' → logprob: -2.3504436016082764
    3. 'self' → logprob: -8.725443840026855
    4. ',n' → logprob: -10.475443840026855
    5. ',self' → logprob: -10.600443840026855
    6. '(self' → logprob: -12.975443840026855
    7. ',num' → logprob: -12.975443840026855
    8. '_,' → logprob: -13.100443840026855
    9. ' (' → logprob: -13.100443840026855
    10. ',size' → logprob: -13.225443840026855

Token 67: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.006759543903172016
    2. ' n' → logprob: -5.0067596435546875
    3. 'self' → logprob: -10.256759643554688
    4. '   ' → logprob: -13.131759643554688
    5. '	n' → logprob: -13.131759643554688
    6. 'size' → logprob: -13.256759643554688
    7. ' self' → logprob: -13.256759643554688
    8. 'N' → logprob: -14.256759643554688
    9. ' size' → logprob: -14.756759643554688
    10. ')n' → logprob: -15.006759643554688

Token 68: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0009134899592027068
    2. ' ):' → logprob: -7.125913619995117
    3. ')' → logprob: -9.500913619995117
    4. '):
' → logprob: -10.375913619995117
    5. ':' → logprob: -13.375913619995117
    6. ' )' → logprob: -14.250913619995117
    7. '   ' → logprob: -15.000913619995117
    8. '):
' → logprob: -16.250913619995117
    9. '    ' → logprob: -16.375913619995117
    10. ',' → logprob: -17.000913619995117

Token 69: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02824612520635128
    2. 'n' → logprob: -4.02824592590332
    3. 'self' → logprob: -4.77824592590332
    4. '       ' → logprob: -8.27824592590332
    5. '            ' → logprob: -8.27824592590332
    6. '               ' → logprob: -8.52824592590332
    7. '        ' → logprob: -8.90324592590332
    8. '   ' → logprob: -8.90324592590332
    9. ' self' → logprob: -9.40324592590332
    10. '         ' → logprob: -9.65324592590332

Token 70: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.1634901463985443
    2. ' self' → logprob: -1.9134901762008667
    3. '           ' → logprob: -5.788490295410156
    4. '   ' → logprob: -10.038490295410156
    5. 'parent' → logprob: -10.288490295410156
    6. 'n' → logprob: -10.538490295410156
    7. '               ' → logprob: -10.788490295410156
    8. '	self' → logprob: -10.788490295410156
    9. ' ' → logprob: -11.038490295410156
    10. '       ' → logprob: -11.413490295410156

Token 71: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -0.3557091951370239
    2. 'parent' → logprob: -1.230709195137024
    3. '_parent' → logprob: -6.105709075927734
    4. 'parents' → logprob: -6.355709075927734
    5. ' parent' → logprob: -6.480709075927734
    6. ',parent' → logprob: -7.730709075927734
    7. '.parents' → logprob: -7.855709075927734
    8. 'n' → logprob: -8.105709075927734
    9. '.' → logprob: -8.480709075927734
    10. '	parent' → logprob: -8.730709075927734

Token 72: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11288460344076157
    2. '=' → logprob: -2.237884521484375
    3. 's' → logprob: -10.237884521484375
    4. '=[]' → logprob: -11.612884521484375
    5. '<|end|>' → logprob: -12.237884521484375
    6. '[' → logprob: -12.612884521484375
    7. ')' → logprob: -13.112884521484375
    8. '[:]' → logprob: -13.487884521484375
    9. '=None' → logprob: -14.237884521484375
    10. '<|end|>' → logprob: -14.237884521484375

Token 73: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.03441699221730232
    2. '[list' → logprob: -3.534416913986206
    3. ' list' → logprob: -5.534417152404785
    4. '[-' → logprob: -7.784417152404785
    5. '[' → logprob: -8.534417152404785
    6. ' [' → logprob: -9.534417152404785
    7. '[n' → logprob: -11.659417152404785
    8. '[node' → logprob: -12.784417152404785
    9. '[parent' → logprob: -12.909417152404785
    10. '=list' → logprob: -13.659417152404785

Token 74: '(range' (ID: 50017)
  Prédit: '(range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -6.704273118884885e-07
    2. '(' → logprob: -14.500000953674316
    3. 'range' → logprob: -15.750000953674316
    4. ' range' → logprob: -17.375
    5. '	range' → logprob: -18.625
    6. '(map' → logprob: -20.75
    7. '(r' → logprob: -21.375
    8. '(rank' → logprob: -21.875
    9. '.range' → logprob: -22.25
    10. '<|end|>' → logprob: -22.25

Token 75: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -6.384836888173595e-05
    2. '(' → logprob: -10.0000638961792
    3. 'n' → logprob: -11.1250638961792
    4. ')n' → logprob: -13.0000638961792
    5. ' n' → logprob: -13.8750638961792
    6. '	n' → logprob: -14.7500638961792
    7. ')' → logprob: -16.375062942504883
    8. ')(' → logprob: -17.750062942504883
    9. ',n' → logprob: -18.375062942504883
    10. ' (' → logprob: -18.625062942504883

Token 76: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00046749215107411146
    2. ')' → logprob: -8.000467300415039
    3. '))
' → logprob: -9.125467300415039
    4. ' ))' → logprob: -11.125467300415039
    5. ')))' → logprob: -12.500467300415039
    6. '       ' → logprob: -13.125467300415039
    7. '           ' → logprob: -14.125467300415039
    8. '))
' → logprob: -15.250467300415039
    9. '))

' → logprob: -15.250467300415039
    10. ')),' → logprob: -15.375467300415039

Token 77: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 78: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.03153761848807335
    2. ' self' → logprob: -3.9065375328063965
    3. '           ' → logprob: -4.5315375328063965
    4. '       ' → logprob: -9.406538009643555
    5. '   ' → logprob: -9.531538009643555
    6. 's' → logprob: -12.156538009643555
    7. ' ' → logprob: -12.531538009643555
    8. '
' → logprob: -13.156538009643555
    9. '	self' → logprob: -13.531538009643555
    10. '               ' → logprob: -14.031538009643555

Token 79: '.size' (ID: 4463)
  Prédit: '.rank'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.rank' → logprob: -0.018200984224677086
    2. '.size' → logprob: -4.018200874328613
    3. 'size' → logprob: -10.893200874328613
    4. '.parent' → logprob: -11.518200874328613
    5. 'rank' → logprob: -11.643200874328613
    6. '.' → logprob: -12.268200874328613
    7. '.sz' → logprob: -12.643200874328613
    8. '.r' → logprob: -12.768200874328613
    9. '.depth' → logprob: -14.143200874328613
    10. ' .' → logprob: -14.518200874328613

Token 80: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4135776162147522
    2. '=' → logprob: -1.1635775566101074
    3. 's' → logprob: -3.6635775566101074
    4. '[' → logprob: -8.038578033447266
    5. ' ' → logprob: -9.038578033447266
    6. ')' → logprob: -9.413578033447266
    7. '   ' → logprob: -9.913578033447266
    8. '[:]' → logprob: -9.913578033447266
    9. '(' → logprob: -10.538578033447266
    10. '  ' → logprob: -10.788578033447266

Token 81: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.40717780590057373
    2. ' [' → logprob: -1.1571778059005737
    3. '[n' → logprob: -3.9071779251098633
    4. 'n' → logprob: -14.157177925109863
    5. '   ' → logprob: -14.157177925109863
    6. ' ' → logprob: -14.282177925109863
    7. '[node' → logprob: -14.407177925109863
    8. ' n' → logprob: -15.157177925109863
    9. '[num' → logprob: -15.157177925109863
    10. '[len' → logprob: -15.282177925109863

Token 82: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.75
    3. '   ' → logprob: -18.625
    4. '0' → logprob: -18.625
    5. '１' → logprob: -21.5
    6. '```' → logprob: -22.0
    7. '  ' → logprob: -22.375
    8. '۱' → logprob: -22.5
    9. '(' → logprob: -22.625
    10. '3' → logprob: -23.125

Token 83: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.07205814868211746
    2. ']*' → logprob: -2.6970582008361816
    3. ')' → logprob: -6.572058200836182
    4. ' for' → logprob: -8.072057723999023
    5. ' ]' → logprob: -8.447057723999023
    6. ',' → logprob: -9.697057723999023
    7. ']*(' → logprob: -10.072057723999023
    8. ')]' → logprob: -10.447057723999023
    9. '*' → logprob: -10.697057723999023
    10. ')*' → logprob: -10.697057723999023

Token 84: ' *' (ID: 425)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 85: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5759501457214355
    2. ' n' → logprob: -0.8259501457214355
    3. '	n' → logprob: -11.575950622558594
    4. '(n' → logprob: -14.450950622558594
    5. ')n' → logprob: -14.700950622558594
    6. '<|end|>' → logprob: -16.200950622558594
    7. ',n' → logprob: -16.325950622558594
    8. '_n' → logprob: -16.450950622558594
    9. ' н' → logprob: -16.700950622558594
    10. ' ' → logprob: -17.075950622558594

Token 86: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.01145083736628294
    2. '

' → logprob: -5.26145076751709
    3. '<|end|>' → logprob: -5.38645076751709
    4. '' → logprob: -7.51145076751709
    5. '       ' → logprob: -7.88645076751709
    6. '<|end|>' → logprob: -9.26145076751709
    7. '

' → logprob: -9.51145076751709
    8. '
' → logprob: -9.63645076751709
    9. 'newline' → logprob: -9.88645076751709
    10. '        
' → logprob: -9.88645076751709

Token 87: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0654948279261589
    2. '       ' → logprob: -3.5654947757720947
    3. '<|end|>' → logprob: -3.8154947757720947
    4. '    
' → logprob: -5.940495014190674
    5. '        
' → logprob: -5.940495014190674
    6. '

' → logprob: -6.190495014190674
    7. '' → logprob: -6.315495014190674
    8. '   ' → logprob: -6.940495014190674
    9. '\n' → logprob: -7.440495014190674
    10. ' 
' → logprob: -7.690495014190674

Token 88: ' self' (ID: 1051)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7291351556777954
    2. '       ' → logprob: -1.3541351556777954
    3. 'n' → logprob: -2.104135036468506
    4. '    
' → logprob: -3.104135036468506
    5. '   ' → logprob: -3.354135036468506
    6. '        
' → logprob: -3.979135036468506
    7. '<|end|>' → logprob: -4.479135036468506
    8. 'def' → logprob: -5.229135036468506
    9. '\n' → logprob: -5.604135036468506
    10. '' → logprob: -5.854135036468506

Token 89: '.components' (ID: 41872)
  Prédit: '.rank'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.rank' → logprob: -0.00016480287013109773
    2. '.parent' → logprob: -10.250164985656738
    3. 'rank' → logprob: -10.250164985656738
    4. '.depth' → logprob: -10.375164985656738
    5. '.next' → logprob: -10.875164985656738
    6. '.' → logprob: -11.375164985656738
    7. '.r' → logprob: -11.375164985656738
    8. '.count' → logprob: -12.125164985656738
    9. '.max' → logprob: -13.500164985656738
    10. '_rank' → logprob: -13.500164985656738

Token 90: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38905632495880127
    2. '=' → logprob: -1.2640563249588013
    3. '_' → logprob: -3.2640562057495117
    4. ' ' → logprob: -7.389056205749512
    5. '<|end|>' → logprob: -8.389056205749512
    6. ')' → logprob: -8.514056205749512
    7. '_count' → logprob: -8.889056205749512
    8. '_=' → logprob: -9.764056205749512
    9. ' _' → logprob: -9.889056205749512
    10. '[:]' → logprob: -10.264056205749512

Token 91: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.20143350958824158
    2. 'n' → logprob: -1.701433539390564
    3. '	n' → logprob: -10.826433181762695
    4. ' ' → logprob: -16.451433181762695
    5. '_n' → logprob: -16.701433181762695
    6. ' н' → logprob: -16.826433181762695
    7. '<|end|>' → logprob: -17.076433181762695
    8. '   ' → logprob: -17.701433181762695
    9. '    ' → logprob: -17.951433181762695
    10. '=n' → logprob: -18.201433181762695

Token 92: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.026411188766360283
    2. '<|end|>' → logprob: -4.526411056518555
    3. '       ' → logprob: -5.026411056518555
    4. '

' → logprob: -5.276411056518555
    5. '' → logprob: -6.776411056518555
    6. '   ' → logprob: -7.651411056518555
    7. '<|end|>' → logprob: -8.026411056518555
    8. '    
' → logprob: -8.026411056518555
    9. '
' → logprob: -8.526411056518555
    10. '        
' → logprob: -8.901411056518555

Token 93: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06487429141998291
    2. '<|end|>' → logprob: -3.4398741722106934
    3. '

' → logprob: -3.6898741722106934
    4. '       ' → logprob: -6.314874172210693
    5. '<|end|>' → logprob: -6.689874172210693
    6. '' → logprob: -7.064874172210693
    7. '
        
' → logprob: -8.314874649047852
    8. '    
' → logprob: -8.439874649047852
    9. '

' → logprob: -8.689874649047852
    10. '        
' → logprob: -8.689874649047852

Token 94: ' Track' (ID: 30844)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 95: ' number' (ID: 2086)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 96: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.03551919385790825
    2. '<|end|>' → logprob: -3.9105191230773926
    3. ' ' → logprob: -4.910519123077393
    4. 'of' → logprob: -5.035519123077393
    5. 's' → logprob: -7.785519123077393
    6. '<|end|>' → logprob: -8.41051959991455
    7. ')' → logprob: -9.66051959991455
    8. '  ' → logprob: -9.78551959991455
    9. 'o' → logprob: -10.16051959991455
    10. '_of' → logprob: -10.16051959991455

Token 97: ' connected' (ID: 12079)
  Prédit: ' components'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' components' → logprob: -0.09439605474472046
    2. 'components' → logprob: -2.5943961143493652
    3. ' connected' → logprob: -4.469396114349365
    4. ' ' → logprob: -6.094396114349365
    5. '_components' → logprob: -7.219396114349365
    6. 'connected' → logprob: -7.594396114349365
    7. '<|end|>' → logprob: -8.469395637512207
    8. ' componentes' → logprob: -9.844395637512207
    9. ' sets' → logprob: -10.844395637512207
    10. ' component' → logprob: -11.344395637512207

Token 98: ' components' (ID: 10674)
  Prédit: ' components'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' components' → logprob: -0.0378878079354763
    2. '_components' → logprob: -4.2878875732421875
    3. 'components' → logprob: -4.2878875732421875
    4. '_' → logprob: -4.6628875732421875
    5. ' ' → logprob: -9.162887573242188
    6. ' _' → logprob: -9.412887573242188
    7. ' component' → logprob: -11.162887573242188
    8. '_component' → logprob: -11.287887573242188
    9. 's' → logprob: -11.662887573242188
    10. '<|end|>' → logprob: -11.912887573242188

Token 99: '
        
' (ID: 20417)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.13042722642421722
    2. '<|end|>' → logprob: -2.255427122116089
    3. '       ' → logprob: -4.880427360534668
    4. '

' → logprob: -5.130427360534668
    5. '<|end|>' → logprob: -6.380427360534668
    6. '    
' → logprob: -7.630427360534668
    7. '   ' → logprob: -7.755427360534668
    8. '        
' → logprob: -7.755427360534668
    9. '' → logprob: -8.630427360534668
    10. '```' → logprob: -9.380427360534668

Token 100: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.30874648690223694
    2. '       ' → logprob: -1.6837464570999146
    3. '        
' → logprob: -2.808746576309204
    4. '   ' → logprob: -4.683746337890625
    5. '    
' → logprob: -4.808746337890625
    6. 'def' → logprob: -7.683746337890625
    7. '<|end|>' → logprob: -7.933746337890625
    8. '

' → logprob: -8.183746337890625
    9. '
        
' → logprob: -8.433746337890625
    10. '        

' → logprob: -8.808746337890625

Token 101: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.132265105843544
    2. '   ' → logprob: -2.382265090942383
    3. '
' → logprob: -3.757265090942383
    4. ' def' → logprob: -5.132265090942383
    5. '       ' → logprob: -6.382265090942383
    6. '    
' → logprob: -7.882265090942383
    7. '        
' → logprob: -9.132265090942383
    8. '	def' → logprob: -9.507265090942383
    9. ' ' → logprob: -10.757265090942383
    10. '  ' → logprob: -11.757265090942383

Token 102: ' find' (ID: 1646)
  Prédit: ' find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' find' → logprob: -0.011146623641252518
    2. 'find' → logprob: -4.511146545410156
    3. ' root' → logprob: -9.886146545410156
    4. ' union' → logprob: -10.636146545410156
    5. ' unite' → logprob: -11.886146545410156
    6. 'root' → logprob: -12.136146545410156
    7. 'union' → logprob: -12.761146545410156
    8. ' ' → logprob: -12.761146545410156
    9. '_find' → logprob: -13.261146545410156
    10. '	find' → logprob: -13.511146545410156

Token 103: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1801455020904541
    2. '(self' → logprob: -1.805145502090454
    3. ' (' → logprob: -8.555145263671875
    4. '(s' → logprob: -10.055145263671875
    5. '(
' → logprob: -10.180145263671875
    6. '_' → logprob: -10.805145263671875
    7. '(x' → logprob: -10.930145263671875
    8. 'self' → logprob: -11.055145263671875
    9. '_self' → logprob: -11.180145263671875
    10. '<|end|>' → logprob: -11.430145263671875

Token 104: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0018327304860576987
    2. ' ,' → logprob: -6.501832962036133
    3. ')' → logprob: -8.376832962036133
    4. ',x' → logprob: -10.376832962036133
    5. '(' → logprob: -11.001832962036133
    6. '(x' → logprob: -11.126832962036133
    7. ',node' → logprob: -11.751832962036133
    8. 'self' → logprob: -12.126832962036133
    9. ' )' → logprob: -12.376832962036133
    10. ',parent' → logprob: -12.751832962036133

Token 105: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.4617256056226324e-05
    2. ' x' → logprob: -11.250014305114746
    3. 'a' → logprob: -13.375014305114746
    4. 'v' → logprob: -17.750015258789062
    5. 'u' → logprob: -17.875015258789062
    6. 'self' → logprob: -18.625015258789062
    7. 'p' → logprob: -19.125015258789062
    8. 'i' → logprob: -19.750015258789062
    9. 'node' → logprob: -20.000015258789062
    10. 'k' → logprob: -20.250015258789062

Token 106: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00023178798437584192
    2. ')' → logprob: -8.500231742858887
    3. ' ):' → logprob: -10.875231742858887
    4. '):
' → logprob: -11.750231742858887
    5. ':' → logprob: -13.625231742858887
    6. '():' → logprob: -16.875232696533203
    7. ' )' → logprob: -16.875232696533203
    8. '   ' → logprob: -17.000232696533203
    9. '):
' → logprob: -17.375232696533203
    10. ' ' → logprob: -17.375232696533203

Token 107: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6288257241249084
    2. '):' → logprob: -1.3788256645202637
    3. ')' → logprob: -1.7538256645202637
    4. '       ' → logprob: -3.7538256645202637
    5. '
' → logprob: -4.753825664520264
    6. ':
' → logprob: -5.878825664520264
    7. '):
' → logprob: -6.253825664520264
    8. '   ' → logprob: -7.003825664520264
    9. '           ' → logprob: -7.003825664520264
    10. ' :' → logprob: -7.003825664520264

Token 108: ' while' (ID: 2049)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.39007291197776794
    2. '       ' → logprob: -2.765072822570801
    3. ' ' → logprob: -3.015072822570801
    4. '
' → logprob: -3.140072822570801
    5. '):' → logprob: -3.140072822570801
    6. ' )' → logprob: -3.140072822570801
    7. ' 
' → logprob: -3.890072822570801
    8. '        ' → logprob: -4.015072822570801
    9. ':' → logprob: -4.390072822570801
    10. '    ' → logprob: -5.265072822570801

Token 109: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.008635961450636387
    2. 'x' → logprob: -5.008635997772217
    3. ' self' → logprob: -6.258635997772217
    4. ' x' → logprob: -12.258635520935059
    5. '(self' → logprob: -16.633636474609375
    6. '	self' → logprob: -17.133636474609375
    7. ' ' → logprob: -17.758636474609375
    8. 'parent' → logprob: -19.508636474609375
    9. 'Self' → logprob: -20.383636474609375
    10. 'sel' → logprob: -20.508636474609375

Token 110: '.parent' (ID: 17454)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.5486011505126953
    2. '!=' → logprob: -0.9236011505126953
    3. 'parent' → logprob: -4.048601150512695
    4. 'self' → logprob: -5.923601150512695
    5. '.parent' → logprob: -6.173601150512695
    6. '_parent' → logprob: -6.673601150512695
    7. ')!=' → logprob: -7.548601150512695
    8. '[parent' → logprob: -7.548601150512695
    9. ' parent' → logprob: -8.673601150512695
    10. ']!=' → logprob: -9.423601150512695

Token 111: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -4.417976379045285e-05
    2. '[' → logprob: -10.250043869018555
    3. '[self' → logprob: -11.750043869018555
    4. 'x' → logprob: -14.750043869018555
    5. '[
' → logprob: -15.000043869018555
    6. ' [' → logprob: -16.250043869018555
    7. ' ' → logprob: -17.250043869018555
    8. '```' → logprob: -17.625043869018555
    9. '[u' → logprob: -17.875043869018555
    10. ' x' → logprob: -18.000043869018555

Token 112: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.35894325375556946
    2. ']!=' → logprob: -1.233943223953247
    3. '!=' → logprob: -4.608943462371826
    4. ' !=' → logprob: -7.858943462371826
    5. ')!=' → logprob: -9.733942985534668
    6. ' ]' → logprob: -10.733942985534668
    7. 'x' → logprob: -12.608942985534668
    8. '()!=' → logprob: -12.733942985534668
    9. ']!='' → logprob: -13.483942985534668
    10. '']' → logprob: -13.733942985534668

Token 113: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.006873672362416983
    2. ' !=' → logprob: -5.131873607635498
    3. ']!=' → logprob: -7.256873607635498
    4. '()!=' → logprob: -8.881874084472656
    5. ')!=' → logprob: -9.881874084472656
    6. '!==' → logprob: -10.131874084472656
    7. '!=-' → logprob: -12.256874084472656
    8. '!=(' → logprob: -13.506874084472656
    9. '!='' → logprob: -14.006874084472656
    10. 'x' → logprob: -14.506874084472656

Token 114: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.061967797577381134
    2. ' x' → logprob: -2.8119678497314453
    3. '	x' → logprob: -15.811967849731445
    4. ')x' → logprob: -18.936967849731445
    5. ' ' → logprob: -19.311967849731445
    6. '
' → logprob: -19.686967849731445
    7. ' 
' → logprob: -20.936967849731445
    8. '>x' → logprob: -21.686967849731445
    9. '<|end|>' → logprob: -21.811967849731445
    10. 'self' → logprob: -21.936967849731445

Token 115: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006836260668933392
    2. ':
' → logprob: -5.006836414337158
    3. ' :' → logprob: -9.2568359375
    4. ',' → logprob: -11.8818359375
    5. '):' → logprob: -12.2568359375
    6. 'x' → logprob: -13.1318359375
    7. '):
' → logprob: -13.2568359375
    8. ':x' → logprob: -13.2568359375
    9. ' :
' → logprob: -13.2568359375
    10. ' x' → logprob: -13.5068359375

Token 116: '               ' (ID: 506)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.21875624358654022
    2. '           ' → logprob: -2.2187561988830566
    3. '               ' → logprob: -2.8437561988830566
    4. ')' → logprob: -4.718756198883057
    5. '):' → logprob: -5.468756198883057
    6. ' :' → logprob: -5.593756198883057
    7. ':
' → logprob: -5.843756198883057
    8. '   ' → logprob: -6.093756198883057
    9. '       ' → logprob: -6.343756198883057
    10. ',' → logprob: -6.718756198883057

Token 117: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.8725630044937134
    2. '               ' → logprob: -0.9975630044937134
    3. 'self' (adapté à ' self') → logprob: -1.7475630044937134
    4. ' x' → logprob: -3.872562885284424
    5. 'x' → logprob: -4.872562885284424
    6. '           ' → logprob: -5.372562885284424
    7. '   ' → logprob: -5.997562885284424
    8. ' ' → logprob: -6.747562885284424
    9. '
' → logprob: -7.247562885284424
    10. ' 
' → logprob: -7.747562885284424

Token 118: '.parent' (ID: 17454)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -1.1512237787246704
    2. '.parent' → logprob: -1.1512237787246704
    3. ' =' → logprob: -1.6512237787246704
    4. '=' → logprob: -1.7762237787246704
    5. ' ' → logprob: -6.526223659515381
    6. ' parent' → logprob: -6.901223659515381
    7. '[parent' → logprob: -7.026223659515381
    8. '_parent' → logprob: -7.276223659515381
    9. 'self' → logprob: -7.401223659515381
    10. '	parent' → logprob: -7.776223659515381

Token 119: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.019026493653655052
    2. ' =' → logprob: -4.769026279449463
    3. '[' → logprob: -4.894026279449463
    4. '=' → logprob: -6.144026279449463
    5. 'x' → logprob: -7.519026279449463
    6. ']' → logprob: -9.269026756286621
    7. ' ' → logprob: -10.644026756286621
    8. '[
' → logprob: -10.769026756286621
    9. ' x' → logprob: -11.019026756286621
    10. ',' → logprob: -11.769026756286621

Token 120: ']' (ID: 60)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.27020421624183655
    2. '=' → logprob: -1.5202041864395142
    3. ']' → logprob: -4.020204067230225
    4. ')' → logprob: -9.645204544067383
    5. ']=' → logprob: -9.770204544067383
    6. ' ]' → logprob: -10.270204544067383
    7. ' )' → logprob: -13.645204544067383
    8. ' ' → logprob: -13.645204544067383
    9. ')=' → logprob: -15.270204544067383
    10. '[' → logprob: -15.395204544067383

Token 121: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2014143168926239
    2. '=' → logprob: -1.7014143466949463
    3. ' =
' → logprob: -14.951414108276367
    4. ' ' → logprob: -15.201414108276367
    5. '=
' → logprob: -15.951414108276367
    6. '=sys' → logprob: -16.076414108276367
    7. '=self' → logprob: -16.576414108276367
    8. ']' → logprob: -16.826414108276367
    9. '＝' → logprob: -17.201414108276367
    10. 'x' → logprob: -17.201414108276367

Token 122: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.04858816787600517
    2. ' self' → logprob: -3.048588275909424
    3. '	self' → logprob: -15.048587799072266
    4. ' ' → logprob: -16.048587799072266
    5. '(self' → logprob: -16.298587799072266
    6. '[self' → logprob: -16.798587799072266
    7. '
' → logprob: -17.048587799072266
    8. 'elf' → logprob: -17.173587799072266
    9. '_self' → logprob: -17.298587799072266
    10. '-self' → logprob: -17.798587799072266

Token 123: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -0.0001817297888919711
    2. 'parent' → logprob: -8.625182151794434
    3. '[parent' → logprob: -13.375182151794434
    4. '_parent' → logprob: -15.250182151794434
    5. '	parent' → logprob: -16.000181198120117
    6. '.' → logprob: -16.000181198120117
    7. ' parent' → logprob: -16.125181198120117
    8. ',parent' → logprob: -17.125181198120117
    9. ' .' → logprob: -18.000181198120117
    10. '(parent' → logprob: -18.000181198120117

Token 124: '[self' (ID: 33734)
  Prédit: '[self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[self' → logprob: -3.666993507067673e-05
    2. '[' → logprob: -10.750036239624023
    3. 'self' → logprob: -11.125036239624023
    4. '[
' → logprob: -15.125036239624023
    5. '(self' → logprob: -16.250036239624023
    6. ' self' → logprob: -18.375036239624023
    7. '[parent' → logprob: -18.750036239624023
    8. '```' → logprob: -19.000036239624023
    9. '	self' → logprob: -19.375036239624023
    10. '[x' → logprob: -20.125036239624023

Token 125: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -0.0011922525009140372
    2. 'parent' → logprob: -6.876192092895508
    3. '[parent' → logprob: -9.251192092895508
    4. '[x' → logprob: -9.876192092895508
    5. ' parent' → logprob: -13.126192092895508
    6. '.' → logprob: -13.376192092895508
    7. '.find' → logprob: -13.376192092895508
    8. '.x' → logprob: -13.501192092895508
    9. '[self' → logprob: -13.751192092895508
    10. '_parent' → logprob: -14.001192092895508

Token 126: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.002642602426931262
    2. 'x' → logprob: -6.002642631530762
    3. '[' → logprob: -9.377642631530762
    4. '[self' → logprob: -9.752642631530762
    5. '[
' → logprob: -11.502642631530762
    6. '(x' → logprob: -12.127642631530762
    7. ']' → logprob: -12.252642631530762
    8. 'self' → logprob: -13.752642631530762
    9. '{x' → logprob: -14.002642631530762
    10. ' x' → logprob: -14.127642631530762

Token 127: ']]' (ID: 8928)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -5.776898251497187e-05
    2. ']
' → logprob: -10.3750581741333
    3. ' ]' → logprob: -11.2500581741333
    4. '])' → logprob: -11.7500581741333
    5. ')]' → logprob: -13.5000581741333
    6. '[x' → logprob: -13.5000581741333
    7. ')' → logprob: -14.3750581741333
    8. 'x' → logprob: -14.6250581741333
    9. '           ' → logprob: -14.6250581741333
    10. '               ' → logprob: -15.1250581741333

Token 128: ' ' (ID: 220)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.20841509103775024
    2. '           ' → logprob: -1.7084150314331055
    3. 'x' → logprob: -5.9584150314331055
    4. ' x' → logprob: -5.9584150314331055
    5. ')' → logprob: -7.5834150314331055
    6. '   ' → logprob: -8.083415031433105
    7. '       ' → logprob: -8.208415031433105
    8. '                   ' → logprob: -8.333415031433105
    9. ' ' → logprob: -9.458415031433105
    10. ',' → logprob: -9.833415031433105

Token 129: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5222912430763245
    2. 'x' → logprob: -1.5222911834716797
    3. '           ' → logprob: -1.7722911834716797
    4. ' x' → logprob: -4.77229118347168
    5. ')' → logprob: -5.64729118347168
    6. '
' → logprob: -6.27229118347168
    7. '   ' → logprob: -6.89729118347168
    8. '                   ' → logprob: -7.39729118347168
    9. 'return' → logprob: -8.02229118347168
    10. '       ' → logprob: -8.02229118347168

Token 130: ' Path' (ID: 14027)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.5982259511947632
    2. 'x' → logprob: -0.8482259511947632
    3. ' ' → logprob: -3.9732260704040527
    4. '<|end|>' → logprob: -5.973226070404053
    5. ' 
' → logprob: -8.473225593566895
    6. ')' → logprob: -8.598225593566895
    7. '0' → logprob: -9.973225593566895
    8. ' self' → logprob: -10.473225593566895
    9. '<|end|>' → logprob: -10.598225593566895
    10. ')x' → logprob: -10.848225593566895

Token 131: ' compression' (ID: 41811)
  Prédit: 'compression'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compression' → logprob: -0.28367945551872253
    2. ' compression' → logprob: -1.408679485321045
    3. '           ' → logprob: -6.158679485321045
    4. '   ' → logprob: -8.533679008483887
    5. 'Compression' → logprob: -10.158679008483887
    6. '       ' → logprob: -10.158679008483887
    7. 'compress' → logprob: -10.533679008483887
    8. ' ' → logprob: -10.908679008483887
    9. '               ' → logprob: -10.908679008483887
    10. '_com' → logprob: -11.033679008483887

Token 132: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4377455413341522
    2. '               ' → logprob: -1.1877455711364746
    3. '\n' → logprob: -4.312745571136475
    4. ')' → logprob: -4.687745571136475
    5. '
' → logprob: -5.062745571136475
    6. '       ' → logprob: -5.437745571136475
    7. ' 
' → logprob: -5.562745571136475
    8. '<|end|>' → logprob: -5.812745571136475
    9. '            
' → logprob: -6.187745571136475
    10. '   ' → logprob: -6.687745571136475

Token 133: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0699034184217453
    2. '           ' → logprob: -3.0699033737182617
    3. '
' → logprob: -4.819903373718262
    4. ' x' → logprob: -5.319903373718262
    5. '\n' → logprob: -6.069903373718262
    6. ' 
' → logprob: -6.819903373718262
    7. '       ' → logprob: -7.194903373718262
    8. 'x' → logprob: -7.569903373718262
    9. '            
' → logprob: -7.569903373718262
    10. '                
' → logprob: -7.569903373718262

Token 134: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.0007099286303855479
    2. ' x' → logprob: -7.2507100105285645
    3. '	x' → logprob: -18.375709533691406
    4. '           ' → logprob: -20.500709533691406
    5. '               ' → logprob: -20.750709533691406
    6. ')x' → logprob: -22.125709533691406
    7. '   ' → logprob: -22.125709533691406
    8. '_x' → logprob: -22.750709533691406
    9. ' ' → logprob: -23.625709533691406
    10. '
' → logprob: -23.750709533691406

Token 135: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759909749031067
    2. '=' → logprob: -0.8259909749031067
    3. ' ' → logprob: -10.200990676879883
    4. ' +=' → logprob: -11.325990676879883
    5. '+=' → logprob: -14.075990676879883
    6. ')' → logprob: -14.700990676879883
    7. ',' → logprob: -15.075990676879883
    8. ' =
' → logprob: -15.200990676879883
    9. ' |=' → logprob: -15.825990676879883
    10. ']' → logprob: -15.950990676879883

Token 136: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.6326072812080383
    2. ' self' → logprob: -0.7576072812080383
    3. '	self' → logprob: -12.882607460021973
    4. ' ' → logprob: -13.132607460021973
    5. '[self' → logprob: -13.882607460021973
    6. '(self' → logprob: -14.132607460021973
    7. 'parent' → logprob: -14.757607460021973
    8. ' parent' → logprob: -15.507607460021973
    9. '   ' → logprob: -15.632607460021973
    10. '=self' → logprob: -15.757607460021973

Token 137: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -0.000712074339389801
    2. 'parent' → logprob: -7.250711917877197
    3. ' parent' → logprob: -13.875712394714355
    4. '.' → logprob: -14.125712394714355
    5. '	parent' → logprob: -15.500712394714355
    6. '[parent' → logprob: -16.00071144104004
    7. '_parent' → logprob: -16.12571144104004
    8. ',parent' → logprob: -17.25071144104004
    9. ' .' → logprob: -17.75071144104004
    10. '.Parent' → logprob: -18.00071144104004

Token 138: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.00014334988372866064
    2. '[' → logprob: -9.500143051147461
    3. 'x' → logprob: -9.625143051147461
    4. '[
' → logprob: -13.875143051147461
    5. ' x' → logprob: -14.875143051147461
    6. '[self' → logprob: -15.000143051147461
    7. ' [' → logprob: -15.250143051147461
    8. '```' → logprob: -15.625143051147461
    9. '(x' → logprob: -16.12514305114746
    10. '[parent' → logprob: -16.75014305114746

Token 139: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0010510309366509318
    2. ']' → logprob: -7.37605094909668
    3. ' )' → logprob: -8.25105094909668
    4. ')
' → logprob: -9.87605094909668
    5. '<|end|>' → logprob: -10.37605094909668
    6. ')x' → logprob: -10.50105094909668
    7. ')return' → logprob: -10.62605094909668
    8. ')]' → logprob: -12.50105094909668
    9. '<|end|>' → logprob: -12.62605094909668
    10. 'x' → logprob: -12.62605094909668

Token 140: '           ' (ID: 352)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.3619435131549835
    2. '           ' → logprob: -2.111943483352661
    3. '
' → logprob: -2.611943483352661
    4. ' 
' → logprob: -3.361943483352661
    5. '       ' → logprob: -3.736943483352661
    6. 'return' → logprob: -4.11194372177124
    7. '    
' → logprob: -4.98694372177124
    8. '\' → logprob: -5.23694372177124
    9. ' return' → logprob: -5.61194372177124
    10. '   ' → logprob: -5.86194372177124

Token 141: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5553964972496033
    2. '           ' → logprob: -1.430396556854248
    3. ' return' → logprob: -2.305396556854248
    4. 'return' (adapté à ' return') → logprob: -2.805396556854248
    5. '   ' → logprob: -4.180396556854248
    6. ' 
' → logprob: -5.430396556854248
    7. '\n' → logprob: -6.055396556854248
    8. '               ' → logprob: -7.055396556854248
    9. '    ' → logprob: -7.305396556854248
    10. '        ' → logprob: -7.430396556854248

Token 142: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.251930832862854
    2. 'x' → logprob: -1.501930832862854
    3. 'self' → logprob: -14.001931190490723
    4. ' self' → logprob: -14.501931190490723
    5. ' ' → logprob: -14.876931190490723
    6. ' ' → logprob: -16.001930236816406
    7. '	x' → logprob: -17.251930236816406
    8. '(x' → logprob: -19.501930236816406
    9. 'parent' → logprob: -20.251930236816406
    10. 's' → logprob: -20.501930236816406

Token 143: '
        
' (ID: 20417)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5069884657859802
    2. '<|end|>' → logprob: -1.631988525390625
    3. '       ' → logprob: -2.256988525390625
    4. '        
' → logprob: -3.256988525390625
    5. '    
' → logprob: -3.756988525390625
    6. ' 
' → logprob: -4.381988525390625
    7. '  
' → logprob: -4.756988525390625
    8. '\n' → logprob: -6.006988525390625
    9. '   ' → logprob: -6.131988525390625
    10. '<|end|>' → logprob: -6.256988525390625

Token 144: '       ' (ID: 309)
  Prédit: '        
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '        
' → logprob: -0.10093562304973602
    2. '       ' → logprob: -2.725935697555542
    3. '    
' → logprob: -4.225935459136963
    4. '
' → logprob: -4.850935459136963
    5. ' 
' → logprob: -5.850935459136963
    6. '  
' → logprob: -7.100935459136963
    7. '        
        
' → logprob: -7.725935459136963
    8. '   ' → logprob: -7.850935459136963
    9. '```' → logprob: -7.850935459136963
    10. '    ' → logprob: -8.100935935974121

Token 145: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.1923048049211502
    2. '       ' → logprob: -2.192304849624634
    3. '   ' → logprob: -2.942304849624634
    4. ' def' → logprob: -5.692304611206055
    5. '        
' → logprob: -5.817304611206055
    6. '
' → logprob: -6.067304611206055
    7. '    
' → logprob: -6.567304611206055
    8. ' 
' → logprob: -8.692304611206055
    9. '    ' → logprob: -9.567304611206055
    10. ' ' → logprob: -9.567304611206055

Token 146: ' unite' (ID: 96146)
  Prédit: 'union'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'union' → logprob: -0.1669677346944809
    2. ' unite' → logprob: -2.6669676303863525
    3. 'un' → logprob: -3.1669676303863525
    4. ' union' → logprob: -3.1669676303863525
    5. ' unify' → logprob: -10.791967391967773
    6. 'merge' → logprob: -11.666967391967773
    7. 'unit' → logprob: -12.416967391967773
    8. '_union' → logprob: -12.666967391967773
    9. '.union' → logprob: -12.791967391967773
    10. ' un' → logprob: -13.041967391967773

Token 147: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.31339356303215027
    2. '(' → logprob: -1.3133935928344727
    3. ' (' → logprob: -9.688393592834473
    4. '(s' → logprob: -9.813393592834473
    5. 'self' → logprob: -12.063393592834473
    6. '(
' → logprob: -12.438393592834473
    7. '(x' → logprob: -13.313393592834473
    8. '(this' → logprob: -14.313393592834473
    9. '<|end|>' → logprob: -14.438393592834473
    10. ' ' → logprob: -14.688393592834473

Token 148: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009692259482108057
    2. ' ,' → logprob: -7.000969409942627
    3. 'self' → logprob: -10.250968933105469
    4. ',x' → logprob: -11.875968933105469
    5. '(x' → logprob: -11.875968933105469
    6. '(' → logprob: -13.000968933105469
    7. ')' → logprob: -13.000968933105469
    8. '(self' → logprob: -13.125968933105469
    9. ' ' → logprob: -14.750968933105469
    10. ',
' → logprob: -15.250968933105469

Token 149: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.4025375247001648
    2. ' x' → logprob: -1.1525375843048096
    3. 'a' → logprob: -4.2775373458862305
    4. ' a' → logprob: -6.9025373458862305
    5. 'self' → logprob: -7.7775373458862305
    6. ' self' → logprob: -9.02753734588623
    7. 'u' → logprob: -9.77753734588623
    8. ' u' → logprob: -11.02753734588623
    9. ' ' → logprob: -11.15253734588623
    10. ')' → logprob: -11.15253734588623

Token 150: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00012403888104017824
    2. ' ,' → logprob: -9.000123977661133
    3. ',
' → logprob: -15.000123977661133
    4. ',x' → logprob: -16.000123977661133
    5. ')' → logprob: -16.125123977661133
    6. ',

' → logprob: -17.500123977661133
    7. '‌,' → logprob: -18.500123977661133
    8. ',y' → logprob: -18.625123977661133
    9. ',int' → logprob: -19.000123977661133
    10. ' ' → logprob: -19.250123977661133

Token 151: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.3132631182670593
    2. 'y' → logprob: -1.313263177871704
    3. ' ' → logprob: -14.188262939453125
    4. '	y' → logprob: -15.938262939453125
    5. ')y' → logprob: -16.063262939453125
    6. ')' → logprob: -16.313262939453125
    7. ',' → logprob: -16.688262939453125
    8. ',y' → logprob: -16.938262939453125
    9. '    ' → logprob: -17.063262939453125
    10. '<|end|>' → logprob: -17.563262939453125

Token 152: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00018697108316700906
    2. ')' → logprob: -9.000186920166016
    3. '):
' → logprob: -10.000186920166016
    4. ' ):' → logprob: -11.000186920166016
    5. ':' → logprob: -13.750186920166016
    6. '):
' → logprob: -15.625186920166016
    7. ')：' → logprob: -16.250186920166016
    8. ',' → logprob: -16.875186920166016
    9. '):

' → logprob: -17.625186920166016
    10. ' )' → logprob: -17.625186920166016

Token 153: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8552570939064026
    2. '):' → logprob: -0.9802570939064026
    3. '<|end|>' → logprob: -1.9802570343017578
    4. ')' → logprob: -3.230257034301758
    5. '       ' → logprob: -4.230257034301758
    6. ' :' → logprob: -6.605257034301758
    7. '<|end|>' → logprob: -6.855257034301758
    8. '():' → logprob: -6.855257034301758
    9. '):
' → logprob: -7.480257034301758
    10. '   ' → logprob: -7.480257034301758

Token 154: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.034650884568691254
    2. 'x' (adapté à ' x') → logprob: -3.7846508026123047
    3. ' ' → logprob: -4.659650802612305
    4. '            ' → logprob: -6.534650802612305
    5. '        ' → logprob: -9.159650802612305
    6. ' xv' → logprob: -9.659650802612305
    7. '           ' → logprob: -10.034650802612305
    8. ' 
' → logprob: -10.284650802612305
    9. '	x' → logprob: -10.409650802612305
    10. '(x' → logprob: -10.784650802612305

Token 155: '_root' (ID: 29989)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5198999047279358
    2. ',' → logprob: -1.769899845123291
    3. ')' → logprob: -1.894899845123291
    4. '=' → logprob: -3.394899845123291
    5. '_parent' → logprob: -3.519899845123291
    6. ' ,' → logprob: -4.769899845123291
    7. '_root' → logprob: -5.394899845123291
    8. ' )' → logprob: -5.894899845123291
    9. '_' → logprob: -6.019899845123291
    10. ' ' → logprob: -7.394899845123291

Token 156: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25198429822921753
    2. '=' → logprob: -1.5019843578338623
    3. ' ' → logprob: -10.751984596252441
    4. ',' → logprob: -11.251984596252441
    5. ')' → logprob: -11.626984596252441
    6. ' ==' → logprob: -11.751984596252441
    7. ' =
' → logprob: -12.751984596252441
    8. '_' → logprob: -15.876984596252441
    9. '=

' → logprob: -16.126983642578125
    10. ']' → logprob: -16.251983642578125

Token 157: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.029750952497124672
    2. ' self' → logprob: -3.5297510623931885
    3. '(self' → logprob: -15.65475082397461
    4. ' ' → logprob: -16.52975082397461
    5. '[self' → logprob: -16.65475082397461
    6. '	self' → logprob: -16.77975082397461
    7. '   ' → logprob: -17.40475082397461
    8. '=self' → logprob: -17.65475082397461
    9. '       ' → logprob: -18.15475082397461
    10. '           ' → logprob: -18.65475082397461

Token 158: '.find' (ID: 4231)
  Prédit: '.find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.find' → logprob: -0.0008205882040783763
    2. '.' → logprob: -7.750820636749268
    3. 'find' → logprob: -8.00082015991211
    4. ' .' → logprob: -10.37582015991211
    5. '.parent' → logprob: -12.25082015991211
    6. '.
' → logprob: -12.50082015991211
    7. '.findall' → logprob: -12.87582015991211
    8. '._' → logprob: -13.00082015991211
    9. '.f' → logprob: -13.37582015991211
    10. ' find' → logprob: -13.37582015991211

Token 159: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2014157623052597
    2. '(x' → logprob: -1.701415777206421
    3. '(
' → logprob: -13.201416015625
    4. 'x' → logprob: -14.701416015625
    5. ' (' → logprob: -16.076416015625
    6. ')' → logprob: -16.326416015625
    7. '('' → logprob: -17.701416015625
    8. '(

' → logprob: -17.701416015625
    9. '(y' → logprob: -17.951416015625
    10. '()' → logprob: -18.576416015625

Token 160: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.513339445111342e-05
    2. ')
' → logprob: -10.125044822692871
    3. ' )' → logprob: -12.750044822692871
    4. ',' → logprob: -13.375044822692871
    5. ')x' → logprob: -15.250044822692871
    6. '),' → logprob: -15.875044822692871
    7. 'x' → logprob: -17.375045776367188
    8. ')y' → logprob: -17.500045776367188
    9. ')
' → logprob: -18.000045776367188
    10. ']' → logprob: -18.125045776367188

Token 161: '           ' (ID: 352)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0712544396519661
    2. ' ' → logprob: -3.6962544918060303
    3. ',' → logprob: -4.196254253387451
    4. '<|end|>' → logprob: -4.196254253387451
    5. ' if' → logprob: -5.821254253387451
    6. '
' → logprob: -5.946254253387451
    7. ' )' → logprob: -6.571254253387451
    8. '           ' → logprob: -6.696254253387451
    9. '=' → logprob: -7.321254253387451
    10. 'if' → logprob: -7.696254253387451

Token 162: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.03369526192545891
    2. 'y' (adapté à ' y') → logprob: -3.4086952209472656
    3. ' ' → logprob: -10.658695220947266
    4. ')' → logprob: -11.533695220947266
    5. ',y' → logprob: -11.533695220947266
    6. '	y' → logprob: -13.158695220947266
    7. ',' → logprob: -13.533695220947266
    8. ')y' → logprob: -13.533695220947266
    9. ''y' → logprob: -14.408695220947266
    10. '(y' → logprob: -15.158695220947266

Token 163: '_root' (ID: 29989)
  Prédit: '_root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_root' → logprob: -0.00026217024424113333
    2. '_' → logprob: -8.625262260437012
    3. ')_' → logprob: -10.250262260437012
    4. ')' → logprob: -11.250262260437012
    5. ' _' → logprob: -11.375262260437012
    6. 'root' → logprob: -11.375262260437012
    7. '_ROOT' → logprob: -13.250262260437012
    8. '_ro' → logprob: -13.375262260437012
    9. 'Root' → logprob: -14.000262260437012
    10. ''_' → logprob: -14.000262260437012

Token 164: ' =' (ID: 314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02509753592312336
    2. '<|end|>' → logprob: -4.650097370147705
    3. ' )' → logprob: -4.775097370147705
    4. ' ==' → logprob: -6.150097370147705
    5. ' =' → logprob: -6.400097370147705
    6. '=' → logprob: -6.775097370147705
    7. ')==' → logprob: -7.525097370147705
    8. '==' → logprob: -7.650097370147705
    9. '(x' → logprob: -8.775097846984863
    10. ' ' → logprob: -8.900097846984863

Token 165: ' self' (ID: 1051)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.284211128950119
    2. ' y' → logprob: -1.4092111587524414
    3. 'self' → logprob: -6.409211158752441
    4. '(y' → logprob: -7.034211158752441
    5. ' self' → logprob: -7.659211158752441
    6. '<|end|>' → logprob: -11.034211158752441
    7. '[y' → logprob: -11.409211158752441
    8. ')y' → logprob: -11.659211158752441
    9. '(self' → logprob: -11.909211158752441
    10. '	y' → logprob: -12.409211158752441

Token 166: '.find' (ID: 4231)
  Prédit: '.find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.find' → logprob: -0.00603805435821414
    2. 'find' → logprob: -5.131038188934326
    3. '.' → logprob: -9.631037712097168
    4. '(find' → logprob: -11.006037712097168
    5. '(x' → logprob: -11.631037712097168
    6. ')' → logprob: -12.506037712097168
    7. ').' → logprob: -12.506037712097168
    8. ' .' → logprob: -12.756037712097168
    9. ' find' → logprob: -12.881037712097168
    10. '.findall' → logprob: -13.006037712097168

Token 167: '(y' (ID: 14684)
  Prédit: '(y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -4.0484450437361374e-05
    2. '(x' → logprob: -10.750040054321289
    3. '(' → logprob: -11.000040054321289
    4. ')' → logprob: -13.500040054321289
    5. 'y' → logprob: -14.750040054321289
    6. ')(' → logprob: -14.875040054321289
    7. ')y' → logprob: -16.50004005432129
    8. ' (' → logprob: -17.37504005432129
    9. ' y' → logprob: -18.00004005432129
    10. '[y' → logprob: -18.25004005432129

Token 168: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006039004307240248
    2. ')
' → logprob: -5.131039142608643
    3. ' )' → logprob: -9.256038665771484
    4. '):
' → logprob: -12.256038665771484
    5. ' )
' → logprob: -12.381038665771484
    6. ')
' → logprob: -13.131038665771484
    7. ':
' → logprob: -13.506038665771484
    8. '):' → logprob: -14.256038665771484
    9. ')

' → logprob: -14.756038665771484
    10. '))' → logprob: -15.131038665771484

Token 169: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.12834584712982178
    2. ')' → logprob: -3.1283459663391113
    3. '<|end|>' → logprob: -3.1283459663391113
    4. ' ' → logprob: -4.503345966339111
    5. '  
' → logprob: -4.878345966339111
    6. ' 
' → logprob: -5.003345966339111
    7. ',' → logprob: -6.628345966339111
    8. '       ' → logprob: -7.003345966339111
    9. '           ' → logprob: -7.003345966339111
    10. '<|end|>' → logprob: -7.253345966339111

Token 170: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.18305322527885437
    2. '<|end|>' → logprob: -2.4330532550811768
    3. '
' → logprob: -3.1830532550811768
    4. ')' → logprob: -4.183053016662598
    5. ' if' → logprob: -4.808053016662598
    6. ' 
' → logprob: -5.058053016662598
    7. '  ' → logprob: -6.683053016662598
    8. '    ' → logprob: -7.183053016662598
    9. '  
' → logprob: -7.308053016662598
    10. '=' → logprob: -7.558053016662598

Token 171: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.0011726059019565582
    2. 'x' → logprob: -6.7511725425720215
    3. ' ' → logprob: -13.25117301940918
    4. '	x' → logprob: -14.75117301940918
    5. '(x' → logprob: -16.25117301940918
    6. '  ' → logprob: -17.00117301940918
    7. '_x' → logprob: -17.75117301940918
    8. '   ' → logprob: -18.00117301940918
    9. ' ' → logprob: -18.25117301940918
    10. '```' → logprob: -18.56367301940918

Token 172: '_root' (ID: 29989)
  Prédit: '_root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_root' → logprob: -3.5597102396423e-05
    2. '_' → logprob: -10.625035285949707
    3. 'root' → logprob: -11.750035285949707
    4. '_ro' → logprob: -13.875035285949707
    5. '!=' → logprob: -14.375035285949707
    6. '_ROOT' → logprob: -14.500035285949707
    7. 'Root' → logprob: -14.500035285949707
    8. ' !=' → logprob: -14.750035285949707
    9. ' root' → logprob: -16.000036239624023
    10. ' _' → logprob: -16.125036239624023

Token 173: ' ==' (ID: 951)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.7333644032478333
    2. ' ==' → logprob: -0.8583644032478333
    3. '==' → logprob: -2.7333643436431885
    4. '!=' → logprob: -3.4833643436431885
    5. '=' → logprob: -9.35836410522461
    6. ' ' → logprob: -10.23336410522461
    7. ')' → logprob: -11.23336410522461
    8. ' ' → logprob: -12.35836410522461
    9. '[' → logprob: -13.23336410522461
    10. ' =' → logprob: -13.48336410522461

Token 174: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.07889584451913834
    2. ' y' → logprob: -2.5788958072662354
    3. ' ' → logprob: -12.953895568847656
    4. '	y' → logprob: -13.453895568847656
    5. ''y' → logprob: -14.453895568847656
    6. '
' → logprob: -15.078895568847656
    7. 'x' → logprob: -15.328895568847656
    8. '   ' → logprob: -15.453895568847656
    9. '  ' → logprob: -15.578895568847656
    10. '<|end|>' → logprob: -15.828895568847656

Token 175: '_root' (ID: 29989)
  Prédit: '_root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_root' → logprob: -0.0005656610010191798
    2. ':' → logprob: -8.000565528869629
    3. '_' → logprob: -8.625565528869629
    4. '_:' → logprob: -10.625565528869629
    5. 'root' → logprob: -11.125565528869629
    6. '_ROOT' → logprob: -13.250565528869629
    7. '_ro' → logprob: -13.250565528869629
    8. '[root' → logprob: -13.750565528869629
    9. ''_' → logprob: -14.125565528869629
    10. ' root' → logprob: -14.375565528869629

Token 176: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0018302272073924541
    2. ':return' → logprob: -6.751830101013184
    3. ' :' → logprob: -7.376830101013184
    4. ':
' → logprob: -10.751830101013184
    5. ')' → logprob: -11.751830101013184
    6. '):' → logprob: -12.501830101013184
    7. '=' → logprob: -14.626830101013184
    8. ':**' → logprob: -15.876830101013184
    9. ')return' → logprob: -16.2518310546875
    10. '：' → logprob: -16.3768310546875

Token 177: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1536240130662918
    2. '               ' → logprob: -2.0286240577697754
    3. '       ' → logprob: -5.778624057769775
    4. '
' → logprob: -6.278624057769775
    5. ' return' → logprob: -6.278624057769775
    6. ':' → logprob: -6.653624057769775
    7. ' ' → logprob: -7.653624057769775
    8. '   ' → logprob: -7.903624057769775
    9. '            ' → logprob: -7.903624057769775
    10. ' 
' → logprob: -8.028623580932617

Token 178: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.17708469927310944
    2. 'return' (adapté à ' return') → logprob: -1.9270846843719482
    3. '           ' → logprob: -4.302084922790527
    4. '               ' → logprob: -5.927084922790527
    5. '
' → logprob: -8.802084922790527
    6. ' 
' → logprob: -8.802084922790527
    7. '   ' → logprob: -9.302084922790527
    8. '	return' → logprob: -9.802084922790527
    9. '                   ' → logprob: -10.677084922790527
    10. ':return' → logprob: -11.427084922790527

Token 179: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.699342668056488
    2. '
' → logprob: -1.3243427276611328
    3. ' False' → logprob: -1.4493427276611328
    4. ' 
' → logprob: -6.449342727661133
    5. ' True' → logprob: -8.699342727661133
    6. '    
' → logprob: -8.949342727661133
    7. 'True' → logprob: -9.199342727661133
    8. '  
' → logprob: -9.199342727661133
    9. '        
' → logprob: -9.324342727661133
    10. '            
' → logprob: -9.574342727661133

Token 180: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.48963555693626404
    2. '<|end|>' → logprob: -0.9896355867385864
    3. '           ' → logprob: -5.614635467529297
    4. '       ' → logprob: -5.864635467529297
    5. '<|end|>' → logprob: -5.864635467529297
    6. ',' → logprob: -6.239635467529297
    7. '  
' → logprob: -6.864635467529297
    8. '    
' → logprob: -7.239635467529297
    9. '        
' → logprob: -7.739635467529297
    10. '\n' → logprob: -7.864635467529297

Token 181: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1741911768913269
    2. '<|end|>' → logprob: -2.4241912364959717
    3. '       ' → logprob: -3.1741912364959717
    4. '           ' → logprob: -4.549190998077393
    5. '\n' → logprob: -5.549190998077393
    6. '    
' → logprob: -5.674190998077393
    7. '        
' → logprob: -5.799190998077393
    8. '  
' → logprob: -6.049190998077393
    9. '   ' → logprob: -6.549190998077393
    10. ' 
' → logprob: -6.799190998077393

Token 182: ' if' (ID: 538)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.9799763560295105
    2. '            
' → logprob: -1.4799764156341553
    3. '           ' → logprob: -1.6049764156341553
    4. '
' → logprob: -1.9799764156341553
    5. '            ' → logprob: -4.354976177215576
    6. '  
' → logprob: -4.479976177215576
    7. '    
' → logprob: -4.729976177215576
    8. ' ' → logprob: -5.229976177215576
    9. '        
' → logprob: -5.604976177215576
    10. '     
' → logprob: -5.729976177215576

Token 183: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.47408682107925415
    2. 'self' → logprob: -0.9740868210792542
    3. ' ' → logprob: -12.84908676147461
    4. '   ' → logprob: -12.97408676147461
    5. '	self' → logprob: -13.59908676147461
    6. '
' → logprob: -13.72408676147461
    7. '[self' → logprob: -14.09908676147461
    8. '(self' → logprob: -14.34908676147461
    9. 's' → logprob: -15.34908676147461
    10. '_self' → logprob: -15.59908676147461

Token 184: '.size' (ID: 4463)
  Prédit: '.size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.size' → logprob: -6.988221684878226e-06
    2. 'size' → logprob: -12.750006675720215
    3. '.parent' → logprob: -13.000006675720215
    4. '.' → logprob: -13.625006675720215
    5. '.s' → logprob: -15.500006675720215
    6. ' .' → logprob: -15.750006675720215
    7. '.rank' → logprob: -16.75000762939453
    8. '
' → logprob: -17.25000762939453
    9. ' size' → logprob: -17.37500762939453
    10. '<size' → logprob: -17.62500762939453

Token 185: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -1.5690089639974758e-05
    2. '[' → logprob: -11.125015258789062
    3. 'x' → logprob: -14.000015258789062
    4. '[
' → logprob: -16.375015258789062
    5. '[self' → logprob: -18.000015258789062
    6. '[y' → logprob: -19.125015258789062
    7. ' [' → logprob: -19.125015258789062
    8. '```' → logprob: -19.375015258789062
    9. '[a' → logprob: -19.500015258789062
    10. '[s' → logprob: -19.625015258789062

Token 186: '_root' (ID: 29989)
  Prédit: '[x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.0038957991637289524
    2. '_root' → logprob: -5.6288957595825195
    3. '[root' → logprob: -8.62889575958252
    4. 'x' → logprob: -10.37889575958252
    5. '[_' → logprob: -10.62889575958252
    6. 'root' → logprob: -10.87889575958252
    7. '[' → logprob: -10.87889575958252
    8. ']' → logprob: -12.12889575958252
    9. '```' → logprob: -12.50389575958252
    10. '][' → logprob: -12.62889575958252

Token 187: ']' (ID: 60)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.9710478186607361
    2. '<' → logprob: -1.0960478782653809
    3. ']' → logprob: -1.4710478782653809
    4. '[' → logprob: -2.971047878265381
    5. ']<' → logprob: -5.471047878265381
    6. '<x' → logprob: -6.971047878265381
    7. '[x' → logprob: -7.221047878265381
    8. ' ]' → logprob: -8.846047401428223
    9. ')' → logprob: -10.971047401428223
    10. '   ' → logprob: -10.971047401428223

Token 188: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.25217053294181824
    2. ' <' → logprob: -1.5021705627441406
    3. '<x' → logprob: -8.87717056274414
    4. '[' → logprob: -9.37717056274414
    5. '<size' → logprob: -11.62717056274414
    6. '<int' → logprob: -13.25217056274414
    7. '<len' → logprob: -13.37717056274414
    8. '<n' → logprob: -14.25217056274414
    9. '<class' → logprob: -14.37717056274414
    10. ']<' → logprob: -14.87717056274414

Token 189: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.100224569439888
    2. ' self' → logprob: -2.350224494934082
    3. ' ' → logprob: -12.100224494934082
    4. '=self' → logprob: -12.725224494934082
    5. '<|end|>' → logprob: -12.850224494934082
    6. '(self' → logprob: -13.725224494934082
    7. '[self' → logprob: -13.850224494934082
    8. '	self' → logprob: -13.850224494934082
    9. '   ' → logprob: -14.225224494934082
    10. '=' → logprob: -14.475224494934082

Token 190: '.size' (ID: 4463)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.0048997546546161175
    2. ' size' → logprob: -6.004899978637695
    3. '.size' → logprob: -6.254899978637695
    4. '_size' → logprob: -7.629899978637695
    5. '.' → logprob: -12.129899978637695
    6. 's' → logprob: -12.879899978637695
    7. 'y' → logprob: -13.379899978637695
    8. 'x' → logprob: -13.754899978637695
    9. 'ize' → logprob: -14.004899978637695
    10. 'parent' → logprob: -14.129899978637695

Token 191: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -0.048872124403715134
    2. '[x' → logprob: -3.048872232437134
    3. '[' → logprob: -8.173871994018555
    4. 'y' → logprob: -13.923871994018555
    5. ' [' → logprob: -14.048871994018555
    6. '[
' → logprob: -14.673871994018555
    7. 'x' → logprob: -15.173871994018555
    8. '```' → logprob: -15.673871994018555
    9. '[s' → logprob: -17.048871994018555
    10. '[self' → logprob: -17.048871994018555

Token 192: '_root' (ID: 29989)
  Prédit: '_root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_root' → logprob: -0.00015908108616713434
    2. 'root' → logprob: -8.75015926361084
    3. ' root' → logprob: -15.25015926361084
    4. 'Root' → logprob: -16.000158309936523
    5. ']_' → logprob: -16.375158309936523
    6. '_ROOT' → logprob: -16.500158309936523
    7. '[root' → logprob: -16.875158309936523
    8. '_ro' → logprob: -17.750158309936523
    9. '_' → logprob: -17.750158309936523
    10. '-root' → logprob: -18.750158309936523

Token 193: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.034798260778188705
    2. ']:
' → logprob: -3.4097981452941895
    3. ']' → logprob: -7.1597981452941895
    4. ':' → logprob: -8.784798622131348
    5. ' ]' → logprob: -9.034798622131348
    6. ']:
' → logprob: -9.409798622131348
    7. ']:

' → logprob: -12.534798622131348
    8. '[' → logprob: -12.784798622131348
    9. '       ' → logprob: -13.159798622131348
    10. ':
' → logprob: -13.534798622131348

Token 194: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03412013128399849
    2. ' x' → logprob: -4.284120082855225
    3. '           ' → logprob: -4.534120082855225
    4. ')' → logprob: -5.284120082855225
    5. ' ' → logprob: -6.784120082855225
    6. '       ' → logprob: -8.034120559692383
    7. '[' → logprob: -8.034120559692383
    8. 'x' → logprob: -8.159120559692383
    9. ',' → logprob: -8.534120559692383
    10. '<|end|>' → logprob: -8.909120559692383

Token 195: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.022176750004291534
    2. 'x' (adapté à ' x') → logprob: -4.272176742553711
    3. '               ' → logprob: -5.147176742553711
    4. ' y' → logprob: -7.147176742553711
    5. 'y' → logprob: -7.647176742553711
    6. '           ' → logprob: -8.397176742553711
    7. ' self' → logprob: -8.772176742553711
    8. '(x' → logprob: -9.147176742553711
    9. 'self' → logprob: -9.772176742553711
    10. ' (' → logprob: -9.897176742553711

Token 196: '_root' (ID: 29989)
  Prédit: '_root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_root' → logprob: -0.00020222914463374764
    2. '_parent' → logprob: -9.125202178955078
    3. 'root' → logprob: -9.750202178955078
    4. ']_' → logprob: -11.375202178955078
    5. '._' → logprob: -11.875202178955078
    6. '_ro' → logprob: -12.125202178955078
    7. '_' → logprob: -12.875202178955078
    8. ' _' → logprob: -13.125202178955078
    9. ')_' → logprob: -13.500202178955078
    10. '_self' → logprob: -13.625202178955078

Token 197: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011335102841258049
    2. ' ,' → logprob: -4.6363348960876465
    3. '],' → logprob: -6.6363348960876465
    4. ',x' → logprob: -8.511335372924805
    5. ',y' → logprob: -10.636335372924805
    6. ' =' → logprob: -11.386335372924805
    7. '),' → logprob: -11.886335372924805
    8. ' ],' → logprob: -12.261335372924805
    9. ']' → logprob: -12.261335372924805
    10. '=' → logprob: -13.136335372924805

Token 198: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.5759974122047424
    2. 'y' → logprob: -0.8259974122047424
    3. '<|end|>' → logprob: -9.825997352600098
    4. '	y' → logprob: -13.450997352600098
    5. ' ' → logprob: -13.575997352600098
    6. ')y' → logprob: -15.575997352600098
    7. ''y' → logprob: -15.950997352600098
    8. '_y' → logprob: -15.950997352600098
    9. '
' → logprob: -15.950997352600098
    10. '<|end|>' → logprob: -16.075998306274414

Token 199: '_root' (ID: 29989)
  Prédit: '_root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_root' → logprob: -8.470901229884475e-05
    2. 'root' → logprob: -9.50008487701416
    3. '_ro' → logprob: -12.12508487701416
    4. 'Root' → logprob: -13.25008487701416
    5. '_' → logprob: -14.00008487701416
    6. ' root' → logprob: -14.62508487701416
    7. 'oot' → logprob: -15.37508487701416
    8. '_out' → logprob: -15.50008487701416
    9. '_ROOT' → logprob: -15.87508487701416
    10. '[root' → logprob: -16.000083923339844

Token 200: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31330162286758423
    2. '=' → logprob: -1.3133015632629395
    3. '<|end|>' → logprob: -10.688302040100098
    4. ' ' → logprob: -11.188302040100098
    5. ',' → logprob: -14.063302040100098
    6. ' =
' → logprob: -14.563302040100098
    7. ')' → logprob: -14.813302040100098
    8. ' =)' → logprob: -15.063302040100098
    9. '=
' → logprob: -15.313302040100098
    10. ')=' → logprob: -15.563302040100098

Token 201: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.00861468818038702
    2. 'y' → logprob: -4.758614540100098
    3. '	y' → logprob: -16.133615493774414
    4. ' ' → logprob: -18.008615493774414
    5. ' x' → logprob: -18.758615493774414
    6. ' ' → logprob: -18.758615493774414
    7. ',y' → logprob: -18.883615493774414
    8. ')y' → logprob: -19.133615493774414
    9. '_y' → logprob: -19.258615493774414
    10. '(y' → logprob: -19.383615493774414

Token 202: '_root' (ID: 29989)
  Prédit: '_root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_root' → logprob: -0.008915313519537449
    2. 'root' → logprob: -4.758915424346924
    3. '_' → logprob: -9.008914947509766
    4. '_y' → logprob: -9.508914947509766
    5. 'y' → logprob: -10.133914947509766
    6. '_out' → logprob: -10.508914947509766
    7. 'Root' → logprob: -11.508914947509766
    8. '_,' → logprob: -12.258914947509766
    9. '```' → logprob: -12.758914947509766
    10. '[root' → logprob: -12.758914947509766

Token 203: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 204: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.4247340261936188
    2. 'x' → logprob: -1.1747339963912964
    3. ' ' → logprob: -3.299734115600586
    4. '<|end|>' → logprob: -8.799734115600586
    5. ' ' → logprob: -9.799734115600586
    6. ' 
' → logprob: -10.049734115600586
    7. '_' → logprob: -12.424734115600586
    8. '	x' → logprob: -12.799734115600586
    9. ' ‌' → logprob: -13.799734115600586
    10. '  
' → logprob: -14.299734115600586

Token 205: '_root' (ID: 29989)
  Prédit: '_root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_root' → logprob: -0.0004934602184221148
    2. 'root' → logprob: -7.62549352645874
    3. '_' → logprob: -12.750493049621582
    4. '_ro' → logprob: -13.250493049621582
    5. ' root' → logprob: -14.500493049621582
    6. ' _' → logprob: -15.750493049621582
    7. 'Root' → logprob: -16.1254940032959
    8. '[root' → logprob: -16.7504940032959
    9. '_ROOT' → logprob: -17.5004940032959
    10. '-root' → logprob: -18.2504940032959

Token 206: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4304255247116089
    2. '           ' → logprob: -1.4304255247116089
    3. '\n' → logprob: -2.4304256439208984
    4. '            
' → logprob: -4.930425643920898
    5. '' → logprob: -5.680425643920898
    6. ' 
' → logprob: -5.805425643920898
    7. '  
' → logprob: -5.930425643920898
    8. '    
' → logprob: -6.680425643920898
    9. '
' → logprob: -6.805425643920898
    10. '               ' → logprob: -7.180425643920898

Token 207: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3810077905654907
    2. '           ' → logprob: -1.2560077905654907
    3. '\n' → logprob: -4.256007671356201
    4. '            
' → logprob: -4.756007671356201
    5. ' 
' → logprob: -5.881007671356201
    6. '  
' → logprob: -6.256007671356201
    7. '    
' → logprob: -6.631007671356201
    8. '
' → logprob: -7.506007671356201
    9. '               ' → logprob: -7.631007671356201
    10. '' → logprob: -7.881007671356201

Token 208: ' self' (ID: 1051)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.30949917435646057
    2. 'self' (adapté à ' self') → logprob: -2.0594992637634277
    3. ' self' → logprob: -2.0594992637634277
    4. '            
' → logprob: -5.059499263763428
    5. ' 
' → logprob: -6.059499263763428
    6. '       ' → logprob: -7.059499263763428
    7. '               ' → logprob: -7.434499263763428
    8. '  
' → logprob: -8.80949878692627
    9. '        
' → logprob: -9.30949878692627
    10. '          ' → logprob: -9.43449878692627

Token 209: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -0.3491905629634857
    2. '.size' → logprob: -1.224190592765808
    3. 'parent' → logprob: -7.849190711975098
    4. 'size' → logprob: -8.224190711975098
    5. '.' → logprob: -9.849190711975098
    6. ' .' → logprob: -11.974190711975098
    7. ').' → logprob: -12.474190711975098
    8. '_parent' → logprob: -12.599190711975098
    9. '[parent' → logprob: -12.724190711975098
    10. '.parents' → logprob: -13.349190711975098

Token 210: '[y' (ID: 34551)
  Prédit: '[x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -4.3226136767771095e-05
    2. '[' → logprob: -10.125042915344238
    3. '[y' → logprob: -13.625042915344238
    4. '[s' → logprob: -14.125042915344238
    5. '[self' → logprob: -14.250042915344238
    6. ' [' → logprob: -15.000042915344238
    7. 'x' → logprob: -15.750042915344238
    8. '```' → logprob: -17.000043869018555
    9. '\[' → logprob: -17.250043869018555
    10. '[
' → logprob: -18.375043869018555

Token 211: '_root' (ID: 29989)
  Prédit: '_root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_root' → logprob: -0.002923398744314909
    2. 'root' → logprob: -5.877923488616943
    3. '[root' → logprob: -9.252923011779785
    4. '[x' → logprob: -11.627923011779785
    5. ' root' → logprob: -12.377923011779785
    6. '[y' → logprob: -12.877923011779785
    7. '_' → logprob: -13.252923011779785
    8. 'Root' → logprob: -13.252923011779785
    9. 'x' → logprob: -14.127923011779785
    10. '_x' → logprob: -14.752923011779785

Token 212: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0656832754611969
    2. '=' → logprob: -3.065683364868164
    3. ' =' → logprob: -4.190683364868164
    4. ']=' → logprob: -6.690683364868164
    5. ' ]' → logprob: -7.565683364868164
    6. '[' → logprob: -10.440683364868164
    7. ')' → logprob: -10.940683364868164
    8. ' ' → logprob: -12.815683364868164
    9. '[x' → logprob: -13.315683364868164
    10. 'x' → logprob: -14.565683364868164

Token 213: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868776261806488
    2. '=' → logprob: -1.1368776559829712
    3. '=x' → logprob: -12.76187801361084
    4. '[' → logprob: -13.13687801361084
    5. ' ' → logprob: -14.51187801361084
    6. ')' → logprob: -15.26187801361084
    7. '=s' → logprob: -15.26187801361084
    8. ']' → logprob: -15.38687801361084
    9. ' =
' → logprob: -16.386877059936523
    10. '=n' → logprob: -16.386877059936523

Token 214: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.12692810595035553
    2. ' x' → logprob: -2.1269280910491943
    3. '	x' → logprob: -18.751928329467773
    4. '"x' → logprob: -20.751928329467773
    5. ')x' → logprob: -20.751928329467773
    6. '$x' → logprob: -21.876928329467773
    7. '[x' → logprob: -22.251928329467773
    8. '{x' → logprob: -22.501928329467773
    9. '>x' → logprob: -22.626928329467773
    10. '(x' → logprob: -23.001928329467773

Token 215: '_root' (ID: 29989)
  Prédit: '_root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_root' → logprob: -8.506661833962426e-05
    2. 'root' → logprob: -10.37508487701416
    3. '_ro' → logprob: -10.75008487701416
    4. '_parent' → logprob: -11.25008487701416
    5. '_' → logprob: -11.75008487701416
    6. ''_' → logprob: -12.37508487701416
    7. ' _' → logprob: -13.00008487701416
    8. 'x' → logprob: -13.75008487701416
    9. '[root' → logprob: -14.00008487701416
    10. '"_' → logprob: -14.62508487701416

Token 216: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0010875897714868188
    2. 'self' → logprob: -7.001087665557861
    3. '       ' → logprob: -9.251087188720703
    4. ' self' → logprob: -10.751087188720703
    5. '               ' → logprob: -11.251087188720703
    6. '   ' → logprob: -11.251087188720703
    7. '
' → logprob: -11.376087188720703
    8. ',' → logprob: -12.001087188720703
    9. '<|end|>' → logprob: -12.001087188720703
    10. '            
' → logprob: -13.126087188720703

Token 217: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005262265913188457
    2. 'self' → logprob: -8.000526428222656
    3. '       ' → logprob: -9.750526428222656
    4. '               ' → logprob: -9.875526428222656
    5. '            
' → logprob: -10.375526428222656
    6. ' self' → logprob: -10.875526428222656
    7. '<|end|>' → logprob: -11.875526428222656
    8. '                   ' → logprob: -12.250526428222656
    9. '          ' → logprob: -12.375526428222656
    10. '            ' → logprob: -12.875526428222656

Token 218: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.10022058337926865
    2. ' self' → logprob: -2.3502206802368164
    3. '           ' → logprob: -11.600220680236816
    4. '[self' → logprob: -13.725220680236816
    5. ' ' → logprob: -14.350220680236816
    6. 's' → logprob: -14.475220680236816
    7. '	self' → logprob: -14.475220680236816
    8. '            
' → logprob: -14.850220680236816
    9. '
' → logprob: -14.850220680236816
    10. ' 
' → logprob: -14.975220680236816

Token 219: '.size' (ID: 4463)
  Prédit: '.size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.size' → logprob: -3.190178904333152e-05
    2. 'size' → logprob: -10.625031471252441
    3. '.' → logprob: -12.750031471252441
    4. ' .' → logprob: -13.125031471252441
    5. ' size' → logprob: -13.750031471252441
    6. '.parent' → logprob: -14.750031471252441
    7. '_size' → logprob: -15.000031471252441
    8. '	size' → logprob: -15.250031471252441
    9. '.s' → logprob: -15.750031471252441
    10. ':size' → logprob: -16.000032424926758

Token 220: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -3.531315314830863e-06
    2. '[' → logprob: -12.750003814697266
    3. 'x' → logprob: -14.875003814697266
    4. '```' → logprob: -16.500003814697266
    5. ' [' → logprob: -18.000003814697266
    6. '[s' → logprob: -18.250003814697266
    7. ' x' → logprob: -19.000003814697266
    8. '[
' → logprob: -19.250003814697266
    9. '[u' → logprob: -20.750003814697266
    10. '[i' → logprob: -21.375003814697266

Token 221: '_root' (ID: 29989)
  Prédit: '_root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_root' → logprob: -0.0001246348983841017
    2. 'root' → logprob: -9.00012493133545
    3. '[root' → logprob: -14.00012493133545
    4. 'Root' → logprob: -15.25012493133545
    5. '-root' → logprob: -16.875123977661133
    6. ' root' → logprob: -16.875123977661133
    7. '_ROOT' → logprob: -17.625123977661133
    8. '_ro' → logprob: -18.875123977661133
    9. '	root' → logprob: -19.250123977661133
    10. '.root' → logprob: -19.875123977661133

Token 222: ']' (ID: 60)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -1.0281544923782349
    2. '+=' → logprob: -1.0281544923782349
    3. ']+=' → logprob: -1.9031544923782349
    4. ']' → logprob: -2.0281543731689453
    5. '+' → logprob: -5.903154373168945
    6. ' ]' → logprob: -7.528154373168945
    7. '[' → logprob: -7.903154373168945
    8. ']+' → logprob: -8.403154373168945
    9. ')' → logprob: -9.653154373168945
    10. ' +' → logprob: -10.278154373168945

Token 223: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.04886099323630333
    2. ' +=' → logprob: -3.048861026763916
    3. ']+=' → logprob: -8.298860549926758
    4. '[' → logprob: -11.048860549926758
    5. '+' → logprob: -11.923860549926758
    6. '+=(' → logprob: -13.548860549926758
    7. '```' → logprob: -14.798860549926758
    8. '+='' → logprob: -16.048860549926758
    9. ']' → logprob: -16.798860549926758
    10. ']+' → logprob: -16.923860549926758

Token 224: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0067154900170862675
    2. ' self' → logprob: -5.006715297698975
    3. '	self' → logprob: -16.381715774536133
    4. ' ' → logprob: -17.256715774536133
    5. '(self' → logprob: -17.381715774536133
    6. '[self' → logprob: -18.006715774536133
    7. '=self' → logprob: -18.256715774536133
    8. '   ' → logprob: -19.006715774536133
    9. '1' → logprob: -19.256715774536133
    10. '```' → logprob: -19.256715774536133

Token 225: '.size' (ID: 4463)
  Prédit: '.size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.size' → logprob: -0.00033593899570405483
    2. 'size' → logprob: -8.000335693359375
    3. ' size' → logprob: -15.000335693359375
    4. '	size' → logprob: -16.125335693359375
    5. '_size' → logprob: -17.375335693359375
    6. '.' → logprob: -17.500335693359375
    7. '[size' → logprob: -18.125335693359375
    8. '<size' → logprob: -18.875335693359375
    9. ':size' → logprob: -19.000335693359375
    10. ' .' → logprob: -19.125335693359375

Token 226: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -1.7954958821064793e-05
    2. '[x' → logprob: -11.250018119812012
    3. '[' → logprob: -12.250018119812012
    4. 'y' → logprob: -16.125017166137695
    5. ' [' → logprob: -17.500017166137695
    6. '[
' → logprob: -19.125017166137695
    7. '```' → logprob: -20.250017166137695
    8. '(y' → logprob: -20.625017166137695
    9. '[root' → logprob: -20.625017166137695
    10. '[self' → logprob: -20.875017166137695

Token 227: '_root' (ID: 29989)
  Prédit: '_root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_root' → logprob: -0.0031794982496649027
    2. 'root' → logprob: -5.753179550170898
    3. '[root' → logprob: -13.878179550170898
    4. 'Root' → logprob: -15.003179550170898
    5. ' root' → logprob: -15.503179550170898
    6. 'y' → logprob: -15.503179550170898
    7. '_ROOT' → logprob: -16.2531795501709
    8. '_ro' → logprob: -17.5031795501709
    9. '_' → logprob: -17.8781795501709
    10. '_right' → logprob: -18.2531795501709

Token 228: ']
' (ID: 1592)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4050625264644623
    2. '<|end|>' → logprob: -1.4050625562667847
    3. '           ' → logprob: -2.905062437057495
    4. ')' → logprob: -3.780062437057495
    5. '<|end|>' → logprob: -5.655062675476074
    6. ']' → logprob: -6.030062675476074
    7. '       ' → logprob: -6.530062675476074
    8. ')
' → logprob: -7.405062675476074
    9. '               ' → logprob: -7.905062675476074
    10. '            
' → logprob: -8.280062675476074

Token 229: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0029712803661823273
    2. 'self' → logprob: -6.752971172332764
    3. '       ' → logprob: -7.502971172332764
    4. '
' → logprob: -7.752971172332764
    5. '   ' → logprob: -9.002971649169922
    6. '            
' → logprob: -9.002971649169922
    7. '\' → logprob: -9.127971649169922
    8. '\n' → logprob: -9.377971649169922
    9. '    
' → logprob: -9.377971649169922
    10. ' self' → logprob: -9.877971649169922

Token 230: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.3223901093006134
    2. ' self' → logprob: -1.572390079498291
    3. '           ' → logprob: -2.697390079498291
    4. '
' → logprob: -8.44739055633545
    5. ' 
' → logprob: -8.82239055633545
    6. '   ' → logprob: -9.19739055633545
    7. '               ' → logprob: -9.32239055633545
    8. '       ' → logprob: -9.82239055633545
    9. '            
' → logprob: -11.07239055633545
    10. '	self' → logprob: -11.44739055633545

Token 231: '.components' (ID: 41872)
  Prédit: '.components'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.components' → logprob: -1.6047699318733066e-05
    2. '.' → logprob: -11.250016212463379
    3. 'components' → logprob: -13.125016212463379
    4. ' .' → logprob: -15.375016212463379
    5. '.features' → logprob: -15.500016212463379
    6. '.Components' → logprob: -15.750016212463379
    7. '.comp' → logprob: -16.000015258789062
    8. '.parts' → logprob: -16.750015258789062
    9. '.component' → logprob: -17.125015258789062
    10. '`.' → logprob: -17.375015258789062

Token 232: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.07917045801877975
    2. '-=' → logprob: -2.8291704654693604
    3. '-' → logprob: -4.079170227050781
    4. '<|end|>' → logprob: -9.454170227050781
    5. '   ' → logprob: -10.829170227050781
    6. ' -' → logprob: -10.954170227050781
    7. '```' → logprob: -11.954170227050781
    8. ' ' → logprob: -12.704170227050781
    9. ' ' → logprob: -12.829170227050781
    10. '  ' → logprob: -13.329170227050781

Token 233: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -16.875
    3. '<|end|>' → logprob: -17.125
    4. '```' → logprob: -19.375
    5. '１' → logprob: -20.625
    6. '   ' → logprob: -21.0
    7. '۱' → logprob: -21.125
    8. '>' → logprob: -22.5
    9. '১' → logprob: -22.625
    10. '१' → logprob: -22.875

Token 234: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '<|end|>' → logprob: -16.875
    3. ' ' → logprob: -18.875
    4. '```' → logprob: -20.25
    5. '１' → logprob: -21.125
    6. '۱' → logprob: -21.5
    7. '   ' → logprob: -22.75
    8. '>' → logprob: -23.0
    9. '
' → logprob: -23.0

Token 235: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 236: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 237: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04303264990448952
    2. '       ' → logprob: -4.418032646179199
    3. '   ' → logprob: -4.793032646179199
    4. ' True' → logprob: -5.043032646179199
    5. '		' → logprob: -5.793032646179199
    6. ' return' → logprob: -5.918032646179199
    7. 'True' → logprob: -6.293032646179199
    8. 'return' (adapté à ' return') → logprob: -6.418032646179199
    9. '               ' → logprob: -6.418032646179199
    10. '	return' → logprob: -6.918032646179199

Token 238: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.004078401252627373
    2. ' True' → logprob: -5.504078388214111
    3. '(True' → logprob: -17.004077911376953
    4. '=True' → logprob: -18.129077911376953
    5. 'Tr' → logprob: -18.629077911376953
    6. '
' → logprob: -21.129077911376953
    7. ' ' → logprob: -21.254077911376953
    8. 'None' → logprob: -21.629077911376953
    9. '_true' → logprob: -21.879077911376953
    10. '.True' → logprob: -22.004077911376953

Token 239: '
        
' (ID: 20417)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6302688121795654
    2. '<|end|>' → logprob: -0.8802688121795654
    3. '    
' → logprob: -3.7552688121795654
    4. '   ' → logprob: -4.0052690505981445
    5. '<|end|>' → logprob: -6.0052690505981445
    6. '\n' → logprob: -6.0052690505981445
    7. '

' → logprob: -6.3802690505981445
    8. '```' → logprob: -7.2552690505981445
    9. '       ' → logprob: -7.3802690505981445
    10. 'newline' → logprob: -7.5052690505981445

Token 240: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35550224781036377
    2. '    
' → logprob: -1.3555022478103638
    3. '        
' → logprob: -4.355502128601074
    4. '       ' → logprob: -4.980502128601074
    5. '<|end|>' → logprob: -5.105502128601074
    6. '
' → logprob: -5.230502128601074
    7. 'def' → logprob: -5.605502128601074
    8. '    ' → logprob: -6.105502128601074
    9. '  
' → logprob: -6.855502128601074
    10. ' 
' → logprob: -7.855502128601074

Token 241: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.5988907217979431
    2. 'uf' → logprob: -0.9738907217979431
    3. '   ' → logprob: -2.723890781402588
    4. '    
' → logprob: -5.723890781402588
    5. 'u' → logprob: -7.098890781402588
    6. ' def' → logprob: -7.473890781402588
    7. '       ' → logprob: -7.723890781402588
    8. ' uf' → logprob: -7.848890781402588
    9. '        
' → logprob: -7.973890781402588
    10. '#' → logprob: -7.973890781402588

Token 242: ' same' (ID: 2684)
  Prédit: ' same'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' same' → logprob: -0.8719006776809692
    2. 'same' → logprob: -1.9969006776809692
    3. ' connected' → logprob: -2.3719005584716797
    4. ' is' → logprob: -2.3719005584716797
    5. 'get' → logprob: -2.6219005584716797
    6. ' get' → logprob: -2.6219005584716797
    7. 'is' → logprob: -2.8719005584716797
    8. 'connected' → logprob: -4.37190055847168
    9. 'component' → logprob: -4.49690055847168
    10. ' component' → logprob: -4.62190055847168

Token 243: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.42931434512138367
    2. '(' → logprob: -1.054314374923706
    3. '(x' → logprob: -8.554314613342285
    4. '_' → logprob: -9.054314613342285
    5. '_parent' → logprob: -9.804314613342285
    6. ' (' → logprob: -10.054314613342285
    7. '(a' → logprob: -10.054314613342285
    8. 'self' → logprob: -10.304314613342285
    9. '(s' → logprob: -10.554314613342285
    10. '(
' → logprob: -10.929314613342285

Token 244: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3544124960899353
    2. ')(' → logprob: -1.97941255569458
    3. '(self' → logprob: -2.22941255569458
    4. '(x' → logprob: -3.72941255569458
    5. '(' → logprob: -3.85441255569458
    6. ')' → logprob: -5.35441255569458
    7. ' (' → logprob: -6.97941255569458
    8. ' ' → logprob: -7.60441255569458
    9. ' ,' → logprob: -7.60441255569458
    10. 'self' → logprob: -8.729412078857422

Token 245: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.014367637224495411
    2. ' x' → logprob: -4.264367580413818
    3. 'a' → logprob: -8.514368057250977
    4. ' a' → logprob: -12.764368057250977
    5. ' ' → logprob: -15.264368057250977
    6. ')x' → logprob: -15.514368057250977
    7. ')' → logprob: -15.889368057250977
    8. 'u' → logprob: -16.889368057250977
    9. '	x' → logprob: -16.889368057250977
    10. '   ' → logprob: -17.889368057250977

Token 246: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.2020991056924686e-05
    2. ' ,' → logprob: -10.375032424926758
    3. ',y' → logprob: -14.625032424926758
    4. ',x' → logprob: -15.125032424926758
    5. ',
' → logprob: -18.750032424926758
    6. ' ' → logprob: -18.875032424926758
    7. ',int' → logprob: -19.250032424926758
    8. '‌,' → logprob: -19.375032424926758
    9. '   ' → logprob: -19.750032424926758
    10. ',s' → logprob: -20.125032424926758

Token 247: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0031777136027812958
    2. ' y' → logprob: -5.753177642822266
    3. '	y' → logprob: -17.378177642822266
    4. '<|end|>' → logprob: -18.753177642822266
    5. '   ' → logprob: -19.128177642822266
    6. ')y' → logprob: -19.253177642822266
    7. ' ' → logprob: -19.753177642822266
    8. ',y' → logprob: -20.628177642822266
    9. '    ' → logprob: -20.628177642822266
    10. ''y' → logprob: -20.628177642822266

Token 248: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.018177567049860954
    2. ')' → logprob: -4.018177509307861
    3. '):
' → logprob: -11.14317798614502
    4. ' ):' → logprob: -11.51817798614502
    5. ',' → logprob: -13.01817798614502
    6. ':' → logprob: -15.01817798614502
    7. ' )' → logprob: -15.64317798614502
    8. '   ' → logprob: -15.76817798614502
    9. ')：' → logprob: -16.018177032470703
    10. '),' → logprob: -16.518177032470703

Token 249: '           ' (ID: 352)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.20839989185333252
    2. '(self' → logprob: -1.7083998918533325
    3. ',' → logprob: -6.083399772644043
    4. ' self' → logprob: -6.833399772644043
    5. 'self' → logprob: -6.958399772644043
    6. ')' → logprob: -6.958399772644043
    7. '(x' → logprob: -7.583399772644043
    8. ' (' → logprob: -7.833399772644043
    9. '):' → logprob: -8.208399772644043
    10. '(s' → logprob: -9.333399772644043

Token 250: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.5787404775619507
    2. 'return' (adapté à ' return') → logprob: -0.8287404775619507
    3. 'self' → logprob: -6.32874059677124
    4. ' self' → logprob: -6.95374059677124
    5. '           ' → logprob: -10.328740119934082
    6. '       ' → logprob: -10.703740119934082
    7. '   ' → logprob: -13.953740119934082
    8. ' ' → logprob: -14.828740119934082
    9. '    ' → logprob: -14.828740119934082
    10. '        ' → logprob: -15.453740119934082

Token 251: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0788913294672966
    2. ' self' → logprob: -2.5788912773132324
    3. '(self' → logprob: -14.07889175415039
    4. '[self' → logprob: -14.20389175415039
    5. '	self' → logprob: -16.70389175415039
    6. '
' → logprob: -17.57889175415039
    7. '```' → logprob: -18.57889175415039
    8. '   ' → logprob: -18.82889175415039
    9. '=self' → logprob: -19.57889175415039
    10. ' ' → logprob: -20.07889175415039

Token 252: '.find' (ID: 4231)
  Prédit: '.find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.find' → logprob: -4.394135612528771e-05
    2. '.' → logprob: -10.250043869018555
    3. '.parent' → logprob: -12.375043869018555
    4. 'find' → logprob: -13.125043869018555
    5. ' .' → logprob: -13.500043869018555
    6. '.same' → logprob: -14.625043869018555
    7. '.findall' → logprob: -15.250043869018555
    8. ').' → logprob: -17.125043869018555
    9. '.get' → logprob: -17.500043869018555
    10. '.Find' → logprob: -18.250043869018555

Token 253: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.2519322335720062
    2. '(' → logprob: -1.5019322633743286
    3. ' (' → logprob: -12.876932144165039
    4. '(
' → logprob: -14.876932144165039
    5. '((' → logprob: -15.876932144165039
    6. '(y' → logprob: -16.87693214416504
    7. '("("' → logprob: -17.12693214416504
    8. 'x' → logprob: -17.25193214416504
    9. '()' → logprob: -18.12693214416504
    10. '(s' → logprob: -18.37693214416504

Token 254: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10289936512708664
    2. '(x' → logprob: -2.3528993129730225
    3. '(' → logprob: -6.227899551391602
    4. ')==' → logprob: -7.352899551391602
    5. ' )' → logprob: -10.477899551391602
    6. 'x' → logprob: -10.602899551391602
    7. '==' → logprob: -11.977899551391602
    8. ',' → logprob: -12.852899551391602
    9. '(y' → logprob: -12.977899551391602
    10. '[' → logprob: -13.727899551391602

Token 255: ' ==' (ID: 951)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.5078485608100891
    2. 'x' → logprob: -2.2578485012054443
    3. ' y' → logprob: -2.6328485012054443
    4. '(' → logprob: -2.7578485012054443
    5. ' x' → logprob: -2.8828485012054443
    6. ' ==' → logprob: -3.3828485012054443
    7. '==' → logprob: -3.5078485012054443
    8. ')' → logprob: -4.132848739624023
    9. ' ' → logprob: -4.882848739624023
    10. 'y' → logprob: -5.007848739624023

Token 256: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.01855127513408661
    2. ' self' → logprob: -4.018551349639893
    3. 'y' → logprob: -7.893551349639893
    4. ' y' → logprob: -11.643550872802734
    5. '(self' → logprob: -11.893550872802734
    6. '       ' → logprob: -12.393550872802734
    7. '           ' → logprob: -12.518550872802734
    8. '   ' → logprob: -13.143550872802734
    9. '    ' → logprob: -14.518550872802734
    10. '	self' → logprob: -14.518550872802734

Token 257: '.find' (ID: 4231)
  Prédit: '.find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.find' → logprob: -0.10068321973085403
    2. 'find' → logprob: -2.3506832122802734
    3. '.' → logprob: -7.850683212280273
    4. '(x' → logprob: -11.100683212280273
    5. '(y' → logprob: -11.225683212280273
    6. 'y' → logprob: -11.350683212280273
    7. ' find' → logprob: -11.475683212280273
    8. '.findall' → logprob: -11.475683212280273
    9. '(find' → logprob: -11.850683212280273
    10. ')' → logprob: -12.225683212280273

Token 258: '(y' (ID: 14684)
  Prédit: '(y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.009438951499760151
    2. 'y' → logprob: -4.759438991546631
    3. '(' → logprob: -7.134438991546631
    4. ' y' → logprob: -10.759438514709473
    5. '(x' → logprob: -13.259438514709473
    6. ' (' → logprob: -13.509438514709473
    7. '(
' → logprob: -14.009438514709473
    8. '(self' → logprob: -15.009438514709473
    9. '(s' → logprob: -15.509438514709473
    10. ')' → logprob: -15.759438514709473

Token 259: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.587483221665025e-05
    2. ')
' → logprob: -9.750065803527832
    3. ' )' → logprob: -12.000065803527832
    4. '<|end|>' → logprob: -14.875065803527832
    5. '   ' → logprob: -15.000065803527832
    6. ')return' → logprob: -15.625065803527832
    7. '       ' → logprob: -15.750065803527832
    8. ')

' → logprob: -16.00006675720215
    9. '}' → logprob: -16.62506675720215
    10. ' ' → logprob: -16.75006675720215

Token 260: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31207332015037537
    2. '<|end|>' → logprob: -1.9370733499526978
    3. '    
' → logprob: -2.687073230743408
    4. 'def' → logprob: -3.187073230743408
    5. '
' → logprob: -5.187073230743408
    6. '        
' → logprob: -6.562073230743408
    7. '  
' → logprob: -6.687073230743408
    8. '    ' → logprob: -7.187073230743408
    9. '<|end|>' → logprob: -7.187073230743408
    10. ' ' → logprob: -7.312073230743408

Token 261: ' uf' (ID: 35772)
  Prédit: 'uf'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uf' (adapté à ' uf') → logprob: -0.02776147983968258
    2. '   ' → logprob: -3.777761459350586
    3. ' uf' → logprob: -6.152761459350586
    4. 'n' → logprob: -7.277761459350586
    5. '    
' → logprob: -7.402761459350586
    6. 'u' → logprob: -7.527761459350586
    7. '#' → logprob: -9.652761459350586
    8. 'UF' → logprob: -9.652761459350586
    9. 'N' → logprob: -9.777761459350586
    10. 'union' → logprob: -10.152761459350586

Token 262: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20628932118415833
    2. '=' → logprob: -1.706289291381836
    3. '(' → logprob: -5.331289291381836
    4. '.' → logprob: -11.081289291381836
    5. '=(' → logprob: -12.706289291381836
    6. ' =(' → logprob: -12.831289291381836
    7. ' (' → logprob: -13.581289291381836
    8. ')' → logprob: -14.081289291381836
    9. '(V' → logprob: -14.331289291381836
    10. ' ' → logprob: -14.456289291381836

Token 263: ' Union' (ID: 14746)
  Prédit: 'Union'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Union' → logprob: -0.005234713666141033
    2. ' Union' → logprob: -5.255234718322754
    3. '   ' → logprob: -14.005234718322754
    4. ' ' → logprob: -17.130233764648438
    5. 'union' → logprob: -17.505233764648438
    6. '_union' → logprob: -17.755233764648438
    7. ' union' → logprob: -17.880233764648438
    8. '  ' → logprob: -18.005233764648438
    9. ''Union' → logprob: -18.505233764648438
    10. '    ' → logprob: -18.630233764648438

Token 264: 'Find' (ID: 11437)
  Prédit: 'Find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Find' → logprob: -0.016482505947351456
    2. 'F' → logprob: -4.266482353210449
    3. '   ' → logprob: -6.766482353210449
    4. 'Fit' → logprob: -7.391482353210449
    5. '[' → logprob: -8.76648235321045
    6. 'Fi' → logprob: -9.39148235321045
    7. 'Fold' → logprob: -9.76648235321045
    8. 'Fill' → logprob: -10.26648235321045
    9. '-F' → logprob: -10.39148235321045
    10. ')' → logprob: -11.26648235321045

Token 265: '(V' (ID: 16949)
  Prédit: '(V'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(V' → logprob: -1.7835754988482222e-05
    2. '(' → logprob: -11.000018119812012
    3. '(len' → logprob: -14.500018119812012
    4. 'V' → logprob: -14.750018119812012
    5. '(
' → logprob: -15.875018119812012
    6. ')' → logprob: -17.750017166137695
    7. ' (' → logprob: -17.750017166137695
    8. '(v' → logprob: -18.250017166137695
    9. '((' → logprob: -18.625017166137695
    10. ')(' → logprob: -18.875017166137695

Token 266: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.729906196298543e-06
    2. ' )' → logprob: -11.750009536743164
    3. ')
' → logprob: -13.375009536743164
    4. '))' → logprob: -16.250009536743164
    5. ')`' → logprob: -17.375009536743164
    6. ')

' → logprob: -17.500009536743164
    7. ')#' → logprob: -17.750009536743164
    8. '   ' → logprob: -18.125009536743164
    9. '),' → logprob: -18.375009536743164
    10. ')V' → logprob: -18.375009536743164

Token 267: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6924108266830444
    2. '   ' → logprob: -0.8174108266830444
    3. '    
' → logprob: -3.442410945892334
    4. ' for' → logprob: -4.692410945892334
    5. 'for' → logprob: -5.067410945892334
    6. ' 
' → logprob: -5.442410945892334
    7. '\n' → logprob: -5.567410945892334
    8. '  
' → logprob: -7.192410945892334
    9. '   
' → logprob: -7.692410945892334
    10. '' → logprob: -7.817410945892334

Token 268: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.006970398128032684
    2. ' for' → logprob: -5.256970405578613
    3. 'edges' → logprob: -6.881970405578613
    4. '   ' → logprob: -7.381970405578613
    5. 'f' → logprob: -10.756970405578613
    6. 'edge' → logprob: -11.631970405578613
    7. '#' (adapté à ' #') → logprob: -11.756970405578613
    8. ' edges' → logprob: -12.006970405578613
    9. 'i' → logprob: -12.631970405578613
    10. 'pairs' → logprob: -12.756970405578613

Token 269: ' Build' (ID: 10885)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11403588950634003
    2. ' for' → logprob: -2.2390358448028564
    3. '   ' → logprob: -6.8640360832214355
    4. '#' → logprob: -9.739035606384277
    5. 'f' → logprob: -10.239035606384277
    6. ' #' → logprob: -10.989035606384277
    7. ' ' → logprob: -11.239035606384277
    8. 'edges' → logprob: -12.364035606384277
    9. 'def' → logprob: -12.614035606384277
    10. '	for' → logprob: -12.864035606384277

Token 270: ' connected' (ID: 12079)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.24437931180000305
    2. 'for' → logprob: -1.8693792819976807
    3. ' graph' → logprob: -3.2443792819976807
    4. ' edges' → logprob: -4.36937952041626
    5. '   ' → logprob: -6.24437952041626
    6. ' ' → logprob: -6.36937952041626
    7. ' a' → logprob: -6.74437952041626
    8. '_edges' → logprob: -6.74437952041626
    9. 'graph' → logprob: -6.86937952041626
    10. '_' → logprob: -6.99437952041626

Token 271: ' components' (ID: 10674)
  Prédit: '_components'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_components' → logprob: -0.46689572930336
    2. '_' → logprob: -1.4668956995010376
    3. 'ness' → logprob: -2.966895818710327
    4. '_edges' → logprob: -3.341895818710327
    5. ' components' → logprob: -3.966895818710327
    6. 'components' → logprob: -4.216895580291748
    7. '   ' → logprob: -4.716895580291748
    8. '_nodes' → logprob: -4.841895580291748
    9. ' _' → logprob: -6.966895580291748
    10. ' ' → logprob: -7.716895580291748

Token 272: ' from' (ID: 591)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09005996584892273
    2. '   ' → logprob: -2.715059995651245
    3. ' for' → logprob: -4.340059757232666
    4. 'for' → logprob: -5.215059757232666
    5. '    
' → logprob: -6.840059757232666
    6. '  
' → logprob: -8.965060234069824
    7. '<|end|>' → logprob: -9.840060234069824
    8. '\n' → logprob: -10.090060234069824
    9. '	for' → logprob: -10.340060234069824
    10. '   
' → logprob: -10.465060234069824

Token 273: ' input' (ID: 3422)
  Prédit: ' graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.6685327887535095
    2. 'graph' → logprob: -0.7935327887535095
    3. 'range' → logprob: -4.168532848358154
    4. ' range' → logprob: -4.168532848358154
    5. ' the' → logprob: -5.918532848358154
    6. 'the' → logprob: -6.793532848358154
    7. ' edges' → logprob: -9.043532371520996
    8. '	graph' → logprob: -9.168532371520996
    9. 'edges' → logprob: -10.043532371520996
    10. '(graph' → logprob: -10.168532371520996

Token 274: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1386725902557373
    2. 'for' → logprob: -2.8886725902557373
    3. ' for' → logprob: -3.0136725902557373
    4. '
' → logprob: -3.7636725902557373
    5. '    
' → logprob: -6.763672828674316
    6. '	for' → logprob: -8.638672828674316
    7. '  ' → logprob: -9.763672828674316
    8. '    ' → logprob: -10.513672828674316
    9. '  
' → logprob: -10.888672828674316
    10. '<|end|>' → logprob: -10.888672828674316

Token 275: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04964764416217804
    2. '
' → logprob: -3.299647569656372
    3. ' for' → logprob: -4.799647808074951
    4. 'for' → logprob: -6.049647808074951
    5. '    
' → logprob: -7.174647808074951
    6. '    ' → logprob: -10.174647331237793
    7. '```' → logprob: -10.174647331237793
    8. '  
' → logprob: -10.674647331237793
    9. '  ' → logprob: -10.799647331237793
    10. '\n' → logprob: -11.049647331237793

Token 276: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4997491240501404
    2. 'for' (adapté à ' for') → logprob: -1.2497491836547852
    3. '   ' → logprob: -2.249749183654785
    4. '
' → logprob: -6.874749183654785
    5. '    
' → logprob: -8.499749183654785
    6. ' 
' → logprob: -10.874749183654785
    7. '```' → logprob: -11.249749183654785
    8. '\n' → logprob: -11.374749183654785
    9. '	for' → logprob: -11.624749183654785
    10. ' ' → logprob: -11.874749183654785

Token 277: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.03246193006634712
    2. 'i' → logprob: -3.6574618816375732
    3. ' u' → logprob: -5.657462120056152
    4. ' v' → logprob: -6.157462120056152
    5. 'v' → logprob: -8.157462120056152
    6. 'u' → logprob: -9.032462120056152
    7. '   ' → logprob: -9.407462120056152
    8. ' y' → logprob: -11.157462120056152
    9. 'a' → logprob: -12.407462120056152
    10. ' x' → logprob: -12.532462120056152

Token 278: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005290681030601263
    2. 'in' → logprob: -5.380290508270264
    3. ' ' → logprob: -7.505290508270264
    4. ',' → logprob: -9.630290985107422
    5. ' ,' → logprob: -11.380290985107422
    6. ' i' → logprob: -11.505290985107422
    7. '	in' → logprob: -12.005290985107422
    8. '  ' → logprob: -12.255290985107422
    9. 'n' → logprob: -12.380290985107422
    10. '0' → logprob: -12.755290985107422

Token 279: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.10020720958709717
    2. 'range' → logprob: -2.3502073287963867
    3. ' ' → logprob: -15.100207328796387
    4. '(range' → logprob: -16.10020637512207
    5. '	range' → logprob: -16.10020637512207
    6. ' xrange' → logprob: -17.35020637512207
    7. '  ' → logprob: -18.35020637512207
    8. ' rang' → logprob: -18.35020637512207
    9. '```' → logprob: -18.47520637512207
    10. ' ran' → logprob: -18.60020637512207

Token 280: '(V' (ID: 16949)
  Prédit: '(V'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(V' → logprob: -0.0006199848721735179
    2. '(' → logprob: -7.750619888305664
    3. 'V' → logprob: -8.625619888305664
    4. '1' → logprob: -11.750619888305664
    5. '   ' → logprob: -13.750619888305664
    6. '(len' → logprob: -15.125619888305664
    7. '(
' → logprob: -16.375619888305664
    8. '	V' → logprob: -16.500619888305664
    9. ' V' → logprob: -16.625619888305664
    10. ')' → logprob: -16.625619888305664

Token 281: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.14314574003219604
    2. '):
' → logprob: -2.018145799636841
    3. ' ):' → logprob: -7.893145561218262
    4. ')' → logprob: -10.143145561218262
    5. '   ' → logprob: -11.018145561218262
    6. '-' → logprob: -11.018145561218262
    7. ' ):
' → logprob: -11.018145561218262
    8. '):
' → logprob: -13.018145561218262
    9. '+' → logprob: -13.393145561218262
    10. ':' → logprob: -13.643145561218262

Token 282: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.45698246359825134
    2. ' for' → logprob: -1.0819824934005737
    3. '       ' → logprob: -3.706982374191284
    4. 'for' → logprob: -6.206982612609863
    5. '	for' → logprob: -6.831982612609863
    6. ' ' → logprob: -9.581982612609863
    7. '    ' → logprob: -9.831982612609863
    8. '  ' → logprob: -10.331982612609863
    9. '<|end|>' → logprob: -10.456982612609863
    10. ',' → logprob: -10.831982612609863

Token 283: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.16529223322868347
    2. 'for' (adapté à ' for') → logprob: -1.9152922630310059
    3. '   ' → logprob: -5.290292263031006
    4. '	for' → logprob: -12.165291786193848
    5. '       ' → logprob: -12.665291786193848
    6. '    ' → logprob: -12.665291786193848
    7. ' ' → logprob: -13.040291786193848
    8. '  ' → logprob: -14.290291786193848
    9. '_for' → logprob: -15.540291786193848
    10. '1' → logprob: -16.790292739868164

Token 284: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.2084627002477646
    2. ' range' → logprob: -1.9584627151489258
    3. 'j' → logprob: -3.583462715148926
    4. 'range' → logprob: -3.958462715148926
    5. ' v' → logprob: -9.458462715148926
    6. '(range' → logprob: -10.083462715148926
    7. 'v' → logprob: -10.958462715148926
    8. '   ' → logprob: -11.208462715148926
    9. ' V' → logprob: -11.458462715148926
    10. ' in' → logprob: -11.458462715148926

Token 285: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.05679653212428093
    2. 'in' → logprob: -2.9317965507507324
    3. ' ' → logprob: -6.806796550750732
    4. '(' → logprob: -8.056796073913574
    5. '   ' → logprob: -9.181796073913574
    6. ' i' → logprob: -9.306796073913574
    7. '	in' → logprob: -9.306796073913574
    8. ' range' → logprob: -9.931796073913574
    9. '    ' → logprob: -9.931796073913574
    10. 'range' → logprob: -10.806796073913574

Token 286: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.3888076841831207
    2. 'range' → logprob: -1.1388076543807983
    3. '(range' → logprob: -6.263807773590088
    4. '(i' → logprob: -11.51380729675293
    5. '(V' → logprob: -11.76380729675293
    6. '(' → logprob: -12.01380729675293
    7. ' i' → logprob: -12.51380729675293
    8. ' (' → logprob: -13.51380729675293
    9. '	range' → logprob: -14.26380729675293
    10. 'i' → logprob: -14.76380729675293

Token 287: '(i' (ID: 3649)
  Prédit: '(V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(V' → logprob: -0.06914657354354858
    2. '(i' → logprob: -2.8191466331481934
    3. '(' → logprob: -4.944146633148193
    4. ' (' → logprob: -11.819146156311035
    5. '(j' → logprob: -11.944146156311035
    6. ')' → logprob: -12.444146156311035
    7. 'i' → logprob: -12.569146156311035
    8. '(
' → logprob: -13.444146156311035
    9. '(v' → logprob: -14.069146156311035
    10. '(I' → logprob: -14.194146156311035

Token 288: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.016330650076270103
    2. ' +' → logprob: -4.391330718994141
    3. '1' → logprob: -5.766330718994141
    4. ',' → logprob: -8.39133071899414
    5. ')' → logprob: -8.89133071899414
    6. ' ,' → logprob: -9.26633071899414
    7. '   ' → logprob: -9.64133071899414
    8. ' ' → logprob: -9.89133071899414
    9. '+)' → logprob: -10.01633071899414
    10. '+,' → logprob: -11.26633071899414

Token 289: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.1318875446449965e-05
    2. ' ' → logprob: -10.125041007995605
    3. ' V' → logprob: -15.125041007995605
    4. 'V' → logprob: -15.125041007995605
    5. ')' → logprob: -15.250041007995605
    6. '   ' → logprob: -15.875041007995605
    7. '0' → logprob: -16.625041961669922
    8. '(V' → logprob: -16.875041961669922
    9. '(' → logprob: -17.250041961669922
    10. 'i' → logprob: -17.375041961669922

Token 290: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09172756224870682
    2. ' ,' → logprob: -2.4667274951934814
    3. '):' → logprob: -6.8417277336120605
    4. ',V' → logprob: -6.8417277336120605
    5. ' ):' → logprob: -8.341727256774902
    6. ' V' → logprob: -8.716727256774902
    7. 'V' → logprob: -8.841727256774902
    8. ')' → logprob: -10.591727256774902
    9. '):
' → logprob: -11.091727256774902
    10. ' )' → logprob: -11.591727256774902

Token 291: ' V' (ID: 631)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.011052886955440044
    2. ' V' → logprob: -4.511053085327148
    3. '   ' → logprob: -12.386053085327148
    4. ' ' → logprob: -15.136053085327148
    5. ')' → logprob: -15.386053085327148
    6. '	V' → logprob: -15.636053085327148
    7. ')V' → logprob: -15.761053085327148
    8. '    ' → logprob: -17.13605308532715
    9. '```' → logprob: -17.13605308532715
    10. '       ' → logprob: -17.38605308532715

Token 292: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004631976597011089
    2. '):
' → logprob: -5.379631996154785
    3. ' ):' → logprob: -12.254631996154785
    4. '   ' → logprob: -13.254631996154785
    5. ')' → logprob: -13.379631996154785
    6. ':' → logprob: -13.754631996154785
    7. '):
' → logprob: -14.129631996154785
    8. '+' → logprob: -14.254631996154785
    9. '():' → logprob: -14.629631996154785
    10. '       ' → logprob: -15.504631996154785

Token 293: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.020619787275791168
    2. '       ' → logprob: -4.145619869232178
    3. ':' → logprob: -6.020619869232178
    4. ' if' → logprob: -6.645619869232178
    5. ',' → logprob: -8.27061939239502
    6. ' :' → logprob: -9.27061939239502
    7. ' ' → logprob: -9.39561939239502
    8. '<|end|>' → logprob: -9.39561939239502
    9. '        ' → logprob: -9.52061939239502
    10. '   ' → logprob: -9.89561939239502

Token 294: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2406846135854721
    2. '           ' → logprob: -1.9906846284866333
    3. 'if' (adapté à ' if') → logprob: -2.6156845092773438
    4. '               ' → logprob: -5.490684509277344
    5. ' ' → logprob: -11.240684509277344
    6. '       ' → logprob: -11.365684509277344
    7. '   ' → logprob: -11.740684509277344
    8. 'If' → logprob: -11.865684509277344
    9. '0' → logprob: -12.115684509277344
    10. '1' → logprob: -12.240684509277344

Token 295: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.5759493708610535
    2. ' graph' → logprob: -0.8259493708610535
    3. '	graph' → logprob: -12.200949668884277
    4. '(graph' → logprob: -13.450949668884277
    5. '           ' → logprob: -13.825949668884277
    6. '   ' → logprob: -13.950949668884277
    7. 'int' → logprob: -15.200949668884277
    8. 'raph' → logprob: -15.325949668884277
    9. 'Graph' → logprob: -15.450949668884277
    10. ' graphene' → logprob: -16.32594871520996

Token 296: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -8.292095299111679e-05
    2. '[j' → logprob: -10.000082969665527
    3. '][' → logprob: -11.000082969665527
    4. '[' → logprob: -11.250082969665527
    5. '[I' → logprob: -13.000082969665527
    6. ')[' → logprob: -13.750082969665527
    7. ' [' → logprob: -13.875082969665527
    8. '[
' → logprob: -14.250082969665527
    9. '[u' → logprob: -15.000082969665527
    10. '   ' → logprob: -15.000082969665527

Token 297: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.5240466594696045
    2. '[j' → logprob: -0.8990466594696045
    3. '[i' → logprob: -8.524046897888184
    4. ''][' → logprob: -8.524046897888184
    5. '[' → logprob: -8.649046897888184
    6. ''[' → logprob: -8.899046897888184
    7. '"][' → logprob: -10.024046897888184
    8. ']' → logprob: -10.649046897888184
    9. ' ][' → logprob: -10.774046897888184
    10. '>[' → logprob: -10.774046897888184

Token 298: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -2.339278580620885e-06
    2. ' j' → logprob: -13.000001907348633
    3. '[j' → logprob: -18.000001907348633
    4. '
' → logprob: -18.000001907348633
    5. '   ' → logprob: -18.000001907348633
    6. ' ' → logprob: -18.375001907348633
    7. '0' → logprob: -18.875001907348633
    8. '_j' → logprob: -19.000001907348633
    9. '	j' → logprob: -19.125001907348633
    10. '  ' → logprob: -20.250001907348633

Token 299: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3926219046115875
    2. ' ==' → logprob: -1.6426218748092651
    3. '==' → logprob: -2.1426219940185547
    4. '=' → logprob: -5.267621994018555
    5. ']==' → logprob: -5.267621994018555
    6. '']' → logprob: -6.642621994018555
    7. ''' → logprob: -6.767621994018555
    8. '=='' → logprob: -8.017621994018555
    9. ')' → logprob: -8.142621994018555
    10. ' ]' → logprob: -8.892621994018555

Token 300: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.16036517918109894
    2. ' ==' → logprob: -2.285365104675293
    3. '=' → logprob: -3.410365104675293
    4. '=='' → logprob: -4.410365104675293
    5. ''' → logprob: -8.285365104675293
    6. ' =' → logprob: -8.535365104675293
    7. ')' → logprob: -8.785365104675293
    8. ']==' → logprob: -9.285365104675293
    9. '1' → logprob: -9.535365104675293
    10. ']' → logprob: -9.910365104675293

Token 301: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.002561388071626425
    2. ''C' → logprob: -6.877561569213867
    3. ''A' → logprob: -7.127561569213867
    4. '"' → logprob: -8.752561569213867
    5. ''O' → logprob: -8.752561569213867
    6. ''I' → logprob: -9.377561569213867
    7. ''S' → logprob: -9.752561569213867
    8. ' '' → logprob: -9.752561569213867
    9. ''y' → logprob: -10.377561569213867
    10. ''L' → logprob: -10.502561569213867

Token 302: 'Y' (ID: 56)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004047886934131384
    2. '#' → logprob: -6.379047870635986
    3. 'Y' → logprob: -6.504047870635986
    4. ''' → logprob: -7.254047870635986
    5. '0' → logprob: -9.504048347473145
    6. ''#' → logprob: -10.879048347473145
    7. '')' → logprob: -11.504048347473145
    8. 'o' → logprob: -11.754048347473145
    9. 'y' → logprob: -12.254048347473145
    10. '"' → logprob: -12.504048347473145

Token 303: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.007543677464127541
    2. ''' → logprob: -5.382543563842773
    3. ':' → logprob: -6.882543563842773
    4. '':
' → logprob: -7.132543563842773
    5. '):' → logprob: -7.507543563842773
    6. ''):' → logprob: -8.007543563842773
    7. ')' → logprob: -9.007543563842773
    8. ' ':' → logprob: -10.882543563842773
    9. '')' → logprob: -10.882543563842773
    10. '':
' → logprob: -11.382543563842773

Token 304: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03527192398905754
    2. ' uf' → logprob: -3.7852718830108643
    3. 'uf' → logprob: -4.660272121429443
    4. '           ' → logprob: -6.160272121429443
    5. ':' → logprob: -8.660271644592285
    6. ',' → logprob: -9.660271644592285
    7. '                
' → logprob: -10.785271644592285
    8. ' ' → logprob: -11.035271644592285
    9. '       ' → logprob: -11.160271644592285
    10. ' and' → logprob: -11.285271644592285

Token 305: ' uf' (ID: 35772)
  Prédit: ' uf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' uf' → logprob: -0.007069839630275965
    2. 'uf' (adapté à ' uf') → logprob: -5.007070064544678
    3. '               ' → logprob: -8.00706958770752
    4. ' ' → logprob: -12.13206958770752
    5. '                   ' → logprob: -12.25706958770752
    6. '.uf' → logprob: -12.88206958770752
    7. '                ' → logprob: -13.00706958770752
    8. '           ' → logprob: -13.75706958770752
    9. '                
' → logprob: -14.13206958770752
    10. ' u' → logprob: -14.13206958770752

Token 306: '.un' (ID: 11508)
  Prédit: '.un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.un' → logprob: -2.3080716346157715e-05
    2. '.' → logprob: -11.625022888183594
    3. ' .' → logprob: -11.625022888183594
    4. '.u' → logprob: -12.500022888183594
    5. '.union' → logprob: -14.250022888183594
    6. 'un' → logprob: -15.875022888183594
    7. '.Un' → logprob: -16.000022888183594
    8. '   ' → logprob: -16.250022888183594
    9. '.ut' → logprob: -16.250022888183594
    10. '.uni' → logprob: -16.375022888183594

Token 307: 'ite' (ID: 651)
  Prédit: 'ite'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ite' → logprob: -1.9743012671824545e-05
    2. 'it' → logprob: -11.125020027160645
    3. 'ate' → logprob: -13.875020027160645
    4. 'i' → logprob: -14.125020027160645
    5. ' ite' → logprob: -14.375020027160645
    6. '```' → logprob: -14.375020027160645
    7. '(' → logprob: -14.500020027160645
    8. '#' → logprob: -15.250020027160645
    9. '**' → logprob: -15.375020027160645
    10. '   ' → logprob: -16.250019073486328

Token 308: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0004306692280806601
    2. '(' → logprob: -7.750430583953857
    3. '(
' → logprob: -16.875431060791016
    4. ' (' → logprob: -16.875431060791016
    5. '(j' → logprob: -19.875431060791016
    6. '(I' → logprob: -20.125431060791016
    7. '(x' → logprob: -20.625431060791016
    8. '(ii' → logprob: -20.625431060791016
    9. '((' → logprob: -21.000431060791016
    10. '(

' → logprob: -21.875431060791016

Token 309: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007860410842113197
    2. ',j' → logprob: -7.250785827636719
    3. ' ,' → logprob: -9.500785827636719
    4. 'j' → logprob: -13.625785827636719
    5. ',
' → logprob: -16.25078582763672
    6. '‌,' → logprob: -17.87578582763672
    7. ' j' → logprob: -18.50078582763672
    8. '   ' → logprob: -18.62578582763672
    9. ')' → logprob: -18.75078582763672
    10. ' ' → logprob: -18.75078582763672

Token 310: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.011047814972698689
    2. ' j' → logprob: -4.511047840118408
    3. '	j' → logprob: -18.26104736328125
    4. ' ' → logprob: -18.38604736328125
    5. '<|end|>' → logprob: -18.76104736328125
    6. '   ' → logprob: -19.01104736328125
    7. ')' → logprob: -19.01104736328125
    8. '$j' → logprob: -20.13604736328125
    9. '    ' → logprob: -20.38604736328125
    10. '[j' → logprob: -21.26104736328125

Token 311: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3425219549390022e-05
    2. ')
' → logprob: -11.25001335144043
    3. ' )' → logprob: -15.12501335144043
    4. '))' → logprob: -18.25001335144043
    5. ')

' → logprob: -18.25001335144043
    6. ')
' → logprob: -18.50001335144043
    7. ')return' → logprob: -18.75001335144043
    8. '),' → logprob: -19.00001335144043
    9. '）' → logprob: -19.25001335144043
    10. ')#' → logprob: -19.37501335144043

Token 312: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3287157416343689
    2. '   ' → logprob: -1.4537158012390137
    3. '    
' → logprob: -3.3287158012390137
    4. '

' → logprob: -5.703715801239014
    5. 'if' → logprob: -6.328715801239014
    6. 'for' → logprob: -6.703715801239014
    7. 'print' → logprob: -6.953715801239014
    8. '```' → logprob: -6.953715801239014
    9. '<|end|>' → logprob: -7.203715801239014
    10. '  
' → logprob: -7.953715801239014

Token 313: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7796830534934998
    2. 'print' → logprob: -2.1546831130981445
    3. 'answer' → logprob: -2.2796831130981445
    4. '#' (adapté à ' #') → logprob: -2.9046831130981445
    5. 'components' → logprob: -3.0296831130981445
    6. 'for' → logprob: -3.2796831130981445
    7. 'groups' → logprob: -3.6546831130981445
    8. 'answers' → logprob: -3.7796831130981445
    9. 'component' → logprob: -3.9046831130981445
    10. 'result' → logprob: -4.0296831130981445

Token 314: ' Since' (ID: 12265)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.9971191883087158
    2. 'answer' → logprob: -1.1221191883087158
    3. 'ans' → logprob: -2.997119188308716
    4. '#' → logprob: -3.122119188308716
    5. 'result' → logprob: -3.122119188308716
    6. 'answers' → logprob: -3.247119188308716
    7. 'for' → logprob: -3.497119188308716
    8. 'components' → logprob: -4.247118949890137
    9. 'count' → logprob: -4.997118949890137
    10. 'print' → logprob: -5.122118949890137

Token 315: ' the' (ID: 290)
  Prédit: ' uf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' uf' → logprob: -0.1800035536289215
    2. 'uf' → logprob: -1.9300035238265991
    3. ' len' → logprob: -5.930003643035889
    4. ' all' → logprob: -5.930003643035889
    5. 'len' → logprob: -5.930003643035889
    6. ' V' → logprob: -6.055003643035889
    7. 'V' → logprob: -6.430003643035889
    8. 'graph' → logprob: -6.430003643035889
    9. 'all' → logprob: -6.930003643035889
    10. ' not' → logprob: -7.055003643035889

Token 316: ' original' (ID: 4756)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.8952080011367798
    2. 'problem' → logprob: -0.8952080011367798
    3. 'components' → logprob: -2.7702078819274902
    4. 'input' → logprob: -3.6452078819274902
    5. 'goal' → logprob: -4.02020788192749
    6. 'number' → logprob: -4.14520788192749
    7. 'code' → logprob: -4.39520788192749
    8. 'task' → logprob: -4.64520788192749
    9. 'uf' → logprob: -5.02020788192749
    10. ' problem' → logprob: -5.77020788192749

Token 317: ' graph' (ID: 7465)
  Prédit: ' code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' code' → logprob: -1.1746973991394043
    2. 'graph' → logprob: -1.2996973991394043
    3. 'code' → logprob: -1.7996973991394043
    4. 'problem' → logprob: -1.7996973991394043
    5. ' problem' → logprob: -3.2996973991394043
    6. ' graph' → logprob: -3.7996973991394043
    7. 'prompt' → logprob: -4.674697399139404
    8. ' prompt' → logprob: -5.299697399139404
    9. 'question' → logprob: -5.924697399139404
    10. ' question' → logprob: -6.299697399139404

Token 318: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.621898889541626
    2. ' may' → logprob: -1.871898889541626
    3. 'is' → logprob: -1.996898889541626
    4. 'may' → logprob: -2.621898889541626
    5. ' might' → logprob: -2.746898889541626
    6. 'might' → logprob: -4.121898651123047
    7. '   ' → logprob: -5.371898651123047
    8. 'can' → logprob: -5.746898651123047
    9. ' can' → logprob: -6.121898651123047
    10. ' has' → logprob: -6.246898651123047

Token 319: ' disconnected' (ID: 78152)
  Prédit: 'und'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'und' → logprob: -1.0252037048339844
    2. 'complete' → logprob: -1.7752037048339844
    3. 'a' → logprob: -2.0252037048339844
    4. ' guaranteed' → logprob: -2.2752037048339844
    5. 'connected' → logprob: -2.9002037048339844
    6. 'gu' → logprob: -3.6502037048339844
    7. ' a' → logprob: -3.6502037048339844
    8. ' und' → logprob: -3.7752037048339844
    9. 'already' → logprob: -4.025203704833984
    10. ' complete' → logprob: -4.275203704833984

Token 320: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00032867121626622975
    2. ',
' → logprob: -8.25032901763916
    3. ' ,' → logprob: -10.62532901763916
    4. 'if' → logprob: -11.62532901763916
    5. ' if' → logprob: -11.62532901763916
    6. '#' → logprob: -12.12532901763916
    7. 'and' → logprob: -12.37532901763916
    8. ' or' → logprob: -12.62532901763916
    9. ' and' → logprob: -12.75032901763916
    10. ',

' → logprob: -13.62532901763916

Token 321: ' uf' (ID: 35772)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3331461250782013
    2. ' print' → logprob: -1.333146095275879
    3. '#' → logprob: -5.083146095275879
    4. ' if' → logprob: -5.333146095275879
    5. 'if' → logprob: -5.333146095275879
    6. '   ' → logprob: -6.583146095275879
    7. ' #' → logprob: -7.583146095275879
    8. ' we' → logprob: -7.833146095275879
    9. 'return' → logprob: -8.333146095275879
    10. 'for' → logprob: -8.833146095275879

Token 322: '.components' (ID: 41872)
  Prédit: '.components'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.components' → logprob: -0.015065724030137062
    2. '.' → logprob: -5.140065670013428
    3. 'components' → logprob: -5.390065670013428
    4. '_components' → logprob: -5.515065670013428
    5. ' components' → logprob: -10.140066146850586
    6. ' .' → logprob: -10.265066146850586
    7. ' is' → logprob: -10.390066146850586
    8. '.com' → logprob: -10.640066146850586
    9. ''s' → logprob: -10.765066146850586
    10. '._' → logprob: -10.765066146850586

Token 323: ' >=' (ID: 5064)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.05523880571126938
    2. '>' → logprob: -2.930238723754883
    3. ' !=' → logprob: -9.430238723754883
    4. ' ' → logprob: -9.680238723754883
    5. ' >=' → logprob: -9.680238723754883
    6. '<|end|>' → logprob: -10.055238723754883
    7. ' ==' → logprob: -10.305238723754883
    8. '   ' → logprob: -11.180238723754883
    9. '>=' → logprob: -11.680238723754883
    10. ' #' → logprob: -11.805238723754883

Token 324: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.055675819516181946
    2. '1' → logprob: -2.930675745010376
    3. ' ' → logprob: -7.180675983428955
    4. '0' → logprob: -10.930675506591797
    5. '   ' → logprob: -12.305675506591797
    6. '>' → logprob: -12.868175506591797
    7. '```' → logprob: -12.993175506591797
    8. '  ' → logprob: -13.868175506591797
    9. '
' → logprob: -13.930675506591797
    10. '3' → logprob: -13.930675506591797

Token 325: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.023463839665055275
    2. '1' → logprob: -3.773463726043701
    3. ' ' → logprob: -8.52346420288086
    4. '   ' → logprob: -11.77346420288086
    5. '0' → logprob: -12.27346420288086
    6. '
' → logprob: -12.77346420288086
    7. '```' → logprob: -13.46096420288086
    8. '>' → logprob: -13.64846420288086
    9. '  ' → logprob: -14.46096420288086
    10. '       ' → logprob: -15.96096420288086

Token 326: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.42538756132125854
    2. '   ' → logprob: -1.3003876209259033
    3. '    
' → logprob: -2.9253876209259033
    4. 'if' → logprob: -4.175387382507324
    5. ' if' → logprob: -6.050387382507324
    6. '

' → logprob: -7.800387382507324
    7. ',' → logprob: -8.425387382507324
    8. 'for' → logprob: -8.550387382507324
    9. '```' → logprob: -8.550387382507324
    10. ' 
' → logprob: -8.675387382507324

Token 327: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7361524105072021
    2. '   ' → logprob: -0.8611524105072021
    3. '    
' → logprob: -2.486152410507202
    4. 'for' → logprob: -5.861152648925781
    5. 'if' → logprob: -6.361152648925781
    6. ' for' → logprob: -6.361152648925781
    7. ' if' → logprob: -6.736152648925781
    8. ' 
' → logprob: -6.986152648925781
    9. '\n' → logprob: -7.361152648925781
    10. 'distance' → logprob: -7.486152648925781

Token 328: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4517415165901184
    2. 'answer' → logprob: -2.2017414569854736
    3. 'print' → logprob: -2.8267414569854736
    4. 'ans' → logprob: -3.2017414569854736
    5. 'edges' → logprob: -3.5767414569854736
    6. 'for' → logprob: -3.7017414569854736
    7. 'dp' → logprob: -3.8267414569854736
    8. 'dist' → logprob: -3.9517414569854736
    9. 'result' → logprob: -4.701741695404053
    10. 'cost' → logprob: -4.701741695404053

Token 329: ' The' (ID: 623)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6387857794761658
    2. 'answer' → logprob: -1.7637858390808105
    3. 'for' → logprob: -2.3887858390808105
    4. 'dist' → logprob: -2.6387858390808105
    5. 'dp' → logprob: -3.7637858390808105
    6. 'distance' → logprob: -4.2637858390808105
    7. 'ans' → logprob: -4.2637858390808105
    8. '#' → logprob: -4.2637858390808105
    9. ' if' → logprob: -5.0137858390808105
    10. 'result' → logprob: -5.0137858390808105

Token 330: ' game' (ID: 2813)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -2.1060752868652344
    2. 'answer' → logprob: -2.2310752868652344
    3. ' answer' → logprob: -2.3560752868652344
    4. ' next' → logprob: -2.4810752868652344
    5. ' ans' → logprob: -2.6060752868652344
    6. 'dp' → logprob: -3.2310752868652344
    7. ' result' → logprob: -3.3560752868652344
    8. 'for' → logprob: -3.4810752868652344
    9. 'result' → logprob: -3.4810752868652344
    10. ' edges' → logprob: -3.6060752868652344

Token 331: ' moves' (ID: 19523)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.5491120219230652
    2. ' ' → logprob: -1.67411208152771
    3. '   ' → logprob: -2.17411208152771
    4. ' =' → logprob: -3.17411208152771
    5. ' continues' → logprob: -4.299111843109131
    6. ' involves' → logprob: -4.799111843109131
    7. '=' → logprob: -4.924111843109131
    8. '    ' → logprob: -5.049111843109131
    9. ' has' → logprob: -5.549111843109131
    10. '  ' → logprob: -5.549111843109131

Token 332: ' consist' (ID: 8897)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1597515493631363
    2. '=' → logprob: -2.2847516536712646
    3. '_count' → logprob: -4.5347514152526855
    4. 's' → logprob: -4.9097514152526855
    5. 'count' → logprob: -5.0347514152526855
    6. ' are' → logprob: -5.1597514152526855
    7. ':' → logprob: -5.5347514152526855
    8. ' ' → logprob: -6.0347514152526855
    9. 'for' → logprob: -6.6597514152526855
    10. '_remaining' → logprob: -6.6597514152526855

Token 333: ' in' (ID: 306)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.007089014630764723
    2. ' ' → logprob: -5.757089138031006
    3. 'of' → logprob: -6.382089138031006
    4. '  ' → logprob: -6.507089138031006
    5. '   ' → logprob: -7.632089138031006
    6. ' only' → logprob: -8.757088661193848
    7. '=' → logprob: -11.257088661193848
    8. ' =' → logprob: -11.257088661193848
    9. ' in' → logprob: -11.382088661193848
    10. '    ' → logprob: -12.132088661193848

Token 334: ' adding' (ID: 12673)
  Prédit: ' connecting'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' connecting' → logprob: -0.7748391628265381
    2. ' merging' → logprob: -1.274839162826538
    3. 'connecting' → logprob: -2.274839162826538
    4. ' uf' → logprob: -3.024839162826538
    5. ' un' → logprob: -3.899839162826538
    6. 'un' → logprob: -4.399839401245117
    7. ' adding' → logprob: -4.899839401245117
    8. 'uf' → logprob: -4.899839401245117
    9. 'mer' → logprob: -4.899839401245117
    10. ' combining' → logprob: -5.399839401245117

Token 335: ' edges' (ID: 22569)
  Prédit: ' edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.047307129949331284
    2. ' one' → logprob: -3.672307014465332
    3. ' an' → logprob: -4.672307014465332
    4. 'edges' → logprob: -5.172307014465332
    5. ' a' → logprob: -5.297307014465332
    6. ' new' → logprob: -7.922307014465332
    7. ' ' → logprob: -8.672307014465332
    8. ' exactly' → logprob: -10.297307014465332
    9. 'one' → logprob: -10.297307014465332
    10. 'a' → logprob: -10.922307014465332

Token 336: ' between' (ID: 2870)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.455904096364975
    2. ' between' → logprob: -1.7059041261672974
    3. ',' → logprob: -3.205904006958008
    4. ' ' → logprob: -3.830904006958008
    5. 'between' → logprob: -3.830904006958008
    6. '   ' → logprob: -3.955904006958008
    7. ' and' → logprob: -3.955904006958008
    8. 'to' → logprob: -4.205904006958008
    9. '<|end|>' → logprob: -4.580904006958008
    10. ' that' → logprob: -4.955904006958008

Token 337: ' distinct' (ID: 16913)
  Prédit: 'components'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'components' → logprob: -0.9606116414070129
    2. 'different' → logprob: -1.4606115818023682
    3. ' components' → logprob: -2.085611581802368
    4. ' two' → logprob: -2.710611581802368
    5. 'two' → logprob: -3.085611581802368
    6. ' different' → logprob: -3.335611581802368
    7. 'vertices' → logprob: -3.710611581802368
    8. 'any' → logprob: -4.335611820220947
    9. ' vertices' → logprob: -4.335611820220947
    10. ' any' → logprob: -4.710611820220947

Token 338: ' components' (ID: 10674)
  Prédit: ' components'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' components' → logprob: -0.18623986840248108
    2. 'components' → logprob: -1.8112398386001587
    3. ' connected' → logprob: -5.186239719390869
    4. 'connected' → logprob: -7.186239719390869
    5. ' sets' → logprob: -10.061240196228027
    6. '_components' → logprob: -11.061240196228027
    7. 'component' → logprob: -11.686240196228027
    8. 'clusters' → logprob: -11.811240196228027
    9. ' componentes' → logprob: -12.061240196228027
    10. ' groups' → logprob: -12.186240196228027

Token 339: ',
' (ID: 412)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11522451788187027
    2. ',' → logprob: -3.365224599838257
    3. '.' → logprob: -3.740224599838257
    4. '
' → logprob: -3.990224599838257
    5. ' to' → logprob: -4.240224361419678
    6. '    
' → logprob: -4.490224361419678
    7. '#' → logprob: -5.740224361419678
    8. ' and' → logprob: -7.740224361419678
    9. 'while' → logprob: -7.865224361419678
    10. 'to' → logprob: -7.990224361419678

Token 340: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23224274814128876
    2. '#' → logprob: -1.7322427034378052
    3. ' and' → logprob: -5.107242584228516
    4. 'and' → logprob: -5.607242584228516
    5. ' which' → logprob: -5.607242584228516
    6. '    ' → logprob: -5.732242584228516
    7. ' so' → logprob: -5.857242584228516
    8. ' not' → logprob: -5.857242584228516
    9. 'not' → logprob: -6.107242584228516
    10. 'which' → logprob: -6.107242584228516

Token 341: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1835208386182785
    2. '#' (adapté à ' #') → logprob: -2.308520793914795
    3. 'and' → logprob: -3.683520793914795
    4. 'which' → logprob: -3.933520793914795
    5. ' and' → logprob: -5.183520793914795
    6. ' which' → logprob: -5.558520793914795
    7. 'redu' → logprob: -6.433520793914795
    8. '    
' → logprob: -6.558520793914795
    9. 'so' → logprob: -6.683520793914795
    10. ' so' → logprob: -6.808520793914795

Token 342: ' so' (ID: 813)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8756857514381409
    2. '   ' → logprob: -1.375685691833496
    3. 'and' → logprob: -2.000685691833496
    4. 'which' → logprob: -2.250685691833496
    5. 'so' → logprob: -3.750685691833496
    6. ' so' → logprob: -4.625685691833496
    7. ' which' → logprob: -4.625685691833496
    8. 'each' → logprob: -4.750685691833496
    9. ' and' → logprob: -4.875685691833496
    10. 'redu' → logprob: -5.125685691833496

Token 343: ' each' (ID: 2454)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.17667117714881897
    2. 'the' → logprob: -2.676671266555786
    3. ' uf' → logprob: -2.801671266555786
    4. 'uf' → logprob: -5.051671028137207
    5. ' moves' → logprob: -5.801671028137207
    6. 'moves' → logprob: -5.926671028137207
    7. ' if' → logprob: -6.051671028137207
    8. ' each' → logprob: -6.051671028137207
    9. ' edges' → logprob: -6.301671028137207
    10. ' we' → logprob: -6.551671028137207

Token 344: ' move' (ID: 5275)
  Prédit: ' move'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' move' → logprob: -0.8733199238777161
    2. 'component' → logprob: -1.6233198642730713
    3. ' component' → logprob: -2.3733198642730713
    4. ' connected' → logprob: -2.6233198642730713
    5. ' edge' → logprob: -3.2483198642730713
    6. 'connected' → logprob: -3.4983198642730713
    7. ' union' → logprob: -3.7483198642730713
    8. ' new' → logprob: -3.9983198642730713
    9. 'union' → logprob: -3.9983198642730713
    10. 'move' → logprob: -3.9983198642730713

Token 345: ' reduces' (ID: 38566)
  Prédit: ' reduces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' reduces' → logprob: -0.5777227282524109
    2. ' adds' → logprob: -1.5777227878570557
    3. ' decreases' → logprob: -2.3277227878570557
    4. 'redu' → logprob: -3.2027227878570557
    5. 'adds' → logprob: -3.8277227878570557
    6. ' removes' → logprob: -3.9527227878570557
    7. 'de' → logprob: -4.327722549438477
    8. ' increases' → logprob: -4.327722549438477
    9. ' consumes' → logprob: -5.452722549438477
    10. 'cons' → logprob: -5.702722549438477

Token 346: ' number' (ID: 2086)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.16447311639785767
    2. ' uf' → logprob: -2.414473056793213
    3. 'the' → logprob: -3.039473056793213
    4. 'uf' → logprob: -4.289473056793213
    5. ' one' → logprob: -8.539473533630371
    6. ' by' → logprob: -9.039473533630371
    7. ' ' → logprob: -9.289473533630371
    8. 'self' → logprob: -9.539473533630371
    9. ' self' → logprob: -9.914473533630371
    10. '```' → logprob: -10.664473533630371

Token 347: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.3713649809360504
    2. 'of' → logprob: -1.246364951133728
    3. '_of' → logprob: -4.621365070343018
    4. ' ' → logprob: -4.871365070343018
    5. '_' → logprob: -5.496365070343018
    6. '  ' → logprob: -8.24636459350586
    7. '   ' → logprob: -8.87136459350586
    8. ' _' → logprob: -8.99636459350586
    9. '    ' → logprob: -9.37136459350586
    10. ' uf' → logprob: -9.49636459350586

Token 348: ' components' (ID: 10674)
  Prédit: ' components'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' components' → logprob: -0.7907195091247559
    2. 'components' → logprob: -0.9157195091247559
    3. ' uf' → logprob: -2.040719509124756
    4. 'uf' → logprob: -4.165719509124756
    5. ' ' → logprob: -8.165719985961914
    6. ' connected' → logprob: -8.665719985961914
    7. 'connected' → logprob: -9.290719985961914
    8. 'ufs' → logprob: -10.290719985961914
    9. '   ' → logprob: -10.790719985961914
    10. '.uf' → logprob: -10.790719985961914

Token 349: ' by' (ID: 656)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05086939409375191
    2. '

' → logprob: -3.9258694648742676
    3. '   ' → logprob: -5.050869464874268
    4. 'if' → logprob: -5.800869464874268
    5. '
' → logprob: -6.050869464874268
    6. ' if' → logprob: -6.050869464874268
    7. '.' → logprob: -6.175869464874268
    8. ',' → logprob: -6.300869464874268
    9. '    
' → logprob: -6.300869464874268
    10. '\n' → logprob: -6.300869464874268

Token 350: ' one' (ID: 1001)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.12757447361946106
    2. ' ' → logprob: -2.1275744438171387
    3. ' one' → logprob: -7.377574443817139
    4. 'one' → logprob: -10.877574920654297
    5. ' ' → logprob: -14.002574920654297
    6. '```' → logprob: -15.002574920654297
    7. 'One' → logprob: -15.377574920654297
    8. 'space' → logprob: -15.377574920654297
    9. '   ' → logprob: -15.627574920654297
    10. ' space' → logprob: -15.877574920654297

Token 351: '.
' (ID: 558)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07349684834480286
    2. '   ' → logprob: -2.9484968185424805
    3. '    
' → logprob: -4.1984968185424805
    4. '

' → logprob: -6.4484968185424805
    5. '\n' → logprob: -8.44849681854248
    6. 'if' → logprob: -8.44849681854248
    7. '
    
' → logprob: -8.44849681854248
    8. '#' → logprob: -8.57349681854248
    9. '
' → logprob: -8.82349681854248
    10. ',' → logprob: -9.07349681854248

Token 352: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021834004670381546
    2. '
' → logprob: -4.146833896636963
    3. '    
' → logprob: -6.396833896636963
    4. 'moves' → logprob: -6.396833896636963
    5. ' moves' → logprob: -7.146833896636963
    6. ' if' → logprob: -7.521833896636963
    7. 'if' → logprob: -8.146834373474121
    8. 'n' → logprob: -8.646834373474121
    9. ' n' → logprob: -9.396834373474121
    10. 'result' → logprob: -9.521834373474121

Token 353: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5146433115005493
    2. '
' → logprob: -2.1396431922912598
    3. 'print' → logprob: -2.3896431922912598
    4. 'moves' → logprob: -2.6396431922912598
    5. 'if' → logprob: -3.1396431922912598
    6. 'result' → logprob: -3.6396431922912598
    7. ' if' → logprob: -3.8896431922912598
    8. ' print' → logprob: -5.01464319229126
    9. ' moves' → logprob: -5.13964319229126
    10. 'answer' → logprob: -5.51464319229126

Token 354: ' Player' (ID: 12487)
  Prédit: 'moves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'moves' → logprob: -0.6780849099159241
    2. 'if' → logprob: -1.3030848503112793
    3. '#' → logprob: -3.0530848503112793
    4. 'print' → logprob: -3.1780848503112793
    5. ' moves' → logprob: -3.5530848503112793
    6. 'remaining' → logprob: -3.5530848503112793
    7. ' if' → logprob: -4.303084850311279
    8. 'answer' → logprob: -4.428084850311279
    9. 'result' → logprob: -4.803084850311279
    10. '   ' → logprob: -5.053084850311279

Token 355: ' who' (ID: 1218)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3311621844768524
    2. ' =' → logprob: -2.331162214279175
    3. '_' → logprob: -2.706162214279175
    4. '_turn' → logprob: -2.706162214279175
    5. ' ' → logprob: -3.706162214279175
    6. '_to' → logprob: -4.831161975860596
    7. 's' → logprob: -5.206161975860596
    8. 'A' → logprob: -5.831161975860596
    9. '=' → logprob: -6.081161975860596
    10. '_A' → logprob: -6.581161975860596

Token 356: ' makes' (ID: 4787)
  Prédit: ' makes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' makes' → logprob: -0.9935969114303589
    2. ' has' → logprob: -1.3685969114303589
    3. ' moves' → logprob: -2.1185970306396484
    4. ' starts' → logprob: -2.4935970306396484
    5. 's' → logprob: -2.7435970306396484
    6. ' takes' → logprob: -3.3685970306396484
    7. ' can' → logprob: -3.6185970306396484
    8. ' will' → logprob: -4.368597030639648
    9. 'moves' → logprob: -4.743597030639648
    10. 'makes' → logprob: -4.993597030639648

Token 357: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.013048466295003891
    2. 'the' → logprob: -4.7630486488342285
    3. ' a' → logprob: -5.5130486488342285
    4. 'a' → logprob: -8.38804817199707
    5. '_the' → logprob: -9.51304817199707
    6. '_' → logprob: -9.63804817199707
    7. ' ' → logprob: -11.88804817199707
    8. ' an' → logprob: -13.01304817199707
    9. '"' → logprob: -13.26304817199707
    10. ' last' → logprob: -13.51304817199707

Token 358: ' graph' (ID: 7465)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.163400337100029
    2. ' last' → logprob: -2.663400411605835
    3. 'next' → logprob: -2.788400411605835
    4. ' next' → logprob: -4.038400173187256
    5. 'final' → logprob: -6.913400173187256
    6. 'first' → logprob: -7.413400173187256
    7. ' final' → logprob: -9.288400650024414
    8. ' first' → logprob: -9.788400650024414
    9. ' ' → logprob: -10.038400650024414
    10. 'current' → logprob: -10.788400650024414

Token 359: ' connected' (ID: 12079)
  Prédit: ' connected'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' connected' → logprob: -0.22021488845348358
    2. 'connected' → logprob: -2.34521484375
    3. ' fully' → logprob: -2.47021484375
    4. 'fully' → logprob: -4.34521484375
    5. ' complete' → logprob: -6.72021484375
    6. '   ' → logprob: -7.09521484375
    7. ' ' → logprob: -7.47021484375
    8. 'complete' → logprob: -7.72021484375
    9. '_connected' → logprob: -8.47021484375
    10. ' ' → logprob: -9.09521484375

Token 360: ' (' (ID: 350)
  Prédit: ' first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' first' → logprob: -0.4362419843673706
    2. ' (' → logprob: -1.4362419843673706
    3. ' wins' → logprob: -3.68624210357666
    4. ' is' → logprob: -3.81124210357666
    5. 'first' → logprob: -3.93624210357666
    6. ' has' → logprob: -4.68624210357666
    7. ' ' → logprob: -4.81124210357666
    8. '(' → logprob: -4.81124210357666
    9. ' will' → logprob: -5.18624210357666
    10. '(first' → logprob: -6.31124210357666

Token 361: 'components' (ID: 8395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5731601715087891
    2. 'i' → logprob: -2.573160171508789
    3. ' the' → logprob: -2.573160171508789
    4. ' first' → logprob: -2.573160171508789
    5. ' all' → logprob: -3.573160171508789
    6. ' i' → logprob: -3.573160171508789
    7. ''' → logprob: -3.698160171508789
    8. '   ' → logprob: -3.948160171508789
    9. 'the' → logprob: -4.323160171508789
    10. ' )' → logprob: -4.448160171508789

Token 362: ' =' (ID: 314)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.2535371482372284
    2. '==' → logprob: -1.5035371780395508
    3. ')' → logprob: -6.503537178039551
    4. ' ' → logprob: -10.25353717803955
    5. '=' → logprob: -11.25353717803955
    6. ')==' → logprob: -11.37853717803955
    7. ' becomes' → logprob: -12.12853717803955
    8. '1' → logprob: -12.25353717803955
    9. '>' → logprob: -12.37853717803955
    10. '   ' → logprob: -12.37853717803955

Token 363: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008070098701864481
    2. ' ' → logprob: -7.12580680847168
    3. '   ' → logprob: -13.00080680847168
    4. ')' → logprob: -16.37580680847168
    5. '```' → logprob: -16.75080680847168
    6. '  ' → logprob: -17.62580680847168
    7. '`' → logprob: -17.75080680847168
    8. '=' → logprob: -17.75080680847168
    9. '0' → logprob: -18.25080680847168
    10. ' ' → logprob: -18.62580680847168

Token 364: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.051066520740278e-05
    2. ' ' → logprob: -9.750060081481934
    3. '   ' → logprob: -13.375060081481934
    4. ')' → logprob: -15.000060081481934
    5. '```' → logprob: -15.500060081481934
    6. '=' → logprob: -17.87506103515625
    7. '`' → logprob: -18.00006103515625
    8. '0' → logprob: -18.37506103515625
    9. '  ' → logprob: -18.50006103515625
    10. '           ' → logprob: -18.93756103515625

Token 365: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0010722271399572492
    2. ' )' → logprob: -6.876072406768799
    3. ')
' → logprob: -11.75107192993164
    4. ' wins' → logprob: -11.87607192993164
    5. '),' → logprob: -12.12607192993164
    6. '   ' → logprob: -12.12607192993164
    7. ' ' → logprob: -12.75107192993164
    8. '）' → logprob: -13.12607192993164
    9. '
' → logprob: -13.25107192993164
    10. ' ' → logprob: -13.50107192993164

Token 366: ' loses' (ID: 63582)
  Prédit: ' wins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' wins' → logprob: -0.5912643074989319
    2. ' is' → logprob: -0.9662643074989319
    3. ' will' → logprob: -3.966264247894287
    4. ' 
' → logprob: -4.841264247894287
    5. '  
' → logprob: -4.966264247894287
    6. '
' → logprob: -5.091264247894287
    7. ' can' → logprob: -5.216264247894287
    8. 'wins' → logprob: -5.841264247894287
    9. ' has' → logprob: -5.966264247894287
    10. ' ' → logprob: -6.091264247894287

Token 367: '.

' (ID: 364)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.19099679589271545
    2. '   ' → logprob: -2.0659968852996826
    3. '    
' → logprob: -3.0659968852996826
    4. '

' → logprob: -8.440997123718262
    5. 'if' → logprob: -8.815997123718262
    6. '  
' → logprob: -10.440997123718262
    7. '
    
' → logprob: -10.940997123718262
    8. '   
' → logprob: -10.940997123718262
    9. '\n' → logprob: -11.065997123718262
    10. '    
    
' → logprob: -11.315997123718262

Token 368: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5013682246208191
    2. 'if' → logprob: -1.0013682842254639
    3. '
' → logprob: -4.251368045806885
    4. ' if' → logprob: -5.751368045806885
    5. 'print' → logprob: -5.751368045806885
    6. 'result' → logprob: -5.876368045806885
    7. '    
' → logprob: -6.501368045806885
    8. 'moves' → logprob: -7.001368045806885
    9. 'current' → logprob: -8.126368522644043
    10. 'n' → logprob: -8.126368522644043

Token 369: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.12020237743854523
    2. '   ' → logprob: -2.3702023029327393
    3. 'print' → logprob: -4.245202541351318
    4. 'moves' → logprob: -6.245202541351318
    5. 'result' → logprob: -7.120202541351318
    6. 'return' → logprob: -7.370202541351318
    7. ' if' → logprob: -7.495202541351318
    8. 'answer' → logprob: -7.995202541351318
    9. 'while' → logprob: -8.24520206451416
    10. 'current' → logprob: -8.37020206451416

Token 370: ' Initial' (ID: 9209)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.029896395280957222
    2. '#' → logprob: -3.9048964977264404
    3. 'answer' → logprob: -5.654896259307861
    4. 'moves' → logprob: -5.779896259307861
    5. 'result' → logprob: -7.279896259307861
    6. 'remaining' → logprob: -7.654896259307861
    7. 'print' → logprob: -7.654896259307861
    8. ' if' → logprob: -8.27989673614502
    9. 'ans' → logprob: -8.27989673614502
    10. 'turn' → logprob: -8.90489673614502

Token 371: ' number' (ID: 2086)
  Prédit: '_components'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_components' → logprob: -0.3616964519023895
    2. 'components' → logprob: -1.861696481704712
    3. ' =' → logprob: -2.236696481704712
    4. ' components' → logprob: -3.986696481704712
    5. '_moves' → logprob: -5.111696243286133
    6. '_' → logprob: -5.361696243286133
    7. '_player' → logprob: -5.486696243286133
    8. '=' → logprob: -6.236696243286133
    9. 'player' → logprob: -6.861696243286133
    10. '_move' → logprob: -7.111696243286133

Token 372: ' of' (ID: 328)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.048503328114748
    2. ' _' → logprob: -4.048503398895264
    3. ' =' → logprob: -4.798503398895264
    4. ' of' → logprob: -4.923503398895264
    5. '_of' → logprob: -5.298503398895264
    6. '=' → logprob: -6.173503398895264
    7. ' ' → logprob: -6.173503398895264
    8. '_components' → logprob: -6.298503398895264
    9. 'of' → logprob: -6.798503398895264
    10. '_o' → logprob: -7.298503398895264

Token 373: ' moves' (ID: 19523)
  Prédit: '_components'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_components' → logprob: -0.09289084374904633
    2. 'components' → logprob: -2.717890739440918
    3. ' components' → logprob: -4.217890739440918
    4. '_moves' → logprob: -5.342890739440918
    5. '_edges' → logprob: -6.592890739440918
    6. '_' → logprob: -7.467890739440918
    7. ' =' → logprob: -7.592890739440918
    8. '_tokens' → logprob: -8.592890739440918
    9. 'moves' → logprob: -9.092890739440918
    10. '_remaining' → logprob: -9.342890739440918

Token 374: ' possible' (ID: 4149)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03365907073020935
    2. '=' → logprob: -3.408658981323242
    3. '_' → logprob: -12.658658981323242
    4. 's' → logprob: -13.283658981323242
    5. ' ' → logprob: -13.783658981323242
    6. 'moves' → logprob: -14.033658981323242
    7. ' ' → logprob: -14.408658981323242
    8. 'initial' → logprob: -14.408658981323242
    9. '＝' → logprob: -14.408658981323242
    10. '_needed' → logprob: -14.533658981323242

Token 375: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011056780815124512
    2. '=' → logprob: -4.511056900024414
    3. 's' → logprob: -12.136056900024414
    4. ' ' → logprob: -14.511056900024414
    5. 'moves' → logprob: -14.761056900024414
    6. '_' → logprob: -15.136056900024414
    7. 'equals' → logprob: -15.136056900024414
    8. ',' → logprob: -15.511056900024414
    9. 'is' → logprob: -15.511056900024414
    10. '_to' → logprob: -15.636056900024414

Token 376: ' uf' (ID: 35772)
  Prédit: ' uf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' uf' → logprob: -0.06996578723192215
    2. 'uf' → logprob: -2.6949658393859863
    3. '   ' → logprob: -11.194965362548828
    4. 'ufs' → logprob: -12.319965362548828
    5. ' ' → logprob: -13.069965362548828
    6. '.uf' → logprob: -13.444965362548828
    7. ' uff' → logprob: -13.819965362548828
    8. ' u' → logprob: -14.069965362548828
    9. '(' → logprob: -14.194965362548828
    10. 'ufi' → logprob: -14.569965362548828

Token 377: '.components' (ID: 41872)
  Prédit: '.components'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.components' → logprob: -0.006137941498309374
    2. '.' → logprob: -5.131137847900391
    3. ' .' → logprob: -8.63113784790039
    4. '.parts' → logprob: -12.25613784790039
    5. '.comp' → logprob: -12.38113784790039
    6. 'components' → logprob: -12.75613784790039
    7. '`.' → logprob: -13.25613784790039
    8. '.points' → logprob: -13.50613784790039
    9. '.n' → logprob: -13.63113784790039
    10. '.component' → logprob: -13.63113784790039

Token 378: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.20825044810771942
    2. '
' → logprob: -2.0832505226135254
    3. ' ' → logprob: -3.0832505226135254
    4. '   ' → logprob: -5.458250522613525
    5. '-' → logprob: -6.333250522613525
    6. '<|end|>' → logprob: -6.583250522613525
    7. '

' → logprob: -6.708250522613525
    8. '  
' → logprob: -6.833250522613525
    9. '  ' → logprob: -6.958250522613525
    10. ')' → logprob: -6.958250522613525

Token 379: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.009757270105183125
    2. ' ' → logprob: -4.634757041931152
    3. '2' → logprob: -13.634757041931152
    4. '```' → logprob: -16.63475799560547
    5. '   ' → logprob: -16.75975799560547
    6. ' one' → logprob: -18.00975799560547
    7. '  ' → logprob: -18.50975799560547
    8. '１' → logprob: -18.63475799560547
    9. '<|end|>' → logprob: -18.75975799560547
    10. '
' → logprob: -19.75975799560547

Token 380: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.4391956685576588e-05
    2. ' ' → logprob: -10.625024795532227
    3. '2' → logprob: -19.125024795532227
    4. '   ' → logprob: -20.125024795532227
    5. '<|end|>' → logprob: -20.375024795532227
    6. '```' → logprob: -20.500024795532227
    7. '１' → logprob: -21.125024795532227
    8. '  ' → logprob: -21.875024795532227
    9. '۱' → logprob: -22.000024795532227
    10. 'one' → logprob: -22.875024795532227

Token 381: ',
' (ID: 412)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1762828826904297
    2. '   ' → logprob: -2.0512828826904297
    3. 'if' → logprob: -3.5512828826904297
    4. '    
' → logprob: -5.55128288269043
    5. ' if' → logprob: -8.67628288269043
    6. '\n' → logprob: -9.42628288269043
    7. 'print' → logprob: -9.67628288269043
    8. '
' → logprob: -9.80128288269043
    9. 'result' → logprob: -10.80128288269043
    10. '  
' → logprob: -11.05128288269043

Token 382: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6294533014297485
    2. '
' → logprob: -2.129453182220459
    3. ' and' → logprob: -2.129453182220459
    4. '\n' → logprob: -2.379453182220459
    5. '    
' → logprob: -2.629453182220459
    6. ' if' → logprob: -4.254453182220459
    7. ' 
' → logprob: -4.379453182220459
    8. '  
' → logprob: -4.879453182220459
    9. 'if' → logprob: -5.129453182220459
    10. ' but' → logprob: -5.379453182220459

Token 383: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10198209434747696
    2. ' if' → logprob: -2.6019821166992188
    3. ' and' → logprob: -4.726982116699219
    4. '\n' → logprob: -5.851982116699219
    5. '    
' → logprob: -6.101982116699219
    6. 'if' → logprob: -6.226982116699219
    7. '#' (adapté à ' #') → logprob: -6.851982116699219
    8. ' #' → logprob: -6.976982116699219
    9. ' turn' → logprob: -7.476982116699219
    10. ' is' → logprob: -7.601982116699219

Token 384: ' because' (ID: 2236)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.257650375366211
    2. ' if' → logprob: -1.257650375366211
    3. 'if' → logprob: -1.882650375366211
    4. '   ' → logprob: -2.007650375366211
    5. 'result' → logprob: -3.382650375366211
    6. ' #' → logprob: -3.382650375366211
    7. '
' → logprob: -3.882650375366211
    8. ' and' → logprob: -4.507650375366211
    9. 'player' → logprob: -5.382650375366211
    10. ' so' → logprob: -5.632650375366211

Token 385: ' to' (ID: 316)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.8750125169754028
    2. ' each' → logprob: -1.2500125169754028
    3. ' adding' → logprob: -2.2500123977661133
    4. ' connecting' → logprob: -2.7500123977661133
    5. ' to' → logprob: -3.0000123977661133
    6. 'each' → logprob: -4.250012397766113
    7. ' only' → logprob: -4.750012397766113
    8. 'the' → logprob: -5.000012397766113
    9. ' players' → logprob: -5.125012397766113
    10. ' if' → logprob: -5.125012397766113

Token 386: ' connect' (ID: 4837)
  Prédit: ' connect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' connect' → logprob: -0.3024527132511139
    2. 'connect' → logprob: -1.4274526834487915
    3. ' make' → logprob: -4.177452564239502
    4. 'make' → logprob: -5.302452564239502
    5. '	connect' → logprob: -7.927452564239502
    6. '   ' → logprob: -9.30245304107666
    7. ' ' → logprob: -9.80245304107666
    8. ' link' → logprob: -10.30245304107666
    9. '_connect' → logprob: -10.80245304107666
    10. ' unite' → logprob: -10.80245304107666

Token 387: ' all' (ID: 722)
  Prédit: ' all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.03536282852292061
    2. 'all' → logprob: -3.910362720489502
    3. ' the' → logprob: -4.285362720489502
    4. 'the' → logprob: -7.910362720489502
    5. ' ' → logprob: -8.41036319732666
    6. ' components' → logprob: -8.53536319732666
    7. ' them' → logprob: -9.91036319732666
    8. ' uf' → logprob: -10.41036319732666
    9. ' two' → logprob: -10.53536319732666
    10. 'components' → logprob: -10.66036319732666

Token 388: ' components' (ID: 10674)
  Prédit: ' components'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' components' → logprob: -0.11520082503557205
    2. 'components' → logprob: -2.2402007579803467
    3. ' the' → logprob: -6.240200996398926
    4. ' nodes' → logprob: -8.740200996398926
    5. ' vertices' → logprob: -9.240200996398926
    6. '_components' → logprob: -9.740200996398926
    7. ' ' → logprob: -10.115200996398926
    8. 'the' → logprob: -10.615200996398926
    9. 'nodes' → logprob: -11.990200996398926
    10. ' componentes' → logprob: -11.990200996398926

Token 389: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01831393875181675
    2. ' into' → logprob: -4.768313884735107
    3. ' you' → logprob: -4.768313884735107
    4. ' we' → logprob: -8.393314361572266
    5. ' requires' → logprob: -8.643314361572266
    6. '   ' → logprob: -8.893314361572266
    7. 'you' → logprob: -9.143314361572266
    8. ' with' → logprob: -9.518314361572266
    9. ' ,' → logprob: -9.768314361572266
    10. ' ' → logprob: -9.893314361572266

Token 390: ' at' (ID: 540)
  Prédit: ' you'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' you' → logprob: -0.9189469814300537
    2. ' we' → logprob: -1.5439469814300537
    3. 'you' → logprob: -1.7939469814300537
    4. 'we' → logprob: -2.5439469814300537
    5. ' uf' → logprob: -2.7939469814300537
    6. ' one' → logprob: -3.4189469814300537
    7. 'uf' → logprob: -4.418947219848633
    8. '#' → logprob: -4.668947219848633
    9. 'one' → logprob: -5.293947219848633
    10. ' ' → logprob: -5.668947219848633

Token 391: ' least' (ID: 5153)
  Prédit: 'least'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'least' → logprob: -0.43287837505340576
    2. ' least' → logprob: -1.0578783750534058
    3. 'minimum' → logprob: -6.182878494262695
    4. ' minimum' → logprob: -6.682878494262695
    5. 'most' → logprob: -7.557878494262695
    6. '   ' → logprob: -8.807878494262695
    7. ' most' → logprob: -9.557878494262695
    8. ' uf' → logprob: -10.807878494262695
    9. ' ' → logprob: -11.057878494262695
    10. 'each' → logprob: -11.307878494262695

Token 392: ' that' (ID: 484)
  Prédit: ' uf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' uf' → logprob: -0.205372154712677
    2. 'uf' → logprob: -1.7053720951080322
    3. ' that' → logprob: -6.330372333526611
    4. ' one' → logprob: -6.455372333526611
    5. 'that' → logprob: -7.955372333526611
    6. 'one' → logprob: -9.205371856689453
    7. ' ' → logprob: -9.955371856689453
    8. ' the' → logprob: -11.080371856689453
    9. ' two' → logprob: -11.580371856689453
    10. ' those' → logprob: -11.705371856689453

Token 393: ' many' (ID: 1991)
  Prédit: 'many'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'many' → logprob: -0.43327978253364563
    2. ' many' → logprob: -1.0582797527313232
    3. ' number' → logprob: -6.058279991149902
    4. 'number' → logprob: -6.558279991149902
    5. 'much' → logprob: -8.308279991149902
    6. '
' → logprob: -8.683279991149902
    7. ' much' → logprob: -9.308279991149902
    8. '-' → logprob: -9.433279991149902
    9. '   ' → logprob: -10.058279991149902
    10. ' -' → logprob: -10.058279991149902

Token 394: ' edges' (ID: 22569)
  Prédit: ' edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.03960629180073738
    2. 'edges' → logprob: -3.4146063327789307
    3. ' moves' → logprob: -5.289606094360352
    4. 'moves' → logprob: -7.414606094360352
    5. ' steps' → logprob: -9.914606094360352
    6. ' edge' → logprob: -10.039606094360352
    7. '_edges' → logprob: -10.539606094360352
    8. ' are' → logprob: -11.039606094360352
    9. ' new' → logprob: -11.414606094360352
    10. ' to' → logprob: -11.414606094360352

Token 395: ' are' (ID: 553)
  Prédit: ' must'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' must' → logprob: -0.4914530813694
    2. ' are' → logprob: -1.3664530515670776
    3. ' need' → logprob: -2.491453170776367
    4. 'must' → logprob: -3.616453170776367
    5. 'need' → logprob: -4.616453170776367
    6. '<|end|>' → logprob: -4.616453170776367
    7. 'are' → logprob: -6.116453170776367
    8. ' to' → logprob: -7.491453170776367
    9. ' have' → logprob: -8.616453170776367
    10. ' can' → logprob: -8.866453170776367

Token 396: ' needed' (ID: 6118)
  Prédit: 'needed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'needed' → logprob: -0.15422263741493225
    2. 'added' → logprob: -2.7792227268218994
    3. ' needed' → logprob: -2.9042227268218994
    4. 'required' → logprob: -3.9042227268218994
    5. ' required' → logprob: -5.90422248840332
    6. 'necessary' → logprob: -6.65422248840332
    7. ' added' → logprob: -6.77922248840332
    8. ' ' → logprob: -8.90422248840332
    9. '   ' → logprob: -9.02922248840332
    10. '_needed' → logprob: -9.15422248840332

Token 397: '.

' (ID: 364)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6702927350997925
    2. '   ' → logprob: -0.7952927350997925
    3. '    
' → logprob: -3.420292854309082
    4. '

' → logprob: -6.295292854309082
    5. ',' → logprob: -7.045292854309082
    6. '#' → logprob: -7.795292854309082
    7. ',
' → logprob: -8.170292854309082
    8. '  
' → logprob: -8.670292854309082
    9. 'def' → logprob: -9.170292854309082
    10. '.' → logprob: -9.170292854309082

Token 398: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07696676254272461
    2. '
' → logprob: -2.8269667625427246
    3. '    
' → logprob: -4.826966762542725
    4. 'if' → logprob: -5.076966762542725
    5. 'result' → logprob: -8.201967239379883
    6. ' if' → logprob: -9.326967239379883
    7. '\n' → logprob: -9.576967239379883
    8. 'moves' → logprob: -9.951967239379883
    9. 'print' → logprob: -10.201967239379883
    10. '  
' → logprob: -10.826967239379883

Token 399: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.16283759474754333
    2. 'print' → logprob: -2.912837505340576
    3. 'moves' → logprob: -3.037837505340576
    4. 'result' → logprob: -3.537837505340576
    5. '   ' → logprob: -4.412837505340576
    6. '#' (adapté à ' #') → logprob: -5.662837505340576
    7. 'return' → logprob: -6.412837505340576
    8. 'answer' → logprob: -7.537837505340576
    9. '
' → logprob: -8.162837982177734
    10. 'remaining' → logprob: -8.412837982177734

Token 400: ' Players' (ID: 44135)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.05893884599208832
    2. 'moves' → logprob: -3.55893874168396
    3. '#' → logprob: -3.93393874168396
    4. 'print' → logprob: -5.558938980102539
    5. 'answer' → logprob: -6.308938980102539
    6. 'result' → logprob: -6.933938980102539
    7. 'winner' → logprob: -7.308938980102539
    8. 'If' → logprob: -7.808938980102539
    9. 'remaining' → logprob: -7.933938980102539
    10. 'turn' → logprob: -8.308938980102539

Token 401: ' alternate' (ID: 43193)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1752607375383377
    2. '=' → logprob: -1.9252607822418213
    3. ' are' → logprob: -5.300260543823242
    4. ' take' → logprob: -5.425260543823242
    5. ''' → logprob: -6.050260543823242
    6. '1' → logprob: -6.800260543823242
    7. ',' → logprob: -7.800260543823242
    8. '_' → logprob: -8.050260543823242
    9. ' ' → logprob: -9.050260543823242
    10. ' altern' → logprob: -9.050260543823242

Token 402: ' moves' (ID: 19523)
  Prédit: 'turn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'turn' → logprob: -0.5853995084762573
    2. ' turns' → logprob: -1.0853995084762573
    3. 'moves' → logprob: -3.210399627685547
    4. ' turn' → logprob: -3.710399627685547
    5. ' moves' → logprob: -3.835399627685547
    6. '   ' → logprob: -5.460399627685547
    7. '_turn' → logprob: -5.585399627685547
    8. ' in' → logprob: -5.585399627685547
    9. ' starting' → logprob: -6.085399627685547
    10. '
' → logprob: -6.460399627685547

Token 403: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2682456970214844
    2. '
' → logprob: -1.5182456970214844
    3. ',' → logprob: -4.768245697021484
    4. '    
' → logprob: -5.643245697021484
    5. '\n' → logprob: -6.518245697021484
    6. '#' → logprob: -7.018245697021484
    7. '  
' → logprob: -8.018245697021484
    8. 'current' → logprob: -8.518245697021484
    9. ' and' → logprob: -8.643245697021484
    10. 'import' → logprob: -9.018245697021484

Token 404: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.032841406762599945
    2. '#' → logprob: -3.907841444015503
    3. ' #' → logprob: -4.532841205596924
    4. '
' → logprob: -7.532841205596924
    5. ' current' → logprob: -8.282841682434082
    6. '    
' → logprob: -8.407841682434082
    7. 'current' → logprob: -9.282841682434082
    8. '    ' → logprob: -9.407841682434082
    9. ' ' → logprob: -9.907841682434082
    10. ' player' → logprob: -10.282841682434082

Token 405: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20755481719970703
    2. '#' (adapté à ' #') → logprob: -2.957554817199707
    3. ' current' → logprob: -3.332554817199707
    4. ' turn' → logprob: -3.457554817199707
    5. ' #' → logprob: -3.582554817199707
    6. 'current' → logprob: -4.582554817199707
    7. 'turn' → logprob: -4.707554817199707
    8. ' if' → logprob: -5.207554817199707
    9. ' player' → logprob: -5.332554817199707
    10. '
' → logprob: -5.957554817199707

Token 406: ' If' (ID: 1843)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.08645129203796387
    2. 'if' → logprob: -3.711451292037964
    3. 'current' → logprob: -3.711451292037964
    4. 'first' → logprob: -4.086451530456543
    5. '   ' → logprob: -5.211451530456543
    6. ' first' → logprob: -5.836451530456543
    7. ' current' → logprob: -6.836451530456543
    8. ' #' → logprob: -6.836451530456543
    9. ' if' → logprob: -6.836451530456543
    10. 'turn' → logprob: -7.086451530456543

Token 407: ' the' (ID: 290)
  Prédit: ' uf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' uf' → logprob: -0.11426901817321777
    2. ' (' → logprob: -2.7392690181732178
    3. '(' → logprob: -3.3642690181732178
    4. 'uf' → logprob: -4.739269256591797
    5. '(u' → logprob: -10.739269256591797
    6. '   ' → logprob: -12.989269256591797
    7. ' ' → logprob: -13.239269256591797
    8. '(U' → logprob: -13.864269256591797
    9. ' ' → logprob: -14.239269256591797
    10. '(f' → logprob: -14.614269256591797

Token 408: ' number' (ID: 2086)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.060037899762392044
    2. ' (' → logprob: -3.310037851333618
    3. 'uf' → logprob: -4.310038089752197
    4. ' uf' → logprob: -5.185038089752197
    5. '(u' → logprob: -5.935038089752197
    6. '   ' → logprob: -11.185037612915039
    7. 'u' → logprob: -11.185037612915039
    8. '(U' → logprob: -11.435037612915039
    9. 'ufs' → logprob: -12.185037612915039
    10. '
' → logprob: -12.560037612915039

Token 409: ' of' (ID: 328)
  Prédit: 'of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'of' → logprob: -0.38990023732185364
    2. ' of' → logprob: -1.1399002075195312
    3. ' ' → logprob: -7.139900207519531
    4. '
' → logprob: -7.639900207519531
    5. '_' → logprob: -7.889900207519531
    6. ' uf' → logprob: -8.014900207519531
    7. '_of' → logprob: -8.014900207519531
    8. ' is' → logprob: -8.889900207519531
    9. 'ofs' → logprob: -9.139900207519531
    10. '1' → logprob: -9.764900207519531

Token 410: ' moves' (ID: 19523)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.30457165837287903
    2. 'components' → logprob: -1.8045716285705566
    3. 'uf' → logprob: -3.0545716285705566
    4. 'moves' → logprob: -3.5545716285705566
    5. ' (' → logprob: -5.054571628570557
    6. ' uf' → logprob: -5.429571628570557
    7. ' components' → logprob: -6.054571628570557
    8. '
' → logprob: -6.429571628570557
    9. '_components' → logprob: -6.429571628570557
    10. '   ' → logprob: -6.554571628570557

Token 411: ' (' (ID: 350)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.1433297097682953
    2. ' %' → logprob: -2.518329620361328
    3. ' is' → logprob: -3.143329620361328
    4. 'is' → logprob: -4.893329620361328
    5. 'remaining' → logprob: -6.643329620361328
    6. '_remaining' → logprob: -7.643329620361328
    7. ' remaining' → logprob: -9.268329620361328
    8. ' ' → logprob: -9.518329620361328
    9. '%i' → logprob: -9.518329620361328
    10. 'left' → logprob: -9.768329620361328

Token 412: 'uf' (ID: 1427)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3279612362384796
    2. ' (' → logprob: -2.0779612064361572
    3. 'uf' → logprob: -2.7029612064361572
    4. '(' → logprob: -3.3279612064361572
    5. ' %' → logprob: -3.5779612064361572
    6. '
' → logprob: -5.202961444854736
    7. ' ' → logprob: -5.327961444854736
    8. ' )' → logprob: -5.452961444854736
    9. '%' → logprob: -5.827961444854736
    10. ' uf' → logprob: -5.827961444854736

Token 413: '.components' (ID: 41872)
  Prédit: '.components'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.components' → logprob: -0.0022167498245835304
    2. '.' → logprob: -6.127216815948486
    3. '.comp' → logprob: -11.127216339111328
    4. '.com' → logprob: -12.127216339111328
    5. ' .' → logprob: -12.752216339111328
    6. 'components' → logprob: -13.127216339111328
    7. '.component' → logprob: -13.627216339111328
    8. ').' → logprob: -13.627216339111328
    9. '.
' → logprob: -14.377216339111328
    10. '.Components' → logprob: -14.502216339111328

Token 414: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.17249789834022522
    2. ' %' → logprob: -2.4224979877471924
    3. '-' → logprob: -3.4224979877471924
    4. ')' → logprob: -3.6724979877471924
    5. '%' → logprob: -5.297497749328613
    6. ' ' → logprob: -5.797497749328613
    7. ' >' → logprob: -6.422497749328613
    8. ' )' → logprob: -6.547497749328613
    9. '>' → logprob: -7.797497749328613
    10. '   ' → logprob: -9.922497749328613

Token 415: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4288169741630554
    2. ' ' → logprob: -1.0538170337677002
    3. ')' → logprob: -9.178816795349121
    4. ' )' → logprob: -12.053816795349121
    5. '```' → logprob: -12.553816795349121
    6. '   ' → logprob: -14.053816795349121
    7. ' ' → logprob: -14.553816795349121
    8. '>' → logprob: -14.803816795349121
    9. '=' → logprob: -14.928816795349121
    10. '
' → logprob: -15.428816795349121

Token 416: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0017036291537806392
    2. ' ' → logprob: -6.37670373916626
    3. ')' → logprob: -14.251703262329102
    4. '```' → logprob: -14.751703262329102
    5. '   ' → logprob: -15.251703262329102
    6. '>' → logprob: -17.2517032623291
    7. '`' → logprob: -17.2517032623291
    8. '
' → logprob: -17.6267032623291
    9. '2' → logprob: -17.6892032623291
    10. '  ' → logprob: -18.0642032623291

Token 417: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004493805463425815
    2. ' )' → logprob: -7.875449180603027
    3. ')%' → logprob: -9.625449180603027
    4. ')
' → logprob: -13.750449180603027
    5. '%' → logprob: -14.125449180603027
    6. ' ' → logprob: -14.375449180603027
    7. '
' → logprob: -15.125449180603027
    8. '）' → logprob: -16.125450134277344
    9. '+' → logprob: -16.375450134277344
    10. '')' → logprob: -16.625450134277344

Token 418: ' is' (ID: 382)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.3494472801685333
    2. '%' → logprob: -1.224447250366211
    3. ')' → logprob: -7.349447250366211
    4. ' is' → logprob: -8.099447250366211
    5. ')%' → logprob: -10.474447250366211
    6. ' ' → logprob: -11.599447250366211
    7. ' %
' → logprob: -12.474447250366211
    8. ' )' → logprob: -12.599447250366211
    9. '%
' → logprob: -12.974447250366211
    10. '()%' → logprob: -13.349447250366211

Token 419: ' odd' (ID: 14210)
  Prédit: 'odd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'odd' → logprob: -0.42689359188079834
    2. 'even' → logprob: -1.4268935918807983
    3. ' even' → logprob: -2.926893711090088
    4. ' odd' → logprob: -2.926893711090088
    5. '%' → logprob: -8.67689323425293
    6. '0' → logprob: -10.67689323425293
    7. '_even' → logprob: -10.80189323425293
    8. 'Odd' → logprob: -11.17689323425293
    9. ' ' → logprob: -11.30189323425293
    10. 'od' → logprob: -11.30189323425293

Token 420: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.010120810009539127
    2. ',' → logprob: -4.635120868682861
    3. ':
' → logprob: -8.260120391845703
    4. ' :' → logprob: -10.010120391845703
    5. '):' → logprob: -10.260120391845703
    6. ':return' → logprob: -12.010120391845703
    7. ')' → logprob: -12.760120391845703
    8. ' ,' → logprob: -12.760120391845703
    9. ',
' → logprob: -12.760120391845703
    10. ' else' → logprob: -12.885120391845703

Token 421: ' first' (ID: 1577)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.5102481245994568
    2. 'print' → logprob: -1.5102481842041016
    3. '   ' → logprob: -2.3852481842041016
    4. ' first' → logprob: -3.3852481842041016
    5. ' ' → logprob: -4.635248184204102
    6. '    ' → logprob: -5.010248184204102
    7. '"' → logprob: -5.135248184204102
    8. ' Alice' → logprob: -5.260248184204102
    9. ''' → logprob: -5.635248184204102
    10. ' A' → logprob: -5.760248184204102

Token 422: ' player' (ID: 5033)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6554762125015259
    2. '_player' → logprob: -1.2804762125015259
    3. '<|end|>' → logprob: -2.2804760932922363
    4. ' player' → logprob: -2.5304760932922363
    5. 'player' → logprob: -5.155476093292236
    6. ' _' → logprob: -5.155476093292236
    7. ' Player' → logprob: -6.155476093292236
    8. 'Player' → logprob: -6.405476093292236
    9. '_Player' → logprob: -6.780476093292236
    10. ')' → logprob: -6.905476093292236

Token 423: ' (' (ID: 350)
  Prédit: ' wins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' wins' → logprob: -0.23021574318408966
    2. 'wins' → logprob: -2.1052157878875732
    3. ' will' → logprob: -2.6052157878875732
    4. '<|end|>' → logprob: -6.355215549468994
    5. 'will' → logprob: -6.480215549468994
    6. ' ' → logprob: -6.605215549468994
    7. ' can' → logprob: -6.605215549468994
    8. ' has' → logprob: -7.105215549468994
    9. ' loses' → logprob: -8.105216026306152
    10. '   ' → logprob: -8.230216026306152

Token 424: 'T' (ID: 51)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.23709383606910706
    2. ' )' → logprob: -1.7370938062667847
    3. ''' → logprob: -4.112093925476074
    4. '')' → logprob: -4.487093925476074
    5. ' '' → logprob: -6.112093925476074
    6. ' can' → logprob: -6.737093925476074
    7. ' ')' → logprob: -7.237093925476074
    8. ''A' → logprob: -7.612093925476074
    9. ' will' → logprob: -7.737093925476074
    10. ' ' → logprob: -7.987093925476074

Token 425: 'aro' (ID: 8421)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7895116209983826
    2. 'a' → logprob: -1.0395116806030273
    3. 'o' → logprob: -2.6645116806030273
    4. '')' → logprob: -3.1645116806030273
    5. 'ak' → logprob: -3.7895116806030273
    6. 'aro' → logprob: -4.539511680603027
    7. '`)' → logprob: -4.664511680603027
    8. '```' → logprob: -5.039511680603027
    9. 'akah' → logprob: -5.414511680603027
    10. ']' → logprob: -5.664511680603027

Token 426: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04330563172698021
    2. ' )' → logprob: -3.1683056354522705
    3. '')' → logprob: -8.543305397033691
    4. '`)' → logprob: -10.668305397033691
    5. ')
' → logprob: -10.918305397033691
    6. '
' → logprob: -11.418305397033691
    7. '```' → logprob: -11.793305397033691
    8. ' )
' → logprob: -11.918305397033691
    9. '   ' → logprob: -12.168305397033691
    10. ' ' → logprob: -12.418305397033691

Token 427: ' wins' (ID: 25327)
  Prédit: ' wins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' wins' → logprob: -0.4159723222255707
    2. 'wins' → logprob: -1.165972352027893
    3. ' will' → logprob: -3.9159722328186035
    4. 'will' → logprob: -6.5409722328186035
    5. ' can' → logprob: -6.6659722328186035
    6. ' has' → logprob: -6.7909722328186035
    7. 'w' → logprob: -7.0409722328186035
    8. ' ' → logprob: -7.2909722328186035
    9. '<|end|>' → logprob: -7.6659722328186035
    10. ')' → logprob: -7.9159722328186035

Token 428: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004813869018107653
    2. ',' → logprob: -6.0048136711120605
    3. ' else' → logprob: -6.7548136711120605
    4. 'else' → logprob: -7.2548136711120605
    5. ' and' → logprob: -9.004814147949219
    6. '.' → logprob: -9.129814147949219
    7. '    
' → logprob: -10.004814147949219
    8. '#' → logprob: -10.254814147949219
    9. ')' → logprob: -10.254814147949219
    10. '<|end|>' → logprob: -10.754814147949219

Token 429: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.36525458097457886
    2. 'else' → logprob: -1.3652546405792236
    3. ' else' → logprob: -3.3652546405792236
    4. '#' → logprob: -4.4902544021606445
    5. '.' → logprob: -6.3652544021606445
    6. '    
' → logprob: -6.8652544021606445
    7. '\n' → logprob: -7.3652544021606445
    8. ' ' → logprob: -7.9902544021606445
    9. ',' → logprob: -8.115254402160645
    10. ':' → logprob: -9.240254402160645

Token 430: ' second' (ID: 3099)
  Prédit: ' second'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' second' → logprob: -0.2731999158859253
    2. 'second' → logprob: -1.5231999158859253
    3. 'Second' → logprob: -4.398200035095215
    4. ' first' → logprob: -6.273200035095215
    5. '"' → logprob: -6.398200035095215
    6. '   ' → logprob: -7.023200035095215
    7. ' T' → logprob: -7.523200035095215
    8. 'T' → logprob: -7.648200035095215
    9. 'first' → logprob: -7.773200035095215
    10. ' Second' → logprob: -8.023200035095215

Token 431: ' player' (ID: 5033)
  Prédit: ' player'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' player' → logprob: -0.7089738845825195
    2. 'player' → logprob: -1.2089738845825195
    3. ' (' → logprob: -2.2089738845825195
    4. '_player' → logprob: -2.7089738845825195
    5. '(player' → logprob: -3.8339738845825195
    6. 'Player' → logprob: -5.5839738845825195
    7. '_' → logprob: -5.9589738845825195
    8. '(' → logprob: -6.0839738845825195
    9. '<|end|>' → logprob: -7.4589738845825195
    10. ',' → logprob: -8.08397388458252

Token 432: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.6300032138824463
    2. '(' → logprob: -1.5050032138824463
    3. 'wins' → logprob: -2.1300032138824463
    4. ' wins' → logprob: -3.0050032138824463
    5. '()' → logprob: -3.1300032138824463
    6. ',' → logprob: -5.255002975463867
    7. '#' → logprob: -5.380002975463867
    8. '(win' → logprob: -5.880002975463867
    9. ':' → logprob: -6.005002975463867
    10. '(True' → logprob: -6.130002975463867

Token 433: 'Han' (ID: 72234)
  Prédit: 'J'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'J' → logprob: -0.5234859585762024
    2. 'Han' → logprob: -1.0234858989715576
    3. 'A' → logprob: -3.1484858989715576
    4. '   ' → logprob: -6.398486137390137
    5. 'Ji' → logprob: -7.898486137390137
    6. '  ' → logprob: -7.898486137390137
    7. ' ' → logprob: -8.148486137390137
    8. 'H' → logprob: -8.148486137390137
    9. '(J' → logprob: -8.148486137390137
    10. '    ' → logprob: -8.398486137390137

Token 434: 'ako' (ID: 5938)
  Prédit: 'ako'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ako' → logprob: -0.034292709082365036
    2. 'a' → logprob: -3.784292697906494
    3. 'zo' → logprob: -4.659292697906494
    4. 'ak' → logprob: -7.534292697906494
    5. '```' → logprob: -7.909292697906494
    6. 'aki' → logprob: -9.159293174743652
    7. 'ami' → logprob: -9.534293174743652
    8. 'ada' → logprob: -9.659293174743652
    9. ')' → logprob: -9.909293174743652
    10. 'A' → logprob: -10.034293174743652

Token 435: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0011262869229540229
    2. '')' → logprob: -8.251126289367676
    3. ' )' → logprob: -8.501126289367676
    4. ')
' → logprob: -8.751126289367676
    5. ' wins' → logprob: -8.751126289367676
    6. 'wins' → logprob: -9.126126289367676
    7. ').' → logprob: -9.501126289367676
    8. '   ' → logprob: -10.501126289367676
    9. ')'' → logprob: -10.626126289367676
    10. ')')
' → logprob: -10.751126289367676

Token 436: ' wins' (ID: 25327)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5885459184646606
    2. '   ' → logprob: -0.8385459184646606
    3. '    
' → logprob: -4.463545799255371
    4. 'def' → logprob: -8.338545799255371
    5. 'if' → logprob: -8.713545799255371
    6. '

' → logprob: -8.963545799255371
    7. 'print' → logprob: -9.088545799255371
    8. '  
' → logprob: -9.838545799255371
    9. '
' → logprob: -10.088545799255371
    10. ',' → logprob: -10.213545799255371

Token 437: '.

' (ID: 364)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5842801332473755
    2. '   ' → logprob: -0.8342801332473755
    3. '    
' → logprob: -5.334280014038086
    4. 'if' → logprob: -6.334280014038086
    5. 'print' → logprob: -6.584280014038086
    6. 'def' → logprob: -9.209280014038086
    7. '\n' → logprob: -10.084280014038086
    8. '

' → logprob: -10.334280014038086
    9. '  
' → logprob: -10.334280014038086
    10. '   
' → logprob: -11.084280014038086

Token 438: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07063481211662292
    2. '
' → logprob: -2.9456348419189453
    3. 'if' → logprob: -5.320634841918945
    4. '    
' → logprob: -5.695634841918945
    5. 'result' → logprob: -5.945634841918945
    6. '\n' → logprob: -6.070634841918945
    7. 'return' → logprob: -6.945634841918945
    8. ' if' → logprob: -8.070634841918945
    9. 'def' → logprob: -8.320634841918945
    10. '\' → logprob: -8.570634841918945

Token 439: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.36680808663368225
    2. 'print' → logprob: -1.2418080568313599
    3. 'moves' → logprob: -4.99180793762207
    4. '   ' → logprob: -5.24180793762207
    5. 'return' → logprob: -5.74180793762207
    6. 'result' → logprob: -5.99180793762207
    7. ' if' → logprob: -8.49180793762207
    8. '```' → logprob: -10.11680793762207
    9. 'move' → logprob: -10.24180793762207
    10. ' print' → logprob: -10.86680793762207

Token 440: ' Explanation' (ID: 134819)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.24508488178253174
    2. 'moves' → logprob: -1.9950848817825317
    3. 'print' → logprob: -2.995084762573242
    4. 'result' → logprob: -3.870084762573242
    5. '   ' → logprob: -5.620084762573242
    6. 'return' → logprob: -5.870084762573242
    7. 'remaining' → logprob: -6.995084762573242
    8. 'answer' → logprob: -6.995084762573242
    9. ' if' → logprob: -7.245084762573242
    10. 'num' → logprob: -7.620084762573242

Token 441: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2883886396884918
    2. ':' → logprob: -2.038388729095459
    3. '
' → logprob: -2.913388729095459
    4. 'if' → logprob: -3.413388729095459
    5. '#' → logprob: -4.538388729095459
    6. ',' → logprob: -4.913388729095459
    7. ' if' → logprob: -5.413388729095459
    8. 'print' → logprob: -5.913388729095459
    9. ':
' → logprob: -6.163388729095459
    10. 'def' → logprob: -6.288388729095459

Token 442: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0017451542662456632
    2. '    ' → logprob: -7.376745223999023
    3. ' if' → logprob: -7.751745223999023
    4. '#' → logprob: -8.001745223999023
    5. ' #' → logprob: -8.501745223999023
    6. ' return' → logprob: -10.126745223999023
    7. '
' → logprob: -10.876745223999023
    8. '    
' → logprob: -11.001745223999023
    9. 'if' → logprob: -11.251745223999023
    10. 'If' → logprob: -11.376745223999023

Token 443: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.634428858757019
    2. '#' (adapté à ' #') → logprob: -1.134428858757019
    3. ' if' → logprob: -2.5094289779663086
    4. 'if' → logprob: -3.5094289779663086
    5. ' #' → logprob: -3.8844289779663086
    6. ' moves' → logprob: -5.384428977966309
    7. '
' → logprob: -5.884428977966309
    8. 'moves' → logprob: -6.009428977966309
    9. 'If' → logprob: -6.884428977966309
    10. 'The' → logprob: -7.009428977966309

Token 444: ' This' (ID: 1328)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3198130130767822
    2. '   ' → logprob: -2.5698130130767822
    3. ' if' → logprob: -2.5698130130767822
    4. ' #' → logprob: -3.0698130130767822
    5. 'if' → logprob: -3.6948130130767822
    6. ' moves' → logprob: -3.8198130130767822
    7. 'moves' → logprob: -4.569812774658203
    8. ' result' → logprob: -5.694812774658203
    9. 'If' → logprob: -6.069812774658203
    10. ' The' → logprob: -6.319812774658203

Token 445: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.07326479256153107
    2. ' code' → logprob: -3.5732648372650146
    3. ' #' → logprob: -4.3232645988464355
    4. 'is' → logprob: -4.9482645988464355
    5. ' ' → logprob: -5.0732645988464355
    6. '#' → logprob: -5.0732645988464355
    7. '   ' → logprob: -6.1982645988464355
    8. ' =' → logprob: -6.6982645988464355
    9. ' means' → logprob: -6.8232645988464355
    10. '
' → logprob: -7.0732645988464355

Token 446: ' because' (ID: 2236)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.9875523447990417
    2. 'a' → logprob: -1.2375524044036865
    3. ' because' → logprob: -1.7375524044036865
    4. 'because' → logprob: -1.9875524044036865
    5. 'an' → logprob: -5.362552165985107
    6. ' an' → logprob: -5.487552165985107
    7. ' the' → logprob: -5.987552165985107
    8. ' parity' → logprob: -6.237552165985107
    9. '   ' → logprob: -6.612552165985107
    10. 'the' → logprob: -6.862552165985107

Token 447: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.2855178117752075
    2. 'the' → logprob: -2.160517692565918
    3. 'if' → logprob: -3.285517692565918
    4. ' if' → logprob: -3.410517692565918
    5. '   ' → logprob: -4.035517692565918
    6. ' adding' → logprob: -4.660517692565918
    7. ' each' → logprob: -4.660517692565918
    8. ' connecting' → logprob: -4.785517692565918
    9. ' parity' → logprob: -5.785517692565918
    10. 'each' → logprob: -6.035517692565918

Token 448: ' player' (ID: 5033)
  Prédit: 'number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'number' → logprob: -1.511862874031067
    2. ' parity' → logprob: -1.761862874031067
    3. ' game' → logprob: -2.0118627548217773
    4. 'grund' → logprob: -2.3868627548217773
    5. 'par' → logprob: -2.7618627548217773
    6. ' number' → logprob: -3.1368627548217773
    7. 'game' → logprob: -3.1368627548217773
    8. 'first' → logprob: -3.2618627548217773
    9. 'moves' → logprob: -3.6368627548217773
    10. ' grund' → logprob: -3.7618627548217773

Token 449: ' forced' (ID: 19387)
  Prédit: ' who'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' who' → logprob: -0.2772650420665741
    2. ' to' → logprob: -1.5272650718688965
    3. 'who' → logprob: -5.0272650718688965
    4. 'to' → logprob: -5.4022650718688965
    5. ''s' → logprob: -5.5272650718688965
    6. '_to' → logprob: -6.0272650718688965
    7. 's' → logprob: -6.0272650718688965
    8. ' can' → logprob: -6.6522650718688965
    9. ' whose' → logprob: -7.1522650718688965
    10. ' ' → logprob: -7.7772650718688965

Token 450: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.20226147770881653
    2. 'to' → logprob: -1.7022614479064941
    3. '_to' → logprob: -7.702261447906494
    4. '#' → logprob: -9.077261924743652
    5. '_' → logprob: -9.327261924743652
    6. ' ' → logprob: -9.952261924743652
    7. ' into' → logprob: -10.202261924743652
    8. ' #' → logprob: -10.202261924743652
    9. '    ' → logprob: -10.952261924743652
    10. '	to' → logprob: -11.327261924743652

Token 451: ' do' (ID: 621)
  Prédit: 'connect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'connect' → logprob: -0.03240365535020828
    2. 'make' → logprob: -4.032403469085693
    3. 'add' → logprob: -4.407403469085693
    4. 'remove' → logprob: -7.907403469085693
    5. ' connect' → logprob: -7.907403469085693
    6. 'lose' → logprob: -7.907403469085693
    7. 'take' → logprob: -8.157403945922852
    8. 'move' → logprob: -8.782403945922852
    9. 'create' → logprob: -9.407403945922852
    10. 'draw' → logprob: -9.657403945922852

Token 452: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.7038927674293518
    2. 'the' → logprob: -0.7038927674293518
    3. 'a' → logprob: -5.078892707824707
    4. 'last' → logprob: -6.203892707824707
    5. ' a' → logprob: -7.203892707824707
    6. '
' → logprob: -7.703892707824707
    7. '#' → logprob: -8.203892707824707
    8. ' last' → logprob: -8.578892707824707
    9. ' ' → logprob: -8.703892707824707
    10. '_last' → logprob: -9.203892707824707

Token 453: ' last' (ID: 2174)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.0062842522747814655
    2. ' last' → logprob: -5.131284236907959
    3. 'final' → logprob: -8.006284713745117
    4. '_last' → logprob: -12.006284713745117
    5. '
' → logprob: -12.631284713745117
    6. ' final' → logprob: -12.881284713745117
    7. '1' → logprob: -13.131284713745117
    8. 'first' → logprob: -13.756284713745117
    9. '	last' → logprob: -13.756284713745117
    10. '最后' → logprob: -13.756284713745117

Token 454: ' move' (ID: 5275)
  Prédit: 'move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'move' → logprob: -0.35978272557258606
    2. ' move' → logprob: -1.4847826957702637
    3. 'connection' → logprob: -2.9847826957702637
    4. '_move' → logprob: -5.109782695770264
    5. 'connect' → logprob: -5.359782695770264
    6. ' connection' → logprob: -5.484782695770264
    7. 'union' → logprob: -5.734782695770264
    8. 'merge' → logprob: -6.109782695770264
    9. 'edge' → logprob: -6.359782695770264
    10. 'add' → logprob: -7.234782695770264

Token 455: ' (' (ID: 350)
  Prédit: ' loses'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' loses' → logprob: -1.0150794982910156
    2. ' will' → logprob: -1.2650794982910156
    3. '   ' → logprob: -2.0150794982910156
    4. ' is' → logprob: -2.3900794982910156
    5. ' (' → logprob: -2.7650794982910156
    6. ' must' → logprob: -4.640079498291016
    7. ' to' → logprob: -4.640079498291016
    8. '#' → logprob: -4.765079498291016
    9. '(' → logprob: -5.015079498291016
    10. '()' → logprob: -5.265079498291016

Token 456: 'connecting' (ID: 162703)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -1.0172152519226074
    2. ' which' → logprob: -1.2672152519226074
    3. 'to' → logprob: -1.7672152519226074
    4. ')' → logprob: -2.6422152519226074
    5. 'which' → logprob: -2.6422152519226074
    6. ' that' → logprob: -3.7672152519226074
    7. 'that' → logprob: -5.267215251922607
    8. ',' → logprob: -6.017215251922607
    9. ' making' → logprob: -6.017215251922607
    10. ' connecting' → logprob: -6.267215251922607

Token 457: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.24101339280605316
    2. ' all' → logprob: -1.7410134077072144
    3. 'the' → logprob: -3.741013288497925
    4. ' components' → logprob: -4.741013526916504
    5. 'all' → logprob: -5.366013526916504
    6. ' a' → logprob: -7.366013526916504
    7. 'components' → logprob: -7.741013526916504
    8. ' ' → logprob: -7.991013526916504
    9. ' two' → logprob: -8.616013526916504
    10. ' one' → logprob: -10.741013526916504

Token 458: ' graph' (ID: 7465)
  Prédit: ' graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.08270793408155441
    2. ' components' → logprob: -3.0827078819274902
    3. 'graph' → logprob: -3.5827078819274902
    4. 'components' → logprob: -5.45770788192749
    5. ' last' → logprob: -7.20770788192749
    6. ' ' → logprob: -7.70770788192749
    7. ' network' → logprob: -10.082708358764648
    8. 'last' → logprob: -10.207708358764648
    9. ' final' → logprob: -10.332708358764648
    10. ' entire' → logprob: -10.707708358764648

Token 459: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006212961161509156
    2. '#' → logprob: -8.50062084197998
    3. ' )' → logprob: -8.62562084197998
    4. ')
' → logprob: -8.75062084197998
    5. '   ' → logprob: -10.25062084197998
    6. '')' → logprob: -11.25062084197998
    7. ' will' → logprob: -12.12562084197998
    8. ' is' → logprob: -12.37562084197998
    9. ' ' → logprob: -12.75062084197998
    10. ',' → logprob: -12.87562084197998

Token 460: ' loses' (ID: 63582)
  Prédit: ' loses'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' loses' → logprob: -0.3446429669857025
    2. ' will' → logprob: -1.719642996788025
    3. ' is' → logprob: -2.4696428775787354
    4. ' must' → logprob: -4.7196431159973145
    5. '   ' → logprob: -5.2196431159973145
    6. '
' → logprob: -5.8446431159973145
    7. ' 
' → logprob: -6.7196431159973145
    8. ' has' → logprob: -6.7196431159973145
    9. ' ' → logprob: -6.7196431159973145
    10. '  
' → logprob: -7.0946431159973145

Token 461: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.29276585578918457
    2. '
' → logprob: -1.4177658557891846
    3. '    
' → logprob: -4.5427656173706055
    4. 'def' → logprob: -7.6677656173706055
    5. '\n' → logprob: -9.042765617370605
    6. 'if' → logprob: -9.792765617370605
    7. '  
' → logprob: -10.417765617370605
    8. ',' → logprob: -10.542765617370605
    9. '\' → logprob: -10.542765617370605
    10. '

' → logprob: -10.792765617370605

Token 462: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0028795339167118073
    2. '    
' → logprob: -7.002879619598389
    3. 'result' → logprob: -7.127879619598389
    4. '
' → logprob: -7.502879619598389
    5. 'if' → logprob: -8.25287914276123
    6. 'moves' → logprob: -9.00287914276123
    7. 'def' → logprob: -9.25287914276123
    8. 'print' → logprob: -10.00287914276123
    9. 'n' → logprob: -11.25287914276123
    10. 'return' → logprob: -11.37787914276123

Token 463: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015421682968735695
    2. 'if' → logprob: -4.8904218673706055
    3. 'result' → logprob: -5.3904218673706055
    4. '
' → logprob: -6.2654218673706055
    5. '    
' → logprob: -7.1404218673706055
    6. ' if' → logprob: -8.140421867370605
    7. 'moves' → logprob: -9.890421867370605
    8. '\n' → logprob: -10.265421867370605
    9. '\' → logprob: -10.640421867370605
    10. 'return' → logprob: -10.765421867370605

Token 464: ' So' (ID: 2632)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14275731146335602
    2. 'if' → logprob: -2.8927574157714844
    3. 'result' → logprob: -3.1427574157714844
    4. '
' → logprob: -3.7677574157714844
    5. '    
' → logprob: -5.767757415771484
    6. 'n' → logprob: -6.267757415771484
    7. 'print' → logprob: -6.767757415771484
    8. 'moves' → logprob: -6.767757415771484
    9. ' if' → logprob: -6.892757415771484
    10. '\n' → logprob: -7.017757415771484

Token 465: ' apply' (ID: 6096)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6186768412590027
    2. ' if' → logprob: -1.3686769008636475
    3. ' the' → logprob: -2.2436769008636475
    4. '   ' → logprob: -3.1186769008636475
    5. 'the' → logprob: -3.1186769008636475
    6. 'return' → logprob: -4.993676662445068
    7. 'result' → logprob: -6.368676662445068
    8. ' return' → logprob: -6.368676662445068
    9. ' result' → logprob: -7.243676662445068
    10. 'print' → logprob: -7.868676662445068

Token 466: ' normal' (ID: 6078)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.5683081150054932
    2. '(' → logprob: -1.6933081150054932
    3. ' (' → logprob: -1.9433081150054932
    4. '"' → logprob: -2.193308115005493
    5. 'mod' → logprob: -2.693308115005493
    6. ' the' → logprob: -3.068308115005493
    7. ' if' → logprob: -3.443308115005493
    8. '   ' → logprob: -3.568308115005493
    9. ' modulo' → logprob: -3.943308115005493
    10. ' "' → logprob: -4.193307876586914

Token 467: ' parity' (ID: 113181)
  Prédit: 'play'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'play' → logprob: -0.05438237264752388
    2. ' play' → logprob: -3.30438232421875
    3. 'game' → logprob: -4.42938232421875
    4. 'nim' → logprob: -5.92938232421875
    5. ' game' → logprob: -7.67938232421875
    6. '_play' → logprob: -8.17938232421875
    7. '```' → logprob: -8.55438232421875
    8. '-play' → logprob: -9.17938232421875
    9. '   ' → logprob: -9.42938232421875
    10. ' ' → logprob: -9.80438232421875

Token 468: ' logic' (ID: 18485)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12980228662490845
    2. '
' → logprob: -2.3798022270202637
    3. 'def' → logprob: -3.7548022270202637
    4. '()
' → logprob: -5.879802227020264
    5. 'if' → logprob: -6.879802227020264
    6. '()' → logprob: -7.379802227020264
    7. '    
' → logprob: -7.879802227020264
    8. ',' → logprob: -8.754802703857422
    9. ',
' → logprob: -9.254802703857422
    10. ' if' → logprob: -9.504802703857422

Token 469: ' on' (ID: 402)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.43833601474761963
    2. '
' → logprob: -1.0633360147476196
    3. '    
' → logprob: -4.81333589553833
    4. 'if' → logprob: -7.93833589553833
    5. ',' → logprob: -8.563336372375488
    6. '\n' → logprob: -8.563336372375488
    7. 'def' → logprob: -8.938336372375488
    8. '

' → logprob: -9.188336372375488
    9. ' if' → logprob: -9.438336372375488
    10. '  
' → logprob: -10.063336372375488

Token 470: ' the' (ID: 290)
  Prédit: ' uf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' uf' → logprob: -0.5812572836875916
    2. 'uf' → logprob: -0.8312572836875916
    3. '(' → logprob: -5.706257343292236
    4. ' (' → logprob: -6.956257343292236
    5. 'the' → logprob: -7.706257343292236
    6. ' the' → logprob: -8.331256866455078
    7. '`' → logprob: -9.081256866455078
    8. 'moves' → logprob: -9.831256866455078
    9. '   ' → logprob: -10.081256866455078
    10. ' moves' → logprob: -10.706256866455078

Token 471: ' number' (ID: 2086)
  Prédit: 'uf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uf' → logprob: -0.2758260667324066
    2. ' uf' → logprob: -2.5258259773254395
    3. 'number' → logprob: -2.6508259773254395
    4. 'moves' → logprob: -2.6508259773254395
    5. 'remaining' → logprob: -4.7758259773254395
    6. ' number' → logprob: -5.5258259773254395
    7. ' moves' → logprob: -5.7758259773254395
    8. '(' → logprob: -7.0258259773254395
    9. 'edges' → logprob: -7.6508259773254395
    10. 'move' → logprob: -7.6508259773254395

Token 472: ' of' (ID: 328)
  Prédit: 'of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'of' → logprob: -0.3670070171356201
    2. ' of' → logprob: -1.4920070171356201
    3. '_' → logprob: -3.24200701713562
    4. '
' → logprob: -3.49200701713562
    5. '_of' → logprob: -5.367007255554199
    6. '\' → logprob: -6.117007255554199
    7. 'ofs' → logprob: -6.742007255554199
    8. '\n' → logprob: -7.117007255554199
    9. '(' → logprob: -7.492007255554199
    10. ' ' → logprob: -7.617007255554199

Token 473: ' moves' (ID: 19523)
  Prédit: ' moves'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' moves' → logprob: -0.8930273056030273
    2. 'moves' → logprob: -1.7680273056030273
    3. '_' → logprob: -2.0180273056030273
    4. '_moves' → logprob: -2.1430273056030273
    5. ' components' → logprob: -2.6430273056030273
    6. ' _' → logprob: -3.0180273056030273
    7. 'components' → logprob: -4.018027305603027
    8. '_components' → logprob: -4.893027305603027
    9. ' connected' → logprob: -5.268027305603027
    10. '_remaining' → logprob: -5.518027305603027

Token 474: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6444012522697449
    2. '
' → logprob: -0.7694012522697449
    3. '    
' → logprob: -4.8944010734558105
    4. 'if' → logprob: -5.8944010734558105
    5. 'def' → logprob: -7.2694010734558105
    6. 'print' → logprob: -8.394401550292969
    7. 'moves' → logprob: -8.894401550292969
    8. ' if' → logprob: -9.644401550292969
    9. ',' → logprob: -10.019401550292969
    10. '  
' → logprob: -10.144401550292969

Token 475: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01264526229351759
    2. 'result' → logprob: -5.262645244598389
    3. 'if' → logprob: -5.387645244598389
    4. '
' → logprob: -6.637645244598389
    5. '    
' → logprob: -6.887645244598389
    6. 'return' → logprob: -9.012645721435547
    7. ' if' → logprob: -9.262645721435547
    8. 'def' → logprob: -10.012645721435547
    9. 'n' → logprob: -10.137645721435547
    10. 'moves' → logprob: -10.137645721435547

Token 476: ' if' (ID: 538)
  Prédit: 'moves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'moves' → logprob: -0.42094501852989197
    2. 'if' (adapté à ' if') → logprob: -1.4209450483322144
    3. '   ' → logprob: -2.920944929122925
    4. 'result' → logprob: -3.545944929122925
    5. 'remaining' → logprob: -5.420945167541504
    6. 'print' → logprob: -5.420945167541504
    7. 'n' → logprob: -6.295945167541504
    8. 'move' → logprob: -6.295945167541504
    9. 'return' → logprob: -6.420945167541504
    10. ' moves' → logprob: -6.545945167541504

Token 477: ' (' (ID: 350)
  Prédit: ' uf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' uf' → logprob: -0.1272393763065338
    2. ' (' → logprob: -2.127239465713501
    3. '(' → logprob: -8.127239227294922
    4. ' ' → logprob: -11.627239227294922
    5. 'uf' → logprob: -12.377239227294922
    6. ' ' → logprob: -13.502239227294922
    7. '  ' → logprob: -15.002239227294922
    8. '(u' → logprob: -15.627239227294922
    9. '   ' → logprob: -15.752239227294922
    10. ' u' → logprob: -16.252239227294922

Token 478: 'uf' (ID: 1427)
  Prédit: 'uf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uf' → logprob: -0.020571433007717133
    2. ' uf' → logprob: -3.89557147026062
    3. '   ' → logprob: -11.0205717086792
    4. '(' → logprob: -12.2705717086792
    5. 'ufs' → logprob: -12.8955717086792
    6. ')' → logprob: -13.5205717086792
    7. '.uf' → logprob: -13.6455717086792
    8. ' (' → logprob: -13.8955717086792
    9. 'ufi' → logprob: -14.8955717086792
    10. ' ' → logprob: -15.2705717086792

Token 479: '.components' (ID: 41872)
  Prédit: '.components'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.components' → logprob: -5.776898251497187e-05
    2. '.' → logprob: -9.8750581741333
    3. ' .' → logprob: -12.6250581741333
    4. ').' → logprob: -14.3750581741333
    5. '.comp' → logprob: -14.3750581741333
    6. 'components' → logprob: -14.7500581741333
    7. '.component' → logprob: -15.3750581741333
    8. '.com' → logprob: -15.5000581741333
    9. '.Components' → logprob: -15.6250581741333
    10. '   ' → logprob: -16.125057220458984

Token 480: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.04155134782195091
    2. '-' → logprob: -3.416551351547241
    3. ' %' → logprob: -5.291551113128662
    4. ')' → logprob: -6.541551113128662
    5. ' ' → logprob: -7.666551113128662
    6. ' >' → logprob: -8.04155158996582
    7. '%' → logprob: -8.41655158996582
    8. ' )' → logprob: -8.79155158996582
    9. ' ==' → logprob: -9.41655158996582
    10. '   ' → logprob: -9.79155158996582

Token 481: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03364800289273262
    2. ' ' → logprob: -3.4086480140686035
    3. ')' → logprob: -13.158647537231445
    4. '```' → logprob: -15.408647537231445
    5. '   ' → logprob: -15.783647537231445
    6. '  ' → logprob: -17.658647537231445
    7. ' )' → logprob: -18.096147537231445
    8. '
' → logprob: -18.221147537231445
    9. '[' → logprob: -18.283647537231445
    10. ' ' → logprob: -18.408647537231445

Token 482: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.635164754698053e-05
    2. ' ' → logprob: -9.625066757202148
    3. ')' → logprob: -16.25006675720215
    4. '```' → logprob: -16.75006675720215
    5. '   ' → logprob: -18.06256675720215
    6. '１' → logprob: -18.75006675720215
    7. '۱' → logprob: -19.25006675720215
    8. '<|end|>' → logprob: -19.43756675720215
    9. '

' → logprob: -19.68756675720215
    10. '[' → logprob: -19.87506675720215

Token 483: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004528374411165714
    2. ' )' → logprob: -7.750452995300293
    3. ')%' → logprob: -10.750452995300293
    4. '%' → logprob: -14.625452995300293
    5. ' ' → logprob: -15.625452995300293
    6. ' %' → logprob: -16.625452041625977
    7. '）' → logprob: -17.500452041625977
    8. ' ' → logprob: -17.625452041625977
    9. '   ' → logprob: -17.875452041625977
    10. ')
' → logprob: -18.375452041625977

Token 484: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.6931918263435364
    2. ' %' → logprob: -0.6931918263435364
    3. ' ' → logprob: -10.193191528320312
    4. ')' → logprob: -12.318191528320312
    5. ' %
' → logprob: -13.943191528320312
    6. ' ' → logprob: -14.443191528320312
    7. '%
' → logprob: -14.443191528320312
    8. '
' → logprob: -15.068191528320312
    9. '```' → logprob: -15.443191528320312
    10. '&' → logprob: -16.318191528320312

Token 485: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.007607339881360531
    2. ' ' → logprob: -4.882607460021973
    3. '```' → logprob: -13.882607460021973
    4. '   ' → logprob: -16.882606506347656
    5. '
' → logprob: -17.007606506347656
    6. '  ' → logprob: -17.132606506347656
    7. '`' → logprob: -18.820106506347656
    8. '=' → logprob: -18.945106506347656
    9. '２' → logprob: -18.945106506347656
    10. '۲' → logprob: -19.195106506347656

Token 486: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. '```' → logprob: -17.250001907348633
    4. '4' → logprob: -17.750001907348633
    5. '3' → logprob: -18.000001907348633
    6. '   ' → logprob: -18.125001907348633
    7. '２' → logprob: -18.375001907348633
    8. '[' → logprob: -19.000001907348633
    9. '
' → logprob: -19.000001907348633
    10. '(' → logprob: -19.000001907348633

Token 487: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3147849440574646
    2. ' ==' → logprob: -1.3147850036621094
    3. ':' → logprob: -6.689785003662109
    4. '=' → logprob: -8.31478500366211
    5. ' =' → logprob: -11.43978500366211
    6. ' :' → logprob: -11.56478500366211
    7. '!=' → logprob: -12.31478500366211
    8. ' !=' → logprob: -12.68978500366211
    9. '==
' → logprob: -13.31478500366211
    10. ')==' → logprob: -13.43978500366211

Token 488: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011204498820006847
    2. '0' → logprob: -4.511204719543457
    3. ' ' → logprob: -8.761204719543457
    4. '```' → logprob: -17.76120376586914
    5. '01' → logprob: -18.57370376586914
    6. '=' → logprob: -18.69870376586914
    7. '
' → logprob: -19.19870376586914
    8. '   ' → logprob: -19.51120376586914
    9. '

' → logprob: -19.63620376586914
    10. '3' → logprob: -20.13620376586914

Token 489: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03370979055762291
    2. '0' → logprob: -3.408709764480591
    3. ' ' → logprob: -9.658709526062012
    4. '```' → logprob: -16.158710479736328
    5. '   ' → logprob: -18.283710479736328
    6. '01' → logprob: -18.471210479736328
    7. '=' → logprob: -18.783710479736328
    8. '
' → logprob: -18.846210479736328
    9. '

' → logprob: -19.283710479736328
    10. '１' → logprob: -19.471210479736328

Token 490: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0015035520773380995
    2. ':
' → logprob: -6.5015034675598145
    3. '):' → logprob: -14.001503944396973
    4. ' :' → logprob: -15.251503944396973
    5. '   ' → logprob: -16.126502990722656
    6. ':
' → logprob: -16.876502990722656
    7. '):
' → logprob: -17.376502990722656
    8. ')' → logprob: -18.001502990722656
    9. ':

' → logprob: -18.001502990722656
    10. ':return' → logprob: -18.126502990722656

Token 491: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0013985719997435808
    2. '   ' → logprob: -6.87639856338501
    3. 'print' → logprob: -8.376399040222168
    4. ' print' → logprob: -9.001399040222168
    5. ':' → logprob: -11.876399040222168
    6. '
' → logprob: -13.251399040222168
    7. '      ' → logprob: -14.376399040222168
    8. '	print' → logprob: -14.751399040222168
    9. '	   ' → logprob: -14.751399040222168
    10. ',' → logprob: -15.001399040222168

Token 492: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0271425973623991
    2. '       ' → logprob: -3.7771425247192383
    3. ' print' → logprob: -5.777142524719238
    4. '   ' → logprob: -7.152142524719238
    5. '	print' → logprob: -11.777142524719238
    6. '```' → logprob: -14.402142524719238
    7. ' ' → logprob: -15.777142524719238
    8. '`' → logprob: -16.277143478393555
    9. 'return' → logprob: -16.777143478393555
    10. '           ' → logprob: -17.152143478393555

Token 493: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.005295307841151953
    2. '('' → logprob: -5.255295276641846
    3. '(' → logprob: -9.755295753479004
    4. '"T' → logprob: -12.880295753479004
    5. '"' → logprob: -14.380295753479004
    6. '(T' → logprob: -15.505295753479004
    7. ' ("' → logprob: -16.380294799804688
    8. '("'' → logprob: -17.255294799804688
    9. '('"' → logprob: -17.505294799804688
    10. ''' → logprob: -17.630294799804688

Token 494: 'T' (ID: 51)
  Prédit: 'T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.005468182265758514
    2. '"T' → logprob: -5.255468368530273
    3. '"' → logprob: -8.380468368530273
    4. 'First' → logprob: -12.630468368530273
    5. ''T' → logprob: -14.880468368530273
    6. '   ' → logprob: -15.380468368530273
    7. '	T' → logprob: -15.380468368530273
    8. ' T' → logprob: -15.755468368530273
    9. '“T' → logprob: -15.755468368530273
    10. '{"' → logprob: -15.880468368530273

Token 495: 'aro' (ID: 8421)
  Prédit: 'aro'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aro' → logprob: -2.2961512513575144e-05
    2. 'ar' → logprob: -10.750022888183594
    3. 'аро' → logprob: -13.875022888183594
    4. 'aroo' → logprob: -15.375022888183594
    5. ' aro' → logprob: -15.750022888183594
    6. 'arro' → logprob: -17.375022888183594
    7. 'a' → logprob: -17.375022888183594
    8. 'aru' → logprob: -17.375022888183594
    9. 'ARO' → logprob: -17.375022888183594
    10. '{"' → logprob: -17.500022888183594

Token 496: '")
' (ID: 1896)
  Prédit: '")
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")
' → logprob: -0.16033419966697693
    2. '")' → logprob: -1.9103342294692993
    3. '")
' → logprob: -9.410334587097168
    4. '   ' → logprob: -11.285334587097168
    5. 'else' → logprob: -11.785334587097168
    6. '"' → logprob: -12.910334587097168
    7. ')
' → logprob: -13.035334587097168
    8. ')' → logprob: -13.535334587097168
    9. '()' → logprob: -14.660334587097168
    10. '")

' → logprob: -14.660334587097168

Token 497: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.16470971703529358
    2. '   ' → logprob: -1.9147096872329712
    3. ' else' → logprob: -5.414709568023682
    4. '	else' → logprob: -11.28971004486084
    5. 'elif' → logprob: -12.03971004486084
    6. '    
' → logprob: -13.41471004486084
    7. ')' → logprob: -13.66471004486084
    8. '       ' → logprob: -14.03971004486084
    9. '<|end|>' → logprob: -14.16471004486084
    10. ':' → logprob: -14.53971004486084

Token 498: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.0013423740165308118
    2. '   ' → logprob: -7.001342296600342
    3. ' else' → logprob: -7.751342296600342
    4. '	else' → logprob: -14.8763427734375
    5. 'elif' → logprob: -16.1263427734375
    6. 'e' → logprob: -17.2513427734375
    7. '    
' → logprob: -17.2513427734375
    8. 'els' → logprob: -17.5013427734375
    9. '_else' → logprob: -17.6263427734375
    10. '
' → logprob: -18.1263427734375

Token 499: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007812097202986479
    2. ':
' → logprob: -5.132812023162842
    3. '       ' → logprob: -6.382812023162842
    4. '():' → logprob: -9.2578125
    5. '   ' → logprob: -10.1328125
    6. ' :' → logprob: -10.3828125
    7. '):' → logprob: -12.0078125
    8. '():
' → logprob: -12.2578125
    9. '{' → logprob: -12.6328125
    10. 'print' → logprob: -13.1328125

Token 500: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008116515236906707
    2. 'print' → logprob: -7.500811576843262
    3. '   ' → logprob: -8.375811576843262
    4. ' print' → logprob: -10.500811576843262
    5. '	print' → logprob: -15.250811576843262
    6. '     ' → logprob: -15.875811576843262
    7. '	   ' → logprob: -16.125812530517578
    8. '      ' → logprob: -16.500812530517578
    9. '           ' → logprob: -16.750812530517578
    10. '	' → logprob: -17.000812530517578

Token 501: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00024477019906044006
    2. ' print' → logprob: -8.375245094299316
    3. '   ' → logprob: -11.500245094299316
    4. '       ' → logprob: -12.500245094299316
    5. '	print' → logprob: -15.000245094299316
    6. 'Print' → logprob: -17.250244140625
    7. '```' → logprob: -18.375244140625
    8. '.print' → logprob: -18.750244140625
    9. '           ' → logprob: -19.000244140625
    10. 'Han' → logprob: -19.375244140625

Token 502: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0009125363430939615
    2. '(' → logprob: -7.000912666320801
    3. '("("' → logprob: -14.8759126663208
    4. '(
' → logprob: -15.0009126663208
    5. '('' → logprob: -15.5009126663208
    6. '"' → logprob: -18.125911712646484
    7. ' ("' → logprob: -18.375911712646484
    8. '("")' → logprob: -19.125911712646484
    9. '(("' → logprob: -19.375911712646484
    10. '()' → logprob: -19.500911712646484

Token 503: 'Han' (ID: 72234)
  Prédit: 'Han'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Han' → logprob: -2.7610454708337784e-05
    2. '"' → logprob: -10.500027656555176
    3. '"H' → logprob: -17.12502670288086
    4. 'H' → logprob: -18.62502670288086
    5. ''' → logprob: -18.87502670288086
    6. ''H' → logprob: -19.37502670288086
    7. 'HAN' → logprob: -19.50002670288086
    8. 'Hand' → logprob: -19.87502670288086
    9. ' Han' → logprob: -20.00002670288086
    10. '   ' → logprob: -20.50002670288086

Token 504: 'ako' (ID: 5938)
  Prédit: 'ako'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ako' → logprob: -5.872261317563243e-05
    2. 'ko' → logprob: -10.375059127807617
    3. 'a' → logprob: -11.125059127807617
    4. 'ak' → logprob: -11.750059127807617
    5. '"' → logprob: -13.875059127807617
    6. 'Ako' → logprob: -13.875059127807617
    7. 'Han' → logprob: -14.000059127807617
    8. 'oko' → logprob: -15.125059127807617
    9. 'ако' → logprob: -15.125059127807617
    10. 'ano' → logprob: -15.125059127807617

Token 505: '")

' (ID: 10822)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00863016489893198
    2. '")' → logprob: -4.758630275726318
    3. ')")' → logprob: -12.00862979888916
    4. ')
' → logprob: -12.38362979888916
    5. '')' → logprob: -13.00862979888916
    6. '```' → logprob: -13.63362979888916
    7. '   ' → logprob: -14.50862979888916
    8. '`)' → logprob: -14.88362979888916
    9. '())' → logprob: -14.88362979888916
    10. '()' → logprob: -15.25862979888916

Token 506: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 507: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.0015988911036401987
    2. '__' → logprob: -6.501598834991455
    3. '_' → logprob: -10.001599311828613
    4. ' _' → logprob: -10.376599311828613
    5. ' ' → logprob: -11.751599311828613
    6. ' ' → logprob: -12.126599311828613
    7. '_name' → logprob: -12.501599311828613
    8. ' ___' → logprob: -13.876599311828613
    9. '  ' → logprob: -14.626599311828613
    10. ' main' → logprob: -14.751599311828613

Token 508: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.004543100018054247
    2. '==' → logprob: -5.754543304443359
    3. ' ==' → logprob: -6.754543304443359
    4. '_' → logprob: -9.75454330444336
    5. ' __' → logprob: -10.37954330444336
    6. '__.__' → logprob: -10.75454330444336
    7. '=="' → logprob: -10.87954330444336
    8. '__.' → logprob: -11.12954330444336
    9. '.__' → logprob: -11.50454330444336
    10. '___' → logprob: -12.12954330444336

Token 509: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -3.5954712075181305e-05
    2. '__.__' → logprob: -10.750036239624023
    3. '==' → logprob: -11.250036239624023
    4. '=="' → logprob: -14.625036239624023
    5. '__.' → logprob: -15.250036239624023
    6. ' ==' → logprob: -15.375036239624023
    7. '___' → logprob: -15.875036239624023
    8. '____' → logprob: -16.500036239624023
    9. '__
' → logprob: -16.500036239624023
    10. '__["' → logprob: -16.750036239624023

Token 510: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.009360413998365402
    2. ' ==' → logprob: -5.384360313415527
    3. '==' → logprob: -5.509360313415527
    4. '=="' → logprob: -7.384360313415527
    5. '__.__' → logprob: -10.384360313415527
    6. '.__' → logprob: -12.134360313415527
    7. '=='' → logprob: -12.134360313415527
    8. '"' → logprob: -12.259360313415527
    9. '___' → logprob: -12.884360313415527
    10. '_' → logprob: -13.509360313415527

Token 511: ' '__' (ID: 28278)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0067415423691272736
    2. ''' → logprob: -5.006741523742676
    3. '__' → logprob: -11.256741523742676
    4. ' "__' → logprob: -11.256741523742676
    5. ' '__' → logprob: -16.256742477416992
    6. '"user' → logprob: -16.631742477416992
    7. '   ' → logprob: -17.256742477416992
    8. '("__' → logprob: -17.506742477416992
    9. '"name' → logprob: -17.506742477416992
    10. '"_' → logprob: -18.756742477416992

Token 512: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.00082309142453596
    2. 'name' → logprob: -7.875823020935059
    3. '_main' → logprob: -8.375823020935059
    4. '__' → logprob: -8.500823020935059
    5. '__':
' → logprob: -12.625823020935059
    6. 'm' → logprob: -13.250823020935059
    7. '_name' → logprob: -13.375823020935059
    8. 'if' → logprob: -13.625823020935059
    9. '__.' → logprob: -14.875823020935059
    10. '_MAIN' → logprob: -15.375823020935059

Token 513: '__':
' (ID: 39314)
  Prédit: '__':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__':
' → logprob: -0.12801676988601685
    2. '__' → logprob: -2.128016710281372
    3. '__:' → logprob: -7.003016948699951
    4. '__":
' → logprob: -9.503016471862793
    5. '':' → logprob: -9.753016471862793
    6. ':' → logprob: -10.378016471862793
    7. '_' → logprob: -12.128016471862793
    8. '__.' → logprob: -12.253016471862793
    9. '('__' → logprob: -13.503016471862793
    10. '():' → logprob: -14.503016471862793

Token 514: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.38141337037086487
    2. ' main' → logprob: -1.2564133405685425
    3. '   ' → logprob: -3.631413459777832
    4. '	main' → logprob: -5.256413459777832
    5. '    
' → logprob: -8.006413459777832
    6. '(main' → logprob: -8.256413459777832
    7. '_main' → logprob: -9.506413459777832
    8. '```' → logprob: -10.631413459777832
    9. '.main' → logprob: -11.881413459777832
    10. ' 
' → logprob: -11.881413459777832

Token 515: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -2.45848218582978e-06
    2. ' main' → logprob: -13.25000286102295
    3. '	main' → logprob: -14.50000286102295
    4. '   ' → logprob: -17.125001907348633
    5. '_main' → logprob: -21.500001907348633
    6. '.main' → logprob: -21.875001907348633
    7. '(main' → logprob: -22.375001907348633
    8. '  ' → logprob: -23.875001907348633
    9. '```' → logprob: -24.000001907348633
    10. 'Main' → logprob: -24.375001907348633

Token 516: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 514
Tokens correctement prédits (1ère position, stricte): 219
Tokens correctement prédits (1ère position, avec adaptation): 233
Tokens correctement prédits (top 10): 410
Précision stricte (1ère position): 42.61%
Précision adaptée (1ère position): 45.33%
Précision (top 10): 79.77%
================================================================================
