================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:13:14
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
class DigitSource:
    def digit_at(self, position: int) -> str:
        raise NotImplementedError()

    def digits(self, start: int, count: int) -> str:
        return ''.join(self.digit_at(pos) for pos in range(start, start + count))


class ChampernowneConstant(DigitSource):
    def __init__(self):
        # Precompute powers for digit lengths (1 to 10)
        self._digit_length_buckets = []
        # Each bucket: (start_position, digit_length, count_of_numbers)
        # Accumulated number of digits covered
        self._init_buckets()

    def _init_buckets(self):
        # Since N can be up to 10^9, we need buckets covering positions up to that
        # We'll prepare buckets with numbers of length 1 to 10 digits
        start_pos = 1
        for digit_len in range(1, 11):
            count_numbers = 9 * (10 ** (digit_len - 1))
            digits_in_bucket = count_numbers * digit_len
            self._digit_length_buckets.append({
                'start_pos': start_pos,
                'digit_len': digit_len,
                'count_numbers': count_numbers,
                'digits_in_bucket': digits_in_bucket
            })
            start_pos += digits_in_bucket

    def digit_at(self, position: int) -> str:
        bucket = self._find_bucket(position)
        within_bucket_pos = position - bucket['start_pos']
        number_index = within_bucket_pos // bucket['digit_len']
        digit_index = within_bucket_pos % bucket['digit_len']

        number = (10 ** (bucket['digit_len'] - 1)) + number_index
        return str(number)[digit_index]

    def _find_bucket(self, position: int) -> dict:
        # Binary search for bucket
        low, high = 0, len(self._digit_length_buckets) - 1
        while low <= high:
            mid = (low + high) // 2
            b = self._digit_length_buckets[mid]
            if b['start_pos'] <= position < b['start_pos'] + b['digits_in_bucket']:
                return b
            elif position < b['start_pos']:
                high = mid - 1
            else:
                low = mid + 1
        # If none found, fallback to last bucket (should not happen given constraints)
        return self._digit_length_buckets[-1]


class InputParser:
    def __init__(self):
        self._lines = []

    def feed_line(self, line: str):
        self._lines.append(line.strip())

    def parse(self):
        for raw_line in self._lines:
            if raw_line == '0 0':
                break
            parts = raw_line.split()
            if len(parts) != 2:
                continue
            N, K = parts
            yield int(N), int(K)


class OutputFormatter:
    @staticmethod
    def format_digits(digits: str) -> str:
        return digits


class ChampernowneSolver:
    def __init__(self):
        self._constant = ChampernowneConstant()
        self._parser = InputParser()
        self._formatter = OutputFormatter()

    def feed_input_line(self, line: str):
        self._parser.feed_line(line)

    def solve_all(self):
        results = []
        for N, K in self._parser.parse():
            digits = self._constant.digits(N, K)
            results.append(self._formatter.format_digits(digits))
        return results


def main():
    import sys
    solver = ChampernowneSolver()
    for line in sys.stdin:
        if line.strip() == '0 0':
            break
        solver.feed_input_line(line)
    # Feed the terminating line to parser for completeness, although parse() stops on '0 0'
    solver.feed_input_line('0 0')
    for output in solver.solve_all():
        print(output)


if __name__ == '__main__':
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'class' (ID: 1444)
  → Token d'amorce (pas de prédiction)

Token 1: ' Digit' (ID: 91174)
  → Token d'amorce (pas de prédiction)

Token 2: 'Source' (ID: 4823)
  → Token d'amorce (pas de prédiction)

Token 3: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11964884400367737
    2. '(' → logprob: -2.2446489334106445
    3. '{' → logprob: -5.1196489334106445
    4. '.' → logprob: -7.3696489334106445
    5. '(:' → logprob: -9.244648933410645
    6. ' :' → logprob: -10.244648933410645
    7. '[' → logprob: -11.119648933410645
    8. 's' → logprob: -11.369648933410645
    9. '():' → logprob: -11.494648933410645
    10. ' {' → logprob: -12.119648933410645

Token 4: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.009900221601128578
    2. '(' → logprob: -5.384900093078613
    3. '   ' → logprob: -5.759900093078613
    4. '```' → logprob: -6.384900093078613
    5. '.' → logprob: -8.634900093078613
    6. '():' → logprob: -8.884900093078613
    7. ':
' → logprob: -9.634900093078613
    8. '()' → logprob: -11.884900093078613
    9. '``' → logprob: -12.384900093078613
    10. ''s' → logprob: -12.384900093078613

Token 5: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0933433771133423
    2. ' ' → logprob: -1.2183433771133423
    3. '    ' → logprob: -2.3433432579040527
    4. '```' → logprob: -2.7183432579040527
    5. ''' → logprob: -3.0933432579040527
    6. '\' → logprob: -3.2183432579040527
    7. '(' → logprob: -3.3433432579040527
    8. '`' → logprob: -4.468343257904053
    9. '\n' → logprob: -4.468343257904053
    10. ' pass' → logprob: -5.093343257904053

Token 6: ' digit' (ID: 19181)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.08173476904630661
    2. ' process' → logprob: -3.7067346572875977
    3. ' calculate' → logprob: -4.456734657287598
    4. '_' → logprob: -4.956734657287598
    5. 'process' → logprob: -5.331734657287598
    6. '<|end|>' → logprob: -5.456734657287598
    7. 'calculate' → logprob: -5.581734657287598
    8. ' ' → logprob: -5.956734657287598
    9. '  ' → logprob: -6.331734657287598
    10. ' read' → logprob: -6.331734657287598

Token 7: '_at' (ID: 8254)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.18907439708709717
    2. '(' → logprob: -1.8140743970870972
    3. '(self' → logprob: -5.064074516296387
    4. '(s' → logprob: -6.314074516296387
    5. '()' → logprob: -8.314074516296387
    6. '   ' → logprob: -8.439074516296387
    7. ')' → logprob: -8.439074516296387
    8. '_source' → logprob: -8.939074516296387
    9. '_' → logprob: -9.439074516296387
    10. ' (' → logprob: -9.439074516296387

Token 8: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0526212714612484
    2. ' (' → logprob: -3.052621364593506
    3. '(self' → logprob: -6.552621364593506
    4. '(space' → logprob: -7.052621364593506
    5. ' ' → logprob: -7.177621364593506
    6. '_' → logprob: -7.677621364593506
    7. '(s' → logprob: -9.302620887756348
    8. 's' → logprob: -9.552620887756348
    9. ''' → logprob: -9.802620887756348
    10. ')' → logprob: -10.177620887756348

Token 9: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.24961090087890625
    2. ',' → logprob: -2.6246109008789062
    3. '[' → logprob: -3.1246109008789062
    4. ')' → logprob: -3.3746109008789062
    5. '(' → logprob: -3.7496109008789062
    6. '.' → logprob: -4.124610900878906
    7. ':' → logprob: -4.499610900878906
    8. 'self' → logprob: -4.749610900878906
    9. '(self' → logprob: -5.999610900878906
    10. '   ' → logprob: -6.624610900878906

Token 10: ' position' (ID: 4010)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.30434849858283997
    2. ' index' → logprob: -2.0543484687805176
    3. 'self' → logprob: -2.1793484687805176
    4. 'index' → logprob: -4.179348468780518
    5. ' pos' → logprob: -6.429348468780518
    6. ' position' → logprob: -6.679348468780518
    7. ' idx' → logprob: -7.804348468780518
    8. 'position' → logprob: -7.804348468780518
    9. ' text' → logprob: -7.929348468780518
    10. ' n' → logprob: -8.054348945617676

Token 11: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006250492297112942
    2. ',' → logprob: -5.631250381469727
    3. ')' → logprob: -6.381250381469727
    4. ':' → logprob: -7.631250381469727
    5. '):
' → logprob: -8.631250381469727
    6. 'self' → logprob: -8.631250381469727
    7. '   ' → logprob: -10.756250381469727
    8. ' ):' → logprob: -11.006250381469727
    9. '       ' → logprob: -11.256250381469727
    10. '(self' → logprob: -11.256250381469727

Token 12: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.5772494673728943
    2. 'int' → logprob: -0.8272494673728943
    3. ')' → logprob: -6.827249526977539
    4. ' )' → logprob: -8.827249526977539
    5. ':int' → logprob: -10.452249526977539
    6. '[int' → logprob: -11.452249526977539
    7. '   ' → logprob: -11.702249526977539
    8. '=int' → logprob: -11.827249526977539
    9. ' ' → logprob: -11.952249526977539
    10. '<int' → logprob: -12.702249526977539

Token 13: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0076973638497292995
    2. '):' → logprob: -4.882697582244873
    3. ')->' → logprob: -9.757697105407715
    4. 'self' → logprob: -11.507697105407715
    5. ',' → logprob: -11.757697105407715
    6. '   ' → logprob: -12.257697105407715
    7. '):
' → logprob: -12.382697105407715
    8. ' )' → logprob: -12.882697105407715
    9. ')>' → logprob: -13.882697105407715
    10. '       ' → logprob: -14.257697105407715

Token 14: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00030948311905376613
    2. '):' → logprob: -9.125309944152832
    3. ' :' → logprob: -9.500309944152832
    4. ':return' → logprob: -9.875309944152832
    5. '():' → logprob: -10.750309944152832
    6. ':**' → logprob: -10.875309944152832
    7. '->' → logprob: -12.000309944152832
    8. '   ' → logprob: -12.000309944152832
    9. '       ' → logprob: -12.250309944152832
    10. ' ->' → logprob: -12.875309944152832

Token 15: ' str' (ID: 989)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.008860371075570583
    2. 'int' → logprob: -4.7588605880737305
    3. ' str' → logprob: -8.88386058807373
    4. ' ' → logprob: -9.38386058807373
    5. ' Optional' → logprob: -11.25886058807373
    6. ' None' → logprob: -11.88386058807373
    7. ' '' → logprob: -13.75886058807373
    8. '  ' → logprob: -14.50886058807373
    9. 'str' → logprob: -15.00886058807373
    10. '   ' → logprob: -15.50886058807373

Token 16: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00010628487507347018
    2. ':
' → logprob: -9.625105857849121
    3. '():' → logprob: -11.375105857849121
    4. '):' → logprob: -11.750105857849121
    5. ' :' → logprob: -12.375105857849121
    6. ':return' → logprob: -12.500105857849121
    7. '.' → logprob: -12.750105857849121
    8. '<|end|>' → logprob: -12.875105857849121
    9. '':' → logprob: -13.125105857849121
    10. ':**' → logprob: -13.375105857849121

Token 17: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05406179279088974
    2. '   ' → logprob: -3.4290618896484375
    3. '\n' → logprob: -4.6790618896484375
    4. ' ' → logprob: -5.6790618896484375
    5. '<|end|>' → logprob: -5.8040618896484375
    6. '    ' → logprob: -7.3040618896484375
    7. '```' → logprob: -7.3040618896484375
    8. '\' → logprob: -7.3040618896484375
    9. '\r' → logprob: -7.6790618896484375
    10. ' 
' → logprob: -8.179061889648438

Token 18: ' raise' (ID: 9338)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2954179346561432
    2. '   ' → logprob: -2.0454180240631104
    3. ' ' → logprob: -3.0454180240631104
    4. '    ' → logprob: -4.045417785644531
    5. '\n' → logprob: -4.295417785644531
    6. '        ' → logprob: -4.420417785644531
    7. 'pass' → logprob: -5.170417785644531
    8. 'r' → logprob: -5.420417785644531
    9. ' pass' → logprob: -5.545417785644531
    10. '#' → logprob: -5.670417785644531

Token 19: ' Not' (ID: 4037)
  Prédit: ' Not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Not' → logprob: -0.2111271172761917
    2. 'Not' → logprob: -1.7111271619796753
    3. '<|end|>' → logprob: -5.336127281188965
    4. '  ' → logprob: -6.211127281188965
    5. ' ' → logprob: -6.336127281188965
    6. '@Not' → logprob: -8.211127281188965
    7. '...' → logprob: -8.836127281188965
    8. '(Not' → logprob: -8.961127281188965
    9. ' ' → logprob: -9.211127281188965
    10. '   ' → logprob: -9.586127281188965

Token 20: 'Implemented' (ID: 42030)
  Prédit: 'Implemented'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Implemented' → logprob: -9.960946772480384e-05
    2. 'implemented' → logprob: -9.375099182128906
    3. 'Impl' → logprob: -12.000099182128906
    4. 'Imp' → logprob: -12.500099182128906
    5. 'Implement' → logprob: -13.375099182128906
    6. 'Im' → logprob: -13.500099182128906
    7. 'impl' → logprob: -13.625099182128906
    8. 'Supported' → logprob: -14.750099182128906
    9. 'Found' → logprob: -15.750099182128906
    10. '```' → logprob: -16.500099182128906

Token 21: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -1.0280383548888494e-06
    2. 'rror' → logprob: -14.125000953674316
    3. '   ' → logprob: -16.750001907348633
    4. '```' → logprob: -16.750001907348633
    5. 'error' → logprob: -16.875001907348633
    6. 'Er' → logprob: -17.000001907348633
    7. 'Erro' → logprob: -17.250001907348633
    8. 'E' → logprob: -17.250001907348633
    9. ' Error' → logprob: -17.875001907348633
    10. '	Error' → logprob: -18.625001907348633

Token 22: '()

' (ID: 5874)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 23: '   ' (ID: 271)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.7442336678504944
    2. '
' → logprob: -0.9942336678504944
    3. ' ' → logprob: -2.8692336082458496
    4. '   ' → logprob: -3.4942336082458496
    5. ' 
' → logprob: -4.36923360824585
    6. '<|end|>' → logprob: -4.49423360824585
    7. '\n' → logprob: -4.74423360824585
    8. '

' → logprob: -4.86923360824585
    9. 'c' → logprob: -5.24423360824585
    10. '    
' → logprob: -5.49423360824585

Token 24: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7577294707298279
    2. 'class' → logprob: -0.8827294707298279
    3. ' ' → logprob: -3.0077295303344727
    4. 'c' → logprob: -3.3827295303344727
    5. '    ' → logprob: -4.632729530334473
    6. 'd' → logprob: -5.007729530334473
    7. ' 
' → logprob: -5.632729530334473
    8. ' \' → logprob: -5.757729530334473
    9. '_' → logprob: -6.257729530334473
    10. '    
' → logprob: -6.632729530334473

Token 25: ' digits' (ID: 37806)
  Prédit: ' digits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' digits' → logprob: -0.95550537109375
    2. ' digit' → logprob: -1.20550537109375
    3. ' length' → logprob: -2.08050537109375
    4. ' __' → logprob: -3.58050537109375
    5. ' source' → logprob: -3.70550537109375
    6. ' get' → logprob: -3.95550537109375
    7. 'digits' → logprob: -4.08050537109375
    8. ' count' → logprob: -4.20550537109375
    9. ' is' → logprob: -4.33050537109375
    10. 'digit' → logprob: -4.45550537109375

Token 26: '(self' (ID: 2402)
  Prédit: '_at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_at' → logprob: -0.1677447110414505
    2. '_count' → logprob: -2.1677446365356445
    3. '(self' → logprob: -4.9177446365356445
    4. '_in' → logprob: -5.2927446365356445
    5. '_after' → logprob: -5.4177446365356445
    6. '_' → logprob: -5.5427446365356445
    7. '_between' → logprob: -5.7927446365356445
    8. '_available' → logprob: -5.9177446365356445
    9. '(' → logprob: -6.1677446365356445
    10. '_to' → logprob: -6.2927446365356445

Token 27: ',' (ID: 11)
  Prédit: '_at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_at' → logprob: -0.3977004885673523
    2. ')' → logprob: -1.897700548171997
    3. '):' → logprob: -2.272700548171997
    4. 'at' → logprob: -2.897700548171997
    5. ',' → logprob: -5.022700309753418
    6. ')_' → logprob: -5.397700309753418
    7. '   ' → logprob: -6.022700309753418
    8. 'self' → logprob: -6.897700309753418
    9. '_count' → logprob: -7.272700309753418
    10. '_to' → logprob: -7.272700309753418

Token 28: ' start' (ID: 1604)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.5613711476325989
    2. 'self' → logprob: -1.061371088027954
    3. ')' → logprob: -2.936371088027954
    4. ' start' → logprob: -4.186371326446533
    5. 'start' → logprob: -5.061371326446533
    6. ' count' → logprob: -6.061371326446533
    7. 'count' → logprob: -6.186371326446533
    8. ' )' → logprob: -6.561371326446533
    9. ' n' → logprob: -7.186371326446533
    10. 'n' → logprob: -7.186371326446533

Token 29: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.23734845221042633
    2. '=' → logprob: -1.7373484373092651
    3. '_at' → logprob: -4.237348556518555
    4. ')' → logprob: -4.987348556518555
    5. '):' → logprob: -4.987348556518555
    6. ',' → logprob: -5.987348556518555
    7. 'at' → logprob: -6.487348556518555
    8. '_position' → logprob: -6.862348556518555
    9. 'ing' → logprob: -7.737348556518555
    10. ' at' → logprob: -8.112348556518555

Token 30: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.12460438907146454
    2. ')' → logprob: -2.4996044635772705
    3. 'position' → logprob: -3.8746044635772705
    4. ' int' → logprob: -4.999604225158691
    5. ':int' → logprob: -5.749604225158691
    6. 'self' → logprob: -5.999604225158691
    7. ' )' → logprob: -7.374604225158691
    8. '):' → logprob: -8.249604225158691
    9. '=int' → logprob: -8.624604225158691
    10. ':' → logprob: -8.999604225158691

Token 31: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6175007224082947
    2. '=' → logprob: -0.8675007224082947
    3. ')' → logprob: -3.7425007820129395
    4. '):' → logprob: -4.1175007820129395
    5. '=None' → logprob: -8.492500305175781
    6. ' ,' → logprob: -8.742500305175781
    7. ' =' → logprob: -8.742500305175781
    8. ':' → logprob: -9.367500305175781
    9. '   ' → logprob: -9.742500305175781
    10. ' )' → logprob: -11.492500305175781

Token 32: ' count' (ID: 3605)
  Prédit: ' end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' end' → logprob: -0.7000405788421631
    2. ' length' → logprob: -1.200040578842163
    3. 'end' → logprob: -2.450040578842163
    4. 'length' → logprob: -2.825040578842163
    5. ' count' → logprob: -3.325040578842163
    6. 'count' → logprob: -4.325040817260742
    7. '   ' → logprob: -5.825040817260742
    8. ' stop' → logprob: -6.450040817260742
    9. 'stop' → logprob: -6.825040817260742
    10. 'n' → logprob: -7.450040817260742

Token 33: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0002719449403230101
    2. ')' → logprob: -8.750271797180176
    3. '):' → logprob: -9.500271797180176
    4. ':int' → logprob: -10.250271797180176
    5. ' :' → logprob: -12.875271797180176
    6. '   ' → logprob: -15.000271797180176
    7. '=' → logprob: -16.625272750854492
    8. ' ' → logprob: -16.625272750854492
    9. '  ' → logprob: -16.875272750854492
    10. '```' → logprob: -16.875272750854492

Token 34: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.030092475935816765
    2. 'int' → logprob: -3.530092477798462
    3. ')' → logprob: -8.530092239379883
    4. ' ' → logprob: -9.155092239379883
    5. ':int' → logprob: -11.155092239379883
    6. ' )' → logprob: -11.405092239379883
    7. '=int' → logprob: -12.280092239379883
    8. ' ' → logprob: -13.030092239379883
    9. '   ' → logprob: -13.530092239379883
    10. '[int' → logprob: -14.030092239379883

Token 35: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.038122162222862244
    2. '):' → logprob: -3.2881221771240234
    3. '   ' → logprob: -9.788122177124023
    4. ')->' → logprob: -11.038122177124023
    5. ' )' → logprob: -12.288122177124023
    6. '):
' → logprob: -13.413122177124023
    7. ':' → logprob: -14.413122177124023
    8. ' ' → logprob: -14.663122177124023
    9. ' ):' → logprob: -14.663122177124023
    10. '`)' → logprob: -15.663122177124023

Token 36: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.021201521158218384
    2. ' ->' → logprob: -4.1462016105651855
    3. '):' → logprob: -5.7712016105651855
    4. '->' → logprob: -7.1462016105651855
    5. ')' → logprob: -7.3962016105651855
    6. ')->' → logprob: -8.146201133728027
    7. '   ' → logprob: -8.396201133728027
    8. ' :' → logprob: -9.521201133728027
    9. '       ' → logprob: -10.646201133728027
    10. ':return' → logprob: -11.646201133728027

Token 37: ' str' (ID: 989)
  Prédit: ' str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.0022237682715058327
    2. 'str' → logprob: -6.627223968505859
    3. ' list' → logprob: -7.627223968505859
    4. ' ' → logprob: -8.50222396850586
    5. ' List' → logprob: -9.25222396850586
    6. '[str' → logprob: -10.00222396850586
    7. ' Iterable' → logprob: -11.25222396850586
    8. 'List' → logprob: -11.37722396850586
    9. ' Iterator' → logprob: -11.62722396850586
    10. '   ' → logprob: -12.00222396850586

Token 38: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0007549546426162124
    2. '       ' → logprob: -7.8757548332214355
    3. '):' → logprob: -8.500755310058594
    4. '<|end|>' → logprob: -9.750755310058594
    5. '   ' → logprob: -10.250755310058594
    6. '():' → logprob: -10.875755310058594
    7. ' :' → logprob: -11.000755310058594
    8. ':return' → logprob: -11.000755310058594
    9. ':
' → logprob: -11.250755310058594
    10. ':**' → logprob: -12.750755310058594

Token 39: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0016916078748181462
    2. '    ' → logprob: -7.876691818237305
    3. '   ' → logprob: -7.876691818237305
    4. 'n' → logprob: -8.626691818237305
    5. '        ' → logprob: -9.251691818237305
    6. '      ' → logprob: -9.251691818237305
    7. '<|end|>' → logprob: -9.376691818237305
    8. ':' → logprob: -9.626691818237305
    9. '     ' → logprob: -9.876691818237305
    10. ' ' → logprob: -9.876691818237305

Token 40: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21142685413360596
    2. ' return' → logprob: -1.836426854133606
    3. 'return' (adapté à ' return') → logprob: -3.7114267349243164
    4. '        ' → logprob: -6.711426734924316
    5. '    ' → logprob: -6.961426734924316
    6. 'r' → logprob: -6.961426734924316
    7. ' ' → logprob: -7.336426734924316
    8. 's' → logprob: -7.586426734924316
    9. 'result' → logprob: -7.836426734924316
    10. ' result' → logprob: -7.961426734924316

Token 41: ' ''.' (ID: 105941)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.23118743300437927
    2. 'self' → logprob: -2.481187343597412
    3. ''' → logprob: -2.606187343597412
    4. '"' → logprob: -3.231187343597412
    5. ' '' → logprob: -4.981187343597412
    6. '''' → logprob: -6.981187343597412
    7. ' ' → logprob: -6.981187343597412
    8. ' "' → logprob: -8.35618782043457
    9. ' super' → logprob: -9.10618782043457
    10. ''s' → logprob: -9.48118782043457

Token 42: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -8.673547563375905e-05
    2. 'Join' → logprob: -10.375086784362793
    3. 'joining' → logprob: -10.500086784362793
    4. 'l' → logprob: -11.750086784362793
    5. ' join' → logprob: -12.750086784362793
    6. 'r' → logprob: -12.750086784362793
    7. 'joined' → logprob: -13.000086784362793
    8. 'Joining' → logprob: -13.125086784362793
    9. 'concat' → logprob: -13.250086784362793
    10. '```' → logprob: -13.625086784362793

Token 43: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6942904591560364
    2. '(self' → logprob: -0.6942904591560364
    3. '([' → logprob: -7.069290637969971
    4. '(chr' → logprob: -9.194290161132812
    5. '(
' → logprob: -9.319290161132812
    6. '((' → logprob: -10.444290161132812
    7. '(`' → logprob: -11.569290161132812
    8. '('' → logprob: -11.819290161132812
    9. '(lambda' → logprob: -11.944290161132812
    10. '(range' → logprob: -12.069290161132812

Token 44: '.d' (ID: 1380)
  Prédit: '.d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.d' → logprob: -0.07891710847616196
    2. '.' → logprob: -2.5789170265197754
    3. ' .' → logprob: -10.953917503356934
    4. ').' → logprob: -12.328917503356934
    5. '.digital' → logprob: -12.953917503356934
    6. 'digit' → logprob: -13.953917503356934
    7. '.)' → logprob: -14.578917503356934
    8. '.digest' → logprob: -14.828917503356934
    9. '   ' → logprob: -15.328917503356934
    10. ')' → logprob: -15.328917503356934

Token 45: 'igit' (ID: 16673)
  Prédit: 'igit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'igit' → logprob: -0.0005822229431942105
    2. 'igits' → logprob: -7.625582218170166
    3. 'i' → logprob: -9.750582695007324
    4. 'digit' → logprob: -11.250582695007324
    5. 'ig' → logprob: -11.500582695007324
    6. 'igital' → logprob: -12.750582695007324
    7. 'igi' → logprob: -12.750582695007324
    8. 'iget' → logprob: -13.125582695007324
    9. 'igt' → logprob: -13.500582695007324
    10. 'igid' → logprob: -13.750582695007324

Token 46: '_at' (ID: 8254)
  Prédit: '_at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_at' → logprob: -7.226628895296017e-06
    2. 's' → logprob: -12.000007629394531
    3. '_' → logprob: -14.500007629394531
    4. '_a' → logprob: -14.750007629394531
    5. 'at' → logprob: -16.75000762939453
    6. ')_' → logprob: -18.00000762939453
    7. '_s' → logprob: -18.37500762939453
    8. ' _' → logprob: -18.50000762939453
    9. '_as' → logprob: -18.87500762939453
    10. '_AT' → logprob: -20.00000762939453

Token 47: '(pos' (ID: 24566)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.47260743379592896
    2. '(position' → logprob: -1.4726073741912842
    3. '(' → logprob: -2.472607374191284
    4. '(start' → logprob: -2.972607374191284
    5. '(pos' → logprob: -4.972607612609863
    6. '(range' → logprob: -5.472607612609863
    7. '((' → logprob: -8.097607612609863
    8. '(x' → logprob: -8.722607612609863
    9. '(n' → logprob: -9.722607612609863
    10. '(j' → logprob: -10.722607612609863

Token 48: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004341261519584805
    2. 'ition' → logprob: -9.125433921813965
    3. ' ' → logprob: -9.250433921813965
    4. '+' → logprob: -9.375433921813965
    5. '   ' → logprob: -10.250433921813965
    6. '```' → logprob: -10.375433921813965
    7. '))' → logprob: -10.750433921813965
    8. 'osition' → logprob: -10.875433921813965
    9. ' )' → logprob: -11.500433921813965
    10. 's' → logprob: -12.250433921813965

Token 49: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.476545125246048
    2. 'for' → logprob: -0.9765450954437256
    3. '+' → logprob: -6.476545333862305
    4. ' +' → logprob: -7.726545333862305
    5. ')' → logprob: -7.976545333862305
    6. '   ' → logprob: -10.101545333862305
    7. '       ' → logprob: -10.101545333862305
    8. ' ' → logprob: -10.476545333862305
    9. '```' → logprob: -11.476545333862305
    10. '           ' → logprob: -11.601545333862305

Token 50: ' pos' (ID: 1253)
  Prédit: ' pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pos' → logprob: -0.06899325549602509
    2. 'pos' → logprob: -3.318993330001831
    3. ' range' → logprob: -3.568993330001831
    4. 'range' → logprob: -7.068993091583252
    5. ' position' → logprob: -7.568993091583252
    6. ' ' → logprob: -8.56899356842041
    7. '<|end|>' → logprob: -8.69399356842041
    8. ' ' → logprob: -9.06899356842041
    9. ' positions' → logprob: -9.31899356842041
    10. '	pos' → logprob: -9.44399356842041

Token 51: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007626030594110489
    2. 'in' → logprob: -4.882626056671143
    3. ' ' → logprob: -11.257625579833984
    4. '	in' → logprob: -13.007625579833984
    5. 'range' → logprob: -13.507625579833984
    6. '  ' → logprob: -14.507625579833984
    7. 'In' → logprob: -15.132625579833984
    8. ')' → logprob: -15.132625579833984
    9. '    ' → logprob: -15.257625579833984
    10. '_in' → logprob: -15.257625579833984

Token 52: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.001502717612311244
    2. ' range' → logprob: -6.501502513885498
    3. '(range' → logprob: -16.126502990722656
    4. '   ' → logprob: -16.251502990722656
    5. '	range' → logprob: -16.251502990722656
    6. ' ' → logprob: -17.626502990722656
    7. '  ' → logprob: -18.876502990722656
    8. 'rang' → logprob: -19.376502990722656
    9. ')' → logprob: -20.001502990722656
    10. '.range' → logprob: -20.376502990722656

Token 53: '(start' (ID: 20008)
  Prédit: '(start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(start' → logprob: -0.0006864601746201515
    2. 'start' → logprob: -7.5006866455078125
    3. '(' → logprob: -9.000686645507812
    4. ' start' → logprob: -11.750686645507812
    5. '[start' → logprob: -14.250686645507812
    6. '	start' → logprob: -14.500686645507812
    7. '=start' → logprob: -15.000686645507812
    8. ' (' → logprob: -15.125686645507812
    9. ')' → logprob: -15.500686645507812
    10. ',start' → logprob: -15.750686645507812

Token 54: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00041816019802354276
    2. ' ,' → logprob: -8.250417709350586
    3. ',start' → logprob: -9.125417709350586
    4. 'start' → logprob: -10.125417709350586
    5. ' start' → logprob: -12.875417709350586
    6. '   ' → logprob: -12.875417709350586
    7. ',
' → logprob: -14.375417709350586
    8. ' ' → logprob: -14.625417709350586
    9. '       ' → logprob: -14.875417709350586
    10. '        ' → logprob: -15.125417709350586

Token 55: ' start' (ID: 1604)
  Prédit: ' start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' start' → logprob: -0.4740847945213318
    2. 'start' → logprob: -0.9740847945213318
    3. '	start' → logprob: -12.849084854125977
    4. '       ' → logprob: -14.099084854125977
    5. '[start' → logprob: -14.224084854125977
    6. 'end' → logprob: -14.724084854125977
    7. '(start' → logprob: -14.849084854125977
    8. ' ' → logprob: -14.849084854125977
    9. '   ' → logprob: -14.974084854125977
    10. ' ' → logprob: -14.974084854125977

Token 56: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.47417140007019043
    2. ' +' → logprob: -0.9741714000701904
    3. ' ' → logprob: -9.34917163848877
    4. '    ' → logprob: -13.09917163848877
    5. '   ' → logprob: -13.97417163848877
    6. '        ' → logprob: -14.09917163848877
    7. '	' → logprob: -14.22417163848877
    8. ' ' → logprob: -14.47417163848877
    9. ')' → logprob: -14.72417163848877
    10. ' plus' → logprob: -14.72417163848877

Token 57: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.006715728435665369
    2. ' count' → logprob: -5.006715774536133
    3. '   ' → logprob: -15.631715774536133
    4. '	count' → logprob: -16.756715774536133
    5. ' ' → logprob: -17.006715774536133
    6. '       ' → logprob: -17.506715774536133
    7. '(count' → logprob: -18.506715774536133
    8. '    ' → logprob: -19.131715774536133
    9. '```' → logprob: -19.256715774536133
    10. '$count' → logprob: -19.381715774536133

Token 58: '))


' (ID: 49252)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.008682532235980034
    2. ')' → logprob: -4.758682727813721
    3. ')))' → logprob: -9.633682250976562
    4. '))
' → logprob: -13.258682250976562
    5. ' ))' → logprob: -14.758682250976562
    6. ')
' → logprob: -15.633682250976562
    7. '   ' → logprob: -16.258682250976562
    8. '))))' → logprob: -16.883682250976562
    9. ')}' → logprob: -17.383682250976562
    10. '),' → logprob: -17.883682250976562

Token 59: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.00036965898470953107
    2. 'c' → logprob: -8.875370025634766
    3. '
' → logprob: -8.875370025634766
    4. ' class' → logprob: -9.500370025634766
    5. '

' → logprob: -12.250370025634766
    6. '"class' → logprob: -12.750370025634766
    7. '```' → logprob: -13.125370025634766
    8. '<class' → logprob: -13.375370025634766
    9. 'clas' → logprob: -14.000370025634766
    10. 'cla' → logprob: -14.125370025634766

Token 60: ' Cham' (ID: 81008)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.23398295044898987
    2. ' Number' → logprob: -2.983983039855957
    3. ' Space' → logprob: -3.233983039855957
    4. ' Concrete' → logprob: -3.483983039855957
    5. ' Digit' → logprob: -4.108983039855957
    6. ' Basic' → logprob: -4.608983039855957
    7. ' ' → logprob: -4.733983039855957
    8. ' Constant' → logprob: -4.983983039855957
    9. ' Paste' → logprob: -5.608983039855957
    10. ' Simple' → logprob: -5.733983039855957

Token 61: 'per' (ID: 543)
  Prédit: 'per'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'per' → logprob: -0.38410088419914246
    2. 'e' → logprob: -1.8841009140014648
    3. 'ene' → logprob: -2.134100914001465
    4. 'en' → logprob: -3.259100914001465
    5. 'bers' → logprob: -6.009100914001465
    6. 'bert' → logprob: -6.259100914001465
    7. 'pert' → logprob: -6.509100914001465
    8. 'es' → logprob: -7.259100914001465
    9. 'ute' → logprob: -7.759100914001465
    10. 'ae' → logprob: -8.134100914001465

Token 62: 'now' (ID: 6201)
  Prédit: 'now'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'now' → logprob: -0.0060661365278065205
    2. 'nown' → logprob: -5.38106632232666
    3. 'nick' → logprob: -7.13106632232666
    4. 'n' → logprob: -8.38106632232666
    5. 'nik' → logprob: -8.38106632232666
    6. 'noise' → logprob: -9.00606632232666
    7. 'nier' → logprob: -10.38106632232666
    8. 'no' → logprob: -12.38106632232666
    9. 'Now' → logprob: -12.63106632232666
    10. 'NOW' → logprob: -13.00606632232666

Token 63: 'ne' (ID: 611)
  Prédit: 'ne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ne' → logprob: -0.0020324920769780874
    2. 'k' → logprob: -7.502032279968262
    3. 'ick' → logprob: -7.502032279968262
    4. 'nsk' → logprob: -8.502032279968262
    5. 'neck' → logprob: -9.127032279968262
    6. 'skie' → logprob: -9.127032279968262
    7. 'ske' → logprob: -9.627032279968262
    8. 'nike' → logprob: -9.752032279968262
    9. 'nske' → logprob: -9.752032279968262
    10. 'icke' → logprob: -9.752032279968262

Token 64: 'Constant' (ID: 19510)
  Prédit: 'Source'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Source' → logprob: -0.30451714992523193
    2. 'Constant' → logprob: -1.679517149925232
    3. 'Number' → logprob: -3.8045172691345215
    4. '```' → logprob: -4.1795172691345215
    5. ' ' → logprob: -4.6795172691345215
    6. 'const' → logprob: -5.3045172691345215
    7. ''s' → logprob: -5.6795172691345215
    8. 'Sequence' → logprob: -5.6795172691345215
    9. ':' → logprob: -5.8045172691345215
    10. 'Digit' → logprob: -6.0545172691345215

Token 65: '(D' (ID: 9908)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00030400342075154185
    2. '(D' → logprob: -8.625304222106934
    3. '(' → logprob: -9.375304222106934
    4. ':
' → logprob: -11.000304222106934
    5. ' :' → logprob: -11.875304222106934
    6. '():' → logprob: -12.500304222106934
    7. '<|end|>' → logprob: -13.000304222106934
    8. '   ' → logprob: -13.250304222106934
    9. ':D' → logprob: -13.500304222106934
    10. '(object' → logprob: -13.750304222106934

Token 66: 'igit' (ID: 16673)
  Prédit: 'igit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'igit' → logprob: -0.0013810674427077174
    2. 'igi' → logprob: -7.001380920410156
    3. 'igits' → logprob: -9.001380920410156
    4. 'i' → logprob: -9.751380920410156
    5. 'igital' → logprob: -9.876380920410156
    6. 'ig' → logprob: -10.001380920410156
    7. '(' → logprob: -10.251380920410156
    8. 'igita' → logprob: -10.251380920410156
    9. 'igt' → logprob: -10.376380920410156
    10. 'iget' → logprob: -10.751380920410156

Token 67: 'Source' (ID: 4823)
  Prédit: 'Source'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Source' → logprob: -0.00031746976310387254
    2. 'S' → logprob: -8.875317573547363
    3. 'source' → logprob: -9.625317573547363
    4. ')' → logprob: -10.125317573547363
    5. 's' → logprob: -11.125317573547363
    6. 'Sequence' → logprob: -11.375317573547363
    7. ' Source' → logprob: -11.750317573547363
    8. 'Sou' → logprob: -11.875317573547363
    9. 'ource' → logprob: -12.375317573547363
    10. '.Source' → logprob: -12.625317573547363

Token 68: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0001490716531407088
    2. ':' → logprob: -9.00014877319336
    3. ')' → logprob: -11.12514877319336
    4. '):
' → logprob: -12.25014877319336
    5. '   ' → logprob: -13.12514877319336
    6. ' ):' → logprob: -13.75014877319336
    7. '>:' → logprob: -13.87514877319336
    8. ']:' → logprob: -14.50014877319336
    9. '():' → logprob: -14.75014877319336
    10. '}:' → logprob: -14.87514877319336

Token 69: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10079605877399445
    2. ':' → logprob: -2.3507959842681885
    3. '    ' → logprob: -8.97579574584961
    4. '    
' → logprob: -9.22579574584961
    5. '<|end|>' → logprob: -9.35079574584961
    6. '(' → logprob: -9.85079574584961
    7. ' def' → logprob: -10.10079574584961
    8. 'def' → logprob: -10.72579574584961
    9. ' ' → logprob: -10.85079574584961
    10. ' :' → logprob: -11.10079574584961

Token 70: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.033825039863586426
    2. 'def' (adapté à ' def') → logprob: -3.408824920654297
    3. '   ' → logprob: -8.908824920654297
    4. ' _' → logprob: -10.908824920654297
    5. '    ' → logprob: -11.658824920654297
    6. ' """' → logprob: -12.533824920654297
    7. ' d' → logprob: -12.908824920654297
    8. ' de' → logprob: -12.908824920654297
    9. ' ' → logprob: -13.533824920654297
    10. ')' → logprob: -14.033824920654297

Token 71: ' __' (ID: 2516)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8351288437843323
    2. '_' → logprob: -1.7101287841796875
    3. ' def' → logprob: -1.7101287841796875
    4. ' digit' → logprob: -2.2101287841796875
    5. ' _' → logprob: -2.5851287841796875
    6. ' __' → logprob: -4.8351287841796875
    7. ' d' → logprob: -5.5851287841796875
    8. '_digit' → logprob: -6.0851287841796875
    9. '  ' → logprob: -6.2101287841796875
    10. ' ' → logprob: -6.8351287841796875

Token 72: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -8.895480277715251e-06
    2. 'i' → logprob: -12.375008583068848
    3. 'ini' → logprob: -12.375008583068848
    4. 'in' → logprob: -15.625008583068848
    5. ' init' → logprob: -15.875008583068848
    6. 'int' → logprob: -17.250009536743164
    7. '```' → logprob: -19.000009536743164
    8. 'inite' → logprob: -19.750009536743164
    9. ' ' → logprob: -19.875009536743164
    10. '   ' → logprob: -20.125009536743164

Token 73: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.08925994485616684
    2. '(self' → logprob: -2.4642598628997803
    3. '__' → logprob: -8.96426010131836
    4. '__(
' → logprob: -9.96426010131836
    5. '(' → logprob: -10.08926010131836
    6. 'self' → logprob: -10.33926010131836
    7. '_(' → logprob: -10.83926010131836
    8. ')(' → logprob: -11.21426010131836
    9. ' (' → logprob: -11.33926010131836
    10. '<>(' → logprob: -11.46426010131836

Token 74: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -8.0536883615423e-05
    2. ' self' → logprob: -9.500080108642578
    3. ')' → logprob: -12.625080108642578
    4. '
' → logprob: -13.375080108642578
    5. ' ' → logprob: -14.500080108642578
    6. '   ' → logprob: -15.625080108642578
    7. '0' → logprob: -16.625080108642578
    8. '):
' → logprob: -17.750080108642578
    9. '  ' → logprob: -18.000080108642578
    10. 'elf' → logprob: -18.000080108642578

Token 75: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4693279266357422
    2. 'self' → logprob: -1.2193279266357422
    3. ')' → logprob: -2.969327926635742
    4. ' ' → logprob: -4.219327926635742
    5. ' ,' → logprob: -4.844327926635742
    6. ',self' → logprob: -6.594327926635742
    7. ' self' → logprob: -6.844327926635742
    8. '(self' → logprob: -6.844327926635742
    9. '   ' → logprob: -7.344327926635742
    10. '):' → logprob: -7.844327926635742

Token 76: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.004420862998813391
    2. ' self' → logprob: -6.004420757293701
    3. '       ' → logprob: -6.379420757293701
    4. '   ' → logprob: -8.62942123413086
    5. ')' → logprob: -9.75442123413086
    6. ' ' → logprob: -12.62942123413086
    7. '0' → logprob: -12.87942123413086
    8. '(self' → logprob: -14.00442123413086
    9. '	self' → logprob: -14.62942123413086
    10. '    ' → logprob: -14.75442123413086

Token 77: ' #' (ID: 1069)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0021653673611581326
    2. ' self' → logprob: -6.2521653175354
    3. '       ' → logprob: -8.877165794372559
    4. '   ' → logprob: -10.002165794372559
    5. 'pass' → logprob: -11.002165794372559
    6. 'super' → logprob: -11.127165794372559
    7. 'from' → logprob: -12.252165794372559
    8. 'import' → logprob: -12.377165794372559
    9. ' ' → logprob: -12.502165794372559
    10. '  ' → logprob: -13.377165794372559

Token 78: ' Pre' (ID: 4659)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.09004320204257965
    2. ' self' → logprob: -2.465043306350708
    3. 'super' → logprob: -7.340043067932129
    4. '   ' → logprob: -8.840043067932129
    5. ' super' → logprob: -9.465043067932129
    6. 'pass' → logprob: -9.715043067932129
    7. 'def' → logprob: -10.340043067932129
    8. '       ' → logprob: -10.340043067932129
    9. ' ' → logprob: -10.715043067932129
    10. 'import' → logprob: -11.090043067932129

Token 79: 'compute' (ID: 54521)
  Prédit: 'compute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.2213052213191986
    2. 'vious' → logprob: -3.0963051319122314
    3. 'computed' → logprob: -3.0963051319122314
    4. '   ' → logprob: -3.3463051319122314
    5. '       ' → logprob: -3.7213051319122314
    6. 'viously' → logprob: -4.3463053703308105
    7. 'sum' → logprob: -4.9713053703308105
    8. 'comput' → logprob: -5.0963053703308105
    9. 'super' → logprob: -5.2213053703308105
    10. 'fetch' → logprob: -5.9713053703308105

Token 80: ' powers' (ID: 27742)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.055512432008981705
    2. ' self' → logprob: -3.1805124282836914
    3. '<|end|>' → logprob: -4.930512428283691
    4. '   ' → logprob: -6.305512428283691
    5. '       ' → logprob: -6.430512428283691
    6. 'pass' → logprob: -7.430512428283691
    7. '<|end|>' → logprob: -8.180512428283691
    8. '    ' → logprob: -8.680512428283691
    9. 'super' → logprob: -9.680512428283691
    10. 'digits' → logprob: -9.680512428283691

Token 81: ' for' (ID: 395)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.08299213647842407
    2. 'of' → logprob: -2.7079920768737793
    3. '   ' → logprob: -5.332992076873779
    4. '=' → logprob: -6.707992076873779
    5. '  ' → logprob: -6.707992076873779
    6. '    ' → logprob: -6.707992076873779
    7. ' ' → logprob: -6.832992076873779
    8. '[' → logprob: -7.207992076873779
    9. '       ' → logprob: -7.457992076873779
    10. '_of' → logprob: -7.457992076873779

Token 82: ' digit' (ID: 19181)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -1.3010181188583374
    2. ' digit' → logprob: -2.176018238067627
    3. ' ' → logprob: -2.426018238067627
    4. ' self' → logprob: -2.676018238067627
    5. 'fast' → logprob: -2.676018238067627
    6. ' fast' → logprob: -2.926018238067627
    7. 'self' → logprob: -2.926018238067627
    8. 'digit' → logprob: -2.926018238067627
    9. 'efficient' → logprob: -3.051018238067627
    10. ' indexing' → logprob: -3.676018238067627

Token 83: ' lengths' (ID: 51957)
  Prédit: '_lengths'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lengths' → logprob: -0.5829383134841919
    2. '_counts' → logprob: -0.9579383134841919
    3. 's' → logprob: -3.2079381942749023
    4. '_length' → logprob: -4.582938194274902
    5. '_ranges' → logprob: -6.582938194274902
    6. '_' → logprob: -6.582938194274902
    7. '_count' → logprob: -6.957938194274902
    8. ' lengths' → logprob: -7.582938194274902
    9. ' counts' → logprob: -7.707938194274902
    10. '_s' → logprob: -7.832938194274902

Token 84: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7919479608535767
    2. ':' → logprob: -1.7919479608535767
    3. ' self' → logprob: -2.166947841644287
    4. 'self' → logprob: -2.541947841644287
    5. ' ' → logprob: -2.916947841644287
    6. '<|end|>' → logprob: -3.541947841644287
    7. '        ' → logprob: -3.791947841644287
    8. ',' → logprob: -3.791947841644287
    9. ' =' → logprob: -3.916947841644287
    10. '=' → logprob: -5.041947841644287

Token 85: '1' (ID: 16)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.8486113548278809
    2. ' self' → logprob: -1.8486113548278809
    3. 'self' → logprob: -1.9736113548278809
    4. ' ' → logprob: -2.098611354827881
    5. '1' → logprob: -3.098611354827881
    6. ')' → logprob: -3.473611354827881
    7. '       ' → logprob: -3.973611354827881
    8. ' )' → logprob: -4.223611354827881
    9. '[' → logprob: -4.598611354827881
    10. ' [' → logprob: -4.848611354827881

Token 86: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.13295237720012665
    2. ' through' → logprob: -2.8829524517059326
    3. ',' → logprob: -3.1329524517059326
    4. '-' → logprob: -4.8829522132873535
    5. 'to' → logprob: -4.8829522132873535
    6. ' ' → logprob: -6.2579522132873535
    7. '9' → logprob: -7.0079522132873535
    8. ')' → logprob: -7.2579522132873535
    9. ' up' → logprob: -7.2579522132873535
    10. '0' → logprob: -7.3829522132873535

Token 87: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2146235853433609
    2. '9' → logprob: -2.3396236896514893
    3. '18' → logprob: -3.3396236896514893
    4. '7' → logprob: -3.5896236896514893
    5. '6' → logprob: -4.71462345123291
    6. '19' → logprob: -4.83962345123291
    7. '10' → logprob: -4.96462345123291
    8. '12' → logprob: -5.58962345123291
    9. '20' → logprob: -6.21462345123291
    10. '8' → logprob: -6.46462345123291

Token 88: '10' (ID: 702)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.4913575053215027
    2. ' ' → logprob: -1.8663575649261475
    3. '7' → logprob: -2.2413575649261475
    4. '10' → logprob: -2.7413575649261475
    5. '6' → logprob: -3.9913575649261475
    6. '18' → logprob: -3.9913575649261475
    7. '19' → logprob: -4.991357326507568
    8. '12' → logprob: -4.991357326507568
    9. '8' → logprob: -5.366357326507568
    10. '20' → logprob: -6.366357326507568

Token 89: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.21754612028598785
    2. '):' → logprob: -1.8425461053848267
    3. ' )' → logprob: -3.717546224594116
    4. '0' → logprob: -5.967545986175537
    5. ' ):' → logprob: -5.967545986175537
    6. '9' → logprob: -6.717545986175537
    7. '):
' → logprob: -6.717545986175537
    8. ',' → logprob: -6.967545986175537
    9. '       ' → logprob: -7.092545986175537
    10. ' digits' → logprob: -7.217545986175537

Token 90: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0028788186609745026
    2. '<|end|>' → logprob: -6.252878665924072
    3. '        ' → logprob: -7.752878665924072
    4. 'self' → logprob: -8.50287914276123
    5. ',' → logprob: -10.00287914276123
    6. '      ' → logprob: -10.12787914276123
    7. '<|end|>' → logprob: -10.12787914276123
    8. '
' → logprob: -10.12787914276123
    9. ' self' → logprob: -10.25287914276123
    10. '        
' → logprob: -10.62787914276123

Token 91: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.24191081523895264
    2. ' self' → logprob: -1.7419108152389526
    3. '       ' → logprob: -3.241910934448242
    4. '        ' → logprob: -8.241910934448242
    5. 'pass' → logprob: -9.366910934448242
    6. ' ' → logprob: -9.991910934448242
    7. '<|end|>' → logprob: -10.241910934448242
    8. ' pass' → logprob: -10.491910934448242
    9. '   ' → logprob: -10.491910934448242
    10. '    ' → logprob: -10.741910934448242

Token 92: '._' (ID: 2697)
  Prédit: '_lengths'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lengths' → logprob: -1.6921396255493164
    2. '_p' → logprob: -1.9421396255493164
    3. '_ranges' → logprob: -2.1921396255493164
    4. '.' → logprob: -2.3171396255493164
    5. '_digit' → logprob: -2.4421396255493164
    6. '._' → logprob: -2.9421396255493164
    7. '_counts' → logprob: -3.0671396255493164
    8. 'digit' → logprob: -3.3171396255493164
    9. 'powers' → logprob: -3.5671396255493164
    10. '_pow' → logprob: -3.8171396255493164

Token 93: 'digit' (ID: 78327)
  Prédit: 'powers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'powers' → logprob: -0.4359234869480133
    2. 'length' → logprob: -2.9359235763549805
    3. 'digit' → logprob: -2.9359235763549805
    4. 'power' → logprob: -2.9359235763549805
    5. 'start' → logprob: -3.0609235763549805
    6. 'pow' → logprob: -3.4359235763549805
    7. 'c' → logprob: -3.6859235763549805
    8. 'max' → logprob: -3.9359235763549805
    9. 'limits' → logprob: -4.4359235763549805
    10. 'offset' → logprob: -4.4359235763549805

Token 94: '_length' (ID: 11514)
  Prédit: '_lengths'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lengths' → logprob: -0.6490938663482666
    2. '_counts' → logprob: -1.1490938663482666
    3. '_ranges' → logprob: -2.6490938663482666
    4. 's' → logprob: -3.5240938663482666
    5. '_length' → logprob: -3.8990938663482666
    6. '_p' → logprob: -4.3990936279296875
    7. '_limits' → logprob: -4.6490936279296875
    8. '_blocks' → logprob: -5.8990936279296875
    9. '_start' → logprob: -6.1490936279296875
    10. '_offsets' → logprob: -6.3990936279296875

Token 95: '_b' (ID: 1535)
  Prédit: '_counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_counts' → logprob: -0.6864566802978516
    2. 's' → logprob: -0.9364566802978516
    3. '_ranges' → logprob: -2.5614566802978516
    4. '_limits' → logprob: -4.561456680297852
    5. '_s' → logprob: -5.436456680297852
    6. '_p' → logprob: -5.561456680297852
    7. '_lengths' → logprob: -6.186456680297852
    8. '_sizes' → logprob: -6.311456680297852
    9. '_to' → logprob: -6.436456680297852
    10. '_' → logprob: -7.311456680297852

Token 96: 'uckets' (ID: 73451)
  Prédit: 'ounds'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ounds' → logprob: -0.7523433566093445
    2. 'ound' → logprob: -1.3773434162139893
    3. 'reak' → logprob: -2.3773434162139893
    4. 'uckets' → logprob: -2.7523434162139893
    5. 'y' → logprob: -2.8773434162139893
    6. 'ases' → logprob: -3.1273434162139893
    7. 'locks' → logprob: -4.75234317779541
    8. 'ase' → logprob: -5.12734317779541
    9. 'ins' → logprob: -6.50234317779541
    10. 'r' → logprob: -7.62734317779541

Token 97: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.012535430490970612
    2. '=' → logprob: -4.387535572052002
    3. ':' → logprob: -11.262535095214844
    4. ' ' → logprob: -12.387535095214844
    5. '<|end|>' → logprob: -13.012535095214844
    6. '=[]' → logprob: -13.137535095214844
    7. '   ' → logprob: -13.387535095214844
    8. ' =[' → logprob: -13.762535095214844
    9. ')' → logprob: -14.887535095214844
    10. 's' → logprob: -15.262535095214844

Token 98: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.03847920149564743
    2. ' [' → logprob: -3.4134790897369385
    3. '[]' → logprob: -5.413479328155518
    4. '[(' → logprob: -8.66347885131836
    5. ' []' → logprob: -9.16347885131836
    6. '[
' → logprob: -9.78847885131836
    7. ' ' → logprob: -11.78847885131836
    8. '   ' → logprob: -12.28847885131836
    9. '[]
' → logprob: -12.53847885131836
    10. '[self' → logprob: -12.78847885131836

Token 99: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 100: ' #' (ID: 1069)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.7789608240127563
    2. 'count' → logprob: -1.2789608240127563
    3. ' start' → logprob: -2.403960704803467
    4. ' count' → logprob: -3.403960704803467
    5. 'current' → logprob: -3.528960704803467
    6. 'length' → logprob: -4.028960704803467
    7. '       ' → logprob: -4.028960704803467
    8. ' current' → logprob: -4.153960704803467
    9. 'acc' → logprob: -4.528960704803467
    10. ' length' → logprob: -4.778960704803467

Token 101: ' Each' (ID: 11555)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.7228330969810486
    2. 'count' → logprob: -1.5978331565856934
    3. 'current' → logprob: -2.2228331565856934
    4. 'acc' → logprob: -3.4728331565856934
    5. 'c' → logprob: -3.5978331565856934
    6. 'offset' → logprob: -3.7228331565856934
    7. ' start' → logprob: -3.9728331565856934
    8. ' current' → logprob: -4.472833156585693
    9. 'for' → logprob: -4.722833156585693
    10. 'total' → logprob: -4.722833156585693

Token 102: ' bucket' (ID: 28257)
  Prédit: ' bucket'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bucket' → logprob: -0.23184169828891754
    2. 'bucket' → logprob: -1.7318416833877563
    3. ' entry' → logprob: -4.731841564178467
    4. '(bucket' → logprob: -5.731841564178467
    5. ' element' → logprob: -5.856841564178467
    6. ' (' → logprob: -5.981841564178467
    7. 'element' → logprob: -5.981841564178467
    8. '(' → logprob: -6.231841564178467
    9. ' tuple' → logprob: -6.231841564178467
    10. '_bucket' → logprob: -6.231841564178467

Token 103: ':' (ID: 25)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -1.2210646867752075
    2. ' =' → logprob: -1.7210646867752075
    3. '=' → logprob: -1.8460646867752075
    4. ' contains' → logprob: -2.096064567565918
    5. 'is' → logprob: -2.721064567565918
    6. ' represents' → logprob: -3.346064567565918
    7. ' will' → logprob: -3.721064567565918
    8. 'contains' → logprob: -3.721064567565918
    9. ' stores' → logprob: -3.846064567565918
    10. ' covers' → logprob: -4.096064567565918

Token 104: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.8615339398384094
    2. '(start' → logprob: -1.2365338802337646
    3. '(count' → logprob: -2.1115338802337646
    4. '(number' → logprob: -2.2365338802337646
    5. '(' → logprob: -3.7365338802337646
    6. '(length' → logprob: -4.986534118652344
    7. '(first' → logprob: -4.986534118652344
    8. '(max' → logprob: -5.236534118652344
    9. '(tuple' → logprob: -5.236534118652344
    10. '(self' → logprob: -5.986534118652344

Token 105: 'start' (ID: 5236)
  Prédit: ' start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' start' → logprob: -0.6483180522918701
    2. 'start' → logprob: -0.7733180522918701
    3. ' first' → logprob: -5.398318290710449
    4. ' digit' → logprob: -6.398318290710449
    5. 'count' → logprob: -6.648318290710449
    6. ' number' → logprob: -7.148318290710449
    7. 'first' → logprob: -7.148318290710449
    8. ' count' → logprob: -7.148318290710449
    9. ' digits' → logprob: -7.273318290710449
    10. 'digit' → logprob: -7.398318290710449

Token 106: '_position' (ID: 23739)
  Prédit: '_value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.8714154958724976
    2. ',' → logprob: -1.3714154958724976
    3. '_position' → logprob: -2.121415615081787
    4. '_index' → logprob: -2.371415615081787
    5. '_number' → logprob: -2.371415615081787
    6. '_pos' → logprob: -4.371415615081787
    7. '_num' → logprob: -5.121415615081787
    8. ' ,' → logprob: -6.871415615081787
    9. '_range' → logprob: -7.621415615081787
    10. 'ing' → logprob: -7.871415615081787

Token 107: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011951648048125207
    2. ' ,' → logprob: -9.25011920928955
    3. ')' → logprob: -12.12511920928955
    4. ',
' → logprob: -12.37511920928955
    5. '<|end|>' → logprob: -12.87511920928955
    6. 's' → logprob: -13.12511920928955
    7. ',int' → logprob: -14.00011920928955
    8. '=' → logprob: -14.00011920928955
    9. '),' → logprob: -14.25011920928955
    10. ',length' → logprob: -14.50011920928955

Token 108: ' digit' (ID: 19181)
  Prédit: ' count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.8002737760543823
    2. 'count' → logprob: -1.6752737760543823
    3. ' number' → logprob: -1.9252737760543823
    4. ' numbers' → logprob: -3.300273895263672
    5. ' digit' → logprob: -3.425273895263672
    6. 'number' → logprob: -3.425273895263672
    7. ' digits' → logprob: -3.425273895263672
    8. ' first' → logprob: -4.050273895263672
    9. 'digits' → logprob: -4.550273895263672
    10. ' start' → logprob: -4.800273895263672

Token 109: '_length' (ID: 11514)
  Prédit: '_count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.27923068404197693
    2. 's' → logprob: -1.5292307138442993
    3. 'count' → logprob: -4.15423059463501
    4. '_length' → logprob: -4.77923059463501
    5. ' count' → logprob: -6.65423059463501
    6. '_start' → logprob: -7.15423059463501
    7. 'length' → logprob: -8.904231071472168
    8. '_range' → logprob: -8.904231071472168
    9. '_value' → logprob: -9.404231071472168
    10. '_' → logprob: -9.529231071472168

Token 110: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00668529886752367
    2. ')' → logprob: -5.131685256958008
    3. ' ,' → logprob: -7.256685256958008
    4. 's' → logprob: -11.631685256958008
    5. ' )' → logprob: -11.631685256958008
    6. '_count' → logprob: -11.631685256958008
    7. '),' → logprob: -11.881685256958008
    8. 'count' → logprob: -12.506685256958008
    9. '<|end|>' → logprob: -12.756685256958008
    10. ',)' → logprob: -13.131685256958008

Token 111: ' count' (ID: 3605)
  Prédit: ' count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.6755048036575317
    2. 'count' → logprob: -0.8005048036575317
    3. ' number' → logprob: -4.675504684448242
    4. ' numbers' → logprob: -4.925504684448242
    5. 'start' → logprob: -5.175504684448242
    6. 'number' → logprob: -5.300504684448242
    7. ' start' → logprob: -5.425504684448242
    8. ' quantity' → logprob: -6.800504684448242
    9. 'quantity' → logprob: -6.800504684448242
    10. ' ' → logprob: -6.925504684448242

Token 112: '_of' (ID: 8023)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.055264972150325775
    2. ',' → logprob: -2.930264949798584
    3. '),' → logprob: -8.305265426635742
    4. ' )' → logprob: -10.430265426635742
    5. 's' → logprob: -10.555265426635742
    6. ' ,' → logprob: -10.930265426635742
    7. '<|end|>' → logprob: -11.055265426635742
    8. ',)' → logprob: -12.055265426635742
    9. ')
' → logprob: -12.180265426635742
    10. '   ' → logprob: -12.555265426635742

Token 113: '_numbers' (ID: 76842)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'numbers' → logprob: -0.5890064835548401
    2. '_numbers' → logprob: -1.3390064239501953
    3. ' numbers' → logprob: -2.3390064239501953
    4. 'digits' → logprob: -3.2140064239501953
    5. '_digits' → logprob: -3.9640064239501953
    6. ')' → logprob: -5.214006423950195
    7. ' integers' → logprob: -5.339006423950195
    8. '_in' → logprob: -5.339006423950195
    9. ' digits' → logprob: -5.714006423950195
    10. ' ' → logprob: -5.839006423950195

Token 114: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.38758471608161926
    2. ',' → logprob: -1.1375846862792969
    3. ' ,' → logprob: -8.637584686279297
    4. ' )' → logprob: -8.762584686279297
    5. '<|end|>' → logprob: -9.012584686279297
    6. '   ' → logprob: -9.262584686279297
    7. '       ' → logprob: -10.637584686279297
    8. '),' → logprob: -10.637584686279297
    9. '_in' → logprob: -11.262584686279297
    10. ')
' → logprob: -11.387584686279297

Token 115: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21010085940361023
    2. ')' → logprob: -2.5851008892059326
    3. '<|end|>' → logprob: -2.5851008892059326
    4. ',' → logprob: -4.7101006507873535
    5. '
' → logprob: -5.0851006507873535
    6. ' =' → logprob: -5.3351006507873535
    7. '   ' → logprob: -5.5851006507873535
    8. '=' → logprob: -6.2101006507873535
    9. '<|end|>' → logprob: -6.2101006507873535
    10. 'self' → logprob: -6.2101006507873535

Token 116: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12305040657520294
    2. 'start' → logprob: -3.2480504512786865
    3. 'count' → logprob: -3.6230504512786865
    4. ' start' → logprob: -4.123050212860107
    5. ' count' → logprob: -4.998050212860107
    6. 'position' → logprob: -5.248050212860107
    7. 'pos' → logprob: -6.248050212860107
    8. 'n' → logprob: -6.248050212860107
    9. ' n' → logprob: -6.498050212860107
    10. '(' → logprob: -6.748050212860107

Token 117: ' Acc' (ID: 6278)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.5554675459861755
    2. ' start' → logprob: -2.3054676055908203
    3. 'count' → logprob: -2.9304676055908203
    4. '       ' → logprob: -3.0554676055908203
    5. 'current' → logprob: -3.3054676055908203
    6. ' for' → logprob: -3.4304676055908203
    7. 'for' → logprob: -3.4304676055908203
    8. 'self' → logprob: -3.6804676055908203
    9. ' self' → logprob: -3.9304676055908203
    10. ' current' → logprob: -4.05546760559082

Token 118: 'um' (ID: 394)
  Prédit: 'umulate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'umulate' → logprob: -0.439687043428421
    2. 'um' → logprob: -1.0646870136260986
    3. 'ount' → logprob: -5.064687252044678
    4. 'umulator' → logprob: -6.064687252044678
    5. 'ounted' → logprob: -7.189687252044678
    6. 'umul' → logprob: -7.439687252044678
    7. 'umulative' → logprob: -7.814687252044678
    8. 'eler' → logprob: -8.31468677520752
    9. 'om' → logprob: -9.43968677520752
    10. 'umu' → logprob: -9.68968677520752

Token 119: 'ulated' (ID: 13314)
  Prédit: 'ulated'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ulated' → logprob: -0.2857140004634857
    2. 'ulate' → logprob: -1.410714030265808
    3. 'ulating' → logprob: -6.535714149475098
    4. '   ' → logprob: -6.910714149475098
    5. 'ul' → logprob: -7.910714149475098
    6. 'ulates' → logprob: -8.035714149475098
    7. '       ' → logprob: -8.285714149475098
    8. '#' → logprob: -8.285714149475098
    9. 'lated' → logprob: -8.285714149475098
    10. '=' → logprob: -8.910714149475098

Token 120: ' number' (ID: 2086)
  Prédit: '_positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_positions' → logprob: -1.3763189315795898
    2. '_digits' → logprob: -1.3763189315795898
    3. '_length' → logprob: -2.00131893157959
    4. '_' → logprob: -2.50131893157959
    5. '_position' → logprob: -2.50131893157959
    6. '_count' → logprob: -2.87631893157959
    7. ' =' → logprob: -3.12631893157959
    8. '_digit' → logprob: -3.50131893157959
    9. '=' → logprob: -3.87631893157959
    10. '_counts' → logprob: -4.50131893157959

Token 121: ' of' (ID: 328)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.14028199017047882
    2. '_positions' → logprob: -2.890281915664673
    3. '_' → logprob: -3.265281915664673
    4. '_counts' → logprob: -4.015282154083252
    5. '_lengths' → logprob: -5.140282154083252
    6. '_count' → logprob: -5.515282154083252
    7. '_s' → logprob: -6.265282154083252
    8. '_digits' → logprob: -6.515282154083252
    9. '_length' → logprob: -6.765282154083252
    10. ' =' → logprob: -7.265282154083252

Token 122: ' digits' (ID: 37806)
  Prédit: ' digits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' digits' → logprob: -0.6763349771499634
    2. 'digits' → logprob: -0.8013349771499634
    3. '_digits' → logprob: -3.301334857940674
    4. ' ' → logprob: -5.926334857940674
    5. 'positions' → logprob: -7.301334857940674
    6. '_' → logprob: -7.426334857940674
    7. ' positions' → logprob: -8.238835334777832
    8. '   ' → logprob: -8.301335334777832
    9. '  ' → logprob: -8.988835334777832
    10. 'total' → logprob: -9.113835334777832

Token 123: ' covered' (ID: 13083)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7720141410827637
    2. ',' → logprob: -1.1470141410827637
    3. '=' → logprob: -1.7720141410827637
    4. ')' → logprob: -4.522014141082764
    5. '=[]' → logprob: -5.022014141082764
    6. 's' → logprob: -5.397014141082764
    7. '       ' → logprob: -5.647014141082764
    8. ' ,' → logprob: -5.647014141082764
    9. '<|end|>' → logprob: -5.772014141082764
    10. ' in' → logprob: -5.772014141082764

Token 124: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6506179571151733
    2. ' by' → logprob: -1.1506179571151733
    3. ')' → logprob: -2.650618076324463
    4. 'by' → logprob: -3.275618076324463
    5. '=' → logprob: -3.775618076324463
    6. ' =' → logprob: -4.525618076324463
    7. ' ,' → logprob: -5.150618076324463
    8. ',
' → logprob: -5.775618076324463
    9. '       ' → logprob: -5.775618076324463
    10. 'self' → logprob: -6.400618076324463

Token 125: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19308023154735565
    2. ' =' → logprob: -2.568080186843872
    3. '=' → logprob: -2.943080186843872
    4. ',' → logprob: -3.443080186843872
    5. '<|end|>' → logprob: -5.068080425262451
    6. ')' → logprob: -5.568080425262451
    7. '   ' → logprob: -6.818080425262451
    8. 'import' → logprob: -7.818080425262451
    9. ' for' → logprob: -8.193079948425293
    10. ' ' → logprob: -8.568079948425293

Token 126: ' self' (ID: 1051)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'acc' → logprob: -1.2515407800674438
    2. 'start' → logprob: -2.0015406608581543
    3. ' acc' → logprob: -2.2515406608581543
    4. ' start' → logprob: -2.2515406608581543
    5. 'count' → logprob: -2.2515406608581543
    6. '       ' → logprob: -2.3765406608581543
    7. ' count' → logprob: -3.0015406608581543
    8. ' total' → logprob: -3.7515406608581543
    9. 'total' → logprob: -4.126540660858154
    10. 'current' → logprob: -4.251540660858154

Token 127: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -1.0229071378707886
    2. '.append' → logprob: -1.5229071378707886
    3. ' =' → logprob: -2.022907257080078
    4. '_d' → logprob: -2.897907257080078
    5. '.' → logprob: -3.147907257080078
    6. 'def' → logprob: -4.022907257080078
    7. ' ' → logprob: -4.022907257080078
    8. '=' → logprob: -4.147907257080078
    9. '_' → logprob: -4.397907257080078
    10. '_positions' → logprob: -4.397907257080078

Token 128: 'init' (ID: 3287)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.5194546580314636
    2. 'digit' → logprob: -1.3944547176361084
    3. '_acc' → logprob: -2.8944547176361084
    4. 'total' → logprob: -4.269454479217529
    5. 'position' → logprob: -4.269454479217529
    6. 'count' → logprob: -4.394454479217529
    7. '_digit' → logprob: -4.394454479217529
    8. 'current' → logprob: -4.769454479217529
    9. 'offset' → logprob: -5.019454479217529
    10. 'start' → logprob: -5.019454479217529

Token 129: '_b' (ID: 1535)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.18815553188323975
    2. '_b' → logprob: -3.1881556510925293
    3. '_p' → logprob: -3.3131556510925293
    4. '_digit' → logprob: -3.8131556510925293
    5. '_positions' → logprob: -3.9381556510925293
    6. '_d' → logprob: -4.813155651092529
    7. '_digits' → logprob: -4.938155651092529
    8. 'ialize' → logprob: -5.313155651092529
    9. '_position' → logprob: -5.438155651092529
    10. '_length' → logprob: -5.813155651092529

Token 130: 'uckets' (ID: 73451)
  Prédit: 'uckets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uckets' → logprob: -0.000351670227246359
    2. 'ucket' → logprob: -8.500351905822754
    3. 'ase' → logprob: -10.000351905822754
    4. 'uck' → logprob: -10.500351905822754
    5. 'ases' → logprob: -10.750351905822754
    6. 'y' → logprob: -10.750351905822754
    7. 'atches' → logprob: -11.125351905822754
    8. 'digit' → logprob: -12.875351905822754
    9. '_' → logprob: -13.000351905822754
    10. 'ackets' → logprob: -13.750351905822754

Token 131: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.031776219606399536
    2. '       ' → logprob: -4.406776428222656
    3. '()
' → logprob: -4.906776428222656
    4. 'def' → logprob: -5.281776428222656
    5. '(' → logprob: -5.656776428222656
    6. ' =' → logprob: -7.031776428222656
    7. '   ' → logprob: -7.281776428222656
    8. '(self' → logprob: -7.281776428222656
    9. '()

' → logprob: -7.906776428222656
    10. '=' → logprob: -8.656776428222656

Token 132: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6875166893005371
    2. '   ' → logprob: -0.9375166893005371
    3. '
' → logprob: -2.562516689300537
    4. ' def' → logprob: -3.937516689300537
    5. '    
' → logprob: -5.562516689300537
    6. '<|end|>' → logprob: -5.937516689300537
    7. ' ' → logprob: -7.187516689300537
    8. '	def' → logprob: -7.687516689300537
    9. '

' → logprob: -8.187517166137695
    10. '<|end|>' → logprob: -8.437517166137695

Token 133: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.02445966564118862
    2. ' def' → logprob: -3.7744596004486084
    3. '   ' → logprob: -6.8994598388671875
    4. '
' → logprob: -8.899459838867188
    5. ' ' → logprob: -10.149459838867188
    6. '    
' → logprob: -11.274459838867188
    7. '	def' → logprob: -11.399459838867188
    8. '<|end|>' → logprob: -13.649459838867188
    9. '        
' → logprob: -14.149459838867188
    10. '    ' → logprob: -14.399459838867188

Token 134: ' _' (ID: 1175)
  Prédit: '_init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_init' → logprob: -0.0009898189455270767
    2. '_digit' → logprob: -7.25098991394043
    3. ' _' → logprob: -8.25098991394043
    4. '_in' → logprob: -11.87598991394043
    5. '_add' → logprob: -12.87598991394043
    6. '_continue' → logprob: -13.37598991394043
    7. '_indent' → logprob: -13.75098991394043
    8. '_' → logprob: -14.00098991394043
    9. '_define' → logprob: -14.25098991394043
    10. '__' → logprob: -14.50098991394043

Token 135: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -6.704273118884885e-07
    2. '_init' → logprob: -14.625000953674316
    3. ' init' → logprob: -16.0
    4. 'initialize' → logprob: -17.75
    5. '	init' → logprob: -18.25
    6. 'inite' → logprob: -18.5
    7. 'int' → logprob: -18.625
    8. '(init' → logprob: -19.5
    9. '.init' → logprob: -20.125
    10. ')init' → logprob: -20.875

Token 136: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -3.128163257315464e-07
    2. '_' → logprob: -15.75
    3. '_bucket' → logprob: -16.25
    4. '_p' → logprob: -19.125
    5. '_buffers' → logprob: -19.875
    6. ' _' → logprob: -20.0
    7. '_bins' → logprob: -20.125
    8. '_batches' → logprob: -20.375
    9. '_chunks' → logprob: -20.375
    10. '```' → logprob: -21.125

Token 137: 'uckets' (ID: 73451)
  Prédit: 'uckets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uckets' → logprob: -2.2007883671903983e-05
    2. 'uck' → logprob: -11.500021934509277
    3. 'u' → logprob: -12.500021934509277
    4. 'ucket' → logprob: -12.500021934509277
    5. '_' → logprob: -13.375021934509277
    6. 'b' → logprob: -13.875021934509277
    7. 'uc' → logprob: -15.000021934509277
    8. '_b' → logprob: -15.125021934509277
    9. 'uckles' → logprob: -15.125021934509277
    10. 'ackets' → logprob: -15.250021934509277

Token 138: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -4.127333340875339e-06
    2. '(' → logprob: -13.250003814697266
    3. 'self' → logprob: -13.625003814697266
    4. ' (' → logprob: -14.500003814697266
    5. '   ' → logprob: -15.125003814697266
    6. ' self' → logprob: -15.875003814697266
    7. ' ' → logprob: -16.875003814697266
    8. '       ' → logprob: -17.000003814697266
    9. '(
' → logprob: -18.125003814697266
    10. '=self' → logprob: -19.625003814697266

Token 139: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0019420842872932553
    2. '):
' → logprob: -6.376942157745361
    3. 'self' → logprob: -9.376941680908203
    4. ')' → logprob: -9.626941680908203
    5. ' ):' → logprob: -9.751941680908203
    6. '   ' → logprob: -11.626941680908203
    7. ',' → logprob: -12.001941680908203
    8. '):
' → logprob: -12.126941680908203
    9. '       ' → logprob: -12.501941680908203
    10. ':' → logprob: -13.001941680908203

Token 140: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -5.300083648762666e-05
    2. 'self' → logprob: -10.500053405761719
    3. '   ' → logprob: -12.375053405761719
    4. 'n' → logprob: -12.625053405761719
    5. ',' → logprob: -13.000053405761719
    6. '#' → logprob: -13.000053405761719
    7. '        
' → logprob: -13.000053405761719
    8. '):
' → logprob: -13.125053405761719
    9. ' self' → logprob: -13.875053405761719
    10. '```' → logprob: -13.875053405761719

Token 141: ' #' (ID: 1069)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.46700531244277954
    2. '       ' → logprob: -1.7170052528381348
    3. 'start' → logprob: -1.7170052528381348
    4. ' self' → logprob: -5.717005252838135
    5. 'digit' → logprob: -5.842005252838135
    6. 'length' → logprob: -6.217005252838135
    7. 'current' → logprob: -6.467005252838135
    8. 'count' → logprob: -6.467005252838135
    9. 'n' → logprob: -7.717005252838135
    10. 'bucket' → logprob: -7.842005252838135

Token 142: ' Since' (ID: 12265)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.2287817746400833
    2. 'start' → logprob: -1.728781819343567
    3. ' self' → logprob: -3.9787817001342773
    4. 'digit' → logprob: -6.103781700134277
    5. ' start' → logprob: -6.478781700134277
    6. 'prev' → logprob: -7.353781700134277
    7. 'current' → logprob: -7.478781700134277
    8. 'length' → logprob: -7.603781700134277
    9. 'count' → logprob: -7.978781700134277
    10. '       ' → logprob: -8.103781700134277

Token 143: ' N' (ID: 478)
  Prédit: 'digit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'digit' → logprob: -0.6349087357521057
    2. ' the' → logprob: -1.884908676147461
    3. 'self' → logprob: -2.384908676147461
    4. ' self' → logprob: -2.509908676147461
    5. ' digit' → logprob: -3.009908676147461
    6. 'the' → logprob: -3.884908676147461
    7. '1' → logprob: -4.009908676147461
    8. 'start' → logprob: -4.509908676147461
    9. ' ' → logprob: -4.509908676147461
    10. 'digits' → logprob: -5.384908676147461

Token 144: ' can' (ID: 665)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5960291624069214
    2. 'umbers' → logprob: -0.9710291624069214
    3. ' =' → logprob: -3.846029281616211
    4. 'atural' → logprob: -4.096029281616211
    5. 'umber' → logprob: -4.471029281616211
    6. 'um' → logprob: -5.846029281616211
    7. ' is' → logprob: -5.846029281616211
    8. ' starts' → logprob: -5.971029281616211
    9. '<=' → logprob: -6.346029281616211
    10. 'o' → logprob: -6.471029281616211

Token 145: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.09418243914842606
    2. ' range' → logprob: -3.2191824913024902
    3. 'be' → logprob: -3.3441824913024902
    4. 'range' → logprob: -5.59418249130249
    5. ' ' → logprob: -5.96918249130249
    6. '=' → logprob: -6.34418249130249
    7. 'ot' → logprob: -6.71918249130249
    8. 'one' → logprob: -6.71918249130249
    9. 'start' → logprob: -7.21918249130249
    10. '1' → logprob: -7.84418249130249

Token 146: ' up' (ID: 869)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1280972957611084
    2. 'very' → logprob: -1.2530972957611084
    3. '10' → logprob: -2.1280972957611084
    4. 'large' → logprob: -2.1280972957611084
    5. 'in' → logprob: -2.7530972957611084
    6. ' very' → logprob: -3.7530972957611084
    7. ' large' → logprob: -4.2530975341796875
    8. 'up' → logprob: -4.3780975341796875
    9. '0' → logprob: -4.5030975341796875
    10. 'ar' → logprob: -5.2530975341796875

Token 147: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.2647262513637543
    2. 'p' → logprob: -2.139726161956787
    3. 'def' → logprob: -3.139726161956787
    4. '1' → logprob: -3.389726161956787
    5. 'ntil' → logprob: -3.639726161956787
    6. 'ndef' → logprob: -6.014726161956787
    7. '_to' → logprob: -6.264726161956787
    8. 'from' → logprob: -7.014726161956787
    9. ' to' → logprob: -7.139726161956787
    10. 'nt' → logprob: -7.389726161956787

Token 148: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.003817653050646186
    2. ' ' → logprob: -6.628817558288574
    3. '18' → logprob: -6.753817558288574
    4. '1' → logprob: -8.003817558288574
    5. '100' → logprob: -8.503817558288574
    6. '9' → logprob: -8.753817558288574
    7. 'int' → logprob: -8.878817558288574
    8. '19' → logprob: -9.503817558288574
    9. '20' → logprob: -9.753817558288574
    10. '12' → logprob: -10.003817558288574

Token 149: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.022809894755482674
    2. '18' → logprob: -4.272809982299805
    3. '19' → logprob: -5.522809982299805
    4. '9' → logprob: -6.147809982299805
    5. '1' → logprob: -6.897809982299805
    6. '12' → logprob: -7.897809982299805
    7. '20' → logprob: -8.272809982299805
    8. '16' → logprob: -8.397809982299805
    9. '100' → logprob: -8.647809982299805
    10. 'int' → logprob: -8.772809982299805

Token 150: '^' (ID: 61)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.34895315766334534
    2. '       ' → logprob: -1.848953127861023
    3. '0' → logprob: -2.3489532470703125
    4. ' **' → logprob: -3.9739532470703125
    5. '000' → logprob: -4.3489532470703125
    6. ',' → logprob: -5.9739532470703125
    7. '^' → logprob: -6.0989532470703125
    8. '   ' → logprob: -7.0989532470703125
    9. '7' → logprob: -7.0989532470703125
    10. 'digits' → logprob: -7.4739532470703125

Token 151: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.059639424085617065
    2. '10' → logprob: -3.5596394538879395
    3. '12' → logprob: -4.4346394538879395
    4. '6' → logprob: -5.3096394538879395
    5. '18' → logprob: -5.3096394538879395
    6. '7' → logprob: -5.5596394538879395
    7. '15' → logprob: -5.6846394538879395
    8. '8' → logprob: -8.934638977050781
    9. '19' → logprob: -9.184638977050781
    10. '20' → logprob: -10.184638977050781

Token 152: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14300894737243652
    2. ',' → logprob: -2.0180089473724365
    3. ' ,' → logprob: -9.018009185791016
    4. 'import' → logprob: -9.643009185791016
    5. ' for' → logprob: -10.393009185791016
    6. ',
' → logprob: -10.643009185791016
    7. 'def' → logprob: -10.768009185791016
    8. '   ' → logprob: -11.018009185791016
    9. 'n' → logprob: -11.268009185791016
    10. 'class' → logprob: -12.018009185791016

Token 153: ' we' (ID: 581)
  Prédit: ' start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' start' → logprob: -1.2409950494766235
    2. ' self' → logprob: -1.3659950494766235
    3. 'start' → logprob: -1.6159950494766235
    4. 'self' → logprob: -2.490994930267334
    5. '       ' → logprob: -2.615994930267334
    6. ' digit' → logprob: -3.865994930267334
    7. 'digit' → logprob: -4.240994930267334
    8. ' max' → logprob: -4.615994930267334
    9. ' length' → logprob: -4.740994930267334
    10. ' limit' → logprob: -4.865994930267334

Token 154: ' need' (ID: 1309)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4483776092529297
    2. ' can' → logprob: -1.6983776092529297
    3. ' need' → logprob: -2.6983776092529297
    4. 'import' → logprob: -3.4483776092529297
    5. ' will' → logprob: -4.57337760925293
    6. 'def' → logprob: -4.69837760925293
    7. ' should' → logprob: -4.82337760925293
    8. ' import' → logprob: -4.94837760925293
    9. ''ll' → logprob: -4.94837760925293
    10. 'can' → logprob: -5.57337760925293

Token 155: ' buckets' (ID: 83230)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.11931373178958893
    2. '       ' → logprob: -2.4943137168884277
    3. 'to' → logprob: -3.7443137168884277
    4. 'start' → logprob: -6.869313716888428
    5. ' a' → logprob: -7.369313716888428
    6. 'import' → logprob: -7.369313716888428
    7. 'max' → logprob: -7.619313716888428
    8. 'def' → logprob: -7.619313716888428
    9. 'digit' → logprob: -8.119314193725586
    10. ' start' → logprob: -8.244314193725586

Token 156: ' covering' (ID: 24878)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6126282215118408
    2. '       ' → logprob: -0.8626282215118408
    3. 'for' → logprob: -3.987628221511841
    4. ' that' → logprob: -4.612627983093262
    5. ' to' → logprob: -6.237627983093262
    6. ' with' → logprob: -6.987627983093262
    7. ' =' → logprob: -6.987627983093262
    8. ' of' → logprob: -7.362627983093262
    9. '=' → logprob: -7.487627983093262
    10. '        ' → logprob: -7.612627983093262

Token 157: ' positions' (ID: 15897)
  Prédit: 'digit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digit' → logprob: -0.8025376200675964
    2. 'digits' → logprob: -1.9275376796722412
    3. ' digit' → logprob: -2.052537679672241
    4. ' up' → logprob: -2.427537679672241
    5. ' digits' → logprob: -3.052537679672241
    6. 'up' → logprob: -3.302537679672241
    7. 'positions' → logprob: -3.677537679672241
    8. ' all' → logprob: -4.052537441253662
    9. ' positions' → logprob: -4.302537441253662
    10. 'all' → logprob: -4.552537441253662

Token 158: ' up' (ID: 869)
  Prédit: ' up'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' up' → logprob: -0.7707760334014893
    2. ' for' → logprob: -1.0207760334014893
    3. '       ' → logprob: -3.0207760334014893
    4. ' from' → logprob: -3.0207760334014893
    5. 'from' → logprob: -3.6457760334014893
    6. 'for' → logprob: -3.7707760334014893
    7. 'up' → logprob: -5.14577579498291
    8. ' in' → logprob: -5.27077579498291
    9. ' =' → logprob: -5.64577579498291
    10. '=' → logprob: -6.14577579498291

Token 159: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.01623600348830223
    2. ' to' → logprob: -4.266235828399658
    3. '       ' → logprob: -6.766235828399658
    4. '   ' → logprob: -7.016235828399658
    5. '_to' → logprob: -11.891236305236816
    6. '           ' → logprob: -12.391236305236816
    7. ' ' → logprob: -12.891236305236816
    8. '               ' → logprob: -13.016236305236816
    9. '  ' → logprob: -13.516236305236816
    10. '     ' → logprob: -14.141236305236816

Token 160: ' that' (ID: 484)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.05965311452746391
    2. ' ' → logprob: -2.9346530437469482
    3. '100' → logprob: -6.059653282165527
    4. '1' → logprob: -6.184653282165527
    5. 'int' → logprob: -8.809653282165527
    6. '9' → logprob: -9.184653282165527
    7. '18' → logprob: -10.184653282165527
    8. '   ' → logprob: -10.559653282165527
    9. '11' → logprob: -11.934653282165527
    10. '19' → logprob: -11.934653282165527

Token 161: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7356030941009521
    2. 'def' → logprob: -2.110603094100952
    3. 'self' → logprob: -2.485603094100952
    4. '   ' → logprob: -3.110603094100952
    5. ' for' → logprob: -3.110603094100952
    6. ' in' → logprob: -3.735603094100952
    7. ' with' → logprob: -3.735603094100952
    8. 'max' → logprob: -3.860603094100952
    9. 'limit' → logprob: -3.860603094100952
    10. 'digit' → logprob: -4.235603332519531

Token 162: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003291480534244329
    2. 'digit' → logprob: -9.12532901763916
    3. 'start' → logprob: -10.12532901763916
    4. 'n' → logprob: -10.12532901763916
    5. ',' → logprob: -10.75032901763916
    6. 'number' → logprob: -11.12532901763916
    7. '   ' → logprob: -11.12532901763916
    8. 'length' → logprob: -11.25032901763916
    9. 'max' → logprob: -11.37532901763916
    10. 'digits' → logprob: -11.62532901763916

Token 163: ' #' (ID: 1069)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.29113641381263733
    2. '       ' → logprob: -2.1661365032196045
    3. ' start' → logprob: -2.5411365032196045
    4. 'self' → logprob: -3.6661365032196045
    5. ' self' → logprob: -4.416136264801025
    6. 'digit' → logprob: -5.541136264801025
    7. 'current' → logprob: -6.041136264801025
    8. 'count' → logprob: -6.166136264801025
    9. 'length' → logprob: -6.291136264801025
    10. 'limit' → logprob: -6.541136264801025

Token 164: ' We'll' (ID: 46830)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.4769817888736725
    2. 'self' → logprob: -1.35198175907135
    3. ' self' → logprob: -2.9769818782806396
    4. ' start' → logprob: -3.9769818782806396
    5. 'digit' → logprob: -4.2269816398620605
    6. 'max' → logprob: -4.4769816398620605
    7. 'limit' → logprob: -5.4769816398620605
    8. 'import' → logprob: -5.7269816398620605
    9. '       ' → logprob: -6.1019816398620605
    10. 'prev' → logprob: -6.2269816398620605

Token 165: ' prepare' (ID: 13708)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.47138723731040955
    2. 'append' → logprob: -1.596387267112732
    3. ' start' → logprob: -3.3463871479034424
    4. '       ' → logprob: -3.8463871479034424
    5. 'import' → logprob: -3.9713871479034424
    6. 'initialize' → logprob: -3.9713871479034424
    7. 'def' → logprob: -4.5963873863220215
    8. ' append' → logprob: -4.5963873863220215
    9. '   ' → logprob: -4.9713873863220215
    10. 'build' → logprob: -5.0963873863220215

Token 166: ' buckets' (ID: 83230)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.9096219539642334
    2. 'start' → logprob: -1.4096219539642334
    3. '       ' → logprob: -2.2846219539642334
    4. 'self' → logprob: -2.5346219539642334
    5. '   ' → logprob: -3.0346219539642334
    6. 'length' → logprob: -3.7846219539642334
    7. 'for' → logprob: -3.9096219539642334
    8. ' self' → logprob: -4.1596221923828125
    9. 'digit' → logprob: -4.1596221923828125
    10. 'current' → logprob: -4.5346221923828125

Token 167: ' with' (ID: 483)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.37421971559524536
    2. 'for' → logprob: -1.6242196559906006
    3. '       ' → logprob: -2.4992196559906006
    4. ' with' → logprob: -4.37421989440918
    5. '=' → logprob: -5.37421989440918
    6. ' up' → logprob: -5.87421989440918
    7. 'with' → logprob: -5.87421989440918
    8. ' =' → logprob: -5.99921989440918
    9. ' covering' → logprob: -6.62421989440918
    10. 'starting' → logprob: -6.87421989440918

Token 168: ' numbers' (ID: 8663)
  Prédit: 'digit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'digit' → logprob: -0.1767045557498932
    2. 'start' → logprob: -2.6767046451568604
    3. ' digit' → logprob: -2.8017046451568604
    4. '(' → logprob: -4.926704406738281
    5. 'length' → logprob: -5.051704406738281
    6. ' start' → logprob: -5.426704406738281
    7. 'number' → logprob: -5.551704406738281
    8. 'self' → logprob: -6.301704406738281
    9. ' lengths' → logprob: -6.426704406738281
    10. 'digits' → logprob: -6.801704406738281

Token 169: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -1.1261014938354492
    2. 'from' → logprob: -1.6261014938354492
    3. ' =' → logprob: -2.251101493835449
    4. '=' → logprob: -2.876101493835449
    5. ' from' → logprob: -3.001101493835449
    6. 'of' → logprob: -3.001101493835449
    7. 'length' → logprob: -3.126101493835449
    8. ' lengths' → logprob: -3.251101493835449
    9. ' with' → logprob: -3.626101493835449
    10. ' starting' → logprob: -3.751101493835449

Token 170: ' length' (ID: 5517)
  Prédit: 'digits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'digits' → logprob: -0.04106704145669937
    2. ' digits' → logprob: -3.416067123413086
    3. 'digit' → logprob: -5.416067123413086
    4. '1' → logprob: -6.291067123413086
    5. 'length' → logprob: -7.666067123413086
    6. 'd' → logprob: -8.916067123413086
    7. ' ' → logprob: -9.041067123413086
    8. 'different' → logprob: -9.666067123413086
    9. ' digit' → logprob: -10.291067123413086
    10. 'a' → logprob: -10.291067123413086

Token 171: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6307702660560608
    2. '1' → logprob: -0.8807702660560608
    3. 'd' → logprob: -4.630770206451416
    4. 'from' → logprob: -4.880770206451416
    5. ' from' → logprob: -4.880770206451416
    6. ' i' → logprob: -5.130770206451416
    7. '=' → logprob: -5.380770206451416
    8. 'digits' → logprob: -5.380770206451416
    9. ' digits' → logprob: -6.005770206451416
    10. ' d' → logprob: -6.005770206451416

Token 172: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1310245841741562
    2. 'd' → logprob: -3.1310245990753174
    3. 'digits' → logprob: -3.3810245990753174
    4. 'length' → logprob: -4.506024360656738
    5. 'from' → logprob: -5.006024360656738
    6. 'i' → logprob: -5.131024360656738
    7. ' ' → logprob: -5.131024360656738
    8. 'n' → logprob: -5.881024360656738
    9. 'digit' → logprob: -6.006024360656738
    10. ' length' → logprob: -6.006024360656738

Token 173: ' to' (ID: 316)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1142633780837059
    2. ' to' → logprob: -2.9892632961273193
    3. '0' → logprob: -3.9892632961273193
    4. ' through' → logprob: -4.739263534545898
    5. ' ,' → logprob: -4.864263534545898
    6. '       ' → logprob: -5.114263534545898
    7. ' for' → logprob: -5.614263534545898
    8. ' and' → logprob: -5.989263534545898
    9. '<|end|>' → logprob: -5.989263534545898
    10. 'for' → logprob: -6.989263534545898

Token 174: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0935225710272789
    2. ' ' → logprob: -2.593522548675537
    3. '11' → logprob: -4.468522548675537
    4. '20' → logprob: -6.593522548675537
    5. '19' → logprob: -6.968522548675537
    6. '18' → logprob: -7.593522548675537
    7. '9' → logprob: -9.593523025512695
    8. '   ' → logprob: -9.843523025512695
    9. '12' → logprob: -10.218523025512695
    10. '15' → logprob: -10.968523025512695

Token 175: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.001080206478945911
    2. '11' → logprob: -7.75108003616333
    3. '19' → logprob: -8.001080513000488
    4. '18' → logprob: -8.501080513000488
    5. '20' → logprob: -10.126080513000488
    6. '15' → logprob: -10.626080513000488
    7. '12' → logprob: -10.751080513000488
    8. ' ' → logprob: -11.501080513000488
    9. '16' → logprob: -12.001080513000488
    10. '``' → logprob: -12.751080513000488

Token 176: ' digits' (ID: 37806)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.030149972066283226
    2. ' for' → logprob: -3.6551499366760254
    3. ',' → logprob: -6.155149936676025
    4. 'for' → logprob: -7.280149936676025
    5. 'n' → logprob: -8.655150413513184
    6. '   ' → logprob: -9.030150413513184
    7. 'digits' → logprob: -9.155150413513184
    8. ' (' → logprob: -9.655150413513184
    9. 'digit' → logprob: -9.780150413513184
    10. ':' → logprob: -9.780150413513184

Token 177: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002363636391237378
    2. ' for' → logprob: -6.252363681793213
    3. ',' → logprob: -8.627363204956055
    4. 'for' → logprob: -9.502363204956055
    5. '   ' → logprob: -9.627363204956055
    6. 'digits' → logprob: -10.627363204956055
    7. 'digit' → logprob: -10.752363204956055
    8. 'n' → logprob: -11.377363204956055
    9. ' (' → logprob: -12.002363204956055
    10. 'import' → logprob: -12.127363204956055

Token 178: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00010080150241265073
    2. '   ' → logprob: -10.125101089477539
    3. ',' → logprob: -10.625101089477539
    4. ' for' → logprob: -11.125101089477539
    5. 'n' → logprob: -11.875101089477539
    6. 'for' → logprob: -13.000101089477539
    7. 'number' → logprob: -13.250101089477539
    8. 'digits' → logprob: -13.625101089477539
    9. 'start' → logprob: -13.750101089477539
    10. 'digit' → logprob: -13.875101089477539

Token 179: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' (adapté à ' start') → logprob: -0.39409175515174866
    2. '       ' → logprob: -1.6440917253494263
    3. 'self' → logprob: -2.394091844558716
    4. 'count' → logprob: -4.144091606140137
    5. ' start' → logprob: -5.394091606140137
    6. 'base' → logprob: -5.519091606140137
    7. 'for' → logprob: -6.019091606140137
    8. ' self' → logprob: -6.269091606140137
    9. 'power' → logprob: -6.269091606140137
    10. 'digit' → logprob: -6.269091606140137

Token 180: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.30090248584747314
    2. '=' → logprob: -2.1759023666381836
    3. ' =' → logprob: -2.6759023666381836
    4. '_position' → logprob: -3.3009023666381836
    5. '_positions' → logprob: -4.050902366638184
    6. '_' → logprob: -4.175902366638184
    7. '_num' → logprob: -5.300902366638184
    8. '_digit' → logprob: -7.300902366638184
    9. '_number' → logprob: -7.550902366638184
    10. '_val' → logprob: -7.925902366638184

Token 181: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.694514811038971
    2. ' =' → logprob: -0.694514811038971
    3. 's' → logprob: -6.694514751434326
    4. ',' → logprob: -9.069515228271484
    5. '   ' → logprob: -12.069515228271484
    6. '       ' → logprob: -12.944515228271484
    7. ' ' → logprob: -13.194515228271484
    8. '  ' → logprob: -14.569515228271484
    9. ' ,' → logprob: -14.569515228271484
    10. ':' → logprob: -14.694515228271484

Token 182: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.027093635872006416
    2. '0' → logprob: -3.6520936489105225
    3. ' ' → logprob: -7.152093410491943
    4. '   ' → logprob: -11.652093887329102
    5. '       ' → logprob: -15.402093887329102
    6. '  ' → logprob: -15.652093887329102
    7. '     ' → logprob: -15.902093887329102
    8. '    ' → logprob: -15.902093887329102
    9. '           ' → logprob: -16.6520938873291
    10. '[' → logprob: -17.0895938873291

Token 183: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0232466422021389
    2. '0' → logprob: -3.7732465267181396
    3. ' ' → logprob: -13.898246765136719
    4. '   ' → logprob: -16.52324676513672
    5. '[' → logprob: -16.77324676513672
    6. '=' → logprob: -16.96074676513672
    7. '```' → logprob: -17.21074676513672
    8. '
' → logprob: -17.39824676513672
    9. '(' → logprob: -17.52324676513672
    10. '2' → logprob: -17.64824676513672

Token 184: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011494329199194908
    2. 'for' → logprob: -5.511494159698486
    3. '
' → logprob: -5.761494159698486
    4. ' for' → logprob: -5.886494159698486
    5. ',' → logprob: -7.386494159698486
    6. 'num' → logprob: -8.636494636535645
    7. '        
' → logprob: -8.886494636535645
    8. 'length' → logprob: -9.511494636535645
    9. 'prev' → logprob: -9.886494636535645
    10. ',
' → logprob: -10.011494636535645

Token 185: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007248322479426861
    2. 'for' → logprob: -5.257248401641846
    3. ' for' → logprob: -6.257248401641846
    4. ',' → logprob: -10.507247924804688
    5. 'length' → logprob: -11.257247924804688
    6. '        
' → logprob: -11.757247924804688
    7. 'digit' → logprob: -11.757247924804688
    8. '   ' → logprob: -11.882247924804688
    9. '      ' → logprob: -12.382247924804688
    10. '<|end|>' → logprob: -12.507247924804688

Token 186: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.009574984200298786
    2. '       ' → logprob: -4.759574890136719
    3. ' for' → logprob: -7.009574890136719
    4. 'digit' → logprob: -10.259574890136719
    5. 'self' → logprob: -11.759574890136719
    6. '
' → logprob: -12.009574890136719
    7. 'length' → logprob: -13.134574890136719
    8. '   ' → logprob: -13.634574890136719
    9. '        
' → logprob: -14.134574890136719
    10. 'count' → logprob: -14.134574890136719

Token 187: ' digit' (ID: 19181)
  Prédit: 'digit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digit' → logprob: -0.14816990494728088
    2. ' digit' → logprob: -2.398169994354248
    3. 'length' → logprob: -3.398169994354248
    4. 'd' → logprob: -5.023169994354248
    5. ' length' → logprob: -5.148169994354248
    6. 'digits' → logprob: -7.648169994354248
    7. ' d' → logprob: -8.14816951751709
    8. 'i' → logprob: -9.14816951751709
    9. ' digits' → logprob: -10.14816951751709
    10. 'n' → logprob: -10.64816951751709

Token 188: '_len' (ID: 13683)
  Prédit: '_length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.000959700730163604
    2. '_count' → logprob: -8.250959396362305
    3. '_len' → logprob: -8.375959396362305
    4. '   ' → logprob: -8.625959396362305
    5. 's' → logprob: -9.000959396362305
    6. '_' → logprob: -9.500959396362305
    7. ' _' → logprob: -10.000959396362305
    8. ' length' → logprob: -11.375959396362305
    9. 'length' → logprob: -12.125959396362305
    10. '    ' → logprob: -12.125959396362305

Token 189: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007976737804710865
    2. 'in' → logprob: -4.882976531982422
    3. ' ' → logprob: -8.132976531982422
    4. ',' → logprob: -9.882976531982422
    5. 's' → logprob: -11.507976531982422
    6. ' ,' → logprob: -11.882976531982422
    7. '_in' → logprob: -13.257976531982422
    8. '  ' → logprob: -13.507976531982422
    9. '=' → logprob: -14.132976531982422
    10. '   ' → logprob: -14.132976531982422

Token 190: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.07892008125782013
    2. ' range' → logprob: -2.5789201259613037
    3. '1' → logprob: -11.078920364379883
    4. '   ' → logprob: -11.953920364379883
    5. '(range' → logprob: -12.328920364379883
    6. ' ' → logprob: -12.953920364379883
    7. '	range' → logprob: -14.203920364379883
    8. '  ' → logprob: -14.703920364379883
    9. '[' → logprob: -15.453920364379883
    10. '    ' → logprob: -16.328920364379883

Token 191: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.009783241897821426
    2. '1' → logprob: -4.6347832679748535
    3. ',' → logprob: -10.634782791137695
    4. ' (' → logprob: -13.509782791137695
    5. '   ' → logprob: -14.509782791137695
    6. '(
' → logprob: -14.509782791137695
    7. ' ' → logprob: -14.759782791137695
    8. ' ,' → logprob: -15.634782791137695
    9. 'from' → logprob: -16.759782791137695
    10. 'def' → logprob: -16.884782791137695

Token 192: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.3080716346157715e-05
    2. ' ' → logprob: -10.750022888183594
    3. '(' → logprob: -13.500022888183594
    4. ',' → logprob: -16.250022888183594
    5. '10' → logprob: -16.250022888183594
    6. '   ' → logprob: -17.625022888183594
    7. '```' → logprob: -18.250022888183594
    8. '
' → logprob: -18.750022888183594
    9. 'from' → logprob: -18.937522888183594
    10. '１' → logprob: -19.687522888183594

Token 193: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00026503115077503026
    2. ' ,' → logprob: -8.250265121459961
    3. '10' → logprob: -13.000265121459961
    4. '1' → logprob: -14.125265121459961
    5. ',
' → logprob: -15.375265121459961
    6. '   ' → logprob: -15.750265121459961
    7. '0' → logprob: -16.62526512145996
    8. ' ' → logprob: -17.00026512145996
    9. '       ' → logprob: -17.00026512145996
    10. '‌,' → logprob: -17.25026512145996

Token 194: ' ' (ID: 220)
  Prédit: '11'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '11' → logprob: -0.0007492328295484185
    2. ' ' → logprob: -7.250749111175537
    3. '12' → logprob: -10.625749588012695
    4. '   ' → logprob: -12.375749588012695
    5. '20' → logprob: -12.375749588012695
    6. '```' → logprob: -13.125749588012695
    7. '``' → logprob: -14.000749588012695
    8. '10' → logprob: -14.500749588012695
    9. '21' → logprob: -14.500749588012695
    10. '
' → logprob: -14.625749588012695

Token 195: '11' (ID: 994)
  Prédit: '11'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '11' → logprob: -1.4974866644479334e-05
    2. '12' → logprob: -11.375015258789062
    3. ' ' → logprob: -14.000015258789062
    4. '``' → logprob: -14.125015258789062
    5. '10' → logprob: -14.500015258789062
    6. '```' → logprob: -14.625015258789062
    7. '20' → logprob: -14.875015258789062
    8. '=' → logprob: -16.250015258789062
    9. '   ' → logprob: -16.500015258789062
    10. '19' → logprob: -16.625015258789062

Token 196: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.12711918354034424
    2. '):' → logprob: -2.1271190643310547
    3. '):
' → logprob: -8.877119064331055
    4. ' ):
' → logprob: -10.502119064331055
    5. '       ' → logprob: -11.877119064331055
    6. ' ):' → logprob: -12.002119064331055
    7. ':' → logprob: -12.127119064331055
    8. '   ' → logprob: -13.002119064331055
    9. '):

' → logprob: -13.502119064331055
    10. ':
' → logprob: -14.002119064331055

Token 197: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02176075614988804
    2. ':' → logprob: -4.271760940551758
    3. ',' → logprob: -6.271760940551758
    4. 'count' → logprob: -6.271760940551758
    5. ':
' → logprob: -6.396760940551758
    6. 'num' → logprob: -7.021760940551758
    7. '):
' → logprob: -8.021760940551758
    8. '):' → logprob: -8.771760940551758
    9. '```' → logprob: -8.896760940551758
    10. '          ' → logprob: -9.146760940551758

Token 198: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.009792448952794075
    2. ' count' → logprob: -4.884792327880859
    3. 'start' → logprob: -7.259792327880859
    4. '           ' → logprob: -7.384792327880859
    5. '   ' → logprob: -8.25979232788086
    6. 'first' → logprob: -8.88479232788086
    7. 'if' → logprob: -9.00979232788086
    8. 'num' → logprob: -9.50979232788086
    9. ' if' → logprob: -9.75979232788086
    10. 'import' → logprob: -10.00979232788086

Token 199: '_numbers' (ID: 76842)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519329786300659
    2. '=' → logprob: -1.501932978630066
    3. '=int' → logprob: -14.251933097839355
    4. '=count' → logprob: -14.376933097839355
    5. ' ' → logprob: -14.751933097839355
    6. '   ' → logprob: -14.751933097839355
    7. ')' → logprob: -15.126933097839355
    8. 's' → logprob: -15.626933097839355
    9. '=num' → logprob: -15.876933097839355
    10. '```' → logprob: -16.00193214416504

Token 200: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25193122029304504
    2. '=' → logprob: -1.5019311904907227
    3. '=int' → logprob: -14.126931190490723
    4. '<|end|>' → logprob: -14.501931190490723
    5. ')' → logprob: -14.876931190490723
    6. ' ' → logprob: -15.876931190490723
    7. '=count' → logprob: -16.87693214416504
    8. ',' → logprob: -16.87693214416504
    9. '=
' → logprob: -17.00193214416504
    10. ' =
' → logprob: -17.37693214416504

Token 201: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.0004925066023133695
    2. ' ' → logprob: -7.875492572784424
    3. '10' → logprob: -9.125492095947266
    4. '   ' → logprob: -13.125492095947266
    5. '
' → logprob: -14.625492095947266
    6. 'pow' → logprob: -14.750492095947266
    7. 'int' → logprob: -14.875492095947266
    8. '1' → logprob: -15.750492095947266
    9. '(' → logprob: -16.500492095947266
    10. '  ' → logprob: -16.875492095947266

Token 202: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.00016587569552939385
    2. '10' → logprob: -9.250165939331055
    3. ' ' → logprob: -9.625165939331055
    4. 'pow' → logprob: -13.625165939331055
    5. '   ' → logprob: -13.750165939331055
    6. '
' → logprob: -14.375165939331055
    7. 'int' → logprob: -14.875165939331055
    8. '(' → logprob: -15.125165939331055
    9. '  ' → logprob: -16.625165939331055
    10. '1' → logprob: -16.750165939331055

Token 203: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.002872511511668563
    2. '*' → logprob: -5.877872467041016
    3. '           ' → logprob: -9.877872467041016
    4. '*(' → logprob: -12.002872467041016
    5. '   ' → logprob: -12.502872467041016
    6. '               ' → logprob: -13.877872467041016
    7. '10' → logprob: -14.002872467041016
    8. '          ' → logprob: -14.002872467041016
    9. '            ' → logprob: -14.502872467041016
    10. '    ' → logprob: -14.502872467041016

Token 204: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.007260400801897049
    2. ' (' → logprob: -5.507260322570801
    3. '10' → logprob: -5.757260322570801
    4. 'pow' → logprob: -11.8822603225708
    5. '(pow' → logprob: -12.1322603225708
    6. '   ' → logprob: -12.6322603225708
    7. ' ' → logprob: -13.7572603225708
    8. ' pow' → logprob: -16.132261276245117
    9. '           ' → logprob: -16.382261276245117
    10. '
' → logprob: -16.507261276245117

Token 205: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. '(' → logprob: -16.375
    4. 'pow' → logprob: -17.625
    5. '   ' → logprob: -20.125
    6. '
' → logprob: -20.375
    7. '```' → logprob: -21.25
    8. ' (' → logprob: -22.0
    9. '9' → logprob: -23.0
    10. 'int' → logprob: -23.25

Token 206: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.030421046540141106
    2. '(d' → logprob: -3.655421018600464
    3. ' **' → logprob: -5.530421257019043
    4. 'digit' → logprob: -9.780421257019043
    5. '^(' → logprob: -11.030421257019043
    6. '```' → logprob: -11.155421257019043
    7. ' (' → logprob: -11.280421257019043
    8. '{' → logprob: -11.530421257019043
    9. '(' → logprob: -11.905421257019043
    10. ')' → logprob: -12.030421257019043

Token 207: ' (' (ID: 350)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.00034654809860512614
    2. ' (' → logprob: -8.000346183776855
    3. '(' → logprob: -12.125346183776855
    4. '(token' → logprob: -14.000346183776855
    5. '((' → logprob: -14.375346183776855
    6. '   ' → logprob: -14.375346183776855
    7. '(max' → logprob: -14.875346183776855
    8. '(indent' → logprob: -15.000346183776855
    9. '{' → logprob: -15.125346183776855
    10. '(
' → logprob: -15.250346183776855

Token 208: 'digit' (ID: 78327)
  Prédit: 'digit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digit' → logprob: -5.991464786347933e-05
    2. '(d' → logprob: -10.375060081481934
    3. ' digit' → logprob: -10.500060081481934
    4. '   ' → logprob: -15.000060081481934
    5. '(' → logprob: -15.250060081481934
    6. ' ' → logprob: -16.000059127807617
    7. ' (' → logprob: -16.125059127807617
    8. 'digits' → logprob: -16.625059127807617
    9. '{' → logprob: -16.750059127807617
    10. 'd' → logprob: -17.000059127807617

Token 209: '_len' (ID: 13683)
  Prédit: 'digit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digit' → logprob: -0.022969985380768776
    2. '_len' → logprob: -4.147970199584961
    3. 'len' → logprob: -5.022970199584961
    4. '-' → logprob: -9.022970199584961
    5. 'token' → logprob: -9.647970199584961
    6. ' digit' → logprob: -10.272970199584961
    7. '_digit' → logprob: -10.397970199584961
    8. 'length' → logprob: -11.022970199584961
    9. '_length' → logprob: -11.522970199584961
    10. '   ' → logprob: -11.522970199584961

Token 210: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0024756586644798517
    2. ' -' → logprob: -6.002475738525391
    3. '   ' → logprob: -17.25247573852539
    4. ' ' → logprob: -18.75247573852539
    5. '```' → logprob: -19.87747573852539
    6. ')' → logprob: -20.12747573852539
    7. '−' → logprob: -20.25247573852539
    8. '  ' → logprob: -20.37747573852539
    9. ')-' → logprob: -20.62747573852539
    10. '       ' → logprob: -20.87747573852539

Token 211: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. '```' → logprob: -17.6875
    4. '   ' → logprob: -18.125
    5. '
' → logprob: -18.5625
    6. '2' → logprob: -19.25
    7. '{' → logprob: -19.375
    8. ')' → logprob: -19.5625
    9. '۱' → logprob: -19.625
    10. '১' → logprob: -19.875

Token 212: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.008129963040119e-06
    2. ' ' → logprob: -12.625003814697266
    3. ')' → logprob: -15.250003814697266
    4. '```' → logprob: -16.500003814697266
    5. '
' → logprob: -16.625003814697266
    6. '   ' → logprob: -16.875003814697266
    7. '

' → logprob: -18.062503814697266
    8. '{' → logprob: -18.375003814697266
    9. '2' → logprob: -18.437503814697266
    10. '১' → logprob: -18.500003814697266

Token 213: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01436529029160738
    2. ')
' → logprob: -4.764365196228027
    3. '))' → logprob: -5.264365196228027
    4. ' )' → logprob: -7.639365196228027
    5. '))
' → logprob: -10.014365196228027
    6. ' )
' → logprob: -10.514365196228027
    7. ' ))' → logprob: -12.889365196228027
    8. ')
' → logprob: -13.139365196228027
    9. ')))' → logprob: -13.889365196228027
    10. ')

' → logprob: -14.014365196228027

Token 214: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0026126401498913765
    2. 'digits' → logprob: -7.502612590789795
    3. ',' → logprob: -7.752612590789795
    4. '
' → logprob: -8.002613067626953
    5. 'num' → logprob: -8.377613067626953
    6. '       ' → logprob: -8.752613067626953
    7. '            
' → logprob: -8.752613067626953
    8. ' digits' → logprob: -9.002613067626953
    9. 'end' → logprob: -9.002613067626953
    10. 'digit' → logprob: -9.127613067626953

Token 215: ' digits' (ID: 37806)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.4379481077194214
    2. 'digits' (adapté à ' digits') → logprob: -2.062948226928711
    3. 'num' → logprob: -2.562948226928711
    4. 'self' → logprob: -2.687948226928711
    5. '           ' → logprob: -3.687948226928711
    6. 'end' → logprob: -3.937948226928711
    7. 'digit' → logprob: -3.937948226928711
    8. ' total' → logprob: -4.687948226928711
    9. 'bucket' → logprob: -5.687948226928711
    10. ' digits' → logprob: -6.312948226928711

Token 216: '_in' (ID: 2267)
  Prédit: '_count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.43164756894111633
    2. '_' → logprob: -1.806647539138794
    3. '_in' → logprob: -1.806647539138794
    4. '_length' → logprob: -4.556647777557373
    5. ' =' → logprob: -4.931647777557373
    6. '_span' → logprob: -6.681647777557373
    7. '=' → logprob: -7.556647777557373
    8. '_for' → logprob: -7.681647777557373
    9. '_total' → logprob: -7.931647777557373
    10. '   ' → logprob: -8.056647300720215

Token 217: '_bucket' (ID: 95435)
  Prédit: 'bucket'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bucket' → logprob: -0.177527517080307
    2. '_bucket' → logprob: -2.05252742767334
    3. 'block' → logprob: -4.30252742767334
    4. ' bucket' → logprob: -4.80252742767334
    5. 'this' → logprob: -5.80252742767334
    6. '=' → logprob: -6.17752742767334
    7. '_block' → logprob: -6.42752742767334
    8. 'chunk' → logprob: -7.05252742767334
    9. 'segment' → logprob: -7.05252742767334
    10. ' =' → logprob: -7.17752742767334

Token 218: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12692862749099731
    2. '=' → logprob: -2.1269285678863525
    3. '   ' → logprob: -14.751928329467773
    4. '    ' → logprob: -17.001928329467773
    5. ' ' → logprob: -17.126928329467773
    6. ')' → logprob: -17.501928329467773
    7. '           ' → logprob: -18.626928329467773
    8. '  ' → logprob: -19.501928329467773
    9. '       ' → logprob: -19.751928329467773
    10. '        ' → logprob: -19.751928329467773

Token 219: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.01349323894828558
    2. ' count' → logprob: -4.388493061065674
    3. 'digit' → logprob: -7.013493061065674
    4. ' digit' → logprob: -10.013493537902832
    5. '           ' → logprob: -11.138493537902832
    6. '   ' → logprob: -11.638493537902832
    7. 'digits' → logprob: -12.888493537902832
    8. '         ' → logprob: -13.013493537902832
    9. ' ' → logprob: -13.138493537902832
    10. '       ' → logprob: -13.263493537902832

Token 220: '_numbers' (ID: 76842)
  Prédit: '_numbers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_numbers' → logprob: -1.259079363080673e-05
    2. 'numbers' → logprob: -12.125012397766113
    3. '_' → logprob: -12.375012397766113
    4. '_positions' → logprob: -13.000012397766113
    5. '_digits' → logprob: -15.375012397766113
    6. 'Numbers' → logprob: -16.00001335144043
    7. '_number' → logprob: -16.62501335144043
    8. 's' → logprob: -17.00001335144043
    9. ' numbers' → logprob: -17.25001335144043
    10. 'umbers' → logprob: -17.37501335144043

Token 221: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.20141372084617615
    2. '*' → logprob: -1.7014137506484985
    3. ' ' → logprob: -15.951414108276367
    4. '*object' → logprob: -16.701414108276367
    5. '   ' → logprob: -16.951414108276367
    6. '           ' → logprob: -17.201414108276367
    7. '#' → logprob: -17.451414108276367
    8. ' ' → logprob: -17.451414108276367
    9. '**' → logprob: -17.951414108276367
    10. '```' → logprob: -18.201414108276367

Token 222: ' digit' (ID: 19181)
  Prédit: 'digit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digit' → logprob: -0.006716436706483364
    2. ' digit' → logprob: -5.006716251373291
    3. '_digit' → logprob: -14.63171672821045
    4. '-digit' → logprob: -15.00671672821045
    5. 'digits' → logprob: -15.75671672821045
    6. 'digital' → logprob: -16.006715774536133
    7. 'd' → logprob: -17.381715774536133
    8. '   ' → logprob: -17.881715774536133
    9. ' ' → logprob: -18.256715774536133
    10. '(d' → logprob: -18.506715774536133

Token 223: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -4.60414821645827e-06
    2. '_length' → logprob: -12.750004768371582
    3. 'len' → logprob: -13.375004768371582
    4. 'length' → logprob: -17.750003814697266
    5. '_LEN' → logprob: -18.500003814697266
    6. '_' → logprob: -19.250003814697266
    7. 'Len' → logprob: -20.125003814697266
    8. ')_' → logprob: -20.250003814697266
    9. '_l' → logprob: -20.375003814697266
    10. ' _' → logprob: -20.625003814697266

Token 224: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05008813366293907
    2. '           ' → logprob: -3.0500881671905518
    3. 'self' → logprob: -7.925087928771973
    4. '       ' → logprob: -8.050087928771973
    5. '
' → logprob: -8.425087928771973
    6. '            
' → logprob: -8.550087928771973
    7. ',' → logprob: -9.425087928771973
    8. '```' → logprob: -9.925087928771973
    9. 'start' → logprob: -10.050087928771973
    10. '  
' → logprob: -10.050087928771973

Token 225: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.039816632866859436
    2. '
' → logprob: -3.2898166179656982
    3. ',' → logprob: -7.664816856384277
    4. '       ' → logprob: -7.789816856384277
    5. 'self' → logprob: -8.039816856384277
    6. '   ' → logprob: -9.039816856384277
    7. ' self' → logprob: -9.289816856384277
    8. '            
' → logprob: -9.289816856384277
    9. ' if' → logprob: -9.664816856384277
    10. '```' → logprob: -10.289816856384277

Token 226: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.49185043573379517
    2. ' self' → logprob: -0.9918504357337952
    3. '           ' → logprob: -4.11685037612915
    4. 'if' → logprob: -7.24185037612915
    5. ' if' → logprob: -7.49185037612915
    6. 'bucket' → logprob: -11.366850852966309
    7. '   ' → logprob: -11.741850852966309
    8. 'end' → logprob: -11.866850852966309
    9. ' bucket' → logprob: -12.366850852966309
    10. ' ' → logprob: -12.866850852966309

Token 227: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -1.1517960956552997e-05
    2. ' .' → logprob: -11.875011444091797
    3. '.' → logprob: -13.375011444091797
    4. ']._' → logprob: -14.000011444091797
    5. ')._' → logprob: -14.125011444091797
    6. '   ' → logprob: -15.125011444091797
    7. 'class' → logprob: -15.500011444091797
    8. '

' → logprob: -15.625011444091797
    9. '.\' → logprob: -15.750011444091797
    10. '
' → logprob: -16.000011444091797

Token 228: 'digit' (ID: 78327)
  Prédit: 'digit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digit' → logprob: -2.4153549020411447e-05
    2. '_digit' → logprob: -10.75002384185791
    3. ' digit' → logprob: -14.25002384185791
    4. '   ' → logprob: -14.50002384185791
    5. '
' → logprob: -14.87502384185791
    6. 'start' → logprob: -15.25002384185791
    7. 'digital' → logprob: -15.25002384185791
    8. 'dig' → logprob: -16.375024795532227
    9. 'bucket' → logprob: -16.625024795532227
    10. ' ' → logprob: -16.875024795532227

Token 229: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -6.704273118884885e-07
    2. '_lengths' → logprob: -15.125000953674316
    3. 'length' → logprob: -15.625000953674316
    4. '_len' → logprob: -16.5
    5. '       ' → logprob: -17.75
    6. '_b' → logprob: -18.375
    7. '_start' → logprob: -18.5
    8. '_l' → logprob: -18.5
    9. '   ' → logprob: -19.25
    10. ' length' → logprob: -19.375

Token 230: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -5.512236498361744e-07
    2. '_bucket' → logprob: -15.000000953674316
    3. '_lengths' → logprob: -16.5
    4. 'b' → logprob: -17.375
    5. '_length' → logprob: -17.625
    6. ' buckets' → logprob: -18.25
    7. '_batches' → logprob: -19.0
    8. 'Buckets' → logprob: -19.25
    9. '       ' → logprob: -19.625
    10. '_buffers' → logprob: -19.75

Token 231: 'uckets' (ID: 73451)
  Prédit: 'uckets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uckets' → logprob: -1.5690089639974758e-05
    2. 'u' → logprob: -12.375015258789062
    3. 'ockets' → logprob: -12.875015258789062
    4. 'ucket' → logprob: -12.875015258789062
    5. 'uck' → logprob: -12.875015258789062
    6. 'ackets' → logprob: -13.125015258789062
    7. 'ucks' → logprob: -14.375015258789062
    8. 'uc' → logprob: -15.250015258789062
    9. 'uckles' → logprob: -15.500015258789062
    10. 'uk' → logprob: -16.125015258789062

Token 232: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -7.612634362885728e-05
    2. '.' → logprob: -9.500076293945312
    3. '.app' → logprob: -14.500076293945312
    4. 'append' → logprob: -14.875076293945312
    5. '.ap' → logprob: -15.250076293945312
    6. ' .' → logprob: -16.000076293945312
    7. '.Append' → logprob: -18.250076293945312
    8. '.extend' → logprob: -18.875076293945312
    9. '.push' → logprob: -20.375076293945312
    10. ' append' → logprob: -21.250076293945312

Token 233: '({
' (ID: 3961)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '((' → logprob: -0.008623912930488586
    2. '(' → logprob: -4.758624076843262
    3. '(
' → logprob: -12.133624076843262
    4. '(start' → logprob: -13.008624076843262
    5. '   ' → logprob: -13.383624076843262
    6. '(((' → logprob: -17.258623123168945
    7. '(

' → logprob: -17.758623123168945
    8. ' (' → logprob: -18.508623123168945
    9. ' ' → logprob: -18.508623123168945
    10. '  ' → logprob: -18.633623123168945

Token 234: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.644436776638031
    2. ''' → logprob: -1.1444368362426758
    3. ''t' → logprob: -3.019436836242676
    4. ''s' → logprob: -3.019436836242676
    5. '"' → logprob: -3.894436836242676
    6. '           ' → logprob: -4.269436836242676
    7. ''type' → logprob: -4.394436836242676
    8. ' '' → logprob: -5.269436836242676
    9. ''title' → logprob: -5.394436836242676
    10. ''end' → logprob: -8.019436836242676

Token 235: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' (adapté à ' '') → logprob: -0.31886357069015503
    2. '"' → logprob: -1.3188636302947998
    3. ' '' → logprob: -6.193863391876221
    4. '                   ' → logprob: -6.693863391876221
    5. '               ' → logprob: -7.068863391876221
    6. ''s' → logprob: -7.193863391876221
    7. '           ' → logprob: -8.193863868713379
    8. '   ' → logprob: -8.693863868713379
    9. ''type' → logprob: -8.943863868713379
    10. ' "' → logprob: -10.443863868713379

Token 236: 'start' (ID: 5236)
  Prédit: 'start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.00020735491125378758
    2. ''' → logprob: -8.87520694732666
    3. ' start' → logprob: -10.00020694732666
    4. ''s' → logprob: -10.87520694732666
    5. '   ' → logprob: -14.00020694732666
    6. ' ' → logprob: -14.37520694732666
    7. ' '' → logprob: -14.62520694732666
    8. '  ' → logprob: -15.50020694732666
    9. ''end' → logprob: -15.87520694732666
    10. 'range' → logprob: -16.000207901000977

Token 237: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.005297792609781027
    2. '_position' → logprob: -5.255297660827637
    3. '_positions' → logprob: -10.630297660827637
    4. '_' → logprob: -11.005297660827637
    5. ':' → logprob: -11.880297660827637
    6. '```' → logprob: -12.755297660827637
    7. ''_' → logprob: -12.880297660827637
    8. 'pos' → logprob: -13.130297660827637
    9. 'Pos' → logprob: -13.880297660827637
    10. '}_' → logprob: -14.130297660827637

Token 238: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.40906912088394165
    2. ':' → logprob: -1.1590690612792969
    3. ':start' → logprob: -4.034069061279297
    4. 'start' → logprob: -6.159069061279297
    5. '=start' → logprob: -6.784069061279297
    6. ''' → logprob: -8.034069061279297
    7. '<|end|>' → logprob: -8.909069061279297
    8. ' :' → logprob: -9.284069061279297
    9. ':end' → logprob: -9.409069061279297
    10. '":' → logprob: -9.909069061279297

Token 239: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.06197262182831764
    2. ' start' → logprob: -2.8119726181030273
    3. '               ' → logprob: -12.436972618103027
    4. '                   ' → logprob: -14.936972618103027
    5. '                ' → logprob: -15.561972618103027
    6. '=start' → logprob: -15.936972618103027
    7. '           ' → logprob: -16.311973571777344
    8. '[start' → logprob: -16.686973571777344
    9. '   ' → logprob: -16.811973571777344
    10. ':start' → logprob: -16.936973571777344

Token 240: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.0001005630983854644
    2. ':' → logprob: -10.375100135803223
    3. '           ' → logprob: -11.000100135803223
    4. 'pos' → logprob: -11.125100135803223
    5. 'Pos' → logprob: -11.500100135803223
    6. '       ' → logprob: -11.750100135803223
    7. '```' → logprob: -12.250100135803223
    8. '               ' → logprob: -13.000100135803223
    9. '                   ' → logprob: -13.500100135803223
    10. '         ' → logprob: -13.500100135803223

Token 241: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009267069399356842
    2. ',
' → logprob: -7.250926494598389
    3. '               ' → logprob: -8.750926971435547
    4. ' ,' → logprob: -10.625926971435547
    5. '           ' → logprob: -11.125926971435547
    6. ',d' → logprob: -11.375926971435547
    7. ',
' → logprob: -12.500926971435547
    8. ','' → logprob: -12.875926971435547
    9. ',

' → logprob: -14.125926971435547
    10. '                   ' → logprob: -15.500926971435547

Token 242: '               ' (ID: 506)
  Prédit: ''d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''d' → logprob: -0.16799123585224152
    2. '               ' → logprob: -1.917991280555725
    3. ' '' → logprob: -4.9179911613464355
    4. '              ' → logprob: -8.542991638183594
    5. '           ' → logprob: -8.792991638183594
    6. '   ' → logprob: -11.042991638183594
    7. ''' → logprob: -11.292991638183594
    8. ''t' → logprob: -11.417991638183594
    9. '                ' → logprob: -11.792991638183594
    10. '       ' → logprob: -12.042991638183594

Token 243: ' '' (ID: 461)
  Prédit: ''d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''d' → logprob: -0.005601903423666954
    2. ' '' → logprob: -5.25560188293457
    3. '               ' → logprob: -8.13060188293457
    4. '              ' → logprob: -10.38060188293457
    5. '                ' → logprob: -11.75560188293457
    6. '   ' → logprob: -12.00560188293457
    7. '           ' → logprob: -12.25560188293457
    8. 'digit' → logprob: -12.38060188293457
    9. ''s' → logprob: -13.13060188293457
    10. '  ' → logprob: -13.13060188293457

Token 244: 'digit' (ID: 78327)
  Prédit: 'digit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digit' → logprob: -0.012117784470319748
    2. ''d' → logprob: -4.512117862701416
    3. ''' → logprob: -7.262117862701416
    4. 'length' → logprob: -8.762117385864258
    5. ' digit' → logprob: -8.762117385864258
    6. 'digits' → logprob: -10.512117385864258
    7. '   ' → logprob: -12.387117385864258
    8. ' '' → logprob: -12.512117385864258
    9. ''end' → logprob: -12.762117385864258
    10. ' ' → logprob: -12.887117385864258

Token 245: '_len' (ID: 13683)
  Prédit: '_length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.008996477350592613
    2. '_len' → logprob: -4.758996486663818
    3. 's' → logprob: -8.75899600982666
    4. '_in' → logprob: -9.50899600982666
    5. '_count' → logprob: -10.13399600982666
    6. 'length' → logprob: -10.25899600982666
    7. '_at' → logprob: -10.50899600982666
    8. 'Length' → logprob: -11.50899600982666
    9. '_lengths' → logprob: -11.88399600982666
    10. 'len' → logprob: -12.13399600982666

Token 246: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.00019650737522169948
    2. ''' → logprob: -8.87519645690918
    3. ':' → logprob: -10.87519645690918
    4. '           ' → logprob: -11.25019645690918
    5. ',' → logprob: -11.87519645690918
    6. '       ' → logprob: -12.25019645690918
    7. '',' → logprob: -12.62519645690918
    8. ' ':' → logprob: -12.75019645690918
    9. '}:' → logprob: -13.87519645690918
    10. '               ' → logprob: -14.12519645690918

Token 247: ' digit' (ID: 19181)
  Prédit: 'digit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digit' → logprob: -0.20141440629959106
    2. ' digit' → logprob: -1.7014143466949463
    3. '           ' → logprob: -15.201414108276367
    4. '   ' → logprob: -15.701414108276367
    5. ' ' → logprob: -16.076414108276367
    6. '-digit' → logprob: -16.076414108276367
    7. 'd' → logprob: -16.076414108276367
    8. '_digit' → logprob: -16.326414108276367
    9. 'Digit' → logprob: -17.076414108276367
    10. '               ' → logprob: -17.201414108276367

Token 248: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -1.5332478142227046e-05
    2. 'len' → logprob: -11.250015258789062
    3. '_length' → logprob: -13.375015258789062
    4. 'Len' → logprob: -15.750015258789062
    5. 'ent' → logprob: -16.125015258789062
    6. 'en' → logprob: -16.250015258789062
    7. '_LEN' → logprob: -16.500015258789062
    8. 'ength' → logprob: -16.750015258789062
    9. ' len' → logprob: -17.125015258789062
    10. '_l' → logprob: -17.500015258789062

Token 249: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002320937579497695
    2. ',
' → logprob: -6.127320766448975
    3. '               ' → logprob: -9.002321243286133
    4. '           ' → logprob: -12.127321243286133
    5. ',
' → logprob: -12.752321243286133
    6. ' ,' → logprob: -13.252321243286133
    7. ','' → logprob: -13.502321243286133
    8. ',

' → logprob: -14.377321243286133
    9. '',' → logprob: -15.502321243286133
    10. ',\
' → logprob: -15.752321243286133

Token 250: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.526300311088562
    2. ''' → logprob: -1.026300311088562
    3. ' '' → logprob: -3.0263004302978516
    4. '           ' → logprob: -7.026300430297852
    5. ''d' → logprob: -7.026300430297852
    6. ''t' → logprob: -9.401300430297852
    7. ''end' → logprob: -9.401300430297852
    8. '              ' → logprob: -9.526300430297852
    9. ''description' → logprob: -9.776300430297852
    10. '   ' → logprob: -9.776300430297852

Token 251: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' (adapté à ' '') → logprob: -0.006291487254202366
    2. ' '' → logprob: -5.381291389465332
    3. ''d' → logprob: -6.756291389465332
    4. '               ' → logprob: -7.756291389465332
    5. '           ' → logprob: -10.381291389465332
    6. '   ' → logprob: -11.256291389465332
    7. ''t' → logprob: -11.381291389465332
    8. ''end' → logprob: -11.631291389465332
    9. '       ' → logprob: -12.631291389465332
    10. ' ' → logprob: -13.381291389465332

Token 252: 'count' (ID: 5420)
  Prédit: 'count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.0033148385118693113
    2. 'digits' → logprob: -5.878314971923828
    3. 'numbers' → logprob: -8.128314971923828
    4. 'num' → logprob: -9.878314971923828
    5. 'total' → logprob: -10.128314971923828
    6. ' count' → logprob: -10.378314971923828
    7. 'start' → logprob: -10.753314971923828
    8. 'digit' → logprob: -10.878314971923828
    9. 'end' → logprob: -11.378314971923828
    10. 'number' → logprob: -11.878314971923828

Token 253: '_numbers' (ID: 76842)
  Prédit: '_numbers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_numbers' → logprob: -0.04018234834074974
    2. '':' → logprob: -3.91518235206604
    3. ':' → logprob: -4.040182113647461
    4. ''' → logprob: -7.540182113647461
    5. '<|end|>' → logprob: -7.540182113647461
    6. '_n' → logprob: -8.415182113647461
    7. '_' → logprob: -9.415182113647461
    8. '```' → logprob: -9.540182113647461
    9. '_number' → logprob: -10.040182113647461
    10. ' ' → logprob: -10.540182113647461

Token 254: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -6.194110756041482e-05
    2. ''' → logprob: -10.000061988830566
    3. ':' → logprob: -11.125061988830566
    4. '":' → logprob: -13.875061988830566
    5. ' ':' → logprob: -15.375061988830566
    6. 'count' → logprob: -15.625061988830566
    7. '<|end|>' → logprob: -16.87506103515625
    8. '_count' → logprob: -17.12506103515625
    9. '=count' → logprob: -17.37506103515625
    10. ''}' → logprob: -17.37506103515625

Token 255: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.20141547918319702
    2. ' count' → logprob: -1.7014155387878418
    3. '9' → logprob: -13.701415061950684
    4. '           ' → logprob: -14.951415061950684
    5. '               ' → logprob: -16.076416015625
    6. ' ' → logprob: -16.326416015625
    7. '   ' → logprob: -16.451416015625
    8. '	count' → logprob: -16.451416015625
    9. '(count' → logprob: -16.576416015625
    10. '$count' → logprob: -16.701416015625

Token 256: '_numbers' (ID: 76842)
  Prédit: '_numbers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_numbers' → logprob: -0.0003347506280988455
    2. 'umbers' → logprob: -8.125334739685059
    3. '_' → logprob: -10.875334739685059
    4. '   ' → logprob: -12.625334739685059
    5. 'numbers' → logprob: -12.625334739685059
    6. '           ' → logprob: -12.875334739685059
    7. '               ' → logprob: -13.000334739685059
    8. 'er' → logprob: -13.500334739685059
    9. 'ed' → logprob: -13.625334739685059
    10. '```' → logprob: -13.750334739685059

Token 257: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3895125985145569
    2. ',
' → logprob: -1.139512538909912
    3. '           ' → logprob: -6.514512538909912
    4. '               ' → logprob: -7.139512538909912
    5. ',
' → logprob: -9.01451301574707
    6. ','' → logprob: -9.01451301574707
    7. '})' → logprob: -9.51451301574707
    8. ',

' → logprob: -10.38951301574707
    9. '       ' → logprob: -12.51451301574707
    10. ' ,' → logprob: -12.63951301574707

Token 258: '               ' (ID: 506)
  Prédit: ''d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''d' → logprob: -0.6688185334205627
    2. '               ' → logprob: -0.9188185334205627
    3. ''' → logprob: -2.793818473815918
    4. '           ' → logprob: -3.793818473815918
    5. ' '' → logprob: -6.543818473815918
    6. ''description' → logprob: -6.793818473815918
    7. ''t' → logprob: -7.168818473815918
    8. ''end' → logprob: -7.793818473815918
    9. ''s' → logprob: -8.168818473815918
    10. '       ' → logprob: -8.418818473815918

Token 259: ' '' (ID: 461)
  Prédit: ''d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''d' → logprob: -0.10824964195489883
    2. ''' (adapté à ' '') → logprob: -2.8582496643066406
    3. '})
' → logprob: -3.7332496643066406
    4. '})' → logprob: -4.608249664306641
    5. '           ' → logprob: -5.608249664306641
    6. ' '' → logprob: -5.983249664306641
    7. ''t' → logprob: -6.483249664306641
    8. '       ' → logprob: -7.108249664306641
    9. '   ' → logprob: -7.233249664306641
    10. '               ' → logprob: -7.358249664306641

Token 260: 'digits' (ID: 135574)
  Prédit: 'digits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digits' → logprob: -0.054289672523736954
    2. 'end' → logprob: -3.3042895793914795
    3. 'start' → logprob: -4.304289817810059
    4. 'total' → logprob: -6.679289817810059
    5. ' digits' → logprob: -8.304289817810059
    6. 'c' → logprob: -8.429289817810059
    7. 'digit' → logprob: -8.429289817810059
    8. 'acc' → logprob: -8.679289817810059
    9. 'cum' → logprob: -9.179289817810059
    10. '_digits' → logprob: -10.179289817810059

Token 261: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -0.007788678165525198
    2. '_' → logprob: -5.50778865814209
    3. '_end' → logprob: -6.38278865814209
    4. '':' → logprob: -7.38278865814209
    5. '_count' → logprob: -8.00778865814209
    6. '_acc' → logprob: -8.63278865814209
    7. ':' → logprob: -8.63278865814209
    8. '_c' → logprob: -9.13278865814209
    9. '_start' → logprob: -9.25778865814209
    10. '_remaining' → logprob: -9.25778865814209

Token 262: '_bucket' (ID: 95435)
  Prédit: '_bucket'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bucket' → logprob: -0.0389690101146698
    2. 'bucket' → logprob: -3.288969039916992
    3. ' bucket' → logprob: -7.413969039916992
    4. '_' → logprob: -8.288969039916992
    5. '_b' → logprob: -10.413969039916992
    6. 's' → logprob: -11.913969039916992
    7. '```' → logprob: -12.288969039916992
    8. ' _' → logprob: -12.413969039916992
    9. '_BUCKET' → logprob: -12.538969039916992
    10. 'b' → logprob: -12.788969039916992

Token 263: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -1.8789383830153383e-05
    2. ''' → logprob: -11.000019073486328
    3. ':' → logprob: -13.375019073486328
    4. '":' → logprob: -15.250019073486328
    5. ' ':' → logprob: -15.750019073486328
    6. '   ' → logprob: -18.250019073486328
    7. '       ' → logprob: -18.750019073486328
    8. '=' → logprob: -19.125019073486328
    9. ''}' → logprob: -19.250019073486328
    10. '’:' → logprob: -19.250019073486328

Token 264: ' digits' (ID: 37806)
  Prédit: 'digits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digits' → logprob: -0.20142103731632233
    2. ' digits' → logprob: -1.7014210224151611
    3. '           ' → logprob: -12.951420783996582
    4. '                   ' → logprob: -13.576420783996582
    5. '               ' → logprob: -13.701420783996582
    6. 'digit' → logprob: -14.076420783996582
    7. '   ' → logprob: -14.951420783996582
    8. '_digits' → logprob: -15.076420783996582
    9. ' ' → logprob: -15.201420783996582
    10. 'Digits' → logprob: -15.326420783996582

Token 265: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -0.0003623985394369811
    2. 's' → logprob: -8.375362396240234
    3. 'n' → logprob: -9.125362396240234
    4. 'in' → logprob: -11.875362396240234
    5. 'ts' → logprob: -12.375362396240234
    6. 'In' → logprob: -13.375362396240234
    7. '_' → logprob: -13.500362396240234
    8. 'et' → logprob: -14.375362396240234
    9. '               ' → logprob: -14.500362396240234
    10. '
' → logprob: -14.625362396240234

Token 266: '_bucket' (ID: 95435)
  Prédit: '_bucket'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bucket' → logprob: -0.5266327261924744
    2. 'bucket' → logprob: -0.9016327261924744
    3. 'ucket' → logprob: -5.776632785797119
    4. ' bucket' → logprob: -9.151632308959961
    5. '```' → logprob: -10.276632308959961
    6. 'in' → logprob: -10.776632308959961
    7. '_b' → logprob: -10.776632308959961
    8. '               ' → logprob: -10.776632308959961
    9. 'buck' → logprob: -10.901632308959961
    10. 'b' → logprob: -11.026632308959961

Token 267: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.018570702522993088
    2. '})
' → logprob: -4.143570899963379
    3. '})' → logprob: -6.393570899963379
    4. ',
' → logprob: -8.143570899963379
    5. ',' → logprob: -8.143570899963379
    6. '       ' → logprob: -8.393570899963379
    7. '               ' → logprob: -10.768570899963379
    8. '
' → logprob: -11.768570899963379
    9. ' })
' → logprob: -11.768570899963379
    10. '          ' → logprob: -12.268570899963379

Token 268: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004728449042886496
    2. '})' → logprob: -6.129728317260742
    3. '})
' → logprob: -6.254728317260742
    4. '       ' → logprob: -8.379728317260742
    5. ',' → logprob: -8.754728317260742
    6. ',
' → logprob: -9.129728317260742
    7. '               ' → logprob: -9.629728317260742
    8. ')
' → logprob: -10.879728317260742
    9. ')' → logprob: -11.504728317260742
    10. '          ' → logprob: -11.754728317260742

Token 269: ' })
' (ID: 4759)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.18202339112758636
    2. '})
' (adapté à ' })
') → logprob: -2.057023286819458
    3. '})' → logprob: -3.307023286819458
    4. '       ' → logprob: -6.807023525238037
    5. ')
' → logprob: -7.682023525238037
    6. ')' → logprob: -8.932023048400879
    7. ' })
' → logprob: -9.557023048400879
    8. '               ' → logprob: -10.057023048400879
    9. ',' → logprob: -10.307023048400879
    10. ' })' → logprob: -10.307023048400879

Token 270: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0003488129877950996
    2. 'start' → logprob: -8.125349044799805
    3. '       ' → logprob: -10.750349044799805
    4. '
' → logprob: -11.250349044799805
    5. ' start' → logprob: -12.500349044799805
    6. '   ' → logprob: -12.750349044799805
    7. '[start' → logprob: -13.125349044799805
    8. '```' → logprob: -13.250349044799805
    9. '<|end|>' → logprob: -13.500349044799805
    10. ',' → logprob: -13.625349044799805

Token 271: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' (adapté à ' start') → logprob: -0.597852349281311
    2. '           ' → logprob: -0.847852349281311
    3. ' start' → logprob: -3.8478522300720215
    4. '       ' → logprob: -8.59785270690918
    5. '   ' → logprob: -8.72285270690918
    6. ' ' → logprob: -14.47285270690918
    7. '  ' → logprob: -14.72285270690918
    8. '
' → logprob: -15.34785270690918
    9. '          ' → logprob: -16.34785270690918
    10. '               ' → logprob: -16.34785270690918

Token 272: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -8.2994620242971e-06
    2. 'pos' → logprob: -11.750008583068848
    3. 'Pos' → logprob: -16.37500762939453
    4. '=' → logprob: -16.37500762939453
    5. '+=' → logprob: -16.87500762939453
    6. '=_' → logprob: -16.87500762939453
    7. '\' → logprob: -18.37500762939453
    8. '+' → logprob: -18.37500762939453
    9. '_' → logprob: -18.87500762939453
    10. '_POS' → logprob: -19.00000762939453

Token 273: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0002489423204679042
    2. ' +=' → logprob: -8.500248908996582
    3. '=' → logprob: -10.000248908996582
    4. '+' → logprob: -16.8752498626709
    5. '+=(' → logprob: -17.7502498626709
    6. '*=' → logprob: -19.1252498626709
    7. ']+=' → logprob: -19.1252498626709
    8. '+='' → logprob: -19.7502498626709
    9. '+="' → logprob: -20.1252498626709
    10. '```' → logprob: -22.0002498626709

Token 274: ' digits' (ID: 37806)
  Prédit: 'digits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digits' → logprob: -0.0005530327325686812
    2. ' digits' → logprob: -7.500553131103516
    3. 'digit' → logprob: -17.875553131103516
    4. '           ' → logprob: -18.000553131103516
    5. '_digits' → logprob: -18.125553131103516
    6. 'Digits' → logprob: -19.625553131103516
    7. '```' → logprob: -19.750553131103516
    8. '                   ' → logprob: -20.375553131103516
    9. '               ' → logprob: -20.375553131103516
    10. 'd' → logprob: -20.500553131103516

Token 275: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -5.796184723294573e-06
    2. 'in' → logprob: -12.500005722045898
    3. 'In' → logprob: -13.750005722045898
    4. 's' → logprob: -14.875005722045898
    5. 'n' → logprob: -15.500005722045898
    6. '_' → logprob: -15.625005722045898
    7. '_i' → logprob: -16.7500057220459
    8. '   ' → logprob: -17.8750057220459
    9. 'd' → logprob: -18.0000057220459
    10. '```' → logprob: -18.2500057220459

Token 276: '_bucket' (ID: 95435)
  Prédit: '_bucket'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bucket' → logprob: -0.012623949907720089
    2. 'bucket' → logprob: -4.3876237869262695
    3. 'ucket' → logprob: -9.63762378692627
    4. '_b' → logprob: -11.01262378692627
    5. 'buck' → logprob: -11.88762378692627
    6. ' bucket' → logprob: -12.38762378692627
    7. 'b' → logprob: -12.51262378692627
    8. '_' → logprob: -12.63762378692627
    9. '(bucket' → logprob: -13.26262378692627
    10. 'Bucket' → logprob: -13.26262378692627

Token 277: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9131491780281067
    2. '<|end|>' → logprob: -0.9131491780281067
    3. '   ' → logprob: -2.288149118423462
    4. ' def' → logprob: -3.288149118423462
    5. '
' → logprob: -3.413149118423462
    6. '```' → logprob: -4.163149356842041
    7. '<|end|>' → logprob: -5.538149356842041
    8. ' ' → logprob: -6.288149356842041
    9. '       ' → logprob: -6.538149356842041
    10. '    
' → logprob: -7.413149356842041

Token 278: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03766936436295509
    2. 'def' → logprob: -3.6626694202423096
    3. '<|end|>' → logprob: -5.0376691818237305
    4. ' def' → logprob: -5.7876691818237305
    5. '```' → logprob: -6.6626691818237305
    6. '<|end|>' → logprob: -8.53766918182373
    7. '
' → logprob: -9.03766918182373
    8. ')' → logprob: -10.16266918182373
    9. ' ' → logprob: -10.53766918182373
    10. '    
' → logprob: -10.66266918182373

Token 279: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.004175152629613876
    2. ' def' → logprob: -6.004175186157227
    3. '   ' → logprob: -6.379175186157227
    4. '
' → logprob: -13.629175186157227
    5. '```' → logprob: -15.879175186157227
    6. ' ' → logprob: -16.379175186157227
    7. '    
' → logprob: -17.004175186157227
    8. '<|end|>' → logprob: -17.129175186157227
    9. '	def' → logprob: -17.254175186157227
    10. ')' → logprob: -17.504175186157227

Token 280: ' digit' (ID: 19181)
  Prédit: 'digit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digit' → logprob: -0.010545210912823677
    2. ' digit' → logprob: -4.760545253753662
    3. '_digit' → logprob: -6.260545253753662
    4. 'def' → logprob: -12.635544776916504
    5. '   ' → logprob: -12.885544776916504
    6. 'digital' → logprob: -13.010544776916504
    7. 'dig' → logprob: -13.385544776916504
    8. '-digit' → logprob: -13.510544776916504
    9. ' ' → logprob: -13.635544776916504
    10. '_d' → logprob: -13.635544776916504

Token 281: '_at' (ID: 8254)
  Prédit: '_at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_at' → logprob: -1.9361264946837764e-07
    2. '_' → logprob: -16.5
    3. '_a' → logprob: -18.0
    4. ' _' → logprob: -19.375
    5. '_to' → logprob: -20.875
    6. '##_' → logprob: -21.375
    7. '_an' → logprob: -21.375
    8. ' at' → logprob: -21.5
    9. '_AT' → logprob: -21.625
    10. ')_' → logprob: -21.875

Token 282: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.008638089522719383
    2. '(' → logprob: -4.75863790512085
    3. 'self' → logprob: -11.008638381958008
    4. ' (' → logprob: -12.758638381958008
    5. '(
' → logprob: -13.133638381958008
    6. '   ' → logprob: -13.758638381958008
    7. '       ' → logprob: -14.633638381958008
    8. ' ' → logprob: -15.133638381958008
    9. '(s' → logprob: -16.008638381958008
    10. 'def' → logprob: -16.258638381958008

Token 283: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001334559783572331
    2. 'self' → logprob: -9.375133514404297
    3. ' ,' → logprob: -10.000133514404297
    4. ',self' → logprob: -13.375133514404297
    5. ' self' → logprob: -14.625133514404297
    6. '(self' → logprob: -14.875133514404297
    7. ',
' → logprob: -14.875133514404297
    8. ')' → logprob: -15.250133514404297
    9. '       ' → logprob: -16.000133514404297
    10. '   ' → logprob: -16.500133514404297

Token 284: ' position' (ID: 4010)
  Prédit: ' position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' position' → logprob: -0.46130406856536865
    2. 'position' → logprob: -1.2113040685653687
    3. ' self' → logprob: -3.211304187774658
    4. 'self' → logprob: -3.461304187774658
    5. '   ' → logprob: -10.9613037109375
    6. '       ' → logprob: -11.3363037109375
    7. 'pos' → logprob: -12.2113037109375
    8. ' ' → logprob: -13.7113037109375
    9. ' pos' → logprob: -13.8363037109375
    10. '    ' → logprob: -14.4613037109375

Token 285: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.054748889058828354
    2. ':' → logprob: -3.429748773574829
    3. '):
' → logprob: -4.054749011993408
    4. ' ):' → logprob: -6.429749011993408
    5. '   ' → logprob: -7.179749011993408
    6. ')' → logprob: -7.554749011993408
    7. '       ' → logprob: -8.30474853515625
    8. ' :' → logprob: -9.05474853515625
    9. '=' → logprob: -9.92974853515625
    10. '    ' → logprob: -10.42974853515625

Token 286: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.38880032300949097
    2. 'int' → logprob: -1.1388003826141357
    3. ' self' → logprob: -6.888800144195557
    4. ')' → logprob: -7.638800144195557
    5. 'self' → logprob: -7.888800144195557
    6. ' )' → logprob: -11.013800621032715
    7. ' ' → logprob: -11.513800621032715
    8. ':int' → logprob: -12.388800621032715
    9. '   ' → logprob: -12.513800621032715
    10. '<int' → logprob: -12.638800621032715

Token 287: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3870735764503479
    2. '):' → logprob: -1.1370735168457031
    3. '):
' → logprob: -9.012073516845703
    4. ':' → logprob: -10.012073516845703
    5. ')->' → logprob: -11.012073516845703
    6. '   ' → logprob: -11.387073516845703
    7. '       ' → logprob: -12.387073516845703
    8. ' ):' → logprob: -13.262073516845703
    9. ' )' → logprob: -13.762073516845703
    10. '):
' → logprob: -14.137073516845703

Token 288: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005008471780456603
    2. '):' → logprob: -8.375500679016113
    3. ':
' → logprob: -8.500500679016113
    4. ' :' → logprob: -10.125500679016113
    5. '():' → logprob: -11.375500679016113
    6. ' ->' → logprob: -12.375500679016113
    7. '       ' → logprob: -12.500500679016113
    8. '):
' → logprob: -13.000500679016113
    9. '->' → logprob: -13.625500679016113
    10. '>:' → logprob: -13.875500679016113

Token 289: ' str' (ID: 989)
  Prédit: ' str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.3919219374656677
    2. 'str' → logprob: -1.1419219970703125
    3. 'int' → logprob: -5.3919219970703125
    4. ' int' → logprob: -7.6419219970703125
    5. '[str' → logprob: -13.266921997070312
    6. '(str' → logprob: -13.766921997070312
    7. ' '' → logprob: -14.516921997070312
    8. ''' → logprob: -14.641921997070312
    9. ')' → logprob: -15.016921997070312
    10. '   ' → logprob: -15.641921997070312

Token 290: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007642117794603109
    2. '       ' → logprob: -5.0076422691345215
    3. ':
' → logprob: -7.7576422691345215
    4. '):' → logprob: -7.8826422691345215
    5. '():' → logprob: -9.632641792297363
    6. '   ' → logprob: -10.632641792297363
    7. '(self' → logprob: -11.757641792297363
    8. ' :' → logprob: -12.007641792297363
    9. ',' → logprob: -12.632641792297363
    10. ']:' → logprob: -13.132641792297363

Token 291: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -2.7372048862162046e-05
    2. ' for' → logprob: -11.625027656555176
    3. ' if' → logprob: -12.375027656555176
    4. '   ' → logprob: -12.750027656555176
    5. 'for' → logprob: -13.000027656555176
    6. '#' → logprob: -13.375027656555176
    7. '        
' → logprob: -13.750027656555176
    8. ' position' → logprob: -13.875027656555176
    9. 'if' → logprob: -14.000027656555176
    10. 'position' → logprob: -14.000027656555176

Token 292: ' bucket' (ID: 28257)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.47572189569473267
    2. '#' → logprob: -1.850721836090088
    3. ' for' → logprob: -2.225721836090088
    4. '       ' → logprob: -3.100721836090088
    5. 'if' → logprob: -3.100721836090088
    6. ' if' → logprob: -4.725721836090088
    7. ' #' → logprob: -4.725721836090088
    8. 'pos' → logprob: -5.600721836090088
    9. 'position' → logprob: -6.600721836090088
    10. 'import' → logprob: -8.975722312927246

Token 293: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.016529995948076248
    2. '=' → logprob: -4.2665300369262695
    3. '_index' → logprob: -6.3915300369262695
    4. '_idx' → logprob: -7.5165300369262695
    5. 's' → logprob: -9.51653003692627
    6. '_' → logprob: -10.26653003692627
    7. '_found' → logprob: -11.64153003692627
    8. 'index' → logprob: -12.51653003692627
    9. '=None' → logprob: -12.64153003692627
    10. ')' → logprob: -12.64153003692627

Token 294: ' self' (ID: 1051)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.4756110608577728
    2. 'next' → logprob: -0.9756110906600952
    3. ' next' → logprob: -6.725611209869385
    4. ' None' → logprob: -8.100610733032227
    5. 'self' → logprob: -10.600610733032227
    6. 'none' → logprob: -12.475610733032227
    7. 'min' → logprob: -14.725610733032227
    8. '   ' → logprob: -14.975610733032227
    9. 'Next' → logprob: -15.475610733032227
    10. '[next' → logprob: -16.725610733032227

Token 295: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.04577753320336342
    2. '   ' → logprob: -3.9207775592803955
    3. 'def' → logprob: -4.670777320861816
    4. '       ' → logprob: -5.170777320861816
    5. ' =' → logprob: -6.170777320861816
    6. 'for' → logprob: -6.420777320861816
    7. '_next' → logprob: -6.545777320861816
    8. '_digit' → logprob: -6.920777320861816
    9. 'class' → logprob: -8.045777320861816
    10. '[' → logprob: -8.045777320861816

Token 296: 'find' (ID: 6555)
  Prédit: 'find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.09802056849002838
    2. 'digit' → logprob: -2.598020553588867
    3. 'select' → logprob: -5.098020553588867
    4. 'loc' → logprob: -5.223020553588867
    5. 'get' → logprob: -5.723020553588867
    6. 'binary' → logprob: -5.973020553588867
    7. 'next' → logprob: -7.473020553588867
    8. 'choose' → logprob: -7.848020553588867
    9. '_find' → logprob: -8.223020553588867
    10. '_digit' → logprob: -9.098020553588867

Token 297: '_bucket' (ID: 95435)
  Prédit: '_bucket'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bucket' → logprob: -0.07049550861120224
    2. '_' → logprob: -2.69549560546875
    3. 'bucket' → logprob: -8.44549560546875
    4. '_b' → logprob: -8.94549560546875
    5. '('_' → logprob: -9.07049560546875
    6. '(bucket' → logprob: -10.57049560546875
    7. '(' → logprob: -10.94549560546875
    8. ' bucket' → logprob: -11.69549560546875
    9. '_lambda' → logprob: -11.94549560546875
    10. ')_' → logprob: -12.32049560546875

Token 298: '(position' (ID: 22246)
  Prédit: '(position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(position' → logprob: -0.004133137874305248
    2. '(' → logprob: -5.504133224487305
    3. ' (' → logprob: -10.754133224487305
    4. '[position' → logprob: -10.879133224487305
    5. 'position' → logprob: -11.379133224487305
    6. '(
' → logprob: -13.879133224487305
    7. '       ' → logprob: -14.754133224487305
    8. '   ' → logprob: -14.879133224487305
    9. ')' → logprob: -15.129133224487305
    10. ' ' → logprob: -16.254133224487305

Token 299: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004160433541983366
    2. ')
' → logprob: -5.504160404205322
    3. '       ' → logprob: -9.62916088104248
    4. ')`' → logprob: -12.25416088104248
    5. ' )' → logprob: -12.37916088104248
    6. ')
' → logprob: -12.75416088104248
    7. ')`
' → logprob: -13.75416088104248
    8. '   ' → logprob: -14.12916088104248
    9. ')

' → logprob: -14.75416088104248
    10. ' )
' → logprob: -15.25416088104248

Token 300: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004029718693345785
    2. '
' → logprob: -6.879029750823975
    3. '        
' → logprob: -6.879029750823975
    4. ')' → logprob: -7.629029750823975
    5. '<|end|>' → logprob: -7.629029750823975
    6. ',' → logprob: -8.379029273986816
    7. '#' → logprob: -9.004029273986816
    8. '        ' → logprob: -9.629029273986816
    9. ' if' → logprob: -9.629029273986816
    10. '[' → logprob: -9.879029273986816

Token 301: ' within' (ID: 3518)
  Prédit: 'offset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'offset' → logprob: -0.19140000641345978
    2. 'pos' → logprob: -1.9414000511169434
    3. ' offset' → logprob: -4.816400051116943
    4. 'position' → logprob: -4.816400051116943
    5. 'relative' → logprob: -5.441400051116943
    6. 'if' → logprob: -5.941400051116943
    7. 'rel' → logprob: -6.316400051116943
    8. 'index' → logprob: -6.316400051116943
    9. 'digit' → logprob: -6.816400051116943
    10. ' pos' → logprob: -6.941400051116943

Token 302: '_bucket' (ID: 95435)
  Prédit: '_pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.03809347376227379
    2. '_bucket' → logprob: -3.5380935668945312
    3. '_offset' → logprob: -5.538093566894531
    4. '_' → logprob: -6.038093566894531
    5. '_position' → logprob: -6.413093566894531
    6. '_index' → logprob: -8.413093566894531
    7. '_idx' → logprob: -9.538093566894531
    8. '_digit' → logprob: -11.413093566894531
    9. '_range' → logprob: -12.038093566894531
    10. 'pos' → logprob: -12.163093566894531

Token 303: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.004743160679936409
    2. ' =' → logprob: -6.2547430992126465
    3. '_position' → logprob: -6.5047430992126465
    4. '_offset' → logprob: -6.7547430992126465
    5. '=' → logprob: -9.129743576049805
    6. '_' → logprob: -10.879743576049805
    7. '_index' → logprob: -11.004743576049805
    8. 'pos' → logprob: -12.754743576049805
    9. '_start' → logprob: -14.254743576049805
    10. 'Pos' → logprob: -14.629743576049805

Token 304: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2014138251543045
    2. '=' → logprob: -1.701413869857788
    3. ' ' → logprob: -15.076414108276367
    4. ')' → logprob: -16.701414108276367
    5. '    ' → logprob: -17.201414108276367
    6. '   ' → logprob: -17.701414108276367
    7. 's' → logprob: -17.701414108276367
    8. ' -=' → logprob: -17.826414108276367
    9. '        ' → logprob: -18.076414108276367
    10. '-' → logprob: -18.451414108276367

Token 305: ' position' (ID: 4010)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'position' → logprob: -0.25192973017692566
    2. ' position' → logprob: -1.501929759979248
    3. '   ' → logprob: -15.37692928314209
    4. '       ' → logprob: -16.001930236816406
    5. '	position' → logprob: -16.626930236816406
    6. ' ' → logprob: -17.126930236816406
    7. '[position' → logprob: -17.251930236816406
    8. '           ' → logprob: -17.376930236816406
    9. '(position' → logprob: -17.626930236816406
    10. '
' → logprob: -18.626930236816406

Token 306: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.005937924608588219
    2. '-' → logprob: -5.1309380531311035
    3. '       ' → logprob: -12.755937576293945
    4. ' ' → logprob: -13.130937576293945
    5. '        ' → logprob: -13.755937576293945
    6. '<|end|>' → logprob: -14.005937576293945
    7. '           ' → logprob: -14.255937576293945
    8. '[' → logprob: -14.755937576293945
    9. '         ' → logprob: -15.130937576293945
    10. '   ' → logprob: -15.130937576293945

Token 307: ' bucket' (ID: 28257)
  Prédit: 'bucket'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bucket' → logprob: -0.24941489100456238
    2. '(bucket' → logprob: -1.6244149208068848
    3. ' bucket' → logprob: -3.8744149208068848
    4. ' (' → logprob: -5.999414920806885
    5. '1' → logprob: -8.249414443969727
    6. '(b' → logprob: -9.124414443969727
    7. '(' → logprob: -9.499414443969727
    8. 'b' → logprob: -11.624414443969727
    9. ' ' → logprob: -12.124414443969727
    10. '(batch' → logprob: -13.124414443969727

Token 308: '['' (ID: 1181)
  Prédit: '[''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -1.1041145626222715e-05
    2. '['_' → logprob: -12.375011444091797
    3. ''' → logprob: -12.625011444091797
    4. '["' → logprob: -13.125011444091797
    5. ''s' → logprob: -14.000011444091797
    6. '[' → logprob: -15.375011444091797
    7. ' ['' → logprob: -15.875011444091797
    8. ''_' → logprob: -16.875011444091797
    9. '   ' → logprob: -17.000011444091797
    10. '```' → logprob: -17.500011444091797

Token 309: 'start' (ID: 5236)
  Prédit: 'start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.001495814765803516
    2. ''' → logprob: -7.001495838165283
    3. '['' → logprob: -7.626495838165283
    4. ''s' → logprob: -9.376495361328125
    5. '[start' → logprob: -12.001495361328125
    6. ' start' → logprob: -13.251495361328125
    7. '']['' → logprob: -13.251495361328125
    8. '_start' → logprob: -13.626495361328125
    9. '{'' → logprob: -14.876495361328125
    10. '']' → logprob: -15.126495361328125

Token 310: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -1.9361264946837764e-07
    2. 'pos' → logprob: -16.5
    3. 'Pos' → logprob: -19.625
    4. ''_' → logprob: -19.625
    5. '_position' → logprob: -19.875
    6. '_p' → logprob: -20.625
    7. '_' → logprob: -20.75
    8. '_post' → logprob: -21.375
    9. ' _' → logprob: -21.75
    10. '	pos' → logprob: -22.0

Token 311: '']
' (ID: 9756)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.3660443127155304
    2. '-' → logprob: -1.616044282913208
    3. '+' → logprob: -3.491044282913208
    4. '<|end|>' → logprob: -3.491044282913208
    5. ' +' → logprob: -3.741044282913208
    6. ')' → logprob: -4.616044521331787
    7. '
' → logprob: -5.241044521331787
    8. '       ' → logprob: -5.491044521331787
    9. '<|end|>' → logprob: -6.616044521331787
    10. ' ' → logprob: -6.866044521331787

Token 312: '       ' (ID: 309)
  Prédit: ' number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' number' → logprob: -0.3662649095058441
    2. '       ' → logprob: -1.4912649393081665
    3. 'number' → logprob: -2.991264820098877
    4. '
' → logprob: -3.866264820098877
    5. '```' → logprob: -5.491264820098877
    6. '_number' → logprob: -5.991264820098877
    7. ' =' → logprob: -7.741264820098877
    8. '=' → logprob: -7.866264820098877
    9. '   ' → logprob: -7.866264820098877
    10. ' num' → logprob: -8.241265296936035

Token 313: ' number' (ID: 2086)
  Prédit: 'number'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'number' (adapté à ' number') → logprob: -0.005758256651461124
    2. 'index' → logprob: -5.255758285522461
    3. '       ' → logprob: -8.880758285522461
    4. 'num' → logprob: -9.130758285522461
    5. 'offset' → logprob: -9.255758285522461
    6. ' number' → logprob: -9.380758285522461
    7. 'digit' → logprob: -10.255758285522461
    8. 'block' → logprob: -10.630758285522461
    9. '   ' → logprob: -10.880758285522461
    10. '           ' → logprob: -12.380758285522461

Token 314: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.002712500048801303
    2. '_idx' → logprob: -6.252712726593018
    3. '_offset' → logprob: -7.502712726593018
    4. ' =' → logprob: -8.50271224975586
    5. '=' → logprob: -11.37771224975586
    6. 'index' → logprob: -11.62771224975586
    7. '_id' → logprob: -12.00271224975586
    8. '_num' → logprob: -14.50271224975586
    9. '_number' → logprob: -14.75271224975586
    10. '   ' → logprob: -14.75271224975586

Token 315: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01250989455729723
    2. '=' → logprob: -4.387509822845459
    3. ' ' → logprob: -16.387510299682617
    4. ',' → logprob: -16.762510299682617
    5. ')' → logprob: -16.887510299682617
    6. '```' → logprob: -17.262510299682617
    7. ' =
' → logprob: -18.137510299682617
    8. 's' → logprob: -18.262510299682617
    9. 'token' → logprob: -18.262510299682617
    10. ' ' → logprob: -18.762510299682617

Token 316: ' within' (ID: 3518)
  Prédit: 'within'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'within' → logprob: -0.4740934669971466
    2. ' within' → logprob: -0.9740934371948242
    3. 'with' → logprob: -12.349093437194824
    4. '   ' → logprob: -12.349093437194824
    5. ' ' → logprob: -12.474093437194824
    6. '0' → logprob: -13.974093437194824
    7. ' ' → logprob: -14.099093437194824
    8. ' with' → logprob: -14.099093437194824
    9. 'Within' → logprob: -14.474093437194824
    10. '  ' → logprob: -15.599093437194824

Token 317: '_bucket' (ID: 95435)
  Prédit: '_bucket'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bucket' → logprob: -3.054500666621607e-06
    2. '_at' → logprob: -13.50000286102295
    3. '\' → logprob: -15.12500286102295
    4. '_b' → logprob: -15.25000286102295
    5. '_bundle' → logprob: -15.25000286102295
    6. 'at' → logprob: -15.62500286102295
    7. '_pos' → logprob: -15.87500286102295
    8. 'bucket' → logprob: -16.250003814697266
    9. '=' → logprob: -16.875003814697266
    10. '_box' → logprob: -17.000003814697266

Token 318: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -1.580929347255733e-05
    2. 'pos' → logprob: -11.250016212463379
    3. 'Pos' → logprob: -13.750016212463379
    4. '```' → logprob: -15.000016212463379
    5. '_position' → logprob: -15.125016212463379
    6. '   ' → logprob: -15.625016212463379
    7. 'within' → logprob: -15.750016212463379
    8. ' ' → logprob: -16.375015258789062
    9. ' _' → logprob: -16.375015258789062
    10. '_bucket' → logprob: -16.500015258789062

Token 319: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.01138719730079174
    2. '//' → logprob: -4.511387348175049
    3. ')' → logprob: -9.01138687133789
    4. '       ' → logprob: -9.76138687133789
    5. ' ' → logprob: -10.01138687133789
    6. '   ' → logprob: -10.26138687133789
    7. ' ' → logprob: -10.38638687133789
    8. '           ' → logprob: -11.38638687133789
    9. 'div' → logprob: -11.51138687133789
    10. '        ' → logprob: -11.88638687133789

Token 320: ' bucket' (ID: 28257)
  Prédit: 'bucket'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bucket' → logprob: -0.0007115975022315979
    2. ' bucket' → logprob: -7.250711441040039
    3. '(bucket' → logprob: -13.375711441040039
    4. 'b' → logprob: -18.37571144104004
    5. '.bucket' → logprob: -18.87571144104004
    6. 'buck' → logprob: -19.75071144104004
    7. '   ' → logprob: -19.75071144104004
    8. ' ' → logprob: -20.37571144104004
    9. '       ' → logprob: -20.75071144104004
    10. '
' → logprob: -20.75071144104004

Token 321: '['' (ID: 1181)
  Prédit: '[''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -8.895480277715251e-06
    2. '[' → logprob: -12.625008583068848
    3. '   ' → logprob: -13.500008583068848
    4. '       ' → logprob: -13.875008583068848
    5. '           ' → logprob: -14.250008583068848
    6. '['_' → logprob: -14.750008583068848
    7. ' ['' → logprob: -14.875008583068848
    8. '["' → logprob: -14.875008583068848
    9. ''s' → logprob: -14.875008583068848
    10. '                   ' → logprob: -15.625008583068848

Token 322: 'digit' (ID: 78327)
  Prédit: 'digit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digit' → logprob: -0.034733787178993225
    2. ''d' → logprob: -3.409733772277832
    3. '['' → logprob: -6.909733772277832
    4. ''' → logprob: -9.909733772277832
    5. 'digits' → logprob: -11.034733772277832
    6. ' digit' → logprob: -11.784733772277832
    7. 'dig' → logprob: -12.284733772277832
    8. '{'' → logprob: -12.534733772277832
    9. 'd' → logprob: -13.159733772277832
    10. '-digit' → logprob: -13.409733772277832

Token 323: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -3.292907877039397e-06
    2. 'len' → logprob: -13.00000286102295
    3. '_length' → logprob: -13.87500286102295
    4. '_' → logprob: -18.250003814697266
    5. ' _' → logprob: -18.875003814697266
    6. 'length' → logprob: -19.875003814697266
    7. '_LEN' → logprob: -19.875003814697266
    8. '_l' → logprob: -20.250003814697266
    9. '```' → logprob: -20.375003814697266
    10. '_le' → logprob: -20.500003814697266

Token 324: '']
' (ID: 9756)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.02989569492638111
    2. ']
' → logprob: -3.654895782470703
    3. '']' → logprob: -6.029895782470703
    4. ' ]' → logprob: -7.279895782470703
    5. '
' → logprob: -8.904895782470703
    6. ']+' → logprob: -8.904895782470703
    7. '}' → logprob: -9.779895782470703
    8. '']
' → logprob: -10.279895782470703
    9. ' +' → logprob: -10.654895782470703
    10. '+' → logprob: -10.654895782470703

Token 325: '       ' (ID: 309)
  Prédit: ' number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' number' → logprob: -0.5012975931167603
    2. 'number' → logprob: -1.2512975931167603
    3. '       ' → logprob: -3.2512974739074707
    4. 'offset' → logprob: -3.6262974739074707
    5. ' offset' → logprob: -4.126297473907471
    6. ' remainder' → logprob: -4.376297473907471
    7. 'digit' → logprob: -5.126297473907471
    8. ' digit' → logprob: -5.626297473907471
    9. 'num' → logprob: -6.501297473907471
    10. '```' → logprob: -6.626297473907471

Token 326: ' digit' (ID: 19181)
  Prédit: 'digit'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digit' (adapté à ' digit') → logprob: -0.6101723313331604
    2. 'number' → logprob: -1.3601722717285156
    3. 'offset' → logprob: -1.6101722717285156
    4. ' digit' → logprob: -9.485172271728516
    5. 'within' → logprob: -9.735172271728516
    6. 'index' → logprob: -10.360172271728516
    7. 'remaining' → logprob: -10.735172271728516
    8. 'num' → logprob: -10.735172271728516
    9. 'start' → logprob: -10.860172271728516
    10. 're' → logprob: -11.360172271728516

Token 327: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.8309621810913086
    2. '_pos' → logprob: -1.0809621810913086
    3. '_offset' → logprob: -2.0809621810913086
    4. '_idx' → logprob: -2.3309621810913086
    5. '_' → logprob: -6.080962181091309
    6. '_in' → logprob: -8.080962181091309
    7. '_position' → logprob: -8.330962181091309
    8. '_at' → logprob: -9.830962181091309
    9. '_num' → logprob: -9.955962181091309
    10. '=_' → logprob: -10.455962181091309

Token 328: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03804183006286621
    2. '=' → logprob: -3.288041830062866
    3. ' ' → logprob: -14.913042068481445
    4. ' ' → logprob: -18.288042068481445
    5. '    ' → logprob: -18.413042068481445
    6. ' =
' → logprob: -18.538042068481445
    7. ' =
' → logprob: -20.038042068481445
    8. '        ' → logprob: -20.288042068481445
    9. 's' → logprob: -20.413042068481445
    10. ')' → logprob: -20.538042068481445

Token 329: ' within' (ID: 3518)
  Prédit: ' within'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' within' → logprob: -0.3868713676929474
    2. 'within' → logprob: -1.136871337890625
    3. '0' → logprob: -16.636871337890625
    4. 'Within' → logprob: -16.761871337890625
    5. 'with' → logprob: -17.011871337890625
    6. ' ' → logprob: -17.261871337890625
    7. ' with' → logprob: -17.511871337890625
    8. ' ' → logprob: -17.511871337890625
    9. '(with' → logprob: -18.136871337890625
    10. '   ' → logprob: -18.261871337890625

Token 330: '_bucket' (ID: 95435)
  Prédit: '_bucket'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bucket' → logprob: -4.990154047845863e-05
    2. 'bucket' → logprob: -10.750049591064453
    3. '_' → logprob: -11.500049591064453
    4. 'within' → logprob: -12.250049591064453
    5. '_pos' → logprob: -13.000049591064453
    6. '_index' → logprob: -13.750049591064453
    7. '=' → logprob: -14.000049591064453
    8. 'the' → logprob: -14.000049591064453
    9. '"_' → logprob: -14.375049591064453
    10. ' _' → logprob: -14.500049591064453

Token 331: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.0005631613312289119
    2. 'pos' → logprob: -7.750563144683838
    3. '_bucket' → logprob: -10.000563621520996
    4. ' ' → logprob: -10.125563621520996
    5. '_' → logprob: -10.750563621520996
    6. '%' → logprob: -12.250563621520996
    7. 'bucket' → logprob: -12.500563621520996
    8. '```' → logprob: -12.750563621520996
    9. '   ' → logprob: -13.000563621520996
    10. '  ' → logprob: -13.250563621520996

Token 332: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.0788925439119339
    2. '%' → logprob: -2.578892469406128
    3. ' ' → logprob: -12.828892707824707
    4. ' ' → logprob: -16.82889175415039
    5. '   ' → logprob: -18.20389175415039
    6. ' %=' → logprob: -18.70389175415039
    7. '  ' → logprob: -19.45389175415039
    8. '%s' → logprob: -19.57889175415039
    9. '%d' → logprob: -19.70389175415039
    10. ')' → logprob: -19.95389175415039

Token 333: ' bucket' (ID: 28257)
  Prédit: 'bucket'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bucket' → logprob: -0.38699328899383545
    2. ' bucket' → logprob: -1.1369932889938354
    3. '(bucket' → logprob: -9.011993408203125
    4. '_bucket' → logprob: -15.636993408203125
    5. '.bucket' → logprob: -16.136993408203125
    6. 'b' → logprob: -16.636993408203125
    7. ' (' → logprob: -17.886993408203125
    8. ' ' → logprob: -18.011993408203125
    9. '(' → logprob: -18.261993408203125
    10. 'bundle' → logprob: -19.011993408203125

Token 334: '['' (ID: 1181)
  Prédit: '[''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -0.00011772842844948173
    2. '_len' → logprob: -9.125117301940918
    3. ''s' → logprob: -13.250117301940918
    4. '[' → logprob: -13.500117301940918
    5. '['_' → logprob: -13.500117301940918
    6. ''' → logprob: -13.625117301940918
    7. '_' → logprob: -14.000117301940918
    8. '{'' → logprob: -14.625117301940918
    9. '_idx' → logprob: -14.750117301940918
    10. ' ['' → logprob: -15.125117301940918

Token 335: 'digit' (ID: 78327)
  Prédit: 'digit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digit' → logprob: -3.9054008084349334e-05
    2. '['' → logprob: -10.625039100646973
    3. ''d' → logprob: -11.625039100646973
    4. ' digit' → logprob: -12.750039100646973
    5. 'dig' → logprob: -14.125039100646973
    6. 'dict' → logprob: -14.875039100646973
    7. '[d' → logprob: -14.875039100646973
    8. 'd' → logprob: -15.125039100646973
    9. '{'' → logprob: -15.250039100646973
    10. 'digits' → logprob: -15.250039100646973

Token 336: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -1.1472419600977446e-06
    2. 'len' → logprob: -13.750000953674316
    3. '_LEN' → logprob: -19.500001907348633
    4. '_' → logprob: -19.750001907348633
    5. '_length' → logprob: -20.500001907348633
    6. 'Len' → logprob: -21.125001907348633
    7. '_l' → logprob: -21.750001907348633
    8. ' len' → logprob: -21.875001907348633
    9. '	len' → logprob: -22.250001907348633
    10. '```' → logprob: -22.375001907348633

Token 337: '']

' (ID: 36979)
  Prédit: '']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '']' → logprob: -0.10285677760839462
    2. ']' → logprob: -2.4778568744659424
    3. '}' → logprob: -4.852856636047363
    4. '']
' → logprob: -5.352856636047363
    5. ']
' → logprob: -8.102856636047363
    6. '       ' → logprob: -8.477856636047363
    7. ')' → logprob: -8.727856636047363
    8. '<|end|>' → logprob: -8.977856636047363
    9. '']}' → logprob: -9.477856636047363
    10. '"]' → logprob: -9.477856636047363

Token 338: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23019291460514069
    2. 'number' → logprob: -1.8551928997039795
    3. ' number' → logprob: -3.8551928997039795
    4. '
' → logprob: -4.355193138122559
    5. 'start' → logprob: -5.355193138122559
    6. ' base' → logprob: -5.480193138122559
    7. '```' → logprob: -6.230193138122559
    8. 'base' → logprob: -6.355193138122559
    9. '        
' → logprob: -7.355193138122559
    10. ' start' → logprob: -7.855193138122559

Token 339: ' number' (ID: 2086)
  Prédit: 'number'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'number' (adapté à ' number') → logprob: -0.033140480518341064
    2. 'first' → logprob: -4.033140659332275
    3. 'start' → logprob: -4.533140659332275
    4. 'base' → logprob: -5.533140659332275
    5. 'starting' → logprob: -9.408140182495117
    6. 'num' → logprob: -9.533140182495117
    7. 'n' → logprob: -11.533140182495117
    8. ' number' → logprob: -12.533140182495117
    9. 'target' → logprob: -12.533140182495117
    10. 'offset' → logprob: -13.658140182495117

Token 340: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1611107438802719
    2. '=' → logprob: -1.911110758781433
    3. '_start' → logprob: -7.536110877990723
    4. '_value' → logprob: -8.161110877990723
    5. 'start' → logprob: -10.411110877990723
    6. '_num' → logprob: -11.411110877990723
    7. '_base' → logprob: -12.161110877990723
    8. 'value' → logprob: -12.536110877990723
    9. '_val' → logprob: -12.661110877990723
    10. '   ' → logprob: -12.661110877990723

Token 341: ' (' (ID: 350)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0013178583467379212
    2. '(' → logprob: -6.751317977905273
    3. ' ' → logprob: -8.876317977905273
    4. ' (' → logprob: -11.876317977905273
    5. '   ' → logprob: -14.126317977905273
    6. 'pow' → logprob: -16.376317977905273
    7. '  ' → logprob: -17.126317977905273
    8. '1' → logprob: -17.376317977905273
    9. '     ' → logprob: -17.376317977905273
    10. '
' → logprob: -17.626317977905273

Token 342: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -1.9361264946837764e-07
    2. '1' → logprob: -16.5
    3. ' ' → logprob: -16.625
    4. '(' → logprob: -17.0
    5. '   ' → logprob: -20.75
    6. 'pow' → logprob: -21.5
    7. '
' → logprob: -21.75
    8. ')' → logprob: -22.125
    9. '0' → logprob: -22.5
    10. '9' → logprob: -23.0

Token 343: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.04718591645359993
    2. 'bucket' → logprob: -3.6721858978271484
    3. ' **' → logprob: -4.047185897827148
    4. ' bucket' → logprob: -6.547185897827148
    5. '(bucket' → logprob: -6.672185897827148
    6. '[b' → logprob: -8.172185897827148
    7. ')' → logprob: -9.297185897827148
    8. 'b' → logprob: -11.047185897827148
    9. '       ' → logprob: -11.422185897827148
    10. '^(' → logprob: -11.422185897827148

Token 344: ' (' (ID: 350)
  Prédit: '(bucket'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(bucket' → logprob: -0.00012773419439326972
    2. '(d' → logprob: -9.625127792358398
    3. '(b' → logprob: -10.125127792358398
    4. ' (' → logprob: -11.500127792358398
    5. '(token' → logprob: -12.500127792358398
    6. '(batch' → logprob: -13.125127792358398
    7. '(browser' → logprob: -13.250127792358398
    8. '(bundle' → logprob: -13.375127792358398
    9. '(bank' → logprob: -14.750127792358398
    10. '(max' → logprob: -15.125127792358398

Token 345: 'bucket' (ID: 64345)
  Prédit: 'bucket'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bucket' → logprob: -1.5332478142227046e-05
    2. '(bucket' → logprob: -11.750015258789062
    3. ' bucket' → logprob: -11.875015258789062
    4. 'digit' → logprob: -15.375015258789062
    5. '   ' → logprob: -16.125015258789062
    6. 'b' → logprob: -17.750015258789062
    7. '       ' → logprob: -17.875015258789062
    8. '           ' → logprob: -18.000015258789062
    9. '.bucket' → logprob: -18.125015258789062
    10. ' ' → logprob: -18.500015258789062

Token 346: '['' (ID: 1181)
  Prédit: '[''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -6.392202976712724e-06
    2. '-' → logprob: -12.250006675720215
    3. ''s' → logprob: -14.250006675720215
    4. '["' → logprob: -15.375006675720215
    5. '{'' → logprob: -15.375006675720215
    6. '           ' → logprob: -16.2500057220459
    7. '[
' → logprob: -16.3750057220459
    8. '[' → logprob: -16.5000057220459
    9. ''' → logprob: -16.5000057220459
    10. '[token' → logprob: -16.8750057220459

Token 347: 'digit' (ID: 78327)
  Prédit: 'digit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digit' → logprob: -0.024522945284843445
    2. '['' → logprob: -4.39952278137207
    3. ''d' → logprob: -4.52452278137207
    4. ''' → logprob: -6.89952278137207
    5. ' digit' → logprob: -10.02452278137207
    6. ''s' → logprob: -11.02452278137207
    7. '-digit' → logprob: -11.52452278137207
    8. 'digits' → logprob: -12.89952278137207
    9. 'bucket' → logprob: -13.14952278137207
    10. 'd' → logprob: -13.14952278137207

Token 348: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -0.00013285996101330966
    2. 'len' → logprob: -9.00013256072998
    3. '['' → logprob: -11.62513256072998
    4. 'Len' → logprob: -15.50013256072998
    5. 'length' → logprob: -16.500133514404297
    6. 's' → logprob: -16.500133514404297
    7. '-' → logprob: -17.500133514404297
    8. '_length' → logprob: -17.750133514404297
    9. '_LEN' → logprob: -18.250133514404297
    10. ' len' → logprob: -18.500133514404297

Token 349: '']' (ID: 1089)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.048587825149297714
    2. ' -' → logprob: -3.0485877990722656
    3. ''-' → logprob: -15.298587799072266
    4. ' ' → logprob: -16.298587799072266
    5. '   ' → logprob: -16.423587799072266
    6. '['' → logprob: -17.923587799072266
    7. '  ' → logprob: -17.923587799072266
    8. '```' → logprob: -18.423587799072266
    9. ''' → logprob: -20.423587799072266
    10. '[' → logprob: -20.423587799072266

Token 350: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.1602255403995514
    2. ' -' → logprob: -1.910225510597229
    3. '['' → logprob: -14.285225868225098
    4. ''-' → logprob: -14.910225868225098
    5. ' ' → logprob: -15.285225868225098
    6. '   ' → logprob: -16.41022491455078
    7. '[' → logprob: -17.28522491455078
    8. ')' → logprob: -17.41022491455078
    9. '–' → logprob: -18.16022491455078
    10. '  ' → logprob: -18.16022491455078

Token 351: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. '   ' → logprob: -18.25
    4. ')' → logprob: -18.75
    5. '```' → logprob: -19.375
    6. '
' → logprob: -19.625
    7. 'bucket' → logprob: -21.0
    8. '2' → logprob: -21.125
    9. 'digit' → logprob: -21.625
    10. '-' → logprob: -21.875

Token 352: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.226628895296017e-06
    2. ' ' → logprob: -11.875007629394531
    3. ')' → logprob: -15.875007629394531
    4. '   ' → logprob: -16.87500762939453
    5. '```' → logprob: -17.37500762939453
    6. 'to' → logprob: -18.75000762939453
    7. '2' → logprob: -18.75000762939453
    8. '
' → logprob: -19.18750762939453
    9. 'length' → logprob: -19.62500762939453
    10. '  ' → logprob: -19.75000762939453

Token 353: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0015024791937321424
    2. ' )' → logprob: -7.126502513885498
    3. '+' → logprob: -8.00150203704834
    4. '))' → logprob: -8.62650203704834
    5. ')+' → logprob: -8.87650203704834
    6. ' +' → logprob: -10.12650203704834
    7. '+)' → logprob: -12.75150203704834
    8. '))+' → logprob: -15.00150203704834
    9. ')+(' → logprob: -15.62650203704834
    10. ' ))' → logprob: -16.126502990722656

Token 354: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6931474208831787
    2. ' +' → logprob: -0.6931474208831787
    3. '+
' → logprob: -16.068147659301758
    4. ' +
' → logprob: -16.693147659301758
    5. '()+' → logprob: -17.193147659301758
    6. '＋' → logprob: -18.068147659301758
    7. ')+' → logprob: -18.318147659301758
    8. ')' → logprob: -18.443147659301758
    9. '       ' → logprob: -18.443147659301758
    10. '+self' → logprob: -18.568147659301758

Token 355: ' number' (ID: 2086)
  Prédit: 'number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'number' → logprob: -0.004078401252627373
    2. ' number' → logprob: -5.504078388214111
    3. '[number' → logprob: -17.754077911376953
    4. '       ' → logprob: -18.504077911376953
    5. '   ' → logprob: -18.879077911376953
    6. '(number' → logprob: -19.004077911376953
    7. '	number' → logprob: -19.879077911376953
    8. '           ' → logprob: -21.629077911376953
    9. ' ' → logprob: -21.879077911376953
    10. 'num' → logprob: -23.379077911376953

Token 356: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.00014203863975126296
    2. 'index' → logprob: -8.875142097473145
    3. 'Index' → logprob: -13.625142097473145
    4. '_INDEX' → logprob: -15.375142097473145
    5. '[index' → logprob: -15.375142097473145
    6. ' index' → logprob: -16.000141143798828
    7. 'dex' → logprob: -16.250141143798828
    8. '	index' → logprob: -16.375141143798828
    9. 'ex' → logprob: -16.625141143798828
    10. 's' → logprob: -17.000141143798828

Token 357: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5698871612548828
    2. '
' → logprob: -1.6948871612548828
    3. '[number' → logprob: -2.194887161254883
    4. '[' → logprob: -2.819887161254883
    5. 'digit' → logprob: -4.319887161254883
    6. '<|end|>' → logprob: -4.569887161254883
    7. 'number' → logprob: -4.819887161254883
    8. '[num' → logprob: -5.069887161254883
    9. 'str' → logprob: -5.069887161254883
    10. 'print' → logprob: -5.319887161254883

Token 358: '       ' (ID: 309)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.8261363506317139
    2. '       ' → logprob: -1.2011363506317139
    3. 'digit' → logprob: -1.8261363506317139
    4. ' digit' → logprob: -3.201136350631714
    5. ' return' → logprob: -3.201136350631714
    6. 'number' → logprob: -5.576136589050293
    7. 'result' → logprob: -5.576136589050293
    8. 'num' → logprob: -6.326136589050293
    9. '[number' → logprob: -6.576136589050293
    10. '
' → logprob: -6.576136589050293

Token 359: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.002970930188894272
    2. ' return' → logprob: -6.0029706954956055
    3. 'digit' → logprob: -7.7529706954956055
    4. 'number' → logprob: -10.127970695495605
    5. 'result' → logprob: -11.502970695495605
    6. 'str' → logprob: -12.502970695495605
    7. 's' → logprob: -12.877970695495605
    8. 'num' → logprob: -13.002970695495605
    9. '   ' → logprob: -13.127970695495605
    10. '```' → logprob: -13.252970695495605

Token 360: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.0009115827269852161
    2. ' str' → logprob: -7.000911712646484
    3. '   ' → logprob: -19.000911712646484
    4. '	str' → logprob: -19.125911712646484
    5. '(str' → logprob: -21.000911712646484
    6. 'string' → logprob: -22.375911712646484
    7. ' ' → logprob: -22.750911712646484
    8. 'int' → logprob: -23.500911712646484
    9. '[str' → logprob: -23.500911712646484
    10. '_str' → logprob: -23.625911712646484

Token 361: '(number' (ID: 32955)
  Prédit: '(number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(number' → logprob: -8.602024900028482e-05
    2. 'number' → logprob: -9.375085830688477
    3. '(' → logprob: -14.250085830688477
    4. '[number' → logprob: -14.375085830688477
    5. 'umber' → logprob: -17.750085830688477
    6. '	number' → logprob: -17.875085830688477
    7. ' number' → logprob: -18.125085830688477
    8. '(
' → logprob: -18.625085830688477
    9. '```' → logprob: -19.125085830688477
    10. '_number' → logprob: -19.250085830688477

Token 362: ')[' (ID: 13637)
  Prédit: ')['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')[' → logprob: -0.005269922781735659
    2. '[d' → logprob: -5.255270004272461
    3. '[' → logprob: -10.755270004272461
    4. ')' → logprob: -11.880270004272461
    5. ' )[' → logprob: -11.880270004272461
    6. '   ' → logprob: -14.130270004272461
    7. ')d' → logprob: -16.25527000427246
    8. ' [' → logprob: -16.63027000427246
    9. '")[' → logprob: -17.38027000427246
    10. ' ' → logprob: -17.75527000427246

Token 363: 'digit' (ID: 78327)
  Prédit: 'digit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digit' → logprob: -1.1472419600977446e-06
    2. ' digit' → logprob: -13.750000953674316
    3. '-digit' → logprob: -17.750001907348633
    4. 'd' → logprob: -18.375001907348633
    5. '_digit' → logprob: -18.625001907348633
    6. '           ' → logprob: -20.750001907348633
    7. '   ' → logprob: -21.125001907348633
    8. '
' → logprob: -21.375001907348633
    9. 'token' → logprob: -21.625001907348633
    10. 'digital' → logprob: -21.875001907348633

Token 364: '_index' (ID: 7748)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.5785765647888184
    2. '_index' → logprob: -0.8285765647888184
    3. 'x' → logprob: -6.328576564788818
    4. 'dex' → logprob: -7.328576564788818
    5. 'index' → logprob: -8.828577041625977
    6. 'nd' → logprob: -10.953577041625977
    7. '_idx' → logprob: -11.453577041625977
    8. '_ex' → logprob: -12.328577041625977
    9. '_' → logprob: -12.828577041625977
    10. 'Index' → logprob: -12.953577041625977

Token 365: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -4.961759259458631e-06
    2. ' ]' → logprob: -12.875004768371582
    3. ']
' → logprob: -13.250004768371582
    4. '}' → logprob: -15.250004768371582
    5. ')' → logprob: -15.375004768371582
    6. '<|end|>' → logprob: -17.0000057220459
    7. '']' → logprob: -17.7500057220459
    8. ']}' → logprob: -17.8750057220459
    9. ']

' → logprob: -18.0000057220459
    10. '"]' → logprob: -18.8750057220459

Token 366: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8290433287620544
    2. 'def' → logprob: -1.0790433883666992
    3. '
' → logprob: -1.8290433883666992
    4. ' def' → logprob: -2.829043388366699
    5. ' ' → logprob: -5.954043388366699
    6. '    
' → logprob: -7.579043388366699
    7. '_' → logprob: -8.3290433883667
    8. '

' → logprob: -9.2040433883667
    9. '	def' → logprob: -9.2040433883667
    10. '<|end|>' → logprob: -9.5790433883667

Token 367: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.005291038658469915
    2. ' def' → logprob: -5.255290985107422
    3. '   ' → logprob: -10.005290985107422
    4. '_def' → logprob: -11.380290985107422
    5. ' ' → logprob: -15.130290985107422
    6. '	def' → logprob: -15.505290985107422
    7. '
' → logprob: -15.630290985107422
    8. '_' → logprob: -17.630290985107422
    9. '_de' → logprob: -18.630290985107422
    10. '_find' → logprob: -18.755290985107422

Token 368: ' _' (ID: 1175)
  Prédit: '_find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_find' → logprob: -4.127333340875339e-06
    2. '_digits' → logprob: -13.625003814697266
    3. '_digit' → logprob: -13.625003814697266
    4. '_start' → logprob: -15.125003814697266
    5. '_found' → logprob: -15.250003814697266
    6. 'def' → logprob: -15.500003814697266
    7. ' _' → logprob: -15.875003814697266
    8. '_get' → logprob: -15.875003814697266
    9. '_add' → logprob: -16.125003814697266
    10. '_fill' → logprob: -16.250003814697266

Token 369: 'find' (ID: 6555)
  Prédit: 'find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -1.5213274309644476e-05
    2. '_find' → logprob: -11.125015258789062
    3. ' find' → logprob: -15.000015258789062
    4. '.find' → logprob: -17.625015258789062
    5. '	find' → logprob: -17.625015258789062
    6. '(find' → logprob: -17.875015258789062
    7. '=find' → logprob: -19.000015258789062
    8. 'Find' → logprob: -19.125015258789062
    9. '-find' → logprob: -19.125015258789062
    10. '_' → logprob: -19.375015258789062

Token 370: '_bucket' (ID: 95435)
  Prédit: '_bucket'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bucket' → logprob: -4.56102097814437e-05
    2. '_b' → logprob: -10.000045776367188
    3. 'bucket' → logprob: -16.250045776367188
    4. '_bundle' → logprob: -16.625045776367188
    5. ' _' → logprob: -18.500045776367188
    6. '_find' → logprob: -18.625045776367188
    7. '_bulk' → logprob: -18.750045776367188
    8. '\' → logprob: -18.875045776367188
    9. '_BUCKET' → logprob: -19.000045776367188
    10. '_bank' → logprob: -19.125045776367188

Token 371: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0003930192324332893
    2. '(' → logprob: -7.875392913818359
    3. 'self' → logprob: -11.50039291381836
    4. ' (' → logprob: -13.50039291381836
    5. '(
' → logprob: -14.62539291381836
    6. '   ' → logprob: -15.12539291381836
    7. '       ' → logprob: -15.62539291381836
    8. ' ' → logprob: -16.00039291381836
    9. '(s' → logprob: -16.75039291381836
    10. ' self' → logprob: -16.87539291381836

Token 372: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0021155239082872868
    2. '(' → logprob: -6.502115726470947
    3. ' (' → logprob: -8.002115249633789
    4. 'self' → logprob: -8.877115249633789
    5. '       ' → logprob: -10.502115249633789
    6. '   ' → logprob: -10.752115249633789
    7. ')(' → logprob: -11.002115249633789
    8. ')' → logprob: -11.627115249633789
    9. '<|end|>' → logprob: -11.627115249633789
    10. 'def' → logprob: -11.752115249633789

Token 373: ' position' (ID: 4010)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.03823668137192726
    2. 'position' → logprob: -3.288236618041992
    3. ' self' → logprob: -8.913236618041992
    4. '       ' → logprob: -10.413236618041992
    5. '   ' → logprob: -10.913236618041992
    6. ' position' → logprob: -11.413236618041992
    7. 'pos' → logprob: -14.038236618041992
    8. '(self' → logprob: -16.163236618041992
    9. '           ' → logprob: -16.413236618041992
    10. ' ' → logprob: -16.663236618041992

Token 374: ':' (ID: 25)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.24255135655403137
    2. 'self' → logprob: -1.742551326751709
    3. '       ' → logprob: -4.117551326751709
    4. '   ' → logprob: -4.367551326751709
    5. '):
' → logprob: -5.117551326751709
    6. ')' → logprob: -6.617551326751709
    7. '):' → logprob: -6.617551326751709
    8. ',' → logprob: -7.242551326751709
    9. ' self' → logprob: -7.492551326751709
    10. '(' → logprob: -7.742551326751709

Token 375: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0004732102679554373
    2. 'self' → logprob: -8.000473022460938
    3. ' int' → logprob: -9.000473022460938
    4. ')' → logprob: -11.875473022460938
    5. '   ' → logprob: -11.875473022460938
    6. ' self' → logprob: -15.375473022460938
    7. '       ' → logprob: -15.750473022460938
    8. '  ' → logprob: -17.625473022460938
    9. ' ' → logprob: -17.875473022460938
    10. ')
' → logprob: -18.000473022460938

Token 376: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.764227569103241
    2. '):' → logprob: -1.0142276287078857
    3. '):
' → logprob: -1.7642276287078857
    4. ')->' → logprob: -9.014227867126465
    5. '):
' → logprob: -9.139227867126465
    6. '   ' → logprob: -10.139227867126465
    7. '       ' → logprob: -10.639227867126465
    8. ':' → logprob: -12.264227867126465
    9. 'self' → logprob: -12.389227867126465
    10. '):

' → logprob: -13.639227867126465

Token 377: ' ->' (ID: 2747)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5212079882621765
    2. '(self' → logprob: -1.1462080478668213
    3. '   ' → logprob: -2.6462080478668213
    4. 'self' → logprob: -5.146207809448242
    5. ':
' → logprob: -5.271207809448242
    6. ':' → logprob: -5.771207809448242
    7. 'def' → logprob: -6.521207809448242
    8. ' self' → logprob: -7.146207809448242
    9. '(' → logprob: -7.896207809448242
    10. '    ' → logprob: -8.896207809448242

Token 378: ' dict' (ID: 11878)
  Prédit: 'dict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dict' → logprob: -0.6263197064399719
    2. 'str' → logprob: -2.001319646835327
    3. 'object' → logprob: -2.376319646835327
    4. 'self' → logprob: -2.626319646835327
    5. 'list' → logprob: -2.751319646835327
    6. ' str' → logprob: -3.126319646835327
    7. 'int' → logprob: -3.876319646835327
    8. 'def' → logprob: -4.376319885253906
    9. 'None' → logprob: -5.126319885253906
    10. 'lambda' → logprob: -5.251319885253906

Token 379: ':
' (ID: 734)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.1040351390838623
    2. '       ' → logprob: -2.3540351390838623
    3. '   ' → logprob: -6.104035377502441
    4. '(' → logprob: -7.354035377502441
    5. 'self' → logprob: -7.729035377502441
    6. ':
' → logprob: -8.729035377502441
    7. '(
' → logprob: -9.479035377502441
    8. '	self' → logprob: -9.854035377502441
    9. ' self' → logprob: -9.979035377502441
    10. ':' → logprob: -10.229035377502441

Token 380: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0013910694979131222
    2. ' for' → logprob: -6.6263909339904785
    3. 'for' → logprob: -9.876391410827637
    4. '```' → logprob: -11.876391410827637
    5. '   ' → logprob: -13.001391410827637
    6. ',' → logprob: -13.626391410827637
    7. ' left' → logprob: -13.751391410827637
    8. 'left' → logprob: -14.126391410827637
    9. '      ' → logprob: -15.376391410827637
    10. 'def' → logprob: -16.00139045715332

Token 381: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5546907782554626
    2. 'for' → logprob: -1.5546908378601074
    3. 'left' → logprob: -1.8046908378601074
    4. 'low' → logprob: -3.5546908378601074
    5. ' for' → logprob: -4.429690837860107
    6. ' left' → logprob: -5.054690837860107
    7. 'lo' → logprob: -6.429690837860107
    8. ' lo' → logprob: -7.679690837860107
    9. 'l' → logprob: -7.929690837860107
    10. ' low' → logprob: -8.05469036102295

Token 382: ' Binary' (ID: 32672)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.612203061580658
    2. 'for' → logprob: -1.3622031211853027
    3. 'low' → logprob: -1.6122031211853027
    4. 'lo' → logprob: -6.362203121185303
    5. '#' → logprob: -7.737203121185303
    6. '       ' → logprob: -9.112202644348145
    7. 'l' → logprob: -10.987202644348145
    8. 'if' → logprob: -12.237202644348145
    9. '   ' → logprob: -12.487202644348145
    10. ' left' → logprob: -13.612202644348145

Token 383: ' search' (ID: 3684)
  Prédit: ' search'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' search' → logprob: -0.24622395634651184
    2. 'search' → logprob: -1.9962239265441895
    3. '_search' → logprob: -2.4962239265441895
    4. 'def' → logprob: -12.371224403381348
    5. ' def' → logprob: -13.246224403381348
    6. 'Search' → logprob: -13.746224403381348
    7. '       ' → logprob: -13.871224403381348
    8. '   ' → logprob: -13.996224403381348
    9. '_' → logprob: -15.371224403381348
    10. ' Search' → logprob: -15.496224403381348

Token 384: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005351595464162529
    2. 'left' → logprob: -8.500535011291504
    3. 'low' → logprob: -9.250535011291504
    4. 'lo' → logprob: -9.625535011291504
    5. '   ' → logprob: -9.750535011291504
    6. ' lo' → logprob: -10.375535011291504
    7. ',' → logprob: -10.750535011291504
    8. ' left' → logprob: -10.875535011291504
    9. '```' → logprob: -11.500535011291504
    10. '
' → logprob: -11.750535011291504

Token 385: ' bucket' (ID: 28257)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'low' → logprob: -0.5128563046455383
    2. 'left' → logprob: -1.5128562450408936
    3. 'def' → logprob: -2.0128562450408936
    4. 'lo' → logprob: -4.137856483459473
    5. ' lo' → logprob: -4.637856483459473
    6. ' low' → logprob: -4.887856483459473
    7. ' left' → logprob: -5.012856483459473
    8. ' def' → logprob: -5.637856483459473
    9. 'self' → logprob: -6.762856483459473
    10. '       ' → logprob: -6.762856483459473

Token 386: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00026062061078846455
    2. ',' → logprob: -9.375260353088379
    3. '   ' → logprob: -9.875260353088379
    4. 'left' → logprob: -10.000260353088379
    5. 'low' → logprob: -10.625260353088379
    6. '(low' → logprob: -10.875260353088379
    7. 'lo' → logprob: -12.000260353088379
    8. '
' → logprob: -12.000260353088379
    9. ' lo' → logprob: -12.250260353088379
    10. ' left' → logprob: -12.500260353088379

Token 387: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001147483242675662
    2. '   ' → logprob: -6.876147270202637
    3. 'left' → logprob: -9.751147270202637
    4. '```' → logprob: -11.376147270202637
    5. 'def' → logprob: -11.501147270202637
    6. 'low' → logprob: -11.626147270202637
    7. ' lo' → logprob: -11.626147270202637
    8. ',' → logprob: -12.376147270202637
    9. 'lo' → logprob: -12.376147270202637
    10. ' left' → logprob: -12.876147270202637

Token 388: ' low' (ID: 4465)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'low' (adapté à ' low') → logprob: -0.6860125064849854
    2. 'left' → logprob: -0.9360125064849854
    3. '       ' → logprob: -2.6860125064849854
    4. 'lo' → logprob: -3.6860125064849854
    5. ' left' → logprob: -5.186012268066406
    6. ' lo' → logprob: -5.936012268066406
    7. ' low' → logprob: -6.186012268066406
    8. '   ' → logprob: -7.311012268066406
    9. '```' → logprob: -10.686012268066406
    10. 'l' → logprob: -11.061012268066406

Token 389: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12403307855129242
    2. ',' → logprob: -2.374032974243164
    3. ' =' → logprob: -3.749032974243164
    4. ' ,' → logprob: -12.999032974243164
    5. '<|end|>' → logprob: -14.749032974243164
    6. '0' → logprob: -14.874032974243164
    7. '   ' → logprob: -15.124032974243164
    8. '       ' → logprob: -15.374032974243164
    9. '```' → logprob: -15.749032974243164
    10. ',
' → logprob: -15.874032974243164

Token 390: ' high' (ID: 1932)
  Prédit: 'high'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'high' → logprob: -0.0002613358374219388
    2. ' high' → logprob: -8.250261306762695
    3. 'High' → logprob: -18.250261306762695
    4. 'hi' → logprob: -18.500261306762695
    5. '_high' → logprob: -19.375261306762695
    6. '0' → logprob: -20.500261306762695
    7. '.high' → logprob: -20.500261306762695
    8. '(high' → logprob: -21.750261306762695
    9. '=' → logprob: -21.875261306762695
    10. '/high' → logprob: -22.250261306762695

Token 391: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0788901224732399
    2. ' =' → logprob: -2.578890085220337
    3. ',' → logprob: -15.078889846801758
    4. '0' → logprob: -17.828889846801758
    5. ' ' → logprob: -19.328889846801758
    6. '=}' → logprob: -19.828889846801758
    7. '＝' → logprob: -20.328889846801758
    8. '   ' → logprob: -20.828889846801758
    9. ')' → logprob: -20.828889846801758
    10. '    ' → logprob: -20.828889846801758

Token 392: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.615255839889869e-05
    2. ' ' → logprob: -9.250096321105957
    3. '   ' → logprob: -17.12509536743164
    4. '  ' → logprob: -21.25009536743164
    5. '       ' → logprob: -21.62509536743164
    6. '۰' → logprob: -21.62509536743164
    7. '    ' → logprob: -21.87509536743164
    8. '=' → logprob: -22.37509536743164
    9. '     ' → logprob: -22.37509536743164
    10. '00' → logprob: -23.12509536743164

Token 393: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.0
    3. '   ' → logprob: -19.75
    4. '=' → logprob: -20.875
    5. '۰' → logprob: -20.875
    6. '00' → logprob: -22.125
    7. '  ' → logprob: -22.75
    8. '     ' → logprob: -22.875
    9. '    ' → logprob: -23.0
    10. ' =' → logprob: -23.125

Token 394: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.458980300929397e-05
    2. ' ,' → logprob: -9.87508487701416
    3. '=' → logprob: -11.00008487701416
    4. '       ' → logprob: -12.62508487701416
    5. ',
' → logprob: -12.62508487701416
    6. ' low' → logprob: -12.75008487701416
    7. ' =' → logprob: -12.75008487701416
    8. 'low' → logprob: -14.25008487701416
    9. '(low' → logprob: -14.37508487701416
    10. ',len' → logprob: -14.50008487701416

Token 395: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.00016063073417171836
    2. ' len' → logprob: -8.750160217285156
    3. '9' → logprob: -13.750160217285156
    4. '10' → logprob: -13.750160217285156
    5. '   ' → logprob: -18.000160217285156
    6. '(len' → logprob: -18.250160217285156
    7. '       ' → logprob: -19.875160217285156
    8. ' ' → logprob: -21.250160217285156
    9. '           ' → logprob: -21.500160217285156
    10. '	len' → logprob: -21.625160217285156

Token 396: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.0325924449716695e-05
    2. 'self' → logprob: -11.50001049041748
    3. '(' → logprob: -15.62501049041748
    4. '=self' → logprob: -18.750009536743164
    5. ' self' → logprob: -19.375009536743164
    6. 's' → logprob: -20.000009536743164
    7. '[self' → logprob: -20.875009536743164
    8. 'of' → logprob: -21.125009536743164
    9. '(
' → logprob: -21.250009536743164
    10. ' (' → logprob: -21.750009536743164

Token 397: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.0002547832846175879
    2. 'self' → logprob: -8.62525463104248
    3. '_self' → logprob: -9.62525463104248
    4. '.self' → logprob: -12.25025463104248
    5. '(self' → logprob: -13.50025463104248
    6. '.' → logprob: -13.75025463104248
    7. ' self' → logprob: -14.12525463104248
    8. '_digit' → logprob: -15.00025463104248
    9. '.__' → logprob: -15.62525463104248
    10. ' .' → logprob: -15.87525463104248

Token 398: 'digit' (ID: 78327)
  Prédit: 'digit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digit' → logprob: -0.0015028368216007948
    2. '_digit' → logprob: -6.501502990722656
    3. '-digit' → logprob: -15.251502990722656
    4. ' digit' → logprob: -15.376502990722656
    5. 'digital' → logprob: -16.626502990722656
    6. 'Digit' → logprob: -18.876502990722656
    7. '
' → logprob: -19.626502990722656
    8. 'dig' → logprob: -19.626502990722656
    9. '```' → logprob: -20.001502990722656
    10. 'd' → logprob: -20.501502990722656

Token 399: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -1.5048530030981055e-06
    2. 'length' → logprob: -13.500001907348633
    3. 'Length' → logprob: -17.250001907348633
    4. 'ength' → logprob: -19.000001907348633
    5. '-length' → logprob: -19.125001907348633
    6. '_l' → logprob: -19.500001907348633
    7. '   ' → logprob: -19.875001907348633
    8. ' length' → logprob: -20.000001907348633
    9. '_' → logprob: -20.000001907348633
    10. '_lengths' → logprob: -20.500001907348633

Token 400: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -1.9361264946837764e-07
    2. '_length' → logprob: -16.25
    3. 'Buckets' → logprob: -16.875
    4. 's' → logprob: -18.375
    5. 'b' → logprob: -18.5
    6. '```' → logprob: -18.875
    7. ' _' → logprob: -19.125
    8. ' buckets' → logprob: -19.75
    9. ''_' → logprob: -19.875
    10. '-_' → logprob: -20.0

Token 401: 'uckets' (ID: 73451)
  Prédit: 'uckets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uckets' → logprob: -1.9027791495318525e-05
    2. 'b' → logprob: -11.875019073486328
    3. 'ackets' → logprob: -12.125019073486328
    4. 'ucket' → logprob: -12.625019073486328
    5. 'uck' → logprob: -14.375019073486328
    6. '_b' → logprob: -14.625019073486328
    7. '_' → logprob: -14.750019073486328
    8. 'ockets' → logprob: -14.750019073486328
    9. 'u' → logprob: -14.875019073486328
    10. 'uckles' → logprob: -15.375019073486328

Token 402: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005638765869662166
    2. ')-' → logprob: -7.625564098358154
    3. ' -' → logprob: -10.375563621520996
    4. '-' → logprob: -10.750563621520996
    5. ' )' → logprob: -10.750563621520996
    6. '')' → logprob: -14.500563621520996
    7. '-)' → logprob: -14.750563621520996
    8. ')
' → logprob: -15.000563621520996
    9. '[' → logprob: -15.750563621520996
    10. '`)' → logprob: -15.875563621520996

Token 403: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.2811926305294037
    2. ' -' → logprob: -1.406192660331726
    3. '
' → logprob: -10.531192779541016
    4. '<|end|>' → logprob: -11.656192779541016
    5. '```' → logprob: -13.281192779541016
    6. '       ' → logprob: -13.281192779541016
    7. '–' → logprob: -13.906192779541016
    8. '   ' → logprob: -14.156192779541016
    9. ' ' → logprob: -14.781192779541016
    10. '<|end|>' → logprob: -14.906192779541016

Token 404: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.988221684878226e-06
    2. ' ' → logprob: -11.875006675720215
    3. '   ' → logprob: -19.75000762939453
    4. '<|end|>' → logprob: -19.75000762939453
    5. '```' → logprob: -19.87500762939453
    6. '0' → logprob: -21.25000762939453
    7. '       ' → logprob: -22.50000762939453
    8. '
' → logprob: -22.87500762939453
    9. '=' → logprob: -23.12500762939453
    10. '۱' → logprob: -23.25000762939453

Token 405: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. '```' → logprob: -18.75
    4. '   ' → logprob: -19.0
    5. '
' → logprob: -21.0
    6. '  ' → logprob: -21.5
    7. '<|end|>' → logprob: -22.0
    8. '۱' → logprob: -22.125
    9. '    ' → logprob: -22.8125
    10. '       ' → logprob: -22.875

Token 406: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1090371385216713
    2. '       ' → logprob: -2.359037160873413
    3. 'while' → logprob: -5.734036922454834
    4. ' while' → logprob: -6.109036922454834
    5. '        
' → logprob: -7.109036922454834
    6. '<|end|>' → logprob: -7.234036922454834
    7. '  
' → logprob: -7.734036922454834
    8. ' ' → logprob: -7.859036922454834
    9. '	while' → logprob: -8.109037399291992
    10. '   ' → logprob: -8.859037399291992

Token 407: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.39765268564224243
    2. '<|end|>' → logprob: -1.6476526260375977
    3. '   ' → logprob: -3.2726526260375977
    4. '
' → logprob: -3.5226526260375977
    5. '```' → logprob: -3.8976526260375977
    6. ' while' → logprob: -4.022652626037598
    7. '	while' → logprob: -5.147652626037598
    8. '        
' → logprob: -5.647652626037598
    9. '  
' → logprob: -5.772652626037598
    10. ' ' → logprob: -5.772652626037598

Token 408: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.503083348274231
    2. 'while' (adapté à ' while') → logprob: -1.003083348274231
    3. '       ' → logprob: -4.003083229064941
    4. '
' → logprob: -5.003083229064941
    5. '   ' → logprob: -5.753083229064941
    6. '	while' → logprob: -8.378083229064941
    7. ' 
' → logprob: -9.503083229064941
    8. '        
' → logprob: -9.628083229064941
    9. '```' → logprob: -10.503083229064941
    10. '    
' → logprob: -10.878083229064941

Token 409: ' low' (ID: 4465)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'low' → logprob: -0.0007099286303855479
    2. ' low' → logprob: -7.2507100105285645
    3. '(low' → logprob: -19.875709533691406
    4. 'Low' → logprob: -21.750709533691406
    5. '   ' → logprob: -22.500709533691406
    6. ' ' → logprob: -22.625709533691406
    7. 'lo' → logprob: -22.750709533691406
    8. '低' → logprob: -22.875709533691406
    9. '_low' → logprob: -23.250709533691406
    10. '
' → logprob: -24.000709533691406

Token 410: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.31326824426651
    2. ' <=' → logprob: -1.3132681846618652
    3. ')<=' → logprob: -12.563268661499023
    4. ']<=' → logprob: -13.938268661499023
    5. '<' → logprob: -14.188268661499023
    6. '<|end|>' → logprob: -14.438268661499023
    7. '≤' → logprob: -14.938268661499023
    8. '=' → logprob: -15.688268661499023
    9. ' <=",' → logprob: -16.188268661499023
    10. ' ≤' → logprob: -16.313268661499023

Token 411: ' high' (ID: 1932)
  Prédit: 'high'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'high' → logprob: -0.00020354038861114532
    2. ' high' → logprob: -8.500203132629395
    3. '(high' → logprob: -17.62520408630371
    4. '.high' → logprob: -19.87520408630371
    5. ' ' → logprob: -20.25020408630371
    6. '_high' → logprob: -20.50020408630371
    7. 'High' → logprob: -21.00020408630371
    8. '/high' → logprob: -21.50020408630371
    9. '
' → logprob: -22.12520408630371
    10. '高' → logprob: -22.50020408630371

Token 412: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11307518929243088
    2. ':
' → logprob: -2.2380752563476562
    3. '<|end|>' → logprob: -8.863075256347656
    4. '):
' → logprob: -10.238075256347656
    5. '       ' → logprob: -11.238075256347656
    6. ',' → logprob: -11.238075256347656
    7. '<|end|>' → logprob: -11.238075256347656
    8. ':

' → logprob: -11.363075256347656
    9. '   ' → logprob: -11.488075256347656
    10. '):' → logprob: -13.238075256347656

Token 413: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6809495091438293
    2. '           ' → logprob: -1.5559494495391846
    3. ' mid' → logprob: -1.9309494495391846
    4. '   ' → logprob: -2.3059494495391846
    5. 'mid' → logprob: -4.055949687957764
    6. '[mid' → logprob: -5.930949687957764
    7. ' ' → logprob: -5.930949687957764
    8. '	   ' → logprob: -6.055949687957764
    9. '<|end|>' → logprob: -6.055949687957764
    10. '    ' → logprob: -6.430949687957764

Token 414: ' mid' (ID: 6959)
  Prédit: ' mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mid' → logprob: -0.014174087904393673
    2. 'mid' (adapté à ' mid') → logprob: -4.264173984527588
    3. ' midpoint' → logprob: -12.389174461364746
    4. '           ' → logprob: -12.639174461364746
    5. ' middle' → logprob: -13.389174461364746
    6. '   ' → logprob: -13.764174461364746
    7. ' ' → logprob: -15.139174461364746
    8. '_mid' → logprob: -16.51417350769043
    9. '[mid' → logprob: -17.13917350769043
    10. 'm' → logprob: -17.13917350769043

Token 415: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12710081040859222
    2. '=' → logprob: -2.127100706100464
    3. '<|end|>' → logprob: -9.002100944519043
    4. ' ' → logprob: -10.627100944519043
    5. ')' → logprob: -12.002100944519043
    6. ' =
' → logprob: -12.502100944519043
    7. '=int' → logprob: -12.877100944519043
    8. ',' → logprob: -13.002100944519043
    9. '<|end|>' → logprob: -13.502100944519043
    10. '```' → logprob: -13.627100944519043

Token 416: ' (' (ID: 350)
  Prédit: '(low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(low' → logprob: -0.000912774819880724
    2. ' (' → logprob: -7.000912666320801
    3. '(high' → logprob: -14.2509126663208
    4. ' low' → logprob: -15.0009126663208
    5. 'low' → logprob: -15.3759126663208
    6. '(lo' → logprob: -16.125913619995117
    7. '(left' → logprob: -17.250913619995117
    8. '(lower' → logprob: -17.500913619995117
    9. '(l' → logprob: -18.000913619995117
    10. '(mid' → logprob: -19.000913619995117

Token 417: 'low' (ID: 14739)
  Prédit: 'low'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'low' → logprob: -9.088346359931165e-07
    2. ' low' → logprob: -14.000000953674316
    3. '(low' → logprob: -20.0
    4. 'Low' → logprob: -24.0
    5. 'lo' → logprob: -24.75
    6. '_low' → logprob: -25.25
    7. ' ' → logprob: -26.25
    8. '.low' → logprob: -26.375
    9. '
' → logprob: -26.5
    10. '   ' → logprob: -27.75

Token 418: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.31326285004615784
    2. ' +' → logprob: -1.3132628202438354
    3. ')' → logprob: -14.313262939453125
    4. '+
' → logprob: -15.313262939453125
    5. ' +
' → logprob: -15.813262939453125
    6. '```' → logprob: -17.063262939453125
    7. '
' → logprob: -17.313262939453125
    8. '＋' → logprob: -17.813262939453125
    9. '<|end|>' → logprob: -17.813262939453125
    10. ' ' → logprob: -18.313262939453125

Token 419: ' high' (ID: 1932)
  Prédit: 'high'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'high' → logprob: -3.5597102396423e-05
    2. ' high' → logprob: -10.250035285949707
    3. '(high' → logprob: -16.500036239624023
    4. '.high' → logprob: -21.000036239624023
    5. '/high' → logprob: -21.125036239624023
    6. '   ' → logprob: -21.250036239624023
    7. '_high' → logprob: -21.875036239624023
    8. 'hi' → logprob: -22.125036239624023
    9. ' ' → logprob: -22.250036239624023
    10. '高' → logprob: -22.375036239624023

Token 420: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0564331205387134e-05
    2. ')//' → logprob: -11.50001049041748
    3. ')>>' → logprob: -15.12501049041748
    4. ' )' → logprob: -15.75001049041748
    5. ')
' → logprob: -19.000011444091797
    6. '）' → logprob: -19.750011444091797
    7. ']' → logprob: -21.250011444091797
    8. '//' → logprob: -21.375011444091797
    9. '_)' → logprob: -22.125011444091797
    10. '   ' → logprob: -22.625011444091797

Token 421: ' //' (ID: 602)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005165747134014964
    2. ' //' → logprob: -8.750516891479492
    3. '>>' → logprob: -9.125516891479492
    4. '//' → logprob: -9.250516891479492
    5. ')//' → logprob: -9.875516891479492
    6. ')>>' → logprob: -10.125516891479492
    7. ']' → logprob: -10.250516891479492
    8. ' >>' → logprob: -11.625516891479492
    9. '```' → logprob: -11.750516891479492
    10. ' )' → logprob: -11.875516891479492

Token 422: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.0126840758603066e-05
    2. ' ' → logprob: -10.125040054321289
    3. '   ' → logprob: -18.50004005432129
    4. '```' → logprob: -20.12504005432129
    5. '  ' → logprob: -21.25004005432129
    6. '=' → logprob: -22.00004005432129
    7. '3' → logprob: -22.50004005432129
    8. '۲' → logprob: -22.62504005432129
    9. '
' → logprob: -22.87504005432129
    10. '２' → logprob: -23.12504005432129

Token 423: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.75
    3. '   ' → logprob: -20.5
    4. '```' → logprob: -21.25
    5. '۲' → logprob: -22.875
    6. '２' → logprob: -23.25
    7. '3' → logprob: -23.25
    8. '  ' → logprob: -23.375
    9. '{' → logprob: -23.75
    10. '           ' → logprob: -23.75

Token 424: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.23816217482089996
    2. '
' → logprob: -1.6131621599197388
    3. '<|end|>' → logprob: -4.738162040710449
    4. '            
' → logprob: -6.488162040710449
    5. '       ' → logprob: -7.113162040710449
    6. ',' → logprob: -7.988162040710449
    7. ')' → logprob: -8.11316204071045
    8. '
' → logprob: -8.61316204071045
    9. '<|end|>' → logprob: -8.73816204071045
    10. '               ' → logprob: -8.86316204071045

Token 425: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00013131031300872564
    2. 'mid' → logprob: -9.750131607055664
    3. '       ' → logprob: -10.250131607055664
    4. ' mid' → logprob: -11.375131607055664
    5. '
' → logprob: -11.625131607055664
    6. 'b' → logprob: -12.875131607055664
    7. '            
' → logprob: -13.250131607055664
    8. '               ' → logprob: -13.250131607055664
    9. '   ' → logprob: -13.500131607055664
    10. ',' → logprob: -13.500131607055664

Token 426: ' b' (ID: 287)
  Prédit: 'bucket'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bucket' → logprob: -0.08009351789951324
    2. 'mid' → logprob: -2.5800936222076416
    3. '           ' → logprob: -6.8300933837890625
    4. 'b' (adapté à ' b') → logprob: -9.580093383789062
    5. ' bucket' → logprob: -10.455093383789062
    6. 'if' → logprob: -11.205093383789062
    7. 'buck' → logprob: -12.330093383789062
    8. ' mid' → logprob: -12.705093383789062
    9. '         ' → logprob: -14.080093383789062
    10. '               ' → logprob: -14.830093383789062

Token 427: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3657359778881073
    2. 'ucket' → logprob: -1.2407360076904297
    3. '=' → logprob: -4.11573600769043
    4. 'uck' → logprob: -7.61573600769043
    5. '=b' → logprob: -8.86573600769043
    6. 'uckets' → logprob: -8.99073600769043
    7. 'bucket' → logprob: -11.74073600769043
    8. 'b' → logprob: -11.86573600769043
    9. '_bucket' → logprob: -11.86573600769043
    10. 'uket' → logprob: -11.99073600769043

Token 428: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.014165272004902363
    2. ' self' → logprob: -4.26416540145874
    3. '           ' → logprob: -13.264164924621582
    4. '(self' → logprob: -18.0141658782959
    5. '   ' → logprob: -18.2641658782959
    6. '	self' → logprob: -18.6391658782959
    7. '       ' → logprob: -19.3891658782959
    8. '=self' → logprob: -19.3891658782959
    9. '               ' → logprob: -19.5141658782959
    10. ' ' → logprob: -19.5141658782959

Token 429: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -1.6286106983898208e-05
    2. '_digit' → logprob: -11.250016212463379
    3. '_self' → logprob: -13.500016212463379
    4. '_code' → logprob: -14.000016212463379
    5. '_d' → logprob: -15.125016212463379
    6. '.' → logprob: -15.125016212463379
    7. 'self' → logprob: -15.500016212463379
    8. '_user' → logprob: -16.250017166137695
    9. '.__' → logprob: -17.250017166137695
    10. '_' → logprob: -17.250017166137695

Token 430: 'digit' (ID: 78327)
  Prédit: 'digit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digit' → logprob: -0.0005536287208087742
    2. '_digit' → logprob: -7.500553607940674
    3. 'find' → logprob: -14.875554084777832
    4. ' digit' → logprob: -15.750554084777832
    5. 'digital' → logprob: -17.500553131103516
    6. '_find' → logprob: -17.750553131103516
    7. '-digit' → logprob: -18.000553131103516
    8. 'dig' → logprob: -19.250553131103516
    9. 'Digit' → logprob: -19.250553131103516
    10. '_init' → logprob: -19.500553131103516

Token 431: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.0024888573680073023
    2. 'length' → logprob: -6.00248908996582
    3. 'ength' → logprob: -11.25248908996582
    4. 'Length' → logprob: -16.50248908996582
    5. ' length' → logprob: -17.75248908996582
    6. '_lengths' → logprob: -18.25248908996582
    7. '-length' → logprob: -18.37748908996582
    8. '_LENGTH' → logprob: -18.37748908996582
    9. '_l' → logprob: -19.12748908996582
    10. '```' → logprob: -19.50248908996582

Token 432: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.00036168331280350685
    2. 'uckets' → logprob: -8.375361442565918
    3. 'b' → logprob: -9.125361442565918
    4. 's' → logprob: -10.750361442565918
    5. 'Buckets' → logprob: -14.875361442565918
    6. 'ucket' → logprob: -15.875361442565918
    7. 'buck' → logprob: -16.375362396240234
    8. ' buckets' → logprob: -16.875362396240234
    9. 'ackets' → logprob: -17.625362396240234
    10. '[b' → logprob: -18.000362396240234

Token 433: 'uckets' (ID: 73451)
  Prédit: 'uckets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uckets' → logprob: -4.310693111619912e-05
    2. 'ackets' → logprob: -11.250042915344238
    3. 'uck' → logprob: -11.750042915344238
    4. 'ucket' → logprob: -12.125042915344238
    5. 'u' → logprob: -12.250042915344238
    6. 'length' → logprob: -12.875042915344238
    7. 'b' → logprob: -13.000042915344238
    8. '_length' → logprob: -13.375042915344238
    9. 'uc' → logprob: -13.875042915344238
    10. 'ockets' → logprob: -14.125042915344238

Token 434: '[mid' (ID: 82578)
  Prédit: '[mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[mid' → logprob: -0.00012821101699955761
    2. '[m' → logprob: -9.000127792358398
    3. '[' → logprob: -13.750127792358398
    4. ')[' → logprob: -13.750127792358398
    5. ' [' → logprob: -14.125127792358398
    6. '][' → logprob: -14.500127792358398
    7. '[mem' → logprob: -15.125127792358398
    8. 'mid' → logprob: -15.500127792358398
    9. '[
' → logprob: -15.500127792358398
    10. '```' → logprob: -15.750127792358398

Token 435: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.025791114196181297
    2. ']' → logprob: -3.7757911682128906
    3. ']['' → logprob: -6.025791168212891
    4. ']

' → logprob: -10.52579116821289
    5. ' ]
' → logprob: -10.77579116821289
    6. '           ' → logprob: -10.77579116821289
    7. ']
' → logprob: -10.77579116821289
    8. '       ' → logprob: -11.77579116821289
    9. ' ]' → logprob: -11.90079116821289
    10. '']
' → logprob: -12.02579116821289

Token 436: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00012570773833431304
    2. '       ' → logprob: -9.625125885009766
    3. '
' → logprob: -10.625125885009766
    4. '            
' → logprob: -11.375125885009766
    5. '  
' → logprob: -12.500125885009766
    6. '<|end|>' → logprob: -12.625125885009766
    7. '          ' → logprob: -12.750125885009766
    8. '   ' → logprob: -13.000125885009766
    9. '               ' → logprob: -13.000125885009766
    10. '         ' → logprob: -13.250125885009766

Token 437: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.011257904581725597
    2. ' if' → logprob: -4.761258125305176
    3. '           ' → logprob: -6.261258125305176
    4. 'start' → logprob: -7.636258125305176
    5. '
' → logprob: -8.886258125305176
    6. 'end' → logprob: -9.136258125305176
    7. '            
' → logprob: -13.761258125305176
    8. 'next' → logprob: -14.636258125305176
    9. ' start' → logprob: -15.636258125305176
    10. 'last' → logprob: -16.13625717163086

Token 438: ' b' (ID: 287)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'position' → logprob: -0.13192322850227356
    2. ' position' → logprob: -2.756923198699951
    3. 'b' → logprob: -2.881923198699951
    4. ' b' → logprob: -5.506923198699951
    5. '	position' → logprob: -12.13192367553711
    6. ' ' → logprob: -12.63192367553711
    7. '(position' → logprob: -13.25692367553711
    8. 'pos' → logprob: -13.31942367553711
    9. '   ' → logprob: -13.38192367553711
    10. '.position' → logprob: -14.13192367553711

Token 439: '['' (ID: 1181)
  Prédit: '[''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -1.1472419600977446e-06
    2. '["' → logprob: -14.500000953674316
    3. '[' → logprob: -15.750000953674316
    4. ''s' → logprob: -15.875000953674316
    5. ''' → logprob: -16.000001907348633
    6. '[
' → logprob: -16.875001907348633
    7. 'start' → logprob: -17.125001907348633
    8. ']['' → logprob: -17.250001907348633
    9. '{'' → logprob: -17.250001907348633
    10. '
' → logprob: -17.875001907348633

Token 440: 'start' (ID: 5236)
  Prédit: 'start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -1.2664456789934775e-06
    2. ' start' → logprob: -13.875000953674316
    3. ''' → logprob: -15.750000953674316
    4. '['' → logprob: -16.625001907348633
    5. 'digits' → logprob: -17.875001907348633
    6. ''s' → logprob: -18.500001907348633
    7. '[start' → logprob: -18.625001907348633
    8. '
' → logprob: -18.625001907348633
    9. '```' → logprob: -18.625001907348633
    10. '   ' → logprob: -18.750001907348633

Token 441: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -3.128163257315464e-07
    2. '_position' → logprob: -15.75
    3. '_' → logprob: -17.0
    4. 'pos' → logprob: -17.875
    5. '_p' → logprob: -18.75
    6. '_positions' → logprob: -19.125
    7. '_post' → logprob: -19.25
    8. '```' → logprob: -19.875
    9. 'Pos' → logprob: -20.25
    10. '_POS' → logprob: -20.75

Token 442: '']' (ID: 1089)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.7741884589195251
    2. '<=' → logprob: -0.7741884589195251
    3. ' <=' → logprob: -2.89918851852417
    4. ' >' → logprob: -4.52418851852417
    5. '']' → logprob: -4.77418851852417
    6. ']' → logprob: -6.39918851852417
    7. '+' → logprob: -6.77418851852417
    8. ']<=' → logprob: -8.399188041687012
    9. ''>' → logprob: -9.399188041687012
    10. ' ' → logprob: -9.649188041687012

Token 443: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.0350286103785038
    2. '>' → logprob: -3.5350286960601807
    3. ' <=' → logprob: -5.285028457641602
    4. '+' → logprob: -9.285028457641602
    5. ' >' → logprob: -9.285028457641602
    6. '==' → logprob: -12.035028457641602
    7. ' ' → logprob: -13.660028457641602
    8. ')<=' → logprob: -14.285028457641602
    9. '>b' → logprob: -14.410028457641602
    10. '[' → logprob: -14.535028457641602

Token 444: ' position' (ID: 4010)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'position' → logprob: -0.0067154900170862675
    2. ' position' → logprob: -5.006715297698975
    3. '
' → logprob: -16.756715774536133
    4. '(position' → logprob: -17.631715774536133
    5. '[position' → logprob: -18.006715774536133
    6. '	position' → logprob: -18.256715774536133
    7. '   ' → logprob: -18.756715774536133
    8. '.position' → logprob: -19.256715774536133
    9. '           ' → logprob: -19.381715774536133
    10. ' ' → logprob: -20.131715774536133

Token 445: ' <' (ID: 464)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.6194367408752441
    2. ' <' → logprob: -0.9944367408752441
    3. 'and' → logprob: -2.619436740875244
    4. '<' → logprob: -4.244436740875244
    5. '<=' → logprob: -6.119436740875244
    6. ' <=' → logprob: -6.369436740875244
    7. '           ' → logprob: -8.994436264038086
    8. '               ' → logprob: -9.119436264038086
    9. '<n' → logprob: -9.244436264038086
    10. '<b' → logprob: -9.369436264038086

Token 446: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.020553337410092354
    2. ' b' → logprob: -3.8955533504486084
    3. '           ' → logprob: -11.645553588867188
    4. '               ' → logprob: -14.020553588867188
    5. '(b' → logprob: -14.395553588867188
    6. '                   ' → logprob: -15.270553588867188
    7. '   ' → logprob: -15.395553588867188
    8. '       ' → logprob: -15.770553588867188
    9. '	b' → logprob: -16.270553588867188
    10. '            ' → logprob: -16.270553588867188

Token 447: '['' (ID: 1181)
  Prédit: '[''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -7.107425062713446e-06
    2. '[mid' → logprob: -13.000006675720215
    3. 'b' → logprob: -13.250006675720215
    4. ''s' → logprob: -13.750006675720215
    5. '[' → logprob: -14.375006675720215
    6. ''' → logprob: -15.000006675720215
    7. '[next' → logprob: -15.250006675720215
    8. '[start' → logprob: -15.375006675720215
    9. ''b' → logprob: -15.750006675720215
    10. '["' → logprob: -16.00000762939453

Token 448: 'start' (ID: 5236)
  Prédit: 'start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.05568179488182068
    2. '['' → logprob: -3.8056817054748535
    3. 'b' → logprob: -4.1806817054748535
    4. ''' → logprob: -4.9306817054748535
    5. ''b' → logprob: -4.9306817054748535
    6. ''s' → logprob: -6.1806817054748535
    7. ' start' → logprob: -10.805682182312012
    8. ' '' → logprob: -10.805682182312012
    9. ''d' → logprob: -11.430682182312012
    10. ''end' → logprob: -11.680682182312012

Token 449: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -4.167648876318708e-05
    2. '['' → logprob: -10.250041961669922
    3. 'pos' → logprob: -12.250041961669922
    4. 's' → logprob: -14.000041961669922
    5. 'Pos' → logprob: -15.875041961669922
    6. ''_' → logprob: -16.125041961669922
    7. '{'' → logprob: -16.250041961669922
    8. '['_' → logprob: -17.000041961669922
    9. ''' → logprob: -17.125041961669922
    10. ''s' → logprob: -17.500041961669922

Token 450: '']' (ID: 1089)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.4209839701652527
    2. '+' → logprob: -1.2959840297698975
    3. '']' → logprob: -2.6709840297698975
    4. ''+' → logprob: -8.170984268188477
    5. ''' → logprob: -8.420984268188477
    6. ']' → logprob: -9.545984268188477
    7. ']+' → logprob: -10.170984268188477
    8. '}' → logprob: -10.545984268188477
    9. ' plus' → logprob: -10.545984268188477
    10. 'plus' → logprob: -10.920984268188477

Token 451: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2531261146068573
    2. ' +' → logprob: -1.5031261444091797
    3. '+b' → logprob: -6.75312614440918
    4. '+self' → logprob: -12.00312614440918
    5. '   ' → logprob: -12.75312614440918
    6. 'plus' → logprob: -13.12812614440918
    7. 'b' → logprob: -13.37812614440918
    8. '+c' → logprob: -13.50312614440918
    9. '[b' → logprob: -13.62812614440918
    10. '           ' → logprob: -13.62812614440918

Token 452: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0001584850688232109
    2. ' b' → logprob: -8.750158309936523
    3. '	b' → logprob: -23.250158309936523
    4. '   ' → logprob: -23.500158309936523
    5. '           ' → logprob: -23.875158309936523
    6. 'int' → logprob: -24.375158309936523
    7. '
' → logprob: -24.625158309936523
    8. ' ' → logprob: -24.750158309936523
    9. '       ' → logprob: -24.875158309936523
    10. '(b' → logprob: -25.250158309936523

Token 453: '['' (ID: 1181)
  Prédit: '[''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -5.796184723294573e-06
    2. 'b' → logprob: -13.375005722045898
    3. '[b' → logprob: -13.375005722045898
    4. '[' → logprob: -14.000005722045898
    5. '['_' → logprob: -14.375005722045898
    6. ''b' → logprob: -15.125005722045898
    7. ''' → logprob: -15.625005722045898
    8. '[
' → logprob: -15.875005722045898
    9. '_' → logprob: -16.0000057220459
    10. '["' → logprob: -16.2500057220459

Token 454: 'digits' (ID: 135574)
  Prédit: 'digits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digits' → logprob: -0.4289087951183319
    2. 'b' → logprob: -1.3039088249206543
    3. ''d' → logprob: -2.6789088249206543
    4. '['' → logprob: -4.928908824920654
    5. ''b' → logprob: -7.053908824920654
    6. ''' → logprob: -7.803908824920654
    7. ' digits' → logprob: -10.178908348083496
    8. ''s' → logprob: -10.553908348083496
    9. ' b' → logprob: -10.803908348083496
    10. 'dig' → logprob: -11.178908348083496

Token 455: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -3.128163257315464e-07
    2. ''_' → logprob: -16.125
    3. '_' → logprob: -16.625
    4. ' _' → logprob: -17.0
    5. ']_' → logprob: -17.875
    6. 'In' → logprob: -18.25
    7. 's' → logprob: -18.875
    8. '_IN' → logprob: -19.5
    9. '   ' → logprob: -19.75
    10. ']' → logprob: -20.0

Token 456: '_bucket' (ID: 95435)
  Prédit: '_bucket'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bucket' → logprob: -9.007317567011341e-05
    2. 'bucket' → logprob: -9.375089645385742
    3. '_b' → logprob: -12.500089645385742
    4. '_' → logprob: -14.000089645385742
    5. 'b' → logprob: -15.500089645385742
    6. '```' → logprob: -16.250089645385742
    7. '   ' → logprob: -16.625089645385742
    8. '_BUCKET' → logprob: -16.875089645385742
    9. '_block' → logprob: -17.250089645385742
    10. ' bucket' → logprob: -17.500089645385742

Token 457: '']:
' (ID: 44766)
  Prédit: ']:
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.5876354575157166
    2. '']:
' → logprob: -1.2126355171203613
    3. ':
' → logprob: -2.4626355171203613
    4. ':' → logprob: -3.5876355171203613
    5. ']:' → logprob: -3.5876355171203613
    6. '']:' → logprob: -5.712635517120361
    7. '():
' → logprob: -7.212635517120361
    8. '"]:
' → logprob: -7.587635517120361
    9. '       ' → logprob: -7.962635517120361
    10. '<|end|>' → logprob: -8.087635040283203

Token 458: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.8056243658065796
    2. '           ' → logprob: -0.9306243658065796
    3. ':' → logprob: -2.555624485015869
    4. ':
' → logprob: -3.180624485015869
    5. '<|end|>' → logprob: -4.180624485015869
    6. ' low' → logprob: -4.805624485015869
    7. '):
' → logprob: -4.805624485015869
    8. ')' → logprob: -6.680624485015869
    9. '(low' → logprob: -6.680624485015869
    10. '
' → logprob: -7.055624485015869

Token 459: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.36895686388015747
    2. ' return' → logprob: -1.3689568042755127
    3. '           ' → logprob: -3.6189568042755127
    4. '               ' → logprob: -3.6189568042755127
    5. '   ' → logprob: -7.993957042694092
    6. '	return' → logprob: -8.743956565856934
    7. '                   ' → logprob: -10.243956565856934
    8. '{return' → logprob: -11.868956565856934
    9. '       ' → logprob: -12.243956565856934
    10. ':return' → logprob: -12.868956565856934

Token 460: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.002477796748280525
    2. ' b' → logprob: -6.002477645874023
    3. 'self' → logprob: -13.127477645874023
    4. ' self' → logprob: -15.502477645874023
    5. '	b' → logprob: -17.877477645874023
    6. '   ' → logprob: -19.002477645874023
    7. '           ' → logprob: -19.127477645874023
    8. ' ' → logprob: -19.752477645874023
    9. '       ' → logprob: -20.252477645874023
    10. '{' → logprob: -20.877477645874023

Token 461: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.6047699318733066e-05
    2. '
' → logprob: -11.750016212463379
    3. 'elif' → logprob: -12.625016212463379
    4. ' elif' → logprob: -13.375016212463379
    5. '            
' → logprob: -13.875016212463379
    6. '       ' → logprob: -13.875016212463379
    7. ' if' → logprob: -14.625016212463379
    8. '               ' → logprob: -15.750016212463379
    9. '          ' → logprob: -16.500015258789062
    10. ',' → logprob: -16.625015258789062

Token 462: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -7.457669562427327e-05
    2. 'elif' → logprob: -9.75007438659668
    3. ' elif' → logprob: -12.00007438659668
    4. '   ' → logprob: -13.00007438659668
    5. '       ' → logprob: -13.25007438659668
    6. ' if' → logprob: -13.37507438659668
    7. '```' → logprob: -13.37507438659668
    8. '
' → logprob: -13.37507438659668
    9. 'if' → logprob: -15.00007438659668
    10. '{
' → logprob: -15.37507438659668

Token 463: ' elif' (ID: 9497)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8315171003341675
    2. 'elif' (adapté à ' elif') → logprob: -1.5815171003341675
    3. ' if' → logprob: -1.8315171003341675
    4. '           ' → logprob: -2.081517219543457
    5. 'low' → logprob: -3.456517219543457
    6. '       ' → logprob: -3.956517219543457
    7. ' elif' → logprob: -4.331517219543457
    8. ' low' → logprob: -4.956517219543457
    9. '   ' → logprob: -6.456517219543457
    10. 'else' → logprob: -6.706517219543457

Token 464: ' position' (ID: 4010)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'position' → logprob: -0.29109400510787964
    2. ' position' → logprob: -1.6660940647125244
    3. 'b' → logprob: -2.9160940647125244
    4. ' b' → logprob: -4.666093826293945
    5. '   ' → logprob: -11.666093826293945
    6. ' ' → logprob: -12.541093826293945
    7. '	position' → logprob: -12.916093826293945
    8. 'pos' → logprob: -14.291093826293945
    9. '[position' → logprob: -15.166093826293945
    10. '  ' → logprob: -15.166093826293945

Token 465: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.009851828217506409
    2. '<' → logprob: -4.634851932525635
    3. ' >' → logprob: -9.634851455688477
    4. '>' → logprob: -11.384851455688477
    5. '[' → logprob: -12.009851455688477
    6. ' >=' → logprob: -12.634851455688477
    7. '<b' → logprob: -12.634851455688477
    8. ' ' → logprob: -12.759851455688477
    9. ' ' → logprob: -13.259851455688477
    10. '   ' → logprob: -14.884851455688477

Token 466: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.07888978719711304
    2. ' b' → logprob: -2.578889846801758
    3. '           ' → logprob: -17.453889846801758
    4. '            ' → logprob: -19.953889846801758
    5. '	b' → logprob: -20.578889846801758
    6. ')b' → logprob: -20.578889846801758
    7. '               ' → logprob: -21.578889846801758
    8. '=b' → logprob: -21.703889846801758
    9. 'self' → logprob: -22.703889846801758
    10. '       ' → logprob: -23.078889846801758

Token 467: '['' (ID: 1181)
  Prédit: '[''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -1.4617256056226324e-05
    2. ''' → logprob: -11.875014305114746
    3. ''s' → logprob: -11.875014305114746
    4. ' ['' → logprob: -14.750014305114746
    5. '[' → logprob: -16.750015258789062
    6. '   ' → logprob: -17.125015258789062
    7. ' '' → logprob: -17.250015258789062
    8. '[
' → logprob: -17.375015258789062
    9. '{'' → logprob: -17.375015258789062
    10. 'def' → logprob: -17.875015258789062

Token 468: 'start' (ID: 5236)
  Prédit: 'start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.06137232109904289
    2. ''' → logprob: -3.3113722801208496
    3. '['' → logprob: -3.8113722801208496
    4. ''s' → logprob: -7.06137228012085
    5. '[start' → logprob: -9.561372756958008
    6. ''b' → logprob: -12.186372756958008
    7. ''end' → logprob: -12.811372756958008
    8. '{'' → logprob: -13.436372756958008
    9. ''m' → logprob: -13.561372756958008
    10. '_start' → logprob: -13.686372756958008

Token 469: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -3.2855416066013277e-05
    2. '['' → logprob: -10.375032424926758
    3. ''' → logprob: -14.125032424926758
    4. 'pos' → logprob: -14.625032424926758
    5. ''_' → logprob: -15.500032424926758
    6. ''s' → logprob: -15.750032424926758
    7. 'Pos' → logprob: -16.750032424926758
    8. '{'' → logprob: -16.875032424926758
    9. '.pos' → logprob: -18.375032424926758
    10. '['_' → logprob: -18.500032424926758

Token 470: '']:
' (ID: 44766)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5137367844581604
    2. ':
' → logprob: -1.0137367248535156
    3. '):
' → logprob: -3.7637367248535156
    4. '<|end|>' → logprob: -4.763736724853516
    5. ']:
' → logprob: -5.638736724853516
    6. ']:' → logprob: -6.888736724853516
    7. '):' → logprob: -7.513736724853516
    8. ':return' → logprob: -8.388736724853516
    9. '():
' → logprob: -8.513736724853516
    10. 's' → logprob: -8.638736724853516

Token 471: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.049214232712984085
    2. ' high' → logprob: -3.0492141246795654
    3. 'high' → logprob: -7.5492143630981445
    4. '(high' → logprob: -10.049214363098145
    5. '           ' → logprob: -10.924214363098145
    6. '                   ' → logprob: -12.049214363098145
    7. 'High' → logprob: -12.049214363098145
    8. '.high' → logprob: -12.424214363098145
    9. '   ' → logprob: -12.549214363098145
    10. '
' → logprob: -12.674214363098145

Token 472: ' high' (ID: 1932)
  Prédit: 'high'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'high' (adapté à ' high') → logprob: -0.029751067981123924
    2. ' high' → logprob: -3.5297510623931885
    3. 'High' → logprob: -15.65475082397461
    4. '_high' → logprob: -15.77975082397461
    5. '.high' → logprob: -16.27975082397461
    6. '               ' → logprob: -16.40475082397461
    7. '
' → logprob: -17.27975082397461
    8. '           ' → logprob: -17.27975082397461
    9. '(high' → logprob: -17.27975082397461
    10. '   ' → logprob: -17.65475082397461

Token 473: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0024968255311250687
    2. ' =' → logprob: -6.002496719360352
    3. ',' → logprob: -11.002496719360352
    4. '               ' → logprob: -12.877496719360352
    5. ' ' → logprob: -14.002496719360352
    6. '```' → logprob: -14.877496719360352
    7. ' ,' → logprob: -15.252496719360352
    8. '                ' → logprob: -16.00249671936035
    9. '           ' → logprob: -16.62749671936035
    10. '   ' → logprob: -16.62749671936035

Token 474: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.011047814972698689
    2. ' mid' → logprob: -4.511047840118408
    3. '[mid' → logprob: -18.13604736328125
    4. '_mid' → logprob: -19.01104736328125
    5. '(mid' → logprob: -19.26104736328125
    6. 'm' → logprob: -20.88604736328125
    7. '   ' → logprob: -21.01104736328125
    8. '.mid' → logprob: -21.63604736328125
    9. ' ' → logprob: -22.13604736328125
    10. '           ' → logprob: -22.38604736328125

Token 475: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.2092515081167221
    2. '=' → logprob: -2.2092514038085938
    3. ' -' → logprob: -2.5842514038085938
    4. ' =' → logprob: -6.709251403808594
    5. '               ' → logprob: -6.834251403808594
    6. '           ' → logprob: -7.209251403808594
    7. ',' → logprob: -8.584251403808594
    8. ' ' → logprob: -9.084251403808594
    9. '                   ' → logprob: -9.584251403808594
    10. '+' → logprob: -10.709251403808594

Token 476: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.547789674485102e-05
    2. ' ' → logprob: -10.250035285949707
    3. '```' → logprob: -18.250036239624023
    4. '<|end|>' → logprob: -19.000036239624023
    5. '=' → logprob: -21.125036239624023
    6. '[' → logprob: -21.125036239624023
    7. '   ' → logprob: -21.250036239624023
    8. '۱' → logprob: -21.375036239624023
    9. '+' → logprob: -21.937536239624023
    10. '0' → logprob: -22.125036239624023

Token 477: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. '```' → logprob: -19.750001907348633
    4. '<|end|>' → logprob: -21.625001907348633
    5. '
' → logprob: -22.250001907348633
    6. '۱' → logprob: -22.562501907348633
    7. '   ' → logprob: -22.687501907348633
    8. '0' → logprob: -23.250001907348633
    9. ',' → logprob: -23.437501907348633
    10. '{' → logprob: -23.750001907348633

Token 478: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2895614206790924
    2. 'else' → logprob: -1.66456139087677
    3. ' else' → logprob: -2.7895615100860596
    4. '               ' → logprob: -7.5395612716674805
    5. 'elif' → logprob: -9.91456127166748
    6. '       ' → logprob: -10.03956127166748
    7. '
' → logprob: -11.66456127166748
    8. '	       ' → logprob: -11.66456127166748
    9. ' elif' → logprob: -11.66456127166748
    10. '<|end|>' → logprob: -11.66456127166748

Token 479: '           ' (ID: 352)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.2278972715139389
    2. ' else' → logprob: -1.9778972864151
    3. '           ' → logprob: -2.7278971672058105
    4. '```' → logprob: -10.852897644042969
    5. '               ' → logprob: -10.977897644042969
    6. '       ' → logprob: -11.102897644042969
    7. 'elif' → logprob: -11.602897644042969
    8. '   ' → logprob: -11.852897644042969
    9. '	else' → logprob: -12.352897644042969
    10. ' elif' → logprob: -13.727897644042969

Token 480: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.029776757583022118
    2. ' else' → logprob: -3.5297768115997314
    3. '           ' → logprob: -11.154776573181152
    4. '       ' → logprob: -11.654776573181152
    5. '	else' → logprob: -12.904776573181152
    6. '   ' → logprob: -15.154776573181152
    7. 'elif' → logprob: -15.529776573181152
    8. '               ' → logprob: -16.02977752685547
    9. '```' → logprob: -16.65477752685547
    10. '_else' → logprob: -17.27977752685547

Token 481: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5870577096939087
    2. ':
' → logprob: -1.3370577096939087
    3. '               ' → logprob: -1.7120577096939087
    4. ' low' → logprob: -7.462057590484619
    5. '              ' → logprob: -9.587058067321777
    6. 'low' → logprob: -9.837058067321777
    7. '           ' → logprob: -9.962058067321777
    8. ':
' → logprob: -10.337058067321777
    9. '                   ' → logprob: -10.462058067321777
    10. ' :' → logprob: -10.837058067321777

Token 482: '               ' (ID: 506)
  Prédit: ' low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' low' → logprob: -0.3879130184650421
    2. 'low' → logprob: -1.1379129886627197
    3. '               ' → logprob: -6.887913227081299
    4. '   ' → logprob: -11.51291275024414
    5. '(low' → logprob: -12.51291275024414
    6. 'Low' → logprob: -12.88791275024414
    7. '           ' → logprob: -13.76291275024414
    8. '.low' → logprob: -13.88791275024414
    9. '                   ' → logprob: -14.13791275024414
    10. '    ' → logprob: -14.63791275024414

Token 483: ' low' (ID: 4465)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'low' (adapté à ' low') → logprob: -0.25192928314208984
    2. ' low' → logprob: -1.5019292831420898
    3. '   ' → logprob: -16.626930236816406
    4. 'Low' → logprob: -17.876930236816406
    5. '               ' → logprob: -18.376930236816406
    6. '    ' → logprob: -18.501930236816406
    7. '.low' → logprob: -18.626930236816406
    8. '_low' → logprob: -18.751930236816406
    9. '(low' → logprob: -18.876930236816406
    10. '低' → logprob: -19.126930236816406

Token 484: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25192907452583313
    2. '=' → logprob: -1.5019290447235107
    3. ' ' → logprob: -19.876928329467773
    4. '<|end|>' → logprob: -20.001928329467773
    5. '   ' → logprob: -20.876928329467773
    6. '           ' → logprob: -21.126928329467773
    7. '            ' → logprob: -21.251928329467773
    8. ',' → logprob: -21.376928329467773
    9. '    ' → logprob: -21.626928329467773
    10. ')' → logprob: -21.626928329467773

Token 485: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.011048289015889168
    2. ' mid' → logprob: -4.511048316955566
    3. '(mid' → logprob: -14.886048316955566
    4. '[mid' → logprob: -16.13604736328125
    5. '_mid' → logprob: -18.01104736328125
    6. ' midpoint' → logprob: -18.51104736328125
    7. ' ' → logprob: -18.51104736328125
    8. '.mid' → logprob: -19.88604736328125
    9. 'middle' → logprob: -19.88604736328125
    10. 'm' → logprob: -19.88604736328125

Token 486: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6931481957435608
    2. ' +' → logprob: -0.6931481957435608
    3. '=' → logprob: -14.568148612976074
    4. '1' → logprob: -15.693148612976074
    5. '+
' → logprob: -17.068147659301758
    6. '+=' → logprob: -17.068147659301758
    7. ' +=' → logprob: -17.193147659301758
    8. '＋' → logprob: -17.193147659301758
    9. '               ' → logprob: -17.318147659301758
    10. ' +
' → logprob: -17.318147659301758

Token 487: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0040785204619169235
    2. ' ' → logprob: -5.504078388214111
    3. '0' → logprob: -16.254077911376953
    4. '```' → logprob: -17.004077911376953
    5. '=' → logprob: -19.254077911376953
    6. '<|end|>' → logprob: -19.379077911376953
    7. '+' → logprob: -20.504077911376953
    8. '   ' → logprob: -21.004077911376953
    9. '           ' → logprob: -21.254077911376953
    10. '۱' → logprob: -21.379077911376953

Token 488: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '0' → logprob: -19.375001907348633
    4. '```' → logprob: -19.625001907348633
    5. '   ' → logprob: -20.875001907348633
    6. '  ' → logprob: -22.875001907348633
    7. '``' → logprob: -22.875001907348633
    8. '۱' → logprob: -23.312501907348633
    9. '       ' → logprob: -23.375001907348633
    10. '+' → logprob: -23.437501907348633

Token 489: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 490: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 491: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01710647903382778
    2. 'return' → logprob: -4.642106533050537
    3. 'raise' → logprob: -5.267106533050537
    4. ' raise' → logprob: -6.392106533050537
    5. ' return' → logprob: -8.017106056213379
    6. '{return' → logprob: -10.267106056213379
    7. '#' (adapté à ' #') → logprob: -10.267106056213379
    8. '<|end|>' → logprob: -10.267106056213379
    9. '   ' → logprob: -10.892106056213379
    10. '```' → logprob: -11.642106056213379

Token 492: ' If' (ID: 1843)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'raise' → logprob: -0.20166581869125366
    2. 'return' → logprob: -1.7016658782958984
    3. '#' → logprob: -8.701665878295898
    4. ' raise' → logprob: -9.451665878295898
    5. '       ' → logprob: -12.201665878295898
    6. ' return' → logprob: -13.326665878295898
    7. '   ' → logprob: -14.326665878295898
    8. 'Raise' → logprob: -15.701665878295898
    9. 'assert' → logprob: -16.3266658782959
    10. '	raise' → logprob: -16.7016658782959

Token 493: ' none' (ID: 12698)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.6582692861557007
    2. 'low' → logprob: -1.0332692861557007
    3. 'position' → logprob: -2.2832694053649902
    4. 'None' → logprob: -4.53326940536499
    5. 'self' → logprob: -4.78326940536499
    6. '_low' → logprob: -6.03326940536499
    7. 'True' → logprob: -7.40826940536499
    8. ' low' → logprob: -7.40826940536499
    9. 'positions' → logprob: -8.158268928527832
    10. ' False' → logprob: -8.158268928527832

Token 494: ' found' (ID: 2491)
  Prédit: 'found'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'found' → logprob: -0.25562408566474915
    2. ' found' → logprob: -2.6306240558624268
    3. '       ' → logprob: -2.8806240558624268
    4. ' is' → logprob: -3.5056240558624268
    5. ':' → logprob: -3.6306240558624268
    6. '_found' → logprob: -4.255624294281006
    7. 'def' → logprob: -5.130624294281006
    8. 'raise' → logprob: -5.255624294281006
    9. ' was' → logprob: -5.755624294281006
    10. '   ' → logprob: -6.130624294281006

Token 495: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6657013297080994
    2. '       ' → logprob: -1.4157013893127441
    3. ':
' → logprob: -2.165701389312744
    4. ':' → logprob: -2.665701389312744
    5. ' raise' → logprob: -4.290701389312744
    6. ' return' → logprob: -4.415701389312744
    7. ':return' → logprob: -4.415701389312744
    8. 'raise' → logprob: -4.540701389312744
    9. 'return' → logprob: -5.040701389312744
    10. '           ' → logprob: -6.915701389312744

Token 496: ' fallback' (ID: 66264)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.20962084829807281
    2. 'raise' → logprob: -1.7096208333969116
    3. ' return' → logprob: -5.209620952606201
    4. ' raise' → logprob: -5.959620952606201
    5. '       ' → logprob: -9.084620475769043
    6. '#' → logprob: -11.834620475769043
    7. 'None' → logprob: -12.334620475769043
    8. '           ' → logprob: -13.334620475769043
    9. '   ' → logprob: -13.459620475769043
    10. '{return' → logprob: -14.459620475769043

Token 497: ' to' (ID: 316)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.369500994682312
    2. 'return' → logprob: -1.244500994682312
    3. '       ' → logprob: -3.9945011138916016
    4. '{return' → logprob: -6.369501113891602
    5. ':return' → logprob: -7.744501113891602
    6. '{' → logprob: -9.244501113891602
    7. '{
' → logprob: -10.244501113891602
    8. 'raise' → logprob: -10.494501113891602
    9. ':' → logprob: -10.869501113891602
    10. ' for' → logprob: -11.119501113891602

Token 498: ' last' (ID: 2174)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.033973921090364456
    2. 'None' → logprob: -3.4089739322662354
    3. '{
' → logprob: -8.408973693847656
    4. '{'' → logprob: -9.783973693847656
    5. ' self' → logprob: -10.783973693847656
    6. '{' → logprob: -11.158973693847656
    7. '{}' → logprob: -11.908973693847656
    8. ' None' → logprob: -12.283973693847656
    9. '{"' → logprob: -14.408973693847656
    10. '{}
' → logprob: -14.533973693847656

Token 499: ' bucket' (ID: 28257)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.31338614225387573
    2. 'return' → logprob: -1.3133862018585205
    3. '   ' → logprob: -9.563385963439941
    4. '       ' → logprob: -10.063385963439941
    5. '{return' → logprob: -12.938385963439941
    6. ':return' → logprob: -12.938385963439941
    7. '
' → logprob: -13.063385963439941
    8. 'self' → logprob: -13.938385963439941
    9. ' self' → logprob: -14.063385963439941
    10. '	return' → logprob: -14.313385963439941

Token 500: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08968852460384369
    2. ' return' → logprob: -2.589688539505005
    3. 'return' → logprob: -4.589688301086426
    4. '   ' → logprob: -8.214688301086426
    5. '
' → logprob: -9.089688301086426
    6. '        
' → logprob: -9.714688301086426
    7. '	return' → logprob: -10.214688301086426
    8. '<|end|>' → logprob: -10.464688301086426
    9. '{return' → logprob: -10.464688301086426
    10. ':return' → logprob: -10.589688301086426

Token 501: 'should' (ID: 10618)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.12932747602462769
    2. ' return' → logprob: -2.1293275356292725
    3. 'self' → logprob: -6.504327297210693
    4. '       ' → logprob: -7.129327297210693
    5. ' self' → logprob: -9.504327774047852
    6. ')' → logprob: -11.754327774047852
    7. '           ' → logprob: -12.129327774047852
    8. '{return' → logprob: -12.129327774047852
    9. ')return' → logprob: -13.504327774047852
    10. ':return' → logprob: -13.754327774047852

Token 502: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.47432607412338257
    2. ' not' → logprob: -0.9743260741233826
    3. 'never' → logprob: -9.099326133728027
    4. ' never' → logprob: -9.349326133728027
    5. 'raise' → logprob: -10.224326133728027
    6. 'n't' → logprob: -11.474326133728027
    7. ' raise' → logprob: -13.349326133728027
    8. '_not' → logprob: -13.974326133728027
    9. 'return' → logprob: -15.599326133728027
    10. '```' → logprob: -15.599326133728027

Token 503: ' happen' (ID: 5659)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.26407432556152344
    2. ' happen' → logprob: -1.7640743255615234
    3. 'occur' → logprob: -3.1390743255615234
    4. 'raise' → logprob: -4.264074325561523
    5. 'be' → logprob: -5.889074325561523
    6. ' be' → logprob: -8.514074325561523
    7. ' occur' → logprob: -8.889074325561523
    8. 'reach' → logprob: -9.264074325561523
    9. ' raise' → logprob: -10.014074325561523
    10. 'normally' → logprob: -10.139074325561523

Token 504: ' given' (ID: 4335)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06673040241003036
    2. ')
' → logprob: -3.316730499267578
    3. '       ' → logprob: -3.566730499267578
    4. '   ' → logprob: -11.941730499267578
    5. ' if' → logprob: -12.566730499267578
    6. '):
' → logprob: -12.566730499267578
    7. ')return' → logprob: -12.566730499267578
    8. ' )' → logprob: -12.941730499267578
    9. ').' → logprob: -12.941730499267578
    10. ' because' → logprob: -13.316730499267578

Token 505: ' constraints' (ID: 31060)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.005764422472566366
    2. ' self' → logprob: -6.630764484405518
    3. 'position' → logprob: -6.630764484405518
    4. '10' → logprob: -6.880764484405518
    5. 'the' → logprob: -7.005764484405518
    6. 'range' → logprob: -7.380764484405518
    7. 'positions' → logprob: -8.75576400756836
    8. 'b' → logprob: -9.00576400756836
    9. '1' → logprob: -9.25576400756836
    10. 'start' → logprob: -9.75576400756836

Token 506: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01050014141947031
    2. '       ' → logprob: -4.635499954223633
    3. ')
' → logprob: -7.260499954223633
    4. ' )' → logprob: -10.885499954223633
    5. ')return' → logprob: -12.260499954223633
    6. '   ' → logprob: -12.510499954223633
    7. ' return' → logprob: -12.635499954223633
    8. ').' → logprob: -12.635499954223633
    9. 'return' → logprob: -12.760499954223633
    10. '):
' → logprob: -13.760499954223633

Token 507: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.35384321212768555
    2. 'return' → logprob: -1.3538432121276855
    3. ' return' → logprob: -3.2288432121276855
    4. '{return' → logprob: -9.478843688964844
    5. '   ' → logprob: -10.478843688964844
    6. ':return' → logprob: -10.478843688964844
    7. '	return' → logprob: -11.103843688964844
    8. '```' → logprob: -12.228843688964844
    9. '<|end|>' → logprob: -12.478843688964844
    10. '        
' → logprob: -12.728843688964844

Token 508: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0005985465249978006
    2. ' return' → logprob: -7.500598430633545
    3. '       ' → logprob: -10.000598907470703
    4. '   ' → logprob: -16.625598907470703
    5. '	return' → logprob: -18.000598907470703
    6. '           ' → logprob: -19.375598907470703
    7. '
' → logprob: -19.875598907470703
    8. '{return' → logprob: -20.125598907470703
    9. ':return' → logprob: -20.375598907470703
    10. '```' → logprob: -20.625598907470703

Token 509: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -9.627176768844947e-05
    2. ' self' → logprob: -9.250096321105957
    3. '   ' → logprob: -17.25009536743164
    4. '       ' → logprob: -17.50009536743164
    5. ' ' → logprob: -19.62509536743164
    6. 'None' → logprob: -20.00009536743164
    7. '           ' → logprob: -20.87509536743164
    8. '{}' → logprob: -20.87509536743164
    9. '	self' → logprob: -21.25009536743164
    10. '
' → logprob: -22.12509536743164

Token 510: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -1.9361264946837764e-07
    2. ')._' → logprob: -16.375
    3. ']._' → logprob: -16.625
    4. '.' → logprob: -17.375
    5. '.__' → logprob: -18.125
    6. '_' → logprob: -18.5
    7. '._
' → logprob: -18.625
    8. 'class' → logprob: -19.25
    9. '_digit' → logprob: -19.25
    10. ' .' → logprob: -19.5

Token 511: 'digit' (ID: 78327)
  Prédit: 'digit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digit' → logprob: -8.518582762917504e-05
    2. '_digit' → logprob: -9.37508487701416
    3. 'find' → logprob: -16.000085830688477
    4. 'digital' → logprob: -16.375085830688477
    5. ' digit' → logprob: -17.125085830688477
    6. '-digit' → logprob: -17.875085830688477
    7. '_find' → logprob: -18.625085830688477
    8. 'dig' → logprob: -18.750085830688477
    9. 'd' → logprob: -19.750085830688477
    10. 'igit' → logprob: -20.000085830688477

Token 512: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -5.200166469876422e-06
    2. 'length' → logprob: -12.250004768371582
    3. 'ength' → logprob: -15.000004768371582
    4. 'Length' → logprob: -18.7500057220459
    5. '_l' → logprob: -19.3750057220459
    6. '```' → logprob: -19.3750057220459
    7. '_LENGTH' → logprob: -19.7500057220459
    8. '_lengths' → logprob: -20.3750057220459
    9. ' length' → logprob: -20.6250057220459
    10. '\' → logprob: -21.1250057220459

Token 513: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -1.5048530030981055e-06
    2. 'b' → logprob: -13.500001907348633
    3. '_length' → logprob: -16.875001907348633
    4. 'Buckets' → logprob: -17.875001907348633
    5. '_bucket' → logprob: -18.625001907348633
    6. ' buckets' → logprob: -19.000001907348633
    7. '```' → logprob: -19.625001907348633
    8. '_sources' → logprob: -19.750001907348633
    9. 'uckets' → logprob: -19.750001907348633
    10. 's' → logprob: -20.250001907348633

Token 514: 'uckets' (ID: 73451)
  Prédit: 'uckets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uckets' → logprob: -6.988221684878226e-06
    2. 'u' → logprob: -13.125006675720215
    3. 'uck' → logprob: -13.500006675720215
    4. 'ockets' → logprob: -13.625006675720215
    5. 'ackets' → logprob: -13.875006675720215
    6. 'ucket' → logprob: -14.500006675720215
    7. 'b' → logprob: -15.125006675720215
    8. 'uckles' → logprob: -15.375006675720215
    9. 'Buckets' → logprob: -16.00000762939453
    10. 'uc' → logprob: -16.62500762939453

Token 515: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -1.8624639324116288e-06
    2. '[' → logprob: -13.375001907348633
    3. '-' → logprob: -15.375001907348633
    4. '0' → logprob: -19.375001907348633
    5. '][-' → logprob: -20.250001907348633
    6. '[
' → logprob: -20.625001907348633
    7. ' [-' → logprob: -21.000001907348633
    8. '[len' → logprob: -21.000001907348633
    9. '```' → logprob: -21.500001907348633
    10. '[:-' → logprob: -22.500001907348633

Token 516: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.375
    3. '2' → logprob: -19.375
    4. '   ' → logprob: -19.5
    5. '```' → logprob: -19.75
    6. '0' → logprob: -19.875
    7. '１' → logprob: -20.25
    8. '
' → logprob: -21.125
    9. '  ' → logprob: -21.1875
    10. '۱' → logprob: -21.1875

Token 517: ']


' (ID: 52447)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.4956398010253906
    2. ')' → logprob: -0.9956398010253906
    3. '}' → logprob: -3.8706398010253906
    4. '<|end|>' → logprob: -8.49563980102539
    5. '])' → logprob: -8.74563980102539
    6. '）' → logprob: -10.37063980102539
    7. ']
' → logprob: -10.99563980102539
    8. '']' → logprob: -11.24563980102539
    9. '})' → logprob: -11.37063980102539
    10. ')
' → logprob: -11.62063980102539

Token 518: 'class' (ID: 1444)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9679800271987915
    2. '<|end|>' → logprob: -0.9679800271987915
    3. 'def' → logprob: -1.9679800271987915
    4. 'class' → logprob: -2.842979907989502
    5. '```' → logprob: -4.217979907989502
    6. '<|end|>' → logprob: -4.717979907989502
    7. 'a' → logprob: -5.592979907989502
    8. 'c' → logprob: -5.967979907989502
    9. '   ' → logprob: -5.967979907989502
    10. '
' → logprob: -6.842979907989502

Token 519: ' Input' (ID: 10090)
  Prédit: ' Digit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Digit' → logprob: -0.7115039229393005
    2. ' Cham' → logprob: -1.5865039825439453
    3. 'Digit' → logprob: -1.8365039825439453
    4. 'Cham' → logprob: -3.7115039825439453
    5. ' Fraction' → logprob: -4.586503982543945
    6. ' Solution' → logprob: -4.586503982543945
    7. ' Multip' → logprob: -5.086503982543945
    8. 'Solution' → logprob: -5.336503982543945
    9. 'Constant' → logprob: -5.461503982543945
    10. ' ' → logprob: -5.461503982543945

Token 520: 'Parser' (ID: 9231)
  Prédit: 'Reader'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Reader' → logprob: -0.12523113191127777
    2. 'Handler' → logprob: -3.7502310276031494
    3. 'Parser' → logprob: -3.7502310276031494
    4. 'Processor' → logprob: -3.8752310276031494
    5. ':' → logprob: -4.5002312660217285
    6. 'Data' → logprob: -4.6252312660217285
    7. 'Stream' → logprob: -4.7502312660217285
    8. 'Buffer' → logprob: -5.0002312660217285
    9. 'Source' → logprob: -5.2502312660217285
    10. 'Tokenizer' → logprob: -5.8752312660217285

Token 521: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0031899516470730305
    2. ':
' → logprob: -5.753190040588379
    3. ':def' → logprob: -11.878190040588379
    4. ':

' → logprob: -14.003190040588379
    5. '():' → logprob: -14.003190040588379
    6. '(object' → logprob: -14.003190040588379
    7. '<|end|>' → logprob: -14.128190040588379
    8. '):' → logprob: -14.253190040588379
    9. '(' → logprob: -15.253190040588379
    10. '```' → logprob: -15.503190040588379

Token 522: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002692651702091098
    2. 'def' → logprob: -6.502692699432373
    3. ' def' → logprob: -6.752692699432373
    4. '	def' → logprob: -11.252692222595215
    5. 'import' → logprob: -12.627692222595215
    6. ':' → logprob: -13.002692222595215
    7. '```' → logprob: -13.752692222595215
    8. ':def' → logprob: -14.502692222595215
    9. ',' → logprob: -14.752692222595215
    10. '   ' → logprob: -14.877692222595215

Token 523: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.5762112140655518
    2. 'def' (adapté à ' def') → logprob: -0.8262112140655518
    3. '   ' → logprob: -8.326210975646973
    4. 'import' → logprob: -10.451210975646973
    5. '@' → logprob: -15.201210975646973
    6. '	def' → logprob: -15.701210975646973
    7. 'class' → logprob: -15.951210975646973
    8. ' import' → logprob: -16.20121192932129
    9. '```' → logprob: -17.45121192932129
    10. 'from' → logprob: -17.57621192932129

Token 524: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.1777203232049942
    2. ' def' → logprob: -2.052720308303833
    3. '__' → logprob: -3.552720308303833
    4. 'def' → logprob: -5.302720546722412
    5. ' parse' → logprob: -7.927720546722412
    6. 'init' → logprob: -8.552720069885254
    7. ' init' → logprob: -8.677720069885254
    8. '_init' → logprob: -9.677720069885254
    9. 'parse' → logprob: -11.302720069885254
    10. 'staticmethod' → logprob: -12.677720069885254

Token 525: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.9361264946837764e-07
    2. 'def' → logprob: -16.0
    3. ' init' → logprob: -17.875
    4. '_init' → logprob: -19.125
    5. 'call' → logprob: -19.375
    6. 'ini' → logprob: -21.25
    7. 'inite' → logprob: -21.75
    8. 'int' → logprob: -21.75
    9. '(init' → logprob: -22.125
    10. '	init' → logprob: -22.375

Token 526: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.04556981101632118
    2. '(' → logprob: -3.670569896697998
    3. '__(' → logprob: -4.045569896697998
    4. ' (' → logprob: -7.670569896697998
    5. 'self' → logprob: -7.670569896697998
    6. '   ' → logprob: -8.67056941986084
    7. '```' → logprob: -9.04556941986084
    8. '_(' → logprob: -9.54556941986084
    9. ')(' → logprob: -9.79556941986084
    10. 'def' → logprob: -10.17056941986084

Token 527: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.001643165247514844
    2. ')' → logprob: -6.751643180847168
    3. ' self' → logprob: -7.751643180847168
    4. '):
' → logprob: -10.501643180847168
    5. '
' → logprob: -12.001643180847168
    6. '):' → logprob: -12.876643180847168
    7. '   ' → logprob: -13.001643180847168
    8. '(self' → logprob: -14.001643180847168
    9. '       ' → logprob: -14.626643180847168
    10. '	self' → logprob: -14.626643180847168

Token 528: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.018548937514424324
    2. '):' → logprob: -4.393548965454102
    3. 'self' → logprob: -5.518548965454102
    4. '):
' → logprob: -6.268548965454102
    5. '   ' → logprob: -9.893548965454102
    6. ',self' → logprob: -11.143548965454102
    7. ' ,' → logprob: -11.143548965454102
    8. '(self' → logprob: -11.643548965454102
    9. ')' → logprob: -11.893548965454102
    10. '       ' → logprob: -12.143548965454102

Token 529: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2285672426223755
    2. 'self' → logprob: -1.6035672426223755
    3. 'def' → logprob: -6.228567123413086
    4. '   ' → logprob: -7.103567123413086
    5. ' self' → logprob: -8.228567123413086
    6. '
' → logprob: -9.978567123413086
    7. '):
' → logprob: -11.228567123413086
    8. 'import' → logprob: -11.728567123413086
    9. '(self' → logprob: -12.228567123413086
    10. '```' → logprob: -12.353567123413086

Token 530: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.22898630797863007
    2. 'pass' → logprob: -2.2289862632751465
    3. '       ' → logprob: -2.3539862632751465
    4. ' self' → logprob: -7.2289862632751465
    5. '   ' → logprob: -7.3539862632751465
    6. ' pass' → logprob: -7.4789862632751465
    7. 'import' → logprob: -9.978986740112305
    8. 'def' → logprob: -10.353986740112305
    9. '
' → logprob: -11.478986740112305
    10. '```' → logprob: -12.603986740112305

Token 531: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.11410204321146011
    2. '.buffer' → logprob: -2.7391021251678467
    3. '.data' → logprob: -3.7391021251678467
    4. '.input' → logprob: -4.364101886749268
    5. '.tokens' → logprob: -6.114101886749268
    6. '.inputs' → logprob: -6.239101886749268
    7. '.lines' → logprob: -6.489101886749268
    8. '.' → logprob: -8.489102363586426
    9. '.source' → logprob: -8.739102363586426
    10. '.results' → logprob: -9.739102363586426

Token 532: 'lines' (ID: 10105)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -1.3057637214660645
    2. 'lines' → logprob: -1.4307637214660645
    3. 'buffer' → logprob: -2.0557637214660645
    4. 'source' → logprob: -2.3057637214660645
    5. 'data' → logprob: -2.4307637214660645
    6. 'ch' → logprob: -2.9307637214660645
    7. 'positions' → logprob: -3.0557637214660645
    8. 'digit' → logprob: -4.0557637214660645
    9. 'inputs' → logprob: -4.1807637214660645
    10. 'digits' → logprob: -4.8057637214660645

Token 533: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38707971572875977
    2. '=' → logprob: -1.1370797157287598
    3. '=[]' → logprob: -8.512079238891602
    4. '   ' → logprob: -13.012079238891602
    5. '=[]
' → logprob: -13.012079238891602
    6. '<|end|>' → logprob: -13.637079238891602
    7. '_' → logprob: -15.012079238891602
    8. 'import' → logprob: -15.137079238891602
    9. ' ' → logprob: -15.637079238891602
    10. '[]' → logprob: -15.637079238891602

Token 534: ' []

' (ID: 32833)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.00025275684311054647
    2. 'iter' → logprob: -8.375252723693848
    3. '[]
' → logprob: -11.625252723693848
    4. ' []' → logprob: -12.000252723693848
    5. '[]}' → logprob: -12.375252723693848
    6. ' iter' → logprob: -14.125252723693848
    7. '[' → logprob: -14.875252723693848
    8. '[]

' → logprob: -14.875252723693848
    9. 'self' → logprob: -15.000252723693848
    10. 'deque' → logprob: -15.750252723693848

Token 535: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011643752455711365
    2. 'def' → logprob: -4.886643886566162
    3. ' def' → logprob: -5.636643886566162
    4. '<|end|>' → logprob: -7.886643886566162
    5. '
' → logprob: -9.761643409729004
    6. '    
' → logprob: -11.011643409729004
    7. '	def' → logprob: -12.386643409729004
    8. '       ' → logprob: -12.511643409729004
    9. '<|end|>' → logprob: -12.761643409729004
    10. ' ' → logprob: -13.136643409729004

Token 536: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.01422944013029337
    2. ' def' → logprob: -4.2642292976379395
    3. '   ' → logprob: -9.639229774475098
    4. '
' → logprob: -14.639229774475098
    5. '	def' → logprob: -15.014229774475098
    6. ' ' → logprob: -17.13922882080078
    7. 'import' → logprob: -18.38922882080078
    8. '  ' → logprob: -20.38922882080078
    9. '_def' → logprob: -20.63922882080078
    10. '    
' → logprob: -20.88922882080078

Token 537: ' feed' (ID: 7685)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.1090235486626625
    2. 'append' → logprob: -2.8590235710144043
    3. 'add' → logprob: -3.1090235710144043
    4. 'parse' → logprob: -6.984023571014404
    5. ' read' → logprob: -8.609023094177246
    6. ' add' → logprob: -9.984023094177246
    7. 'load' → logprob: -9.984023094177246
    8. 'feed' → logprob: -10.109023094177246
    9. ' append' → logprob: -10.609023094177246
    10. ' readline' → logprob: -11.234023094177246

Token 538: '_line' (ID: 14418)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.13208168745040894
    2. '(' → logprob: -2.1320817470550537
    3. '(line' → logprob: -5.632081508636475
    4. '<|end|>' → logprob: -7.257081508636475
    5. '(input' → logprob: -8.382081985473633
    6. '_line' → logprob: -8.632081985473633
    7. ' (' → logprob: -9.257081985473633
    8. '(
' → logprob: -9.632081985473633
    9. 'self' → logprob: -9.757081985473633
    10. '()' → logprob: -9.882081985473633

Token 539: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00595261761918664
    2. '(' → logprob: -5.130952835083008
    3. '(line' → logprob: -11.380952835083008
    4. '(s' → logprob: -12.130952835083008
    5. ' (' → logprob: -12.380952835083008
    6. '(
' → logprob: -14.380952835083008
    7. 'self' → logprob: -14.505952835083008
    8. ',' → logprob: -14.630952835083008
    9. '(text' → logprob: -15.755952835083008
    10. '   ' → logprob: -15.755952835083008

Token 540: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.517272024415433e-05
    2. 'self' → logprob: -10.125075340270996
    3. ' ,' → logprob: -10.625075340270996
    4. ',line' → logprob: -12.000075340270996
    5. ',self' → logprob: -13.250075340270996
    6. ',input' → logprob: -14.000075340270996
    7. '(self' → logprob: -14.500075340270996
    8. ')' → logprob: -14.500075340270996
    9. ',s' → logprob: -15.000075340270996
    10. '       ' → logprob: -15.500075340270996

Token 541: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.017872467637062073
    2. ' line' → logprob: -4.267872333526611
    3. 'input' → logprob: -5.767872333526611
    4. ')' → logprob: -7.892872333526611
    5. ' input' → logprob: -9.51787281036377
    6. 'text' → logprob: -9.64287281036377
    7. '   ' → logprob: -10.89287281036377
    8. 's' → logprob: -11.64287281036377
    9. '(line' → logprob: -11.89287281036377
    10. 'str' → logprob: -12.14287281036377

Token 542: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0012745194835588336
    2. '):' → logprob: -6.751274585723877
    3. ':str' → logprob: -9.876274108886719
    4. '):
' → logprob: -10.376274108886719
    5. ')' → logprob: -11.126274108886719
    6. '   ' → logprob: -12.751274108886719
    7. ' :' → logprob: -13.001274108886719
    8. '       ' → logprob: -14.001274108886719
    9. '=' → logprob: -14.626274108886719
    10. 'self' → logprob: -15.751274108886719

Token 543: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.007316377013921738
    2. ')' → logprob: -5.007316589355469
    3. ' str' → logprob: -7.507316589355469
    4. 'self' → logprob: -11.507316589355469
    5. 'text' → logprob: -12.007316589355469
    6. '[str' → logprob: -12.132316589355469
    7. '):
' → logprob: -12.132316589355469
    8. 's' → logprob: -12.257316589355469
    9. '):' → logprob: -12.382316589355469
    10. '   ' → logprob: -12.507316589355469

Token 544: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01237907912582159
    2. '):' → logprob: -4.512379169464111
    3. '):
' → logprob: -6.637379169464111
    4. ')->' → logprob: -11.137378692626953
    5. '   ' → logprob: -12.637378692626953
    6. '       ' → logprob: -14.262378692626953
    7. ':' → logprob: -14.512378692626953
    8. '):
' → logprob: -14.637378692626953
    9. ' )' → logprob: -15.137378692626953
    10. '),' → logprob: -17.012378692626953

Token 545: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.282920129597187e-05
    2. ' self' → logprob: -11.750012397766113
    3. 'self' → logprob: -12.250012397766113
    4. '           ' → logprob: -17.75001335144043
    5. '   ' → logprob: -17.75001335144043
    6. '```' → logprob: -17.75001335144043
    7. '      ' → logprob: -18.75001335144043
    8. '(self' → logprob: -18.75001335144043
    9. ',' → logprob: -19.12501335144043
    10. '        
' → logprob: -19.50001335144043

Token 546: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0022112776059657335
    2. ' self' → logprob: -6.502211093902588
    3. '       ' → logprob: -7.252211093902588
    4. '   ' → logprob: -16.75221061706543
    5. '           ' → logprob: -19.25221061706543
    6. '	self' → logprob: -19.25221061706543
    7. '```' → logprob: -20.37721061706543
    8. '(self' → logprob: -20.62721061706543
    9. '        
' → logprob: -21.12721061706543
    10. 'if' → logprob: -21.75221061706543

Token 547: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -6.392202976712724e-06
    2. '.' → logprob: -12.500006675720215
    3. '.append' → logprob: -13.125006675720215
    4. '   ' → logprob: -15.250006675720215
    5. ' .' → logprob: -15.750006675720215
    6. '_lines' → logprob: -16.1250057220459
    7. '.__' → logprob: -17.2500057220459
    8. '       ' → logprob: -17.5000057220459
    9. '.strip' → logprob: -17.5000057220459
    10. ')._' → logprob: -17.8750057220459

Token 548: 'lines' (ID: 10105)
  Prédit: 'lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -3.128163257315464e-07
    2. '_lines' → logprob: -15.25
    3. '	lines' → logprob: -16.875
    4. '(lines' → logprob: -17.75
    5. ' lines' → logprob: -18.25
    6. '.lines' → logprob: -18.5
    7. 'line' → logprob: -19.25
    8. 'append' → logprob: -20.25
    9. 'elines' → logprob: -20.625
    10. 'strings' → logprob: -21.625

Token 549: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00026288547087460756
    2. '.' → logprob: -8.250263214111328
    3. 'append' → logprob: -13.875263214111328
    4. '.extend' → logprob: -14.625263214111328
    5. ' .' → logprob: -15.875263214111328
    6. '.app' → logprob: -16.750263214111328
    7. '=' → logprob: -17.250263214111328
    8. '.ap' → logprob: -19.375263214111328
    9. '_append' → logprob: -19.625263214111328
    10. '+=' → logprob: -20.125263214111328

Token 550: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -5.319370302458992e-06
    2. 'line' → logprob: -12.500005722045898
    3. '(' → logprob: -13.500005722045898
    4. '=line' → logprob: -16.3750057220459
    5. ' line' → logprob: -17.1250057220459
    6. '[line' → logprob: -17.7500057220459
    7. ',line' → logprob: -18.8750057220459
    8. '#line' → logprob: -19.0000057220459
    9. '(Line' → logprob: -19.6250057220459
    10. '(lines' → logprob: -21.1250057220459

Token 551: '.strip' (ID: 40613)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.368984107510187e-05
    2. ')
' → logprob: -10.750033378601074
    3. '   ' → logprob: -12.125033378601074
    4. '       ' → logprob: -12.500033378601074
    5. '<|end|>' → logprob: -13.375033378601074
    6. ' )' → logprob: -15.000033378601074
    7. ')return' → logprob: -15.250033378601074
    8. '.strip' → logprob: -15.375033378601074
    9. '')' → logprob: -15.750033378601074
    10. '.rstrip' → logprob: -16.00003433227539

Token 552: '())

' (ID: 27654)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.030085191130638123
    2. '())' → logprob: -3.5300850868225098
    3. '()' → logprob: -8.030085563659668
    4. '))' → logprob: -12.030085563659668
    5. ' )' → logprob: -13.530085563659668
    6. '')' → logprob: -14.655085563659668
    7. ')
' → logprob: -14.655085563659668
    8. '(' → logprob: -15.530085563659668
    9. '())
' → logprob: -15.655085563659668
    10. ' ())' → logprob: -16.53008460998535

Token 553: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.012557090260088444
    2. '   ' → logprob: -5.137557029724121
    3. ' def' → logprob: -5.137557029724121
    4. '
' → logprob: -7.387557029724121
    5. '    
' → logprob: -9.387557029724121
    6. '	def' → logprob: -11.012557029724121
    7. '        
' → logprob: -12.137557029724121
    8. '

' → logprob: -12.762557029724121
    9. '```' → logprob: -13.137557029724121
    10. '  
' → logprob: -13.637557029724121

Token 554: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0042478120885789394
    2. ' def' → logprob: -5.504247665405273
    3. '   ' → logprob: -9.004247665405273
    4. '
' → logprob: -10.004247665405273
    5. '    
' → logprob: -14.629247665405273
    6. '	def' → logprob: -15.004247665405273
    7. '

' → logprob: -15.504247665405273
    8. '```' → logprob: -15.879247665405273
    9. 'import' → logprob: -16.879247665405273
    10. ' ' → logprob: -17.004247665405273

Token 555: ' parse' (ID: 8420)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.06920108199119568
    2. '__' → logprob: -2.8192009925842285
    3. 'get' → logprob: -5.4442009925842285
    4. 'has' → logprob: -7.0692009925842285
    5. 'read' → logprob: -7.1942009925842285
    6. 'pop' → logprob: -7.4442009925842285
    7. 'next' → logprob: -8.319201469421387
    8. ' parse' → logprob: -8.819201469421387
    9. 'lines' → logprob: -9.319201469421387
    10. ' __' → logprob: -9.694201469421387

Token 556: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0006994496798142791
    2. 'self' → logprob: -8.250699043273926
    3. '()' → logprob: -8.375699043273926
    4. '(' → logprob: -9.750699043273926
    5. '_next' → logprob: -10.500699043273926
    6. '_lines' → logprob: -10.500699043273926
    7. '_line' → logprob: -10.625699043273926
    8. '_int' → logprob: -11.125699043273926
    9. '_tokens' → logprob: -11.375699043273926
    10. 'def' → logprob: -11.750699043273926

Token 557: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5498486757278442
    2. ')' → logprob: -1.4248486757278442
    3. ')_' → logprob: -2.5498485565185547
    4. 'self' → logprob: -2.9248485565185547
    5. '):
' → logprob: -3.0498485565185547
    6. '_' → logprob: -6.424848556518555
    7. ',' → logprob: -7.924848556518555
    8. '_lines' → logprob: -8.299848556518555
    9. '_self' → logprob: -8.299848556518555
    10. '_line' → logprob: -8.424848556518555

Token 558: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00030161935137584805
    2. 'for' → logprob: -8.750301361083984
    3. 'return' → logprob: -9.875301361083984
    4. 'self' → logprob: -10.625301361083984
    5. '()' → logprob: -11.250301361083984
    6. ' for' → logprob: -11.375301361083984
    7. 'tokens' → logprob: -11.875301361083984
    8. 'result' → logprob: -12.000301361083984
    9. 'n' → logprob: -12.250301361083984
    10. '   ' → logprob: -12.375301361083984

Token 559: ' for' (ID: 395)
  Prédit: 'queries'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queries' → logprob: -0.8244914412498474
    2. ' queries' → logprob: -1.3244915008544922
    3. 'results' → logprob: -2.574491500854492
    4. 'n' → logprob: -3.199491500854492
    5. 'lines' → logprob: -3.449491500854492
    6. 'q' → logprob: -3.949491500854492
    7. ' n' → logprob: -4.199491500854492
    8. ' results' → logprob: -4.199491500854492
    9. '       ' → logprob: -4.574491500854492
    10. 'ranges' → logprob: -4.699491500854492

Token 560: ' raw' (ID: 11428)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.009923242963850498
    2. ' line' → logprob: -4.634923458099365
    3. 'self' → logprob: -9.134922981262207
    4. '_line' → logprob: -10.884922981262207
    5. 'i' → logprob: -11.134922981262207
    6. 'raw' → logprob: -11.634922981262207
    7. ' self' → logprob: -11.759922981262207
    8. ' i' → logprob: -12.384922981262207
    9. ' raw' → logprob: -13.259922981262207
    10. 'l' → logprob: -13.759922981262207

Token 561: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.13510429859161377
    2. 'line' → logprob: -2.135104179382324
    3. ' in' → logprob: -5.135104179382324
    4. 'in' → logprob: -6.135104179382324
    5. ' line' → logprob: -9.385104179382324
    6. '_input' → logprob: -12.760104179382324
    7. 'Line' → logprob: -13.510104179382324
    8. '=line' → logprob: -14.385104179382324
    9. '_in' → logprob: -14.760104179382324
    10. '   ' → logprob: -14.885104179382324

Token 562: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01815205067396164
    2. 'in' → logprob: -4.018152236938477
    3. 's' → logprob: -14.768152236938477
    4. 'self' → logprob: -15.143152236938477
    5. '_in' → logprob: -15.143152236938477
    6. ' ' → logprob: -15.393152236938477
    7. 'line' → logprob: -15.768152236938477
    8. '   ' → logprob: -15.768152236938477
    9. '       ' → logprob: -15.768152236938477
    10. '	in' → logprob: -16.268152236938477

Token 563: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -5.438573680294212e-06
    2. ' self' → logprob: -12.125005722045898
    3. '(self' → logprob: -18.0000057220459
    4. '   ' → logprob: -18.7500057220459
    5. '
' → logprob: -19.3750057220459
    6. '[self' → logprob: -19.3750057220459
    7. '	self' → logprob: -20.3750057220459
    8. 're' → logprob: -21.0000057220459
    9. ' ' → logprob: -21.0000057220459
    10. '       ' → logprob: -21.2500057220459

Token 564: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -1.3902033970225602e-05
    2. 'self' → logprob: -11.500014305114746
    3. '_lines' → logprob: -12.875014305114746
    4. '_self' → logprob: -14.500014305114746
    5. '.' → logprob: -15.125014305114746
    6. '.__' → logprob: -16.12501335144043
    7. '.lines' → logprob: -16.87501335144043
    8. ':_' → logprob: -17.25001335144043
    9. ' self' → logprob: -17.37501335144043
    10. ' .' → logprob: -17.50001335144043

Token 565: 'lines' (ID: 10105)
  Prédit: 'lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: 0.0
    2. 'line' → logprob: -18.5
    3. '(lines' → logprob: -18.75
    4. '	lines' → logprob: -19.0
    5. '.lines' → logprob: -20.0
    6. ' lines' → logprob: -20.0
    7. '
' → logprob: -20.125
    8. 'input' → logprob: -20.875
    9. '_lines' → logprob: -21.0
    10. 'lin' → logprob: -21.125

Token 566: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.37958866357803345
    2. ':
' → logprob: -1.5045886039733887
    3. '.split' → logprob: -3.1295886039733887
    4. '       ' → logprob: -3.3795886039733887
    5. '           ' → logprob: -4.504588603973389
    6. ',' → logprob: -5.754588603973389
    7. '.strip' → logprob: -7.379588603973389
    8. 'yield' → logprob: -7.629588603973389
    9. 'split' → logprob: -9.754589080810547
    10. '[' → logprob: -9.879589080810547

Token 567: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0003065030323341489
    2. ',' → logprob: -8.375306129455566
    3. 'yield' → logprob: -10.125306129455566
    4. ' yield' → logprob: -11.625306129455566
    5. ':' → logprob: -12.125306129455566
    6. '	       ' → logprob: -12.750306129455566
    7. ':
' → logprob: -12.750306129455566
    8. '       ' → logprob: -13.000306129455566
    9. '            
' → logprob: -13.500306129455566
    10. 'tokens' → logprob: -13.625306129455566

Token 568: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5056912899017334
    2. ' parts' → logprob: -1.3806912899017334
    3. 'parts' → logprob: -2.3806912899017334
    4. 'yield' → logprob: -4.0056915283203125
    5. 'tokens' → logprob: -4.5056915283203125
    6. ' yield' → logprob: -4.5056915283203125
    7. 'positions' → logprob: -6.2556915283203125
    8. ' positions' → logprob: -6.3806915283203125
    9. ' tokens' → logprob: -6.5056915283203125
    10. 'if' (adapté à ' if') → logprob: -6.7556915283203125

Token 569: ' raw' (ID: 11428)
  Prédit: 'raw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raw' → logprob: -0.48789021372795105
    2. ' not' → logprob: -1.4878902435302734
    3. 'not' → logprob: -2.1128902435302734
    4. ' raw' → logprob: -3.2378902435302734
    5. 'len' → logprob: -9.612890243530273
    6. ''' → logprob: -11.487890243530273
    7. '   ' → logprob: -12.487890243530273
    8. ' len' → logprob: -12.612890243530273
    9. '(raw' → logprob: -12.612890243530273
    10. '	raw' → logprob: -13.237890243530273

Token 570: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.00014859484508633614
    2. 'line' → logprob: -9.25014877319336
    3. '_lines' → logprob: -11.37514877319336
    4. 'startswith' → logprob: -11.50014877319336
    5. '.startswith' → logprob: -11.50014877319336
    6. 'Line' → logprob: -12.62514877319336
    7. '==' → logprob: -13.25014877319336
    8. '   ' → logprob: -13.37514877319336
    9. '_LINE' → logprob: -13.50014877319336
    10. '_code' → logprob: -14.00014877319336

Token 571: ' ==' (ID: 951)
  Prédit: '.startswith'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.startswith' → logprob: -0.10314637422561646
    2. ' ==' → logprob: -2.8531463146209717
    3. '.strip' → logprob: -3.7281463146209717
    4. '==' → logprob: -4.603146553039551
    5. '.' → logprob: -5.728146553039551
    6. ':' → logprob: -5.978146553039551
    7. ':
' → logprob: -8.97814655303955
    8. 'startswith' → logprob: -9.47814655303955
    9. '.endswith' → logprob: -9.60314655303955
    10. '.split' → logprob: -9.72814655303955

Token 572: ' '' (ID: 461)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''' → logprob: -0.2034776210784912
    2. ''' → logprob: -2.078477621078491
    3. '"":' → logprob: -3.328477621078491
    4. '"' → logprob: -4.45347785949707
    5. '""' → logprob: -4.82847785949707
    6. ' '':
' → logprob: -6.32847785949707
    7. ' '' → logprob: -7.07847785949707
    8. ''ex' → logprob: -8.45347785949707
    9. ' "":
' → logprob: -8.57847785949707
    10. ''t' → logprob: -9.57847785949707

Token 573: '0' (ID: 15)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.6387818455696106
    2. '0' → logprob: -1.6387817859649658
    3. '':
' → logprob: -2.388781785964966
    4. '''' → logprob: -3.013781785964966
    5. 'END' → logprob: -3.013781785964966
    6. ''' → logprob: -4.138782024383545
    7. '1' → logprob: -4.138782024383545
    8. 'return' → logprob: -4.638782024383545
    9. '```' → logprob: -5.013782024383545
    10. 'DONE' → logprob: -5.263782024383545

Token 574: ' ' (ID: 220)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.3081683814525604
    2. '':
' → logprob: -1.4331684112548828
    3. '0' → logprob: -3.933168411254883
    4. ' ' → logprob: -5.433168411254883
    5. '':
' → logprob: -6.308168411254883
    6. ''' → logprob: -7.183168411254883
    7. ''):
' → logprob: -10.308168411254883
    8. '\n' → logprob: -11.058168411254883
    9. '":' → logprob: -11.808168411254883
    10. '1' → logprob: -11.808168411254883

Token 575: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '')' → logprob: -19.375001907348633
    4. ''' → logprob: -20.375001907348633
    5. '00' → logprob: -21.375001907348633
    6. '```' → logprob: -21.625001907348633
    7. 'end' → logprob: -21.750001907348633
    8. 'END' → logprob: -22.125001907348633
    9. '  ' → logprob: -22.250001907348633
    10. '1' → logprob: -22.625001907348633

Token 576: '':
' (ID: 7669)
  Prédit: '':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':
' → logprob: -0.038313787430524826
    2. '':' → logprob: -3.288313865661621
    3. '':
' → logprob: -8.788313865661621
    4. '\n' → logprob: -9.413313865661621
    5. ''' → logprob: -10.413313865661621
    6. '0' → logprob: -12.663313865661621
    7. ''):
' → logprob: -13.288313865661621
    8. '":
' → logprob: -13.913313865661621
    9. '':

' → logprob: -14.288313865661621
    10. ''
' → logprob: -15.038313865661621

Token 577: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0027459117118269205
    2. ':' → logprob: -6.877746105194092
    3. '           ' → logprob: -7.127746105194092
    4. ':
' → logprob: -7.127746105194092
    5. ',' → logprob: -10.252745628356934
    6. ':return' → logprob: -10.877745628356934
    7. ' return' → logprob: -11.502745628356934
    8. 'return' → logprob: -11.627745628356934
    9. ' break' → logprob: -12.002745628356934
    10. ' continue' → logprob: -12.002745628356934

Token 578: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.48930615186691284
    2. 'return' → logprob: -0.9893061518669128
    3. '               ' → logprob: -4.7393059730529785
    4. ' break' → logprob: -5.2393059730529785
    5. ' return' → logprob: -6.9893059730529785
    6. '                   ' → logprob: -8.989306449890137
    7. '           ' → logprob: -11.489306449890137
    8. '
' → logprob: -12.114306449890137
    9. '	break' → logprob: -13.114306449890137
    10. '                       ' → logprob: -15.489306449890137

Token 579: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0004279275599401444
    2. '            
' → logprob: -8.000428199768066
    3. '
' → logprob: -10.125428199768066
    4. '<|end|>' → logprob: -11.125428199768066
    5. ',' → logprob: -11.500428199768066
    6. '       ' → logprob: -11.625428199768066
    7. '               ' → logprob: -12.875428199768066
    8. '<|end|>' → logprob: -13.000428199768066
    9. '        
' → logprob: -13.125428199768066
    10. '  
' → logprob: -13.375428199768066

Token 580: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -9.424530435353518e-05
    2. '       ' → logprob: -10.125094413757324
    3. '            
' → logprob: -10.625094413757324
    4. '
' → logprob: -11.500094413757324
    5. ' yield' → logprob: -11.875094413757324
    6. 'yield' → logprob: -11.875094413757324
    7. '```' → logprob: -13.750094413757324
    8. '               ' → logprob: -13.875094413757324
    9. '          ' → logprob: -14.000094413757324
    10. '        
' → logprob: -14.375094413757324

Token 581: ' parts' (ID: 7881)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.1556614190340042
    2. 'n' → logprob: -3.1556613445281982
    3. 'start' → logprob: -3.7806613445281982
    4. 'x' → logprob: -3.9056613445281982
    5. 'parts' (adapté à ' parts') → logprob: -3.9056613445281982
    6. 'A' → logprob: -5.030661582946777
    7. '           ' → logprob: -5.030661582946777
    8. 'N' → logprob: -5.155661582946777
    9. 'm' → logprob: -5.280661582946777
    10. 'l' → logprob: -5.405661582946777

Token 582: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02975141443312168
    2. '=' → logprob: -3.5297513008117676
    3. '           ' → logprob: -15.279751777648926
    4. '=line' → logprob: -15.654751777648926
    5. '        ' → logprob: -16.40475082397461
    6. ')' → logprob: -16.40475082397461
    7. ',' → logprob: -16.65475082397461
    8. '            ' → logprob: -16.90475082397461
    9. '＝' → logprob: -17.02975082397461
    10. '[' → logprob: -17.15475082397461

Token 583: ' raw' (ID: 11428)
  Prédit: 'raw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raw' → logprob: -0.061967797577381134
    2. ' raw' → logprob: -2.8119678497314453
    3. 'list' → logprob: -16.186967849731445
    4. '(raw' → logprob: -16.811967849731445
    5. '	raw' → logprob: -17.186967849731445
    6. '[' → logprob: -17.561967849731445
    7. ' list' → logprob: -18.686967849731445
    8. '.raw' → logprob: -18.936967849731445
    9. '_raw' → logprob: -19.436967849731445
    10. '           ' → logprob: -20.311967849731445

Token 584: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -3.292907877039397e-06
    2. 'line' → logprob: -12.75000286102295
    3. '_LINE' → logprob: -15.37500286102295
    4. 'Line' → logprob: -17.000003814697266
    5. '_lines' → logprob: -17.875003814697266
    6. '_' → logprob: -17.875003814697266
    7. 'raw' → logprob: -18.625003814697266
    8. 'lin' → logprob: -18.625003814697266
    9. 'split' → logprob: -19.125003814697266
    10. '```' → logprob: -19.125003814697266

Token 585: '.split' (ID: 10347)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04859054833650589
    2. ' =' → logprob: -3.048590660095215
    3. '.split' → logprob: -12.923590660095215
    4. 'split' → logprob: -15.298590660095215
    5. '=line' → logprob: -15.423590660095215
    6. '＝' → logprob: -15.548590660095215
    7. '.=' → logprob: -16.5485897064209
    8. '.' → logprob: -16.7985897064209
    9. ')=' → logprob: -18.7985897064209
    10. '=
' → logprob: -19.0485897064209

Token 586: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.008691507391631603
    2. '('' → logprob: -4.758691310882568
    3. '()
' → logprob: -9.633691787719727
    4. '(' → logprob: -11.508691787719727
    5. '())' → logprob: -14.883691787719727
    6. '(max' → logprob: -15.258691787719727
    7. '()

' → logprob: -15.258691787719727
    8. '()]' → logprob: -15.508691787719727
    9. '();' → logprob: -16.008691787719727
    10. ''' → logprob: -16.258691787719727

Token 587: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0072957901284098625
    2. 'start' → logprob: -5.132295608520508
    3. ' start' → logprob: -7.507295608520508
    4. 'yield' → logprob: -7.757295608520508
    5. '```' → logprob: -8.757295608520508
    6. ' yield' → logprob: -9.507295608520508
    7. '[start' → logprob: -10.257295608520508
    8. '       ' → logprob: -10.507295608520508
    9. ',' → logprob: -10.632295608520508
    10. 'pos' → logprob: -11.507295608520508

Token 588: ' if' (ID: 538)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.142429232597351
    2. 'yield' → logprob: -1.142429232597351
    3. 'N' → logprob: -1.892429232597351
    4. 'a' → logprob: -2.2674293518066406
    5. 'start' → logprob: -3.1424293518066406
    6. 'p' → logprob: -3.8924293518066406
    7. 'x' → logprob: -4.517429351806641
    8. '           ' → logprob: -4.642429351806641
    9. 'm' → logprob: -5.267429351806641
    10. 'l' → logprob: -5.642429351806641

Token 589: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.04859713837504387
    2. ' len' → logprob: -3.0485970973968506
    3. 'parts' → logprob: -11.92359733581543
    4. ' parts' → logprob: -13.29859733581543
    5. '           ' → logprob: -13.54859733581543
    6. '(len' → logprob: -16.04859733581543
    7. ' not' → logprob: -17.54859733581543
    8. 'not' → logprob: -18.04859733581543
    9. '	len' → logprob: -18.29859733581543
    10. '               ' → logprob: -18.79859733581543

Token 590: '(parts' (ID: 102573)
  Prédit: '(parts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(parts' → logprob: -0.00020652047533076257
    2. 'parts' → logprob: -8.50020694732666
    3. ' parts' → logprob: -12.87520694732666
    4. '==' → logprob: -15.00020694732666
    5. '(' → logprob: -17.000205993652344
    6. ')' → logprob: -17.625205993652344
    7. '=' → logprob: -17.750205993652344
    8. ' ==' → logprob: -17.875205993652344
    9. '_parts' → logprob: -18.625205993652344
    10. '>' → logprob: -19.000205993652344

Token 591: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1691327691078186
    2. '==' → logprob: -2.419132709503174
    3. '<' → logprob: -3.294132709503174
    4. ' ==' → logprob: -4.294132709503174
    5. ' !=' → logprob: -5.044132709503174
    6. '!=' → logprob: -5.669132709503174
    7. ' <' → logprob: -5.794132709503174
    8. '>=' → logprob: -6.294132709503174
    9. ' >=' → logprob: -8.419133186340332
    10. ')<' → logprob: -8.544133186340332

Token 592: ' !=' (ID: 1666)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.4743567407131195
    2. '==' → logprob: -1.599356770515442
    3. '!=' → logprob: -1.974356770515442
    4. ' !=' → logprob: -3.5993566513061523
    5. ' ==' → logprob: -5.474356651306152
    6. ' <' → logprob: -5.849356651306152
    7. '>=' → logprob: -6.099356651306152
    8. '   ' → logprob: -10.224356651306152
    9. ' >=' → logprob: -10.224356651306152
    10. '```' → logprob: -10.724356651306152

Token 593: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.2007883671903983e-05
    2. ' ' → logprob: -10.750021934509277
    3. '3' → logprob: -14.875021934509277
    4. '=' → logprob: -16.937522888183594
    5. '```' → logprob: -17.375022888183594
    6. '۲' → logprob: -17.500022888183594
    7. '２' → logprob: -18.375022888183594
    8. '২' → logprob: -18.625022888183594
    9. '   ' → logprob: -18.687522888183594
    10. '
' → logprob: -19.125022888183594

Token 594: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.941850526549388e-06
    2. ' ' → logprob: -11.750007629394531
    3. '   ' → logprob: -17.37500762939453
    4. '۲' → logprob: -17.56250762939453
    5. '２' → logprob: -18.12500762939453
    6. '3' → logprob: -18.31250762939453
    7. '=' → logprob: -18.81250762939453
    8. '```' → logprob: -18.87500762939453
    9. '২' → logprob: -19.18750762939453
    10. 'two' → logprob: -19.50000762939453

Token 595: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.27093809843063354
    2. ':' → logprob: -1.7709381580352783
    3. ' or' → logprob: -2.7709381580352783
    4. '               ' → logprob: -6.395937919616699
    5. ':return' → logprob: -6.395937919616699
    6. '           ' → logprob: -6.895937919616699
    7. ',' → logprob: -9.5209379196167
    8. ' and' → logprob: -9.7709379196167
    9. '):
' → logprob: -10.2709379196167
    10. ')' → logprob: -11.8959379196167

Token 596: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0965781882405281
    2. '           ' → logprob: -2.7215781211853027
    3. 'start' → logprob: -4.471578121185303
    4. ' continue' → logprob: -4.971578121185303
    5. 'continue' → logprob: -5.596578121185303
    6. ' start' → logprob: -5.721578121185303
    7. ' return' → logprob: -8.346578598022461
    8. 'count' → logprob: -8.846578598022461
    9. 'return' → logprob: -9.221578598022461
    10. ' yield' → logprob: -9.346578598022461

Token 597: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.007238852325826883
    2. '               ' → logprob: -5.257238864898682
    3. ' continue' → logprob: -6.507238864898682
    4. 'return' → logprob: -7.757238864898682
    5. '           ' → logprob: -9.882238388061523
    6. 'raise' → logprob: -10.507238388061523
    7. '                   ' → logprob: -12.882238388061523
    8. 'yield' → logprob: -14.757238388061523
    9. '```' → logprob: -15.007238388061523
    10. '	continue' → logprob: -15.007238388061523

Token 598: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010431844741106033
    2. 'start' → logprob: -5.63543176651001
    3. 'yield' → logprob: -6.01043176651001
    4. ' yield' → logprob: -6.26043176651001
    5. ' start' → logprob: -6.76043176651001
    6. '
' → logprob: -7.51043176651001
    7. '```' → logprob: -7.76043176651001
    8. 'position' → logprob: -9.635432243347168
    9. '            
' → logprob: -9.885432243347168
    10. 'n' → logprob: -10.385432243347168

Token 599: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006035919301211834
    2. 'start' → logprob: -6.131035804748535
    3. 'yield' → logprob: -6.631035804748535
    4. '```' → logprob: -7.131035804748535
    5. ' yield' → logprob: -7.506035804748535
    6. ' start' → logprob: -7.631035804748535
    7. '
' → logprob: -8.506035804748535
    8. 'position' → logprob: -8.881035804748535
    9. '            
' → logprob: -9.006035804748535
    10. 'count' → logprob: -9.256035804748535

Token 600: ' N' (ID: 478)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.10692018270492554
    2. 'n' → logprob: -3.1069202423095703
    3. 'a' → logprob: -3.4819202423095703
    4. 'N' (adapté à ' N') → logprob: -4.98192024230957
    5. ' start' → logprob: -5.48192024230957
    6. 'm' → logprob: -5.60692024230957
    7. '           ' → logprob: -5.85692024230957
    8. 'l' → logprob: -6.48192024230957
    9. 'p' → logprob: -6.60692024230957
    10. 's' → logprob: -7.10692024230957

Token 601: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.249780638725497e-05
    2. ' =' → logprob: -11.250032424926758
    3. '=' → logprob: -11.500032424926758
    4. ' ,' → logprob: -12.375032424926758
    5. '_,' → logprob: -13.000032424926758
    6. ',int' → logprob: -14.250032424926758
    7. 's' → logprob: -14.750032424926758
    8. ',n' → logprob: -15.125032424926758
    9. '_str' → logprob: -15.250032424926758
    10. '=int' → logprob: -15.375032424926758

Token 602: ' K' (ID: 658)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.10547396540641785
    2. 'K' → logprob: -2.9804739952087402
    3. 'L' → logprob: -3.3554739952087402
    4. 'D' → logprob: -5.35547399520874
    5. ' M' → logprob: -5.85547399520874
    6. 'k' → logprob: -6.48047399520874
    7. 'C' → logprob: -6.60547399520874
    8. 'B' → logprob: -7.10547399520874
    9. 'S' → logprob: -7.35547399520874
    10. 'Q' → logprob: -7.60547399520874

Token 603: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868741989135742
    2. '=' → logprob: -1.1368741989135742
    3. ',' → logprob: -12.886874198913574
    4. '   ' → logprob: -14.886874198913574
    5. '=int' → logprob: -15.011874198913574
    6. ' ' → logprob: -17.13687515258789
    7. '    ' → logprob: -17.51187515258789
    8. 'int' → logprob: -18.88687515258789
    9. '＝' → logprob: -18.88687515258789
    10. ')' → logprob: -18.88687515258789

Token 604: ' parts' (ID: 7881)
  Prédit: ' map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.5363603830337524
    2. 'map' → logprob: -1.2863603830337524
    3. 'int' → logprob: -2.036360263824463
    4. ' int' → logprob: -4.786360263824463
    5. '   ' → logprob: -12.661360740661621
    6. '[int' → logprob: -13.661360740661621
    7. '           ' → logprob: -14.036360740661621
    8. '    ' → logprob: -14.411360740661621
    9. '  ' → logprob: -14.661360740661621
    10. ' ' → logprob: -15.036360740661621

Token 605: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22590556740760803
    2. '=' → logprob: -1.6009055376052856
    3. '=int' → logprob: -8.350905418395996
    4. 'int' → logprob: -8.975905418395996
    5. ',' → logprob: -9.975905418395996
    6. ')' → logprob: -10.225905418395996
    7. '           ' → logprob: -10.850905418395996
    8. '[' → logprob: -11.475905418395996
    9. '       ' → logprob: -11.975905418395996
    10. '               ' → logprob: -13.350905418395996

Token 606: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0023493613116443157
    2. ' =' → logprob: -7.127349376678467
    3. ',' → logprob: -7.252349376678467
    4. '       ' → logprob: -7.752349376678467
    5. '            
' → logprob: -8.252348899841309
    6. '=' → logprob: -10.377348899841309
    7. '<|end|>' → logprob: -10.377348899841309
    8. '               ' → logprob: -11.002348899841309
    9. '
' → logprob: -11.752348899841309
    10. '<|end|>' → logprob: -12.127348899841309

Token 607: ' yield' (ID: 14376)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.34826940298080444
    2. 'yield' (adapté à ' yield') → logprob: -1.9732694625854492
    3. '           ' → logprob: -2.473269462585449
    4. 'try' → logprob: -2.848269462585449
    5. ' yield' → logprob: -5.098269462585449
    6. 'n' → logprob: -5.598269462585449
    7. ' try' → logprob: -6.598269462585449
    8. ' N' → logprob: -6.848269462585449
    9. 'return' → logprob: -7.723269462585449
    10. '```' → logprob: -10.34826946258545

Token 608: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -4.4894986785948277e-05
    2. ' int' → logprob: -10.500044822692871
    3. '(int' → logprob: -11.000044822692871
    4. '           ' → logprob: -14.375044822692871
    5. '   ' → logprob: -17.625045776367188
    6. '[int' → logprob: -18.375045776367188
    7. '               ' → logprob: -18.625045776367188
    8. '
' → logprob: -18.750045776367188
    9. '            
' → logprob: -19.500045776367188
    10. '```' → logprob: -19.875045776367188

Token 609: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0009188431431539357
    2. 'N' → logprob: -7.000918865203857
    3. '(K' → logprob: -11.8759183883667
    4. '(' → logprob: -15.2509183883667
    5. 'K' → logprob: -16.125919342041016
    6. '(
' → logprob: -17.500919342041016
    7. ' N' → logprob: -18.625919342041016
    8. '	N' → logprob: -18.625919342041016
    9. '[N' → logprob: -19.125919342041016
    10. '(n' → logprob: -19.625919342041016

Token 610: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.00030697984038852155
    2. ',' → logprob: -8.125307083129883
    3. ')' → logprob: -12.125307083129883
    4. ' ),' → logprob: -12.625307083129883
    5. ')-' → logprob: -14.125307083129883
    6. '           ' → logprob: -15.000307083129883
    7. '-' → logprob: -15.125307083129883
    8. '[' → logprob: -15.750307083129883
    9. ' ,' → logprob: -15.875307083129883
    10. '       ' → logprob: -15.875307083129883

Token 611: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0004315036640036851
    2. ' int' → logprob: -7.750431537628174
    3. '           ' → logprob: -14.125431060791016
    4. '   ' → logprob: -17.500431060791016
    5. '[int' → logprob: -18.000431060791016
    6. '(int' → logprob: -18.250431060791016
    7. ' ' → logprob: -18.875431060791016
    8. '<int' → logprob: -19.375431060791016
    9. '               ' → logprob: -19.625431060791016
    10. '       ' → logprob: -19.750431060791016

Token 612: '(K' (ID: 28797)
  Prédit: '(K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(K' → logprob: -0.12694816291332245
    2. 'K' → logprob: -2.126948118209839
    3. '(' → logprob: -11.501948356628418
    4. '(N' → logprob: -12.376948356628418
    5. ' K' → logprob: -12.751948356628418
    6. '	K' → logprob: -13.751948356628418
    7. 'N' → logprob: -14.626948356628418
    8. '(KERN' → logprob: -15.501948356628418
    9. '<K' → logprob: -15.876948356628418
    10. '(k' → logprob: -15.876948356628418

Token 613: ')


' (ID: 7861)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -8.65707261255011e-06
    2. ')
' → logprob: -11.750008583068848
    3. ' )' → logprob: -15.375008583068848
    4. '<|end|>' → logprob: -15.625008583068848
    5. ')

' → logprob: -16.875009536743164
    6. ')}' → logprob: -17.000009536743164
    7. '))' → logprob: -17.250009536743164
    8. '   ' → logprob: -17.375009536743164
    9. '       ' → logprob: -17.500009536743164
    10. ')}}' → logprob: -17.625009536743164

Token 614: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0523640401661396
    2. 'class' → logprob: -3.5523641109466553
    3. 'if' → logprob: -3.8023641109466553
    4. 'import' → logprob: -11.552364349365234
    5. 'ch' → logprob: -11.927364349365234
    6. 'digit' → logprob: -12.052364349365234
    7. 'from' → logprob: -12.302364349365234
    8. '#' → logprob: -12.427364349365234
    9. 'source' → logprob: -13.427364349365234
    10. ' if' → logprob: -13.552364349365234

Token 615: ' Output' (ID: 18315)
  Prédit: 'Digit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Digit' → logprob: -0.47454988956451416
    2. 'Solution' → logprob: -1.5995498895645142
    3. 'Solver' → logprob: -3.2245497703552246
    4. 'Output' → logprob: -3.3495497703552246
    5. 'Main' → logprob: -3.3495497703552246
    6. 'Query' → logprob: -3.9745497703552246
    7. 'Cham' → logprob: -3.9745497703552246
    8. 'Runner' → logprob: -4.849549770355225
    9. 'main' → logprob: -5.099549770355225
    10. ' Digit' → logprob: -5.474549770355225

Token 616: 'Formatter' (ID: 22956)
  Prédit: 'Writer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Writer' → logprob: -0.04354361444711685
    2. 'ter' → logprob: -3.793543577194214
    3. 'Handler' → logprob: -4.793543815612793
    4. 'Formatter' → logprob: -5.043543815612793
    5. 'Generator' → logprob: -5.793543815612793
    6. 'Printer' → logprob: -6.668543815612793
    7. 'Builder' → logprob: -7.793543815612793
    8. 'Collector' → logprob: -8.293543815612793
    9. 'Processor' → logprob: -8.918543815612793
    10. 'Manager' → logprob: -9.668543815612793

Token 617: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03365710750222206
    2. ':
' → logprob: -3.4086570739746094
    3. ':def' → logprob: -11.90865707397461
    4. ':

' → logprob: -13.28365707397461
    5. '):' → logprob: -14.28365707397461
    6. '():' → logprob: -14.90865707397461
    7. '):
' → logprob: -15.03365707397461
    8. '():
' → logprob: -15.28365707397461
    9. ':
' → logprob: -15.53365707397461
    10. '<|end|>' → logprob: -15.65865707397461

Token 618: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05128341540694237
    2. ' def' → logprob: -3.051283359527588
    3. 'def' → logprob: -5.926283359527588
    4. '```' → logprob: -11.176283836364746
    5. 'class' → logprob: -13.051283836364746
    6. ' ind' → logprob: -13.676283836364746
    7. ' indentation' → logprob: -13.676283836364746
    8. ' indent' → logprob: -13.801283836364746
    9. ' class' → logprob: -14.426283836364746
    10. ':' → logprob: -14.801283836364746

Token 619: ' @' (ID: 759)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00013738969573751092
    2. '@' (adapté à ' @') → logprob: -9.000137329101562
    3. ' def' → logprob: -11.250137329101562
    4. '   ' → logprob: -14.000137329101562
    5. 'class' → logprob: -16.000137329101562
    6. '```' → logprob: -17.375137329101562
    7. '
' → logprob: -18.625137329101562
    8. ' @' → logprob: -19.000137329101562
    9. '	def' → logprob: -20.000137329101562
    10. 'staticmethod' → logprob: -20.750137329101562

Token 620: 'staticmethod' (ID: 53164)
  Prédit: 'staticmethod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'staticmethod' → logprob: -0.00010402000043541193
    2. 'dat' → logprob: -9.500103950500488
    3. 'classmethod' → logprob: -10.500103950500488
    4. 'property' → logprob: -13.875103950500488
    5. 'static' → logprob: -14.375103950500488
    6. '@' → logprob: -17.250104904174805
    7. '@@' → logprob: -18.375104904174805
    8. 'cache' → logprob: -20.375104904174805
    9. ' static' → logprob: -21.750104904174805
    10. '__' → logprob: -22.375104904174805

Token 621: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.10330720990896225
    2. '   ' → logprob: -2.6033072471618652
    3. '
' → logprob: -3.9783072471618652
    4. ' def' → logprob: -5.228307247161865
    5. '()
' → logprob: -11.478306770324707
    6. ' ' → logprob: -11.603306770324707
    7. '(' → logprob: -11.978306770324707
    8. '(def' → logprob: -12.728306770324707
    9. '  ' → logprob: -12.853306770324707
    10. '```' → logprob: -13.228306770324707

Token 622: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0044440049678087234
    2. '
' → logprob: -5.504444122314453
    3. ' def' → logprob: -8.004444122314453
    4. '   ' → logprob: -10.379444122314453
    5. '    
' → logprob: -15.754444122314453
    6. '```' → logprob: -16.004444122314453
    7. '	def' → logprob: -16.879444122314453
    8. ' ' → logprob: -17.129444122314453
    9. '  
' → logprob: -17.879444122314453
    10. '(def' → logprob: -18.379444122314453

Token 623: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -4.727905979962088e-05
    2. '
' → logprob: -10.00004768371582
    3. ' def' → logprob: -13.37504768371582
    4. '   ' → logprob: -15.37504768371582
    5. '    
' → logprob: -17.37504768371582
    6. '```' → logprob: -21.37504768371582
    7. 'class' → logprob: -21.87504768371582
    8. '  
' → logprob: -21.87504768371582
    9. 'staticmethod' → logprob: -22.37504768371582
    10. 'classmethod' → logprob: -22.50004768371582

Token 624: ' format' (ID: 6011)
  Prédit: 'format'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'format' → logprob: -0.0005798388738185167
    2. 'print' → logprob: -7.875579833984375
    3. 'digit' → logprob: -9.500579833984375
    4. 'answer' → logprob: -10.375579833984375
    5. 'output' → logprob: -10.500579833984375
    6. 'result' → logprob: -10.500579833984375
    7. 'single' → logprob: -11.125579833984375
    8. 'write' → logprob: -12.250579833984375
    9. 'char' → logprob: -12.375579833984375
    10. ' format' → logprob: -12.875579833984375

Token 625: '_digits' (ID: 108638)
  Prédit: '('{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('{}' → logprob: -1.2859020233154297
    2. '('' → logprob: -1.6609020233154297
    3. '('{' → logprob: -1.7859020233154297
    4. '(N' → logprob: -1.9109020233154297
    5. '(' → logprob: -2.4109020233154297
    6. '("{' → logprob: -3.6609020233154297
    7. '("{}' → logprob: -3.7859020233154297
    8. '_number' → logprob: -3.7859020233154297
    9. '(number' → logprob: -4.41090202331543
    10. '(f' → logprob: -4.91090202331543

Token 626: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.00040302498382516205
    2. ' (' → logprob: -9.37540340423584
    3. '(N' → logprob: -9.50040340423584
    4. '(n' → logprob: -9.87540340423584
    5. '(count' → logprob: -10.25040340423584
    6. '(numbers' → logprob: -10.50040340423584
    7. '(' → logprob: -10.62540340423584
    8. '(k' → logprob: -10.62540340423584
    9. '(number' → logprob: -11.12540340423584
    10. '(chars' → logprob: -11.12540340423584

Token 627: 'igits' (ID: 64824)
  Prédit: 'igits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'igits' → logprob: -0.0016049596015363932
    2. 'igs' → logprob: -7.626605033874512
    3. 'ef' → logprob: -7.876605033874512
    4. 'ig' → logprob: -8.001605033874512
    5. 'igts' → logprob: -9.001605033874512
    6. 'igit' → logprob: -9.001605033874512
    7. '(' → logprob: -9.876605033874512
    8. '{' → logprob: -11.501605033874512
    9. '(str' → logprob: -11.626605033874512
    10. ')' → logprob: -11.751605033874512

Token 628: ':' (ID: 25)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.2876034379005432
    2. ':' → logprob: -1.5376033782958984
    3. ',' → logprob: -4.162603378295898
    4. '):' → logprob: -4.287603378295898
    5. ')' → logprob: -6.287603378295898
    6. '   ' → logprob: -6.787603378295898
    7. '(' → logprob: -7.037603378295898
    8. ' (' → logprob: -7.537603378295898
    9. 'digits' → logprob: -8.037603378295898
    10. '```' → logprob: -9.162603378295898

Token 629: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.006874383892863989
    2. ')' → logprob: -5.8818745613098145
    3. 'digits' → logprob: -6.1318745613098145
    4. ' str' → logprob: -6.8818745613098145
    5. 'list' → logprob: -7.6318745613098145
    6. '[str' → logprob: -8.881874084472656
    7. 'int' → logprob: -10.131874084472656
    8. '(str' → logprob: -10.506874084472656
    9. '`' → logprob: -10.631874084472656
    10. ',' → logprob: -10.631874084472656

Token 630: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00011450992315076292
    2. ',' → logprob: -9.250114440917969
    3. '   ' → logprob: -11.625114440917969
    4. '):' → logprob: -12.250114440917969
    5. ' )' → logprob: -12.750114440917969
    6. '):
' → logprob: -14.625114440917969
    7. '       ' → logprob: -15.000114440917969
    8. ')->' → logprob: -15.250114440917969
    9. '`)' → logprob: -15.875114440917969
    10. '  ' → logprob: -16.87511444091797

Token 631: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.034445781260728836
    2. '->' → logprob: -4.534445762634277
    3. ':return' → logprob: -4.534445762634277
    4. ' ->' → logprob: -4.909445762634277
    5. ':
' → logprob: -5.534445762634277
    6. '   ' → logprob: -8.034445762634277
    7. '(' → logprob: -8.159445762634277
    8. '       ' → logprob: -8.659445762634277
    9. '():' → logprob: -9.034445762634277
    10. 'return' → logprob: -10.409445762634277

Token 632: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.0009086026693694293
    2. ' str' → logprob: -7.375908374786377
    3. 'list' → logprob: -9.375908851623535
    4. ''' → logprob: -10.000908851623535
    5. 'int' → logprob: -10.000908851623535
    6. 'None' → logprob: -10.500908851623535
    7. '[str' → logprob: -10.625908851623535
    8. 'digits' → logprob: -10.875908851623535
    9. 'bytes' → logprob: -12.250908851623535
    10. '   ' → logprob: -12.625908851623535

Token 633: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.18091590702533722
    2. '       ' → logprob: -2.6809158325195312
    3. ':
' → logprob: -2.6809158325195312
    4. '():' → logprob: -4.930915832519531
    5. '   ' → logprob: -5.055915832519531
    6. '():
' → logprob: -5.055915832519531
    7. '(' → logprob: -5.555915832519531
    8. ':return' → logprob: -6.555915832519531
    9. ',' → logprob: -6.930915832519531
    10. '(d' → logprob: -7.805915832519531

Token 634: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0016633969498798251
    2. 'return' → logprob: -6.8766632080078125
    3. ' return' → logprob: -7.3766632080078125
    4. '   ' → logprob: -12.876663208007812
    5. ' if' → logprob: -14.501663208007812
    6. '           ' → logprob: -14.626663208007812
    7. '```' → logprob: -14.626663208007812
    8. 'if' → logprob: -15.251663208007812
    9. '#' → logprob: -15.751663208007812
    10. '      ' → logprob: -15.876663208007812

Token 635: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.022281328216195107
    2. ' return' → logprob: -4.022281169891357
    3. '   ' → logprob: -6.272281169891357
    4. ''' → logprob: -6.897281169891357
    5. 'if' → logprob: -7.272281169891357
    6. '       ' → logprob: -9.022281646728516
    7. 'result' → logprob: -9.147281646728516
    8. '#' → logprob: -9.522281646728516
    9. 'group' → logprob: -9.522281646728516
    10. 'chunks' → logprob: -10.647281646728516

Token 636: ' digits' (ID: 37806)
  Prédit: 'digits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digits' → logprob: -0.1305406391620636
    2. ''' → logprob: -2.255540609359741
    3. ''d' → logprob: -4.50554084777832
    4. ' digits' → logprob: -5.50554084777832
    5. '''.' → logprob: -6.38054084777832
    6. ' '' → logprob: -8.00554084777832
    7. '',' → logprob: -9.63054084777832
    8. '','.' → logprob: -10.13054084777832
    9. ''-' → logprob: -10.25554084777832
    10. ' ''.' → logprob: -10.63054084777832

Token 637: '


' (ID: 2499)
  Prédit: '[:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.06964360922574997
    2. '<|end|>' → logprob: -3.194643497467041
    3. '[:]' → logprob: -5.194643497467041
    4. '.replace' → logprob: -5.444643497467041
    5. '[' → logprob: -5.569643497467041
    6. '#' → logprob: -5.694643497467041
    7. 'def' → logprob: -5.819643497467041
    8. '.join' → logprob: -6.444643497467041
    9. '.rstrip' → logprob: -7.194643497467041
    10. '[::-' → logprob: -7.444643497467041

Token 638: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.0034717784728854895
    2. 'def' → logprob: -5.878471851348877
    3. 'digit' → logprob: -7.753471851348877
    4. 'if' → logprob: -8.878471374511719
    5. 'source' → logprob: -9.878471374511719
    6. '#' → logprob: -11.128471374511719
    7. 'ch' → logprob: -11.253471374511719
    8. 'digits' → logprob: -11.378471374511719
    9. ' cham' → logprob: -13.378471374511719
    10. 'input' → logprob: -13.503471374511719

Token 639: ' Cham' (ID: 81008)
  Prédit: 'Solution'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Solution' → logprob: -0.07132360339164734
    2. 'Main' → logprob: -3.6963236331939697
    3. 'Solver' → logprob: -3.8213236331939697
    4. 'Digit' → logprob: -4.446323394775391
    5. ' Solution' → logprob: -5.571323394775391
    6. 'Cham' → logprob: -6.321323394775391
    7. 'main' → logprob: -6.571323394775391
    8. 'Runner' → logprob: -6.821323394775391
    9. 'Problem' → logprob: -7.571323394775391
    10. ' Solver' → logprob: -7.821323394775391

Token 640: 'per' (ID: 543)
  Prédit: 'per'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'per' → logprob: -3.650518920039758e-06
    2. 'pen' → logprob: -13.375003814697266
    3. 'p' → logprob: -14.250003814697266
    4. 'пер' → logprob: -14.750003814697266
    5. 'peror' → logprob: -14.875003814697266
    6. 'ber' → logprob: -14.875003814697266
    7. 'pper' → logprob: -17.000003814697266
    8. 'pering' → logprob: -17.125003814697266
    9. 'pero' → logprob: -17.250003814697266
    10. 'perl' → logprob: -18.125003814697266

Token 641: 'now' (ID: 6201)
  Prédit: 'now'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'now' → logprob: -4.723352049040841e-06
    2. 'nown' → logprob: -12.750004768371582
    3. ' now' → logprob: -13.625004768371582
    4. 'new' → logprob: -15.250004768371582
    5. 'Now' → logprob: -15.375004768371582
    6. 'n' → logprob: -17.875003814697266
    7. 'own' → logprob: -18.000003814697266
    8. 'next' → logprob: -18.000003814697266
    9. 'none' → logprob: -18.125003814697266
    10. 'no' → logprob: -18.500003814697266

Token 642: 'ne' (ID: 611)
  Prédit: 'ne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ne' → logprob: -7.584239938296378e-06
    2. 'e' → logprob: -13.000007629394531
    3. 'ch' → logprob: -13.125007629394531
    4. 'n' → logprob: -13.500007629394531
    5. 'ane' → logprob: -14.750007629394531
    6. 'na' → logprob: -15.625007629394531
    7. '   ' → logprob: -15.875007629394531
    8. 'nne' → logprob: -15.875007629394531
    9. 'Ch' → logprob: -16.25000762939453
    10. 'a' → logprob: -16.37500762939453

Token 643: 'Solver' (ID: 70484)
  Prédit: 'Constant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Constant' → logprob: -7.398067828034982e-05
    2. 'Source' → logprob: -10.75007438659668
    3. 'Const' → logprob: -11.62507438659668
    4. '(Constant' → logprob: -11.75007438659668
    5. 'Digit' → logprob: -12.37507438659668
    6. 'Multiplier' → logprob: -12.50007438659668
    7. 'Constants' → logprob: -12.62507438659668
    8. 'Calculator' → logprob: -12.62507438659668
    9. '.Constant' → logprob: -12.62507438659668
    10. 'Generator' → logprob: -13.50007438659668

Token 644: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.009777928702533245
    2. ':
' → logprob: -4.634778022766113
    3. ':def' → logprob: -11.509778022766113
    4. '   ' → logprob: -12.759778022766113
    5. ' :' → logprob: -12.759778022766113
    6. ':

' → logprob: -13.384778022766113
    7. '):' → logprob: -13.759778022766113
    8. '():' → logprob: -13.884778022766113
    9. '<|end|>' → logprob: -14.884778022766113
    10. '>:' → logprob: -14.884778022766113

Token 645: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0017608561320230365
    2. ' def' → logprob: -6.376760959625244
    3. 'def' → logprob: -9.751760482788086
    4. 'class' → logprob: -15.251760482788086
    5. '    ' → logprob: -15.626760482788086
    6. '   ' → logprob: -16.501760482788086
    7. ' class' → logprob: -16.626760482788086
    8. '```' → logprob: -17.126760482788086
    9. '    
' → logprob: -17.626760482788086
    10. '	def' → logprob: -18.126760482788086

Token 646: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.07980287075042725
    2. ' def' → logprob: -2.579802989959717
    3. '   ' → logprob: -7.204802989959717
    4. 'class' → logprob: -8.704802513122559
    5. '__' → logprob: -12.954802513122559
    6. '```' → logprob: -14.454802513122559
    7. ' ' → logprob: -14.579802513122559
    8. ' __' → logprob: -16.079803466796875
    9. '	def' → logprob: -16.204803466796875
    10. 'import' → logprob: -16.454803466796875

Token 647: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.05875565484166145
    2. ' def' → logprob: -3.68375563621521
    3. '__' → logprob: -4.058755874633789
    4. 'init' → logprob: -4.808755874633789
    5. 'def' → logprob: -5.058755874633789
    6. '_init' → logprob: -9.308755874633789
    7. ' init' → logprob: -10.058755874633789
    8. 'solve' → logprob: -12.058755874633789
    9. '.__' → logprob: -12.808755874633789
    10. 'class' → logprob: -12.808755874633789

Token 648: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: 0.0
    2. 'def' → logprob: -17.75
    3. ' init' → logprob: -18.0
    4. 'new' → logprob: -19.25
    5. '   ' → logprob: -19.875
    6. '(init' → logprob: -20.875
    7. '```' → logprob: -21.25
    8. 'call' → logprob: -21.5
    9. 'int' → logprob: -21.875
    10. '  ' → logprob: -22.25

Token 649: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0035434053279459476
    2. '__(' → logprob: -5.753543376922607
    3. ' (' → logprob: -8.628543853759766
    4. '   ' → logprob: -9.378543853759766
    5. '(' → logprob: -9.503543853759766
    6. '       ' → logprob: -11.378543853759766
    7. 'self' → logprob: -12.253543853759766
    8. '```' → logprob: -12.253543853759766
    9. '(this' → logprob: -13.503543853759766
    10. '_(' → logprob: -13.628543853759766

Token 650: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0011197380954399705
    2. ')' → logprob: -6.876119613647461
    3. '):
' → logprob: -9.501119613647461
    4. ' self' → logprob: -12.376119613647461
    5. '):' → logprob: -13.126119613647461
    6. '   ' → logprob: -13.251119613647461
    7. '       ' → logprob: -13.376119613647461
    8. '
' → logprob: -13.751119613647461
    9. '(self' → logprob: -14.626119613647461
    10. '):

' → logprob: -14.626119613647461

Token 651: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.539013147354126
    2. ',' → logprob: -0.914013147354126
    3. '):' → logprob: -4.164012908935547
    4. ' ):
' → logprob: -9.914012908935547
    5. '       ' → logprob: -10.164012908935547
    6. '   ' → logprob: -10.289012908935547
    7. 'self' → logprob: -10.414012908935547
    8. ' ,' → logprob: -11.039012908935547
    9. '):
' → logprob: -11.414012908935547
    10. '():
' → logprob: -11.789012908935547

Token 652: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5763124227523804
    2. 'self' → logprob: -0.8263124227523804
    3. ' self' → logprob: -7.95131254196167
    4. '(self' → logprob: -12.326312065124512
    5. 'def' → logprob: -12.576312065124512
    6. '   ' → logprob: -12.576312065124512
    7. '```' → logprob: -12.576312065124512
    8. '):
' → logprob: -12.951312065124512
    9. '
' → logprob: -13.451312065124512
    10. '	self' → logprob: -14.576312065124512

Token 653: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.10308551788330078
    2. '       ' → logprob: -2.353085517883301
    3. ' self' → logprob: -5.853085517883301
    4. 'def' → logprob: -13.1030855178833
    5. '
' → logprob: -13.7280855178833
    6. '   ' → logprob: -15.4780855178833
    7. '(self' → logprob: -16.728084564208984
    8. '      ' → logprob: -17.103084564208984
    9. '	self' → logprob: -17.103084564208984
    10. ' ' → logprob: -17.228084564208984

Token 654: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.010022380389273167
    2. '.d' → logprob: -5.010022163391113
    3. '.source' → logprob: -6.385022163391113
    4. '.ch' → logprob: -6.885022163391113
    5. '.constant' → logprob: -8.135022163391113
    6. '   ' → logprob: -9.135022163391113
    7. '_source' → logprob: -9.635022163391113
    8. ' =' → logprob: -10.760022163391113
    9. 'source' → logprob: -11.010022163391113
    10. ' .' → logprob: -11.135022163391113

Token 655: 'constant' (ID: 60706)
  Prédit: 'constant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'constant' → logprob: -0.29904431104660034
    2. 'source' → logprob: -1.6740443706512451
    3. 'digit' → logprob: -3.174044370651245
    4. 'ch' → logprob: -3.799044370651245
    5. 'const' → logprob: -5.799044132232666
    6. 'cc' → logprob: -5.924044132232666
    7. 'digits' → logprob: -7.674044132232666
    8. 'sequence' → logprob: -9.299044609069824
    9. 'cs' → logprob: -9.549044609069824
    10. 'c' → logprob: -9.549044609069824

Token 656: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1602255403995514
    2. '=' → logprob: -1.910225510597229
    3. '   ' → logprob: -13.785225868225098
    4. 's' → logprob: -16.28522491455078
    5. '  ' → logprob: -16.66022491455078
    6. '_source' → logprob: -16.91022491455078
    7. ' ' → logprob: -17.03522491455078
    8. '    ' → logprob: -17.91022491455078
    9. 'Source' → logprob: -18.41022491455078
    10. 'source' → logprob: -18.53522491455078

Token 657: ' Cham' (ID: 81008)
  Prédit: 'Cham'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Cham' → logprob: -2.3319124011322856e-05
    2. ' Cham' → logprob: -10.750022888183594
    3. 'Ch' → logprob: -13.250022888183594
    4. '   ' → logprob: -19.250022888183594
    5. 'Cha' → logprob: -21.625022888183594
    6. ' ' → logprob: -21.625022888183594
    7. 'CH' → logprob: -21.750022888183594
    8. ' cham' → logprob: -21.875022888183594
    9. 'Champ' → logprob: -22.250022888183594
    10. 'Chord' → logprob: -22.250022888183594

Token 658: 'per' (ID: 543)
  Prédit: 'per'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'per' → logprob: -1.0280383548888494e-06
    2. 'ber' → logprob: -14.875000953674316
    3. 'pen' → logprob: -14.875000953674316
    4. 'пер' → logprob: -15.875000953674316
    5. 'p' → logprob: -16.125001907348633
    6. 'er' → logprob: -18.000001907348633
    7. 'fer' → logprob: -18.250001907348633
    8. 'peror' → logprob: -18.625001907348633
    9. 'pon' → logprob: -19.000001907348633
    10. 'period' → logprob: -20.000001907348633

Token 659: 'now' (ID: 6201)
  Prédit: 'now'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'now' → logprob: -2.2007883671903983e-05
    2. 'own' → logprob: -11.125021934509277
    3. 'ow' → logprob: -12.625021934509277
    4. 'nown' → logprob: -12.875021934509277
    5. ' now' → logprob: -13.875021934509277
    6. 'new' → logprob: -15.750021934509277
    7. 'none' → logprob: -16.375022888183594
    8. 'Now' → logprob: -16.500022888183594
    9. '.now' → logprob: -18.250022888183594
    10. 'row' → logprob: -18.250022888183594

Token 660: 'ne' (ID: 611)
  Prédit: 'ne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ne' → logprob: -0.0038554170168936253
    2. 'e' → logprob: -5.878855228424072
    3. 'ane' → logprob: -7.003855228424072
    4. 'a' → logprob: -10.25385570526123
    5. 'he' → logprob: -10.50385570526123
    6. 'one' → logprob: -11.00385570526123
    7. 'che' → logprob: -11.12885570526123
    8. 'ch' → logprob: -11.37885570526123
    9. 'Constant' → logprob: -11.87885570526123
    10. 'hne' → logprob: -11.87885570526123

Token 661: 'Constant' (ID: 19510)
  Prédit: 'Constant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Constant' → logprob: -7.822646693966817e-06
    2. 'constant' → logprob: -12.125007629394531
    3. 'const' → logprob: -13.375007629394531
    4. 'class' → logprob: -15.000007629394531
    5. '_constant' → logprob: -15.250007629394531
    6. 'Const' → logprob: -15.625007629394531
    7. '.Constant' → logprob: -17.00000762939453
    8. 'Constants' → logprob: -17.25000762939453
    9. '```' → logprob: -17.62500762939453
    10. '(Constant' → logprob: -17.75000762939453

Token 662: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07932166010141373
    2. 'def' → logprob: -2.8293216228485107
    3. '
' → logprob: -4.70432186126709
    4. ' def' → logprob: -5.70432186126709
    5. '<|end|>' → logprob: -5.82932186126709
    6. '    
' → logprob: -6.95432186126709
    7. '<|end|>' → logprob: -7.82932186126709
    8. '```' → logprob: -8.07932186126709
    9. '        
' → logprob: -9.95432186126709
    10. '	def' → logprob: -10.07932186126709

Token 663: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007300990633666515
    2. 'def' → logprob: -5.007300853729248
    3. ' def' → logprob: -7.757300853729248
    4. '```' → logprob: -8.757301330566406
    5. '
' → logprob: -15.132301330566406
    6. '	def' → logprob: -15.632301330566406
    7. ',' → logprob: -17.757301330566406
    8. '   ' → logprob: -17.882301330566406
    9. '``' → logprob: -18.007301330566406
    10. '    
' → logprob: -18.132301330566406

Token 664: ' self' (ID: 1051)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0018225008388981223
    2. '
' → logprob: -6.751822471618652
    3. '   ' → logprob: -7.876822471618652
    4. ' def' → logprob: -8.251822471618652
    5. 'self' (adapté à ' self') → logprob: -12.001822471618652
    6. '    
' → logprob: -12.751822471618652
    7. '        
' → logprob: -13.501822471618652
    8. '<|end|>' → logprob: -14.876822471618652
    9. '

' → logprob: -15.001822471618652
    10. 'import' → logprob: -15.251822471618652

Token 665: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.039190616458654404
    2. 'def' → logprob: -4.039190769195557
    3. '.' → logprob: -4.664190769195557
    4. '_output' → logprob: -5.914190769195557
    5. '.output' → logprob: -6.539190769195557
    6. ' def' → logprob: -6.914190769195557
    7. '   ' → logprob: -7.039190769195557
    8. '.input' → logprob: -7.164190769195557
    9. '_input' → logprob: -7.164190769195557
    10. '.def' → logprob: -7.289190769195557

Token 666: 'parser' (ID: 13297)
  Prédit: 'output'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'output' → logprob: -0.13895659148693085
    2. 'parser' → logprob: -3.1389565467834473
    3. 'input' → logprob: -3.3889565467834473
    4. 'formatter' → logprob: -3.7639565467834473
    5. 'cache' → logprob: -4.138956546783447
    6. 'source' → logprob: -5.888956546783447
    7. 'buffer' → logprob: -6.013956546783447
    8. 'outputs' → logprob: -6.263956546783447
    9. 'cached' → logprob: -6.513956546783447
    10. 'memo' → logprob: -6.763956546783447

Token 667: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25193166732788086
    2. ' =' → logprob: -1.5019316673278809
    3. '   ' → logprob: -13.876932144165039
    4. ' ' → logprob: -15.001932144165039
    5. 'import' → logprob: -15.001932144165039
    6. '<|end|>' → logprob: -15.001932144165039
    7. '=input' → logprob: -15.876932144165039
    8. '  ' → logprob: -16.12693214416504
    9. 'class' → logprob: -16.25193214416504
    10. 'parser' → logprob: -16.75193214416504

Token 668: ' Input' (ID: 10090)
  Prédit: 'Input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Input' → logprob: -1.1472419600977446e-06
    2. ' Input' → logprob: -13.750000953674316
    3. 'input' → logprob: -21.625001907348633
    4. 'Output' → logprob: -23.250001907348633
    5. 'self' → logprob: -23.375001907348633
    6. '	Input' → logprob: -23.625001907348633
    7. '<Input' → logprob: -23.750001907348633
    8. '   ' → logprob: -25.375001907348633
    9. '_input' → logprob: -25.375001907348633
    10. 'INPUT' → logprob: -25.500001907348633

Token 669: 'Parser' (ID: 9231)
  Prédit: 'Parser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Parser' → logprob: -3.128163257315464e-07
    2. 'parser' → logprob: -15.5
    3. '_parser' → logprob: -17.25
    4. '.Parser' → logprob: -20.0
    5. ' Parser' → logprob: -20.375
    6. '(Parser' → logprob: -20.625
    7. 'Parse' → logprob: -20.75
    8. 'Processor' → logprob: -20.875
    9. 'Parsing' → logprob: -21.375
    10. '   ' → logprob: -21.75

Token 670: '()
' (ID: 1234)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6308907270431519
    2. '       ' → logprob: -1.2558907270431519
    3. '   ' → logprob: -1.7558907270431519
    4. '<|end|>' → logprob: -4.880890846252441
    5. 'def' → logprob: -6.380890846252441
    6. '<|end|>' → logprob: -8.005890846252441
    7. '    
' → logprob: -8.755890846252441
    8. 'self' → logprob: -9.005890846252441
    9. ' def' → logprob: -10.005890846252441
    10. ' self' → logprob: -10.130890846252441

Token 671: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06701171398162842
    2. 'def' → logprob: -2.817011833190918
    3. ' def' → logprob: -5.442011833190918
    4. '
' → logprob: -7.942011833190918
    5. '       ' → logprob: -8.442011833190918
    6. '<|end|>' → logprob: -9.192011833190918
    7. '<|end|>' → logprob: -11.692011833190918
    8. '	def' → logprob: -11.817011833190918
    9. '```' → logprob: -12.442011833190918
    10. ' ' → logprob: -12.942011833190918

Token 672: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.011178325861692429
    2. 'def' → logprob: -4.511178493499756
    3. '
' → logprob: -9.761178016662598
    4. ' self' → logprob: -10.261178016662598
    5. '       ' → logprob: -10.386178016662598
    6. '   ' → logprob: -12.136178016662598
    7. '        
' → logprob: -14.386178016662598
    8. '	self' → logprob: -14.386178016662598
    9. ' def' → logprob: -15.886178016662598
    10. '(self' → logprob: -16.386178970336914

Token 673: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.0004155377100687474
    2. '_output' → logprob: -8.500415802001953
    3. '_formatter' → logprob: -9.375415802001953
    4. '_outputs' → logprob: -10.375415802001953
    5. '.' → logprob: -10.625415802001953
    6. 'def' → logprob: -10.750415802001953
    7. '   ' → logprob: -11.750415802001953
    8. '_results' → logprob: -12.250415802001953
    9. '_' → logprob: -12.500415802001953
    10. '.output' → logprob: -12.500415802001953

Token 674: 'formatter' (ID: 69052)
  Prédit: 'formatter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'formatter' → logprob: -0.1607915759086609
    2. 'output' → logprob: -1.9107916355133057
    3. 'lines' → logprob: -8.535791397094727
    4. 'outputs' → logprob: -9.285791397094727
    5. 'parser' → logprob: -9.410791397094727
    6. 'buffer' → logprob: -9.910791397094727
    7. 'out' → logprob: -10.035791397094727
    8. 'results' → logprob: -10.410791397094727
    9. 'solver' → logprob: -11.410791397094727
    10. '_formatter' → logprob: -11.535791397094727

Token 675: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47413429617881775
    2. ' =' → logprob: -0.9741343259811401
    3. '   ' → logprob: -9.84913444519043
    4. ' ' → logprob: -12.97413444519043
    5. '  ' → logprob: -13.72413444519043
    6. '    ' → logprob: -15.22413444519043
    7. '.' → logprob: -15.34913444519043
    8. '       ' → logprob: -15.97413444519043
    9. 'class' → logprob: -16.22413444519043
    10. 'import' → logprob: -16.84913444519043

Token 676: ' Output' (ID: 18315)
  Prédit: 'Output'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Output' → logprob: -2.7610454708337784e-05
    2. ' Output' → logprob: -10.500027656555176
    3. '	Output' → logprob: -19.00002670288086
    4. 'Input' → logprob: -20.00002670288086
    5. ' ' → logprob: -20.37502670288086
    6. '   ' → logprob: -20.87502670288086
    7. '(Output' → logprob: -22.25002670288086
    8. 'output' → logprob: -22.75002670288086
    9. '
' → logprob: -23.00002670288086
    10. '  ' → logprob: -23.12502670288086

Token 677: 'Formatter' (ID: 22956)
  Prédit: 'Formatter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Formatter' → logprob: 0.0
    2. 'Format' → logprob: -18.25
    3. 'Parser' → logprob: -19.25
    4. '_formatter' → logprob: -19.75
    5. 'formatter' → logprob: -20.625
    6. ' Formatter' → logprob: -21.0
    7. 'Validator' → logprob: -21.625
    8. 'Tokenizer' → logprob: -21.875
    9. 'Output' → logprob: -22.375
    10. 'Optimizer' → logprob: -22.5

Token 678: '()

' (ID: 5874)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4764818251132965
    2. '
' → logprob: -0.9764817953109741
    3. '

' → logprob: -7.101481914520264
    4. 'def' → logprob: -7.351481914520264
    5. '    
' → logprob: -7.851481914520264
    6. '<|end|>' → logprob: -7.976481914520264
    7. '<|end|>' → logprob: -9.476481437683105
    8. ' def' → logprob: -9.601481437683105
    9. '
' → logprob: -10.726481437683105
    10. '	def' → logprob: -11.226481437683105

Token 679: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6110787987709045
    2. 'def' → logprob: -1.1110787391662598
    3. '
' → logprob: -2.2360787391662598
    4. ' def' → logprob: -3.8610787391662598
    5. '    
' → logprob: -9.361079216003418
    6. '

' → logprob: -11.611079216003418
    7. '	def' → logprob: -12.111079216003418
    8. '        
' → logprob: -12.986079216003418
    9. ' ' → logprob: -12.986079216003418
    10. '```' → logprob: -13.361079216003418

Token 680: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -6.704273118884885e-07
    2. ' def' → logprob: -14.250000953674316
    3. '   ' → logprob: -20.375
    4. '
' → logprob: -22.125
    5. 'async' → logprob: -22.125
    6. '	def' → logprob: -24.625
    7. '    
' → logprob: -25.25
    8. '```' → logprob: -26.25
    9. 'class' → logprob: -26.75
    10. '@property' → logprob: -27.625

Token 681: ' feed' (ID: 7685)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' → logprob: -0.649252712726593
    2. ' solve' → logprob: -1.5242526531219482
    3. ' run' → logprob: -1.8992526531219482
    4. 'run' → logprob: -2.6492526531219482
    5. 'process' → logprob: -3.8992526531219482
    6. ' process' → logprob: -4.274252891540527
    7. ' feed' → logprob: -6.274252891540527
    8. 'feed' → logprob: -7.149252891540527
    9. '_run' → logprob: -7.399252891540527
    10. 'read' → logprob: -7.774252891540527

Token 682: '_input' (ID: 12507)
  Prédit: '_line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -5.6457742175552994e-05
    2. '_input' → logprob: -10.500056266784668
    3. '_' → logprob: -10.875056266784668
    4. 'line' → logprob: -12.375056266784668
    5. '_lines' → logprob: -12.500056266784668
    6. '(' → logprob: -15.125056266784668
    7. '_data' → logprob: -15.250056266784668
    8. '(line' → logprob: -15.250056266784668
    9. '_raw' → logprob: -15.375056266784668
    10. '   ' → logprob: -15.875056266784668

Token 683: '_line' (ID: 14418)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.3440518379211426
    2. '(line' → logprob: -1.7190518379211426
    3. '(' → logprob: -2.2190518379211426
    4. '_line' → logprob: -7.344051837921143
    5. '<|end|>' → logprob: -7.469051837921143
    6. '(user' → logprob: -8.094051361083984
    7. '(
' → logprob: -8.344051361083984
    8. '(raw' → logprob: -8.344051361083984
    9. '(lines' → logprob: -8.594051361083984
    10. '()' → logprob: -8.844051361083984

Token 684: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.3489243984222412
    2. '(' → logprob: -1.2239243984222412
    3. ' (' → logprob: -8.59892463684082
    4. '(line' → logprob: -9.09892463684082
    5. '   ' → logprob: -10.09892463684082
    6. '(
' → logprob: -10.09892463684082
    7. '<|end|>' → logprob: -10.09892463684082
    8. ')' → logprob: -11.59892463684082
    9. ',' → logprob: -12.09892463684082
    10. '('' → logprob: -12.22392463684082

Token 685: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014406509581021965
    2. ',line' → logprob: -9.500144004821777
    3. '(line' → logprob: -9.750144004821777
    4. ' ,' → logprob: -12.250144004821777
    5. '(self' → logprob: -13.000144004821777
    6. ')' → logprob: -13.500144004821777
    7. 'self' → logprob: -14.375144004821777
    8. '(' → logprob: -14.500144004821777
    9. ',input' → logprob: -15.375144004821777
    10. ',
' → logprob: -15.375144004821777

Token 686: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.03826799988746643
    2. ' line' → logprob: -3.2882680892944336
    3. ')' → logprob: -8.538268089294434
    4. '	line' → logprob: -11.788268089294434
    5. '(line' → logprob: -12.038268089294434
    6. '   ' → logprob: -12.288268089294434
    7. '#line' → logprob: -13.038268089294434
    8. '<|end|>' → logprob: -13.038268089294434
    9. '=line' → logprob: -13.288268089294434
    10. ' )' → logprob: -13.663268089294434

Token 687: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05505424737930298
    2. '):' → logprob: -3.430054187774658
    3. '):
' → logprob: -4.805054187774658
    4. ',' → logprob: -5.180054187774658
    5. '       ' → logprob: -5.430054187774658
    6. '   ' → logprob: -6.930054187774658
    7. ')' → logprob: -7.180054187774658
    8. '(self' → logprob: -7.180054187774658
    9. 'self' → logprob: -8.180054664611816
    10. '):
' → logprob: -9.055054664611816

Token 688: ' str' (ID: 989)
  Prédit: ' str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.6415935754776001
    2. 'str' → logprob: -1.3915935754776
    3. ' line' → logprob: -2.0165934562683105
    4. 'line' → logprob: -2.3915934562683105
    5. 'self' → logprob: -9.141593933105469
    6. ')' → logprob: -9.391593933105469
    7. '=line' → logprob: -10.141593933105469
    8. '   ' → logprob: -11.266593933105469
    9. ' self' → logprob: -11.641593933105469
    10. '(line' → logprob: -12.016593933105469

Token 689: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.31658056378364563
    2. '):' → logprob: -1.3165805339813232
    3. ')' → logprob: -5.941580772399902
    4. '):
' → logprob: -7.691580772399902
    5. ':' → logprob: -8.566580772399902
    6. '   ' → logprob: -10.316580772399902
    7. '       ' → logprob: -12.566580772399902
    8. ')->' → logprob: -14.066580772399902
    9. '):

' → logprob: -14.816580772399902
    10. ' ):
' → logprob: -15.566580772399902

Token 690: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -8.64970643306151e-05
    2. 'self' → logprob: -10.000086784362793
    3. ' self' → logprob: -10.375086784362793
    4. '   ' → logprob: -11.625086784362793
    5. '```' → logprob: -14.625086784362793
    6. '           ' → logprob: -16.500085830688477
    7. '(self' → logprob: -16.625085830688477
    8. ',' → logprob: -16.875085830688477
    9. '
' → logprob: -17.625085830688477
    10. '):
' → logprob: -18.000085830688477

Token 691: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.03864644095301628
    2. ' self' → logprob: -3.2886464595794678
    3. '       ' → logprob: -7.413646221160889
    4. '   ' → logprob: -13.788646697998047
    5. '	self' → logprob: -15.163646697998047
    6. '
' → logprob: -15.413646697998047
    7. ' ' → logprob: -16.413646697998047
    8. '(self' → logprob: -16.913646697998047
    9. '[self' → logprob: -17.038646697998047
    10. '           ' → logprob: -17.788646697998047

Token 692: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: 0.0
    2. '   ' → logprob: -18.75
    3. '.' → logprob: -18.875
    4. ']._' → logprob: -18.875
    5. '_parser' → logprob: -19.0
    6. ')._' → logprob: -19.0
    7. '       ' → logprob: -20.25
    8. '->_' → logprob: -20.5
    9. ' .' → logprob: -20.625
    10. 'self' → logprob: -20.75

Token 693: 'parser' (ID: 13297)
  Prédit: 'parser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parser' → logprob: 0.0
    2. '_parser' → logprob: -19.125
    3. 'parse' → logprob: -20.625
    4. ' parser' → logprob: -20.75
    5. '.parser' → logprob: -20.875
    6. 'parsed' → logprob: -21.25
    7. '	parser' → logprob: -21.5
    8. '(parser' → logprob: -22.375
    9. '_' → logprob: -22.5
    10. '/parser' → logprob: -22.625

Token 694: '.feed' (ID: 116886)
  Prédit: '.feed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.feed' → logprob: -2.696889623621246e-06
    2. '.' → logprob: -12.87500286102295
    3. '.fe' → logprob: -15.62500286102295
    4. ' .' → logprob: -17.125001907348633
    5. '.append' → logprob: -18.000001907348633
    6. '._' → logprob: -18.125001907348633
    7. '.food' → logprob: -18.500001907348633
    8. '.feedback' → logprob: -19.625001907348633
    9. '(feed' → logprob: -19.750001907348633
    10. '_feed' → logprob: -19.750001907348633

Token 695: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -3.583550642360933e-05
    2. 'line' → logprob: -10.250036239624023
    3. '_' → logprob: -15.625036239624023
    4. ' line' → logprob: -16.000036239624023
    5. 'Line' → logprob: -16.375036239624023
    6. '_LINE' → logprob: -17.750036239624023
    7. '(line' → logprob: -18.000036239624023
    8. '[line' → logprob: -18.875036239624023
    9. '_Line' → logprob: -19.250036239624023
    10. '#line' → logprob: -19.375036239624023

Token 696: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -2.1008713702030946e-06
    2. '(' → logprob: -13.125001907348633
    3. '=line' → logprob: -16.750001907348633
    4. '[line' → logprob: -16.875001907348633
    5. 'line' → logprob: -17.625001907348633
    6. ' line' → logprob: -18.875001907348633
    7. '#line' → logprob: -19.375001907348633
    8. ',line' → logprob: -19.750001907348633
    9. '(Line' → logprob: -20.250001907348633
    10. '(lines' → logprob: -20.375001907348633

Token 697: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.994086627149954e-05
    2. ')
' → logprob: -10.750080108642578
    3. '   ' → logprob: -11.000080108642578
    4. '       ' → logprob: -11.125080108642578
    5. '<|end|>' → logprob: -11.250080108642578
    6. ')

' → logprob: -11.375080108642578
    7. '<|end|>' → logprob: -14.250080108642578
    8. ' )' → logprob: -14.500080108642578
    9. '")' → logprob: -14.875080108642578
    10. ' ' → logprob: -15.625080108642578

Token 698: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.45456191897392273
    2. '   ' → logprob: -1.5795619487762451
    3. ' def' → logprob: -2.579561948776245
    4. 'def' → logprob: -2.579561948776245
    5. '```' → logprob: -6.079561710357666
    6. '<|end|>' → logprob: -6.204561710357666
    7. '    
' → logprob: -6.829561710357666
    8. '

' → logprob: -7.079561710357666
    9. ' 
' → logprob: -7.579561710357666
    10. '<|end|>' → logprob: -7.579561710357666

Token 699: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -2.7014437364414334e-05
    2. ' def' → logprob: -10.75002670288086
    3. '
' → logprob: -12.25002670288086
    4. '   ' → logprob: -14.12502670288086
    5. 'async' → logprob: -17.50002670288086
    6. '```' → logprob: -17.75002670288086
    7. '	def' → logprob: -18.62502670288086
    8. '

' → logprob: -18.75002670288086
    9. '    
' → logprob: -19.12502670288086
    10. 'from' → logprob: -20.50002670288086

Token 700: ' solve' (ID: 17722)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.24332372844219208
    2. 'solve' → logprob: -2.243323802947998
    3. ' parse' → logprob: -3.368323802947998
    4. '__' → logprob: -3.368323802947998
    5. 'def' → logprob: -3.993323802947998
    6. ' solve' → logprob: -4.118323802947998
    7. ' def' → logprob: -6.368323802947998
    8. 'process' → logprob: -6.618323802947998
    9. 'run' → logprob: -6.743323802947998
    10. ' __' → logprob: -7.368323802947998

Token 701: '_all' (ID: 13305)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -2.5776860184123507e-06
    2. '(' → logprob: -13.50000286102295
    3. 'self' → logprob: -14.37500286102295
    4. '   ' → logprob: -15.75000286102295
    5. '_(' → logprob: -16.125001907348633
    6. '       ' → logprob: -16.500001907348633
    7. '(se' → logprob: -16.875001907348633
    8. '(s' → logprob: -17.125001907348633
    9. '(sel' → logprob: -17.250001907348633
    10. 'def' → logprob: -17.625001907348633

Token 702: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -2.927930654550437e-05
    2. '   ' → logprob: -10.875029563903809
    3. '       ' → logprob: -12.125029563903809
    4. '(' → logprob: -12.375029563903809
    5. 'self' → logprob: -14.500029563903809
    6. '```' → logprob: -16.375028610229492
    7. ' (' → logprob: -16.750028610229492
    8. 'def' → logprob: -17.750028610229492
    9. '():
' → logprob: -18.375028610229492
    10. ' ' → logprob: -18.500028610229492

Token 703: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.010408126749098301
    2. '):' → logprob: -4.8854079246521
    3. ',' → logprob: -7.2604079246521
    4. 'self' → logprob: -7.3854079246521
    5. '   ' → logprob: -7.6354079246521
    6. '       ' → logprob: -7.6354079246521
    7. ')' → logprob: -8.010408401489258
    8. '):
' → logprob: -9.135408401489258
    9. '(self' → logprob: -9.760408401489258
    10. ')->' → logprob: -13.010408401489258

Token 704: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0032978474628180265
    2. 'for' → logprob: -6.003297805786133
    3. ' for' → logprob: -7.128297805786133
    4. '   ' → logprob: -11.003297805786133
    5. 'results' → logprob: -14.253297805786133
    6. 'result' → logprob: -14.628297805786133
    7. '```' → logprob: -14.878297805786133
    8. '()' → logprob: -15.003297805786133
    9. '           ' → logprob: -15.378297805786133
    10. 'return' → logprob: -15.503297805786133

Token 705: ' results' (ID: 4376)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5945925712585449
    2. '       ' → logprob: -0.8445925712585449
    3. 'results' (adapté à ' results') → logprob: -4.094592571258545
    4. ' for' → logprob: -6.594592571258545
    5. 'result' → logprob: -7.969592571258545
    6. '   ' → logprob: -9.844593048095703
    7. ' results' → logprob: -10.094593048095703
    8. 'outputs' → logprob: -11.969593048095703
    9. 'output' → logprob: -13.844593048095703
    10. '```' → logprob: -14.219593048095703

Token 706: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12693576514720917
    2. '=' → logprob: -2.1269357204437256
    3. '=[]' → logprob: -12.501935958862305
    4. '   ' → logprob: -13.001935958862305
    5. ' ' → logprob: -14.001935958862305
    6. '=[]
' → logprob: -14.501935958862305
    7. ':' → logprob: -15.376935958862305
    8. '  ' → logprob: -16.126935958862305
    9. '[]' → logprob: -17.001935958862305
    10. ',' → logprob: -17.501935958862305

Token 707: ' []
' (ID: 8911)
  Prédit: '[]
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]
' → logprob: -0.10088314116001129
    2. '[]' → logprob: -2.3508832454681396
    3. ' []
' → logprob: -7.3508830070495605
    4. ' []' → logprob: -10.350883483886719
    5. '[]

' → logprob: -13.100883483886719
    6. '   ' → logprob: -16.60088348388672
    7. '[' → logprob: -17.22588348388672
    8. '[])
' → logprob: -18.10088348388672
    9. '=[]
' → logprob: -18.35088348388672
    10. ' []
' → logprob: -18.47588348388672

Token 708: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03434430807828903
    2. 'for' → logprob: -3.53434419631958
    3. ' for' → logprob: -5.40934419631958
    4. '
' → logprob: -9.284344673156738
    5. '   ' → logprob: -11.534344673156738
    6. '        
' → logprob: -12.284344673156738
    7. '```' → logprob: -14.909344673156738
    8. '           ' → logprob: -15.284344673156738
    9. ' ' → logprob: -16.034343719482422
    10. '    
' → logprob: -16.159343719482422

Token 709: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0003811025235336274
    2. '       ' → logprob: -8.000381469726562
    3. ' for' → logprob: -10.000381469726562
    4. '
' → logprob: -15.125381469726562
    5. '```' → logprob: -17.625381469726562
    6. '        
' → logprob: -18.250381469726562
    7. '   ' → logprob: -19.250381469726562
    8. '	for' → logprob: -19.875381469726562
    9. ' ' → logprob: -20.125381469726562
    10. ' 
' → logprob: -21.250381469726562

Token 710: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.00022249009634833783
    2. 'n' → logprob: -8.500222206115723
    3. ' N' → logprob: -11.750222206115723
    4. '(N' → logprob: -11.750222206115723
    5. '       ' → logprob: -13.375222206115723
    6. '   ' → logprob: -13.625222206115723
    7. '(n' → logprob: -15.875222206115723
    8. '           ' → logprob: -16.00022315979004
    9. ' (' → logprob: -16.87522315979004
    10. '```' → logprob: -17.12522315979004

Token 711: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011709370883181691
    2. ',K' → logprob: -6.751171112060547
    3. ' ,' → logprob: -14.376171112060547
    4. ',k' → logprob: -15.751171112060547
    5. ',
' → logprob: -18.251171112060547
    6. 'K' → logprob: -18.626171112060547
    7. ' in' → logprob: -18.751171112060547
    8. '_,' → logprob: -18.751171112060547
    9. '   ' → logprob: -19.001171112060547
    10. '，' → logprob: -20.001171112060547

Token 712: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -3.607391408877447e-05
    2. ' K' → logprob: -10.250036239624023
    3. '       ' → logprob: -15.125036239624023
    4. 'k' → logprob: -15.750036239624023
    5. '   ' → logprob: -15.875036239624023
    6. '           ' → logprob: -17.250036239624023
    7. 'N' → logprob: -17.250036239624023
    8. ' ' → logprob: -17.750036239624023
    9. '    ' → logprob: -17.750036239624023
    10. '        ' → logprob: -18.250036239624023

Token 713: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.002810225123539567
    2. 'in' → logprob: -5.877810001373291
    3. '       ' → logprob: -13.00281047821045
    4. '   ' → logprob: -13.62781047821045
    5. '_in' → logprob: -14.37781047821045
    6. '           ' → logprob: -14.50281047821045
    7. '        ' → logprob: -14.75281047821045
    8. '	in' → logprob: -15.87781047821045
    9. ',' → logprob: -16.377809524536133
    10. ')' → logprob: -16.502809524536133

Token 714: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.011786190792918205
    2. '[(' → logprob: -5.011785984039307
    3. ' self' → logprob: -5.511785984039307
    4. '(self' → logprob: -7.761785984039307
    5. ' [(' → logprob: -9.011786460876465
    6. '[self' → logprob: -9.261786460876465
    7. '((' → logprob: -9.636786460876465
    8. 'K' → logprob: -9.636786460876465
    9. 'zip' → logprob: -10.136786460876465
    10. '[' → logprob: -10.261786460876465

Token 715: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.0019335162360221148
    2. '_parser' → logprob: -6.251933574676514
    3. '_solver' → logprob: -14.001933097839355
    4. '
' → logprob: -14.251933097839355
    5. '_par' → logprob: -14.501933097839355
    6. '.parser' → logprob: -14.501933097839355
    7. '   ' → logprob: -14.751933097839355
    8. '.' → logprob: -14.876933097839355
    9. '.parse' → logprob: -15.876933097839355
    10. '_lines' → logprob: -15.876933097839355

Token 716: 'parser' (ID: 13297)
  Prédit: 'parser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parser' → logprob: -0.00032962486147880554
    2. 'constant' → logprob: -8.750329971313477
    3. '_parser' → logprob: -9.500329971313477
    4. '.parser' → logprob: -9.500329971313477
    5. '_constant' → logprob: -12.250329971313477
    6. 'parse' → logprob: -12.375329971313477
    7. 'formatter' → logprob: -13.375329971313477
    8. '_lines' → logprob: -13.500329971313477
    9. 'solver' → logprob: -13.625329971313477
    10. ' parser' → logprob: -13.875329971313477

Token 717: '.parse' (ID: 7259)
  Prédit: '.parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parse' → logprob: -0.000111768240458332
    2. 'parse' → logprob: -9.25011157989502
    3. '.' → logprob: -11.25011157989502
    4. '   ' → logprob: -13.50011157989502
    5. ' .' → logprob: -14.37511157989502
    6. '._' → logprob: -15.12511157989502
    7. ' ' → logprob: -16.125112533569336
    8. '=parse' → logprob: -16.625112533569336
    9. '.
' → logprob: -17.125112533569336
    10. '	parse' → logprob: -17.250112533569336

Token 718: '():
' (ID: 8595)
  Prédit: '():
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():
' → logprob: -0.07895620912313461
    2. '():' → logprob: -2.578956127166748
    3. '():
' → logprob: -10.078956604003906
    4. '()' → logprob: -10.828956604003906
    5. ':' → logprob: -12.703956604003906
    6. ':
' → logprob: -14.328956604003906
    7. '           ' → logprob: -14.828956604003906
    8. '():

' → logprob: -15.578956604003906
    9. '(' → logprob: -15.703956604003906
    10. '       ' → logprob: -15.953956604003906

Token 719: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0023534069769084454
    2. 'digits' → logprob: -6.127353191375732
    3. ' digits' → logprob: -8.87735366821289
    4. ',' → logprob: -11.62735366821289
    5. '```' → logprob: -12.50235366821289
    6. ':
' → logprob: -12.87735366821289
    7. '_digits' → logprob: -13.00235366821289
    8. ':' → logprob: -13.37735366821289
    9. '
' → logprob: -13.75235366821289
    10. 'd' → logprob: -13.87735366821289

Token 720: ' digits' (ID: 37806)
  Prédit: 'digits'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digits' (adapté à ' digits') → logprob: -0.035861872136592865
    2. ' digits' → logprob: -3.5358619689941406
    3. '               ' → logprob: -5.285861968994141
    4. '           ' → logprob: -7.410861968994141
    5. 'result' → logprob: -8.28586196899414
    6. 'digit' → logprob: -9.78586196899414
    7. 'start' → logprob: -11.03586196899414
    8. 'dig' → logprob: -11.28586196899414
    9. 'd' → logprob: -11.53586196899414
    10. '   ' → logprob: -11.66086196899414

Token 721: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.251930296421051
    2. '=' → logprob: -1.5019302368164062
    3. 's' → logprob: -14.751930236816406
    4. '   ' → logprob: -15.001930236816406
    5. '_at' → logprob: -15.376930236816406
    6. '           ' → logprob: -16.126930236816406
    7. '       ' → logprob: -16.626930236816406
    8. '_' → logprob: -17.126930236816406
    9. ' ' → logprob: -17.501930236816406
    10. '    ' → logprob: -17.751930236816406

Token 722: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00023166877508629113
    2. ' self' → logprob: -8.375231742858887
    3. '           ' → logprob: -14.375231742858887
    4. '       ' → logprob: -15.000231742858887
    5. '(self' → logprob: -15.750231742858887
    6. '   ' → logprob: -17.37523078918457
    7. 'digits' → logprob: -17.37523078918457
    8. '''.' → logprob: -18.25023078918457
    9. '	self' → logprob: -18.87523078918457
    10. '               ' → logprob: -18.87523078918457

Token 723: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.011067868210375309
    2. '_constant' → logprob: -4.511067867279053
    3. '.constant' → logprob: -11.011068344116211
    4. '_const' → logprob: -13.511068344116211
    5. '_constants' → logprob: -14.011068344116211
    6. 'constant' → logprob: -15.261068344116211
    7. '   ' → logprob: -15.761068344116211
    8. '->_' → logprob: -16.13606834411621
    9. '_' → logprob: -16.51106834411621
    10. '.' → logprob: -16.63606834411621

Token 724: 'constant' (ID: 60706)
  Prédit: 'constant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'constant' → logprob: -1.0325924449716695e-05
    2. '_constant' → logprob: -11.87501049041748
    3. '.constant' → logprob: -12.75001049041748
    4. 'const' → logprob: -15.25001049041748
    5. ' constant' → logprob: -16.125009536743164
    6. '_' → logprob: -17.125009536743164
    7. 'formatter' → logprob: -18.250009536743164
    8. '
' → logprob: -18.750009536743164
    9. 'consistent' → logprob: -20.625009536743164
    10. 'constants' → logprob: -20.625009536743164

Token 725: '.d' (ID: 1380)
  Prédit: '.d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.d' → logprob: -2.4272752852994017e-05
    2. '.' → logprob: -11.12502384185791
    3. ' .' → logprob: -12.37502384185791
    4. 'digit' → logprob: -12.75002384185791
    5. '   ' → logprob: -14.37502384185791
    6. 'digits' → logprob: -14.50002384185791
    7. ').' → logprob: -15.50002384185791
    8. '_.' → logprob: -15.87502384185791
    9. '```' → logprob: -16.125024795532227
    10. '
' → logprob: -16.250024795532227

Token 726: 'igits' (ID: 64824)
  Prédit: 'igits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'igits' → logprob: -0.429043710231781
    2. 'igit' → logprob: -1.0540437698364258
    3. 'ig' → logprob: -8.179043769836426
    4. 'digits' → logprob: -11.179043769836426
    5. 'igital' → logprob: -11.429043769836426
    6. 'igts' → logprob: -11.679043769836426
    7. 'igita' → logprob: -12.179043769836426
    8. 'digit' → logprob: -12.679043769836426
    9. 'igi' → logprob: -13.054043769836426
    10. 'i' → logprob: -13.116543769836426

Token 727: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0035513662733137608
    2. '(' → logprob: -5.753551483154297
    3. 'N' → logprob: -8.253551483154297
    4. '(K' → logprob: -9.253551483154297
    5. '((' → logprob: -11.753551483154297
    6. '(start' → logprob: -13.128551483154297
    7. 'K' → logprob: -13.253551483154297
    8. '```' → logprob: -13.378551483154297
    9. 'start' → logprob: -13.878551483154297
    10. '   ' → logprob: -14.503551483154297

Token 728: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0140307005494833
    2. '-' → logprob: -4.639030933380127
    3. ' -' → logprob: -5.639030933380127
    4. ',K' → logprob: -7.514030933380127
    5. '           ' → logprob: -9.514030456542969
    6. ' ,' → logprob: -10.139030456542969
    7. '   ' → logprob: -10.764030456542969
    8. '               ' → logprob: -11.889030456542969
    9. ',N' → logprob: -12.014030456542969
    10. '       ' → logprob: -12.889030456542969

Token 729: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -1.6047699318733066e-05
    2. ' K' → logprob: -11.875016212463379
    3. '10' → logprob: -12.875016212463379
    4. '5' → logprob: -13.375016212463379
    5. '       ' → logprob: -13.625016212463379
    6. '           ' → logprob: -13.750016212463379
    7. '   ' → logprob: -14.125016212463379
    8. '9' → logprob: -15.125016212463379
    9. 'k' → logprob: -15.250016212463379
    10. ')' → logprob: -15.750016212463379

Token 730: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.0004311460361350328
    2. ')' → logprob: -8.250431060791016
    3. '           ' → logprob: -8.750431060791016
    4. ')
' → logprob: -11.375431060791016
    5. '               ' → logprob: -16.875431060791016
    6. ')`
' → logprob: -17.125431060791016
    7. '       ' → logprob: -17.875431060791016
    8. ' )
' → logprob: -18.000431060791016
    9. ')

' → logprob: -18.125431060791016
    10. '   ' → logprob: -19.875431060791016

Token 731: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -2.5776860184123507e-06
    2. ',' → logprob: -14.12500286102295
    3. '
' → logprob: -14.50000286102295
    4. 'results' → logprob: -14.62500286102295
    5. ' results' → logprob: -14.62500286102295
    6. '            
' → logprob: -16.250001907348633
    7. '               ' → logprob: -16.625001907348633
    8. '       ' → logprob: -17.375001907348633
    9. '	       ' → logprob: -17.750001907348633
    10. 'result' → logprob: -17.875001907348633

Token 732: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' (adapté à ' results') → logprob: -0.6270208954811096
    2. ' results' → logprob: -0.8770208954811096
    3. '           ' → logprob: -3.002020835876465
    4. 'result' → logprob: -9.377020835876465
    5. ' result' → logprob: -11.002020835876465
    6. '	results' → logprob: -12.502020835876465
    7. '.results' → logprob: -12.877020835876465
    8. '       ' → logprob: -13.877020835876465
    9. '_results' → logprob: -14.127020835876465
    10. '               ' → logprob: -14.377020835876465

Token 733: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0007108822464942932
    2. '.' → logprob: -7.250710964202881
    3. '.extend' → logprob: -14.250710487365723
    4. 'append' → logprob: -15.875710487365723
    5. '.Append' → logprob: -16.50071144104004
    6. '.app' → logprob: -17.37571144104004
    7. '_append' → logprob: -18.25071144104004
    8. '.push' → logprob: -18.75071144104004
    9. ').' → logprob: -19.50071144104004
    10. '.add' → logprob: -20.00071144104004

Token 734: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0026735186111181974
    2. '(d' → logprob: -6.002673625946045
    3. 'self' → logprob: -9.502673149108887
    4. 'digits' → logprob: -9.502673149108887
    5. '(' → logprob: -10.002673149108887
    6. '((' → logprob: -14.002673149108887
    7. '(results' → logprob: -14.127673149108887
    8. '(
' → logprob: -14.502673149108887
    9. 'd' → logprob: -15.002673149108887
    10. ' self' → logprob: -15.502673149108887

Token 735: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -5.200166469876422e-06
    2. '_digits' → logprob: -13.250004768371582
    3. 'digits' → logprob: -13.500004768371582
    4. '.d' → logprob: -14.625004768371582
    5. ')' → logprob: -15.000004768371582
    6. ')_' → logprob: -15.250004768371582
    7. ')._' → logprob: -15.250004768371582
    8. '_formatter' → logprob: -15.375004768371582
    9. '.' → logprob: -15.625004768371582
    10. '
' → logprob: -16.0000057220459

Token 736: 'formatter' (ID: 69052)
  Prédit: 'formatter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'formatter' → logprob: -3.128163257315464e-07
    2. '_formatter' → logprob: -15.375
    3. 'digits' → logprob: -17.0
    4. 'format' → logprob: -18.75
    5. ' formatter' → logprob: -18.75
    6. 'formatted' → logprob: -20.5
    7. 'results' → logprob: -21.125
    8. '.format' → logprob: -21.5
    9. '
' → logprob: -21.625
    10. 'constant' → logprob: -22.5

Token 737: '.format' (ID: 12277)
  Prédit: '.format'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.format' → logprob: -1.9361264946837764e-07
    2. ').' → logprob: -16.625
    3. '.form' → logprob: -18.875
    4. '.' → logprob: -19.25
    5. ' .' → logprob: -19.875
    6. '.convert' → logprob: -20.25
    7. 'format' → logprob: -20.5
    8. '.Format' → logprob: -20.5
    9. '.output' → logprob: -20.625
    10. '=format' → logprob: -20.75

Token 738: '_digits' (ID: 108638)
  Prédit: '_digits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_digits' → logprob: -0.012766494415700436
    2. 'digits' → logprob: -4.762766361236572
    3. '(d' → logprob: -5.512766361236572
    4. 'd' → logprob: -10.38776683807373
    5. '```' → logprob: -10.88776683807373
    6. 'Digits' → logprob: -11.01276683807373
    7. ' digits' → logprob: -11.01276683807373
    8. 's' → logprob: -11.26276683807373
    9. '_d' → logprob: -12.26276683807373
    10. '_' → logprob: -13.76276683807373

Token 739: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -7.703443770878948e-06
    2. '(' → logprob: -12.000007629394531
    3. ' (' → logprob: -13.875007629394531
    4. ')' → logprob: -15.000007629394531
    5. 'digits' → logprob: -15.875007629394531
    6. ')(' → logprob: -16.12500762939453
    7. '```' → logprob: -16.87500762939453
    8. '(
' → logprob: -17.75000762939453
    9. '   ' → logprob: -19.87500762939453
    10. ')d' → logprob: -20.00000762939453

Token 740: 'igits' (ID: 64824)
  Prédit: 'igits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'igits' → logprob: -0.0023975323420017958
    2. 'its' → logprob: -6.127397537231445
    3. 'igts' → logprob: -9.002397537231445
    4. 'digits' → logprob: -9.877397537231445
    5. 'ig' → logprob: -10.252397537231445
    6. 'g' → logprob: -14.127397537231445
    7. 'i' → logprob: -14.627397537231445
    8. 'igs' → logprob: -14.752397537231445
    9. 'igit' → logprob: -15.377397537231445
    10. 'ights' → logprob: -15.627397537231445

Token 741: '))
' (ID: 2210)
  Prédit: '))
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))
' → logprob: -0.4142206907272339
    2. '))' → logprob: -1.6642206907272339
    3. ')' → logprob: -1.9142206907272339
    4. ')
' → logprob: -6.164220809936523
    5. '(d' → logprob: -9.289220809936523
    6. '))
' → logprob: -9.539220809936523
    7. '       ' → logprob: -10.039220809936523
    8. '))

' → logprob: -11.039220809936523
    9. ')`
' → logprob: -12.289220809936523
    10. '   ' → logprob: -12.414220809936523

Token 742: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001770139206200838
    2. '
' → logprob: -6.62677001953125
    3. 'return' → logprob: -7.75177001953125
    4. '   ' → logprob: -12.00177001953125
    5. ' return' → logprob: -12.25177001953125
    6. '```' → logprob: -14.00177001953125
    7. '
' → logprob: -14.12677001953125
    8. '        
' → logprob: -14.75177001953125
    9. '           ' → logprob: -15.12677001953125
    10. '	' → logprob: -15.50177001953125

Token 743: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.01947704516351223
    2. '       ' → logprob: -4.019476890563965
    3. '   ' → logprob: -7.019476890563965
    4. ' return' → logprob: -7.769476890563965
    5. '
' → logprob: -12.019476890563965
    6. '	return' → logprob: -12.769476890563965
    7. '```' → logprob: -15.394476890563965
    8. '           ' → logprob: -15.894476890563965
    9. '    
' → logprob: -16.89447784423828
    10. '        
' → logprob: -16.89447784423828

Token 744: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.0015023599844425917
    2. ' results' → logprob: -6.501502513885498
    3. '	results' → logprob: -19.251502990722656
    4. '(results' → logprob: -19.751502990722656
    5. '.results' → logprob: -22.376502990722656
    6. '   ' → logprob: -23.126502990722656
    7. 'result' → logprob: -24.501502990722656
    8. '_results' → logprob: -25.001502990722656
    9. 'Results' → logprob: -25.126502990722656
    10. '[' → logprob: -25.626502990722656

Token 745: '


' (ID: 2499)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0826854333281517
    2. 'def' → logprob: -2.5826854705810547
    3. '#' → logprob: -6.332685470581055
    4. '<|end|>' → logprob: -6.832685470581055
    5. '```' → logprob: -7.457685470581055
    6. ' if' → logprob: -8.832685470581055
    7. 'import' → logprob: -9.457685470581055
    8. '
' → logprob: -9.832685470581055
    9. '   ' → logprob: -10.332685470581055
    10. '<|end|>' → logprob: -11.332685470581055

Token 746: 'def' (ID: 1314)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.18817973136901855
    2. 'def' → logprob: -2.4381797313690186
    3. 'if' → logprob: -3.1881797313690186
    4. '```' → logprob: -3.4381797313690186
    5. 'solver' → logprob: -5.438179969787598
    6. '<|end|>' → logprob: -5.688179969787598
    7. 'import' → logprob: -7.313179969787598
    8. 'from' → logprob: -7.688179969787598
    9. 's' → logprob: -8.313179969787598
    10. 'd' → logprob: -8.313179969787598

Token 747: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.000784495088737458
    2. 'main' → logprob: -7.500784397125244
    3. ' run' → logprob: -8.500784873962402
    4. ' solve' → logprob: -10.625784873962402
    5. '_main' → logprob: -13.000784873962402
    6. '__' → logprob: -14.750784873962402
    7. ' solution' → logprob: -14.750784873962402
    8. 'run' → logprob: -15.375784873962402
    9. ' __' → logprob: -15.750784873962402
    10. '_' → logprob: -15.750784873962402

Token 748: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0002627662615850568
    2. '():
' → logprob: -8.250263214111328
    3. '()' → logprob: -13.875263214111328
    4. ' ():' → logprob: -14.500263214111328
    5. '():
' → logprob: -16.375263214111328
    6. '():

' → logprob: -18.500263214111328
    7. '().' → logprob: -19.625263214111328
    8. '()>' → logprob: -19.875263214111328
    9. '(' → logprob: -20.250263214111328
    10. '();' → logprob: -20.750263214111328

Token 749: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09184273332357407
    2. ' import' → logprob: -2.8418426513671875
    3. 'import' → logprob: -3.9668426513671875
    4. ' solver' → logprob: -4.5918426513671875
    5. 'solver' → logprob: -7.9668426513671875
    6. '   ' → logprob: -11.841842651367188
    7. '_solver' → logprob: -12.966842651367188
    8. '```' → logprob: -13.216842651367188
    9. ' sol' → logprob: -13.341842651367188
    10. ' solution' → logprob: -13.591842651367188

Token 750: ' import' (ID: 1588)
  Prédit: 'solver'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solver' → logprob: -0.36664122343063354
    2. ' solver' → logprob: -1.6166412830352783
    3. 'import' (adapté à ' import') → logprob: -2.3666412830352783
    4. ' import' → logprob: -4.616641044616699
    5. '   ' → logprob: -5.366641044616699
    6. '_solver' → logprob: -11.6166410446167
    7. 'sol' → logprob: -11.9916410446167
    8. 'solution' → logprob: -12.7416410446167
    9. ' ' → logprob: -13.3666410446167
    10. ' solution' → logprob: -13.4916410446167

Token 751: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.0380416102707386
    2. ' sys' → logprob: -3.288041591644287
    3. '=sys' → logprob: -16.413042068481445
    4. '	sys' → logprob: -17.538042068481445
    5. '```' → logprob: -19.413042068481445
    6. '.sys' → logprob: -19.663042068481445
    7. '(sys' → logprob: -19.663042068481445
    8. '_sys' → logprob: -21.038042068481445
    9. '   ' → logprob: -21.788042068481445
    10. 'io' → logprob: -21.788042068481445

Token 752: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4015018939971924
    2. '
' → logprob: -1.1515018939971924
    3. 'for' → logprob: -4.651501655578613
    4. ' for' → logprob: -5.901501655578613
    5. '    
' → logprob: -6.151501655578613
    6. 'input' → logprob: -9.776501655578613
    7. ' lines' → logprob: -10.901501655578613
    8. '```' → logprob: -11.026501655578613
    9. ' input' → logprob: -12.526501655578613
    10. '   
' → logprob: -12.776501655578613

Token 753: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0019155495101585984
    2. ' for' → logprob: -6.751915454864502
    3. 'for' → logprob: -7.751915454864502
    4. '
' → logprob: -8.50191593170166
    5. '    
' → logprob: -10.00191593170166
    6. 'input' → logprob: -10.62691593170166
    7. ' input' → logprob: -10.75191593170166
    8. ' lines' → logprob: -10.87691593170166
    9. 'def' → logprob: -14.62691593170166
    10. ' readline' → logprob: -15.12691593170166

Token 754: ' solver' (ID: 63271)
  Prédit: 'solver'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solver' (adapté à ' solver') → logprob: -0.15458600223064423
    2. ' solver' → logprob: -2.40458607673645
    3. '   ' → logprob: -3.52958607673645
    4. 'for' → logprob: -4.279585838317871
    5. ' for' → logprob: -4.654585838317871
    6. 'sol' → logprob: -9.154585838317871
    7. 'def' → logprob: -10.154585838317871
    8. 'solution' → logprob: -10.529585838317871
    9. '_solver' → logprob: -10.654585838317871
    10. ' ' → logprob: -11.654585838317871

Token 755: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0009137284359894693
    2. '=' → logprob: -7.000913619995117
    3. '   ' → logprob: -13.500913619995117
    4. '.' → logprob: -15.000913619995117
    5. ' ' → logprob: -15.125913619995117
    6. '  ' → logprob: -17.000913619995117
    7. '	' → logprob: -17.125913619995117
    8. '.solve' → logprob: -17.625913619995117
    9. '    ' → logprob: -17.750913619995117
    10. '=s' → logprob: -18.500913619995117

Token 756: ' Cham' (ID: 81008)
  Prédit: 'Cham'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Cham' → logprob: -0.0232619009912014
    2. ' Cham' → logprob: -3.773261785507202
    3. 'Ch' → logprob: -11.023262023925781
    4. ' ' → logprob: -16.64826202392578
    5. '   ' → logprob: -18.02326202392578
    6. ' Chamb' → logprob: -18.14826202392578
    7. 'Camel' → logprob: -18.64826202392578
    8. 'Cher' → logprob: -18.64826202392578
    9. ' cham' → logprob: -18.64826202392578
    10. 'Cha' → logprob: -19.14826202392578

Token 757: 'per' (ID: 543)
  Prédit: 'per'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'per' → logprob: -3.054500666621607e-06
    2. 'pen' → logprob: -13.00000286102295
    3. 'p' → logprob: -15.00000286102295
    4. 'ber' → logprob: -15.87500286102295
    5. 'пер' → logprob: -15.87500286102295
    6. 'peror' → logprob: -16.125003814697266
    7. 'fer' → logprob: -17.250003814697266
    8. 'period' → logprob: -18.250003814697266
    9. 'pon' → logprob: -18.375003814697266
    10. 'par' → logprob: -18.500003814697266

Token 758: 'now' (ID: 6201)
  Prédit: 'now'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'now' → logprob: -1.3856492842023727e-06
    2. 'nown' → logprob: -14.000000953674316
    3. ' now' → logprob: -15.125000953674316
    4. 'none' → logprob: -16.750001907348633
    5. 'new' → logprob: -16.750001907348633
    6. 'own' → logprob: -17.125001907348633
    7. '   ' → logprob: -17.625001907348633
    8. 'ow' → logprob: -17.875001907348633
    9. '	now' → logprob: -18.500001907348633
    10. 'n' → logprob: -18.750001907348633

Token 759: 'ne' (ID: 611)
  Prédit: 'ne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ne' → logprob: -0.0004456852038856596
    2. 'e' → logprob: -8.500445365905762
    3. 'Constant' → logprob: -9.250445365905762
    4. 'ane' → logprob: -9.750445365905762
    5. 'nes' → logprob: -10.875445365905762
    6. 'one' → logprob: -11.125445365905762
    7. 'hne' → logprob: -11.625445365905762
    8. 'he' → logprob: -12.125445365905762
    9. 'che' → logprob: -12.250445365905762
    10. 'a' → logprob: -12.250445365905762

Token 760: 'Solver' (ID: 70484)
  Prédit: 'Solver'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Solver' → logprob: -1.1875571544806007e-05
    2. 'solver' → logprob: -11.625011444091797
    3. 'Constant' → logprob: -13.500011444091797
    4. '_solver' → logprob: -13.875011444091797
    5. '
' → logprob: -16.125011444091797
    6. ' solver' → logprob: -16.375011444091797
    7. 'Solve' → logprob: -16.750011444091797
    8. '```' → logprob: -17.000011444091797
    9. 'olver' → logprob: -17.125011444091797
    10. ' Solver' → logprob: -17.875011444091797

Token 761: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00035274302354082465
    2. '
' → logprob: -8.75035285949707
    3. 'for' → logprob: -9.00035285949707
    4. ' for' → logprob: -9.62535285949707
    5. '    
' → logprob: -12.37535285949707
    6. '<|end|>' → logprob: -14.50035285949707
    7. '```' → logprob: -17.37535285949707
    8. '
' → logprob: -17.62535285949707
    9. '       ' → logprob: -17.62535285949707
    10. '	for' → logprob: -17.87535285949707

Token 762: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016225913539528847
    2. 'for' → logprob: -4.516225814819336
    3. ' for' → logprob: -5.266225814819336
    4. '
' → logprob: -13.391225814819336
    5. '    
' → logprob: -15.516225814819336
    6. '	for' → logprob: -17.266225814819336
    7. '```' → logprob: -18.016225814819336
    8. ' ' → logprob: -20.141225814819336
    9. '   ' → logprob: -20.391225814819336
    10. '       ' → logprob: -20.391225814819336

Token 763: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.025137873366475105
    2. ' for' → logprob: -3.7751379013061523
    3. '   ' → logprob: -6.275137901306152
    4. '
' → logprob: -11.775137901306152
    5. '```' → logprob: -15.400137901306152
    6. '	for' → logprob: -16.525136947631836
    7. '    
' → logprob: -17.025136947631836
    8. ' ' → logprob: -17.525136947631836
    9. '  ' → logprob: -19.525136947631836
    10. ' 
' → logprob: -20.025136947631836

Token 764: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.2519306540489197
    2. 'line' → logprob: -1.5019307136535645
    3. '	line' → logprob: -13.501930236816406
    4. '(line' → logprob: -16.501930236816406
    5. '_line' → logprob: -16.876930236816406
    6. '   ' → logprob: -17.126930236816406
    7. ' ' → logprob: -18.126930236816406
    8. '=line' → logprob: -18.376930236816406
    9. 'input' → logprob: -19.001930236816406
    10. 'raw' → logprob: -19.001930236816406

Token 765: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00023095356300473213
    2. 'in' → logprob: -8.37523078918457
    3. 's' → logprob: -15.75023078918457
    4. ' ' → logprob: -16.75023078918457
    5. '   ' → logprob: -17.25023078918457
    6. 'import' → logprob: -17.25023078918457
    7. 'ine' → logprob: -18.50023078918457
    8. '_' → logprob: -18.50023078918457
    9. 'n' → logprob: -18.62523078918457
    10. 'd' → logprob: -18.93773078918457

Token 766: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.04858839511871338
    2. ' sys' → logprob: -3.048588275909424
    3. '=sys' → logprob: -14.173588752746582
    4. '(sys' → logprob: -15.798588752746582
    5. '	sys' → logprob: -16.548587799072266
    6. 'stdin' → logprob: -16.673587799072266
    7. 'in' → logprob: -19.173587799072266
    8. 'Sys' → logprob: -19.298587799072266
    9. 'input' → logprob: -19.423587799072266
    10. 'import' → logprob: -19.423587799072266

Token 767: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -6.432518421206623e-05
    2. 'stdin' → logprob: -10.2500638961792
    3. '.' → logprob: -10.7500638961792
    4. '.stdout' → logprob: -13.0000638961792
    5. '(stdin' → logprob: -13.2500638961792
    6. ' stdin' → logprob: -13.6250638961792
    7. '.readline' → logprob: -13.8750638961792
    8. '.argv' → logprob: -13.8750638961792
    9. '.std' → logprob: -16.500064849853516
    10. '.stderr' → logprob: -16.500064849853516

Token 768: ':
' (ID: 734)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.5779278874397278
    2. ':' → logprob: -1.202927827835083
    3. ':
' → logprob: -2.452927827835083
    4. ' in' → logprob: -3.452927827835083
    5. '   ' → logprob: -4.702928066253662
    6. '.readlines' → logprob: -5.202928066253662
    7. '.rstrip' → logprob: -5.952928066253662
    8. '.' → logprob: -6.452928066253662
    9. '.strip' → logprob: -7.202928066253662
    10. 'rstrip' → logprob: -8.202927589416504

Token 769: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1160349458805285e-05
    2. '   ' → logprob: -12.125011444091797
    3. 'solver' → logprob: -12.250011444091797
    4. ' solver' → logprob: -14.000011444091797
    5. '```' → logprob: -16.625011444091797
    6. '           ' → logprob: -17.500011444091797
    7. '_solver' → logprob: -17.625011444091797
    8. '      ' → logprob: -18.250011444091797
    9. '        
' → logprob: -18.625011444091797
    10. '	s' → logprob: -18.625011444091797

Token 770: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.29735681414604187
    2. 'solver' → logprob: -2.2973568439483643
    3. ' solver' → logprob: -2.5473568439483643
    4. '   ' → logprob: -2.5473568439483643
    5. ' if' → logprob: -9.297356605529785
    6. 'if' (adapté à ' if') → logprob: -12.047356605529785
    7. '_solver' → logprob: -12.047356605529785
    8. '           ' → logprob: -12.797356605529785
    9. 'sol' → logprob: -12.922356605529785
    10. '
' → logprob: -13.422356605529785

Token 771: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.04019633308053017
    2. 'not' → logprob: -3.290196418762207
    3. ' not' → logprob: -6.665196418762207
    4. ' line' → logprob: -7.040196418762207
    5. '   ' → logprob: -14.290196418762207
    6. '(line' → logprob: -15.165196418762207
    7. '#line' → logprob: -15.290196418762207
    8. ' ' → logprob: -15.415196418762207
    9. '	line' → logprob: -15.415196418762207
    10. '=line' → logprob: -16.04019546508789

Token 772: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.007929549552500248
    2. '.' → logprob: -4.88292932510376
    3. 'strip' → logprob: -8.507929801940918
    4. '==' → logprob: -9.882929801940918
    5. '.rstrip' → logprob: -9.882929801940918
    6. '.startswith' → logprob: -11.632929801940918
    7. ' ==' → logprob: -12.007929801940918
    8. ' .' → logprob: -13.007929801940918
    9. 'startswith' → logprob: -14.507929801940918
    10. ' strip' → logprob: -14.882929801940918

Token 773: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.22062501311302185
    2. '()==' → logprob: -1.7206250429153442
    3. '==' → logprob: -3.9706249237060547
    4. ' ==' → logprob: -8.720624923706055
    5. '()=="' → logprob: -13.845624923706055
    6. '===' → logprob: -14.220624923706055
    7. ']==' → logprob: -14.595624923706055
    8. ')==' → logprob: -14.720624923706055
    9. ' ()' → logprob: -14.970624923706055
    10. '```' → logprob: -15.470624923706055

Token 774: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.008674495853483677
    2. ' ==' → logprob: -4.758674621582031
    3. '()==' → logprob: -10.258674621582031
    4. '===' → logprob: -11.758674621582031
    5. '==
' → logprob: -11.883674621582031
    6. '=='' → logprob: -12.258674621582031
    7. '=="' → logprob: -13.258674621582031
    8. '```' → logprob: -14.008674621582031
    9. ']==' → logprob: -14.133674621582031
    10. '=' → logprob: -14.508674621582031

Token 775: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.004950174130499363
    2. '"' → logprob: -6.004950046539307
    3. '''' → logprob: -6.004950046539307
    4. '""' → logprob: -13.504950523376465
    5. '0' → logprob: -13.629950523376465
    6. ' '' → logprob: -13.879950523376465
    7. '"":' → logprob: -14.004950523376465
    8. '''
' → logprob: -15.004950523376465
    9. '   ' → logprob: -16.25494956970215
    10. '('' → logprob: -17.12994956970215

Token 776: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2664456789934775e-06
    2. ''' → logprob: -13.625000953674316
    3. ' ' → logprob: -16.750001907348633
    4. '"' → logprob: -19.250001907348633
    5. '```' → logprob: -20.000001907348633
    6. '   ' → logprob: -21.750001907348633
    7. '``' → logprob: -22.125001907348633
    8. '00' → logprob: -22.125001907348633
    9. '''' → logprob: -22.625001907348633
    10. ''''' → logprob: -23.000001907348633

Token 777: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0009117019944824278
    2. '0' → logprob: -7.000911712646484
    3. '   ' → logprob: -15.500911712646484
    4. ' ' → logprob: -17.500911712646484
    5. '  ' → logprob: -18.750911712646484
    6. '00' → logprob: -21.000911712646484
    7. '    ' → logprob: -21.500911712646484
    8. '```' → logprob: -21.750911712646484
    9. 'import' → logprob: -21.875911712646484
    10. '_' → logprob: -22.375911712646484

Token 778: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04858771339058876
    2. ' ' → logprob: -3.0485877990722656
    3. '   ' → logprob: -15.298587799072266
    4. '  ' → logprob: -16.923587799072266
    5. '
' → logprob: -17.611087799072266
    6. '    ' → logprob: -18.423587799072266
    7. ' ' → logprob: -18.486087799072266
    8. ''' → logprob: -18.611087799072266
    9. '       ' → logprob: -18.923587799072266
    10. '```' → logprob: -19.048587799072266

Token 779: '':
' (ID: 7669)
  Prédit: '':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':
' → logprob: -0.13809825479984283
    2. '       ' → logprob: -2.7630982398986816
    3. '':' → logprob: -3.2630982398986816
    4. ':
' → logprob: -4.263098239898682
    5. ':' → logprob: -5.013098239898682
    6. '           ' → logprob: -5.138098239898682
    7. '':
' → logprob: -7.513098239898682
    8. '   ' → logprob: -8.76309871673584
    9. '\n' → logprob: -9.13809871673584
    10. ''' → logprob: -9.38809871673584

Token 780: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0003397535183466971
    2. '       ' → logprob: -8.00033950805664
    3. ':
' → logprob: -14.12533950805664
    4. ':' → logprob: -14.25033950805664
    5. ' break' → logprob: -14.62533950805664
    6. '   ' → logprob: -14.75033950805664
    7. 'break' → logprob: -14.75033950805664
    8. '		' → logprob: -14.87533950805664
    9. '          ' → logprob: -14.87533950805664
    10. '	       ' → logprob: -15.25033950805664

Token 781: ' break' (ID: 2338)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8135786652565002
    2. 'break' (adapté à ' break') → logprob: -1.0635786056518555
    3. '           ' → logprob: -1.5635786056518555
    4. ' break' → logprob: -6.1885786056518555
    5. '	break' → logprob: -9.938578605651855
    6. '               ' → logprob: -11.188578605651855
    7. '   ' → logprob: -11.563578605651855
    8. 'return' → logprob: -14.063578605651855
    9. '_break' → logprob: -14.438578605651855
    10. '
' → logprob: -14.563578605651855

Token 782: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -5.438573680294212e-06
    2. '   ' → logprob: -12.625005722045898
    3. '
' → logprob: -13.375005722045898
    4. '           ' → logprob: -14.750005722045898
    5. 'solver' → logprob: -16.7500057220459
    6. '        
' → logprob: -17.1250057220459
    7. '```' → logprob: -18.2500057220459
    8. ' solver' → logprob: -18.5000057220459
    9. ',' → logprob: -18.6250057220459
    10. '<|end|>' → logprob: -18.6250057220459

Token 783: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1875571544806007e-05
    2. '   ' → logprob: -11.375011444091797
    3. '           ' → logprob: -15.500011444091797
    4. 'solver' → logprob: -16.625011444091797
    5. '
' → logprob: -17.500011444091797
    6. '```' → logprob: -17.625011444091797
    7. '<|end|>' → logprob: -17.750011444091797
    8. '      ' → logprob: -17.875011444091797
    9. 's' → logprob: -18.000011444091797
    10. '	' → logprob: -18.375011444091797

Token 784: ' solver' (ID: 63271)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4968142807483673
    2. 'solver' (adapté à ' solver') → logprob: -0.9968142509460449
    3. '   ' → logprob: -3.996814250946045
    4. ' solver' → logprob: -5.496814250946045
    5. '           ' → logprob: -12.746814727783203
    6. ' ' → logprob: -13.871814727783203
    7. '  ' → logprob: -14.246814727783203
    8. 'sol' → logprob: -14.496814727783203
    9. '_solver' → logprob: -14.746814727783203
    10. '    ' → logprob: -15.371814727783203

Token 785: '.feed' (ID: 116886)
  Prédit: '.feed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.feed' → logprob: -9.088346359931165e-07
    2. '.' → logprob: -14.625000953674316
    3. '.fe' → logprob: -14.750000953674316
    4. '.fill' → logprob: -18.625
    5. ' .' → logprob: -18.625
    6. '.feedback' → logprob: -18.75
    7. '   ' → logprob: -18.875
    8. '.f' → logprob: -19.0
    9. '.fly' → logprob: -19.75
    10. '(feed' → logprob: -20.0

Token 786: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -1.6405310816480778e-05
    2. '_line' → logprob: -11.375016212463379
    3. 'input' → logprob: -12.875016212463379
    4. 'line' → logprob: -13.500016212463379
    5. 'Input' → logprob: -15.000016212463379
    6. '_' → logprob: -15.625016212463379
    7. '_output' → logprob: -16.500017166137695
    8. '(line' → logprob: -16.875017166137695
    9. '__' → logprob: -17.000017166137695
    10. '_Input' → logprob: -17.250017166137695

Token 787: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -9.491498531133402e-06
    2. 'line' → logprob: -11.625009536743164
    3. 'Line' → logprob: -15.625009536743164
    4. '_' → logprob: -15.750009536743164
    5. '_LINE' → logprob: -16.500009536743164
    6. ' line' → logprob: -16.875009536743164
    7. '_lines' → logprob: -17.625009536743164
    8. '   ' → logprob: -17.750009536743164
    9. '[line' → logprob: -18.000009536743164
    10. '
' → logprob: -18.250009536743164

Token 788: '(line' (ID: 18178)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.003482466796413064
    2. '(line' → logprob: -5.753482341766357
    3. ' line' → logprob: -8.253482818603516
    4. '   ' → logprob: -10.253482818603516
    5. '       ' → logprob: -12.128482818603516
    6. '[line' → logprob: -12.878482818603516
    7. '=line' → logprob: -14.753482818603516
    8. '	line' → logprob: -14.753482818603516
    9. '#line' → logprob: -15.128482818603516
    10. '           ' → logprob: -16.253482818603516

Token 789: ')
' (ID: 446)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017300056293606758
    2. ')' → logprob: -4.392300128936768
    3. '
' → logprob: -5.767300128936768
    4. ')
' → logprob: -7.017300128936768
    5. '    
' → logprob: -7.392300128936768
    6. '<|end|>' → logprob: -9.89229965209961
    7. '       ' → logprob: -10.39229965209961
    8. '<|end|>' → logprob: -11.14229965209961
    9. '        
' → logprob: -11.39229965209961
    10. '):
' → logprob: -11.89229965209961

Token 790: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0028140286449342966
    2. '
' → logprob: -5.877813816070557
    3. '    
' → logprob: -11.877814292907715
    4. 'solver' → logprob: -14.377814292907715
    5. 'for' → logprob: -14.627814292907715
    6. '

' → logprob: -15.252814292907715
    7. '```' → logprob: -15.377814292907715
    8. '<|end|>' → logprob: -15.627814292907715
    9. '  
' → logprob: -16.3778133392334
    10. '
' → logprob: -16.5028133392334

Token 791: ' #' (ID: 1069)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.11535157263278961
    2. '   ' → logprob: -2.365351676940918
    3. 'for' → logprob: -4.615351676940918
    4. ' results' → logprob: -5.365351676940918
    5. 'outputs' → logprob: -8.115351676940918
    6. ' for' → logprob: -9.490351676940918
    7. 'result' → logprob: -9.740351676940918
    8. '	results' → logprob: -11.490351676940918
    9. 'output' → logprob: -11.740351676940918
    10. 'answers' → logprob: -13.240351676940918

Token 792: ' Feed' (ID: 43297)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.20602430403232574
    2. 'for' → logprob: -1.7060242891311646
    3. ' results' → logprob: -5.706024169921875
    4. ' for' → logprob: -7.081024169921875
    5. '   ' → logprob: -8.456024169921875
    6. 'outputs' → logprob: -8.706024169921875
    7. 'result' → logprob: -10.706024169921875
    8. 'answers' → logprob: -10.706024169921875
    9. 'output' → logprob: -11.831024169921875
    10. 'solutions' → logprob: -13.456024169921875

Token 793: ' the' (ID: 290)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.2436239868402481
    2. ' results' → logprob: -1.743623971939087
    3. 'output' → logprob: -4.618624210357666
    4. ' for' → logprob: -5.243624210357666
    5. '   ' → logprob: -5.368624210357666
    6. '_results' → logprob: -5.368624210357666
    7. 'solver' → logprob: -5.493624210357666
    8. '_output' → logprob: -5.993624210357666
    9. 'for' → logprob: -5.993624210357666
    10. ' output' → logprob: -6.118624210357666

Token 794: ' terminating' (ID: 167968)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.3394957780838013
    2. 'solver' → logprob: -1.3394957780838013
    3. 'results' → logprob: -1.5894957780838013
    4. 'remaining' → logprob: -2.2144956588745117
    5. 'lines' → logprob: -2.8394956588745117
    6. 'input' → logprob: -4.089495658874512
    7. 'rest' → logprob: -4.339495658874512
    8. ' remaining' → logprob: -4.339495658874512
    9. 'output' → logprob: -4.589495658874512
    10. 'line' → logprob: -4.839495658874512

Token 795: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.25374463200569153
    2. ' line' → logprob: -1.5037446022033691
    3. ''' → logprob: -7.378744602203369
    4. '0' → logprob: -7.628744602203369
    5. 'solver' → logprob: -7.628744602203369
    6. 'input' → logprob: -10.128745079040527
    7. ' solver' → logprob: -10.253745079040527
    8. ' '' → logprob: -10.503745079040527
    9. '   ' → logprob: -10.628745079040527
    10. '_line' → logprob: -10.753745079040527

Token 796: ' to' (ID: 316)
  Prédit: 'solver'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'solver' → logprob: -0.0012220130302011967
    2. '   ' → logprob: -6.751222133636475
    3. '0' → logprob: -10.126221656799316
    4. '"' → logprob: -11.751221656799316
    5. ' solver' → logprob: -13.376221656799316
    6. ''' → logprob: -13.626221656799316
    7. 'solution' → logprob: -14.876221656799316
    8. ''s' → logprob: -15.251221656799316
    9. 'line' → logprob: -15.626221656799316
    10. '```' → logprob: -16.501222610473633

Token 797: ' parser' (ID: 14216)
  Prédit: 'solver'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'solver' → logprob: -6.704273118884885e-07
    2. ' solver' → logprob: -14.250000953674316
    3. 'solve' → logprob: -19.125
    4. '   ' → logprob: -20.625
    5. 'scheduler' → logprob: -21.125
    6. '
' → logprob: -21.5
    7. 'resolver' → logprob: -22.375
    8. '```' → logprob: -22.625
    9. 'olver' → logprob: -22.875
    10. 'sol' → logprob: -23.0

Token 798: ' for' (ID: 395)
  Prédit: 'solver'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'solver' → logprob: -0.575951874256134
    2. '   ' → logprob: -0.825951874256134
    3. '```' → logprob: -12.82595157623291
    4. 'sol' → logprob: -12.82595157623291
    5. ' solver' → logprob: -12.95095157623291
    6. '    
' → logprob: -13.95095157623291
    7. 'solution' → logprob: -14.07595157623291
    8. '
' → logprob: -14.07595157623291
    9. '_solver' → logprob: -14.20095157623291
    10. '  ' → logprob: -14.57595157623291

Token 799: ' completeness' (ID: 96091)
  Prédit: 'solver'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solver' → logprob: -0.7614545822143555
    2. 'par' → logprob: -1.2614545822143555
    3. 'processing' → logprob: -3.0114545822143555
    4. 'completion' → logprob: -3.1364545822143555
    5. '0' → logprob: -3.1364545822143555
    6. 'com' → logprob: -3.7614545822143555
    7. ' completeness' → logprob: -4.0114545822143555
    8. 'proper' → logprob: -4.3864545822143555
    9. 'correct' → logprob: -4.5114545822143555
    10. 'complete' → logprob: -4.6364545822143555

Token 800: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004090274218469858
    2. 'solver' → logprob: -5.504090309143066
    3. '    
' → logprob: -12.504090309143066
    4. '
' → logprob: -12.504090309143066
    5. ' solver' → logprob: -13.504090309143066
    6. 'sol' → logprob: -13.879090309143066
    7. '```' → logprob: -13.879090309143066
    8. '_solver' → logprob: -15.629090309143066
    9. '``' → logprob: -15.879090309143066
    10. '       ' → logprob: -16.00408935546875

Token 801: ' although' (ID: 11943)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.252160906791687
    2. 'solver' → logprob: -1.502160906791687
    3. ' solver' → logprob: -8.502161026000977
    4. 'sol' → logprob: -11.377161026000977
    5. '
' → logprob: -12.502161026000977
    6. 'solution' → logprob: -12.627161026000977
    7. '```' → logprob: -12.877161026000977
    8. '0' → logprob: -13.502161026000977
    9. '  ' → logprob: -13.877161026000977
    10. '       ' → logprob: -14.127161026000977

Token 802: ' parse' (ID: 8420)
  Prédit: 'solver'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'solver' → logprob: -0.0016175732016563416
    2. 'it' → logprob: -6.876617431640625
    3. '0' → logprob: -8.251617431640625
    4. '   ' → logprob: -9.501617431640625
    5. ' solver' → logprob: -9.751617431640625
    6. 'the' → logprob: -9.876617431640625
    7. '#' → logprob: -9.876617431640625
    8. 'it's' → logprob: -10.251617431640625
    9. 'line' → logprob: -11.001617431640625
    10. 'not' → logprob: -11.501617431640625

Token 803: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.11097700148820877
    2. ' will' → logprob: -2.8609769344329834
    3. 'will' → logprob: -3.4859769344329834
    4. 'contin' → logprob: -5.3609771728515625
    5. '   ' → logprob: -6.2359771728515625
    6. ' may' → logprob: -6.6109771728515625
    7. ' continues' → logprob: -7.1109771728515625
    8. '```' → logprob: -7.2359771728515625
    9. 'calls' → logprob: -7.7359771728515625
    10. ' is' → logprob: -7.7359771728515625

Token 804: ' stops' (ID: 29924)
  Prédit: 'will'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'will' → logprob: -0.5589815378189087
    2. ' will' → logprob: -1.5589815378189087
    3. 'already' → logprob: -3.183981418609619
    4. 'does' → logprob: -4.308981418609619
    5. 'also' → logprob: -4.308981418609619
    6. ' may' → logprob: -4.308981418609619
    7. 'def' → logprob: -4.433981418609619
    8. '   ' → logprob: -4.558981418609619
    9. ' won't' → logprob: -4.683981418609619
    10. ' already' → logprob: -4.808981418609619

Token 805: ' on' (ID: 402)
  Prédit: 'after'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'after' → logprob: -0.7463205456733704
    2. 'at' → logprob: -1.4963204860687256
    3. 'here' → logprob: -1.9963204860687256
    4. ' here' → logprob: -3.4963204860687256
    5. ' at' → logprob: -3.7463204860687256
    6. 'feeding' → logprob: -3.7463204860687256
    7. 'reading' → logprob: -4.121320724487305
    8. 'there' → logprob: -4.371320724487305
    9. 'when' → logprob: -4.496320724487305
    10. 'on' → logprob: -4.621320724487305

Token 806: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0088279964402318
    2. ' '' → logprob: -5.633828163146973
    3. '"' → logprob: -6.008828163146973
    4. 'enc' → logprob: -7.258828163146973
    5. '0' → logprob: -7.383828163146973
    6. 'that' → logprob: -8.258828163146973
    7. '   ' → logprob: -8.383828163146973
    8. 'yield' → logprob: -8.758828163146973
    9. '('' → logprob: -9.008828163146973
    10. 'detect' → logprob: -9.133828163146973

Token 807: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0008136780234053731
    2. ''' → logprob: -7.1258134841918945
    3. ' ' → logprob: -11.875813484191895
    4. '`' → logprob: -13.750813484191895
    5. '   ' → logprob: -15.000813484191895
    6. '"' → logprob: -15.250813484191895
    7. '```' → logprob: -16.12581443786621
    8. '('' → logprob: -16.87581443786621
    9. ' '' → logprob: -17.12581443786621
    10. 'line' → logprob: -17.25081443786621

Token 808: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0028153362218290567
    2. '0' → logprob: -5.877815246582031
    3. ' ' → logprob: -11.627815246582031
    4. '   ' → logprob: -14.002815246582031
    5. '  ' → logprob: -15.252815246582031
    6. '<|end|>' → logprob: -16.37781524658203
    7. 'import' → logprob: -17.25281524658203
    8. '00' → logprob: -17.25281524658203
    9. '     ' → logprob: -17.37781524658203
    10. ' line' → logprob: -17.56531524658203

Token 809: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.008615042082965374
    2. ' ' → logprob: -4.758615016937256
    3. '```' → logprob: -16.008615493774414
    4. ' ' → logprob: -16.133615493774414
    5. '   ' → logprob: -16.258615493774414
    6. 'line' → logprob: -16.883615493774414
    7. '<|end|>' → logprob: -16.883615493774414
    8. ' line' → logprob: -17.133615493774414
    9. '  ' → logprob: -18.008615493774414
    10. '
' → logprob: -18.383615493774414

Token 810: ''
' (ID: 2207)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006957544246688485
    2. '
' → logprob: -9.000696182250977
    3. ')' → logprob: -9.125696182250977
    4. ''' → logprob: -9.125696182250977
    5. '<|end|>' → logprob: -9.250696182250977
    6. '       ' → logprob: -9.375696182250977
    7. '\n' → logprob: -10.250696182250977
    8. '  ' → logprob: -10.750696182250977
    9. '.' → logprob: -10.750696182250977
    10. ' line' → logprob: -10.875696182250977

Token 811: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0011166424956172705
    2. 'results' → logprob: -7.001116752624512
    3. 'solver' → logprob: -8.626116752624512
    4. ' results' → logprob: -11.751116752624512
    5. 'for' → logprob: -11.876116752624512
    6. 'outputs' → logprob: -13.376116752624512
    7. 'solutions' → logprob: -13.501116752624512
    8. 'result' → logprob: -13.501116752624512
    9. ' solver' → logprob: -14.001116752624512
    10. 'lines' → logprob: -14.001116752624512

Token 812: ' solver' (ID: 63271)
  Prédit: 'solver'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solver' (adapté à ' solver') → logprob: -0.2519446313381195
    2. '   ' → logprob: -1.501944661140442
    3. ' solver' → logprob: -11.251944541931152
    4. 'sol' → logprob: -13.751944541931152
    5. 'solution' → logprob: -14.251944541931152
    6. 'solve' → logprob: -15.376944541931152
    7. '```' → logprob: -15.626944541931152
    8. '  ' → logprob: -16.12694549560547
    9. '_solver' → logprob: -16.37694549560547
    10. 's' → logprob: -16.50194549560547

Token 813: '.feed' (ID: 116886)
  Prédit: '.feed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.feed' → logprob: -0.000295420759357512
    2. '._' → logprob: -8.250295639038086
    3. '.solve' → logprob: -10.375295639038086
    4. '.' → logprob: -13.375295639038086
    5. 'feed' → logprob: -14.375295639038086
    6. '.fe' → logprob: -14.875295639038086
    7. ' .' → logprob: -15.250295639038086
    8. '\.' → logprob: -17.000295639038086
    9. '.fill' → logprob: -17.125295639038086
    10. '.s' → logprob: -17.500295639038086

Token 814: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -3.9650025428272784e-05
    2. 'Input' → logprob: -10.875040054321289
    3. 'input' → logprob: -11.125040054321289
    4. '_line' → logprob: -12.375040054321289
    5. 'line' → logprob: -14.000040054321289
    6. '_inputs' → logprob: -16.00004005432129
    7. '   ' → logprob: -16.62504005432129
    8. '_INPUT' → logprob: -16.75004005432129
    9. 'solver' → logprob: -16.75004005432129
    10. '_Input' → logprob: -17.00004005432129

Token 815: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.00023178798437584192
    2. 'line' → logprob: -8.375231742858887
    3. 'Line' → logprob: -13.875231742858887
    4. '_LINE' → logprob: -16.500232696533203
    5. '   ' → logprob: -17.000232696533203
    6. '```' → logprob: -17.375232696533203
    7. ' line' → logprob: -18.125232696533203
    8. '
' → logprob: -18.875232696533203
    9. '[line' → logprob: -19.125232696533203
    10. '_input' → logprob: -19.125232696533203

Token 816: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.012213759124279022
    2. ''' → logprob: -4.512213706970215
    3. '("' → logprob: -6.762213706970215
    4. '"' → logprob: -12.137213706970215
    5. '(' → logprob: -13.012213706970215
    6. '0' → logprob: -14.012213706970215
    7. '`' → logprob: -17.13721466064453
    8. '   ' → logprob: -17.13721466064453
    9. '(('' → logprob: -17.38721466064453
    10. 'line' → logprob: -18.38721466064453

Token 817: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -17.375
    3. '')' → logprob: -20.25
    4. ''' → logprob: -20.75
    5. '   ' → logprob: -21.375
    6. '00' → logprob: -21.75
    7. '```' → logprob: -21.875
    8. '  ' → logprob: -22.375
    9. '۰' → logprob: -22.625
    10. '０' → logprob: -22.75

Token 818: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -8.53050296427682e-05
    2. '0' → logprob: -9.37508487701416
    3. ' ' → logprob: -15.25008487701416
    4. '  ' → logprob: -17.000085830688477
    5. '   ' → logprob: -17.500085830688477
    6. '<|end|>' → logprob: -19.937585830688477
    7. '_' → logprob: -20.250085830688477
    8. '00' → logprob: -20.562585830688477
    9. '    ' → logprob: -21.187585830688477
    10. '```' → logprob: -21.312585830688477

Token 819: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01603425107896328
    2. ' ' → logprob: -4.141034126281738
    3. '   ' → logprob: -18.016035079956055
    4. '  ' → logprob: -18.516035079956055
    5. ' ' → logprob: -19.516035079956055
    6. '۰' → logprob: -20.328535079956055
    7. '<|end|>' → logprob: -20.453535079956055
    8. '    ' → logprob: -20.828535079956055
    9. '')' → logprob: -20.828535079956055
    10. '_' → logprob: -20.828535079956055

Token 820: '')
' (ID: 2515)
  Prédit: '')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')
' → logprob: -0.12747111916542053
    2. '')' → logprob: -2.1274712085723877
    3. ')
' → logprob: -8.627470970153809
    4. ')' → logprob: -9.252470970153809
    5. '')

' → logprob: -9.252470970153809
    6. ')')
' → logprob: -9.377470970153809
    7. '')
' → logprob: -10.002470970153809
    8. '   ' → logprob: -10.252470970153809
    9. '\n' → logprob: -13.002470970153809
    10. ''' → logprob: -13.377470970153809

Token 821: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3152309060096741
    2. 'results' → logprob: -1.3152308464050293
    3. ' results' → logprob: -6.690230846405029
    4. 'for' → logprob: -7.440230846405029
    5. 'outputs' → logprob: -9.565231323242188
    6. 'result' → logprob: -9.940231323242188
    7. '	results' → logprob: -11.940231323242188
    8. 'output' → logprob: -12.065231323242188
    9. ' for' → logprob: -12.565231323242188
    10. 'answers' → logprob: -14.065231323242188

Token 822: ' for' (ID: 395)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.016249608248472214
    2. 'for' (adapté à ' for') → logprob: -4.266249656677246
    3. '   ' → logprob: -6.516249656677246
    4. ' results' → logprob: -7.766249656677246
    5. 'result' → logprob: -9.266249656677246
    6. 'outputs' → logprob: -9.641249656677246
    7. ' for' → logprob: -11.641249656677246
    8. 'answers' → logprob: -11.891249656677246
    9. 'output' → logprob: -12.266249656677246
    10. '	results' → logprob: -14.516249656677246

Token 823: ' output' (ID: 4733)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.06647566705942154
    2. 'output' → logprob: -2.8164756298065186
    3. 'res' → logprob: -5.566475868225098
    4. ' result' → logprob: -7.566475868225098
    5. ' output' → logprob: -9.566475868225098
    6. 'answer' → logprob: -10.316475868225098
    7. 'out' → logprob: -10.691475868225098
    8. 'line' → logprob: -11.066475868225098
    9. 'solution' → logprob: -11.316475868225098
    10. ' res' → logprob: -13.316475868225098

Token 824: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.003193516517058015
    2. '_line' → logprob: -6.128193378448486
    3. 'in' → logprob: -7.253193378448486
    4. 'line' → logprob: -8.128193855285645
    5. ' line' → logprob: -12.753193855285645
    6. '_' → logprob: -14.128193855285645
    7. 'Line' → logprob: -14.628193855285645
    8. '_string' → logprob: -15.628193855285645
    9. '_output' → logprob: -16.128192901611328
    10. '(line' → logprob: -16.253192901611328

Token 825: ' solver' (ID: 63271)
  Prédit: 'solver'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solver' → logprob: -0.03804275393486023
    2. ' solver' → logprob: -3.2880427837371826
    3. 'sol' → logprob: -14.163043022155762
    4. '   ' → logprob: -14.413043022155762
    5. '_solver' → logprob: -16.913042068481445
    6. 'solve' → logprob: -17.538042068481445
    7. 'solution' → logprob: -17.913042068481445
    8. ' ' → logprob: -18.038042068481445
    9. '(s' → logprob: -18.163042068481445
    10. 's' → logprob: -18.788042068481445

Token 826: '.solve' (ID: 151960)
  Prédit: '.solve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.solve' → logprob: -3.03521392197581e-05
    2. '._' → logprob: -10.750030517578125
    3. '.' → logprob: -12.125030517578125
    4. ' .' → logprob: -12.875030517578125
    5. 'solve' → logprob: -14.750030517578125
    6. '.s' → logprob: -16.000030517578125
    7. '.sol' → logprob: -16.000030517578125
    8. '   ' → logprob: -16.500030517578125
    9. '_.' → logprob: -17.375030517578125
    10. '.solution' → logprob: -18.375030517578125

Token 827: '_all' (ID: 13305)
  Prédit: '_all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_all' → logprob: -1.9361264946837764e-07
    2. '_output' → logprob: -16.0
    3. 'all' → logprob: -18.0
    4. '_' → logprob: -18.5
    5. '_out' → logprob: -18.875
    6. 'All' → logprob: -19.0
    7. '_one' → logprob: -20.125
    8. '_ALL' → logprob: -20.25
    9. '   ' → logprob: -20.375
    10. '_outputs' → logprob: -21.25

Token 828: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0620865561068058
    2. '():
' → logprob: -2.812086582183838
    3. ':' → logprob: -9.56208610534668
    4. '()' → logprob: -10.31208610534668
    5. '(output' → logprob: -11.31208610534668
    6. '():
' → logprob: -13.18708610534668
    7. ':
' → logprob: -14.31208610534668
    8. '().' → logprob: -15.56208610534668
    9. ' ():' → logprob: -15.68708610534668
    10. '(' → logprob: -16.31208610534668

Token 829: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04888210818171501
    2. 'print' → logprob: -3.048882007598877
    3. ' print' → logprob: -8.423882484436035
    4. '   ' → logprob: -9.548882484436035
    5. '```' → logprob: -12.673882484436035
    6. '	print' → logprob: -15.048882484436035
    7. '           ' → logprob: -15.298882484436035
    8. '	   ' → logprob: -17.42388153076172
    9. '(print' → logprob: -17.42388153076172
    10. '#print' → logprob: -17.54888153076172

Token 830: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: 0.0
    2. ' print' → logprob: -17.75
    3. '       ' → logprob: -18.25
    4. '   ' → logprob: -21.25
    5. '```' → logprob: -21.25
    6. '	print' → logprob: -23.875
    7. '           ' → logprob: -24.375
    8. '``' → logprob: -26.125
    9. 'println' → logprob: -26.875
    10. '
' → logprob: -26.875

Token 831: '(output' (ID: 22485)
  Prédit: '(output'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(output' → logprob: -1.9361264946837764e-07
    2. 'output' → logprob: -16.125
    3. '(' → logprob: -18.625
    4. '(outputs' → logprob: -22.0
    5. '$output' → logprob: -22.375
    6. ' output' → logprob: -22.625
    7. '(Output' → logprob: -22.875
    8. '(f' → logprob: -23.25
    9. '()' → logprob: -23.375
    10. '(input' → logprob: -23.375

Token 832: ')


' (ID: 7861)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -6.511406809295295e-06
    2. '())' → logprob: -12.250006675720215
    3. '()' → logprob: -13.875006675720215
    4. ')`' → logprob: -15.375006675720215
    5. '')' → logprob: -15.750006675720215
    6. ')
' → logprob: -16.3750057220459
    7. '   ' → logprob: -16.7500057220459
    8. '`)' → logprob: -17.0000057220459
    9. ' )' → logprob: -17.2500057220459
    10. '")' → logprob: -17.8750057220459

Token 833: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.8789383830153383e-05
    2. ' if' → logprob: -11.375019073486328
    3. '```' → logprob: -12.250019073486328
    4. 'main' → logprob: -13.375019073486328
    5. '#' → logprob: -14.000019073486328
    6. '<|end|>' → logprob: -17.125019073486328
    7. '#if' → logprob: -17.375019073486328
    8. '
' → logprob: -17.375019073486328
    9. 'If' → logprob: -18.250019073486328
    10. '@if' → logprob: -18.250019073486328

Token 834: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.2014448046684265
    2. '__' → logprob: -1.7014448642730713
    3. 'name' → logprob: -11.076444625854492
    4. '_name' → logprob: -11.326444625854492
    5. '___' → logprob: -13.701444625854492
    6. 'Name' → logprob: -14.201444625854492
    7. ' ' → logprob: -14.451444625854492
    8. '```' → logprob: -14.951444625854492
    9. '_' → logprob: -15.451444625854492
    10. '/__' → logprob: -15.701444625854492

Token 835: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.06575550884008408
    2. ' ==' → logprob: -3.315755605697632
    3. '==' → logprob: -3.690755605697632
    4. 'name' → logprob: -6.940755367279053
    5. '=="' → logprob: -7.690755367279053
    6. ' __' → logprob: -7.815755367279053
    7. '=='' → logprob: -7.940755367279053
    8. '.__' → logprob: -9.315755844116211
    9. 'if' → logprob: -10.190755844116211
    10. '__.__' → logprob: -10.565755844116211

Token 836: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -3.833878508885391e-05
    2. '==' → logprob: -10.250038146972656
    3. '__.__' → logprob: -13.500038146972656
    4. ' ==' → logprob: -14.125038146972656
    5. '=="' → logprob: -15.000038146972656
    6. '=='' → logprob: -16.000038146972656
    7. '___' → logprob: -16.250038146972656
    8. '____' → logprob: -16.500038146972656
    9. '__('' → logprob: -16.625038146972656
    10. '__.' → logprob: -17.875038146972656

Token 837: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.47684231400489807
    2. '__' → logprob: -1.1018422842025757
    3. ' ==' → logprob: -3.1018424034118652
    4. '=='' → logprob: -6.351842403411865
    5. '=="' → logprob: -8.226841926574707
    6. '===' → logprob: -11.351841926574707
    7. '__.__' → logprob: -12.476841926574707
    8. '==='' → logprob: -13.351841926574707
    9. '=' → logprob: -13.726841926574707
    10. '__('' → logprob: -13.976841926574707

Token 838: ' '__' (ID: 28278)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.4740886092185974
    2. ''' → logprob: -0.9740886092185974
    3. '__' → logprob: -11.474088668823242
    4. ' "__' → logprob: -13.974088668823242
    5. ' '__' → logprob: -15.849088668823242
    6. '"user' → logprob: -17.224088668823242
    7. ''"' → logprob: -17.349088668823242
    8. ''post' → logprob: -17.599088668823242
    9. '('__' → logprob: -17.849088668823242
    10. '"class' → logprob: -17.974088668823242

Token 839: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.00018065694894175977
    2. '__' → logprob: -8.7501802444458
    3. 'name' → logprob: -10.7501802444458
    4. '_main' → logprob: -15.1251802444458
    5. ' main' → logprob: -16.000181198120117
    6. '__':
' → logprob: -16.125181198120117
    7. 'built' → logprob: -16.250181198120117
    8. '__.' → logprob: -16.500181198120117
    9. 'print' → logprob: -17.500181198120117
    10. '(main' → logprob: -18.250181198120117

Token 840: '__':
' (ID: 39314)
  Prédit: '__':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__':
' → logprob: -0.014342490583658218
    2. '__' → logprob: -4.264342308044434
    3. '__":
' → logprob: -8.639342308044434
    4. '__.' → logprob: -14.264342308044434
    5. '__:' → logprob: -14.764342308044434
    6. '__
' → logprob: -15.264342308044434
    7. '__.__' → logprob: -15.389342308044434
    8. '_' → logprob: -16.01434326171875
    9. '__('' → logprob: -16.38934326171875
    10. '':
' → logprob: -16.51434326171875

Token 841: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0002334568416699767
    2. ' main' → logprob: -8.87523365020752
    3. '   ' → logprob: -9.87523365020752
    4. '__' → logprob: -10.25023365020752
    5. '	main' → logprob: -12.37523365020752
    6. '(main' → logprob: -13.37523365020752
    7. '_main' → logprob: -14.25023365020752
    8. '    
' → logprob: -16.250232696533203
    9. '____' → logprob: -17.125232696533203
    10. '```' → logprob: -17.250232696533203

Token 842: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: 0.0
    2. ' main' → logprob: -19.25
    3. '	main' → logprob: -22.25
    4. 'import' → logprob: -22.875
    5. '   ' → logprob: -24.5
    6. '.main' → logprob: -27.25
    7. '(main' → logprob: -27.5
    8. '_main' → logprob: -28.125
    9. '```' → logprob: -28.875
    10. 'mai' → logprob: -30.375

Token 843: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 841
Tokens correctement prédits (1ère position, stricte): 399
Tokens correctement prédits (1ère position, avec adaptation): 444
Tokens correctement prédits (top 10): 723
Précision stricte (1ère position): 47.44%
Précision adaptée (1ère position): 52.79%
Précision (top 10): 85.97%
================================================================================
