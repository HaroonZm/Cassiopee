================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:15:23
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N,M=map(int,input().split())
flag=[input() for _ in range(N)]
costW=[sum(c!='W' for c in row) for row in flag]
costB=[sum(c!='B' for c in row) for row in flag]
costR=[sum(c!='R' for c in row) for row in flag]
ans=float('inf')
for w in range(1,N-1):
 for b in range(w+1,N):
  c=sum(costW[:w])+sum(costB[w:b])+sum(costR[b:])
  if c<ans:ans=c
print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: ',M' (ID: 54127)
  → Token d'amorce (pas de prédiction)

Token 2: '=' (ID: 28)
  → Token d'amorce (pas de prédiction)

Token 3: 'map' (ID: 3726)
  Prédit: 'map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.3249421715736389
    2. ' map' → logprob: -1.3249421119689941
    3. 'input' → logprob: -4.949942111968994
    4. '10' → logprob: -6.199942111968994
    5. ' input' → logprob: -6.949942111968994
    6. ' ' → logprob: -7.699942111968994
    7. '0' → logprob: -7.824942111968994
    8. 'list' → logprob: -8.199942588806152
    9. 'int' → logprob: -8.324942588806152
    10. ' list' → logprob: -9.574942588806152

Token 4: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.031151410192251205
    2. '(int' → logprob: -3.906151294708252
    3. '(str' → logprob: -5.531151294708252
    4. '(lambda' → logprob: -5.531151294708252
    5. '```' → logprob: -6.531151294708252
    6. '<|end|>' → logprob: -7.781151294708252
    7. '(input' → logprob: -8.65615177154541
    8. '[int' → logprob: -9.53115177154541
    9. '(len' → logprob: -9.53115177154541
    10. '(
' → logprob: -9.53115177154541

Token 5: ',input' (ID: 123014)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6822683215141296
    2. '(input' → logprob: -1.0572683811187744
    3. '(' → logprob: -2.1822683811187744
    4. ',' → logprob: -5.057268142700195
    5. '`)' → logprob: -5.057268142700195
    6. '(int' → logprob: -5.182268142700195
    7. ',input' → logprob: -5.932268142700195
    8. '```' → logprob: -5.932268142700195
    9. '(str' → logprob: -6.432268142700195
    10. 'input' → logprob: -6.557268142700195

Token 6: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -1.1041797399520874
    2. '(' → logprob: -1.3541797399520874
    3. '()' → logprob: -1.7291797399520874
    4. '('' → logprob: -2.604179859161377
    5. '()>' → logprob: -3.604179859161377
    6. ')' → logprob: -3.729179859161377
    7. '(">' → logprob: -4.104179859161377
    8. '()">' → logprob: -4.229179859161377
    9. '(""))' → logprob: -4.479179859161377
    10. '(token' → logprob: -4.979179859161377

Token 7: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0008045066497288644
    2. 'strip' → logprob: -7.250804424285889
    3. ')' → logprob: -9.375804901123047
    4. ' split' → logprob: -12.500804901123047
    5. 'read' → logprob: -13.250804901123047
    6. 'rstrip' → logprob: -13.375804901123047
    7. 'replace' → logprob: -13.750804901123047
    8. '(split' → logprob: -14.000804901123047
    9. 'spl' → logprob: -14.875804901123047
    10. '())' → logprob: -15.875804901123047

Token 8: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.027229836210608482
    2. '())' → logprob: -3.7772297859191895
    3. '))' → logprob: -6.1522297859191895
    4. '`)' → logprob: -6.7772297859191895
    5. '()' → logprob: -7.6522297859191895
    6. '(' → logprob: -9.652230262756348
    7. '')' → logprob: -9.902230262756348
    8. ')`' → logprob: -10.902230262756348
    9. '()))' → logprob: -11.527230262756348
    10. '```' → logprob: -11.777230262756348

Token 9: 'flag' (ID: 17665)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.06837956607341766
    2. 'for' → logprob: -3.0683796405792236
    3. 's' → logprob: -5.1933794021606445
    4. 'array' → logprob: -5.9433794021606445
    5. 'arr' → logprob: -6.0683794021606445
    6. 'A' → logprob: -6.1933794021606445
    7. 'data' → logprob: -6.8183794021606445
    8. 'd' → logprob: -7.1933794021606445
    9. '```' → logprob: -7.1933794021606445
    10. 'r' → logprob: -7.3183794021606445

Token 10: '=[' (ID: 13370)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3490966856479645
    2. ' =' → logprob: -1.224096655845642
    3. '_' → logprob: -7.599096775054932
    4. '_=' → logprob: -9.099096298217773
    5. ' ' → logprob: -11.099096298217773
    6. ',' → logprob: -11.599096298217773
    7. '=False' → logprob: -12.474096298217773
    8. '=True' → logprob: -13.099096298217773
    9. ' =)' → logprob: -14.099096298217773
    10. ' ,' → logprob: -14.224096298217773

Token 11: 'input' (ID: 2586)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3133983612060547
    2. 'False' → logprob: -1.3133983612060547
    3. 'True' → logprob: -9.063398361206055
    4. ' False' → logprob: -11.063398361206055
    5. '1' → logprob: -13.563398361206055
    6. '[' → logprob: -13.938398361206055
    7. ']' → logprob: -13.938398361206055
    8. '[]' → logprob: -14.063398361206055
    9. ' ' → logprob: -14.188398361206055
    10. '-' → logprob: -14.938398361206055

Token 12: '()' (ID: 416)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.12257132679224014
    2. '()' → logprob: -2.3725712299346924
    3. '())' → logprob: -3.8725712299346924
    4. '().' → logprob: -6.9975714683532715
    5. '(' → logprob: -8.872570991516113
    6. '()>' → logprob: -9.747570991516113
    7. '()][' → logprob: -9.872570991516113
    8. '()].' → logprob: -10.872570991516113
    9. '()!=' → logprob: -10.997570991516113
    10. '()<' → logprob: -11.122570991516113

Token 13: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.16256476938724518
    2. '()]' → logprob: -1.912564754486084
    3. '())' → logprob: -6.787564754486084
    4. ']' → logprob: -7.912564754486084
    5. ')' → logprob: -8.162565231323242
    6. '(' → logprob: -9.037565231323242
    7. 'for' → logprob: -9.037565231323242
    8. '().' → logprob: -9.287565231323242
    9. ')]' → logprob: -9.412565231323242
    10. ' for' → logprob: -9.537565231323242

Token 14: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.17400608956813812
    2. '_' → logprob: -2.5490059852600098
    3. ' _' → logprob: -2.6740059852600098
    4. ' i' → logprob: -4.54900598526001
    5. ' ' → logprob: -6.79900598526001
    6. '_range' → logprob: -7.54900598526001
    7. ' in' → logprob: -8.424006462097168
    8. 'range' → logprob: -9.549006462097168
    9. '(range' → logprob: -11.174006462097168
    10. ' ▁' → logprob: -11.549006462097168

Token 15: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.05681455135345459
    2. 'in' → logprob: -2.931814670562744
    3. 'range' → logprob: -6.556814670562744
    4. ' range' → logprob: -7.806814670562744
    5. ' ' → logprob: -10.306814193725586
    6. 'i' → logprob: -10.806814193725586
    7. ' _' → logprob: -11.181814193725586
    8. '_' → logprob: -11.556814193725586
    9. 'n' → logprob: -12.181814193725586
    10. 'int' → logprob: -12.431814193725586

Token 16: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.011049231514334679
    2. ' range' → logprob: -4.511049270629883
    3. 'flag' → logprob: -14.636049270629883
    4. '(range' → logprob: -15.011049270629883
    5. '[' → logprob: -15.761049270629883
    6. ' ' → logprob: -16.511049270629883
    7. '	range' → logprob: -16.761049270629883
    8. '```' → logprob: -16.886049270629883
    9. 'N' → logprob: -17.136049270629883
    10. 'rang' → logprob: -17.136049270629883

Token 17: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.584997832775116
    2. '(M' → logprob: -0.834997832775116
    3. '(' → logprob: -4.709997653961182
    4. '(n' → logprob: -12.20999813079834
    5. '(len' → logprob: -13.33499813079834
    6. '(
' → logprob: -13.33499813079834
    7. ' (' → logprob: -13.83499813079834
    8. '(int' → logprob: -14.08499813079834
    9. 'N' → logprob: -14.70999813079834
    10. '(K' → logprob: -14.83499813079834

Token 18: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0002266622323077172
    2. ')' → logprob: -9.000226974487305
    3. ']' → logprob: -9.250226974487305
    4. ')])' → logprob: -13.000226974487305
    5. '])]' → logprob: -13.000226974487305
    6. '])' → logprob: -13.500226974487305
    7. '')]' → logprob: -14.500226974487305
    8. ')],' → logprob: -15.125226974487305
    9. ' )' → logprob: -16.500226974487305
    10. ')][' → logprob: -16.625226974487305

Token 19: 'cost' (ID: 33457)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3849760591983795
    2. 'count' → logprob: -2.2599761486053467
    3. 'c' → logprob: -3.3849761486053467
    4. 'result' → logprob: -3.7599761486053467
    5. 'flag' → logprob: -4.259975910186768
    6. 'h' → logprob: -4.259975910186768
    7. 's' → logprob: -4.509975910186768
    8. 'ans' → logprob: -4.509975910186768
    9. 'valid' → logprob: -4.509975910186768
    10. 'x' → logprob: -4.634975910186768

Token 20: 'W' (ID: 54)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12496984004974365
    2. 's' → logprob: -2.624969959259033
    3. ' =' → logprob: -3.874969959259033
    4. '[' → logprob: -3.999969959259033
    5. '=[' → logprob: -5.374969959259033
    6. '=[]' → logprob: -6.874969959259033
    7. '_' → logprob: -9.249969482421875
    8. ' ' → logprob: -10.124969482421875
    9. '=[
' → logprob: -10.249969482421875
    10. ' =[' → logprob: -10.374969482421875

Token 21: '=[' (ID: 13370)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.21910686790943146
    2. '=' → logprob: -2.094106912612915
    3. '=[' → logprob: -3.594106912612915
    4. '=[]' → logprob: -3.969106912612915
    5. ' =' → logprob: -4.094106674194336
    6. '[]' → logprob: -5.219106674194336
    7. '_' → logprob: -6.969106674194336
    8. ' =[' → logprob: -6.969106674194336
    9. '[i' → logprob: -7.344106674194336
    10. ']' → logprob: -7.594106674194336

Token 22: 'sum' (ID: 12298)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.3181413412094116
    2. '0' → logprob: -1.8181413412094116
    3. '[int' → logprob: -2.818141460418701
    4. '[' → logprob: -3.693141460418701
    5. '[]' → logprob: -4.943141460418701
    6. '[list' → logprob: -5.068141460418701
    7. 'int' → logprob: -5.193141460418701
    8. ']' → logprob: -5.693141460418701
    9. '[input' → logprob: -6.318141460418701
    10. 'input' → logprob: -7.568141460418701

Token 23: '(c' (ID: 2410)
  Prédit: '(flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(flag' → logprob: -0.31042855978012085
    2. '(' → logprob: -2.0604286193847656
    3. '(row' → logprob: -2.4354286193847656
    4. '(c' → logprob: -4.310428619384766
    5. '(line' → logprob: -4.435428619384766
    6. '([' → logprob: -4.935428619384766
    7. '(x' → logprob: -5.185428619384766
    8. '(int' → logprob: -5.935428619384766
    9. '((' → logprob: -6.310428619384766
    10. '(i' → logprob: -6.310428619384766

Token 24: '!='' (ID: 58874)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.6415988206863403
    2. '==' → logprob: -0.8915988206863403
    3. '(i' → logprob: -4.266598701477051
    4. '[j' → logprob: -4.391598701477051
    5. '(row' → logprob: -5.391598701477051
    6. '!=' → logprob: -5.391598701477051
    7. '[' → logprob: -5.641598701477051
    8. ')' → logprob: -5.766598701477051
    9. '=='' → logprob: -5.891598701477051
    10. ' ==' → logprob: -6.391598701477051

Token 25: 'W' (ID: 54)
  Prédit: 'W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.03370482847094536
    2. 'B' → logprob: -3.5337047576904297
    3. '#' → logprob: -6.40870475769043
    4. ''' → logprob: -6.90870475769043
    5. '.'' → logprob: -8.15870475769043
    6. '.')' → logprob: -8.15870475769043
    7. '.' → logprob: -8.53370475769043
    8. 'R' → logprob: -9.15870475769043
    9. 'S' → logprob: -9.28370475769043
    10. 'C' → logprob: -9.65870475769043

Token 26: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.01772795431315899
    2. ' '' → logprob: -4.517727851867676
    3. ')'' → logprob: -5.892727851867676
    4. ')' → logprob: -6.642727851867676
    5. '')' → logprob: -6.767727851867676
    6. ' for' → logprob: -6.892727851867676
    7. 'for' → logprob: -8.267727851867676
    8. ' ')' → logprob: -9.392727851867676
    9. ''s' → logprob: -10.392727851867676
    10. ' ' → logprob: -11.642727851867676

Token 27: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2808176875114441
    2. ' for' → logprob: -1.9058177471160889
    3. '(s' → logprob: -3.405817747116089
    4. '(row' → logprob: -3.780817747116089
    5. '(line' → logprob: -4.40581750869751
    6. '(c' → logprob: -5.15581750869751
    7. ')' → logprob: -5.15581750869751
    8. '(flag' → logprob: -5.78081750869751
    9. 'row' → logprob: -5.90581750869751
    10. '(ch' → logprob: -6.03081750869751

Token 28: ' c' (ID: 274)
  Prédit: ' row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' row' → logprob: -0.11283529549837112
    2. 'row' → logprob: -2.61283540725708
    3. ' r' → logprob: -4.98783540725708
    4. ' c' → logprob: -4.98783540725708
    5. ' line' → logprob: -5.36283540725708
    6. 'r' → logprob: -5.36283540725708
    7. ' s' → logprob: -6.11283540725708
    8. 'c' → logprob: -6.11283540725708
    9. ' flag' → logprob: -6.11283540725708
    10. 'flag' → logprob: -7.61283540725708

Token 29: ' in' (ID: 306)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.5517270565032959
    2. ' row' → logprob: -1.051727056503296
    3. ' in' → logprob: -4.301727294921875
    4. 'r' → logprob: -4.426727294921875
    5. 'flag' → logprob: -4.426727294921875
    6. ' flag' → logprob: -4.551727294921875
    7. 'line' → logprob: -4.676727294921875
    8. ' line' → logprob: -5.051727294921875
    9. ' r' → logprob: -5.801727294921875
    10. 's' → logprob: -6.301727294921875

Token 30: ' row' (ID: 5225)
  Prédit: ' row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' row' → logprob: -0.8956556916236877
    2. 'row' → logprob: -1.145655632019043
    3. ' flag' → logprob: -1.770655632019043
    4. 'flag' → logprob: -2.895655632019043
    5. ' f' → logprob: -4.645655632019043
    6. 'f' → logprob: -4.645655632019043
    7. 'r' → logprob: -4.895655632019043
    8. ' line' → logprob: -5.395655632019043
    9. ' s' → logprob: -5.520655632019043
    10. ' r' → logprob: -5.645655632019043

Token 31: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005039428360760212
    2. ' )' → logprob: -8.250503540039062
    3. ')]' → logprob: -8.750503540039062
    4. 'if' → logprob: -11.500503540039062
    5. ')
' → logprob: -11.500503540039062
    6. ' if' → logprob: -11.500503540039062
    7. '   ' → logprob: -11.625503540039062
    8. ' ' → logprob: -12.000503540039062
    9. '))' → logprob: -12.000503540039062
    10. '])' → logprob: -12.000503540039062

Token 32: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1966666430234909
    2. 'for' → logprob: -2.446666717529297
    3. ')' → logprob: -2.571666717529297
    4. ']' → logprob: -5.071666717529297
    5. ' ' → logprob: -5.321666717529297
    6. '   ' → logprob: -6.196666717529297
    7. ' in' → logprob: -6.446666717529297
    8. ')]' → logprob: -8.196666717529297
    9. '	for' → logprob: -9.196666717529297
    10. '       ' → logprob: -9.196666717529297

Token 33: ' row' (ID: 5225)
  Prédit: ' flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' flag' → logprob: -0.5235477685928345
    2. 'flag' → logprob: -0.8985477685928345
    3. ' range' → logprob: -8.273548126220703
    4. 'range' → logprob: -9.773548126220703
    5. ' row' → logprob: -10.148548126220703
    6. '	flag' → logprob: -10.898548126220703
    7. 'row' → logprob: -10.898548126220703
    8. '(flag' → logprob: -12.023548126220703
    9. 'f' → logprob: -12.211048126220703
    10. ' ' → logprob: -12.523548126220703

Token 34: ' in' (ID: 306)
  Prédit: 'flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flag' → logprob: -0.4894889295101166
    2. ' flag' → logprob: -0.989488959312439
    3. '(flag' → logprob: -4.2394890785217285
    4. ' in' → logprob: -7.6144890785217285
    5. ' range' → logprob: -8.86448860168457
    6. ')' → logprob: -9.23948860168457
    7. 'range' → logprob: -10.36448860168457
    8. '	flag' → logprob: -10.61448860168457
    9. ' flagged' → logprob: -10.98948860168457
    10. ']' → logprob: -11.11448860168457

Token 35: ' flag' (ID: 9641)
  Prédit: 'flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flag' → logprob: -0.043025679886341095
    2. ' flag' → logprob: -3.1680257320404053
    3. 'range' → logprob: -11.918025970458984
    4. '	flag' → logprob: -12.293025970458984
    5. '(flag' → logprob: -12.543025970458984
    6. ' range' → logprob: -13.293025970458984
    7. 'fl' → logprob: -13.605525970458984
    8. 'f' → logprob: -13.668025970458984
    9. ' ' → logprob: -13.730525970458984
    10. ')' → logprob: -13.980525970458984

Token 36: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.19041872024536133
    2. ')]' → logprob: -1.8154187202453613
    3. ')' → logprob: -4.690418720245361
    4. '])' → logprob: -6.940418720245361
    5. ']
' → logprob: -7.940418720245361
    6. '])]' → logprob: -9.690418243408203
    7. ' ]' → logprob: -11.565418243408203
    8. ')])' → logprob: -11.690418243408203
    9. ')
' → logprob: -12.190418243408203
    10. '`]' → logprob: -12.440418243408203

Token 37: 'cost' (ID: 33457)
  Prédit: 'cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.0002942287246696651
    2. '
' → logprob: -8.87529468536377
    3. '```' → logprob: -9.75029468536377
    4. ' cost' → logprob: -11.00029468536377
    5. 'c' → logprob: -11.50029468536377
    6. 'total' → logprob: -11.87529468536377
    7. 'newline' → logprob: -12.25029468536377
    8. 'print' → logprob: -12.25029468536377
    9. '' → logprob: -12.37529468536377
    10. '(cost' → logprob: -12.50029468536377

Token 38: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.002116831485182047
    2. 'W' → logprob: -6.252116680145264
    3. 'R' → logprob: -8.877117156982422
    4. '_B' → logprob: -10.627117156982422
    5. '=B' → logprob: -12.377117156982422
    6. 'H' → logprob: -13.002117156982422
    7. 'M' → logprob: -13.252117156982422
    8. ' =' → logprob: -13.314617156982422
    9. ' B' → logprob: -13.314617156982422
    10. '=' → logprob: -13.314617156982422

Token 39: '=[' (ID: 13370)
  Prédit: '=['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=[' → logprob: -0.023434612900018692
    2. '=' → logprob: -3.773434638977051
    3. '=[]' → logprob: -8.89843463897705
    4. ' =[' → logprob: -10.52343463897705
    5. '[' → logprob: -11.27343463897705
    6. '=[[' → logprob: -12.52343463897705
    7. ' =' → logprob: -12.64843463897705
    8. '=[
' → logprob: -13.52343463897705
    9. '=['' → logprob: -13.77343463897705
    10. '=s' → logprob: -14.64843463897705

Token 40: 'sum' (ID: 12298)
  Prédit: 'sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.005952148232609034
    2. ' sum' → logprob: -5.13095235824585
    3. '[' → logprob: -11.630951881408691
    4. '(sum' → logprob: -11.755951881408691
    5. '   ' → logprob: -13.255951881408691
    6. ' [' → logprob: -13.880951881408691
    7. 's' → logprob: -14.255951881408691
    8. ' ' → logprob: -14.505951881408691
    9. '.sum' → logprob: -14.880951881408691
    10. '  ' → logprob: -14.880951881408691

Token 41: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.00018530222587287426
    2. '(' → logprob: -8.625185012817383
    3. 'c' → logprob: -12.625185012817383
    4. ' (' → logprob: -13.750185012817383
    5. '(
' → logprob: -14.500185012817383
    6. '(lambda' → logprob: -14.750185012817383
    7. '((' → logprob: -15.500185012817383
    8. '(not' → logprob: -16.250185012817383
    9. '(ord' → logprob: -16.750185012817383
    10. '```' → logprob: -17.000185012817383

Token 42: '!='' (ID: 58874)
  Prédit: '!=''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!='' → logprob: -0.04861041530966759
    2. '=='' → logprob: -3.0486104488372803
    3. '='' → logprob: -11.79861068725586
    4. '==' → logprob: -12.17361068725586
    5. '!=' → logprob: -12.29861068725586
    6. ' !=' → logprob: -13.17361068725586
    7. ']!='' → logprob: -13.29861068725586
    8. ' =='' → logprob: -13.42361068725586
    9. ']=='' → logprob: -15.42361068725586
    10. ''' → logprob: -15.92361068725586

Token 43: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0001843485952122137
    2. ''' → logprob: -8.625184059143066
    3. ' B' → logprob: -13.375184059143066
    4. '')' → logprob: -14.500184059143066
    5. '```' → logprob: -14.750184059143066
    6. ''s' → logprob: -14.875184059143066
    7. '`' → logprob: -15.375184059143066
    8. '"B' → logprob: -15.625184059143066
    9. ''b' → logprob: -15.812684059143066
    10. ' ' → logprob: -15.812684059143066

Token 44: ''' (ID: 6)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.07181043922901154
    2. 'for' → logprob: -2.696810483932495
    3. ''' → logprob: -6.821810245513916
    4. ')' → logprob: -7.196810245513916
    5. ' ' → logprob: -11.446810722351074
    6. '')' → logprob: -11.446810722351074
    7. '	for' → logprob: -12.571810722351074
    8. ' in' → logprob: -12.946810722351074
    9. '`' → logprob: -13.196810722351074
    10. '"' → logprob: -13.821810722351074

Token 45: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.029789254069328308
    2. 'for' → logprob: -3.5297892093658447
    3. ')' → logprob: -10.279788970947266
    4. ' in' → logprob: -12.529788970947266
    5. '	for' → logprob: -14.154788970947266
    6. ' ' → logprob: -16.529788970947266
    7. 'in' → logprob: -17.779788970947266
    8. '```' → logprob: -17.779788970947266
    9. ' ' → logprob: -17.779788970947266
    10. '1' → logprob: -18.279788970947266

Token 46: ' c' (ID: 274)
  Prédit: ' row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' row' → logprob: -0.003433761652559042
    2. 'row' → logprob: -5.753433704376221
    3. ' c' → logprob: -8.503434181213379
    4. 'c' → logprob: -10.378434181213379
    5. ' ' → logprob: -11.378434181213379
    6. '(row' → logprob: -12.503434181213379
    7. ' flag' → logprob: -12.878434181213379
    8. '	row' → logprob: -14.003434181213379
    9. ' in' → logprob: -14.128434181213379
    10. ')' → logprob: -14.628434181213379

Token 47: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.024761848151683807
    2. 'in' → logprob: -3.774761915206909
    3. 'row' → logprob: -6.64976167678833
    4. ' row' → logprob: -9.024762153625488
    5. ' ' → logprob: -10.149762153625488
    6. 'for' → logprob: -11.024762153625488
    7. ')' → logprob: -11.149762153625488
    8. ' for' → logprob: -11.274762153625488
    9. '(row' → logprob: -11.899762153625488
    10. ',row' → logprob: -12.774762153625488

Token 48: ' row' (ID: 5225)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.2833804190158844
    2. ' row' → logprob: -1.408380389213562
    3. 'flag' → logprob: -6.408380508422852
    4. ' flag' → logprob: -7.533380508422852
    5. ' ' → logprob: -11.158380508422852
    6. '	row' → logprob: -12.533380508422852
    7. ')' → logprob: -12.595880508422852
    8. '[row' → logprob: -12.595880508422852
    9. 'r' → logprob: -12.658380508422852
    10. 'rown' → logprob: -13.095880508422852

Token 49: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.629921436891891e-05
    2. 'for' → logprob: -11.12502670288086
    3. ' )' → logprob: -12.00002670288086
    4. ' for' → logprob: -12.87502670288086
    5. ']' → logprob: -13.87502670288086
    6. '）' → logprob: -15.00002670288086
    7. ')]' → logprob: -15.12502670288086
    8. ' ' → logprob: -15.25002670288086
    9. '   ' → logprob: -15.37502670288086
    10. ' in' → logprob: -15.50002670288086

Token 50: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.011032138019800186
    2. 'for' → logprob: -4.6360321044921875
    3. ' in' → logprob: -6.7610321044921875
    4. ')' → logprob: -9.136032104492188
    5. ' ' → logprob: -12.261032104492188
    6. ' row' → logprob: -13.011032104492188
    7. 'in' → logprob: -13.386032104492188
    8. 'row' → logprob: -15.136032104492188
    9. '	for' → logprob: -15.261032104492188
    10. '(row' → logprob: -16.261032104492188

Token 51: ' row' (ID: 5225)
  Prédit: ' flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' flag' → logprob: -0.08898015320301056
    2. 'flag' → logprob: -2.463980197906494
    3. ' range' → logprob: -11.213979721069336
    4. '(flag' → logprob: -11.463979721069336
    5. ' cost' → logprob: -11.838979721069336
    6. ' row' → logprob: -12.588979721069336
    7. '	flag' → logprob: -12.963979721069336
    8. ' ' → logprob: -13.963979721069336
    9. 'row' → logprob: -14.338979721069336
    10. 'Flag' → logprob: -14.588979721069336

Token 52: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3876835107803345
    2. 'in' → logprob: -1.7626835107803345
    3. ']' → logprob: -2.387683391571045
    4. ')' → logprob: -3.387683391571045
    5. ')]' → logprob: -3.762683391571045
    6. ' ]' → logprob: -7.762683391571045
    7. '])' → logprob: -8.637683868408203
    8. ' )' → logprob: -9.262683868408203
    9. ' ' → logprob: -9.387683868408203
    10. 'flag' → logprob: -10.762683868408203

Token 53: ' flag' (ID: 9641)
  Prédit: 'flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flag' → logprob: -0.0059335362166166306
    2. ' flag' → logprob: -5.13093376159668
    3. '	flag' → logprob: -13.00593376159668
    4. '(flag' → logprob: -13.50593376159668
    5. 'range' → logprob: -14.13093376159668
    6. 'cost' → logprob: -15.50593376159668
    7. 'f' → logprob: -16.75593376159668
    8. '_flag' → logprob: -16.75593376159668
    9. 'Flag' → logprob: -16.88093376159668
    10. '.flag' → logprob: -17.13093376159668

Token 54: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04444879665970802
    2. ')]' → logprob: -3.5444488525390625
    3. ')' → logprob: -4.2944488525390625
    4. '])' → logprob: -7.0444488525390625
    5. ']
' → logprob: -10.044448852539062
    6. ' ]' → logprob: -11.544448852539062
    7. ']

' → logprob: -11.794448852539062
    8. '])]' → logprob: -12.544448852539062
    9. '）' → logprob: -13.419448852539062
    10. ')])' → logprob: -13.419448852539062

Token 55: 'cost' (ID: 33457)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0016927925171330571
    2. 'DP' → logprob: -6.876692771911621
    3. 'prefix' → logprob: -8.376692771911621
    4. 'cost' → logprob: -9.251692771911621
    5. 'import' → logprob: -9.876692771911621
    6. 'from' → logprob: -9.876692771911621
    7. 'result' → logprob: -10.126692771911621
    8. 'res' → logprob: -10.376692771911621
    9. 'answer' → logprob: -10.626692771911621
    10. 'min' → logprob: -10.751692771911621

Token 56: 'R' (ID: 49)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.30461445450782776
    2. 'R' → logprob: -2.054614543914795
    3. '=' → logprob: -3.554614543914795
    4. 'V' → logprob: -4.179614543914795
    5. 'B' → logprob: -4.429614543914795
    6. ' =' → logprob: -4.429614543914795
    7. 'C' → logprob: -4.554614543914795
    8. '[' → logprob: -4.679614543914795
    9. '=[' → logprob: -4.804614543914795
    10. 'S' → logprob: -5.054614543914795

Token 57: '=[' (ID: 13370)
  Prédit: '=['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=[' → logprob: -0.07924192398786545
    2. '=' → logprob: -2.579241991043091
    3. '=[]' → logprob: -8.079241752624512
    4. ' =[' → logprob: -11.329241752624512
    5. '=[[' → logprob: -11.579241752624512
    6. '[' → logprob: -11.829241752624512
    7. '=[
' → logprob: -12.454241752624512
    8. ' =' → logprob: -12.829241752624512
    9. '=

' → logprob: -13.454241752624512
    10. '=['' → logprob: -13.704241752624512

Token 58: 'sum' (ID: 12298)
  Prédit: 'sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -3.583550642360933e-05
    2. ' sum' → logprob: -10.250036239624023
    3. '(sum' → logprob: -14.875036239624023
    4. '[' → logprob: -18.375036239624023
    5. '=sum' → logprob: -18.375036239624023
    6. '	sum' → logprob: -19.500036239624023
    7. '.sum' → logprob: -19.750036239624023
    8. 'summ' → logprob: -19.875036239624023
    9. ',sum' → logprob: -20.125036239624023
    10. '
' → logprob: -20.375036239624023

Token 59: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -2.3438327843905427e-05
    2. '(' → logprob: -10.75002384185791
    3. ' (' → logprob: -13.37502384185791
    4. 'c' → logprob: -15.12502384185791
    5. '(
' → logprob: -16.500022888183594
    6. '(cost' → logprob: -18.625022888183594
    7. '```' → logprob: -18.875022888183594
    8. '`' → logprob: -19.875022888183594
    9. '(C' → logprob: -20.250022888183594
    10. '	c' → logprob: -20.500022888183594

Token 60: '!='' (ID: 58874)
  Prédit: '!=''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!='' → logprob: -0.00011915886716451496
    2. '!=' → logprob: -9.25011920928955
    3. ']!='' → logprob: -11.62511920928955
    4. ' !=' → logprob: -11.87511920928955
    5. '!' → logprob: -12.12511920928955
    6. '!="' → logprob: -13.75011920928955
    7. '!'' → logprob: -15.12511920928955
    8. '!=(' → logprob: -15.75011920928955
    9. '<!' → logprob: -16.250118255615234
    10. '!=-' → logprob: -16.875118255615234

Token 61: 'R' (ID: 49)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.018159545958042145
    2. 'R' → logprob: -4.01815938949585
    3. '`' → logprob: -13.393159866333008
    4. '
' → logprob: -13.393159866333008
    5. '```' → logprob: -13.518159866333008
    6. ''''' → logprob: -14.268159866333008
    7. '

' → logprob: -14.518159866333008
    8. ' '' → logprob: -14.768159866333008
    9. '’' → logprob: -14.768159866333008
    10. ''S' → logprob: -14.768159866333008

Token 62: ''' (ID: 6)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.36824485659599304
    2. 'for' → logprob: -1.4932448863983154
    3. ''' → logprob: -2.4932448863983154
    4. ')' → logprob: -7.368244647979736
    5. '']' → logprob: -10.368245124816895
    6. '')' → logprob: -10.743245124816895
    7. '<|end|>' → logprob: -10.993245124816895
    8. '	for' → logprob: -11.243245124816895
    9. ']' → logprob: -11.493245124816895
    10. '`' → logprob: -11.618245124816895

Token 63: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2812493145465851
    2. 'for' → logprob: -1.4062492847442627
    3. ')' → logprob: -9.406249046325684
    4. '	for' → logprob: -11.656249046325684
    5. '(c' → logprob: -12.531249046325684
    6. ' in' → logprob: -13.406249046325684
    7. '```' → logprob: -14.031249046325684
    8. ' ' → logprob: -14.281249046325684
    9. '(' → logprob: -15.406249046325684
    10. ']' → logprob: -15.531249046325684

Token 64: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.006840999238193035
    2. 'c' → logprob: -5.00684118270874
    3. ' row' → logprob: -9.131840705871582
    4. 'row' → logprob: -11.256840705871582
    5. ' ' → logprob: -12.631840705871582
    6. '	c' → logprob: -15.006840705871582
    7. ' ' → logprob: -15.631840705871582
    8. ')c' → logprob: -15.756840705871582
    9. '  ' → logprob: -16.5068416595459
    10. ')' → logprob: -16.5068416595459

Token 65: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03987826406955719
    2. 'in' → logprob: -3.2898783683776855
    3. 'row' → logprob: -6.4148783683776855
    4. ')' → logprob: -9.539877891540527
    5. ' row' → logprob: -9.664877891540527
    6. 'for' → logprob: -10.789877891540527
    7. ' ' → logprob: -11.039877891540527
    8. '  ' → logprob: -12.414877891540527
    9. ',row' → logprob: -12.414877891540527
    10. ' for' → logprob: -12.664877891540527

Token 66: ' row' (ID: 5225)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.11296424269676208
    2. ' row' → logprob: -2.237964153289795
    3. 'flag' → logprob: -8.987964630126953
    4. ' flag' → logprob: -11.362964630126953
    5. 'c' → logprob: -13.862964630126953
    6. ')' → logprob: -13.862964630126953
    7. 'r' → logprob: -14.362964630126953
    8. '	row' → logprob: -14.362964630126953
    9. '(row' → logprob: -14.487964630126953
    10. 'col' → logprob: -14.612964630126953

Token 67: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.828512363834307e-05
    2. 'for' → logprob: -9.625088691711426
    3. ']' → logprob: -11.375088691711426
    4. ')]' → logprob: -12.250088691711426
    5. '])' → logprob: -13.125088691711426
    6. ' )' → logprob: -13.625088691711426
    7. ' for' → logprob: -13.750088691711426
    8. ' ' → logprob: -14.500088691711426
    9. '）' → logprob: -15.125088691711426
    10. '   ' → logprob: -15.500088691711426

Token 68: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6939860582351685
    2. 'for' → logprob: -0.6939860582351685
    3. ')' → logprob: -7.193985939025879
    4. ' in' → logprob: -9.818985939025879
    5. ']' → logprob: -10.818985939025879
    6. ' ' → logprob: -11.818985939025879
    7. '	for' → logprob: -12.943985939025879
    8. 'in' → logprob: -13.693985939025879
    9. '   ' → logprob: -14.193985939025879
    10. '  ' → logprob: -14.693985939025879

Token 69: ' row' (ID: 5225)
  Prédit: ' flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' flag' → logprob: -0.25198692083358765
    2. 'flag' → logprob: -1.5019869804382324
    3. ' range' → logprob: -11.001986503601074
    4. ' row' → logprob: -11.001986503601074
    5. '(flag' → logprob: -11.501986503601074
    6. 'row' → logprob: -11.751986503601074
    7. 'range' → logprob: -13.251986503601074
    8. '	flag' → logprob: -13.251986503601074
    9. ' ' → logprob: -13.751986503601074
    10. ' cost' → logprob: -13.876986503601074

Token 70: ' in' (ID: 306)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.36432138085365295
    2. ')' → logprob: -1.3643213510513306
    3. ']' → logprob: -3.23932147026062
    4. '])' → logprob: -4.739321231842041
    5. 'in' → logprob: -7.614321231842041
    6. ')])' → logprob: -8.1143217086792
    7. '])]' → logprob: -8.8643217086792
    8. 'N' → logprob: -8.8643217086792
    9. 'for' → logprob: -9.1143217086792
    10. '`]' → logprob: -9.3643217086792

Token 71: ' flag' (ID: 9641)
  Prédit: 'flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flag' → logprob: -0.10038544982671738
    2. ' flag' → logprob: -2.3503854274749756
    3. ' range' → logprob: -9.600385665893555
    4. 'range' → logprob: -9.725385665893555
    5. '(flag' → logprob: -10.725385665893555
    6. 'cost' → logprob: -11.725385665893555
    7. ' cost' → logprob: -12.100385665893555
    8. ' ' → logprob: -12.350385665893555
    9. '	flag' → logprob: -12.600385665893555
    10. ')' → logprob: -12.975385665893555

Token 72: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.42079606652259827
    2. ')' → logprob: -1.1707960367202759
    3. ')]' → logprob: -3.5457961559295654
    4. '])' → logprob: -5.420795917510986
    5. '）' → logprob: -10.420796394348145
    6. ')])' → logprob: -10.420796394348145
    7. '))' → logprob: -12.045796394348145
    8. ' ]' → logprob: -12.170796394348145
    9. '])]' → logprob: -12.295796394348145
    10. ']
' → logprob: -12.795796394348145

Token 73: 'ans' (ID: 616)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.003137435531243682
    2. 'DP' → logprob: -6.378137588500977
    3. 'from' → logprob: -8.628137588500977
    4. 'd' → logprob: -8.628137588500977
    5. '
' → logprob: -8.753137588500977
    6. 'import' → logprob: -8.878137588500977
    7. 'res' → logprob: -9.128137588500977
    8. 'ans' → logprob: -9.378137588500977
    9. 'total' → logprob: -9.378137588500977
    10. 'cost' → logprob: -9.753137588500977

Token 74: '=float' (ID: 80332)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3869517743587494
    2. ' =' → logprob: -1.1369518041610718
    3. '=int' → logprob: -10.011951446533203
    4. '=[]' → logprob: -11.761951446533203
    5. '={}' → logprob: -12.261951446533203
    6. '=float' → logprob: -12.386951446533203
    7. '＝' → logprob: -13.136951446533203
    8. '='' → logprob: -13.511951446533203
    9. '=

' → logprob: -13.511951446533203
    10. '=sum' → logprob: -13.636951446533203

Token 75: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.10402730107307434
    2. '(' → logprob: -2.354027271270752
    3. ''s' → logprob: -6.479027271270752
    4. '('.')' → logprob: -6.854027271270752
    5. '('.' → logprob: -7.479027271270752
    6. '.' → logprob: -8.10402774810791
    7. ''' → logprob: -9.47902774810791
    8. '```' → logprob: -9.97902774810791
    9. ''.' → logprob: -10.10402774810791
    10. '(
' → logprob: -10.60402774810791

Token 76: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -1.7954958821064793e-05
    2. 'i' → logprob: -11.125018119812012
    3. ''' → logprob: -13.000018119812012
    4. 'in' → logprob: -14.250018119812012
    5. ''i' → logprob: -16.500017166137695
    6. ''in' → logprob: -17.125017166137695
    7. 'INF' → logprob: -17.375017166137695
    8. 'info' → logprob: -17.625017166137695
    9. '')' → logprob: -17.875017166137695
    10. 'Inf' → logprob: -18.000017166137695

Token 77: '')
' (ID: 2515)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -7.465036105713807e-06
    2. ')
' → logprob: -12.750007629394531
    3. ' )' → logprob: -12.875007629394531
    4. '')' → logprob: -13.875007629394531
    5. '))' → logprob: -15.125007629394531
    6. '),' → logprob: -15.125007629394531
    7. ')

' → logprob: -15.875007629394531
    8. '()' → logprob: -16.00000762939453
    9. ')`' → logprob: -16.25000762939453
    10. ',' → logprob: -17.62500762939453

Token 78: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.041947174817323685
    2. 'f' → logprob: -3.29194712638855
    3. ' for' → logprob: -6.291947364807129
    4. 'r' → logprob: -7.291947364807129
    5. 'i' → logprob: -7.416947364807129
    6. '' → logprob: -8.166947364807129
    7. '
' → logprob: -8.666947364807129
    8. 'd' → logprob: -9.666947364807129
    9. '#' → logprob: -9.791947364807129
    10. 'w' → logprob: -10.416947364807129

Token 79: ' w' (ID: 286)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5777754783630371
    2. 'i' → logprob: -0.8277754783630371
    3. '_' → logprob: -7.577775478363037
    4. 'r' → logprob: -7.702775478363037
    5. 'w' → logprob: -8.827775955200195
    6. ' r' → logprob: -9.202775955200195
    7. '	i' → logprob: -9.452775955200195
    8. 'k' → logprob: -9.452775955200195
    9. 'j' → logprob: -9.577775955200195
    10. 'a' → logprob: -10.202775955200195

Token 80: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0436583012342453
    2. 'in' → logprob: -3.1686582565307617
    3. 'i' → logprob: -8.043658256530762
    4. ' i' → logprob: -8.293658256530762
    5. ' ' → logprob: -9.793658256530762
    6. '_' → logprob: -11.168658256530762
    7. 'n' → logprob: -12.168658256530762
    8. 'range' → logprob: -12.668658256530762
    9. '1' → logprob: -12.918658256530762
    10. '_in' → logprob: -13.043658256530762

Token 81: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.018151111900806427
    2. ' range' → logprob: -4.01815128326416
    3. '(range' → logprob: -14.01815128326416
    4. '	range' → logprob: -14.89315128326416
    5. 'r' → logprob: -17.768150329589844
    6. '_range' → logprob: -18.643150329589844
    7. 'rang' → logprob: -18.768150329589844
    8. ' xrange' → logprob: -18.893150329589844
    9. 'ran' → logprob: -19.143150329589844
    10. ' ' → logprob: -19.768150329589844

Token 82: '(' (ID: 7)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.386905699968338
    2. '(' → logprob: -1.1369056701660156
    3. '1' → logprob: -11.011905670166016
    4. '(n' → logprob: -11.886905670166016
    5. '(M' → logprob: -12.261905670166016
    6. 'N' → logprob: -12.511905670166016
    7. '(len' → logprob: -13.636905670166016
    8. ' (' → logprob: -14.136905670166016
    9. '((' → logprob: -15.511905670166016
    10. '(
' → logprob: -15.761905670166016

Token 83: '1' (ID: 16)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0036386766005307436
    2. '1' → logprob: -5.628638744354248
    3. ' N' → logprob: -10.25363826751709
    4. '0' → logprob: -13.12863826751709
    5. ' ' → logprob: -14.62863826751709
    6. '(N' → logprob: -15.00363826751709
    7. 'M' → logprob: -15.37863826751709
    8. '(' → logprob: -15.62863826751709
    9. '	N' → logprob: -16.378639221191406
    10. ',N' → logprob: -17.628639221191406

Token 84: ',N' (ID: 49539)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03037467785179615
    2. ',N' → logprob: -3.530374765396118
    3. ',M' → logprob: -7.905374526977539
    4. ' ,' → logprob: -8.280374526977539
    5. 'N' → logprob: -14.155374526977539
    6. ',
' → logprob: -14.530374526977539
    7. ',len' → logprob: -15.280374526977539
    8. ',

' → logprob: -15.905374526977539
    9. ',n' → logprob: -16.15537452697754
    10. '，' → logprob: -16.78037452697754

Token 85: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0006579888286069036
    2. ' -' → logprob: -7.50065803527832
    3. '-N' → logprob: -9.25065803527832
    4. ')' → logprob: -12.62565803527832
    5. '-)' → logprob: -12.75065803527832
    6. '-M' → logprob: -13.62565803527832
    7. '-n' → logprob: -14.00065803527832
    8. '-
' → logprob: -15.50065803527832
    9. ' ' → logprob: -16.12565803527832
    10. '+' → logprob: -16.50065803527832

Token 86: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.200166469876422e-06
    2. '```' → logprob: -13.375004768371582
    3. '-' → logprob: -14.000004768371582
    4. '

' → logprob: -14.625004768371582
    5. '
' → logprob: -14.750004768371582
    6. '۱' → logprob: -14.875004768371582
    7. '2' → logprob: -15.125004768371582
    8. '' → logprob: -15.250004768371582
    9. '１' → logprob: -15.375004768371582
    10. '१' → logprob: -15.625004768371582

Token 87: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03270735219120979
    2. ')' → logprob: -3.532707452774048
    3. ':' → logprob: -6.282707214355469
    4. ' ):' → logprob: -7.532707214355469
    5. ',' → logprob: -7.782707214355469
    6. '):
' → logprob: -9.282707214355469
    7. '+' → logprob: -11.407707214355469
    8. ' )' → logprob: -11.907707214355469
    9. '),' → logprob: -12.782707214355469
    10. ' :' → logprob: -12.907707214355469

Token 88: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.0073897442780435085
    2. 'for' → logprob: -5.757389545440674
    3. '   ' → logprob: -6.507389545440674
    4. '<|end|>' → logprob: -6.632389545440674
    5. ' ' → logprob: -6.757389545440674
    6. '	for' → logprob: -9.007390022277832
    7. ' ' → logprob: -10.132390022277832
    8. 'b' → logprob: -10.632390022277832
    9. ' 
' → logprob: -12.007390022277832
    10. 'r' → logprob: -12.257390022277832

Token 89: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0011773703154176474
    2. ' b' → logprob: -6.7511773109436035
    3. ' ' → logprob: -12.626177787780762
    4. 'r' → logprob: -13.126177787780762
    5. '	b' → logprob: -13.876177787780762
    6. '```' → logprob: -14.626177787780762
    7. '`' → logprob: -15.626177787780762
    8. '   ' → logprob: -16.751176834106445
    9. 'w' → logprob: -16.876176834106445
    10. ''b' → logprob: -17.001176834106445

Token 90: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0041067772544920444
    2. 'in' → logprob: -5.5041069984436035
    3. ' ' → logprob: -10.879106521606445
    4. 'range' → logprob: -12.254106521606445
    5. 'n' → logprob: -13.504106521606445
    6. '	in' → logprob: -14.004106521606445
    7. ' i' → logprob: -14.379106521606445
    8. '<|end|>' → logprob: -14.754106521606445
    9. 'w' → logprob: -15.129106521606445
    10. '  ' → logprob: -15.129106521606445

Token 91: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.04858975484967232
    2. ' range' → logprob: -3.0485897064208984
    3. '(range' → logprob: -13.298589706420898
    4. '	range' → logprob: -14.798589706420898
    5. ' ' → logprob: -15.798589706420898
    6. ' in' → logprob: -15.923589706420898
    7. 'rang' → logprob: -17.9235897064209
    8. 'in' → logprob: -17.9235897064209
    9. ' xrange' → logprob: -17.9235897064209
    10. '_range' → logprob: -18.2985897064209

Token 92: '(w' (ID: 7420)
  Prédit: '(w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -9.968312951968983e-06
    2. 'w' → logprob: -11.625009536743164
    3. '(' → logprob: -14.000009536743164
    4. ' w' → logprob: -16.250009536743164
    5. '(range' → logprob: -17.750009536743164
    6. '	w' → logprob: -17.875009536743164
    7. '(W' → logprob: -18.500009536743164
    8. ' (' → logprob: -18.625009536743164
    9. 'range' → logprob: -18.750009536743164
    10. '[w' → logprob: -20.250009536743164

Token 93: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.004221809096634388
    2. ' +' → logprob: -5.5042219161987305
    3. '+,' → logprob: -9.50422191619873
    4. '1' → logprob: -9.87922191619873
    5. ',' → logprob: -11.50422191619873
    6. ' ,' → logprob: -12.75422191619873
    7. '+
' → logprob: -13.37922191619873
    8. ' ' → logprob: -13.37922191619873
    9. ',N' → logprob: -14.50422191619873
    10. '+w' → logprob: -14.87922191619873

Token 94: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00020616286201402545
    2. ' ' → logprob: -8.500205993652344
    3. '2' → logprob: -13.000205993652344
    4. '(' → logprob: -16.125205993652344
    5. ',' → logprob: -16.125205993652344
    6. '
' → logprob: -17.375205993652344
    7. '```' → logprob: -17.687705993652344
    8. ' ,' → logprob: -17.875205993652344
    9. 'range' → logprob: -17.875205993652344
    10. '   ' → logprob: -17.937705993652344

Token 95: ',N' (ID: 49539)
  Prédit: ',N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',N' → logprob: -0.008683355525135994
    2. ',' → logprob: -4.758683204650879
    3. ' ,' → logprob: -9.758683204650879
    4. '1' → logprob: -12.383683204650879
    5. '+' → logprob: -13.383683204650879
    6. ',n' → logprob: -13.508683204650879
    7. ' ' → logprob: -13.883683204650879
    8. '

' → logprob: -14.633683204650879
    9. ',
' → logprob: -14.633683204650879
    10. '(N' → logprob: -14.633683204650879

Token 96: '):
' (ID: 1883)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.31383341550827026
    2. '):' → logprob: -1.313833475112915
    3. ')' → logprob: -8.188833236694336
    4. '):
' → logprob: -8.313833236694336
    5. ' -' → logprob: -11.813833236694336
    6. '<|end|>' → logprob: -11.813833236694336
    7. '-)' → logprob: -12.188833236694336
    8. ':' → logprob: -12.313833236694336
    9. ' ' → logprob: -12.438833236694336
    10. '```' → logprob: -12.563833236694336

Token 97: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02911294810473919
    2. ' ' → logprob: -4.279112815856934
    3. '<|end|>' → logprob: -5.029112815856934
    4. '    
' → logprob: -6.029112815856934
    5. ' ans' → logprob: -6.779112815856934
    6. '    ' → logprob: -7.279112815856934
    7. ' ind' → logprob: -7.279112815856934
    8. ' for' → logprob: -7.404112815856934
    9. ' s' → logprob: -7.779112815856934
    10. '  ' → logprob: -7.904112815856934

Token 98: ' c' (ID: 274)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0421781539916992
    2. ' for' → logprob: -2.042178153991699
    3. ' total' → logprob: -2.417178153991699
    4. '   ' → logprob: -2.917178153991699
    5. ' current' → logprob: -2.917178153991699
    6. 'for' → logprob: -3.292178153991699
    7. 'sum' → logprob: -3.292178153991699
    8. 'cost' → logprob: -3.292178153991699
    9. ' sum' → logprob: -3.542178153991699
    10. 'total' → logprob: -3.667178153991699

Token 99: '=sum' (ID: 174693)
  Prédit: 'ost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ost' → logprob: -0.02588045597076416
    2. '=' → logprob: -4.400880336761475
    3. 'o' → logprob: -5.400880336761475
    4. 'for' → logprob: -5.775880336761475
    5. ' =' → logprob: -6.025880336761475
    6. '0' → logprob: -7.025880336761475
    7. ' ' → logprob: -7.775880336761475
    8. '   ' → logprob: -8.400880813598633
    9. 'os' → logprob: -8.525880813598633
    10. '```' → logprob: -8.650880813598633

Token 100: '(cost' (ID: 133554)
  Prédit: '(cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cost' → logprob: -0.00019662656995933503
    2. '(' → logprob: -9.25019645690918
    3. 'cost' → logprob: -9.25019645690918
    4. '(
' → logprob: -13.50019645690918
    5. ' cost' → logprob: -14.37519645690918
    6. '(flag' → logprob: -14.50019645690918
    7. '(c' → logprob: -14.75019645690918
    8. '(min' → logprob: -14.75019645690918
    9. '([' → logprob: -15.37519645690918
    10. ' (' → logprob: -15.37519645690918

Token 101: 'W' (ID: 54)
  Prédit: 'W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.0005479106330312788
    2. 'B' → logprob: -7.625547885894775
    3. '[' → logprob: -10.250548362731934
    4. 'R' → logprob: -11.000548362731934
    5. 'w' → logprob: -12.875548362731934
    6. ' W' → logprob: -13.000548362731934
    7. '```' → logprob: -14.000548362731934
    8. ')' → logprob: -14.875548362731934
    9. '_W' → logprob: -15.750548362731934
    10. '[w' → logprob: -15.750548362731934

Token 102: '[:' (ID: 7808)
  Prédit: '[:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.0015375965740531683
    2. '[i' → logprob: -6.876537799835205
    3. '[' → logprob: -7.751537799835205
    4. '[w' → logprob: -10.126537322998047
    5. ' [:' → logprob: -10.876537322998047
    6. '[k' → logprob: -12.626537322998047
    7. '[x' → logprob: -12.751537322998047
    8. '[j' → logprob: -12.876537322998047
    9. '[c' → logprob: -13.001537322998047
    10. ')' → logprob: -14.251537322998047

Token 103: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -4.320199877838604e-07
    2. ' w' → logprob: -14.875
    3. '	w' → logprob: -19.5
    4. '<w' → logprob: -20.875
    5. ''w' → logprob: -21.0
    6. ' ' → logprob: -21.375
    7. '+w' → logprob: -21.375
    8. '(w' → logprob: -21.625
    9. '*w' → logprob: -21.75
    10. '-w' → logprob: -22.625

Token 104: '])+' (ID: 119485)
  Prédit: ')+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')+' → logprob: -0.31631579995155334
    2. ')' → logprob: -1.316315770149231
    3. ' )' → logprob: -5.816315650939941
    4. ' ' → logprob: -10.191315650939941
    5. ')
' → logprob: -11.691315650939941
    6. ')+(' → logprob: -11.816315650939941
    7. ']+' → logprob: -11.941315650939941
    8. '）' → logprob: -12.691315650939941
    9. ')c' → logprob: -13.191315650939941
    10. '])+' → logprob: -13.566315650939941

Token 105: 'sum' (ID: 12298)
  Prédit: 'sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.0003398726985324174
    2. ' sum' → logprob: -8.00033950805664
    3. '(sum' → logprob: -13.25033950805664
    4. ' ' → logprob: -13.37533950805664
    5. '  ' → logprob: -14.37533950805664
    6. '   ' → logprob: -15.87533950805664
    7. 's' → logprob: -16.12533950805664
    8. '=sum' → logprob: -16.25033950805664
    9. '	sum' → logprob: -16.37533950805664
    10. '    ' → logprob: -17.12533950805664

Token 106: '(cost' (ID: 133554)
  Prédit: '(cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cost' → logprob: -1.5048530030981055e-06
    2. 'cost' → logprob: -13.625001907348633
    3. '(' → logprob: -15.875001907348633
    4. '(c' → logprob: -17.000001907348633
    5. ' cost' → logprob: -17.250001907348633
    6. ' (' → logprob: -19.000001907348633
    7. '(
' → logprob: -20.625001907348633
    8. '(C' → logprob: -20.750001907348633
    9. '_cost' → logprob: -21.000001907348633
    10. '.cost' → logprob: -21.000001907348633

Token 107: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.00025800178991630673
    2. 'cost' → logprob: -8.375258445739746
    3. '_B' → logprob: -11.875258445739746
    4. '(cost' → logprob: -12.000258445739746
    5. ' cost' → logprob: -12.125258445739746
    6. ' B' → logprob: -12.875258445739746
    7. 'R' → logprob: -13.125258445739746
    8. '[B' → logprob: -13.500258445739746
    9. '(B' → logprob: -13.750258445739746
    10. '[c' → logprob: -14.250258445739746

Token 108: '[w' (ID: 94341)
  Prédit: '[w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[w' → logprob: -0.00024858469259925187
    2. '[' → logprob: -9.000248908996582
    3. '(w' → logprob: -9.875248908996582
    4. '[:' → logprob: -9.875248908996582
    5. 'w' → logprob: -12.250248908996582
    6. '[c' → logprob: -12.500248908996582
    7. '[b' → logprob: -12.500248908996582
    8. '([' → logprob: -12.750248908996582
    9. '()[' → logprob: -13.125248908996582
    10. 'cost' → logprob: -13.250248908996582

Token 109: ':b' (ID: 87246)
  Prédit: ':b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':b' → logprob: -0.008758158423006535
    2. '[b' → logprob: -5.008758068084717
    3. ':' → logprob: -6.633758068084717
    4. 'b' → logprob: -8.008758544921875
    5. ' :' → logprob: -8.508758544921875
    6. '[:' → logprob: -8.883758544921875
    7. ' ' → logprob: -11.008758544921875
    8. ' b' → logprob: -11.008758544921875
    9. '[' → logprob: -11.883758544921875
    10. ',b' → logprob: -13.008758544921875

Token 110: '])+' (ID: 119485)
  Prédit: '])+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])+' → logprob: -0.012369786389172077
    2. '])' → logprob: -4.887369632720947
    3. ']+' → logprob: -5.887369632720947
    4. ')+' → logprob: -6.637369632720947
    5. ')' → logprob: -7.387369632720947
    6. ' ])' → logprob: -10.637370109558105
    7. ' ' → logprob: -11.762370109558105
    8. ' )' → logprob: -12.137370109558105
    9. '))+' → logprob: -12.762370109558105
    10. '])
' → logprob: -13.137370109558105

Token 111: 'sum' (ID: 12298)
  Prédit: 'sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.00020377879263833165
    2. ' sum' → logprob: -8.500204086303711
    3. '(sum' → logprob: -15.375204086303711
    4. ' ' → logprob: -17.87520408630371
    5. '	sum' → logprob: -18.62520408630371
    6. '=sum' → logprob: -19.12520408630371
    7. 's' → logprob: -19.25020408630371
    8. 'cost' → logprob: -19.37520408630371
    9. '  ' → logprob: -19.37520408630371
    10. 'summ' → logprob: -19.62520408630371

Token 112: '(cost' (ID: 133554)
  Prédit: '(cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cost' → logprob: -5.512236498361744e-07
    2. '(' → logprob: -14.625000953674316
    3. 'cost' → logprob: -16.75
    4. '(c' → logprob: -17.75
    5. ' (' → logprob: -19.0
    6. ' cost' → logprob: -19.5
    7. '(C' → logprob: -20.0
    8. '((' → logprob: -21.0
    9. '(
' → logprob: -21.0
    10. '.cost' → logprob: -21.875

Token 113: 'R' (ID: 49)
  Prédit: 'R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -1.4855663721391466e-05
    2. '(cost' → logprob: -11.625015258789062
    3. 'cost' → logprob: -12.375015258789062
    4. '[c' → logprob: -14.625015258789062
    5. ' R' → logprob: -15.000015258789062
    6. '(c' → logprob: -15.500015258789062
    7. '_R' → logprob: -15.750015258789062
    8. ' cost' → logprob: -16.500015258789062
    9. 'C' → logprob: -16.750015258789062
    10. 'B' → logprob: -16.875015258789062

Token 114: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -5.512236498361744e-07
    2. 'b' → logprob: -15.750000953674316
    3. '[' → logprob: -16.125
    4. '(b' → logprob: -16.5
    5. '[c' → logprob: -16.625
    6. ' [' → logprob: -18.625
    7. '[:' → logprob: -19.125
    8. '([' → logprob: -19.5
    9. '[B' → logprob: -20.375
    10. '[s' → logprob: -20.625

Token 115: ':])
' (ID: 109592)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.000527534110005945
    2. '[N' → logprob: -8.125527381896973
    3. ':])
' → logprob: -9.000527381896973
    4. ':N' → logprob: -10.000527381896973
    5. '[:' → logprob: -10.875527381896973
    6. '[' → logprob: -11.000527381896973
    7. ':)' → logprob: -11.375527381896973
    8. ':]' → logprob: -12.250527381896973
    9. '])' → logprob: -12.875527381896973
    10. ':`' → logprob: -13.750527381896973

Token 116: ' ' (ID: 220)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4071953594684601
    2. 'ans' → logprob: -1.5321953296661377
    3. 'if' → logprob: -2.7821953296661377
    4. '
' → logprob: -3.7821953296661377
    5. ' ' → logprob: -4.157195568084717
    6. ' ans' → logprob: -4.282195568084717
    7. '	ans' → logprob: -5.907195568084717
    8. '  
' → logprob: -7.157195568084717
    9. '
' → logprob: -8.282195091247559
    10. '(ans' → logprob: -8.657195091247559

Token 117: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.519285261631012
    2. 'ans' → logprob: -1.3942852020263672
    3. ' if' → logprob: -2.019285202026367
    4. '
' → logprob: -3.894285202026367
    5. ' ' → logprob: -6.394285202026367
    6. ' ans' → logprob: -6.394285202026367
    7. '\n' → logprob: -8.644285202026367
    8. '  
' → logprob: -8.769285202026367
    9. '(ans' → logprob: -9.394285202026367
    10. '	ans' → logprob: -9.644285202026367

Token 118: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.005234713666141033
    2. 'c' → logprob: -5.255234718322754
    3. ' ' → logprob: -14.505234718322754
    4. '	c' → logprob: -15.130234718322754
    5. ' ' → logprob: -15.755234718322754
    6. ' ans' → logprob: -17.130233764648438
    7. 'ans' → logprob: -17.880233764648438
    8. '<c' → logprob: -17.880233764648438
    9. '```' → logprob: -18.005233764648438
    10. '  ' → logprob: -18.380233764648438

Token 119: '<' (ID: 27)
  Prédit: '<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.3868812620639801
    2. ' <' → logprob: -1.1368812322616577
    3. ' ' → logprob: -12.386880874633789
    4. '<int' → logprob: -13.261880874633789
    5. '<const' → logprob: -14.386880874633789
    6. ' <
' → logprob: -14.386880874633789
    7. '<
' → logprob: -14.636880874633789
    8. '<c' → logprob: -14.761880874633789
    9. '<|end|>' → logprob: -14.886880874633789
    10. ' ' → logprob: -15.011880874633789

Token 120: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0010341187007725239
    2. ' ans' → logprob: -6.876034259796143
    3. '	ans' → logprob: -13.876033782958984
    4. '(ans' → logprob: -15.251033782958984
    5. ' ' → logprob: -17.001033782958984
    6. 'answer' → logprob: -17.251033782958984
    7. '
' → logprob: -17.751033782958984
    8. 'Ans' → logprob: -18.251033782958984
    9. '_ans' → logprob: -18.251033782958984
    10. 'a' → logprob: -18.751033782958984

Token 121: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02334878034889698
    2. ':
' → logprob: -3.773348808288574
    3. '<|end|>' → logprob: -10.648348808288574
    4. '=' → logprob: -11.023348808288574
    5. '	ans' → logprob: -11.648348808288574
    6. 'ans' → logprob: -11.648348808288574
    7. ' :
' → logprob: -11.773348808288574
    8. ' :' → logprob: -11.773348808288574
    9. ' ans' → logprob: -11.773348808288574
    10. '):' → logprob: -12.273348808288574

Token 122: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.8181707859039307
    2. ' ans' → logprob: -1.3181707859039307
    3. '   ' → logprob: -1.4431707859039307
    4. '	ans' → logprob: -3.1931707859039307
    5. '  ' → logprob: -4.568170547485352
    6. '
' → logprob: -6.068170547485352
    7. ' ' → logprob: -7.568170547485352
    8. '  
' → logprob: -8.443170547485352
    9. '(ans' → logprob: -8.443170547485352
    10. '       ' → logprob: -9.818170547485352

Token 123: '=c' (ID: 43473)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6980901956558228
    2. '=c' → logprob: -0.6980901956558228
    3. ' =' → logprob: -5.323090076446533
    4. '=
' → logprob: -10.323090553283691
    5. '=

' → logprob: -11.823090553283691
    6. '＝' → logprob: -12.573090553283691
    7. '=b' → logprob: -14.073090553283691
    8. '=cut' → logprob: -14.073090553283691
    9. '=o' → logprob: -14.198090553283691
    10. '=f' → logprob: -14.198090553283691

Token 124: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6636832356452942
    2. 'print' → logprob: -0.7886832356452942
    3. '\n' → logprob: -3.6636831760406494
    4. ' 
' → logprob: -6.2886834144592285
    5. '' → logprob: -7.2886834144592285
    6. '  
' → logprob: -7.4136834144592285
    7. '
' → logprob: -7.4136834144592285
    8. '\' → logprob: -7.4136834144592285
    9. ' print' → logprob: -8.16368293762207
    10. '```' → logprob: -9.28868293762207

Token 125: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.010447526350617409
    2. '\n' → logprob: -5.5104475021362305
    3. ' print' → logprob: -6.0104475021362305
    4. '
' → logprob: -6.3854475021362305
    5. 'ans' → logprob: -6.3854475021362305
    6. '```' → logprob: -9.13544750213623
    7. ' ans' → logprob: -9.26044750213623
    8. '\' → logprob: -9.38544750213623
    9. 'else' → logprob: -9.63544750213623
    10. ' 
' → logprob: -9.76044750213623

Token 126: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.011057964526116848
    2. '(' → logprob: -4.5110578536987305
    3. '()' → logprob: -12.26105785369873
    4. '(
' → logprob: -13.51105785369873
    5. 'ans' → logprob: -13.63605785369873
    6. ' (' → logprob: -13.76105785369873
    7. '(`' → logprob: -14.51105785369873
    8. '('' → logprob: -15.38605785369873
    9. '(an' → logprob: -15.38605785369873
    10. '(abs' → logprob: -15.51105785369873

Token 127: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.173704271830502e-06
    2. ' )' → logprob: -12.87500286102295
    3. ')
' → logprob: -15.00000286102295
    4. ')`' → logprob: -16.375003814697266
    5. '))' → logprob: -17.000003814697266
    6. '`)' → logprob: -17.875003814697266
    7. '')' → logprob: -18.000003814697266
    8. ')}' → logprob: -19.000003814697266
    9. '),' → logprob: -19.250003814697266
    10. '）' → logprob: -19.375003814697266


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 125
Tokens correctement prédits (1ère position, stricte): 65
Tokens correctement prédits (1ère position, avec adaptation): 65
Tokens correctement prédits (top 10): 110
Précision stricte (1ère position): 52.00%
Précision adaptée (1ère position): 52.00%
Précision (top 10): 88.00%
================================================================================
