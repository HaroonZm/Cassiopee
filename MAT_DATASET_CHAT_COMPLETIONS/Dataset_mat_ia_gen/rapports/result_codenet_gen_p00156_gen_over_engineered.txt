================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:06:11
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from collections import deque
from typing import List, Tuple, Optional, Iterator, Set

class GridPoint:
    def __init__(self, x: int, y: int, terrain: str):
        self.x = x
        self.y = y
        self.terrain = terrain  # '.', '#', '&'
    def is_moat(self) -> bool:
        return self.terrain == '#'
    def is_goal(self) -> bool:
        return self.terrain == '&'
    def __repr__(self):
        return f"GridPoint({self.x},{self.y},'{self.terrain}')"

class CastleMap:
    def __init__(self, width: int, height: int, grid_lines: List[str]):
        self.width = width
        self.height = height
        self.grid: List[List[GridPoint]] = [
            [GridPoint(x, y, grid_lines[y][x]) for x in range(width)]
            for y in range(height)
        ]
        self.goal_position: Optional[Tuple[int, int]] = self._locate_goal()
    def _locate_goal(self) -> Optional[Tuple[int,int]]:
        for y in range(self.height):
            for x in range(self.width):
                if self.grid[y][x].is_goal():
                    return (x,y)
        return None
    def in_bounds(self, x: int, y: int) -> bool:
        return 0 <= x < self.width and 0 <= y < self.height
    def neighbors(self, x: int, y: int) -> Iterator[Tuple[int,int]]:
        for dx, dy in [(1,0),(-1,0),(0,1),(0,-1)]:
            nx, ny = x + dx, y + dy
            if self.in_bounds(nx, ny):
                yield nx, ny
    def point(self, x: int, y: int) -> GridPoint:
        return self.grid[y][x]

class NinjaPathfinder:
    """
    A sophisticated class to find minimal times ninja must crawl out of moat (#) when traveling from outside
    (any non-castle perimeter edge cell not in moat) to goal (&).
    Anticipates subclasses or different terrains or movement costs.
    """
    def __init__(self, castle_map: CastleMap):
        self.castle_map = castle_map
        self.width = castle_map.width
        self.height = castle_map.height
        self.goal = castle_map.goal_position
        if self.goal is None:
            raise ValueError("Goal (&) not found in the map.")
        # We'll think of outside as any cell on edges that is not in moat or goal.
        # The ninja starts outside and can start from any such cell.
        self.outside_cells = self._detect_outside_cells()
    def _detect_outside_cells(self) -> List[Tuple[int,int]]:
        outside = []
        for x in range(self.width):
            for y in [0, self.height-1]:
                pt = self.castle_map.point(x,y)
                if not pt.is_moat() and not pt.is_goal():
                    outside.append((x,y))
        for y in range(self.height):
            for x in [0, self.width-1]:
                pt = self.castle_map.point(x,y)
                if not pt.is_moat() and not pt.is_goal():
                    outside.append((x,y))
        # Remove duplicates if corners were added twice
        return list(set(outside))
    def minimum_climbs(self) -> int:
        """
        Compute minimum number of times ninja must climb out of moat (#).
        Ninja can swim or run inside moat or non-moat cells.
        Climbing out means going from a moat cell to a non-moat cell.
        We want minimal such transitions to reach goal.
        """
        # Weight of edges:
        # transitions from non-moat->non-moat or moat->moat or moat->non-moat = 0 if not climbing up,
        # climbing up means moat->non-moat transition, cost = 1
        # non-moat->moat has cost 0, entering moat first time costs nothing except next climbing up.
        # So climbing up = transitions from '#' cell to '.' or '&' cell.
        
        # Perform Dijkstra or 0-1 BFS with weights 0 or 1 on edges.
        from collections import deque
        
        # dist[y][x] = minimal number of climbs to reach (x,y)
        dist = [[float('inf')] * self.width for _ in range(self.height)]
        
        dq = deque()
        # Initialize deque with all outside starting cells with cost 0
        for (sx, sy) in self.outside_cells:
            dist[sy][sx] = 0
            dq.appendleft((sx, sy))
        
        while dq:
            x,y = dq.popleft()
            current_point = self.castle_map.point(x,y)
            current_dist = dist[y][x]
            for nx, ny in self.castle_map.neighbors(x,y):
                neighbor_point = self.castle_map.point(nx,ny)
                # Determine if climbing out = from moat to non-moat
                climb_cost = 0
                if current_point.is_moat() and not neighbor_point.is_moat():
                    climb_cost = 1
                nd = current_dist + climb_cost
                if dist[ny][nx] > nd:
                    dist[ny][nx] = nd
                    # 0-1 BFS: if climb_cost=0 add to left, else right.
                    if climb_cost == 0:
                        dq.appendleft((nx,ny))
                    else:
                        dq.append((nx,ny))
        
        goal_x, goal_y = self.goal
        res = dist[goal_y][goal_x]
        return int(res) if res != float('inf') else 0

class InputParser:
    def __init__(self):
        self.datasets: List[Tuple[int,int,List[str]]] = []
    def parse(self, lines: Iterator[str]) -> None:
        while True:
            try:
                line = next(lines)
                if line.strip() == "0 0":
                    break
                n, m = map(int, line.split())
                grid_lines = []
                for _ in range(m):
                    grid_lines.append(next(lines).rstrip('\n'))
                self.datasets.append((n,m,grid_lines))
            except StopIteration:
                break

class NinjaSolutionRunner:
    def __init__(self, datasets: List[Tuple[int,int,List[str]]]):
        self.datasets = datasets
    def run(self) -> List[int]:
        results = []
        for n,m,grid_lines in self.datasets:
            castle_map = CastleMap(n,m,grid_lines)
            pathfinder = NinjaPathfinder(castle_map)
            results.append(pathfinder.minimum_climbs())
        return results

def main():
    import sys
    parser = InputParser()
    parser.parse(iter(sys.stdin))
    runner = NinjaSolutionRunner(parser.datasets)
    results = runner.run()
    for r in results:
        print(r)

if __name__=="__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' collections' (ID: 22690)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' deque' (ID: 90347)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'default' → logprob: -1.408840298652649
    2. 'abc' → logprob: -1.408840298652649
    3. 'deque' → logprob: -1.408840298652649
    4. 'Counter' → logprob: -2.1588401794433594
    5. ' defaultdict' → logprob: -2.1588401794433594
    6. ' Counter' → logprob: -4.033840179443359
    7. ' abc' → logprob: -4.658840179443359
    8. 'named' → logprob: -5.533840179443359
    9. ' deque' → logprob: -6.283840179443359
    10. '```' → logprob: -6.783840179443359

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.010959392413496971
    2. '.' → logprob: -5.385959625244141
    3. '\(' → logprob: -5.760959625244141
    4. '\' → logprob: -6.510959625244141
    5. '```' → logprob: -7.885959625244141
    6. '[' → logprob: -8.51095962524414
    7. '\[' → logprob: -8.51095962524414
    8. ',' → logprob: -8.63595962524414
    9. '\n' → logprob: -9.13595962524414
    10. 'newline' → logprob: -9.13595962524414

Token 5: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.29625362157821655
    2. 'd' → logprob: -2.0462536811828613
    3. '\' → logprob: -3.7962536811828613
    4. '\n' → logprob: -3.7962536811828613
    5. 'a' → logprob: -4.296253681182861
    6. '[' → logprob: -4.546253681182861
    7. '(
' → logprob: -4.671253681182861
    8. ',' → logprob: -4.796253681182861
    9. '
' → logprob: -4.796253681182861
    10. '.' → logprob: -5.296253681182861

Token 6: ' typing' (ID: 34152)
  Prédit: ' queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' queue' → logprob: -0.8912053108215332
    2. ' collections' → logprob: -1.0162053108215332
    3. ' itertools' → logprob: -1.8912053108215332
    4. ' typing' → logprob: -3.391205310821533
    5. ' sys' → logprob: -3.891205310821533
    6. ' heap' → logprob: -4.641205310821533
    7. ' os' → logprob: -5.266205310821533
    8. ' math' → logprob: -5.766205310821533
    9. ' copy' → logprob: -6.891205310821533
    10. ' time' → logprob: -7.891205310821533

Token 7: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.4818873405456543
    2. 'import' → logprob: -0.9818873405456543
    3. '.' → logprob: -5.106887340545654
    4. '_' → logprob: -8.106887817382812
    5. '.import' → logprob: -8.106887817382812
    6. '[' → logprob: -8.481887817382812
    7. '_import' → logprob: -8.481887817382812
    8. ' as' → logprob: -8.856887817382812
    9. ' ' → logprob: -9.481887817382812
    10. '```' → logprob: -9.481887817382812

Token 8: ' List' (ID: 2655)
  Prédit: 'Deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Deque' → logprob: -0.6237484812736511
    2. ' De' → logprob: -0.9987484812736511
    3. 'De' → logprob: -2.998748540878296
    4. ' deque' → logprob: -3.748748540878296
    5. 'deque' → logprob: -4.373748302459717
    6. 'List' → logprob: -4.998748302459717
    7. ' List' → logprob: -6.498748302459717
    8. 'Any' → logprob: -7.123748302459717
    9. 'Iterable' → logprob: -8.623748779296875
    10. 'Optional' → logprob: -9.123748779296875

Token 9: ',' (ID: 11)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.5470239520072937
    2. '
' → logprob: -1.9220240116119385
    3. 'def' → logprob: -2.5470240116119385
    4. '\n' → logprob: -2.6720240116119385
    5. '\' → logprob: -3.4220240116119385
    6. 'class' → logprob: -3.5470240116119385
    7. '

' → logprob: -3.5470240116119385
    8. '[' → logprob: -4.172023773193359
    9. '<|end|>' → logprob: -5.422023773193359
    10. ',' → logprob: -5.547023773193359

Token 10: ' Tuple' (ID: 50841)
  Prédit: ' De'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' De' → logprob: -0.901412844657898
    2. ' deque' → logprob: -1.276412844657898
    3. 'Deque' → logprob: -1.651412844657898
    4. 'deque' → logprob: -2.6514129638671875
    5. ' Optional' → logprob: -3.2764129638671875
    6. ' Tuple' → logprob: -5.5264129638671875
    7. 'Optional' → logprob: -5.7764129638671875
    8. 'De' → logprob: -6.0264129638671875
    9. ' de' → logprob: -6.7764129638671875
    10. ' Iterable' → logprob: -7.0264129638671875

Token 11: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9413154721260071
    2. '

' → logprob: -1.3163154125213623
    3. '```' → logprob: -1.6913154125213623
    4. 'class' → logprob: -2.8163154125213623
    5. '\n' → logprob: -2.8163154125213623
    6. 'def' → logprob: -3.6913154125213623
    7. '\' → logprob: -4.816315650939941
    8. '``' → logprob: -6.566315650939941
    9. '
' → logprob: -7.066315650939941
    10. '


' → logprob: -7.566315650939941

Token 12: ' Optional' (ID: 19351)
  Prédit: 'Deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Deque' → logprob: -0.416688472032547
    2. 'deque' → logprob: -1.4166884422302246
    3. 'Optional' → logprob: -3.2916884422302246
    4. ' deque' → logprob: -3.9166884422302246
    5. ' De' → logprob: -4.416688442230225
    6. 'Iterable' → logprob: -4.666688442230225
    7. 'De' → logprob: -5.166688442230225
    8. ' Optional' → logprob: -5.416688442230225
    9. 'Any' → logprob: -6.166688442230225
    10. '```' → logprob: -6.416688442230225

Token 13: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1844436526298523
    2. '

' → logprob: -2.059443712234497
    3. '```' → logprob: -3.434443712234497
    4. 'class' → logprob: -5.684443473815918
    5. 'def' → logprob: -6.059443473815918
    6. '\n' → logprob: -6.434443473815918
    7. '
' → logprob: -7.684443473815918
    8. '``' → logprob: -8.059443473815918
    9. '<|end|>' → logprob: -9.059443473815918
    10. '\' → logprob: -9.559443473815918

Token 14: ' Iterator' (ID: 41994)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.36589738726615906
    2. 'Deque' → logprob: -1.3658974170684814
    3. 'Any' → logprob: -3.9908974170684814
    4. 'Iterable' → logprob: -4.365897178649902
    5. 'Union' → logprob: -4.865897178649902
    6. 'Dict' → logprob: -5.740897178649902
    7. 'Set' → logprob: -5.865897178649902
    8. 'Iterator' → logprob: -6.240897178649902
    9. ' deque' → logprob: -6.365897178649902
    10. 'De' → logprob: -7.365897178649902

Token 15: ',' (ID: 11)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.5532642006874084
    2. '
' → logprob: -1.5532641410827637
    3. '\n' → logprob: -2.0532641410827637
    4. '

' → logprob: -3.1782641410827637
    5. '\' → logprob: -4.053264141082764
    6. 'def' → logprob: -4.178264141082764
    7. 'class' → logprob: -5.678264141082764
    8. '``' → logprob: -6.428264141082764
    9. ':' → logprob: -6.803264141082764
    10. '
' → logprob: -6.928264141082764

Token 16: ' Set' (ID: 3957)
  Prédit: 'Iterable'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Iterable' → logprob: -0.6867786645889282
    2. 'deque' → logprob: -1.6867786645889282
    3. 'Deque' → logprob: -2.0617785453796387
    4. 'Any' → logprob: -2.3117785453796387
    5. ' Iterable' → logprob: -4.061778545379639
    6. 'Generator' → logprob: -4.311778545379639
    7. 'Union' → logprob: -4.561778545379639
    8. 'Set' → logprob: -4.686778545379639
    9. 'Named' → logprob: -5.186778545379639
    10. 'De' → logprob: -5.311778545379639

Token 17: '

' (ID: 279)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.4199497401714325
    2. '

' → logprob: -1.6699497699737549
    3. '```' → logprob: -2.294949769973755
    4. '
' → logprob: -3.169949769973755
    5. 'def' → logprob: -5.169949531555176
    6. '\n' → logprob: -5.919949531555176
    7. '``' → logprob: -6.919949531555176
    8. ' class' → logprob: -7.169949531555176
    9. '\' → logprob: -7.544949531555176
    10. '
' → logprob: -8.294949531555176

Token 18: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.03339358791708946
    2. 'def' → logprob: -3.908393621444702
    3. '```' → logprob: -4.408393383026123
    4. '
' → logprob: -8.158393859863281
    5. ' class' → logprob: -9.033393859863281
    6. '``' → logprob: -9.908393859863281
    7. '`' → logprob: -10.283393859863281
    8. '\n' → logprob: -10.783393859863281
    9. '<class' → logprob: -10.908393859863281
    10. '\' → logprob: -11.158393859863281

Token 19: ' Grid' (ID: 18087)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.12567025423049927
    2. ' Graph' → logprob: -3.6256701946258545
    3. ' B' → logprob: -4.125670433044434
    4. ' My' → logprob: -4.250670433044434
    5. ' De' → logprob: -4.500670433044434
    6. ' Binary' → logprob: -4.625670433044434
    7. ' Tree' → logprob: -4.875670433044434
    8. ' Node' → logprob: -5.125670433044434
    9. ' BFS' → logprob: -5.125670433044434
    10. ' Token' → logprob: -5.625670433044434

Token 20: 'Point' (ID: 4219)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00033045929740183055
    2. '):' → logprob: -9.375330924987793
    3. '():' → logprob: -9.500330924987793
    4. 'Traversal' → logprob: -9.875330924987793
    5. ':
' → logprob: -10.125330924987793
    6. 'Searcher' → logprob: -11.750330924987793
    7. '(' → logprob: -11.875330924987793
    8. 'Cell' → logprob: -12.250330924987793
    9. 'Point' → logprob: -12.625330924987793
    10. '(Grid' → logprob: -12.625330924987793

Token 21: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.029915016144514084
    2. '(' → logprob: -3.5299150943756104
    3. '(Point' → logprob: -10.029914855957031
    4. '():' → logprob: -10.529914855957031
    5. '(:' → logprob: -10.904914855957031
    6. '```' → logprob: -10.904914855957031
    7. ' :' → logprob: -11.404914855957031
    8. '(Grid' → logprob: -11.654914855957031
    9. '(object' → logprob: -11.904914855957031
    10. '):' → logprob: -12.779914855957031

Token 22: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35054707527160645
    2. ':' → logprob: -1.3505470752716064
    3. '<|end|>' → logprob: -4.350546836853027
    4. '(' → logprob: -4.850546836853027
    5. '```' → logprob: -4.850546836853027
    6. ':
' → logprob: -5.975546836853027
    7. '(object' → logprob: -6.725546836853027
    8. 'def' → logprob: -7.100546836853027
    9. ' (' → logprob: -7.225546836853027
    10. ' ' → logprob: -7.600546836853027

Token 23: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6488001942634583
    2. ' def' → logprob: -1.7738001346588135
    3. 'def' (adapté à ' def') → logprob: -2.1488001346588135
    4. ' (' → logprob: -3.1488001346588135
    5. '(' → logprob: -3.2738001346588135
    6. 'class' → logprob: -3.5238001346588135
    7. '```' → logprob: -3.7738001346588135
    8. '<|end|>' → logprob: -3.7738001346588135
    9. ':' → logprob: -4.773800373077393
    10. ' ' → logprob: -5.148800373077393

Token 24: ' __' (ID: 2516)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.36117449402809143
    2. 'nit' → logprob: -1.361174464225769
    3. 'itialize' → logprob: -4.861174583435059
    4. 'n' → logprob: -4.986174583435059
    5. ' init' → logprob: -4.986174583435059
    6. ' __' → logprob: -5.111174583435059
    7. 'it' → logprob: -5.486174583435059
    8. ' nit' → logprob: -5.986174583435059
    9. ' def' → logprob: -6.111174583435059
    10. 'def' → logprob: -6.361174583435059

Token 25: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -9.088346359931165e-07
    2. 'eq' → logprob: -14.000000953674316
    3. 'ini' → logprob: -17.25
    4. ' init' → logprob: -19.125
    5. 'inite' → logprob: -20.25
    6. '_init' → logprob: -20.625
    7. 'int' → logprob: -20.75
    8. '```' → logprob: -21.375
    9. 'in' → logprob: -21.625
    10. '	init' → logprob: -22.5

Token 26: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.06923845410346985
    2. '(self' → logprob: -3.4442384243011475
    3. '(' → logprob: -3.6942384243011475
    4. ' (' → logprob: -5.444238662719727
    5. '__' → logprob: -5.944238662719727
    6. '__(
' → logprob: -6.694238662719727
    7. '<|end|>' → logprob: -6.944238662719727
    8. '__((' → logprob: -8.694238662719727
    9. '__(*' → logprob: -8.944238662719727
    10. 'self' → logprob: -8.944238662719727

Token 27: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0024763736873865128
    2. ' self' → logprob: -6.002476215362549
    3. ' ' → logprob: -15.752476692199707
    4. '	self' → logprob: -15.752476692199707
    5. ')' → logprob: -16.12747573852539
    6. '0' → logprob: -16.37747573852539
    7. '
' → logprob: -16.75247573852539
    8. '(self' → logprob: -16.75247573852539
    9. '_self' → logprob: -17.00247573852539
    10. '   ' → logprob: -17.12747573852539

Token 28: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2891833186149597
    2. ' ,' → logprob: -1.4141833782196045
    3. 'self' → logprob: -5.414183139801025
    4. '_coordinates' → logprob: -6.039183139801025
    5. ' self' → logprob: -7.914183139801025
    6. ')' → logprob: -8.789183616638184
    7. '_,' → logprob: -8.789183616638184
    8. 'coordinates' → logprob: -9.414183616638184
    9. '<|end|>' → logprob: -9.414183616638184
    10. ',self' → logprob: -9.664183616638184

Token 29: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.12832771241664886
    2. ' x' → logprob: -2.2533276081085205
    3. 'self' → logprob: -4.5033278465271
    4. ' self' → logprob: -5.5033278465271
    5. ' row' → logprob: -9.128327369689941
    6. 'row' → logprob: -9.378327369689941
    7. '   ' → logprob: -10.378327369689941
    8. ' ' → logprob: -11.253327369689941
    9. '	x' → logprob: -14.253327369689941
    10. '```' → logprob: -14.628327369689941

Token 30: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005574644077569246
    2. ':' → logprob: -5.255574703216553
    3. ':int' → logprob: -8.630574226379395
    4. '):' → logprob: -9.505574226379395
    5. ' ,' → logprob: -9.880574226379395
    6. ')' → logprob: -11.005574226379395
    7. '<|end|>' → logprob: -12.130574226379395
    8. '=' → logprob: -12.255574226379395
    9. ',int' → logprob: -12.630574226379395
    10. '<|end|>' → logprob: -13.130574226379395

Token 31: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.16024190187454224
    2. ' int' → logprob: -1.9102418422698975
    3. ':int' → logprob: -11.285242080688477
    4. '=int' → logprob: -12.910242080688477
    5. '[int' → logprob: -14.285242080688477
    6. '(int' → logprob: -14.410242080688477
    7. '	int' → logprob: -14.910242080688477
    8. '<int' → logprob: -15.035242080688477
    9. ']int' → logprob: -15.160242080688477
    10. ',int' → logprob: -15.285242080688477

Token 32: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.889424836728722e-05
    2. ' ,' → logprob: -9.375099182128906
    3. ',int' → logprob: -12.000099182128906
    4. '<|end|>' → logprob: -12.625099182128906
    5. '<|end|>' → logprob: -13.500099182128906
    6. '‌,' → logprob: -13.875099182128906
    7. ')' → logprob: -14.750099182128906
    8. '   ' → logprob: -15.250099182128906
    9. ':' → logprob: -15.500099182128906
    10. ',x' → logprob: -15.750099182128906

Token 33: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.38687190413475037
    2. 'y' → logprob: -1.1368719339370728
    3. '	y' → logprob: -14.886872291564941
    4. '<|end|>' → logprob: -15.136872291564941
    5. ' ' → logprob: -15.761872291564941
    6. ' ' → logprob: -16.761871337890625
    7. '<|end|>' → logprob: -17.261871337890625
    8. ',y' → logprob: -17.511871337890625
    9. '    ' → logprob: -17.636871337890625
    10. ')y' → logprob: -17.636871337890625

Token 34: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07107903063297272
    2. ')' → logprob: -2.6960790157318115
    3. ':' → logprob: -6.821079254150391
    4. '):
' → logprob: -10.57107925415039
    5. ' ):' → logprob: -11.69607925415039
    6. ',' → logprob: -11.69607925415039
    7. ':int' → logprob: -13.19607925415039
    8. '):

' → logprob: -13.82107925415039
    9. '<|end|>' → logprob: -13.82107925415039
    10. '<|end|>' → logprob: -14.19607925415039

Token 35: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.4746147096157074
    2. ' int' → logprob: -0.9746147394180298
    3. ')' → logprob: -7.97461462020874
    4. ':int' → logprob: -8.849615097045898
    5. ' )' → logprob: -10.224615097045898
    6. '=int' → logprob: -12.349615097045898
    7. '<int' → logprob: -12.849615097045898
    8. ']int' → logprob: -13.474615097045898
    9. '[int' → logprob: -13.474615097045898
    10. '	int' → logprob: -14.224615097045898

Token 36: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0036173006519675255
    2. ')' → logprob: -5.628617286682129
    3. ':' → logprob: -11.378617286682129
    4. ' ):' → logprob: -13.253617286682129
    5. '):
' → logprob: -13.378617286682129
    6. ',' → logprob: -13.753617286682129
    7. '   ' → logprob: -14.378617286682129
    8. ''):' → logprob: -15.128617286682129
    9. '),' → logprob: -15.878617286682129
    10. '```' → logprob: -16.378618240356445

Token 37: ' terrain' (ID: 30461)
  Prédit: ' z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' z' → logprob: -0.38244473934173584
    2. ' parent' → logprob: -2.5074448585510254
    3. 'z' → logprob: -3.1324448585510254
    4. ' visited' → logprob: -3.3824448585510254
    5. ' value' → logprob: -3.7574448585510254
    6. ' cost' → logprob: -3.8824448585510254
    7. ' grid' → logprob: -4.007444858551025
    8. ')' → logprob: -4.507444858551025
    9. ' val' → logprob: -4.632444858551025
    10. ' )' → logprob: -4.757444858551025

Token 38: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.021181216463446617
    2. '_type' → logprob: -4.021181106567383
    3. '):' → logprob: -5.896181106567383
    4. ')' → logprob: -9.396181106567383
    5. '_cost' → logprob: -9.396181106567383
    6. ':str' → logprob: -10.271181106567383
    7. '_:' → logprob: -11.396181106567383
    8. ':type' → logprob: -11.521181106567383
    9. '_height' → logprob: -11.646181106567383
    10. ' :' → logprob: -11.771181106567383

Token 39: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.629851222038269
    2. ' str' → logprob: -0.879851222038269
    3. 'int' → logprob: -3.5048513412475586
    4. ' int' → logprob: -4.879851341247559
    5. ' Optional' → logprob: -4.879851341247559
    6. 'Optional' → logprob: -5.004851341247559
    7. ')' → logprob: -8.504851341247559
    8. '[str' → logprob: -9.379851341247559
    9. 'List' → logprob: -9.629851341247559
    10. ':str' → logprob: -10.254851341247559

Token 40: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.012581702321767807
    2. ')' → logprob: -4.387581825256348
    3. ':' → logprob: -10.137581825256348
    4. ',' → logprob: -10.637581825256348
    5. '):
' → logprob: -12.637581825256348
    6. ' ):' → logprob: -12.762581825256348
    7. ''):' → logprob: -14.012581825256348
    8. '   ' → logprob: -14.762581825256348
    9. '=' → logprob: -15.012581825256348
    10. ' ' → logprob: -15.512581825256348

Token 41: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5564130544662476
    2. '):' → logprob: -1.0564130544662476
    3. ')' → logprob: -2.681413173675537
    4. ':' → logprob: -5.306413173675537
    5. '   ' → logprob: -5.931413173675537
    6. ' ):' → logprob: -6.556413173675537
    7. ' )' → logprob: -7.806413173675537
    8. ',' → logprob: -8.556412696838379
    9. '):
' → logprob: -8.806412696838379
    10. '    ' → logprob: -8.806412696838379

Token 42: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.32733094692230225
    2. 'self' (adapté à ' self') → logprob: -1.3273309469223022
    3. ' self' → logprob: -5.077331066131592
    4. '   ' → logprob: -5.952331066131592
    5. '        ' → logprob: -6.452331066131592
    6. '<|end|>' → logprob: -6.952331066131592
    7. ' ' → logprob: -7.327331066131592
    8. 'x' → logprob: -8.202330589294434
    9. 's' → logprob: -8.202330589294434
    10. '```' → logprob: -8.702330589294434

Token 43: '.x' (ID: 3700)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.04866627976298332
    2. '.x' → logprob: -3.04866623878479
    3. ' .' → logprob: -9.673666000366211
    4. ' ' → logprob: -12.798666000366211
    5. 'x' → logprob: -13.048666000366211
    6. '<|end|>' → logprob: -13.173666000366211
    7. '._' → logprob: -13.423666000366211
    8. ').' → logprob: -14.173666000366211
    9. '.gridx' → logprob: -14.298666000366211
    10. '.user' → logprob: -14.298666000366211

Token 44: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3161812722682953
    2. ',' → logprob: -1.6911813020706177
    3. ' =' → logprob: -2.566181182861328
    4. '<|end|>' → logprob: -5.066181182861328
    5. ')' → logprob: -5.941181182861328
    6. ' ,' → logprob: -7.816181182861328
    7. '<|end|>' → logprob: -8.441181182861328
    8. ':' → logprob: -8.816181182861328
    9. '   ' → logprob: -9.941181182861328
    10. '=int' → logprob: -9.941181182861328

Token 45: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.10020849853754044
    2. ' x' → logprob: -2.3502085208892822
    3. ' ' → logprob: -13.600208282470703
    4. '	x' → logprob: -15.600208282470703
    5. '<|end|>' → logprob: -15.725208282470703
    6. ' ' → logprob: -16.225208282470703
    7. ')x' → logprob: -16.725208282470703
    8. '(x' → logprob: -17.850208282470703
    9. 'space' → logprob: -17.975208282470703
    10. '```' → logprob: -17.975208282470703

Token 46: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 47: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2567567527294159
    2. '<|end|>' → logprob: -1.5067567825317383
    3. '
' → logprob: -6.131756782531738
    4. '<|end|>' → logprob: -6.631756782531738
    5. '        
' → logprob: -8.131756782531738
    6. '   ' → logprob: -8.631756782531738
    7. '        ' → logprob: -8.881756782531738
    8. ',' → logprob: -9.006756782531738
    9. '    
' → logprob: -9.131756782531738
    10. ' 
' → logprob: -9.131756782531738

Token 48: ' self' (ID: 1051)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.313263863325119
    2. ' y' → logprob: -1.3132638931274414
    3. ',y' → logprob: -14.563263893127441
    4. ' ' → logprob: -14.688263893127441
    5. 'x' → logprob: -15.063263893127441
    6. 'self' (adapté à ' self') → logprob: -15.563263893127441
    7. '        ' → logprob: -15.688263893127441
    8. '       ' → logprob: -16.063262939453125
    9. '    ' → logprob: -16.313262939453125
    10. '	y' → logprob: -16.438262939453125

Token 49: '.y' (ID: 4486)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 50: ' =' (ID: 314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 51: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.12693418562412262
    2. 'y' → logprob: -2.126934289932251
    3. ' ' → logprob: -12.376934051513672
    4. ' ' → logprob: -14.626934051513672
    5. '	y' → logprob: -15.501934051513672
    6. 'x' → logprob: -15.626934051513672
    7. '<|end|>' → logprob: -15.626934051513672
    8. '```' → logprob: -16.001934051513672
    9. ''y' → logprob: -16.126934051513672
    10. '‘y' → logprob: -16.501934051513672

Token 52: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007400515489280224
    2. 'self' → logprob: -5.0074005126953125
    3. ' self' → logprob: -7.3824005126953125
    4. '<|end|>' → logprob: -10.257400512695312
    5. '```' → logprob: -11.632400512695312
    6. '
' → logprob: -12.757400512695312
    7. '   ' → logprob: -12.757400512695312
    8. ',' → logprob: -13.007400512695312
    9. '        
' → logprob: -13.257400512695312
    10. ' ' → logprob: -13.507400512695312

Token 53: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004693206865340471
    2. 'self' → logprob: -5.754693031311035
    3. ' self' → logprob: -6.504693031311035
    4. '<|end|>' → logprob: -12.004693031311035
    5. '```' → logprob: -12.629693031311035
    6. '   ' → logprob: -12.879693031311035
    7. ' ' → logprob: -13.379693031311035
    8. '	self' → logprob: -14.129693031311035
    9. '      ' → logprob: -14.379693031311035
    10. '        
' → logprob: -14.504693031311035

Token 54: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.20848283171653748
    2. ' self' → logprob: -1.7084828615188599
    3. '       ' → logprob: -4.95848274230957
    4. '   ' → logprob: -11.70848274230957
    5. '	self' → logprob: -12.45848274230957
    6. ' ' → logprob: -12.83348274230957
    7. 'terrain' → logprob: -12.83348274230957
    8. '```' → logprob: -14.08348274230957
    9. ' ' → logprob: -14.45848274230957
    10. ' terrain' → logprob: -14.83348274230957

Token 55: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00011427151912357658
    2. 'terrain' → logprob: -9.750114440917969
    3. ' .' → logprob: -10.750114440917969
    4. '.t' → logprob: -11.250114440917969
    5. ',' → logprob: -12.000114440917969
    6. '._' → logprob: -12.375114440917969
    7. '.x' → logprob: -12.500114440917969
    8. ' terrain' → logprob: -14.250114440917969
    9. '_' → logprob: -14.375114440917969
    10. '.y' → logprob: -14.750114440917969

Token 56: 'terrain' (ID: 94865)
  Prédit: 'terrain'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'terrain' → logprob: -0.0009679184295237064
    2. ' terrain' → logprob: -7.750967979431152
    3. 'z' → logprob: -9.000967979431152
    4. 'y' → logprob: -9.250967979431152
    5. 'type' → logprob: -9.375967979431152
    6. 't' → logprob: -9.625967979431152
    7. 'x' → logprob: -10.000967979431152
    8. 'ter' → logprob: -10.500967979431152
    9. 'coordinates' → logprob: -11.250967979431152
    10. 'grid' → logprob: -11.375967979431152

Token 57: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00259408843703568
    2. '=' → logprob: -6.002593994140625
    3. ' ' → logprob: -9.127593994140625
    4. '<|end|>' → logprob: -11.877593994140625
    5. ' =
' → logprob: -14.252593994140625
    6. '<|end|>' → logprob: -14.377593994140625
    7. ' ==' → logprob: -15.127593994140625
    8. ' =)' → logprob: -15.252593994140625
    9. ')' → logprob: -15.377593994140625
    10. ',' → logprob: -16.127593994140625

Token 58: ' terrain' (ID: 30461)
  Prédit: ' terrain'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' terrain' → logprob: -0.028343111276626587
    2. 'terrain' → logprob: -3.6533432006835938
    3. ''' → logprob: -6.778343200683594
    4. ' ' → logprob: -7.278343200683594
    5. '"' → logprob: -9.528343200683594
    6. ' '' → logprob: -9.903343200683594
    7. ' ' → logprob: -10.278343200683594
    8. 'ter' → logprob: -10.903343200683594
    9. 'terr' → logprob: -11.528343200683594
    10. ' terr' → logprob: -11.653343200683594

Token 59: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.29022085666656494
    2. '<|end|>' → logprob: -1.790220856666565
    3. '   ' → logprob: -2.9152207374572754
    4. '    
' → logprob: -4.790220737457275
    5. '\n' → logprob: -4.790220737457275
    6. ' 
' → logprob: -5.790220737457275
    7. ' ' → logprob: -6.165220737457275
    8. '\' → logprob: -6.415220737457275
    9. '' → logprob: -6.665220737457275
    10. '```' → logprob: -6.915220737457275

Token 60: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 61: ' '.',' (ID: 110580)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.2599184513092041
    2. ' '' → logprob: -2.134918451309204
    3. '"' → logprob: -3.384918451309204
    4. ''s' → logprob: -3.384918451309204
    5. ' str' → logprob: -3.634918451309204
    6. ' "' → logprob: -5.134918212890625
    7. ' ' → logprob: -5.509918212890625
    8. ''t' → logprob: -6.634918212890625
    9. 'str' → logprob: -6.884918212890625
    10. ' terrain' → logprob: -7.009918212890625

Token 62: ' '#' (ID: 11284)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.08614204078912735
    2. ' '' → logprob: -3.211142063140869
    3. ''#' → logprob: -3.836142063140869
    4. ' '#'' → logprob: -4.086142063140869
    5. ''A' → logprob: -7.211142063140869
    6. ''s' → logprob: -7.586142063140869
    7. ''T' → logprob: -7.836142063140869
    8. ''S' → logprob: -8.086141586303711
    9. ''E' → logprob: -8.586141586303711
    10. ''\' → logprob: -8.836141586303711

Token 63: '',' (ID: 787)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.11828568577766418
    2. '',' → logprob: -2.243285655975342
    3. '')' → logprob: -5.868285655975342
    4. ',' → logprob: -6.493285655975342
    5. ')' → logprob: -7.618285655975342
    6. '<|end|>' → logprob: -8.7432861328125
    7. '"' → logprob: -9.3682861328125
    8. ''}' → logprob: -9.7432861328125
    9. ' '' → logprob: -10.1182861328125
    10. '']' → logprob: -10.1182861328125

Token 64: ' '&' (ID: 35856)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.587157666683197
    2. ' '' → logprob: -0.837157666683197
    3. ''T' → logprob: -5.462157726287842
    4. ''S' → logprob: -5.962157726287842
    5. ''A' → logprob: -6.337157726287842
    6. ''E' → logprob: -6.712157726287842
    7. ''I' → logprob: -8.712157249450684
    8. ''s' → logprob: -8.837157249450684
    9. ''C' → logprob: -9.212157249450684
    10. ''t' → logprob: -9.337157249450684

Token 65: ''
' (ID: 2207)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.40242063999176025
    2. '')' → logprob: -1.2774206399917603
    3. '',' → logprob: -3.4024205207824707
    4. ')' → logprob: -4.027420520782471
    5. ',' → logprob: -7.152420520782471
    6. ')'' → logprob: -8.902420997619629
    7. ''''' → logprob: -9.277420997619629
    8. ''}' → logprob: -9.402420997619629
    9. '```' → logprob: -9.402420997619629
    10. '']' → logprob: -9.777420997619629

Token 66: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1977960467338562
    2. '   ' → logprob: -2.322796106338501
    3. '<|end|>' → logprob: -2.572796106338501
    4. '    
' → logprob: -6.072795867919922
    5. '<|end|>' → logprob: -7.197795867919922
    6. '```' → logprob: -7.447795867919922
    7. 'def' → logprob: -8.072795867919922
    8. ' 
' → logprob: -8.322795867919922
    9. '

' → logprob: -8.697795867919922
    10. '\n' → logprob: -9.072795867919922

Token 67: ' def' (ID: 1056)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4337618052959442
    2. '<|end|>' → logprob: -1.0587618350982666
    3. '<|end|>' → logprob: -6.6837615966796875
    4. '    
' → logprob: -6.9337615966796875
    5. '   ' → logprob: -7.0587615966796875
    6. 'def' (adapté à ' def') → logprob: -7.3087615966796875
    7. '

' → logprob: -8.058761596679688
    8. '\n' → logprob: -8.183761596679688
    9. '```' → logprob: -8.558761596679688
    10. '  
' → logprob: -9.183761596679688

Token 68: ' is' (ID: 382)
  Prédit: ' __'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.5010588765144348
    2. ' ' → logprob: -1.00105881690979
    3. ' ' → logprob: -4.751059055328369
    4. '_' → logprob: -4.751059055328369
    5. ' def' → logprob: -5.001059055328369
    6. '__' → logprob: -7.126059055328369
    7. ' _' → logprob: -7.376059055328369
    8. ' ```' → logprob: -8.251058578491211
    9. ' is' → logprob: -8.376058578491211
    10. '_repr' → logprob: -8.501058578491211

Token 69: '_m' (ID: 1285)
  Prédit: '_pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_pass' → logprob: -0.7994041442871094
    2. '_' → logprob: -1.0494041442871094
    3. '_walk' → logprob: -1.7994041442871094
    4. '_access' → logprob: -4.549404144287109
    5. '_free' → logprob: -4.674404144287109
    6. '_valid' → logprob: -5.424404144287109
    7. '_tr' → logprob: -5.424404144287109
    8. ' _' → logprob: -6.299404144287109
    9. '_open' → logprob: -6.549404144287109
    10. '_empty' → logprob: -6.674404144287109

Token 70: 'o' (ID: 78)
  Prédit: 'ovable'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ovable' → logprob: -0.8919965028762817
    2. 'o' → logprob: -1.1419965028762817
    3. 'ove' → logprob: -2.016996383666992
    4. 'ov' → logprob: -2.641996383666992
    5. 'a' → logprob: -3.016996383666992
    6. 'ovement' → logprob: -5.141996383666992
    7. '_' → logprob: -6.391996383666992
    8. '```' → logprob: -6.516996383666992
    9. 'oving' → logprob: -6.766996383666992
    10. '_o' → logprob: -7.016996383666992

Token 71: 'at' (ID: 266)
  Prédit: 'unt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'unt' → logprob: -0.4205936789512634
    2. 've' → logprob: -1.9205937385559082
    3. 'v' → logprob: -2.045593738555908
    4. 'vement' → logprob: -3.295593738555908
    5. 'ved' → logprob: -4.170593738555908
    6. 'b' → logprob: -5.420593738555908
    7. 'ving' → logprob: -5.795593738555908
    8. 'ves' → logprob: -6.545593738555908
    9. 'unted' → logprob: -6.795593738555908
    10. 'st' → logprob: -7.045593738555908

Token 72: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8123404383659363
    2. '()' → logprob: -0.9373404383659363
    3. '():' → logprob: -2.437340497970581
    4. '(self' → logprob: -2.937340497970581
    5. '_' → logprob: -3.812340497970581
    6. 's' → logprob: -7.687340259552002
    7. 'self' → logprob: -8.56234073638916
    8. '(s' → logprob: -8.93734073638916
    9. ' (' → logprob: -9.06234073638916
    10. ' ()' → logprob: -9.18734073638916

Token 73: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8145391941070557
    2. '):' → logprob: -0.9395391941070557
    3. '():' → logprob: -2.5645391941070557
    4. '()' → logprob: -2.5645391941070557
    5. '(' → logprob: -5.314538955688477
    6. '())' → logprob: -5.564538955688477
    7. '<|end|>' → logprob: -6.814538955688477
    8. ',' → logprob: -7.439538955688477
    9. '):
' → logprob: -7.564538955688477
    10. '   ' → logprob: -8.939538955688477

Token 74: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.004540130961686373
    2. '(' → logprob: -6.004539966583252
    3. 'self' → logprob: -6.879539966583252
    4. ' ->' → logprob: -7.754539966583252
    5. ':' → logprob: -8.37954044342041
    6. ')' → logprob: -9.00454044342041
    7. '->' → logprob: -9.12954044342041
    8. '():' → logprob: -10.25454044342041
    9. '   ' → logprob: -10.62954044342041
    10. '       ' → logprob: -10.87954044342041

Token 75: ' bool' (ID: 3792)
  Prédit: ' bool'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bool' → logprob: -0.018174059689044952
    2. 'bool' → logprob: -4.018174171447754
    3. ' ' → logprob: -10.893174171447754
    4. ' ' → logprob: -13.018174171447754
    5. '<bool' → logprob: -14.018174171447754
    6. '  ' → logprob: -14.393174171447754
    7. '	bool' → logprob: -14.518174171447754
    8. '   ' → logprob: -14.643174171447754
    9. ' True' → logprob: -15.393174171447754
    10. ' Bool' → logprob: -15.643174171447754

Token 76: ':
' (ID: 734)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.2264922708272934
    2. ':' → logprob: -1.6014922857284546
    3. ':return' → logprob: -7.851492404937744
    4. '(' → logprob: -8.601491928100586
    5. '()' → logprob: -8.726491928100586
    6. '):' → logprob: -8.851491928100586
    7. ' :' → logprob: -9.726491928100586
    8. '<|end|>' → logprob: -9.976491928100586
    9. '():
' → logprob: -10.601491928100586
    10. ' ():' → logprob: -10.976491928100586

Token 77: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.037474289536476135
    2. ' return' → logprob: -3.6624743938446045
    3. 'return' → logprob: -4.912474155426025
    4. '   ' → logprob: -5.912474155426025
    5. '<|end|>' → logprob: -7.412474155426025
    6. ':return' → logprob: -8.662474632263184
    7. '    ' → logprob: -9.287474632263184
    8. ' ' → logprob: -10.037474632263184
    9. ' ' → logprob: -10.537474632263184
    10. '```' → logprob: -11.287474632263184

Token 78: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.5789845585823059
    2. ' return' → logprob: -0.8289845585823059
    3. 'self' → logprob: -6.20398473739624
    4. '       ' → logprob: -7.45398473739624
    5. ' self' → logprob: -7.82898473739624
    6. ':return' → logprob: -10.828984260559082
    7. '   ' → logprob: -11.828984260559082
    8. '{return' → logprob: -11.953984260559082
    9. '```' → logprob: -13.453984260559082
    10. '<|end|>' → logprob: -13.828984260559082

Token 79: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.006722352933138609
    2. 'self' → logprob: -5.006722450256348
    3. ' ' → logprob: -12.131722450256348
    4. ' ' → logprob: -14.506722450256348
    5. '	self' → logprob: -14.506722450256348
    6. '(self' → logprob: -15.506722450256348
    7. ' (' → logprob: -16.13172149658203
    8. '_self' → logprob: -16.25672149658203
    9. ' sel' → logprob: -17.13172149658203
    10. ' space' → logprob: -17.13172149658203

Token 80: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.002081143669784069
    2. '.mo' → logprob: -6.877080917358398
    3. '.m' → logprob: -7.627080917358398
    4. 's' → logprob: -9.627080917358398
    5. '.t' → logprob: -9.752080917358398
    6. '.s' → logprob: -10.002080917358398
    7. ' .' → logprob: -10.502080917358398
    8. '.tight' → logprob: -10.752080917358398
    9. '.sponge' → logprob: -11.002080917358398
    10. '.is' → logprob: -11.002080917358398

Token 81: 'terrain' (ID: 94865)
  Prédit: 'terrain'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'terrain' → logprob: -0.0598410964012146
    2. 'mo' → logprob: -3.5598411560058594
    3. 's' → logprob: -3.6848411560058594
    4. 'scape' → logprob: -6.559841156005859
    5. 'terr' → logprob: -7.184841156005859
    6. 'ter' → logprob: -7.559841156005859
    7. 'm' → logprob: -7.559841156005859
    8. 'x' → logprob: -7.934841156005859
    9. 'o' → logprob: -8.68484115600586
    10. 't' → logprob: -9.43484115600586

Token 82: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.024098509922623634
    2. '==' → logprob: -3.7740983963012695
    3. '[' → logprob: -8.52409839630127
    4. ' ' → logprob: -8.52409839630127
    5. ' in' → logprob: -8.64909839630127
    6. '=='' → logprob: -9.02409839630127
    7. ' !=' → logprob: -9.14909839630127
    8. ' =='' → logprob: -10.77409839630127
    9. '=' → logprob: -11.64909839630127
    10. '=="' → logprob: -12.02409839630127

Token 83: ' '#' (ID: 11284)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.019334416836500168
    2. ''#' → logprob: -4.644334316253662
    3. ' '' → logprob: -5.394334316253662
    4. ' '#'' → logprob: -6.144334316253662
    5. '"' → logprob: -6.644334316253662
    6. ' '&' → logprob: -6.644334316253662
    7. '"&' → logprob: -9.51933479309082
    8. ''"' → logprob: -9.64433479309082
    9. ''.' → logprob: -9.76933479309082
    10. ' '.'' → logprob: -12.01933479309082

Token 84: ''
' (ID: 2207)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.06660269945859909
    2. ')' → logprob: -2.8166027069091797
    3. '<|end|>' → logprob: -5.94160270690918
    4. '"' → logprob: -7.69160270690918
    5. '```' → logprob: -7.94160270690918
    6. '')' → logprob: -8.06660270690918
    7. '#' → logprob: -8.31660270690918
    8. ''#' → logprob: -8.56660270690918
    9. ')'' → logprob: -9.06660270690918
    10. '`' → logprob: -9.19160270690918

Token 85: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1694282591342926
    2. '    
' → logprob: -3.0444283485412598
    3. ' 
' → logprob: -3.1694283485412598
    4. '
' → logprob: -3.2944283485412598
    5. ' ' → logprob: -4.41942834854126
    6. '```' → logprob: -5.29442834854126
    7. '<|end|>' → logprob: -5.91942834854126
    8. '  
' → logprob: -5.91942834854126
    9. '    ' → logprob: -6.41942834854126
    10. '' → logprob: -7.04442834854126

Token 86: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10293453186750412
    2. '
' → logprob: -2.7279345989227295
    3. '    
' → logprob: -4.47793436050415
    4. ' ' → logprob: -5.10293436050415
    5. ' 
' → logprob: -5.10293436050415
    6. '```' → logprob: -5.72793436050415
    7. '<|end|>' → logprob: -5.85293436050415
    8. '    ' → logprob: -7.60293436050415
    9. '' → logprob: -7.85293436050415
    10. '  
' → logprob: -8.352934837341309

Token 87: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.004462162498384714
    2. 'is' → logprob: -6.129462242126465
    3. ' def' → logprob: -7.254462242126465
    4. ' __' → logprob: -7.379462242126465
    5. ' ' → logprob: -7.754462242126465
    6. 'def' → logprob: -9.129462242126465
    7. ' has' → logprob: -9.254462242126465
    8. '__' → logprob: -9.504462242126465
    9. '_is' → logprob: -9.754462242126465
    10. '_' → logprob: -10.004462242126465

Token 88: '_goal' (ID: 101684)
  Prédit: '_m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_m' → logprob: -0.19192565977573395
    2. ' _' → logprob: -2.4419257640838623
    3. '_' → logprob: -3.4419257640838623
    4. '_water' → logprob: -4.566925525665283
    5. ' &_' → logprob: -5.316925525665283
    6. '_f' → logprob: -5.316925525665283
    7. '_pass' → logprob: -5.441925525665283
    8. '_space' → logprob: -5.441925525665283
    9. '_land' → logprob: -5.691925525665283
    10. '_open' → logprob: -6.191925525665283

Token 89: '(self' (ID: 2402)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6366347670555115
    2. '(self' → logprob: -0.7616347670555115
    3. '(' → logprob: -5.636634826660156
    4. ' ()' → logprob: -9.511634826660156
    5. '():' → logprob: -9.511634826660156
    6. ' (' → logprob: -10.261634826660156
    7. '```' → logprob: -10.386634826660156
    8. '(
' → logprob: -10.511634826660156
    9. ' ' → logprob: -10.636634826660156
    10. '(True' → logprob: -10.761634826660156

Token 90: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0012088033836334944
    2. ' )' → logprob: -6.751208782196045
    3. '())' → logprob: -11.501209259033203
    4. '()' → logprob: -11.876209259033203
    5. '   ' → logprob: -11.876209259033203
    6. ' ' → logprob: -12.626209259033203
    7. 'self' → logprob: -12.876209259033203
    8. '(self' → logprob: -13.376209259033203
    9. '):' → logprob: -13.501209259033203
    10. '):
' → logprob: -14.001209259033203

Token 91: ' ->' (ID: 2747)
  Prédit: ' ->'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ->' → logprob: -0.842711329460144
    2. '()' → logprob: -1.342711329460144
    3. '(self' → logprob: -1.467711329460144
    4. '(' → logprob: -3.0927114486694336
    5. ' ' → logprob: -4.592711448669434
    6. ')' → logprob: -4.592711448669434
    7. ' (' → logprob: -4.717711448669434
    8. '->' → logprob: -7.342711448669434
    9. ' ()' → logprob: -7.467711448669434
    10. ':' → logprob: -7.467711448669434

Token 92: ' bool' (ID: 3792)
  Prédit: ' bool'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bool' → logprob: -0.0577211007475853
    2. 'bool' → logprob: -2.9327211380004883
    3. ' ' → logprob: -6.807721138000488
    4. ' str' → logprob: -7.682721138000488
    5. '<|end|>' → logprob: -7.932721138000488
    6. ' True' → logprob: -8.057721138000488
    7. ' (' → logprob: -9.432721138000488
    8. ' ' → logprob: -9.557721138000488
    9. '(bool' → logprob: -9.557721138000488
    10. '<bool' → logprob: -9.557721138000488

Token 93: ':
' (ID: 734)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.05033981800079346
    2. ':' → logprob: -4.050339698791504
    3. '():' → logprob: -4.300339698791504
    4. ' ->' → logprob: -4.675339698791504
    5. '(self' → logprob: -5.675339698791504
    6. '(' → logprob: -5.800339698791504
    7. ')' → logprob: -6.925339698791504
    8. '   ' → logprob: -8.050339698791504
    9. ' (' → logprob: -8.425339698791504
    10. '->' → logprob: -8.675339698791504

Token 94: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21343664824962616
    2. ' return' → logprob: -1.9634366035461426
    3. 'return' → logprob: -3.2134366035461426
    4. '<|end|>' → logprob: -4.963436603546143
    5. '   ' → logprob: -6.963436603546143
    6. ' self' → logprob: -7.213436603546143
    7. ' ' → logprob: -7.338436603546143
    8. ' ' → logprob: -7.463436603546143
    9. 'self' → logprob: -7.838436603546143
    10. ':return' → logprob: -7.963436603546143

Token 95: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.44631439447402954
    2. ' return' → logprob: -1.1963143348693848
    3. 'self' → logprob: -3.0713143348693848
    4. ' self' → logprob: -4.571314334869385
    5. '       ' → logprob: -6.946314334869385
    6. '   ' → logprob: -10.696314811706543
    7. '{return' → logprob: -11.821314811706543
    8. ':return' → logprob: -12.696314811706543
    9. ' ' → logprob: -13.321314811706543
    10. '    ' → logprob: -13.321314811706543

Token 96: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.10026555508375168
    2. 'self' → logprob: -2.3502655029296875
    3. ' '&' → logprob: -10.850265502929688
    4. ''' → logprob: -11.100265502929688
    5. '(self' → logprob: -12.100265502929688
    6. '&' → logprob: -12.350265502929688
    7. ''s' → logprob: -12.475265502929688
    8. '	self' → logprob: -12.850265502929688
    9. ' ' → logprob: -12.975265502929688
    10. ' ' → logprob: -13.350265502929688

Token 97: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0003408263437449932
    2. '.goal' → logprob: -8.375340461730957
    3. '.&' → logprob: -10.250340461730957
    4. ' .' → logprob: -10.250340461730957
    5. '&period' → logprob: -11.125340461730957
    6. '.is' → logprob: -12.000340461730957
    7. '&' → logprob: -12.250340461730957
    8. '.t' → logprob: -13.625340461730957
    9. '.g' → logprob: -13.625340461730957
    10. '.go' → logprob: -14.250340461730957

Token 98: 'terrain' (ID: 94865)
  Prédit: 'goal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'goal' → logprob: -2.2961512513575144e-05
    2. 'Goal' → logprob: -11.875022888183594
    3. '_goal' → logprob: -11.875022888183594
    4. 'go' → logprob: -12.125022888183594
    5. '(goal' → logprob: -13.250022888183594
    6. 'is' → logprob: -13.750022888183594
    7. ' goal' → logprob: -15.000022888183594
    8. 'g' → logprob: -15.125022888183594
    9. '.goal' → logprob: -16.125022888183594
    10. 's' → logprob: -17.375022888183594

Token 99: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.01616234891116619
    2. '==' → logprob: -4.141162395477295
    3. '=='' → logprob: -9.266161918640137
    4. ' =='' → logprob: -11.266161918640137
    5. ' ' → logprob: -12.141161918640137
    6. ' =' → logprob: -12.391161918640137
    7. '=' → logprob: -12.391161918640137
    8. ' '' → logprob: -13.141161918640137
    9. '<|end|>' → logprob: -13.391161918640137
    10. '=="' → logprob: -14.266161918640137

Token 100: ' '&' (ID: 35856)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.013091648928821087
    2. ' '&' → logprob: -4.388091564178467
    3. ' '' → logprob: -7.763091564178467
    4. '"&' → logprob: -9.638092041015625
    5. '('&' → logprob: -10.638092041015625
    6. '&' → logprob: -10.888092041015625
    7. '"' → logprob: -11.138092041015625
    8. ''.' → logprob: -11.638092041015625
    9. ' ' → logprob: -12.513092041015625
    10. ' &'' → logprob: -12.888092041015625

Token 101: ''
' (ID: 2207)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10819046944379807
    2. ''' → logprob: -2.9831905364990234
    3. '<|end|>' → logprob: -3.1081905364990234
    4. '')' → logprob: -5.233190536499023
    5. '   ' → logprob: -6.858190536499023
    6. '}' → logprob: -7.858190536499023
    7. '<|end|>' → logprob: -9.108190536499023
    8. '```' → logprob: -9.358190536499023
    9. ''
' → logprob: -10.108190536499023
    10. '"' → logprob: -10.233190536499023

Token 102: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5410836935043335
    2. '   ' → logprob: -1.4160836935043335
    3. '<|end|>' → logprob: -2.541083812713623
    4. ' 
' → logprob: -2.791083812713623
    5. '    
' → logprob: -3.791083812713623
    6. '  
' → logprob: -5.791083812713623
    7. ' ' → logprob: -6.041083812713623
    8. '<|end|>' → logprob: -6.791083812713623
    9. '   
' → logprob: -7.041083812713623
    10. 'def' → logprob: -7.291083812713623

Token 103: ' def' (ID: 1056)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.14834074676036835
    2. '   ' → logprob: -2.3983407020568848
    3. ' 
' → logprob: -3.7733407020568848
    4. '    
' → logprob: -4.398340702056885
    5. ' ' → logprob: -5.648340702056885
    6. 'def' (adapté à ' def') → logprob: -6.148340702056885
    7. '<|end|>' → logprob: -6.273340702056885
    8. '  
' → logprob: -6.773340702056885
    9. '\n' → logprob: -7.523340702056885
    10. '' → logprob: -7.773340702056885

Token 104: ' __' (ID: 2516)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.8794559240341187
    2. ' __' → logprob: -0.8794559240341187
    3. ' def' → logprob: -2.629456043243408
    4. 'is' → logprob: -3.004456043243408
    5. '__' → logprob: -3.879456043243408
    6. 'def' → logprob: -4.379456043243408
    7. ' ' → logprob: -5.004456043243408
    8. ' ==' → logprob: -5.129456043243408
    9. ' ' → logprob: -7.754456043243408
    10. '_is' → logprob: -8.00445556640625

Token 105: 'repr' (ID: 67002)
  Prédit: 'eq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eq' → logprob: -0.0005101414280943573
    2. 'repr' → logprob: -8.125510215759277
    3. 'hash' → logprob: -8.500510215759277
    4. 'lt' → logprob: -12.000510215759277
    5. ' eq' → logprob: -13.000510215759277
    6. 'str' → logprob: -13.500510215759277
    7. '_eq' → logprob: -15.125510215759277
    8. 'init' → logprob: -15.250510215759277
    9. 'iter' → logprob: -15.875510215759277
    10. 'e' → logprob: -16.50050926208496

Token 106: '__(' (ID: 8241)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.2675095498561859
    2. '__(' → logprob: -1.5175095796585083
    3. '__(
' → logprob: -5.017509460449219
    4. '__('' → logprob: -5.142509460449219
    5. '(' → logprob: -6.642509460449219
    6. '_' → logprob: -6.767509460449219
    7. '__("' → logprob: -8.392509460449219
    8. '___' → logprob: -9.392509460449219
    9. '__((' → logprob: -9.392509460449219
    10. '(self' → logprob: -10.642509460449219

Token 107: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00025680975522845984
    2. ')' → logprob: -8.625256538391113
    3. ' self' → logprob: -9.500256538391113
    4. '
' → logprob: -13.375256538391113
    5. '(self' → logprob: -15.250256538391113
    6. ' ' → logprob: -16.00025749206543
    7. 'Self' → logprob: -16.37525749206543
    8. '

' → logprob: -16.75025749206543
    9. '	self' → logprob: -16.75025749206543
    10. '_self' → logprob: -17.25025749206543

Token 108: '):
' (ID: 1883)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.8002172708511353
    2. '):' → logprob: -1.3002172708511353
    3. ')' → logprob: -1.5502172708511353
    4. '__:' → logprob: -3.6752171516418457
    5. '__)' → logprob: -4.300217151641846
    6. '__.__' → logprob: -4.425217151641846
    7. '):
' → logprob: -5.675217151641846
    8. ').__' → logprob: -5.675217151641846
    9. ')__' → logprob: -6.425217151641846
    10. '.' → logprob: -6.925217151641846

Token 109: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0023304554633796215
    2. 'return' → logprob: -6.377330303192139
    3. ' return' → logprob: -7.377330303192139
    4. 'f' → logprob: -13.877330780029297
    5. ' f' → logprob: -14.502330780029297
    6. '   ' → logprob: -14.877330780029297
    7. '           ' → logprob: -14.877330780029297
    8. '      ' → logprob: -15.127330780029297
    9. '{return' → logprob: -15.877330780029297
    10. '	return' → logprob: -16.127330780029297

Token 110: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.013452905230224133
    2. ' return' → logprob: -4.513453006744385
    3. '       ' → logprob: -6.263453006744385
    4. 'f' → logprob: -7.638453006744385
    5. ' f' → logprob: -11.638452529907227
    6. '   ' → logprob: -12.638452529907227
    7. '	return' → logprob: -13.388452529907227
    8. '           ' → logprob: -13.888452529907227
    9. '{return' → logprob: -14.138452529907227
    10. '
' → logprob: -14.763452529907227

Token 111: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.06197160854935646
    2. ' f' → logprob: -2.811971664428711
    3. '	f' → logprob: -13.561971664428711
    4. ' ' → logprob: -13.811971664428711
    5. ''f' → logprob: -13.936971664428711
    6. '(f' → logprob: -14.561971664428711
    7. 'F' → logprob: -15.686971664428711
    8. '   ' → logprob: -16.93697166442871
    9. '```' → logprob: -16.93697166442871
    10. '"' → logprob: -16.93697166442871

Token 112: '"' (ID: 1)
  Prédit: '(Grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Grid' → logprob: -0.3460599184036255
    2. 'f' → logprob: -2.221059799194336
    3. '(f' → logprob: -2.596059799194336
    4. '(' → logprob: -2.971059799194336
    5. '"' → logprob: -3.721059799194336
    6. '<Grid' → logprob: -4.346059799194336
    7. 'Grid' → logprob: -4.596059799194336
    8. '("' → logprob: -5.221059799194336
    9. '("("' → logprob: -6.471059799194336
    10. ''' → logprob: -6.471059799194336

Token 113: 'Grid' (ID: 5351)
  Prédit: 'Grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Grid' → logprob: -7.231182826217264e-05
    2. '<Grid' → logprob: -9.625072479248047
    3. ' Grid' → logprob: -12.750072479248047
    4. '(Grid' → logprob: -12.750072479248047
    5. '	Grid' → logprob: -16.125072479248047
    6. '/Grid' → logprob: -16.375072479248047
    7. '.Grid' → logprob: -16.375072479248047
    8. '"' → logprob: -16.375072479248047
    9. 'grid' → logprob: -17.625072479248047
    10. '<' → logprob: -17.625072479248047

Token 114: 'Point' (ID: 4219)
  Prédit: 'Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: 0.0
    2. '(Point' → logprob: -18.625
    3. 'P' → logprob: -19.125
    4. ' Point' → logprob: -19.875
    5. '<Point' → logprob: -20.0
    6. '.Point' → logprob: -20.75
    7. 'Po' → logprob: -21.375
    8. '	Point' → logprob: -21.375
    9. 'point' → logprob: -21.5
    10. '_Point' → logprob: -21.625

Token 115: '({' (ID: 3972)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.318759948015213
    2. '({' → logprob: -1.3187599182128906
    3. '(' → logprob: -5.443759918212891
    4. '(f' → logprob: -7.193759918212891
    5. '(self' → logprob: -7.943759918212891
    6. '('{' → logprob: -11.69375991821289
    7. '(Grid' → logprob: -11.81875991821289
    8. '({'' → logprob: -11.81875991821289
    9. '(X' → logprob: -12.19375991821289
    10. ' (' → logprob: -12.19375991821289

Token 116: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -3.173704271830502e-06
    2. ' self' → logprob: -13.00000286102295
    3. 'repr' → logprob: -14.37500286102295
    4. '{' → logprob: -15.75000286102295
    5. 'x' → logprob: -17.125003814697266
    6. '
' → logprob: -17.875003814697266
    7. '(self' → logprob: -18.375003814697266
    8. 'elf' → logprob: -19.375003814697266
    9. '

' → logprob: -19.750003814697266
    10. '   ' → logprob: -19.750003814697266

Token 117: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.0036655140575021505
    2. '.' → logprob: -5.628665447235107
    3. '.user' → logprob: -11.003665924072266
    4. ').' → logprob: -11.253665924072266
    5. 'x' → logprob: -11.378665924072266
    6. '.token' → logprob: -12.003665924072266
    7. '}.' → logprob: -12.378665924072266
    8. ' .' → logprob: -12.628665924072266
    9. 'self' → logprob: -12.628665924072266
    10. ',' → logprob: -13.628665924072266

Token 118: '},{' (ID: 34684)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0017785917734727263
    2. '},' → logprob: -6.376778602600098
    3. ' ,' → logprob: -10.001778602600098
    4. '},{' → logprob: -11.001778602600098
    5. '}' → logprob: -12.376778602600098
    6. '<|end|>' → logprob: -12.626778602600098
    7. ',
' → logprob: -13.001778602600098
    8. ',{' → logprob: -14.376778602600098
    9. '{' → logprob: -14.376778602600098
    10. '),' → logprob: -14.876778602600098

Token 119: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.003600544296205044
    2. ' self' → logprob: -5.628600597381592
    3. '<|end|>' → logprob: -15.503600120544434
    4. '	self' → logprob: -16.50360107421875
    5. 'y' → logprob: -16.87860107421875
    6. ',self' → logprob: -17.25360107421875
    7. '(self' → logprob: -17.50360107421875
    8. '{' → logprob: -17.62860107421875
    9. '=self' → logprob: -17.75360107421875
    10. '[self' → logprob: -17.87860107421875

Token 120: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.00036144492332823575
    2. '.' → logprob: -8.250361442565918
    3. ',y' → logprob: -9.625361442565918
    4. ',' → logprob: -11.125361442565918
    5. '.x' → logprob: -11.250361442565918
    6. '},{' → logprob: -13.125361442565918
    7. 'y' → logprob: -13.250361442565918
    8. ' .' → logprob: -13.500361442565918
    9. ',.' → logprob: -15.250361442565918
    10. '},' → logprob: -15.500361442565918

Token 121: '},' (ID: 4180)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002193563850596547
    2. ' ,' → logprob: -6.252193450927734
    3. ',{' → logprob: -8.627193450927734
    4. ')' → logprob: -10.627193450927734
    5. ',f' → logprob: -11.252193450927734
    6. ',
' → logprob: -11.502193450927734
    7. '{' → logprob: -11.752193450927734
    8. ',"' → logprob: -12.252193450927734
    9. '   ' → logprob: -12.377193450927734
    10. ',self' → logprob: -12.752193450927734

Token 122: ''{' (ID: 47735)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.232431560754776
    2. ''{' → logprob: -1.7324315309524536
    3. 'repr' → logprob: -3.732431650161743
    4. '{' → logprob: -5.357431411743164
    5. ' repr' → logprob: -7.357431411743164
    6. ' self' → logprob: -7.482431411743164
    7. ' '{' → logprob: -8.232431411743164
    8. 'f' → logprob: -8.732431411743164
    9. ''f' → logprob: -8.857431411743164
    10. ''' → logprob: -9.982431411743164

Token 123: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.08921884000301361
    2. '{' → logprob: -2.464218854904175
    3. '{
' → logprob: -9.089219093322754
    4. ' self' → logprob: -9.464219093322754
    5. '<|end|>' → logprob: -9.714219093322754
    6. '[self' → logprob: -10.964219093322754
    7. '	self' → logprob: -12.464219093322754
    8. '.' → logprob: -13.589219093322754
    9. '{}' → logprob: -13.714219093322754
    10. '
' → logprob: -13.839219093322754

Token 124: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -1.3544423381972592e-05
    2. 'terrain' → logprob: -11.25001335144043
    3. ' .' → logprob: -15.12501335144043
    4. '..' → logprob: -17.87501335144043
    5. '.
' → logprob: -18.12501335144043
    6. '._' → logprob: -18.50001335144043
    7. ').' → logprob: -18.75001335144043
    8. '}.' → logprob: -18.87501335144043
    9. '
' → logprob: -19.12501335144043
    10. '   ' → logprob: -19.25001335144043

Token 125: 'terrain' (ID: 94865)
  Prédit: 'terrain'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'terrain' → logprob: -3.810037742368877e-05
    2. 'terr' → logprob: -10.750038146972656
    3. 'territ' → logprob: -12.000038146972656
    4. ' terrain' → logprob: -12.125038146972656
    5. 'ter' → logprob: -13.250038146972656
    6. 'terra' → logprob: -13.500038146972656
    7. ')' → logprob: -15.000038146972656
    8. '.' → logprob: -15.625038146972656
    9. '```' → logprob: -15.750038146972656
    10. '}' → logprob: -15.875038146972656

Token 126: '}')' (ID: 155700)
  Prédit: '')"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '')"' → logprob: -9.805981972021982e-05
    2. '')' → logprob: -9.25009822845459
    3. '}' → logprob: -14.00009822845459
    4. ''' → logprob: -14.75009822845459
    5. ')"' → logprob: -15.62509822845459
    6. '')}' → logprob: -15.62509822845459
    7. '}"' → logprob: -15.87509822845459
    8. '"' → logprob: -16.750097274780273
    9. ''}' → logprob: -16.875097274780273
    10. ''"' → logprob: -16.875097274780273

Token 127: '"

' (ID: 2678)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 128: 'class' (ID: 1444)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03392057120800018
    2. 'class' → logprob: -3.7839205265045166
    3. 'def' → logprob: -5.658920764923096
    4. ' 
' → logprob: -5.783920764923096
    5. 'd' → logprob: -6.908920764923096
    6. '

' → logprob: -7.408920764923096
    7. '' → logprob: -7.658920764923096
    8. '    
' → logprob: -7.658920764923096
    9. '  
' → logprob: -7.658920764923096
    10. '   ' → logprob: -8.783920288085938

Token 129: ' Castle' (ID: 38570)
  Prédit: ' Grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Grid' → logprob: -0.1696127951145172
    2. ' Maze' → logprob: -2.7946128845214844
    3. ' Path' → logprob: -3.6696128845214844
    4. ' Pathfinder' → logprob: -3.9196128845214844
    5. ' BFS' → logprob: -4.169612884521484
    6. 'Grid' → logprob: -4.169612884521484
    7. ' Terrain' → logprob: -5.544612884521484
    8. ' Flood' → logprob: -5.669612884521484
    9. ' Bread' → logprob: -5.919612884521484
    10. ' River' → logprob: -6.919612884521484

Token 130: 'Map' (ID: 2307)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07790332287549973
    2. 'Explorer' → logprob: -2.7029032707214355
    3. 'Searcher' → logprob: -6.2029032707214355
    4. 'Path' → logprob: -6.5779032707214355
    5. 'B' → logprob: -6.7029032707214355
    6. 'Finder' → logprob: -7.5779032707214355
    7. 'Map' → logprob: -7.5779032707214355
    8. 'Traversal' → logprob: -7.8279032707214355
    9. 'Maze' → logprob: -8.452903747558594
    10. 'Pat' → logprob: -8.452903747558594

Token 131: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005119257839396596
    2. ':
' → logprob: -7.62551212310791
    3. ':def' → logprob: -11.75051212310791
    4. ' :' → logprob: -12.62551212310791
    5. '<|end|>' → logprob: -12.87551212310791
    6. '(' → logprob: -13.12551212310791
    7. '):' → logprob: -13.25051212310791
    8. '():' → logprob: -13.75051212310791
    9. 'def' → logprob: -13.87551212310791
    10. '(object' → logprob: -13.87551212310791

Token 132: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003462748369202018
    2. '    
' → logprob: -6.503462791442871
    3. 'def' → logprob: -6.753462791442871
    4. ' def' → logprob: -7.253462791442871
    5. '<|end|>' → logprob: -11.128462791442871
    6. '```' → logprob: -11.503462791442871
    7. ')' → logprob: -11.753462791442871
    8. ':' → logprob: -11.878462791442871
    9. '(' → logprob: -11.878462791442871
    10. '	def' → logprob: -12.003462791442871

Token 133: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.448190838098526
    2. 'def' (adapté à ' def') → logprob: -1.1981908082962036
    3. '   ' → logprob: -2.823190927505493
    4. ' ' → logprob: -10.948190689086914
    5. '```' → logprob: -11.448190689086914
    6. '	def' → logprob: -11.948190689086914
    7. ' __' → logprob: -12.573190689086914
    8. '    ' → logprob: -12.698190689086914
    9. 'class' → logprob: -12.823190689086914
    10. ')' → logprob: -12.823190689086914

Token 134: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.008224709890782833
    2. '_init' → logprob: -5.1332244873046875
    3. 'init' → logprob: -7.0082244873046875
    4. ' init' → logprob: -7.1332244873046875
    5. '__' → logprob: -8.258224487304688
    6. ' ' → logprob: -9.008224487304688
    7. ' def' → logprob: -9.133224487304688
    8. ' ___' → logprob: -10.508224487304688
    9. ' ```' → logprob: -10.883224487304688
    10. '  ' → logprob: -11.008224487304688

Token 135: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -6.034592388459714e-06
    2. '_init' → logprob: -13.250005722045898
    3. 'int' → logprob: -13.750005722045898
    4. '__' → logprob: -13.875005722045898
    5. 'it' → logprob: -14.375005722045898
    6. 'def' → logprob: -14.375005722045898
    7. ' init' → logprob: -15.250005722045898
    8. '```' → logprob: -15.500005722045898
    9. 'in' → logprob: -15.875005722045898
    10. 'nit' → logprob: -16.0000057220459

Token 136: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.002612878568470478
    2. '(self' → logprob: -6.377613067626953
    3. '__(
' → logprob: -7.752613067626953
    4. '__' → logprob: -8.252613067626953
    5. '(' → logprob: -9.002613067626953
    6. '<|end|>' → logprob: -10.252613067626953
    7. '__((' → logprob: -10.627613067626953
    8. '__(*' → logprob: -11.252613067626953
    9. '_(' → logprob: -11.752613067626953
    10. ' (' → logprob: -12.252613067626953

Token 137: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.011057252995669842
    2. ' self' → logprob: -4.511057376861572
    3. ')' → logprob: -12.761056900024414
    4. '(self' → logprob: -13.636056900024414
    5. '<|end|>' → logprob: -13.636056900024414
    6. ',' → logprob: -13.886056900024414
    7. '_self' → logprob: -14.511056900024414
    8. '<|end|>' → logprob: -14.511056900024414
    9. '   ' → logprob: -14.636056900024414
    10. '
' → logprob: -15.011056900024414

Token 138: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.21010123193264008
    2. 'self' → logprob: -1.7101012468338013
    3. ' self' → logprob: -5.335101127624512
    4. ' ,' → logprob: -5.710101127624512
    5. '   ' → logprob: -8.835101127624512
    6. ',self' → logprob: -8.960101127624512
    7. '__,' → logprob: -9.335101127624512
    8. '(self' → logprob: -9.960101127624512
    9. '_,' → logprob: -11.085101127624512
    10. '_self' → logprob: -11.335101127624512

Token 139: ' width' (ID: 4345)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.0578502416610718
    2. 'grid' → logprob: -1.4328502416610718
    3. ' grid' → logprob: -1.5578502416610718
    4. 'width' → logprob: -2.3078503608703613
    5. ' self' → logprob: -2.9328503608703613
    6. ' width' → logprob: -3.0578503608703613
    7. ' map' → logprob: -7.057850360870361
    8. '   ' → logprob: -7.307850360870361
    9. 'rows' → logprob: -7.307850360870361
    10. 'map' → logprob: -7.557850360870361

Token 140: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012901952490210533
    2. ':' → logprob: -5.137901782989502
    3. ' ,' → logprob: -5.512901782989502
    4. '=' → logprob: -6.137901782989502
    5. '<|end|>' → logprob: -7.887901782989502
    6. ':int' → logprob: -8.63790225982666
    7. '<|end|>' → logprob: -9.13790225982666
    8. ')' → logprob: -10.51290225982666
    9. ',int' → logprob: -11.01290225982666
    10. '=int' → logprob: -11.26290225982666

Token 141: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.08946859836578369
    2. ' int' → logprob: -2.464468479156494
    3. ':int' → logprob: -8.964468955993652
    4. ',' → logprob: -9.214468955993652
    5. ' ' → logprob: -9.339468955993652
    6. '<|end|>' → logprob: -9.464468955993652
    7. ',int' → logprob: -9.589468955993652
    8. '10' → logprob: -11.464468955993652
    9. 'width' → logprob: -11.589468955993652
    10. '0' → logprob: -11.589468955993652

Token 142: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.158350151963532e-05
    2. ' ,' → logprob: -9.750061988830566
    3. ',width' → logprob: -13.125061988830566
    4. '<|end|>' → logprob: -14.250061988830566
    5. ',
' → logprob: -15.875061988830566
    6. '):' → logprob: -16.12506103515625
    7. ',int' → logprob: -16.25006103515625
    8. '‌,' → logprob: -16.37506103515625
    9. '   ' → logprob: -16.87506103515625
    10. '<|end|>' → logprob: -17.00006103515625

Token 143: ' height' (ID: 4679)
  Prédit: 'height'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'height' → logprob: -0.47411322593688965
    2. ' height' → logprob: -0.9741132259368896
    3. '   ' → logprob: -11.349113464355469
    4. ' grid' → logprob: -12.099113464355469
    5. 'grid' → logprob: -12.099113464355469
    6. '	height' → logprob: -12.349113464355469
    7. ' ' → logprob: -12.849113464355469
    8. ',' → logprob: -13.849113464355469
    9. ',height' → logprob: -13.849113464355469
    10. ')' → logprob: -14.224113464355469

Token 144: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.013986255042254925
    2. '):' → logprob: -4.513986110687256
    3. ':' → logprob: -6.638986110687256
    4. '<|end|>' → logprob: -7.388986110687256
    5. ')' → logprob: -7.638986110687256
    6. '<|end|>' → logprob: -8.638986587524414
    7. ':int' → logprob: -9.138986587524414
    8. ' ,' → logprob: -9.388986587524414
    9. ',int' → logprob: -9.513986587524414
    10. '):
' → logprob: -10.138986587524414

Token 145: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.16047240793704987
    2. ' int' → logprob: -1.9104723930358887
    3. ':int' → logprob: -9.410472869873047
    4. ',' → logprob: -9.535472869873047
    5. ')' → logprob: -10.660472869873047
    6. '   ' → logprob: -11.160472869873047
    7. '):
' → logprob: -11.160472869873047
    8. '):' → logprob: -11.160472869873047
    9. ',int' → logprob: -11.285472869873047
    10. '=int' → logprob: -12.410472869873047

Token 146: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.08210654556751251
    2. ',' → logprob: -2.582106590270996
    3. '):
' → logprob: -6.207106590270996
    4. ')' → logprob: -6.832106590270996
    5. ' ):' → logprob: -9.332106590270996
    6. ' ,' → logprob: -11.707106590270996
    7. '   ' → logprob: -12.457106590270996
    8. ':' → logprob: -12.582106590270996
    9. '):
' → logprob: -12.582106590270996
    10. '):

' → logprob: -12.957106590270996

Token 147: ' grid' (ID: 10586)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.43529996275901794
    2. ' grid' → logprob: -1.1852999925613403
    3. ' terrain' → logprob: -3.560299873352051
    4. 'terrain' → logprob: -4.435299873352051
    5. 'points' → logprob: -5.685299873352051
    6. ' points' → logprob: -6.435299873352051
    7. 'map' → logprob: -7.310299873352051
    8. ' map' → logprob: -7.935299873352051
    9. '   ' → logprob: -7.935299873352051
    10. 'data' → logprob: -8.81029987335205

Token 148: '_lines' (ID: 42980)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.012611371465027332
    2. '):' → logprob: -4.387611389160156
    3. '_points' → logprob: -10.137611389160156
    4. '):
' → logprob: -10.637611389160156
    5. ')' → logprob: -11.637611389160156
    6. ' :' → logprob: -11.762611389160156
    7. '_:' → logprob: -12.387611389160156
    8. ']:' → logprob: -12.512611389160156
    9. ' ):' → logprob: -12.637611389160156
    10. ':[[' → logprob: -12.637611389160156

Token 149: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0851902887225151
    2. '):' → logprob: -2.5851902961730957
    3. '):
' → logprob: -5.085190296173096
    4. ')' → logprob: -10.210189819335938
    5. '   ' → logprob: -11.085189819335938
    6. ' ):' → logprob: -11.210189819335938
    7. ' :' → logprob: -11.960189819335938
    8. '```' → logprob: -12.460189819335938
    9. '):
' → logprob: -12.710189819335938
    10. '):

' → logprob: -12.710189819335938

Token 150: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.004810303915292025
    2. ' List' → logprob: -5.379810333251953
    3. '[List' → logprob: -9.254810333251953
    4. ')' → logprob: -9.629810333251953
    5. 'list' → logprob: -10.754810333251953
    6. '):
' → logprob: -13.254810333251953
    7. '```' → logprob: -13.504810333251953
    8. '   ' → logprob: -14.004810333251953
    9. '(List' → logprob: -14.004810333251953
    10. '):' → logprob: -15.004810333251953

Token 151: '[str' (ID: 33439)
  Prédit: '[str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -3.173704271830502e-06
    2. '[List' → logprob: -13.00000286102295
    3. 'str' → logprob: -14.25000286102295
    4. '[' → logprob: -15.37500286102295
    5. ')' → logprob: -17.750003814697266
    6. '[String' → logprob: -17.750003814697266
    7. '[
' → logprob: -18.000003814697266
    8. 'Str' → logprob: -18.250003814697266
    9. '```' → logprob: -18.250003814697266
    10. '
' → logprob: -20.250003814697266

Token 152: ']):
' (ID: 51989)
  Prédit: ']):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']):' → logprob: -0.35687172412872314
    2. ']):
' → logprob: -1.3568717241287231
    3. '):' → logprob: -3.6068716049194336
    4. ']' → logprob: -5.356871604919434
    5. '])' → logprob: -5.356871604919434
    6. '):
' → logprob: -5.731871604919434
    7. ')' → logprob: -5.981871604919434
    8. '   ' → logprob: -9.106871604919434
    9. ']:' → logprob: -9.231871604919434
    10. '       ' → logprob: -10.481871604919434

Token 153: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.699428379535675
    2. '       ' → logprob: -0.699428379535675
    3. ',' → logprob: -6.449428558349609
    4. '<|end|>' → logprob: -6.574428558349609
    5. '):' → logprob: -7.199428558349609
    6. '   ' → logprob: -7.324428558349609
    7. '
' → logprob: -7.824428558349609
    8. '        
' → logprob: -7.824428558349609
    9. ':
' → logprob: -8.19942855834961
    10. ')' → logprob: -8.44942855834961

Token 154: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.028993094339966774
    2. '       ' → logprob: -3.9039931297302246
    3. ' self' → logprob: -4.778993129730225
    4. '   ' → logprob: -11.903992652893066
    5. '	self' → logprob: -13.153992652893066
    6. ' ' → logprob: -13.653992652893066
    7. '```' → logprob: -15.528992652893066
    8. '(self' → logprob: -15.653992652893066
    9. '      ' → logprob: -15.903992652893066
    10. 'super' → logprob: -16.278993606567383

Token 155: '.width' (ID: 11038)
  Prédit: '.width'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.width' → logprob: -0.0001773192489054054
    2. '.' → logprob: -8.750177383422852
    3. ' .' → logprob: -11.000177383422852
    4. 'width' → logprob: -13.875177383422852
    5. '.height' → logprob: -14.500177383422852
    6. '.w' → logprob: -14.750177383422852
    7. '.grid' → logprob: -15.125177383422852
    8. ' width' → logprob: -17.12517738342285
    9. '	width' → logprob: -17.62517738342285
    10. '.Width' → logprob: -17.87517738342285

Token 156: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31339406967163086
    2. '=' → logprob: -1.3133940696716309
    3. ',' → logprob: -9.188394546508789
    4. ')' → logprob: -11.688394546508789
    5. ' =
' → logprob: -12.063394546508789
    6. ' ' → logprob: -12.188394546508789
    7. '<|end|>' → logprob: -12.313394546508789
    8. ' ,' → logprob: -13.688394546508789
    9. '        ' → logprob: -13.688394546508789
    10. '    ' → logprob: -14.063394546508789

Token 157: ' width' (ID: 4345)
  Prédit: ' width'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' width' → logprob: -0.04859066382050514
    2. 'width' → logprob: -3.048590660095215
    3. '(width' → logprob: -13.048590660095215
    4. '	width' → logprob: -14.798590660095215
    5. '_width' → logprob: -15.048590660095215
    6. ',width' → logprob: -15.548590660095215
    7. ';width' → logprob: -15.923590660095215
    8. '        ' → logprob: -16.79859161376953
    9. ' ' → logprob: -17.29859161376953
    10. '.width' → logprob: -17.42359161376953

Token 158: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 159: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011809279210865498
    2. '<|end|>' → logprob: -4.761809349060059
    3. '
' → logprob: -6.011809349060059
    4. 'self' → logprob: -8.511809349060059
    5. '<|end|>' → logprob: -8.886809349060059
    6. '        
' → logprob: -8.886809349060059
    7. ',' → logprob: -9.136809349060059
    8. 'newline' → logprob: -10.511809349060059
    9. ' 
' → logprob: -10.886809349060059
    10. '#' → logprob: -11.261809349060059

Token 160: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.15317930281162262
    2. '       ' → logprob: -2.528179407119751
    3. ' self' → logprob: -2.778179407119751
    4. '
' → logprob: -10.278179168701172
    5. '	self' → logprob: -11.403179168701172
    6. ' ' → logprob: -11.778179168701172
    7. '   ' → logprob: -12.028179168701172
    8. '      ' → logprob: -13.778179168701172
    9. ' ' → logprob: -14.153179168701172
    10. '        
' → logprob: -14.153179168701172

Token 161: '.height' (ID: 11682)
  Prédit: '.height'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.height' → logprob: -0.0011246218346059322
    2. '.' → logprob: -6.876124858856201
    3. 'height' → logprob: -9.376124382019043
    4. ' .' → logprob: -12.751124382019043
    5. '.width' → logprob: -13.001124382019043
    6. '.grid' → logprob: -14.251124382019043
    7. ' height' → logprob: -14.376124382019043
    8. '.
' → logprob: -15.501124382019043
    9. '	height' → logprob: -15.751124382019043
    10. '.he' → logprob: -15.876124382019043

Token 162: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18026866018772125
    2. '=' → logprob: -1.80526864528656
    3. '<|end|>' → logprob: -7.68026876449585
    4. ',' → logprob: -10.930268287658691
    5. '<|end|>' → logprob: -11.180268287658691
    6. ' ' → logprob: -11.180268287658691
    7. ':' → logprob: -12.180268287658691
    8. '=int' → logprob: -12.555268287658691
    9. ' =
' → logprob: -12.930268287658691
    10. ')' → logprob: -13.180268287658691

Token 163: ' height' (ID: 4679)
  Prédit: 'height'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'height' → logprob: -0.07889077812433243
    2. ' height' → logprob: -2.578890800476074
    3. '(height' → logprob: -14.578890800476074
    4. 'int' → logprob: -15.828890800476074
    5. '.height' → logprob: -16.078889846801758
    6. 'width' → logprob: -16.453889846801758
    7. '	height' → logprob: -16.578889846801758
    8. '_height' → logprob: -17.328889846801758
    9. 'Height' → logprob: -17.703889846801758
    10. ' ' → logprob: -17.703889846801758

Token 164: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007002840866334736
    2. 'self' → logprob: -7.6257004737854
    3. ' self' → logprob: -9.250699996948242
    4. ',' → logprob: -9.375699996948242
    5. '
' → logprob: -11.500699996948242
    6. '<|end|>' → logprob: -12.000699996948242
    7. '   ' → logprob: -12.125699996948242
    8. ' ' → logprob: -13.250699996948242
    9. '#' → logprob: -13.500699996948242
    10. '        
' → logprob: -13.750699996948242

Token 165: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00019150081789121032
    2. 'self' → logprob: -8.875191688537598
    3. ' self' → logprob: -10.000191688537598
    4. '
' → logprob: -13.125191688537598
    5. ',' → logprob: -13.625191688537598
    6. '        
' → logprob: -14.125191688537598
    7. '   ' → logprob: -14.125191688537598
    8. '<|end|>' → logprob: -15.125191688537598
    9. '      ' → logprob: -15.250191688537598
    10. ' ' → logprob: -15.375191688537598

Token 166: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0005228889058344066
    2. '       ' → logprob: -8.25052261352539
    3. ' self' → logprob: -8.25052261352539
    4. 'grid' → logprob: -16.12552261352539
    5. '	self' → logprob: -16.62552261352539
    6. '   ' → logprob: -16.87552261352539
    7. '#' → logprob: -17.12552261352539
    8. '        
' → logprob: -18.00052261352539
    9. '[self' → logprob: -18.37552261352539
    10. '```' → logprob: -18.50052261352539

Token 167: '.grid' (ID: 19269)
  Prédit: '.grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.grid' → logprob: -0.0001698094274615869
    2. '.points' → logprob: -9.50016975402832
    3. '.' → logprob: -10.00016975402832
    4. ' .' → logprob: -10.87516975402832
    5. '._' → logprob: -11.00016975402832
    6. '.map' → logprob: -12.12516975402832
    7. 'grid' → logprob: -12.62516975402832
    8. '_grid' → logprob: -14.00016975402832
    9. '.point' → logprob: -14.25016975402832
    10. '.Grid' → logprob: -14.62516975402832

Token 168: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18565677106380463
    2. '=' → logprob: -1.9356567859649658
    3. ':' → logprob: -3.685656785964966
    4. '_points' → logprob: -11.060656547546387
    5. ' ' → logprob: -12.060656547546387
    6. ' :' → logprob: -12.560656547546387
    7. '=[]' → logprob: -13.560656547546387
    8. '   ' → logprob: -13.810656547546387
    9. 'points' → logprob: -13.935656547546387
    10. 'Points' → logprob: -14.810656547546387

Token 169: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.001847962848842144
    2. ' List' → logprob: -6.376847743988037
    3. '[List' → logprob: -8.876848220825195
    4. 'list' → logprob: -12.626848220825195
    5. 'Dict' → logprob: -14.251848220825195
    6. '	List' → logprob: -14.376848220825195
    7. '[[' → logprob: -14.376848220825195
    8. 'dict' → logprob: -14.501848220825195
    9. '   ' → logprob: -15.626848220825195
    10. ' ' → logprob: -16.626848220825195

Token 170: '[List' (ID: 113982)
  Prédit: '[List'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[List' → logprob: -0.00033558503491804004
    2. '[' → logprob: -8.000335693359375
    3. '   ' → logprob: -17.125335693359375
    4. '[
' → logprob: -17.375335693359375
    5. ']' → logprob: -17.875335693359375
    6. 'List' → logprob: -18.000335693359375
    7. ' =' → logprob: -18.625335693359375
    8. '[[' → logprob: -18.625335693359375
    9. '[int' → logprob: -19.250335693359375
    10. '=' → logprob: -19.875335693359375

Token 171: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.2664456789934775e-06
    2. '[str' → logprob: -14.250000953674316
    3. ']' → logprob: -15.125000953674316
    4. '[
' → logprob: -16.000001907348633
    5. '<Grid' → logprob: -16.000001907348633
    6. ' [' → logprob: -17.000001907348633
    7. 'Grid' → logprob: -18.250001907348633
    8. 'Optional' → logprob: -18.375001907348633
    9. '[[' → logprob: -18.500001907348633
    10. '[int' → logprob: -18.500001907348633

Token 172: 'Grid' (ID: 5351)
  Prédit: 'Grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Grid' → logprob: -0.0024322629906237125
    2. 'str' → logprob: -6.252432346343994
    3. 'Optional' → logprob: -7.627432346343994
    4. ' Grid' → logprob: -11.127431869506836
    5. ' str' → logprob: -15.127431869506836
    6. 'grid' → logprob: -15.377431869506836
    7. 'Str' → logprob: -15.502431869506836
    8. '	Grid' → logprob: -15.502431869506836
    9. '<Grid' → logprob: -15.752431869506836
    10. '   ' → logprob: -15.752431869506836

Token 173: 'Point' (ID: 4219)
  Prédit: 'Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: 0.0
    2. '	Point' → logprob: -18.125
    3. '<Point' → logprob: -18.25
    4. '_point' → logprob: -18.875
    5. '_Point' → logprob: -19.125
    6. 'Points' → logprob: -19.125
    7. ' Point' → logprob: -19.25
    8. 'point' → logprob: -19.375
    9. '_POINT' → logprob: -19.375
    10. '[' → logprob: -20.125

Token 174: ']]' (ID: 8928)
  Prédit: ']]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]' → logprob: -4.961759259458631e-06
    2. ']]=' → logprob: -12.500004768371582
    3. ' ]]' → logprob: -14.500004768371582
    4. ']' → logprob: -15.000004768371582
    5. ']]
' → logprob: -15.750004768371582
    6. ']]

' → logprob: -16.1250057220459
    7. ']]]' → logprob: -17.0000057220459
    8. ')]' → logprob: -17.6250057220459
    9. '"]]' → logprob: -18.6250057220459
    10. '']]' → logprob: -19.0000057220459

Token 175: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07890631258487701
    2. ' =' → logprob: -2.578906297683716
    3. '=[]' → logprob: -11.703906059265137
    4. ']' → logprob: -12.578906059265137
    5. '<|end|>' → logprob: -13.078906059265137
    6. ')' → logprob: -13.328906059265137
    7. '=create' → logprob: -14.828906059265137
    8. '[' → logprob: -14.828906059265137
    9. ' ' → logprob: -16.078907012939453
    10. '=[]
' → logprob: -16.203907012939453

Token 176: ' [
' (ID: 4240)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.17110344767570496
    2. '[
' → logprob: -1.9211034774780273
    3. '[' → logprob: -4.921103477478027
    4. '[]' → logprob: -6.671103477478027
    5. '[]
' → logprob: -6.671103477478027
    6. ' [[' → logprob: -7.171103477478027
    7. ' [
' → logprob: -8.546103477478027
    8. ' [' → logprob: -10.921103477478027
    9. '[]

' → logprob: -11.671103477478027
    10. ' []' → logprob: -13.171103477478027

Token 177: '           ' (ID: 352)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.13990923762321472
    2. '[
' → logprob: -2.139909267425537
    3. '           ' → logprob: -4.389909267425537
    4. ' [' → logprob: -7.764909267425537
    5. ' [
' → logprob: -10.514908790588379
    6. '[List' → logprob: -11.389908790588379
    7. '   ' → logprob: -11.389908790588379
    8. '[self' → logprob: -11.889908790588379
    9. '       ' → logprob: -12.389908790588379
    10. '               ' → logprob: -12.514908790588379

Token 178: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' (adapté à ' [') → logprob: -0.12795981764793396
    2. '[
' → logprob: -2.127959728240967
    3. '           ' → logprob: -7.127959728240967
    4. ' [' → logprob: -8.877960205078125
    5. '[List' → logprob: -10.002960205078125
    6. '[self' → logprob: -11.252960205078125
    7. ' [
' → logprob: -11.377960205078125
    8. '               ' → logprob: -11.877960205078125
    9. 'Grid' → logprob: -12.377960205078125
    10. '[Index' → logprob: -13.752960205078125

Token 179: 'Grid' (ID: 5351)
  Prédit: 'Grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Grid' → logprob: -5.512236498361744e-07
    2. ' Grid' → logprob: -14.500000953674316
    3. '	Grid' → logprob: -18.75
    4. '(Grid' → logprob: -19.25
    5. '<Grid' → logprob: -21.0
    6. '
' → logprob: -22.625
    7. '.Grid' → logprob: -22.625
    8. 'GRID' → logprob: -23.5
    9. '   ' → logprob: -23.625
    10. '           ' → logprob: -23.75

Token 180: 'Point' (ID: 4219)
  Prédit: 'Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -1.9361264946837764e-07
    2. '<Point' → logprob: -17.5
    3. '(Point' → logprob: -17.625
    4. '	Point' → logprob: -18.125
    5. '_POINT' → logprob: -18.25
    6. 'point' → logprob: -18.375
    7. '.Point' → logprob: -18.625
    8. ' Point' → logprob: -18.625
    9. '[' → logprob: -19.125
    10. '_Point' → logprob: -19.25

Token 181: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.00027349460287950933
    2. '(' → logprob: -8.750273704528809
    3. 'x' → logprob: -9.750273704528809
    4. '(j' → logprob: -9.875273704528809
    5. '(i' → logprob: -12.375273704528809
    6. '(y' → logprob: -15.125273704528809
    7. ' (' → logprob: -15.625273704528809
    8. '(
' → logprob: -15.875273704528809
    9. '(col' → logprob: -16.250272750854492
    10. '(ix' → logprob: -16.375272750854492

Token 182: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006833652500063181
    2. ',y' → logprob: -5.006833553314209
    3. ' ,' → logprob: -10.256834030151367
    4. ',j' → logprob: -10.756834030151367
    5. ',x' → logprob: -10.881834030151367
    6. ',row' → logprob: -10.881834030151367
    7. ',line' → logprob: -11.256834030151367
    8. ',i' → logprob: -12.256834030151367
    9. 'y' → logprob: -13.006834030151367
    10. ',p' → logprob: -14.756834030151367

Token 183: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0007254178053699434
    2. ' y' → logprob: -7.250725269317627
    3. '0' → logprob: -11.375725746154785
    4. 'line' → logprob: -13.625725746154785
    5. 'row' → logprob: -13.875725746154785
    6. 'i' → logprob: -14.500725746154785
    7. '   ' → logprob: -15.125725746154785
    8. ')y' → logprob: -15.125725746154785
    9. ')' → logprob: -15.375725746154785
    10. 'x' → logprob: -15.500725746154785

Token 184: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00013500562636181712
    2. ',line' → logprob: -9.25013542175293
    3. ' ,' → logprob: -10.25013542175293
    4. ',row' → logprob: -13.62513542175293
    5. ',char' → logprob: -14.12513542175293
    6. ',
' → logprob: -15.37513542175293
    7. 'line' → logprob: -15.62513542175293
    8. ',

' → logprob: -15.87513542175293
    9. ',input' → logprob: -16.00013542175293
    10. ',p' → logprob: -16.50013542175293

Token 185: ' grid' (ID: 10586)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.08953388035297394
    2. 'terrain' → logprob: -2.839533805847168
    3. 'char' → logprob: -4.839533805847168
    4. 'ch' → logprob: -4.839533805847168
    5. 'line' → logprob: -5.214533805847168
    6. 'c' → logprob: -6.089533805847168
    7. ' grid' → logprob: -6.339533805847168
    8. 'cell' → logprob: -6.714533805847168
    9. ' terrain' → logprob: -7.589533805847168
    10. 'row' → logprob: -8.964533805847168

Token 186: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -1.700132997939363e-05
    2. '_line' → logprob: -11.500017166137695
    3. 'lines' → logprob: -12.250017166137695
    4. '[line' → logprob: -14.375017166137695
    5. '_' → logprob: -14.875017166137695
    6. '_lin' → logprob: -15.125017166137695
    7. '_l' → logprob: -15.875017166137695
    8. '_points' → logprob: -16.125017166137695
    9. '[' → logprob: -16.375017166137695
    10. '_li' → logprob: -16.500017166137695

Token 187: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -1.3856492842023727e-06
    2. 'y' → logprob: -13.875000953674316
    3. '[' → logprob: -15.375000953674316
    4. '[x' → logprob: -16.375001907348633
    5. '```' → logprob: -16.375001907348633
    6. '[row' → logprob: -17.750001907348633
    7. '[j' → logprob: -17.750001907348633
    8. ' [' → logprob: -17.875001907348633
    9. '[line' → logprob: -18.750001907348633
    10. '   ' → logprob: -18.875001907348633

Token 188: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0007137430948205292
    2. '[x' → logprob: -7.37571382522583
    3. ' ][' → logprob: -9.750713348388672
    4. '[' → logprob: -11.250713348388672
    5. ']' → logprob: -11.500713348388672
    6. ' [' → logprob: -13.375713348388672
    7. '   ' → logprob: -14.500713348388672
    8. '"][' → logprob: -14.500713348388672
    9. '
' → logprob: -14.625713348388672
    10. '[y' → logprob: -14.750713348388672

Token 189: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.9361264946837764e-07
    2. ' x' → logprob: -16.125
    3. '])' → logprob: -18.625
    4. ' ' → logprob: -19.5
    5. ']' → logprob: -20.0
    6. ')' → logprob: -20.125
    7. ')x' → logprob: -20.875
    8. '   ' → logprob: -21.125
    9. '"x' → logprob: -21.5
    10. '
' → logprob: -21.5

Token 190: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0006475062109529972
    2. ')' → logprob: -7.75064754486084
    3. ' ])' → logprob: -9.00064754486084
    4. '])
' → logprob: -9.62564754486084
    5. ' )' → logprob: -11.62564754486084
    6. ')]' → logprob: -12.00064754486084
    7. '])]' → logprob: -13.00064754486084
    8. ')])' → logprob: -13.25064754486084
    9. ']' → logprob: -13.50064754486084
    10. '))' → logprob: -13.62564754486084

Token 191: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.04421604424715042
    2. 'for' → logprob: -3.1692161560058594
    3. '           ' → logprob: -7.544216156005859
    4. '            ' → logprob: -7.669216156005859
    5. '               ' → logprob: -9.54421615600586
    6. '                ' → logprob: -10.04421615600586
    7. '             ' → logprob: -10.54421615600586
    8. '        ' → logprob: -11.16921615600586
    9. '	for' → logprob: -11.29421615600586
    10. '                   ' → logprob: -11.91921615600586

Token 192: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.3132685720920563
    2. 'x' → logprob: -1.3132685422897339
    3. ' range' → logprob: -12.563268661499023
    4. '	x' → logprob: -13.563268661499023
    5. ' xrange' → logprob: -14.438268661499023
    6. 'range' → logprob: -14.813268661499023
    7. ' in' → logprob: -14.938268661499023
    8. ' ' → logprob: -15.438268661499023
    9. '(x' → logprob: -15.563268661499023
    10. '"x' → logprob: -15.688268661499023

Token 193: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005935193970799446
    2. 'in' → logprob: -5.130935192108154
    3. '<|end|>' → logprob: -12.755935668945312
    4. ' ' → logprob: -13.380935668945312
    5. 'range' → logprob: -14.005935668945312
    6. ' range' → logprob: -15.255935668945312
    7. ')' → logprob: -15.255935668945312
    8. 'import' → logprob: -15.755935668945312
    9. 'In' → logprob: -15.880935668945312
    10. '	in' → logprob: -16.005935668945312

Token 194: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.4740770161151886
    2. 'range' → logprob: -0.9740769863128662
    3. '	range' → logprob: -18.224077224731445
    4. '(range' → logprob: -18.474077224731445
    5. ' xrange' → logprob: -20.724077224731445
    6. '_range' → logprob: -20.849077224731445
    7. '   ' → logprob: -21.349077224731445
    8. '```' → logprob: -21.474077224731445
    9. ' ' → logprob: -21.599077224731445
    10. 'Range' → logprob: -21.974077224731445

Token 195: '(width' (ID: 32972)
  Prédit: '(width'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(width' → logprob: -0.006719991099089384
    2. '(self' → logprob: -5.006720066070557
    3. '(' → logprob: -12.506719589233398
    4. ' (' → logprob: -14.631719589233398
    5. 'width' → logprob: -15.131719589233398
    6. 'self' → logprob: -16.0067195892334
    7. ' width' → logprob: -16.2567195892334
    8. '(w' → logprob: -18.3817195892334
    9. '(length' → logprob: -18.3817195892334
    10. ' self' → logprob: -18.5067195892334

Token 196: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.004412671085447073
    2. ')' → logprob: -5.504412651062012
    3. ']' → logprob: -8.379412651062012
    4. '   ' → logprob: -9.879412651062012
    5. '       ' → logprob: -10.754412651062012
    6. ' )' → logprob: -11.129412651062012
    7. '           ' → logprob: -12.629412651062012
    8. ')],' → logprob: -12.754412651062012
    9. ' ' → logprob: -13.004412651062012
    10. ')
' → logprob: -13.129412651062012

Token 197: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02624630555510521
    2. ' for' → logprob: -3.9012463092803955
    3. 'for' → logprob: -5.276246070861816
    4. '       ' → logprob: -7.776246070861816
    5. ']' → logprob: -9.526246070861816
    6. ')' → logprob: -10.526246070861816
    7. '               ' → logprob: -10.651246070861816
    8. '   ' → logprob: -11.026246070861816
    9. '            ' → logprob: -12.151246070861816
    10. '          ' → logprob: -12.901246070861816

Token 198: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -1.0704025030136108
    2. ' for' → logprob: -1.1954025030136108
    3. ']' → logprob: -1.5704025030136108
    4. '           ' → logprob: -1.9454025030136108
    5. ')' → logprob: -6.1954026222229
    6. '       ' → logprob: -6.5704026222229
    7. '   ' → logprob: -9.570402145385742
    8. ' ' → logprob: -9.945402145385742
    9. '               ' → logprob: -10.445402145385742
    10. ' ]' → logprob: -10.445402145385742

Token 199: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.26096493005752563
    2. ' range' → logprob: -1.7609648704528809
    3. 'y' → logprob: -3.010964870452881
    4. 'range' → logprob: -4.760964870452881
    5. ')' → logprob: -12.135965347290039
    6. ' ' → logprob: -13.135965347290039
    7. '<|end|>' → logprob: -14.260965347290039
    8. ')y' → logprob: -14.635965347290039
    9. ' ' → logprob: -14.885965347290039
    10. '```' → logprob: -14.885965347290039

Token 200: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0006401229766197503
    2. 'in' → logprob: -7.500639915466309
    3. 'range' → logprob: -10.000639915466309
    4. ' range' → logprob: -10.375639915466309
    5. '<|end|>' → logprob: -11.500639915466309
    6. '(range' → logprob: -15.875639915466309
    7. '<|end|>' → logprob: -16.125640869140625
    8. ' ' → logprob: -16.125640869140625
    9. ' xrange' → logprob: -17.125640869140625
    10. '
' → logprob: -18.250640869140625

Token 201: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.16022513806819916
    2. ' range' → logprob: -1.9102251529693604
    3. '(range' → logprob: -14.410224914550781
    4. 'height' → logprob: -15.410224914550781
    5. '	range' → logprob: -15.660224914550781
    6. ' xrange' → logprob: -16.78522491455078
    7. ')' → logprob: -18.16022491455078
    8. ' ' → logprob: -18.28522491455078
    9. 'ange' → logprob: -18.28522491455078
    10. '.range' → logprob: -18.28522491455078

Token 202: '(height' (ID: 44692)
  Prédit: '(height'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(height' → logprob: -0.00073197390884161
    2. 'height' → logprob: -7.250731945037842
    3. '(' → logprob: -11.250732421875
    4. ' (' → logprob: -12.875732421875
    5. 'range' → logprob: -13.250732421875
    6. ' height' → logprob: -13.250732421875
    7. '(self' → logprob: -13.375732421875
    8. '(range' → logprob: -14.125732421875
    9. '(width' → logprob: -14.750732421875
    10. ',height' → logprob: -16.250732421875

Token 203: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4772692620754242
    2. ')]' → logprob: -1.2272692918777466
    3. ']' → logprob: -2.477269172668457
    4. '       ' → logprob: -6.352269172668457
    5. ')
' → logprob: -7.727269172668457
    6. ']
' → logprob: -8.477269172668457
    7. '   ' → logprob: -10.227269172668457
    8. '
' → logprob: -11.227269172668457
    9. '           ' → logprob: -12.352269172668457
    10. ')]
' → logprob: -13.102269172668457

Token 204: '       ' (ID: 309)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.4856571555137634
    2. '       ' → logprob: -0.9856571555137634
    3. ')' → logprob: -4.485657215118408
    4. '   ' → logprob: -8.73565673828125
    5. ' ]' → logprob: -10.48565673828125
    6. ']
' → logprob: -10.86065673828125
    7. '<|end|>' → logprob: -11.36065673828125
    8. ')]' → logprob: -11.61065673828125
    9. '           ' → logprob: -12.86065673828125
    10. '}' → logprob: -13.11065673828125

Token 205: ' ]
' (ID: 10213)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.005823325831443071
    2. '       ' → logprob: -5.630823135375977
    3. ')' → logprob: -6.505823135375977
    4. '   ' → logprob: -7.380823135375977
    5. ' ]' → logprob: -9.505823135375977
    6. ')]' → logprob: -10.755823135375977
    7. ']
' (adapté à ' ]
') → logprob: -12.630823135375977
    8. '}' → logprob: -14.005823135375977
    9. '           ' → logprob: -14.380823135375977
    10. '	' → logprob: -14.880823135375977

Token 206: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15112566947937012
    2. '
' → logprob: -2.15112566947937
    3. '    
' → logprob: -4.276125907897949
    4. '<|end|>' → logprob: -5.026125907897949
    5. 'def' → logprob: -6.401125907897949
    6. ' 
' → logprob: -7.526125907897949
    7. '  
' → logprob: -7.526125907897949
    8. ' def' → logprob: -8.27612590789795
    9. '        
' → logprob: -9.15112590789795
    10. ' ' → logprob: -9.15112590789795

Token 207: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0825117900967598
    2. 'def' → logprob: -2.7075119018554688
    3. '       ' → logprob: -4.707511901855469
    4. ' self' → logprob: -6.332511901855469
    5. '   ' → logprob: -7.332511901855469
    6. 'for' → logprob: -7.457511901855469
    7. '#' → logprob: -8.707511901855469
    8. '
' → logprob: -8.707511901855469
    9. '        
' → logprob: -9.832511901855469
    10. ' def' → logprob: -11.082511901855469

Token 208: '.goal' (ID: 140776)
  Prédit: '.start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.start' → logprob: -0.0716162621974945
    2. '._' → logprob: -2.9466161727905273
    3. '.vis' → logprob: -5.321616172790527
    4. '_start' → logprob: -6.196616172790527
    5. 'start' → logprob: -6.321616172790527
    6. '.' → logprob: -6.696616172790527
    7. '.starts' → logprob: -6.821616172790527
    8. '.goal' → logprob: -6.946616172790527
    9. '.queue' → logprob: -7.071616172790527
    10. '.go' → logprob: -7.946616172790527

Token 209: '_position' (ID: 23739)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07694623619318008
    2. ':' → logprob: -2.826946258544922
    3. '=' → logprob: -4.701946258544922
    4. '_point' → logprob: -5.826946258544922
    5. '_found' → logprob: -6.701946258544922
    6. '=None' → logprob: -7.201946258544922
    7. '_points' → logprob: -8.326946258544922
    8. 's' → logprob: -8.576946258544922
    9. '_position' → logprob: -9.326946258544922
    10. '_positions' → logprob: -9.451946258544922

Token 210: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1655334085226059
    2. '=' → logprob: -1.915533423423767
    3. ':' → logprob: -5.290533542633057
    4. '=None' → logprob: -8.540533065795898
    5. '<|end|>' → logprob: -9.915533065795898
    6. ' ' → logprob: -12.040533065795898
    7. ' :' → logprob: -12.915533065795898
    8. 's' → logprob: -14.290533065795898
    9. ')' → logprob: -14.665533065795898
    10. '<|end|>' → logprob: -14.665533065795898

Token 211: ' Optional' (ID: 19351)
  Prédit: 'Optional'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Optional' → logprob: -0.00023226479243021458
    2. ' Optional' → logprob: -8.375232696533203
    3. 'Tuple' → logprob: -13.875232696533203
    4. 'None' → logprob: -14.875232696533203
    5. '	Optional' → logprob: -15.125232696533203
    6. '(Optional' → logprob: -16.625232696533203
    7. 'optional' → logprob: -17.125232696533203
    8. '[' → logprob: -18.125232696533203
    9. '   ' → logprob: -18.750232696533203
    10. 'List' → logprob: -19.125232696533203

Token 212: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.392202976712724e-06
    2. '[int' → logprob: -12.500006675720215
    3. '[
' → logprob: -13.500006675720215
    4. '[List' → logprob: -14.000006675720215
    5. '=' → logprob: -15.750006675720215
    6. '[Index' → logprob: -15.750006675720215
    7. ' =' → logprob: -16.3750057220459
    8. '<Grid' → logprob: -17.1250057220459
    9. '
' → logprob: -18.2500057220459
    10. '[Int' → logprob: -18.5000057220459

Token 213: 'Tuple' (ID: 40048)
  Prédit: 'Tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tuple' → logprob: -0.10023729503154755
    2. 'Grid' → logprob: -2.3502373695373535
    3. '[' → logprob: -10.975236892700195
    4. ' Tuple' → logprob: -12.100236892700195
    5. 'tuple' → logprob: -13.100236892700195
    6. 'int' → logprob: -13.600236892700195
    7. 'Point' → logprob: -13.725236892700195
    8. 'Coordinate' → logprob: -14.100236892700195
    9. 'Tu' → logprob: -14.600236892700195
    10. 'grid' → logprob: -15.350236892700195

Token 214: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -4.320199877838604e-07
    2. 'int' → logprob: -15.25
    3. '(int' → logprob: -16.625
    4. ']' → logprob: -19.125
    5. ']int' → logprob: -19.25
    6. '   ' → logprob: -19.75
    7. '<int' → logprob: -19.875
    8. '```' → logprob: -20.125
    9. '=int' → logprob: -20.375
    10. '
' → logprob: -20.5

Token 215: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0068801878951489925
    2. ',int' → logprob: -5.006880283355713
    3. ' ,' → logprob: -9.256879806518555
    4. '[int' → logprob: -9.881879806518555
    5. 'int' → logprob: -11.006879806518555
    6. ',float' → logprob: -14.381879806518555
    7. ']int' → logprob: -15.381879806518555
    8. '[' → logprob: -15.881879806518555
    9. ',List' → logprob: -16.131879806518555
    10. ',Integer' → logprob: -16.256879806518555

Token 216: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0001005630983854644
    2. ' int' → logprob: -9.250100135803223
    3. '[int' → logprob: -13.125100135803223
    4. '   ' → logprob: -14.375100135803223
    5. ']int' → logprob: -14.750100135803223
    6. '<int' → logprob: -15.000100135803223
    7. '...' → logprob: -15.375100135803223
    8. '	int' → logprob: -15.500100135803223
    9. ':int' → logprob: -15.875100135803223
    10. ',int' → logprob: -16.12510108947754

Token 217: ']]' (ID: 8928)
  Prédit: ']]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]' → logprob: -5.2762428822461516e-05
    2. ']]=' → logprob: -10.250052452087402
    3. ']' → logprob: -12.250052452087402
    4. ' ]]' → logprob: -12.250052452087402
    5. ')]' → logprob: -12.500052452087402
    6. '']]' → logprob: -13.500052452087402
    7. ']]
' → logprob: -14.000052452087402
    8. '"]]' → logprob: -14.500052452087402
    9. ',' → logprob: -14.625052452087402
    10. ']]

' → logprob: -14.875052452087402

Token 218: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07890080660581589
    2. ' =' → logprob: -2.5789008140563965
    3. '=None' → logprob: -11.453900337219238
    4. ' ' → logprob: -15.453900337219238
    5. '=
' → logprob: -16.453901290893555
    6. 'None' → logprob: -16.828901290893555
    7. '=

' → logprob: -16.828901290893555
    8. ' =
' → logprob: -18.078901290893555
    9. ')' → logprob: -18.078901290893555
    10. '<|end|>' → logprob: -18.578901290893555

Token 219: ' self' (ID: 1051)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.2809683680534363
    2. ' None' → logprob: -1.530968427658081
    3. ' next' → logprob: -3.780968427658081
    4. 'next' → logprob: -5.155968189239502
    5. '(None' → logprob: -9.90596866607666
    6. 'self' → logprob: -12.78096866607666
    7. 'Next' → logprob: -13.65596866607666
    8. '(next' → logprob: -14.15596866607666
    9. ' self' → logprob: -15.28096866607666
    10. ' ' → logprob: -15.28096866607666

Token 220: '._' (ID: 2697)
  Prédit: '.find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.find' → logprob: -0.0670856237411499
    2. 'find' → logprob: -3.3170857429504395
    3. '._' → logprob: -3.8170857429504395
    4. 'None' → logprob: -6.4420857429504395
    5. '.next' → logprob: -6.6920857429504395
    6. '.goal' → logprob: -7.0670857429504395
    7. '_find' → logprob: -7.1920857429504395
    8. '.grid' → logprob: -7.6920857429504395
    9. '.get' → logprob: -7.6920857429504395
    10. 'goal' → logprob: -7.8170857429504395

Token 221: 'loc' (ID: 9453)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.00046498890151269734
    2. 'loc' → logprob: -7.875464916229248
    3. '_find' → logprob: -9.625465393066406
    4. 'detect' → logprob: -12.125465393066406
    5. ' find' → logprob: -12.625465393066406
    6. '.find' → logprob: -13.375465393066406
    7. 'search' → logprob: -13.750465393066406
    8. 'compute' → logprob: -13.750465393066406
    9. 'initialize' → logprob: -14.125465393066406
    10. 'get' → logprob: -14.250465393066406

Token 222: 'ate' (ID: 379)
  Prédit: 'ate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ate' → logprob: -2.939851037808694e-05
    2. 'al' → logprob: -10.750029563903809
    3. '_' → logprob: -13.000029563903809
    4. 'find' → logprob: -14.000029563903809
    5. ' ate' → logprob: -14.125029563903809
    6. 'at' → logprob: -14.625029563903809
    7. 'atea' → logprob: -14.750029563903809
    8. '

' → logprob: -15.375029563903809
    9. 'ATE' → logprob: -15.375029563903809
    10. 'ated' → logprob: -15.500029563903809

Token 223: '_goal' (ID: 101684)
  Prédit: '_goal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_goal' → logprob: -0.18697489798069
    2. 'goal' → logprob: -2.0619750022888184
    3. '('&' → logprob: -3.8119750022888184
    4. '('_' → logprob: -4.311975002288818
    5. 'Goal' → logprob: -5.936975002288818
    6. '(goal' → logprob: -6.061975002288818
    7. '(' → logprob: -6.811975002288818
    8. '('' → logprob: -7.186975002288818
    9. '_go' → logprob: -8.06197452545166
    10. '('#' → logprob: -9.06197452545166

Token 224: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0016761370934545994
    2. '()
' → logprob: -6.501676082611084
    3. '()

' → logprob: -8.751676559448242
    4. '()`' → logprob: -12.501676559448242
    5. '()"' → logprob: -12.751676559448242
    6. '()
' → logprob: -13.001676559448242
    7. '())' → logprob: -13.251676559448242
    8. ' ()' → logprob: -13.626676559448242
    9. '(' → logprob: -14.126676559448242
    10. '()]' → logprob: -14.251676559448242

Token 225: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1268739253282547
    2. '   ' → logprob: -2.2518739700317383
    3. ' def' → logprob: -4.501873970031738
    4. '
' → logprob: -6.001873970031738
    5. ' ' → logprob: -8.501873970031738
    6. '    
' → logprob: -9.126873970031738
    7. '```' → logprob: -10.626873970031738
    8. '	def' → logprob: -11.501873970031738
    9. ' 
' → logprob: -11.626873970031738
    10. '<|end|>' → logprob: -11.751873970031738

Token 226: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.07546275854110718
    2. ' def' → logprob: -3.200462818145752
    3. '   ' → logprob: -3.700462818145752
    4. '
' → logprob: -4.950462818145752
    5. ' ' → logprob: -10.075462341308594
    6. '    
' → logprob: -10.450462341308594
    7. '	def' → logprob: -11.075462341308594
    8. ')' → logprob: -11.200462341308594
    9. '```' → logprob: -11.450462341308594
    10. '<|end|>' → logprob: -11.700462341308594

Token 227: ' _' (ID: 1175)
  Prédit: '_loc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_loc' → logprob: -0.012351884506642818
    2. ' _' → logprob: -4.512351989746094
    3. '_goal' → logprob: -7.262351989746094
    4. '_' → logprob: -8.762351989746094
    5. 'def' → logprob: -8.762351989746094
    6. '_def' → logprob: -9.887351989746094
    7. '_go' → logprob: -9.887351989746094
    8. '_l' → logprob: -10.387351989746094
    9. '_find' → logprob: -11.012351989746094
    10. '_define' → logprob: -11.137351989746094

Token 228: 'loc' (ID: 9453)
  Prédit: 'loc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'loc' → logprob: -5.56233171664644e-05
    2. '_loc' → logprob: -10.000055313110352
    3. ' locate' → logprob: -11.750055313110352
    4. 'find' → logprob: -13.875055313110352
    5. '.loc' → logprob: -14.750055313110352
    6. 'ocate' → logprob: -15.500055313110352
    7. 'located' → logprob: -15.625055313110352
    8. 'def' → logprob: -15.875055313110352
    9. 'load' → logprob: -16.75005531311035
    10. '
' → logprob: -16.87505531311035

Token 229: 'ate' (ID: 379)
  Prédit: 'ate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ate' → logprob: -1.3425219549390022e-05
    2. '_' → logprob: -11.37501335144043
    3. '#' → logprob: -15.00001335144043
    4. ' ate' → logprob: -15.00001335144043
    5. '
' → logprob: -15.62501335144043
    6. '__' → logprob: -15.62501335144043
    7. '\' → logprob: -16.12501335144043
    8. '

' → logprob: -16.37501335144043
    9. '```' → logprob: -16.62501335144043
    10. 'ocate' → logprob: -16.75001335144043

Token 230: '_goal' (ID: 101684)
  Prédit: '_goal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_goal' → logprob: -0.00012511172099038959
    2. 'goal' → logprob: -9.00012493133545
    3. '_go' → logprob: -13.62512493133545
    4. '_' → logprob: -14.75012493133545
    5. 'Goal' → logprob: -17.375125885009766
    6. '(goal' → logprob: -17.750125885009766
    7. ' goal' → logprob: -18.000125885009766
    8. 'self' → logprob: -18.125125885009766
    9. '
' → logprob: -18.750125885009766
    10. ' _' → logprob: -19.000125885009766

Token 231: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -2.951771421066951e-05
    2. '(' → logprob: -11.000029563903809
    3. 'self' → logprob: -11.625029563903809
    4. ' (' → logprob: -12.750029563903809
    5. '(
' → logprob: -15.625029563903809
    6. ' self' → logprob: -15.750029563903809
    7. '   ' → logprob: -15.875029563903809
    8. '(s' → logprob: -16.125028610229492
    9. '	self' → logprob: -16.500028610229492
    10. ' ' → logprob: -16.625028610229492

Token 232: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0011420035734772682
    2. 'self' → logprob: -6.8761420249938965
    3. '):' → logprob: -10.126141548156738
    4. '):
' → logprob: -10.376141548156738
    5. ' )' → logprob: -10.876141548156738
    6. '(self' → logprob: -11.626141548156738
    7. ')->' → logprob: -11.751141548156738
    8. ' self' → logprob: -14.376141548156738
    9. '):

' → logprob: -14.501141548156738
    10. '):
' → logprob: -15.126141548156738

Token 233: ' ->' (ID: 2747)
  Prédit: '->'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '->' → logprob: -0.495978444814682
    2. ' ->' → logprob: -0.9959784746170044
    3. ')' → logprob: -3.870978355407715
    4. 'self' → logprob: -8.495978355407715
    5. '(self' → logprob: -8.745978355407715
    6. ':' → logprob: -8.745978355407715
    7. '       ' → logprob: -9.245978355407715
    8. ')->' → logprob: -9.370978355407715
    9. '   ' → logprob: -9.620978355407715
    10. ' ' → logprob: -10.245978355407715

Token 234: ' Optional' (ID: 19351)
  Prédit: 'Optional'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Optional' → logprob: -0.02324967086315155
    2. ' Optional' → logprob: -3.773249626159668
    3. 'Tuple' → logprob: -12.773249626159668
    4. 'None' → logprob: -14.273249626159668
    5. '	Optional' → logprob: -14.648249626159668
    6. '(Optional' → logprob: -15.773249626159668
    7. ' Tuple' → logprob: -16.898250579833984
    8. ' None' → logprob: -18.523250579833984
    9. '   ' → logprob: -18.648250579833984
    10. ' ' → logprob: -18.773250579833984

Token 235: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.8624639324116288e-06
    2. 'Tuple' → logprob: -14.000001907348633
    3. '[(' → logprob: -15.250001907348633
    4. '[
' → logprob: -15.500001907348633
    5. '   ' → logprob: -16.000001907348633
    6. '<Tuple' → logprob: -16.000001907348633
    7. '[List' → logprob: -16.000001907348633
    8. '[int' → logprob: -16.125001907348633
    9. ' ' → logprob: -18.000001907348633
    10. '```' → logprob: -18.875001907348633

Token 236: 'Tuple' (ID: 40048)
  Prédit: 'Tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tuple' → logprob: -4.723352049040841e-06
    2. ' Tuple' → logprob: -12.875004768371582
    3. 'int' → logprob: -13.125004768371582
    4. 'tuple' → logprob: -16.500003814697266
    5. 'Tu' → logprob: -18.875003814697266
    6. '[int' → logprob: -19.625003814697266
    7. '   ' → logprob: -20.625003814697266
    8. '[' → logprob: -20.625003814697266
    9. ')' → logprob: -20.750003814697266
    10. ' ' → logprob: -21.000003814697266

Token 237: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -2.696889623621246e-06
    2. 'int' → logprob: -12.87500286102295
    3. '<int' → logprob: -17.875001907348633
    4. '[Int' → logprob: -20.125001907348633
    5. ']int' → logprob: -20.250001907348633
    6. '(int' → logprob: -20.500001907348633
    7. '	int' → logprob: -21.250001907348633
    8. '=int' → logprob: -21.375001907348633
    9. ',int' → logprob: -21.500001907348633
    10. '[
' → logprob: -21.625001907348633

Token 238: ',int' (ID: 20909)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2026284635066986
    2. ',int' → logprob: -1.702628493309021
    3. 'int' → logprob: -7.0776286125183105
    4. '[int' → logprob: -7.9526286125183105
    5. ' ,' → logprob: -11.202628135681152
    6. ' int' → logprob: -13.702628135681152
    7. ',
' → logprob: -14.077628135681152
    8. '(int' → logprob: -14.077628135681152
    9. ':int' → logprob: -14.077628135681152
    10. ',float' → logprob: -14.077628135681152

Token 239: ']]:
' (ID: 183340)
  Prédit: ']]:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]:
' → logprob: -0.01201495248824358
    2. '>' → logprob: -5.137014865875244
    3. ']:
' → logprob: -6.012014865875244
    4. ']]' → logprob: -6.512014865875244
    5. ')]' → logprob: -7.012014865875244
    6. ']' → logprob: -7.012014865875244
    7. ']:' → logprob: -8.887015342712402
    8. ']>' → logprob: -9.637015342712402
    9. ')' → logprob: -10.012015342712402
    10. ' ]' → logprob: -10.137015342712402

Token 240: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02831275388598442
    2. '
' → logprob: -3.7783126831054688
    3. ' for' → logprob: -5.778312683105469
    4. '   ' → logprob: -6.903312683105469
    5. 'for' → logprob: -8.528312683105469
    6. '        
' → logprob: -8.653312683105469
    7. ':' → logprob: -8.903312683105469
    8. ':
' → logprob: -9.028312683105469
    9. '  
' → logprob: -10.153312683105469
    10. '' → logprob: -10.403312683105469

Token 241: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.028365598991513252
    2. '       ' → logprob: -3.7783656120300293
    3. ' for' → logprob: -5.278365612030029
    4. '   ' → logprob: -12.153365135192871
    5. ' ' → logprob: -14.528365135192871
    6. '	for' → logprob: -15.528365135192871
    7. '      ' → logprob: -17.028366088867188
    8. '     ' → logprob: -17.153366088867188
    9. '           ' → logprob: -17.278366088867188
    10. '```' → logprob: -17.653366088867188

Token 242: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.4740987718105316
    2. 'y' → logprob: -0.974098801612854
    3. '   ' → logprob: -10.974099159240723
    4. '	y' → logprob: -13.224099159240723
    5. ' ' → logprob: -14.099099159240723
    6. 'row' → logprob: -14.474099159240723
    7. ' row' → logprob: -15.099099159240723
    8. '    ' → logprob: -15.599099159240723
    9. '       ' → logprob: -15.599099159240723
    10. '  ' → logprob: -15.724099159240723

Token 243: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.008624974638223648
    2. 'in' → logprob: -4.758625030517578
    3. ',' → logprob: -11.758625030517578
    4. ' ' → logprob: -14.008625030517578
    5. 'import' → logprob: -15.133625030517578
    6. '<|end|>' → logprob: -15.258625030517578
    7. '   ' → logprob: -15.383625030517578
    8. '	in' → logprob: -15.633625030517578
    9. 'In' → logprob: -15.758625030517578
    10. ' ,' → logprob: -15.883625030517578

Token 244: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0007099286303855479
    2. ' range' → logprob: -7.2507100105285645
    3. '(range' → logprob: -19.000709533691406
    4. '	range' → logprob: -19.750709533691406
    5. '
' → logprob: -19.875709533691406
    6. '   ' → logprob: -20.125709533691406
    7. '0' → logprob: -21.625709533691406
    8. 'Range' → logprob: -22.000709533691406
    9. '```' → logprob: -22.125709533691406
    10. ')' → logprob: -22.375709533691406

Token 245: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0004474732850212604
    2. 'self' → logprob: -7.7504472732543945
    3. '(' → logprob: -11.125447273254395
    4. ' self' → logprob: -13.500447273254395
    5. '(len' → logprob: -15.250447273254395
    6. '       ' → logprob: -16.12544822692871
    7. '1' → logprob: -16.37544822692871
    8. '   ' → logprob: -16.50044822692871
    9. '(
' → logprob: -17.37544822692871
    10. '           ' → logprob: -17.75044822692871

Token 246: '.height' (ID: 11682)
  Prédit: '.height'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.height' → logprob: -1.7954958821064793e-05
    2. 'height' → logprob: -11.000018119812012
    3. '.' → logprob: -14.125018119812012
    4. '.width' → logprob: -15.125018119812012
    5. ' .' → logprob: -16.125017166137695
    6. ').' → logprob: -16.750017166137695
    7. '   ' → logprob: -18.375017166137695
    8. ' height' → logprob: -18.875017166137695
    9. '.size' → logprob: -19.125017166137695
    10. '.length' → logprob: -19.625017166137695

Token 247: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4741911292076111
    2. '):
' → logprob: -0.9741911292076111
    3. '   ' → logprob: -10.224190711975098
    4. ')' → logprob: -10.724190711975098
    5. '):
' → logprob: -10.849190711975098
    6. '       ' → logprob: -11.224190711975098
    7. ':' → logprob: -11.474190711975098
    8. ' ):' → logprob: -12.349190711975098
    9. '):

' → logprob: -12.349190711975098
    10. ' ):
' → logprob: -13.099190711975098

Token 248: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6545995473861694
    2. ' for' → logprob: -0.7795995473861694
    3. '       ' → logprob: -4.029599666595459
    4. '   ' → logprob: -6.404599666595459
    5. 'for' → logprob: -6.404599666595459
    6. ':' → logprob: -7.904599666595459
    7. '        ' → logprob: -9.5295991897583
    8. ' ' → logprob: -10.0295991897583
    9. '<|end|>' → logprob: -10.1545991897583
    10. '    ' → logprob: -10.4045991897583

Token 249: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.39051195979118347
    2. 'for' (adapté à ' for') → logprob: -1.1405119895935059
    3. '           ' → logprob: -5.640511989593506
    4. '   ' → logprob: -9.640511512756348
    5. '       ' → logprob: -11.140511512756348
    6. '               ' → logprob: -13.515511512756348
    7. '	for' → logprob: -14.015511512756348
    8. ' ' → logprob: -14.390511512756348
    9. '
' → logprob: -15.015511512756348
    10. '```' → logprob: -15.390511512756348

Token 250: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.023245595395565033
    2. ' x' → logprob: -3.7732455730438232
    3. '	x' → logprob: -16.773244857788086
    4. '   ' → logprob: -17.023244857788086
    5. '```' → logprob: -18.148244857788086
    6. ' ' → logprob: -18.398244857788086
    7. '(x' → logprob: -19.523244857788086
    8. ',x' → logprob: -19.898244857788086
    9. '"x' → logprob: -19.898244857788086
    10. ')x' → logprob: -20.023244857788086

Token 251: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004088966641575098
    2. 'in' → logprob: -5.504088878631592
    3. '<|end|>' → logprob: -12.00408935546875
    4. ' ' → logprob: -13.25408935546875
    5. '        ' → logprob: -14.62908935546875
    6. '   ' → logprob: -14.87908935546875
    7. ')' → logprob: -15.00408935546875
    8. '<|end|>' → logprob: -15.25408935546875
    9. '    ' → logprob: -15.62908935546875
    10. 'In' → logprob: -15.87908935546875

Token 252: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.25228095054626465
    2. ' range' → logprob: -1.5022809505462646
    3. 'self' → logprob: -8.002281188964844
    4. ' self' → logprob: -11.002281188964844
    5. '(range' → logprob: -15.127281188964844
    6. ' ' → logprob: -17.377281188964844
    7. '(self' → logprob: -17.377281188964844
    8. '   ' → logprob: -17.502281188964844
    9. '	range' → logprob: -18.002281188964844
    10. '0' → logprob: -18.252281188964844

Token 253: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.306760805164231e-05
    2. 'self' → logprob: -11.87501335144043
    3. '(' → logprob: -12.12501335144043
    4. ' (' → logprob: -14.62501335144043
    5. ' self' → logprob: -17.00001335144043
    6. ')' → logprob: -17.62501335144043
    7. '(s' → logprob: -18.00001335144043
    8. '   ' → logprob: -18.37501335144043
    9. '[self' → logprob: -18.37501335144043
    10. '       ' → logprob: -18.50001335144043

Token 254: '.width' (ID: 11038)
  Prédit: '.width'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.width' → logprob: -1.6286106983898208e-05
    2. 'width' → logprob: -11.250016212463379
    3. '.' → logprob: -13.125016212463379
    4. '.height' → logprob: -14.125016212463379
    5. ' .' → logprob: -15.125016212463379
    6. ').' → logprob: -16.250017166137695
    7. '   ' → logprob: -16.500017166137695
    8. ')' → logprob: -16.875017166137695
    9. '       ' → logprob: -17.125017166137695
    10. ' width' → logprob: -17.375017166137695

Token 255: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.0039239260368049145
    2. '):' → logprob: -5.6289238929748535
    3. '           ' → logprob: -9.378924369812012
    4. '               ' → logprob: -9.378924369812012
    5. '):
' → logprob: -10.253924369812012
    6. ' ):
' → logprob: -10.253924369812012
    7. ':
' → logprob: -10.378924369812012
    8. '():
' → logprob: -10.878924369812012
    9. '       ' → logprob: -11.003924369812012
    10. ':' → logprob: -11.378924369812012

Token 256: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.008516820147633553
    2. ' if' → logprob: -5.508516788482666
    3. '           ' → logprob: -6.508516788482666
    4. ':' → logprob: -6.758516788482666
    5. ',' → logprob: -7.258516788482666
    6. ':
' → logprob: -7.508516788482666
    7. '<|end|>' → logprob: -8.258517265319824
    8. 'if' → logprob: -10.258517265319824
    9. ' grid' → logprob: -10.383517265319824
    10. '<|end|>' → logprob: -10.633517265319824

Token 257: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.40915146470069885
    2. ' if' → logprob: -1.4091514348983765
    3. '                   ' → logprob: -2.534151554107666
    4. 'point' → logprob: -4.534151554107666
    5. ' point' → logprob: -8.034151077270508
    6. 'pt' → logprob: -8.034151077270508
    7. 'grid' → logprob: -8.159151077270508
    8. 'p' → logprob: -8.784151077270508
    9. '               ' → logprob: -9.284151077270508
    10. '
' → logprob: -9.784151077270508

Token 258: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.57594233751297
    2. 'self' → logprob: -0.82594233751297
    3. '(self' → logprob: -13.325942039489746
    4. '               ' → logprob: -14.200942039489746
    5. '	self' → logprob: -15.325942039489746
    6. '                   ' → logprob: -15.575942039489746
    7. '[self' → logprob: -16.075942993164062
    8. '$self' → logprob: -17.075942993164062
    9. ' ' → logprob: -17.450942993164062
    10. ' not' → logprob: -17.575942993164062

Token 259: '.grid' (ID: 19269)
  Prédit: '.grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.grid' → logprob: -1.2948405128554441e-05
    2. '.' → logprob: -11.62501335144043
    3. 'grid' → logprob: -13.12501335144043
    4. ' .' → logprob: -13.62501335144043
    5. '.goal' → logprob: -15.12501335144043
    6. '.is' → logprob: -16.37501335144043
    7. ').' → logprob: -17.00001335144043
    8. '.get' → logprob: -17.25001335144043
    9. '}.' → logprob: -17.25001335144043
    10. '.g' → logprob: -17.25001335144043

Token 260: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -3.128163257315464e-07
    2. '[x' → logprob: -16.25
    3. 'y' → logprob: -16.625
    4. '[' → logprob: -17.5
    5. ' [' → logprob: -17.625
    6. '][' → logprob: -17.625
    7. '```' → logprob: -17.625
    8. ')[' → logprob: -19.75
    9. '[Y' → logprob: -20.5
    10. '[j' → logprob: -20.625

Token 261: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.013272935524582863
    2. '[x' → logprob: -4.388272762298584
    3. '[y' → logprob: -7.388272762298584
    4. '[' → logprob: -9.763273239135742
    5. ']' → logprob: -10.013273239135742
    6. '}[' → logprob: -10.763273239135742
    7. ' ][' → logprob: -11.888273239135742
    8. ')[' → logprob: -13.013273239135742
    9. '```' → logprob: -13.138273239135742
    10. '>[' → logprob: -13.263273239135742

Token 262: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -7.941850526549388e-06
    2. ' x' → logprob: -11.750007629394531
    3. '[x' → logprob: -18.25000762939453
    4. '```' → logprob: -18.37500762939453
    5. ')x' → logprob: -18.50000762939453
    6. '
' → logprob: -18.62500762939453
    7. '][' → logprob: -18.75000762939453
    8. '	x' → logprob: -19.00000762939453
    9. '<|end|>' → logprob: -19.75000762939453
    10. '"x' → logprob: -20.25000762939453

Token 263: '].' (ID: 1651)
  Prédit: '.is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.is' → logprob: -0.01328175887465477
    2. '.' → logprob: -4.38828182220459
    3. ').' → logprob: -7.63828182220459
    4. '].' → logprob: -8.38828182220459
    5. ' .' → logprob: -10.51328182220459
    6. '}.' → logprob: -10.88828182220459
    7. '>.' → logprob: -12.63828182220459
    8. '.isnan' → logprob: -12.88828182220459
    9. '.has' → logprob: -13.26328182220459
    10. '   ' → logprob: -13.38828182220459

Token 264: 'is' (ID: 276)
  Prédit: 'is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -1.6166903151315637e-05
    2. 'terrain' → logprob: -11.500016212463379
    3. ' is' → logprob: -12.500016212463379
    4. '.is' → logprob: -14.375016212463379
    5. '

' → logprob: -14.750016212463379
    6. '   ' → logprob: -14.875016212463379
    7. '```' → logprob: -14.875016212463379
    8. ' ' → logprob: -16.125015258789062
    9. '	is' → logprob: -16.500015258789062
    10. '
' → logprob: -16.500015258789062

Token 265: '_goal' (ID: 101684)
  Prédit: '_goal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_goal' → logprob: -8.41866585687967e-06
    2. '_go' → logprob: -12.250008583068848
    3. 'goal' → logprob: -12.750008583068848
    4. '_' → logprob: -14.375008583068848
    5. 'Goal' → logprob: -17.37500762939453
    6. '_g' → logprob: -18.00000762939453
    7. '_m' → logprob: -18.75000762939453
    8. ' goal' → logprob: -19.25000762939453
    9. '(goal' → logprob: -19.37500762939453
    10. ' _' → logprob: -20.00000762939453

Token 266: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.001806202926672995
    2. '()' → logprob: -6.501806259155273
    3. '():
' → logprob: -8.126806259155273
    4. ' ():' → logprob: -12.001806259155273
    5. '():
' → logprob: -14.126806259155273
    6. '():

' → logprob: -14.501806259155273
    7. ':' → logprob: -15.126806259155273
    8. '(' → logprob: -15.501806259155273
    9. '()>' → logprob: -15.876806259155273
    10. '()==' → logprob: -16.376806259155273

Token 267: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.004226916469633579
    2. '                       ' → logprob: -6.3792266845703125
    3. 'return' → logprob: -6.8792266845703125
    4. ' return' → logprob: -7.2542266845703125
    5. ':
' → logprob: -8.254226684570312
    6. ':return' → logprob: -8.254226684570312
    7. ':' → logprob: -9.254226684570312
    8. '                    
' → logprob: -9.879226684570312
    9. '               ' → logprob: -10.129226684570312
    10. '                  ' → logprob: -11.004226684570312

Token 268: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.10240139812231064
    2. ' return' → logprob: -2.3524014949798584
    3. '                   ' → logprob: -6.227401256561279
    4. '                       ' → logprob: -8.477401733398438
    5. '
' → logprob: -12.852401733398438
    6. ':return' → logprob: -13.352401733398438
    7. '	return' → logprob: -13.602401733398438
    8. '               ' → logprob: -13.727401733398438
    9. '{return' → logprob: -14.227401733398438
    10. '       ' → logprob: -14.227401733398438

Token 269: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.011075647547841072
    2. ' (' → logprob: -4.511075496673584
    3. 'x' → logprob: -10.511075973510742
    4. ' x' → logprob: -14.511075973510742
    5. '(' → logprob: -16.511075973510742
    6. '   ' → logprob: -17.636075973510742
    7. '(
' → logprob: -20.011075973510742
    8. ' ' → logprob: -20.386075973510742
    9. '(self' → logprob: -20.636075973510742
    10. '
' → logprob: -20.761075973510742

Token 270: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.318681188422488e-05
    2. ' x' → logprob: -11.25001335144043
    3. ')x' → logprob: -16.75001335144043
    4. '                   ' → logprob: -17.75001335144043
    5. '
' → logprob: -20.00001335144043
    6. ')' → logprob: -20.12501335144043
    7. '   ' → logprob: -20.25001335144043
    8. '	x' → logprob: -20.25001335144043
    9. '               ' → logprob: -20.25001335144043
    10. '(x' → logprob: -20.50001335144043

Token 271: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004204359371215105
    2. ',y' → logprob: -5.504204273223877
    3. ' ,' → logprob: -9.004204750061035
    4. ',
' → logprob: -12.879204750061035
    5. 'y' → logprob: -14.879204750061035
    6. ',

' → logprob: -16.37920379638672
    7. ')' → logprob: -18.00420379638672
    8. ' y' → logprob: -18.12920379638672
    9. ',x' → logprob: -18.50420379638672
    10. '),' → logprob: -19.12920379638672

Token 272: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005257003009319305
    2. ')
' → logprob: -5.2552571296691895
    3. ' )' → logprob: -11.380256652832031
    4. ')return' → logprob: -12.505256652832031
    5. '<|end|>' → logprob: -12.630256652832031
    6. '       ' → logprob: -13.880256652832031
    7. ')

' → logprob: -13.880256652832031
    8. ')
' → logprob: -14.255256652832031
    9. ')#' → logprob: -14.505256652832031
    10. '               ' → logprob: -15.130256652832031

Token 273: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05607714504003525
    2. 'return' → logprob: -3.306077241897583
    3. 'None' → logprob: -4.681077003479004
    4. '<|end|>' → logprob: -5.806077003479004
    5. '        
' → logprob: -6.181077003479004
    6. '        ' → logprob: -6.431077003479004
    7. ' return' → logprob: -7.056077003479004
    8. '
' → logprob: -8.181077003479004
    9. '               ' → logprob: -8.556077003479004
    10. ' None' → logprob: -9.556077003479004

Token 274: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.08016866445541382
    2. 'None' → logprob: -3.2051687240600586
    3. '       ' → logprob: -3.3301687240600586
    4. ' return' → logprob: -7.705168724060059
    5. '
' → logprob: -8.580168724060059
    6. '   ' → logprob: -10.580168724060059
    7. ' None' → logprob: -11.080168724060059
    8. '	return' → logprob: -11.705168724060059
    9. '```' → logprob: -12.705168724060059
    10. ':return' → logprob: -13.330168724060059

Token 275: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.12692810595035553
    2. ' None' → logprob: -2.1269280910491943
    3. '(None' → logprob: -18.001928329467773
    4. '_None' → logprob: -18.376928329467773
    5. ',None' → logprob: -19.126928329467773
    6. '=None' → logprob: -19.501928329467773
    7. 'none' → logprob: -21.251928329467773
    8. '_none' → logprob: -21.626928329467773
    9. '   ' → logprob: -22.501928329467773
    10. '
' → logprob: -22.751928329467773

Token 276: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07287607342004776
    2. '<|end|>' → logprob: -3.0728759765625
    3. '   ' → logprob: -4.0728759765625
    4. '    
' → logprob: -5.8228759765625
    5. '<|end|>' → logprob: -6.6978759765625
    6. ' 
' → logprob: -6.9478759765625
    7. '  
' → logprob: -7.0728759765625
    8. 'def' → logprob: -7.3228759765625
    9. '```' → logprob: -9.8228759765625
    10. '

' → logprob: -10.1978759765625

Token 277: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.15206965804100037
    2. '   ' → logprob: -2.152069568634033
    3. '<|end|>' → logprob: -4.152069568634033
    4. '    
' → logprob: -5.277069568634033
    5. ' 
' → logprob: -6.527069568634033
    6. 'def' → logprob: -6.902069568634033
    7. '<|end|>' → logprob: -7.402069568634033
    8. '  
' → logprob: -7.902069568634033
    9. ' ' → logprob: -9.402070045471191
    10. '        
' → logprob: -9.777070045471191

Token 278: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.1630050241947174
    2. '   ' → logprob: -1.913004994392395
    3. ' def' → logprob: -6.2880048751831055
    4. '    
' → logprob: -7.5380048751831055
    5. ' ' → logprob: -9.038004875183105
    6. '
' → logprob: -9.038004875183105
    7. ' 
' → logprob: -10.163004875183105
    8. '  
' → logprob: -10.413004875183105
    9. '        
' → logprob: -10.538004875183105
    10. '<|end|>' → logprob: -11.163004875183105

Token 279: ' in' (ID: 306)
  Prédit: ' get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.5837969183921814
    2. ' in' → logprob: -1.3337969779968262
    3. ' neighbors' → logprob: -2.708796977996826
    4. 'get' → logprob: -3.458796977996826
    5. 'neighbors' → logprob: -3.833796977996826
    6. ' is' → logprob: -4.458796977996826
    7. ' def' → logprob: -4.833796977996826
    8. 'in' → logprob: -4.833796977996826
    9. '_neighbors' → logprob: -5.333796977996826
    10. '__' → logprob: -5.583796977996826

Token 280: '_bounds' (ID: 90408)
  Prédit: '_bounds'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bounds' → logprob: -0.0018000080017372966
    2. '_' → logprob: -6.501800060272217
    3. '_bound' → logprob: -9.001799583435059
    4. 'side' → logprob: -9.626799583435059
    5. '_range' → logprob: -10.126799583435059
    6. '_grid' → logprob: -10.626799583435059
    7. '_boundary' → logprob: -10.751799583435059
    8. '_side' → logprob: -11.626799583435059
    9. 'bounds' → logprob: -12.376799583435059
    10. '_b' → logprob: -12.751799583435059

Token 281: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0013373857364058495
    2. ' (' → logprob: -7.25133752822876
    3. '(' → logprob: -7.37633752822876
    4. '(
' → logprob: -14.376337051391602
    5. 'self' → logprob: -15.376337051391602
    6. ' ' → logprob: -15.751337051391602
    7. ' self' → logprob: -16.0013370513916
    8. '(s' → logprob: -16.1263370513916
    9. '(x' → logprob: -16.3763370513916
    10. '   ' → logprob: -16.8763370513916

Token 282: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02045767940580845
    2. '(self' → logprob: -4.395457744598389
    3. 'self' → logprob: -5.020457744598389
    4. ' ,' → logprob: -6.770457744598389
    5. ',self' → logprob: -9.02045726776123
    6. ' self' → logprob: -10.27045726776123
    7. '       ' → logprob: -12.02045726776123
    8. '   ' → logprob: -12.89545726776123
    9. ')' → logprob: -13.39545726776123
    10. '	self' → logprob: -14.39545726776123

Token 283: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.03825836628675461
    2. ' x' → logprob: -3.2882583141326904
    3. 'self' → logprob: -8.53825855255127
    4. ' self' → logprob: -11.03825855255127
    5. '   ' → logprob: -12.91325855255127
    6. 'point' → logprob: -14.16325855255127
    7. ')' → logprob: -14.28825855255127
    8. ' ' → logprob: -15.03825855255127
    9. 'pos' → logprob: -15.03825855255127
    10. ' point' → logprob: -15.28825855255127

Token 284: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01753481850028038
    2. ' ,' → logprob: -4.1425347328186035
    3. ':' → logprob: -6.6425347328186035
    4. ':int' → logprob: -8.892535209655762
    5. ',y' → logprob: -10.267535209655762
    6. ',int' → logprob: -11.017535209655762
    7. ',x' → logprob: -13.142535209655762
    8. ')' → logprob: -13.392535209655762
    9. '   ' → logprob: -13.892535209655762
    10. ' ' → logprob: -14.267535209655762

Token 285: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0019295861711725593
    2. ' int' → logprob: -6.251929759979248
    3. ')' → logprob: -14.62692928314209
    4. '   ' → logprob: -15.87692928314209
    5. ':int' → logprob: -16.001930236816406
    6. '0' → logprob: -16.001930236816406
    7. ' ' → logprob: -16.126930236816406
    8. '(int' → logprob: -17.376930236816406
    9. ',int' → logprob: -17.876930236816406
    10. 'x' → logprob: -17.876930236816406

Token 286: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00012284684635233134
    2. ' ,' → logprob: -9.125123023986816
    3. ',y' → logprob: -11.250123023986816
    4. ',int' → logprob: -14.625123023986816
    5. '   ' → logprob: -15.000123023986816
    6. ',
' → logprob: -16.1251220703125
    7. ')' → logprob: -17.8751220703125
    8. '‌,' → logprob: -18.0001220703125
    9. 'y' → logprob: -18.3751220703125
    10. ',

' → logprob: -18.7501220703125

Token 287: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.008617408573627472
    2. ' y' → logprob: -4.758617401123047
    3. '   ' → logprob: -12.883617401123047
    4. ')' → logprob: -15.508617401123047
    5. ' ' → logprob: -17.758617401123047
    6. ')y' → logprob: -18.008617401123047
    7. '  ' → logprob: -18.258617401123047
    8. '    ' → logprob: -18.258617401123047
    9. '	y' → logprob: -18.258617401123047
    10. '       ' → logprob: -19.258617401123047

Token 288: ':' (ID: 25)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00010771531378850341
    2. ' )' → logprob: -9.250107765197754
    3. '   ' → logprob: -12.250107765197754
    4. '):' → logprob: -12.500107765197754
    5. ':' → logprob: -13.125107765197754
    6. ')->' → logprob: -14.625107765197754
    7. ' ' → logprob: -14.875107765197754
    8. '):
' → logprob: -16.375106811523438
    9. '    ' → logprob: -17.375106811523438
    10. '  ' → logprob: -17.625106811523438

Token 289: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.16093681752681732
    2. ')' → logprob: -1.9109368324279785
    3. ' int' → logprob: -7.4109368324279785
    4. '   ' → logprob: -9.66093635559082
    5. ' )' → logprob: -10.78593635559082
    6. '):' → logprob: -11.78593635559082
    7. ':int' → logprob: -12.03593635559082
    8. ' ' → logprob: -12.66093635559082
    9. '  ' → logprob: -13.53593635559082
    10. '):
' → logprob: -13.78593635559082

Token 290: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.2961512513575144e-05
    2. ' )' → logprob: -10.875022888183594
    3. '   ' → logprob: -12.500022888183594
    4. ' ' → logprob: -16.500022888183594
    5. ')->' → logprob: -17.625022888183594
    6. '")' → logprob: -17.750022888183594
    7. '    ' → logprob: -17.750022888183594
    8. '`)' → logprob: -18.125022888183594
    9. '')' → logprob: -18.500022888183594
    10. '       ' → logprob: -18.625022888183594

Token 291: ' ->' (ID: 2747)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7798964381217957
    2. ' ->' → logprob: -1.1548964977264404
    3. '->' → logprob: -1.5298964977264404
    4. ')->' → logprob: -4.904896259307861
    5. ':' → logprob: -6.279896259307861
    6. '   ' → logprob: -8.15489673614502
    7. ' ' → logprob: -8.77989673614502
    8. ' )' → logprob: -9.40489673614502
    9. ' )->' → logprob: -9.90489673614502
    10. '       ' → logprob: -11.02989673614502

Token 292: ' bool' (ID: 3792)
  Prédit: ' bool'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bool' → logprob: -0.5760331153869629
    2. 'bool' → logprob: -0.8260331153869629
    3. 'True' → logprob: -9.701032638549805
    4. ' True' → logprob: -10.576032638549805
    5. '   ' → logprob: -12.451032638549805
    6. ' ' → logprob: -13.576032638549805
    7. 'int' → logprob: -14.451032638549805
    8. '	bool' → logprob: -15.076032638549805
    9. '(bool' → logprob: -15.701032638549805
    10. '  ' → logprob: -15.951032638549805

Token 293: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.019425487145781517
    2. ':
' → logprob: -4.269425392150879
    3. '       ' → logprob: -6.019425392150879
    4. ')' → logprob: -6.644425392150879
    5. '   ' → logprob: -6.894425392150879
    6. '):' → logprob: -9.394425392150879
    7. '):
' → logprob: -9.394425392150879
    8. ' ->' → logprob: -9.644425392150879
    9. ':return' → logprob: -9.644425392150879
    10. '<|end|>' → logprob: -9.894425392150879

Token 294: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00034380643046461046
    2. ' return' → logprob: -8.125344276428223
    3. ' 
' → logprob: -11.000344276428223
    4. 'return' → logprob: -11.125344276428223
    5. '   ' → logprob: -11.375344276428223
    6. ' ' → logprob: -14.125344276428223
    7. '    ' → logprob: -14.500344276428223
    8. ':' → logprob: -14.625344276428223
    9. '        
' → logprob: -14.625344276428223
    10. ':return' → logprob: -14.625344276428223

Token 295: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.08396298438310623
    2. ' return' → logprob: -2.833962917327881
    3. '       ' → logprob: -3.833962917327881
    4. '0' → logprob: -9.083963394165039
    5. '   ' → logprob: -11.083963394165039
    6. '	return' → logprob: -13.708963394165039
    7. '
' → logprob: -14.958963394165039
    8. ':return' → logprob: -14.958963394165039
    9. '```' → logprob: -15.458963394165039
    10. ' ' → logprob: -15.458963394165039

Token 296: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07889595627784729
    2. ' ' → logprob: -2.5788960456848145
    3. ' (' → logprob: -12.703895568847656
    4. '(' → logprob: -13.078895568847656
    5. '   ' → logprob: -13.828895568847656
    6. ' ' → logprob: -16.828895568847656
    7. '  ' → logprob: -17.703895568847656
    8. '
' → logprob: -18.953895568847656
    9. '       ' → logprob: -19.828895568847656
    10. '    ' → logprob: -19.828895568847656

Token 297: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.630610641877865e-06
    2. ' ' → logprob: -12.125006675720215
    3. '(' → logprob: -13.625006675720215
    4. '   ' → logprob: -18.5000057220459
    5. ' (' → logprob: -19.8750057220459
    6. '
' → logprob: -20.5000057220459
    7. '۰' → logprob: -21.1250057220459
    8. '00' → logprob: -22.5000057220459
    9. '０' → logprob: -22.7500057220459
    10. ' ' → logprob: -22.8750057220459

Token 298: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.10023341327905655
    2. '<=' → logprob: -2.350233316421509
    3. '<' → logprob: -10.85023307800293
    4. ' <' → logprob: -11.85023307800293
    5. 'x' → logprob: -16.47523307800293
    6. '0' → logprob: -16.97523307800293
    7. ' ' → logprob: -17.35023307800293
    8. ' ' → logprob: -17.97523307800293
    9. ' ≤' → logprob: -18.47523307800293
    10. '```' → logprob: -19.10023307800293

Token 299: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00038014890742488205
    2. ' x' → logprob: -7.875380039215088
    3. '	x' → logprob: -17.37537956237793
    4. ')x' → logprob: -18.00037956237793
    5. ' ' → logprob: -18.62537956237793
    6. '```' → logprob: -19.00037956237793
    7. '"x' → logprob: -19.00037956237793
    8. '_x' → logprob: -19.75037956237793
    9. 'y' → logprob: -20.25037956237793
    10. '   ' → logprob: -20.37537956237793

Token 300: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.033954914659261703
    2. ' <' → logprob: -3.4089548587799072
    3. ' and' → logprob: -9.283954620361328
    4. 'and' → logprob: -9.283954620361328
    5. '<x' → logprob: -9.533954620361328
    6. 'x' → logprob: -10.158954620361328
    7. '<len' → logprob: -12.533954620361328
    8. '<n' → logprob: -13.408954620361328
    9. ' x' → logprob: -13.533954620361328
    10. '<size' → logprob: -13.533954620361328

Token 301: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0009114635176956654
    2. ' self' → logprob: -7.000911235809326
    3. '       ' → logprob: -21.500911712646484
    4. '
' → logprob: -22.125911712646484
    5. '(self' → logprob: -22.250911712646484
    6. '	self' → logprob: -22.375911712646484
    7. '[self' → logprob: -22.750911712646484
    8. '```' → logprob: -22.875911712646484
    9. '=self' → logprob: -23.000911712646484
    10. '   ' → logprob: -23.625911712646484

Token 302: '.width' (ID: 11038)
  Prédit: '.width'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.width' → logprob: -0.00010521204239921644
    2. '.' → logprob: -9.250104904174805
    3. 'width' → logprob: -12.125104904174805
    4. '.height' → logprob: -12.875104904174805
    5. '.size' → logprob: -14.750104904174805
    6. ' .' → logprob: -14.875104904174805
    7. '.w' → logprob: -15.875104904174805
    8. '.length' → logprob: -17.625104904174805
    9. '.code' → logprob: -17.750104904174805
    10. '.x' → logprob: -18.250104904174805

Token 303: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.004079470410943031
    2. 'and' → logprob: -5.504079341888428
    3. ' ' → logprob: -13.879079818725586
    4. '       ' → logprob: -16.379079818725586
    5. '        ' → logprob: -17.129079818725586
    6. '    ' → logprob: -17.754079818725586
    7. ' ' → logprob: -17.879079818725586
    8. '	and' → logprob: -17.879079818725586
    9. ',' → logprob: -18.504079818725586
    10. '   ' → logprob: -19.129079818725586

Token 304: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005234002135694027
    2. ' ' → logprob: -5.2552337646484375
    3. '   ' → logprob: -16.880233764648438
    4. 'y' → logprob: -17.755233764648438
    5. ' y' → logprob: -18.255233764648438
    6. ' ' → logprob: -18.380233764648438
    7. '  ' → logprob: -19.005233764648438
    8. '    ' → logprob: -20.005233764648438
    9. '
' → logprob: -20.755233764648438
    10. '       ' → logprob: -20.755233764648438

Token 305: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00010902655776590109
    2. ' ' → logprob: -9.12510871887207
    3. 'y' → logprob: -16.50010871887207
    4. ' y' → logprob: -19.25010871887207
    5. '   ' → logprob: -20.12510871887207
    6. '۰' → logprob: -21.87510871887207
    7. ' ' → logprob: -22.00010871887207
    8. '  ' → logprob: -22.37510871887207
    9. '       ' → logprob: -23.00010871887207
    10. '
' → logprob: -23.50010871887207

Token 306: ' <=' (ID: 5017)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.1279846876859665
    2. '<' → logprob: -2.2529847621917725
    3. 'y' → logprob: -4.627984523773193
    4. ' y' → logprob: -5.627984523773193
    5. ' <=' → logprob: -7.627984523773193
    6. ' ' → logprob: -8.002985000610352
    7. '>' → logprob: -8.752985000610352
    8. '   ' → logprob: -9.252985000610352
    9. 'x' → logprob: -9.377985000610352
    10. ' >' → logprob: -9.502985000610352

Token 307: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.14779619872570038
    2. 'self' → logprob: -2.147796154022217
    3. ' y' → logprob: -4.022796154022217
    4. ' self' → logprob: -5.897796154022217
    5. 'height' → logprob: -12.897796630859375
    6. ' ' → logprob: -14.272796630859375
    7. '   ' → logprob: -15.772796630859375
    8. '       ' → logprob: -16.522796630859375
    9. ' height' → logprob: -17.147796630859375
    10. '(self' → logprob: -17.272796630859375

Token 308: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.005934843793511391
    2. '<' → logprob: -5.130934715270996
    3. '<|end|>' → logprob: -12.755934715270996
    4. ' ' → logprob: -13.005934715270996
    5. '<|end|>' → logprob: -14.755934715270996
    6. '<int' → logprob: -15.505934715270996
    7. '<class' → logprob: -16.005935668945312
    8. '<len' → logprob: -16.755935668945312
    9. '()<' → logprob: -17.005935668945312
    10. '<size' → logprob: -17.005935668945312

Token 309: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.002476135268807411
    2. ' self' → logprob: -6.002476215362549
    3. '       ' → logprob: -16.00247573852539
    4. '(self' → logprob: -16.50247573852539
    5. '[self' → logprob: -16.50247573852539
    6. '   ' → logprob: -16.62747573852539
    7. ' ' → logprob: -17.12747573852539
    8. '	self' → logprob: -17.37747573852539
    9. '0' → logprob: -17.37747573852539
    10. '=self' → logprob: -17.87747573852539

Token 310: '.height' (ID: 11682)
  Prédit: '.height'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.height' → logprob: -0.0031833017710596323
    2. 'height' → logprob: -5.753183364868164
    3. 'ight' → logprob: -13.003183364868164
    4. '.' → logprob: -13.503183364868164
    5. '.width' → logprob: -13.753183364868164
    6. '   ' → logprob: -14.878183364868164
    7. ' .' → logprob: -16.253183364868164
    8. 'self' → logprob: -16.503183364868164
    9. ' height' → logprob: -16.628183364868164
    10. '       ' → logprob: -16.878183364868164

Token 311: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 312: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0752230882644653
    2. '<|end|>' → logprob: -1.0752230882644653
    3. '   ' → logprob: -1.4502230882644653
    4. ' 
' → logprob: -3.575222969055176
    5. '    
' → logprob: -3.700222969055176
    6. '  
' → logprob: -4.700222969055176
    7. '\n' → logprob: -4.825222969055176
    8. '<|end|>' → logprob: -5.325222969055176
    9. ' ' → logprob: -5.950222969055176
    10. '```' → logprob: -6.200222969055176

Token 313: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.46621209383010864
    2. 'def' (adapté à ' def') → logprob: -1.0912120342254639
    3. ' def' → logprob: -3.466212034225464
    4. '<|end|>' → logprob: -6.091212272644043
    5. ' ' → logprob: -6.466212272644043
    6. '
' → logprob: -7.216212272644043
    7. '    
' → logprob: -7.841212272644043
    8. '	def' → logprob: -8.716212272644043
    9. '<|end|>' → logprob: -8.716212272644043
    10. '```' → logprob: -9.216212272644043

Token 314: ' neighbors' (ID: 31655)
  Prédit: 'neighbors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbors' → logprob: -1.0763967037200928
    2. ' neighbors' → logprob: -1.2013967037200928
    3. ' get' → logprob: -1.3263967037200928
    4. 'get' → logprob: -2.5763967037200928
    5. '_neighbors' → logprob: -4.451396942138672
    6. ' pass' → logprob: -7.076396942138672
    7. ' neighbours' → logprob: -7.326396942138672
    8. 'adj' → logprob: -7.451396942138672
    9. ' is' → logprob: -7.451396942138672
    10. 'neighbor' → logprob: -7.701396942138672

Token 315: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -6.229872087715194e-05
    2. '(' → logprob: -9.750061988830566
    3. ' (' → logprob: -12.625061988830566
    4. '   ' → logprob: -15.250061988830566
    5. '(
' → logprob: -15.250061988830566
    6. 'self' → logprob: -16.875062942504883
    7. '(x' → logprob: -17.500062942504883
    8. ' ' → logprob: -18.500062942504883
    9. '       ' → logprob: -18.500062942504883
    10. ' self' → logprob: -19.625062942504883

Token 316: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0014209493529051542
    2. ')' → logprob: -7.001420974731445
    3. ' (' → logprob: -8.876420974731445
    4. '(' → logprob: -8.876420974731445
    5. ')(' → logprob: -8.876420974731445
    6. 'self' → logprob: -9.751420974731445
    7. ',' → logprob: -10.876420974731445
    8. ' self' → logprob: -12.626420974731445
    9. '   ' → logprob: -13.001420974731445
    10. '       ' → logprob: -13.501420974731445

Token 317: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.23905903100967407
    2. 'self' → logprob: -1.6140589714050293
    3. ' x' → logprob: -4.489058971405029
    4. ' self' → logprob: -6.239058971405029
    5. '   ' → logprob: -8.364059448242188
    6. '       ' → logprob: -8.989059448242188
    7. ' ' → logprob: -13.114059448242188
    8. ')' → logprob: -13.114059448242188
    9. '    ' → logprob: -13.864059448242188
    10. '           ' → logprob: -13.864059448242188

Token 318: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0059951553121209145
    2. ':' → logprob: -5.755995273590088
    3. ' ,' → logprob: -6.255995273590088
    4. '   ' → logprob: -7.505995273590088
    5. ',y' → logprob: -8.25599479675293
    6. ':int' → logprob: -9.75599479675293
    7. ',int' → logprob: -12.38099479675293
    8. '       ' → logprob: -12.63099479675293
    9. ' :' → logprob: -12.88099479675293
    10. ',
' → logprob: -12.88099479675293

Token 319: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.225816547870636
    2. 'y' → logprob: -2.350816488265991
    3. ' y' → logprob: -2.350816488265991
    4. ' int' → logprob: -4.47581672668457
    5. 'x' → logprob: -8.97581672668457
    6. ':int' → logprob: -10.97581672668457
    7. ',' → logprob: -11.60081672668457
    8. ' x' → logprob: -12.22581672668457
    9. ' ' → logprob: -12.47581672668457
    10. '(int' → logprob: -13.22581672668457

Token 320: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0017389592248946428
    2. ' ,' → logprob: -6.876739025115967
    3. ',y' → logprob: -7.376739025115967
    4. '   ' → logprob: -9.501738548278809
    5. ',int' → logprob: -12.626738548278809
    6. '       ' → logprob: -14.376738548278809
    7. ' ' → logprob: -15.376738548278809
    8. ':' → logprob: -15.376738548278809
    9. 'y' → logprob: -15.626738548278809
    10. 'int' → logprob: -15.751738548278809

Token 321: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0067156096920371056
    2. ' y' → logprob: -5.006715774536133
    3. '   ' → logprob: -15.381715774536133
    4. '	y' → logprob: -18.006715774536133
    5. '  ' → logprob: -18.631715774536133
    6. ' ' → logprob: -18.756715774536133
    7. '    ' → logprob: -18.881715774536133
    8. 'int' → logprob: -19.256715774536133
    9. ')y' → logprob: -20.881715774536133
    10. 'x' → logprob: -21.006715774536133

Token 322: ':' (ID: 25)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00016337241686414927
    2. ' )' → logprob: -9.750163078308105
    3. '):' → logprob: -10.000163078308105
    4. '   ' → logprob: -10.125163078308105
    5. '):
' → logprob: -11.250163078308105
    6. ':' → logprob: -12.500163078308105
    7. ' ' → logprob: -13.250163078308105
    8. '       ' → logprob: -15.000163078308105
    9. '    ' → logprob: -15.375163078308105
    10. ')
' → logprob: -15.875163078308105

Token 323: ' int' (ID: 677)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3872480094432831
    2. 'int' → logprob: -1.1372480392456055
    3. ' int' → logprob: -8.512248039245605
    4. '1' → logprob: -9.512248039245605
    5. ':int' → logprob: -9.887248039245605
    6. '   ' → logprob: -11.012248039245605
    7. '):
' → logprob: -11.512248039245605
    8. '):' → logprob: -11.762248039245605
    9. ' )' → logprob: -12.262248039245605
    10. '[int' → logprob: -13.012248039245605

Token 324: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.7954958821064793e-05
    2. '):
' → logprob: -11.875018119812012
    3. ' )' → logprob: -12.125018119812012
    4. '):' → logprob: -12.250018119812012
    5. '   ' → logprob: -14.625018119812012
    6. ' ' → logprob: -16.750017166137695
    7. '`)' → logprob: -16.875017166137695
    8. '）' → logprob: -17.000017166137695
    9. ')
' → logprob: -17.125017166137695
    10. '")' → logprob: -17.500017166137695

Token 325: ' ->' (ID: 2747)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003028213744983077
    2. ' ->' → logprob: -6.378028392791748
    3. '->' → logprob: -6.878028392791748
    4. ' )' → logprob: -9.25302791595459
    5. '   ' → logprob: -9.37802791595459
    6. ')->' → logprob: -9.50302791595459
    7. '       ' → logprob: -11.00302791595459
    8. ':' → logprob: -12.12802791595459
    9. ']' → logprob: -12.50302791595459
    10. '    ' → logprob: -12.62802791595459

Token 326: ' Iterator' (ID: 41994)
  Prédit: 'Iterator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Iterator' → logprob: -0.20382334291934967
    2. ' Iterator' → logprob: -1.9538233280181885
    3. 'List' → logprob: -3.2038233280181885
    4. ' List' → logprob: -6.203823566436768
    5. '   ' → logprob: -11.32882308959961
    6. '	Iterator' → logprob: -11.45382308959961
    7. 'Iterable' → logprob: -11.95382308959961
    8. ' ' → logprob: -13.20382308959961
    9. '[List' → logprob: -13.95382308959961
    10. '  ' → logprob: -14.82882308959961

Token 327: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.796184723294573e-06
    2. '[
' → logprob: -12.375005722045898
    3. 'Tuple' → logprob: -14.125005722045898
    4. '[int' → logprob: -15.500005722045898
    5. '```' → logprob: -15.750005722045898
    6. '<Tuple' → logprob: -16.2500057220459
    7. '   ' → logprob: -16.3750057220459
    8. '       ' → logprob: -16.7500057220459
    9. '[(' → logprob: -17.5000057220459
    10. ':
' → logprob: -17.5000057220459

Token 328: 'Tuple' (ID: 40048)
  Prédit: 'Tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tuple' → logprob: -1.0325924449716695e-05
    2. ' Tuple' → logprob: -11.50001049041748
    3. 'Grid' → logprob: -16.500009536743164
    4. 'tuple' → logprob: -16.750009536743164
    5. 'Tu' → logprob: -18.750009536743164
    6. '   ' → logprob: -20.125009536743164
    7. 'int' → logprob: -20.750009536743164
    8. '```' → logprob: -21.625009536743164
    9. '[' → logprob: -21.750009536743164
    10. '.Tuple' → logprob: -21.875009536743164

Token 329: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -3.8889261304575484e-06
    2. 'int' → logprob: -12.500003814697266
    3. ',int' → logprob: -16.625003814697266
    4. '<int' → logprob: -17.000003814697266
    5. '(int' → logprob: -18.750003814697266
    6. ']int' → logprob: -18.875003814697266
    7. '[Int' → logprob: -19.625003814697266
    8. '[
' → logprob: -20.250003814697266
    9. '	int' → logprob: -20.250003814697266
    10. '=int' → logprob: -21.000003814697266

Token 330: ',int' (ID: 20909)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0018977019935846329
    2. ',y' → logprob: -6.376897811889648
    3. ' ,' → logprob: -9.001897811889648
    4. ',int' → logprob: -10.251897811889648
    5. ',x' → logprob: -10.876897811889648
    6. ',next' → logprob: -11.876897811889648
    7. ',user' → logprob: -12.876897811889648
    8. ',n' → logprob: -13.001897811889648
    9. ',
' → logprob: -14.251897811889648
    10. '   ' → logprob: -14.751897811889648

Token 331: ']]:
' (ID: 183340)
  Prédit: ']]:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]:
' → logprob: -0.036913443356752396
    2. ']]' → logprob: -3.5369133949279785
    3. ']' → logprob: -5.0369133949279785
    4. ']:' → logprob: -8.786913871765137
    5. ']>' → logprob: -8.911913871765137
    6. ')]' → logprob: -9.036913871765137
    7. ']:
' → logprob: -9.161913871765137
    8. '>' → logprob: -10.036913871765137
    9. ' ]' → logprob: -10.536913871765137
    10. ',' → logprob: -11.286913871765137

Token 332: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04415617510676384
    2. ':' → logprob: -3.419156074523926
    3. '   ' → logprob: -4.919156074523926
    4. ':
' → logprob: -6.419156074523926
    5. ',' → logprob: -7.044156074523926
    6. '        
' → logprob: -8.419156074523926
    7. '    
' → logprob: -8.919156074523926
    8. ' 
' → logprob: -9.294156074523926
    9. '):
' → logprob: -10.544156074523926
    10. '<|end|>' → logprob: -10.669156074523926

Token 333: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1456591933965683
    2. 'for' (adapté à ' for') → logprob: -2.6456592082977295
    3. '       ' → logprob: -2.8956592082977295
    4. ' directions' → logprob: -5.14565896987915
    5. 'dire' → logprob: -6.39565896987915
    6. 'd' → logprob: -7.02065896987915
    7. '
' → logprob: -7.77065896987915
    8. ' del' → logprob: -9.020659446716309
    9. '	for' → logprob: -9.645659446716309
    10. 'moves' → logprob: -9.645659446716309

Token 334: ' dx' (ID: 29472)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.00266186217777431
    2. 'nx' → logprob: -6.00266170501709
    3. ' dx' → logprob: -9.25266170501709
    4. '(dx' → logprob: -9.50266170501709
    5. '(nx' → logprob: -11.75266170501709
    6. '(' → logprob: -13.00266170501709
    7. 'dy' → logprob: -13.12766170501709
    8. '   ' → logprob: -13.50266170501709
    9. ' nx' → logprob: -14.25266170501709
    10. 'delta' → logprob: -14.37766170501709

Token 335: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3102281093597412
    2. 'in' → logprob: -1.4352281093597412
    3. ',' → logprob: -3.560228109359741
    4. ' ,' → logprob: -8.68522834777832
    5. ',d' → logprob: -10.93522834777832
    6. ',in' → logprob: -11.43522834777832
    7. 'dy' → logprob: -12.31022834777832
    8. '   ' → logprob: -13.06022834777832
    9. '    ' → logprob: -13.06022834777832
    10. 'd' → logprob: -13.06022834777832

Token 336: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.004620949272066355
    2. ' dy' → logprob: -5.3796210289001465
    3. '.dy' → logprob: -15.004620552062988
    4. ' ' → logprob: -15.879620552062988
    5. 'd' → logprob: -16.379621505737305
    6. ' (' → logprob: -17.004621505737305
    7. ',' → logprob: -17.254621505737305
    8. '0' → logprob: -17.379621505737305
    9. '   ' → logprob: -18.004621505737305
    10. ')' → logprob: -18.254621505737305

Token 337: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06994132697582245
    2. 'in' → logprob: -2.694941282272339
    3. ' ' → logprob: -13.319941520690918
    4. ')' → logprob: -14.444941520690918
    5. '```' → logprob: -14.819941520690918
    6. 's' → logprob: -14.944941520690918
    7. '	in' → logprob: -15.069941520690918
    8. 'In' → logprob: -15.069941520690918
    9. '   ' → logprob: -15.194941520690918
    10. '  ' → logprob: -15.444941520690918

Token 338: ' [(' (ID: 43900)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.16098299622535706
    2. '[' → logprob: -1.9109829664230347
    3. ' [' → logprob: -7.910983085632324
    4. '((' → logprob: -8.660983085632324
    5. ' [(' → logprob: -8.785983085632324
    6. '[((' → logprob: -9.660983085632324
    7. ' ((' → logprob: -13.535983085632324
    8. '[-' → logprob: -15.535983085632324
    9. '((-' → logprob: -15.535983085632324
    10. ' ' → logprob: -15.785983085632324

Token 339: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.09213576465845108
    2. '-' → logprob: -2.5921356678009033
    3. '1' → logprob: -4.342135906219482
    4. ' ' → logprob: -8.842135429382324
    5. ' -' → logprob: -12.342135429382324
    6. '   ' → logprob: -14.717135429382324
    7. '(' → logprob: -15.217135429382324
    8. '−' → logprob: -16.21713638305664
    9. '```' → logprob: -16.59213638305664
    10. '(-' → logprob: -16.59213638305664

Token 340: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00035798799945041537
    2. ' ,' → logprob: -8.125357627868652
    3. '0' → logprob: -9.750357627868652
    4. '<|end|>' → logprob: -13.250357627868652
    5. ',
' → logprob: -13.875357627868652
    6. '),' → logprob: -14.500357627868652
    7. ',),' → logprob: -16.12535858154297
    8. '),(' → logprob: -16.87535858154297
    9. '‌,' → logprob: -17.00035858154297
    10. ' ' → logprob: -17.12535858154297

Token 341: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0013260759878903627
    2. ' ' → logprob: -6.626326084136963
    3. '   ' → logprob: -16.501325607299805
    4. '  ' → logprob: -17.188825607299805
    5. '۰' → logprob: -17.251325607299805
    6. ')' → logprob: -17.876325607299805
    7. ',' → logprob: -18.438825607299805
    8. ' ' → logprob: -18.626325607299805
    9. '<|end|>' → logprob: -18.938825607299805
    10. '```' → logprob: -19.063825607299805

Token 342: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.020878883078694344
    2. '),(' → logprob: -3.895878791809082
    3. ' ),' → logprob: -8.020878791809082
    4. '),
' → logprob: -11.895878791809082
    5. ',),' → logprob: -14.145878791809082
    6. ')' → logprob: -14.895878791809082
    7. ',' → logprob: -15.770878791809082
    8. '),

' → logprob: -16.2708797454834
    9. '],' → logprob: -16.3958797454834
    10. ' ' → logprob: -17.3958797454834

Token 343: '(-' (ID: 8087)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01546382810920477
    2. '(' → logprob: -4.765463829040527
    3. ' ' → logprob: -5.015463829040527
    4. ' (' → logprob: -8.765463829040527
    5. '-' → logprob: -10.390463829040527
    6. '(-' → logprob: -13.015463829040527
    7. ' -' → logprob: -13.390463829040527
    8. '   ' → logprob: -14.765463829040527
    9. ',' → logprob: -15.390463829040527
    10. '  ' → logprob: -16.64046287536621

Token 344: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.0
    3. '0' → logprob: -18.1875
    4. '

' → logprob: -18.9375
    5. '```' → logprob: -18.9375
    6. '   ' → logprob: -19.0625
    7. ',' → logprob: -19.5
    8. 'dx' → logprob: -19.5625
    9. '۱' → logprob: -19.625
    10. '১' → logprob: -19.75

Token 345: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004008793330285698
    2. '0' → logprob: -8.12540054321289
    3. ' ,' → logprob: -9.37540054321289
    4. '),' → logprob: -11.00040054321289
    5. '),(' → logprob: -12.87540054321289
    6. '<|end|>' → logprob: -15.12540054321289
    7. ')' → logprob: -15.50040054321289
    8. ' ' → logprob: -16.00040054321289
    9. ',
' → logprob: -17.12540054321289
    10. ',(' → logprob: -17.25040054321289

Token 346: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.610702363715973e-06
    2. ' ' → logprob: -11.625009536743164
    3. '<|end|>' → logprob: -14.375009536743164
    4. '۰' → logprob: -18.125009536743164
    5. ')' → logprob: -19.062509536743164
    6. ',' → logprob: -19.375009536743164
    7. '<|end|>' → logprob: -20.062509536743164
    8. '
' → logprob: -20.437509536743164
    9. 'def' → logprob: -20.437509536743164
    10. '1' → logprob: -20.750009536743164

Token 347: '),(' (ID: 54876)
  Prédit: '),('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),(' → logprob: -0.00019138160860165954
    2. ',(' → logprob: -9.125191688537598
    3. '),' → logprob: -9.625191688537598
    4. ',' → logprob: -11.125191688537598
    5. '(' → logprob: -13.875191688537598
    6. ' ),' → logprob: -14.750191688537598
    7. '):(' → logprob: -16.37519073486328
    8. ')' → logprob: -17.37519073486328
    9. '),
' → logprob: -17.50019073486328
    10. ' ,' → logprob: -18.00019073486328

Token 348: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.8889261304575484e-06
    2. ' ' → logprob: -12.500003814697266
    3. ',' → logprob: -16.625003814697266
    4. '۰' → logprob: -17.000003814697266
    5. '```' → logprob: -17.687503814697266
    6. '00' → logprob: -18.687503814697266
    7. '   ' → logprob: -18.812503814697266
    8. ')' → logprob: -19.000003814697266
    9. '
' → logprob: -19.250003814697266
    10. '1' → logprob: -19.312503814697266

Token 349: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004438971809577197
    2. '1' → logprob: -7.750443935394287
    3. ' ,' → logprob: -11.500443458557129
    4. ',-' → logprob: -12.875443458557129
    5. ',
' → logprob: -15.250443458557129
    6. ' ' → logprob: -16.250444412231445
    7. ')' → logprob: -16.750444412231445
    8. '```' → logprob: -17.000444412231445
    9. '   ' → logprob: -17.062944412231445
    10. '-' → logprob: -17.250444412231445

Token 350: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001249925117008388
    2. '-' → logprob: -9.00012493133545
    3. ' ' → logprob: -13.37512493133545
    4. '```' → logprob: -17.625125885009766
    5. ' -' → logprob: -17.750125885009766
    6. '   ' → logprob: -18.375125885009766
    7. '+' → logprob: -18.500125885009766
    8. ')' → logprob: -18.625125885009766
    9. '
' → logprob: -18.750125885009766
    10. '

' → logprob: -20.000125885009766

Token 351: '),(' (ID: 54876)
  Prédit: '),('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),(' → logprob: -2.3080716346157715e-05
    2. '),' → logprob: -10.750022888183594
    3. ',(' → logprob: -14.250022888183594
    4. ' ),' → logprob: -14.500022888183594
    5. ',' → logprob: -15.000022888183594
    6. '(' → logprob: -16.500022888183594
    7. '),
' → logprob: -17.125022888183594
    8. '],[' → logprob: -18.250022888183594
    9. ',),' → logprob: -18.250022888183594
    10. ')' → logprob: -18.875022888183594

Token 352: '0' (ID: 15)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.1472419600977446e-06
    2. '0' → logprob: -13.875000953674316
    3. ' -' → logprob: -16.500001907348633
    4. '−' → logprob: -20.500001907348633
    5. '```' → logprob: -20.625001907348633
    6. '–' → logprob: -21.625001907348633
    7. ' ' → logprob: -22.625001907348633
    8. '   ' → logprob: -22.750001907348633
    9. ')' → logprob: -22.750001907348633
    10. '<|end|>' → logprob: -23.000001907348633

Token 353: ',-' (ID: 8202)
  Prédit: ',-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',-' → logprob: -0.004108915571123362
    2. ',' → logprob: -5.504108905792236
    3. '-' → logprob: -10.504109382629395
    4. ' ,-' → logprob: -13.254109382629395
    5. ',-
' → logprob: -14.379109382629395
    6. '1' → logprob: -15.754109382629395
    7. ',-

' → logprob: -15.754109382629395
    8. '",-' → logprob: -15.879109382629395
    9. ',
' → logprob: -16.379108428955078
    10. ' ,' → logprob: -16.504108428955078

Token 354: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -14.625000953674316
    3. ')' → logprob: -15.625000953674316
    4. '```' → logprob: -15.750000953674316
    5. ')]' → logprob: -16.000001907348633
    6. '   ' → logprob: -16.937501907348633
    7. '0' → logprob: -17.500001907348633
    8. ',' → logprob: -18.687501907348633
    9. '<|end|>' → logprob: -18.687501907348633
    10. '2' → logprob: -18.750001907348633

Token 355: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.12893177568912506
    2. ')' → logprob: -2.128931760787964
    3. '):
' → logprob: -7.003931999206543
    4. '):' → logprob: -7.003931999206543
    5. ' )' → logprob: -8.878931999206543
    6. '       ' → logprob: -11.503931999206543
    7. ']]:
' → logprob: -11.753931999206543
    8. ']' → logprob: -12.003931999206543
    9. '   ' → logprob: -12.628931999206543
    10. ']):
' → logprob: -12.753931999206543

Token 356: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.43151241540908813
    2. ':
' → logprob: -1.0565123558044434
    3. '       ' → logprob: -5.931512355804443
    4. '):
' → logprob: -9.431512832641602
    5. ',' → logprob: -10.931512832641602
    6. '   ' → logprob: -11.181512832641602
    7. ':
' → logprob: -11.556512832641602
    8. ':

' → logprob: -11.806512832641602
    9. '           ' → logprob: -12.056512832641602
    10. '):' → logprob: -12.056512832641602

Token 357: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.022468656301498413
    2. '       ' → logprob: -3.8974685668945312
    3. ' yield' → logprob: -7.022468566894531
    4. 'yield' → logprob: -7.522468566894531
    5. ' if' → logprob: -8.522468566894531
    6. ',' → logprob: -9.647468566894531
    7. 'x' → logprob: -9.897468566894531
    8. '
' → logprob: -10.647468566894531
    9. ' x' → logprob: -11.272468566894531
    10. '               ' → logprob: -11.272468566894531

Token 358: ' nx' (ID: 50118)
  Prédit: ' nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nx' → logprob: -0.06561306118965149
    2. 'nx' (adapté à ' nx') → logprob: -2.815613031387329
    3. ' new' → logprob: -5.815613269805908
    4. '           ' → logprob: -7.940613269805908
    5. 'new' → logprob: -8.19061279296875
    6. '               ' → logprob: -11.56561279296875
    7. '(nx' → logprob: -12.44061279296875
    8. '   ' → logprob: -12.81561279296875
    9. 'xn' → logprob: -13.69061279296875
    10. 'x' → logprob: -13.81561279296875

Token 359: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.577492892742157
    2. ' =' → logprob: -0.952492892742157
    3. ',' → logprob: -2.9524929523468018
    4. '=x' → logprob: -7.327492713928223
    5. ',x' → logprob: -10.827492713928223
    6. ' ,' → logprob: -11.452492713928223
    7. '=n' → logprob: -12.202492713928223
    8. 'x' → logprob: -12.452492713928223
    9. ')' → logprob: -12.952492713928223
    10. '```' → logprob: -13.202492713928223

Token 360: ' ny' (ID: 4423)
  Prédit: 'ny'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -0.47590371966362
    2. ' ny' → logprob: -0.9759037494659424
    3. 'y' → logprob: -6.350903511047363
    4. ' y' → logprob: -9.725903511047363
    5. 'n' → logprob: -12.225903511047363
    6. '    ' → logprob: -12.975903511047363
    7. '   ' → logprob: -13.100903511047363
    8. ' =' → logprob: -13.225903511047363
    9. ' ' → logprob: -13.350903511047363
    10. 'Ny' → logprob: -13.600903511047363

Token 361: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0232466422021389
    2. ' =' → logprob: -3.7732465267181396
    3. '=x' → logprob: -13.773246765136719
    4. '=
' → logprob: -16.77324676513672
    5. ',' → logprob: -17.02324676513672
    6. ')' → logprob: -18.02324676513672
    7. '=

' → logprob: -18.27324676513672
    8. ')=' → logprob: -18.77324676513672
    9. '=n' → logprob: -18.77324676513672
    10. '=}' → logprob: -19.02324676513672

Token 362: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.03804183006286621
    2. ' x' → logprob: -3.288041830062866
    3. '(x' → logprob: -15.288042068481445
    4. '   ' → logprob: -16.788042068481445
    5. '	x' → logprob: -17.288042068481445
    6. ' ' → logprob: -18.413042068481445
    7. ')x' → logprob: -18.913042068481445
    8. '    ' → logprob: -19.163042068481445
    9. '"x' → logprob: -19.413042068481445
    10. '```' → logprob: -19.538042068481445

Token 363: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.126930832862854
    2. '+' → logprob: -2.1269307136535645
    3. '+x' → logprob: -12.876931190490723
    4. ' +
' → logprob: -16.501930236816406
    5. '+d' → logprob: -16.751930236816406
    6. ' plus' → logprob: -17.126930236816406
    7. ' ' → logprob: -17.126930236816406
    8. '+
' → logprob: -17.876930236816406
    9. ' ' → logprob: -18.126930236816406
    10. ' +=' → logprob: -18.251930236816406

Token 364: ' dx' (ID: 29472)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.00017970333283301443
    2. ' dx' → logprob: -8.625179290771484
    3. '_dx' → logprob: -16.625179290771484
    4. '(dx' → logprob: -17.125179290771484
    5. '.dx' → logprob: -18.625179290771484
    6. '   ' → logprob: -19.250179290771484
    7. 'Dx' → logprob: -19.750179290771484
    8. 'x' → logprob: -20.125179290771484
    9. 'DX' → logprob: -20.625179290771484
    10. 'nx' → logprob: -20.875179290771484

Token 365: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.994086627149954e-05
    2. ' ,' → logprob: -9.875080108642578
    3. ',y' → logprob: -10.500080108642578
    4. ',n' → logprob: -14.375080108642578
    5. ',
' → logprob: -15.250080108642578
    6. 'y' → logprob: -16.875080108642578
    7. ',b' → logprob: -19.125080108642578
    8. '),' → logprob: -19.250080108642578
    9. ',v' → logprob: -19.500080108642578
    10. ',d' → logprob: -19.750080108642578

Token 366: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.07888978719711304
    2. 'y' → logprob: -2.578889846801758
    3. '	y' → logprob: -17.328889846801758
    4. ' ' → logprob: -17.828889846801758
    5. 'dy' → logprob: -18.953889846801758
    6. ' ' → logprob: -19.203889846801758
    7. '   ' → logprob: -19.328889846801758
    8. '    ' → logprob: -19.578889846801758
    9. 'ny' → logprob: -19.953889846801758
    10. '(y' → logprob: -20.078889846801758

Token 367: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.07889022678136826
    2. '+' → logprob: -2.578890323638916
    3. '+y' → logprob: -14.828889846801758
    4. '<|end|>' → logprob: -17.703889846801758
    5. ' +
' → logprob: -17.953889846801758
    6. '+
' → logprob: -18.203889846801758
    7. 'y' → logprob: -18.453889846801758
    8. ' ' → logprob: -19.703889846801758
    9. ' ' → logprob: -20.078889846801758
    10. '＋' → logprob: -20.953889846801758

Token 368: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.055971648544073105
    2. ' dy' → logprob: -2.930971622467041
    3. 'y' → logprob: -6.930971622467041
    4. ' y' → logprob: -10.1809720993042
    5. '1' → logprob: -10.3059720993042
    6. '<|end|>' → logprob: -10.5559720993042
    7. ' ' → logprob: -12.0559720993042
    8. '.dy' → logprob: -12.3059720993042
    9. 'ny' → logprob: -13.4309720993042
    10. 'Dy' → logprob: -14.5559720993042

Token 369: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08800546079874039
    2. '       ' → logprob: -2.838005542755127
    3. '<|end|>' → logprob: -4.088005542755127
    4. '        
' → logprob: -5.838005542755127
    5. '  
' → logprob: -6.588005542755127
    6. '           ' → logprob: -6.838005542755127
    7. '
' → logprob: -7.463005542755127
    8. '            
' → logprob: -7.588005542755127
    9. ' 
' → logprob: -7.588005542755127
    10. '		
' → logprob: -7.838005542755127

Token 370: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00013738969573751092
    2. '            
' → logprob: -9.625137329101562
    3. '
' → logprob: -10.625137329101562
    4. '<|end|>' → logprob: -10.750137329101562
    5. '  
' → logprob: -11.625137329101562
    6. '       ' → logprob: -12.375137329101562
    7. '<|end|>' → logprob: -13.250137329101562
    8. ' if' → logprob: -13.500137329101562
    9. '   ' → logprob: -13.625137329101562
    10. '	       ' → logprob: -14.000137329101562

Token 371: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.000847267743665725
    2. ' if' → logprob: -7.500847339630127
    3. '
' → logprob: -8.750846862792969
    4. 'if' (adapté à ' if') → logprob: -10.375846862792969
    5. '	       ' → logprob: -10.375846862792969
    6. '            
' → logprob: -10.875846862792969
    7. '		' → logprob: -11.125846862792969
    8. ' 
' → logprob: -11.250846862792969
    9. '       ' → logprob: -11.375846862792969
    10. '               ' → logprob: -13.000846862792969

Token 372: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.12693586945533752
    2. ' self' → logprob: -2.1269359588623047
    3. '   ' → logprob: -12.751935958862305
    4. '(self' → logprob: -13.501935958862305
    5. '           ' → logprob: -14.001935958862305
    6. '	self' → logprob: -14.126935958862305
    7. ' ' → logprob: -14.251935958862305
    8. '       ' → logprob: -15.501935958862305
    9. '[self' → logprob: -15.501935958862305
    10. ' ' → logprob: -16.001935958862305

Token 373: '.in' (ID: 2250)
  Prédit: '.in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.in' → logprob: -1.2352385965641588e-05
    2. '.' → logprob: -11.500012397766113
    3. ' .' → logprob: -13.375012397766113
    4. '_.' → logprob: -15.875012397766113
    5. ').' → logprob: -16.125011444091797
    6. 'in' → logprob: -16.125011444091797
    7. '._' → logprob: -16.750011444091797
    8. '>.' → logprob: -17.250011444091797
    9. '.is' → logprob: -17.625011444091797
    10. '.i' → logprob: -17.875011444091797

Token 374: '_bounds' (ID: 90408)
  Prédit: '_bounds'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bounds' → logprob: -8.2994620242971e-06
    2. 'bounds' → logprob: -12.250008583068848
    3. '_' → logprob: -13.625008583068848
    4. '_bound' → logprob: -13.625008583068848
    5. ' _' → logprob: -15.625008583068848
    6. '```' → logprob: -15.625008583068848
    7. '_b' → logprob: -16.12500762939453
    8. '_limits' → logprob: -16.87500762939453
    9. '_n' → logprob: -17.12500762939453
    10. '_coords' → logprob: -17.50000762939453

Token 375: '(nx' (ID: 189861)
  Prédit: '(nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nx' → logprob: -0.0013680962147191167
    2. '(' → logprob: -6.626368045806885
    3. ' (' → logprob: -10.126368522644043
    4. '(
' → logprob: -13.876368522644043
    5. 'nx' → logprob: -14.876368522644043
    6. '(nn' → logprob: -15.251368522644043
    7. '(n' → logprob: -15.251368522644043
    8. '(cx' → logprob: -17.126367568969727
    9. '(dx' → logprob: -17.376367568969727
    10. '(nb' → logprob: -17.376367568969727

Token 376: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012240358628332615
    2. ' ,' → logprob: -7.001224040985107
    3. ',n' → logprob: -8.12622356414795
    4. ',y' → logprob: -11.12622356414795
    5. ',
' → logprob: -13.62622356414795
    6. '<|end|>' → logprob: -15.75122356414795
    7. ',next' → logprob: -15.75122356414795
    8. ',x' → logprob: -16.876224517822266
    9. '‌,' → logprob: -17.001224517822266
    10. ')' → logprob: -17.126224517822266

Token 377: ' ny' (ID: 4423)
  Prédit: 'ny'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -0.038047801703214645
    2. ' ny' → logprob: -3.2880477905273438
    3. 'y' → logprob: -12.288047790527344
    4. 'n' → logprob: -14.663047790527344
    5. '   ' → logprob: -15.288047790527344
    6. 'nyi' → logprob: -15.288047790527344
    7. ' ' → logprob: -15.413047790527344
    8. ' y' → logprob: -15.538047790527344
    9. '
' → logprob: -16.038047790527344
    10. '    ' → logprob: -16.413047790527344

Token 378: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.029355132952332497
    2. '):' → logprob: -3.779355049133301
    3. ' )' → logprob: -5.404355049133301
    4. ' and' → logprob: -7.029355049133301
    5. '):
' → logprob: -7.904355049133301
    6. 'and' → logprob: -8.6543550491333
    7. ' ):' → logprob: -8.7793550491333
    8. ' ):
' → logprob: -12.2793550491333
    9. '           ' → logprob: -13.0293550491333
    10. '):

' → logprob: -13.4043550491333

Token 379: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0011141392169520259
    2. ' and' → logprob: -7.001114368438721
    3. ' yield' → logprob: -9.251113891601562
    4. 'yield' → logprob: -10.126113891601562
    5. '           ' → logprob: -10.251113891601562
    6. '                
' → logprob: -11.626113891601562
    7. '
' → logprob: -12.251113891601562
    8. '                   ' → logprob: -12.876113891601562
    9. ':' → logprob: -13.376113891601562
    10. ',' → logprob: -13.501113891601562

Token 380: ' yield' (ID: 14376)
  Prédit: 'yield'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yield' (adapté à ' yield') → logprob: -0.21149718761444092
    2. ' yield' → logprob: -1.711497187614441
    3. '                   ' → logprob: -5.3364973068237305
    4. '               ' → logprob: -5.3364973068237305
    5. '	yield' → logprob: -7.9614973068237305
    6. '
' → logprob: -9.96149730682373
    7. '```' → logprob: -12.33649730682373
    8. 'Yield' → logprob: -12.71149730682373
    9. '   ' → logprob: -13.58649730682373
    10. '                       ' → logprob: -13.71149730682373

Token 381: ' nx' (ID: 50118)
  Prédit: '(nx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nx' → logprob: -0.16834208369255066
    2. ' (' → logprob: -1.918342113494873
    3. 'nx' → logprob: -5.168342113494873
    4. ' nx' → logprob: -6.043342113494873
    5. '   ' → logprob: -12.043341636657715
    6. '(n' → logprob: -12.293341636657715
    7. 'ny' → logprob: -14.293341636657715
    8. ' ny' → logprob: -14.480841636657715
    9. '(
' → logprob: -14.543341636657715
    10. ' ' → logprob: -14.543341636657715

Token 382: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.873571692267433e-05
    2. ' ,' → logprob: -9.750068664550781
    3. ',
' → logprob: -12.250068664550781
    4. ',n' → logprob: -12.375068664550781
    5. ',y' → logprob: -13.750068664550781
    6. '               ' → logprob: -17.00006866455078
    7. '<|end|>' → logprob: -17.00006866455078
    8. '‌,' → logprob: -17.12506866455078
    9. '```' → logprob: -17.50006866455078
    10. ',new' → logprob: -17.75006866455078

Token 383: ' ny' (ID: 4423)
  Prédit: 'ny'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -0.001170225441455841
    2. ' ny' → logprob: -6.7511701583862305
    3. 'nyi' → logprob: -17.001171112060547
    4. ' ' → logprob: -18.626171112060547
    5. ' ' → logprob: -18.876171112060547
    6. '   ' → logprob: -19.001171112060547
    7. 'nyt' → logprob: -19.126171112060547
    8. 'n' → logprob: -19.376171112060547
    9. '
' → logprob: -19.626171112060547
    10. 'nye' → logprob: -19.751171112060547

Token 384: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014633284881711006
    2. '<|end|>' → logprob: -4.2646331787109375
    3. '<|end|>' → logprob: -8.764633178710938
    4. '
' → logprob: -8.764633178710938
    5. 'def' → logprob: -9.639633178710938
    6. 'class' → logprob: -10.389633178710938
    7. '```' → logprob: -10.889633178710938
    8. '    
' → logprob: -11.389633178710938
    9. '.' → logprob: -11.764633178710938
    10. ' def' → logprob: -12.514633178710938

Token 385: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2347632199525833
    2. '<|end|>' → logprob: -1.609763264656067
    3. 'def' → logprob: -5.234763145446777
    4. '<|end|>' → logprob: -6.359763145446777
    5. '```' → logprob: -7.109763145446777
    6. 'class' → logprob: -8.109763145446777
    7. '
' → logprob: -8.609763145446777
    8. ')' → logprob: -8.609763145446777
    9. '    
' → logprob: -8.734763145446777
    10. ' def' → logprob: -8.734763145446777

Token 386: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.09637890756130219
    2. '   ' → logprob: -2.471378803253174
    3. ' def' → logprob: -4.971378803253174
    4. ' ' → logprob: -7.971378803253174
    5. '	def' → logprob: -10.096379280090332
    6. '<|end|>' → logprob: -10.346379280090332
    7. '```' → logprob: -10.596379280090332
    8. ')' → logprob: -11.596379280090332
    9. '
' → logprob: -11.721379280090332
    10. '  ' → logprob: -12.221379280090332

Token 387: ' point' (ID: 2438)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -1.0237343311309814
    2. ' find' → logprob: -1.5237343311309814
    3. 'is' → logprob: -1.7737343311309814
    4. 'find' → logprob: -2.6487343311309814
    5. ' can' → logprob: -3.0237343311309814
    6. ' bfs' → logprob: -3.7737343311309814
    7. ' shortest' → logprob: -3.8987343311309814
    8. 'can' → logprob: -3.8987343311309814
    9. 'short' → logprob: -4.648734092712402
    10. ' path' → logprob: -4.648734092712402

Token 388: '(self' (ID: 2402)
  Prédit: '_at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_at' → logprob: -0.043423887342214584
    2. '(self' → logprob: -3.168423891067505
    3. 's' → logprob: -9.168423652648926
    4. '_from' → logprob: -9.418423652648926
    5. '(' → logprob: -9.543423652648926
    6. '_is' → logprob: -9.793423652648926
    7. '_type' → logprob: -10.668423652648926
    8. '_' → logprob: -11.418423652648926
    9. '_by' → logprob: -11.668423652648926
    10. 'At' → logprob: -11.668423652648926

Token 389: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08151745796203613
    2. '(self' → logprob: -2.706517457962036
    3. 'self' → logprob: -4.581517219543457
    4. ' ,' → logprob: -7.456517219543457
    5. '   ' → logprob: -8.331517219543457
    6. ',self' → logprob: -9.206517219543457
    7. ' self' → logprob: -9.331517219543457
    8. ')' → logprob: -9.581517219543457
    9. ' at' → logprob: -9.956517219543457
    10. ' (' → logprob: -10.081517219543457

Token 390: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.02135404571890831
    2. ' x' → logprob: -4.0213541984558105
    3. 'self' → logprob: -5.7713541984558105
    4. ' self' → logprob: -9.396353721618652
    5. ')x' → logprob: -15.396353721618652
    6. '	x' → logprob: -16.14635467529297
    7. '   ' → logprob: -16.64635467529297
    8. ')' → logprob: -17.14635467529297
    9. '(self' → logprob: -17.77135467529297
    10. ' ' → logprob: -18.52135467529297

Token 391: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009962485637515783
    2. ',y' → logprob: -7.375996112823486
    3. ' ,' → logprob: -8.125996589660645
    4. ',int' → logprob: -10.000996589660645
    5. ':' → logprob: -11.750996589660645
    6. ':int' → logprob: -12.875996589660645
    7. ',p' → logprob: -13.250996589660645
    8. ',b' → logprob: -13.375996589660645
    9. ',n' → logprob: -13.375996589660645
    10. ',j' → logprob: -13.750996589660645

Token 392: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00842722225934267
    2. ' int' → logprob: -4.883427143096924
    3. '<|end|>' → logprob: -7.633427143096924
    4. ',' → logprob: -9.258427619934082
    5. 'y' → logprob: -9.758427619934082
    6. ':int' → logprob: -9.883427619934082
    7. ' ' → logprob: -10.133427619934082
    8. ' y' → logprob: -10.508427619934082
    9. ',int' → logprob: -11.008427619934082
    10. 'x' → logprob: -11.258427619934082

Token 393: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00016516048344783485
    2. ' ,' → logprob: -9.250164985656738
    3. ',y' → logprob: -9.625164985656738
    4. ',int' → logprob: -13.125164985656738
    5. '   ' → logprob: -15.000164985656738
    6. ')' → logprob: -15.250164985656738
    7. ',n' → logprob: -16.125165939331055
    8. ',
' → logprob: -16.875165939331055
    9. ',index' → logprob: -17.125165939331055
    10. '‌,' → logprob: -17.500165939331055

Token 394: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.001503313542343676
    2. ' y' → logprob: -6.5015034675598145
    3. '   ' → logprob: -14.001502990722656
    4. '<|end|>' → logprob: -16.876502990722656
    5. 'int' → logprob: -17.126502990722656
    6. '	y' → logprob: -17.876502990722656
    7. '  ' → logprob: -18.251502990722656
    8. '    ' → logprob: -18.376502990722656
    9. ' ' → logprob: -18.626502990722656
    10. ')' → logprob: -19.501502990722656

Token 395: ':' (ID: 25)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008548821206204593
    2. '):' → logprob: -7.125854969024658
    3. ':' → logprob: -10.8758544921875
    4. ' )' → logprob: -11.0008544921875
    5. '):
' → logprob: -11.6258544921875
    6. '   ' → logprob: -12.2508544921875
    7. ':int' → logprob: -15.0008544921875
    8. ' ' → logprob: -15.2508544921875
    9. ' ):' → logprob: -16.2508544921875
    10. ')->' → logprob: -16.6258544921875

Token 396: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0003281944082118571
    2. ')' → logprob: -8.500328063964844
    3. ' int' → logprob: -9.000328063964844
    4. ':int' → logprob: -13.875328063964844
    5. '   ' → logprob: -15.125328063964844
    6. '=int' → logprob: -17.125328063964844
    7. '(int' → logprob: -17.875328063964844
    8. '[int' → logprob: -18.375328063964844
    9. '```' → logprob: -18.625328063964844
    10. '	int' → logprob: -18.750328063964844

Token 397: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.6087021473795176e-05
    2. '   ' → logprob: -10.875045776367188
    3. '):
' → logprob: -10.875045776367188
    4. '):' → logprob: -12.250045776367188
    5. ' )' → logprob: -13.250045776367188
    6. '       ' → logprob: -14.000045776367188
    7. '])' → logprob: -14.750045776367188
    8. ' ' → logprob: -16.375045776367188
    9. ')->' → logprob: -16.750045776367188
    10. ']' → logprob: -17.000045776367188

Token 398: ' ->' (ID: 2747)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0023206991609185934
    2. ' ->' → logprob: -7.127320766448975
    3. ')->' → logprob: -7.252320766448975
    4. '->' → logprob: -7.627320766448975
    5. ':' → logprob: -8.627320289611816
    6. '):' → logprob: -10.002320289611816
    7. '   ' → logprob: -10.252320289611816
    8. ']' → logprob: -11.002320289611816
    9. '       ' → logprob: -11.252320289611816
    10. ':return' → logprob: -12.002320289611816

Token 399: ' Grid' (ID: 18087)
  Prédit: ' Grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Grid' → logprob: -0.6669918894767761
    2. 'Grid' → logprob: -0.9169918894767761
    3. ' self' → logprob: -2.791991949081421
    4. 'self' → logprob: -3.666991949081421
    5. ' return' → logprob: -9.1669921875
    6. ' Optional' → logprob: -10.9169921875
    7. 'Optional' → logprob: -10.9169921875
    8. 'return' → logprob: -11.6669921875
    9. '	Grid' → logprob: -11.7919921875
    10. ' ' → logprob: -12.1669921875

Token 400: 'Point' (ID: 4219)
  Prédit: 'Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: 0.0
    2. '.Point' → logprob: -19.125
    3. '	Point' → logprob: -19.125
    4. ' Point' → logprob: -19.375
    5. '<Point' → logprob: -19.5
    6. '_Point' → logprob: -20.0
    7. '(Point' → logprob: -20.125
    8. 'point' → logprob: -20.375
    9. '_point' → logprob: -20.5
    10. '_POINT' → logprob: -20.5

Token 401: ':
' (ID: 734)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.03327690064907074
    2. '(' → logprob: -4.5332770347595215
    3. ':' → logprob: -4.5332770347595215
    4. 'self' → logprob: -5.5332770347595215
    5. '       ' → logprob: -5.9082770347595215
    6. ')' → logprob: -6.2832770347595215
    7. '   ' → logprob: -6.5332770347595215
    8. '(
' → logprob: -7.2832770347595215
    9. '):' → logprob: -8.783276557922363
    10. ' self' → logprob: -9.408276557922363

Token 402: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07616422325372696
    2. ' 
' → logprob: -3.9511642456054688
    3. '<|end|>' → logprob: -4.076164245605469
    4. '   ' → logprob: -4.201164245605469
    5. ' return' → logprob: -4.826164245605469
    6. '        
' → logprob: -5.451164245605469
    7. ' ' → logprob: -5.951164245605469
    8. '    
' → logprob: -6.201164245605469
    9. '
' → logprob: -6.701164245605469
    10. '  
' → logprob: -6.826164245605469

Token 403: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7764737606048584
    2. 'return' (adapté à ' return') → logprob: -0.7764737606048584
    3. ' return' → logprob: -2.5264737606048584
    4. '
' → logprob: -12.401473999023438
    5. '	return' → logprob: -12.901473999023438
    6. '   ' → logprob: -13.526473999023438
    7. '{return' → logprob: -15.026473999023438
    8. ':return' → logprob: -15.276473999023438
    9. '        
' → logprob: -16.026473999023438
    10. ' 
' → logprob: -16.651473999023438

Token 404: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0009114635176956654
    2. ' self' → logprob: -7.000911235809326
    3. '	self' → logprob: -20.250911712646484
    4. '(self' → logprob: -20.750911712646484
    5. '       ' → logprob: -21.125911712646484
    6. '[self' → logprob: -21.625911712646484
    7. '=self' → logprob: -21.875911712646484
    8. '   ' → logprob: -22.625911712646484
    9. 'Self' → logprob: -22.875911712646484
    10. '
' → logprob: -22.875911712646484

Token 405: '.grid' (ID: 19269)
  Prédit: '.grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.grid' → logprob: -0.0007379194721579552
    2. '.' → logprob: -7.250738143920898
    3. ' .' → logprob: -10.500738143920898
    4. ').' → logprob: -16.2507381439209
    5. '.point' → logprob: -17.1257381439209
    6. '\.' → logprob: -17.3757381439209
    7. 'grid' → logprob: -17.5007381439209
    8. '.space' → logprob: -17.8757381439209
    9. '	grid' → logprob: -18.0007381439209
    10. '.points' → logprob: -18.1257381439209

Token 406: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -9.014684110297821e-06
    2. 'y' → logprob: -12.125008583068848
    3. '[' → logprob: -12.750008583068848
    4. ' [' → logprob: -15.375008583068848
    5. '```' → logprob: -15.500008583068848
    6. '][' → logprob: -16.375009536743164
    7. '[user' → logprob: -16.875009536743164
    8. '[self' → logprob: -17.000009536743164
    9. '\[' → logprob: -17.125009536743164
    10. '   ' → logprob: -17.125009536743164

Token 407: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0002330992283532396
    2. ']' → logprob: -8.375232696533203
    3. ' ][' → logprob: -13.625232696533203
    4. '[x' → logprob: -14.375232696533203
    5. '[' → logprob: -14.750232696533203
    6. ']
' → logprob: -16.750232696533203
    7. '"][' → logprob: -16.875232696533203
    8. ']][' → logprob: -17.125232696533203
    9. '[
' → logprob: -17.625232696533203
    10. '][]' → logprob: -17.625232696533203

Token 408: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -3.128163257315464e-07
    2. ' x' → logprob: -15.25
    3. '<|end|>' → logprob: -19.125
    4. ')x' → logprob: -19.5
    5. '(x' → logprob: -21.5
    6. '[x' → logprob: -21.625
    7. 'xref' → logprob: -21.875
    8. ' ' → logprob: -21.875
    9. '"x' → logprob: -22.0
    10. '][' → logprob: -22.125

Token 409: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.061983708292245865
    2. ']' → logprob: -2.811983823776245
    3. '}' → logprob: -12.561984062194824
    4. ')
' → logprob: -12.811984062194824
    5. ' )' → logprob: -13.186984062194824
    6. '])' → logprob: -13.186984062194824
    7. '<|end|>' → logprob: -13.186984062194824
    8. ')]' → logprob: -13.436984062194824
    9. '）' → logprob: -14.061984062194824
    10. ']
' → logprob: -14.186984062194824

Token 410: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04235506057739258
    2. '   ' → logprob: -4.167355060577393
    3. '
' → logprob: -4.292355060577393
    4. ' def' → logprob: -4.542355060577393
    5. 'd' → logprob: -7.292355060577393
    6. '```' → logprob: -7.542355060577393
    7. 'class' → logprob: -9.292354583740234
    8. '    
' → logprob: -9.792354583740234
    9. ' 
' → logprob: -10.042354583740234
    10. '

' → logprob: -10.292354583740234

Token 411: ' Ninja' (ID: 77983)
  Prédit: 'Path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Path' → logprob: -1.4062355756759644
    2. ' Castle' → logprob: -1.4062355756759644
    3. 'Castle' → logprob: -1.4062355756759644
    4. ' Pathfinder' → logprob: -1.6562355756759644
    5. ' Path' → logprob: -2.906235694885254
    6. 'Maze' → logprob: -5.781235694885254
    7. ' Maze' → logprob: -6.031235694885254
    8. ' Treasure' → logprob: -6.656235694885254
    9. 'Escape' → logprob: -7.031235694885254
    10. 'Bread' → logprob: -7.031235694885254

Token 412: 'Path' (ID: 2619)
  Prédit: 'Path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Path' → logprob: -0.3745495676994324
    2. ':' → logprob: -1.9995496273040771
    3. 'Explorer' → logprob: -2.624549627304077
    4. 'Navigator' → logprob: -3.874549627304077
    5. 'Agent' → logprob: -3.999549627304077
    6. 'Runner' → logprob: -4.624549388885498
    7. 'Scout' → logprob: -4.749549388885498
    8. 'Searcher' → logprob: -4.999549388885498
    9. 'Traversal' → logprob: -5.249549388885498
    10. 'Solver' → logprob: -5.374549388885498

Token 413: 'finder' (ID: 54491)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.15344376862049103
    2. 'Finder' → logprob: -2.0284438133239746
    3. ':
' → logprob: -5.028443813323975
    4. 'Searcher' → logprob: -6.028443813323975
    5. 'Search' → logprob: -7.403443813323975
    6. 'finder' → logprob: -7.528443813323975
    7. 'Solver' → logprob: -7.903443813323975
    8. 'Finding' → logprob: -9.778443336486816
    9. 'Planner' → logprob: -10.153443336486816
    10. 'Explorer' → logprob: -10.778443336486816

Token 414: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0031960124615579844
    2. ':
' → logprob: -5.7531962394714355
    3. ' :' → logprob: -11.878195762634277
    4. ':def' → logprob: -11.878195762634277
    5. '(' → logprob: -13.378195762634277
    6. ':

' → logprob: -13.753195762634277
    7. 'def' → logprob: -14.878195762634277
    8. '   ' → logprob: -15.003195762634277
    9. '(object' → logprob: -15.128195762634277
    10. '):' → logprob: -15.378195762634277

Token 415: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.056023720651865005
    2. ' def' → logprob: -2.9310238361358643
    3. 'def' → logprob: -6.806023597717285
    4. '    
' → logprob: -12.056023597717285
    5. ':' → logprob: -12.556023597717285
    6. '```' → logprob: -12.681023597717285
    7. ' ind' → logprob: -12.931023597717285
    8. ' indentation' → logprob: -13.056023597717285
    9. '   ' → logprob: -13.431023597717285
    10. ' indent' → logprob: -13.431023597717285

Token 416: ' """
' (ID: 7037)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.0620490238070488
    2. 'def' → logprob: -2.81204891204834
    3. '   ' → logprob: -9.43704891204834
    4. 'class' → logprob: -14.68704891204834
    5. ' ' → logprob: -15.06204891204834
    6. 'de' → logprob: -15.18704891204834
    7. '	def' → logprob: -15.56204891204834
    8. '    ' → logprob: -15.93704891204834
    9. 'from' → logprob: -16.062049865722656
    10. ':def' → logprob: -16.312049865722656

Token 417: '   ' (ID: 271)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.057336196303367615
    2. 'def' → logprob: -2.9323360919952393
    3. '   ' → logprob: -6.182336330413818
    4. ' __' → logprob: -7.932336330413818
    5. 'init' → logprob: -11.55733585357666
    6. '    ' → logprob: -12.68233585357666
    7. '  ' → logprob: -12.80733585357666
    8. ' ' → logprob: -12.93233585357666
    9. ' init' → logprob: -13.30733585357666
    10. '_init' → logprob: -13.68233585357666

Token 418: ' A' (ID: 355)
  Prédit: ' Finds'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Finds' → logprob: -0.6490859389305115
    2. ' def' → logprob: -1.3990859985351562
    3. 'Find' → logprob: -2.1490859985351562
    4. ' """
' → logprob: -3.6490859985351562
    5. 'def' → logprob: -3.7740859985351562
    6. '   ' → logprob: -4.274085998535156
    7. 'Expl' → logprob: -4.774085998535156
    8. '"""
' → logprob: -4.899085998535156
    9. 'Uses' → logprob: -5.149085998535156
    10. ' Find' → logprob: -5.774085998535156

Token 419: ' sophisticated' (ID: 36278)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.3977709710597992
    2. ' path' → logprob: -1.3977710008621216
    3. ' search' → logprob: -4.022770881652832
    4. ' star' → logprob: -4.647770881652832
    5. ' ' → logprob: -4.772770881652832
    6. 'path' → logprob: -4.897770881652832
    7. ' class' → logprob: -5.022770881652832
    8. 'star' → logprob: -5.147770881652832
    9. ' BFS' → logprob: -5.647770881652832
    10. 'n' → logprob: -5.772770881652832

Token 420: ' class' (ID: 744)
  Prédit: ' path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' path' → logprob: -0.01848750375211239
    2. ' class' → logprob: -4.518487453460693
    3. 'path' → logprob: -5.393487453460693
    4. ' BFS' → logprob: -7.268487453460693
    5. ' search' → logprob: -7.643487453460693
    6. ' shortest' → logprob: -7.768487453460693
    7. ' ' → logprob: -8.268487930297852
    8. 'class' → logprob: -8.768487930297852
    9. ' grid' → logprob: -9.143487930297852
    10. ' algorithm' → logprob: -9.268487930297852

Token 421: ' to' (ID: 316)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4285855293273926
    2. ' that' → logprob: -1.4285855293273926
    3. ' to' → logprob: -2.4285855293273926
    4. ' designed' → logprob: -4.553585529327393
    5. '   ' → logprob: -4.803585529327393
    6. '<|end|>' → logprob: -7.678585529327393
    7. 'for' → logprob: -8.053585052490234
    8. ' capable' → logprob: -8.428585052490234
    9. '    ' → logprob: -8.803585052490234
    10. '  ' → logprob: -8.803585052490234

Token 422: ' find' (ID: 1646)
  Prédit: ' find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' find' → logprob: -0.2567824721336365
    2. 'find' → logprob: -1.5067825317382812
    3. ' compute' → logprob: -6.506782531738281
    4. 'compute' → logprob: -7.756782531738281
    5. 'navigate' → logprob: -7.756782531738281
    6. ' perform' → logprob: -7.881782531738281
    7. ' calculate' → logprob: -8.006782531738281
    8. 'calculate' → logprob: -8.131782531738281
    9. 'solve' → logprob: -8.506782531738281
    10. ' navigate' → logprob: -8.756782531738281

Token 423: ' minimal' (ID: 19957)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.6211644411087036
    2. ' paths' → logprob: -1.6211644411087036
    3. ' a' → logprob: -1.7461644411087036
    4. 'the' → logprob: -2.996164321899414
    5. 'paths' → logprob: -3.746164321899414
    6. 'a' → logprob: -4.371164321899414
    7. ' valid' → logprob: -6.871164321899414
    8. ' an' → logprob: -7.121164321899414
    9. ' shortest' → logprob: -7.371164321899414
    10. 'path' → logprob: -7.996164321899414

Token 424: ' times' (ID: 4238)
  Prédit: ' steps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' steps' → logprob: -0.10156701505184174
    2. ' path' → logprob: -3.101567029953003
    3. ' paths' → logprob: -3.726567029953003
    4. ' cost' → logprob: -4.351566791534424
    5. 'steps' → logprob: -5.226566791534424
    6. '_steps' → logprob: -6.226566791534424
    7. ' distance' → logprob: -6.601566791534424
    8. '-cost' → logprob: -6.726566791534424
    9. ' distances' → logprob: -6.726566791534424
    10. 'cost' → logprob: -6.851566791534424

Token 425: ' ninja' (ID: 112647)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.02200230024755001
    2. ' for' → logprob: -4.147002220153809
    3. '   ' → logprob: -6.522002220153809
    4. 'to' → logprob: -6.772002220153809
    5. ' and' → logprob: -6.897002220153809
    6. ' in' → logprob: -6.897002220153809
    7. ' that' → logprob: -8.772002220153809
    8. ' ' → logprob: -8.897002220153809
    9. ' path' → logprob: -8.897002220153809
    10. '<|end|>' → logprob: -9.022002220153809

Token 426: ' must' (ID: 2804)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 427: ' crawl' (ID: 73056)
  Prédit: 'wait'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wait' → logprob: -0.8157526254653931
    2. ' wait' → logprob: -1.440752625465393
    3. 'pass' → logprob: -3.1907525062561035
    4. '   ' → logprob: -3.1907525062561035
    5. 'take' → logprob: -3.1907525062561035
    6. ' spend' → logprob: -3.3157525062561035
    7. 'sp' → logprob: -3.5657525062561035
    8. 'reach' → logprob: -3.5657525062561035
    9. ' traverse' → logprob: -4.0657525062561035
    10. ' take' → logprob: -4.1907525062561035

Token 428: ' out' (ID: 842)
  Prédit: ' through'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' through' → logprob: -0.3282053768634796
    2. 'through' → logprob: -1.8282053470611572
    3. ' to' → logprob: -3.0782053470611572
    4. ' under' → logprob: -3.7032053470611572
    5. 'to' → logprob: -3.8282053470611572
    6. 'under' → logprob: -5.203205585479736
    7. ' across' → logprob: -5.578205585479736
    8. ' around' → logprob: -6.078205585479736
    9. ' before' → logprob: -6.078205585479736
    10. 'from' → logprob: -6.078205585479736

Token 429: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.03722578287124634
    2. '   ' → logprob: -4.162225723266602
    3. ' to' → logprob: -5.037225723266602
    4. 'of' → logprob: -5.162225723266602
    5. ' through' → logprob: -6.287225723266602
    6. ' from' → logprob: -6.787225723266602
    7. ' the' → logprob: -6.912225723266602
    8. ',' → logprob: -7.162225723266602
    9. '  ' → logprob: -7.287225723266602
    10. 'from' → logprob: -7.287225723266602

Token 430: ' moat' (ID: 152750)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.22155798971652985
    2. 'a' → logprob: -1.9715579748153687
    3. ' the' → logprob: -3.221558094024658
    4. ' a' → logprob: -4.721558094024658
    5. 'castle' → logprob: -4.846558094024658
    6. 'mo' → logprob: -6.596558094024658
    7. ' castle' → logprob: -7.971558094024658
    8. 'an' → logprob: -8.4715576171875
    9. ' mo' → logprob: -8.7215576171875
    10. 'enemy' → logprob: -9.0965576171875

Token 431: ' (#' (ID: 66375)
  Prédit: ' by'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' by' → logprob: -1.2586169242858887
    2. ' to' → logprob: -1.7586169242858887
    3. ' using' → logprob: -1.7586169242858887
    4. '.' → logprob: -2.5086169242858887
    5. ' through' → logprob: -2.6336169242858887
    6. '   ' → logprob: -2.8836169242858887
    7. ' and' → logprob: -3.2586169242858887
    8. ' in' → logprob: -3.5086169242858887
    9. ' while' → logprob: -4.258616924285889
    10. ' wall' → logprob: -4.633616924285889

Token 432: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014778713695704937
    2. '),' → logprob: -5.5147786140441895
    3. ' or' → logprob: -5.5147786140441895
    4. ').' → logprob: -5.8897786140441895
    5. ' )' → logprob: -6.7647786140441895
    6. ' and' → logprob: -6.8897786140441895
    7. ' to' → logprob: -7.6397786140441895
    8. ',' → logprob: -7.7647786140441895
    9. '#' → logprob: -8.639779090881348
    10. '')' → logprob: -9.389779090881348

Token 433: ' when' (ID: 1261)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -1.0056310892105103
    2. '   ' → logprob: -2.3806309700012207
    3. ' and' → logprob: -2.3806309700012207
    4. ' through' → logprob: -2.3806309700012207
    5. ' by' → logprob: -2.3806309700012207
    6. ' or' → logprob: -2.7556309700012207
    7. '.' → logprob: -2.8806309700012207
    8. ',' → logprob: -3.3806309700012207
    9. ' in' → logprob: -3.7556309700012207
    10. ' using' → logprob: -4.380630970001221

Token 434: ' traveling' (ID: 26023)
  Prédit: 'starting'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'starting' → logprob: -1.56580650806427
    2. 'search' → logprob: -1.69080650806427
    3. 'moving' → logprob: -1.69080650806427
    4. 'enter' → logprob: -2.5658063888549805
    5. 'escaping' → logprob: -3.1908063888549805
    6. ' travers' → logprob: -3.8158063888549805
    7. 'finding' → logprob: -3.8158063888549805
    8. 'the' → logprob: -3.9408063888549805
    9. 'given' → logprob: -3.9408063888549805
    10. 'path' → logprob: -4.1908063888549805

Token 435: ' from' (ID: 591)
  Prédit: ' through'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' through' → logprob: -0.060842130333185196
    2. 'through' → logprob: -3.4358420372009277
    3. ' from' → logprob: -4.935842037200928
    4. ' to' → logprob: -5.060842037200928
    5. 'from' → logprob: -5.185842037200928
    6. '   ' → logprob: -6.310842037200928
    7. ' between' → logprob: -6.435842037200928
    8. ' the' → logprob: -7.060842037200928
    9. ' in' → logprob: -7.185842037200928
    10. ' across' → logprob: -7.310842037200928

Token 436: ' outside' (ID: 7539)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.4227038323879242
    2. 'start' → logprob: -1.5477038621902466
    3. ' a' → logprob: -2.672703742980957
    4. ' start' → logprob: -3.547703742980957
    5. 'one' → logprob: -4.297703742980957
    6. ' one' → logprob: -5.172703742980957
    7. 'the' → logprob: -5.297703742980957
    8. 'point' → logprob: -6.672703742980957
    9. 'their' → logprob: -6.797703742980957
    10. 'an' → logprob: -6.922703742980957

Token 437: '
' (ID: 198)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.6482675671577454
    2. ' to' → logprob: -1.0232675075531006
    3. ' into' → logprob: -2.3982675075531006
    4. 'the' → logprob: -3.8982675075531006
    5. ' through' → logprob: -5.89826774597168
    6. 'to' → logprob: -6.02326774597168
    7. 'into' → logprob: -8.02326774597168
    8. ' of' → logprob: -8.02326774597168
    9. ' castle' → logprob: -8.77326774597168
    10. ' a' → logprob: -9.77326774597168

Token 438: '   ' (ID: 271)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.26840028166770935
    2. ' the' → logprob: -1.8934003114700317
    3. ' into' → logprob: -2.518400192260742
    4. ' through' → logprob: -6.268400192260742
    5. 'the' → logprob: -7.018400192260742
    6. ' of' → logprob: -7.393400192260742
    7. 'to' → logprob: -7.643400192260742
    8. ',' → logprob: -9.643400192260742
    9. ' onto' → logprob: -10.018400192260742
    10. '#' → logprob: -10.393400192260742

Token 439: ' (' (ID: 350)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.804668128490448
    2. ' to' → logprob: -1.0546681880950928
    3. 'the' → logprob: -2.0546681880950928
    4. ' into' → logprob: -3.0546681880950928
    5. 'to' → logprob: -3.8046681880950928
    6. ' through' → logprob: -5.929667949676514
    7. 'into' → logprob: -6.054667949676514
    8. 'through' → logprob: -7.929667949676514
    9. '#' → logprob: -8.429668426513672
    10. ' of' → logprob: -8.429668426513672

Token 440: 'any' (ID: 1252)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.8328364491462708
    2. ' the' → logprob: -1.082836389541626
    3. ')' → logprob: -1.957836389541626
    4. 'a' → logprob: -4.332836627960205
    5. '#' → logprob: -4.582836627960205
    6. ' a' → logprob: -4.832836627960205
    7. ' to' → logprob: -5.082836627960205
    8. 'outside' → logprob: -5.207836627960205
    9. ' grid' → logprob: -5.957836627960205
    10. 'to' → logprob: -5.957836627960205

Token 441: ' non' (ID: 2893)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.8819242715835571
    2. 'position' → logprob: -2.2569241523742676
    3. ' position' → logprob: -2.3819241523742676
    4. 'where' → logprob: -2.6319241523742676
    5. 'point' → logprob: -2.6319241523742676
    6. '#' → logprob: -2.8819241523742676
    7. ' point' → logprob: -2.8819241523742676
    8. ' cell' → logprob: -3.2569241523742676
    9. 'cell' → logprob: -3.5069241523742676
    10. 'side' → logprob: -3.6319241523742676

Token 442: '-c' (ID: 3452)
  Prédit: 'mo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mo' → logprob: -0.8012746572494507
    2. '#' → logprob: -1.3012746572494507
    3. ' #' → logprob: -2.5512747764587402
    4. ' '#'' → logprob: -2.8012747764587402
    5. '-mo' → logprob: -3.3012747764587402
    6. ''#' → logprob: -3.3012747764587402
    7. ' moat' → logprob: -4.05127477645874
    8. ' '#' → logprob: -4.55127477645874
    9. ' mo' → logprob: -4.80127477645874
    10. '-' → logprob: -4.92627477645874

Token 443: 'ast' (ID: 629)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.010655843652784824
    2. ')' → logprob: -6.385655879974365
    3. 'rawl' → logprob: -6.635655879974365
    4. '`' → logprob: -7.010655879974365
    5. 'r' → logprob: -7.010655879974365
    6. '```' → logprob: -7.635655879974365
    7. 'raw' → logprob: -7.885655879974365
    8. ''#' → logprob: -7.948155879974365
    9. ' #' → logprob: -8.073155403137207
    10. 'ode' → logprob: -8.135655403137207

Token 444: 'le' (ID: 282)
  Prédit: 'le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.0005867527215741575
    2. '#' → logprob: -8.25058650970459
    3. 'l' → logprob: -8.87558650970459
    4. 'e' → logprob: -9.37558650970459
    5. 'led' → logprob: -9.87558650970459
    6. 'leground' → logprob: -12.25058650970459
    7. 'ed' → logprob: -12.31308650970459
    8. '
' → logprob: -12.56308650970459
    9. 'lement' → logprob: -12.62558650970459
    10. '```' → logprob: -13.12558650970459

Token 445: ' perimeter' (ID: 89600)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8153524398803711
    2. ' space' → logprob: -2.065352439880371
    3. ' terrain' → logprob: -2.315352439880371
    4. ' area' → logprob: -2.440352439880371
    5. ' )' → logprob: -2.440352439880371
    6. 'space' → logprob: -2.940352439880371
    7. 'terrain' → logprob: -3.565352439880371
    8. ' territory' → logprob: -3.940352439880371
    9. 'area' → logprob: -4.565352439880371
    10. ',' → logprob: -5.315352439880371

Token 446: ' edge' (ID: 11165)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14777769148349762
    2. ' cell' → logprob: -2.897777795791626
    3. ' point' → logprob: -3.772777795791626
    4. 'cell' → logprob: -4.022777557373047
    5. ' )' → logprob: -4.272777557373047
    6. 'point' → logprob: -4.897777557373047
    7. ' position' → logprob: -5.272777557373047
    8. ' tile' → logprob: -5.647777557373047
    9. ' to' → logprob: -6.022777557373047
    10. 'position' → logprob: -6.272777557373047

Token 447: ' cell' (ID: 4206)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02834276854991913
    2. ' to' → logprob: -4.1533427238464355
    3. ' )' → logprob: -4.5283427238464355
    4. ' or' → logprob: -8.153343200683594
    5. 'to' → logprob: -8.528343200683594
    6. ' point' → logprob: -8.653343200683594
    7. ' of' → logprob: -9.028343200683594
    8. ' and' → logprob: -9.528343200683594
    9. ',' → logprob: -9.528343200683594
    10. ' ' → logprob: -9.653343200683594

Token 448: ' not' (ID: 625)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002602887572720647
    2. ' to' → logprob: -6.377603054046631
    3. ' )' → logprob: -7.127603054046631
    4. 'to' → logprob: -10.002602577209473
    5. ' into' → logprob: -10.627602577209473
    6. 's' → logprob: -12.127602577209473
    7. ',' → logprob: -12.377602577209473
    8. ')
' → logprob: -12.377602577209473
    9. ' inside' → logprob: -13.502602577209473
    10. '),' → logprob: -13.627602577209473

Token 449: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.723605751991272
    2. ' in' → logprob: -1.098605751991272
    3. 'inside' → logprob: -3.2236056327819824
    4. ' a' → logprob: -3.5986056327819824
    5. ' inside' → logprob: -3.7236056327819824
    6. ')' → logprob: -3.8486056327819824
    7. 'a' → logprob: -3.8486056327819824
    8. ' on' → logprob: -4.723605632781982
    9. ''#' → logprob: -4.973605632781982
    10. 'on' → logprob: -5.348605632781982

Token 450: ' moat' (ID: 152750)
  Prédit: 'mo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mo' → logprob: -0.27560991048812866
    2. 'the' → logprob: -2.1506099700927734
    3. 'a' → logprob: -2.2756099700927734
    4. ')' → logprob: -5.150609970092773
    5. 'castle' → logprob: -5.650609970092773
    6. ''#' → logprob: -5.775609970092773
    7. '')' → logprob: -6.400609970092773
    8. '#' → logprob: -6.775609970092773
    9. ' a' → logprob: -6.775609970092773
    10. ' moat' → logprob: -7.025609970092773

Token 451: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003327787620946765
    2. ' to' → logprob: -6.7533278465271
    3. ' or' → logprob: -7.1283278465271
    4. ' )' → logprob: -7.1283278465271
    5. ',' → logprob: -8.628327369689941
    6. 'to' → logprob: -9.503327369689941
    7. '#' → logprob: -9.628327369689941
    8. '),' → logprob: -9.753327369689941
    9. ' and' → logprob: -10.003327369689941
    10. ').' → logprob: -10.378327369689941

Token 452: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.06442361325025558
    2. '   ' → logprob: -2.8144235610961914
    3. 'to' → logprob: -6.814423561096191
    4. ')' → logprob: -8.439423561096191
    5. '.' → logprob: -8.439423561096191
    6. ' and' → logprob: -8.564423561096191
    7. '<|end|>' → logprob: -8.814423561096191
    8. ' for' → logprob: -9.064423561096191
    9. ',' → logprob: -9.439423561096191
    10. ' ' → logprob: -9.564423561096191

Token 453: ' goal' (ID: 8583)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.13488776981830597
    2. ' a' → logprob: -2.8848876953125
    3. 'the' → logprob: -3.0098876953125
    4. ' any' → logprob: -5.1348876953125
    5. ' goal' → logprob: -5.2598876953125
    6. 'a' → logprob: -6.1348876953125
    7. 'goal' → logprob: -6.2598876953125
    8. ' an' → logprob: -6.2598876953125
    9. ' inside' → logprob: -6.5098876953125
    10. 'any' → logprob: -7.1348876953125

Token 454: ' (&' (ID: 38476)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.7725176811218262
    2. '   ' → logprob: -1.2725176811218262
    3. ')' → logprob: -2.897517681121826
    4. ' (' → logprob: -3.147517681121826
    5. '"' → logprob: -3.647517681121826
    6. '#' → logprob: -4.022517681121826
    7. '"""' → logprob: -4.522517681121826
    8. ',' → logprob: -4.647517681121826
    9. ' to' → logprob: -4.772517681121826
    10. ':' → logprob: -4.897517681121826

Token 455: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16691839694976807
    2. ').' → logprob: -1.916918396949768
    3. '):' → logprob: -5.1669182777404785
    4. '.' → logprob: -8.041918754577637
    5. '):
' → logprob: -8.541918754577637
    6. ' )' → logprob: -8.791918754577637
    7. ').
' → logprob: -9.666918754577637
    8. '),' → logprob: -9.791918754577637
    9. '):

' → logprob: -10.041918754577637
    10. ')
' → logprob: -10.666918754577637

Token 456: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007882476784288883
    2. '
' → logprob: -5.507882595062256
    3. '    
' → logprob: -5.757882595062256
    4. '"""' → logprob: -7.882882595062256
    5. '```' → logprob: -9.632882118225098
    6. ' 
' → logprob: -9.632882118225098
    7. ' """' → logprob: -11.007882118225098
    8. '    ' → logprob: -11.007882118225098
    9. '<|end|>' → logprob: -11.132882118225098
    10. '   
' → logprob: -11.632882118225098

Token 457: ' Ant' (ID: 7019)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0533532053232193
    2. '
' → logprob: -3.0533533096313477
    3. '    
' → logprob: -6.053353309631348
    4. '"""' → logprob: -6.553353309631348
    5. ' 
' → logprob: -8.303353309631348
    6. ' """
' → logprob: -8.803353309631348
    7. '```' → logprob: -8.803353309631348
    8. '"""
' → logprob: -8.928353309631348
    9. ' """' → logprob: -9.178353309631348
    10. '    ' → logprob: -10.053353309631348

Token 458: 'icip' (ID: 6144)
  Prédit: 'icip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icip' → logprob: -0.3726387321949005
    2. '   ' → logprob: -1.3726387023925781
    3. '       ' → logprob: -4.122638702392578
    4. 'e' → logprob: -4.997638702392578
    5. '```' → logprob: -4.997638702392578
    6. '"""' → logprob: -5.497638702392578
    7. '
' → logprob: -5.747638702392578
    8. '"""
' → logprob: -5.872638702392578
    9. '#' → logprob: -5.997638702392578
    10. 's' → logprob: -6.497638702392578

Token 459: 'ates' (ID: 1381)
  Prédit: 'ates'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ates' → logprob: -0.8607925176620483
    2. 'ated' → logprob: -0.9857925176620483
    3. 'ating' → logprob: -1.7357925176620483
    4. 'ate' → logprob: -3.610792636871338
    5. 'ation' → logprob: -7.735792636871338
    6. 'p' → logprob: -9.11079216003418
    7. 'a' → logprob: -9.98579216003418
    8. 'at' → logprob: -10.36079216003418
    9. '
' → logprob: -10.86079216003418
    10. '#' → logprob: -10.86079216003418

Token 460: ' subclasses' (ID: 162106)
  Prédit: ' that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' that' → logprob: -1.2513583898544312
    2. ' the' → logprob: -2.1263585090637207
    3. ' possible' → logprob: -2.7513585090637207
    4. '   ' → logprob: -3.1263585090637207
    5. ' mo' → logprob: -3.2513585090637207
    6. '#' → logprob: -3.3763585090637207
    7. 'that' → logprob: -3.3763585090637207
    8. ' multiple' → logprob: -3.3763585090637207
    9. ' scenarios' → logprob: -3.7513585090637207
    10. 'possible' → logprob: -3.7513585090637207

Token 461: ' or' (ID: 503)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3980810344219208
    2. ' to' → logprob: -1.8980810642242432
    3. ' that' → logprob: -3.273081064224243
    4. ':' → logprob: -3.648081064224243
    5. '.' → logprob: -3.773081064224243
    6. ' with' → logprob: -4.023080825805664
    7. ' ' → logprob: -4.523080825805664
    8. ' for' → logprob: -4.523080825805664
    9. ',' → logprob: -4.773080825805664
    10. ' and' → logprob: -5.023080825805664

Token 462: ' different' (ID: 2647)
  Prédit: 'extensions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'extensions' → logprob: -1.6308681964874268
    2. ' future' → logprob: -1.7558681964874268
    3. 'future' → logprob: -2.5058681964874268
    4. ' extensions' → logprob: -2.5058681964874268
    5. 'additional' → logprob: -2.7558681964874268
    6. ' other' → logprob: -2.8808681964874268
    7. ' further' → logprob: -3.2558681964874268
    8. ' additional' → logprob: -3.3808681964874268
    9. 'other' → logprob: -3.5058681964874268
    10. 'mod' → logprob: -4.005867958068848

Token 463: ' terrains' (ID: 151050)
  Prédit: ' approaches'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' approaches' → logprob: -1.1996304988861084
    2. ' scenarios' → logprob: -1.8246304988861084
    3. ' strategies' → logprob: -2.1996304988861084
    4. ' traversal' → logprob: -2.5746304988861084
    5. ' use' → logprob: -2.8246304988861084
    6. ' path' → logprob: -3.5746304988861084
    7. 'strateg' → logprob: -3.6996304988861084
    8. ' methods' → logprob: -3.6996304988861084
    9. ' behavior' → logprob: -3.9496304988861084
    10. 'appro' → logprob: -4.0746307373046875

Token 464: ' or' (ID: 503)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04213542118668556
    2. ':' → logprob: -3.29213547706604
    3. ':
' → logprob: -6.792135238647461
    4. '
' → logprob: -7.042135238647461
    5. '.' → logprob: -7.292135238647461
    6. 'def' → logprob: -7.917135238647461
    7. ',' → logprob: -8.292135238647461
    8. '<|end|>' → logprob: -8.542135238647461
    9. ' def' → logprob: -8.667135238647461
    10. ' ' → logprob: -9.042135238647461

Token 465: ' movement' (ID: 12772)
  Prédit: ' movement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' movement' → logprob: -1.838968276977539
    2. ' scenarios' → logprob: -2.588968276977539
    3. 'movement' → logprob: -2.838968276977539
    4. ' strategies' → logprob: -3.088968276977539
    5. ' traversal' → logprob: -3.213968276977539
    6. 'strateg' → logprob: -3.338968276977539
    7. ' crawling' → logprob: -3.338968276977539
    8. 'path' → logprob: -3.963968276977539
    9. ' methods' → logprob: -3.963968276977539
    10. 'paths' → logprob: -4.088968276977539

Token 466: ' costs' (ID: 8959)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.28342828154563904
    2. ' costs' → logprob: -2.533428192138672
    3. ' cost' → logprob: -3.533428192138672
    4. '   ' → logprob: -3.533428192138672
    5. 'restr' → logprob: -3.533428192138672
    6. 'constraints' → logprob: -4.658428192138672
    7. 'rules' → logprob: -4.783428192138672
    8. 'methods' → logprob: -4.908428192138672
    9. ' restrictions' → logprob: -5.158428192138672
    10. 'strateg' → logprob: -5.283428192138672

Token 467: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6063747406005859
    2. ':' → logprob: -0.8563747406005859
    3. '.' → logprob: -4.231374740600586
    4. ':
' → logprob: -4.356374740600586
    5. '
' → logprob: -6.981374740600586
    6. ',' → logprob: -6.981374740600586
    7. '.
' → logprob: -8.481374740600586
    8. '    
' → logprob: -8.856374740600586
    9. '<|end|>' → logprob: -9.356374740600586
    10. '):' → logprob: -9.856374740600586

Token 468: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011782889254391193
    2. '    
' → logprob: -4.761783123016357
    3. '
' → logprob: -5.886783123016357
    4. '<|end|>' → logprob: -9.0117826461792
    5. ' 
' → logprob: -9.6367826461792
    6. '```' → logprob: -9.7617826461792
    7. '<|end|>' → logprob: -10.5117826461792
    8. '    ' → logprob: -11.0117826461792
    9. '  
' → logprob: -11.2617826461792
    10. 'def' → logprob: -11.5117826461792

Token 469: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03738771006464958
    2. ' def' → logprob: -3.9123876094818115
    3. '
' → logprob: -4.787387847900391
    4. 'def' → logprob: -5.412387847900391
    5. '    
' → logprob: -6.037387847900391
    6. '    ' → logprob: -7.412387847900391
    7. '"""' → logprob: -7.662387847900391
    8. ' 
' → logprob: -9.16238784790039
    9. ' """
' → logprob: -9.53738784790039
    10. ' """' → logprob: -9.53738784790039

Token 470: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0029431134462356567
    2. ' def' → logprob: -6.75294303894043
    3. '    
' → logprob: -7.12794303894043
    4. 'def' → logprob: -7.25294303894043
    5. '```' → logprob: -8.87794303894043
    6. '
' → logprob: -9.25294303894043
    7. 'class' → logprob: -12.25294303894043
    8. ' 
' → logprob: -12.62794303894043
    9. ' indentation' → logprob: -12.87794303894043
    10. '#' → logprob: -12.87794303894043

Token 471: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.16083815693855286
    2. ' def' → logprob: -1.9108381271362305
    3. '   ' → logprob: -7.4108381271362305
    4. 'from' → logprob: -13.16083812713623
    5. 'de' → logprob: -13.41083812713623
    6. 'class' → logprob: -13.66083812713623
    7. 'import' → logprob: -14.16083812713623
    8. ' ' → logprob: -14.53583812713623
    9. '```' → logprob: -14.53583812713623
    10. '__' → logprob: -15.03583812713623

Token 472: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.0413389690220356
    2. ' def' → logprob: -3.4163389205932617
    3. ' init' → logprob: -5.916338920593262
    4. '__' → logprob: -6.166338920593262
    5. 'init' → logprob: -6.291338920593262
    6. '_init' → logprob: -7.541338920593262
    7. 'def' → logprob: -8.416338920593262
    8. ' _' → logprob: -8.666338920593262
    9. ' ' → logprob: -10.291338920593262
    10. '_' → logprob: -10.666338920593262

Token 473: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: 0.0
    2. ' init' → logprob: -17.375
    3. 'doc' → logprob: -17.625
    4. 'ini' → logprob: -19.0
    5. 'def' → logprob: -19.5
    6. 'in' → logprob: -20.0
    7. 'i' → logprob: -20.25
    8. '_init' → logprob: -20.75
    9. 'initi' → logprob: -20.875
    10. 'class' → logprob: -21.0

Token 474: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.006889777258038521
    2. '__' → logprob: -5.131889820098877
    3. '__(
' → logprob: -7.256889820098877
    4. '__((' → logprob: -9.256889343261719
    5. '(' → logprob: -9.506889343261719
    6. '(self' → logprob: -9.631889343261719
    7. '__(*' → logprob: -11.756889343261719
    8. '__('' → logprob: -12.631889343261719
    9. ' (' → logprob: -12.756889343261719
    10. '__("' → logprob: -13.756889343261719

Token 475: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00013905855303164572
    2. ' self' → logprob: -9.375139236450195
    3. '   ' → logprob: -10.375139236450195
    4. '
' → logprob: -10.875139236450195
    5. '       ' → logprob: -12.750139236450195
    6. ')' → logprob: -14.875139236450195
    7. '(self' → logprob: -15.000139236450195
    8. '0' → logprob: -16.375139236450195
    9. '    
' → logprob: -16.500139236450195
    10. '    ' → logprob: -16.750139236450195

Token 476: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006537011358886957
    2. 'self' → logprob: -7.5006537437438965
    3. '(self' → logprob: -10.250653266906738
    4. ' ,' → logprob: -10.625653266906738
    5. ',self' → logprob: -10.750653266906738
    6. ')' → logprob: -12.250653266906738
    7. '<|end|>' → logprob: -12.500653266906738
    8. ' self' → logprob: -12.625653266906738
    9. ',
' → logprob: -13.250653266906738
    10. ' (' → logprob: -13.250653266906738

Token 477: ' castle' (ID: 54483)
  Prédit: 'castle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'castle' → logprob: -0.01123185083270073
    2. ' castle' → logprob: -4.511231899261475
    3. 'cast' → logprob: -9.011231422424316
    4. 'map' → logprob: -10.886231422424316
    5. 'grid' → logprob: -11.011231422424316
    6. 'self' → logprob: -11.386231422424316
    7. '_cast' → logprob: -12.261231422424316
    8. '   ' → logprob: -13.136231422424316
    9. 'c' → logprob: -13.261231422424316
    10. 'camp' → logprob: -14.136231422424316

Token 478: '_map' (ID: 11824)
  Prédit: 'Map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Map' → logprob: -0.6402698159217834
    2. '_map' → logprob: -0.7652698159217834
    3. ',' → logprob: -5.765269756317139
    4. '   ' → logprob: -6.640269756317139
    5. '):' → logprob: -6.640269756317139
    6. 'map' → logprob: -6.640269756317139
    7. ':' → logprob: -7.890269756317139
    8. '):
' → logprob: -9.515270233154297
    9. ')' → logprob: -10.015270233154297
    10. ' ' → logprob: -11.140270233154297

Token 479: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.014288325794041157
    2. '):' → logprob: -4.264288425445557
    3. ' :' → logprob: -9.389287948608398
    4. '):
' → logprob: -10.514287948608398
    5. ' ):' → logprob: -11.764287948608398
    6. ',' → logprob: -13.139287948608398
    7. ')' → logprob: -13.264287948608398
    8. '   ' → logprob: -13.764287948608398
    9. '}:' → logprob: -14.889287948608398
    10. ' ' → logprob: -15.139287948608398

Token 480: ' Castle' (ID: 38570)
  Prédit: 'Castle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Castle' → logprob: -0.01114992517977953
    2. ' Castle' → logprob: -4.511149883270264
    3. 'Cast' → logprob: -9.761150360107422
    4. 'castle' → logprob: -10.886150360107422
    5. ')' → logprob: -11.261150360107422
    6. '   ' → logprob: -12.386150360107422
    7. ' castle' → logprob: -12.511150360107422
    8. '_cast' → logprob: -13.011150360107422
    9. ' ' → logprob: -13.886150360107422
    10. 'Grid' → logprob: -15.511150360107422

Token 481: 'Map' (ID: 2307)
  Prédit: 'Map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Map' → logprob: -7.896309739408025e-07
    2. ')' → logprob: -14.750000953674316
    3. '_map' → logprob: -16.0
    4. 'map' → logprob: -16.5
    5. '_Map' → logprob: -17.125
    6. '   ' → logprob: -17.25
    7. '	Map' → logprob: -17.875
    8. '):
' → logprob: -18.125
    9. ' Map' → logprob: -18.375
    10. '<Map' → logprob: -18.875

Token 482: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3876829147338867
    2. '):
' → logprob: -1.1376829147338867
    3. ')' → logprob: -8.012682914733887
    4. ',' → logprob: -8.262682914733887
    5. '):
' → logprob: -8.512682914733887
    6. '   ' → logprob: -11.137682914733887
    7. ':' → logprob: -12.887682914733887
    8. ' ):' → logprob: -13.387682914733887
    9. ' ):
' → logprob: -14.012682914733887
    10. '       ' → logprob: -14.012682914733887

Token 483: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004331725067459047
    2. ' self' → logprob: -8.375432968139648
    3. 'self' → logprob: -8.625432968139648
    4. '   ' → logprob: -11.750432968139648
    5. ',' → logprob: -12.125432968139648
    6. '	self' → logprob: -12.625432968139648
    7. '	' → logprob: -13.000432968139648
    8. '
' → logprob: -14.000432968139648
    9. ')' → logprob: -14.375432968139648
    10. '):
' → logprob: -14.875432968139648

Token 484: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.003096785396337509
    2. ' self' → logprob: -6.253096580505371
    3. '       ' → logprob: -6.753096580505371
    4. '   ' → logprob: -15.253096580505371
    5. '	self' → logprob: -17.628097534179688
    6. '
' → logprob: -18.253097534179688
    7. '           ' → logprob: -19.253097534179688
    8. '(self' → logprob: -19.378097534179688
    9. 'import' → logprob: -19.378097534179688
    10. '        ' → logprob: -19.878097534179688

Token 485: '.cast' (ID: 68894)
  Prédit: '.cast'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cast' → logprob: -0.0002149802603526041
    2. '.' → logprob: -9.375214576721191
    3. '.c' → logprob: -9.750214576721191
    4. ' .' → logprob: -10.750214576721191
    5. '.cas' → logprob: -11.500214576721191
    6. '.map' → logprob: -11.625214576721191
    7. '.cat' → logprob: -11.875214576721191
    8. '.Cast' → logprob: -12.125214576721191
    9. 'castle' → logprob: -12.125214576721191
    10. '.cls' → logprob: -13.500214576721191

Token 486: 'le' (ID: 282)
  Prédit: 'le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -3.128163257315464e-07
    2. '_le' → logprob: -16.625
    3. ' le' → logprob: -17.0
    4. '
' → logprob: -17.125
    5. 'ле' → logprob: -17.125
    6. 'Le' → logprob: -17.25
    7. 'l' → logprob: -17.5
    8. '

' → logprob: -17.625
    9. 'e' → logprob: -18.25
    10. '_' → logprob: -18.625

Token 487: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -3.128163257315464e-07
    2. '_' → logprob: -16.5
    3. 'Map' → logprob: -17.0
    4. '_m' → logprob: -18.0
    5. '._' → logprob: -18.375
    6. 'map' → logprob: -18.375
    7. '   ' → logprob: -18.75
    8. '=_' → logprob: -19.125
    9. '_MAP' → logprob: -19.875
    10. ' _' → logprob: -20.0

Token 488: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.033662065863609314
    2. ' =' → logprob: -3.4086620807647705
    3. '   ' → logprob: -12.158661842346191
    4. ')' → logprob: -12.283661842346191
    5. '.' → logprob: -13.033661842346191
    6. ':' → logprob: -13.908661842346191
    7. ',' → logprob: -13.908661842346191
    8. ' ' → logprob: -14.658661842346191
    9. '=self' → logprob: -14.658661842346191
    10. '  ' → logprob: -14.783661842346191

Token 489: ' castle' (ID: 54483)
  Prédit: 'castle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'castle' → logprob: -0.009783949702978134
    2. ' castle' → logprob: -4.634783744812012
    3. 'cast' → logprob: -10.509783744812012
    4. '   ' → logprob: -15.884783744812012
    5. '_cast' → logprob: -16.009784698486328
    6. ' cast' → logprob: -16.384784698486328
    7. 'Castle' → logprob: -16.759784698486328
    8. 'caster' → logprob: -17.259784698486328
    9. ' ' → logprob: -17.384784698486328
    10. 'c' → logprob: -17.634784698486328

Token 490: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -5.200166469876422e-06
    2. 'Map' → logprob: -13.000004768371582
    3. '_' → logprob: -13.125004768371582
    4. '_cast' → logprob: -14.500004768371582
    5. 'map' → logprob: -16.3750057220459
    6. ' _' → logprob: -16.5000057220459
    7. '   ' → logprob: -17.2500057220459
    8. '._' → logprob: -17.3750057220459
    9. '_MAP' → logprob: -18.3750057220459
    10. 'castle' → logprob: -18.3750057220459

Token 491: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6440368890762329
    2. '       ' → logprob: -0.8940368890762329
    3. '   ' → logprob: -2.7690367698669434
    4. '    
' → logprob: -6.394036769866943
    5. '<|end|>' → logprob: -7.019036769866943
    6. '        
' → logprob: -8.019037246704102
    7. ',' → logprob: -9.519037246704102
    8. '  
' → logprob: -9.894037246704102
    9. '<|end|>' → logprob: -10.894037246704102
    10. 'def' → logprob: -11.144037246704102

Token 492: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03841232508420944
    2. '   ' → logprob: -3.66341233253479
    3. '
' → logprob: -5.163412094116211
    4. '<|end|>' → logprob: -5.288412094116211
    5. '    
' → logprob: -7.163412094116211
    6. '        
' → logprob: -8.288412094116211
    7. ',' → logprob: -9.413412094116211
    8. '<|end|>' → logprob: -9.913412094116211
    9. '  
' → logprob: -10.788412094116211
    10. 'def' → logprob: -10.913412094116211

Token 493: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0001613459608051926
    2. '       ' → logprob: -9.750161170959473
    3. ' self' → logprob: -10.250161170959473
    4. '#' → logprob: -10.625161170959473
    5. 'pass' → logprob: -10.875161170959473
    6. 'from' → logprob: -11.500161170959473
    7. 'def' → logprob: -11.625161170959473
    8. '
' → logprob: -12.625161170959473
    9. '   ' → logprob: -14.000161170959473
    10. '        
' → logprob: -15.250161170959473

Token 494: '.width' (ID: 11038)
  Prédit: '.vis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.vis' → logprob: -0.307731956243515
    2. '.queue' → logprob: -2.307731866836548
    3. '.distance' → logprob: -2.932731866836548
    4. '.start' → logprob: -3.307731866836548
    5. '.dist' → logprob: -3.432731866836548
    6. '.' → logprob: -4.182732105255127
    7. '.min' → logprob: -5.557732105255127
    8. '.time' → logprob: -5.682732105255127
    9. '._' → logprob: -5.932732105255127
    10. '.goal' → logprob: -5.932732105255127

Token 495: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2598068416118622
    2. '=' → logprob: -2.1348068714141846
    3. '<|end|>' → logprob: -2.5098068714141846
    4. ',' → logprob: -3.6348068714141846
    5. '<|end|>' → logprob: -6.8848066329956055
    6. ' ' → logprob: -7.0098066329956055
    7. ' ,' → logprob: -8.509806632995605
    8. '    ' → logprob: -8.759806632995605
    9. '        ' → logprob: -9.009806632995605
    10. '       ' → logprob: -9.759806632995605

Token 496: ' castle' (ID: 54483)
  Prédit: 'castle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'castle' → logprob: -0.005245260428637266
    2. ' castle' → logprob: -5.255245208740234
    3. 'self' → logprob: -12.130245208740234
    4. 'cast' → logprob: -12.130245208740234
    5. ' self' → logprob: -14.380245208740234
    6. '   ' → logprob: -15.630245208740234
    7. 'caster' → logprob: -17.880245208740234
    8. ' cast' → logprob: -18.380245208740234
    9. '       ' → logprob: -18.505245208740234
    10. 'cass' → logprob: -19.380245208740234

Token 497: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -5.200166469876422e-06
    2. '_cast' → logprob: -13.250004768371582
    3. 'map' → logprob: -13.250004768371582
    4. 'Map' → logprob: -13.625004768371582
    5. '_' → logprob: -15.875004768371582
    6. '   ' → logprob: -16.6250057220459
    7. ' _' → logprob: -17.5000057220459
    8. 'self' → logprob: -17.8750057220459
    9. '_MAP' → logprob: -17.8750057220459
    10. '\' → logprob: -18.0000057220459

Token 498: '.width' (ID: 11038)
  Prédit: '.width'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.width' → logprob: -9.088346359931165e-07
    2. '.' → logprob: -14.500000953674316
    3. '.height' → logprob: -15.625000953674316
    4. ' .' → logprob: -15.750000953674316
    5. '.size' → logprob: -17.625
    6. '.w' → logprob: -18.625
    7. 'width' → logprob: -18.75
    8. '   ' → logprob: -20.5
    9. '.weight' → logprob: -20.75
    10. '.code' → logprob: -20.875

Token 499: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013649176806211472
    2. 'self' → logprob: -4.388648986816406
    3. '<|end|>' → logprob: -7.013648986816406
    4. '
' → logprob: -9.013648986816406
    5. ',' → logprob: -9.888648986816406
    6. ' self' → logprob: -10.388648986816406
    7. '<|end|>' → logprob: -11.888648986816406
    8. '   ' → logprob: -12.263648986816406
    9. ',self' → logprob: -12.763648986816406
    10. ',
' → logprob: -12.888648986816406

Token 500: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.038562703877687454
    2. 'self' → logprob: -3.288562774658203
    3. '<|end|>' → logprob: -8.413562774658203
    4. ' self' → logprob: -9.163562774658203
    5. ',' → logprob: -9.913562774658203
    6. '   ' → logprob: -10.038562774658203
    7. '
' → logprob: -10.288562774658203
    8. '	' → logprob: -11.788562774658203
    9. '        
' → logprob: -11.788562774658203
    10. '	self' → logprob: -11.788562774658203

Token 501: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.002309527015313506
    2. '       ' → logprob: -6.252309322357178
    3. ' self' → logprob: -7.877309322357178
    4. '   ' → logprob: -14.377309799194336
    5. 'castle' → logprob: -14.502309799194336
    6. '
' → logprob: -15.627309799194336
    7. '```' → logprob: -16.502309799194336
    8. '	self' → logprob: -16.752309799194336
    9. '(self' → logprob: -17.627309799194336
    10. ' ' → logprob: -17.752309799194336

Token 502: '.height' (ID: 11682)
  Prédit: 'height'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'height' → logprob: -0.7010465860366821
    2. '.height' → logprob: -0.7010465860366821
    3. '_height' → logprob: -5.576046466827393
    4. ' height' → logprob: -6.076046466827393
    5. ' =' → logprob: -7.326046466827393
    6. '   ' → logprob: -7.451046466827393
    7. '=' → logprob: -7.701046466827393
    8. '.' → logprob: -10.70104694366455
    9. '	height' → logprob: -10.95104694366455
    10. ',' → logprob: -11.57604694366455

Token 503: ' =' (ID: 314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 504: ' castle' (ID: 54483)
  Prédit: 'castle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'castle' → logprob: -0.0488726906478405
    2. ' castle' → logprob: -3.048872709274292
    3. 'cast' → logprob: -8.173872947692871
    4. ' cast' → logprob: -13.423872947692871
    5. '   ' → logprob: -14.798872947692871
    6. '_cast' → logprob: -15.173872947692871
    7. ' ' → logprob: -15.548872947692871
    8. 'self' → logprob: -15.673872947692871
    9. 'caster' → logprob: -15.798872947692871
    10. '```' → logprob: -16.298871994018555

Token 505: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -0.00040636269841343164
    2. 'height' → logprob: -8.500406265258789
    3. 'map' → logprob: -8.750406265258789
    4. '.height' → logprob: -10.250406265258789
    5. 'Map' → logprob: -12.125406265258789
    6. '   ' → logprob: -12.875406265258789
    7. '.map' → logprob: -14.750406265258789
    8. '       ' → logprob: -16.50040626525879
    9. ' height' → logprob: -16.62540626525879
    10. '._' → logprob: -16.75040626525879

Token 506: '.height' (ID: 11682)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 507: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016515690833330154
    2. '<|end|>' → logprob: -4.516515731811523
    3. '
' → logprob: -5.391515731811523
    4. '   ' → logprob: -8.016515731811523
    5. ',' → logprob: -8.391515731811523
    6. '        
' → logprob: -9.266515731811523
    7. '    
' → logprob: -9.766515731811523
    8. '<|end|>' → logprob: -10.016515731811523
    9. 'self' → logprob: -10.391515731811523
    10. '        ' → logprob: -11.391515731811523

Token 508: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24405275285243988
    2. '   ' → logprob: -1.619052767753601
    3. '<|end|>' → logprob: -4.119052886962891
    4. 'def' → logprob: -7.119052886962891
    5. '
' → logprob: -7.619052886962891
    6. ',' → logprob: -8.74405288696289
    7. '```' → logprob: -8.74405288696289
    8. '<|end|>' → logprob: -8.86905288696289
    9. 'self' → logprob: -9.11905288696289
    10. '    
' → logprob: -9.61905288696289

Token 509: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.020990954712033272
    2. 'from' → logprob: -3.8959908485412598
    3. 'def' → logprob: -8.895991325378418
    4. '#' → logprob: -9.270991325378418
    5. '       ' → logprob: -9.520991325378418
    6. ' self' → logprob: -10.270991325378418
    7. 'visited' → logprob: -10.770991325378418
    8. 'import' → logprob: -11.020991325378418
    9. '   ' → logprob: -11.145991325378418
    10. 'pass' → logprob: -11.395991325378418

Token 510: '.goal' (ID: 140776)
  Prédit: '.vis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.vis' → logprob: -0.6359036564826965
    2. '.dist' → logprob: -1.6359035968780518
    3. '.distance' → logprob: -2.2609035968780518
    4. '.start' → logprob: -3.0109035968780518
    5. '.goal' → logprob: -3.2609035968780518
    6. '._' → logprob: -3.7609035968780518
    7. '.min' → logprob: -3.7609035968780518
    8. '.queue' → logprob: -4.760903835296631
    9. '.best' → logprob: -5.010903835296631
    10. '.time' → logprob: -5.385903835296631

Token 511: ' =' (ID: 314)
  Prédit: '_position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_position' → logprob: -0.005076971836388111
    2. '_pos' → logprob: -5.880076885223389
    3. ' =' → logprob: -7.005076885223389
    4. '_' → logprob: -7.505076885223389
    5. '_positions' → logprob: -7.755076885223389
    6. '=' → logprob: -9.255077362060547
    7. '_x' → logprob: -9.505077362060547
    8. '_location' → logprob: -9.880077362060547
    9. '_point' → logprob: -10.130077362060547
    10. '_distance' → logprob: -10.380077362060547

Token 512: ' castle' (ID: 54483)
  Prédit: 'castle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'castle' → logprob: -0.007012190297245979
    2. ' castle' → logprob: -5.007012367248535
    3. 'cast' → logprob: -8.757012367248535
    4. 'self' → logprob: -9.007012367248535
    5. ' self' → logprob: -11.132012367248535
    6. ' cast' → logprob: -14.257012367248535
    7. '   ' → logprob: -14.632012367248535
    8. 'caster' → logprob: -15.007012367248535
    9. ' ' → logprob: -15.632012367248535
    10. '_cast' → logprob: -16.13201141357422

Token 513: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -1.0280383548888494e-06
    2. 'Map' → logprob: -14.000000953674316
    3. 'map' → logprob: -15.625000953674316
    4. 'emap' → logprob: -20.250001907348633
    5. '_MAP' → logprob: -20.375001907348633
    6. '_path' → logprob: -20.750001907348633
    7. '_maps' → logprob: -21.625001907348633
    8. '_cast' → logprob: -21.750001907348633
    9. 'imap' → logprob: -21.875001907348633
    10. '-map' → logprob: -22.000001907348633

Token 514: '.goal' (ID: 140776)
  Prédit: '.goal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.goal' → logprob: -0.00019543453527148813
    2. '.grid' → logprob: -9.375195503234863
    3. '.position' → logprob: -10.000195503234863
    4. '._' → logprob: -10.500195503234863
    5. 'goal' → logprob: -11.250195503234863
    6. ' .' → logprob: -11.750195503234863
    7. '_goal' → logprob: -12.000195503234863
    8. '.point' → logprob: -12.375195503234863
    9. '.' → logprob: -12.750195503234863
    10. '_.' → logprob: -13.500195503234863

Token 515: '_position' (ID: 23739)
  Prédit: '_position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_position' → logprob: -2.8087270038668066e-05
    2. 'position' → logprob: -10.625027656555176
    3. 'Position' → logprob: -13.375027656555176
    4. '
' → logprob: -14.125027656555176
    5. '   ' → logprob: -14.625027656555176
    6. '_POSITION' → logprob: -15.125027656555176
    7. '<|end|>' → logprob: -15.375027656555176
    8. ' ' → logprob: -16.375028610229492
    9. '_location' → logprob: -16.500028610229492
    10. ')' → logprob: -17.000028610229492

Token 516: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.14580407738685608
    2. '       ' → logprob: -2.5208041667938232
    3. '<|end|>' → logprob: -3.2708041667938232
    4. '   ' → logprob: -4.145803928375244
    5. '<|end|>' → logprob: -8.145804405212402
    6. ',' → logprob: -8.270804405212402
    7. '    
' → logprob: -8.270804405212402
    8. ')' → logprob: -8.770804405212402
    9. '  
' → logprob: -9.520804405212402
    10. '        
' → logprob: -9.770804405212402

Token 517: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.011418669484555721
    2. '   ' → logprob: -4.63641881942749
    3. '<|end|>' → logprob: -6.63641881942749
    4. '    
' → logprob: -8.636418342590332
    5. '       ' → logprob: -10.261418342590332
    6. '  
' → logprob: -10.386418342590332
    7. ' def' → logprob: -10.511418342590332
    8. 'def' → logprob: -10.761418342590332
    9. ' 
' → logprob: -11.261418342590332
    10. '<|end|>' → logprob: -11.511418342590332

Token 518: ' if' (ID: 538)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.016142988577485085
    2. 'self' → logprob: -4.641142845153809
    3. '   ' → logprob: -6.141142845153809
    4. '       ' → logprob: -6.266142845153809
    5. ' def' → logprob: -6.891142845153809
    6. '
' → logprob: -7.016142845153809
    7. ' self' → logprob: -9.266142845153809
    8. 'if' (adapté à ' if') → logprob: -9.266142845153809
    9. 'from' → logprob: -9.516142845153809
    10. '<|end|>' → logprob: -10.016142845153809

Token 519: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.2525794804096222
    2. 'self' → logprob: -1.5025794506072998
    3. ' not' → logprob: -7.377579689025879
    4. '	self' → logprob: -10.877579689025879
    5. '   ' → logprob: -13.002579689025879
    6. 'not' → logprob: -13.502579689025879
    7. '(self' → logprob: -13.752579689025879
    8. ' ' → logprob: -14.127579689025879
    9. '  ' → logprob: -15.502579689025879
    10. '    ' → logprob: -16.377578735351562

Token 520: '.goal' (ID: 140776)
  Prédit: '.goal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.goal' → logprob: -0.00017159747949335724
    2. 'goal' → logprob: -8.750171661376953
    3. '.' → logprob: -11.625171661376953
    4. '.cast' → logprob: -13.625171661376953
    5. ' goal' → logprob: -14.125171661376953
    6. ' .' → logprob: -14.250171661376953
    7. '.go' → logprob: -14.500171661376953
    8. '.g' → logprob: -15.500171661376953
    9. 'Goal' → logprob: -15.625171661376953
    10. ' is' → logprob: -15.750171661376953

Token 521: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.014164687134325504
    2. 'is' → logprob: -4.264164924621582
    3. ')' → logprob: -14.889164924621582
    4. ':' → logprob: -15.014164924621582
    5. ' ' → logprob: -15.264164924621582
    6. ' )' → logprob: -15.889164924621582
    7. '==' → logprob: -16.764163970947266
    8. '[' → logprob: -16.889163970947266
    9. '	is' → logprob: -17.014163970947266
    10. '   ' → logprob: -17.764163970947266

Token 522: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.31339842081069946
    2. ' None' → logprob: -1.3133983612060547
    3. ' not' → logprob: -9.063398361206055
    4. 'not' → logprob: -10.813398361206055
    5. '_None' → logprob: -15.188398361206055
    6. '   ' → logprob: -16.188398361206055
    7. '(None' → logprob: -16.188398361206055
    8. '=None' → logprob: -16.813398361206055
    9. 'Not' → logprob: -17.313398361206055
    10. 'N' → logprob: -17.438398361206055

Token 523: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.38789036870002747
    2. ':' → logprob: -1.137890338897705
    3. '       ' → logprob: -7.762890338897705
    4. ' :
' → logprob: -8.262890815734863
    5. '           ' → logprob: -8.762890815734863
    6. '):
' → logprob: -10.262890815734863
    7. ' :' → logprob: -10.637890815734863
    8. ' or' → logprob: -11.012890815734863
    9. ':

' → logprob: -11.262890815734863
    10. '   ' → logprob: -11.262890815734863

Token 524: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03939279541373253
    2. 'raise' → logprob: -3.5393927097320557
    3. ' raise' → logprob: -4.664392948150635
    4. '       ' → logprob: -9.539392471313477
    5. '   ' → logprob: -9.914392471313477
    6. '	raise' → logprob: -10.039392471313477
    7. '_raise' → logprob: -13.664392471313477
    8. 'Raise' → logprob: -13.664392471313477
    9. '		' → logprob: -14.289392471313477
    10. '          ' → logprob: -14.789392471313477

Token 525: ' raise' (ID: 9338)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raise' (adapté à ' raise') → logprob: -0.006791632156819105
    2. ' raise' → logprob: -5.256791591644287
    3. '           ' → logprob: -6.506791591644287
    4. '
' → logprob: -10.881792068481445
    5. 'return' → logprob: -11.131792068481445
    6. 'self' → logprob: -11.256792068481445
    7. '               ' → logprob: -11.631792068481445
    8. '	raise' → logprob: -12.256792068481445
    9. '            ' → logprob: -13.881792068481445
    10. 'Raise' → logprob: -14.506792068481445

Token 526: ' Value' (ID: 9963)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -1.981667537620524e-06
    2. 'Runtime' → logprob: -13.375001907348633
    3. ' Value' → logprob: -14.750001907348633
    4. 'Exception' → logprob: -17.250001907348633
    5. '(Value' → logprob: -18.500001907348633
    6. 'value' → logprob: -19.250001907348633
    7. '_Value' → logprob: -20.375001907348633
    8. '_value' → logprob: -20.500001907348633
    9. '	Value' → logprob: -20.500001907348633
    10. '```' → logprob: -21.000001907348633

Token 527: 'Error' (ID: 2255)
  Prédit: 'rror'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rror' → logprob: -0.03167078644037247
    2. 'Error' → logprob: -3.7816708087921143
    3. 'ror' → logprob: -4.781670570373535
    4. 'r' → logprob: -12.406670570373535
    5. 'Value' → logprob: -12.781670570373535
    6. 'rr' → logprob: -14.781670570373535
    7. 'ption' → logprob: -15.531670570373535
    8. 'error' → logprob: -16.03167152404785
    9. 'ro' → logprob: -16.28167152404785
    10. 'or' → logprob: -16.53167152404785

Token 528: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -5.200166469876422e-06
    2. '(' → logprob: -12.250004768371582
    3. '('' → logprob: -14.875004768371582
    4. '("'' → logprob: -18.3750057220459
    5. '"' → logprob: -18.5000057220459
    6. '(f' → logprob: -18.7500057220459
    7. '(
' → logprob: -19.5000057220459
    8. '("[' → logprob: -22.7500057220459
    9. '("(' → logprob: -23.2500057220459
    10. '("_' → logprob: -23.3750057220459

Token 529: 'Goal' (ID: 42087)
  Prédit: 'No'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.3997901976108551
    2. 'Goal' → logprob: -1.2747901678085327
    3. 'Castle' → logprob: -3.3997902870178223
    4. ' No' → logprob: -4.899790287017822
    5. ' Goal' → logprob: -5.524790287017822
    6. 'Map' → logprob: -5.774790287017822
    7. ' Castle' → logprob: -7.274790287017822
    8. '"No' → logprob: -7.399790287017822
    9. 'Grid' → logprob: -8.399789810180664
    10. '"' → logprob: -9.024789810180664

Token 530: ' (&' (ID: 38476)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.025564195588231087
    2. ' position' → logprob: -4.025564193725586
    3. 'not' → logprob: -5.775564193725586
    4. ' is' → logprob: -7.150564193725586
    5. 'position' → logprob: -7.150564193725586
    6. ' must' → logprob: -7.400564193725586
    7. '&' → logprob: -7.525564193725586
    8. ''' → logprob: -7.525564193725586
    9. ' point' → logprob: -8.650564193725586
    10. ' '' → logprob: -9.275564193725586

Token 531: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0019391077803447843
    2. ' not' → logprob: -7.501939296722412
    3. ' symbol' → logprob: -7.626939296722412
    4. ' terrain' → logprob: -8.501938819885254
    5. 'symbol' → logprob: -8.876938819885254
    6. 'not' → logprob: -9.251938819885254
    7. ' position' → logprob: -9.251938819885254
    8. ' cell' → logprob: -9.376938819885254
    9. 'terrain' → logprob: -9.501938819885254
    10. '')' → logprob: -9.626938819885254

Token 532: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.09183860570192337
    2. 'not' → logprob: -2.5918385982513428
    3. ' position' → logprob: -5.341838836669922
    4. ' must' → logprob: -5.841838836669922
    5. ' point' → logprob: -6.216838836669922
    6. ' cell' → logprob: -6.716838836669922
    7. 'position' → logprob: -7.216838836669922
    8. 'point' → logprob: -8.091838836669922
    9. ' is' → logprob: -8.591838836669922
    10. 'must' → logprob: -8.716838836669922

Token 533: ' found' (ID: 2491)
  Prédit: 'found'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'found' → logprob: -0.10129193216562271
    2. ' found' → logprob: -2.3512918949127197
    3. 'defined' → logprob: -6.976292133331299
    4. ' defined' → logprob: -9.60129165649414
    5. 'present' → logprob: -10.10129165649414
    6. 'specified' → logprob: -11.10129165649414
    7. 'located' → logprob: -11.22629165649414
    8. '_found' → logprob: -12.35129165649414
    9. ' present' → logprob: -12.97629165649414
    10. 'provided' → logprob: -13.10129165649414

Token 534: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10969240218400955
    2. 'in' → logprob: -2.609692335128784
    3. ' on' → logprob: -3.609692335128784
    4. 'on' → logprob: -6.359692573547363
    5. '")' → logprob: -6.484692573547363
    6. ')' → logprob: -11.984692573547363
    7. '")
' → logprob: -12.234692573547363
    8. ' ' → logprob: -13.359692573547363
    9. '.")' → logprob: -14.109692573547363
    10. '.' → logprob: -14.859692573547363

Token 535: ' the' (ID: 290)
  Prédit: 'castle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'castle' → logprob: -0.19706131517887115
    2. ' castle' → logprob: -2.69706130027771
    3. ' the' → logprob: -2.94706130027771
    4. 'the' → logprob: -3.57206130027771
    5. 'map' → logprob: -4.197061538696289
    6. ' map' → logprob: -4.822061538696289
    7. 'grid' → logprob: -5.447061538696289
    8. ' grid' → logprob: -5.822061538696289
    9. 'cast' → logprob: -8.322061538696289
    10. 'Castle' → logprob: -9.322061538696289

Token 536: ' map' (ID: 4014)
  Prédit: 'castle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'castle' → logprob: -0.669800877571106
    2. 'map' → logprob: -0.919800877571106
    3. 'grid' → logprob: -2.7948007583618164
    4. ' map' → logprob: -4.419800758361816
    5. ' castle' → logprob: -4.794800758361816
    6. ' grid' → logprob: -5.794800758361816
    7. 'provided' → logprob: -6.169800758361816
    8. ' provided' → logprob: -6.794800758361816
    9. 'cast' → logprob: -7.169800758361816
    10. 'input' → logprob: -8.544800758361816

Token 537: '.")
' (ID: 27834)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.035541512072086334
    2. '")
' → logprob: -3.535541534423828
    3. '.")' → logprob: -5.785541534423828
    4. ')")' → logprob: -6.285541534423828
    5. '.")
' → logprob: -7.910541534423828
    6. ')")
' → logprob: -8.535541534423828
    7. ')' → logprob: -8.785541534423828
    8. '")
' → logprob: -10.035541534423828
    9. '!")' → logprob: -10.285541534423828
    10. '       ' → logprob: -10.410541534423828

Token 538: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39915481209754944
    2. '
' → logprob: -1.149154782295227
    3. '       ' → logprob: -5.3991546630859375
    4. '<|end|>' → logprob: -5.5241546630859375
    5. '    
' → logprob: -6.1491546630859375
    6. 'def' → logprob: -7.7741546630859375
    7. ' def' → logprob: -8.149154663085938
    8. '        
' → logprob: -8.149154663085938
    9. '<|end|>' → logprob: -9.024154663085938
    10. '  
' → logprob: -9.274154663085938

Token 539: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3732738494873047
    2. '   ' → logprob: -1.2482738494873047
    3. ' def' → logprob: -4.998273849487305
    4. 'self' → logprob: -4.998273849487305
    5. '
' → logprob: -5.123273849487305
    6. '       ' → logprob: -5.498273849487305
    7. ' self' → logprob: -8.248273849487305
    8. '<|end|>' → logprob: -8.373273849487305
    9. ')' → logprob: -8.998273849487305
    10. '    
' → logprob: -9.498273849487305

Token 540: ' We'll' (ID: 46830)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.038218434900045395
    2. 'self' → logprob: -3.4132184982299805
    3. '#' → logprob: -6.1632184982299805
    4. ' def' → logprob: -6.2882184982299805
    5. ' self' → logprob: -8.53821849822998
    6. '   ' → logprob: -8.53821849822998
    7. '       ' → logprob: -9.28821849822998
    8. 'from' → logprob: -10.16321849822998
    9. '
' → logprob: -10.91321849822998
    10. 'class' → logprob: -12.28821849822998

Token 541: ' think' (ID: 2411)
  Prédit: 'initialize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'initialize' → logprob: -1.1594088077545166
    2. 'use' → logprob: -1.7844088077545166
    3. 'implement' → logprob: -2.5344088077545166
    4. 'store' → logprob: -2.7844088077545166
    5. 'pre' → logprob: -2.9094088077545166
    6. 'start' → logprob: -3.2844088077545166
    7. 'prepare' → logprob: -3.5344088077545166
    8. ' use' → logprob: -3.6594088077545166
    9. 'compute' → logprob: -3.7844088077545166
    10. ' implement' → logprob: -3.9094088077545166

Token 542: ' of' (ID: 328)
  Prédit: ' about'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' about' → logprob: -0.7937860488891602
    2. ' ahead' → logprob: -1.2937860488891602
    3. 'self' → logprob: -2.79378604888916
    4. 'ahead' → logprob: -2.79378604888916
    5. ' of' → logprob: -3.41878604888916
    6. 'through' → logprob: -3.54378604888916
    7. 'about' → logprob: -3.66878604888916
    8. ' through' → logprob: -3.79378604888916
    9. 'of' → logprob: -4.29378604888916
    10. ' carefully' → logprob: -5.29378604888916

Token 543: ' outside' (ID: 7539)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -1.6157037019729614
    2. 'this' → logprob: -1.8657037019729614
    3. 'mo' → logprob: -1.9907037019729614
    4. 'self' → logprob: -1.9907037019729614
    5. 'crawl' → logprob: -2.615703582763672
    6. 'c' → logprob: -2.865703582763672
    7. 'visited' → logprob: -3.240703582763672
    8. 'dist' → logprob: -3.240703582763672
    9. '#' → logprob: -3.490703582763672
    10. '"' → logprob: -3.990703582763672

Token 544: ' as' (ID: 472)
  Prédit: ' as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.4534403681755066
    2. ' cells' → logprob: -1.5784404277801514
    3. 'cells' → logprob: -3.0784404277801514
    4. ' spaces' → logprob: -3.2034404277801514
    5. ' positions' → logprob: -3.5784404277801514
    6. ' points' → logprob: -4.703440189361572
    7. ' the' → logprob: -5.328440189361572
    8. 'positions' → logprob: -5.453440189361572
    9. 'spaces' → logprob: -5.453440189361572
    10. 'as' → logprob: -5.578440189361572

Token 545: ' any' (ID: 1062)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.681860625743866
    2. 'a' → logprob: -1.1818606853485107
    3. 'the' → logprob: -2.8068606853485107
    4. 'any' → logprob: -3.0568606853485107
    5. 'visited' → logprob: -3.5568606853485107
    6. ' all' → logprob: -4.181860446929932
    7. 'cells' → logprob: -4.556860446929932
    8. 'self' → logprob: -5.556860446929932
    9. ' a' → logprob: -5.556860446929932
    10. 'an' → logprob: -5.806860446929932

Token 546: ' cell' (ID: 4206)
  Prédit: ' cell'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cell' → logprob: -0.9726938009262085
    2. 'cell' → logprob: -1.0976938009262085
    3. ' perimeter' → logprob: -2.097693920135498
    4. 'point' → logprob: -3.097693920135498
    5. ' point' → logprob: -3.722693920135498
    6. 'position' → logprob: -3.847693920135498
    7. ' non' → logprob: -4.097693920135498
    8. ' position' → logprob: -4.347693920135498
    9. 'x' → logprob: -4.472693920135498
    10. 'non' → logprob: -4.972693920135498

Token 547: ' on' (ID: 402)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.1955658346414566
    2. ' on' → logprob: -1.8205658197402954
    3. 'at' → logprob: -4.820565700531006
    4. ' at' → logprob: -5.570565700531006
    5. 'not' → logprob: -6.195565700531006
    6. ' not' → logprob: -7.695565700531006
    7. 'outside' → logprob: -8.070566177368164
    8. 'with' → logprob: -8.445566177368164
    9. 'along' → logprob: -8.945566177368164
    10. ' along' → logprob: -9.070566177368164

Token 548: ' edges' (ID: 22569)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.31446173787117004
    2. ' the' → logprob: -1.3144617080688477
    3. 'self' → logprob: -7.189461708068848
    4. ' perimeter' → logprob: -8.189461708068848
    5. '0' → logprob: -9.064461708068848
    6. ' self' → logprob: -10.439461708068848
    7. 'boundary' → logprob: -12.689461708068848
    8. 'border' → logprob: -12.689461708068848
    9. 'line' → logprob: -12.939461708068848
    10. '   ' → logprob: -13.064461708068848

Token 549: ' that' (ID: 484)
  Prédit: ' that'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' that' → logprob: -0.30601251125335693
    2. '       ' → logprob: -2.6810126304626465
    3. ' not' → logprob: -2.6810126304626465
    4. 'that' → logprob: -3.0560126304626465
    5. ' of' → logprob: -3.4310126304626465
    6. 'not' → logprob: -4.1810126304626465
    7. ' or' → logprob: -4.6810126304626465
    8. ' and' → logprob: -5.1810126304626465
    9. ' outside' → logprob: -5.8060126304626465
    10. ',' → logprob: -5.9310126304626465

Token 550: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.3577668070793152
    2. ' are' → logprob: -1.35776686668396
    3. 'is' → logprob: -3.98276686668396
    4. 'are' → logprob: -3.98276686668396
    5. ' isn't' → logprob: -6.107766628265381
    6. '       ' → logprob: -6.482766628265381
    7. 'self' → logprob: -8.107767105102539
    8. '           ' → logprob: -8.232767105102539
    9. 'not' → logprob: -8.232767105102539
    10. ' aren't' → logprob: -8.232767105102539

Token 551: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.10021670162677765
    2. ' not' → logprob: -2.3502166271209717
    3. '.' → logprob: -13.22521686553955
    4. '_not' → logprob: -13.35021686553955
    5. 'non' → logprob: -13.35021686553955
    6. '.not' → logprob: -13.47521686553955
    7. 'NOT' → logprob: -14.10021686553955
    8. ' NOT' → logprob: -14.47521686553955
    9. '(not' → logprob: -14.60021686553955
    10. '   ' → logprob: -14.85021686553955

Token 552: ' in' (ID: 306)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.14733253419399261
    2. 'castle' → logprob: -2.7723324298858643
    3. 'self' → logprob: -2.8973324298858643
    4. ' a' → logprob: -4.397332668304443
    5. ' self' → logprob: -5.897332668304443
    6. ''#' → logprob: -6.397332668304443
    7. '#' → logprob: -7.397332668304443
    8. 'mo' → logprob: -7.897332668304443
    9. ' '#'' → logprob: -8.022332191467285
    10. '#a' → logprob: -8.022332191467285

Token 553: ' moat' (ID: 152750)
  Prédit: 'mo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mo' → logprob: -0.06405628472566605
    2. 'a' → logprob: -3.314056396484375
    3. 'self' → logprob: -4.689056396484375
    4. 'the' → logprob: -5.064056396484375
    5. ' moat' → logprob: -5.814056396484375
    6. ''#' → logprob: -6.189056396484375
    7. '('#' → logprob: -7.064056396484375
    8. 'castle' → logprob: -7.189056396484375
    9. '['' → logprob: -7.439056396484375
    10. '#' → logprob: -7.814056396484375

Token 554: ' or' (ID: 503)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2877238690853119
    2. ' and' → logprob: -2.1627237796783447
    3. '   ' → logprob: -3.0377237796783447
    4. ',' → logprob: -3.5377237796783447
    5. '.' → logprob: -4.037724018096924
    6. '
' → logprob: -4.162724018096924
    7. ' that' → logprob: -4.912724018096924
    8. ' or' → logprob: -5.287724018096924
    9. 'and' → logprob: -5.412724018096924
    10. 'self' → logprob: -7.037724018096924

Token 555: ' goal' (ID: 8583)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.45776984095573425
    2. 'goal' → logprob: -1.7077698707580566
    3. ' self' → logprob: -2.0827698707580566
    4. 'castle' → logprob: -3.4577698707580566
    5. ''#' → logprob: -4.707769870758057
    6. ' goal' → logprob: -4.707769870758057
    7. 'N' → logprob: -6.582769870758057
    8. 'a' → logprob: -6.707769870758057
    9. ' '#'' → logprob: -6.832769870758057
    10. '&' → logprob: -6.957769870758057

Token 556: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011058438569307327
    2. '   ' → logprob: -5.136058330535889
    3. '<|end|>' → logprob: -6.011058330535889
    4. ',' → logprob: -7.011058330535889
    5. ' and' → logprob: -7.636058330535889
    6. '
' → logprob: -7.761058330535889
    7. '.' → logprob: -8.386058807373047
    8. '        
' → logprob: -8.386058807373047
    9. '    
' → logprob: -8.886058807373047
    10. '<|end|>' → logprob: -9.761058807373047

Token 557: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0638296604156494
    2. '
' → logprob: -1.1888296604156494
    3. '   ' → logprob: -1.1888296604156494
    4. '<|end|>' → logprob: -3.6888296604156494
    5. 'def' → logprob: -4.43882942199707
    6. 'self' → logprob: -5.93882942199707
    7. ' def' → logprob: -6.43882942199707
    8. '        
' → logprob: -6.56382942199707
    9. '<|end|>' → logprob: -7.06382942199707
    10. '    
' → logprob: -7.06382942199707

Token 558: ' #' (ID: 1069)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3734605014324188
    2. 'def' → logprob: -1.2484605312347412
    3. '       ' → logprob: -4.623460292816162
    4. 'from' → logprob: -4.998460292816162
    5. ' self' → logprob: -5.623460292816162
    6. '   ' → logprob: -5.873460292816162
    7. '#' (adapté à ' #') → logprob: -6.873460292816162
    8. 'pass' → logprob: -8.12346076965332
    9. ' def' → logprob: -8.74846076965332
    10. '
' → logprob: -9.24846076965332

Token 559: ' The' (ID: 623)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5361629724502563
    2. ' self' → logprob: -1.7861629724502563
    3. 'def' → logprob: -1.9111629724502563
    4. '       ' → logprob: -3.036162853240967
    5. '#' → logprob: -3.161162853240967
    6. ' def' → logprob: -5.786162853240967
    7. '   ' → logprob: -6.286162853240967
    8. ' #' → logprob: -6.286162853240967
    9. '
' → logprob: -7.786162853240967
    10. 'from' → logprob: -7.911162853240967

Token 560: ' ninja' (ID: 112647)
  Prédit: 'outside'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'outside' → logprob: -0.33627817034721375
    2. 'start' → logprob: -1.9612782001495361
    3. 'def' → logprob: -2.586278200149536
    4. 'starting' → logprob: -3.586278200149536
    5. '#' → logprob: -4.461277961730957
    6. 'front' → logprob: -4.586277961730957
    7. 'visited' → logprob: -5.336277961730957
    8. 'outer' → logprob: -5.836277961730957
    9. 'queue' → logprob: -6.461277961730957
    10. 'starts' → logprob: -6.586277961730957

Token 561: ' starts' (ID: 13217)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.5081571936607361
    2. ' must' → logprob: -1.8831572532653809
    3. 'can' → logprob: -2.883157253265381
    4. ' starts' → logprob: -3.133157253265381
    5. 'must' → logprob: -3.383157253265381
    6. '   ' → logprob: -4.133157253265381
    7. ' may' → logprob: -4.383157253265381
    8. ' will' → logprob: -4.633157253265381
    9. '_path' → logprob: -4.633157253265381
    10. 'def' → logprob: -4.758157253265381

Token 562: ' outside' (ID: 7539)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.28247305750846863
    2. 'positions' → logprob: -2.532473087310791
    3. ' from' → logprob: -2.782473087310791
    4. 'outside' → logprob: -3.157473087310791
    5. '_positions' → logprob: -3.532473087310791
    6. ' positions' → logprob: -4.532473087310791
    7. ' outside' → logprob: -4.907473087310791
    8. 'at' → logprob: -5.407473087310791
    9. ' at' → logprob: -5.532473087310791
    10. '_from' → logprob: -7.157473087310791

Token 563: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1694289445877075
    2. '.' → logprob: -1.2944289445877075
    3. 'from' → logprob: -2.419428825378418
    4. 'cells' → logprob: -2.669428825378418
    5. ' cells' → logprob: -2.794428825378418
    6. ',' → logprob: -3.044428825378418
    7. 'self' → logprob: -3.419428825378418
    8. ' and' → logprob: -3.544428825378418
    9. ' from' → logprob: -4.044428825378418
    10. 'positions' → logprob: -4.294428825378418

Token 564: ' can' (ID: 665)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'can' → logprob: -0.27836525440216064
    2. 'must' → logprob: -2.903365135192871
    3. ' can' → logprob: -3.528365135192871
    4. 'will' → logprob: -3.653365135192871
    5. 'tries' → logprob: -4.153365135192871
    6. 'search' → logprob: -4.528365135192871
    7. 'c' → logprob: -4.528365135192871
    8. 'self' → logprob: -4.653365135192871
    9. ' must' → logprob: -4.778365135192871
    10. ' searches' → logprob: -4.778365135192871

Token 565: ' start' (ID: 1604)
  Prédit: 'enter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enter' → logprob: -0.9807297587394714
    2. 'start' → logprob: -1.9807298183441162
    3. 'crawl' → logprob: -1.9807298183441162
    4. ' enter' → logprob: -2.105729818344116
    5. 'move' → logprob: -2.730729818344116
    6. ' move' → logprob: -3.355729818344116
    7. ' start' → logprob: -3.605729818344116
    8. ' only' → logprob: -3.855729818344116
    9. ' crawl' → logprob: -4.230729579925537
    10. 'only' → logprob: -4.855729579925537

Token 566: ' from' (ID: 591)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.4166826009750366
    2. ' from' → logprob: -1.2916826009750366
    3. ' at' → logprob: -3.291682720184326
    4. 'at' → logprob: -4.416682720184326
    5. ' anywhere' → logprob: -5.041682720184326
    6. ' on' → logprob: -5.666682720184326
    7. 'on' → logprob: -5.791682720184326
    8. 'any' → logprob: -6.041682720184326
    9. 'moving' → logprob: -8.541682243347168
    10. ' moving' → logprob: -9.166682243347168

Token 567: ' any' (ID: 1062)
  Prédit: ' any'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' any' → logprob: -0.38805848360061646
    2. 'any' → logprob: -1.1380584239959717
    3. ' multiple' → logprob: -7.263058662414551
    4. 'multiple' → logprob: -8.13805866241455
    5. ' all' → logprob: -10.01305866241455
    6. ' the' → logprob: -10.63805866241455
    7. '_any' → logprob: -10.88805866241455
    8. ' anywhere' → logprob: -11.13805866241455
    9. 'the' → logprob: -11.38805866241455
    10. ' cells' → logprob: -11.51305866241455

Token 568: ' such' (ID: 2238)
  Prédit: ' edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' edge' → logprob: -0.7382508516311646
    2. ' perimeter' → logprob: -1.7382508516311646
    3. 'edge' → logprob: -2.113250732421875
    4. ' non' → logprob: -2.738250732421875
    5. 'non' → logprob: -2.738250732421875
    6. ' cell' → logprob: -3.238250732421875
    7. ' of' → logprob: -3.738250732421875
    8. 'cell' → logprob: -4.238250732421875
    9. ' position' → logprob: -5.363250732421875
    10. 'per' → logprob: -5.738250732421875

Token 569: ' cell' (ID: 4206)
  Prédit: ' edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edge' → logprob: -0.3168385922908783
    2. 'edge' → logprob: -2.191838502883911
    3. ' perimeter' → logprob: -2.441838502883911
    4. ' cell' → logprob: -3.191838502883911
    5. ' position' → logprob: -4.31683874130249
    6. 'cell' → logprob: -4.69183874130249
    7. 'position' → logprob: -5.06683874130249
    8. 'per' → logprob: -7.19183874130249
    9. ' location' → logprob: -7.81683874130249
    10. ' point' → logprob: -7.81683874130249

Token 570: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0711677074432373
    2. ' on' → logprob: -1.3211677074432373
    3. '.' → logprob: -1.4461677074432373
    4. '   ' → logprob: -2.3211677074432373
    5. ',' → logprob: -3.4461677074432373
    6. ' outside' → logprob: -4.571167945861816
    7. ' at' → logprob: -5.321167945861816
    8. ' that' → logprob: -6.446167945861816
    9. ' in' → logprob: -6.946167945861816
    10. ' or' → logprob: -7.071167945861816

Token 571: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03282064199447632
    2. '
' → logprob: -3.532820701599121
    3. '    
' → logprob: -6.657820701599121
    4. '       ' → logprob: -6.907820701599121
    5. '        
' → logprob: -7.782820701599121
    6. 'def' → logprob: -8.407820701599121
    7. '<|end|>' → logprob: -10.032820701599121
    8. ' def' → logprob: -10.282820701599121
    9. '```' → logprob: -11.282820701599121
    10. '<|end|>' → logprob: -12.032820701599121

Token 572: ' self' (ID: 1051)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1647498607635498
    2. 'self' (adapté à ' self') → logprob: -2.28974986076355
    3. '       ' → logprob: -3.28974986076355
    4. '   ' → logprob: -4.914750099182129
    5. ' self' → logprob: -5.789750099182129
    6. ' def' → logprob: -6.289750099182129
    7. 'from' → logprob: -7.539750099182129
    8. '
' → logprob: -8.414750099182129
    9. '        
' → logprob: -9.289750099182129
    10. '#' → logprob: -10.039750099182129

Token 573: '.out' (ID: 3338)
  Prédit: '.start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.start' → logprob: -0.09961843490600586
    2. '.out' → logprob: -3.099618434906006
    3. '.starts' → logprob: -3.224618434906006
    4. 'start' → logprob: -5.099618434906006
    5. 'starts' → logprob: -6.474618434906006
    6. '.outer' → logprob: -7.099618434906006
    7. 'outside' → logprob: -7.849618434906006
    8. '.valid' → logprob: -7.974618434906006
    9. 'starting' → logprob: -8.724618911743164
    10. '._' → logprob: -9.349618911743164

Token 574: 'side' (ID: 4341)
  Prédit: 'side'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'side' → logprob: -0.004878404084593058
    2. 's' → logprob: -5.379878520965576
    3. '_side' → logprob: -10.629878044128418
    4. 'start' → logprob: -10.629878044128418
    5. 'skirts' → logprob: -10.879878044128418
    6. 'er' → logprob: -11.004878044128418
    7. '```' → logprob: -11.129878044128418
    8. 'ide' → logprob: -11.129878044128418
    9. '_s' → logprob: -11.254878044128418
    10. 'is' → logprob: -11.254878044128418

Token 575: '_cells' (ID: 93468)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.21375709772109985
    2. ' =' → logprob: -1.963757038116455
    3. '_positions' → logprob: -3.463757038116455
    4. '_cells' → logprob: -4.338757038116455
    5. '=' → logprob: -5.088757038116455
    6. 's' → logprob: -7.338757038116455
    7. '_points' → logprob: -8.713757514953613
    8. '_edges' → logprob: -8.838757514953613
    9. '_sources' → logprob: -8.838757514953613
    10. ' :' → logprob: -9.213757514953613

Token 576: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.33044108748435974
    2. '=' → logprob: -1.3304411172866821
    3. ':' → logprob: -4.080440998077393
    4. ' :' → logprob: -9.08044147491455
    5. ' ' → logprob: -11.45544147491455
    6. '=set' → logprob: -11.95544147491455
    7. '=[]' → logprob: -13.45544147491455
    8. ':Set' → logprob: -16.330440521240234
    9. '  ' → logprob: -16.580440521240234
    10. ':set' → logprob: -16.830440521240234

Token 577: ' self' (ID: 1051)
  Prédit: '[
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[
' → logprob: -0.3983522355556488
    2. '[(' → logprob: -1.3983522653579712
    3. '{' → logprob: -3.6483521461486816
    4. '{
' → logprob: -3.8983521461486816
    5. '[' → logprob: -4.148352146148682
    6. 'set' → logprob: -4.148352146148682
    7. '[]
' → logprob: -6.148352146148682
    8. '[]' → logprob: -6.898352146148682
    9. ' [
' → logprob: -9.02335262298584
    10. ' set' → logprob: -9.39835262298584

Token 578: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.005215263459831476
    2. '.find' → logprob: -5.630215167999268
    3. '.get' → logprob: -7.005215167999268
    4. '.compute' → logprob: -7.755215167999268
    5. '.ident' → logprob: -8.880215644836426
    6. '.collect' → logprob: -9.505215644836426
    7. '.det' → logprob: -10.755215644836426
    8. '.out' → logprob: -11.630215644836426
    9. '.set' → logprob: -12.005215644836426
    10. '.detect' → logprob: -12.255215644836426

Token 579: 'detect' (ID: 117191)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.4184528887271881
    2. 'identify' → logprob: -1.7934528589248657
    3. 'collect' → logprob: -2.1684529781341553
    4. 'compute' → logprob: -3.4184529781341553
    5. 'get' → logprob: -4.793452739715576
    6. 'det' → logprob: -4.918452739715576
    7. 'loc' → logprob: -5.418452739715576
    8. 'g' → logprob: -5.543452739715576
    9. 'detect' → logprob: -5.793452739715576
    10. 'calculate' → logprob: -7.793452739715576

Token 580: '_out' (ID: 12171)
  Prédit: '_out'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_out' → logprob: -8.923874702304602e-05
    2. 'outside' → logprob: -9.625089645385742
    3. '_per' → logprob: -11.375089645385742
    4. '_edges' → logprob: -13.000089645385742
    5. '_outline' → logprob: -13.375089645385742
    6. '_' → logprob: -13.500089645385742
    7. '_start' → logprob: -14.000089645385742
    8. '_outer' → logprob: -14.000089645385742
    9. '_edge' → logprob: -14.250089645385742
    10. '_possible' → logprob: -14.375089645385742

Token 581: 'side' (ID: 4341)
  Prédit: 'side'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'side' → logprob: -7.255023956531659e-05
    2. '_side' → logprob: -10.500072479248047
    3. '```' → logprob: -10.750072479248047
    4. 'is' → logprob: -12.125072479248047
    5. 's' → logprob: -12.625072479248047
    6. '_' → logprob: -12.750072479248047
    7. '_of' → logprob: -12.875072479248047
    8. 'site' → logprob: -13.250072479248047
    9. 'ide' → logprob: -13.625072479248047
    10. '_cells' → logprob: -13.750072479248047

Token 582: '_cells' (ID: 93468)
  Prédit: '_cells'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cells' → logprob: -0.0009677992202341557
    2. '_' → logprob: -7.000967979431152
    3. '()' → logprob: -10.750967979431152
    4. '_spaces' → logprob: -11.500967979431152
    5. '_positions' → logprob: -12.125967979431152
    6. 'cells' → logprob: -12.500967979431152
    7. '_points' → logprob: -13.000967979431152
    8. '_edges' → logprob: -13.500967979431152
    9. '```' → logprob: -13.500967979431152
    10. 's' → logprob: -13.500967979431152

Token 583: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -6.146429223008454e-05
    2. '()
' → logprob: -9.87506103515625
    3. '(' → logprob: -11.75006103515625
    4. '()

' → logprob: -13.50006103515625
    5. ' ()' → logprob: -15.37506103515625
    6. '()
' → logprob: -15.62506103515625
    7. '()`' → logprob: -16.75006103515625
    8. '()"' → logprob: -17.00006103515625
    9. '()\' → logprob: -17.12506103515625
    10. '())' → logprob: -17.37506103515625

Token 584: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24274766445159912
    2. '
' → logprob: -1.8677476644515991
    3. 'def' → logprob: -2.8677477836608887
    4. ' def' → logprob: -5.992747783660889
    5. '    
' → logprob: -6.742747783660889
    6. '	def' → logprob: -8.74274730682373
    7. '<|end|>' → logprob: -9.11774730682373
    8. ' ' → logprob: -9.74274730682373
    9. '  
' → logprob: -10.11774730682373
    10. '        
' → logprob: -10.49274730682373

Token 585: ' def' (ID: 1056)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.20207226276397705
    2. '   ' → logprob: -2.3270721435546875
    3. 'def' (adapté à ' def') → logprob: -2.7020721435546875
    4. ' def' → logprob: -4.0770721435546875
    5. ' ' → logprob: -7.4520721435546875
    6. '    
' → logprob: -8.577072143554688
    7. '```' → logprob: -9.077072143554688
    8. '	def' → logprob: -9.452072143554688
    9. '<|end|>' → logprob: -9.702072143554688
    10. '
' → logprob: -9.952072143554688

Token 586: ' _' (ID: 1175)
  Prédit: '_detect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_detect' → logprob: -0.0023009662982076406
    2. ' _' → logprob: -6.37730073928833
    3. '_def' → logprob: -8.002301216125488
    4. '_det' → logprob: -8.502301216125488
    5. 'def' → logprob: -10.502301216125488
    6. '_define' → logprob: -11.877301216125488
    7. '_out' → logprob: -11.877301216125488
    8. '_' → logprob: -12.252301216125488
    9. '_detection' → logprob: -12.627301216125488
    10. '_detector' → logprob: -13.377301216125488

Token 587: 'detect' (ID: 117191)
  Prédit: 'detect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'detect' → logprob: -4.320199877838604e-07
    2. 'def' → logprob: -15.25
    3. '_detect' → logprob: -16.25
    4. ' detect' → logprob: -18.0
    5. 'det' → logprob: -18.125
    6. 'discover' → logprob: -19.125
    7. 'etect' → logprob: -19.375
    8. '.detect' → logprob: -19.875
    9. 'define' → logprob: -20.25
    10. 'decode' → logprob: -20.25

Token 588: '_out' (ID: 12171)
  Prédit: '_out'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_out' → logprob: -2.696889623621246e-06
    2. 'outside' → logprob: -12.87500286102295
    3. '_inside' → logprob: -18.500001907348633
    4. 'Outside' → logprob: -19.000001907348633
    5. '_' → logprob: -19.000001907348633
    6. '_outline' → logprob: -19.375001907348633
    7. ' outside' → logprob: -19.625001907348633
    8. '```' → logprob: -19.875001907348633
    9. '`' → logprob: -20.500001907348633
    10. '\' → logprob: -20.500001907348633

Token 589: 'side' (ID: 4341)
  Prédit: 'side'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'side' → logprob: -0.0061013237573206425
    2. 'ide' → logprob: -5.131101131439209
    3. 'is' → logprob: -9.506101608276367
    4. '_side' → logprob: -10.256101608276367
    5. 'ise' → logprob: -11.131101608276367
    6. 'outside' → logprob: -11.131101608276367
    7. 's' → logprob: -11.881101608276367
    8. '_' → logprob: -12.256101608276367
    9. 'ode' → logprob: -12.756101608276367
    10. 'inside' → logprob: -13.381101608276367

Token 590: '_cells' (ID: 93468)
  Prédit: '_cells'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cells' → logprob: -5.512236498361744e-07
    2. '_' → logprob: -15.875000953674316
    3. '```' → logprob: -15.875000953674316
    4. 'cells' → logprob: -16.375
    5. ' _' → logprob: -17.0
    6. '_tokens' → logprob: -17.75
    7. 'def' → logprob: -18.0
    8. '_calls' → logprob: -18.125
    9. ')_' → logprob: -18.625
    10. '_nodes' → logprob: -18.625

Token 591: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -3.690834273584187e-05
    2. '(' → logprob: -11.00003719329834
    3. 'self' → logprob: -11.37503719329834
    4. '   ' → logprob: -12.37503719329834
    5. ' (' → logprob: -12.75003719329834
    6. ' self' → logprob: -14.50003719329834
    7. '       ' → logprob: -14.50003719329834
    8. ' ' → logprob: -15.37503719329834
    9. '(s' → logprob: -15.87503719329834
    10. '(
' → logprob: -16.125036239624023

Token 592: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009107483783736825
    2. 'self' → logprob: -7.375910758972168
    3. '):' → logprob: -8.375910758972168
    4. ' )' → logprob: -10.750910758972168
    5. '(self' → logprob: -10.875910758972168
    6. '):
' → logprob: -12.000910758972168
    7. '   ' → logprob: -12.500910758972168
    8. ')->' → logprob: -13.625910758972168
    9. '       ' → logprob: -14.625910758972168
    10. '):

' → logprob: -14.750910758972168

Token 593: ' ->' (ID: 2747)
  Prédit: ' ->'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ->' → logprob: -0.8110888600349426
    2. '->' → logprob: -1.0610888004302979
    3. '(self' → logprob: -2.186088800430298
    4. ')' → logprob: -2.561088800430298
    5. '       ' → logprob: -4.561089038848877
    6. 'self' → logprob: -5.436089038848877
    7. ':' → logprob: -6.061089038848877
    8. '   ' → logprob: -6.311089038848877
    9. ')->' → logprob: -7.186089038848877
    10. ' self' → logprob: -8.811088562011719

Token 594: ' List' (ID: 2655)
  Prédit: 'Set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Set' → logprob: -0.018256472423672676
    2. 'List' → logprob: -4.018256664276123
    3. 'set' → logprob: -9.518256187438965
    4. ' Set' → logprob: -10.393256187438965
    5. 'list' → logprob: -13.893256187438965
    6. ' List' → logprob: -14.018256187438965
    7. '	Set' → logprob: -15.643256187438965
    8. 'Iterator' → logprob: -15.768256187438965
    9. '_set' → logprob: -16.01825714111328
    10. '   ' → logprob: -16.26825714111328

Token 595: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.512236498361744e-07
    2. '[
' → logprob: -15.625000953674316
    3. '<Tuple' → logprob: -16.0
    4. '[int' → logprob: -16.125
    5. '```' → logprob: -16.625
    6. '[List' → logprob: -17.25
    7. '[(' → logprob: -17.875
    8. 'Tuple' → logprob: -18.125
    9. '   ' → logprob: -18.75
    10. '[str' → logprob: -19.375

Token 596: 'Tuple' (ID: 40048)
  Prédit: 'Tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tuple' → logprob: -1.3856492842023727e-06
    2. ' Tuple' → logprob: -13.625000953674316
    3. '[' → logprob: -16.375001907348633
    4. 'Grid' → logprob: -16.750001907348633
    5. 'int' → logprob: -17.375001907348633
    6. 'tuple' → logprob: -19.375001907348633
    7. 'Tu' → logprob: -19.750001907348633
    8. '```' → logprob: -20.750001907348633
    9. '   ' → logprob: -21.125001907348633
    10. '.Tuple' → logprob: -21.500001907348633

Token 597: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -4.024604277219623e-05
    2. 'int' → logprob: -10.125040054321289
    3. '<int' → logprob: -16.87504005432129
    4. ',int' → logprob: -16.87504005432129
    5. ']int' → logprob: -17.50004005432129
    6. '(int' → logprob: -17.87504005432129
    7. ' int' → logprob: -19.25004005432129
    8. '	int' → logprob: -19.25004005432129
    9. '[' → logprob: -19.75004005432129
    10. ':int' → logprob: -19.87504005432129

Token 598: ',int' (ID: 20909)
  Prédit: ',int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',int' → logprob: -0.313506543636322
    2. ',' → logprob: -1.3135066032409668
    3. 'int' → logprob: -8.438506126403809
    4. '[int' → logprob: -11.063506126403809
    5. ' ,' → logprob: -11.438506126403809
    6. ']int' → logprob: -14.188506126403809
    7. ' int' → logprob: -14.688506126403809
    8. '(int' → logprob: -15.688506126403809
    9. '   ' → logprob: -16.063507080078125
    10. ',
' → logprob: -16.063507080078125

Token 599: ']]:
' (ID: 183340)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.4526878595352173
    2. ')]' → logprob: -1.9526878595352173
    3. ']]' → logprob: -2.0776877403259277
    4. ']>' → logprob: -2.5776877403259277
    5. ']]:
' → logprob: -4.327687740325928
    6. '>]' → logprob: -5.827687740325928
    7. '>' → logprob: -6.202687740325928
    8. ']:' → logprob: -6.327687740325928
    9. ' ]' → logprob: -8.202688217163086
    10. ')' → logprob: -8.827688217163086

Token 600: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006127171218395233
    2. 'cells' → logprob: -7.875612735748291
    3. 'outside' → logprob: -9.000612258911133
    4. 'result' → logprob: -10.250612258911133
    5. ' outside' → logprob: -10.500612258911133
    6. ' cells' → logprob: -10.875612258911133
    7. 'out' → logprob: -11.375612258911133
    8. '[]' → logprob: -12.875612258911133
    9. '```' → logprob: -12.875612258911133
    10. '   ' → logprob: -13.000612258911133

Token 601: ' outside' (ID: 7539)
  Prédit: 'outside'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'outside' (adapté à ' outside') → logprob: -0.624354362487793
    2. '       ' → logprob: -0.874354362487793
    3. 'cells' → logprob: -3.124354362487793
    4. ' outside' → logprob: -6.374354362487793
    5. 'out' → logprob: -7.249354362487793
    6. 'edges' → logprob: -7.874354362487793
    7. 'result' → logprob: -8.374354362487793
    8. 'outs' → logprob: -9.124354362487793
    9. ' cells' → logprob: -9.749354362487793
    10. 'edge' → logprob: -10.499354362487793

Token 602: ' =' (ID: 314)
  Prédit: '_cells'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cells' → logprob: -0.21684807538986206
    2. ' =' → logprob: -1.8418481349945068
    3. '=' → logprob: -3.341848134994507
    4. 'cells' → logprob: -7.966847896575928
    5. '=[]' → logprob: -8.591848373413086
    6. 's' → logprob: -8.716848373413086
    7. '=[]
' → logprob: -8.716848373413086
    8. '_positions' → logprob: -9.591848373413086
    9. '_edges' → logprob: -10.466848373413086
    10. '_list' → logprob: -10.716848373413086

Token 603: ' []
' (ID: 8911)
  Prédit: '[]
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]
' → logprob: -0.1269325166940689
    2. '[]' → logprob: -2.1269326210021973
    3. '[]

' → logprob: -12.626932144165039
    4. '[
' → logprob: -14.126932144165039
    5. ' []
' → logprob: -14.876932144165039
    6. '[' → logprob: -16.75193214416504
    7. ' []' → logprob: -16.87693214416504
    8. '[])
' → logprob: -17.37693214416504
    9. '[(' → logprob: -19.62693214416504
    10. '   ' → logprob: -19.75193214416504

Token 604: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04384075850248337
    2. ' for' → logprob: -3.5438406467437744
    3. 'for' → logprob: -4.2938408851623535
    4. '        
' → logprob: -8.293840408325195
    5. '
' → logprob: -10.418840408325195
    6. '	for' → logprob: -11.168840408325195
    7. '   ' → logprob: -11.168840408325195
    8. '#' → logprob: -11.543840408325195
    9. '	' → logprob: -12.793840408325195
    10. '           ' → logprob: -12.918840408325195

Token 605: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.000287795381154865
    2. '#' → logprob: -8.500288009643555
    3. '       ' → logprob: -9.500288009643555
    4. ' for' → logprob: -11.625288009643555
    5. 'width' → logprob: -15.625288009643555
    6. 'def' → logprob: -16.125288009643555
    7. 'rows' → logprob: -16.375288009643555
    8. '   ' → logprob: -16.750288009643555
    9. 'height' → logprob: -17.000288009643555
    10. 'edges' → logprob: -17.125288009643555

Token 606: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.029242031276226044
    2. 'y' → logprob: -3.7792420387268066
    3. 'pos' → logprob: -6.029242038726807
    4. 'i' → logprob: -6.529242038726807
    5. 'edge' → logprob: -7.029242038726807
    6. 'side' → logprob: -7.404242038726807
    7. ' x' → logprob: -7.654242038726807
    8. ' y' → logprob: -9.904241561889648
    9. 'idx' → logprob: -10.529241561889648
    10. ' edge' → logprob: -10.904241561889648

Token 607: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.42871472239494324
    2. 'in' → logprob: -1.0537147521972656
    3. ',' → logprob: -12.803714752197266
    4. '0' → logprob: -13.053714752197266
    5. ')' → logprob: -13.428714752197266
    6. ' ' → logprob: -13.553714752197266
    7. '
' → logprob: -13.678714752197266
    8. '   ' → logprob: -14.053714752197266
    9. 'range' → logprob: -14.053714752197266
    10. 'x' → logprob: -14.303714752197266

Token 608: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0019418458687141538
    2. ' range' → logprob: -6.251941680908203
    3. '0' → logprob: -11.626941680908203
    4. '[' → logprob: -12.876941680908203
    5. '   ' → logprob: -13.876941680908203
    6. ' ' → logprob: -15.251941680908203
    7. '(range' → logprob: -15.501941680908203
    8. '	range' → logprob: -16.751941680908203
    9. '
' → logprob: -17.001941680908203
    10. '  ' → logprob: -17.251941680908203

Token 609: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.1875571544806007e-05
    2. 'self' → logprob: -12.000011444091797
    3. '(' → logprob: -12.125011444091797
    4. '       ' → logprob: -15.250011444091797
    5. '   ' → logprob: -17.500011444091797
    6. '0' → logprob: -17.750011444091797
    7. '(
' → logprob: -18.125011444091797
    8. ' (' → logprob: -18.250011444091797
    9. '           ' → logprob: -18.250011444091797
    10. '[self' → logprob: -18.250011444091797

Token 610: '.width' (ID: 11038)
  Prédit: '.width'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.width' → logprob: -0.0034171282313764095
    2. '.cast' → logprob: -5.878417015075684
    3. 'width' → logprob: -7.503417015075684
    4. '.height' → logprob: -10.878417015075684
    5. '.' → logprob: -11.003417015075684
    6. ')' → logprob: -11.753417015075684
    7. ' .' → logprob: -12.503417015075684
    8. 'cast' → logprob: -12.628417015075684
    9. ').' → logprob: -13.003417015075684
    10. '   ' → logprob: -13.503417015075684

Token 611: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.018306564539670944
    2. '):' → logprob: -4.018306732177734
    3. '       ' → logprob: -9.268306732177734
    4. '):
' → logprob: -10.268306732177734
    5. '   ' → logprob: -11.143306732177734
    6. ' ):
' → logprob: -11.768306732177734
    7. '           ' → logprob: -13.268306732177734
    8. ')' → logprob: -14.268306732177734
    9. '):

' → logprob: -14.518306732177734
    10. '0' → logprob: -14.643306732177734

Token 612: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02080065757036209
    2. '       ' → logprob: -4.395800590515137
    3. ':
' → logprob: -5.645800590515137
    4. ':' → logprob: -5.770800590515137
    5. ' for' → logprob: -7.895800590515137
    6. ' if' → logprob: -8.145800590515137
    7. ',' → logprob: -8.520800590515137
    8. '<|end|>' → logprob: -8.895800590515137
    9. '0' → logprob: -9.145800590515137
    10. 'for' → logprob: -9.270800590515137

Token 613: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.015760647132992744
    2. 'if' → logprob: -4.26576042175293
    3. '           ' → logprob: -6.64076042175293
    4. ' for' → logprob: -8.26576042175293
    5. 'y' → logprob: -10.76576042175293
    6. '   ' → logprob: -12.14076042175293
    7. ' if' → logprob: -12.76576042175293
    8. '               ' → logprob: -13.39076042175293
    9. '            
' → logprob: -14.51576042175293
    10. '       ' → logprob: -14.51576042175293

Token 614: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0010390023235231638
    2. ' y' → logprob: -7.126039028167725
    3. 'edge' → logprob: -9.001038551330566
    4. 'side' → logprob: -10.126038551330566
    5. 'pos' → logprob: -10.751038551330566
    6. 'for' → logprob: -10.876038551330566
    7. 'boundary' → logprob: -12.251038551330566
    8. 'border' → logprob: -12.751038551330566
    9. '_y' → logprob: -12.751038551330566
    10. ' edge' → logprob: -13.126038551330566

Token 615: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.38688766956329346
    2. 'in' → logprob: -1.1368876695632935
    3. 'In' → logprob: -12.136887550354004
    4. '0' → logprob: -13.511887550354004
    5. '           ' → logprob: -13.511887550354004
    6. ' ' → logprob: -13.636887550354004
    7. 'import' → logprob: -14.011887550354004
    8. '<|end|>' → logprob: -14.011887550354004
    9. '```' → logprob: -14.636887550354004
    10. ',' → logprob: -14.636887550354004

Token 616: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.011884212493896484
    2. 'range' → logprob: -5.5118842124938965
    3. '0' → logprob: -5.6368842124938965
    4. '(' → logprob: -5.8868842124938965
    5. ' [' → logprob: -6.7618842124938965
    6. ' range' → logprob: -8.636884689331055
    7. ' (' → logprob: -10.761884689331055
    8. '(range' → logprob: -10.886884689331055
    9. 'self' → logprob: -11.011884689331055
    10. '[self' → logprob: -11.136884689331055

Token 617: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -17.0
    3. '   ' → logprob: -19.0
    4. '۰' → logprob: -19.875
    5. '[' → logprob: -21.75
    6. '           ' → logprob: -21.75
    7. '       ' → logprob: -22.125
    8. ',' → logprob: -22.375
    9. 'self' → logprob: -22.4375
    10. '00' → logprob: -22.5

Token 618: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001439459010725841
    2. ' ,' → logprob: -9.250144004821777
    3. ',y' → logprob: -10.000144004821777
    4. ',x' → logprob: -14.125144004821777
    5. ']' → logprob: -15.250144004821777
    6. ',
' → logprob: -15.375144004821777
    7. ',n' → logprob: -15.500144004821777
    8. ',None' → logprob: -15.500144004821777
    9. ',user' → logprob: -16.75014305114746
    10. ' ' → logprob: -16.75014305114746

Token 619: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00020509003661572933
    2. ' self' → logprob: -8.500205039978027
    3. '           ' → logprob: -13.625205039978027
    4. '
' → logprob: -16.250205993652344
    5. '(self' → logprob: -16.250205993652344
    6. '                   ' → logprob: -17.000205993652344
    7. '               ' → logprob: -17.125205993652344
    8. '       ' → logprob: -17.625205993652344
    9. '   ' → logprob: -17.750205993652344
    10. '          ' → logprob: -18.000205993652344

Token 620: '.height' (ID: 11682)
  Prédit: '.height'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.height' → logprob: -0.006715728435665369
    2. 'height' → logprob: -5.006715774536133
    3. '.' → logprob: -15.256715774536133
    4. ' height' → logprob: -15.881715774536133
    5. '	height' → logprob: -17.756715774536133
    6. '.width' → logprob: -18.006715774536133
    7. '   ' → logprob: -18.381715774536133
    8. 'Height' → logprob: -18.881715774536133
    9. '_height' → logprob: -19.756715774536133
    10. 'HEIGHT' → logprob: -20.006715774536133

Token 621: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.011048528365790844
    2. ' -' → logprob: -4.511048316955566
    3. '1' → logprob: -14.386048316955566
    4. ' ' → logprob: -15.886048316955566
    5. '   ' → logprob: -17.261049270629883
    6. '```' → logprob: -17.886049270629883
    7. '()-' → logprob: -18.761049270629883
    8. '–' → logprob: -18.761049270629883
    9. '−' → logprob: -19.511049270629883
    10. ' ' → logprob: -20.136049270629883

Token 622: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.375001907348633
    3. '```' → logprob: -17.500001907348633
    4. '   ' → logprob: -17.875001907348633
    5. ')' → logprob: -19.500001907348633
    6. '-' → logprob: -20.125001907348633
    7. '
' → logprob: -20.437501907348633
    8. '۱' → logprob: -20.500001907348633
    9. '１' → logprob: -21.000001907348633
    10. ']' → logprob: -21.125001907348633

Token 623: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.20239293575286865
    2. ']:' → logprob: -1.7023929357528687
    3. ']:
' → logprob: -7.327393054962158
    4. ']' → logprob: -8.577392578125
    5. ']:

' → logprob: -9.202392578125
    6. ' ]' → logprob: -11.202392578125
    7. '           ' → logprob: -11.702392578125
    8. '       ' → logprob: -12.327392578125
    9. ']:


' → logprob: -13.827392578125
    10. '               ' → logprob: -13.827392578125

Token 624: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.015504928305745125
    2. ':' → logprob: -4.640504837036133
    3. ':
' → logprob: -5.265504837036133
    4. '           ' → logprob: -8.515504837036133
    5. ',' → logprob: -8.765504837036133
    6. ' if' → logprob: -9.265504837036133
    7. '):
' → logprob: -10.265504837036133
    8. ' :' → logprob: -10.765504837036133
    9. ' :
' → logprob: -11.765504837036133
    10. '[' → logprob: -12.140504837036133

Token 625: ' pt' (ID: 18961)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.2483527511358261
    2. ' if' → logprob: -1.6233527660369873
    3. 'if' → logprob: -4.373352527618408
    4. '           ' → logprob: -5.623352527618408
    5. '               ' → logprob: -5.873352527618408
    6. ' point' → logprob: -6.748352527618408
    7. '
' → logprob: -7.123352527618408
    8. ' cell' → logprob: -7.873352527618408
    9. '   ' → logprob: -7.998352527618408
    10. 'point' → logprob: -8.123353004455566

Token 626: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20142745971679688
    2. '=' → logprob: -1.7014274597167969
    3. '=self' → logprob: -12.201427459716797
    4. '               ' → logprob: -13.201427459716797
    5. '                ' → logprob: -13.451427459716797
    6. ' ' → logprob: -13.701427459716797
    7. ',' → logprob: -14.076427459716797
    8. ')' → logprob: -14.201427459716797
    9. 's' → logprob: -14.326427459716797
    10. '           ' → logprob: -14.951427459716797

Token 627: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.023274600505828857
    2. ' self' → logprob: -3.7732746601104736
    3. '(self' → logprob: -10.648274421691895
    4. '               ' → logprob: -12.523274421691895
    5. '                   ' → logprob: -14.398274421691895
    6. '	self' → logprob: -14.773274421691895
    7. '           ' → logprob: -15.398274421691895
    8. '=self' → logprob: -15.523274421691895
    9. '[self' → logprob: -17.02327537536621
    10. ' (' → logprob: -17.14827537536621

Token 628: '.cast' (ID: 68894)
  Prédit: '.cast'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cast' → logprob: -3.054500666621607e-06
    2. '.' → logprob: -13.12500286102295
    3. 'cast' → logprob: -15.62500286102295
    4. 'castle' → logprob: -15.75000286102295
    5. ' .' → logprob: -16.250003814697266
    6. '_cast' → logprob: -16.375003814697266
    7. '.Cast' → logprob: -16.500003814697266
    8. '.c' → logprob: -16.625003814697266
    9. '.point' → logprob: -17.125003814697266
    10. '```' → logprob: -17.625003814697266

Token 629: 'le' (ID: 282)
  Prédit: 'le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -2.816093228830141e-06
    2. 'ле' → logprob: -14.50000286102295
    3. 'e' → logprob: -15.25000286102295
    4. '#' → logprob: -15.50000286102295
    5. 'castle' → logprob: -15.81250286102295
    6. '```' → logprob: -16.125001907348633
    7. 'tle' → logprob: -16.187501907348633
    8. '

' → logprob: -16.250001907348633
    9. '
' → logprob: -16.312501907348633
    10. 'les' → logprob: -16.312501907348633

Token 630: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -9.088346359931165e-07
    2. 'Map' → logprob: -14.500000953674316
    3. 'map' → logprob: -15.875000953674316
    4. '_cast' → logprob: -16.625
    5. '   ' → logprob: -17.0
    6. '._' → logprob: -17.875
    7. '.map' → logprob: -17.875
    8. '_MAP' → logprob: -18.0
    9. 'self' → logprob: -18.125
    10. '           ' → logprob: -18.375

Token 631: '.point' (ID: 58020)
  Prédit: '.point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.point' → logprob: -0.004722395446151495
    2. '.grid' → logprob: -5.379722595214844
    3. '.' → logprob: -9.629722595214844
    4. 'point' → logprob: -10.629722595214844
    5. ' .' → logprob: -11.754722595214844
    6. '.points' → logprob: -13.504722595214844
    7. '.Point' → logprob: -14.504722595214844
    8. '.p' → logprob: -14.504722595214844
    9. '   ' → logprob: -15.129722595214844
    10. ' point' → logprob: -15.254722595214844

Token 632: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -1.9862216504407115e-05
    2. '(' → logprob: -10.875020027160645
    3. '(
' → logprob: -14.625020027160645
    4. 'x' → logprob: -15.375020027160645
    5. ' (' → logprob: -16.000019073486328
    6. '```' → logprob: -16.125019073486328
    7. '   ' → logprob: -17.250019073486328
    8. '           ' → logprob: -19.375019073486328
    9. '               ' → logprob: -19.500019073486328
    10. ' x' → logprob: -19.625019073486328

Token 633: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10023168474435806
    2. ',y' → logprob: -2.350231647491455
    3. ' ,' → logprob: -11.225232124328613
    4. 'y' → logprob: -11.600232124328613
    5. ',
' → logprob: -14.350232124328613
    6. ')' → logprob: -14.725232124328613
    7. '```' → logprob: -14.975232124328613
    8. ',x' → logprob: -15.350232124328613
    9. ' y' → logprob: -15.475232124328613
    10. '   ' → logprob: -16.600231170654297

Token 634: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.693714439868927
    2. ')
' → logprob: -0.693714439868927
    3. ')
' → logprob: -8.568714141845703
    4. ').' → logprob: -8.943714141845703
    5. '               ' → logprob: -9.318714141845703
    6. '       ' → logprob: -9.818714141845703
    7. ' )
' → logprob: -9.943714141845703
    8. '           ' → logprob: -10.943714141845703
    9. ' )' → logprob: -11.318714141845703
    10. ');' → logprob: -12.443714141845703

Token 635: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0004350797680672258
    2. ' if' → logprob: -8.250434875488281
    3. 'if' → logprob: -9.500434875488281
    4. '           ' → logprob: -10.000434875488281
    5. '       ' → logprob: -10.625434875488281
    6. '<|end|>' → logprob: -11.625434875488281
    7. '```' → logprob: -12.750434875488281
    8. '                
' → logprob: -13.125434875488281
    9. '	           ' → logprob: -13.250434875488281
    10. '                   ' → logprob: -13.375434875488281

Token 636: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.40286219120025635
    2. '               ' → logprob: -1.1528621912002563
    3. ' if' → logprob: -4.152862071990967
    4. '           ' → logprob: -8.902862548828125
    5. '                   ' → logprob: -13.152862548828125
    6. '       ' → logprob: -13.152862548828125
    7. '              ' → logprob: -13.277862548828125
    8. '   ' → logprob: -13.777862548828125
    9. '             ' → logprob: -14.652862548828125
    10. '                ' → logprob: -14.902862548828125

Token 637: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.024480368942022324
    2. 'pt' → logprob: -4.02448034286499
    3. ' not' → logprob: -5.14948034286499
    4. '(not' → logprob: -8.149480819702148
    5. '   ' → logprob: -9.774480819702148
    6. '(pt' → logprob: -9.899480819702148
    7. ' pt' → logprob: -10.024480819702148
    8. '	not' → logprob: -10.899480819702148
    9. '           ' → logprob: -11.024480819702148
    10. '	pt' → logprob: -11.899480819702148

Token 638: ' pt' (ID: 18961)
  Prédit: 'pt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pt' → logprob: -0.06216329336166382
    2. ' pt' → logprob: -2.8121633529663086
    3. '(pt' → logprob: -8.562163352966309
    4. '	pt' → logprob: -12.687163352966309
    5. ' (' → logprob: -14.437163352966309
    6. '(' → logprob: -14.687163352966309
    7. '.pt' → logprob: -15.937163352966309
    8. '   ' → logprob: -16.062162399291992
    9. '           ' → logprob: -16.312162399291992
    10. '_pt' → logprob: -16.937162399291992

Token 639: '.is' (ID: 3109)
  Prédit: '.is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.is' → logprob: -7.374227425316349e-05
    2. '.' → logprob: -9.750073432922363
    3. '.isnan' → logprob: -11.750073432922363
    4. 'is' → logprob: -13.250073432922363
    5. ' .' → logprob: -13.375073432922363
    6. ').' → logprob: -13.500073432922363
    7. '.has' → logprob: -13.875073432922363
    8. '.pt' → logprob: -14.375073432922363
    9. '.in' → logprob: -14.750073432922363
    10. '   ' → logprob: -16.00007438659668

Token 640: '_m' (ID: 1285)
  Prédit: '_m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -0.02981286123394966
    2. 'mo' → logprob: -3.529812812805176
    3. '_goal' → logprob: -10.904812812805176
    4. 'm' → logprob: -11.404812812805176
    5. '_ma' → logprob: -11.404812812805176
    6. '_' → logprob: -11.904812812805176
    7. '_go' → logprob: -12.654812812805176
    8. '```' → logprob: -12.654812812805176
    9. ' moat' → logprob: -13.904812812805176
    10. '`' → logprob: -14.529812812805176

Token 641: 'o' (ID: 78)
  Prédit: 'o'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.0014576163375750184
    2. 'mo' → logprob: -6.751457691192627
    3. 'oak' → logprob: -9.001457214355469
    4. 'oa' → logprob: -9.626457214355469
    5. 'eat' → logprob: -10.251457214355469
    6. ' moat' → logprob: -11.251457214355469
    7. 'oan' → logprob: -11.751457214355469
    8. 'O' → logprob: -11.751457214355469
    9. 'at' → logprob: -11.876457214355469
    10. 'Mo' → logprob: -12.376457214355469

Token 642: 'at' (ID: 266)
  Prédit: 'at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -5.0020742492051795e-05
    2. 'a' → logprob: -10.000049591064453
    3. 'ат' → logprob: -13.750049591064453
    4. 'ats' → logprob: -14.062549591064453
    5. ' at' → logprob: -14.250049591064453
    6. '	at' → logprob: -15.062549591064453
    7. '```' → logprob: -15.500049591064453
    8. '   ' → logprob: -15.500049591064453
    9. 'att' → logprob: -15.937549591064453
    10. 't' → logprob: -16.312549591064453

Token 643: '()' (ID: 416)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.5474734306335449
    2. 'and' → logprob: -1.297473430633545
    3. '()' → logprob: -1.922473430633545
    4. ')' → logprob: -6.172473430633545
    5. '())' → logprob: -10.797473907470703
    6. '():' → logprob: -12.422473907470703
    7. '():
' → logprob: -12.672473907470703
    8. ' )' → logprob: -12.797473907470703
    9. ' ()' → logprob: -13.172473907470703
    10. '           ' → logprob: -13.922473907470703

Token 644: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.4740787148475647
    2. ' and' → logprob: -0.9740787148475647
    3. ')' → logprob: -14.724079132080078
    4. ' ' → logprob: -14.724079132080078
    5. '   ' → logprob: -15.599079132080078
    6. '           ' → logprob: -15.974079132080078
    7. ':' → logprob: -16.099079132080078
    8. '	and' → logprob: -16.474079132080078
    9. '               ' → logprob: -16.599079132080078
    10. '  ' → logprob: -17.099079132080078

Token 645: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.014191241934895515
    2. ' not' → logprob: -4.264191150665283
    3. 'pt' → logprob: -10.764191627502441
    4. '(not' → logprob: -12.514191627502441
    5. 'and' → logprob: -14.139191627502441
    6. '   ' → logprob: -14.389191627502441
    7. '                   ' → logprob: -14.764191627502441
    8. '
' → logprob: -14.889191627502441
    9. '               ' → logprob: -15.139191627502441
    10. '	not' → logprob: -15.264191627502441

Token 646: ' pt' (ID: 18961)
  Prédit: 'pt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pt' → logprob: -0.00014096579980105162
    2. ' pt' → logprob: -8.875141143798828
    3. '(pt' → logprob: -13.875141143798828
    4. '	pt' → logprob: -15.750141143798828
    5. '   ' → logprob: -18.375141143798828
    6. '           ' → logprob: -19.000141143798828
    7. '.pt' → logprob: -19.250141143798828
    8. '       ' → logprob: -20.250141143798828
    9. 'ct' → logprob: -20.500141143798828
    10. 'pti' → logprob: -21.000141143798828

Token 647: '.is' (ID: 3109)
  Prédit: '.is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.is' → logprob: -0.0004386558721307665
    2. '.' → logprob: -7.750438690185547
    3. '.pt' → logprob: -12.000438690185547
    4. ' .' → logprob: -13.750438690185547
    5. 'is' → logprob: -14.875438690185547
    6. '.point' → logprob: -15.375438690185547
    7. '.isnan' → logprob: -17.250438690185547
    8. '.Is' → logprob: -17.375438690185547
    9. '._' → logprob: -17.875438690185547
    10. '.py' → logprob: -18.375438690185547

Token 648: '_goal' (ID: 101684)
  Prédit: '_goal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_goal' → logprob: -0.018105462193489075
    2. 'pt' → logprob: -4.518105506896973
    3. 'goal' → logprob: -5.018105506896973
    4. '.goal' → logprob: -8.768105506896973
    5. 'Goal' → logprob: -9.143105506896973
    6. 'point' → logprob: -10.018105506896973
    7. '_point' → logprob: -10.393105506896973
    8. '_go' → logprob: -11.268105506896973
    9. ' goal' → logprob: -11.393105506896973
    10. '._' → logprob: -11.768105506896973

Token 649: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.01178029552102089
    2. '()' → logprob: -4.761780261993408
    3. '():
' → logprob: -5.761780261993408
    4. '():
' → logprob: -12.136780738830566
    5. '(' → logprob: -12.636780738830566
    6. ' ():' → logprob: -12.761780738830566
    7. '()):
' → logprob: -13.386780738830566
    8. '():

' → logprob: -14.386780738830566
    9. ':' → logprob: -15.136780738830566
    10. '()`' → logprob: -15.636780738830566

Token 650: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00200203456915915
    2. ' outside' → logprob: -7.127002239227295
    3. '                       ' → logprob: -7.377002239227295
    4. '               ' → logprob: -8.627001762390137
    5. ':
' → logprob: -8.627001762390137
    6. 'outside' → logprob: -9.127001762390137
    7. ',' → logprob: -10.877001762390137
    8. '                  ' → logprob: -11.127001762390137
    9. '           ' → logprob: -11.252001762390137
    10. '                    
' → logprob: -11.502001762390137

Token 651: ' outside' (ID: 7539)
  Prédit: 'outside'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'outside' (adapté à ' outside') → logprob: -0.5855201482772827
    2. ' outside' → logprob: -0.8355201482772827
    3. '                       ' → logprob: -4.835520267486572
    4. '                   ' → logprob: -6.460520267486572
    5. '               ' → logprob: -11.085519790649414
    6. '                           ' → logprob: -12.960519790649414
    7. '   ' → logprob: -12.960519790649414
    8. '           ' → logprob: -13.335519790649414
    9. '                    ' → logprob: -13.835519790649414
    10. '                               ' → logprob: -13.960519790649414

Token 652: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -2.248469718324486e-05
    2. '.' → logprob: -11.000022888183594
    3. '                   ' → logprob: -12.500022888183594
    4. 'append' → logprob: -14.125022888183594
    5. ' .' → logprob: -14.250022888183594
    6. '.extend' → logprob: -15.250022888183594
    7. '               ' → logprob: -16.000022888183594
    8. '                       ' → logprob: -16.250022888183594
    9. '.add' → logprob: -17.000022888183594
    10. '.Append' → logprob: -17.625022888183594

Token 653: '((' (ID: 2054)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.20571458339691162
    2. '((' → logprob: -1.7057145833969116
    3. '(' → logprob: -5.705714702606201
    4. ' (' → logprob: -6.955714702606201
    5. '   ' → logprob: -11.705714225769043
    6. '(pt' → logprob: -13.955714225769043
    7. '(
' → logprob: -14.205714225769043
    8. ' ((' → logprob: -14.830714225769043
    9. '[(' → logprob: -14.955714225769043
    10. '  ' → logprob: -15.080714225769043

Token 654: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -5.676981345459353e-06
    2. ' x' → logprob: -12.125005722045898
    3. '(x' → logprob: -15.625005722045898
    4. ')x' → logprob: -18.5000057220459
    5. '	x' → logprob: -19.5000057220459
    6. '   ' → logprob: -19.5000057220459
    7. '
' → logprob: -20.0000057220459
    8. '"x' → logprob: -20.6250057220459
    9. ',x' → logprob: -20.7500057220459
    10. '```' → logprob: -20.8750057220459

Token 655: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.17978954315185547
    2. ',' → logprob: -1.8047895431518555
    3. ' ,' → logprob: -10.429789543151855
    4. 'y' → logprob: -11.804789543151855
    5. ',
' → logprob: -11.929789543151855
    6. ',user' → logprob: -15.679789543151855
    7. '```' → logprob: -15.929789543151855
    8. ',x' → logprob: -16.054790496826172
    9. ',

' → logprob: -16.179790496826172
    10. ',p' → logprob: -16.804790496826172

Token 656: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.004213974345475435
    2. '))
' → logprob: -5.754213809967041
    3. ')' → logprob: -6.879213809967041
    4. '))

' → logprob: -13.2542142868042
    5. ' ))' → logprob: -13.2542142868042
    6. ')
' → logprob: -13.5042142868042
    7. '));' → logprob: -15.1292142868042
    8. '))
' → logprob: -15.1292142868042
    9. '),' → logprob: -15.1292142868042
    10. ')))' → logprob: -15.2542142868042

Token 657: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00015431294741574675
    2. 'for' → logprob: -9.250154495239258
    3. '   ' → logprob: -10.875154495239258
    4. ' for' → logprob: -11.125154495239258
    5. '
' → logprob: -11.625154495239258
    6. 'return' → logprob: -11.625154495239258
    7. '           ' → logprob: -12.125154495239258
    8. ' return' → logprob: -15.250154495239258
    9. '               ' → logprob: -15.500154495239258
    10. '     ' → logprob: -16.000154495239258

Token 658: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.350253701210022
    2. 'for' (adapté à ' for') → logprob: -1.350253701210022
    3. '   ' → logprob: -3.6002535820007324
    4. ' for' → logprob: -4.725253582000732
    5. '
' → logprob: -10.47525405883789
    6. '    ' → logprob: -10.47525405883789
    7. '     ' → logprob: -10.97525405883789
    8. 'return' → logprob: -10.97525405883789
    9. ' ' → logprob: -11.47525405883789
    10. '           ' → logprob: -11.72525405883789

Token 659: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.010310791432857513
    2. ' y' → logprob: -4.635310649871826
    3. 'x' → logprob: -7.510310649871826
    4. '   ' → logprob: -12.510311126708984
    5. ' x' → logprob: -13.385311126708984
    6. '(y' → logprob: -14.760311126708984
    7. '_y' → logprob: -15.510311126708984
    8. '	y' → logprob: -15.760311126708984
    9. '       ' → logprob: -15.885311126708984
    10. '    ' → logprob: -16.010311126708984

Token 660: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.4740787148475647
    2. ' in' → logprob: -0.9740787148475647
    3. 'range' → logprob: -14.224079132080078
    4. ' ' → logprob: -14.474079132080078
    5. '   ' → logprob: -16.099079132080078
    6. '[' → logprob: -16.349079132080078
    7. ')' → logprob: -16.349079132080078
    8. 'import' → logprob: -16.724079132080078
    9. ',' → logprob: -16.974079132080078
    10. '    ' → logprob: -17.724079132080078

Token 661: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0487382709980011
    2. ' range' → logprob: -3.2987382411956787
    3. '[' → logprob: -4.548738479614258
    4. ' [' → logprob: -10.048738479614258
    5. '(range' → logprob: -11.798738479614258
    6. '	range' → logprob: -12.798738479614258
    7. '   ' → logprob: -13.298738479614258
    8. 'in' → logprob: -14.048738479614258
    9. 'list' → logprob: -14.173738479614258
    10. '(' → logprob: -14.673738479614258

Token 662: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00016039233014453202
    2. '1' → logprob: -8.750160217285156
    3. '(self' → logprob: -13.250160217285156
    4. '(
' → logprob: -16.500160217285156
    5. '       ' → logprob: -17.250160217285156
    6. 'self' → logprob: -17.250160217285156
    7. '   ' → logprob: -17.500160217285156
    8. ' (' → logprob: -18.375160217285156
    9. '           ' → logprob: -20.375160217285156
    10. 'def' → logprob: -21.125160217285156

Token 663: '.height' (ID: 11682)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001600910210981965
    2. '.height' → logprob: -6.751600742340088
    3. 'height' → logprob: -7.876600742340088
    4. 'self' → logprob: -10.376601219177246
    5. '[' → logprob: -11.501601219177246
    6. '   ' → logprob: -12.501601219177246
    7. '.' → logprob: -13.251601219177246
    8. ' ' → logprob: -14.126601219177246
    9. ')' → logprob: -14.501601219177246
    10. '0' → logprob: -14.751601219177246

Token 664: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.35141345858573914
    2. '[' → logprob: -2.3514134883880615
    3. '1' → logprob: -2.4764134883880615
    4. '):' → logprob: -2.4764134883880615
    5. '       ' → logprob: -4.476413249969482
    6. '   ' → logprob: -4.726413249969482
    7. ')' → logprob: -5.726413249969482
    8. ' ' → logprob: -6.101413249969482
    9. '(' → logprob: -6.476413249969482
    10. '2' → logprob: -6.726413249969482

Token 665: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2917155623435974
    2. '           ' → logprob: -1.7917156219482422
    3. ' for' → logprob: -3.166715621948242
    4. 'for' → logprob: -3.791715621948242
    5. ':' → logprob: -4.791715621948242
    6. ',' → logprob: -5.541715621948242
    7. '[' → logprob: -6.166715621948242
    8. ' if' → logprob: -6.291715621948242
    9. ':
' → logprob: -6.416715621948242
    10. '   ' → logprob: -6.541715621948242

Token 666: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.006726144813001156
    2. ' for' → logprob: -5.006726264953613
    3. '           ' → logprob: -11.631726264953613
    4. '   ' → logprob: -14.256726264953613
    5. ' ' → logprob: -14.881726264953613
    6. '               ' → logprob: -15.006726264953613
    7. '	for' → logprob: -15.006726264953613
    8. 'if' → logprob: -16.131725311279297
    9. '
' → logprob: -16.256725311279297
    10. '       ' → logprob: -17.131725311279297

Token 667: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -9.627176768844947e-05
    2. ' x' → logprob: -9.250096321105957
    3. ' in' → logprob: -16.87509536743164
    4. 'in' → logprob: -17.87509536743164
    5. '   ' → logprob: -19.00009536743164
    6. '[x' → logprob: -19.12509536743164
    7. '```' → logprob: -20.00009536743164
    8. '	x' → logprob: -20.25009536743164
    9. '_x' → logprob: -20.62509536743164
    10. 'X' → logprob: -20.62509536743164

Token 668: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.20143379271030426
    2. ' in' → logprob: -1.701433777809143
    3. ' ' → logprob: -12.201434135437012
    4. '   ' → logprob: -12.201434135437012
    5. '           ' → logprob: -12.951434135437012
    6. '[' → logprob: -13.076434135437012
    7. '    ' → logprob: -13.451434135437012
    8. '        ' → logprob: -13.951434135437012
    9. '       ' → logprob: -14.451434135437012
    10. '0' → logprob: -14.951434135437012

Token 669: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0015336665092036128
    2. ' [' → logprob: -6.501533508300781
    3. 'in' → logprob: -10.626533508300781
    4. ' in' → logprob: -12.251533508300781
    5. '0' → logprob: -14.251533508300781
    6. '           ' → logprob: -14.251533508300781
    7. '   ' → logprob: -14.626533508300781
    8. ' ' → logprob: -15.251533508300781
    9. '       ' → logprob: -15.751533508300781
    10. '(' → logprob: -16.75153350830078

Token 670: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.5
    3. '   ' → logprob: -19.75
    4. '۰' → logprob: -21.0
    5. '           ' → logprob: -21.125
    6. '       ' → logprob: -21.875
    7. '```' → logprob: -22.125
    8. '０' → logprob: -22.625
    9. ',' → logprob: -22.875
    10. '[' → logprob: -23.0

Token 671: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011736786691471934
    2. ',self' → logprob: -6.751173496246338
    3. ' ,' → logprob: -13.626173973083496
    4. 'self' → logprob: -14.001173973083496
    5. ',y' → logprob: -14.251173973083496
    6. ',
' → logprob: -14.251173973083496
    7. ',(' → logprob: -16.75117301940918
    8. ',s' → logprob: -18.62617301940918
    9. '(self' → logprob: -18.87617301940918
    10. ',x' → logprob: -18.87617301940918

Token 672: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.023386752232909203
    2. '0' → logprob: -3.7733867168426514
    3. ' self' → logprob: -8.89838695526123
    4. ' ' → logprob: -12.39838695526123
    5. '   ' → logprob: -15.64838695526123
    6. '(self' → logprob: -15.77338695526123
    7. '       ' → logprob: -16.648386001586914
    8. '           ' → logprob: -16.898386001586914
    9. '	self' → logprob: -17.023386001586914
    10. '[self' → logprob: -17.523386001586914

Token 673: '.width' (ID: 11038)
  Prédit: 'width'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'width' → logprob: -0.018938537687063217
    2. '.width' → logprob: -5.2689385414123535
    3. ',width' → logprob: -5.5189385414123535
    4. ',' → logprob: -5.7689385414123535
    5. 'self' → logprob: -5.7689385414123535
    6. '0' → logprob: -6.1439385414123535
    7. ' width' → logprob: -7.5189385414123535
    8. '_width' → logprob: -8.143938064575195
    9. '	width' → logprob: -9.893938064575195
    10. '(width' → logprob: -10.268938064575195

Token 674: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0006282062386162579
    2. ' -' → logprob: -7.3756279945373535
    3. '1' → logprob: -13.375628471374512
    4. ' ' → logprob: -17.125627517700195
    5. '   ' → logprob: -17.125627517700195
    6. '0' → logprob: -17.500627517700195
    7. '()-' → logprob: -17.500627517700195
    8. '-
' → logprob: -18.125627517700195
    9. '```' → logprob: -18.625627517700195
    10. '–' → logprob: -18.750627517700195

Token 675: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.8889261304575484e-06
    2. '-' → logprob: -12.750003814697266
    3. ' ' → logprob: -14.250003814697266
    4. '```' → logprob: -15.500003814697266
    5. '   ' → logprob: -17.125003814697266
    6. '
' → logprob: -17.875003814697266
    7. '１' → logprob: -19.812503814697266
    8. 'x' → logprob: -19.812503814697266
    9. '       ' → logprob: -19.937503814697266
    10. '``' → logprob: -20.000003814697266

Token 676: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.0007538817590102553
    2. ']:' → logprob: -7.250753879547119
    3. ']:
' → logprob: -10.875754356384277
    4. ']:

' → logprob: -11.250754356384277
    5. ']' → logprob: -12.375754356384277
    6. '       ' → logprob: -13.250754356384277
    7. '           ' → logprob: -13.375754356384277
    8. '               ' → logprob: -13.375754356384277
    9. '):
' → logprob: -13.875754356384277
    10. ' ]' → logprob: -14.250754356384277

Token 677: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01362753938883543
    2. ':
' → logprob: -5.013627529144287
    3. ':' → logprob: -5.263627529144287
    4. '           ' → logprob: -6.513627529144287
    5. ',' → logprob: -9.263628005981445
    6. '       ' → logprob: -10.263628005981445
    7. '                   ' → logprob: -10.763628005981445
    8. '):
' → logprob: -11.388628005981445
    9. ' if' → logprob: -11.638628005981445
    10. '              ' → logprob: -11.763628005981445

Token 678: ' pt' (ID: 18961)
  Prédit: ' pt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pt' → logprob: -0.4741549789905548
    2. 'pt' (adapté à ' pt') → logprob: -0.9741549491882324
    3. '               ' → logprob: -10.72415542602539
    4. '	pt' → logprob: -10.72415542602539
    5. '           ' → logprob: -11.22415542602539
    6. '.pt' → logprob: -12.09915542602539
    7. '                   ' → logprob: -12.09915542602539
    8. '(pt' → logprob: -12.22415542602539
    9. '_pt' → logprob: -13.09915542602539
    10. ' point' → logprob: -14.34915542602539

Token 679: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00761136319488287
    2. '=' → logprob: -4.882611274719238
    3. '=self' → logprob: -12.632611274719238
    4. '           ' → logprob: -14.007611274719238
    5. '(self' → logprob: -15.507611274719238
    6. ' =
' → logprob: -16.132612228393555
    7. ' ' → logprob: -16.132612228393555
    8. '(' → logprob: -16.257612228393555
    9. '=
' → logprob: -16.257612228393555
    10. '(x' → logprob: -16.257612228393555

Token 680: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.006725549232214689
    2. ' self' → logprob: -5.006725311279297
    3. '               ' → logprob: -12.131725311279297
    4. '                   ' → logprob: -12.881725311279297
    5. '(self' → logprob: -13.881725311279297
    6. '           ' → logprob: -14.381725311279297
    7. '=self' → logprob: -15.006725311279297
    8. '	self' → logprob: -15.506725311279297
    9. '[self' → logprob: -16.256725311279297
    10. '   ' → logprob: -16.756725311279297

Token 681: '.cast' (ID: 68894)
  Prédit: '.cast'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cast' → logprob: -1.3782830137643032e-05
    2. 'cast' → logprob: -11.37501335144043
    3. 'castle' → logprob: -13.62501335144043
    4. '_cast' → logprob: -14.37501335144043
    5. '.' → logprob: -15.75001335144043
    6. '.Cast' → logprob: -16.62501335144043
    7. '_CAST' → logprob: -16.87501335144043
    8. '```' → logprob: -16.87501335144043
    9. ' .' → logprob: -17.50001335144043
    10. ' cast' → logprob: -17.75001335144043

Token 682: 'le' (ID: 282)
  Prédit: 'le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -6.12258882028982e-05
    2. 'castle' → logprob: -10.00006103515625
    3. 'l' → logprob: -13.25006103515625
    4. 'tle' → logprob: -13.37506103515625
    5. '
' → logprob: -13.62506103515625
    6. 'let' → logprob: -13.75006103515625
    7. 'el' → logprob: -13.87506103515625
    8. ' castle' → logprob: -14.00006103515625
    9. 'Castle' → logprob: -14.25006103515625
    10. 'lear' → logprob: -14.62506103515625

Token 683: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -2.8325677703833207e-05
    2. 'Map' → logprob: -10.875028610229492
    3. 'map' → logprob: -11.750028610229492
    4. '_point' → logprob: -14.625028610229492
    5. 'pt' → logprob: -15.125028610229492
    6. '.map' → logprob: -15.375028610229492
    7. 'point' → logprob: -16.125028610229492
    8. '_cast' → logprob: -16.375028610229492
    9. '_points' → logprob: -16.875028610229492
    10. '_maps' → logprob: -16.875028610229492

Token 684: '.point' (ID: 58020)
  Prédit: '.point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.point' → logprob: -1.8624639324116288e-06
    2. '(point' → logprob: -13.750001907348633
    3. 'point' → logprob: -14.500001907348633
    4. '.' → logprob: -15.625001907348633
    5. ' point' → logprob: -17.375001907348633
    6. ' .' → logprob: -17.750001907348633
    7. '.Point' → logprob: -18.000001907348633
    8. '	point' → logprob: -18.125001907348633
    9. '.p' → logprob: -19.250001907348633
    10. '.grid' → logprob: -19.375001907348633

Token 685: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -9.088346359931165e-07
    2. '(' → logprob: -14.375000953674316
    3. ' (' → logprob: -15.375000953674316
    4. 'x' → logprob: -16.75
    5. '(
' → logprob: -18.0
    6. '```' → logprob: -18.0
    7. '           ' → logprob: -19.75
    8. '               ' → logprob: -20.5
    9. '   ' → logprob: -20.875
    10. ' x' → logprob: -21.375

Token 686: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.003782023908570409
    2. ',' → logprob: -5.628781795501709
    3. ',x' → logprob: -8.753782272338867
    4. ' ,' → logprob: -11.253782272338867
    5. 'y' → logprob: -12.128782272338867
    6. 'x' → logprob: -13.628782272338867
    7. '```' → logprob: -13.878782272338867
    8. ',n' → logprob: -14.878782272338867
    9. '-' → logprob: -14.878782272338867
    10. '   ' → logprob: -15.128782272338867

Token 687: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.023615792393684387
    2. ')' → logprob: -3.773615837097168
    3. '               ' → logprob: -8.273615837097168
    4. ')
' → logprob: -9.273615837097168
    5. '           ' → logprob: -11.023615837097168
    6. ')

' → logprob: -13.648615837097168
    7. '                   ' → logprob: -14.023615837097168
    8. ' )
' → logprob: -14.148615837097168
    9. '       ' → logprob: -14.273615837097168
    10. '              ' → logprob: -15.023615837097168

Token 688: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0003044802288059145
    2. 'if' → logprob: -8.375304222106934
    3. '           ' → logprob: -10.375304222106934
    4. ' if' → logprob: -10.500304222106934
    5. '                   ' → logprob: -12.125304222106934
    6. '              ' → logprob: -12.250304222106934
    7. ',' → logprob: -13.750304222106934
    8. '       ' → logprob: -13.875304222106934
    9. '             ' → logprob: -14.375304222106934
    10. '                ' → logprob: -14.875304222106934

Token 689: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.038920510560274124
    2. '               ' → logprob: -3.7889204025268555
    3. ' if' → logprob: -4.1639204025268555
    4. 'If' → logprob: -13.163920402526855
    5. '                   ' → logprob: -13.663920402526855
    6. ';if' → logprob: -14.038920402526855
    7. '           ' → logprob: -14.413920402526855
    8. '              ' → logprob: -14.913920402526855
    9. '	if' → logprob: -15.413920402526855
    10. '```' → logprob: -15.413920402526855

Token 690: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.386995404958725
    2. 'not' → logprob: -1.1369954347610474
    3. '(not' → logprob: -9.011995315551758
    4. ' (' → logprob: -14.136995315551758
    5. 'pt' → logprob: -14.636995315551758
    6. 'x' → logprob: -14.636995315551758
    7. '(x' → logprob: -15.136995315551758
    8. ' x' → logprob: -15.886995315551758
    9. '(pt' → logprob: -15.886995315551758
    10. '	not' → logprob: -16.011995315551758

Token 691: ' pt' (ID: 18961)
  Prédit: 'pt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pt' → logprob: -0.0004900033236481249
    2. ' pt' → logprob: -7.625490188598633
    3. '(pt' → logprob: -13.250490188598633
    4. '	pt' → logprob: -15.875490188598633
    5. '.pt' → logprob: -17.250490188598633
    6. '   ' → logprob: -18.125490188598633
    7. 'Pt' → logprob: -19.000490188598633
    8. 'mo' → logprob: -19.125490188598633
    9. '_pt' → logprob: -19.250490188598633
    10. 'p' → logprob: -19.500490188598633

Token 692: '.is' (ID: 3109)
  Prédit: '.is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.is' → logprob: -3.857719275401905e-05
    2. 'is' → logprob: -10.625038146972656
    3. '.' → logprob: -11.250038146972656
    4. ' .' → logprob: -13.750038146972656
    5. '.isnan' → logprob: -17.125038146972656
    6. '```' → logprob: -17.750038146972656
    7. '   ' → logprob: -17.875038146972656
    8. ').' → logprob: -18.000038146972656
    9. '(is' → logprob: -18.125038146972656
    10. ' is' → logprob: -18.125038146972656

Token 693: '_m' (ID: 1285)
  Prédit: '_m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -0.2526513934135437
    2. 'mo' → logprob: -1.5026514530181885
    3. 'm' → logprob: -7.877651214599609
    4. 'pt' → logprob: -9.50265121459961
    5. '_ma' → logprob: -9.75265121459961
    6. 'outside' → logprob: -10.62765121459961
    7. '_' → logprob: -10.75265121459961
    8. 'out' → logprob: -11.12765121459961
    9. '_out' → logprob: -11.81515121459961
    10. '#' → logprob: -11.87765121459961

Token 694: 'o' (ID: 78)
  Prédit: 'o'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.0005356363253667951
    2. 'at' → logprob: -7.875535488128662
    3. 'oa' → logprob: -9.75053596496582
    4. 'oit' → logprob: -10.75053596496582
    5. 'a' → logprob: -11.12553596496582
    6. 'ot' → logprob: -11.25053596496582
    7. 'oak' → logprob: -11.37553596496582
    8. 'mo' → logprob: -11.50053596496582
    9. 'eat' → logprob: -11.50053596496582
    10. 'oan' → logprob: -12.50053596496582

Token 695: 'at' (ID: 266)
  Prédit: 'at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -1.8789383830153383e-05
    2. 'a' → logprob: -11.250019073486328
    3. 'ats' → logprob: -13.875019073486328
    4. 'ат' → logprob: -14.000019073486328
    5. ' at' → logprob: -14.312519073486328
    6. '	at' → logprob: -14.687519073486328
    7. 't' → logprob: -14.750019073486328
    8. 'mo' → logprob: -15.187519073486328
    9. '#' → logprob: -15.500019073486328
    10. '_at' → logprob: -15.625019073486328

Token 696: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00017183588352054358
    2. 'and' → logprob: -8.750171661376953
    3. ' and' → logprob: -12.000171661376953
    4. '()
' → logprob: -12.500171661376953
    5. ')' → logprob: -12.875171661376953
    6. '())' → logprob: -14.875171661376953
    7. ' ()' → logprob: -15.500171661376953
    8. '   ' → logprob: -16.250171661376953
    9. '(' → logprob: -16.500171661376953
    10. '()

' → logprob: -16.750171661376953

Token 697: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.5759409666061401
    2. 'and' → logprob: -0.8259409666061401
    3. ' ' → logprob: -14.57594108581543
    4. '               ' → logprob: -15.70094108581543
    5. '           ' → logprob: -15.95094108581543
    6. ')' → logprob: -16.07594108581543
    7. '
' → logprob: -16.20094108581543
    8. '```' → logprob: -16.20094108581543
    9. ',' → logprob: -17.07594108581543
    10. '   ' → logprob: -17.20094108581543

Token 698: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.6931476593017578
    2. 'not' → logprob: -0.6931476593017578
    3. '(not' → logprob: -15.193147659301758
    4. '               ' → logprob: -16.568147659301758
    5. '	not' → logprob: -17.818147659301758
    6. '
' → logprob: -18.193147659301758
    7. 'and' → logprob: -18.443147659301758
    8. '           ' → logprob: -18.568147659301758
    9. '   ' → logprob: -18.693147659301758
    10. 'x' → logprob: -18.693147659301758

Token 699: ' pt' (ID: 18961)
  Prédit: 'pt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pt' → logprob: -0.014176442287862301
    2. ' pt' → logprob: -4.264176368713379
    3. '(pt' → logprob: -11.389176368713379
    4. '	pt' → logprob: -14.264176368713379
    5. '.pt' → logprob: -15.139176368713379
    6. '           ' → logprob: -16.139177322387695
    7. '   ' → logprob: -16.639177322387695
    8. '_pt' → logprob: -16.889177322387695
    9. 'pti' → logprob: -17.139177322387695
    10. 'prt' → logprob: -17.264177322387695

Token 700: '.is' (ID: 3109)
  Prédit: '.is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.is' → logprob: -0.00014561474381480366
    2. 'is' → logprob: -9.12514591217041
    3. '.pt' → logprob: -10.75014591217041
    4. 'pt' → logprob: -11.12514591217041
    5. ' .' → logprob: -15.25014591217041
    6. '.' → logprob: -15.75014591217041
    7. ' pt' → logprob: -17.250144958496094
    8. ' is' → logprob: -17.500144958496094
    9. '(pt' → logprob: -18.250144958496094
    10. '(is' → logprob: -18.625144958496094

Token 701: '_goal' (ID: 101684)
  Prédit: '_goal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_goal' → logprob: -0.002751619089394808
    2. 'pt' → logprob: -6.37775182723999
    3. 'goal' → logprob: -6.87775182723999
    4. '_go' → logprob: -11.877751350402832
    5. 'Goal' → logprob: -12.502751350402832
    6. '_pt' → logprob: -13.377751350402832
    7. 'outside' → logprob: -13.752751350402832
    8. '(pt' → logprob: -13.752751350402832
    9. ' pt' → logprob: -13.877751350402832
    10. '_out' → logprob: -14.127751350402832

Token 702: '():
' (ID: 8595)
  Prédit: '():
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():
' → logprob: -0.27283361554145813
    2. '():' → logprob: -1.5228335857391357
    3. '()' → logprob: -3.8978335857391357
    4. '()):
' → logprob: -8.397833824157715
    5. '):
' → logprob: -9.772833824157715
    6. '):' → logprob: -10.147833824157715
    7. '():
' → logprob: -10.522833824157715
    8. ':' → logprob: -10.772833824157715
    9. '():

' → logprob: -11.022833824157715
    10. ':
' → logprob: -12.022833824157715

Token 703: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0016144849359989166
    2. '                       ' → logprob: -6.876614570617676
    3. ' and' → logprob: -8.126614570617676
    4. '               ' → logprob: -9.001614570617676
    5. ':
' → logprob: -9.626614570617676
    6. '                  ' → logprob: -10.251614570617676
    7. '                    ' → logprob: -11.001614570617676
    8. 'and' → logprob: -11.376614570617676
    9. '                           ' → logprob: -12.126614570617676
    10. '                 ' → logprob: -12.251614570617676

Token 704: ' outside' (ID: 7539)
  Prédit: 'outside'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'outside' (adapté à ' outside') → logprob: -0.04130018502473831
    2. ' outside' → logprob: -3.2913002967834473
    3. '                   ' → logprob: -5.916300296783447
    4. '                       ' → logprob: -7.541300296783447
    5. '               ' → logprob: -11.916299819946289
    6. '                    ' → logprob: -12.291299819946289
    7. 'out' → logprob: -12.666299819946289
    8. '   ' → logprob: -12.666299819946289
    9. '                     ' → logprob: -13.041299819946289
    10. '[out' → logprob: -13.666299819946289

Token 705: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00014096579980105162
    2. '.' → logprob: -8.875141143798828
    3. '.add' → logprob: -15.000141143798828
    4. '.app' → logprob: -15.375141143798828
    5. ' .' → logprob: -15.750141143798828
    6. 'append' → logprob: -15.875141143798828
    7. '.setdefault' → logprob: -16.250141143798828
    8. '.Append' → logprob: -16.625141143798828
    9. ').' → logprob: -17.000141143798828
    10. '.ap' → logprob: -17.250141143798828

Token 706: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -1.3856492842023727e-06
    2. '(x' → logprob: -14.125000953674316
    3. '(' → logprob: -14.500000953674316
    4. '(
' → logprob: -15.625000953674316
    5. ' ((' → logprob: -17.375001907348633
    6. '   ' → logprob: -19.500001907348633
    7. '>((' → logprob: -19.875001907348633
    8. ' (' → logprob: -20.000001907348633
    9. '[(' → logprob: -20.375001907348633
    10. ')((' → logprob: -20.500001907348633

Token 707: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.04860009253025055
    2. '(x' → logprob: -3.048600196838379
    3. ' x' → logprob: -11.673600196838379
    4. ')x' → logprob: -13.673600196838379
    5. ' (' → logprob: -13.798600196838379
    6. '(' → logprob: -14.548600196838379
    7. '(
' → logprob: -15.048600196838379
    8. '{x' → logprob: -15.423600196838379
    9. '	x' → logprob: -15.798600196838379
    10. '   ' → logprob: -15.798600196838379

Token 708: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.17603950202465057
    2. ',x' → logprob: -2.176039457321167
    3. ',' → logprob: -3.426039457321167
    4. 'x' → logprob: -4.176039695739746
    5. ' ,' → logprob: -11.051039695739746
    6. 'y' → logprob: -11.051039695739746
    7. ',
' → logprob: -11.926039695739746
    8. '0' → logprob: -12.176039695739746
    9. ',n' → logprob: -13.176039695739746
    10. ' x' → logprob: -14.051039695739746

Token 709: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.228561349213123e-05
    2. ')
' → logprob: -9.875052452087402
    3. ' )' → logprob: -15.500052452087402
    4. '       ' → logprob: -15.750052452087402
    5. ')return' → logprob: -15.875052452087402
    6. '))' → logprob: -17.125051498413086
    7. '               ' → logprob: -17.125051498413086
    8. ')

' → logprob: -17.250051498413086
    9. ')#' → logprob: -17.500051498413086
    10. '           ' → logprob: -17.750051498413086

Token 710: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002650093985721469
    2. '
' → logprob: -6.752650260925293
    3. 'return' → logprob: -7.252650260925293
    4. '	' → logprob: -7.377650260925293
    5. ' return' → logprob: -9.752650260925293
    6. '	return' → logprob: -10.377650260925293
    7. '   ' → logprob: -10.627650260925293
    8. '        
' → logprob: -11.627650260925293
    9. '    
' → logprob: -12.377650260925293
    10. '           ' → logprob: -12.877650260925293

Token 711: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.4784941077232361
    2. '       ' → logprob: -0.9784941077232361
    3. ' return' → logprob: -5.478494167327881
    4. '
' → logprob: -8.603493690490723
    5. '   ' → logprob: -10.353493690490723
    6. '	return' → logprob: -12.228493690490723
    7. '        
' → logprob: -12.603493690490723
    8. '           ' → logprob: -13.353493690490723
    9. '               ' → logprob: -13.978493690490723
    10. 'eturn' → logprob: -14.228493690490723

Token 712: ' Remove' (ID: 18141)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0027166646905243397
    2. '#' → logprob: -6.127716541290283
    3. 'seen' → logprob: -8.252717018127441
    4. ' return' → logprob: -9.002717018127441
    5. '       ' → logprob: -9.752717018127441
    6. 'outside' → logprob: -10.002717018127441
    7. 'visited' → logprob: -10.502717018127441
    8. 'unique' → logprob: -11.627717018127441
    9. '   ' → logprob: -13.002717018127441
    10. ' #' → logprob: -13.502717018127441

Token 713: ' duplicates' (ID: 91135)
  Prédit: 'duplicates'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'duplicates' → logprob: -0.1613364964723587
    2. ' duplicates' → logprob: -1.9113365411758423
    3. '_duplicates' → logprob: -7.036336421966553
    4. 'duplicate' → logprob: -8.786336898803711
    5. 'list' → logprob: -10.536336898803711
    6. 'duplic' → logprob: -11.036336898803711
    7. 'd' → logprob: -11.786336898803711
    8. 'outside' → logprob: -11.911336898803711
    9. 'du' → logprob: -12.036336898803711
    10. 'dup' → logprob: -12.161336898803711

Token 714: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006975423893891275
    2. '
' → logprob: -7.875697612762451
    3. 'return' → logprob: -9.625697135925293
    4. '(' → logprob: -9.875697135925293
    5. 'outside' → logprob: -10.000697135925293
    6. ',' → logprob: -10.625697135925293
    7. ' outside' → logprob: -10.625697135925293
    8. '   ' → logprob: -11.000697135925293
    9. '        
' → logprob: -11.000697135925293
    10. 'from' → logprob: -11.250697135925293

Token 715: ' corners' (ID: 39479)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.8175130486488342
    2. '(' → logprob: -1.0675129890441895
    3. 'any' → logprob: -2.4425129890441895
    4. ' (' → logprob: -3.3175129890441895
    5. ' any' → logprob: -3.5675129890441895
    6. '(len' → logprob: -3.6925129890441895
    7. ' len' → logprob: -4.4425129890441895
    8. ')' → logprob: -4.9425129890441895
    9. 'outside' → logprob: -4.9425129890441895
    10. 'set' → logprob: -6.1925129890441895

Token 716: ' were' (ID: 1504)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029257087036967278
    2. '       ' → logprob: -3.65425705909729
    3. '=' → logprob: -6.029257297515869
    4. '   ' → logprob: -8.904256820678711
    5. '
' → logprob: -9.029256820678711
    6. '=set' → logprob: -9.404256820678711
    7. '        ' → logprob: -10.404256820678711
    8. '        
' → logprob: -10.654256820678711
    9. '_set' → logprob: -10.779256820678711
    10. '           ' → logprob: -10.779256820678711

Token 717: ' added' (ID: 5768)
  Prédit: 'added'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'added' → logprob: -0.04714452475309372
    2. ' added' → logprob: -3.1721444129943848
    3. 'included' → logprob: -6.422144412994385
    4. ' appended' → logprob: -6.547144412994385
    5. 'app' → logprob: -7.172144412994385
    6. ' included' → logprob: -8.547144889831543
    7. 'duplic' → logprob: -10.547144889831543
    8. '   ' → logprob: -11.047144889831543
    9. 'append' → logprob: -11.547144889831543
    10. '```' → logprob: -11.547144889831543

Token 718: ' twice' (ID: 18370)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0064017619006335735
    2. ' by' → logprob: -6.131401538848877
    3. '        
' → logprob: -6.256401538848877
    4. ':' → logprob: -7.881401538848877
    5. '   ' → logprob: -7.881401538848877
    6. ',' → logprob: -8.506402015686035
    7. '[' → logprob: -8.631402015686035
    8. '           ' → logprob: -8.881402015686035
    9. ' =' → logprob: -9.006402015686035
    10. '(' → logprob: -9.006402015686035

Token 719: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009961293544620275
    2. '
' → logprob: -7.750996112823486
    3. 'return' → logprob: -7.875996112823486
    4. '        
' → logprob: -9.125996589660645
    5. '   ' → logprob: -11.000996589660645
    6. ',' → logprob: -11.250996589660645
    7. 'outside' → logprob: -11.375996589660645
    8. ' outside' → logprob: -11.500996589660645
    9. ' return' → logprob: -11.625996589660645
    10. '           ' → logprob: -13.625996589660645

Token 720: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004130344314035028
    2. '
' → logprob: -8.625412940979004
    3. '        
' → logprob: -8.875412940979004
    4. 'return' → logprob: -10.000412940979004
    5. '<|end|>' → logprob: -11.250412940979004
    6. '   ' → logprob: -11.375412940979004
    7. ',' → logprob: -11.750412940979004
    8. ' return' → logprob: -12.250412940979004
    9. ')' → logprob: -13.375412940979004
    10. '  
' → logprob: -13.500412940979004

Token 721: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07944729924201965
    2. 'return' (adapté à ' return') → logprob: -3.2044472694396973
    3. ' return' → logprob: -3.8294472694396973
    4. ' outside' → logprob: -4.829447269439697
    5. 'outside' → logprob: -5.204447269439697
    6. '
' → logprob: -8.204447746276855
    7. '   ' → logprob: -8.829447746276855
    8. 'seen' → logprob: -9.954447746276855
    9. '        
' → logprob: -10.579447746276855
    10. '```' → logprob: -10.704447746276855

Token 722: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.00011129142512800172
    2. ' list' → logprob: -9.12511157989502
    3. 'sorted' → logprob: -13.62511157989502
    4. '[list' → logprob: -13.87511157989502
    5. '   ' → logprob: -16.625110626220703
    6. '[' → logprob: -16.875110626220703
    7. '(list' → logprob: -17.500110626220703
    8. '	list' → logprob: -18.000110626220703
    9. '[]' → logprob: -18.125110626220703
    10. 'List' → logprob: -19.250110626220703

Token 723: '(set' (ID: 25904)
  Prédit: '(set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(set' → logprob: -0.001332263695076108
    2. '(dict' → logprob: -6.7513322830200195
    3. '(' → logprob: -9.37633228302002
    4. 'set' → logprob: -9.62633228302002
    5. 'dict' → logprob: -11.50133228302002
    6. '(sorted' → logprob: -14.50133228302002
    7. '({' → logprob: -15.00133228302002
    8. '=set' → logprob: -15.62633228302002
    9. '(
' → logprob: -16.876331329345703
    10. '```' → logprob: -17.376331329345703

Token 724: '(out' (ID: 20090)
  Prédit: '(out'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(out' → logprob: -1.5570885807392187e-05
    2. 'outside' → logprob: -11.875015258789062
    3. '(' → logprob: -12.125015258789062
    4. '(
' → logprob: -14.000015258789062
    5. ')' → logprob: -14.500015258789062
    6. ' (' → logprob: -14.625015258789062
    7. '[out' → logprob: -14.750015258789062
    8. ')(' → logprob: -14.875015258789062
    9. '(o' → logprob: -15.500015258789062
    10. ' outside' → logprob: -16.250015258789062

Token 725: 'side' (ID: 4341)
  Prédit: 'side'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'side' → logprob: -2.3438327843905427e-05
    2. 's' → logprob: -11.12502384185791
    3. '(side' → logprob: -12.00002384185791
    4. 'outside' → logprob: -14.25002384185791
    5. '(s' → logprob: -14.75002384185791
    6. 'is' → logprob: -14.87502384185791
    7. '(out' → logprob: -15.12502384185791
    8. 'size' → logprob: -15.37502384185791
    9. 'sid' → logprob: -15.62502384185791
    10. 'ide' → logprob: -15.75002384185791

Token 726: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.3132803440093994
    2. ')' → logprob: -1.3132803440093994
    3. '       ' → logprob: -11.56328010559082
    4. ')))' → logprob: -12.68828010559082
    5. ' )' → logprob: -13.68828010559082
    6. '   ' → logprob: -13.68828010559082
    7. ' ))' → logprob: -13.68828010559082
    8. ')}' → logprob: -14.31328010559082
    9. '))
' → logprob: -14.31328010559082
    10. '())' → logprob: -14.93828010559082

Token 727: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0038126648869365454
    2. '    
' → logprob: -6.628812789916992
    3. 'def' → logprob: -6.753812789916992
    4. '<|end|>' → logprob: -7.753812789916992
    5. '```' → logprob: -7.878812789916992
    6. '<|end|>' → logprob: -8.878812789916992
    7. '
' → logprob: -8.878812789916992
    8. ' def' → logprob: -10.503812789916992
    9. '  
' → logprob: -10.628812789916992
    10. '        
' → logprob: -10.878812789916992

Token 728: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.030023885890841484
    2. ' def' → logprob: -4.15502405166626
    3. '   ' → logprob: -4.28002405166626
    4. '
' → logprob: -10.155023574829102
    5. '```' → logprob: -12.155023574829102
    6. '	def' → logprob: -12.655023574829102
    7. ' ' → logprob: -13.655023574829102
    8. '  ' → logprob: -15.280023574829102
    9. ')' → logprob: -15.655023574829102
    10. '    
' → logprob: -15.655023574829102

Token 729: ' minimum' (ID: 11085)
  Prédit: ' find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' find' → logprob: -0.22556257247924805
    2. ' minimal' → logprob: -2.600562572479248
    3. ' shortest' → logprob: -2.975562572479248
    4. 'find' → logprob: -3.100562572479248
    5. ' bfs' → logprob: -4.100562572479248
    6. ' minimum' → logprob: -5.475562572479248
    7. 'minimal' → logprob: -6.475562572479248
    8. ' crawl' → logprob: -6.600562572479248
    9. ' min' → logprob: -6.600562572479248
    10. ' can' → logprob: -6.725562572479248

Token 730: '_cl' (ID: 11209)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.16641941666603088
    2. '_c' → logprob: -1.9164193868637085
    3. '_times' → logprob: -5.166419506072998
    4. '_escape' → logprob: -8.16641902923584
    5. '_tr' → logprob: -9.66641902923584
    6. '_cost' → logprob: -10.54141902923584
    7. '_' → logprob: -10.66641902923584
    8. '_distance' → logprob: -10.79141902923584
    9. 'time' → logprob: -11.79141902923584
    10. '_moves' → logprob: -12.04141902923584

Token 731: 'im' (ID: 321)
  Prédit: 'rawl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rawl' → logprob: -0.5257986187934875
    2. 'raw' → logprob: -0.9007986187934875
    3. 'aw' → logprob: -6.775798797607422
    4. 'e' → logprob: -8.525798797607422
    5. 'awl' → logprob: -8.650798797607422
    6. '
' → logprob: -8.900798797607422
    7. 'imb' → logprob: -9.025798797607422
    8. 'rew' → logprob: -9.400798797607422
    9. '_' → logprob: -9.400798797607422
    10. '   ' → logprob: -9.525798797607422

Token 732: 'bs' (ID: 6229)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0001387009397149086
    2. 'bing' → logprob: -9.000138282775879
    3. 'bs' → logprob: -11.250138282775879
    4. 'bed' → logprob: -14.750138282775879
    5. 'ber' → logprob: -14.750138282775879
    6. 'p' → logprob: -15.875138282775879
    7. 'bf' → logprob: -16.125139236450195
    8. ' b' → logprob: -16.125139236450195
    9. 'e' → logprob: -16.250139236450195
    10. '[' → logprob: -16.250139236450195

Token 733: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0004044554370921105
    2. '(' → logprob: -7.875404357910156
    3. '   ' → logprob: -11.625404357910156
    4. '_to' → logprob: -12.125404357910156
    5. 'self' → logprob: -12.125404357910156
    6. ' (' → logprob: -13.000404357910156
    7. '(
' → logprob: -13.500404357910156
    8. '       ' → logprob: -15.000404357910156
    9. '_from' → logprob: -16.000404357910156
    10. 'to' → logprob: -16.500404357910156

Token 734: ')' (ID: 8)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.2586115598678589
    2. 'self' → logprob: -2.0086116790771484
    3. ')' → logprob: -2.5086116790771484
    4. '   ' → logprob: -4.883611679077148
    5. '):' → logprob: -6.383611679077148
    6. ',' → logprob: -6.633611679077148
    7. '       ' → logprob: -7.508611679077148
    8. ')->' → logprob: -7.758611679077148
    9. '):
' → logprob: -8.133611679077148
    10. 'def' → logprob: -9.133611679077148

Token 735: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0015398615505546331
    2. '(' → logprob: -6.876539707183838
    3. 'self' → logprob: -8.251540184020996
    4. '   ' → logprob: -9.376540184020996
    5. ' ->' → logprob: -10.001540184020996
    6. '(
' → logprob: -10.251540184020996
    7. '->' → logprob: -10.751540184020996
    8. 'def' → logprob: -10.876540184020996
    9. '       ' → logprob: -11.251540184020996
    10. ' (' → logprob: -11.626540184020996

Token 736: ' int' (ID: 677)
  Prédit: 'Optional'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Optional' → logprob: -0.38765832781791687
    2. 'int' → logprob: -1.1376583576202393
    3. ' Optional' → logprob: -7.38765811920166
    4. ' int' → logprob: -8.88765811920166
    5. '(Optional' → logprob: -11.01265811920166
    6. 'List' → logprob: -12.51265811920166
    7. '(int' → logprob: -13.01265811920166
    8. 'optional' → logprob: -13.01265811920166
    9. '[int' → logprob: -13.13765811920166
    10. 'Set' → logprob: -13.63765811920166

Token 737: ':
' (ID: 734)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.037074390798807144
    2. '       ' → logprob: -3.912074327468872
    3. ':' → logprob: -5.162074565887451
    4. '   ' → logprob: -5.287074565887451
    5. '(' → logprob: -6.037074565887451
    6. '(
' → logprob: -6.287074565887451
    7. ':
' → logprob: -7.037074565887451
    8. 'self' → logprob: -7.787074565887451
    9. '{' → logprob: -11.412074089050293
    10. ' self' → logprob: -11.662074089050293

Token 738: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -4.310693111619912e-05
    2. ':' → logprob: -10.875042915344238
    3. '():' → logprob: -11.750042915344238
    4. '```' → logprob: -12.250042915344238
    5. '        
' → logprob: -12.750042915344238
    6. '   ' → logprob: -13.250042915344238
    7. '      ' → logprob: -13.875042915344238
    8. '()' → logprob: -14.000042915344238
    9. '(' → logprob: -14.125042915344238
    10. '#' → logprob: -14.125042915344238

Token 739: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.806612491607666
    2. 'dist' → logprob: -0.806612491607666
    3. 'visited' → logprob: -3.056612491607666
    4. 'from' → logprob: -3.556612491607666
    5. 'import' → logprob: -4.056612491607666
    6. 'queue' → logprob: -4.306612491607666
    7. ' dist' → logprob: -8.181612014770508
    8. '#' → logprob: -8.181612014770508
    9. ' visited' → logprob: -9.681612014770508
    10. 'distance' → logprob: -9.681612014770508

Token 740: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04950108006596565
    2. 'visited' → logprob: -4.549500942230225
    3. 'queue' → logprob: -4.674500942230225
    4. 'if' → logprob: -4.674500942230225
    5. 'dist' → logprob: -4.799500942230225
    6. 'from' → logprob: -4.924500942230225
    7. 'inf' → logprob: -6.174500942230225
    8. 'INF' → logprob: -8.049501419067383
    9. 'import' → logprob: -8.549501419067383
    10. 'deque' → logprob: -8.549501419067383

Token 741: ' Compute' (ID: 45438)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7239096760749817
    2. 'visited' → logprob: -1.223909616470337
    3. 'from' → logprob: -2.473909616470337
    4. '#' → logprob: -3.348909616470337
    5. 'Visited' → logprob: -3.848909616470337
    6. ' visited' → logprob: -3.973909616470337
    7. 'dist' → logprob: -4.848909854888916
    8. 'queue' → logprob: -4.973909854888916
    9. ' from' → logprob: -4.973909854888916
    10. ' queue' → logprob: -5.223909854888916

Token 742: ' minimum' (ID: 11085)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.41641706228256226
    2. 'self' → logprob: -2.041417121887207
    3. ' the' → logprob: -2.416417121887207
    4. ' self' → logprob: -3.291417121887207
    5. ' minimum' → logprob: -3.791417121887207
    6. 'the' → logprob: -4.166417121887207
    7. ' minimal' → logprob: -4.416417121887207
    8. 'import' → logprob: -5.166417121887207
    9. 'from' → logprob: -5.166417121887207
    10. 'minimum' → logprob: -5.416417121887207

Token 743: ' number' (ID: 2086)
  Prédit: ' number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' number' → logprob: -1.1039015054702759
    2. '_cl' → logprob: -1.7289015054702759
    3. 'cl' → logprob: -2.1039013862609863
    4. '   ' → logprob: -2.3539013862609863
    5. ' climbs' → logprob: -2.3539013862609863
    6. ' times' → logprob: -3.1039013862609863
    7. ' time' → logprob: -3.3539013862609863
    8. '       ' → logprob: -3.7289013862609863
    9. 'number' → logprob: -3.8539013862609863
    10. 'time' → logprob: -3.9789013862609863

Token 744: ' of' (ID: 328)
  Prédit: '_tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tokens' → logprob: -1.2233266830444336
    2. ' of' → logprob: -1.4733266830444336
    3. '       ' → logprob: -2.2233266830444336
    4. '_' → logprob: -2.3483266830444336
    5. 'of' → logprob: -2.3483266830444336
    6. ')' → logprob: -2.8483266830444336
    7. '_of' → logprob: -3.4733266830444336
    8. '_token' → logprob: -3.4733266830444336
    9. '   ' → logprob: -4.098326683044434
    10. ' ' → logprob: -5.223326683044434

Token 745: ' times' (ID: 4238)
  Prédit: 'mo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mo' → logprob: -0.25823137164115906
    2. ' moat' → logprob: -2.2582314014434814
    3. ' mo' → logprob: -3.2582314014434814
    4. '#' → logprob: -3.6332314014434814
    5. 'cl' → logprob: -4.383231163024902
    6. ' climbs' → logprob: -4.883231163024902
    7. ' '#'' → logprob: -4.883231163024902
    8. ' times' → logprob: -5.008231163024902
    9. 'times' → logprob: -5.008231163024902
    10. 'c' → logprob: -5.883231163024902

Token 746: ' ninja' (ID: 112647)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.05382787436246872
    2. 'the' → logprob: -3.3038277626037598
    3. ' a' → logprob: -4.30382776260376
    4. 'a' → logprob: -6.55382776260376
    5. '   ' → logprob: -8.928828239440918
    6. ' ninja' → logprob: -9.053828239440918
    7. ' to' → logprob: -9.178828239440918
    8. ' that' → logprob: -9.303828239440918
    9. 'mo' → logprob: -9.678828239440918
    10. '       ' → logprob: -9.928828239440918

Token 747: ' must' (ID: 2804)
  Prédit: ' must'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' must' → logprob: -0.01998676359653473
    2. 'must' → logprob: -4.894986629486084
    3. ' has' → logprob: -5.019986629486084
    4. ' needs' → logprob: -5.269986629486084
    5. '   ' → logprob: -8.269987106323242
    6. ' _' → logprob: -10.144987106323242
    7. ' will' → logprob: -10.144987106323242
    8. '       ' → logprob: -10.144987106323242
    9. 'has' → logprob: -10.269987106323242
    10. 'needs' → logprob: -10.519987106323242

Token 748: ' climb' (ID: 27049)
  Prédit: 'crawl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'crawl' → logprob: -0.01214816514402628
    2. 'enter' → logprob: -4.637148380279541
    3. ' crawl' → logprob: -6.512148380279541
    4. 'cross' → logprob: -8.137147903442383
    5. 'cl' → logprob: -8.387147903442383
    6. 'step' → logprob: -9.137147903442383
    7. 'move' → logprob: -9.762147903442383
    8. 'c' → logprob: -10.012147903442383
    9. 'start' → logprob: -11.012147903442383
    10. 'leave' → logprob: -11.137147903442383

Token 749: ' out' (ID: 842)
  Prédit: 'into'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'into' → logprob: -1.1045705080032349
    2. ' into' → logprob: -1.2295705080032349
    3. 'out' → logprob: -1.8545705080032349
    4. ' out' → logprob: -2.1045703887939453
    5. ' over' → logprob: -3.7295703887939453
    6. 'over' → logprob: -3.8545703887939453
    7. ' onto' → logprob: -3.9795703887939453
    8. 'onto' → logprob: -4.104570388793945
    9. '#' → logprob: -4.729570388793945
    10. 'through' → logprob: -6.229570388793945

Token 750: ' of' (ID: 328)
  Prédit: 'of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'of' → logprob: -0.2542096674442291
    2. ' of' → logprob: -1.7542096376419067
    3. '       ' → logprob: -3.0042097568511963
    4. 'from' → logprob: -6.629209518432617
    5. '   ' → logprob: -8.754209518432617
    6. '```' → logprob: -8.879209518432617
    7. '_of' → logprob: -10.254209518432617
    8. '(' → logprob: -10.629209518432617
    9. ' from' → logprob: -11.129209518432617
    10. '#' → logprob: -11.254209518432617

Token 751: ' moat' (ID: 152750)
  Prédit: 'mo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mo' → logprob: -0.3083440661430359
    2. 'a' → logprob: -1.8083441257476807
    3. 'the' → logprob: -2.4333441257476807
    4. '#' → logprob: -4.558343887329102
    5. '#a' → logprob: -7.308343887329102
    6. 'ma' → logprob: -7.558343887329102
    7. 'moor' → logprob: -7.933343887329102
    8. 'm' → logprob: -8.308343887329102
    9. '```' → logprob: -8.308343887329102
    10. ''#' → logprob: -8.933343887329102

Token 752: ' (#' (ID: 66375)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4219460189342499
    2. ' (' → logprob: -1.2969460487365723
    3. ' when' → logprob: -3.6719460487365723
    4. ' to' → logprob: -3.7969460487365723
    5. '(' → logprob: -4.171946048736572
    6. ' before' → logprob: -6.421946048736572
    7. '   ' → logprob: -6.796946048736572
    8. '(s' → logprob: -7.671946048736572
    9. '(
' → logprob: -7.671946048736572
    10. '()' → logprob: -7.796946048736572

Token 753: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0018642607610672712
    2. ' )' → logprob: -7.376864433288574
    3. ' to' → logprob: -7.626864433288574
    4. ')
' → logprob: -8.876864433288574
    5. ' when' → logprob: -9.126864433288574
    6. '')' → logprob: -9.251864433288574
    7. '")' → logprob: -9.751864433288574
    8. '),' → logprob: -9.751864433288574
    9. ').' → logprob: -9.751864433288574
    10. ' and' → logprob: -10.001864433288574

Token 754: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0014920076355338097
    2. '        
' → logprob: -7.251492023468018
    3. '```' → logprob: -7.376492023468018
    4. '        ' → logprob: -10.00149154663086
    5. '
' → logprob: -10.50149154663086
    6. ')' → logprob: -11.25149154663086
    7. ' 
' → logprob: -11.25149154663086
    8. '#' → logprob: -11.25149154663086
    9. '"""' → logprob: -12.00149154663086
    10. '<|end|>' → logprob: -12.50149154663086

Token 755: ' Ninja' (ID: 77983)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010019666515290737
    2. '        
' → logprob: -7.251001834869385
    3. '
' → logprob: -8.876002311706543
    4. '        ' → logprob: -9.876002311706543
    5. '```' → logprob: -9.876002311706543
    6. ')' → logprob: -11.751002311706543
    7. '"""' → logprob: -11.751002311706543
    8. '  
' → logprob: -12.251002311706543
    9. '#' → logprob: -12.376002311706543
    10. ' 
' → logprob: -12.501002311706543

Token 756: ' can' (ID: 665)
  Prédit: ' must'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' must' → logprob: -0.22222104668617249
    2. ' starts' → logprob: -2.2222211360931396
    3. ' can' → logprob: -3.8472211360931396
    4. ' has' → logprob: -4.0972208976745605
    5. '       ' → logprob: -4.3472208976745605
    6. '   ' → logprob: -4.4722208976745605
    7. ' needs' → logprob: -4.5972208976745605
    8. 'must' → logprob: -5.0972208976745605
    9. 's' → logprob: -5.9722208976745605
    10. ' should' → logprob: -6.7222208976745605

Token 757: ' swim' (ID: 39772)
  Prédit: 'move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'move' → logprob: -1.2372443675994873
    2. 'start' → logprob: -1.6122443675994873
    3. ' move' → logprob: -1.7372443675994873
    4. 'crawl' → logprob: -2.6122443675994873
    5. 'enter' → logprob: -2.7372443675994873
    6. ' start' → logprob: -2.7372443675994873
    7. 'pass' → logprob: -3.9872443675994873
    8. ' stand' → logprob: -4.112244606018066
    9. ' enter' → logprob: -4.237244606018066
    10. ' traverse' → logprob: -4.487244606018066

Token 758: ' or' (ID: 503)
  Prédit: ' through'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' through' → logprob: -0.37026530504226685
    2. 'through' → logprob: -1.245265245437622
    3. ' in' → logprob: -5.120265483856201
    4. 'from' → logprob: -6.370265483856201
    5. ' over' → logprob: -6.620265483856201
    6. ' across' → logprob: -6.870265483856201
    7. 'while' → logprob: -6.870265483856201
    8. 'in' → logprob: -6.995265483856201
    9. 'ac' → logprob: -7.120265483856201
    10. ' while' → logprob: -7.120265483856201

Token 759: ' run' (ID: 2461)
  Prédit: 'crawl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'crawl' → logprob: -0.2431415617465973
    2. ' crawl' → logprob: -1.868141531944275
    3. 'walk' → logprob: -3.3681416511535645
    4. ' must' → logprob: -4.7431416511535645
    5. ' walk' → logprob: -4.9931416511535645
    6. 'c' → logprob: -5.3681416511535645
    7. 'must' → logprob: -6.2431416511535645
    8. ' move' → logprob: -7.2431416511535645
    9. 'move' → logprob: -7.3681416511535645
    10. 'cl' → logprob: -7.6181416511535645

Token 760: ' inside' (ID: 6772)
  Prédit: ' through'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' through' → logprob: -0.13714344799518585
    2. 'through' → logprob: -2.26214337348938
    3. ' on' → logprob: -4.387143611907959
    4. ' over' → logprob: -5.387143611907959
    5. ' into' → logprob: -6.262143611907959
    6. ' across' → logprob: -6.637143611907959
    7. ' in' → logprob: -7.137143611907959
    8. ' out' → logprob: -7.262143611907959
    9. 'on' → logprob: -8.2621431350708
    10. ',' → logprob: -8.3871431350708

Token 761: ' moat' (ID: 152750)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.423819363117218
    2. ' moat' → logprob: -1.9238193035125732
    3. 'the' → logprob: -2.0488193035125732
    4. 'mo' → logprob: -3.4238193035125732
    5. ' mo' → logprob: -3.9238193035125732
    6. '.' → logprob: -5.923819541931152
    7. ' a' → logprob: -6.173819541931152
    8. ' non' → logprob: -6.298819541931152
    9. ' spaces' → logprob: -6.548819541931152
    10. '#' → logprob: -6.798819541931152

Token 762: ' or' (ID: 503)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6887686252593994
    2. '       ' → logprob: -1.3137686252593994
    3. ' to' → logprob: -2.5637686252593994
    4. '.' → logprob: -3.3137686252593994
    5. ' at' → logprob: -3.8137686252593994
    6. ' or' → logprob: -3.9387686252593994
    7. ' and' → logprob: -4.31376838684082
    8. ' but' → logprob: -4.31376838684082
    9. ' (' → logprob: -4.93876838684082
    10. ';' → logprob: -5.31376838684082

Token 763: ' non' (ID: 2893)
  Prédit: 'outside'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'outside' → logprob: -0.29996755719184875
    2. ' outside' → logprob: -2.4249675273895264
    3. 'crawl' → logprob: -2.4249675273895264
    4. 'out' → logprob: -3.7999675273895264
    5. ' crawl' → logprob: -3.9249675273895264
    6. 'walk' → logprob: -4.7999677658081055
    7. 'cl' → logprob: -5.7999677658081055
    8. 'move' → logprob: -5.9249677658081055
    9. ' move' → logprob: -6.1749677658081055
    10. 'on' → logprob: -6.4249677658081055

Token 764: '-mo' (ID: 194634)
  Prédit: '-mo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-mo' → logprob: -1.102290391921997
    2. 'mo' → logprob: -1.477290391921997
    3. '_m' → logprob: -1.977290391921997
    4. '_' → logprob: -1.977290391921997
    5. '#' → logprob: -2.352290391921997
    6. '-' → logprob: -3.477290391921997
    7. '   ' → logprob: -4.602290153503418
    8. '-m' → logprob: -5.352290153503418
    9. '_cast' → logprob: -5.602290153503418
    10. '_ma' → logprob: -5.977290153503418

Token 765: 'at' (ID: 266)
  Prédit: 'at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.00037728800089098513
    2. 'a' → logprob: -8.125377655029297
    3. 'ats' → logprob: -10.250377655029297
    4. '#' → logprob: -11.562877655029297
    5. 'att' → logprob: -12.875377655029297
    6. '@' → logprob: -12.875377655029297
    7. '	at' → logprob: -13.187877655029297
    8. '(at' → logprob: -13.250377655029297
    9. ' at' → logprob: -13.375377655029297
    10. '   ' → logprob: -13.500377655029297

Token 766: ' cells' (ID: 11242)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1581796407699585
    2. ' to' → logprob: -1.6581796407699585
    3. ' cells' → logprob: -1.7831796407699585
    4. '   ' → logprob: -3.033179759979248
    5. ',' → logprob: -3.408179759979248
    6. ')' → logprob: -3.533179759979248
    7. '_' → logprob: -3.658179759979248
    8. ' and' → logprob: -3.783179759979248
    9. ' spaces' → logprob: -3.783179759979248
    10. ' when' → logprob: -4.158179759979248

Token 767: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.038275111466646194
    2. ',' → logprob: -3.6632750034332275
    3. '(self' → logprob: -5.788275241851807
    4. '.' → logprob: -6.163275241851807
    5. '(' → logprob: -6.288275241851807
    6. ' to' → logprob: -7.163275241851807
    7. ')' → logprob: -7.288275241851807
    8. '
' → logprob: -8.038274765014648
    9. ' without' → logprob: -8.038274765014648
    10. ' but' → logprob: -8.288274765014648

Token 768: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00030066570616327226
    2. '        
' → logprob: -8.875300407409668
    3. '
' → logprob: -9.125300407409668
    4. '#' → logprob: -11.250300407409668
    5. '   ' → logprob: -11.500300407409668
    6. '```' → logprob: -12.125300407409668
    7. '           ' → logprob: -12.250300407409668
    8. ',' → logprob: -12.500300407409668
    9. 'The' → logprob: -12.875300407409668
    10. '        ' → logprob: -13.875300407409668

Token 769: ' Cl' (ID: 2190)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004198067355901003
    2. '        
' → logprob: -6.12919807434082
    3. '
' → logprob: -7.12919807434082
    4. '        ' → logprob: -7.62919807434082
    5. '```' → logprob: -9.00419807434082
    6. ' 
' → logprob: -9.62919807434082
    7. 'The' → logprob: -9.87919807434082
    8. ' The' → logprob: -10.00419807434082
    9. '#' → logprob: -10.00419807434082
    10. 'Visited' → logprob: -10.12919807434082

Token 770: 'imbing' (ID: 97910)
  Prédit: 'imb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imb' → logprob: -0.48299655318260193
    2. 'im' → logprob: -0.9829965829849243
    3. 'i' → logprob: -5.982996463775635
    4. 'imbing' → logprob: -6.232996463775635
    5. '#' → logprob: -6.857996463775635
    6. 'e' → logprob: -6.982996463775635
    7. 'imbi' → logprob: -7.357996463775635
    8. 'imber' → logprob: -8.107996940612793
    9. '   ' → logprob: -8.232996940612793
    10. '```' → logprob: -8.607996940612793

Token 771: ' out' (ID: 842)
  Prédit: ' out'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' out' → logprob: -0.26247793436050415
    2. '_out' → logprob: -1.6374778747558594
    3. 'out' → logprob: -3.3874778747558594
    4. '_' → logprob: -6.262477874755859
    5. ' into' → logprob: -9.01247787475586
    6. 'Out' → logprob: -9.26247787475586
    7. ' up' → logprob: -9.88747787475586
    8. '	out' → logprob: -9.88747787475586
    9. ' ' → logprob: -10.01247787475586
    10. ' is' → logprob: -10.13747787475586

Token 772: ' means' (ID: 4748)
  Prédit: 'of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'of' → logprob: -0.05797705054283142
    2. ' of' → logprob: -2.9329769611358643
    3. 'from' → logprob: -6.807977199554443
    4. '       ' → logprob: -7.182977199554443
    5. '   ' → logprob: -7.432977199554443
    6. '#' → logprob: -9.182976722717285
    7. 'is' → logprob: -9.182976722717285
    8. 'out' → logprob: -9.307976722717285
    9. 'a' → logprob: -9.932976722717285
    10. 'means' → logprob: -9.932976722717285

Token 773: ' going' (ID: 2966)
  Prédit: ' moving'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' moving' → logprob: -0.30288437008857727
    2. 'moving' → logprob: -2.177884340286255
    3. 'enter' → logprob: -2.427884340286255
    4. ' entering' → logprob: -3.552884340286255
    5. 'transition' → logprob: -4.802884578704834
    6. ' from' → logprob: -4.802884578704834
    7. 'from' → logprob: -5.177884578704834
    8. ' transitioning' → logprob: -6.177884578704834
    9. ' going' → logprob: -6.552884578704834
    10. ' stepping' → logprob: -6.802884578704834

Token 774: ' from' (ID: 591)
  Prédit: ' from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' from' → logprob: -0.08624386042356491
    2. 'from' → logprob: -2.5862438678741455
    3. ' into' → logprob: -4.961243629455566
    4. ' to' → logprob: -9.211243629455566
    5. ' onto' → logprob: -9.336243629455566
    6. 'into' → logprob: -10.211243629455566
    7. ' of' → logprob: -10.586243629455566
    8. ' out' → logprob: -10.711243629455566
    9. ' a' → logprob: -11.961243629455566
    10. 'to' → logprob: -12.086243629455566

Token 775: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6313190460205078
    2. ' a' → logprob: -1.5063190460205078
    3. 'mo' → logprob: -2.256319046020508
    4. 'non' → logprob: -2.256319046020508
    5. ' non' → logprob: -4.131319046020508
    6. 'not' → logprob: -5.881319046020508
    7. 'outside' → logprob: -5.881319046020508
    8. ' mo' → logprob: -6.006319046020508
    9. ' outside' → logprob: -6.006319046020508
    10. ' '#'' → logprob: -6.131319046020508

Token 776: ' moat' (ID: 152750)
  Prédit: 'mo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mo' → logprob: -0.7057176232337952
    2. 'non' → logprob: -0.9557176232337952
    3. ''#' → logprob: -2.7057175636291504
    4. ' '#'' → logprob: -4.58071756362915
    5. ''' → logprob: -4.70571756362915
    6. ' non' → logprob: -4.95571756362915
    7. ' mo' → logprob: -5.45571756362915
    8. 'moor' → logprob: -5.58071756362915
    9. '`' → logprob: -5.70571756362915
    10. 'm' → logprob: -5.95571756362915

Token 777: ' cell' (ID: 4206)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.9181253910064697
    2. ' cell' → logprob: -1.0431253910064697
    3. 'cell' → logprob: -1.6681253910064697
    4. 'to' → logprob: -3.2931253910064697
    5. '('#' → logprob: -5.418125152587891
    6. ''#' → logprob: -5.418125152587891
    7. ' '#'' → logprob: -5.793125152587891
    8. ' (' → logprob: -6.293125152587891
    9. '(' → logprob: -6.418125152587891
    10. ' ('' → logprob: -6.543125152587891

Token 778: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.3869902789592743
    2. 'to' → logprob: -1.1369903087615967
    3. ' into' → logprob: -10.636990547180176
    4. '       ' → logprob: -10.761990547180176
    5. '   ' → logprob: -11.136990547180176
    6. '```' → logprob: -11.386990547180176
    7. ' ' → logprob: -11.886990547180176
    8. '#' → logprob: -12.136990547180176
    9. ''#' → logprob: -12.511990547180176
    10. ' (' → logprob: -12.511990547180176

Token 779: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0019475567387416959
    2. ' a' → logprob: -6.251947402954102
    3. 'non' → logprob: -11.751947402954102
    4. 'an' → logprob: -11.876947402954102
    5. 'any' → logprob: -13.376947402954102
    6. 'outside' → logprob: -13.501947402954102
    7. '```' → logprob: -15.501947402954102
    8. 'not' → logprob: -15.501947402954102
    9. '   ' → logprob: -15.626947402954102
    10. ' ' → logprob: -16.1269474029541

Token 780: ' non' (ID: 2893)
  Prédit: 'non'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'non' → logprob: -9.043078898685053e-05
    2. ' non' → logprob: -9.375090599060059
    3. 'cell' → logprob: -12.875090599060059
    4. 'not' → logprob: -13.500090599060059
    5. '```' → logprob: -14.750090599060059
    6. '(non' → logprob: -15.125090599060059
    7. 'nonnull' → logprob: -15.750090599060059
    8. '   ' → logprob: -16.125089645385742
    9. 'a' → logprob: -16.250089645385742
    10. 'outside' → logprob: -16.375089645385742

Token 781: '-mo' (ID: 194634)
  Prédit: 'mo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mo' → logprob: -0.3909895420074463
    2. '-mo' → logprob: -1.2659895420074463
    3. '-' → logprob: -3.2659895420074463
    4. '_' → logprob: -6.515989303588867
    5. '#' → logprob: -7.015989303588867
    6. '   ' → logprob: -7.765989303588867
    7. '```' → logprob: -8.890989303588867
    8. '-)' → logprob: -8.890989303588867
    9. ' moat' → logprob: -9.265989303588867
    10. 'moor' → logprob: -9.390989303588867

Token 782: 'at' (ID: 266)
  Prédit: 'at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.001219643629156053
    2. 'a' → logprob: -6.751219749450684
    3. ' at' → logprob: -11.126219749450684
    4. '	at' → logprob: -12.001219749450684
    5. '#' → logprob: -12.501219749450684
    6. '@' → logprob: -12.751219749450684
    7. 'att' → logprob: -12.876219749450684
    8. 'ats' → logprob: -13.251219749450684
    9. ''at' → logprob: -13.251219749450684
    10. '   ' → logprob: -13.313719749450684

Token 783: ' cell' (ID: 4206)
  Prédit: ' cell'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cell' → logprob: -0.6931664347648621
    2. 'cell' → logprob: -0.6931664347648621
    3. ' one' → logprob: -11.318166732788086
    4. 'neighbor' → logprob: -13.193166732788086
    5. '_cell' → logprob: -13.568166732788086
    6. 'space' → logprob: -14.318166732788086
    7. '(cell' → logprob: -14.568166732788086
    8. '	cell' → logprob: -14.568166732788086
    9. '   ' → logprob: -14.693166732788086
    10. 'one' → logprob: -14.818166732788086

Token 784: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005499837454408407
    2. '.' → logprob: -6.005499839782715
    3. ',' → logprob: -6.755499839782715
    4. '
' → logprob: -8.005499839782715
    5. ' during' → logprob: -8.130499839782715
    6. ' in' → logprob: -8.630499839782715
    7. '               ' → logprob: -8.755499839782715
    8. '   ' → logprob: -9.130499839782715
    9. '        
' → logprob: -9.130499839782715
    10. '.
' → logprob: -9.255499839782715

Token 785: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.688212614681106e-05
    2. '
' → logprob: -12.375017166137695
    3. '        
' → logprob: -12.375017166137695
    4. '```' → logprob: -12.375017166137695
    5. '   ' → logprob: -13.000017166137695
    6. '#' → logprob: -14.625017166137695
    7. '           ' → logprob: -14.750017166137695
    8. ',' → logprob: -15.250017166137695
    9. 'from' → logprob: -15.750017166137695
    10. '"""' → logprob: -16.125017166137695

Token 786: ' We' (ID: 1416)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004293580132070929
    2. '```' → logprob: -8.125429153442383
    3. '        
' → logprob: -9.500429153442383
    4. '#' → logprob: -11.375429153442383
    5. '
' → logprob: -11.875429153442383
    6. ')' → logprob: -11.875429153442383
    7. '"""' → logprob: -12.125429153442383
    8. '   ' → logprob: -12.125429153442383
    9. '\' → logprob: -12.625429153442383
    10. '           ' → logprob: -13.000429153442383

Token 787: ' want' (ID: 1682)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0200865268707275
    2. 'def' → logprob: -1.3950865268707275
    3. ' def' → logprob: -1.3950865268707275
    4. '       ' → logprob: -3.6450865268707275
    5. ' need' → logprob: -3.7700865268707275
    6. ''ll' → logprob: -3.8950865268707275
    7. ' ' → logprob: -4.145086288452148
    8. '    ' → logprob: -4.645086288452148
    9. ' '' → logprob: -4.770086288452148
    10. ' will' → logprob: -5.020086288452148

Token 788: ' minimal' (ID: 19957)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.003402524860575795
    2. 'to' → logprob: -5.8784027099609375
    3. ' the' → logprob: -8.003402709960938
    4. '       ' → logprob: -8.628402709960938
    5. ' minimal' → logprob: -10.378402709960938
    6. '   ' → logprob: -11.253402709960938
    7. 'def' → logprob: -11.628402709960938
    8. 'the' → logprob: -11.878402709960938
    9. ' minimum' → logprob: -12.128402709960938
    10. '    ' → logprob: -12.628402709960938

Token 789: ' such' (ID: 2238)
  Prédit: ' number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' number' → logprob: -0.008997423574328423
    2. '_' → logprob: -5.758997440338135
    3. ' _' → logprob: -6.258997440338135
    4. ' cost' → logprob: -6.758997440338135
    5. 'number' → logprob: -7.258997440338135
    6. ' time' → logprob: -8.133996963500977
    7. ' distance' → logprob: -8.133996963500977
    8. ' steps' → logprob: -8.633996963500977
    9. '_number' → logprob: -8.883996963500977
    10. ' path' → logprob: -9.008996963500977

Token 790: ' transitions' (ID: 59824)
  Prédit: ' number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' number' → logprob: -0.1742830127477646
    2. ' count' → logprob: -2.174283027648926
    3. 'number' → logprob: -4.049283027648926
    4. 'count' → logprob: -4.174283027648926
    5. ' cost' → logprob: -4.924283027648926
    6. ' value' → logprob: -6.799283027648926
    7. ' distance' → logprob: -6.924283027648926
    8. 'distance' → logprob: -6.924283027648926
    9. 'cost' → logprob: -7.549283027648926
    10. ' return' → logprob: -7.924283027648926

Token 791: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.253439337015152
    2. ' to' → logprob: -2.003439426422119
    3. '.' → logprob: -3.503439426422119
    4. ' from' → logprob: -4.003439426422119
    5. ',' → logprob: -4.128439426422119
    6. '   ' → logprob: -4.753439426422119
    7. ' in' → logprob: -5.503439426422119
    8. ')' → logprob: -5.628439426422119
    9. ' that' → logprob: -6.753439426422119
    10. ' for' → logprob: -6.753439426422119

Token 792: ' reach' (ID: 7627)
  Prédit: 'reach'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reach' → logprob: -0.2412823885679245
    2. ' reach' → logprob: -1.741282343864441
    3. 'self' → logprob: -3.4912824630737305
    4. 'the' → logprob: -5.3662824630737305
    5. 'get' → logprob: -6.2412824630737305
    6. ' the' → logprob: -7.7412824630737305
    7. 'goal' → logprob: -7.9912824630737305
    8. ' self' → logprob: -8.24128246307373
    9. ' ' → logprob: -8.36628246307373
    10. 'def' → logprob: -8.61628246307373

Token 793: ' goal' (ID: 8583)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.2153771072626114
    2. 'the' → logprob: -1.8403770923614502
    3. 'self' → logprob: -3.59037709236145
    4. ' self' → logprob: -4.965377330780029
    5. '(self' → logprob: -7.840377330780029
    6. '   ' → logprob: -11.715376853942871
    7. ' goal' → logprob: -11.965376853942871
    8. '       ' → logprob: -12.090376853942871
    9. 'goal' → logprob: -12.215376853942871
    10. 'from' → logprob: -12.840376853942871

Token 794: '.
' (ID: 558)
  Prédit: ' from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' from' → logprob: -0.7000408172607422
    2. '.' → logprob: -1.4500408172607422
    3. 'from' → logprob: -1.9500408172607422
    4. '       ' → logprob: -2.450040817260742
    5. '.
' → logprob: -3.700040817260742
    6. '   ' → logprob: -4.450040817260742
    7. '(self' → logprob: -7.325040817260742
    8. ',' → logprob: -7.450040817260742
    9. '
' → logprob: -7.450040817260742
    10. ' starting' → logprob: -7.700040817260742

Token 795: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00015669701679144055
    2. '        
' → logprob: -9.62515640258789
    3. '```' → logprob: -10.12515640258789
    4. '   ' → logprob: -10.37515640258789
    5. ')' → logprob: -11.87515640258789
    6. '           ' → logprob: -13.12515640258789
    7. '#' → logprob: -13.12515640258789
    8. ',' → logprob: -14.00015640258789
    9. '      ' → logprob: -14.12515640258789
    10. '        ' → logprob: -14.37515640258789

Token 796: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00027921271976083517
    2. 'visited' → logprob: -8.875279426574707
    3. '```' → logprob: -10.000279426574707
    4. 'def' → logprob: -10.000279426574707
    5. ' visited' → logprob: -10.750279426574707
    6. '   ' → logprob: -11.125279426574707
    7. '
' → logprob: -13.000279426574707
    8. 'queue' → logprob: -13.125279426574707
    9. '#' → logprob: -13.250279426574707
    10. ')' → logprob: -13.500279426574707

Token 797: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -2.3199920178740285e-05
    2. '   ' → logprob: -10.875022888183594
    3. '```' → logprob: -13.125022888183594
    4. 'queue' → logprob: -13.875022888183594
    5. 'def' → logprob: -14.250022888183594
    6. 'visited' → logprob: -15.375022888183594
    7. '      ' → logprob: -16.125022888183594
    8. '     ' → logprob: -16.500022888183594
    9. 'from' → logprob: -17.125022888183594
    10. '           ' → logprob: -17.250022888183594

Token 798: ' #' (ID: 1069)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.5591734051704407
    2. 'from' → logprob: -1.809173345565796
    3. 'queue' → logprob: -2.309173345565796
    4. 'visited' → logprob: -2.309173345565796
    5. '       ' → logprob: -3.434173345565796
    6. 'start' → logprob: -3.809173345565796
    7. 'import' → logprob: -4.559173583984375
    8. 'if' → logprob: -8.559173583984375
    9. '#' (adapté à ' #') → logprob: -8.559173583984375
    10. 'distance' → logprob: -9.059173583984375

Token 799: ' Weight' (ID: 19983)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.556858479976654
    2. '       ' → logprob: -1.9318585395812988
    3. 'visited' → logprob: -1.9318585395812988
    4. 'from' → logprob: -2.556858539581299
    5. 'queue' → logprob: -3.056858539581299
    6. 'start' → logprob: -5.431858539581299
    7. 'import' → logprob: -6.056858539581299
    8. 'def' → logprob: -6.056858539581299
    9. 'distance' → logprob: -7.556858539581299
    10. '#' → logprob: -7.681858539581299

Token 800: ' of' (ID: 328)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.07424186170101166
    2. ' =' → logprob: -3.199241876602173
    3. '_queue' → logprob: -4.199241638183594
    4. '_map' → logprob: -4.949241638183594
    5. '=' → logprob: -5.574241638183594
    6. 'dist' → logprob: -6.199241638183594
    7. 'ed' → logprob: -6.699241638183594
    8. '_dist' → logprob: -6.949241638183594
    9. '   ' → logprob: -9.574241638183594
    10. 'import' → logprob: -9.574241638183594

Token 801: ' edges' (ID: 22569)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4898577928543091
    2. '(' → logprob: -1.989857792854309
    3. '0' → logprob: -2.2398576736450195
    4. ' (' → logprob: -2.6148576736450195
    5. 'each' → logprob: -3.4898576736450195
    6. ' ' → logprob: -4.6148576736450195
    7. 'edges' → logprob: -5.2398576736450195
    8. ' each' → logprob: -5.7398576736450195
    9. 'mo' → logprob: -5.8648576736450195
    10. 'cl' → logprob: -5.9898576736450195

Token 802: ':
' (ID: 734)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0086522763594985
    2. '=' → logprob: -5.008652210235596
    3. '_queue' → logprob: -7.758652210235596
    4. 's' → logprob: -7.883652210235596
    5. ':' → logprob: -7.883652210235596
    6. 'import' → logprob: -8.383652687072754
    7. '   ' → logprob: -8.383652687072754
    8. ' is' → logprob: -9.883652687072754
    9. 'queue' → logprob: -10.383652687072754
    10. ' ' → logprob: -10.508652687072754

Token 803: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25640296936035156
    2. '#' → logprob: -2.3814029693603516
    3. 'from' → logprob: -2.8814029693603516
    4. 'import' → logprob: -3.6314029693603516
    5. 'visited' → logprob: -4.381402969360352
    6. 'dist' → logprob: -4.506402969360352
    7. ' visited' → logprob: -5.006402969360352
    8. ' from' → logprob: -5.256402969360352
    9. ' dist' → logprob: -5.631402969360352
    10. ' #' → logprob: -5.881402969360352

Token 804: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.8659557104110718
    2. '0' → logprob: -0.8659557104110718
    3. 'from' → logprob: -2.2409558296203613
    4. 'import' → logprob: -3.7409558296203613
    5. '       ' → logprob: -4.990955829620361
    6. 'dist' → logprob: -5.115955829620361
    7. '1' → logprob: -5.990955829620361
    8. 'queue' → logprob: -6.115955829620361
    9. 'visited' → logprob: -6.115955829620361
    10. 'INF' → logprob: -6.115955829620361

Token 805: ' transitions' (ID: 59824)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.3197904825210571
    2. '#' → logprob: -1.4447904825210571
    3. 'from' → logprob: -1.4447904825210571
    4. 'visited' → logprob: -3.0697903633117676
    5. 'import' → logprob: -4.069790363311768
    6. ' #' → logprob: -4.194790363311768
    7. ' visited' → logprob: -4.194790363311768
    8. '1' → logprob: -4.194790363311768
    9. 'dist' → logprob: -4.319790363311768
    10. 'def' → logprob: -4.319790363311768

Token 806: ' from' (ID: 591)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16522079706192017
    2. '=' → logprob: -1.9152207374572754
    3. 'from' → logprob: -5.540220737457275
    4. ' from' → logprob: -8.290221214294434
    5. ' between' → logprob: -9.040221214294434
    6. ':' → logprob: -9.165221214294434
    7. '       ' → logprob: -9.290221214294434
    8. '   ' → logprob: -9.665221214294434
    9. 'between' → logprob: -10.290221214294434
    10. ')' → logprob: -10.415221214294434

Token 807: ' non' (ID: 2893)
  Prédit: 'non'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'non' → logprob: -0.40602970123291016
    2. 'mo' → logprob: -1.1560297012329102
    3. 'a' → logprob: -4.65602970123291
    4. ' non' → logprob: -5.15602970123291
    5. ' moat' → logprob: -6.40602970123291
    6. ' a' → logprob: -7.90602970123291
    7. 'moor' → logprob: -8.03102970123291
    8. 'outside' → logprob: -8.28102970123291
    9. ' mo' → logprob: -8.28102970123291
    10. 'ma' → logprob: -8.90602970123291

Token 808: '-mo' (ID: 194634)
  Prédit: '-mo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-mo' → logprob: -0.0739893764257431
    2. '-' → logprob: -3.4489893913269043
    3. '_m' → logprob: -4.073989391326904
    4. '_' → logprob: -4.448989391326904
    5. 'mo' → logprob: -5.448989391326904
    6. '-m' → logprob: -6.198989391326904
    7. '   ' → logprob: -6.573989391326904
    8. '#' → logprob: -6.698989391326904
    9. ' moat' → logprob: -7.698989391326904
    10. '-_' → logprob: -8.448988914489746

Token 809: 'at' (ID: 266)
  Prédit: 'at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.029836803674697876
    2. 'a' → logprob: -3.529836893081665
    3. '   ' → logprob: -10.404836654663086
    4. 'ats' → logprob: -12.154836654663086
    5. '#' → logprob: -12.342336654663086
    6. '```' → logprob: -12.467336654663086
    7. 't' → logprob: -12.779836654663086
    8. '
' → logprob: -12.842336654663086
    9. '``' → logprob: -12.904836654663086
    10. ' at' → logprob: -12.904836654663086

Token 810: '->' (ID: 609)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.1838649958372116
    2. 'to' → logprob: -1.808864951133728
    3. 'cell' → logprob: -6.058865070343018
    4. ' cell' → logprob: -6.433865070343018
    5. ' cells' → logprob: -9.68386459350586
    6. 'cells' → logprob: -10.55886459350586
    7. '_cell' → logprob: -10.93386459350586
    8. ' ' → logprob: -11.18386459350586
    9. '_to' → logprob: -11.30886459350586
    10. '   ' → logprob: -11.80886459350586

Token 811: 'non' (ID: 11741)
  Prédit: 'mo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mo' → logprob: -0.13462595641613007
    2. 'to' → logprob: -2.2596259117126465
    3. ' to' → logprob: -5.3846259117126465
    4. '#' → logprob: -5.7596259117126465
    5. ' mo' → logprob: -5.8846259117126465
    6. 'non' → logprob: -6.1346259117126465
    7. 'moor' → logprob: -6.1346259117126465
    8. ' moat' → logprob: -6.7596259117126465
    9. '-mo' → logprob: -7.1346259117126465
    10. ''#' → logprob: -7.1346259117126465

Token 812: '-mo' (ID: 194634)
  Prédit: '-mo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-mo' → logprob: -0.10023093223571777
    2. '-' → logprob: -3.2252309322357178
    3. 'mo' → logprob: -3.3502309322357178
    4. '_' → logprob: -5.225231170654297
    5. '-m' → logprob: -5.350231170654297
    6. '_m' → logprob: -5.600231170654297
    7. '   ' → logprob: -6.225231170654297
    8. '```' → logprob: -7.350231170654297
    9. '#' → logprob: -7.475231170654297
    10. ' moat' → logprob: -7.725231170654297

Token 813: 'at' (ID: 266)
  Prédit: 'at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.00016039233014453202
    2. 'a' → logprob: -9.125160217285156
    3. 'ats' → logprob: -12.000160217285156
    4. 'mo' → logprob: -12.000160217285156
    5. 'ат' → logprob: -12.125160217285156
    6. '
' → logprob: -12.687660217285156
    7. '	at' → logprob: -12.687660217285156
    8. '   ' → logprob: -13.000160217285156
    9. ' at' → logprob: -13.000160217285156
    10. 't' → logprob: -13.062660217285156

Token 814: ' or' (ID: 503)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2622727155685425
    2. ' or' → logprob: -2.012272834777832
    3. '=' → logprob: -3.637272834777832
    4. ' =' → logprob: -3.887272834777832
    5. ' is' → logprob: -4.012272834777832
    6. ' and' → logprob: -4.887272834777832
    7. 'or' → logprob: -5.012272834777832
    8. ' are' → logprob: -5.262272834777832
    9. '       ' → logprob: -6.137272834777832
    10. ',' → logprob: -6.512272834777832

Token 815: ' moat' (ID: 152750)
  Prédit: 'mo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mo' → logprob: -0.01409510150551796
    2. ' moat' → logprob: -4.764095306396484
    3. 'non' → logprob: -5.639095306396484
    4. 'moor' → logprob: -6.639095306396484
    5. ' mo' → logprob: -8.014095306396484
    6. ' non' → logprob: -9.389095306396484
    7. ' ' → logprob: -10.389095306396484
    8. '   ' → logprob: -10.389095306396484
    9. 'moid' → logprob: -10.514095306396484
    10. '```' → logprob: -11.014095306396484

Token 816: '->' (ID: 609)
  Prédit: '->'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '->' → logprob: -0.007537540979683399
    2. ' ->' → logprob: -5.757537364959717
    3. '=>' → logprob: -6.382537364959717
    4. ' or' → logprob: -6.882537364959717
    5. '<|end|>' → logprob: -8.257537841796875
    6. ',' → logprob: -8.632537841796875
    7. '=' → logprob: -8.632537841796875
    8. '   ' → logprob: -9.007537841796875
    9. '→' → logprob: -9.257537841796875
    10. ' to' → logprob: -9.257537841796875

Token 817: 'mo' (ID: 3690)
  Prédit: 'mo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mo' → logprob: -0.0003809833142440766
    2. ' moat' → logprob: -8.500380516052246
    3. 'moor' → logprob: -9.875380516052246
    4. '#' → logprob: -10.250380516052246
    5. 'non' → logprob: -10.625380516052246
    6. ' mo' → logprob: -11.000380516052246
    7. 'ma' → logprob: -11.250380516052246
    8. '```' → logprob: -11.750380516052246
    9. 'moid' → logprob: -12.625380516052246
    10. '   ' → logprob: -12.687880516052246

Token 818: 'at' (ID: 266)
  Prédit: 'at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.0008134396048262715
    2. 'a' → logprob: -7.5008134841918945
    3. '#' → logprob: -9.813313484191895
    4. 't' → logprob: -10.813313484191895
    5. 'mo' → logprob: -10.813313484191895
    6. ' moat' → logprob: -11.063313484191895
    7. '   ' → logprob: -11.188313484191895
    8. 'ats' → logprob: -11.250813484191895
    9. 'ат' → logprob: -11.875813484191895
    10. '
' → logprob: -12.000813484191895

Token 819: ' or' (ID: 503)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47194692492485046
    2. ':' → logprob: -1.4719469547271729
    3. ' =' → logprob: -2.346946954727173
    4. ' or' → logprob: -3.471946954727173
    5. ' is' → logprob: -5.471946716308594
    6. ' are' → logprob: -6.096946716308594
    7. ',' → logprob: -6.221946716308594
    8. ' :' → logprob: -6.221946716308594
    9. ' have' → logprob: -6.721946716308594
    10. ' (' → logprob: -6.721946716308594

Token 820: ' moat' (ID: 152750)
  Prédit: 'non'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'non' → logprob: -0.0072288005612790585
    2. 'mo' → logprob: -5.382228851318359
    3. ' non' → logprob: -6.007228851318359
    4. '   ' → logprob: -9.25722885131836
    5. ' mo' → logprob: -11.63222885131836
    6. ' moat' → logprob: -11.63222885131836
    7. ' ' → logprob: -12.00722885131836
    8. '```' → logprob: -12.75722885131836
    9. '#' → logprob: -12.88222885131836
    10. 'outside' → logprob: -13.00722885131836

Token 821: '->' (ID: 609)
  Prédit: '->'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '->' → logprob: -0.0006215345347300172
    2. ' ->' → logprob: -8.375621795654297
    3. '->_' → logprob: -8.625621795654297
    4. '-' → logprob: -9.625621795654297
    5. 'to' → logprob: -9.750621795654297
    6. '_to' → logprob: -10.875621795654297
    7. '->[' → logprob: -11.500621795654297
    8. ' to' → logprob: -11.625621795654297
    9. '→' → logprob: -11.750621795654297
    10. '```' → logprob: -12.125621795654297

Token 822: 'non' (ID: 11741)
  Prédit: 'mo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mo' → logprob: -0.0001370320824207738
    2. '#' → logprob: -10.375137329101562
    3. 'moor' → logprob: -10.375137329101562
    4. 'ma' → logprob: -10.750137329101562
    5. ' moat' → logprob: -11.375137329101562
    6. ' mo' → logprob: -11.375137329101562
    7. 'm' → logprob: -11.500137329101562
    8. 'moid' → logprob: -12.500137329101562
    9. ''#' → logprob: -12.500137329101562
    10. '```' → logprob: -13.437637329101562

Token 823: '-mo' (ID: 194634)
  Prédit: '-mo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-mo' → logprob: -0.023943603038787842
    2. 'mo' → logprob: -4.0239434242248535
    3. '-' → logprob: -5.2739434242248535
    4. '-m' → logprob: -8.273943901062012
    5. '->' → logprob: -10.273943901062012
    6. '-ma' → logprob: -10.273943901062012
    7. '```' → logprob: -10.273943901062012
    8. '#' → logprob: -10.273943901062012
    9. ' moat' → logprob: -10.773943901062012
    10. '-
' → logprob: -10.898943901062012

Token 824: 'at' (ID: 266)
  Prédit: 'at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.00018685187387745827
    2. 'a' → logprob: -9.125186920166016
    3. 'ат' → logprob: -10.750186920166016
    4. 'mo' → logprob: -11.125186920166016
    5. '#' → logprob: -12.250186920166016
    6. ' moat' → logprob: -12.312686920166016
    7. 't' → logprob: -12.500186920166016
    8. '```' → logprob: -12.750186920166016
    9. '   ' → logprob: -12.875186920166016
    10. '	at' → logprob: -12.875186920166016

Token 825: ' =' (ID: 314)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7038421630859375
    2. ' is' → logprob: -1.8288421630859375
    3. ' =' → logprob: -1.8288421630859375
    4. '=' → logprob: -1.9538421630859375
    5. ' are' → logprob: -4.2038421630859375
    6. '=>' → logprob: -5.3288421630859375
    7. '       ' → logprob: -5.4538421630859375
    8. 'is' → logprob: -5.5788421630859375
    9. ' =>' → logprob: -5.7038421630859375
    10. '0' → logprob: -6.5788421630859375

Token 826: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0015274790348485112
    2. ' ' → logprob: -6.876527309417725
    3. '1' → logprob: -7.626527309417725
    4. '   ' → logprob: -13.751527786254883
    5. '[' → logprob: -13.939027786254883
    6. '       ' → logprob: -14.001527786254883
    7. '{' → logprob: -14.189027786254883
    8. '```' → logprob: -14.814027786254883
    9. '           ' → logprob: -14.876527786254883
    10. 'int' → logprob: -15.564027786254883

Token 827: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00291685713455081
    2. '1' → logprob: -5.8779168128967285
    3. ' ' → logprob: -9.252917289733887
    4. '[' → logprob: -12.627917289733887
    5. '   ' → logprob: -12.877917289733887
    6. '{' → logprob: -12.877917289733887
    7. '(' → logprob: -13.377917289733887
    8. '{
' → logprob: -13.815417289733887
    9. 'int' → logprob: -13.815417289733887
    10. '```' → logprob: -14.252917289733887

Token 828: ' if' (ID: 538)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.10212653875350952
    2. '       ' → logprob: -2.3521265983581543
    3. ',' → logprob: -6.727126598358154
    4. ' #' → logprob: -7.977126598358154
    5. '
' → logprob: -8.602126121520996
    6. '<|end|>' → logprob: -9.477126121520996
    7. '```' → logprob: -10.602126121520996
    8. ')' → logprob: -10.852126121520996
    9. ' or' → logprob: -11.102126121520996
    10. '   ' → logprob: -11.602126121520996

Token 829: ' not' (ID: 625)
  Prédit: 'same'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'same' → logprob: -1.061591625213623
    2. 'inside' → logprob: -1.686591625213623
    3. 'previous' → logprob: -1.936591625213623
    4. 'not' → logprob: -2.311591625213623
    5. 'both' → logprob: -3.561591625213623
    6. 'current' → logprob: -3.561591625213623
    7. 'in' → logprob: -3.811591625213623
    8. 'mo' → logprob: -4.061591625213623
    9. 'no' → logprob: -4.311591625213623
    10. 'prev' → logprob: -4.311591625213623

Token 830: ' climbing' (ID: 47637)
  Prédit: 'cl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cl' → logprob: -0.9196153879165649
    2. 'mo' → logprob: -1.044615387916565
    3. 'moving' → logprob: -2.9196152687072754
    4. 'same' → logprob: -3.1696152687072754
    5. 'is' → logprob: -3.4196152687072754
    6. 'a' → logprob: -3.7946152687072754
    7. 'self' → logprob: -4.169615268707275
    8. 'inside' → logprob: -5.044615268707275
    9. 'transition' → logprob: -5.169615268707275
    10. 'starting' → logprob: -5.294615268707275

Token 831: ' up' (ID: 869)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' else' → logprob: -1.3238699436187744
    2. '_' → logprob: -1.4488699436187744
    3. '_out' → logprob: -1.8238699436187744
    4. 'out' → logprob: -2.0738699436187744
    5. ' out' → logprob: -2.1988699436187744
    6. ',' → logprob: -3.3238699436187744
    7. 'else' → logprob: -3.5738699436187744
    8. ' _' → logprob: -4.323869705200195
    9. '_else' → logprob: -5.323869705200195
    10. ' or' → logprob: -5.573869705200195

Token 832: ',
' (ID: 412)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.5444214940071106
    2. ',' → logprob: -1.9194214344024658
    3. ' or' → logprob: -2.294421434402466
    4. '_' → logprob: -2.794421434402466
    5. ' ,' → logprob: -3.794421434402466
    6. 'else' → logprob: -4.169421672821045
    7. ' and' → logprob: -4.169421672821045
    8. ' from' → logprob: -4.169421672821045
    9. ' out' → logprob: -4.919421672821045
    10. 'from' → logprob: -5.044421672821045

Token 833: '       ' (ID: 309)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.12933899462223053
    2. '       ' → logprob: -2.1293389797210693
    3. ' #' → logprob: -6.254339218139648
    4. '           ' → logprob: -8.004339218139648
    5. '   ' → logprob: -9.754339218139648
    6. '               ' → logprob: -10.004339218139648
    7. '        ' → logprob: -11.379339218139648
    8. ' ' → logprob: -12.004339218139648
    9. '0' → logprob: -12.004339218139648
    10. '1' → logprob: -12.129339218139648

Token 834: ' #' (ID: 1069)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.29812711477279663
    2. 'else' → logprob: -1.4231271743774414
    3. '#' (adapté à ' #') → logprob: -5.298127174377441
    4. '       ' → logprob: -5.923127174377441
    5. 'otherwise' → logprob: -6.173127174377441
    6. ' or' → logprob: -6.298127174377441
    7. ' but' → logprob: -6.798127174377441
    8. 'elif' → logprob: -7.173127174377441
    9. ' otherwise' → logprob: -7.298127174377441
    10. ' #' → logprob: -7.423127174377441

Token 835: ' climbing' (ID: 47637)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.003818725934252143
    2. ' #' → logprob: -6.628818511962891
    3. '       ' → logprob: -7.378818511962891
    4. '1' → logprob: -7.503818511962891
    5. 'from' → logprob: -7.628818511962891
    6. 'non' → logprob: -7.878818511962891
    7. 'else' → logprob: -8.50381851196289
    8. '0' → logprob: -9.50381851196289
    9. ' else' → logprob: -10.62881851196289
    10. '   ' → logprob: -10.62881851196289

Token 836: ' up' (ID: 869)
  Prédit: 'out'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'out' → logprob: -0.091642826795578
    2. ' out' → logprob: -3.4666428565979004
    3. '_out' → logprob: -3.9666428565979004
    4. 'up' → logprob: -4.2166428565979
    5. '=' → logprob: -4.5916428565979
    6. ' =' → logprob: -5.3416428565979
    7. ' up' → logprob: -5.8416428565979
    8. 'from' → logprob: -6.2166428565979
    9. ' from' → logprob: -7.5916428565979
    10. '_up' → logprob: -7.8416428565979

Token 837: ' means' (ID: 4748)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.0070905685424805
    2. ' =' → logprob: -1.0070905685424805
    3. 'from' → logprob: -2.5070905685424805
    4. ' from' → logprob: -3.6320905685424805
    5. ' costs' → logprob: -3.7570905685424805
    6. ' means' → logprob: -3.7570905685424805
    7. ' is' → logprob: -3.7570905685424805
    8. 'means' → logprob: -3.7570905685424805
    9. 'cost' → logprob: -4.5070905685424805
    10. ' (' → logprob: -5.1320905685424805

Token 838: ' moat' (ID: 152750)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -1.014057993888855
    2. 'from' → logprob: -1.014057993888855
    3. 'going' → logprob: -2.1390581130981445
    4. 'transition' → logprob: -2.3890581130981445
    5. 'non' → logprob: -3.3890581130981445
    6. 'moving' → logprob: -4.7640581130981445
    7. ' going' → logprob: -4.8890581130981445
    8. 'a' → logprob: -5.1390581130981445
    9. ' from' → logprob: -6.1390581130981445
    10. 'trans' → logprob: -6.5140581130981445

Token 839: '->' (ID: 609)
  Prédit: '->'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '->' → logprob: -0.36530447006225586
    2. ' ->' → logprob: -2.240304470062256
    3. '_to' → logprob: -2.740304470062256
    4. '_' → logprob: -3.240304470062256
    5. ' to' → logprob: -3.490304470062256
    6. 'to' → logprob: -3.740304470062256
    7. '_cell' → logprob: -4.240304470062256
    8. ' cell' → logprob: -4.490304470062256
    9. 'cell' → logprob: -4.865304470062256
    10. ' _' → logprob: -6.115304470062256

Token 840: 'non' (ID: 11741)
  Prédit: 'non'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'non' → logprob: -0.007670864462852478
    2. ' non' → logprob: -4.882670879364014
    3. '_non' → logprob: -10.632670402526855
    4. ''' → logprob: -11.632670402526855
    5. 'n' → logprob: -11.632670402526855
    6. ' ' → logprob: -12.382670402526855
    7. 'mo' → logprob: -12.632670402526855
    8. '-' → logprob: -12.757670402526855
    9. 'nonnull' → logprob: -12.757670402526855
    10. '(non' → logprob: -13.257670402526855

Token 841: '-mo' (ID: 194634)
  Prédit: '-mo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-mo' → logprob: -0.004589145537465811
    2. '-' → logprob: -5.629589080810547
    3. '-m' → logprob: -7.754589080810547
    4. 'mo' → logprob: -8.004589080810547
    5. '-
' → logprob: -9.879589080810547
    6. '   ' → logprob: -10.629589080810547
    7. '_' → logprob: -11.004589080810547
    8. '-)' → logprob: -11.129589080810547
    9. '-_' → logprob: -11.129589080810547
    10. '-ma' → logprob: -11.129589080810547

Token 842: 'at' (ID: 266)
  Prédit: 'at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.00036156410351395607
    2. 't' → logprob: -8.375361442565918
    3. 'a' → logprob: -9.625361442565918
    4. 'ат' → logprob: -10.500361442565918
    5. '	at' → logprob: -11.500361442565918
    6. 'mo' → logprob: -12.250361442565918
    7. '#' → logprob: -13.062861442565918
    8. '(at' → logprob: -13.375361442565918
    9. ' moat' → logprob: -13.375361442565918
    10. '"#' → logprob: -13.812861442565918

Token 843: ' transition' (ID: 14463)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04711177200078964
    2. '
' → logprob: -3.922111749649048
    3. '0' → logprob: -5.547111988067627
    4. '        
' → logprob: -6.047111988067627
    5. '```' → logprob: -6.172111988067627
    6. ',' → logprob: -6.297111988067627
    7. ' (' → logprob: -6.672111988067627
    8. ' =' → logprob: -6.797111988067627
    9. '
' → logprob: -6.797111988067627
    10. '=' → logprob: -6.797111988067627

Token 844: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04277455061674118
    2. ',' → logprob: -5.167774677276611
    3. ' =' → logprob: -5.417774677276611
    4. ':' → logprob: -5.417774677276611
    5. '
' → logprob: -5.667774677276611
    6. '0' → logprob: -5.792774677276611
    7. '```' → logprob: -6.042774677276611
    8. '.' → logprob: -6.292774677276611
    9. ' -' → logprob: -6.542774677276611
    10. ')' → logprob: -6.542774677276611

Token 845: ' cost' (ID: 3097)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.42227840423583984
    2. ' so' → logprob: -2.17227840423584
    3. '#' → logprob: -3.42227840423584
    4. 'visited' → logprob: -3.54727840423584
    5. ' and' → logprob: -3.92227840423584
    6. ' but' → logprob: -4.17227840423584
    7. 'so' → logprob: -4.29727840423584
    8. 'and' → logprob: -4.42227840423584
    9. 'which' → logprob: -4.54727840423584
    10. ' visited' → logprob: -4.79727840423584

Token 846: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07913950830698013
    2. ' =' → logprob: -2.579139471054077
    3. '1' → logprob: -8.829139709472656
    4. ' is' → logprob: -9.704139709472656
    5. ' ' → logprob: -10.204139709472656
    6. ':' → logprob: -13.079139709472656
    7. 'is' → logprob: -14.329139709472656
    8. '   ' → logprob: -14.329139709472656
    9. '0' → logprob: -14.454139709472656
    10. '```' → logprob: -15.204139709472656

Token 847: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.625003814697266
    3. '   ' → logprob: -17.625003814697266
    4. '+' → logprob: -17.875003814697266
    5. '0' → logprob: -19.000003814697266
    6. '۱' → logprob: -19.562503814697266
    7. '```' → logprob: -19.625003814697266
    8. '`' → logprob: -19.937503814697266
    9. '10' → logprob: -20.187503814697266
    10. 'self' → logprob: -20.375003814697266

Token 848: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -16.875
    3. '0' → logprob: -19.5
    4. '+' → logprob: -19.875
    5. '   ' → logprob: -20.625
    6. '```' → logprob: -21.5625
    7. '۱' → logprob: -21.75
    8. '
' → logprob: -21.875
    9. '=' → logprob: -22.0
    10. '`' → logprob: -22.0

Token 849: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02227129600942135
    2. '
' → logprob: -4.022271156311035
    3. ',' → logprob: -6.647271156311035
    4. '<|end|>' → logprob: -6.772271156311035
    5. '        
' → logprob: -7.272271156311035
    6. ')' → logprob: -8.897271156311035
    7. '.' → logprob: -9.022271156311035
    8. '```' → logprob: -9.147271156311035
    9. '#' → logprob: -9.647271156311035
    10. '<|end|>' → logprob: -9.647271156311035

Token 850: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003407071635592729
    2. 'import' → logprob: -8.375340461730957
    3. 'from' → logprob: -9.625340461730957
    4. '
' → logprob: -10.750340461730957
    5. '```' → logprob: -11.750340461730957
    6. '        
' → logprob: -12.000340461730957
    7. ' from' → logprob: -12.875340461730957
    8. '   ' → logprob: -13.500340461730957
    9. 'def' → logprob: -13.875340461730957
    10. '#' → logprob: -13.875340461730957

Token 851: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07882986217737198
    2. 'import' → logprob: -2.953829765319824
    3. 'dist' → logprob: -4.078829765319824
    4. 'from' → logprob: -5.203829765319824
    5. 'start' → logprob: -7.453829765319824
    6. 'visited' → logprob: -7.953829765319824
    7. 'queue' → logprob: -8.703829765319824
    8. '#' (adapté à ' #') → logprob: -9.703829765319824
    9. ' import' → logprob: -10.203829765319824
    10. 'distance' → logprob: -11.578829765319824

Token 852: ' non' (ID: 2893)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.38223040103912354
    2. 'import' → logprob: -1.7572304010391235
    3. 'dist' → logprob: -2.132230281829834
    4. 'from' → logprob: -3.882230281829834
    5. 'visited' → logprob: -5.882230281829834
    6. 'start' → logprob: -6.507230281829834
    7. 'queue' → logprob: -6.757230281829834
    8. '#' → logprob: -8.632230758666992
    9. '```' → logprob: -8.632230758666992
    10. ' import' → logprob: -10.257230758666992

Token 853: '-mo' (ID: 194634)
  Prédit: '-mo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-mo' → logprob: -0.013018688187003136
    2. ' -' → logprob: -5.388018608093262
    3. '-' → logprob: -5.513018608093262
    4. '   ' → logprob: -6.138018608093262
    5. '_' → logprob: -6.638018608093262
    6. '_-' → logprob: -8.138018608093262
    7. '-_' → logprob: -8.263018608093262
    8. '       ' → logprob: -9.013018608093262
    9. '[-' → logprob: -10.388018608093262
    10. '-)' → logprob: -10.763018608093262

Token 854: 'at' (ID: 266)
  Prédit: 'at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.2679020166397095
    2. '-at' → logprob: -1.5179020166397095
    3. 't' → logprob: -4.39290189743042
    4. '-' → logprob: -6.26790189743042
    5. '-t' → logprob: -7.01790189743042
    6. '_at' → logprob: -8.142902374267578
    7. '_' → logprob: -9.392902374267578
    8. ' -' → logprob: -9.392902374267578
    9. '-_' → logprob: -10.267902374267578
    10. '_t' → logprob: -10.517902374267578

Token 855: '->' (ID: 609)
  Prédit: '->'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '->' → logprob: -0.0007817533914931118
    2. ' ->' → logprob: -7.625781536102295
    3. '-' → logprob: -8.500782012939453
    4. '→' → logprob: -10.375782012939453
    5. '->_' → logprob: -10.750782012939453
    6. '-to' → logprob: -11.250782012939453
    7. '-->' → logprob: -12.000782012939453
    8. '#' → logprob: -12.625782012939453
    9. 'to' → logprob: -12.875782012939453
    10. '>' → logprob: -13.375782012939453

Token 856: 'mo' (ID: 3690)
  Prédit: 'non'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'non' → logprob: -0.5238629579544067
    2. 'mo' → logprob: -0.8988629579544067
    3. 'moor' → logprob: -8.148862838745117
    4. '#' → logprob: -8.898862838745117
    5. '-' → logprob: -9.773862838745117
    6. ' non' → logprob: -10.523862838745117
    7. '-mo' → logprob: -10.648862838745117
    8. '_' → logprob: -10.898862838745117
    9. ' moat' → logprob: -10.898862838745117
    10. '```' → logprob: -11.023862838745117

Token 857: 'at' (ID: 266)
  Prédit: 'at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -2.4153549020411447e-05
    2. 'a' → logprob: -12.00002384185791
    3. '-at' → logprob: -12.25002384185791
    4. '	at' → logprob: -12.37502384185791
    5. '-' → logprob: -12.87502384185791
    6. ' at' → logprob: -13.62502384185791
    7. '(at' → logprob: -14.12502384185791
    8. '_at' → logprob: -14.37502384185791
    9. '
' → logprob: -14.37502384185791
    10. 'ат' → logprob: -14.87502384185791

Token 858: ' has' (ID: 853)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25199469923973083
    2. '=' → logprob: -1.8769947290420532
    3. ' transition' → logprob: -3.6269946098327637
    4. ':' → logprob: -3.8769946098327637
    5. ' or' → logprob: -4.626994609832764
    6. 'transition' → logprob: -5.751994609832764
    7. ',' → logprob: -6.376994609832764
    8. ' transitions' → logprob: -6.501994609832764
    9. ' is' → logprob: -6.626994609832764
    10. ' ->' → logprob: -7.001994609832764

Token 859: ' cost' (ID: 3097)
  Prédit: ' cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cost' → logprob: -0.6962485909461975
    2. 'cost' → logprob: -0.6962485909461975
    3. '0' → logprob: -5.821248531341553
    4. 'no' → logprob: -10.321249008178711
    5. ' a' → logprob: -10.446249008178711
    6. 'a' → logprob: -10.821249008178711
    7. ' no' → logprob: -11.071249008178711
    8. '_cost' → logprob: -11.571249008178711
    9. 'weight' → logprob: -11.696249008178711
    10. ' ' → logprob: -11.696249008178711

Token 860: ' ' (ID: 220)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08047130703926086
    2. ' =' → logprob: -2.7054712772369385
    3. '0' → logprob: -4.580471515655518
    4. '1' → logprob: -8.83047103881836
    5. ' ' → logprob: -9.45547103881836
    6. '=
' → logprob: -13.45547103881836
    7. '       ' → logprob: -13.70547103881836
    8. '```' → logprob: -14.20547103881836
    9. '   ' → logprob: -14.70547103881836
    10. '`' → logprob: -15.20547103881836

Token 861: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.018457073718309402
    2. '1' → logprob: -4.393456935882568
    3. '=' → logprob: -5.143456935882568
    4. ' ' → logprob: -9.518457412719727
    5. ' =' → logprob: -11.268457412719727
    6. '       ' → logprob: -13.393457412719727
    7. '   ' → logprob: -13.518457412719727
    8. ',' → logprob: -13.643457412719727
    9. '```' → logprob: -14.393457412719727
    10. '`' → logprob: -14.768457412719727

Token 862: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009095247834920883
    2. '
' → logprob: -4.884095191955566
    3. '        
' → logprob: -7.509095191955566
    4. ',' → logprob: -8.759095191955566
    5. 'import' → logprob: -8.884095191955566
    6. 'def' → logprob: -9.009095191955566
    7. 'queue' → logprob: -9.134095191955566
    8. 'dist' → logprob: -9.384095191955566
    9. '```' → logprob: -9.384095191955566
    10. '   ' → logprob: -10.009095191955566

Token 863: ' entering' (ID: 25605)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2155531644821167
    2. 'def' → logprob: -3.2155532836914062
    3. 'import' → logprob: -3.7155532836914062
    4. 'visited' → logprob: -3.7155532836914062
    5. 'dist' → logprob: -3.9655532836914062
    6. ' visited' → logprob: -4.340553283691406
    7. ' dist' → logprob: -4.340553283691406
    8. ' queue' → logprob: -4.715553283691406
    9. ' def' → logprob: -4.715553283691406
    10. ' import' → logprob: -5.090553283691406

Token 864: ' moat' (ID: 152750)
  Prédit: 'mo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mo' → logprob: -0.2687339186668396
    2. 'a' → logprob: -1.5187339782714844
    3. ' moat' → logprob: -4.768733978271484
    4. ' a' → logprob: -5.643733978271484
    5. 'moor' → logprob: -6.268733978271484
    6. 'the' → logprob: -7.268733978271484
    7. '```' → logprob: -7.893733978271484
    8. 'non' → logprob: -8.268733978271484
    9. 'def' → logprob: -8.393733978271484
    10. ' mo' → logprob: -8.518733978271484

Token 865: ' first' (ID: 1577)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06295890361070633
    2. ',' → logprob: -4.187958717346191
    3. 'def' → logprob: -5.062958717346191
    4. '.' → logprob: -5.062958717346191
    5. '
' → logprob: -5.312958717346191
    6. ')' → logprob: -5.437958717346191
    7. 'import' → logprob: -6.187958717346191
    8. '   ' → logprob: -6.312958717346191
    9. '        
' → logprob: -6.437958717346191
    10. 'visited' → logprob: -6.437958717346191

Token 866: ' time' (ID: 1058)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05820303037762642
    2. '
' → logprob: -2.9332029819488525
    3. ')' → logprob: -7.308203220367432
    4. '   ' → logprob: -7.808203220367432
    5. '        
' → logprob: -8.058202743530273
    6. '```' → logprob: -8.308202743530273
    7. ',' → logprob: -8.558202743530273
    8. '
' → logprob: -8.558202743530273
    9. 'def' → logprob: -8.683202743530273
    10. 'from' → logprob: -9.183202743530273

Token 867: ' costs' (ID: 8959)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.021035192534327507
    2. '
' → logprob: -4.271035194396973
    3. ',' → logprob: -6.271035194396973
    4. 'import' → logprob: -7.021035194396973
    5. 'visited' → logprob: -7.396035194396973
    6. '```' → logprob: -7.396035194396973
    7. 'dist' → logprob: -7.521035194396973
    8. 'def' → logprob: -7.771035194396973
    9. '        
' → logprob: -7.896035194396973
    10. 'queue' → logprob: -8.646035194396973

Token 868: ' nothing' (ID: 6939)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006644918117672205
    2. '1' → logprob: -5.1316447257995605
    3. ' ' → logprob: -7.2566447257995605
    4. '```' → logprob: -12.256645202636719
    5. '   ' → logprob: -12.756645202636719
    6. '=' → logprob: -14.631645202636719
    7. '`' → logprob: -14.819145202636719
    8. ')' → logprob: -15.569145202636719
    9. '.' → logprob: -15.694145202636719
    10. '[' → logprob: -15.694145202636719

Token 869: ' except' (ID: 6384)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00469913799315691
    2. '
' → logprob: -5.379699230194092
    3. '        
' → logprob: -10.629698753356934
    4. 'from' → logprob: -11.004698753356934
    5. 'import' → logprob: -11.629698753356934
    6. '```' → logprob: -11.629698753356934
    7. 'queue' → logprob: -11.754698753356934
    8. ',' → logprob: -12.629698753356934
    9. '#' → logprob: -13.254698753356934
    10. 'visited' → logprob: -13.754698753356934

Token 870: ' next' (ID: 2613)
  Prédit: 'when'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'when' → logprob: -1.09223473072052
    2. 'moving' → logprob: -1.71723473072052
    3. 'the' → logprob: -1.96723473072052
    4. ' when' → logprob: -2.5922346115112305
    5. 'transition' → logprob: -2.7172346115112305
    6. ' the' → logprob: -2.7172346115112305
    7. '0' → logprob: -3.3422346115112305
    8. ' moving' → logprob: -3.9672346115112305
    9. 'starting' → logprob: -4.3422346115112305
    10. 'that' → logprob: -4.3422346115112305

Token 871: ' climbing' (ID: 47637)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'time' → logprob: -1.2004178762435913
    2. 'cl' → logprob: -1.4504178762435913
    3. 'mo' → logprob: -1.8254178762435913
    4. 'move' → logprob: -2.450417995452881
    5. 'transition' → logprob: -3.075417995452881
    6. 'step' → logprob: -3.200417995452881
    7. 'token' → logprob: -3.200417995452881
    8. 'non' → logprob: -3.950417995452881
    9. 'movement' → logprob: -4.325417995452881
    10. 'steps' → logprob: -4.825417995452881

Token 872: ' up' (ID: 869)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004020576365292072
    2. '```' → logprob: -6.629020690917969
    3. '
' → logprob: -6.754020690917969
    4. 'import' → logprob: -8.004020690917969
    5. ',' → logprob: -8.504020690917969
    6. 'visited' → logprob: -8.754020690917969
    7. 'queue' → logprob: -8.879020690917969
    8. '#' → logprob: -8.879020690917969
    9. '        
' → logprob: -9.004020690917969
    10. 'dist' → logprob: -9.004020690917969

Token 873: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009660111390985548
    2. 'import' → logprob: -7.7509660720825195
    3. 'dist' → logprob: -8.75096607208252
    4. 'queue' → logprob: -9.00096607208252
    5. '```' → logprob: -9.12596607208252
    6. 'visited' → logprob: -10.00096607208252
    7. 'from' → logprob: -10.37596607208252
    8. '        
' → logprob: -11.37596607208252
    9. '#' → logprob: -11.50096607208252
    10. ',' → logprob: -11.87596607208252

Token 874: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003374886582605541
    2. 'import' → logprob: -9.125337600708008
    3. 'dist' → logprob: -9.125337600708008
    4. 'from' → logprob: -10.125337600708008
    5. '```' → logprob: -10.125337600708008
    6. 'visited' → logprob: -11.125337600708008
    7. 'queue' → logprob: -11.250337600708008
    8. '   ' → logprob: -12.125337600708008
    9. '
' → logprob: -13.125337600708008
    10. '#' → logprob: -13.625337600708008

Token 875: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2366582155227661
    2. 'dist' → logprob: -1.7366582155227661
    3. 'visited' → logprob: -4.361658096313477
    4. 'queue' → logprob: -4.486658096313477
    5. 'import' → logprob: -5.486658096313477
    6. 'from' → logprob: -5.611658096313477
    7. 'start' → logprob: -6.361658096313477
    8. '#' (adapté à ' #') → logprob: -7.236658096313477
    9. 'distance' → logprob: -9.361658096313477
    10. '```' → logprob: -9.611658096313477

Token 876: ' So' (ID: 2632)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.3141041696071625
    2. 'import' → logprob: -1.5641041994094849
    3. 'from' → logprob: -3.6891040802001953
    4. '       ' → logprob: -4.314104080200195
    5. 'visited' → logprob: -4.439104080200195
    6. 'queue' → logprob: -5.439104080200195
    7. '#' → logprob: -5.814104080200195
    8. 'start' → logprob: -6.314104080200195
    9. 'def' → logprob: -7.939104080200195
    10. 'INF' → logprob: -8.439104080200195

Token 877: ' climbing' (ID: 47637)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6493526697158813
    2. 'from' → logprob: -1.3993526697158813
    3. 'import' → logprob: -2.274352550506592
    4. 'dist' → logprob: -2.524352550506592
    5. 'queue' → logprob: -3.649352550506592
    6. ' from' → logprob: -5.399352550506592
    7. 'visited' → logprob: -5.399352550506592
    8. '#' → logprob: -5.899352550506592
    9. ' import' → logprob: -6.024352550506592
    10. ' queue' → logprob: -6.274352550506592

Token 878: ' up' (ID: 869)
  Prédit: ' up'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' up' → logprob: -0.3683163821697235
    2. '_' → logprob: -2.118316411972046
    3. '_up' → logprob: -2.743316411972046
    4. 'up' → logprob: -2.868316411972046
    5. 'out' → logprob: -3.743316411972046
    6. ' out' → logprob: -4.118316173553467
    7. '_out' → logprob: -4.118316173553467
    8. ' _' → logprob: -5.743316173553467
    9. 'from' → logprob: -6.618316173553467
    10. '_cost' → logprob: -6.868316173553467

Token 879: ' =' (ID: 314)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.945780873298645
    2. ' is' → logprob: -1.320780873298645
    3. ' =' → logprob: -2.8207807540893555
    4. '=' → logprob: -2.9457807540893555
    5. ' from' → logprob: -2.9457807540893555
    6. 'out' → logprob: -3.6957807540893555
    7. ')' → logprob: -3.6957807540893555
    8. 'is' → logprob: -3.8207807540893555
    9. '.' → logprob: -4.1957807540893555
    10. 'cost' → logprob: -4.4457807540893555

Token 880: ' transitions' (ID: 59824)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0027612484991550446
    2. ' ' → logprob: -7.252761363983154
    3. 'mo' → logprob: -7.377761363983154
    4. 'int' → logprob: -8.127760887145996
    5. 'from' → logprob: -8.252760887145996
    6. 'self' → logprob: -8.752760887145996
    7. '0' → logprob: -8.877760887145996
    8. '(' → logprob: -9.002760887145996
    9. '(lambda' → logprob: -9.127760887145996
    10. 'lambda' → logprob: -9.252760887145996

Token 881: ' from' (ID: 591)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.6258628964424133
    2. ' =' → logprob: -1.2508628368377686
    3. ' from' → logprob: -2.3758628368377686
    4. '=' → logprob: -2.7508628368377686
    5. '   ' → logprob: -5.500863075256348
    6. '       ' → logprob: -6.000863075256348
    7. ')' → logprob: -6.250863075256348
    8. ',' → logprob: -6.500863075256348
    9. ' between' → logprob: -6.500863075256348
    10. '    ' → logprob: -6.750863075256348

Token 882: ' '#'' (ID: 139870)
  Prédit: ''#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''#' → logprob: -0.8478145003318787
    2. 'mo' → logprob: -0.9728145003318787
    3. ' '#'' → logprob: -2.2228145599365234
    4. ''' → logprob: -3.7228145599365234
    5. ' mo' → logprob: -4.222814559936523
    6. ' moat' → logprob: -4.472814559936523
    7. '`' → logprob: -5.222814559936523
    8. '('#' → logprob: -5.347814559936523
    9. '"#' → logprob: -5.847814559936523
    10. 'self' → logprob: -6.097814559936523

Token 883: ' cell' (ID: 4206)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.11113031208515167
    2. ' ->' → logprob: -3.7361302375793457
    3. '->' → logprob: -3.9861302375793457
    4. '   ' → logprob: -4.361130237579346
    5. ' and' → logprob: -4.861130237579346
    6. ')' → logprob: -4.986130237579346
    7. '       ' → logprob: -5.236130237579346
    8. 'to' → logprob: -5.361130237579346
    9. '"' → logprob: -5.486130237579346
    10. ',' → logprob: -5.611130237579346

Token 884: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2550773024559021
    2. '   ' → logprob: -2.880077362060547
    3. ')' → logprob: -3.380077362060547
    4. ',' → logprob: -3.505077362060547
    5. ' =' → logprob: -3.755077362060547
    6. ' to' → logprob: -4.005077362060547
    7. 'from' → logprob: -4.380077362060547
    8. ' from' → logprob: -4.505077362060547
    9. '.' → logprob: -5.630077362060547
    10. 's' → logprob: -5.880077362060547

Token 885: ' '.'' (ID: 64762)
  Prédit: ''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''.' → logprob: -0.051154762506484985
    2. 'non' → logprob: -3.801154851913452
    3. ''' → logprob: -4.301154613494873
    4. 'a' → logprob: -4.551154613494873
    5. ''a' → logprob: -6.926154613494873
    6. ' '.'' → logprob: -6.926154613494873
    7. 'any' → logprob: -7.926154613494873
    8. ' a' → logprob: -8.301155090332031
    9. ' non' → logprob: -8.676155090332031
    10. '.' → logprob: -9.176155090332031

Token 886: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.10210253298282623
    2. ' cell' → logprob: -2.727102518081665
    3. 'or' → logprob: -4.227102756500244
    4. 'cell' → logprob: -5.102102756500244
    5. ')' → logprob: -5.227102756500244
    6. '       ' → logprob: -6.977102756500244
    7. ' (' → logprob: -6.977102756500244
    8. ',' → logprob: -6.977102756500244
    9. ' and' → logprob: -7.352102756500244
    10. '   ' → logprob: -7.602102756500244

Token 887: ' '&' (ID: 35856)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.04320813715457916
    2. ''#' → logprob: -3.168208122253418
    3. ' '&' → logprob: -9.293208122253418
    4. '"&' → logprob: -10.168208122253418
    5. '('&' → logprob: -10.293208122253418
    6. '&' → logprob: -11.168208122253418
    7. ' '#'' → logprob: -12.418208122253418
    8. '`' → logprob: -12.793208122253418
    9. ''or' → logprob: -13.043208122253418
    10. '   ' → logprob: -13.168208122253418

Token 888: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.7890055179595947
    2. 'cell' → logprob: -0.9140055179595947
    3. ' cell' → logprob: -3.0390055179595947
    4. ')' → logprob: -3.0390055179595947
    5. '')' → logprob: -3.1640055179595947
    6. '.' → logprob: -6.539005279541016
    7. '']' → logprob: -6.789005279541016
    8. ''.' → logprob: -7.289005279541016
    9. '<|end|>' → logprob: -7.539005279541016
    10. ''),' → logprob: -7.664005279541016

Token 889: ' cell' (ID: 4206)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004749915096908808
    2. '
' → logprob: -6.379749774932861
    3. ',' → logprob: -6.629749774932861
    4. ')' → logprob: -8.50475025177002
    5. '        
' → logprob: -8.62975025177002
    6. 'import' → logprob: -9.00475025177002
    7. '```' → logprob: -9.00475025177002
    8. ':' → logprob: -9.12975025177002
    9. '   ' → logprob: -9.12975025177002
    10. '.' → logprob: -9.12975025177002

Token 890: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005309910629875958
    2. '
' → logprob: -9.250531196594238
    3. 'queue' → logprob: -9.250531196594238
    4. 'import' → logprob: -9.375531196594238
    5. '        
' → logprob: -9.875531196594238
    6. '```' → logprob: -9.875531196594238
    7. ',' → logprob: -10.125531196594238
    8. ' queue' → logprob: -10.250531196594238
    9. 'from' → logprob: -11.000531196594238
    10. 'dist' → logprob: -11.875531196594238

Token 891: '        
' (ID: 3564)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003234262694604695
    2. 'queue' → logprob: -8.875323295593262
    3. 'dist' → logprob: -9.625323295593262
    4. 'visited' → logprob: -10.000323295593262
    5. ' queue' → logprob: -10.875323295593262
    6. '```' → logprob: -10.875323295593262
    7. 'import' → logprob: -11.125323295593262
    8. 'from' → logprob: -12.125323295593262
    9. 'start' → logprob: -12.625323295593262
    10. ' visited' → logprob: -13.000323295593262

Token 892: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008108832873404026
    2. 'dist' → logprob: -5.133108615875244
    3. 'import' → logprob: -7.133108615875244
    4. 'visited' → logprob: -7.508108615875244
    5. 'queue' → logprob: -7.633108615875244
    6. 'from' → logprob: -8.383109092712402
    7. 'start' → logprob: -9.508109092712402
    8. '```' → logprob: -11.133109092712402
    9. 'distance' → logprob: -11.883109092712402
    10. '   ' → logprob: -12.258109092712402

Token 893: ' #' (ID: 1069)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.7715001702308655
    2. 'import' → logprob: -1.5215001106262207
    3. 'from' → logprob: -1.5215001106262207
    4. 'queue' → logprob: -3.0215001106262207
    5. '       ' → logprob: -3.5215001106262207
    6. 'visited' → logprob: -3.8965001106262207
    7. 'start' → logprob: -7.146500110626221
    8. '#' (adapté à ' #') → logprob: -7.396500110626221
    9. 'heap' → logprob: -8.146500587463379
    10. 'cost' → logprob: -9.021500587463379

Token 894: ' Perform' (ID: 36780)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.5521599054336548
    2. 'queue' → logprob: -1.5521599054336548
    3. 'from' → logprob: -1.8021599054336548
    4. 'visited' → logprob: -3.3021597862243652
    5. 'import' → logprob: -5.427159786224365
    6. '#' → logprob: -6.052159786224365
    7. 'start' → logprob: -6.927159786224365
    8. '   ' → logprob: -7.052159786224365
    9. '       ' → logprob: -7.052159786224365
    10. 'dq' → logprob: -8.552160263061523

Token 895: ' D' (ID: 415)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.23637309670448303
    2. 'deque' → logprob: -1.8613730669021606
    3. 'b' → logprob: -3.48637318611145
    4. 'queue' → logprob: -5.236372947692871
    5. 'import' → logprob: -5.361372947692871
    6. ' deque' → logprob: -5.486372947692871
    7. '       ' → logprob: -5.736372947692871
    8. '0' → logprob: -6.361372947692871
    9. 'dq' → logprob: -6.736372947692871
    10. 'a' → logprob: -7.111372947692871

Token 896: 'ijkstra' (ID: 124290)
  Prédit: 'ijkstra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ijkstra' → logprob: -0.0888601765036583
    2. 'e' → logprob: -3.088860273361206
    3. '       ' → logprob: -3.838860273361206
    4. '   ' → logprob: -4.213860034942627
    5. 'ijk' → logprob: -6.463860034942627
    6. '```' → logprob: -8.338860511779785
    7. 'ef' → logprob: -8.588860511779785
    8. '      ' → logprob: -8.963860511779785
    9. '           ' → logprob: -8.963860511779785
    10. 'ij' → logprob: -9.338860511779785

Token 897: ' or' (ID: 503)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2529091536998749
    2. ' (' → logprob: -2.8779091835021973
    3. '       ' → logprob: -3.1279091835021973
    4. '<|end|>' → logprob: -3.2529091835021973
    5. '(
' → logprob: -3.8779091835021973
    6. '(queue' → logprob: -4.252909183502197
    7. '   ' → logprob: -4.502909183502197
    8. 'import' → logprob: -4.502909183502197
    9. '<|end|>' → logprob: -4.752909183502197
    10. '(self' → logprob: -4.877909183502197

Token 898: ' ' (ID: 220)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.27996814250946045
    2. '0' → logprob: -1.5299681425094604
    3. ' BFS' → logprob: -4.52996826171875
    4. 'b' → logprob: -4.65496826171875
    5. 'deque' → logprob: -5.27996826171875
    6. ' ' → logprob: -7.52996826171875
    7. '
' → logprob: -7.90496826171875
    8. '       ' → logprob: -8.15496826171875
    9. ' deque' → logprob: -8.52996826171875
    10. '```' → logprob: -8.52996826171875

Token 899: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.26572486758232117
    2. 'B' → logprob: -2.1407248973846436
    3. 'deque' → logprob: -2.5157248973846436
    4. 'b' → logprob: -3.5157248973846436
    5. 'heap' → logprob: -5.6407246589660645
    6. '```' → logprob: -7.3907246589660645
    7. 'collections' → logprob: -7.7657246589660645
    8. 'import' → logprob: -7.8907246589660645
    9. '
' → logprob: -8.765725135803223
    10. ' deque' → logprob: -10.640725135803223

Token 900: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.01711738109588623
    2. ' -' → logprob: -4.517117500305176
    3. '1' → logprob: -6.642117500305176
    4. ' ' → logprob: -7.017117500305176
    5. '<|end|>' → logprob: -7.392117500305176
    6. '-based' → logprob: -7.767117500305176
    7. '0' → logprob: -7.892117500305176
    8. 'x' → logprob: -8.517117500305176
    9. '   ' → logprob: -8.642117500305176
    10. ' or' → logprob: -8.767117500305176

Token 901: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0047840881161391735
    2. 'one' → logprob: -5.379784107208252
    3. 'heap' → logprob: -10.129783630371094
    4. '0' → logprob: -10.254783630371094
    5. '_one' → logprob: -10.504783630371094
    6. 'One' → logprob: -11.129783630371094
    7. 'deque' → logprob: -11.504783630371094
    8. '-one' → logprob: -11.879783630371094
    9. '-' → logprob: -12.129783630371094
    10. '```' → logprob: -12.129783630371094

Token 902: ' BFS' (ID: 190016)
  Prédit: ' bfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bfs' → logprob: -0.46307456493377686
    2. ' BFS' → logprob: -1.0880745649337769
    3. 'b' → logprob: -3.8380746841430664
    4. 'B' → logprob: -4.463074684143066
    5. '```' → logprob: -8.213074684143066
    6. '-b' → logprob: -8.963074684143066
    7. '_b' → logprob: -9.338074684143066
    8. '-B' → logprob: -9.713074684143066
    9. '_B' → logprob: -9.838074684143066
    10. 'deque' → logprob: -10.338074684143066

Token 903: ' with' (ID: 483)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014661951921880245
    2. '
' → logprob: -5.13966178894043
    3. ':' → logprob: -5.88966178894043
    4. '(queue' → logprob: -6.26466178894043
    5. ',' → logprob: -7.51466178894043
    6. '        
' → logprob: -7.63966178894043
    7. 'queue' → logprob: -7.63966178894043
    8. '   ' → logprob: -7.76466178894043
    9. ' queue' → logprob: -8.38966178894043
    10. 'deque' → logprob: -8.38966178894043

Token 904: ' weights' (ID: 28460)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.0006498866132460535
    2. ' deque' → logprob: -7.500649929046631
    3. '0' → logprob: -9.750649452209473
    4. 'a' → logprob: -10.625649452209473
    5. 'Deque' → logprob: -12.500649452209473
    6. 'queue' → logprob: -12.875649452209473
    7. 'dq' → logprob: -13.000649452209473
    8. 'from' → logprob: -13.125649452209473
    9. 'self' → logprob: -14.000649452209473
    10. 'dist' → logprob: -14.000649452209473

Token 905: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.031337082386016846
    2. '(queue' → logprob: -4.781337261199951
    3. 'deque' → logprob: -5.531337261199951
    4. 'from' → logprob: -5.531337261199951
    5. '   ' → logprob: -5.781337261199951
    6. '(' → logprob: -6.031337261199951
    7. 'queue' → logprob: -6.781337261199951
    8. ' from' → logprob: -6.906337261199951
    9. '        
' → logprob: -7.406337261199951
    10. ',' → logprob: -7.531337261199951

Token 906: '0' (ID: 15)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.11392377316951752
    2. '[' → logprob: -3.7389237880706787
    3. 'from' → logprob: -3.7389237880706787
    4. 'deque' → logprob: -4.1139235496521
    5. ' =' → logprob: -4.2389235496521
    6. '0' → logprob: -5.2389235496521
    7. ':' → logprob: -5.3639235496521
    8. '(' → logprob: -5.4889235496521
    9. ' of' → logprob: -5.7389235496521
    10. '=[' → logprob: -6.2389235496521

Token 907: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.346113383769989
    2. '-' → logprob: -1.8461134433746338
    3. ',' → logprob: -2.596113443374634
    4. 'or' → logprob: -2.846113443374634
    5. '-or' → logprob: -7.096113204956055
    6. ' and' → logprob: -7.596113204956055
    7. 'and' → logprob: -8.471113204956055
    8. ')' → logprob: -9.221113204956055
    9. '/' → logprob: -9.596113204956055
    10. '	or' → logprob: -9.846113204956055

Token 908: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. '```' → logprob: -17.5000057220459
    4. '   ' → logprob: -19.8750057220459
    5. ' ' → logprob: -20.1250057220459
    6. '۱' → logprob: -20.5000057220459
    7. '`' → logprob: -21.1250057220459
    8. '
' → logprob: -21.2500057220459
    9. ',' → logprob: -21.2500057220459
    10. '=' → logprob: -21.5000057220459

Token 909: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -16.875
    3. '```' → logprob: -18.5
    4. '۱' → logprob: -20.5
    5. '१' → logprob: -21.5
    6. '১' → logprob: -21.625
    7. '`' → logprob: -21.875
    8. 'from' → logprob: -22.0
    9. '   ' → logprob: -22.125
    10. 'to' → logprob: -22.1875

Token 910: ' on' (ID: 402)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003376861335709691
    2. '
' → logprob: -5.8783769607543945
    3. ':' → logprob: -8.628376960754395
    4. ',' → logprob: -9.503376960754395
    5. '        
' → logprob: -9.503376960754395
    6. 'queue' → logprob: -9.503376960754395
    7. 'from' → logprob: -10.253376960754395
    8. 'dist' → logprob: -10.503376960754395
    9. ' queue' → logprob: -11.128376960754395
    10. '
' → logprob: -11.128376960754395

Token 911: ' edges' (ID: 22569)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.30487436056137085
    2. 'deque' → logprob: -2.4298744201660156
    3. ' deque' → logprob: -2.9298744201660156
    4. 'the' → logprob: -3.1798744201660156
    5. ' self' → logprob: -3.3048744201660156
    6. ' the' → logprob: -3.5548744201660156
    7. ' a' → logprob: -5.429874420166016
    8. '       ' → logprob: -5.804874420166016
    9. 'a' → logprob: -6.554874420166016
    10. '   ' → logprob: -6.804874420166016

Token 912: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0045599499717354774
    2. '
' → logprob: -6.5045599937438965
    3. ':' → logprob: -6.6295599937438965
    4. ',' → logprob: -6.7545599937438965
    5. '        
' → logprob: -8.129559516906738
    6. '<|end|>' → logprob: -10.379559516906738
    7. 'from' → logprob: -10.754559516906738
    8. '   ' → logprob: -10.754559516906738
    9. '  
' → logprob: -10.879559516906738
    10. '.' → logprob: -11.129559516906738

Token 913: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009429076453670859
    2. 'queue' → logprob: -7.250942707061768
    3. 'dist' → logprob: -9.250943183898926
    4. ' queue' → logprob: -10.375943183898926
    5. 'visited' → logprob: -10.625943183898926
    6. 'from' → logprob: -10.750943183898926
    7. 'start' → logprob: -11.250943183898926
    8. '
' → logprob: -11.625943183898926
    9. '```' → logprob: -11.875943183898926
    10. '   ' → logprob: -11.875943183898926

Token 914: ' from' (ID: 591)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004319741390645504
    2. 'dist' → logprob: -6.379319667816162
    3. ' queue' → logprob: -7.254319667816162
    4. 'queue' → logprob: -7.379319667816162
    5. ' dist' → logprob: -7.754319667816162
    6. 'from' (adapté à ' from') → logprob: -8.50432014465332
    7. 'visited' → logprob: -8.75432014465332
    8. ' visited' → logprob: -9.12932014465332
    9. '   ' → logprob: -9.25432014465332
    10. ' from' → logprob: -9.62932014465332

Token 915: ' collections' (ID: 22690)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'collections' → logprob: -5.848420551046729e-05
    2. ' collections' → logprob: -9.7500581741333
    3. 'heap' → logprob: -16.000059127807617
    4. 'collection' → logprob: -18.375059127807617
    5. 'typing' → logprob: -18.375059127807617
    6. '_' → logprob: -19.500059127807617
    7. 'queue' → logprob: -19.875059127807617
    8. 'collect' → logprob: -20.750059127807617
    9. 'deque' → logprob: -21.000059127807617
    10. '```' → logprob: -21.625059127807617

Token 916: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.001752295414917171
    2. 'from' → logprob: -7.5017523765563965
    3. '_import' → logprob: -8.126751899719238
    4. ' import' → logprob: -8.501751899719238
    5. 'deque' → logprob: -8.626751899719238
    6. 'collections' → logprob: -8.751751899719238
    7. '<|end|>' → logprob: -9.001751899719238
    8. '_token' → logprob: -10.251751899719238
    9. 'token' → logprob: -10.376751899719238
    10. '.' → logprob: -10.626751899719238

Token 917: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -5.872261317563243e-05
    2. ' deque' → logprob: -9.750059127807617
    3. 'de' → logprob: -15.250059127807617
    4. 'collections' → logprob: -16.375059127807617
    5. 'Deque' → logprob: -18.750059127807617
    6. 'double' → logprob: -19.125059127807617
    7. '```' → logprob: -19.875059127807617
    8. 'import' → logprob: -19.875059127807617
    9. '	de' → logprob: -20.375059127807617
    10. '`' → logprob: -20.625059127807617

Token 918: '
        
' (ID: 20417)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.036843813955783844
    2. '       ' → logprob: -4.036843776702881
    3. '

' → logprob: -4.536843776702881
    4. '        
' → logprob: -5.911843776702881
    5. 'queue' → logprob: -6.286843776702881
    6. '
' → logprob: -6.786843776702881
    7. 'deque' → logprob: -7.411843776702881
    8. '<|end|>' → logprob: -7.786843776702881
    9. '(queue' → logprob: -8.786844253540039
    10. ',' → logprob: -9.036844253540039

Token 919: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04646403342485428
    2. 'dist' → logprob: -3.171463966369629
    3. 'queue' → logprob: -6.046463966369629
    4. 'visited' → logprob: -7.171463966369629
    5. 'distance' → logprob: -8.921463966369629
    6. 'dp' → logprob: -10.921463966369629
    7. 'deque' → logprob: -10.921463966369629
    8. 'start' → logprob: -11.046463966369629
    9. '   ' → logprob: -11.171463966369629
    10. '        
' → logprob: -11.296463966369629

Token 920: ' #' (ID: 1069)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.008431835100054741
    2. 'queue' → logprob: -5.008431911468506
    3. 'cost' → logprob: -7.508431911468506
    4. 'distance' → logprob: -8.008431434631348
    5. '#' (adapté à ' #') → logprob: -8.383431434631348
    6. 'deque' → logprob: -8.508431434631348
    7. 'dq' → logprob: -8.508431434631348
    8. 'visited' → logprob: -9.258431434631348
    9. 'INF' → logprob: -10.383431434631348
    10. 'start' → logprob: -10.633431434631348

Token 921: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.009064060635864735
    2. 'queue' → logprob: -5.259064197540283
    3. 'visited' → logprob: -6.634064197540283
    4. ' dist' → logprob: -7.009064197540283
    5. 'distance' → logprob: -7.384064197540283
    6. 'cost' → logprob: -7.759064197540283
    7. '       ' → logprob: -8.259063720703125
    8. '   ' → logprob: -9.509063720703125
    9. '#' → logprob: -9.759063720703125
    10. 'start' → logprob: -9.884063720703125

Token 922: '[y' (ID: 34551)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.015319683589041233
    2. ':' → logprob: -4.76531982421875
    3. '=' → logprob: -5.01531982421875
    4. 's' → logprob: -10.14031982421875
    5. ' ' → logprob: -12.76531982421875
    6. ' :' → logprob: -13.64031982421875
    7. '   ' → logprob: -13.89031982421875
    8. '  ' → logprob: -14.51531982421875
    9. '```' → logprob: -15.14031982421875
    10. 'ances' → logprob: -15.51531982421875

Token 923: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.006296580191701651
    2. ']' → logprob: -5.131296634674072
    3. '       ' → logprob: -8.881296157836914
    4. ']=' → logprob: -9.131296157836914
    5. ' ][' → logprob: -10.381296157836914
    6. '   ' → logprob: -10.631296157836914
    7. '[y' → logprob: -10.631296157836914
    8. ',' → logprob: -11.506296157836914
    9. '=' → logprob: -11.881296157836914
    10. '][]' → logprob: -12.006296157836914

Token 924: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -2.248469718324486e-05
    2. ']' → logprob: -11.750022888183594
    3. ' x' → logprob: -11.750022888183594
    4. '][' → logprob: -12.500022888183594
    5. '
' → logprob: -13.875022888183594
    6. 'self' → logprob: -14.375022888183594
    7. '0' → logprob: -15.000022888183594
    8. '   ' → logprob: -15.250022888183594
    9. ',' → logprob: -16.000022888183594
    10. '       ' → logprob: -16.125022888183594

Token 925: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.008301319554448128
    2. '][' → logprob: -4.883301258087158
    3. ']=' → logprob: -7.508301258087158
    4. ' ]' → logprob: -9.758301734924316
    5. '       ' → logprob: -10.508301734924316
    6. ' =' → logprob: -10.633301734924316
    7. '=' → logprob: -10.883301734924316
    8. '[' → logprob: -12.258301734924316
    9. '][]' → logprob: -13.258301734924316
    10. ')' → logprob: -13.508301734924316

Token 926: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4741089344024658
    2. ' =' → logprob: -0.9741089344024658
    3. ':' → logprob: -10.974108695983887
    4. '=[' → logprob: -11.224108695983887
    5. '=[[' → logprob: -14.474108695983887
    6. ' =[' → logprob: -14.724108695983887
    7. '       ' → logprob: -16.224109649658203
    8. '=[]' → logprob: -16.224109649658203
    9. '=
' → logprob: -16.349109649658203
    10. '[' → logprob: -17.099109649658203

Token 927: ' minimal' (ID: 19957)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.12070932239294052
    2. '0' → logprob: -2.3707094192504883
    3. 'None' → logprob: -5.120709419250488
    4. '-' → logprob: -5.120709419250488
    5. 'self' → logprob: -5.620709419250488
    6. ' float' → logprob: -6.245709419250488
    7. '[' → logprob: -6.620709419250488
    8. 'int' → logprob: -7.745709419250488
    9. ' -' → logprob: -8.620709419250488
    10. ' ' → logprob: -8.995709419250488

Token 928: ' number' (ID: 2086)
  Prédit: 'cl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cl' → logprob: -0.49348941445350647
    2. ' number' → logprob: -1.243489384651184
    3. 'number' → logprob: -2.4934895038604736
    4. ' climbs' → logprob: -4.4934892654418945
    5. 'dist' → logprob: -6.4934892654418945
    6. '_cl' → logprob: -6.4934892654418945
    7. 'cost' → logprob: -6.4934892654418945
    8. '   ' → logprob: -6.7434892654418945
    9. '_number' → logprob: -8.243489265441895
    10. '       ' → logprob: -8.243489265441895

Token 929: ' of' (ID: 328)
  Prédit: 'of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'of' → logprob: -0.3273147940635681
    2. ' of' → logprob: -1.952314853668213
    3. '_of' → logprob: -2.327314853668213
    4. ']' → logprob: -4.202314853668213
    5. '[' → logprob: -4.702314853668213
    6. '[
' → logprob: -6.077314853668213
    7. '_' → logprob: -6.077314853668213
    8. '
' → logprob: -6.452314853668213
    9. '_tokens' → logprob: -6.452314853668213
    10. ')' → logprob: -6.952314853668213

Token 930: ' climbs' (ID: 149530)
  Prédit: 'cl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cl' → logprob: -0.00022356293629854918
    2. ' climbs' → logprob: -8.500223159790039
    3. 'times' → logprob: -11.000223159790039
    4. '   ' → logprob: -13.250223159790039
    5. '	cl' → logprob: -14.250223159790039
    6. '```' → logprob: -16.12522315979004
    7. 'trans' → logprob: -16.50022315979004
    8. 'clam' → logprob: -16.62522315979004
    9. ' ' → logprob: -16.75022315979004
    10. 'clips' → logprob: -16.87522315979004

Token 931: ' to' (ID: 316)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.022885169833898544
    2. '=' → logprob: -4.397885322570801
    3. '       ' → logprob: -4.772885322570801
    4. ':' → logprob: -7.647885322570801
    5. ' for' → logprob: -8.3978853225708
    6. '```' → logprob: -8.7728853225708
    7. '   ' → logprob: -9.0228853225708
    8. ' to' → logprob: -9.0228853225708
    9. 's' → logprob: -9.2728853225708
    10. ' required' → logprob: -9.3978853225708

Token 932: ' reach' (ID: 7627)
  Prédit: 'reach'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reach' → logprob: -0.00035143180866725743
    2. 'x' → logprob: -9.625351905822754
    3. '   ' → logprob: -9.625351905822754
    4. ' reach' → logprob: -9.750351905822754
    5. '[x' → logprob: -10.250351905822754
    6. 'get' → logprob: -10.500351905822754
    7. '[y' → logprob: -10.750351905822754
    8. '
' → logprob: -10.750351905822754
    9. 'y' → logprob: -11.000351905822754
    10. 'here' → logprob: -12.000351905822754

Token 933: ' (' (ID: 350)
  Prédit: '[y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -0.5292953848838806
    2. 'y' → logprob: -1.7792954444885254
    3. 'self' → logprob: -1.7792954444885254
    4. ' y' → logprob: -3.1542954444885254
    5. '(y' → logprob: -5.279295444488525
    6. ' self' → logprob: -5.279295444488525
    7. ' (' → logprob: -5.654295444488525
    8. ' [' → logprob: -5.654295444488525
    9. '[self' → logprob: -6.279295444488525
    10. '][' → logprob: -6.404295444488525

Token 934: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.07021985203027725
    2. 'y' → logprob: -2.6952197551727295
    3. ' y' → logprob: -8.945219993591309
    4. ' x' → logprob: -9.445219993591309
    5. ')' → logprob: -9.820219993591309
    6. ')x' → logprob: -11.695219993591309
    7. ')y' → logprob: -12.445219993591309
    8. ',' → logprob: -13.320219993591309
    9. '][' → logprob: -13.320219993591309
    10. ']' → logprob: -13.445219993591309

Token 935: ',y' (ID: 16103)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.7059634327888489
    2. ',y' → logprob: -1.080963373184204
    3. ',' → logprob: -1.830963373184204
    4. ')[' → logprob: -5.330963611602783
    5. ')][' → logprob: -7.080963611602783
    6. '[y' → logprob: -7.955963611602783
    7. '       ' → logprob: -8.455963134765625
    8. ',
' → logprob: -8.830963134765625
    9. ' ,' → logprob: -9.330963134765625
    10. ')' → logprob: -9.455963134765625

Token 936: ')
' (ID: 446)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.008646713569760323
    2. ']
' → logprob: -5.008646488189697
    3. '       ' → logprob: -6.633646488189697
    4. '][' → logprob: -7.883646488189697
    5. ')' → logprob: -9.258646965026855
    6. ' ]' → logprob: -9.758646965026855
    7. ']
' → logprob: -10.008646965026855
    8. '])' → logprob: -11.383646965026855
    9. ')]' → logprob: -11.383646965026855
    10. '   ' → logprob: -12.883646965026855

Token 937: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000925157277379185
    2. 'dist' → logprob: -8.250925064086914
    3. ' =' → logprob: -8.375925064086914
    4. ',' → logprob: -8.875925064086914
    5. '   ' → logprob: -9.625925064086914
    6. '        
' → logprob: -9.875925064086914
    7. ')' → logprob: -10.250925064086914
    8. ' dist' → logprob: -10.625925064086914
    9. '[' → logprob: -11.125925064086914
    10. '           ' → logprob: -11.125925064086914

Token 938: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.04635888338088989
    2. ' dist' → logprob: -3.296358823776245
    3. 'self' → logprob: -5.421359062194824
    4. '       ' → logprob: -5.796359062194824
    5. ' self' → logprob: -7.546359062194824
    6. '```' → logprob: -8.171359062194824
    7. '[' → logprob: -12.921359062194824
    8. '[
' → logprob: -12.921359062194824
    9. '``' → logprob: -13.296359062194824
    10. '
' → logprob: -13.671359062194824

Token 939: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014172914437949657
    2. '=' → logprob: -4.2641730308532715
    3. '=[' → logprob: -12.889172554016113
    4. ':' → logprob: -13.014172554016113
    5. '=[[' → logprob: -13.264172554016113
    6. ' =[' → logprob: -13.264172554016113
    7. '[' → logprob: -14.514172554016113
    8. ')' → logprob: -15.889172554016113
    9. '<|end|>' → logprob: -16.38917350769043
    10. '=[]' → logprob: -16.38917350769043

Token 940: ' [[' (ID: 9237)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.005316293332725763
    2. '[' → logprob: -5.255316257476807
    3. '[
' → logprob: -9.505316734313965
    4. ' [[' → logprob: -11.755316734313965
    5. ' [' → logprob: -17.13031578063965
    6. '[['' → logprob: -17.25531578063965
    7. '   ' → logprob: -17.75531578063965
    8. '{' → logprob: -18.75531578063965
    9. '[-' → logprob: -19.00531578063965
    10. '[self' → logprob: -19.13031578063965

Token 941: 'float' (ID: 7829)
  Prédit: 'float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.0004742831224575639
    2. 'None' → logprob: -7.750474452972412
    3. '-' → logprob: -10.250473976135254
    4. '10' → logprob: -11.750473976135254
    5. ' float' → logprob: -15.625473976135254
    6. '100' → logprob: -16.37547492980957
    7. 'int' → logprob: -16.75047492980957
    8. '999' → logprob: -18.00047492980957
    9. ' None' → logprob: -18.62547492980957
    10. '(float' → logprob: -18.87547492980957

Token 942: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -4.751746746478602e-05
    2. ''in' → logprob: -10.00004768371582
    3. ''' → logprob: -14.12504768371582
    4. '("' → logprob: -14.87504768371582
    5. ''s' → logprob: -15.12504768371582
    6. 'inf' → logprob: -15.25004768371582
    7. '(' → logprob: -15.50004768371582
    8. '   ' → logprob: -16.62504768371582
    9. '(in' → logprob: -17.50004768371582
    10. ''inc' → logprob: -17.87504768371582

Token 943: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -9.782141569303349e-05
    2. ''in' → logprob: -9.25009822845459
    3. ''' → logprob: -13.37509822845459
    4. 'in' → logprob: -16.125097274780273
    5. '_inf' → logprob: -18.250097274780273
    6. ''s' → logprob: -18.375097274780273
    7. ' inf' → logprob: -18.375097274780273
    8. 'info' → logprob: -19.125097274780273
    9. '-inf' → logprob: -19.750097274780273
    10. '('' → logprob: -20.000097274780273

Token 944: '')]' (ID: 94377)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.070109248161316
    2. '')]' → logprob: -1.070109248161316
    3. ')]' → logprob: -1.445109248161316
    4. '')' → logprob: -2.5701093673706055
    5. ']' → logprob: -6.8201093673706055
    6. '       ' → logprob: -8.070109367370605
    7. '   ' → logprob: -9.320109367370605
    8. ' )' → logprob: -9.320109367370605
    9. '           ' → logprob: -10.195109367370605
    10. ' ')' → logprob: -10.820109367370605

Token 945: ' *' (ID: 425)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.25202879309654236
    2. 'for' → logprob: -1.5020288228988647
    3. '           ' → logprob: -10.627028465270996
    4. '   ' → logprob: -11.127028465270996
    5. ']' → logprob: -11.252028465270996
    6. '	for' → logprob: -11.877028465270996
    7. '               ' → logprob: -12.377028465270996
    8. '       ' → logprob: -12.502028465270996
    9. ']*' → logprob: -12.502028465270996
    10. '            ' → logprob: -12.627028465270996

Token 946: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -5.061676347395405e-05
    2. '(self' → logprob: -10.50005054473877
    3. ' self' → logprob: -10.75005054473877
    4. '           ' → logprob: -13.87505054473877
    5. '       ' → logprob: -14.50005054473877
    6. '               ' → logprob: -16.625051498413086
    7. '   ' → logprob: -18.500051498413086
    8. '(' → logprob: -18.875051498413086
    9. '         ' → logprob: -18.875051498413086
    10. '                   ' → logprob: -19.000051498413086

Token 947: '.width' (ID: 11038)
  Prédit: '.width'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.width' → logprob: -0.006798140238970518
    2. 'width' → logprob: -5.006798267364502
    3. '.height' → logprob: -9.506797790527344
    4. 'self' → logprob: -12.381797790527344
    5. ' width' → logprob: -13.881797790527344
    6. '(width' → logprob: -14.006797790527344
    7. '	width' → logprob: -14.131797790527344
    8. '   ' → logprob: -14.381797790527344
    9. '       ' → logprob: -15.131797790527344
    10. 'cast' → logprob: -15.881797790527344

Token 948: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.02328786998987198
    2. 'for' → logprob: -3.773287773132324
    3. '           ' → logprob: -11.023287773132324
    4. '       ' → logprob: -11.898287773132324
    5. '	for' → logprob: -12.023287773132324
    6. '               ' → logprob: -12.398287773132324
    7. ']' → logprob: -13.273287773132324
    8. ')' → logprob: -13.398287773132324
    9. '        ' → logprob: -13.898287773132324
    10. '   ' → logprob: -13.898287773132324

Token 949: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.028622930869460106
    2. '_y' → logprob: -3.65362286567688
    3. ' _' → logprob: -6.278623104095459
    4. 'y' → logprob: -8.5286226272583
    5. '_range' → logprob: -9.4036226272583
    6. ' y' → logprob: -10.1536226272583
    7. '_x' → logprob: -10.4036226272583
    8. '_i' → logprob: -11.1536226272583
    9. '_=' → logprob: -11.2786226272583
    10. '_row' → logprob: -11.4036226272583

Token 950: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5217870473861694
    2. ' in' → logprob: -1.0217870473861694
    3. ' range' → logprob: -3.646787166595459
    4. 'in' → logprob: -3.896787166595459
    5. 'y' → logprob: -8.6467866897583
    6. ' y' → logprob: -11.6467866897583
    7. 'x' → logprob: -11.8967866897583
    8. '_range' → logprob: -13.0217866897583
    9. 'row' → logprob: -13.1467866897583
    10. '(range' → logprob: -13.1467866897583

Token 951: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -9.615255839889869e-05
    2. ' range' → logprob: -9.250096321105957
    3. '(range' → logprob: -18.50009536743164
    4. '   ' → logprob: -18.87509536743164
    5. '	range' → logprob: -19.00009536743164
    6. '_range' → logprob: -19.50009536743164
    7. '.range' → logprob: -20.37509536743164
    8. '[' → logprob: -21.37509536743164
    9. '
' → logprob: -21.50009536743164
    10. ' ' → logprob: -21.50009536743164

Token 952: '(self' (ID: 2402)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.011272047646343708
    2. ' range' → logprob: -4.511271953582764
    3. 'self' → logprob: -8.636272430419922
    4. '(range' → logprob: -10.011272430419922
    5. '   ' → logprob: -14.386272430419922
    6. '	range' → logprob: -14.761272430419922
    7. '(self' → logprob: -15.511272430419922
    8. '_range' → logprob: -15.636272430419922
    9. ' self' → logprob: -16.386272430419922
    10. '.range' → logprob: -16.636272430419922

Token 953: '.height' (ID: 11682)
  Prédit: 'height'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'height' → logprob: -0.2519543766975403
    2. '.height' → logprob: -1.5019543170928955
    3. 'width' → logprob: -11.751954078674316
    4. '.width' → logprob: -12.501954078674316
    5. ' height' → logprob: -12.501954078674316
    6. ')' → logprob: -13.001954078674316
    7. 'cast' → logprob: -13.001954078674316
    8. '   ' → logprob: -13.251954078674316
    9. '))' → logprob: -14.251954078674316
    10. 'self' → logprob: -14.501954078674316

Token 954: ')]
' (ID: 11587)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.12761738896369934
    2. ')]' → logprob: -2.127617359161377
    3. ')' → logprob: -8.127617835998535
    4. '       ' → logprob: -8.252617835998535
    5. ']
' → logprob: -9.002617835998535
    6. ' ]' → logprob: -12.627617835998535
    7. '   ' → logprob: -12.877617835998535
    8. ')]
' → logprob: -13.127617835998535
    9. ']
' → logprob: -14.627617835998535
    10. '           ' → logprob: -14.877617835998535

Token 955: '        
' (ID: 3564)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0023298633750528097
    2. 'queue' → logprob: -6.7523298263549805
    3. 'deque' → logprob: -7.0023298263549805
    4. ' queue' → logprob: -9.37732982635498
    5. ' deque' → logprob: -9.62732982635498
    6. '        
' → logprob: -10.25232982635498
    7. 'dq' → logprob: -11.00232982635498
    8. '```' → logprob: -11.50232982635498
    9. 'de' → logprob: -11.75232982635498
    10. 'que' → logprob: -11.75232982635498

Token 956: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08633144199848175
    2. 'queue' → logprob: -2.586331367492676
    3. 'deque' → logprob: -5.086331367492676
    4. 'dq' → logprob: -7.461331367492676
    5. ' queue' → logprob: -7.961331367492676
    6. 'que' → logprob: -9.211331367492676
    7. ' deque' → logprob: -9.336331367492676
    8. 'for' → logprob: -9.961331367492676
    9. '```' → logprob: -10.836331367492676
    10. '	queue' → logprob: -11.086331367492676

Token 957: ' dq' (ID: 164235)
  Prédit: 'dq'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dq' (adapté à ' dq') → logprob: -0.08059240132570267
    2. 'queue' → logprob: -2.580592393875122
    3. 'q' → logprob: -6.830592632293701
    4. 'deque' → logprob: -7.580592632293701
    5. ' dq' → logprob: -9.330592155456543
    6. 'que' → logprob: -11.330592155456543
    7. 'from' → logprob: -12.080592155456543
    8. 'de' → logprob: -13.205592155456543
    9. 'd' → logprob: -13.455592155456543
    10. '   ' → logprob: -14.955592155456543

Token 958: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.054967932403087616
    2. '=' → logprob: -2.9299678802490234
    3. ' ' → logprob: -10.304967880249023
    4. '<|end|>' → logprob: -10.804967880249023
    5. '=[]' → logprob: -11.429967880249023
    6. '        ' → logprob: -12.554967880249023
    7. ')' → logprob: -12.929967880249023
    8. '.append' → logprob: -13.054967880249023
    9. '<|end|>' → logprob: -13.804967880249023
    10. ':' → logprob: -13.804967880249023

Token 959: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.0001584850688232109
    2. ' deque' → logprob: -8.750158309936523
    3. 'Deque' → logprob: -17.875158309936523
    4. 'collections' → logprob: -18.375158309936523
    5. '   ' → logprob: -19.875158309936523
    6. 'double' → logprob: -21.625158309936523
    7. '```' → logprob: -21.750158309936523
    8. 'dq' → logprob: -22.125158309936523
    9. '       ' → logprob: -22.875158309936523
    10. '	de' → logprob: -23.875158309936523

Token 960: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0014158309204503894
    2. '()
' → logprob: -6.626415729522705
    3. '(' → logprob: -10.376416206359863
    4. '([(' → logprob: -10.376416206359863
    5. '()

' → logprob: -11.626416206359863
    6. '([]' → logprob: -12.251416206359863
    7. '(self' → logprob: -12.251416206359863
    8. '[]' → logprob: -12.501416206359863
    9. '([
' → logprob: -14.251416206359863
    10. '((' → logprob: -14.251416206359863

Token 961: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009050302323885262
    2. 'for' → logprob: -7.5009050369262695
    3. ' for' → logprob: -8.00090503692627
    4. '        
' → logprob: -11.37590503692627
    5. '<|end|>' → logprob: -12.75090503692627
    6. '```' → logprob: -14.50090503692627
    7. '   ' → logprob: -14.75090503692627
    8. '#' → logprob: -15.00090503692627
    9. '	for' → logprob: -15.25090503692627
    10. '[' → logprob: -15.50090503692627

Token 962: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7445168495178223
    2. 'for' → logprob: -0.7445168495178223
    3. '       ' → logprob: -2.9945168495178223
    4. '	for' → logprob: -11.994516372680664
    5. '   ' → logprob: -13.244516372680664
    6. '        
' → logprob: -13.744516372680664
    7. '
' → logprob: -13.994516372680664
    8. '```' → logprob: -14.244516372680664
    9. ' ' → logprob: -15.244516372680664
    10. 'For' → logprob: -15.619516372680664

Token 963: ' Initialize' (ID: 19496)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0020547392778098583
    2. ' for' → logprob: -6.502054691314697
    3. '       ' → logprob: -7.502054691314697
    4. '#' → logprob: -15.502055168151855
    5. '	for' → logprob: -16.87705421447754
    6. '   ' → logprob: -17.50205421447754
    7. '```' → logprob: -19.75205421447754
    8. '_for' → logprob: -20.00205421447754
    9. 'For' → logprob: -20.25205421447754
    10. 'from' → logprob: -20.37705421447754

Token 964: ' deque' (ID: 90347)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5915614366531372
    2. 'for' → logprob: -0.9665614366531372
    3. '       ' → logprob: -2.7165613174438477
    4. '	for' → logprob: -11.216561317443848
    5. 'self' → logprob: -11.966561317443848
    6. '        
' → logprob: -12.091561317443848
    7. '#' → logprob: -13.091561317443848
    8. ' with' → logprob: -13.091561317443848
    9. '_for' → logprob: -13.341561317443848
    10. 'queue' → logprob: -13.466561317443848

Token 965: ' with' (ID: 483)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1091180369257927
    2. ' for' → logprob: -2.7341179847717285
    3. ' with' → logprob: -3.3591179847717285
    4. 'for' → logprob: -6.1091179847717285
    5. 'with' → logprob: -7.2341179847717285
    6. ':' → logprob: -7.8591179847717285
    7. '        
' → logprob: -8.984118461608887
    8. ',' → logprob: -9.734118461608887
    9. '#' → logprob: -10.234118461608887
    10. '()' → logprob: -11.359118461608887

Token 966: ' all' (ID: 722)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.16902968287467957
    2. 'for' → logprob: -2.794029712677002
    3. 'self' → logprob: -3.294029712677002
    4. '(self' → logprob: -4.419029712677002
    5. '(x' → logprob: -4.544029712677002
    6. ' (' → logprob: -5.044029712677002
    7. '[
' → logprob: -5.544029712677002
    8. '((' → logprob: -5.544029712677002
    9. 'cells' → logprob: -6.044029712677002
    10. 'outside' → logprob: -6.044029712677002

Token 967: ' outside' (ID: 7539)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.8711879849433899
    2. '(self' → logprob: -1.3711879253387451
    3. 'outside' → logprob: -1.3711879253387451
    4. ' self' → logprob: -4.246188163757324
    5. 'start' → logprob: -4.746188163757324
    6. '(' → logprob: -4.746188163757324
    7. ' outside' → logprob: -4.871188163757324
    8. ' (' → logprob: -5.121188163757324
    9. 'out' → logprob: -5.246188163757324
    10. 'cells' → logprob: -5.371188163757324

Token 968: ' starting' (ID: 8601)
  Prédit: '_cells'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_cells' → logprob: -0.046480417251586914
    2. 'cells' → logprob: -3.171480417251587
    3. ' cells' → logprob: -5.921480178833008
    4. '_points' → logprob: -8.046480178833008
    5. '_positions' → logprob: -8.796480178833008
    6. 'points' → logprob: -9.171480178833008
    7. 'positions' → logprob: -9.671480178833008
    8. 'for' → logprob: -10.671480178833008
    9. '```' → logprob: -10.796480178833008
    10. 'Cells' → logprob: -10.796480178833008

Token 969: ' cells' (ID: 11242)
  Prédit: 'cells'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cells' → logprob: -0.22737708687782288
    2. '_cells' → logprob: -1.9773770570755005
    3. 'points' → logprob: -3.47737717628479
    4. 'positions' → logprob: -3.47737717628479
    5. '_points' → logprob: -6.227376937866211
    6. ' cells' → logprob: -7.477376937866211
    7. '_positions' → logprob: -7.602376937866211
    8. ' points' → logprob: -9.727376937866211
    9. ' positions' → logprob: -9.852376937866211
    10. 'Cells' → logprob: -12.352376937866211

Token 970: ' with' (ID: 483)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.49485647678375244
    2. ' for' → logprob: -0.9948564767837524
    3. 'for' → logprob: -3.994856357574463
    4. ' with' → logprob: -7.494856357574463
    5. ':' → logprob: -7.869856357574463
    6. ',' → logprob: -8.244856834411621
    7. '
' → logprob: -8.494856834411621
    8. '        
' → logprob: -8.744856834411621
    9. ' in' → logprob: -8.869856834411621
    10. '<|end|>' → logprob: -9.119856834411621

Token 971: ' cost' (ID: 3097)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.09151730686426163
    2. 'dist' → logprob: -2.466517210006714
    3. 'cost' → logprob: -6.716517448425293
    4. 'cl' → logprob: -7.216517448425293
    5. ' ' → logprob: -8.091517448425293
    6. 'distance' → logprob: -8.841517448425293
    7. ' dist' → logprob: -9.466517448425293
    8. 'zero' → logprob: -9.591517448425293
    9. ' cost' → logprob: -11.341517448425293
    10. 'initial' → logprob: -12.591517448425293

Token 972: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.012597481720149517
    2. ' ' → logprob: -4.512597560882568
    3. '=' → logprob: -6.512597560882568
    4. ' =' → logprob: -9.88759708404541
    5. 'zero' → logprob: -12.51259708404541
    6. '[' → logprob: -13.26259708404541
    7. 'of' → logprob: -13.63759708404541
    8. '(' → logprob: -13.63759708404541
    9. ' of' → logprob: -13.76259708404541
    10. '   ' → logprob: -14.01259708404541

Token 973: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.3319124011322856e-05
    2. ' ' → logprob: -11.250022888183594
    3. '=' → logprob: -11.500022888183594
    4. 'zero' → logprob: -16.375022888183594
    5. ' =' → logprob: -17.250022888183594
    6. '(' → logprob: -18.500022888183594
    7. '[' → logprob: -18.750022888183594
    8. 'of' → logprob: -18.875022888183594
    9. 'dist' → logprob: -19.375022888183594
    10. '۰' → logprob: -19.750022888183594

Token 974: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.536907434463501
    2. ' for' → logprob: -1.161907434463501
    3. 'for' → logprob: -2.286907434463501
    4. '        
' → logprob: -8.036907196044922
    5. ',' → logprob: -8.536907196044922
    6. '
' → logprob: -8.786907196044922
    7. ':' → logprob: -9.161907196044922
    8. ')' → logprob: -10.036907196044922
    9. '<|end|>' → logprob: -10.411907196044922
    10. '.' → logprob: -10.411907196044922

Token 975: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005904443096369505
    2. ' for' → logprob: -7.5005903244018555
    3. 'for' → logprob: -10.500590324401855
    4. ',' → logprob: -12.375590324401855
    5. '        
' → logprob: -12.750590324401855
    6. '<|end|>' → logprob: -14.125590324401855
    7. '.' → logprob: -14.500590324401855
    8. '	' → logprob: -14.875590324401855
    9. ' and' → logprob: -15.500590324401855
    10. '   ' → logprob: -15.750590324401855

Token 976: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -6.623244553338736e-05
    2. '       ' → logprob: -9.750065803527832
    3. ' for' → logprob: -11.750065803527832
    4. '	for' → logprob: -19.12506675720215
    5. 'For' → logprob: -20.12506675720215
    6. '```' → logprob: -20.25006675720215
    7. '        
' → logprob: -21.87506675720215
    8. '
' → logprob: -22.12506675720215
    9. '   ' → logprob: -22.25006675720215
    10. '_for' → logprob: -22.37506675720215

Token 977: ' (' (ID: 350)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.39678552746772766
    2. '(x' → logprob: -1.1467854976654053
    3. 'ox' → logprob: -5.521785736083984
    4. '(' → logprob: -6.271785736083984
    5. 'start' → logprob: -6.521785736083984
    6. ' (' → logprob: -7.271785736083984
    7. 'sx' → logprob: -7.271785736083984
    8. ' x' → logprob: -7.646785736083984
    9. '(s' → logprob: -8.021785736083984
    10. 'cell' → logprob: -9.646785736083984

Token 978: 'sx' (ID: 102754)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00040517066372558475
    2. 'sx' → logprob: -8.125405311584473
    3. 'ox' → logprob: -9.500405311584473
    4. 'start' → logprob: -10.625405311584473
    5. '(x' → logprob: -12.000405311584473
    6. ' x' → logprob: -13.625405311584473
    7. 'xo' → logprob: -14.125405311584473
    8. '_x' → logprob: -14.500405311584473
    9. ')x' → logprob: -14.500405311584473
    10. 'cx' → logprob: -15.625405311584473

Token 979: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08361096680164337
    2. ',x' → logprob: -2.583611011505127
    3. ',s' → logprob: -5.958611011505127
    4. 'x' → logprob: -6.583611011505127
    5. ' ,' → logprob: -7.333611011505127
    6. '),' → logprob: -10.458610534667969
    7. ',
' → logprob: -10.833610534667969
    8. ')' → logprob: -11.833610534667969
    9. ')x' → logprob: -11.958610534667969
    10. '<|end|>' → logprob: -12.583610534667969

Token 980: ' sy' (ID: 6157)
  Prédit: 'sy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sy' → logprob: -3.547789674485102e-05
    2. ' sy' → logprob: -10.250035285949707
    3. 'sx' → logprob: -17.000036239624023
    4. '_sy' → logprob: -18.500036239624023
    5. 'Sy' → logprob: -19.625036239624023
    6. '.sy' → logprob: -19.625036239624023
    7. '   ' → logprob: -19.875036239624023
    8. ' ' → logprob: -20.125036239624023
    9. 'syz' → logprob: -20.625036239624023
    10. '

' → logprob: -21.750036239624023

Token 981: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00021057340200059116
    2. ' )' → logprob: -8.500210762023926
    3. ' in' → logprob: -12.625210762023926
    4. 'in' → logprob: -13.750210762023926
    5. '),' → logprob: -14.000210762023926
    6. ')
' → logprob: -14.500210762023926
    7. ',)' → logprob: -15.250210762023926
    8. ',' → logprob: -15.375210762023926
    9. ')throws' → logprob: -15.875210762023926
    10. '):
' → logprob: -16.37520980834961

Token 982: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.17990218102931976
    2. 'in' → logprob: -1.804902195930481
    3. ')' → logprob: -9.429902076721191
    4. ',' → logprob: -9.554902076721191
    5. ' )' → logprob: -13.304902076721191
    6. ' ' → logprob: -13.429902076721191
    7. ' ,' → logprob: -13.929902076721191
    8. 's' → logprob: -14.679902076721191
    9. '	in' → logprob: -14.929902076721191
    10. '```' → logprob: -15.179902076721191

Token 983: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00015860427811276168
    2. ' self' → logprob: -8.750158309936523
    3. '(self' → logprob: -16.875158309936523
    4. '[self' → logprob: -17.625158309936523
    5. '`' → logprob: -19.125158309936523
    6. '       ' → logprob: -19.125158309936523
    7. ')' → logprob: -19.375158309936523
    8. '	self' → logprob: -19.500158309936523
    9. '=self' → logprob: -19.875158309936523
    10. '           ' → logprob: -19.875158309936523

Token 984: '.out' (ID: 3338)
  Prédit: '.out'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.out' → logprob: -0.04861734062433243
    2. 'outside' → logprob: -3.048617362976074
    3. 'out' → logprob: -10.923617362976074
    4. '.cast' → logprob: -12.548617362976074
    5. 'N' → logprob: -12.798617362976074
    6. ' outside' → logprob: -12.923617362976074
    7. '.n' → logprob: -14.298617362976074
    8. '	out' → logprob: -14.798617362976074
    9. 'Outside' → logprob: -15.298617362976074
    10. '.outer' → logprob: -15.548617362976074

Token 985: 'side' (ID: 4341)
  Prédit: 'side'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'side' → logprob: -0.00016277639952022582
    2. 'outside' → logprob: -9.000163078308105
    3. '```' → logprob: -10.750163078308105
    4. 's' → logprob: -12.125163078308105
    5. 'ide' → logprob: -12.875163078308105
    6. '   ' → logprob: -12.875163078308105
    7. 'is' → logprob: -14.125163078308105
    8. '       ' → logprob: -14.375163078308105
    9. ')' → logprob: -14.500163078308105
    10. '`' → logprob: -14.625163078308105

Token 986: '_cells' (ID: 93468)
  Prédit: '_cells'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cells' → logprob: -1.7432603272027336e-06
    2. 'cells' → logprob: -13.875001907348633
    3. ')' → logprob: -15.125001907348633
    4. 'Cells' → logprob: -15.500001907348633
    5. '```' → logprob: -16.875001907348633
    6. ')_' → logprob: -17.000001907348633
    7. 's' → logprob: -17.000001907348633
    8. '
' → logprob: -17.500001907348633
    9. '_' → logprob: -17.750001907348633
    10. '.cells' → logprob: -18.250001907348633

Token 987: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.34934288263320923
    2. ':' → logprob: -1.2243428230285645
    3. '):
' → logprob: -7.2243428230285645
    4. ':
' → logprob: -9.349343299865723
    5. '       ' → logprob: -10.599343299865723
    6. ',' → logprob: -10.724343299865723
    7. '):' → logprob: -11.224343299865723
    8. '():
' → logprob: -12.349343299865723
    9. ' :
' → logprob: -12.474343299865723
    10. '   ' → logprob: -12.724343299865723

Token 988: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00022249009634833783
    2. '       ' → logprob: -8.875222206115723
    3. 'dist' → logprob: -10.125222206115723
    4. '               ' → logprob: -10.750222206115723
    5. '   ' → logprob: -11.500222206115723
    6. '```' → logprob: -12.500222206115723
    7. ' if' → logprob: -12.750222206115723
    8. ' dist' → logprob: -13.625222206115723
    9. '                   ' → logprob: -14.750222206115723
    10. ' dq' → logprob: -15.000222206115723

Token 989: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.003560042707249522
    2. 'if' → logprob: -6.2535600662231445
    3. 'dq' → logprob: -7.0035600662231445
    4. '           ' → logprob: -7.5035600662231445
    5. ' dist' → logprob: -9.753560066223145
    6. 'point' → logprob: -9.878560066223145
    7. 'pt' → logprob: -10.753560066223145
    8. '       ' → logprob: -11.378560066223145
    9. '               ' → logprob: -12.128560066223145
    10. '   ' → logprob: -12.628560066223145

Token 990: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.320199877838604e-07
    2. '[s' → logprob: -15.5
    3. '```' → logprob: -16.5
    4. 'sy' → logprob: -16.875
    5. '][' → logprob: -17.375
    6. ')[' → logprob: -17.75
    7. ' [' → logprob: -18.25
    8. '   ' → logprob: -18.75
    9. '[y' → logprob: -19.625
    10. '

' → logprob: -19.625

Token 991: 'sy' (ID: 5611)
  Prédit: 'sy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sy' → logprob: -0.0007114782347343862
    2. '[' → logprob: -7.250711441040039
    3. '][' → logprob: -14.375711441040039
    4. ' sy' → logprob: -15.000711441040039
    5. '_sy' → logprob: -15.250711441040039
    6. 's' → logprob: -15.750711441040039
    7. '[s' → logprob: -16.00071144104004
    8. ']' → logprob: -17.00071144104004
    9. '   ' → logprob: -17.25071144104004
    10. 'y' → logprob: -17.37571144104004

Token 992: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.034137990325689316
    2. '[s' → logprob: -3.4091379642486572
    3. '[' → logprob: -8.159137725830078
    4. ')[' → logprob: -8.784137725830078
    5. ']' → logprob: -10.534137725830078
    6. ' ][' → logprob: -11.659137725830078
    7. '[S' → logprob: -13.034137725830078
    8. '(s' → logprob: -13.284137725830078
    9. '}[' → logprob: -13.284137725830078
    10. '"][' → logprob: -13.284137725830078

Token 993: 'sx' (ID: 102754)
  Prédit: 'sx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sx' → logprob: -7.584239938296378e-06
    2. ' sx' → logprob: -12.250007629394531
    3. 'x' → logprob: -12.875007629394531
    4. 's' → logprob: -15.750007629394531
    5. ']' → logprob: -18.62500762939453
    6. 'sy' → logprob: -19.37500762939453
    7. '(s' → logprob: -19.37500762939453
    8. '   ' → logprob: -19.50000762939453
    9. ' ' → logprob: -20.37500762939453
    10. '	s' → logprob: -20.37500762939453

Token 994: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0009435036336071789
    2. ']=' → logprob: -7.000943660736084
    3. ' ]' → logprob: -10.875943183898926
    4. '=' → logprob: -11.250943183898926
    5. ' =' → logprob: -15.875943183898926
    6. '0' → logprob: -17.000944137573242
    7. ')' → logprob: -17.875944137573242
    8. ']==' → logprob: -19.000944137573242
    9. '[' → logprob: -19.125944137573242
    10. '`]' → logprob: -19.125944137573242

Token 995: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -7.505351095460355e-05
    2. ' =' → logprob: -9.500075340270996
    3. '0' → logprob: -16.50007438659668
    4. ']=' → logprob: -17.37507438659668
    5. '=
' → logprob: -19.87507438659668
    6. ')=' → logprob: -20.00007438659668
    7. '[' → logprob: -20.00007438659668
    8. '.=' → logprob: -21.00007438659668
    9. ']' → logprob: -21.50007438659668
    10. ')' → logprob: -22.12507438659668

Token 996: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.375
    3. '   ' → logprob: -20.5
    4. '۰' → logprob: -20.625
    5. '00' → logprob: -22.25
    6. '000' → logprob: -22.375
    7. '０' → logprob: -23.125
    8. '=' → logprob: -23.5
    9. '০' → logprob: -23.625
    10. 's' → logprob: -23.6875

Token 997: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -18.0
    3. '۰' → logprob: -21.875
    4. '   ' → logprob: -22.125
    5. '00' → logprob: -22.25
    6. '000' → logprob: -23.0
    7. '０' → logprob: -23.625
    8. 's' → logprob: -23.75
    9. 'zero' → logprob: -25.125
    10. '০' → logprob: -25.4375

Token 998: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.9981420336989686e-05
    2. 'dq' → logprob: -11.625020027160645
    3. '               ' → logprob: -12.500020027160645
    4. '                   ' → logprob: -13.000020027160645
    5. '       ' → logprob: -13.375020027160645
    6. '		' → logprob: -14.125020027160645
    7. ',d' → logprob: -14.500020027160645
    8. '   ' → logprob: -14.625020027160645
    9. '
' → logprob: -14.750020027160645
    10. ',' → logprob: -15.125020027160645

Token 999: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00045128780766390264
    2. 'dq' → logprob: -7.87545108795166
    3. '       ' → logprob: -10.37545108795166
    4. '		' → logprob: -11.75045108795166
    5. '                   ' → logprob: -11.87545108795166
    6. '               ' → logprob: -12.37545108795166
    7. '   ' → logprob: -12.37545108795166
    8. '
' → logprob: -12.50045108795166
    9. 'd' → logprob: -12.87545108795166
    10. ',d' → logprob: -13.12545108795166

Token 1000: ' dq' (ID: 164235)
  Prédit: 'dq'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dq' (adapté à ' dq') → logprob: -3.128163257315464e-07
    2. ' dq' → logprob: -15.625
    3. '           ' → logprob: -16.75
    4. 'dj' → logprob: -18.0
    5. 'deque' → logprob: -18.5
    6. '       ' → logprob: -18.625
    7. '```' → logprob: -19.375
    8. '   ' → logprob: -19.625
    9. 'vq' → logprob: -20.25
    10. '
' → logprob: -20.5

Token 1001: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -3.1424973713001236e-05
    2. '.' → logprob: -10.625031471252441
    3. '.extend' → logprob: -12.375031471252441
    4. '.app' → logprob: -13.000031471252441
    5. 'append' → logprob: -14.875031471252441
    6. '.ap' → logprob: -16.750030517578125
    7. '.p' → logprob: -17.000030517578125
    8. '.push' → logprob: -17.750030517578125
    9. '   ' → logprob: -17.750030517578125
    10. ').' → logprob: -18.250030517578125

Token 1002: 'left' (ID: 4530)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.010776021517813206
    2. '(((' → logprob: -5.010776042938232
    3. 'left' → logprob: -5.510776042938232
    4. '(' → logprob: -11.760775566101074
    5. '([(' → logprob: -14.385775566101074
    6. ' ((' → logprob: -15.135775566101074
    7. '(s' → logprob: -15.385775566101074
    8. '((((' → logprob: -15.760775566101074
    9. '(([' → logprob: -15.885775566101074
    10. '(('' → logprob: -16.13577651977539

Token 1003: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.000133098365040496
    2. '(((' → logprob: -9.000133514404297
    3. '(' → logprob: -11.625133514404297
    4. ' ((' → logprob: -14.625133514404297
    5. '(s' → logprob: -15.125133514404297
    6. '([(' → logprob: -17.375133514404297
    7. '   ' → logprob: -19.125133514404297
    8. '(([' → logprob: -19.250133514404297
    9. '(('' → logprob: -19.500133514404297
    10. '[(' → logprob: -20.125133514404297

Token 1004: 'sx' (ID: 102754)
  Prédit: 'sx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sx' → logprob: -7.703443770878948e-06
    2. '(s' → logprob: -12.000007629394531
    3. ' sx' → logprob: -14.000007629394531
    4. '0' → logprob: -14.875007629394531
    5. '(' → logprob: -16.25000762939453
    6. 'sy' → logprob: -16.37500762939453
    7. 's' → logprob: -16.62500762939453
    8. '   ' → logprob: -17.37500762939453
    9. ')s' → logprob: -17.75000762939453
    10. ')' → logprob: -19.25000762939453

Token 1005: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.7372048862162046e-05
    2. ' ,' → logprob: -10.750027656555176
    3. ',
' → logprob: -12.125027656555176
    4. '<|end|>' → logprob: -15.500027656555176
    5. ',s' → logprob: -16.62502670288086
    6. '‌,' → logprob: -16.87502670288086
    7. ',\
' → logprob: -17.25002670288086
    8. ',

' → logprob: -17.37502670288086
    9. '
' → logprob: -17.62502670288086
    10. '<|end|>' → logprob: -18.12502670288086

Token 1006: ' sy' (ID: 6157)
  Prédit: 'sy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sy' → logprob: -3.173704271830502e-06
    2. ' sy' → logprob: -12.75000286102295
    3. '_sy' → logprob: -16.375003814697266
    4. 'syz' → logprob: -16.500003814697266
    5. 'Sy' → logprob: -17.250003814697266
    6. 'si' → logprob: -19.375003814697266
    7. 'syn' → logprob: -19.500003814697266
    8. '.sy' → logprob: -19.500003814697266
    9. '
' → logprob: -20.000003814697266
    10. '0' → logprob: -20.000003814697266

Token 1007: '))
' (ID: 2210)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012314191553741693
    2. '))' → logprob: -7.5012311935424805
    3. ')' → logprob: -8.00123119354248
    4. ' ,' → logprob: -8.37623119354248
    5. '0' → logprob: -9.25123119354248
    6. ')))' → logprob: -11.62623119354248
    7. '),' → logprob: -12.50123119354248
    8. ',
' → logprob: -13.25123119354248
    9. ')),' → logprob: -14.62623119354248
    10. ',)' → logprob: -15.37623119354248

Token 1008: '        
' (ID: 3564)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19372914731502533
    2. 'while' → logprob: -1.8187291622161865
    3. ' while' → logprob: -4.693728923797607
    4. '   ' → logprob: -5.443728923797607
    5. '```' → logprob: -8.318729400634766
    6. '	while' → logprob: -9.318729400634766
    7. '
' → logprob: -10.193729400634766
    8. ')' → logprob: -11.068729400634766
    9. '        
' → logprob: -11.568729400634766
    10. '<|end|>' → logprob: -12.568729400634766

Token 1009: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6931758522987366
    2. 'while' → logprob: -0.6931758522987366
    3. ' while' → logprob: -11.06817626953125
    4. '   ' → logprob: -11.56817626953125
    5. '```' → logprob: -13.19317626953125
    6. '	while' → logprob: -13.81817626953125
    7. '
' → logprob: -15.31817626953125
    8. 'While' → logprob: -15.94317626953125
    9. '           ' → logprob: -15.94317626953125
    10. '        
' → logprob: -17.31817626953125

Token 1010: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -5.319370302458992e-06
    2. '       ' → logprob: -12.250005722045898
    3. '
' → logprob: -15.750005722045898
    4. ' while' → logprob: -15.875005722045898
    5. '        
' → logprob: -16.5000057220459
    6. 'dire' → logprob: -16.8750057220459
    7. 'visited' → logprob: -17.0000057220459
    8. 'While' → logprob: -19.0000057220459
    9. '	while' → logprob: -19.1250057220459
    10. '   ' → logprob: -19.5000057220459

Token 1011: ' dq' (ID: 164235)
  Prédit: 'dq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dq' → logprob: -0.004913158714771271
    2. ' dq' → logprob: -5.379913330078125
    3. 'len' → logprob: -8.379913330078125
    4. '   ' → logprob: -10.129913330078125
    5. '       ' → logprob: -11.379913330078125
    6. ' len' → logprob: -12.504913330078125
    7. 'd' → logprob: -12.879913330078125
    8. 'True' → logprob: -13.379913330078125
    9. '     ' → logprob: -13.629913330078125
    10. '           ' → logprob: -14.629913330078125

Token 1012: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5779823660850525
    2. ':' → logprob: -0.8279823660850525
    3. '       ' → logprob: -7.202982425689697
    4. '):
' → logprob: -8.077981948852539
    5. '[' → logprob: -8.452981948852539
    6. '           ' → logprob: -8.702981948852539
    7. '.append' → logprob: -9.202981948852539
    8. '=' → logprob: -9.577981948852539
    9. ' and' → logprob: -9.952981948852539
    10. '.pop' → logprob: -10.077981948852539

Token 1013: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07794059067964554
    2. 'x' → logprob: -2.7029407024383545
    3. '(x' → logprob: -4.952940464019775
    4. ' x' → logprob: -7.702940464019775
    5. ' (' → logprob: -8.077940940856934
    6. '   ' → logprob: -9.952940940856934
    7. '```' → logprob: -10.577940940856934
    8. 'sx' → logprob: -10.827940940856934
    9. '(' → logprob: -11.452940940856934
    10. '               ' → logprob: -11.827940940856934

Token 1014: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.0005025160498917103
    2. '(x' → logprob: -8.375502586364746
    3. ' x' → logprob: -8.750502586364746
    4. '           ' → logprob: -9.250502586364746
    5. '               ' → logprob: -11.250502586364746
    6. 'cx' → logprob: -13.250502586364746
    7. 'sx' → logprob: -14.000502586364746
    8. '                   ' → logprob: -14.500502586364746
    9. ' (' → logprob: -14.750502586364746
    10. '   ' → logprob: -15.625502586364746

Token 1015: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001537238946184516
    2. ',y' → logprob: -6.501537322998047
    3. ',
' → logprob: -11.126537322998047
    4. ' ,' → logprob: -12.001537322998047
    5. ',x' → logprob: -13.126537322998047
    6. ',n' → logprob: -13.376537322998047
    7. ',w' → logprob: -13.376537322998047
    8. '_,' → logprob: -13.501537322998047
    9. ',s' → logprob: -14.001537322998047
    10. '<|end|>' → logprob: -14.126537322998047

Token 1016: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.021403757855296135
    2. '=' → logprob: -4.021403789520264
    3. ' =' → logprob: -6.021403789520264
    4. ',x' → logprob: -8.646403312683105
    5. ',c' → logprob: -8.771403312683105
    6. ')' → logprob: -8.771403312683105
    7. '           ' → logprob: -9.271403312683105
    8. ' ,' → logprob: -9.271403312683105
    9. ')=' → logprob: -10.771403312683105
    10. ',next' → logprob: -10.771403312683105

Token 1017: ' dq' (ID: 164235)
  Prédit: 'dq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dq' → logprob: -0.0005539863486774266
    2. ' dq' → logprob: -7.500554084777832
    3. 'deque' → logprob: -14.125554084777832
    4. 'dj' → logprob: -15.750554084777832
    5. 'd' → logprob: -16.250553131103516
    6. 'DQ' → logprob: -18.750553131103516
    7. 'vq' → logprob: -18.750553131103516
    8. '\d' → logprob: -19.000553131103516
    9. ')d' → logprob: -19.125553131103516
    10. '
' → logprob: -19.125553131103516

Token 1018: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -1.6166903151315637e-05
    2. '.pop' → logprob: -11.250016212463379
    3. 'p' → logprob: -13.875016212463379
    4. '       ' → logprob: -14.625016212463379
    5. '           ' → logprob: -14.750016212463379
    6. '   ' → logprob: -14.750016212463379
    7. ' .' → logprob: -15.125016212463379
    8. 'opleft' → logprob: -15.875016212463379
    9. '.' → logprob: -16.000015258789062
    10. '.append' → logprob: -16.375015258789062

Token 1019: 'opleft' (ID: 182170)
  Prédit: 'opleft'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'opleft' → logprob: -0.00013333676906768233
    2. 'op' → logprob: -9.000133514404297
    3. 'opl' → logprob: -11.750133514404297
    4. 'ople' → logprob: -13.125133514404297
    5. 'opup' → logprob: -18.750133514404297
    6. 'p' → logprob: -18.875133514404297
    7. 'left' → logprob: -19.125133514404297
    8. 'oplevel' → logprob: -19.250133514404297
    9. 'opf' → logprob: -19.500133514404297
    10. '```' → logprob: -19.625133514404297

Token 1020: '()
' (ID: 1234)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11475484073162079
    2. ',' → logprob: -3.3647549152374268
    3. '            
' → logprob: -3.8647549152374268
    4. '
' → logprob: -4.114754676818848
    5. '       ' → logprob: -4.364754676818848
    6. ')' → logprob: -4.614754676818848
    7. '<|end|>' → logprob: -4.614754676818848
    8. '        
' → logprob: -7.239754676818848
    9. '               ' → logprob: -7.239754676818848
    10. ',
' → logprob: -7.989754676818848

Token 1021: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03477339819073677
    2. 'current' → logprob: -3.534773349761963
    3. '       ' → logprob: -5.409773349761963
    4. ' current' → logprob: -8.159773826599121
    5. 'point' → logprob: -9.409773826599121
    6. 'curr' → logprob: -9.659773826599121
    7. 'prev' → logprob: -9.784773826599121
    8. 'pt' → logprob: -11.409773826599121
    9. 'cur' → logprob: -11.659773826599121
    10. 'for' → logprob: -11.659773826599121

Token 1022: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' (adapté à ' current') → logprob: -0.06467373669147491
    2. '           ' → logprob: -3.314673662185669
    3. 'curr' → logprob: -4.064673900604248
    4. 'for' → logprob: -4.939673900604248
    5. 'cur' → logprob: -6.439673900604248
    6. 'point' → logprob: -8.18967342376709
    7. 'prev' → logprob: -10.43967342376709
    8. ' current' → logprob: -10.81467342376709
    9. 'pt' → logprob: -11.43967342376709
    10. 'cell' → logprob: -11.93967342376709

Token 1023: '_point' (ID: 15466)
  Prédit: '_cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.6133474707603455
    2. '_dist' → logprob: -0.8633474707603455
    3. 'dist' → logprob: -3.7383475303649902
    4. 'cost' → logprob: -4.36334753036499
    5. '_distance' → logprob: -9.238347053527832
    6. '=' → logprob: -10.988347053527832
    7. '_point' → logprob: -10.988347053527832
    8. '_token' → logprob: -11.488347053527832
    9. ' cost' → logprob: -11.988347053527832
    10. '_val' → logprob: -12.113347053527832

Token 1024: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.126930832862854
    2. '=' → logprob: -2.1269307136535645
    3. '=current' → logprob: -13.626931190490723
    4. '=self' → logprob: -14.876931190490723
    5. ':' → logprob: -15.126931190490723
    6. ' =
' → logprob: -15.501931190490723
    7. '=
' → logprob: -15.501931190490723
    8. ' ' → logprob: -15.626931190490723
    9. '    ' → logprob: -16.376930236816406
    10. 'current' → logprob: -16.501930236816406

Token 1025: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0009124171338044107
    2. ' self' → logprob: -7.000912189483643
    3. '           ' → logprob: -14.1259126663208
    4. '(self' → logprob: -15.5009126663208
    5. '=self' → logprob: -17.250911712646484
    6. '`' → logprob: -19.500911712646484
    7. '
' → logprob: -19.500911712646484
    8. '	self' → logprob: -19.500911712646484
    9. '               ' → logprob: -19.750911712646484
    10. '       ' → logprob: -19.875911712646484

Token 1026: '.cast' (ID: 68894)
  Prédit: '.cast'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cast' → logprob: -8.061054359131958e-06
    2. 'cast' → logprob: -12.750007629394531
    3. '.' → logprob: -12.875007629394531
    4. '_cast' → logprob: -14.000007629394531
    5. '.Cast' → logprob: -15.000007629394531
    6. '.user' → logprob: -15.875007629394531
    7. '.c' → logprob: -15.875007629394531
    8. '.point' → logprob: -16.12500762939453
    9. '>' → logprob: -16.25000762939453
    10. 'castle' → logprob: -16.50000762939453

Token 1027: 'le' (ID: 282)
  Prédit: 'le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -5.319370302458992e-06
    2. 'tle' → logprob: -13.500005722045898
    3. '
' → logprob: -13.875005722045898
    4. 'l' → logprob: -14.875005722045898
    5. 'el' → logprob: -14.875005722045898
    6. 'castle' → logprob: -15.375005722045898
    7. 'al' → logprob: -15.625005722045898
    8. 'a' → logprob: -15.875005722045898
    9. 'lea' → logprob: -16.0625057220459
    10. 'leton' → logprob: -16.1875057220459

Token 1028: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -1.747814349073451e-05
    2. 'self' → logprob: -11.125017166137695
    3. '_point' → logprob: -14.125017166137695
    4. 'map' → logprob: -14.375017166137695
    5. '           ' → logprob: -14.500017166137695
    6. '_cast' → logprob: -15.375017166137695
    7. 'Map' → logprob: -15.375017166137695
    8. 'point' → logprob: -15.875017166137695
    9. '       ' → logprob: -16.375017166137695
    10. '   ' → logprob: -16.375017166137695

Token 1029: '.point' (ID: 58020)
  Prédit: '.point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.point' → logprob: -0.0009211080614477396
    2. 'point' → logprob: -7.000921249389648
    3. '.grid' → logprob: -12.375921249389648
    4. '.' → logprob: -12.500921249389648
    5. ' .' → logprob: -13.875921249389648
    6. ' point' → logprob: -14.625921249389648
    7. '	point' → logprob: -15.625921249389648
    8. '```' → logprob: -16.37592124938965
    9. '
' → logprob: -17.37592124938965
    10. '   ' → logprob: -17.75092124938965

Token 1030: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0003062646137550473
    2. '(' → logprob: -8.250306129455566
    3. 'x' → logprob: -10.375306129455566
    4. ' (' → logprob: -11.750306129455566
    5. '(
' → logprob: -12.375306129455566
    6. ' x' → logprob: -14.125306129455566
    7. '```' → logprob: -15.250306129455566
    8. '
' → logprob: -15.750306129455566
    9. ')(' → logprob: -16.000307083129883
    10. ',x' → logprob: -16.000307083129883

Token 1031: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.13019083440303802
    2. ',' → logprob: -2.130190849304199
    3. ')' → logprob: -6.005190849304199
    4. '<|end|>' → logprob: -8.0051908493042
    5. ' ,' → logprob: -8.2551908493042
    6. ')y' → logprob: -9.2551908493042
    7. 'y' → logprob: -10.7551908493042
    8. ',x' → logprob: -11.0051908493042
    9. ')(
' → logprob: -11.7551908493042
    10. '),' → logprob: -11.7551908493042

Token 1032: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.12723161280155182
    2. ')' → logprob: -2.1272315979003906
    3. '           ' → logprob: -8.25223159790039
    4. ')
' → logprob: -10.62723159790039
    5. '       ' → logprob: -11.62723159790039
    6. ' )
' → logprob: -12.50223159790039
    7. ')

' → logprob: -12.62723159790039
    8. '               ' → logprob: -14.62723159790039
    9. '   ' → logprob: -14.75223159790039
    10. '
' → logprob: -15.00223159790039

Token 1033: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005890139145776629
    2. 'for' → logprob: -7.500588893890381
    3. ' for' → logprob: -10.250589370727539
    4. '       ' → logprob: -15.125589370727539
    5. '   ' → logprob: -15.500589370727539
    6. '               ' → logprob: -15.625589370727539
    7. '            
' → logprob: -16.25058937072754
    8. '          ' → logprob: -16.75058937072754
    9. '```' → logprob: -17.37558937072754
    10. '         ' → logprob: -18.12558937072754

Token 1034: ' current' (ID: 2208)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04329455643892288
    2. 'current' (adapté à ' current') → logprob: -3.293294668197632
    3. '           ' → logprob: -5.293294429779053
    4. ' for' → logprob: -8.543294906616211
    5. 'curr' → logprob: -11.668294906616211
    6. ' current' → logprob: -12.918294906616211
    7. '            
' → logprob: -13.043294906616211
    8. '```' → logprob: -13.168294906616211
    9. '
' → logprob: -13.668294906616211
    10. 'cost' → logprob: -13.793294906616211

Token 1035: '_dist' (ID: 37968)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.21214449405670166
    2. '_cost' → logprob: -2.337144374847412
    3. '_point' → logprob: -2.462144374847412
    4. '_dist' → logprob: -5.087144374847412
    5. '_points' → logprob: -7.212144374847412
    6. '_neighbors' → logprob: -7.712144374847412
    7. '_cell' → logprob: -7.962144374847412
    8. '_x' → logprob: -8.21214485168457
    9. 'terrain' → logprob: -8.83714485168457
    10. '```' → logprob: -9.21214485168457

Token 1036: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20142270624637604
    2. '=' → logprob: -1.7014226913452148
    3. '=current' → logprob: -11.826422691345215
    4. ' ' → logprob: -15.201422691345215
    5. ')' → logprob: -15.201422691345215
    6. '    ' → logprob: -15.826422691345215
    7. '=int' → logprob: -15.951422691345215
    8. ',' → logprob: -15.951422691345215
    9. '            ' → logprob: -16.07642364501953
    10. '           ' → logprob: -16.32642364501953

Token 1037: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.006715370807796717
    2. ' dist' → logprob: -5.006715297698975
    3. '           ' → logprob: -17.131715774536133
    4. '	dist' → logprob: -18.881715774536133
    5. '(dist' → logprob: -19.631715774536133
    6. '.dist' → logprob: -22.506715774536133
    7. '_dist' → logprob: -22.631715774536133
    8. 'd' → logprob: -23.006715774536133
    9. '               ' → logprob: -23.006715774536133
    10. '   ' → logprob: -23.881715774536133

Token 1038: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -1.759734732331708e-05
    2. '[' → logprob: -11.250017166137695
    3. 'y' → logprob: -12.375017166137695
    4. ' [' → logprob: -16.000017166137695
    5. '```' → logprob: -16.375017166137695
    6. '[s' → logprob: -17.000017166137695
    7. '[user' → logprob: -18.250017166137695
    8. ')[' → logprob: -18.500017166137695
    9. '       ' → logprob: -18.500017166137695
    10. '][' → logprob: -18.625017166137695

Token 1039: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.009808745235204697
    2. '[x' → logprob: -4.634808540344238
    3. ')[' → logprob: -10.759808540344238
    4. ']' → logprob: -11.009808540344238
    5. 'x' → logprob: -12.009808540344238
    6. ' ][' → logprob: -13.134808540344238
    7. '[' → logprob: -13.259808540344238
    8. '[
' → logprob: -13.259808540344238
    9. '}[' → logprob: -14.384808540344238
    10. '"][' → logprob: -14.634808540344238

Token 1040: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -3.4121114822482923e-06
    2. ' x' → logprob: -12.625003814697266
    3. '(x' → logprob: -17.875003814697266
    4. '{x' → logprob: -18.750003814697266
    5. ')x' → logprob: -19.125003814697266
    6. '	x' → logprob: -19.375003814697266
    7. '"x' → logprob: -20.000003814697266
    8. '$x' → logprob: -20.375003814697266
    9. ''x' → logprob: -20.375003814697266
    10. '[x' → logprob: -20.500003814697266

Token 1041: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07892900705337524
    2. ')
' → logprob: -2.8289289474487305
    3. '           ' → logprob: -4.4539289474487305
    4. '
' → logprob: -5.5789289474487305
    5. ']' → logprob: -6.8289289474487305
    6. ']
' → logprob: -8.57892894744873
    7. '            
' → logprob: -10.20392894744873
    8. '               ' → logprob: -10.95392894744873
    9. '       ' → logprob: -10.95392894744873
    10. '）' → logprob: -11.07892894744873

Token 1042: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01426446158438921
    2. 'for' → logprob: -4.2642645835876465
    3. ' for' → logprob: -9.264264106750488
    4. '       ' → logprob: -12.389264106750488
    5. '   ' → logprob: -14.014264106750488
    6. '```' → logprob: -14.389264106750488
    7. '            
' → logprob: -15.264264106750488
    8. '               ' → logprob: -15.389264106750488
    9. '          ' → logprob: -16.139265060424805
    10. '         ' → logprob: -17.139265060424805

Token 1043: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.000104616025055293
    2. '           ' → logprob: -9.250104904174805
    3. ' for' → logprob: -11.750104904174805
    4. '```' → logprob: -14.375104904174805
    5. '            
' → logprob: -18.000104904174805
    6. '``' → logprob: -19.000104904174805
    7. 'if' → logprob: -19.250104904174805
    8. '	for' → logprob: -21.000104904174805
    9. 'neighbors' → logprob: -21.125104904174805
    10. '#' → logprob: -21.375104904174805

Token 1044: ' nx' (ID: 50118)
  Prédit: 'nx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.0040823169983923435
    2. '(nx' → logprob: -5.504082202911377
    3. ' nx' → logprob: -12.504082679748535
    4. '(' → logprob: -15.754082679748535
    5. '(n' → logprob: -17.87908172607422
    6. '   ' → logprob: -18.00408172607422
    7. '```' → logprob: -18.25408172607422
    8. 'dx' → logprob: -18.37908172607422
    9. ' (' → logprob: -18.50408172607422
    10. 'ny' → logprob: -18.87908172607422

Token 1045: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.6047699318733066e-05
    2. ',n' → logprob: -11.625016212463379
    3. ' ,' → logprob: -12.250016212463379
    4. ',
' → logprob: -13.250016212463379
    5. '_,' → logprob: -15.375016212463379
    6. '```' → logprob: -16.125015258789062
    7. ',(' → logprob: -17.125015258789062
    8. ',int' → logprob: -17.875015258789062
    9. ',,' → logprob: -18.000015258789062
    10. ',
//' → logprob: -18.125015258789062

Token 1046: ' ny' (ID: 4423)
  Prédit: 'ny'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -4.246537173457909e-06
    2. ' ny' → logprob: -12.375003814697266
    3. 'nyi' → logprob: -18.375003814697266
    4. 'n' → logprob: -18.750003814697266
    5. 'Ny' → logprob: -19.250003814697266
    6. 'NY' → logprob: -19.375003814697266
    7. '
' → logprob: -19.500003814697266
    8. 'nym' → logprob: -21.000003814697266
    9. 'nyt' → logprob: -21.125003814697266
    10. '   ' → logprob: -21.500003814697266

Token 1047: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.030359527096152306
    2. 'in' → logprob: -3.5303595066070557
    3. ' ' → logprob: -8.530359268188477
    4. '	in' → logprob: -8.905359268188477
    5. '<|end|>' → logprob: -9.280359268188477
    6. ',' → logprob: -9.530359268188477
    7. ')' → logprob: -10.280359268188477
    8. '            ' → logprob: -10.530359268188477
    9. '<|end|>' → logprob: -11.780359268188477
    10. ' ,' → logprob: -12.030359268188477

Token 1048: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -3.5597102396423e-05
    2. ' self' → logprob: -10.250035285949707
    3. '(self' → logprob: -17.250036239624023
    4. '[self' → logprob: -17.625036239624023
    5. '           ' → logprob: -18.750036239624023
    6. '=self' → logprob: -19.125036239624023
    7. '   ' → logprob: -20.125036239624023
    8. 'next' → logprob: -20.250036239624023
    9. '	self' → logprob: -20.375036239624023
    10. '       ' → logprob: -20.500036239624023

Token 1049: '.cast' (ID: 68894)
  Prédit: '.cast'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cast' → logprob: -0.33132046461105347
    2. 'neighbors' → logprob: -1.3313205242156982
    3. '.ne' → logprob: -4.206320285797119
    4. '_neighbors' → logprob: -6.331320285797119
    5. 'cast' → logprob: -7.956320285797119
    6. ' neighbors' → logprob: -8.206320762634277
    7. 'Neighbors' → logprob: -8.706320762634277
    8. '.next' → logprob: -9.706320762634277
    9. '_cast' → logprob: -10.081320762634277
    10. 'neighbor' → logprob: -10.331320762634277

Token 1050: 'le' (ID: 282)
  Prédit: 'opleft'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'opleft' → logprob: -0.009958420880138874
    2. 'left' → logprob: -4.634958267211914
    3. 'append' → logprob: -9.634958267211914
    4. 'le' → logprob: -9.884958267211914
    5. 'p' → logprob: -11.259958267211914
    6. 'let' → logprob: -11.759958267211914
    7. '.append' → logprob: -11.884958267211914
    8. 'lef' → logprob: -12.259958267211914
    9. 't' → logprob: -12.509958267211914
    10. 'uel' → logprob: -12.634958267211914

Token 1051: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -0.040275558829307556
    2. '           ' → logprob: -4.415275573730469
    3. 'Map' → logprob: -4.415275573730469
    4. '       ' → logprob: -4.915275573730469
    5. '_points' → logprob: -5.915275573730469
    6. '               ' → logprob: -7.040275573730469
    7. '_point' → logprob: -7.290275573730469
    8. '```' → logprob: -7.915275573730469
    9. '   ' → logprob: -8.040275573730469
    10. 'map' → logprob: -8.040275573730469

Token 1052: '.ne' (ID: 39319)
  Prédit: '.ne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ne' → logprob: -0.00033427379094064236
    2. '.point' → logprob: -8.500334739685059
    3. 'neighbors' → logprob: -9.000334739685059
    4. '.points' → logprob: -12.000334739685059
    5. ' .' → logprob: -15.375334739685059
    6. 'point' → logprob: -15.375334739685059
    7. '.' → logprob: -15.375334739685059
    8. '.Ne' → logprob: -15.500334739685059
    9. 'Neighbors' → logprob: -15.750334739685059
    10. ' neighbors' → logprob: -16.125333786010742

Token 1053: 'ighbors' (ID: 46483)
  Prédit: 'ighbors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ighbors' → logprob: -0.00045259902253746986
    2. 'neighbors' → logprob: -7.750452518463135
    3. 'igh' → logprob: -11.250452995300293
    4. '_neighbors' → logprob: -12.250452995300293
    5. 'ig' → logprob: -13.375452995300293
    6. 'ighbours' → logprob: -13.500452995300293
    7. 'bors' → logprob: -14.750452995300293
    8. 'gh' → logprob: -15.375452995300293
    9. ' neighbors' → logprob: -15.625452995300293
    10. 'ib' → logprob: -16.250452041625977

Token 1054: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.00021688752167392522
    2. '(' → logprob: -8.500216484069824
    3. ' (' → logprob: -12.375216484069824
    4. 'x' → logprob: -12.375216484069824
    5. '(nx' → logprob: -13.000216484069824
    6. '(n' → logprob: -13.375216484069824
    7. '(
' → logprob: -15.250216484069824
    8. ')(' → logprob: -15.625216484069824
    9. '```' → logprob: -16.25021743774414
    10. '((' → logprob: -16.25021743774414

Token 1055: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2023536115884781
    2. ',n' → logprob: -1.702353596687317
    3. ' ,' → logprob: -7.327353477478027
    4. ',y' → logprob: -8.577353477478027
    5. ',
' → logprob: -10.827353477478027
    6. '(nx' → logprob: -10.952353477478027
    7. '           ' → logprob: -11.327353477478027
    8. '(n' → logprob: -12.077353477478027
    9. '         ' → logprob: -12.077353477478027
    10. '
' → logprob: -12.327353477478027

Token 1056: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.04900062456727028
    2. '):' → logprob: -3.0490007400512695
    3. '):
' → logprob: -8.17400074005127
    4. '               ' → logprob: -9.54900074005127
    5. '           ' → logprob: -10.29900074005127
    6. '):

' → logprob: -11.54900074005127
    7. ':' → logprob: -11.92400074005127
    8. ')' → logprob: -12.29900074005127
    9. '       ' → logprob: -12.79900074005127
    10. ':
' → logprob: -14.04900074005127

Token 1057: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03307521343231201
    2. '           ' → logprob: -3.5330753326416016
    3. 'next' → logprob: -6.033075332641602
    4. ' next' → logprob: -7.658075332641602
    5. 'neighbor' → logprob: -8.658075332641602
    6. '   ' → logprob: -9.908075332641602
    7. '```' → logprob: -10.158075332641602
    8. 'new' → logprob: -10.283075332641602
    9. '                   ' → logprob: -10.658075332641602
    10. '                
' → logprob: -10.658075332641602

Token 1058: ' neighbor' (ID: 13034)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.0226651430130005
    2. 'next' → logprob: -1.0226651430130005
    3. 'neighbor' (adapté à ' neighbor') → logprob: -1.2726651430130005
    4. 'new' → logprob: -8.147665023803711
    5. ' next' → logprob: -8.522665023803711
    6. 'n' → logprob: -9.522665023803711
    7. ' neighbor' → logprob: -10.022665023803711
    8. '                   ' → logprob: -11.272665023803711
    9. 'nb' → logprob: -11.647665023803711
    10. '   ' → logprob: -11.772665023803711

Token 1059: '_point' (ID: 15466)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3802407383918762
    2. ' =' → logprob: -1.3802406787872314
    3. '_point' → logprob: -2.7552406787872314
    4. '_' → logprob: -7.8802409172058105
    5. 'point' → logprob: -8.005240440368652
    6. '=
' → logprob: -9.255240440368652
    7. '=_' → logprob: -9.255240440368652
    8. 'Point' → logprob: -10.005240440368652
    9. '_pt' → logprob: -10.130240440368652
    10. '_=' → logprob: -10.255240440368652

Token 1060: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38687753677368164
    2. '=' → logprob: -1.1368775367736816
    3. '=self' → logprob: -12.011877059936523
    4. '=
' → logprob: -15.761877059936523
    5. ' ' → logprob: -15.886877059936523
    6. ' =
' → logprob: -16.636877059936523
    7. 'self' → logprob: -17.261877059936523
    8. '=

' → logprob: -18.136877059936523
    9. ' self' → logprob: -18.386877059936523
    10. '    ' → logprob: -18.386877059936523

Token 1061: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.000913370808120817
    2. ' self' → logprob: -7.000913143157959
    3. '(self' → logprob: -14.125913619995117
    4. '               ' → logprob: -14.375913619995117
    5. '=self' → logprob: -14.625913619995117
    6. '[self' → logprob: -16.250913619995117
    7. '	self' → logprob: -17.375913619995117
    8. '                   ' → logprob: -17.625913619995117
    9. '```' → logprob: -17.875913619995117
    10. '$self' → logprob: -18.125913619995117

Token 1062: '.cast' (ID: 68894)
  Prédit: '.cast'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cast' → logprob: -0.0006582272471860051
    2. 'cast' → logprob: -7.37565803527832
    3. '_cast' → logprob: -10.75065803527832
    4. 'castle' → logprob: -12.62565803527832
    5. '.' → logprob: -13.62565803527832
    6. '```' → logprob: -13.87565803527832
    7. '.Cast' → logprob: -14.12565803527832
    8. '_CAST' → logprob: -14.12565803527832
    9. ' cast' → logprob: -14.87565803527832

Token 1063: 'le' (ID: 282)
  Prédit: 'le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -1.2352385965641588e-05
    2. 'al' → logprob: -12.375012397766113
    3. 'castle' → logprob: -12.500012397766113
    4. 'ale' → logprob: -13.500012397766113
    5. 'tle' → logprob: -14.375012397766113
    6. 'a' → logprob: -14.750012397766113
    7. '
' → logprob: -15.500012397766113
    8. 're' → logprob: -15.625012397766113
    9. 'el' → logprob: -15.625012397766113
    10. 'lle' → logprob: -15.875012397766113

Token 1064: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -0.007708839140832424
    2. '_cast' → logprob: -4.88270902633667
    3. 'Map' → logprob: -9.882708549499512
    4. 'cast' → logprob: -11.382708549499512
    5. 'map' → logprob: -11.757708549499512
    6. '.cast' → logprob: -11.757708549499512
    7. 'castle' → logprob: -12.132708549499512
    8. '_point' → logprob: -12.507708549499512
    9. '(x' → logprob: -12.882708549499512
    10. '(nx' → logprob: -13.007708549499512

Token 1065: '.point' (ID: 58020)
  Prédit: '.point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.point' → logprob: -0.00032390307751484215
    2. 'point' → logprob: -8.375324249267578
    3. '.cast' → logprob: -9.625324249267578
    4. '.' → logprob: -11.500324249267578
    5. '(point' → logprob: -11.500324249267578
    6. '.p' → logprob: -12.250324249267578
    7. ' point' → logprob: -13.875324249267578
    8. ' .' → logprob: -14.750324249267578
    9. '	point' → logprob: -15.375324249267578
    10. '.Point' → logprob: -15.875324249267578

Token 1066: '(nx' (ID: 189861)
  Prédit: '(nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nx' → logprob: -1.0280383548888494e-06
    2. 'nx' → logprob: -14.500000953674316
    3. ' (' → logprob: -15.500000953674316
    4. '(
' → logprob: -16.125001907348633
    5. '(' → logprob: -16.625001907348633
    6. '
' → logprob: -17.375001907348633
    7. '(n' → logprob: -17.750001907348633
    8. '```' → logprob: -18.000001907348633
    9. ' nx' → logprob: -18.250001907348633
    10. '(nn' → logprob: -18.875001907348633

Token 1067: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09490139782428741
    2. '<|end|>' → logprob: -2.9699013233184814
    3. ',n' → logprob: -3.3449013233184814
    4. ',y' → logprob: -6.4699015617370605
    5. '(nx' → logprob: -6.9699015617370605
    6. '<|end|>' → logprob: -7.5949015617370605
    7. ',next' → logprob: -8.219901084899902
    8. ' ,' → logprob: -8.469901084899902
    9. ')' → logprob: -9.094901084899902
    10. '‌,' → logprob: -9.844901084899902

Token 1068: 'ny' (ID: 3008)
  Prédit: 'ny'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -3.643152740551159e-05
    2. ' ny' → logprob: -10.250036239624023
    3. 'y' → logprob: -14.375036239624023
    4. 'n' → logprob: -15.000036239624023
    5. 'nyi' → logprob: -16.750036239624023
    6. 'nym' → logprob: -17.000036239624023
    7. 'nx' → logprob: -18.000036239624023
    8. 'neighbor' → logprob: -18.250036239624023
    9. ''ny' → logprob: -18.375036239624023
    10. 'nych' → logprob: -18.625036239624023

Token 1069: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7339993119239807
    2. ')
' → logprob: -0.7339993119239807
    3. '               ' → logprob: -3.233999252319336
    4. ')
' → logprob: -8.608999252319336
    5. '                
' → logprob: -9.233999252319336
    6. '):
' → logprob: -9.358999252319336
    7. '           ' → logprob: -9.483999252319336
    8. ',' → logprob: -10.483999252319336
    9. ')

' → logprob: -10.858999252319336
    10. '                   ' → logprob: -10.858999252319336

Token 1070: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.006241364870220423
    2. '                
' → logprob: -6.006241321563721
    3. '```' → logprob: -6.256241321563721
    4. '                ' → logprob: -7.756241321563721
    5. ' cost' → logprob: -8.006241798400879
    6. '                   ' → logprob: -8.131241798400879
    7. 'cost' → logprob: -8.381241798400879
    8. ' next' → logprob: -8.881241798400879
    9. 'next' → logprob: -9.381241798400879
    10. 'new' → logprob: -9.881241798400879

Token 1071: ' #' (ID: 1069)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.2460966408252716
    2. '               ' → logprob: -2.621096611022949
    3. 'cl' → logprob: -2.746096611022949
    4. 'new' → logprob: -3.246096611022949
    5. 'next' → logprob: -4.371096611022949
    6. 'if' → logprob: -4.871096611022949
    7. 'edge' → logprob: -5.621096611022949
    8. ' cost' → logprob: -5.746096611022949
    9. 'weight' → logprob: -5.871096611022949
    10. 'old' → logprob: -5.871096611022949

Token 1072: ' Determine' (ID: 57076)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.13503681123256683
    2. 'cl' → logprob: -2.7600367069244385
    3. 'if' → logprob: -3.8850367069244385
    4. '               ' → logprob: -4.135036945343018
    5. 'new' → logprob: -4.885036945343018
    6. 'is' → logprob: -5.260036945343018
    7. 'edge' → logprob: -5.260036945343018
    8. 'next' → logprob: -6.385036945343018
    9. 'prev' → logprob: -6.635036945343018
    10. 'current' → logprob: -6.635036945343018

Token 1073: ' if' (ID: 538)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.044267941266298294
    2. ' cost' → logprob: -3.7942678928375244
    3. 'new' → logprob: -4.7942681312561035
    4. 'weight' → logprob: -5.1692681312561035
    5. 'next' → logprob: -5.7942681312561035
    6. '               ' → logprob: -6.4192681312561035
    7. ' new' → logprob: -7.1692681312561035
    8. 'edge' → logprob: -7.9192681312561035
    9. 'additional' → logprob: -7.9192681312561035
    10. ' next' → logprob: -8.794267654418945

Token 1074: ' climbing' (ID: 47637)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.2444639801979065
    2. 'neighbor' → logprob: -1.9944639205932617
    3. ' current' → logprob: -2.7444639205932617
    4. 'cost' → logprob: -4.619463920593262
    5. ' neighbor' → logprob: -6.244463920593262
    6. '(current' → logprob: -6.494463920593262
    7. 'next' → logprob: -7.244463920593262
    8. '1' → logprob: -7.744463920593262
    9. 'new' → logprob: -7.744463920593262
    10. ' cost' → logprob: -8.119463920593262

Token 1075: ' out' (ID: 842)
  Prédit: '_up'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_up' → logprob: -1.132103681564331
    2. 'up' → logprob: -1.257103681564331
    3. ' up' → logprob: -1.507103681564331
    4. 'out' → logprob: -2.632103681564331
    5. '_out' → logprob: -2.632103681564331
    6. ' out' → logprob: -3.757103681564331
    7. '_cost' → logprob: -6.13210391998291
    8. 'cost' → logprob: -7.13210391998291
    9. '_' → logprob: -7.75710391998291
    10. '_transition' → logprob: -8.25710391998291

Token 1076: ' =' (ID: 314)
  Prédit: '_cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -1.2394152879714966
    2. 'out' → logprob: -2.114415168762207
    3. '=' → logprob: -2.239415168762207
    4. 'cost' → logprob: -2.364415168762207
    5. ' =' → logprob: -2.614415168762207
    6. ' of' → logprob: -2.614415168762207
    7. '               ' → logprob: -2.989415168762207
    8. '_out' → logprob: -3.364415168762207
    9. 'of' → logprob: -3.364415168762207
    10. ' cost' → logprob: -3.489415168762207

Token 1077: ' from' (ID: 591)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6253226399421692
    2. 'current' → logprob: -0.8753226399421692
    3. '(current' → logprob: -3.8753225803375244
    4. ' current' → logprob: -4.1253228187561035
    5. 'int' → logprob: -5.1253228187561035
    6. ' ' → logprob: -6.1253228187561035
    7. 'neighbor' → logprob: -6.5003228187561035
    8. ' int' → logprob: -7.5003228187561035
    9. '(' → logprob: -7.6253228187561035
    10. ' (' → logprob: -8.625322341918945

Token 1078: ' moat' (ID: 152750)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.41948750615119934
    2. ''#' → logprob: -1.294487476348877
    3. ' '#'' → logprob: -3.294487476348877
    4. ' current' → logprob: -4.044487476348877
    5. 'mo' → logprob: -4.794487476348877
    6. '`' → logprob: -6.669487476348877
    7. 'a' → logprob: -6.919487476348877
    8. '('#' → logprob: -7.169487476348877
    9. ' '#' → logprob: -7.919487476348877
    10. ' mo' → logprob: -8.544487953186035

Token 1079: ' to' (ID: 316)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.4391586482524872
    2. ' and' → logprob: -1.9391586780548096
    3. 'to' → logprob: -1.9391586780548096
    4. ' to' → logprob: -3.5641586780548096
    5. 'current' → logprob: -3.9391586780548096
    6. 'cell' → logprob: -4.5641584396362305
    7. '               ' → logprob: -5.6891584396362305
    8. '(current' → logprob: -6.6891584396362305
    9. ''' → logprob: -7.0641584396362305
    10. ''#' → logprob: -7.1891584396362305

Token 1080: ' non' (ID: 2893)
  Prédit: 'non'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'non' → logprob: -0.2528332471847534
    2. ''.' → logprob: -1.7528332471847534
    3. 'neighbor' → logprob: -3.252833366394043
    4. 'not' → logprob: -5.377833366394043
    5. ' non' → logprob: -5.627833366394043
    6. '.' → logprob: -7.377833366394043
    7. ' neighbor' → logprob: -7.502833366394043
    8. ' '.'' → logprob: -8.252833366394043
    9. '```' → logprob: -8.252833366394043
    10. '')' → logprob: -8.377833366394043

Token 1081: '-mo' (ID: 194634)
  Prédit: '-mo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-mo' → logprob: -0.10012870281934738
    2. '-' → logprob: -2.725128650665283
    3. 'mo' → logprob: -4.475128650665283
    4. '_m' → logprob: -4.975128650665283
    5. '_' → logprob: -5.100128650665283
    6. '-m' → logprob: -6.225128650665283
    7. ''-' → logprob: -7.600128650665283
    8. '-)' → logprob: -7.725128650665283
    9. '-
' → logprob: -7.850128650665283
    10. '```' → logprob: -7.975128650665283

Token 1082: 'at' (ID: 266)
  Prédit: 'at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -6.24179228907451e-05
    2. 'a' → logprob: -10.375061988830566
    3. '	at' → logprob: -11.500061988830566
    4. 'ат' → logprob: -12.250061988830566
    5. ' at' → logprob: -12.625061988830566
    6. '
' → logprob: -13.250061988830566
    7. '   ' → logprob: -13.375061988830566
    8. '#' → logprob: -13.562561988830566
    9. 'ats' → logprob: -13.625061988830566
    10. '```' → logprob: -14.062561988830566

Token 1083: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.013418675400316715
    2. '                
' → logprob: -4.638418674468994
    3. '                ' → logprob: -6.513418674468994
    4. ',' → logprob: -8.013419151306152
    5. ' is' → logprob: -8.013419151306152
    6. ' if' → logprob: -8.888419151306152
    7. '                    
' → logprob: -9.013419151306152
    8. ' token' → logprob: -9.138419151306152
    9. '                
                
' → logprob: -9.263419151306152
    10. '                   ' → logprob: -9.263419151306152

Token 1084: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01789705827832222
    2. '                
' → logprob: -4.517897129058838
    3. '                   ' → logprob: -6.517897129058838
    4. '```' → logprob: -6.767897129058838
    5. '                ' → logprob: -7.017897129058838
    6. '                       ' → logprob: -7.892897129058838
    7. '                        
' → logprob: -7.892897129058838
    8. '                    
' → logprob: -7.892897129058838
    9. '`' → logprob: -7.892897129058838
    10. ',' → logprob: -8.26789665222168

Token 1085: ' climb' (ID: 27049)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.05118906870484352
    2. 'cl' → logprob: -3.9261891841888428
    3. 'weight' → logprob: -4.551188945770264
    4. 'new' → logprob: -5.051188945770264
    5. 'if' → logprob: -5.176188945770264
    6. 'edge' → logprob: -5.676188945770264
    7. ' cost' → logprob: -6.426188945770264
    8. '               ' → logprob: -7.051188945770264
    9. 'additional' → logprob: -7.551188945770264
    10. 'next' → logprob: -7.551188945770264

Token 1086: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.033835068345069885
    2. '_up' → logprob: -3.9088351726531982
    3. '_out' → logprob: -4.408834934234619
    4. 'ing' → logprob: -7.658834934234619
    5. ' =' → logprob: -8.158835411071777
    6. '=' → logprob: -9.033835411071777
    7. 'cost' → logprob: -9.783835411071777
    8. 'up' → logprob: -10.533835411071777
    9. '               ' → logprob: -10.533835411071777
    10. '_' → logprob: -11.658835411071777

Token 1087: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868734836578369
    2. '=' → logprob: -1.136873483657837
    3. '                ' → logprob: -13.511873245239258
    4. '               ' → logprob: -14.386873245239258
    5. '                   ' → logprob: -15.761873245239258
    6. ' ' → logprob: -16.386873245239258
    7. '                    ' → logprob: -16.386873245239258
    8. '            ' → logprob: -16.386873245239258
    9. ' =
' → logprob: -17.136873245239258
    10. '           ' → logprob: -17.261873245239258

Token 1088: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.995397365652025e-05
    2. ' ' → logprob: -10.000089645385742
    3. '0' → logprob: -10.250089645385742
    4. '(' → logprob: -12.500089645385742
    5. 'int' → logprob: -12.750089645385742
    6. '   ' → logprob: -13.500089645385742
    7. '               ' → logprob: -15.000089645385742
    8. '           ' → logprob: -15.250089645385742
    9. '                   ' → logprob: -15.875089645385742
    10. 'current' → logprob: -16.125089645385742

Token 1089: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001761272142175585
    2. '0' → logprob: -9.000176429748535
    3. '(' → logprob: -10.625176429748535
    4. ' ' → logprob: -11.250176429748535
    5. 'int' → logprob: -11.250176429748535
    6. '   ' → logprob: -13.625176429748535
    7. 'current' → logprob: -14.875176429748535
    8. '(int' → logprob: -15.000176429748535
    9. ' (' → logprob: -16.37517547607422
    10. '           ' → logprob: -16.87517547607422

Token 1090: '
' (ID: 198)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.0394195020198822
    2. 'if' → logprob: -3.414419412612915
    3. '               ' → logprob: -5.664419651031494
    4. '
' → logprob: -6.164419651031494
    5. '           ' → logprob: -10.164419174194336
    6. '                ' → logprob: -10.539419174194336
    7. '                   ' → logprob: -10.539419174194336
    8. '                
' → logprob: -10.539419174194336
    9. ' 
' → logprob: -11.039419174194336
    10. '                       ' → logprob: -11.414419174194336

Token 1091: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04439247399568558
    2. ' if' → logprob: -3.1693925857543945
    3. '
' → logprob: -7.2943925857543945
    4. 'if' → logprob: -7.4193925857543945
    5. '                
' → logprob: -9.919392585754395
    6. '           ' → logprob: -10.919392585754395
    7. '                   ' → logprob: -11.044392585754395
    8. ' 
' → logprob: -12.169392585754395
    9. '                       ' → logprob: -12.294392585754395
    10. '                               ' → logprob: -12.544392585754395

Token 1092: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0002149802603526041
    2. ' if' → logprob: -8.500214576721191
    3. '               ' → logprob: -11.375214576721191
    4. '                   ' → logprob: -17.125215530395508
    5. 'If' → logprob: -18.375215530395508
    6. '```' → logprob: -18.500215530395508
    7. '                ' → logprob: -19.000215530395508
    8. '                
' → logprob: -19.500215530395508
    9. '                       ' → logprob: -19.875215530395508
    10. 'cl' → logprob: -19.875215530395508

Token 1093: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.004079470410943031
    2. ' current' → logprob: -5.504079341888428
    3. '               ' → logprob: -15.254079818725586
    4. '   ' → logprob: -15.379079818725586
    5. '                   ' → logprob: -15.629079818725586
    6. '	current' → logprob: -15.754079818725586
    7. '(current' → logprob: -16.004079818725586
    8. '           ' → logprob: -16.379079818725586
    9. ' ' → logprob: -17.004079818725586
    10. '$current' → logprob: -17.254079818725586

Token 1094: '_point' (ID: 15466)
  Prédit: '_point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_point' → logprob: -0.0001777960715116933
    2. 'point' → logprob: -9.125177383422852
    3. '_' → logprob: -10.875177383422852
    4. '
' → logprob: -11.125177383422852
    5. '._' → logprob: -11.750177383422852
    6. 'Point' → logprob: -12.250177383422852
    7. '_dist' → logprob: -12.375177383422852
    8. '.' → logprob: -12.500177383422852
    9. '```' → logprob: -12.625177383422852
    10. '_
' → logprob: -12.625177383422852

Token 1095: '.is' (ID: 3109)
  Prédit: '.is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.is' → logprob: -0.07002057880163193
    2. '.' → logprob: -2.6950206756591797
    3. 'is' → logprob: -9.82002067565918
    4. '.isnan' → logprob: -11.69502067565918
    5. ' .' → logprob: -11.82002067565918
    6. '>.' → logprob: -12.82002067565918
    7. ').' → logprob: -12.94502067565918
    8. '}.' → logprob: -13.44502067565918
    9. '.has' → logprob: -13.94502067565918
    10. '```' → logprob: -14.69502067565918

Token 1096: '_m' (ID: 1285)
  Prédit: '_m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -0.001934469910338521
    2. 'mo' → logprob: -6.25193452835083
    3. '_ma' → logprob: -13.251934051513672
    4. 'm' → logprob: -14.126934051513672
    5. 'is' → logprob: -14.126934051513672
    6. ' mo' → logprob: -14.626934051513672
    7. '-mo' → logprob: -15.126934051513672
    8. 'Mo' → logprob: -15.251934051513672
    9. '_is' → logprob: -15.251934051513672
    10. '._' → logprob: -15.376934051513672

Token 1097: 'o' (ID: 78)
  Prédit: 'o'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -6.0868278524139896e-05
    2. 'oa' → logprob: -10.12506103515625
    3. 'oak' → logprob: -12.25006103515625
    4. ''o' → logprob: -12.75006103515625
    5. 'mo' → logprob: -13.12506103515625
    6. 'O' → logprob: -13.37506103515625
    7. 'oan' → logprob: -13.75006103515625
    8. 'о' → logprob: -14.00006103515625
    9. '`' → logprob: -14.00006103515625
    10. '```' → logprob: -14.00006103515625

Token 1098: 'at' (ID: 266)
  Prédit: 'at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.02637333609163761
    2. 'a' → logprob: -3.6513733863830566
    3. 'o' → logprob: -11.151372909545898
    4. 'ат' → logprob: -11.526372909545898
    5. '#' → logprob: -12.026372909545898
    6. '```' → logprob: -12.276372909545898
    7. '	at' → logprob: -12.526372909545898
    8. '
' → logprob: -12.776372909545898
    9. '   ' → logprob: -12.838872909545898
    10. ')' → logprob: -13.151372909545898

Token 1099: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3137943148612976
    2. 'and' → logprob: -1.5637943744659424
    3. ' and' → logprob: -2.8137943744659424
    4. ' ()' → logprob: -12.313794136047363
    5. ')' → logprob: -12.563794136047363
    6. '()==' → logprob: -13.688794136047363
    7. '   ' → logprob: -14.063794136047363
    8. '()
' → logprob: -14.438794136047363
    9. '())' → logprob: -14.563794136047363
    10. '           ' → logprob: -14.688794136047363

Token 1100: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.16022604703903198
    2. ' and' → logprob: -1.9102261066436768
    3. '	and' → logprob: -14.660225868225098
    4. '               ' → logprob: -15.035225868225098
    5. '           ' → logprob: -15.535225868225098
    6. '&&' → logprob: -15.660225868225098
    7. '   ' → logprob: -16.160226821899414
    8. '                ' → logprob: -16.285226821899414
    9. '            ' → logprob: -16.410226821899414
    10. '              ' → logprob: -16.660226821899414

Token 1101: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.016739267855882645
    2. ' not' → logprob: -4.141739368438721
    3. '(not' → logprob: -7.266739368438721
    4. '	not' → logprob: -13.391738891601562
    5. '               ' → logprob: -13.641738891601562
    6. 'neighbor' → logprob: -13.891738891601562
    7. '   ' → logprob: -13.891738891601562
    8. '                   ' → logprob: -14.516738891601562
    9. ' (' → logprob: -14.766738891601562
    10. '
' → logprob: -15.016738891601562

Token 1102: ' neighbor' (ID: 13034)
  Prédit: 'neighbor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbor' → logprob: -0.0002615742268972099
    2. ' neighbor' → logprob: -8.250261306762695
    3. 'ne' → logprob: -16.000261306762695
    4. '```' → logprob: -16.375261306762695
    5. '(ne' → logprob: -17.625261306762695
    6. '   ' → logprob: -17.875261306762695
    7. ' ' → logprob: -18.875261306762695
    8. '                   ' → logprob: -19.000261306762695
    9. '  ' → logprob: -19.125261306762695
    10. '
' → logprob: -19.375261306762695

Token 1103: '_point' (ID: 15466)
  Prédit: '_point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_point' → logprob: -3.4121114822482923e-06
    2. 'point' → logprob: -13.375003814697266
    3. '._' → logprob: -14.000003814697266
    4. '```' → logprob: -15.875003814697266
    5. '_' → logprob: -16.000003814697266
    6. '.' → logprob: -16.375003814697266
    7. '_neighbor' → logprob: -16.625003814697266
    8. '
' → logprob: -16.750003814697266
    9. '_POINT' → logprob: -16.875003814697266
    10. '.point' → logprob: -16.875003814697266

Token 1104: '.is' (ID: 3109)
  Prédit: '.is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.is' → logprob: -0.00012570773833431304
    2. 'is' → logprob: -9.500125885009766
    3. '.' → logprob: -10.000125885009766
    4. ' .' → logprob: -12.250125885009766
    5. '   ' → logprob: -16.625125885009766
    6. '.
' → logprob: -16.625125885009766
    7. '._' → logprob: -16.875125885009766
    8. '.isnan' → logprob: -16.875125885009766
    9. '().' → logprob: -17.000125885009766
    10. '(is' → logprob: -17.125125885009766

Token 1105: '_m' (ID: 1285)
  Prédit: '_m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -0.05489412695169449
    2. 'mo' → logprob: -2.929894208908081
    3. 'm' → logprob: -12.30489444732666
    4. ' mo' → logprob: -13.17989444732666
    5. 'Mo' → logprob: -13.67989444732666
    6. '_ma' → logprob: -14.05489444732666
    7. '```' → logprob: -14.17989444732666
    8. '_' → logprob: -14.55489444732666
    9. '-mo' → logprob: -14.67989444732666
    10. '.mo' → logprob: -15.55489444732666

Token 1106: 'o' (ID: 78)
  Prédit: 'o'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.0016901773633435369
    2. 'at' → logprob: -6.62669038772583
    3. 'mo' → logprob: -8.626689910888672
    4. 'oa' → logprob: -10.001689910888672
    5. 'ot' → logprob: -10.251689910888672
    6. ' moat' → logprob: -10.501689910888672
    7. 'oak' → logprob: -11.126689910888672
    8. 'eat' → logprob: -11.501689910888672
    9. 'a' → logprob: -11.626689910888672
    10. 'oit' → logprob: -11.876689910888672

Token 1107: 'at' (ID: 266)
  Prédit: 'at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.00033951509976759553
    2. 'a' → logprob: -8.00033950805664
    3. 'ат' → logprob: -13.62533950805664
    4. 'ats' → logprob: -14.25033950805664
    5. '	at' → logprob: -14.93783950805664
    6. 'mo' → logprob: -15.50033950805664
    7. '#' → logprob: -15.68783950805664
    8. 'atm' → logprob: -15.87533950805664
    9. 'att' → logprob: -16.12533950805664
    10. 'а' → logprob: -16.37533950805664

Token 1108: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.2523835003376007
    2. '()' → logprob: -1.7523834705352783
    3. '():
' → logprob: -3.0023834705352783
    4. '():
' → logprob: -11.6273832321167
    5. '()
' → logprob: -12.7523832321167
    6. '():

' → logprob: -12.8773832321167
    7. ':' → logprob: -13.0023832321167
    8. '(' → logprob: -13.1273832321167
    9. ' ():' → logprob: -13.7523832321167
    10. '()):
' → logprob: -14.5023832321167

Token 1109: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.011774166487157345
    2. '                       ' → logprob: -4.636774063110352
    3. '               ' → logprob: -7.386774063110352
    4. ':' → logprob: -7.511774063110352
    5. ':
' → logprob: -7.886774063110352
    6. '                           ' → logprob: -8.386774063110352
    7. '                               ' → logprob: -9.761774063110352
    8. '                    ' → logprob: -9.886774063110352
    9. '                  ' → logprob: -10.261774063110352
    10. '                ' → logprob: -11.261774063110352

Token 1110: ' climb' (ID: 27049)
  Prédit: 'cl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cl' → logprob: -0.0007150543970055878
    2. ' climb' → logprob: -7.375715255737305
    3. '                   ' → logprob: -9.625715255737305
    4. '                       ' → logprob: -11.500715255737305
    5. '1' → logprob: -12.875715255737305
    6. '                           ' → logprob: -13.000715255737305
    7. '               ' → logprob: -13.625715255737305
    8. '                               ' → logprob: -13.875715255737305
    9. 'clone' → logprob: -14.000715255737305
    10. '```' → logprob: -14.000715255737305

Token 1111: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -7.896309739408025e-07
    2. 'cost' → logprob: -15.125000953674316
    3. ' _' → logprob: -16.125
    4. 'Cost' → logprob: -16.625
    5. '```' → logprob: -16.625
    6. '_COST' → logprob: -16.75
    7. '_code' → logprob: -17.125
    8. ')_' → logprob: -17.75
    9. '               ' → logprob: -17.875
    10. '                   ' → logprob: -17.875

Token 1112: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1602245420217514
    2. ' =' → logprob: -1.9102245569229126
    3. '+=' → logprob: -15.535224914550781
    4. ' +=' → logprob: -15.660224914550781
    5. '=
' → logprob: -18.03522491455078
    6. ' =
' → logprob: -18.16022491455078
    7. '＝' → logprob: -19.03522491455078
    8. '=

' → logprob: -19.28522491455078
    9. '.=' → logprob: -19.41022491455078
    10. ' ' → logprob: -19.53522491455078

Token 1113: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.875
    3. '   ' → logprob: -22.0
    4. '```' → logprob: -22.5
    5. '۱' → logprob: -23.625
    6. '0' → logprob: -24.25
    7. '' → logprob: -24.375
    8. '
' → logprob: -24.5
    9. '１' → logprob: -24.875
    10. '`' → logprob: -24.875

Token 1114: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -18.125
    3. '   ' → logprob: -22.625
    4. '```' → logprob: -22.75
    5. '۱' → logprob: -23.375
    6. '１' → logprob: -23.875
    7. '' → logprob: -24.125
    8. '0' → logprob: -24.375
    9. '
' → logprob: -24.625
    10. '{
' → logprob: -24.8125

Token 1115: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.029116526246070862
    2. '
' → logprob: -3.654116630554199
    3. '                
' → logprob: -6.154116630554199
    4. '<|end|>' → logprob: -8.2791166305542
    5. '  
' → logprob: -9.6541166305542
    6. '                   ' → logprob: -10.1541166305542
    7. '                ' → logprob: -10.2791166305542
    8. ',' → logprob: -10.4041166305542
    9. '                    
' → logprob: -10.7791166305542
    10. '
' → logprob: -10.7791166305542

Token 1116: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.001531289773993194
    2. '                
' → logprob: -7.25153112411499
    3. '
' → logprob: -7.50153112411499
    4. '                   ' → logprob: -10.001531600952148
    5. ' 
' → logprob: -10.001531600952148
    6. '                ' → logprob: -10.126531600952148
    7. '<|end|>' → logprob: -10.501531600952148
    8. '                    
' → logprob: -11.126531600952148
    9. ' next' → logprob: -11.501531600952148
    10. ',' → logprob: -11.751531600952148

Token 1117: ' nd' (ID: 5914)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.638931393623352
    2. 'new' → logprob: -1.263931393623352
    3. ' new' → logprob: -1.763931393623352
    4. 'next' → logprob: -4.3889312744140625
    5. ' next' → logprob: -5.3889312744140625
    6. ' if' → logprob: -7.7639312744140625
    7. 'if' → logprob: -8.013931274414062
    8. 'total' → logprob: -8.888931274414062
    9. 'nd' (adapté à ' nd') → logprob: -9.513931274414062
    10. 'cost' → logprob: -9.513931274414062

Token 1118: ' =' (ID: 314)
  Prédit: 'ist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ist' → logprob: -0.0009230116847902536
    2. ' =' → logprob: -7.125923156738281
    3. '=' → logprob: -9.625923156738281
    4. 'istance' → logprob: -10.000923156738281
    5. 'st' → logprob: -13.000923156738281
    6. 'is' → logprob: -13.375923156738281
    7. '   ' → logprob: -13.750923156738281
    8. '```' → logprob: -14.250923156738281
    9. 'dist' → logprob: -15.375923156738281
    10. 'ists' → logprob: -15.375923156738281

Token 1119: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.0040785204619169235
    2. ' current' → logprob: -5.504078388214111
    3. 'dist' → logprob: -16.004077911376953
    4. '[current' → logprob: -18.004077911376953
    5. '=current' → logprob: -18.504077911376953
    6. '(current' → logprob: -18.629077911376953
    7. '	current' → logprob: -18.754077911376953
    8. '$current' → logprob: -18.754077911376953
    9. '0' → logprob: -20.754077911376953
    10. '_current' → logprob: -21.129077911376953

Token 1120: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.0015197417233139277
    2. 'dist' → logprob: -7.126519680023193
    3. 'Dist' → logprob: -7.376519680023193
    4. '_' → logprob: -11.001520156860352
    5. '_token' → logprob: -11.126520156860352
    6. '[' → logprob: -11.251520156860352
    7. '_DIST' → logprob: -12.376520156860352
    8. '_tokens' → logprob: -12.376520156860352
    9. '[y' → logprob: -12.376520156860352
    10. ' Dist' → logprob: -13.001520156860352

Token 1121: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.474081814289093
    2. ' +' → logprob: -0.974081814289093
    3. '+n' → logprob: -13.224081993103027
    4. '+
' → logprob: -14.099081993103027
    5. ' +
' → logprob: -14.599081993103027
    6. '+d' → logprob: -14.724081993103027
    7. '+c' → logprob: -15.349081993103027
    8. '               ' → logprob: -16.09908103942871
    9. '＋' → logprob: -16.22408103942871
    10. ' if' → logprob: -16.22408103942871

Token 1122: ' climb' (ID: 27049)
  Prédit: 'cl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cl' → logprob: -9.088346359931165e-07
    2. ' climb' → logprob: -14.000000953674316
    3. '(cl' → logprob: -20.75
    4. 'clone' → logprob: -21.5
    5. '```' → logprob: -22.0
    6. 'cline' → logprob: -22.125
    7. ' cl' → logprob: -22.25
    8. 'ch' → logprob: -22.25
    9. '	cl' → logprob: -22.375
    10. 'cling' → logprob: -22.625

Token 1123: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -3.531315314830863e-06
    2. 'cost' → logprob: -12.625003814697266
    3. 'Cost' → logprob: -16.375003814697266
    4. '_COST' → logprob: -17.125003814697266
    5. '-cost' → logprob: -17.375003814697266
    6. ' cost' → logprob: -18.875003814697266
    7. '_code' → logprob: -20.625003814697266
    8. '_' → logprob: -20.750003814697266
    9. '```' → logprob: -21.000003814697266
    10. 'ost' → logprob: -21.500003814697266

Token 1124: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0019298245897516608
    2. '                
' → logprob: -7.626929759979248
    3. '
' → logprob: -7.751929759979248
    4. '<|end|>' → logprob: -7.876929759979248
    5. ' if' → logprob: -8.501930236816406
    6. '                ' → logprob: -8.501930236816406
    7. ' 
' → logprob: -10.251930236816406
    8. '  
' → logprob: -10.376930236816406
    9. ',' → logprob: -10.751930236816406
    10. '                   ' → logprob: -11.001930236816406

Token 1125: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00045665193465538323
    2. '                
' → logprob: -8.625456809997559
    3. '                ' → logprob: -9.500456809997559
    4. '                   ' → logprob: -9.750456809997559
    5. '			' → logprob: -9.875456809997559
    6. ' if' → logprob: -10.875456809997559
    7. '           ' → logprob: -11.625456809997559
    8. '<|end|>' → logprob: -11.750456809997559
    9. '	           ' → logprob: -12.000456809997559
    10. '              ' → logprob: -12.125456809997559

Token 1126: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0134992441162467
    2. '               ' → logprob: -4.8884992599487305
    3. ' if' → logprob: -5.1384992599487305
    4. '                   ' → logprob: -12.63849925994873
    5. 'If' → logprob: -12.76349925994873
    6. '	if' → logprob: -14.01349925994873
    7. '                ' → logprob: -14.26349925994873
    8. '```' → logprob: -14.88849925994873
    9. '           ' → logprob: -15.26349925994873
    10. 'next' → logprob: -15.63849925994873

Token 1127: ' dist' (ID: 3601)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.3005974292755127
    2. ' nd' → logprob: -1.4255974292755127
    3. 'dist' → logprob: -4.425597190856934
    4. ' dist' → logprob: -4.925597190856934
    5. '(nd' → logprob: -11.425597190856934
    6. '   ' → logprob: -11.675597190856934
    7. '           ' → logprob: -13.425597190856934
    8. '_nd' → logprob: -13.425597190856934
    9. 'ndl' → logprob: -13.550597190856934
    10. '       ' → logprob: -13.675597190856934

Token 1128: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.128163257315464e-07
    2. '][' → logprob: -16.5
    3. 'ny' → logprob: -17.125
    4. ' [' → logprob: -17.75
    5. ' ny' → logprob: -17.875
    6. '```' → logprob: -17.875
    7. '[n' → logprob: -18.375
    8. '[
' → logprob: -18.75
    9. '       ' → logprob: -19.25
    10. '[y' → logprob: -19.5

Token 1129: 'ny' (ID: 3008)
  Prédit: 'ny'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -8.895480277715251e-06
    2. ' ny' → logprob: -12.125008583068848
    3. '[' → logprob: -12.625008583068848
    4. 'y' → logprob: -17.250009536743164
    5. '   ' → logprob: -18.125009536743164
    6. 'n' → logprob: -18.125009536743164
    7. 'nyi' → logprob: -18.250009536743164
    8. 'Ny' → logprob: -18.750009536743164
    9. 'yn' → logprob: -18.875009536743164
    10. '
' → logprob: -18.875009536743164

Token 1130: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.03446962311863899
    2. '[n' → logprob: -3.4094696044921875
    3. '[' → logprob: -7.1594696044921875
    4. ']' → logprob: -10.534469604492188
    5. '"][' → logprob: -11.534469604492188
    6. ''][' → logprob: -12.534469604492188
    7. ' ][' → logprob: -14.159469604492188
    8. '>[' → logprob: -14.159469604492188
    9. ']][' → logprob: -14.284469604492188
    10. '(nx' → logprob: -14.409469604492188

Token 1131: 'nx' (ID: 45103)
  Prédit: 'nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -1.3425219549390022e-05
    2. ' nx' → logprob: -12.00001335144043
    3. '(nx' → logprob: -12.00001335144043
    4. '[n' → logprob: -14.25001335144043
    5. 'n' → logprob: -14.75001335144043
    6. 'ny' → logprob: -17.37501335144043
    7. '
' → logprob: -17.75001335144043
    8. '   ' → logprob: -17.87501335144043
    9. '```' → logprob: -19.12501335144043
    10. 'nz' → logprob: -19.37501335144043

Token 1132: ']' (ID: 60)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.8455378413200378
    2. ' >' → logprob: -0.8455378413200378
    3. ']' → logprob: -2.0955379009246826
    4. ']>' → logprob: -4.0955376625061035
    5. '[' → logprob: -6.8455376625061035
    6. ' ]' → logprob: -7.7205376625061035
    7. '   ' → logprob: -9.970538139343262
    8. '[n' → logprob: -10.470538139343262
    9. '```' → logprob: -11.345538139343262
    10. '    ' → logprob: -11.595538139343262

Token 1133: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.038044705986976624
    2. ' >' → logprob: -3.2880446910858154
    3. '[' → logprob: -13.038044929504395
    4. ' ' → logprob: -15.788044929504395
    5. '">' → logprob: -15.913044929504395
    6. '>[' → logprob: -15.913044929504395
    7. '>`' → logprob: -16.038043975830078
    8. '   ' → logprob: -16.038043975830078
    9. '>d' → logprob: -16.288043975830078
    10. ')>' → logprob: -17.038043975830078

Token 1134: ' nd' (ID: 5914)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.0007100477814674377
    2. ' nd' → logprob: -7.2507100105285645
    3. '(nd' → logprob: -17.875709533691406
    4. '_nd' → logprob: -17.875709533691406
    5. '               ' → logprob: -18.750709533691406
    6. '           ' → logprob: -19.125709533691406
    7. 'n' → logprob: -20.000709533691406
    8. 'nds' → logprob: -20.000709533691406
    9. '                   ' → logprob: -20.250709533691406
    10. '.nd' → logprob: -20.750709533691406

Token 1135: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05223166570067406
    2. ':
' → logprob: -3.052231550216675
    3. '                   ' → logprob: -6.802231788635254
    4. '               ' → logprob: -7.052231788635254
    5. ' :' → logprob: -7.802231788635254
    6. '=' → logprob: -8.302231788635254
    7. '                       ' → logprob: -8.552231788635254
    8. ' :
' → logprob: -8.802231788635254
    9. '                           ' → logprob: -9.052231788635254
    10. '):
' → logprob: -9.052231788635254

Token 1136: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.009318843483924866
    2. '                       ' → logprob: -4.884318828582764
    3. '                           ' → logprob: -7.384318828582764
    4. '               ' → logprob: -7.634318828582764
    5. '                               ' → logprob: -8.009319305419922
    6. '                    
' → logprob: -9.884319305419922
    7. '                    ' → logprob: -10.134319305419922
    8. '                        
' → logprob: -10.384319305419922
    9. '[' → logprob: -10.509319305419922
    10. '           ' → logprob: -10.759319305419922

Token 1137: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.11857868731021881
    2. ' dist' → logprob: -2.2435786724090576
    3. '                   ' → logprob: -5.493578910827637
    4. '                    ' → logprob: -6.868578910827637
    5. '                       ' → logprob: -7.868578910827637
    6. '               ' → logprob: -9.993578910827637
    7. '                ' → logprob: -10.118578910827637
    8. '	dist' → logprob: -10.243578910827637
    9. '_dist' → logprob: -10.493578910827637
    10. '                        ' → logprob: -10.993578910827637

Token 1138: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.9361264946837764e-07
    2. '```' → logprob: -16.875
    3. '][' → logprob: -18.5
    4. ')[' → logprob: -18.75
    5. '[
' → logprob: -19.0
    6. '   ' → logprob: -19.5
    7. ' [' → logprob: -20.125
    8. '
' → logprob: -20.25
    9. '\[' → logprob: -20.625
    10. '       ' → logprob: -20.625

Token 1139: 'ny' (ID: 3008)
  Prédit: 'ny'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -2.3676733690081164e-05
    2. ' ny' → logprob: -10.75002384185791
    3. '[' → logprob: -13.75002384185791
    4. 'y' → logprob: -14.50002384185791
    5. 'nyi' → logprob: -15.87502384185791
    6. 'ni' → logprob: -16.375022888183594
    7. 'n' → logprob: -16.750022888183594
    8. ''ny' → logprob: -16.875022888183594
    9. 'yn' → logprob: -17.375022888183594
    10. 'Ny' → logprob: -17.500022888183594

Token 1140: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0005579164135269821
    2. '[' → logprob: -7.500557899475098
    3. ']' → logprob: -14.000557899475098
    4. '   ' → logprob: -14.250557899475098
    5. '       ' → logprob: -14.375557899475098
    6. ' ][' → logprob: -14.375557899475098
    7. ''][' → logprob: -14.500557899475098
    8. '[n' → logprob: -14.750557899475098
    9. '"][' → logprob: -15.000557899475098
    10. '           ' → logprob: -15.625557899475098

Token 1141: 'nx' (ID: 45103)
  Prédit: 'nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.00046606172691099346
    2. 'x' → logprob: -7.7504658699035645
    3. ' nx' → logprob: -10.750466346740723
    4. '(nx' → logprob: -11.375466346740723
    5. 'ny' → logprob: -13.625466346740723
    6. 'xn' → logprob: -15.625466346740723
    7. 'n' → logprob: -15.750466346740723
    8. '   ' → logprob: -15.875466346740723
    9. '```' → logprob: -15.875466346740723
    10. '
' → logprob: -16.500465393066406

Token 1142: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6940113306045532
    2. ' =' → logprob: -0.6940113306045532
    3. ']' → logprob: -7.694011211395264
    4. ']=' → logprob: -7.819011211395264
    5. ')' → logprob: -13.319011688232422
    6. '=
' → logprob: -13.569011688232422
    7. ')=' → logprob: -14.194011688232422
    8. '<|end|>' → logprob: -14.194011688232422
    9. ' =
' → logprob: -14.319011688232422
    10. '[' → logprob: -15.944011688232422

Token 1143: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.029750604182481766
    2. ' =' → logprob: -3.5297505855560303
    3. '=
' → logprob: -17.40475082397461
    4. ']=' → logprob: -17.77975082397461
    5. '.=' → logprob: -17.77975082397461
    6. '＝' → logprob: -18.27975082397461
    7. '=

' → logprob: -19.02975082397461
    8. ')=' → logprob: -19.27975082397461
    9. '=int' → logprob: -20.15475082397461
    10. ']' → logprob: -20.77975082397461

Token 1144: ' nd' (ID: 5914)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.002475777640938759
    2. ' nd' → logprob: -6.002475738525391
    3. '(nd' → logprob: -16.12747573852539
    4. '_nd' → logprob: -16.75247573852539
    5. 'nt' → logprob: -18.12747573852539
    6. '
' → logprob: -19.25247573852539
    7. 'nds' → logprob: -19.25247573852539
    8. 'ng' → logprob: -19.37747573852539
    9. 'nb' → logprob: -19.50247573852539
    10. 'rd' → logprob: -19.50247573852539

Token 1145: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00023607931507285684
    2. '                    ' → logprob: -9.750236511230469
    3. '```' → logprob: -10.000236511230469
    4. '                    
' → logprob: -10.625236511230469
    5. '				' → logprob: -10.875236511230469
    6. '               ' → logprob: -11.000236511230469
    7. '		           ' → logprob: -11.375236511230469
    8. '                       ' → logprob: -11.375236511230469
    9. '           ' → logprob: -11.500236511230469
    10. ' if' → logprob: -11.750236511230469

Token 1146: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0001478796184528619
    2. '```' → logprob: -9.500147819519043
    3. '                    ' → logprob: -10.625147819519043
    4. '               ' → logprob: -11.500147819519043
    5. '                       ' → logprob: -11.500147819519043
    6. '                  ' → logprob: -11.750147819519043
    7. 'dq' → logprob: -11.750147819519043
    8. '[' → logprob: -12.750147819519043
    9. '           ' → logprob: -12.750147819519043
    10. '				' → logprob: -13.500147819519043

Token 1147: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3569258749485016
    2. 'dq' → logprob: -1.2319258451461792
    3. 'deque' → logprob: -5.981925964355469
    4. '                   ' → logprob: -6.606925964355469
    5. ' if' → logprob: -6.606925964355469
    6. '```' → logprob: -7.481925964355469
    7. '                       ' → logprob: -7.731925964355469
    8. '{
' → logprob: -7.731925964355469
    9. '                           ' → logprob: -8.231925964355469
    10. ' dq' → logprob: -8.356925964355469

Token 1148: ' ' (ID: 220)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.1608557254076004
    2. 'dq' → logprob: -1.910855770111084
    3. '                   ' → logprob: -7.660855770111084
    4. 'd' → logprob: -9.785855293273926
    5. ' if' → logprob: -10.035855293273926
    6. '                       ' → logprob: -10.660855293273926
    7. '(d' → logprob: -11.160855293273926
    8. '                    
' → logprob: -12.160855293273926
    9. ' dq' → logprob: -12.160855293273926
    10. '   ' → logprob: -12.660855293273926

Token 1149: '0' (ID: 15)
  Prédit: 'dq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dq' → logprob: -0.16135099530220032
    2. 'if' → logprob: -1.911350965499878
    3. 'append' → logprob: -7.286351203918457
    4. '(d' → logprob: -9.161351203918457
    5. '(' → logprob: -9.161351203918457
    6. 'deque' → logprob: -9.786351203918457
    7. '   ' → logprob: -10.786351203918457
    8. '.append' → logprob: -10.786351203918457
    9. ' dq' → logprob: -11.036351203918457
    10. '```' → logprob: -11.036351203918457

Token 1150: '-' (ID: 12)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.0891420766711235
    2. 'if' → logprob: -2.464142084121704
    3. '<=' → logprob: -9.714141845703125
    4. '-' → logprob: -10.339141845703125
    5. ' <=' → logprob: -10.339141845703125
    6. 'cost' → logprob: -11.089141845703125
    7. '==' → logprob: -11.089141845703125
    8. '-cost' → logprob: -11.589141845703125
    9. '	if' → logprob: -12.214141845703125
    10. ' ==' → logprob: -12.339141845703125

Token 1151: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5124602317810059
    2. 'dist' → logprob: -1.1374602317810059
    3. 'nd' → logprob: -3.262460231781006
    4. 'cost' → logprob: -4.012460231781006
    5. 'append' → logprob: -4.262460231781006
    6. 'dq' → logprob: -5.637460231781006
    7. 'deque' → logprob: -6.262460231781006
    8. 'push' → logprob: -6.262460231781006
    9. 'one' → logprob: -7.387460231781006
    10. 'if' → logprob: -8.137460708618164

Token 1152: ' BFS' (ID: 190016)
  Prédit: 'dq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dq' → logprob: -0.35325583815574646
    2. 'append' → logprob: -2.2282557487487793
    3. 'if' → logprob: -2.6032557487487793
    4. 'cost' → logprob: -3.1032557487487793
    5. ' if' → logprob: -4.103255748748779
    6. ' dq' → logprob: -4.228255748748779
    7. 'deque' → logprob: -4.978255748748779
    8. '_d' → logprob: -5.103255748748779
    9. '.append' → logprob: -5.103255748748779
    10. 'dj' → logprob: -5.728255748748779

Token 1153: ':' (ID: 25)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.2782624661922455
    2. '                   ' → logprob: -1.7782624959945679
    3. '                       ' → logprob: -3.2782623767852783
    4. 'append' → logprob: -4.528262615203857
    5. '
' → logprob: -4.778262615203857
    6. ' if' → logprob: -5.653262615203857
    7. ' append' → logprob: -6.028262615203857
    8. 'dq' → logprob: -6.028262615203857
    9. ',' → logprob: -6.653262615203857
    10. '[' → logprob: -6.903262615203857

Token 1154: ' if' (ID: 538)
  Prédit: 'dq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dq' → logprob: -0.021413089707493782
    2. 'if' → logprob: -3.8964130878448486
    3. ' dq' → logprob: -7.896413326263428
    4. 'deque' → logprob: -8.02141284942627
    5. 'd' → logprob: -9.39641284942627
    6. ' if' → logprob: -10.27141284942627
    7. 'append' → logprob: -11.27141284942627
    8. '(d' → logprob: -11.39641284942627
    9. '                   ' → logprob: -12.39641284942627
    10. '```' → logprob: -12.77141284942627

Token 1155: ' climb' (ID: 27049)
  Prédit: 'cl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cl' → logprob: -0.011057492345571518
    2. ' climb' → logprob: -4.511057376861572
    3. '   ' → logprob: -12.63605785369873
    4. '	cl' → logprob: -12.88605785369873
    5. ' cl' → logprob: -13.26105785369873
    6. '(cl' → logprob: -14.88605785369873
    7. ' ' → logprob: -15.01105785369873
    8. '                   ' → logprob: -15.26105785369873
    9. ' clim' → logprob: -15.63605785369873
    10. '                       ' → logprob: -15.88605785369873

Token 1156: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -4.320199877838604e-07
    2. 'cost' → logprob: -15.0
    3. '_COST' → logprob: -20.125
    4. ' cost' → logprob: -21.125
    5. 'Cost' → logprob: -21.5
    6. '-cost' → logprob: -22.5
    7. '```' → logprob: -24.0
    8. '                   ' → logprob: -24.5
    9. '               ' → logprob: -24.625
    10. '_code' → logprob: -25.125

Token 1157: '=' (ID: 28)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.11285702139139175
    2. ' ==' → logprob: -2.2378571033477783
    3. ')==' → logprob: -11.4878568649292
    4. ']==' → logprob: -11.7378568649292
    5. '===' → logprob: -11.9878568649292
    6. '```' → logprob: -12.7378568649292
    7. '=' → logprob: -13.1128568649292
    8. '==
' → logprob: -13.2378568649292
    9. '()==' → logprob: -14.1128568649292
    10. ':' → logprob: -14.3628568649292

Token 1158: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3133045732975006
    2. '0' → logprob: -1.3133045434951782
    3. ' ' → logprob: -10.063304901123047
    4. '```' → logprob: -15.938304901123047
    5. '=' → logprob: -17.188304901123047
    6. '   ' → logprob: -17.438304901123047
    7. '{' → logprob: -19.563304901123047
    8. '
' → logprob: -19.563304901123047
    9. '-' → logprob: -19.563304901123047
    10. '==' → logprob: -19.688304901123047

Token 1159: ' add' (ID: 1147)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8190871477127075
    2. '                       ' → logprob: -0.9440871477127075
    3. ':
' → logprob: -2.569087028503418
    4. ',' → logprob: -2.569087028503418
    5. '                           ' → logprob: -4.569087028503418
    6. ',d' → logprob: -6.069087028503418
    7. ':d' → logprob: -6.444087028503418
    8. '                   ' → logprob: -6.694087028503418
    9. '                        ' → logprob: -8.569087028503418
    10. '                      ' → logprob: -8.819087028503418

Token 1160: ' to' (ID: 316)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.5929484963417053
    2. '(nx' → logprob: -0.9679484963417053
    3. '(n' → logprob: -3.3429484367370605
    4. '((' → logprob: -3.9679484367370605
    5. 'to' → logprob: -4.9679484367370605
    6. 'append' → logprob: -6.2179484367370605
    7. 'nx' → logprob: -6.4679484367370605
    8. 'first' → logprob: -7.2179484367370605
    9. 'deque' → logprob: -7.2179484367370605
    10. 'front' → logprob: -8.342948913574219

Token 1161: ' left' (ID: 3561)
  Prédit: 'dq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dq' → logprob: -0.02095663547515869
    2. 'front' → logprob: -4.770956516265869
    3. 'left' → logprob: -5.520956516265869
    4. ' dq' → logprob: -6.020956516265869
    5. 'deque' → logprob: -6.395956516265869
    6. 'the' → logprob: -6.520956516265869
    7. 'append' → logprob: -6.645956516265869
    8. ' the' → logprob: -7.645956516265869
    9. 'd' → logprob: -8.020956993103027
    10. ' front' → logprob: -8.645956993103027

Token 1162: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.584595799446106
    2. 'else' → logprob: -1.209595799446106
    3. ' else' → logprob: -2.4595956802368164
    4. '                   ' → logprob: -3.3345956802368164
    5. ';' → logprob: -4.459595680236816
    6. 'dq' → logprob: -5.459595680236816
    7. '                       ' → logprob: -6.084595680236816
    8. ' ,' → logprob: -6.959595680236816
    9. ' (' → logprob: -7.084595680236816
    10. '(d' → logprob: -7.334595680236816

Token 1163: ' else' (ID: 1203)
  Prédit: 'dq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dq' → logprob: -0.13614779710769653
    2. 'else' → logprob: -2.2611477375030518
    3. 'append' → logprob: -5.261147975921631
    4. ' else' → logprob: -5.636147975921631
    5. ' dq' → logprob: -5.636147975921631
    6. 'elif' → logprob: -5.636147975921631
    7. 'if' → logprob: -6.011147975921631
    8. 'deque' → logprob: -6.011147975921631
    9. '                   ' → logprob: -6.636147975921631
    10. '                       ' → logprob: -8.636147499084473

Token 1164: ' right' (ID: 1849)
  Prédit: 'dq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dq' → logprob: -0.39164671301841736
    2. 'append' → logprob: -1.5166467428207397
    3. ' dq' → logprob: -3.01664662361145
    4. 'add' → logprob: -4.016646862030029
    5. ' append' → logprob: -4.141646862030029
    6. 'to' → logprob: -4.641646862030029
    7. ' add' → logprob: -4.766646862030029
    8. ' to' → logprob: -6.016646862030029
    9. '                   ' → logprob: -7.516646862030029
    10. '.append' → logprob: -8.141646385192871

Token 1165: '.
' (ID: 558)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.11128624528646469
    2. '                   ' → logprob: -2.736286163330078
    3. 'dq' → logprob: -4.611286163330078
    4. '                       ' → logprob: -4.736286163330078
    5. '.append' → logprob: -5.236286163330078
    6. ' (' → logprob: -5.611286163330078
    7. 'append' → logprob: -5.861286163330078
    8. '(' → logprob: -6.236286163330078
    9. ' dq' → logprob: -6.736286163330078
    10. '   ' → logprob: -6.861286163330078

Token 1166: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00038539018714800477
    2. '                    ' → logprob: -8.500385284423828
    3. '                    
' → logprob: -9.875385284423828
    4. ' dq' → logprob: -10.125385284423828
    5. '                       ' → logprob: -10.500385284423828
    6. 'dq' → logprob: -10.500385284423828
    7. '               ' → logprob: -11.500385284423828
    8. '           ' → logprob: -12.375385284423828
    9. '                  ' → logprob: -12.375385284423828
    10. '```' → logprob: -13.125385284423828

Token 1167: ' if' (ID: 538)
  Prédit: 'dq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dq' → logprob: -0.012580640614032745
    2. 'if' (adapté à ' if') → logprob: -4.512580871582031
    3. ' dq' → logprob: -6.637580871582031
    4. '                   ' → logprob: -8.887580871582031
    5. 'deque' → logprob: -10.387580871582031
    6. ' if' → logprob: -10.512580871582031
    7. '                       ' → logprob: -11.887580871582031
    8. '(d' → logprob: -11.887580871582031
    9. '               ' → logprob: -12.887580871582031
    10. '   ' → logprob: -13.137580871582031

Token 1168: ' climb' (ID: 27049)
  Prédit: 'cl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cl' → logprob: -2.9875325708417222e-05
    2. ' climb' → logprob: -10.500029563903809
    3. '(cl' → logprob: -13.375029563903809
    4. '   ' → logprob: -15.125029563903809
    5. ' ' → logprob: -15.750029563903809
    6. '	cl' → logprob: -16.000030517578125
    7. 'clone' → logprob: -16.875030517578125
    8. '  ' → logprob: -17.125030517578125
    9. 'ch' → logprob: -17.375030517578125
    10. 'cline' → logprob: -17.500030517578125

Token 1169: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -1.1472419600977446e-06
    2. 'cost' → logprob: -13.750000953674316
    3. '_COST' → logprob: -17.000001907348633
    4. 'Cost' → logprob: -17.500001907348633
    5. '-cost' → logprob: -18.500001907348633
    6. ' cost' → logprob: -19.500001907348633
    7. '_c' → logprob: -20.000001907348633
    8. '_code' → logprob: -20.125001907348633
    9. 'ost' → logprob: -20.750001907348633
    10. '_cap' → logprob: -21.125001907348633

Token 1170: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.04863641783595085
    2. ' ==' → logprob: -3.0486364364624023
    3. ')==' → logprob: -10.173636436462402
    4. ']==' → logprob: -12.173636436462402
    5. ')' → logprob: -13.048636436462402
    6. '===' → logprob: -13.673636436462402
    7. '=' → logprob: -13.923636436462402
    8. '==
' → logprob: -14.173636436462402
    9. '()==' → logprob: -14.923636436462402
    10. '0' → logprob: -15.423636436462402

Token 1171: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. '1' → logprob: -17.250001907348633
    4. '=' → logprob: -19.625001907348633
    5. '```' → logprob: -19.750001907348633
    6. '   ' → logprob: -20.125001907348633
    7. '۰' → logprob: -20.625001907348633
    8. ')' → logprob: -21.875001907348633
    9. ' ' → logprob: -22.312501907348633
    10. '[' → logprob: -22.562501907348633

Token 1172: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.125
    3. '1' → logprob: -18.125
    4. '=' → logprob: -19.375
    5. '```' → logprob: -19.625
    6. '   ' → logprob: -20.5
    7. '۰' → logprob: -20.8125
    8. ' ' → logprob: -21.625
    9. ')' → logprob: -22.375
    10. '00' → logprob: -22.5625

Token 1173: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11913205683231354
    2. ':
' → logprob: -2.2441320419311523
    3. '                       ' → logprob: -5.119132041931152
    4. '):
' → logprob: -9.369132041931152
    5. '):' → logprob: -9.744132041931152
    6. '                           ' → logprob: -9.869132041931152
    7. ')' → logprob: -9.994132041931152
    8. ':
' → logprob: -10.744132041931152
    9. ':d' → logprob: -11.369132041931152
    10. '                   ' → logprob: -11.619132041931152

Token 1174: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.002735686022788286
    2. 'dq' → logprob: -6.627735614776611
    3. '                   ' → logprob: -6.752735614776611
    4. '                           ' → logprob: -8.87773609161377
    5. ' dq' → logprob: -9.62773609161377
    6. '                      ' → logprob: -11.25273609161377
    7. 'deque' → logprob: -12.25273609161377
    8. '               ' → logprob: -12.50273609161377
    9. '                     ' → logprob: -13.00273609161377
    10. 'd' → logprob: -13.37773609161377

Token 1175: ' dq' (ID: 164235)
  Prédit: 'dq'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dq' (adapté à ' dq') → logprob: -0.00014525714504998177
    2. ' dq' → logprob: -8.875144958496094
    3. '                       ' → logprob: -12.375144958496094
    4. '                           ' → logprob: -14.750144958496094
    5. 'deque' → logprob: -15.000144958496094
    6. '                   ' → logprob: -15.625144958496094
    7. 'd' → logprob: -16.000144958496094
    8. '	d' → logprob: -18.250144958496094
    9. 'dj' → logprob: -18.500144958496094
    10. 'self' → logprob: -18.625144958496094

Token 1176: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0007347009377554059
    2. 'append' → logprob: -7.500734806060791
    3. '.' → logprob: -8.625734329223633
    4. '_append' → logprob: -14.250734329223633
    5. '.app' → logprob: -14.375734329223633
    6. 'app' → logprob: -14.500734329223633
    7. '	append' → logprob: -15.750734329223633
    8. ' append' → logprob: -16.000734329223633
    9. 'Append' → logprob: -16.250734329223633
    10. 'appen' → logprob: -16.375734329223633

Token 1177: 'left' (ID: 4530)
  Prédit: 'left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -6.2729995988775045e-06
    2. 'lef' → logprob: -12.875006675720215
    3. 'opleft' → logprob: -13.250006675720215
    4. 'le' → logprob: -13.625006675720215
    5. '((' → logprob: -14.750006675720215
    6. 'l' → logprob: -17.0000057220459
    7. '_left' → logprob: -17.6250057220459
    8. 'front' → logprob: -18.0000057220459
    9. 'append' → logprob: -18.3750057220459
    10. 'Left' → logprob: -18.5000057220459

Token 1178: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -1.1160349458805285e-05
    2. '(' → logprob: -11.500011444091797
    3. '(((' → logprob: -14.250011444091797
    4. '(nx' → logprob: -15.250011444091797
    5. ' ((' → logprob: -18.125011444091797
    6. '(n' → logprob: -19.250011444091797
    7. '[(' → logprob: -19.625011444091797
    8. '(
' → logprob: -19.750011444091797
    9. ')((' → logprob: -20.750011444091797
    10. ' ' → logprob: -21.000011444091797

Token 1179: 'nx' (ID: 45103)
  Prédit: 'nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.0009130131802521646
    2. '(nx' → logprob: -7.000913143157959
    3. ' nx' → logprob: -13.7509126663208
    4. '(n' → logprob: -15.2509126663208
    5. 'n' → logprob: -16.875913619995117
    6. '(' → logprob: -17.125913619995117
    7. '
' → logprob: -17.625913619995117
    8. '   ' → logprob: -17.625913619995117
    9. ' (' → logprob: -19.750913619995117
    10. '                   ' → logprob: -20.125913619995117

Token 1180: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004311460361350328
    2. ',y' → logprob: -8.625431060791016
    3. ',n' → logprob: -8.750431060791016
    4. '<|end|>' → logprob: -9.625431060791016
    5. ',
' → logprob: -11.500431060791016
    6. ' ,' → logprob: -11.625431060791016
    7. ',None' → logprob: -13.375431060791016
    8. '‌,' → logprob: -14.000431060791016
    9. ')' → logprob: -14.000431060791016
    10. ',user' → logprob: -14.375431060791016

Token 1181: 'ny' (ID: 3008)
  Prédit: 'ny'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -2.7610454708337784e-05
    2. ' ny' → logprob: -10.500027656555176
    3. 'n' → logprob: -18.25002670288086
    4. 'nyi' → logprob: -18.62502670288086
    5. 'nym' → logprob: -19.50002670288086
    6. '
' → logprob: -19.87502670288086
    7. 'NY' → logprob: -20.37502670288086
    8. 'nyt' → logprob: -20.50002670288086
    9. ' ' → logprob: -20.62502670288086
    10. 'yn' → logprob: -20.75002670288086

Token 1182: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002678272081539035
    2. '))' → logprob: -6.002678394317627
    3. ')
' → logprob: -8.752677917480469
    4. ')}' → logprob: -10.252677917480469
    5. '))
' → logprob: -12.502677917480469
    6. '<|end|>' → logprob: -13.252677917480469
    7. '                       ' → logprob: -14.002677917480469
    8. ')))' → logprob: -14.627677917480469
    9. ')**' → logprob: -14.877677917480469
    10. ')}}' → logprob: -15.252677917480469

Token 1183: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.004931073635816574
    2. 'else' → logprob: -5.3799309730529785
    3. ' else' → logprob: -8.504931449890137
    4. '                       ' → logprob: -9.504931449890137
    5. '```' → logprob: -10.754931449890137
    6. '               ' → logprob: -12.379931449890137
    7. '				' → logprob: -12.629931449890137
    8. '   ' → logprob: -14.004931449890137
    9. '           ' → logprob: -14.129931449890137
    10. '                    ' → logprob: -14.754931449890137

Token 1184: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.034883689135313034
    2. ' else' → logprob: -3.534883737564087
    3. '                   ' → logprob: -5.409883499145508
    4. 'dq' → logprob: -8.284883499145508
    5. '                       ' → logprob: -8.409883499145508
    6. '```' → logprob: -9.534883499145508
    7. '
' → logprob: -10.409883499145508
    8. ':
' → logprob: -11.659883499145508
    9. '                    ' → logprob: -11.909883499145508
    10. ')' → logprob: -12.034883499145508

Token 1185: ':
' (ID: 734)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.3923629820346832
    2. ':
' → logprob: -1.1423629522323608
    3. ':' → logprob: -5.51736307144165
    4. '                   ' → logprob: -7.51736307144165
    5. '                           ' → logprob: -8.392362594604492
    6. '                        ' → logprob: -8.767362594604492
    7. '{
' → logprob: -9.267362594604492
    8. '(d' → logprob: -9.392362594604492
    9. '                      ' → logprob: -9.642362594604492
    10. 'dq' → logprob: -9.767362594604492

Token 1186: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.2176041156053543
    2. 'dq' → logprob: -1.717604160308838
    3. ' dq' → logprob: -4.217604160308838
    4. '                   ' → logprob: -7.717604160308838
    5. 'd' → logprob: -8.71760368347168
    6. 'dj' → logprob: -8.71760368347168
    7. '                        ' → logprob: -9.09260368347168
    8. 'deque' → logprob: -9.34260368347168
    9. '                           ' → logprob: -9.46760368347168
    10. '                      ' → logprob: -9.84260368347168

Token 1187: ' dq' (ID: 164235)
  Prédit: 'dq'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dq' (adapté à ' dq') → logprob: -0.00010795372509164736
    2. ' dq' → logprob: -9.250107765197754
    3. '                       ' → logprob: -11.500107765197754
    4. 'dj' → logprob: -14.000107765197754
    5. '                   ' → logprob: -14.875107765197754
    6. 'deque' → logprob: -15.375107765197754
    7. '                           ' → logprob: -16.00010871887207
    8. '               ' → logprob: -17.12510871887207
    9. '           ' → logprob: -17.62510871887207
    10. '                        ' → logprob: -18.87510871887207

Token 1188: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -1.981667537620524e-06
    2. 'append' → logprob: -14.000001907348633
    3. '.app' → logprob: -14.500001907348633
    4. '.' → logprob: -14.750001907348633
    5. 'app' → logprob: -16.750001907348633
    6. 'appen' → logprob: -17.250001907348633
    7. '.extend' → logprob: -17.750001907348633
    8. ' .' → logprob: -18.000001907348633
    9. '.enqueue' → logprob: -18.625001907348633
    10. ' app' → logprob: -19.375001907348633

Token 1189: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.02208649553358555
    2. 'right' → logprob: -3.8970863819122314
    3. '(nx' → logprob: -6.6470866203308105
    4. '(n' → logprob: -8.397086143493652
    5. ' ((' → logprob: -12.022086143493652
    6. 'append' → logprob: -12.272086143493652
    7. '(' → logprob: -12.897086143493652
    8. '.append' → logprob: -13.397086143493652
    9. 'Right' → logprob: -13.897086143493652
    10. ')((' → logprob: -14.272086143493652

Token 1190: 'nx' (ID: 45103)
  Prédit: 'nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -5.5577775128767826e-06
    2. '(nx' → logprob: -12.500005722045898
    3. ' nx' → logprob: -13.250005722045898
    4. 'ny' → logprob: -18.7500057220459
    5. 'nk' → logprob: -19.2500057220459
    6. 'nn' → logprob: -19.3750057220459
    7. 'n' → logprob: -19.6250057220459
    8. 'xn' → logprob: -20.0000057220459
    9. '```' → logprob: -20.0000057220459
    10. 'Nx' → logprob: -21.0000057220459

Token 1191: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.576278030872345
    2. 'ny' → logprob: -0.826278030872345
    3. 'nx' → logprob: -8.076277732849121
    4. '
' → logprob: -12.201277732849121
    5. '(nx' → logprob: -12.201277732849121
    6. 'nyi' → logprob: -12.951277732849121
    7. ',n' → logprob: -13.201277732849121
    8. 'n' → logprob: -13.326277732849121
    9. ',
' → logprob: -13.451277732849121
    10. '(n' → logprob: -13.576277732849121

Token 1192: 'ny' (ID: 3008)
  Prédit: 'ny'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -1.9361264946837764e-07
    2. ' ny' → logprob: -16.25
    3. 'nx' → logprob: -17.25
    4. 'n' → logprob: -19.75
    5. 'nym' → logprob: -20.0
    6. '
' → logprob: -20.125
    7. 'nyi' → logprob: -20.625
    8. '   ' → logprob: -21.125
    9. 'y' → logprob: -21.125
    10. ')' → logprob: -21.75

Token 1193: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00048072010395117104
    2. ')' → logprob: -8.000480651855469
    3. '))
' → logprob: -8.875480651855469
    4. ')))' → logprob: -12.500480651855469
    5. '                       ' → logprob: -14.375480651855469
    6. '                   ' → logprob: -15.375480651855469
    7. '(n' → logprob: -15.625480651855469
    8. ' ))' → logprob: -15.625480651855469
    9. '(nx' → logprob: -15.750480651855469
    10. '()))' → logprob: -16.50048065185547

Token 1194: '        
' (ID: 3564)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -9.031157969729975e-05
    2. '
' → logprob: -10.125090599060059
    3. 'return' → logprob: -10.875090599060059
    4. '        
' → logprob: -11.125090599060059
    5. '           ' → logprob: -11.750090599060059
    6. '   ' → logprob: -12.250090599060059
    7. '               ' → logprob: -13.875090599060059
    8. ' return' → logprob: -14.625090599060059
    9. '                   ' → logprob: -14.750090599060059
    10. '```' → logprob: -14.750090599060059

Token 1195: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0001137947037932463
    2. 'return' → logprob: -9.875113487243652
    3. 'goal' → logprob: -9.875113487243652
    4. '
' → logprob: -13.000113487243652
    5. 'result' → logprob: -13.250113487243652
    6. 'if' → logprob: -13.375113487243652
    7. ' goal' → logprob: -13.375113487243652
    8. '        
' → logprob: -13.750113487243652
    9. '```' → logprob: -13.750113487243652
    10. ' if' → logprob: -14.250113487243652

Token 1196: ' goal' (ID: 8583)
  Prédit: 'gx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gx' → logprob: -0.06518584489822388
    2. 'goal' (adapté à ' goal') → logprob: -2.815185785293579
    3. 'x' → logprob: -6.440186023712158
    4. 'return' → logprob: -6.565186023712158
    5. 'if' → logprob: -9.065185546875
    6. ' gx' → logprob: -9.440185546875
    7. '(goal' → logprob: -12.440185546875
    8. 'gy' → logprob: -12.565185546875
    9. 'result' → logprob: -12.940185546875
    10. 'go' → logprob: -14.190185546875

Token 1197: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.004087778273969889
    2. 'x' → logprob: -5.504087924957275
    3. ' =' → logprob: -11.754087448120117
    4. 'X' → logprob: -14.129087448120117
    5. '=' → logprob: -15.004087448120117
    6. '_pos' → logprob: -15.879087448120117
    7. '_y' → logprob: -16.629087448120117
    8. '```' → logprob: -17.004087448120117
    9. '[' → logprob: -17.254087448120117
    10. '_' → logprob: -17.504087448120117

Token 1198: ',' (ID: 11)
  Prédit: '[self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[self' → logprob: -0.8174632787704468
    2. ',' → logprob: -1.5674632787704468
    3. '[' → logprob: -1.6924632787704468
    4. ',self' → logprob: -1.9424632787704468
    5. '<|end|>' → logprob: -4.317463397979736
    6. ',[' → logprob: -6.692463397979736
    7. ',
' → logprob: -7.192463397979736
    8. '[next' → logprob: -7.192463397979736
    9. '```' → logprob: -7.192463397979736
    10. '[token' → logprob: -7.442463397979736

Token 1199: ' goal' (ID: 8583)
  Prédit: 'goal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'goal' → logprob: -0.00033951509976759553
    2. ' goal' → logprob: -8.00033950805664
    3. 'self' → logprob: -12.50033950805664
    4. 'go' → logprob: -16.12533950805664
    5. 'y' → logprob: -16.37533950805664
    6. '(goal' → logprob: -16.37533950805664
    7. '_goal' → logprob: -17.75033950805664
    8. '.goal' → logprob: -18.37533950805664
    9. ' self' → logprob: -18.50033950805664
    10. '```' → logprob: -19.75033950805664

Token 1200: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -0.051412053406238556
    2. ',' → logprob: -3.0514121055603027
    3. ',y' → logprob: -6.426412105560303
    4. '[' → logprob: -7.676412105560303
    5. ',_' → logprob: -8.051411628723145
    6. 'y' → logprob: -8.926411628723145
    7. '<|end|>' → logprob: -9.926411628723145
    8. '_,' → logprob: -10.176411628723145
    9. '<|end|>' → logprob: -10.676411628723145
    10. '=' → logprob: -10.676411628723145

Token 1201: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006476502865552902
    2. '=' → logprob: -5.131476402282715
    3. ',' → logprob: -8.131476402282715
    4. '        ' → logprob: -8.756476402282715
    5. '       ' → logprob: -10.006476402282715
    6. '<|end|>' → logprob: -10.506476402282715
    7. '=self' → logprob: -11.131476402282715
    8. ' =
' → logprob: -13.131476402282715
    9. '<|end|>' → logprob: -13.881476402282715
    10. ' =)' → logprob: -14.256476402282715

Token 1202: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0001584850688232109
    2. ' self' → logprob: -8.750158309936523
    3. '       ' → logprob: -18.875158309936523
    4. '[self' → logprob: -18.875158309936523
    5. '(self' → logprob: -20.125158309936523
    6. '=self' → logprob: -20.375158309936523
    7. '*self' → logprob: -21.000158309936523
    8. '$self' → logprob: -21.500158309936523
    9. '	self' → logprob: -21.625158309936523
    10. '           ' → logprob: -21.750158309936523

Token 1203: '.goal' (ID: 140776)
  Prédit: 'goal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'goal' → logprob: -0.8612157702445984
    2. '.cast' → logprob: -1.1112158298492432
    3. 'cast' → logprob: -1.8612158298492432
    4. '.goal' → logprob: -2.611215829849243
    5. 'castle' → logprob: -3.986215829849243
    6. 'user' → logprob: -7.736215591430664
    7. '_cast' → logprob: -9.736215591430664
    8. '.user' → logprob: -9.861215591430664
    9. '```' → logprob: -11.236215591430664
    10. '_goal' → logprob: -11.236215591430664

Token 1204: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.4405503273010254
    2. '       ' → logprob: -1.4405503273010254
    3. '<|end|>' → logprob: -1.4405503273010254
    4. ',' → logprob: -1.5655503273010254
    5. '        
' → logprob: -3.5655503273010254
    6. ')' → logprob: -3.8155503273010254
    7. ',
' → logprob: -4.565550327301025
    8. '[' → logprob: -5.440550327301025
    9. '<|end|>' → logprob: -6.190550327301025
    10. 'dist' → logprob: -6.315550327301025

Token 1205: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12755317986011505
    2. 'return' → logprob: -2.1275532245635986
    3. '```' → logprob: -7.8775529861450195
    4. ' return' → logprob: -9.75255298614502
    5. 'result' → logprob: -9.75255298614502
    6. '
' → logprob: -9.75255298614502
    7. 'if' → logprob: -10.00255298614502
    8. '``' → logprob: -11.25255298614502
    9. 'dist' → logprob: -11.75255298614502
    10. '`' → logprob: -13.25255298614502

Token 1206: ' res' (ID: 694)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.010358340106904507
    2. 'result' → logprob: -5.0103583335876465
    3. 'res' (adapté à ' res') → logprob: -5.7603583335876465
    4. 'if' → logprob: -7.7603583335876465
    5. '       ' → logprob: -10.635358810424805
    6. 'ret' → logprob: -11.260358810424805
    7. 'answer' → logprob: -12.260358810424805
    8. '```' → logprob: -12.260358810424805
    9. 'cost' → logprob: -12.385358810424805
    10. ' return' → logprob: -12.635358810424805

Token 1207: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03278050199151039
    2. '=' → logprob: -3.532780408859253
    3. 'ult' → logprob: -5.907780647277832
    4. 'dist' → logprob: -9.157780647277832
    5. 't' → logprob: -9.907780647277832
    6. '_dist' → logprob: -10.032780647277832
    7. '   ' → logprob: -10.407780647277832
    8. 'ults' → logprob: -11.157780647277832
    9. 'ault' → logprob: -11.282780647277832
    10. ' dist' → logprob: -11.282780647277832

Token 1208: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.00861456897109747
    2. ' dist' → logprob: -4.758614540100098
    3. '	dist' → logprob: -17.758615493774414
    4. '(dist' → logprob: -18.008615493774414
    5. '0' → logprob: -19.383615493774414
    6. '_dist' → logprob: -20.008615493774414
    7. 'Dist' → logprob: -20.383615493774414
    8. '   ' → logprob: -20.383615493774414
    9. '.dist' → logprob: -20.633615493774414
    10. '
' → logprob: -20.883615493774414

Token 1209: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0005563704180531204
    2. 'goal' → logprob: -7.500556468963623
    3. '(goal' → logprob: -12.750555992126465
    4. '```' → logprob: -15.000555992126465
    5. '[result' → logprob: -17.12555694580078
    6. 'Goal' → logprob: -17.25055694580078
    7. '_goal' → logprob: -17.37555694580078
    8. ' goal' → logprob: -17.50055694580078
    9. 'res' → logprob: -17.62555694580078
    10. '=' → logprob: -17.87555694580078

Token 1210: 'goal' (ID: 47313)
  Prédit: 'goal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'goal' → logprob: -3.128163257315464e-07
    2. ' goal' → logprob: -15.75
    3. '(goal' → logprob: -17.0
    4. '.goal' → logprob: -19.125
    5. '_goal' → logprob: -20.75
    6. 'Goal' → logprob: -21.625
    7. '[' → logprob: -21.75
    8. '0' → logprob: -22.125
    9. '```' → logprob: -22.125
    10. 'go' → logprob: -22.375

Token 1211: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -0.00019495772721711546
    2. 'y' → logprob: -8.625194549560547
    3. '[' → logprob: -11.125194549560547
    4. 'goal' → logprob: -15.375194549560547
    5. '_x' → logprob: -15.625194549560547
    6. 'res' → logprob: -15.625194549560547
    7. 'Y' → logprob: -16.750194549560547
    8. '[y' → logprob: -17.250194549560547
    9. '```' → logprob: -17.250194549560547
    10. '][' → logprob: -19.000194549560547

Token 1212: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.4745764136314392
    2. '[' → logprob: -0.9745764136314392
    3. 'goal' → logprob: -7.849576473236084
    4. '(goal' → logprob: -9.849575996398926
    5. ']' → logprob: -10.349575996398926
    6. '_goal' → logprob: -11.724575996398926
    7. '```' → logprob: -12.849575996398926
    8. '[
' → logprob: -13.224575996398926
    9. ')[' → logprob: -13.224575996398926
    10. ']][' → logprob: -13.349575996398926

Token 1213: 'goal' (ID: 47313)
  Prédit: 'goal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'goal' → logprob: -4.320199877838604e-07
    2. ' goal' → logprob: -15.0
    3. '(goal' → logprob: -18.75
    4. '.goal' → logprob: -21.125
    5. '
' → logprob: -22.25
    6. '_goal' → logprob: -22.75
    7. 'Goal' → logprob: -24.25
    8. 'quest' → logprob: -24.625
    9. '```' → logprob: -25.0
    10. 'go' → logprob: -25.25

Token 1214: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.018174296244978905
    2. 'x' → logprob: -4.018174171447754
    3. 'goal' → logprob: -10.768174171447754
    4. 'res' → logprob: -13.018174171447754
    5. ']' → logprob: -14.393174171447754
    6. 'X' → logprob: -15.518174171447754
    7. '```' → logprob: -15.518174171447754
    8. '[' → logprob: -16.89317512512207
    9. '
' → logprob: -17.64317512512207
    10. 's' → logprob: -17.89317512512207

Token 1215: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.012982092797756195
    2. '<|end|>' → logprob: -4.51298189163208
    3. ' if' → logprob: -7.38798189163208
    4. ' ]' → logprob: -7.76298189163208
    5. ')' → logprob: -7.88798189163208
    6. ']
' → logprob: -8.637982368469238
    7. '<|end|>' → logprob: -8.762982368469238
    8. '       ' → logprob: -9.637982368469238
    9. 'if' → logprob: -10.637982368469238
    10. 'If' → logprob: -11.262982368469238

Token 1216: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17139655351638794
    2. 'if' → logprob: -2.171396493911743
    3. 'return' → logprob: -3.421396493911743
    4. ' if' → logprob: -4.546396732330322
    5. ' return' → logprob: -9.046396255493164
    6. '
' → logprob: -9.546396255493164
    7. '   ' → logprob: -11.046396255493164
    8. '```' → logprob: -11.671396255493164
    9. '	if' → logprob: -13.046396255493164
    10. '	' → logprob: -13.671396255493164

Token 1217: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.3141222894191742
    2. 'if' → logprob: -1.3141223192214966
    3. '       ' → logprob: -7.064122200012207
    4. ' if' → logprob: -12.814122200012207
    5. ' return' → logprob: -13.189122200012207
    6. '   ' → logprob: -16.314123153686523
    7. '```' → logprob: -16.689123153686523
    8. '
' → logprob: -17.064123153686523
    9. 'Return' → logprob: -18.064123153686523
    10. '	return' → logprob: -18.189123153686523

Token 1218: ' int' (ID: 677)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.08207383006811142
    2. ' res' → logprob: -2.582073926925659
    3. '0' → logprob: -5.83207368850708
    4. 'int' → logprob: -8.582074165344238
    5. ' int' → logprob: -10.332074165344238
    6. ' ' → logprob: -10.582074165344238
    7. '(res' → logprob: -14.457074165344238
    8. '	res' → logprob: -15.457074165344238
    9. ' ' → logprob: -15.582074165344238
    10. '-' → logprob: -15.707074165344238

Token 1219: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.0006201040814630687
    2. 'res' → logprob: -7.500619888305664
    3. '(' → logprob: -9.625619888305664
    4. '(round' → logprob: -14.250619888305664
    5. '()' → logprob: -15.625619888305664
    6. ' (' → logprob: -15.875619888305664
    7. ' res' → logprob: -16.500619888305664
    8. '0' → logprob: -17.125619888305664
    9. '('' → logprob: -17.500619888305664
    10. '	res' → logprob: -17.750619888305664

Token 1220: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3250613808631897
    2. ' if' → logprob: -1.325061321258545
    3. 'if' → logprob: -4.450061321258545
    4. ' )' → logprob: -10.200061798095703
    5. ' or' → logprob: -12.200061798095703
    6. '       ' → logprob: -12.450061798095703
    7. '   ' → logprob: -12.575061798095703
    8. '()' → logprob: -14.325061798095703
    9. 'or' → logprob: -14.450061798095703
    10. '	if' → logprob: -14.825061798095703

Token 1221: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1222: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -1.9361264946837764e-07
    2. ' res' → logprob: -15.875
    3. 'not' → logprob: -19.375
    4. '(res' → logprob: -19.875
    5. 'is' → logprob: -20.0
    6. '
' → logprob: -20.875
    7. '	res' → logprob: -21.25
    8. '$res' → logprob: -21.875
    9. 'dist' → logprob: -22.125
    10. '_res' → logprob: -22.875

Token 1223: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.014306885190308094
    2. ' !=' → logprob: -4.264307022094727
    3. '<' → logprob: -9.014307022094727
    4. 'is' → logprob: -11.514307022094727
    5. '!==' → logprob: -12.639307022094727
    6. '()!=' → logprob: -13.139307022094727
    7. ')!=' → logprob: -13.139307022094727
    8. '!=(' → logprob: -13.889307022094727
    9. '!=-' → logprob: -14.139307022094727
    10. '<>' → logprob: -14.389307022094727

Token 1224: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -1.9361264946837764e-07
    2. ' float' → logprob: -16.25
    3. '```' → logprob: -20.375
    4. '=float' → logprob: -21.25
    5. '	float' → logprob: -21.75
    6. '(float' → logprob: -21.75
    7. 'flo' → logprob: -21.75
    8. '
' → logprob: -22.0
    9. '<float' → logprob: -22.375
    10. '   ' → logprob: -23.375

Token 1225: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -3.292907877039397e-06
    2. ''in' → logprob: -13.12500286102295
    3. ''' → logprob: -14.87500286102295
    4. ''s' → logprob: -15.75000286102295
    5. '("' → logprob: -15.87500286102295
    6. '('-' → logprob: -16.125003814697266
    7. 'inf' → logprob: -16.125003814697266
    8. '('+' → logprob: -16.500003814697266
    9. '_inf' → logprob: -16.625003814697266
    10. '('.' → logprob: -16.750003814697266

Token 1226: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.0009062222670763731
    2. ''in' → logprob: -7.125905990600586
    3. ''' → logprob: -9.875905990600586
    4. 'in' → logprob: -11.125905990600586
    5. '('' → logprob: -11.250905990600586
    6. '"' → logprob: -12.625905990600586
    7. 'print' → logprob: -12.875905990600586
    8. 'info' → logprob: -13.125905990600586
    9. 'import' → logprob: -13.250905990600586
    10. ''information' → logprob: -13.375905990600586

Token 1227: '')' (ID: 1542)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.894790981779806e-05
    2. 'else' → logprob: -10.375048637390137
    3. ' else' → logprob: -11.125048637390137
    4. ' )' → logprob: -13.125048637390137
    5. '')' → logprob: -14.500048637390137
    6. '   ' → logprob: -15.750048637390137
    7. '       ' → logprob: -16.875049591064453
    8. '}' → logprob: -17.125049591064453
    9. '```' → logprob: -17.250049591064453
    10. ')
' → logprob: -17.500049591064453

Token 1228: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.07890807837247849
    2. ' else' → logprob: -2.5789079666137695
    3. '!=-' → logprob: -11.70390796661377
    4. '!=' → logprob: -11.95390796661377
    5. '_else' → logprob: -13.82890796661377
    6. ' ' → logprob: -14.07890796661377
    7. 'Else' → logprob: -14.70390796661377
    8. ' !=' → logprob: -14.95390796661377
    9. '   ' → logprob: -15.32890796661377
    10. '	else' → logprob: -15.45390796661377

Token 1229: ' ' (ID: 220)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.001170225441455841
    2. ' -' → logprob: -6.7511701583862305
    3. 'None' → logprob: -19.501171112060547
    4. '(-' → logprob: -20.376171112060547
    5. '```' → logprob: -20.626171112060547
    6. '-ex' → logprob: -21.251171112060547
    7. '-f' → logprob: -21.626171112060547
    8. '-none' → logprob: -21.626171112060547
    9. ' ' → logprob: -21.626171112060547
    10. '
' → logprob: -21.876171112060547

Token 1230: '0' (ID: 15)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -1.676292231422849e-05
    2. ' -' → logprob: -11.000017166137695
    3. 'None' → logprob: -18.625017166137695
    4. '
' → logprob: -21.875017166137695
    5. '-f' → logprob: -22.500017166137695
    6. '-none' → logprob: -22.875017166137695
    7. '-print' → logprob: -22.875017166137695
    8. '-ex' → logprob: -22.875017166137695
    9. '(-' → logprob: -23.125017166137695
    10. '−' → logprob: -23.125017166137695

Token 1231: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1232: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1233: ' Input' (ID: 10090)
  Prédit: ' Ninja'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Ninja' → logprob: -1.7559746503829956
    2. 'N' → logprob: -2.005974769592285
    3. 'Test' → logprob: -2.130974769592285
    4. 'Solution' → logprob: -2.505974769592285
    5. 'Castle' → logprob: -2.630974769592285
    6. 'A' → logprob: -2.755974769592285
    7. ' Castle' → logprob: -2.880974769592285
    8. ' Solution' → logprob: -3.630974769592285
    9. 'Advanced' → logprob: -3.755974769592285
    10. 'Path' → logprob: -4.005974769592285

Token 1234: 'Parser' (ID: 9231)
  Prédit: 'Parser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Parser' → logprob: -0.7002907395362854
    2. 'Handler' → logprob: -1.8252906799316406
    3. ':' → logprob: -2.3252906799316406
    4. 'Data' → logprob: -2.5752906799316406
    5. 'Reader' → logprob: -2.5752906799316406
    6. ':
' → logprob: -4.075290679931641
    7. 'Processor' → logprob: -4.075290679931641
    8. 'Generator' → logprob: -4.200290679931641
    9. 'Tokenizer' → logprob: -4.450290679931641
    10. 'Output' → logprob: -4.700290679931641

Token 1235: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0011935600778087974
    2. ':
' → logprob: -6.751193523406982
    3. ':def' → logprob: -11.50119400024414
    4. '<|end|>' → logprob: -11.62619400024414
    5. '():' → logprob: -13.62619400024414
    6. ':

' → logprob: -14.12619400024414
    7. '):' → logprob: -15.12619400024414
    8. '(object' → logprob: -15.12619400024414
    9. ' :' → logprob: -15.37619400024414
    10. '```' → logprob: -15.50119400024414

Token 1236: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.000911105889827013
    2. 'class' → logprob: -7.625911235809326
    3. '<|end|>' → logprob: -8.375910758972168
    4. 'def' → logprob: -9.625910758972168
    5. '```' → logprob: -10.250910758972168
    6. '    
' → logprob: -10.875910758972168
    7. ' def' → logprob: -11.000910758972168
    8. ' class' → logprob: -11.375910758972168
    9. ':' → logprob: -11.500910758972168
    10. 'classmethod' → logprob: -11.875910758972168

Token 1237: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2259850651025772
    2. 'def' (adapté à ' def') → logprob: -1.725985050201416
    3. ' def' → logprob: -3.725985050201416
    4. '@' → logprob: -9.350985527038574
    5. 'class' → logprob: -9.600985527038574
    6. '```' → logprob: -11.350985527038574
    7. ' @' → logprob: -12.225985527038574
    8. 'staticmethod' → logprob: -12.225985527038574
    9. 'classmethod' → logprob: -12.850985527038574
    10. '	def' → logprob: -13.600985527038574

Token 1238: ' __' (ID: 2516)
  Prédit: 'staticmethod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'staticmethod' → logprob: -0.03456174582242966
    2. 'def' → logprob: -3.7845616340637207
    3. 'init' → logprob: -4.909561634063721
    4. '__' → logprob: -6.284561634063721
    5. 'classmethod' → logprob: -6.534561634063721
    6. 'parse' → logprob: -8.409562110900879
    7. ' def' → logprob: -8.784562110900879
    8. 'static' → logprob: -9.284562110900879
    9. '```' → logprob: -10.659562110900879
    10. ' __' → logprob: -11.284562110900879

Token 1239: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.0005751936114393175
    2. 'class' → logprob: -8.375575065612793
    3. 'Init' → logprob: -8.500575065612793
    4. 'classmethod' → logprob: -10.625575065612793
    5. 'Lines' → logprob: -11.125575065612793
    6. 'it' → logprob: -11.250575065612793
    7. 'staticmethod' → logprob: -11.250575065612793
    8. 'def' → logprob: -11.375575065612793
    9. 'iter' → logprob: -11.500575065612793
    10. 'Class' → logprob: -11.750575065612793

Token 1240: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.49852126836776733
    2. '(' → logprob: -0.9985212683677673
    3. ' (' → logprob: -4.498521327972412
    4. '__(' → logprob: -5.373521327972412
    5. '<|end|>' → logprob: -5.498521327972412
    6. 'self' → logprob: -6.748521327972412
    7. '__(
' → logprob: -7.123521327972412
    8. '<|end|>' → logprob: -7.373521327972412
    9. ')(' → logprob: -8.498520851135254
    10. '(
' → logprob: -8.748520851135254

Token 1241: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0003519086167216301
    2. ')' → logprob: -8.125351905822754
    3. ' self' → logprob: -10.125351905822754
    4. '):
' → logprob: -11.875351905822754
    5. '(self' → logprob: -12.500351905822754
    6. '
' → logprob: -12.750351905822754
    7. '   ' → logprob: -14.375351905822754
    8. '	self' → logprob: -15.500351905822754
    9. '       ' → logprob: -15.750351905822754
    10. ')
' → logprob: -15.750351905822754

Token 1242: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.16374196112155914
    2. ',' → logprob: -2.1637420654296875
    3. '):
' → logprob: -3.6637420654296875
    4. 'self' → logprob: -5.0387420654296875
    5. '():' → logprob: -6.2887420654296875
    6. '   ' → logprob: -7.4137420654296875
    7. '(self' → logprob: -7.4137420654296875
    8. ')' → logprob: -8.038742065429688
    9. ':' → logprob: -8.663742065429688
    10. ',input' → logprob: -9.163742065429688

Token 1243: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -8.685467764735222e-05
    2. '   ' → logprob: -9.625086784362793
    3. ' self' → logprob: -11.000086784362793
    4. '       ' → logprob: -12.625086784362793
    5. '(self' → logprob: -15.000086784362793
    6. 'def' → logprob: -15.500086784362793
    7. '	self' → logprob: -15.500086784362793
    8. '
' → logprob: -17.12508773803711
    9. '```' → logprob: -17.12508773803711
    10. 'class' → logprob: -17.62508773803711

Token 1244: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.43226686120033264
    2. 'def' → logprob: -1.3072668313980103
    3. 'pass' → logprob: -2.6822669506073
    4. '       ' → logprob: -4.932266712188721
    5. '   ' → logprob: -6.307266712188721
    6. ' pass' → logprob: -6.807266712188721
    7. ' self' → logprob: -7.307266712188721
    8. '
' → logprob: -7.432266712188721
    9. ' def' → logprob: -7.807266712188721
    10. '(self' → logprob: -10.307267189025879

Token 1245: '.datasets' (ID: 136555)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.820380449295044
    2. '.buffer' → logprob: -1.320380449295044
    3. '.input' → logprob: -2.945380449295044
    4. '.data' → logprob: -3.195380449295044
    5. '._' → logprob: -3.445380449295044
    6. 'data' → logprob: -3.445380449295044
    7. '.lines' → logprob: -3.695380449295044
    8. '.next' → logprob: -4.320380210876465
    9. '_buffer' → logprob: -4.695380210876465
    10. 'def' → logprob: -4.695380210876465

Token 1246: ':' (ID: 25)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16112352907657623
    2. ' =' → logprob: -1.911123514175415
    3. ':' → logprob: -7.161123752593994
    4. '=[]' → logprob: -9.036123275756836
    5. '=[]
' → logprob: -13.786123275756836
    6. '<|end|>' → logprob: -14.036123275756836
    7. '   ' → logprob: -14.286123275756836
    8. '=None' → logprob: -15.286123275756836
    9. '.append' → logprob: -15.661123275756836
    10. '[]' → logprob: -16.161123275756836

Token 1247: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.29212215542793274
    2. '[]' → logprob: -1.4171221256256104
    3. 'list' → logprob: -4.9171223640441895
    4. ' []' → logprob: -6.4171223640441895
    5. ' List' → logprob: -6.7921223640441895
    6. '[List' → logprob: -7.7921223640441895
    7. 'dict' → logprob: -8.167121887207031
    8. '=[]' → logprob: -10.542121887207031
    9. 'Dict' → logprob: -10.667121887207031
    10. '[]
' → logprob: -10.917121887207031

Token 1248: '[' (ID: 58)
  Prédit: '[List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[List' → logprob: -0.34610849618911743
    2. ' =' → logprob: -1.8461084365844727
    3. '=' → logprob: -2.3461084365844727
    4. '=[]' → logprob: -3.7211084365844727
    5. '[' → logprob: -4.596108436584473
    6. '[int' → logprob: -5.596108436584473
    7. '=[]
' → logprob: -8.471108436584473
    8. '[list' → logprob: -8.596108436584473
    9. '[str' → logprob: -8.721108436584473
    10. '[]' → logprob: -9.096108436584473

Token 1249: 'Tuple' (ID: 40048)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.4888496696949005
    2. 'Tuple' → logprob: -0.9888496398925781
    3. 'str' → logprob: -4.238849639892578
    4. 'list' → logprob: -9.988849639892578
    5. 'tuple' → logprob: -9.988849639892578
    6. 'Grid' → logprob: -10.238849639892578
    7. 'int' → logprob: -10.613849639892578
    8. '[List' → logprob: -11.113849639892578
    9. 'dict' → logprob: -11.363849639892578
    10. ']' → logprob: -11.363849639892578

Token 1250: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.00238837581127882
    2. '[List' → logprob: -6.5023884773254395
    3. 'int' → logprob: -7.1273884773254395
    4. '[str' → logprob: -9.502388000488281
    5. 'List' → logprob: -12.502388000488281
    6. ',int' → logprob: -13.377388000488281
    7. '(int' → logprob: -13.752388000488281
    8. '=int' → logprob: -14.877388000488281
    9. ']' → logprob: -15.502388000488281
    10. '[list' → logprob: -15.502388000488281

Token 1251: ',int' (ID: 20909)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.47700613737106323
    2. ',int' → logprob: -0.9770061373710632
    3. '[int' → logprob: -6.352005958557129
    4. 'int' → logprob: -7.477005958557129
    5. ',List' → logprob: -7.852005958557129
    6. ' ,' → logprob: -9.227005958557129
    7. ']int' → logprob: -10.602005958557129
    8. '<|end|>' → logprob: -10.727005958557129
    9. ',Integer' → logprob: -10.977005958557129
    10. ',float' → logprob: -11.227005958557129

Token 1252: ',List' (ID: 166273)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.030259843915700912
    2. ',int' → logprob: -3.530259847640991
    3. ',List' → logprob: -7.780259609222412
    4. ',Integer' → logprob: -10.28026008605957
    5. ' ,' → logprob: -11.03026008605957
    6. ',float' → logprob: -11.40526008605957
    7. ',self' → logprob: -11.78026008605957
    8. ',
' → logprob: -11.90526008605957
    9. ',String' → logprob: -12.65526008605957
    10. ',input' → logprob: -13.40526008605957

Token 1253: '[str' (ID: 33439)
  Prédit: '[str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -1.1279553291387856e-05
    2. 'str' → logprob: -11.500011444091797
    3. '[int' → logprob: -14.375011444091797
    4. '[' → logprob: -15.250011444091797
    5. ',str' → logprob: -15.875011444091797
    6. ']]' → logprob: -17.125011444091797
    7. '[
' → logprob: -17.250011444091797
    8. 'Str' → logprob: -17.250011444091797
    9. '	str' → logprob: -18.375011444091797
    10. ']' → logprob: -18.750011444091797

Token 1254: ']]]' (ID: 198030)
  Prédit: ']]]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]]' → logprob: -0.08068136125802994
    2. ']]' → logprob: -2.580681324005127
    3. ',' → logprob: -7.080681324005127
    4. ']' → logprob: -7.330681324005127
    5. '])]' → logprob: -9.455681800842285
    6. '],' → logprob: -9.830681800842285
    7. ']])' → logprob: -10.080681800842285
    8. '   ' → logprob: -10.080681800842285
    9. '[' → logprob: -11.080681800842285
    10. '       ' → logprob: -11.205681800842285

Token 1255: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.043091677129268646
    2. ' =' → logprob: -3.1680917739868164
    3. '=[]' → logprob: -9.668091773986816
    4. '<|end|>' → logprob: -11.043091773986816
    5. '=[]
' → logprob: -12.668091773986816
    6. '=
' → logprob: -12.918091773986816
    7. '   ' → logprob: -13.293091773986816
    8. '=None' → logprob: -13.918091773986816
    9. ' =
' → logprob: -14.168091773986816
    10. ')' → logprob: -14.168091773986816

Token 1256: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.00018494461255613714
    2. '[]
' → logprob: -8.625185012817383
    3. ' []' → logprob: -13.000185012817383
    4. '[]

' → logprob: -13.375185012817383
    5. '[])' → logprob: -14.750185012817383
    6. '[]}' → logprob: -15.000185012817383
    7. '[' → logprob: -15.625185012817383
    8. '=[]' → logprob: -15.625185012817383
    9. '[]"' → logprob: -15.750185012817383
    10. '([]' → logprob: -16.500185012817383

Token 1257: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -8.41129949549213e-05
    2. 'def' → logprob: -9.500083923339844
    3. ' def' → logprob: -11.625083923339844
    4. '
' → logprob: -16.250083923339844
    5. '```' → logprob: -16.625083923339844
    6. '    
' → logprob: -17.500083923339844
    7. '       ' → logprob: -17.875083923339844
    8. '<|end|>' → logprob: -18.000083923339844
    9. '	def' → logprob: -19.000083923339844
    10. ',' → logprob: -20.125083923339844

Token 1258: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.023290198296308517
    2. ' def' → logprob: -4.023290157318115
    3. '   ' → logprob: -5.273290157318115
    4. '	def' → logprob: -14.898290634155273
    5. ' ' → logprob: -17.648290634155273
    6. '
' → logprob: -18.273290634155273
    7. '  ' → logprob: -19.523290634155273
    8. '    
' → logprob: -19.773290634155273
    9. 'de' → logprob: -19.898290634155273
    10. '       ' → logprob: -20.023290634155273

Token 1259: ' parse' (ID: 8420)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.16496498882770538
    2. 'parse' → logprob: -1.914965033531189
    3. 'read' → logprob: -5.4149651527404785
    4. ' add' → logprob: -8.78996467590332
    5. 'load' → logprob: -9.66496467590332
    6. 'def' → logprob: -10.28996467590332
    7. ' parse' → logprob: -10.66496467590332
    8. 'append' → logprob: -12.28996467590332
    9. 'from' → logprob: -13.28996467590332
    10. ' read' → logprob: -14.91496467590332

Token 1260: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.004225254990160465
    2. '(' → logprob: -6.254225254058838
    3. '_line' → logprob: -6.254225254058838
    4. 'self' → logprob: -8.504225730895996
    5. '_input' → logprob: -9.254225730895996
    6. '_token' → logprob: -10.879225730895996
    7. 'line' → logprob: -11.754225730895996
    8. '<|end|>' → logprob: -11.754225730895996
    9. '(input' → logprob: -12.254225730895996
    10. 'input' → logprob: -12.629225730895996

Token 1261: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.0574781894683838
    2. 'self' → logprob: -1.1824781894683838
    3. '_line' → logprob: -1.4324781894683838
    4. ',' → logprob: -2.807478189468384
    5. '_input' → logprob: -4.182477951049805
    6. ')' → logprob: -4.807477951049805
    7. '):' → logprob: -5.182477951049805
    8. '_token' → logprob: -5.307477951049805
    9. '_' → logprob: -6.307477951049805
    10. '_tokens' → logprob: -6.432477951049805

Token 1262: ' lines' (ID: 8698)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.44651874899864197
    2. 'lines' → logprob: -1.4465187788009644
    3. 'self' → logprob: -2.196518659591675
    4. 'text' → logprob: -5.321518898010254
    5. ')' → logprob: -5.946518898010254
    6. 'line' → logprob: -6.571518898010254
    7. 'data' → logprob: -6.571518898010254
    8. ' lines' → logprob: -6.696518898010254
    9. 'raw' → logprob: -7.821518898010254
    10. ' input' → logprob: -7.946518898010254

Token 1263: ':' (ID: 25)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6384183168411255
    2. '):' → logprob: -1.1384183168411255
    3. ')' → logprob: -3.763418197631836
    4. ':' → logprob: -3.888418197631836
    5. 'self' → logprob: -3.888418197631836
    6. '(self' → logprob: -4.263418197631836
    7. ',' → logprob: -4.263418197631836
    8. '=' → logprob: -4.513418197631836
    9. '   ' → logprob: -4.638418197631836
    10. '       ' → logprob: -4.888418197631836

Token 1264: ' Iterator' (ID: 41994)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.049268923699855804
    2. 'Iterator' → logprob: -3.049268960952759
    3. 'Iterable' → logprob: -8.17426872253418
    4. 'iter' → logprob: -9.04926872253418
    5. ')' → logprob: -9.04926872253418
    6. 'list' → logprob: -9.42426872253418
    7. ' List' → logprob: -10.42426872253418
    8. ' Iterator' → logprob: -10.67426872253418
    9. 'iterator' → logprob: -11.17426872253418
    10. '[List' → logprob: -12.29926872253418

Token 1265: '[str' (ID: 33439)
  Prédit: '[str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -8.470901229884475e-05
    2. '):' → logprob: -10.00008487701416
    3. ')' → logprob: -11.00008487701416
    4. '):
' → logprob: -11.12508487701416
    5. '[' → logprob: -13.25008487701416
    6. '[List' → logprob: -13.75008487701416
    7. '[
' → logprob: -13.75008487701416
    8. 'str' → logprob: -14.12508487701416
    9. '[int' → logprob: -14.12508487701416
    10. '[...,' → logprob: -14.50008487701416

Token 1266: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.013902796432375908
    2. '):
' → logprob: -4.38890266418457
    3. '])' → logprob: -6.88890266418457
    4. '   ' → logprob: -8.76390266418457
    5. '):' → logprob: -10.13890266418457
    6. ']):
' → logprob: -10.13890266418457
    7. ')->' → logprob: -10.51390266418457
    8. '>)' → logprob: -10.51390266418457
    9. '`)' → logprob: -10.63890266418457
    10. '）' → logprob: -11.13890266418457

Token 1267: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3550608158111572
    2. '(self' → logprob: -2.3550608158111572
    3. '->' → logprob: -2.8550608158111572
    4. ':
' → logprob: -3.1050608158111572
    5. '       ' → logprob: -3.1050608158111572
    6. '   ' → logprob: -3.2300608158111572
    7. ' ->' → logprob: -5.355060577392578
    8. '->____' → logprob: -6.105060577392578
    9. '<|end|>' → logprob: -6.855060577392578
    10. '<|end|>' → logprob: -6.980060577392578

Token 1268: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.10152760148048401
    2. 'List' → logprob: -2.351527690887451
    3. ' None' → logprob: -6.976527690887451
    4. 'Optional' → logprob: -8.476527214050293
    5. 'Iterator' → logprob: -8.976527214050293
    6. 'int' → logprob: -10.351527214050293
    7. ' List' → logprob: -11.351527214050293
    8. 'bool' → logprob: -12.101527214050293
    9. '   ' → logprob: -13.726527214050293
    10. 'void' → logprob: -14.351527214050293

Token 1269: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5478711724281311
    2. ':' → logprob: -1.1728711128234863
    3. ':
' → logprob: -2.2978711128234863
    4. '   ' → logprob: -4.922871112823486
    5. '(self' → logprob: -5.797871112823486
    6. '):
' → logprob: -7.547871112823486
    7. ',' → logprob: -8.297871589660645
    8. 'self' → logprob: -8.922871589660645
    9. '<|end|>' → logprob: -9.547871589660645
    10. '():
' → logprob: -9.672871589660645

Token 1270: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002619062550365925
    2. ' for' → logprob: -6.12761926651001
    3. '   ' → logprob: -8.002618789672852
    4. '```' → logprob: -10.002618789672852
    5. 'for' → logprob: -10.502618789672852
    6. ' line' → logprob: -11.252618789672852
    7. ' lines' → logprob: -12.002618789672852
    8. '	' → logprob: -13.002618789672852
    9. ' ' → logprob: -13.252618789672852
    10. ' next' → logprob: -14.002618789672852

Token 1271: ' while' (ID: 2049)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.6618611216545105
    2. 'line' → logprob: -0.9118611216545105
    3. ' for' → logprob: -2.7868611812591553
    4. 'for' → logprob: -4.161860942840576
    5. '       ' → logprob: -5.536860942840576
    6. ' while' → logprob: -8.411861419677734
    7. '   ' → logprob: -8.411861419677734
    8. 'while' (adapté à ' while') → logprob: -8.911861419677734
    9. ' lines' → logprob: -8.911861419677734
    10. 'lines' → logprob: -8.911861419677734

Token 1272: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.3878245949745178
    2. ' True' → logprob: -1.137824535369873
    3. '(True' → logprob: -7.012824535369873
    4. ' lines' → logprob: -11.262825012207031
    5. '1' → logprob: -11.512825012207031
    6. 'lines' → logprob: -11.762825012207031
    7. '
' → logprob: -11.762825012207031
    8. 'line' → logprob: -11.887825012207031
    9. ' line' → logprob: -12.262825012207031
    10. '=True' → logprob: -13.762825012207031

Token 1273: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6037657856941223
    2. ':' → logprob: -1.9787657260894775
    3. '       ' → logprob: -1.9787657260894775
    4. '(line' → logprob: -2.8537657260894775
    5. '   ' → logprob: -3.1037657260894775
    6. ' line' → logprob: -3.2287657260894775
    7. ',' → logprob: -4.853765964508057
    8. ':
' → logprob: -4.853765964508057
    9. '():' → logprob: -5.978765964508057
    10. ' :' → logprob: -6.103765964508057

Token 1274: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2010948657989502
    2. '   ' → logprob: -2.07609486579895
    3. '       ' → logprob: -3.57609486579895
    4. 'try' → logprob: -4.326094627380371
    5. ' try' → logprob: -4.701094627380371
    6. ' line' → logprob: -5.201094627380371
    7. 'line' → logprob: -7.826094627380371
    8. '```' → logprob: -9.326094627380371
    9. ' lines' → logprob: -9.451094627380371
    10. '    ' → logprob: -9.451094627380371

Token 1275: ' try' (ID: 2075)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.06417322158813477
    2. ' line' → logprob: -3.3141732215881348
    3. 'try' (adapté à ' try') → logprob: -3.8141732215881348
    4. '           ' → logprob: -6.064173221588135
    5. ' try' → logprob: -6.564173221588135
    6. '   ' → logprob: -13.814172744750977
    7. 'raw' → logprob: -14.564172744750977
    8. '(line' → logprob: -14.564172744750977
    9. '	line' → logprob: -15.064172744750977
    10. '_line' → logprob: -15.439172744750977

Token 1276: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.39503321051597595
    2. ':' → logprob: -2.020033121109009
    3. ':
' → logprob: -2.020033121109009
    4. '           ' → logprob: -3.520033121109009
    5. ' line' → logprob: -3.645033121109009
    6. '_line' → logprob: -7.020033359527588
    7. 'line' → logprob: -7.645033359527588
    8. ' :' → logprob: -7.770033359527588
    9. '#line' → logprob: -7.895033359527588
    10. '(line' → logprob: -8.02003288269043

Token 1277: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.013364451937377453
    2. ' line' → logprob: -4.763364315032959
    3. 'line' → logprob: -5.638364315032959
    4. '   ' → logprob: -7.513364315032959
    5. '           ' → logprob: -7.513364315032959
    6. '#line' → logprob: -9.763364791870117
    7. '	line' → logprob: -12.013364791870117
    8. '                   ' → logprob: -12.013364791870117
    9. '(line' → logprob: -12.638364791870117
    10. '[line' → logprob: -12.888364791870117

Token 1278: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' (adapté à ' line') → logprob: -0.20290350914001465
    2. ' line' → logprob: -1.7029035091400146
    3. 'size' → logprob: -7.577903747558594
    4. 'raw' → logprob: -8.077903747558594
    5. 'n' → logprob: -8.202903747558594
    6. 'header' → logprob: -8.952903747558594
    7. 'length' → logprob: -9.452903747558594
    8. '               ' → logprob: -9.827903747558594
    9. ' size' → logprob: -10.202903747558594
    10. ' n' → logprob: -10.827903747558594

Token 1279: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20150035619735718
    2. '=' → logprob: -1.701500415802002
    3. '=line' → logprob: -9.576499938964844
    4. '.strip' → logprob: -11.826499938964844
    5. ' =
' → logprob: -12.701499938964844
    6. '=
' → logprob: -12.826499938964844
    7. ':' → logprob: -13.826499938964844
    8. '.' → logprob: -14.201499938964844
    9. 'tokens' → logprob: -14.951499938964844
    10. '.readline' → logprob: -15.451499938964844

Token 1280: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.06197284162044525
    2. ' next' → logprob: -2.8119728565216064
    3. '(next' → logprob: -12.436972618103027
    4. 'lines' → logprob: -14.186972618103027
    5. ' lines' → logprob: -15.061972618103027
    6. 'line' → logprob: -16.186973571777344
    7. 'input' → logprob: -16.811973571777344
    8. '.next' → logprob: -16.936973571777344
    9. '	next' → logprob: -18.061973571777344
    10. '[next' → logprob: -18.311973571777344

Token 1281: '(lines' (ID: 73839)
  Prédit: '(lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lines' → logprob: -0.00020771251001860946
    2. '(line' → logprob: -8.875207901000977
    3. '(' → logprob: -10.125207901000977
    4. 'lines' → logprob: -11.125207901000977
    5. '(
' → logprob: -11.875207901000977
    6. ' lines' → logprob: -12.375207901000977
    7. '()' → logprob: -14.500207901000977
    8. '	lines' → logprob: -14.500207901000977
    9. '(tokens' → logprob: -14.625207901000977
    10. '(token' → logprob: -16.000207901000977

Token 1282: ')
' (ID: 446)
  Prédit: ').'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -0.0743766576051712
    2. ')' → logprob: -3.0743765830993652
    3. ')
' → logprob: -3.6993765830993652
    4. '()).' → logprob: -8.074377059936523
    5. '().' → logprob: -9.074377059936523
    6. '()' → logprob: -9.449377059936523
    7. '()
' → logprob: -9.449377059936523
    8. '           ' → logprob: -9.949377059936523
    9. '())
' → logprob: -10.074377059936523
    10. '               ' → logprob: -10.699377059936523

Token 1283: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.012753669172525406
    2. '               ' → logprob: -4.387753486633301
    3. '            
' → logprob: -9.0127534866333
    4. '       ' → logprob: -10.2627534866333
    5. '                   ' → logprob: -11.1377534866333
    6. '
' → logprob: -11.2627534866333
    7. '.strip' → logprob: -11.5127534866333
    8. '                
' → logprob: -11.8877534866333
    9. 'if' → logprob: -12.1377534866333
    10. ' if' → logprob: -12.2627534866333

Token 1284: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.515419602394104
    2. 'if' (adapté à ' if') → logprob: -1.015419602394104
    3. 'line' → logprob: -3.7654194831848145
    4. ' line' → logprob: -4.2654194831848145
    5. '           ' → logprob: -5.7654194831848145
    6. '               ' → logprob: -9.640419960021973
    7. ' stripped' → logprob: -10.140419960021973
    8. 'strip' → logprob: -10.890419960021973
    9. '#line' → logprob: -11.640419960021973
    10. '=line' → logprob: -12.640419960021973

Token 1285: ' line' (ID: 2543)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.08641531318426132
    2. 'not' → logprob: -2.5864152908325195
    3. ' line' → logprob: -5.5864152908325195
    4. 'line' → logprob: -5.5864152908325195
    5. '(line' → logprob: -15.21141529083252
    6. '#line' → logprob: -17.086416244506836
    7. '=line' → logprob: -17.211416244506836
    8. '(not' → logprob: -17.461416244506836
    9. 'len' → logprob: -17.836416244506836
    10. '   ' → logprob: -17.836416244506836

Token 1286: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.20529457926750183
    2. '.' → logprob: -2.205294609069824
    3. '==' → logprob: -3.205294609069824
    4. ' ==' → logprob: -3.455294609069824
    5. '().' → logprob: -6.205294609069824
    6. ' .' → logprob: -7.955294609069824
    7. '.startswith' → logprob: -8.080294609069824
    8. 'strip' → logprob: -8.330294609069824
    9. '()==' → logprob: -9.330294609069824
    10. '           ' → logprob: -10.580294609069824

Token 1287: '()' (ID: 416)
  Prédit: '()=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()==' → logprob: -0.3239619731903076
    2. '()' → logprob: -1.3239619731903076
    3. '==' → logprob: -4.948962211608887
    4. '():' → logprob: -5.698962211608887
    5. ' ==' → logprob: -9.448962211608887
    6. '():
' → logprob: -10.073962211608887
    7. '()=="' → logprob: -10.573962211608887
    8. '()!=' → logprob: -10.698962211608887
    9. ']==' → logprob: -12.198962211608887
    10. '()>' → logprob: -12.698962211608887

Token 1288: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0018101292662322521
    2. ' ==' → logprob: -6.376810073852539
    3. '()==' → logprob: -9.376810073852539
    4. '===' → logprob: -11.876810073852539
    5. '=' → logprob: -12.126810073852539
    6. ']==' → logprob: -12.251810073852539
    7. ')==' → logprob: -12.626810073852539
    8. ':' → logprob: -14.001810073852539
    9. '=="' → logprob: -14.626810073852539
    10. '==
' → logprob: -14.751810073852539

Token 1289: ' "' (ID: 392)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '''' → logprob: -0.33761295676231384
    2. '"":' → logprob: -1.8376129865646362
    3. '""' → logprob: -2.8376128673553467
    4. ''' → logprob: -2.8376128673553467
    5. '"' → logprob: -4.587613105773926
    6. '":' → logprob: -11.962613105773926
    7. ''',' → logprob: -12.587613105773926
    8. '':' → logprob: -13.212613105773926
    9. ''ex' → logprob: -13.337613105773926
    10. '''.' → logprob: -13.337613105773926

Token 1290: '0' (ID: 15)
  Prédit: '":
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '":
' → logprob: -0.5049362778663635
    2. '":' → logprob: -1.2549362182617188
    3. '"' → logprob: -3.1299362182617188
    4. '0' → logprob: -3.3799362182617188
    5. '""' → logprob: -4.129936218261719
    6. '```' → logprob: -4.629936218261719
    7. '"":' → logprob: -5.754936218261719
    8. '"""' → logprob: -7.379936218261719
    9. '``' → logprob: -7.379936218261719
    10. ''' → logprob: -7.379936218261719

Token 1291: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.18803770840168
    2. '0' → logprob: -1.9380377531051636
    3. '":
' → logprob: -3.938037633895874
    4. '":' → logprob: -4.938037872314453
    5. '"' → logprob: -7.563037872314453
    6. '":
' → logprob: -8.688037872314453
    7. '"):
' → logprob: -10.438037872314453
    8. ' "' → logprob: -10.688037872314453
    9. '   ' → logprob: -12.313037872314453
    10. '":

' → logprob: -12.313037872314453

Token 1292: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.7729658540920354e-05
    2. ' ' → logprob: -10.500027656555176
    3. '<|end|>' → logprob: -17.375028610229492
    4. '
' → logprob: -17.500028610229492
    5. '<|end|>' → logprob: -17.500028610229492
    6. '"' → logprob: -18.125028610229492
    7. '#' → logprob: -18.500028610229492
    8. '1' → logprob: -18.625028610229492
    9. '```' → logprob: -18.750028610229492
    10. '=' → logprob: -18.875028610229492

Token 1293: '":
' (ID: 9213)
  Prédit: '":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '":
' → logprob: -0.2998732328414917
    2. '":' → logprob: -1.4248732328414917
    3. '":
' → logprob: -4.049873352050781
    4. '"' → logprob: -7.674873352050781
    5. '\n' → logprob: -7.924873352050781
    6. '"):
' → logprob: -8.424873352050781
    7. '0' → logprob: -10.924873352050781
    8. '":

' → logprob: -10.924873352050781
    9. '"):' → logprob: -11.424873352050781
    10. '__":
' → logprob: -12.549873352050781

Token 1294: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0006645413814112544
    2. ':' → logprob: -8.250664710998535
    3. ':
' → logprob: -8.625664710998535
    4. '               ' → logprob: -8.875664710998535
    5. '                       ' → logprob: -9.875664710998535
    6. 'continue' → logprob: -11.000664710998535
    7. '                  ' → logprob: -12.375664710998535
    8. ' continue' → logprob: -12.750664710998535
    9. 'break' → logprob: -13.250664710998535
    10. '           ' → logprob: -13.875664710998535

Token 1295: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.0026788681279867887
    2. ' break' → logprob: -6.252678871154785
    3. 'return' → logprob: -7.752678871154785
    4. '                   ' → logprob: -8.252678871154785
    5. '               ' → logprob: -10.002678871154785
    6. '                       ' → logprob: -11.627678871154785
    7. '	break' → logprob: -12.377678871154785
    8. '_break' → logprob: -14.252678871154785
    9. '           ' → logprob: -15.252678871154785
    10. ' return' → logprob: -16.25267791748047

Token 1296: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.003642119001597166
    2. '
' → logprob: -6.2536420822143555
    3. '                
' → logprob: -6.6286420822143555
    4. '                   ' → logprob: -8.628642082214355
    5. '           ' → logprob: -9.003642082214355
    6. '                    
' → logprob: -10.128642082214355
    7. ',' → logprob: -11.753642082214355
    8. '            
' → logprob: -12.378642082214355
    9. '    
' → logprob: -12.503642082214355
    10. '                ' → logprob: -12.628642082214355

Token 1297: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00037728800089098513
    2. '
' → logprob: -8.625377655029297
    3. '                
' → logprob: -8.750377655029297
    4. '           ' → logprob: -10.500377655029297
    5. '```' → logprob: -12.250377655029297
    6. '                   ' → logprob: -13.000377655029297
    7. '                    
' → logprob: -13.500377655029297
    8. '            
' → logprob: -14.375377655029297
    9. 'continue' → logprob: -14.875377655029297
    10. '              ' → logprob: -15.125377655029297

Token 1298: ' n' (ID: 297)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.7005928754806519
    2. 'width' → logprob: -0.7005928754806519
    3. 'W' → logprob: -5.825592994689941
    4. ' width' → logprob: -6.200592994689941
    5. '               ' → logprob: -6.950592994689941
    6. ' w' → logprob: -7.075592994689941
    7. 'parts' → logprob: -8.575592994689941
    8. 'dims' → logprob: -8.825592994689941
    9. 'dimensions' → logprob: -9.825592994689941
    10. 'h' → logprob: -9.950592994689941

Token 1299: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010194571688771248
    2. ' ,' → logprob: -4.635194778442383
    3. '<|end|>' → logprob: -9.260194778442383
    4. 'ext' → logprob: -9.635194778442383
    5. ',w' → logprob: -10.635194778442383
    6. 'um' → logprob: -10.635194778442383
    7. ',int' → logprob: -10.885194778442383
    8. 'e' → logprob: -10.885194778442383
    9. ',e' → logprob: -11.135194778442383
    10. '_,' → logprob: -11.135194778442383

Token 1300: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.04858805239200592
    2. ' m' → logprob: -3.0485880374908447
    3. 'k' → logprob: -14.548587799072266
    4. 's' → logprob: -16.423587799072266
    5. 'w' → logprob: -17.298587799072266
    6. '   ' → logprob: -17.673587799072266
    7. ',m' → logprob: -18.173587799072266
    8. ' k' → logprob: -18.423587799072266
    9. '	m' → logprob: -18.423587799072266
    10. 'space' → logprob: -18.673587799072266

Token 1301: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16123777627944946
    2. ' =' → logprob: -1.9112377166748047
    3. ',' → logprob: -6.911237716674805
    4. '=int' → logprob: -12.286237716674805
    5. ')' → logprob: -12.661237716674805
    6. '<|end|>' → logprob: -12.661237716674805
    7. '=line' → logprob: -13.286237716674805
    8. ' ' → logprob: -13.911237716674805
    9. ')=' → logprob: -14.661237716674805
    10. '<|end|>' → logprob: -14.911237716674805

Token 1302: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.12698565423488617
    2. ' map' → logprob: -2.126985549926758
    3. 'line' → logprob: -10.126985549926758
    4. '[line' → logprob: -11.501985549926758
    5. '(map' → logprob: -12.501985549926758
    6. ' line' → logprob: -13.251985549926758
    7. '[' → logprob: -13.376985549926758
    8. ' [' → logprob: -16.126985549926758
    9. '	map' → logprob: -16.501985549926758
    10. '_map' → logprob: -16.626985549926758

Token 1303: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.011073057539761066
    2. 'int' → logprob: -4.511073112487793
    3. '(str' → logprob: -11.386073112487793
    4. '[int' → logprob: -11.761073112487793
    5. 'str' → logprob: -12.386073112487793
    6. '<int' → logprob: -14.386073112487793
    7. '=int' → logprob: -14.511073112487793
    8. '(' → logprob: -15.011073112487793
    9. ' int' → logprob: -15.761073112487793
    10. '```' → logprob: -15.886073112487793

Token 1304: ',' (ID: 11)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.00010342398309148848
    2. ')' → logprob: -9.875102996826172
    3. ',line' → logprob: -10.625102996826172
    4. '=line' → logprob: -11.750102996826172
    5. 'line' → logprob: -11.875102996826172
    6. ',' → logprob: -12.000102996826172
    7. '(' → logprob: -12.625102996826172
    8. ' line' → logprob: -13.500102996826172
    9. '[line' → logprob: -14.375102996826172
    10. '#line' → logprob: -14.750102996826172

Token 1305: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -3.7697225252486533e-06
    2. ' line' → logprob: -12.500003814697266
    3. '(line' → logprob: -19.375003814697266
    4. '[line' → logprob: -21.875003814697266
    5. '#line' → logprob: -22.500003814697266
    6. '=line' → logprob: -22.625003814697266
    7. '	line' → logprob: -23.125003814697266
    8. '_line' → logprob: -23.500003814697266
    9. 'Line' → logprob: -23.750003814697266
    10. '           ' → logprob: -24.750003814697266

Token 1306: '.split' (ID: 10347)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.002714641857892275
    2. '.strip' → logprob: -6.37771463394165
    3. '.split' → logprob: -7.00271463394165
    4. '.' → logprob: -9.252715110778809
    5. ' .' → logprob: -12.752715110778809
    6. 'strip' → logprob: -14.002715110778809
    7. '()' → logprob: -14.002715110778809
    8. '.readline' → logprob: -14.127715110778809
    9. 'split' → logprob: -14.252715110778809
    10. 'line' → logprob: -15.877715110778809

Token 1307: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0044005634263157845
    2. '()' → logprob: -5.629400730133057
    3. '())
' → logprob: -7.254400730133057
    4. ')' → logprob: -9.754400253295898
    5. '('' → logprob: -10.504400253295898
    6. '(' → logprob: -12.879400253295898
    7. '())

' → logprob: -13.379400253295898
    8. '()
' → logprob: -13.504400253295898
    9. ' ())' → logprob: -14.379400253295898
    10. '()]' → logprob: -14.879400253295898

Token 1308: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.05400453135371208
    2. '<|end|>' → logprob: -3.179004430770874
    3. '                   ' → logprob: -5.804004669189453
    4. '           ' → logprob: -6.054004669189453
    5. '       ' → logprob: -6.929004669189453
    6. '                ' → logprob: -6.929004669189453
    7. '                       ' → logprob: -7.054004669189453
    8. '                
' → logprob: -7.179004669189453
    9. '<|end|>' → logprob: -7.679004669189453
    10. ' ' → logprob: -8.179004669189453

Token 1309: ' grid' (ID: 10586)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' (adapté à ' grid') → logprob: -0.0012852331856265664
    2. ' grid' → logprob: -6.876285076141357
    3. '               ' → logprob: -8.376285552978516
    4. 'lines' → logprob: -11.501285552978516
    5. 'rows' → logprob: -12.126285552978516
    6. '	grid' → logprob: -13.251285552978516
    7. 'line' → logprob: -14.126285552978516
    8. '           ' → logprob: -14.376285552978516
    9. '                   ' → logprob: -14.501285552978516
    10. 'map' → logprob: -14.501285552978516

Token 1310: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -4.978233846486546e-05
    2. 'lines' → logprob: -10.750049591064453
    3. '_line' → logprob: -11.875049591064453
    4. '_' → logprob: -11.875049591064453
    5. ' =' → logprob: -12.500049591064453
    6. 'Lines' → logprob: -12.500049591064453
    7. '=' → logprob: -12.875049591064453
    8. '_LINES' → logprob: -13.125049591064453
    9. '	lines' → logprob: -13.875049591064453
    10. '(lines' → logprob: -15.250049591064453

Token 1311: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03818022832274437
    2. ' =' → logprob: -3.288180112838745
    3. '=[]' → logprob: -9.038180351257324
    4. '=[]
' → logprob: -11.288180351257324
    5. '.append' → logprob: -12.038180351257324
    6. '=[' → logprob: -14.038180351257324
    7. '=[]
' → logprob: -15.163180351257324
    8. '[:]' → logprob: -15.538180351257324
    9. '[' → logprob: -16.163179397583008
    10. '[]' → logprob: -16.663179397583008

Token 1312: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.23898638784885406
    2. '[next' → logprob: -1.7389863729476929
    3. '[list' → logprob: -3.7389864921569824
    4. '[n' → logprob: -5.238986492156982
    5. '[]
' → logprob: -5.738986492156982
    6. '[line' → logprob: -6.488986492156982
    7. '[List' → logprob: -6.988986492156982
    8. '[str' → logprob: -7.238986492156982
    9. '[]' → logprob: -8.363986015319824
    10. '[l' → logprob: -8.613986015319824

Token 1313: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.002184045733883977
    2. 'for' → logprob: -6.25218391418457
    3. ' for' → logprob: -8.62718391418457
    4. '           ' → logprob: -9.75218391418457
    5. 'while' → logprob: -11.37718391418457
    6. '                   ' → logprob: -12.37718391418457
    7. '       ' → logprob: -13.75218391418457
    8. '   ' → logprob: -14.50218391418457
    9. '			' → logprob: -15.37718391418457
    10. '	           ' → logprob: -16.00218391418457

Token 1314: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.009795283898711205
    2. ' for' → logprob: -4.759795188903809
    3. '               ' → logprob: -6.759795188903809
    4. 'while' → logprob: -11.134795188903809
    5. '                   ' → logprob: -12.634795188903809
    6. '           ' → logprob: -13.509795188903809
    7. '   ' → logprob: -14.509795188903809
    8. '
' → logprob: -14.759795188903809
    9. '	for' → logprob: -15.509795188903809
    10. '       ' → logprob: -16.259796142578125

Token 1315: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.003428531577810645
    2. '_i' → logprob: -6.6284284591674805
    3. ' _' → logprob: -7.3784284591674805
    4. '_row' → logprob: -7.7534284591674805
    5. '_in' → logprob: -8.00342845916748
    6. '_m' → logprob: -8.12842845916748
    7. '_line' → logprob: -8.37842845916748
    8. '_j' → logprob: -10.37842845916748
    9. '_
' → logprob: -10.50342845916748
    10. '_rows' → logprob: -10.62842845916748

Token 1316: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00014132341311778873
    2. 'in' → logprob: -8.875141143798828
    3. 'range' → logprob: -14.125141143798828
    4. ' ' → logprob: -14.375141143798828
    5. 'i' → logprob: -16.875141143798828
    6. 'm' → logprob: -17.500141143798828
    7. 's' → logprob: -17.875141143798828
    8. ' _' → logprob: -18.500141143798828
    9. '_' → logprob: -18.625141143798828
    10. '  ' → logprob: -18.750141143798828

Token 1317: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -2.8206473871250637e-05
    2. ' range' → logprob: -10.500028610229492
    3. 'lines' → logprob: -14.500028610229492
    4. 'm' → logprob: -17.250028610229492
    5. 'line' → logprob: -17.250028610229492
    6. '(range' → logprob: -17.625028610229492
    7. 'map' → logprob: -17.875028610229492
    8. '
' → logprob: -18.375028610229492
    9. '	range' → logprob: -18.625028610229492
    10. ')' → logprob: -18.875028610229492

Token 1318: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.00038264848990365863
    2. 'm' → logprob: -7.875382423400879
    3. 'n' → logprob: -14.000382423400879
    4. '(' → logprob: -14.500382423400879
    5. '(n' → logprob: -15.000382423400879
    6. '	m' → logprob: -15.500382423400879
    7. '                   ' → logprob: -15.625382423400879
    8. ' m' → logprob: -15.750382423400879
    9. '   ' → logprob: -15.750382423400879
    10. '               ' → logprob: -16.625383377075195

Token 1319: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.07353916019201279
    2. '):' → logprob: -2.8235392570495605
    3. '                   ' → logprob: -4.9485392570495605
    4. '               ' → logprob: -6.0735392570495605
    5. ')' → logprob: -7.8235392570495605
    6. ':
' → logprob: -8.198538780212402
    7. '):
' → logprob: -8.448538780212402
    8. '           ' → logprob: -8.698538780212402
    9. '<|end|>' → logprob: -8.698538780212402
    10. ':' → logprob: -8.823538780212402

Token 1320: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.012887123972177505
    2. '   ' → logprob: -4.762887001037598
    3. 'grid' → logprob: -5.887887001037598
    4. ' grid' → logprob: -7.512887001037598
    5. 'line' → logprob: -8.262887001037598
    6. '		           ' → logprob: -8.637887001037598
    7. ' line' → logprob: -8.762887001037598
    8. '           ' → logprob: -8.887887001037598
    9. ' lines' → logprob: -9.637887001037598
    10. '#line' → logprob: -10.262887001037598

Token 1321: ' grid' (ID: 10586)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' (adapté à ' grid') → logprob: -0.0009666071855463088
    2. ' grid' → logprob: -7.000966548919678
    3. 'line' → logprob: -9.875967025756836
    4. '	grid' → logprob: -13.000967025756836
    5. '                   ' → logprob: -14.125967025756836
    6. 'row' → logprob: -14.875967025756836
    7. ' line' → logprob: -16.000967025756836
    8. 'lines' → logprob: -16.125967025756836
    9. '   ' → logprob: -17.500967025756836
    10. ' ' → logprob: -17.500967025756836

Token 1322: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.3916841745376587
    2. '_line' → logprob: -1.3916841745376587
    3. '.append' → logprob: -2.641684055328369
    4. 'line' → logprob: -5.766684055328369
    5. 'lines' → logprob: -7.641684055328369
    6. '.readline' → logprob: -9.141684532165527
    7. '                   ' → logprob: -9.266684532165527
    8. '               ' → logprob: -9.641684532165527
    9. '=' → logprob: -10.391684532165527
    10. '[line' → logprob: -10.516684532165527

Token 1323: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -9.269565634895116e-05
    2. '=' → logprob: -10.000092506408691
    3. 'append' → logprob: -10.500092506408691
    4. '.' → logprob: -11.375092506408691
    5. ' =' → logprob: -12.500092506408691
    6. '().' → logprob: -13.375092506408691
    7. '                   ' → logprob: -13.500092506408691
    8. ' .' → logprob: -14.500092506408691
    9. '+=' → logprob: -15.625092506408691
    10. '   ' → logprob: -15.875092506408691

Token 1324: '(next' (ID: 28757)
  Prédit: '(next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(next' → logprob: -0.0015023599844425917
    2. 'next' → logprob: -6.501502513885498
    3. ' next' → logprob: -17.251502990722656
    4. '(line' → logprob: -17.626502990722656
    5. '[next' → logprob: -17.876502990722656
    6. '(' → logprob: -18.001502990722656
    7. '(lines' → logprob: -19.001502990722656
    8. 'line' → logprob: -19.626502990722656
    9. '((' → logprob: -20.626502990722656
    10. '	next' → logprob: -21.126502990722656

Token 1325: '(lines' (ID: 73839)
  Prédit: '(lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lines' → logprob: -0.1269482672214508
    2. 'lines' → logprob: -2.126948356628418
    3. ' lines' → logprob: -11.001948356628418
    4. '	lines' → logprob: -12.751948356628418
    5. 'line' → logprob: -15.126948356628418
    6. '_lines' → logprob: -15.251948356628418
    7. '.lines' → logprob: -17.1269474029541
    8. '(line' → logprob: -17.1269474029541
    9. 'Lines' → logprob: -17.3769474029541
    10. ')' → logprob: -17.3769474029541

Token 1326: ').' (ID: 741)
  Prédit: ').'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -0.10494034737348557
    2. '))' → logprob: -2.854940414428711
    3. '().' → logprob: -3.854940414428711
    4. '()).' → logprob: -4.479940414428711
    5. '()))' → logprob: -5.104940414428711
    6. '()))
' → logprob: -6.354940414428711
    7. '))
' → logprob: -6.854940414428711
    8. ')' → logprob: -7.854940414428711
    9. '())' → logprob: -8.729940414428711
    10. '()' → logprob: -10.104940414428711

Token 1327: 'rstrip' (ID: 180429)
  Prédit: 'rstrip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rstrip' → logprob: -0.061967913061380386
    2. 'strip' → logprob: -2.8119678497314453
    3. '.rstrip' → logprob: -15.311967849731445
    4. 'r' → logprob: -18.936967849731445
    5. '_strip' → logprob: -18.936967849731445
    6. ' strip' → logprob: -19.436967849731445
    7. '(strip' → logprob: -21.186967849731445
    8. '.strip' → logprob: -21.811967849731445
    9. 'rs' → logprob: -22.561967849731445
    10. 'str' → logprob: -23.061967849731445

Token 1328: '('\' (ID: 24345)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.3162728548049927
    2. '('\' → logprob: -1.3162728548049927
    3. '())
' → logprob: -6.316272735595703
    4. '()' → logprob: -6.941272735595703
    5. '("\' → logprob: -9.191272735595703
    6. ''\' → logprob: -9.941272735595703
    7. '()\' → logprob: -10.191272735595703
    8. ')' → logprob: -10.316272735595703
    9. '()
' → logprob: -12.191272735595703
    10. '())

' → logprob: -13.566272735595703

Token 1329: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -2.165027217415627e-05
    2. '\n' → logprob: -10.750021934509277
    3. 'r' → logprob: -16.12502098083496
    4. 'newline' → logprob: -18.37502098083496
    5. ''\' → logprob: -19.12502098083496
    6. '
' → logprob: -19.87502098083496
    7. ')\' → logprob: -20.37502098083496
    8. ')' → logprob: -20.50002098083496
    9. '\r' → logprob: -21.62502098083496
    10. 't' → logprob: -22.50002098083496

Token 1330: ''))
' (ID: 15277)
  Prédit: ''))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''))' → logprob: -0.6261759996414185
    2. ''))
' → logprob: -1.0011759996414185
    3. '))' → logprob: -2.501175880432129
    4. '))
' → logprob: -4.251175880432129
    5. '()))
' → logprob: -7.626175880432129
    6. ')' → logprob: -7.751175880432129
    7. '()))' → logprob: -8.376175880432129
    8. '"))' → logprob: -8.626175880432129
    9. '"))
' → logprob: -8.751175880432129
    10. '()' → logprob: -10.001175880432129

Token 1331: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.23064471781253815
    2. '<|end|>' → logprob: -1.605644702911377
    3. '       ' → logprob: -6.105644702911377
    4. '<|end|>' → logprob: -6.355644702911377
    5. '           ' → logprob: -7.230644702911377
    6. '
' → logprob: -8.480645179748535
    7. ')' → logprob: -9.355645179748535
    8. '```' → logprob: -10.230645179748535
    9. '                ' → logprob: -10.355645179748535
    10. '              ' → logprob: -10.480645179748535

Token 1332: ' self' (ID: 1051)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04145379737019539
    2. '           ' → logprob: -3.9164538383483887
    3. '       ' → logprob: -4.416453838348389
    4. 'self' (adapté à ' self') → logprob: -5.666453838348389
    5. 'castle' → logprob: -6.416453838348389
    6. '
' → logprob: -6.541453838348389
    7. '```' → logprob: -6.541453838348389
    8. ' castle' → logprob: -8.29145336151123
    9. 'grid' → logprob: -9.04145336151123
    10. ' self' → logprob: -9.91645336151123

Token 1333: '.datasets' (ID: 136555)
  Prédit: '.datasets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.datasets' → logprob: -0.00048620346933603287
    2. 'datasets' → logprob: -7.750486373901367
    3. '.grid' → logprob: -11.000486373901367
    4. ' .' → logprob: -11.000486373901367
    5. '.parse' → logprob: -12.000486373901367
    6. '.datas' → logprob: -12.125486373901367
    7. '.' → logprob: -12.500486373901367
    8. '.dataset' → logprob: -12.875486373901367
    9. '.data' → logprob: -13.625486373901367
    10. '.dat' → logprob: -14.625486373901367

Token 1334: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.004226678051054478
    2. '.' → logprob: -5.6292266845703125
    3. '.extend' → logprob: -8.379226684570312
    4. '.app' → logprob: -8.754226684570312
    5. '<|end|>' → logprob: -9.629226684570312
    6. '.setdefault' → logprob: -9.879226684570312
    7. '.ap' → logprob: -11.004226684570312
    8. '.py' → logprob: -11.129226684570312
    9. '.pyplot' → logprob: -11.504226684570312
    10. '.add' → logprob: -11.754226684570312

Token 1335: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0019294669618830085
    2. '(' → logprob: -6.25192928314209
    3. '(
' → logprob: -14.62692928314209
    4. '   ' → logprob: -15.62692928314209
    5. '(((' → logprob: -16.376930236816406
    6. ' ((' → logprob: -16.876930236816406
    7. '(n' → logprob: -17.251930236816406
    8. ' (' → logprob: -17.376930236816406
    9. '[(' → logprob: -18.001930236816406
    10. '(m' → logprob: -18.501930236816406

Token 1336: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.3856492842023727e-06
    2. ' n' → logprob: -13.750000953674316
    3. '               ' → logprob: -15.625000953674316
    4. '                   ' → logprob: -17.625001907348633
    5. '	n' → logprob: -18.250001907348633
    6. '(n' → logprob: -18.875001907348633
    7. ')n' → logprob: -19.000001907348633
    8. '   ' → logprob: -19.125001907348633
    9. '           ' → logprob: -20.125001907348633
    10. '
' → logprob: -20.250001907348633

Token 1337: ',m' (ID: 26648)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3142041265964508
    2. ',m' → logprob: -1.3142040967941284
    3. 'm' → logprob: -7.189204216003418
    4. ' ,' → logprob: -8.939204216003418
    5. ',
' → logprob: -11.064204216003418
    6. '<|end|>' → logprob: -11.189204216003418
    7. ' m' → logprob: -12.314204216003418
    8. ',n' → logprob: -12.439204216003418
    9. ',None' → logprob: -13.189204216003418
    10. '<|end|>' → logprob: -13.189204216003418

Token 1338: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0017368246335536242
    2. ',[' → logprob: -7.876736640930176
    3. 'grid' → logprob: -8.001736640930176
    4. ',line' → logprob: -8.376736640930176
    5. ',
' → logprob: -9.001736640930176
    6. ',List' → logprob: -9.126736640930176
    7. ' ,' → logprob: -9.376736640930176
    8. '[' → logprob: -9.376736640930176
    9. '(grid' → logprob: -9.376736640930176
    10. ',list' → logprob: -9.501736640930176

Token 1339: 'grid' (ID: 7886)
  Prédit: 'grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -3.130576806142926e-05
    2. ' grid' → logprob: -10.375031471252441
    3. 'list' → logprob: -18.750030517578125
    4. '
' → logprob: -19.000030517578125
    5. '(grid' → logprob: -19.000030517578125
    6. '[' → logprob: -19.625030517578125
    7. '	grid' → logprob: -19.750030517578125
    8. '   ' → logprob: -19.875030517578125
    9. '.grid' → logprob: -20.375030517578125
    10. ' ' → logprob: -20.625030517578125

Token 1340: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -9.253090865968261e-06
    2. 'lines' → logprob: -11.625009536743164
    3. 'Lines' → logprob: -15.375009536743164
    4. 'ines' → logprob: -16.750009536743164
    5. ' lines' → logprob: -18.125009536743164
    6. 'elines' → logprob: -18.125009536743164
    7. '_LINES' → logprob: -18.250009536743164
    8. '(lines' → logprob: -18.375009536743164
    9. ')' → logprob: -19.000009536743164
    10. 'e' → logprob: -19.125009536743164

Token 1341: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.2537601590156555
    2. ')' → logprob: -1.5037600994110107
    3. '))
' → logprob: -6.37876033782959
    4. ')
' → logprob: -9.75376033782959
    5. '               ' → logprob: -10.12876033782959
    6. '           ' → logprob: -11.37876033782959
    7. '       ' → logprob: -11.50376033782959
    8. ')))' → logprob: -11.87876033782959
    9. '                   ' → logprob: -13.12876033782959
    10. ' ))' → logprob: -14.12876033782959

Token 1342: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1343: ' except' (ID: 6384)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1344: ' Stop' (ID: 22535)
  Prédit: 'Stop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Stop' → logprob: -1.318681188422488e-05
    2. ' Stop' → logprob: -11.25001335144043
    3. 'EOF' → logprob: -17.12501335144043
    4. '_Stop' → logprob: -17.37501335144043
    5. 'STOP' → logprob: -17.62501335144043
    6. '(' → logprob: -17.62501335144043
    7. '_stop' → logprob: -18.12501335144043
    8. '.Stop' → logprob: -19.25001335144043
    9. 'Break' → logprob: -19.25001335144043
    10. '_STOP' → logprob: -21.37501335144043

Token 1345: 'Iteration' (ID: 77823)
  Prédit: 'Iteration'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Iteration' → logprob: -3.7697225252486533e-06
    2. 'Iterator' → logprob: -12.625003814697266
    3. 'iteration' → logprob: -15.375003814697266
    4. 'Async' → logprob: -15.375003814697266
    5. ' iteration' → logprob: -17.875003814697266
    6. '
' → logprob: -19.000003814697266
    7. 'Iter' → logprob: -19.000003814697266
    8. '_iteration' → logprob: -19.875003814697266
    9. 'Iterations' → logprob: -20.250003814697266
    10. 'Iterable' → logprob: -20.500003814697266

Token 1346: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.670184314250946
    2. ':' → logprob: -1.1701843738555908
    3. ':
' → logprob: -2.170184373855591
    4. '           ' → logprob: -3.420184373855591
    5. '                   ' → logprob: -3.670184373855591
    6. '                       ' → logprob: -6.170184135437012
    7. '	           ' → logprob: -7.420184135437012
    8. '   ' → logprob: -7.420184135437012
    9. ':return' → logprob: -8.170184135437012
    10. '       ' → logprob: -8.295184135437012

Token 1347: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.005303600803017616
    2. '           ' → logprob: -5.255303382873535
    3. '                   ' → logprob: -10.630303382873535
    4. '       ' → logprob: -10.755303382873535
    5. 'break' → logprob: -11.130303382873535
    6. '	           ' → logprob: -12.880303382873535
    7. '   ' → logprob: -13.255303382873535
    8. '                       ' → logprob: -13.630303382873535
    9. '		       ' → logprob: -13.630303382873535
    10. '	       ' → logprob: -14.255303382873535

Token 1348: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.003276579547673464
    2. '               ' → logprob: -6.503276348114014
    3. 'return' → logprob: -6.503276348114014
    4. ' break' → logprob: -8.253276824951172
    5. '           ' → logprob: -11.753276824951172
    6. '                   ' → logprob: -12.503276824951172
    7. '	break' → logprob: -13.253276824951172
    8. '       ' → logprob: -16.128276824951172
    9. '   ' → logprob: -16.253276824951172
    10. ' return' → logprob: -16.378276824951172

Token 1349: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1350: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.010658325627446175
    2. '<|end|>' → logprob: -4.760658264160156
    3. 'if' → logprob: -7.385658264160156
    4. 'class' → logprob: -7.510658264160156
    5. '```' → logprob: -8.135658264160156
    6. '   ' → logprob: -8.385658264160156
    7. '#' → logprob: -8.760658264160156
    8. '<|end|>' → logprob: -9.385658264160156
    9. ' def' → logprob: -10.510658264160156
    10. '
' → logprob: -11.010658264160156

Token 1351: ' Ninja' (ID: 77983)
  Prédit: 'Runner'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Runner' → logprob: -1.3320519924163818
    2. 'Solver' → logprob: -1.3320519924163818
    3. 'Solution' → logprob: -1.4570519924163818
    4. 'Output' → logprob: -1.7070519924163818
    5. 'Main' → logprob: -4.332052230834961
    6. ' Runner' → logprob: -4.582052230834961
    7. 'N' → logprob: -4.832052230834961
    8. ' Solution' → logprob: -5.082052230834961
    9. ' Solver' → logprob: -5.332052230834961
    10. 'Executor' → logprob: -5.582052230834961

Token 1352: 'Solution' (ID: 44456)
  Prédit: 'Path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Path' → logprob: -0.002367086010053754
    2. 'Solver' → logprob: -6.37736701965332
    3. 'Runner' → logprob: -7.62736701965332
    4. 'Explorer' → logprob: -9.87736701965332
    5. 'Solution' → logprob: -10.75236701965332
    6. 'Escape' → logprob: -11.50236701965332
    7. 'Traversal' → logprob: -11.62736701965332
    8. 'Paths' → logprob: -11.75236701965332
    9. 'Crawler' → logprob: -11.87736701965332
    10. '_path' → logprob: -11.87736701965332

Token 1353: 'Runner' (ID: 26032)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06995176523923874
    2. ':
' → logprob: -2.6949517726898193
    3. ':def' → logprob: -12.194952011108398
    4. ':

' → logprob: -12.819952011108398
    5. '(N' → logprob: -13.069952011108398
    6. '():
' → logprob: -13.444952011108398
    7. '   ' → logprob: -13.694952011108398
    8. '):
' → logprob: -14.569952011108398
    9. '(object' → logprob: -14.694952011108398
    10. '```' → logprob: -15.194952011108398

Token 1354: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.038058239966630936
    2. ':
' → logprob: -3.288058280944824
    3. ':def' → logprob: -12.163058280944824
    4. ':

' → logprob: -12.788058280944824
    5. '():
' → logprob: -12.788058280944824
    6. '):
' → logprob: -13.538058280944824
    7. '   ' → logprob: -13.788058280944824
    8. '(object' → logprob: -14.663058280944824
    9. '):' → logprob: -14.663058280944824
    10. ' :' → logprob: -14.663058280944824

Token 1355: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -9.496052371105179e-05
    2. 'class' → logprob: -9.75009536743164
    3. 'def' → logprob: -11.25009536743164
    4. '```' → logprob: -11.50009536743164
    5. '	def' → logprob: -12.12509536743164
    6. ' def' → logprob: -12.75009536743164
    7. ':' → logprob: -13.62509536743164
    8. '
' → logprob: -13.87509536743164
    9. ' class' → logprob: -14.25009536743164
    10. '<|end|>' → logprob: -14.62509536743164

Token 1356: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0029037778731435537
    2. 'def' (adapté à ' def') → logprob: -5.877903938293457
    3. ' def' → logprob: -9.877903938293457
    4. 'class' → logprob: -10.002903938293457
    5. '	def' → logprob: -13.627903938293457
    6. '```' → logprob: -13.877903938293457
    7. '
' → logprob: -16.12790298461914
    8. ' class' → logprob: -17.00290298461914
    9. '    
' → logprob: -17.75290298461914
    10. '   ' → logprob: -17.87790298461914

Token 1357: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.2640186548233032
    2. 'def' → logprob: -1.5140186548233032
    3. ' __' → logprob: -5.139018535614014
    4. 'init' → logprob: -5.264018535614014
    5. ' def' → logprob: -7.014018535614014
    6. 'run' → logprob: -10.139019012451172
    7. 'solve' → logprob: -11.389019012451172
    8. '_init' → logprob: -12.264019012451172
    9. '```' → logprob: -12.264019012451172
    10. '___' → logprob: -12.514019012451172

Token 1358: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: 0.0
    2. 'call' → logprob: -20.25
    3. ' init' → logprob: -20.625
    4. 'iter' → logprob: -22.25
    5. '	init' → logprob: -23.875
    6. '.init' → logprob: -24.125
    7. '
' → logprob: -24.625
    8. '_init' → logprob: -24.875
    9. '(init' → logprob: -24.875
    10. 'inite' → logprob: -25.25

Token 1359: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.024759991094470024
    2. '__(' → logprob: -3.7747600078582764
    3. ' (' → logprob: -7.149759769439697
    4. '   ' → logprob: -7.649759769439697
    5. 'self' → logprob: -8.899760246276855
    6. '
' → logprob: -9.899760246276855
    7. '(' → logprob: -10.649760246276855
    8. '__(
' → logprob: -11.149760246276855
    9. '       ' → logprob: -11.899760246276855
    10. '```' → logprob: -12.024760246276855

Token 1360: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -2.8325677703833207e-05
    2. ')' → logprob: -11.750028610229492
    3. ' self' → logprob: -11.750028610229492
    4. '):
' → logprob: -12.125028610229492
    5. '       ' → logprob: -12.500028610229492
    6. '   ' → logprob: -13.250028610229492
    7. '(self' → logprob: -13.875028610229492
    8. '
' → logprob: -14.875028610229492
    9. '):' → logprob: -16.750028610229492
    10. ')
' → logprob: -17.250028610229492

Token 1361: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.3262779712677002
    2. ',' → logprob: -1.7012779712677002
    3. 'self' → logprob: -3.0762779712677
    4. '   ' → logprob: -3.3262779712677
    5. '       ' → logprob: -5.076277732849121
    6. '):
' → logprob: -5.826277732849121
    7. ' (' → logprob: -5.951277732849121
    8. '
' → logprob: -6.826277732849121
    9. ')' → logprob: -7.951277732849121
    10. ')(' → logprob: -8.701277732849121

Token 1362: ' datasets' (ID: 57711)
  Prédit: 'datasets'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'datasets' → logprob: -0.7320476770401001
    2. 'input' → logprob: -1.4820476770401
    3. 'self' → logprob: -1.9820476770401
    4. 'parser' → logprob: -2.6070475578308105
    5. '):
' → logprob: -3.3570475578308105
    6. 'inputs' → logprob: -3.4820475578308105
    7. 'lines' → logprob: -5.1070475578308105
    8. 'castle' → logprob: -5.7320475578308105
    9. '):' → logprob: -6.4820475578308105
    10. ' datasets' → logprob: -7.3570475578308105

Token 1363: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6433544158935547
    2. '):
' → logprob: -1.2683544158935547
    3. '       ' → logprob: -1.7683544158935547
    4. 'self' → logprob: -4.643354415893555
    5. '):' → logprob: -5.393354415893555
    6. '   ' → logprob: -5.518354415893555
    7. ',' → logprob: -5.768354415893555
    8. '(self' → logprob: -7.268354415893555
    9. ':self' → logprob: -9.143354415893555
    10. '):
' → logprob: -9.518354415893555

Token 1364: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.006764513906091452
    2. 'self' → logprob: -5.0067644119262695
    3. 'list' → logprob: -10.63176441192627
    4. '       ' → logprob: -11.38176441192627
    5. ' List' → logprob: -11.75676441192627
    6. 'None' → logprob: -13.00676441192627
    7. '   ' → logprob: -13.38176441192627
    8. ')' → logprob: -14.63176441192627
    9. '):
' → logprob: -14.88176441192627
    10. ' self' → logprob: -14.88176441192627

Token 1365: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1875571544806007e-05
    2. '   ' → logprob: -12.125011444091797
    3. '[
' → logprob: -12.500011444091797
    4. '):
' → logprob: -13.500011444091797
    5. '       ' → logprob: -13.875011444091797
    6. '[int' → logprob: -15.750011444091797
    7. '[(' → logprob: -16.625011444091797
    8. '           ' → logprob: -16.875011444091797
    9. '```' → logprob: -17.250011444091797
    10. '<Tuple' → logprob: -17.625011444091797

Token 1366: 'Tuple' (ID: 40048)
  Prédit: 'Tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tuple' → logprob: -5.5577775128767826e-06
    2. ' Tuple' → logprob: -12.250005722045898
    3. '   ' → logprob: -14.625005722045898
    4. 'int' → logprob: -16.5000057220459
    5. '[' → logprob: -16.6250057220459
    6. '[int' → logprob: -17.1250057220459
    7. ' ' → logprob: -17.2500057220459
    8. '       ' → logprob: -17.3750057220459
    9. '.Tuple' → logprob: -17.7500057220459
    10. 'tuple' → logprob: -17.8750057220459

Token 1367: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.12692926824092865
    2. 'int' → logprob: -2.12692928314209
    3. '   ' → logprob: -14.00192928314209
    4. '       ' → logprob: -16.001928329467773
    5. ' int' → logprob: -16.376928329467773
    6. ':int' → logprob: -16.876928329467773
    7. ',int' → logprob: -17.126928329467773
    8. '           ' → logprob: -17.126928329467773
    9. '	int' → logprob: -17.501928329467773
    10. '
' → logprob: -17.751928329467773

Token 1368: ',int' (ID: 20909)
  Prédit: ',int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',int' → logprob: -0.0034048978704959154
    2. 'int' → logprob: -6.0034050941467285
    3. ',' → logprob: -7.0034050941467285
    4. '[int' → logprob: -10.87840461730957
    5. ']int' → logprob: -14.00340461730957
    6. ' ,' → logprob: -15.87840461730957
    7. ':int' → logprob: -16.50340461730957
    8. ' int' → logprob: -16.62840461730957
    9. '(int' → logprob: -17.37840461730957
    10. ',float' → logprob: -18.12840461730957

Token 1369: ',List' (ID: 166273)
  Prédit: ',List'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',List' → logprob: -0.0110534792765975
    2. ',' → logprob: -4.511053562164307
    3. '[List' → logprob: -13.261053085327148
    4. ' ,' → logprob: -13.761053085327148
    5. ',int' → logprob: -13.886053085327148
    6. ',String' → logprob: -14.386053085327148
    7. ',str' → logprob: -14.511053085327148
    8. ',[' → logprob: -15.261053085327148
    9. ',list' → logprob: -15.261053085327148
    10. ',None' → logprob: -16.26105308532715

Token 1370: '[str' (ID: 33439)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -2.2200749754119897e-06
    2. 'int' → logprob: -13.125001907348633
    3. '[str' → logprob: -16.250001907348633
    4. '```' → logprob: -17.250001907348633
    5. '
' → logprob: -17.500001907348633
    6. ']]]' → logprob: -17.750001907348633
    7. '[Int' → logprob: -17.875001907348633
    8. ']])' → logprob: -18.125001907348633
    9. '[' → logprob: -18.250001907348633
    10. ']]' → logprob: -18.250001907348633

Token 1371: ']]' (ID: 8928)
  Prédit: ']]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]' → logprob: -0.0005647073267027736
    2. ']]]' → logprob: -7.5005645751953125
    3. ']])' → logprob: -11.625564575195312
    4. ']' → logprob: -14.000564575195312
    5. '[str' → logprob: -14.375564575195312
    6. '[' → logprob: -14.875564575195312
    7. ']]:
' → logprob: -15.125564575195312
    8. ']],' → logprob: -15.875564575195312
    9. '])' → logprob: -16.000564575195312
    10. '```' → logprob: -16.250564575195312

Token 1372: ']):
' (ID: 51989)
  Prédit: ']):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']):
' → logprob: -0.016468318179249763
    2. ']):' → logprob: -4.391468524932861
    3. '       ' → logprob: -6.141468524932861
    4. '):
' → logprob: -6.641468524932861
    5. '   ' → logprob: -8.016468048095703
    6. ']' → logprob: -9.391468048095703
    7. '):' → logprob: -10.891468048095703
    8. '']):
' → logprob: -11.016468048095703
    9. '])' → logprob: -11.516468048095703
    10. ')' → logprob: -11.766468048095703

Token 1373: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026141677051782608
    2. '   ' → logprob: -4.40114164352417
    3. 'def' → logprob: -4.40114164352417
    4. 'self' → logprob: -6.77614164352417
    5. ' def' → logprob: -9.651142120361328
    6. ' self' → logprob: -9.901142120361328
    7. ' ' → logprob: -12.401142120361328
    8. ':' → logprob: -13.276142120361328
    9. 'class' → logprob: -13.276142120361328
    10. '```' → logprob: -13.276142120361328

Token 1374: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.005271345842629671
    2. '       ' → logprob: -5.2552714347839355
    3. ' self' → logprob: -10.755270957946777
    4. 'class' → logprob: -11.130270957946777
    5. '   ' → logprob: -13.880270957946777
    6. '(self' → logprob: -15.255270957946777
    7. '	self' → logprob: -15.630270957946777
    8. 'def' → logprob: -16.130271911621094
    9. 'from' → logprob: -16.380271911621094
    10. ' ' → logprob: -18.755271911621094

Token 1375: '.datasets' (ID: 136555)
  Prédit: '.datasets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.datasets' → logprob: -0.0001227276516146958
    2. 'datasets' → logprob: -9.375123023986816
    3. '.data' → logprob: -11.000123023986816
    4. '.datas' → logprob: -11.500123023986816
    5. '.dataset' → logprob: -11.750123023986816
    6. '.dat' → logprob: -13.375123023986816
    7. ' .' → logprob: -14.875123023986816
    8. '.' → logprob: -15.500123023986816
    9. '.class' → logprob: -15.625123023986816
    10. 'class' → logprob: -15.750123023986816

Token 1376: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7111257910728455
    2. ' =' → logprob: -0.7111257910728455
    3. ':' → logprob: -4.46112585067749
    4. '   ' → logprob: -5.71112585067749
    5. '       ' → logprob: -6.21112585067749
    6. '=[]' → logprob: -8.211125373840332
    7. '<|end|>' → logprob: -8.961125373840332
    8. ')' → logprob: -8.961125373840332
    9. ',' → logprob: -9.336125373840332
    10. '=self' → logprob: -9.711125373840332

Token 1377: ' datasets' (ID: 57711)
  Prédit: 'datasets'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'datasets' → logprob: -1.700132997939363e-05
    2. ' datasets' → logprob: -11.000017166137695
    3. 'self' → logprob: -16.000017166137695
    4. '.datasets' → logprob: -16.625017166137695
    5. '       ' → logprob: -16.750017166137695
    6. 'dataset' → logprob: -17.875017166137695
    7. 'dat' → logprob: -18.000017166137695
    8. '   ' → logprob: -19.250017166137695
    9. '[' → logprob: -19.750017166137695
    10. '[
' → logprob: -19.875017166137695

Token 1378: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004912092816084623
    2. 'def' → logprob: -5.37991189956665
    3. '
' → logprob: -8.254912376403809
    4. '    
' → logprob: -11.379912376403809
    5. ' def' → logprob: -11.754912376403809
    6. '       ' → logprob: -12.629912376403809
    7. '<|end|>' → logprob: -13.004912376403809
    8. '        
' → logprob: -13.254912376403809
    9. '	def' → logprob: -14.254912376403809
    10. '<|end|>' → logprob: -14.379912376403809

Token 1379: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004688106942921877
    2. 'def' → logprob: -5.379688262939453
    3. '
' → logprob: -10.004688262939453
    4. ' def' → logprob: -11.004688262939453
    5. '       ' → logprob: -12.629688262939453
    6. '    
' → logprob: -14.629688262939453
    7. 'from' → logprob: -14.879688262939453
    8. ')' → logprob: -15.004688262939453
    9. '```' → logprob: -15.379688262939453
    10. '<|end|>' → logprob: -15.379688262939453

Token 1380: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0001991298486245796
    2. '   ' → logprob: -9.000199317932129
    3. ' def' → logprob: -9.500199317932129
    4. ')' → logprob: -14.750199317932129
    5. '	def' → logprob: -15.125199317932129
    6. '
' → logprob: -15.875199317932129
    7. '):
' → logprob: -17.375198364257812
    8. ' ' → logprob: -17.875198364257812
    9. ':' → logprob: -18.125198364257812
    10. ':def' → logprob: -18.375198364257812

Token 1381: ' run' (ID: 2461)
  Prédit: 'run'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'run' → logprob: -0.0001991298486245796
    2. 'solve' → logprob: -8.750199317932129
    3. ' run' → logprob: -10.500199317932129
    4. '__' → logprob: -11.375199317932129
    5. '_run' → logprob: -13.500199317932129
    6. 'execute' → logprob: -16.125198364257812
    7. 'process' → logprob: -16.500198364257812
    8. ' solve' → logprob: -18.000198364257812
    9. '	run' → logprob: -18.750198364257812
    10. 'compute' → logprob: -19.000198364257812

Token 1382: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -4.68022444692906e-05
    2. '(' → logprob: -10.125046730041504
    3. '   ' → logprob: -13.000046730041504
    4. 'self' → logprob: -13.375046730041504
    5. '(
' → logprob: -13.375046730041504
    6. '       ' → logprob: -14.375046730041504
    7. ' (' → logprob: -14.500046730041504
    8. 'def' → logprob: -16.00004768371582
    9. ' self' → logprob: -17.62504768371582
    10. ' ' → logprob: -17.87504768371582

Token 1383: ')' (ID: 8)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.16695299744606018
    2. '):' → logprob: -1.9169529676437378
    3. 'self' → logprob: -5.666953086853027
    4. ')' → logprob: -5.916953086853027
    5. '):
' → logprob: -8.166953086853027
    6. ',' → logprob: -8.791953086853027
    7. '(self' → logprob: -9.916953086853027
    8. '   ' → logprob: -11.041953086853027
    9. ')->' → logprob: -11.291953086853027
    10. '
' → logprob: -11.916953086853027

Token 1384: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.06822413951158524
    2. '       ' → logprob: -3.0682241916656494
    3. '   ' → logprob: -4.44322395324707
    4. 'self' → logprob: -5.44322395324707
    5. '(' → logprob: -6.31822395324707
    6. '(
' → logprob: -7.31822395324707
    7. ' self' → logprob: -8.69322395324707
    8. '           ' → logprob: -9.06822395324707
    9. 'def' → logprob: -9.06822395324707
    10. ':
' → logprob: -9.44322395324707

Token 1385: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -1.771655115589965e-05
    2. 'None' → logprob: -11.500018119812012
    3. ' List' → logprob: -12.250018119812012
    4. 'Iterator' → logprob: -13.000018119812012
    5. '[List' → logprob: -14.750018119812012
    6. 'int' → logprob: -16.375017166137695
    7. 'list' → logprob: -18.875017166137695
    8. 'Generator' → logprob: -19.000017166137695
    9. '   ' → logprob: -19.625017166137695
    10. '	List' → logprob: -20.125017166137695

Token 1386: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -1.3856492842023727e-06
    2. 'int' → logprob: -13.750000953674316
    3. '[' → logprob: -16.125001907348633
    4. '[List' → logprob: -16.500001907348633
    5. '[
' → logprob: -17.625001907348633
    6. '[Int' → logprob: -17.750001907348633
    7. '<int' → logprob: -18.750001907348633
    8. ' [' → logprob: -19.500001907348633
    9. '(int' → logprob: -21.625001907348633
    10. '
' → logprob: -21.875001907348633

Token 1387: ']:
' (ID: 22152)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.09619820863008499
    2. '():
' → logprob: -3.471198320388794
    3. '):
' → logprob: -3.596198320388794
    4. ']:
' → logprob: -3.846198320388794
    5. ':' → logprob: -4.846198081970215
    6. '   ' → logprob: -5.846198081970215
    7. '       ' → logprob: -7.971198081970215
    8. '[' → logprob: -8.221198081970215
    9. '[
' → logprob: -8.346198081970215
    10. '():' → logprob: -9.971198081970215

Token 1388: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002067588793579489
    2. '   ' → logprob: -8.75020694732666
    3. '	' → logprob: -10.87520694732666
    4. '```' → logprob: -11.62520694732666
    5. '[' → logprob: -12.00020694732666
    6. 'results' → logprob: -12.75020694732666
    7. 'tokens' → logprob: -13.12520694732666
    8. 'result' → logprob: -13.12520694732666
    9. '`' → logprob: -13.87520694732666
    10. '[]' → logprob: -14.00020694732666

Token 1389: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' (adapté à ' results') → logprob: -0.31874120235443115
    2. '       ' → logprob: -1.3187412023544312
    3. 'result' → logprob: -5.568741321563721
    4. ' results' → logprob: -6.443741321563721
    5. 'outputs' → logprob: -10.318740844726562
    6. 'output' → logprob: -11.193740844726562
    7. '	results' → logprob: -12.068740844726562
    8. '```' → logprob: -13.193740844726562
    9. 'res' → logprob: -13.318740844726562
    10. ' result' → logprob: -13.693740844726562

Token 1390: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.038103457540273666
    2. '=' → logprob: -3.2881033420562744
    3. '=[]' → logprob: -9.913103103637695
    4. '   ' → logprob: -12.038103103637695
    5. '=[]
' → logprob: -12.538103103637695
    6. ':' → logprob: -13.163103103637695
    7. '[]' → logprob: -14.913103103637695
    8. '       ' → logprob: -15.163103103637695
    9. '.append' → logprob: -15.413103103637695
    10. '[:]' → logprob: -17.163103103637695

Token 1391: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.5759727358818054
    2. '[]
' → logprob: -0.8259727358818054
    3. '[' → logprob: -11.200972557067871
    4. '[]

' → logprob: -11.700972557067871
    5. ' []
' → logprob: -12.200972557067871
    6. ' []' → logprob: -12.700972557067871
    7. '([])
' → logprob: -14.200972557067871
    8. '       ' → logprob: -14.325972557067871
    9. '[
' → logprob: -14.450972557067871
    10. '   ' → logprob: -14.825972557067871

Token 1392: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00021617230959236622
    2. ' for' → logprob: -9.125216484069824
    3. 'for' → logprob: -9.625216484069824
    4. '   ' → logprob: -10.375216484069824
    5. '	' → logprob: -11.875216484069824
    6. '           ' → logprob: -13.500216484069824
    7. '	for' → logprob: -14.625216484069824
    8. '```' → logprob: -15.000216484069824
    9. '	   ' → logprob: -15.625216484069824
    10. ',' → logprob: -15.875216484069824

Token 1393: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.038086701184511185
    2. '       ' → logprob: -3.2880866527557373
    3. ' for' → logprob: -10.038086891174316
    4. '   ' → logprob: -13.413086891174316
    5. '	for' → logprob: -17.4130859375
    6. '```' → logprob: -17.5380859375
    7. '           ' → logprob: -20.0380859375
    8. 'from' → logprob: -20.5380859375
    9. ' ' → logprob: -21.2880859375
    10. '
' → logprob: -21.4130859375

Token 1394: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.13600245118141174
    2. 'width' → logprob: -2.261002540588379
    3. '(n' → logprob: -4.136002540588379
    4. 'self' → logprob: -5.261002540588379
    5. '(width' → logprob: -7.636002540588379
    6. 'w' → logprob: -8.011002540588379
    7. '(self' → logprob: -8.136002540588379
    8. ' (' → logprob: -8.511002540588379
    9. ' n' → logprob: -8.886002540588379
    10. '   ' → logprob: -8.886002540588379

Token 1395: ',m' (ID: 26648)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.38709357380867004
    2. ',m' → logprob: -1.1370935440063477
    3. ',n' → logprob: -9.512093544006348
    4. 'm' → logprob: -9.762093544006348
    5. ' ,' → logprob: -9.887093544006348
    6. ' in' → logprob: -11.637093544006348
    7. 'in' → logprob: -12.012093544006348
    8. ',in' → logprob: -12.637093544006348
    9. ',self' → logprob: -12.887093544006348
    10. ',(' → logprob: -12.887093544006348

Token 1396: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16342008113861084
    2. ',m' → logprob: -2.1634202003479004
    3. ',d' → logprob: -3.4134202003479004
    4. ',n' → logprob: -6.1634202003479
    5. ',(' → logprob: -7.9134202003479
    6. ',self' → logprob: -8.788419723510742
    7. ',x' → logprob: -9.538419723510742
    8. ',s' → logprob: -9.913419723510742
    9. ',data' → logprob: -10.038419723510742
    10. ',line' → logprob: -10.788419723510742

Token 1397: 'grid' (ID: 7886)
  Prédit: 'grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -2.3438327843905427e-05
    2. 'lines' → logprob: -10.75002384185791
    3. ' grid' → logprob: -13.75002384185791
    4. 'gr' → logprob: -14.00002384185791
    5. 'gl' → logprob: -17.125022888183594
    6. '       ' → logprob: -17.375022888183594
    7. '   ' → logprob: -17.750022888183594
    8. 'data' → logprob: -18.125022888183594
    9. 'rows' → logprob: -18.250022888183594
    10. 'g' → logprob: -18.500022888183594

Token 1398: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.0031996930483728647
    2. 'lines' → logprob: -5.753199577331543
    3. 'in' → logprob: -11.253199577331543
    4. ' in' → logprob: -11.878199577331543
    5. '       ' → logprob: -14.503199577331543
    6. '_points' → logprob: -14.503199577331543
    7. ' lines' → logprob: -15.253199577331543
    8. 'Lines' → logprob: -15.253199577331543
    9. ',' → logprob: -15.878199577331543
    10. '_LINES' → logprob: -16.00320053100586

Token 1399: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00975739024579525
    2. 'in' → logprob: -4.6347575187683105
    3. '       ' → logprob: -14.509757041931152
    4. '        ' → logprob: -14.884757041931152
    5. ',' → logprob: -15.259757041931152
    6. '_in' → logprob: -15.759757041931152
    7. 'In' → logprob: -16.50975799560547
    8. ':
' → logprob: -16.50975799560547
    9. '	in' → logprob: -16.88475799560547
    10. '_' → logprob: -17.13475799560547

Token 1400: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -5.676981345459353e-06
    2. ' self' → logprob: -12.375005722045898
    3. '[self' → logprob: -13.875005722045898
    4. '(self' → logprob: -14.500005722045898
    5. '
' → logprob: -20.1250057220459
    6. '	self' → logprob: -20.5000057220459
    7. '=self' → logprob: -20.8750057220459
    8. '[' → logprob: -21.1250057220459
    9. 'datasets' → logprob: -21.1250057220459
    10. ':self' → logprob: -21.5000057220459

Token 1401: '.datasets' (ID: 136555)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.003674417734146118
    2. 'datasets' → logprob: -5.753674507141113
    3. ' self' → logprob: -7.628674507141113
    4. '.datasets' → logprob: -12.003674507141113
    5. '[self' → logprob: -13.753674507141113
    6. '(self' → logprob: -14.128674507141113
    7. ' datasets' → logprob: -14.253674507141113
    8. '
' → logprob: -14.878674507141113
    9. '       ' → logprob: -15.378674507141113
    10. '   ' → logprob: -15.503674507141113

Token 1402: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.04044237360358238
    2. ':' → logprob: -3.54044246673584
    3. '           ' → logprob: -4.79044246673584
    4. '       ' → logprob: -6.29044246673584
    5. ',' → logprob: -8.16544246673584
    6. '):
' → logprob: -8.79044246673584
    7. '():
' → logprob: -11.41544246673584
    8. ':

' → logprob: -11.91544246673584
    9. ' :
' → logprob: -12.16544246673584
    10. ':
' → logprob: -12.91544246673584

Token 1403: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08938827365636826
    2. '           ' → logprob: -2.464388370513916
    3. ' castle' → logprob: -7.964388370513916
    4. '```' → logprob: -10.464387893676758
    5. '   ' → logprob: -10.714387893676758
    6. 'castle' → logprob: -11.589387893676758
    7. '	       ' → logprob: -11.839387893676758
    8. ',' → logprob: -11.839387893676758
    9. '	   ' → logprob: -12.464387893676758
    10. '        
' → logprob: -13.214387893676758

Token 1404: ' castle' (ID: 54483)
  Prédit: 'castle'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'castle' (adapté à ' castle') → logprob: -0.09366098046302795
    2. '           ' → logprob: -2.468661069869995
    3. ' castle' → logprob: -5.593660831451416
    4. 'cast' → logprob: -7.718660831451416
    5. 'map' → logprob: -7.968660831451416
    6. '               ' → logprob: -9.218661308288574
    7. '_cast' → logprob: -11.343661308288574
    8. 'grid' → logprob: -11.343661308288574
    9. 'cm' → logprob: -11.343661308288574
    10. '```' → logprob: -11.468661308288574

Token 1405: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -0.002712738234549761
    2. ' =' → logprob: -6.252712726593018
    3. '=' → logprob: -7.502712726593018
    4. 'Map' → logprob: -8.502713203430176
    5. '           ' → logprob: -10.877713203430176
    6. '=_' → logprob: -12.252713203430176
    7. 'map' → logprob: -12.877713203430176
    8. '       ' → logprob: -13.002713203430176
    9. '_Map' → logprob: -15.377713203430176
    10. '_' → logprob: -15.377713203430176

Token 1406: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12692883610725403
    2. ' =' → logprob: -2.1269288063049316
    3. '=
' → logprob: -14.87692928314209
    4. '   ' → logprob: -15.12692928314209
    5. '=C' → logprob: -16.251928329467773
    6. '=N' → logprob: -17.751928329467773
    7. '=

' → logprob: -17.876928329467773
    8. ' ' → logprob: -17.876928329467773
    9. ' =
' → logprob: -18.001928329467773
    10. '```' → logprob: -18.126928329467773

Token 1407: ' Castle' (ID: 38570)
  Prédit: 'Castle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Castle' → logprob: -0.0003365350130479783
    2. ' Castle' → logprob: -8.000336647033691
    3. 'Cast' → logprob: -13.750336647033691
    4. 'castle' → logprob: -19.875335693359375
    5. '           ' → logprob: -20.000335693359375
    6. 'CAST' → logprob: -21.250335693359375
    7. 'Grid' → logprob: -21.625335693359375
    8. '       ' → logprob: -21.625335693359375
    9. '   ' → logprob: -22.125335693359375
    10. '_cast' → logprob: -22.500335693359375

Token 1408: 'Map' (ID: 2307)
  Prédit: 'Map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Map' → logprob: -4.320199877838604e-07
    2. 'Castle' → logprob: -16.625
    3. 'map' → logprob: -16.875
    4. 'Cast' → logprob: -17.0
    5. '_map' → logprob: -17.25
    6. '(Map' → logprob: -18.125
    7. '(' → logprob: -18.125
    8. '{' → logprob: -18.375
    9. 'Maps' → logprob: -18.5
    10. '```' → logprob: -19.0

Token 1409: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -4.60414821645827e-06
    2. 'n' → logprob: -12.375004768371582
    3. '(
' → logprob: -16.375003814697266
    4. '(' → logprob: -16.625003814697266
    5. '           ' → logprob: -16.625003814697266
    6. ' (' → logprob: -18.250003814697266
    7. ' n' → logprob: -18.375003814697266
    8. '               ' → logprob: -18.875003814697266
    9. '       ' → logprob: -19.625003814697266
    10. '```' → logprob: -20.125003814697266

Token 1410: ',m' (ID: 26648)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03813214227557182
    2. ',m' → logprob: -3.2881321907043457
    3. 'm' → logprob: -9.413131713867188
    4. ' ,' → logprob: -12.163131713867188
    5. '           ' → logprob: -12.663131713867188
    6. ',
' → logprob: -16.288131713867188
    7. '   ' → logprob: -16.288131713867188
    8. '       ' → logprob: -16.288131713867188
    9. 'grid' → logprob: -16.413131713867188
    10. '               ' → logprob: -17.288131713867188

Token 1411: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0445127372804563e-05
    2. '           ' → logprob: -11.75001049041748
    3. ' ,' → logprob: -13.50001049041748
    4. 'grid' → logprob: -14.12501049041748
    5. '               ' → logprob: -16.250009536743164
    6. '          ' → logprob: -17.000009536743164
    7. ',
' → logprob: -17.250009536743164
    8. '(grid' → logprob: -17.250009536743164
    9. '```' → logprob: -18.000009536743164
    10. '                   ' → logprob: -18.000009536743164

Token 1412: 'grid' (ID: 7886)
  Prédit: 'grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -9.014684110297821e-06
    2. ' grid' → logprob: -11.625008583068848
    3. '(grid' → logprob: -17.625009536743164
    4. '           ' → logprob: -17.750009536743164
    5. '               ' → logprob: -19.625009536743164
    6. '	grid' → logprob: -19.875009536743164
    7. '[' → logprob: -20.000009536743164
    8. '                   ' → logprob: -20.125009536743164
    9. '   ' → logprob: -20.125009536743164
    10. '.grid' → logprob: -20.125009536743164

Token 1413: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -9.968312951968983e-06
    2. '_points' → logprob: -12.500009536743164
    3. 'lines' → logprob: -12.875009536743164
    4. '           ' → logprob: -13.500009536743164
    5. 'Lines' → logprob: -13.625009536743164
    6. '```' → logprob: -15.625009536743164
    7. '               ' → logprob: -15.750009536743164
    8. '_LINES' → logprob: -15.875009536743164
    9. ')' → logprob: -16.125009536743164
    10. '       ' → logprob: -16.125009536743164

Token 1414: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.1275562345981598
    2. '           ' → logprob: -2.127556324005127
    3. ')' → logprob: -7.377556324005127
    4. ')
' → logprob: -13.252555847167969
    5. 'N' → logprob: -14.877555847167969
    6. '               ' → logprob: -15.377555847167969
    7. '       ' → logprob: -15.377555847167969
    8. 'n' → logprob: -16.00255584716797
    9. ')

' → logprob: -17.00255584716797
    10. ')`
' → logprob: -17.12755584716797

Token 1415: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0022518415935337543
    2. 'path' → logprob: -6.127251625061035
    3. ' path' → logprob: -10.502251625061035
    4. '       ' → logprob: -10.877251625061035
    5. 'n' → logprob: -11.002251625061035
    6. 'solver' → logprob: -13.752251625061035
    7. 'finder' → logprob: -14.127251625061035
    8. 'solution' → logprob: -14.127251625061035
    9. '               ' → logprob: -15.002251625061035
    10. ' ninja' → logprob: -15.127251625061035

Token 1416: ' path' (ID: 3104)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' (adapté à ' path') → logprob: -0.029777804389595985
    2. 'finder' → logprob: -4.029778003692627
    3. '           ' → logprob: -4.779778003692627
    4. 'n' → logprob: -6.404778003692627
    5. 'pf' → logprob: -7.154778003692627
    6. 'solver' → logprob: -7.779778003692627
    7. ' path' → logprob: -8.404777526855469
    8. ' ninja' → logprob: -10.154777526855469
    9. 'solution' → logprob: -11.154777526855469
    10. 'nf' → logprob: -11.279777526855469

Token 1417: 'finder' (ID: 54491)
  Prédit: 'finder'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'finder' → logprob: -0.0003418991982471198
    2. '_f' → logprob: -8.50034236907959
    3. '           ' → logprob: -9.12534236907959
    4. 'find' → logprob: -11.25034236907959
    5. 'finding' → logprob: -11.87534236907959
    6. '       ' → logprob: -13.00034236907959
    7. ' =' → logprob: -13.12534236907959
    8. 'f' → logprob: -13.75034236907959
    9. 'Finder' → logprob: -14.00034236907959
    10. 'found' → logprob: -14.00034236907959

Token 1418: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4742010533809662
    2. '=' → logprob: -0.9742010831832886
    3. '=N' → logprob: -9.099201202392578
    4. 'N' → logprob: -12.099201202392578
    5. '   ' → logprob: -12.349201202392578
    6. '=n' → logprob: -14.224201202392578
    7. ' ' → logprob: -14.974201202392578
    8. '       ' → logprob: -15.724201202392578
    9. '           ' → logprob: -15.724201202392578
    10. ':' → logprob: -15.849201202392578

Token 1419: ' Ninja' (ID: 77983)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: 0.0
    2. '   ' → logprob: -20.125
    3. ' Ninja' → logprob: -20.5
    4. '
' → logprob: -22.75
    5. '       ' → logprob: -23.125
    6. '	N' → logprob: -23.25
    7. '```' → logprob: -23.375
    8. '           ' → logprob: -24.875
    9. '<N' → logprob: -25.375
    10. ' N' → logprob: -25.375

Token 1420: 'Path' (ID: 2619)
  Prédit: 'Path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Path' → logprob: -4.320199877838604e-07
    2. 'Solution' → logprob: -15.375
    3. 'path' → logprob: -17.0
    4. 'N' → logprob: -17.375
    5. '_path' → logprob: -17.5
    6. '   ' → logprob: -17.75
    7. 'Pat' → logprob: -18.75
    8. '```' → logprob: -18.75
    9. '
' → logprob: -18.875
    10. '	Path' → logprob: -19.75

Token 1421: 'finder' (ID: 54491)
  Prédit: 'finder'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'finder' → logprob: -9.627176768844947e-05
    2. 'Path' → logprob: -10.250096321105957
    3. 'path' → logprob: -10.375096321105957
    4. 'Finder' → logprob: -10.500096321105957
    5. 'find' → logprob: -13.250096321105957
    6. 'found' → logprob: -15.500096321105957
    7. ' Pathfinder' → logprob: -16.00009536743164
    8. '_path' → logprob: -17.37509536743164
    9. 'f' → logprob: -18.00009536743164
    10. '   ' → logprob: -18.50009536743164

Token 1422: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -1.4617256056226324e-05
    2. '.cast' → logprob: -11.250014305114746
    3. '           ' → logprob: -14.750014305114746
    4. 'castle' → logprob: -15.250014305114746
    5. '(C' → logprob: -15.750014305114746
    6. '       ' → logprob: -16.000015258789062
    7. '(
' → logprob: -16.250015258789062
    8. '(' → logprob: -16.375015258789062
    9. 'cast' → logprob: -16.375015258789062
    10. '_cast' → logprob: -16.750015258789062

Token 1423: 'ast' (ID: 629)
  Prédit: 'ast'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ast' → logprob: -0.07013560831546783
    2. 'castle' → logprob: -2.6951355934143066
    3. 'aste' → logprob: -8.945136070251465
    4. 'cast' → logprob: -10.820136070251465
    5. 'asta' → logprob: -11.820136070251465
    6. 'st' → logprob: -12.320136070251465
    7. 'astar' → logprob: -12.570136070251465
    8. 't' → logprob: -12.695136070251465
    9. 'astal' → logprob: -12.820136070251465
    10. 'lass' → logprob: -12.820136070251465

Token 1424: 'le' (ID: 282)
  Prédit: 'le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -7.941850526549388e-06
    2. 'ler' → logprob: -12.500007629394531
    3. 'lef' → logprob: -13.500007629394531
    4. 'castle' → logprob: -14.500007629394531
    5. 'lem' → logprob: -15.000007629394531
    6. 'finder' → logprob: -15.125007629394531
    7. 'let' → logprob: -15.250007629394531
    8. '
' → logprob: -15.500007629394531
    9. 'l' → logprob: -15.625007629394531
    10. 'lear' → logprob: -15.875007629394531

Token 1425: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -0.0007069521816447377
    2. 'Map' → logprob: -7.375707149505615
    3. '_path' → logprob: -9.625706672668457
    4. 'map' → logprob: -12.000706672668457
    5. 'path' → logprob: -12.875706672668457
    6. '   ' → logprob: -13.875706672668457
    7. '
' → logprob: -14.000706672668457
    8. 'finder' → logprob: -14.000706672668457
    9. '       ' → logprob: -14.250706672668457
    10. '_maps' → logprob: -14.625706672668457

Token 1426: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3238031268119812
    2. ')
' → logprob: -1.323803186416626
    3. '           ' → logprob: -4.573802947998047
    4. ').' → logprob: -9.323802947998047
    5. ')
' → logprob: -9.948802947998047
    6. '       ' → logprob: -12.198802947998047
    7. '<|end|>' → logprob: -12.198802947998047
    8. '),' → logprob: -13.323802947998047
    9. '          ' → logprob: -13.448802947998047
    10. ').__' → logprob: -13.448802947998047

Token 1427: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00042388198198750615
    2. 'results' → logprob: -8.000423431396484
    3. '       ' → logprob: -9.625423431396484
    4. '               ' → logprob: -12.125423431396484
    5. ' results' → logprob: -12.250423431396484
    6. 'result' → logprob: -12.625423431396484
    7. '<|end|>' → logprob: -12.750423431396484
    8. '   ' → logprob: -13.125423431396484
    9. '          ' → logprob: -13.500423431396484
    10. '         ' → logprob: -14.500423431396484

Token 1428: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' (adapté à ' results') → logprob: -0.007440392859280109
    2. 'result' → logprob: -5.007440567016602
    3. '           ' → logprob: -7.382440567016602
    4. 'res' → logprob: -10.007440567016602
    5. 'min' → logprob: -10.132440567016602
    6. ' results' → logprob: -11.507440567016602
    7. 'minimum' → logprob: -12.132440567016602
    8. 'minimal' → logprob: -14.132440567016602
    9. 'cl' → logprob: -14.382440567016602
    10. 'answer' → logprob: -14.632440567016602

Token 1429: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -5.438573680294212e-06
    2. '.' → logprob: -12.750005722045898
    3. '.extend' → logprob: -13.125005722045898
    4. '.app' → logprob: -16.0000057220459
    5. 'append' → logprob: -16.0000057220459
    6. '.push' → logprob: -16.3750057220459
    7. '.Append' → logprob: -17.5000057220459
    8. '.ap' → logprob: -17.8750057220459
    9. '.setdefault' → logprob: -17.8750057220459
    10. '_append' → logprob: -18.0000057220459

Token 1430: '(path' (ID: 10993)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.011379891075193882
    2. ' path' → logprob: -4.511379718780518
    3. '(path' → logprob: -8.011380195617676
    4. '           ' → logprob: -15.011380195617676
    5. '_path' → logprob: -18.76137924194336
    6. '	path' → logprob: -19.51137924194336
    7. '"path' → logprob: -19.51137924194336
    8. '.path' → logprob: -19.76137924194336
    9. '(' → logprob: -20.13637924194336
    10. ',path' → logprob: -20.26137924194336

Token 1431: 'finder' (ID: 54491)
  Prédit: 'finder'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'finder' → logprob: -0.0003647826088126749
    2. '.append' → logprob: -8.750365257263184
    3. 'find' → logprob: -9.000365257263184
    4. 'inder' → logprob: -10.500365257263184
    5. '.find' → logprob: -10.625365257263184
    6. 'path' → logprob: -11.625365257263184
    7. 'er' → logprob: -11.750365257263184
    8. 'Finder' → logprob: -12.125365257263184
    9. '   ' → logprob: -13.375365257263184
    10. 'f' → logprob: -13.625365257263184

Token 1432: '.minimum' (ID: 126839)
  Prédit: '.minimum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.minimum' → logprob: -7.584239938296378e-06
    2. ').' → logprob: -12.000007629394531
    3. '.maximum' → logprob: -14.125007629394531
    4. '.' → logprob: -14.625007629394531
    5. 'minimum' → logprob: -15.875007629394531
    6. ' .' → logprob: -17.37500762939453
    7. '.Minimum' → logprob: -18.37500762939453
    8. ')' → logprob: -18.87500762939453
    9. '
' → logprob: -19.37500762939453
    10. '}.' → logprob: -19.37500762939453

Token 1433: '_cl' (ID: 11209)
  Prédit: '_cl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cl' → logprob: -3.128163257315464e-07
    2. '```' → logprob: -15.5
    3. ')_' → logprob: -16.875
    4. ')' → logprob: -18.375
    5. '
' → logprob: -18.875
    6. 's' → logprob: -19.125
    7. '_c' → logprob: -19.25
    8. 'cl' → logprob: -19.625
    9. 'Cl' → logprob: -20.125
    10. '`' → logprob: -20.125

Token 1434: 'im' (ID: 321)
  Prédit: 'im'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'im' → logprob: -0.00012678056373260915
    2. 'imb' → logprob: -9.250126838684082
    3. 'ims' → logprob: -10.875126838684082
    4. '_im' → logprob: -13.250126838684082
    5. 'mb' → logprob: -13.375126838684082
    6. '
' → logprob: -13.875126838684082
    7. '   ' → logprob: -14.125126838684082
    8. 'bs' → logprob: -14.250126838684082
    9. 'ibs' → logprob: -14.250126838684082
    10. 'imbing' → logprob: -14.500126838684082

Token 1435: 'bs' (ID: 6229)
  Prédit: 'bs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bs' → logprob: -0.03395214304327965
    2. 'b' → logprob: -3.408952236175537
    3. 's' → logprob: -8.408951759338379
    4. '```' → logprob: -11.158951759338379
    5. '   ' → logprob: -11.783951759338379
    6. ')
' → logprob: -12.033951759338379
    7. 'ps' → logprob: -12.033951759338379
    8. ')' → logprob: -12.033951759338379
    9. '[
' → logprob: -12.658951759338379
    10. '{
' → logprob: -12.658951759338379

Token 1436: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0024197720922529697
    2. '())
' → logprob: -6.502419948577881
    3. '()' → logprob: -7.002419948577881
    4. '())

' → logprob: -13.127419471740723
    5. ' ())' → logprob: -13.252419471740723
    6. ')' → logprob: -13.502419471740723
    7. '()
' → logprob: -13.752419471740723
    8. '())
' → logprob: -14.377419471740723
    9. '()))' → logprob: -15.002419471740723
    10. '(' → logprob: -16.37742042541504

Token 1437: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04523751884698868
    2. 'return' → logprob: -3.6702375411987305
    3. '
' → logprob: -4.4202375411987305
    4. '   ' → logprob: -5.4202375411987305
    5. '        
' → logprob: -7.4202375411987305
    6. ' return' → logprob: -7.5452375411987305
    7. '    
' → logprob: -8.54523754119873
    8. '	' → logprob: -8.67023754119873
    9. '	return' → logprob: -9.04523754119873
    10. '[' → logprob: -9.17023754119873

Token 1438: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.38886338472366333
    2. '       ' → logprob: -1.1388633251190186
    3. '   ' → logprob: -6.763863563537598
    4. ' return' → logprob: -7.138863563537598
    5. '
' → logprob: -10.638863563537598
    6. '	return' → logprob: -11.138863563537598
    7. '```' → logprob: -14.138863563537598
    8. ' ' → logprob: -14.513863563537598
    9. ':return' → logprob: -14.888863563537598
    10. '	' → logprob: -15.013863563537598

Token 1439: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.0005530327325686812
    2. ' results' → logprob: -7.500553131103516
    3. '(results' → logprob: -19.500553131103516
    4. '	results' → logprob: -20.625553131103516
    5. '[' → logprob: -22.500553131103516
    6. 'result' → logprob: -23.375553131103516
    7. '.results' → logprob: -23.875553131103516
    8. 'Results' → logprob: -25.500553131103516
    9. 'values' → logprob: -26.375553131103516
    10. '_results' → logprob: -26.375553131103516

Token 1440: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1441: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.02100846916437149
    2. '```' → logprob: -4.396008491516113
    3. '#' → logprob: -5.271008491516113
    4. 'if' → logprob: -6.146008491516113
    5. '<|end|>' → logprob: -7.021008491516113
    6. 'import' → logprob: -8.271008491516113
    7. 'from' → logprob: -10.896008491516113
    8. '#!/' → logprob: -12.521008491516113
    9. '<|end|>' → logprob: -12.771008491516113
    10. ' if' → logprob: -13.021008491516113

Token 1442: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.16024810075759888
    2. 'main' → logprob: -1.910248041152954
    3. ' solve' → logprob: -11.285247802734375
    4. ' run' → logprob: -11.785247802734375
    5. 'solve' → logprob: -13.410247802734375
    6. 'run' → logprob: -13.535247802734375
    7. ' read' → logprob: -14.535247802734375
    8. 'read' → logprob: -15.160247802734375
    9. 'process' → logprob: -16.535247802734375
    10. ' process' → logprob: -16.535247802734375

Token 1443: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0005594660760834813
    2. '():
' → logprob: -7.500559329986572
    3. '()' → logprob: -12.12555980682373
    4. ' ():' → logprob: -14.00055980682373
    5. '():
' → logprob: -15.62555980682373
    6. '():

' → logprob: -18.125558853149414
    7. '(argv' → logprob: -18.500558853149414
    8. '()>' → logprob: -18.875558853149414
    9. ':' → logprob: -19.500558853149414
    10. '();' → logprob: -20.125558853149414

Token 1444: '   ' (ID: 271)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.09042169898748398
    2. '   ' → logprob: -3.090421676635742
    3. ' import' → logprob: -3.215421676635742
    4. '	import' → logprob: -7.340421676635742
    5. '```' → logprob: -9.215421676635742
    6. ' lines' → logprob: -9.590421676635742
    7. 'lines' → logprob: -12.340421676635742
    8. '	lines' → logprob: -12.965421676635742
    9. '(lines' → logprob: -13.090421676635742
    10. 'from' → logprob: -13.090421676635742

Token 1445: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' (adapté à ' import') → logprob: -0.10020710527896881
    2. ' import' → logprob: -2.3502070903778076
    3. '   ' → logprob: -14.975207328796387
    4. ' lines' → logprob: -17.10020637512207
    5. '	import' → logprob: -17.35020637512207
    6. 'from' → logprob: -18.97520637512207
    7. 'lines' → logprob: -19.10020637512207
    8. '```' → logprob: -21.22520637512207
    9. ' from' → logprob: -21.85020637512207
    10. 'im' → logprob: -23.35020637512207

Token 1446: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -4.5491004129871726e-05
    2. ' sys' → logprob: -10.000045776367188
    3. '	sys' → logprob: -21.500045776367188
    4. '=sys' → logprob: -21.500045776367188
    5. '(sys' → logprob: -23.125045776367188
    6. 'io' → logprob: -24.625045776367188
    7. '.sys' → logprob: -24.875045776367188
    8. 'stdin' → logprob: -25.625045776367188
    9. '_sys' → logprob: -25.750045776367188
    10. 'os' → logprob: -26.250045776367188

Token 1447: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03222048655152321
    2. '	lines' → logprob: -4.157220363616943
    3. ' lines' → logprob: -4.282220363616943
    4. 'lines' → logprob: -6.907220363616943
    5. '(lines' → logprob: -8.032220840454102
    6. '    
' → logprob: -8.157220840454102
    7. '_lines' → logprob: -8.157220840454102
    8. '
' → logprob: -9.032220840454102
    9. 'for' → logprob: -9.532220840454102
    10. ' for' → logprob: -9.782220840454102

Token 1448: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0021866646129637957
    2. ' lines' → logprob: -6.7521867752075195
    3. 'lines' → logprob: -7.0021867752075195
    4. '	lines' → logprob: -9.50218677520752
    5. '_lines' → logprob: -11.37718677520752
    6. 'input' → logprob: -11.75218677520752
    7. '```' → logprob: -12.00218677520752
    8. '(lines' → logprob: -12.75218677520752
    9. 'def' → logprob: -13.62718677520752
    10. ' input' → logprob: -14.37718677520752

Token 1449: ' parser' (ID: 14216)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.012280645780265331
    2. ' lines' → logprob: -4.512280464172363
    3. '   ' → logprob: -6.762280464172363
    4. 'input' → logprob: -9.762280464172363
    5. '	lines' → logprob: -11.387280464172363
    6. 'for' → logprob: -12.762280464172363
    7. 'line' → logprob: -13.387280464172363
    8. ' input' → logprob: -14.137280464172363
    9. '(lines' → logprob: -14.887280464172363
    10. '_lines' → logprob: -15.012280464172363

Token 1450: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0438043586909771
    2. '=' → logprob: -3.168804407119751
    3. '   ' → logprob: -7.668804168701172
    4. '_lines' → logprob: -8.793804168701172
    5. '=line' → logprob: -10.293804168701172
    6. '(lines' → logprob: -10.418804168701172
    7. '()' → logprob: -11.293804168701172
    8. '.readline' → logprob: -11.418804168701172
    9. '.' → logprob: -11.543804168701172
    10. '<|end|>' → logprob: -11.793804168701172

Token 1451: ' Input' (ID: 10090)
  Prédit: 'Input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Input' → logprob: -4.320199877838604e-07
    2. ' Input' → logprob: -15.5
    3. 'input' → logprob: -16.5
    4. '_input' → logprob: -17.125
    5. '<Input' → logprob: -18.875
    6. '\Input' → logprob: -19.0
    7. '	Input' → logprob: -19.125
    8. '_Input' → logprob: -19.375
    9. '.Input' → logprob: -22.375
    10. 'INPUT' → logprob: -22.5

Token 1452: 'Parser' (ID: 9231)
  Prédit: 'Parser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Parser' → logprob: -9.253090865968261e-06
    2. 'parser' → logprob: -11.625009536743164
    3. '_parser' → logprob: -15.125009536743164
    4. '.Parser' → logprob: -17.875009536743164
    5. '-parser' → logprob: -19.000009536743164
    6. '=' → logprob: -19.250009536743164
    7. '(Parser' → logprob: -19.375009536743164
    8. 'import' → logprob: -19.500009536743164
    9. 'Lexer' → logprob: -20.125009536743164
    10. ' Parser' → logprob: -20.250009536743164

Token 1453: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023429367691278458
    2. '
' → logprob: -4.0234293937683105
    3. 'lines' → logprob: -5.6484293937683105
    4. '    
' → logprob: -7.8984293937683105
    5. ' lines' → logprob: -7.8984293937683105
    6. 'for' → logprob: -8.148428916931152
    7. '(lines' → logprob: -8.148428916931152
    8. '	lines' → logprob: -8.523428916931152
    9. 'input' → logprob: -8.898428916931152
    10. 'line' → logprob: -11.023428916931152

Token 1454: '   ' (ID: 271)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.5858544707298279
    2. '   ' → logprob: -0.8358544707298279
    3. ' lines' → logprob: -5.210854530334473
    4. 'parser' → logprob: -6.085854530334473
    5. 'for' → logprob: -6.335854530334473
    6. 'input' → logprob: -9.210854530334473
    7. '	lines' → logprob: -9.210854530334473
    8. 'line' → logprob: -9.960854530334473
    9. ' parser' → logprob: -10.585854530334473
    10. ' for' → logprob: -10.835854530334473

Token 1455: ' parser' (ID: 14216)
  Prédit: 'parser'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parser' (adapté à ' parser') → logprob: -0.12712107598781586
    2. 'lines' → logprob: -2.1271209716796875
    3. 'for' → logprob: -9.252120971679688
    4. '   ' → logprob: -10.002120971679688
    5. ' parser' → logprob: -10.627120971679688
    6. ' lines' → logprob: -12.002120971679688
    7. 'input' → logprob: -12.127120971679688
    8. 'data' → logprob: -12.252120971679688
    9. 'import' → logprob: -12.627120971679688
    10. 'line' → logprob: -13.127120971679688

Token 1456: '.parse' (ID: 7259)
  Prédit: '.parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parse' → logprob: -0.00041851779678836465
    2. 'parse' → logprob: -7.875418663024902
    3. '.parser' → logprob: -11.250418663024902
    4. 'parser' → logprob: -11.750418663024902
    5. '.' → logprob: -12.125418663024902
    6. '=parse' → logprob: -12.250418663024902
    7. '().' → logprob: -13.500418663024902
    8. ' .' → logprob: -14.000418663024902
    9. '   ' → logprob: -14.125418663024902
    10. ' =' → logprob: -14.500418663024902

Token 1457: '(iter' (ID: 61014)
  Prédit: '(sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.47773438692092896
    2. '(iter' → logprob: -0.977734386920929
    3. 'iter' → logprob: -5.727734565734863
    4. 'sys' → logprob: -7.852734565734863
    5. ' iter' → logprob: -11.977734565734863
    6. '=sys' → logprob: -14.977734565734863
    7. '_iter' → logprob: -15.352734565734863
    8. ' sys' → logprob: -15.352734565734863
    9. '	sys' → logprob: -16.102733612060547
    10. '((' → logprob: -16.352733612060547

Token 1458: '(sys' (ID: 41042)
  Prédit: '(sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.00025156480842269957
    2. 'sys' → logprob: -8.375251770019531
    3. 'import' → logprob: -11.875251770019531
    4. '(input' → logprob: -12.125251770019531
    5. '=sys' → logprob: -12.250251770019531
    6. '	sys' → logprob: -14.000251770019531
    7. ')' → logprob: -14.250251770019531
    8. ' sys' → logprob: -14.375251770019531
    9. '(import' → logprob: -15.000251770019531
    10. '(' → logprob: -15.125251770019531

Token 1459: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -2.546478935983032e-05
    2. '.argv' → logprob: -10.625025749206543
    3. 'stdin' → logprob: -14.000025749206543
    4. '.stdout' → logprob: -15.875025749206543
    5. '.std' → logprob: -16.500024795532227
    6. '(stdin' → logprob: -17.375024795532227
    7. '.__' → logprob: -18.000024795532227
    8. '.' → logprob: -18.000024795532227
    9. '```' → logprob: -18.875024795532227
    10. ' .' → logprob: -19.250024795532227

Token 1460: '))
' (ID: 2210)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.32078203558921814
    2. '))' → logprob: -1.8207820653915405
    3. '))
' → logprob: -2.320781946182251
    4. '()))
' → logprob: -4.94578218460083
    5. '.readlines' → logprob: -5.57078218460083
    6. '()))' → logprob: -5.69578218460083
    7. '().' → logprob: -11.320781707763672
    8. '   ' → logprob: -12.320781707763672
    9. '.read' → logprob: -12.320781707763672
    10. '
' → logprob: -13.070781707763672

Token 1461: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001989778596907854
    2. 'results' → logprob: -6.251989841461182
    3. 'for' → logprob: -10.751989364624023
    4. '    
' → logprob: -11.376989364624023
    5. 'outputs' → logprob: -11.876989364624023
    6. '```' → logprob: -11.876989364624023
    7. '
' → logprob: -12.251989364624023
    8. 'result' → logprob: -13.001989364624023
    9. 'def' → logprob: -13.376989364624023
    10. 'solutions' → logprob: -14.001989364624023

Token 1462: ' runner' (ID: 39201)
  Prédit: 'runner'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'runner' (adapté à ' runner') → logprob: -0.00016182278341148049
    2. '   ' → logprob: -9.250162124633789
    3. 'results' → logprob: -10.500162124633789
    4. ' runner' → logprob: -10.750162124633789
    5. 'solution' → logprob: -11.500162124633789
    6. 'solver' → logprob: -12.000162124633789
    7. 'result' → logprob: -15.750162124633789
    8. 'for' → logprob: -16.50016212463379
    9. 'run' → logprob: -16.87516212463379
    10. 'r' → logprob: -17.00016212463379

Token 1463: ' =' (ID: 314)
  Prédit: '.run'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.run' → logprob: -0.24833844602108002
    2. ' =' → logprob: -1.6233384609222412
    3. '   ' → logprob: -4.748338222503662
    4. '=' → logprob: -4.998338222503662
    5. '.' → logprob: -5.123338222503662
    6. '.results' → logprob: -7.373338222503662
    7. '.runner' → logprob: -8.49833869934082
    8. '.Run' → logprob: -9.24833869934082
    9. '.mainloop' → logprob: -9.87333869934082
    10. '       ' → logprob: -10.49833869934082

Token 1464: ' Ninja' (ID: 77983)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: 0.0
    2. ' Ninja' → logprob: -17.0
    3. '   ' → logprob: -19.75
    4. '```' → logprob: -22.5
    5. '	N' → logprob: -23.875
    6. ' N' → logprob: -24.0
    7. ' ' → logprob: -24.125
    8. '
' → logprob: -24.5
    9. '`' → logprob: -24.75
    10. '<N' → logprob: -25.25

Token 1465: 'Solution' (ID: 44456)
  Prédit: 'Solution'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Solution' → logprob: -5.512236498361744e-07
    2. 'Path' → logprob: -15.000000953674316
    3. 'olution' → logprob: -16.5
    4. '_solution' → logprob: -16.625
    5. 'solution' → logprob: -16.75
    6. ' Solution' → logprob: -19.125
    7. ' solution' → logprob: -20.5
    8. 'Resolution' → logprob: -20.75
    9. '
' → logprob: -21.25
    10. 'Sol' → logprob: -21.375

Token 1466: 'Runner' (ID: 26032)
  Prédit: 'Runner'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Runner' → logprob: -3.173704271830502e-06
    2. '_runner' → logprob: -12.87500286102295
    3. 'runner' → logprob: -15.00000286102295
    4. ' runner' → logprob: -16.250003814697266
    5. 'unner' → logprob: -17.500003814697266
    6. ' Runner' → logprob: -18.000003814697266
    7. 'Runnable' → logprob: -19.125003814697266
    8. 'Run' → logprob: -19.375003814697266
    9. '.runner' → logprob: -20.000003814697266
    10. '@Run' → logprob: -20.500003814697266

Token 1467: '(parser' (ID: 82535)
  Prédit: '(parser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(parser' → logprob: -0.20167313516139984
    2. '(r' → logprob: -1.701673150062561
    3. 'parser' → logprob: -9.32667350769043
    4. '(' → logprob: -9.95167350769043
    5. '(renderer' → logprob: -10.07667350769043
    6. '(reader' → logprob: -10.45167350769043
    7. '(run' → logprob: -10.45167350769043
    8. '(parsed' → logprob: -12.57667350769043
    9. 'r' → logprob: -12.57667350769043
    10. '   ' → logprob: -12.82667350769043

Token 1468: '.datasets' (ID: 136555)
  Prédit: '.datasets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.datasets' → logprob: -8.888114098226652e-05
    2. '.parser' → logprob: -10.250088691711426
    3. 'datasets' → logprob: -11.000088691711426
    4. '.parse' → logprob: -11.375088691711426
    5. '.run' → logprob: -11.750088691711426
    6. '.datas' → logprob: -12.000088691711426
    7. ')' → logprob: -12.375088691711426
    8. '.results' → logprob: -12.375088691711426
    9. '.dataset' → logprob: -14.250088691711426
    10. '.data' → logprob: -15.125088691711426

Token 1469: ')
' (ID: 446)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05747183412313461
    2. ')' → logprob: -3.307471752166748
    3. ')
' → logprob: -4.057471752166748
    4. '(results' → logprob: -6.932471752166748
    5. 'results' → logprob: -7.182471752166748
    6. '
' → logprob: -9.557472229003906
    7. '()
' → logprob: -10.182472229003906
    8. 'for' → logprob: -10.432472229003906
    9. '()' → logprob: -10.807472229003906
    10. '    
' → logprob: -11.182472229003906

Token 1470: '   ' (ID: 271)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.6077893972396851
    2. '   ' → logprob: -0.8577893972396851
    3. 'for' → logprob: -3.4827895164489746
    4. ' results' → logprob: -8.232789039611816
    5. 'outputs' → logprob: -8.607789039611816
    6. 'result' → logprob: -9.482789039611816
    7. ' for' → logprob: -10.232789039611816
    8. 'output' → logprob: -10.607789039611816
    9. '	results' → logprob: -11.357789039611816
    10. '```' → logprob: -11.357789039611816

Token 1471: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' (adapté à ' results') → logprob: -0.001969673437997699
    2. 'for' → logprob: -6.251969814300537
    3. 'outputs' → logprob: -10.751969337463379
    4. 'result' → logprob: -11.751969337463379
    5. '   ' → logprob: -12.501969337463379
    6. ' results' → logprob: -12.626969337463379
    7. 'res' → logprob: -12.876969337463379
    8. 'output' → logprob: -14.001969337463379
    9. 'print' → logprob: -14.126969337463379
    10. 'answers' → logprob: -15.001969337463379

Token 1472: ' =' (ID: 314)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.5332943201065063
    2. '.' → logprob: -1.5332943201065063
    3. '.extend' → logprob: -1.9082943201065063
    4. '   ' → logprob: -3.658294200897217
    5. ' =' → logprob: -4.283294200897217
    6. '.setdefault' → logprob: -5.908294200897217
    7. '<|end|>' → logprob: -7.033294200897217
    8. ' .' → logprob: -7.033294200897217
    9. '=' → logprob: -7.533294200897217
    10. '<|end|>' → logprob: -7.533294200897217

Token 1473: ' runner' (ID: 39201)
  Prédit: 'runner'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'runner' → logprob: -0.001170460251159966
    2. ' runner' → logprob: -6.751170635223389
    3. 'renderer' → logprob: -15.87617015838623
    4. '.runner' → logprob: -16.126171112060547
    5. '_runner' → logprob: -18.376171112060547
    6. 'run' → logprob: -18.751171112060547
    7. '[r' → logprob: -19.501171112060547
    8. '[' → logprob: -20.001171112060547
    9. '   ' → logprob: -20.501171112060547
    10. 'r' → logprob: -20.501171112060547

Token 1474: '.run' (ID: 14795)
  Prédit: '.run'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.run' → logprob: -0.00498066283762455
    2. '.extend' → logprob: -5.629980564117432
    3. 'run' → logprob: -7.129980564117432
    4. '.append' → logprob: -7.754980564117432
    5. '   ' → logprob: -10.00498104095459
    6. ' =' → logprob: -10.25498104095459
    7. '.' → logprob: -10.25498104095459
    8. ' run' → logprob: -11.87998104095459
    9. 'results' → logprob: -12.00498104095459
    10. ' .' → logprob: -12.00498104095459

Token 1475: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004171594977378845
    2. 'for' → logprob: -5.504171371459961
    3. ' for' → logprob: -9.504171371459961
    4. '
' → logprob: -11.004171371459961
    5. '	for' → logprob: -13.754171371459961
    6. '```' → logprob: -14.379171371459961
    7. '    
' → logprob: -15.379171371459961
    8. '<|end|>' → logprob: -16.37917137145996
    9. '       ' → logprob: -17.25417137145996
    10. '   ' → logprob: -18.37917137145996

Token 1476: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00862143188714981
    2. 'for' → logprob: -4.7586212158203125
    3. ' for' → logprob: -12.133621215820312
    4. '
' → logprob: -14.133621215820312
    5. '	for' → logprob: -14.508621215820312
    6. '```' → logprob: -14.883621215820312
    7. '       ' → logprob: -17.383621215820312
    8. '    
' → logprob: -17.633621215820312
    9. 'import' → logprob: -18.383621215820312
    10. '   ' → logprob: -18.508621215820312

Token 1477: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00033558503491804004
    2. '   ' → logprob: -8.000335693359375
    3. ' for' → logprob: -15.750335693359375
    4. '	for' → logprob: -19.750335693359375
    5. 'import' → logprob: -20.250335693359375
    6. '
' → logprob: -20.625335693359375
    7. '```' → logprob: -20.625335693359375
    8. 'from' → logprob: -21.625335693359375
    9. 'print' → logprob: -21.875335693359375
    10. '    
' → logprob: -21.875335693359375

Token 1478: ' r' (ID: 428)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.02228645607829094
    2. 'result' → logprob: -4.022286415100098
    3. ' res' → logprob: -5.522286415100098
    4. 'r' → logprob: -9.022286415100098
    5. ' result' → logprob: -11.522286415100098
    6. ' r' → logprob: -14.647286415100098
    7. '   ' → logprob: -16.147287368774414
    8. 'score' → logprob: -18.897287368774414
    9. 'ans' → logprob: -19.272287368774414
    10. 'answer' → logprob: -19.522287368774414

Token 1479: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006302380934357643
    2. 'es' → logprob: -5.256302356719971
    3. 'in' → logprob: -6.881302356719971
    4. ' ' → logprob: -11.131302833557129
    5. 's' → logprob: -11.256302833557129
    6. 'e' → logprob: -11.756302833557129
    7. '   ' → logprob: -13.881302833557129
    8. '  ' → logprob: -14.131302833557129
    9. 'ange' → logprob: -14.381302833557129
    10. 'n' → logprob: -14.631302833557129

Token 1480: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' → logprob: -7.493430894101039e-05
    2. ' results' → logprob: -9.500075340270996
    3. '(results' → logprob: -17.12507438659668
    4. 'result' → logprob: -17.37507438659668
    5. '	results' → logprob: -19.37507438659668
    6. 'print' → logprob: -19.75007438659668
    7. '   ' → logprob: -20.37507438659668
    8. '
' → logprob: -20.75007438659668
    9. 'r' → logprob: -20.87507438659668
    10. 'range' → logprob: -21.12507438659668

Token 1481: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6439871788024902
    2. ':' → logprob: -1.2689871788024902
    3. 'print' → logprob: -2.5189871788024902
    4. '       ' → logprob: -2.8939871788024902
    5. '   ' → logprob: -3.2689871788024902
    6. ' print' → logprob: -4.64398717880249
    7. '.print' → logprob: -5.01898717880249
    8. '.println' → logprob: -7.14398717880249
    9. '(print' → logprob: -7.76898717880249
    10. ',' → logprob: -7.89398717880249

Token 1482: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011810619616881013
    2. 'print' → logprob: -6.751181125640869
    3. '   ' → logprob: -12.251180648803711
    4. ' print' → logprob: -12.376180648803711
    5. '
' → logprob: -13.376180648803711
    6. '```' → logprob: -15.376180648803711
    7. '           ' → logprob: -16.87618064880371
    8. '	print' → logprob: -17.62618064880371
    9. '      ' → logprob: -18.50118064880371
    10. '        
' → logprob: -18.50118064880371

Token 1483: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -4.127333340875339e-06
    2. '   ' → logprob: -12.500003814697266
    3. ' print' → logprob: -15.000003814697266
    4. '```' → logprob: -18.500003814697266
    5. 'println' → logprob: -19.500003814697266
    6. '
' → logprob: -21.750003814697266
    7. '	print' → logprob: -21.875003814697266
    8. '       ' → logprob: -22.125003814697266
    9. 'printf' → logprob: -22.375003814697266
    10. '``' → logprob: -23.500003814697266

Token 1484: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -1.3425219549390022e-05
    2. 'r' → logprob: -11.25001335144043
    3. '(' → logprob: -15.00001335144043
    4. ' r' → logprob: -18.37501335144043
    5. '(
' → logprob: -19.25001335144043
    6. '()' → logprob: -20.00001335144043
    7. '(f' → logprob: -20.25001335144043
    8. '	r' → logprob: -21.37501335144043
    9. '(res' → logprob: -21.50001335144043
    10. '(re' → logprob: -21.62501335144043

Token 1485: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -6.704273118884885e-07
    2. ')
' → logprob: -15.250000953674316
    3. ' )' → logprob: -15.875000953674316
    4. '   ' → logprob: -16.25
    5. '())' → logprob: -16.75
    6. '()' → logprob: -16.75
    7. '")' → logprob: -17.5
    8. ')`' → logprob: -17.5
    9. '')' → logprob: -17.875
    10. '))' → logprob: -18.5

Token 1486: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -3.8219583075260743e-05
    2. ' if' → logprob: -10.875038146972656
    3. '#' → logprob: -11.125038146972656
    4. '```' → logprob: -13.000038146972656
    5. 'main' → logprob: -13.500038146972656
    6. '<|end|>' → logprob: -14.625038146972656
    7. '#if' → logprob: -16.000038146972656
    8. '__' → logprob: -16.000038146972656
    9. '@if' → logprob: -17.125038146972656
    10. '
' → logprob: -17.250038146972656

Token 1487: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.011059612035751343
    2. ' __' → logprob: -4.511059761047363
    3. 'name' → logprob: -11.511059761047363
    4. '___' → logprob: -14.386059761047363
    5. '_name' → logprob: -15.011059761047363
    6. 'True' → logprob: -15.261059761047363
    7. '____' → logprob: -15.636059761047363
    8. ''' → logprob: -16.261058807373047
    9. 'Name' → logprob: -16.386058807373047
    10. '/__' → logprob: -16.761058807373047

Token 1488: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.008086598478257656
    2. '==' → logprob: -5.633086681365967
    3. ' ==' → logprob: -5.633086681365967
    4. '=="' → logprob: -8.008086204528809
    5. ' __' → logprob: -8.133086204528809
    6. 'name' → logprob: -9.883086204528809
    7. 'if' → logprob: -10.008086204528809
    8. '.__' → logprob: -10.133086204528809
    9. '=='' → logprob: -10.508086204528809
    10. '[' → logprob: -10.633086204528809

Token 1489: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0005454073543660343
    2. '__.__' → logprob: -7.625545501708984
    3. '==' → logprob: -10.500545501708984
    4. '__["' → logprob: -11.250545501708984
    5. '=="' → logprob: -12.125545501708984
    6. '__.' → logprob: -12.750545501708984
    7. '__[' → logprob: -12.875545501708984
    8. '__":
' → logprob: -13.250545501708984
    9. '__('' → logprob: -14.125545501708984
    10. ' ==' → logprob: -14.375545501708984

Token 1490: '=="' (ID: 24027)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.12082552909851074
    2. '__' → logprob: -2.4958255290985107
    3. ' ==' → logprob: -3.8708255290985107
    4. '=="' → logprob: -4.87082576751709
    5. '=='' → logprob: -5.87082576751709
    6. '==
' → logprob: -10.62082576751709
    7. '===' → logprob: -11.87082576751709
    8. '__.__' → logprob: -12.49582576751709
    9. '```' → logprob: -12.74582576751709
    10. '[' → logprob: -12.87082576751709

Token 1491: '__' (ID: 771)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.31378987431526184
    2. '__' → logprob: -1.5637898445129395
    3. ''' → logprob: -2.8137898445129395
    4. 'main' → logprob: -11.688790321350098
    5. ' "__' → logprob: -14.813790321350098
    6. '_main' → logprob: -16.68878936767578
    7. '___' → logprob: -16.81378936767578
    8. ' __' → logprob: -17.06378936767578
    9. 'Main' → logprob: -17.06378936767578
    10. '/__' → logprob: -18.06378936767578

Token 1492: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -1.3856492842023727e-06
    2. 'name' → logprob: -13.750000953674316
    3. ' main' → logprob: -16.500001907348633
    4. '__' → logprob: -16.500001907348633
    5. '_main' → logprob: -17.000001907348633
    6. '-main' → logprob: -21.125001907348633
    7. '(main' → logprob: -21.250001907348633
    8. '.main' → logprob: -21.500001907348633
    9. '	main' → logprob: -21.625001907348633
    10. 'built' → logprob: -21.625001907348633

Token 1493: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.4787598252296448
    2. '__' → logprob: -0.9787598252296448
    3. '__':
' → logprob: -5.478759765625
    4. '__
' → logprob: -9.103759765625
    5. '__["' → logprob: -9.728759765625
    6. '__.' → logprob: -9.853759765625
    7. '__.__' → logprob: -9.978759765625
    8. '.__' → logprob: -9.978759765625
    9. '"' → logprob: -10.228759765625
    10. ':
' → logprob: -10.478759765625

Token 1494: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.000623918604105711
    2. '	main' → logprob: -8.00062370300293
    3. '   ' → logprob: -8.25062370300293
    4. ' main' → logprob: -10.62562370300293
    5. '_main' → logprob: -13.12562370300293
    6. '(main' → logprob: -14.25062370300293
    7. '__' → logprob: -15.50062370300293
    8. '    
' → logprob: -16.00062370300293
    9. '.main' → logprob: -17.25062370300293
    10. '
' → logprob: -17.50062370300293

Token 1495: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: 0.0
    2. ' main' → logprob: -18.25
    3. 'import' → logprob: -18.5
    4. '	main' → logprob: -21.5
    5. '   ' → logprob: -22.625
    6. '_main' → logprob: -25.25
    7. '(main' → logprob: -25.375
    8. '.main' → logprob: -25.875
    9. '
' → logprob: -29.75
    10. '```' → logprob: -30.0

Token 1496: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1494
Tokens correctement prédits (1ère position, stricte): 650
Tokens correctement prédits (1ère position, avec adaptation): 724
Tokens correctement prédits (top 10): 1277
Précision stricte (1ère position): 43.51%
Précision adaptée (1ère position): 48.46%
Précision (top 10): 85.48%
================================================================================
