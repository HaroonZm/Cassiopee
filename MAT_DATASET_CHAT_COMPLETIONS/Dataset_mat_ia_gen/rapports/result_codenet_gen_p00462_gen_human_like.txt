================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 16:59:25
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import bisect

input = sys.stdin.readline

while True:
    d = int(input())
    if d == 0:
        break
    n = int(input())
    m = int(input())
    shops = [0]
    for _ in range(n - 1):
        pos = int(input())
        shops.append(pos)
    shops.sort()
    res = 0
    for _ in range(m):
        k = int(input())
        i = bisect.bisect_left(shops, k)
        candidates = []
        if i < n:
            dist = abs(shops[i] - k)
            dist = min(dist, d - dist)
            candidates.append(dist)
        if i > 0:
            dist = abs(shops[i - 1] - k)
            dist = min(dist, d - dist)
            candidates.append(dist)
        res += min(candidates)
    print(res)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6975938677787781
    2. '\n' → logprob: -0.8225938677787781
    3. '<|end|>' → logprob: -3.572593927383423
    4. '\' → logprob: -4.322593688964844
    5. 'newline' → logprob: -5.072593688964844
    6. 'import' → logprob: -5.322593688964844
    7. '<|end|>' → logprob: -5.947593688964844
    8. '```' → logprob: -6.572593688964844
    9. '' → logprob: -6.697593688964844
    10. '
' → logprob: -6.947593688964844

Token 4: ' bis' (ID: 7204)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -7.755678961984813e-05
    2. 'os' → logprob: -9.500077247619629
    3. ' math' → logprob: -13.625077247619629
    4. ' re' → logprob: -14.500077247619629
    5. ' json' → logprob: -15.125077247619629
    6. '"os' → logprob: -15.375077247619629
    7. '_os' → logprob: -16.125078201293945
    8. ' io' → logprob: -16.375078201293945
    9. ' ' → logprob: -16.375078201293945
    10. '	os' → logprob: -17.000078201293945

Token 5: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -7.195421494543552e-05
    2. 't' → logprob: -9.62507152557373
    3. 'ected' → logprob: -12.50007152557373
    4. 'ec' → logprob: -14.12507152557373
    5. 'ection' → logprob: -14.50007152557373
    6. 'e' → logprob: -14.75007152557373
    7. 'ectl' → logprob: -15.87507152557373
    8. 'ector' → logprob: -16.250072479248047
    9. 'ecta' → logprob: -17.250072479248047
    10. 'truct' → logprob: -17.375072479248047

Token 6: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.016111204400658607
    2. '<|end|>' → logprob: -5.516111373901367
    3. '\' → logprob: -6.016111373901367
    4. '\n' → logprob: -6.141111373901367
    5. '' → logprob: -6.391111373901367
    6. '
' → logprob: -6.641111373901367
    7. '

' → logprob: -6.766111373901367
    8. 'import' → logprob: -7.391111373901367
    9. '```' → logprob: -7.766111373901367
    10. ',' → logprob: -8.016111373901367

Token 7: 'input' (ID: 2586)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.37797290086746216
    2. '.' → logprob: -2.2529728412628174
    3. '

' → logprob: -2.8779728412628174
    4. 'import' → logprob: -3.3779728412628174
    5. '
' → logprob: -3.5029728412628174
    6. '```' → logprob: -4.1279730796813965
    7. '\n' → logprob: -4.5029730796813965
    8. '\' → logprob: -4.6279730796813965
    9. 'data' → logprob: -4.8779730796813965
    10. 'from' → logprob: -5.1279730796813965

Token 8: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.12152369320392609
    2. '.' → logprob: -2.87152361869812
    3. '=' → logprob: -3.37152361869812
    4. ')' → logprob: -4.621523857116699
    5. '()' → logprob: -5.371523857116699
    6. '_' → logprob: -5.871523857116699
    7. ' =' → logprob: -6.246523857116699
    8. '_data' → logprob: -6.496523857116699
    9. '```' → logprob: -6.996523857116699
    10. '.readline' → logprob: -8.3715238571167

Token 9: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.21735890209674835
    2. ' sys' → logprob: -2.2173588275909424
    3. 'input' → logprob: -2.4673588275909424
    4. ' input' → logprob: -6.4673590660095215
    5. 'lambda' → logprob: -10.092358589172363
    6. '	sys' → logprob: -10.217358589172363
    7. '=sys' → logprob: -11.217358589172363
    8. ' lambda' → logprob: -12.717358589172363
    9. '```' → logprob: -13.217358589172363
    10. 'stdin' → logprob: -13.842358589172363

Token 10: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.024645080789923668
    2. '.' → logprob: -3.7746450901031494
    3. '.stdout' → logprob: -7.14964485168457
    4. ' .' → logprob: -8.39964485168457
    5. '.input' → logprob: -8.64964485168457
    6. '.readline' → logprob: -9.64964485168457
    7. '.argv' → logprob: -9.64964485168457
    8. '.std' → logprob: -10.52464485168457
    9. '.path' → logprob: -10.64964485168457
    10. '.stderr' → logprob: -11.89964485168457

Token 11: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.11015400290489197
    2. '.read' → logprob: -2.610153913497925
    3. '.' → logprob: -3.485153913497925
    4. '.readlines' → logprob: -9.360154151916504
    5. '.Read' → logprob: -10.485154151916504
    6. 'read' → logprob: -11.485154151916504
    7. '.buffer' → logprob: -13.235154151916504
    8. ' readline' → logprob: -14.110154151916504
    9. '.READ' → logprob: -14.110154151916504
    10. '```' → logprob: -14.360154151916504

Token 12: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.28050103783607483
    2. '()' → logprob: -1.6555010080337524
    3. '\n' → logprob: -3.905501127243042
    4. '
' → logprob: -4.405500888824463
    5. '(
' → logprob: -4.530500888824463
    6. '()
' → logprob: -5.780500888824463
    7. 'def' → logprob: -6.280500888824463
    8. '()

' → logprob: -7.155500888824463
    9. '()\' → logprob: -7.405500888824463
    10. '\' → logprob: -7.530500888824463

Token 13: 'while' (ID: 7032)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6941775679588318
    2. 'def' → logprob: -0.6941775679588318
    3. 'N' → logprob: -7.069177627563477
    4. 'class' → logprob: -9.444177627563477
    5. '\' → logprob: -10.569177627563477
    6. 'from' → logprob: -10.819177627563477
    7. 't' → logprob: -11.194177627563477
    8. 'q' → logprob: -11.819177627563477
    9. 'd' → logprob: -11.944177627563477
    10. 'Q' → logprob: -12.694177627563477

Token 14: ' True' (ID: 6432)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6971257925033569
    2. ' True' → logprob: -0.6971257925033569
    3. ' not' → logprob: -5.8221259117126465
    4. ' (' → logprob: -8.572125434875488
    5. ' )' → logprob: -8.697125434875488
    6. '  ' → logprob: -8.822125434875488
    7. 'True' → logprob: -8.822125434875488
    8. ' ' → logprob: -9.947125434875488
    9. ' space' → logprob: -10.072125434875488
    10. '    ' → logprob: -10.072125434875488

Token 15: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004185009747743607
    2. ' :' → logprob: -5.629185199737549
    3. '():' → logprob: -7.504185199737549
    4. ':**' → logprob: -11.25418472290039
    5. ':
' → logprob: -11.75418472290039
    6. '   ' → logprob: -12.75418472290039
    7. ' ():' → logprob: -13.12918472290039
    8. '):' → logprob: -13.37918472290039
    9. '(:' → logprob: -13.75418472290039
    10. ':return' → logprob: -14.25418472290039

Token 16: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011746488511562347
    2. ' ' → logprob: -5.511746406555176
    3. '    
' → logprob: -5.511746406555176
    4. ' line' → logprob: -6.761746406555176
    5. ' 
' → logprob: -7.261746406555176
    6. '    ' → logprob: -7.886746406555176
    7. '  
' → logprob: -8.261746406555176
    8. '  ' → logprob: -8.511746406555176
    9. '   
' → logprob: -9.136746406555176
    10. 'n' → logprob: -9.136746406555176

Token 17: ' d' (ID: 272)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.16979318857192993
    2. 'line' → logprob: -2.169793128967285
    3. 'data' → logprob: -4.669793128967285
    4. ' try' → logprob: -5.294793128967285
    5. 'try' → logprob: -5.294793128967285
    6. 'query' → logprob: -5.294793128967285
    7. 'n' → logprob: -5.544793128967285
    8. ' data' → logprob: -5.669793128967285
    9. ' n' → logprob: -5.794793128967285
    10. '   ' → logprob: -6.169793128967285

Token 18: ' =' (ID: 314)
  Prédit: 'ata'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ata' → logprob: -0.37974733114242554
    2. 'a' → logprob: -1.3797473907470703
    3. '=' → logprob: -3.3797473907470703
    4. ' =' → logprob: -3.6297473907470703
    5. 'e' → logprob: -6.62974739074707
    6. 'at' → logprob: -7.25474739074707
    7. '   ' → logprob: -7.87974739074707
    8. ' ' → logprob: -8.12974739074707
    9. ' a' → logprob: -8.25474739074707
    10. 'o' → logprob: -9.00474739074707

Token 19: ' int' (ID: 677)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.3885025978088379
    2. 'input' → logprob: -1.138502597808838
    3. 'int' → logprob: -6.763502597808838
    4. ' int' → logprob: -7.763502597808838
    5. ' ' → logprob: -10.63850212097168
    6. ' sys' → logprob: -11.63850212097168
    7. '=input' → logprob: -11.63850212097168
    8. 'sys' → logprob: -12.76350212097168
    9. '(input' → logprob: -13.51350212097168
    10. '	input' → logprob: -13.76350212097168

Token 20: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0031872207764536142
    2. '(' → logprob: -5.75318717956543
    3. 'input' → logprob: -12.00318717956543
    4. '(sys' → logprob: -12.75318717956543
    5. ' (' → logprob: -15.25318717956543
    6. '(
' → logprob: -16.12818717956543
    7. '(in' → logprob: -17.00318717956543
    8. '(

' → logprob: -17.37818717956543
    9. '=input' → logprob: -17.50318717956543
    10. ' input' → logprob: -18.12818717956543

Token 21: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.007442043628543615
    2. '()' → logprob: -5.382441997528076
    3. '().' → logprob: -5.882441997528076
    4. ' ())' → logprob: -11.507442474365234
    5. '()))' → logprob: -11.632442474365234
    6. '())
' → logprob: -12.757442474365234
    7. ')' → logprob: -12.882442474365234
    8. '(' → logprob: -13.007442474365234
    9. '();)' → logprob: -13.382442474365234
    10. '()]' → logprob: -14.882442474365234

Token 22: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 23: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.1419334411621094
    2. '<|end|>' → logprob: -1.6419334411621094
    3. '   ' → logprob: -1.7669334411621094
    4. ' ' → logprob: -1.7669334411621094
    5. '    ' → logprob: -2.8919334411621094
    6. '\n' → logprob: -3.3919334411621094
    7. 'if' (adapté à ' if') → logprob: -3.8919334411621094
    8. '  ' → logprob: -4.516933441162109
    9. '<|end|>' → logprob: -5.391933441162109
    10. ')' → logprob: -5.391933441162109

Token 24: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.04892706871032715
    2. ' not' → logprob: -3.048927068710327
    3. 'd' → logprob: -8.048927307128906
    4. 'not' → logprob: -11.173927307128906
    5. ' ' → logprob: -12.048927307128906
    6. ' ' → logprob: -15.798927307128906
    7. '  ' → logprob: -17.173927307128906
    8. '	d' → logprob: -17.298927307128906
    9. '	not' → logprob: -17.423927307128906
    10. '```' → logprob: -17.798927307128906

Token 25: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.0403299443423748
    2. '==' → logprob: -3.290329933166504
    3. ' <' → logprob: -6.290329933166504
    4. ' <=' → logprob: -8.415329933166504
    5. '<' → logprob: -8.915329933166504
    6. '<=' → logprob: -10.290329933166504
    7. '==-' → logprob: -11.165329933166504
    8. ')' → logprob: -11.415329933166504
    9. ' ' → logprob: -11.915329933166504
    10. '=' → logprob: -12.540329933166504

Token 26: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.016035424545407295
    2. ' ' → logprob: -4.141035556793213
    3. '-' → logprob: -14.266035079956055
    4. '   ' → logprob: -15.141035079956055
    5. ' -' → logprob: -16.641035079956055
    6. '  ' → logprob: -17.266035079956055
    7. '    ' → logprob: -17.391035079956055
    8. ')' → logprob: -17.516035079956055
    9. '_' → logprob: -17.641035079956055
    10. ' ' → logprob: -17.766035079956055

Token 27: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0017570488853380084
    2. ' ' → logprob: -6.3767571449279785
    3. '-' → logprob: -9.87675666809082
    4. ' -' → logprob: -13.12675666809082
    5. ')' → logprob: -15.18925666809082
    6. '   ' → logprob: -15.31425666809082
    7. '  ' → logprob: -15.62675666809082
    8. '1' → logprob: -15.68925666809082
    9. ''' → logprob: -15.75175666809082
    10. '```' → logprob: -16.06425666809082

Token 28: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001171652227640152
    2. ':
' → logprob: -6.876171588897705
    3. '   ' → logprob: -9.126172065734863
    4. ':return' → logprob: -11.126172065734863
    5. ' :' → logprob: -11.501172065734863
    6. '       ' → logprob: -13.751172065734863
    7. '	break' → logprob: -13.876172065734863
    8. '.' → logprob: -14.501172065734863
    9. ' break' → logprob: -14.501172065734863
    10. '):' → logprob: -14.626172065734863

Token 29: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004172779619693756
    2. '   ' → logprob: -5.5041728019714355
    3. '	' → logprob: -10.504172325134277
    4. '	break' → logprob: -10.754172325134277
    5. ' break' → logprob: -10.879172325134277
    6. '    ' → logprob: -12.004172325134277
    7. '     ' → logprob: -12.504172325134277
    8. 'break' → logprob: -12.629172325134277
    9. '\n' → logprob: -12.754172325134277
    10. '\t' → logprob: -13.004172325134277

Token 30: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.19140876829624176
    2. '       ' → logprob: -2.06640887260437
    3. '   ' → logprob: -3.56640887260437
    4. 'break' (adapté à ' break') → logprob: -4.066408634185791
    5. '	break' → logprob: -6.316408634185791
    6. '\n' → logprob: -8.69140911102295
    7. '    ' → logprob: -9.94140911102295
    8. '\t' → logprob: -10.19140911102295
    9. '_break' → logprob: -10.56640911102295
    10. '     ' → logprob: -11.19140911102295

Token 31: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014577122405171394
    2. 's' → logprob: -5.6395769119262695
    3. 'n' → logprob: -6.2645769119262695
    4. '    
' → logprob: -6.8895769119262695
    5. 'numbers' → logprob: -6.8895769119262695
    6. 'prices' → logprob: -7.0145769119262695
    7. 'nums' → logprob: -7.2645769119262695
    8. 'data' → logprob: -7.7645769119262695
    9. 'd' → logprob: -8.01457691192627
    10. '    ' → logprob: -8.26457691192627

Token 32: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0019230410689488053
    2. '    
' → logprob: -7.626923084259033
    3. 's' → logprob: -8.251922607421875
    4. 'data' → logprob: -8.501922607421875
    5. 'n' → logprob: -9.001922607421875
    6. '```' → logprob: -9.251922607421875
    7. 'indices' → logprob: -9.376922607421875
    8. 'd' → logprob: -9.501922607421875
    9. 'list' → logprob: -10.001922607421875
    10. 'nums' → logprob: -10.251922607421875

Token 33: ' n' (ID: 297)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.142484188079834
    2. 'data' → logprob: -2.142484188079834
    3. 'numbers' → logprob: -2.392484188079834
    4. ' data' → logprob: -2.767484188079834
    5. 'nums' → logprob: -2.767484188079834
    6. ' numbers' → logprob: -3.017484188079834
    7. 'arr' → logprob: -3.142484188079834
    8. 'list' → logprob: -4.142484188079834
    9. ' nums' → logprob: -4.142484188079834
    10. 'prices' → logprob: -4.267484188079834

Token 34: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07104315608739853
    2. '=' → logprob: -2.6960432529449463
    3. ',' → logprob: -7.821043014526367
    4. 'umbers' → logprob: -8.071043014526367
    5. ' ' → logprob: -8.571043014526367
    6. '   ' → logprob: -9.571043014526367
    7. 's' → logprob: -9.821043014526367
    8. '    ' → logprob: -10.571043014526367
    9. ' ,' → logprob: -11.446043014526367
    10. '  ' → logprob: -12.071043014526367

Token 35: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.1739339530467987
    2. ' int' → logprob: -1.923933982849121
    3. '[int' → logprob: -4.423933982849121
    4. '[]' → logprob: -7.048933982849121
    5. '[' → logprob: -8.923933982849121
    6. ' [' → logprob: -9.048933982849121
    7. 'list' → logprob: -9.173933982849121
    8. ' []' → logprob: -9.548933982849121
    9. 'len' → logprob: -9.923933982849121
    10. 'd' → logprob: -10.048933982849121

Token 36: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -2.3080716346157715e-05
    2. '(' → logprob: -10.875022888183594
    3. 'input' → logprob: -12.625022888183594
    4. ' (' → logprob: -14.625022888183594
    5. ' input' → logprob: -16.125022888183594
    6. '=input' → logprob: -16.625022888183594
    7. ',input' → logprob: -16.750022888183594
    8. '[input' → logprob: -18.500022888183594
    9. '<input' → logprob: -19.125022888183594
    10. '(inp' → logprob: -19.250022888183594

Token 37: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0385408028960228
    2. '()' → logprob: -3.288540840148926
    3. ')' → logprob: -7.663540840148926
    4. '())
' → logprob: -11.288540840148926
    5. '()
' → logprob: -11.913540840148926
    6. ' ())' → logprob: -12.288540840148926
    7. '(' → logprob: -12.538540840148926
    8. '())

' → logprob: -14.538540840148926
    9. '();)' → logprob: -14.538540840148926
    10. '().' → logprob: -14.538540840148926

Token 38: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8541044592857361
    2. 'arr' → logprob: -1.9791045188903809
    3. 'numbers' → logprob: -2.479104518890381
    4. 'data' → logprob: -3.104104518890381
    5. 's' → logprob: -3.479104518890381
    6. 'nums' → logprob: -3.854104518890381
    7. 'array' → logprob: -4.104104518890381
    8. 'list' → logprob: -4.104104518890381
    9. 'd' → logprob: -4.354104518890381
    10. 'cards' → logprob: -4.479104518890381

Token 39: ' m' (ID: 284)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -1.147234559059143
    2. '   ' → logprob: -2.1472344398498535
    3. 'a' → logprob: -2.5222344398498535
    4. 'data' → logprob: -2.6472344398498535
    5. 'cards' → logprob: -2.6472344398498535
    6. 'numbers' → logprob: -2.7722344398498535
    7. 'lst' → logprob: -3.1472344398498535
    8. 'nums' → logprob: -3.5222344398498535
    9. 'deck' → logprob: -3.6472344398498535
    10. 'list' → logprob: -4.1472344398498535

Token 40: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018199576064944267
    2. '=' → logprob: -4.018199443817139
    3. '=int' → logprob: -11.518199920654297
    4. ' ' → logprob: -11.893199920654297
    5. '   ' → logprob: -12.268199920654297
    6. ',' → logprob: -12.393199920654297
    7. '    ' → logprob: -12.518199920654297
    8. 'ap' → logprob: -12.768199920654297
    9. '=input' → logprob: -12.768199920654297
    10. 'aps' → logprob: -13.143199920654297

Token 41: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.3517150580883026
    2. 'int' → logprob: -1.226715087890625
    3. '[int' → logprob: -6.351715087890625
    4. ' n' → logprob: -7.476715087890625
    5. ' list' → logprob: -8.226715087890625
    6. 'n' → logprob: -8.851715087890625
    7. ' ' → logprob: -9.101715087890625
    8. 'list' → logprob: -9.351715087890625
    9. ' [' → logprob: -9.601715087890625
    10. '   ' → logprob: -10.101715087890625

Token 42: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -1.27099974633893e-05
    2. 'input' → logprob: -12.250012397766113
    3. '(' → logprob: -12.375012397766113
    4. ' (' → logprob: -12.750012397766113
    5. '(int' → logprob: -15.750012397766113
    6. '(sys' → logprob: -15.875012397766113
    7. '=input' → logprob: -16.00001335144043
    8. '[input' → logprob: -16.00001335144043
    9. '   ' → logprob: -17.12501335144043
    10. ' ' → logprob: -17.37501335144043

Token 43: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.03227139264345169
    2. '()' → logprob: -3.532271385192871
    3. ')' → logprob: -6.032271385192871
    4. '())
' → logprob: -9.532271385192871
    5. '()
' → logprob: -10.282271385192871
    6. ' ())' → logprob: -11.907271385192871
    7. '();)' → logprob: -13.407271385192871
    8. '(' → logprob: -14.407271385192871
    9. '())

' → logprob: -14.407271385192871
    10. '()]' → logprob: -14.657271385192871

Token 44: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2705264389514923
    2. 'data' → logprob: -3.27052640914917
    3. 'list' → logprob: -3.64552640914917
    4. 's' → logprob: -4.02052640914917
    5. 'numbers' → logprob: -4.14552640914917
    6. 'l' → logprob: -4.89552640914917
    7. 'nums' → logprob: -4.89552640914917
    8. 'a' → logprob: -4.89552640914917
    9. 'array' → logprob: -5.02052640914917
    10. 'd' → logprob: -5.02052640914917

Token 45: ' shops' (ID: 22509)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.538476586341858
    2. 'arr' → logprob: -1.913476586341858
    3. 'cards' → logprob: -2.4134764671325684
    4. 'numbers' → logprob: -2.6634764671325684
    5. 'data' → logprob: -2.7884764671325684
    6. 'deck' → logprob: -3.2884764671325684
    7. 'houses' → logprob: -3.4134764671325684
    8. 's' → logprob: -3.9134764671325684
    9. 'array' → logprob: -4.038476467132568
    10. 'l' → logprob: -4.163476467132568

Token 46: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04875779524445534
    2. '=' → logprob: -3.048757791519165
    3. '=[]' → logprob: -9.173757553100586
    4. '_' → logprob: -10.798757553100586
    5. 's' → logprob: -11.548757553100586
    6. '_list' → logprob: -12.048757553100586
    7. ',' → logprob: -12.048757553100586
    8. ' ' → logprob: -12.548757553100586
    9. '[]' → logprob: -12.548757553100586
    10. ' =[' → logprob: -13.298757553100586

Token 47: ' [' (ID: 723)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.18499904870986938
    2. '[' → logprob: -2.9349989891052246
    3. '[list' → logprob: -3.1849989891052246
    4. 'list' → logprob: -3.4349989891052246
    5. ' []' → logprob: -3.5599989891052246
    6. ' [' → logprob: -4.934998989105225
    7. ' list' → logprob: -5.184998989105225
    8. '[int' → logprob: -8.559999465942383
    9. '[input' → logprob: -9.059999465942383
    10. 'sorted' → logprob: -9.059999465942383

Token 48: '0' (ID: 15)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.7778192758560181
    2. 'int' → logprob: -1.027819275856018
    3. 'tuple' → logprob: -2.1528191566467285
    4. '[]' → logprob: -3.0278191566467285
    5. '0' → logprob: -5.0278191566467285
    6. ']' → logprob: -5.1528191566467285
    7. '[int' → logprob: -6.2778191566467285
    8. '(int' → logprob: -6.7778191566467285
    9. '()]' → logprob: -7.2778191566467285
    10. ']int' → logprob: -8.027819633483887

Token 49: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0009426692849956453
    2. ']*' → logprob: -7.625942707061768
    3. ']*(' → logprob: -8.50094223022461
    4. ']+' → logprob: -8.87594223022461
    5. ' ]' → logprob: -9.25094223022461
    6. ' for' → logprob: -12.37594223022461
    7. ']int' → logprob: -12.62594223022461
    8. '0' → logprob: -12.87594223022461
    9. 'for' → logprob: -13.50094223022461
    10. '()]' → logprob: -13.87594223022461

Token 50: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 51: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.9720650911331177
    2. ' for' → logprob: -1.4720650911331177
    3. ' shops' → logprob: -1.9720650911331177
    4. 'prices' → logprob: -2.847064971923828
    5. ' distances' → logprob: -2.972064971923828
    6. 'shops' → logprob: -3.722064971923828
    7. 'a' → logprob: -4.097064971923828
    8. 'arr' → logprob: -4.472064971923828
    9. 'd' → logprob: -4.597064971923828
    10. 'list' → logprob: -4.847064971923828

Token 52: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.03631353750824928
    2. '_' → logprob: -3.411313533782959
    3. ' i' → logprob: -6.161313533782959
    4. '_i' → logprob: -7.786313533782959
    5. 'i' → logprob: -8.911314010620117
    6. ' ' → logprob: -12.911314010620117
    7. '_s' → logprob: -14.411314010620117
    8. ' ' → logprob: -14.661314010620117
    9. '	i' → logprob: -14.786314010620117
    10. '_j' → logprob: -16.036314010620117

Token 53: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1003967747092247
    2. 'in' → logprob: -2.3503968715667725
    3. ' ' → logprob: -9.475397109985352
    4. 'range' → logprob: -9.725397109985352
    5. 'i' → logprob: -10.475397109985352
    6. 'import' → logprob: -12.350397109985352
    7. 'n' → logprob: -12.475397109985352
    8. ' i' → logprob: -12.475397109985352
    9. '  ' → logprob: -12.850397109985352
    10. '	in' → logprob: -13.725397109985352

Token 54: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.005243479739874601
    2. ' range' → logprob: -5.255243301391602
    3. '(range' → logprob: -12.630243301391602
    4. 'ange' → logprob: -12.630243301391602
    5. 'ran' → logprob: -14.130243301391602
    6. '	range' → logprob: -14.380243301391602
    7. 'shops' → logprob: -14.505243301391602
    8. 'r' → logprob: -15.005243301391602
    9. 'm' → logprob: -15.505243301391602
    10. 'n' → logprob: -16.2552433013916

Token 55: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0042654890567064285
    2. '(' → logprob: -5.754265308380127
    3. ' (' → logprob: -6.879265308380127
    4. ' n' → logprob: -9.879265785217285
    5. '(m' → logprob: -12.254265785217285
    6. '(range' → logprob: -14.004265785217285
    7. 'n' → logprob: -14.254265785217285
    8. '(s' → logprob: -15.379265785217285
    9. ' ' → logprob: -15.504265785217285
    10. '()' → logprob: -16.00426483154297

Token 56: ' -' (ID: 533)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.029234617948532104
    2. '):
' → logprob: -3.6542346477508545
    3. ',' → logprob: -6.904234409332275
    4. ')' → logprob: -7.029234409332275
    5. '   ' → logprob: -8.029234886169434
    6. '+' → logprob: -8.279234886169434
    7. ' ):' → logprob: -8.279234886169434
    8. ':' → logprob: -9.029234886169434
    9. '):
' → logprob: -10.654234886169434
    10. ' ):
' → logprob: -11.404234886169434

Token 57: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.029759055003523827
    2. ' ' → logprob: -3.529759168624878
    3. '<|end|>' → logprob: -12.279759407043457
    4. '   ' → logprob: -13.404759407043457
    5. '  ' → logprob: -13.904759407043457
    6. '2' → logprob: -14.029759407043457
    7. '0' → logprob: -15.279759407043457
    8. '    ' → logprob: -15.404759407043457
    9. '<|end|>' → logprob: -16.15475845336914
    10. '+' → logprob: -17.02975845336914

Token 58: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003364158037584275
    2. ' ' → logprob: -8.000336647033691
    3. '2' → logprob: -14.125336647033691
    4. '   ' → logprob: -16.000335693359375
    5. '  ' → logprob: -16.000335693359375
    6. '<|end|>' → logprob: -18.312835693359375
    7. '3' → logprob: -19.125335693359375
    8. '    ' → logprob: -19.312835693359375
    9. '0' → logprob: -19.625335693359375
    10. ')' → logprob: -19.812835693359375

Token 59: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3878846764564514
    2. '):
' → logprob: -1.1378846168518066
    3. ')' → logprob: -7.762884616851807
    4. ':' → logprob: -9.012885093688965
    5. '):
' → logprob: -9.012885093688965
    6. ',' → logprob: -9.262885093688965
    7. ' ):' → logprob: -9.262885093688965
    8. '   ' → logprob: -9.762885093688965
    9. ' ):
' → logprob: -9.762885093688965
    10. '):

' → logprob: -11.512885093688965

Token 60: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5076137185096741
    2. '       ' → logprob: -1.2576136589050293
    3. '<|end|>' → logprob: -2.5076136589050293
    4. ' shops' → logprob: -3.6326136589050293
    5. ' s' → logprob: -6.257613658905029
    6. '<|end|>' → logprob: -6.632613658905029
    7. 's' → logprob: -7.257613658905029
    8. '    ' → logprob: -7.757613658905029
    9. '	   ' → logprob: -8.257614135742188
    10. ' ' → logprob: -8.382614135742188

Token 61: ' pos' (ID: 1253)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7075319290161133
    2. ' shops' → logprob: -1.2075319290161133
    3. 'shops' → logprob: -1.8325319290161133
    4. '       ' → logprob: -4.207531929016113
    5. 'x' → logprob: -4.332531929016113
    6. 's' → logprob: -4.582531929016113
    7. 'shop' → logprob: -5.707531929016113
    8. 'a' → logprob: -6.082531929016113
    9. ' x' → logprob: -6.582531929016113
    10. 'p' → logprob: -7.707531929016113

Token 62: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11462858319282532
    2. '=' → logprob: -2.239628553390503
    3. 's' → logprob: -6.614628791809082
    4. 'itions' → logprob: -8.364628791809082
    5. 'ition' → logprob: -8.739628791809082
    6. ' ' → logprob: -10.614628791809082
    7. 'ions' → logprob: -11.614628791809082
    8. ',' → logprob: -11.739628791809082
    9. 'osition' → logprob: -11.989628791809082
    10. '=int' → logprob: -12.114628791809082

Token 63: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.14268165826797485
    2. ' int' → logprob: -2.01768159866333
    3. '	int' → logprob: -12.892682075500488
    4. '   ' → logprob: -13.767682075500488
    5. '<int' → logprob: -14.392682075500488
    6. ' ' → logprob: -14.392682075500488
    7. '[int' → logprob: -15.142682075500488
    8. '    ' → logprob: -15.267682075500488
    9. '=int' → logprob: -15.267682075500488
    10. ' bis' → logprob: -15.267682075500488

Token 64: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -6.869017852295656e-06
    2. '(' → logprob: -12.125006675720215
    3. 'input' → logprob: -13.500006675720215
    4. '=input' → logprob: -17.25000762939453
    5. ' input' → logprob: -17.50000762939453
    6. ',input' → logprob: -18.12500762939453
    7. '	input' → logprob: -18.75000762939453
    8. '(
' → logprob: -18.87500762939453
    9. ' (' → logprob: -18.87500762939453
    10. '<input' → logprob: -19.37500762939453

Token 65: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.009048349224030972
    2. ')' → logprob: -5.0090484619140625
    3. '()' → logprob: -6.2590484619140625
    4. '())
' → logprob: -7.8840484619140625
    5. ' ())' → logprob: -11.009048461914062
    6. '(' → logprob: -11.259048461914062
    7. '())

' → logprob: -13.009048461914062
    8. '())
' → logprob: -13.009048461914062
    9. '().' → logprob: -13.134048461914062
    10. '()
' → logprob: -13.259048461914062

Token 66: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14578862488269806
    2. 'shops' → logprob: -2.5207886695861816
    3. ' shops' → logprob: -3.6457886695861816
    4. '   ' → logprob: -3.6457886695861816
    5. '
' → logprob: -7.520788669586182
    6. '	   ' → logprob: -7.520788669586182
    7. '	' → logprob: -8.020788192749023
    8. '<|end|>' → logprob: -8.145788192749023
    9. '	sh' → logprob: -8.645788192749023
    10. '```' → logprob: -9.020788192749023

Token 67: ' shops' (ID: 22509)
  Prédit: 'shops'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shops' (adapté à ' shops') → logprob: -0.8422253131866455
    2. 'bis' → logprob: -0.8422253131866455
    3. ' bis' → logprob: -2.7172253131866455
    4. ' shops' → logprob: -3.2172253131866455
    5. '   ' → logprob: -3.5922253131866455
    6. '       ' → logprob: -5.967225074768066
    7. 'pos' → logprob: -7.467225074768066
    8. 'b' → logprob: -7.967225074768066
    9. '	b' → logprob: -8.217225074768066
    10. 'sh' → logprob: -8.217225074768066

Token 68: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0487092100083828
    2. '.' → logprob: -3.0487091541290283
    3. '.app' → logprob: -9.29870891571045
    4. '.ap' → logprob: -11.17370891571045
    5. '.extend' → logprob: -11.79870891571045
    6. ' .' → logprob: -11.92370891571045
    7. '.insert' → logprob: -13.79870891571045
    8. 'append' → logprob: -15.04870891571045
    9. '.add' → logprob: -15.92370891571045
    10. '.Append' → logprob: -16.423709869384766

Token 69: '(pos' (ID: 24566)
  Prédit: '(pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pos' → logprob: -0.00013393278641160578
    2. '(' → logprob: -9.000133514404297
    3. ' (' → logprob: -11.625133514404297
    4. '((' → logprob: -14.500133514404297
    5. 'pos' → logprob: -14.750133514404297
    6. '(position' → logprob: -15.250133514404297
    7. '(po' → logprob: -16.250133514404297
    8. '(int' → logprob: -16.750133514404297
    9. ',pos' → logprob: -16.875133514404297
    10. '(Pos' → logprob: -16.875133514404297

Token 70: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005474337958730757
    2. ')
' → logprob: -8.125547409057617
    3. '   ' → logprob: -8.375547409057617
    4. '+' → logprob: -11.500547409057617
    5. ' )' → logprob: -12.250547409057617
    6. '))' → logprob: -13.750547409057617
    7. '       ' → logprob: -13.750547409057617
    8. ')

' → logprob: -14.375547409057617
    9. ' +' → logprob: -14.875547409057617
    10. '`)' → logprob: -15.125547409057617

Token 71: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3905191123485565
    2. ' shops' → logprob: -1.640519142150879
    3. 'shops' → logprob: -2.140519142150879
    4. '<|end|>' → logprob: -4.890519142150879
    5. '
' → logprob: -6.765519142150879
    6. '```' → logprob: -7.265519142150879
    7. '    
' → logprob: -8.265519142150879
    8. 's' → logprob: -8.265519142150879
    9. 'positions' → logprob: -8.515519142150879
    10. 'm' → logprob: -8.765519142150879

Token 72: ' shops' (ID: 22509)
  Prédit: 'shops'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shops' (adapté à ' shops') → logprob: -0.031431809067726135
    2. ' shops' → logprob: -3.5314319133758545
    3. '   ' → logprob: -6.781431674957275
    4. 'shop' → logprob: -8.781432151794434
    5. 'bis' → logprob: -9.531432151794434
    6. 'm' → logprob: -9.531432151794434
    7. 'b' → logprob: -10.156432151794434
    8. 'positions' → logprob: -10.156432151794434
    9. 'sort' → logprob: -10.781432151794434
    10. 'sh' → logprob: -10.906432151794434

Token 73: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.00019066639652010053
    2. '.' → logprob: -8.750190734863281
    3. '.append' → logprob: -10.750190734863281
    4. 'sort' → logprob: -11.875190734863281
    5. '.reverse' → logprob: -13.500190734863281
    6. '=' → logprob: -13.875190734863281
    7. '.extend' → logprob: -15.000190734863281
    8. '.pop' → logprob: -15.000190734863281
    9. '.Sort' → logprob: -15.625190734863281
    10. '<|end|>' → logprob: -15.625190734863281

Token 74: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.34095561504364014
    2. '<|end|>' → logprob: -1.4659556150436401
    3. '    
' → logprob: -4.09095573425293
    4. '
' → logprob: -4.09095573425293
    5. '<|end|>' → logprob: -4.71595573425293
    6. 'positions' → logprob: -5.84095573425293
    7. '[' → logprob: -6.46595573425293
    8. '  
' → logprob: -6.59095573425293
    9. '```' → logprob: -6.71595573425293
    10. '    ' → logprob: -7.34095573425293

Token 75: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10476173460483551
    2. 'positions' → logprob: -3.979761838912964
    3. 'distance' → logprob: -4.479761600494385
    4. '```' → logprob: -4.854761600494385
    5. 'dist' → logprob: -5.104761600494385
    6. 'shops' → logprob: -5.229761600494385
    7. '    
' → logprob: -5.604761600494385
    8. 'm' → logprob: -5.667261600494385
    9. ' shops' → logprob: -5.854761600494385
    10. 'dp' → logprob: -6.042261600494385

Token 76: ' res' (ID: 694)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -2.116269111633301
    2. 'dp' → logprob: -2.241269111633301
    3. 'shops' → logprob: -2.616269111633301
    4. 'positions' → logprob: -2.866269111633301
    5. 'queries' → logprob: -2.991269111633301
    6. 'res' (adapté à ' res') → logprob: -3.241269111633301
    7. 'result' → logprob: -3.366269111633301
    8. 'interval' → logprob: -3.366269111633301
    9. 'houses' → logprob: -3.491269111633301
    10. 'targets' → logprob: -4.116269111633301

Token 77: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.150823175907135
    2. 'ult' → logprob: -2.1508231163024902
    3. '=' → logprob: -3.9008231163024902
    4. 'ults' → logprob: -5.90082311630249
    5. 'u' → logprob: -8.150823593139648
    6. 't' → logprob: -8.525823593139648
    7. 's' → logprob: -10.400823593139648
    8. 'ul' → logprob: -10.900823593139648
    9. 'ulta' → logprob: -10.900823593139648
    10. 'ultat' → logprob: -11.150823593139648

Token 78: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2965704202651978
    2. ' float' → logprob: -1.5465704202651978
    3. ' ' → logprob: -1.7965704202651978
    4. 'float' → logprob: -1.9215704202651978
    5. ' sys' → logprob: -2.421570301055908
    6. '[]' → logprob: -3.671570301055908
    7. 'sys' → logprob: -3.796570301055908
    8. ' d' → logprob: -3.921570301055908
    9. ' []' → logprob: -4.296570301055908
    10. ' m' → logprob: -4.671570301055908

Token 79: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6177546977996826
    2. 'float' → logprob: -1.4927546977996826
    3. '[]' → logprob: -2.8677546977996826
    4. 'm' → logprob: -3.2427546977996826
    5. 'sys' → logprob: -3.2427546977996826
    6. '10' → logprob: -3.7427546977996826
    7. 'd' → logprob: -4.117754936218262
    8. 'bis' → logprob: -4.242754936218262
    9. '100' → logprob: -4.492754936218262
    10. 'shops' → logprob: -4.742754936218262

Token 80: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.444767028093338
    2. '
' → logprob: -1.6947669982910156
    3. ' for' → logprob: -2.4447669982910156
    4. 'for' → logprob: -3.0697669982910156
    5. '    
' → logprob: -3.8197669982910156
    6. ' 
' → logprob: -4.694766998291016
    7. '<|end|>' → logprob: -5.944766998291016
    8. '  
' → logprob: -6.319766998291016
    9. '   
' → logprob: -6.944766998291016
    10. ' while' → logprob: -6.944766998291016

Token 81: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5846112370491028
    2. ' for' → logprob: -1.209611177444458
    3. 'for' → logprob: -2.209611177444458
    4. '
' → logprob: -4.209611415863037
    5. '\n' → logprob: -4.834611415863037
    6. ' 
' → logprob: -6.084611415863037
    7. '    
' → logprob: -6.209611415863037
    8. '<|end|>' → logprob: -6.209611415863037
    9. '	for' → logprob: -6.459611415863037
    10. ' ' → logprob: -7.459611415863037

Token 82: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.02633826434612274
    2. ' for' → logprob: -5.02633810043335
    3. 'idx' → logprob: -5.27633810043335
    4. 'left' → logprob: -6.15133810043335
    5. 'pos' → logprob: -6.27633810043335
    6. 'shops' → logprob: -6.40133810043335
    7. 'bis' → logprob: -6.52633810043335
    8. 'while' → logprob: -6.52633810043335
    9. '   ' → logprob: -7.02633810043335
    10. 'i' → logprob: -7.52633810043335

Token 83: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.4483990967273712
    2. '_' → logprob: -1.3233990669250488
    3. ' i' → logprob: -2.698399066925049
    4. '_i' → logprob: -4.948399066925049
    5. ' pos' → logprob: -5.698399066925049
    6. '_pos' → logprob: -6.073399066925049
    7. 'i' → logprob: -6.073399066925049
    8. '_shop' → logprob: -6.323399066925049
    9. 'pos' → logprob: -6.448399066925049
    10. ' shop' → logprob: -6.573399066925049

Token 84: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.23167112469673157
    2. 'in' → logprob: -1.6066710948944092
    3. ' ' → logprob: -5.856671333312988
    4. 'range' → logprob: -6.356671333312988
    5. ' range' → logprob: -7.106671333312988
    6. ' _' → logprob: -8.106671333312988
    7. 'm' → logprob: -9.106671333312988
    8. '<|end|>' → logprob: -9.356671333312988
    9. '_' → logprob: -9.731671333312988
    10. '```' → logprob: -10.356671333312988

Token 85: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.012700587511062622
    2. ' range' → logprob: -4.38770055770874
    3. '(range' → logprob: -9.512701034545898
    4. 'm' → logprob: -10.512701034545898
    5. 'ange' → logprob: -10.762701034545898
    6. 'shops' → logprob: -10.887701034545898
    7. '	range' → logprob: -11.387701034545898
    8. 'rang' → logprob: -12.262701034545898
    9. ')' → logprob: -12.762701034545898
    10. ' ' → logprob: -12.887701034545898

Token 86: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.0018971058307215571
    2. '(' → logprob: -6.37689733505249
    3. ' m' → logprob: -9.251896858215332
    4. ' (' → logprob: -9.501896858215332
    5. 'm' → logprob: -10.751896858215332
    6. '(n' → logprob: -13.376896858215332
    7. '(M' → logprob: -14.251896858215332
    8. ' ' → logprob: -15.876896858215332
    9. '	m' → logprob: -16.00189781188965
    10. '(s' → logprob: -16.50189781188965

Token 87: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3120822310447693
    2. ')' → logprob: -1.437082290649414
    3. ':' → logprob: -3.812082290649414
    4. ' ):' → logprob: -5.437082290649414
    5. ' )' → logprob: -6.062082290649414
    6. ',' → logprob: -6.812082290649414
    7. '   ' → logprob: -8.562082290649414
    8. '):
' → logprob: -9.187082290649414
    9. ' :' → logprob: -9.812082290649414
    10. '+' → logprob: -10.312082290649414

Token 88: '       ' (ID: 309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7307305335998535
    2. '    ' → logprob: -0.8557305335998535
    3. '   ' → logprob: -2.9807305335998535
    4. '<|end|>' → logprob: -4.3557305335998535
    5. '       ' → logprob: -5.2307305335998535
    6. ' 	' → logprob: -5.6057305335998535
    7. ' 
' → logprob: -5.7307305335998535
    8. '  ' → logprob: -5.8557305335998535
    9. '     
' → logprob: -5.8557305335998535
    10. '    
' → logprob: -5.9807305335998535

Token 89: ' k' (ID: 372)
  Prédit: ' pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pos' → logprob: -1.2050174474716187
    2. ' ' → logprob: -1.9550174474716187
    3. ' x' → logprob: -1.9550174474716187
    4. ' s' → logprob: -2.205017566680908
    5. ' target' → logprob: -3.080017566680908
    6. ' d' → logprob: -3.455017566680908
    7. ' query' → logprob: -3.455017566680908
    8. ' dist' → logprob: -4.080017566680908
    9. 'pos' → logprob: -4.205017566680908
    10. ' q' → logprob: -4.205017566680908

Token 90: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.030781347304582596
    2. '=' → logprob: -3.5307812690734863
    3. ',' → logprob: -7.780781269073486
    4. '=int' → logprob: -8.530781745910645
    5. 'ey' → logprob: -9.030781745910645
    6. '   ' → logprob: -9.655781745910645
    7. ' ' → logprob: -9.780781745910645
    8. 'pos' → logprob: -9.905781745910645
    9. 'e' → logprob: -10.905781745910645
    10. ',pos' → logprob: -10.905781745910645

Token 91: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.17983724176883698
    2. ' int' → logprob: -1.8048372268676758
    3. ' ' → logprob: -10.429837226867676
    4. ' bis' → logprob: -11.429837226867676
    5. 'bis' → logprob: -11.429837226867676
    6. '  ' → logprob: -11.929837226867676
    7. '[int' → logprob: -12.054837226867676
    8. '	int' → logprob: -12.429837226867676
    9. '(int' → logprob: -12.429837226867676
    10. 'd' → logprob: -12.554837226867676

Token 92: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -5.228561349213123e-05
    2. '(' → logprob: -9.875052452087402
    3. 'input' → logprob: -15.000052452087402
    4. ' (' → logprob: -15.500052452087402
    5. '=input' → logprob: -16.750051498413086
    6. '(
' → logprob: -16.875051498413086
    7. '(in' → logprob: -17.000051498413086
    8. '(int' → logprob: -17.375051498413086
    9. ',input' → logprob: -17.500051498413086
    10. '(output' → logprob: -17.625051498413086

Token 93: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.25386330485343933
    2. ')' → logprob: -2.3788633346557617
    3. '())
' → logprob: -2.7538633346557617
    4. '()' → logprob: -2.7538633346557617
    5. ')
' → logprob: -5.878863334655762
    6. '()
' → logprob: -7.003863334655762
    7. '())
' → logprob: -8.378863334655762
    8. '(' → logprob: -9.253863334655762
    9. ' ())' → logprob: -10.003863334655762
    10. ')
' → logprob: -10.878863334655762

Token 94: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1725706309080124
    2. '
' → logprob: -2.1725707054138184
    3. ')' → logprob: -3.5475707054138184
    4. '' → logprob: -6.047570705413818
    5. '<|end|>' → logprob: -6.172570705413818
    6. '   ' → logprob: -6.297570705413818
    7. '        
' → logprob: -6.672570705413818
    8. ' 
' → logprob: -6.797570705413818
    9. 'pos' → logprob: -6.797570705413818
    10. ')
' → logprob: -7.172570705413818

Token 95: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -1.426087498664856
    2. 'idx' → logprob: -1.426087498664856
    3. ' idx' → logprob: -1.426087498664856
    4. 'i' (adapté à ' i') → logprob: -1.801087498664856
    5. 'pos' → logprob: -2.8010873794555664
    6. ' pos' → logprob: -3.4260873794555664
    7. 'index' → logprob: -4.926087379455566
    8. ' index' → logprob: -5.676087379455566
    9. ' ind' → logprob: -6.176087379455566
    10. 'ind' → logprob: -6.176087379455566

Token 96: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03157157450914383
    2. 'nd' → logprob: -3.906571626663208
    3. '=' → logprob: -4.781571388244629
    4. 'dx' → logprob: -6.281571388244629
    5. 'x' → logprob: -7.531571388244629
    6. 'n' → logprob: -9.281571388244629
    7. 'd' → logprob: -10.281571388244629
    8. 'f' → logprob: -11.781571388244629
    9. '=index' → logprob: -12.031571388244629
    10. 'nt' → logprob: -12.656571388244629

Token 97: ' bis' (ID: 7204)
  Prédit: ' bis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bis' → logprob: -0.023245826363563538
    2. 'bis' → logprob: -3.7732458114624023
    3. 'b' → logprob: -14.898245811462402
    4. 'Bis' → logprob: -17.64824676513672
    5. '	b' → logprob: -18.02324676513672
    6. ' ' → logprob: -19.52324676513672
    7. '-b' → logprob: -19.64824676513672
    8. 's' → logprob: -19.89824676513672
    9. ' bs' → logprob: -20.14824676513672
    10. 'bs' → logprob: -20.14824676513672

Token 98: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -7.398067828034982e-05
    2. 'sect' → logprob: -10.12507438659668
    3. 'ct' → logprob: -10.50007438659668
    4. 'e' → logprob: -12.87507438659668
    5. 'ects' → logprob: -14.12507438659668
    6. 'ectl' → logprob: -14.25007438659668
    7. '```' → logprob: -14.50007438659668
    8. 'ext' → logprob: -15.25007438659668
    9. 'c' → logprob: -15.37507438659668
    10. 'lect' → logprob: -15.37507438659668

Token 99: '.b' (ID: 1292)
  Prédit: '.b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.b' → logprob: -0.002522865077480674
    2. '_left' → logprob: -6.377522945404053
    3. '.' → logprob: -7.127522945404053
    4. '.ins' → logprob: -11.502522468566895
    5. '_right' → logprob: -12.502522468566895
    6. ' .' → logprob: -13.377522468566895
    7. ' bis' → logprob: -13.877522468566895
    8. '_' → logprob: -15.252522468566895
    9. 'b' → logprob: -15.252522468566895
    10. 'bis' → logprob: -15.627522468566895

Token 100: 'is' (ID: 276)
  Prédit: 'ct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ct' → logprob: -0.1607753336429596
    2. 'sect' → logprob: -2.4107754230499268
    3. 's' → logprob: -3.4107754230499268
    4. 'ect' → logprob: -3.7857754230499268
    5. 'st' → logprob: -7.160775184631348
    6. 'se' → logprob: -8.035775184631348
    7. 'spect' → logprob: -8.285775184631348
    8. '```' → logprob: -8.285775184631348
    9. 'cts' → logprob: -8.410775184631348
    10. 'is' → logprob: -8.535775184631348

Token 101: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -0.08951796591281891
    2. 'ct' → logprob: -2.4645180702209473
    3. 'sect' → logprob: -7.589518070220947
    4. 's' → logprob: -10.964517593383789
    5. '```' → logprob: -11.214517593383789
    6. 'n' → logprob: -11.339517593383789
    7. 'c' → logprob: -11.964517593383789
    8. 'с' → logprob: -12.464517593383789
    9. 'ects' → logprob: -12.964517593383789
    10. '   ' → logprob: -13.339517593383789

Token 102: '_left' (ID: 22189)
  Prédit: '_left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -0.0011989205377176404
    2. '_right' → logprob: -6.751198768615723
    3. '(' → logprob: -10.876198768615723
    4. 'left' → logprob: -11.626198768615723
    5. 'Left' → logprob: -14.501198768615723
    6. '_LEFT' → logprob: -16.00119972229004
    7. '-left' → logprob: -16.50119972229004
    8. '_Left' → logprob: -16.62619972229004
    9. '_' → logprob: -17.87619972229004
    10. 'right' → logprob: -18.12619972229004

Token 103: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.5048530030981055e-06
    2. '(shop' → logprob: -13.625001907348633
    3. ' (' → logprob: -15.625001907348633
    4. 'shops' → logprob: -16.875001907348633
    5. '```' → logprob: -18.625001907348633
    6. '(
' → logprob: -19.000001907348633
    7. '(s' → logprob: -19.375001907348633
    8. '((' → logprob: -20.000001907348633
    9. '(sh' → logprob: -20.250001907348633
    10. '()' → logprob: -21.125001907348633

Token 104: 'shops' (ID: 25850)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.062071993947029114
    2. 'shops' → logprob: -2.8120720386505127
    3. ')' → logprob: -9.562071800231934
    4. ' shops' → logprob: -11.312071800231934
    5. '(shop' → logprob: -11.312071800231934
    6. '(sh' → logprob: -12.062071800231934
    7. '(
' → logprob: -13.562071800231934
    8. 'shop' → logprob: -14.062071800231934
    9. ' (' → logprob: -14.312071800231934
    10. ')(' → logprob: -14.812071800231934

Token 105: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1276402771472931
    2. ',k' → logprob: -2.1276402473449707
    3. '(k' → logprob: -7.377640247344971
    4. ',(' → logprob: -9.752640724182129
    5. ' ,' → logprob: -10.877640724182129
    6. '(' → logprob: -11.627640724182129
    7. ',s' → logprob: -15.877640724182129
    8. ' (' → logprob: -16.252639770507812
    9. '，' → logprob: -16.377639770507812
    10. ',key' → logprob: -16.502639770507812

Token 106: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.3132705092430115
    2. ' k' → logprob: -1.3132705688476562
    3. ')' → logprob: -12.438270568847656
    4. '(k' → logprob: -12.563270568847656
    5. '	k' → logprob: -14.188270568847656
    6. ' ' → logprob: -15.938270568847656
    7. ',k' → logprob: -16.313270568847656
    8. ' ' → logprob: -16.688270568847656
    9. '=k' → logprob: -16.688270568847656
    10. ' )' → logprob: -16.813270568847656

Token 107: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.6333441734313965
    2. ')' → logprob: -0.7583441734313965
    3. ' )
' → logprob: -8.008344650268555
    4. ')
' → logprob: -8.508344650268555
    5. ' )' → logprob: -9.008344650268555
    6. ')

' → logprob: -10.008344650268555
    7. '       ' → logprob: -11.508344650268555
    8. '   ' → logprob: -11.508344650268555
    9. ')`' → logprob: -11.883344650268555
    10. ')`
' → logprob: -12.133344650268555

Token 108: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6202590465545654
    2. '       ' → logprob: -1.6202590465545654
    3. '   ' → logprob: -2.3702590465545654
    4. '<|end|>' → logprob: -2.4952590465545654
    5. ' if' → logprob: -2.7452590465545654
    6. 'if' → logprob: -5.2452592849731445
    7. ' ' → logprob: -5.4952592849731445
    8. ')' → logprob: -5.6202592849731445
    9. '```' → logprob: -6.4952592849731445
    10. '    
' → logprob: -6.7452592849731445

Token 109: ' candidates' (ID: 18116)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.25520625710487366
    2. ' if' → logprob: -1.5052062273025513
    3. 'left' → logprob: -6.755206108093262
    4. 'res' → logprob: -7.255206108093262
    5. '   ' → logprob: -7.380206108093262
    6. 'prev' → logprob: -8.880206108093262
    7. 'l' → logprob: -9.130206108093262
    8. ' left' → logprob: -9.255206108093262
    9. ' res' → logprob: -10.005206108093262
    10. '```' → logprob: -10.130206108093262

Token 110: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08894502371549606
    2. '=' → logprob: -2.463944911956787
    3. ' ' → logprob: -13.088945388793945
    4. ':' → logprob: -14.213945388793945
    5. '=[]' → logprob: -14.338945388793945
    6. '=[' → logprob: -14.338945388793945
    7. '<|end|>' → logprob: -14.463945388793945
    8. ' =[' → logprob: -14.963945388793945
    9. '   ' → logprob: -15.713945388793945
    10. ')' → logprob: -15.963945388793945

Token 111: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.10132510215044022
    2. '[]
' → logprob: -3.226325035095215
    3. ' shops' → logprob: -3.976325035095215
    4. '[' → logprob: -3.976325035095215
    5. ' []' → logprob: -4.851325035095215
    6. ' [' → logprob: -5.351325035095215
    7. 'shops' → logprob: -5.851325035095215
    8. ' []
' → logprob: -6.226325035095215
    9. '[]

' → logprob: -6.601325035095215
    10. '[s' → logprob: -9.601325035095215

Token 112: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20713023841381073
    2. ' if' → logprob: -2.832130193710327
    3. '<|end|>' → logprob: -2.957130193710327
    4. 'if' → logprob: -3.332130193710327
    5. '   ' → logprob: -3.332130193710327
    6. '```' → logprob: -6.957130432128906
    7. '
' → logprob: -7.082130432128906
    8. ' for' → logprob: -7.582130432128906
    9. 'for' → logprob: -7.832130432128906
    10. ',' → logprob: -8.207130432128906

Token 113: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.004810303915292025
    2. '       ' → logprob: -5.629810333251953
    3. ' if' → logprob: -6.754810333251953
    4. 'for' → logprob: -10.129810333251953
    5. '   ' → logprob: -13.004810333251953
    6. 'c' → logprob: -13.754810333251953
    7. '	if' → logprob: -14.754810333251953
    8. '<|end|>' → logprob: -15.254810333251953
    9. ';if' → logprob: -16.129810333251953
    10. '```' → logprob: -16.379810333251953

Token 114: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.004177052527666092
    2. 'i' → logprob: -5.504177093505859
    3. ' ' → logprob: -9.37917709350586
    4. '0' → logprob: -11.62917709350586
    5. '	i' → logprob: -12.87917709350586
    6. '  ' → logprob: -14.25417709350586
    7. '(i' → logprob: -14.37917709350586
    8. ' ' → logprob: -14.50417709350586
    9. '   ' → logprob: -14.87917709350586
    10. '1' → logprob: -15.00417709350586

Token 115: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.33903905749320984
    2. ' >' → logprob: -1.4640390872955322
    3. '<' → logprob: -3.4640390872955322
    4. '>' → logprob: -3.9640390872955322
    5. ' ==' → logprob: -5.839038848876953
    6. '==' → logprob: -6.964038848876953
    7. '<len' → logprob: -7.214038848876953
    8. ' !=' → logprob: -7.714038848876953
    9. ' ' → logprob: -8.214038848876953
    10. '0' → logprob: -8.339038848876953

Token 116: ' n' (ID: 297)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.3134334683418274
    2. ' len' → logprob: -1.3134334087371826
    3. ' n' → logprob: -9.188433647155762
    4. 'n' → logprob: -9.688433647155762
    5. ' ' → logprob: -12.813433647155762
    6. '   ' → logprob: -12.938433647155762
    7. '    ' → logprob: -14.063433647155762
    8. '=len' → logprob: -14.188433647155762
    9. '(len' → logprob: -14.688433647155762
    10. '	len' → logprob: -16.063432693481445

Token 117: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07958799600601196
    2. ':
' → logprob: -2.579587936401367
    3. ' and' → logprob: -8.079587936401367
    4. '):' → logprob: -8.954587936401367
    5. ' :' → logprob: -9.204587936401367
    6. '):
' → logprob: -9.454587936401367
    7. 'and' → logprob: -10.329587936401367
    8. ' :
' → logprob: -10.579587936401367
    9. ')' → logprob: -12.204587936401367
    10. ':

' → logprob: -12.204587936401367

Token 118: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14339560270309448
    2. ' candidates' → logprob: -2.0183956623077393
    3. '   ' → logprob: -8.76839542388916
    4. '       ' → logprob: -9.26839542388916
    5. 'andidates' → logprob: -9.51839542388916
    6. '_candidates' → logprob: -9.51839542388916
    7. ' candidats' → logprob: -9.76839542388916
    8. ' candidatos' → logprob: -10.14339542388916
    9. '	       ' → logprob: -10.26839542388916
    10. '<|end|>' → logprob: -10.39339542388916

Token 119: ' dist' (ID: 3601)
  Prédit: ' candidates'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' candidates' → logprob: -0.24712209403514862
    2. 'c' → logprob: -1.872122049331665
    3. '           ' → logprob: -2.872122049331665
    4. '       ' → logprob: -4.997122287750244
    5. '   ' → logprob: -7.247122287750244
    6. ' c' → logprob: -7.997122287750244
    7. 'cand' → logprob: -8.622121810913086
    8. ' candidats' → logprob: -8.747121810913086
    9. '	c' → logprob: -9.247121810913086
    10. ' candidatos' → logprob: -9.622121810913086

Token 120: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5231464505195618
    2. '=' → logprob: -0.8981464505195618
    3. 's' → logprob: -11.398146629333496
    4. 'ance' → logprob: -12.273146629333496
    5. 'ances' → logprob: -13.398146629333496
    6. ' ' → logprob: -13.773146629333496
    7. '1' → logprob: -14.148146629333496
    8. ',' → logprob: -14.398146629333496
    9. '＝' → logprob: -14.648146629333496
    10. ')' → logprob: -14.898146629333496

Token 121: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.46194496750831604
    2. 'shops' → logprob: -1.0869449377059937
    3. ' shops' → logprob: -3.961945056915283
    4. ' abs' → logprob: -4.336945056915283
    5. 'sh' → logprob: -8.961944580078125
    6. '   ' → logprob: -9.149444580078125
    7. '(abs' → logprob: -9.711944580078125
    8. 'shop' → logprob: -9.899444580078125
    9. ' ' → logprob: -10.461944580078125
    10. 'sho' → logprob: -10.899444580078125

Token 122: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0011722482740879059
    2. '(k' → logprob: -6.751172065734863
    3. '(shop' → logprob: -13.876172065734863
    4. '(sh' → logprob: -15.001172065734863
    5. '((' → logprob: -15.126172065734863
    6. 'k' → logprob: -15.751172065734863
    7. '(d' → logprob: -16.00117301940918
    8. 'shops' → logprob: -16.37617301940918
    9. ' (' → logprob: -16.75117301940918
    10. '(c' → logprob: -17.50117301940918

Token 123: 'shops' (ID: 25850)
  Prédit: 'shops'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shops' → logprob: -0.031214501708745956
    2. 'k' → logprob: -3.781214475631714
    3. '(' → logprob: -5.156214714050293
    4. ' shops' → logprob: -6.281214714050293
    5. ' k' → logprob: -8.906214714050293
    6. '(k' → logprob: -9.281214714050293
    7. 'sh' → logprob: -11.156214714050293
    8. 'shop' → logprob: -11.906214714050293
    9. '(sh' → logprob: -11.906214714050293
    10. 'ships' → logprob: -12.031214714050293

Token 124: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.2664456789934775e-06
    2. '[' → logprob: -13.875000953674316
    3. '[k' → logprob: -16.250001907348633
    4. 'i' → logprob: -16.625001907348633
    5. '   ' → logprob: -17.750001907348633
    6. '[I' → logprob: -18.125001907348633
    7. '[index' → logprob: -18.250001907348633
    8. ' [' → logprob: -18.250001907348633
    9. '[-' → logprob: -18.375001907348633
    10. '[idx' → logprob: -18.500001907348633

Token 125: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.11296915262937546
    2. '-' → logprob: -2.237969160079956
    3. '-k' → logprob: -8.987969398498535
    4. ' ' → logprob: -10.862969398498535
    5. '   ' → logprob: -14.237969398498535
    6. ')' → logprob: -15.112969398498535
    7. ' ' → logprob: -15.362969398498535
    8. '[' → logprob: -15.487969398498535
    9. '  ' → logprob: -15.987969398498535
    10. 'k' → logprob: -15.987969398498535

Token 126: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.17999796569347382
    2. '-' → logprob: -1.8049979209899902
    3. '-k' → logprob: -8.304998397827148
    4. ' ' → logprob: -12.304998397827148
    5. ' ' → logprob: -14.804998397827148
    6. '   ' → logprob: -15.179998397827148
    7. '  ' → logprob: -15.804998397827148
    8. 'k' → logprob: -16.42999839782715
    9. '−' → logprob: -16.55499839782715
    10. '–' → logprob: -16.67999839782715

Token 127: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0007100477814674377
    2. ' k' → logprob: -7.2507100105285645
    3. '	k' → logprob: -17.500709533691406
    4. ' к' → logprob: -18.625709533691406
    5. ')' → logprob: -19.125709533691406
    6. ',k' → logprob: -19.375709533691406
    7. '<|end|>' → logprob: -20.125709533691406
    8. '   ' → logprob: -20.500709533691406
    9. ' ' → logprob: -20.500709533691406
    10. '=k' → logprob: -20.875709533691406

Token 128: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.012559212744235992
    2. ')
' → logprob: -4.387559413909912
    3. ' )' → logprob: -10.512558937072754
    4. ')
' → logprob: -11.512558937072754
    5. ' )
' → logprob: -12.887558937072754
    6. ')`' → logprob: -12.887558937072754
    7. '))' → logprob: -13.012558937072754
    8. ')

' → logprob: -13.387558937072754
    9. ')**' → logprob: -14.512558937072754
    10. ')`
' → logprob: -14.637558937072754

Token 129: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 130: ' dist' (ID: 3601)
  Prédit: ' candidates'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' candidates' → logprob: -0.027866754680871964
    2. 'c' → logprob: -3.652866840362549
    3. '           ' → logprob: -7.402866840362549
    4. '       ' → logprob: -7.902866840362549
    5. ' if' → logprob: -8.90286636352539
    6. '_candidates' → logprob: -9.27786636352539
    7. '
' → logprob: -9.40286636352539
    8. 'candidate' → logprob: -10.02786636352539
    9. ' candidats' → logprob: -10.15286636352539
    10. '   ' → logprob: -10.27786636352539

Token 131: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.1528112888336182
    2. '_candidates' → logprob: -1.7778112888336182
    3. '<|end|>' → logprob: -2.027811288833618
    4. ',' → logprob: -2.027811288833618
    5. ' <' → logprob: -3.027811288833618
    6. ' <=' → logprob: -3.152811288833618
    7. ')' → logprob: -3.527811288833618
    8. ' =' → logprob: -3.527811288833618
    9. '   ' → logprob: -4.152811050415039
    10. ' candidates' → logprob: -4.277811050415039

Token 132: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.04976673796772957
    2. ' min' → logprob: -3.549766778945923
    3. 'abs' → logprob: -4.924766540527344
    4. 'max' → logprob: -4.924766540527344
    5. 'dist' → logprob: -5.549766540527344
    6. ' abs' → logprob: -8.174766540527344
    7. 'd' → logprob: -8.299766540527344
    8. '0' → logprob: -8.549766540527344
    9. ' dist' → logprob: -8.924766540527344
    10. ' max' → logprob: -8.924766540527344

Token 133: '(dist' (ID: 78981)
  Prédit: '(dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dist' → logprob: -0.005071637220680714
    2. '(' → logprob: -6.380071640014648
    3. '(res' → logprob: -6.505071640014648
    4. 'dist' → logprob: -6.755071640014648
    5. '(distance' → logprob: -7.880071640014648
    6. '(abs' → logprob: -9.005071640014648
    7. ' (' → logprob: -9.755071640014648
    8. '(d' → logprob: -9.880071640014648
    9. ' dist' → logprob: -10.255071640014648
    10. ',' → logprob: -11.255071640014648

Token 134: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002147642895579338
    2. ' ,' → logprob: -6.752147674560547
    3. ',res' → logprob: -7.127147674560547
    4. ',d' → logprob: -9.502147674560547
    5. 'res' → logprob: -10.252147674560547
    6. ')' → logprob: -11.127147674560547
    7. ',
' → logprob: -11.877147674560547
    8. '),' → logprob: -12.002147674560547
    9. 'd' → logprob: -12.627147674560547
    10. 'abs' → logprob: -12.752147674560547

Token 135: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.16991087794303894
    2. 'abs' → logprob: -2.0449109077453613
    3. ' d' → logprob: -4.169910907745361
    4. 'k' → logprob: -5.544910907745361
    5. ' abs' → logprob: -6.044910907745361
    6. 'shops' → logprob: -6.419910907745361
    7. '2' → logprob: -7.044910907745361
    8. '(d' → logprob: -7.419910907745361
    9. ' ' → logprob: -7.544910907745361
    10. '(abs' → logprob: -7.794910907745361

Token 136: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05463320389389992
    2. ' -' → logprob: -3.179633140563965
    3. ' )' → logprob: -4.929633140563965
    4. '-' → logprob: -5.679633140563965
    5. '*' → logprob: -8.554633140563965
    6. ' +' → logprob: -8.554633140563965
    7. '+' → logprob: -8.554633140563965
    8. ' *' → logprob: -9.429633140563965
    9. ')
' → logprob: -9.929633140563965
    10. '))' → logprob: -10.054633140563965

Token 137: ' dist' (ID: 3601)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.2881184220314026
    2. 'dist' → logprob: -1.4131183624267578
    3. ' abs' → logprob: -5.538118362426758
    4. '(abs' → logprob: -6.163118362426758
    5. ' dist' → logprob: -7.413118362426758
    6. '(dist' → logprob: -9.038118362426758
    7. ' (' → logprob: -9.663118362426758
    8. ')' → logprob: -10.038118362426758
    9. '(' → logprob: -10.163118362426758
    10. '	dist' → logprob: -12.288118362426758

Token 138: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12699225544929504
    2. ')
' → logprob: -2.1269922256469727
    3. ')
' → logprob: -10.626992225646973
    4. ' )' → logprob: -10.876992225646973
    5. ' )
' → logprob: -11.501992225646973
    6. '       ' → logprob: -12.001992225646973
    7. '           ' → logprob: -12.876992225646973
    8. ')

' → logprob: -13.501992225646973
    9. '))' → logprob: -15.751992225646973
    10. '),' → logprob: -16.12699317932129

Token 139: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00029852005536668
    2. ' candidates' → logprob: -8.625298500061035
    3. 'c' → logprob: -10.250298500061035
    4. '       ' → logprob: -10.750298500061035
    5. ')' → logprob: -10.875298500061035
    6. '<|end|>' → logprob: -11.125298500061035
    7. ',' → logprob: -11.625298500061035
    8. '
' → logprob: -12.500298500061035
    9. '            
' → logprob: -12.875298500061035
    10. '   ' → logprob: -12.875298500061035

Token 140: ' candidates' (ID: 18116)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3996243178844452
    2. 'c' → logprob: -1.3996243476867676
    3. ' candidates' → logprob: -2.5246243476867676
    4. '       ' → logprob: -6.274624347686768
    5. ' c' → logprob: -7.774624347686768
    6. '   ' → logprob: -8.77462387084961
    7. '
' → logprob: -9.89962387084961
    8. '_candidates' → logprob: -10.39962387084961
    9. 'candidate' → logprob: -10.64962387084961
    10. '	c' → logprob: -11.02462387084961

Token 141: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0007283978629857302
    2. '.' → logprob: -7.250728607177734
    3. ' .' → logprob: -11.875728607177734
    4. '.extend' → logprob: -12.375728607177734
    5. '.ap' → logprob: -13.125728607177734
    6. '.app' → logprob: -13.375728607177734
    7. '.add' → logprob: -13.500728607177734
    8. '.push' → logprob: -14.375728607177734
    9. '.setdefault' → logprob: -14.500728607177734
    10. '.py' → logprob: -14.750728607177734

Token 142: '(dist' (ID: 78981)
  Prédit: '(dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dist' → logprob: -0.0026509284507483244
    2. '((' → logprob: -6.002650737762451
    3. 'dist' → logprob: -8.75265121459961
    4. '(' → logprob: -11.12765121459961
    5. '(abs' → logprob: -14.62765121459961
    6. ' (' → logprob: -14.75265121459961
    7. ' dist' → logprob: -15.12765121459961
    8. '(distance' → logprob: -15.37765121459961
    9. '(diff' → logprob: -15.50265121459961
    10. '(dis' → logprob: -16.25265121459961

Token 143: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10116081684827805
    2. ')
' → logprob: -2.351160764694214
    3. '       ' → logprob: -6.976161003112793
    4. ')
' → logprob: -11.851161003112793
    5. ' )' → logprob: -12.476161003112793
    6. '   ' → logprob: -12.726161003112793
    7. ')

' → logprob: -12.976161003112793
    8. ' )
' → logprob: -13.351161003112793
    9. '<|end|>' → logprob: -14.351161003112793
    10. ')`
' → logprob: -15.976161003112793

Token 144: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007633008528500795
    2. '   ' → logprob: -6.257633209228516
    3. 'if' → logprob: -6.507633209228516
    4. ')' → logprob: -6.632633209228516
    5. '<|end|>' → logprob: -6.757633209228516
    6. ' if' → logprob: -7.007633209228516
    7. '	' → logprob: -8.007633209228516
    8. '​' → logprob: -9.382633209228516
    9. '```' → logprob: -9.882633209228516
    10. ' ' → logprob: -10.257633209228516

Token 145: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.045059770345687866
    2. ' if' → logprob: -3.1700596809387207
    3. ' 
' → logprob: -7.295059680938721
    4. '       ' → logprob: -7.420059680938721
    5. ' ' → logprob: -8.045060157775879
    6. '   ' → logprob: -8.170060157775879
    7. '	if' → logprob: -9.420060157775879
    8. '
' → logprob: -10.670060157775879
    9. '        
' → logprob: -11.545060157775879
    10. ' ' → logprob: -11.795060157775879

Token 146: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0038182490970939398
    2. 'i' → logprob: -5.628818035125732
    3. ' ' → logprob: -8.50381851196289
    4. '0' → logprob: -11.37881851196289
    5. '	i' → logprob: -13.00381851196289
    6. '(i' → logprob: -14.62881851196289
    7. ' ' → logprob: -14.62881851196289
    8. '1' → logprob: -16.19131851196289
    9. '>' → logprob: -16.25381851196289
    10. '  ' → logprob: -16.31631851196289

Token 147: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.18034550547599792
    2. '>' → logprob: -1.8053455352783203
    3. '-' → logprob: -7.55534553527832
    4. ' -' → logprob: -9.80534553527832
    5. ' ' → logprob: -11.93034553527832
    6. '<|end|>' → logprob: -12.05534553527832
    7. ' ' → logprob: -12.55534553527832
    8. '0' → logprob: -13.68034553527832
    9. '&gt' → logprob: -14.05534553527832
    10. '```' → logprob: -14.18034553527832

Token 148: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06993921101093292
    2. ' ' → logprob: -2.694939136505127
    3. '<|end|>' → logprob: -13.069939613342285
    4. '  ' → logprob: -15.194939613342285
    5. '   ' → logprob: -15.819939613342285
    6. ' ' → logprob: -16.25743865966797
    7. '=' → logprob: -17.06993865966797
    8. '۰' → logprob: -17.31993865966797
    9. '    ' → logprob: -17.38243865966797
    10. '<|end|>' → logprob: -17.69493865966797

Token 149: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00017958412354346365
    2. ' ' → logprob: -8.625179290771484
    3. '<|end|>' → logprob: -17.500179290771484
    4. '  ' → logprob: -18.750179290771484
    5. '   ' → logprob: -19.312679290771484
    6. '۰' → logprob: -19.375179290771484
    7. '=' → logprob: -19.687679290771484
    8. '1' → logprob: -20.500179290771484
    9. '    ' → logprob: -20.625179290771484
    10. ' ' → logprob: -20.687679290771484

Token 150: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03823380917310715
    2. ':
' → logprob: -3.288233757019043
    3. '       ' → logprob: -9.413233757019043
    4. '<|end|>' → logprob: -9.413233757019043
    5. '           ' → logprob: -11.413233757019043
    6. ' :' → logprob: -12.163233757019043
    7. '<|end|>' → logprob: -13.038233757019043
    8. ' :
' → logprob: -13.163233757019043
    9. ':

' → logprob: -13.288233757019043
    10. ',' → logprob: -13.413233757019043

Token 151: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2834320366382599
    2. '           ' → logprob: -1.5334320068359375
    3. '<|end|>' → logprob: -4.1584320068359375
    4. ':
' → logprob: -5.5334320068359375
    5. '```' → logprob: -5.7834320068359375
    6. ':' → logprob: -6.4084320068359375
    7. '{
' → logprob: -6.5334320068359375
    8. '   ' → logprob: -6.5334320068359375
    9. '	       ' → logprob: -7.0334320068359375
    10. '<|end|>' → logprob: -7.7834320068359375

Token 152: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.026390748098492622
    2. ' dist' → logprob: -3.651390790939331
    3. '           ' → logprob: -9.90139102935791
    4. '	dist' → logprob: -11.02639102935791
    5. '       ' → logprob: -11.27639102935791
    6. '   ' → logprob: -12.40139102935791
    7. '
' → logprob: -12.52639102935791
    8. '```' → logprob: -13.02639102935791
    9. '.dist' → logprob: -15.15139102935791
    10. '(dist' → logprob: -15.65139102935791

Token 153: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02975141443312168
    2. '=' → logprob: -3.5297513008117676
    3. ' ' → logprob: -14.154751777648926
    4. ' ' → logprob: -16.15475082397461
    5. '＝' → logprob: -18.15475082397461
    6. ' =)' → logprob: -18.15475082397461
    7. ' +=' → logprob: -18.27975082397461
    8. '   ' → logprob: -18.40475082397461
    9. '<|end|>' → logprob: -18.40475082397461
    10. '	' → logprob: -18.77975082397461

Token 154: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.03811412677168846
    2. ' abs' → logprob: -3.288114070892334
    3. 'min' → logprob: -9.913114547729492
    4. ' min' → logprob: -11.413114547729492
    5. '(abs' → logprob: -11.538114547729492
    6. '   ' → logprob: -14.538114547729492
    7. '.abs' → logprob: -14.663114547729492
    8. ' ' → logprob: -14.663114547729492
    9. '```' → logprob: -16.038114547729492
    10. '       ' → logprob: -16.163114547729492

Token 155: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0019295861711725593
    2. '(k' → logprob: -6.251929759979248
    3. '(sh' → logprob: -14.50192928314209
    4. '((' → logprob: -15.50192928314209
    5. 'k' → logprob: -15.62692928314209
    6. '(shop' → logprob: -15.87692928314209
    7. ' (' → logprob: -18.376930236816406
    8. '(
' → logprob: -18.751930236816406
    9. '(s' → logprob: -18.751930236816406
    10. 'shops' → logprob: -18.876930236816406

Token 156: 'shops' (ID: 25850)
  Prédit: 'shops'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shops' → logprob: -0.014359532855451107
    2. 'k' → logprob: -4.264359474182129
    3. '(' → logprob: -8.889359474182129
    4. ' shops' → logprob: -10.389359474182129
    5. '   ' → logprob: -12.139359474182129
    6. 'ships' → logprob: -12.389359474182129
    7. ' k' → logprob: -12.764359474182129
    8. 'sho' → logprob: -13.264359474182129
    9. 'sh' → logprob: -13.264359474182129
    10. '(k' → logprob: -13.389359474182129

Token 157: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.012701291590929031
    2. '[k' → logprob: -4.387701511383057
    3. '[' → logprob: -8.637701034545898
    4. 'k' → logprob: -11.637701034545898
    5. 'i' → logprob: -13.887701034545898
    6. '[(' → logprob: -14.012701034545898
    7. '[-' → logprob: -14.012701034545898
    8. '[j' → logprob: -14.387701034545898
    9. '[n' → logprob: -15.262701034545898
    10. ')' → logprob: -15.512701034545898

Token 158: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.014164921827614307
    2. ' -' → logprob: -4.264164924621582
    3. '1' → logprob: -14.639164924621582
    4. '−' → logprob: -15.014164924621582
    5. '   ' → logprob: -15.764164924621582
    6. ' ' → logprob: -15.764164924621582
    7. '[' → logprob: -15.889164924621582
    8. '```' → logprob: -16.639163970947266
    9. '–' → logprob: -16.889163970947266
    10. ']' → logprob: -17.389163970947266

Token 159: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.707997428951785e-05
    2. ' ' → logprob: -9.500077247619629
    3. '   ' → logprob: -14.000077247619629
    4. '```' → logprob: -14.812577247619629
    5. ')' → logprob: -15.687577247619629
    6. ']' → logprob: -15.812577247619629
    7. '
' → logprob: -16.125076293945312
    8. '  ' → logprob: -16.187576293945312
    9. '       ' → logprob: -16.687576293945312
    10. '...' → logprob: -16.812576293945312

Token 160: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001422770437784493
    2. ' ' → logprob: -8.875142097473145
    3. ')' → logprob: -14.062642097473145
    4. '   ' → logprob: -15.062642097473145
    5. ']' → logprob: -15.187642097473145
    6. '  ' → logprob: -16.12514305114746
    7. '```' → logprob: -16.12514305114746
    8. '...' → logprob: -16.50014305114746
    9. '۱' → logprob: -16.68764305114746
    10. '-' → logprob: -16.68764305114746

Token 161: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0059433747082948685
    2. '-' → logprob: -5.130943298339844
    3. ' ' → logprob: -11.255943298339844
    4. '-k' → logprob: -14.255943298339844
    5. ']' → logprob: -15.005943298339844
    6. '   ' → logprob: -15.505943298339844
    7. ' ' → logprob: -15.755943298339844
    8. ')' → logprob: -15.755943298339844
    9. ',' → logprob: -16.130943298339844
    10. '  ' → logprob: -16.755943298339844

Token 162: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.008661605417728424
    2. '-' → logprob: -4.75866174697876
    3. ' ' → logprob: -10.133661270141602
    4. '-k' → logprob: -12.258661270141602
    5. ' ' → logprob: -13.758661270141602
    6. '   ' → logprob: -15.008661270141602
    7. '  ' → logprob: -15.383661270141602
    8. ' -
' → logprob: -15.508661270141602
    9. '    ' → logprob: -15.633661270141602
    10. '	' → logprob: -16.2586612701416

Token 163: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.04858839511871338
    2. ' k' → logprob: -3.048588275909424
    3. '<|end|>' → logprob: -14.548588752746582
    4. '	k' → logprob: -15.923588752746582
    5. ',k' → logprob: -16.423587799072266
    6. '```' → logprob: -16.423587799072266
    7. ' к' → logprob: -16.548587799072266
    8. ')' → logprob: -17.048587799072266
    9. ' ' → logprob: -17.673587799072266
    10. '_k' → logprob: -17.798587799072266

Token 164: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.02326807752251625
    2. ')' → logprob: -3.773267984390259
    3. ')
' → logprob: -11.02326774597168
    4. ' )
' → logprob: -13.27326774597168
    5. '       ' → logprob: -13.39826774597168
    6. '           ' → logprob: -13.64826774597168
    7. ')

' → logprob: -13.77326774597168
    8. '```' → logprob: -14.89826774597168
    9. '   ' → logprob: -16.02326774597168
    10. ')d' → logprob: -16.14826774597168

Token 165: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06962904334068298
    2. 'dist' → logprob: -2.944628953933716
    3. ' dist' → logprob: -4.444629192352295
    4. '       ' → logprob: -6.444629192352295
    5. '
' → logprob: -7.069629192352295
    6. '```' → logprob: -9.069628715515137
    7. '<|end|>' → logprob: -9.194628715515137
    8. '   ' → logprob: -9.319628715515137
    9. '	dist' → logprob: -9.694628715515137
    10. '               ' → logprob: -10.694628715515137

Token 166: ' dist' (ID: 3601)
  Prédit: ' dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.009035350754857063
    2. 'dist' (adapté à ' dist') → logprob: -5.009035587310791
    3. '           ' → logprob: -6.509035587310791
    4. '            ' → logprob: -7.259035587310791
    5. ' ' → logprob: -10.509035110473633
    6. ' ' → logprob: -10.509035110473633
    7. '	dist' → logprob: -10.634035110473633
    8. '    ' → logprob: -11.384035110473633
    9. '```' → logprob: -12.134035110473633
    10. '        ' → logprob: -12.134035110473633

Token 167: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10020871460437775
    2. '=' → logprob: -2.3502087593078613
    3. ' ' → logprob: -13.725208282470703
    4. '           ' → logprob: -14.725208282470703
    5. '   ' → logprob: -15.350208282470703
    6. '```' → logprob: -16.600208282470703
    7. '       ' → logprob: -16.850208282470703
    8. '<|end|>' → logprob: -17.225208282470703
    9. '    ' → logprob: -17.600208282470703
    10. ' ' → logprob: -17.600208282470703

Token 168: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.16022706031799316
    2. 'min' → logprob: -1.9102270603179932
    3. ' max' → logprob: -14.410226821899414
    4. 'max' → logprob: -14.910226821899414
    5. '	min' → logprob: -14.910226821899414
    6. '(min' → logprob: -14.910226821899414
    7. '[min' → logprob: -14.910226821899414
    8. ' ' → logprob: -15.285226821899414
    9. ' ' → logprob: -15.285226821899414
    10. '=min' → logprob: -15.910226821899414

Token 169: '(dist' (ID: 78981)
  Prédit: '(dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dist' → logprob: -3.810037742368877e-05
    2. '(' → logprob: -10.250038146972656
    3. 'dist' → logprob: -12.875038146972656
    4. '(distance' → logprob: -17.000038146972656
    5. '	dist' → logprob: -18.875038146972656
    6. '(dis' → logprob: -18.875038146972656
    7. ' (' → logprob: -19.000038146972656
    8. '(
' → logprob: -19.125038146972656
    9. '(diff' → logprob: -19.625038146972656
    10. '(div' → logprob: -19.875038146972656

Token 170: ',' (ID: 11)
  Prédit: '(dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dist' → logprob: -0.10208950936794281
    2. ',' → logprob: -2.3520894050598145
    3. '(' → logprob: -6.6020894050598145
    4. 'dist' → logprob: -7.6020894050598145
    5. ',(' → logprob: -11.852089881896973
    6. ' ,' → logprob: -11.852089881896973
    7. ' (' → logprob: -12.852089881896973
    8. '(d' → logprob: -13.227089881896973
    9. ',d' → logprob: -13.227089881896973
    10. '(distance' → logprob: -14.102089881896973

Token 171: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.06994488090276718
    2. 'd' → logprob: -2.6949448585510254
    3. ' ' → logprob: -12.069945335388184
    4. ' ' → logprob: -13.194945335388184
    5. ')' → logprob: -15.569945335388184
    6. '	d' → logprob: -15.819945335388184
    7. ')d' → logprob: -15.819945335388184
    8. '```' → logprob: -16.069944381713867
    9. '    ' → logprob: -16.757444381713867
    10. '
' → logprob: -17.007444381713867

Token 172: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.048628583550453186
    2. '-' → logprob: -3.048628568649292
    3. '-dist' → logprob: -10.173628807067871
    4. ' ' → logprob: -13.298628807067871
    5. ' ' → logprob: -14.423628807067871
    6. ' -
' → logprob: -15.423628807067871
    7. 'dist' → logprob: -15.673628807067871
    8. '-d' → logprob: -15.673628807067871
    9. '-
' → logprob: -16.548627853393555
    10. ')' → logprob: -17.423627853393555

Token 173: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0005530327325686812
    2. ' dist' → logprob: -7.500553131103516
    3. '	dist' → logprob: -17.000553131103516
    4. '(dist' → logprob: -17.125553131103516
    5. '.dist' → logprob: -19.250553131103516
    6. 'diff' → logprob: -19.375553131103516
    7. '_dist' → logprob: -19.500553131103516
    8. ' ' → logprob: -19.875553131103516
    9. ')' → logprob: -20.250553131103516
    10. 'Dist' → logprob: -20.750553131103516

Token 174: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.04918506741523743
    2. ')' → logprob: -3.049185037612915
    3. '           ' → logprob: -7.549185276031494
    4. ')
' → logprob: -10.174184799194336
    5. '       ' → logprob: -11.174184799194336
    6. ' )
' → logprob: -11.549184799194336
    7. ')

' → logprob: -11.799184799194336
    8. '               ' → logprob: -13.799184799194336
    9. ' )' → logprob: -15.549184799194336
    10. '          ' → logprob: -16.674184799194336

Token 175: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00692399637773633
    2. '       ' → logprob: -5.006924152374268
    3. ' candidates' → logprob: -9.13192367553711
    4. 'c' → logprob: -9.50692367553711
    5. '   ' → logprob: -11.13192367553711
    6. '               ' → logprob: -12.25692367553711
    7. '          ' → logprob: -13.38192367553711
    8. '	       ' → logprob: -14.38192367553711
    9. 'candidate' → logprob: -14.38192367553711
    10. '_candidates' → logprob: -14.50692367553711

Token 176: ' candidates' (ID: 18116)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.020671749487519264
    2. ' candidates' → logprob: -3.895671844482422
    3. '       ' → logprob: -9.895671844482422
    4. '           ' → logprob: -10.020671844482422
    5. '   ' → logprob: -10.520671844482422
    6. '	c' → logprob: -12.895671844482422
    7. ' ' → logprob: -13.395671844482422
    8. '_candidates' → logprob: -14.270671844482422
    9. 'cand' → logprob: -14.645671844482422
    10. ' c' → logprob: -14.770671844482422

Token 177: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.18004684150218964
    2. '.' → logprob: -1.805046796798706
    3. '.setdefault' → logprob: -9.305047035217285
    4. '.app' → logprob: -9.555047035217285
    5. '<|end|>' → logprob: -9.555047035217285
    6. '.extend' → logprob: -10.555047035217285
    7. ' .' → logprob: -11.180047035217285
    8. '.add' → logprob: -12.055047035217285
    9. '.Append' → logprob: -12.305047035217285
    10. '>.' → logprob: -12.680047035217285

Token 178: '(dist' (ID: 78981)
  Prédit: '(dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dist' → logprob: -9.088346359931165e-07
    2. 'dist' → logprob: -14.000000953674316
    3. '(' → logprob: -17.0
    4. '(distance' → logprob: -18.625
    5. '(
' → logprob: -19.125
    6. '(dis' → logprob: -20.25
    7. '(div' → logprob: -20.625
    8. '(diff' → logprob: -20.75
    9. '	dist' → logprob: -20.875
    10. '(abs' → logprob: -21.0

Token 179: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8695008754730225
    2. ')
' → logprob: -1.1195008754730225
    3. '       ' → logprob: -1.3695008754730225
    4. '   ' → logprob: -9.119501113891602
    5. ')
' → logprob: -10.869501113891602
    6. '
' → logprob: -11.744501113891602
    7. ')

' → logprob: -11.869501113891602
    8. '<|end|>' → logprob: -12.244501113891602
    9. '	' → logprob: -12.869501113891602
    10. '()' → logprob: -13.119501113891602

Token 180: '       ' (ID: 309)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.4722783863544464
    2. '   ' → logprob: -1.222278356552124
    3. '       ' → logprob: -3.097278356552124
    4. ' res' → logprob: -4.097278594970703
    5. 'print' → logprob: -4.222278594970703
    6. '
' → logprob: -5.972278594970703
    7. '```' → logprob: -6.097278594970703
    8. '<|end|>' → logprob: -8.347278594970703
    9. '    
' → logprob: -9.222278594970703
    10. '	res' → logprob: -9.972278594970703

Token 181: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.0033219612669199705
    2. 'if' → logprob: -6.753322124481201
    3. '   ' → logprob: -6.878322124481201
    4. ' res' → logprob: -7.378322124481201
    5. '
' → logprob: -8.378321647644043
    6. '       ' → logprob: -8.753321647644043
    7. '```' → logprob: -10.003321647644043
    8. 'print' → logprob: -10.128321647644043
    9. ' if' → logprob: -11.628321647644043
    10. 'min' → logprob: -12.878321647644043

Token 182: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.47427839040756226
    2. '+=' → logprob: -0.9742783904075623
    3. ' =' → logprob: -8.849278450012207
    4. '=' → logprob: -10.349278450012207
    5. '+' → logprob: -11.349278450012207
    6. ']+=' → logprob: -12.599278450012207
    7. 'max' → logprob: -12.724278450012207
    8. '=max' → logprob: -12.849278450012207
    9. '+=(' → logprob: -13.224278450012207
    10. '++' → logprob: -15.099278450012207

Token 183: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.008616461418569088
    2. ' min' → logprob: -4.7586164474487305
    3. 'max' → logprob: -13.25861644744873
    4. '(min' → logprob: -16.258617401123047
    5. 'sum' → logprob: -18.258617401123047
    6. '	min' → logprob: -18.633617401123047
    7. 'minimum' → logprob: -19.508617401123047
    8. ' ' → logprob: -19.633617401123047
    9. ' max' → logprob: -19.758617401123047
    10. 'mi' → logprob: -20.383617401123047

Token 184: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -2.4391956685576588e-05
    2. 'c' → logprob: -10.750024795532227
    3. '(' → logprob: -13.250024795532227
    4. '(candidate' → logprob: -14.000024795532227
    5. ' (' → logprob: -15.625024795532227
    6. '_candidates' → logprob: -16.375024795532227
    7. '(
' → logprob: -18.625024795532227
    8. ' candidates' → logprob: -18.625024795532227
    9. ')c' → logprob: -19.000024795532227
    10. '	c' → logprob: -19.125024795532227

Token 185: 'andidates' (ID: 38168)
  Prédit: 'andidates'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'andidates' → logprob: -0.0004341261519584805
    2. 'and' → logprob: -7.750433921813965
    3. 'andid' → logprob: -13.250433921813965
    4. 'andidate' → logprob: -14.500433921813965
    5. 'andi' → logprob: -14.750433921813965
    6. '_candidates' → logprob: -15.125433921813965
    7. 'an' → logprob: -15.625433921813965
    8. ')' → logprob: -15.625433921813965
    9. ' candidates' → logprob: -16.75043487548828
    10. 'c' → logprob: -16.75043487548828

Token 186: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0017409856664016843
    2. ')
' → logprob: -6.5017409324646
    3. '())' → logprob: -8.626741409301758
    4. ')

' → logprob: -10.626741409301758
    5. '()' → logprob: -10.751741409301758
    6. ' )' → logprob: -12.751741409301758
    7. '<|end|>' → logprob: -13.126741409301758
    8. '```' → logprob: -13.251741409301758
    9. '())
' → logprob: -13.501741409301758
    10. '   ' → logprob: -13.751741409301758

Token 187: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.20200243592262268
    2. '   ' → logprob: -1.7020024061203003
    3. '
' → logprob: -8.07700252532959
    4. ' print' → logprob: -8.45200252532959
    5. '    
' → logprob: -10.07700252532959
    6. '```' → logprob: -11.32700252532959
    7. '	print' → logprob: -12.07700252532959
    8. '  
' → logprob: -13.45200252532959
    9. '
' → logprob: -13.70200252532959
    10. ' 
' → logprob: -13.95200252532959

Token 188: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.006406738888472319
    2. '   ' → logprob: -5.256406784057617
    3. ' print' → logprob: -6.756406784057617
    4. '
' → logprob: -11.881406784057617
    5. '```' → logprob: -13.881406784057617
    6. '	print' → logprob: -14.506406784057617
    7. '    
' → logprob: -15.131406784057617
    8. ' 
' → logprob: -16.506406784057617
    9. '(print' → logprob: -17.506406784057617
    10. '
' → logprob: -17.506406784057617

Token 189: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.0003467865171842277
    2. '(' → logprob: -8.000347137451172
    3. '(f' → logprob: -11.500347137451172
    4. ' (' → logprob: -14.125347137451172
    5. '('' → logprob: -15.625347137451172
    6. '()' → logprob: -16.500347137451172
    7. '(re' → logprob: -17.250347137451172
    8. '(round' → logprob: -17.375347137451172
    9. '(rest' → logprob: -17.750347137451172
    10. 'res' → logprob: -17.875347137451172

Token 190: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.747814349073451e-05
    2. ' )' → logprob: -11.000017166137695
    3. ')
' → logprob: -15.500017166137695
    4. ')`' → logprob: -15.500017166137695
    5. '())' → logprob: -15.750017166137695
    6. '`)' → logprob: -16.125017166137695
    7. '))' → logprob: -16.500017166137695
    8. '```' → logprob: -17.250017166137695
    9. '*' → logprob: -17.625017166137695
    10. '')' → logprob: -17.750017166137695


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 188
Tokens correctement prédits (1ère position, stricte): 93
Tokens correctement prédits (1ère position, avec adaptation): 102
Tokens correctement prédits (top 10): 167
Précision stricte (1ère position): 49.47%
Précision adaptée (1ère position): 54.26%
Précision (top 10): 88.83%
================================================================================
