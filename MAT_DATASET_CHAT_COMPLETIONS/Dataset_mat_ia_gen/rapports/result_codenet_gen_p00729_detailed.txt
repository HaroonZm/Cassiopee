================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:01:32
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Programme complet Python pour le problème d'analyse des connexions/déconnexions des PCs

import sys
import bisect

def merge_intervals(intervals):
    """
    Fusionne une liste d'intervalles (déjà triés par début) en un ensemble minimal d'intervalles
    sans chevauchement.
    """
    if not intervals:
        return []
    merged = []
    current_start, current_end = intervals[0]
    for start, end in intervals[1:]:
        if start <= current_end:
            # chevauchement, on étend la fin
            current_end = max(current_end, end)
        else:
            # pas de chevauchement, on stocke l'ancien intervalle et on démarre un nouveau
            merged.append((current_start, current_end))
            current_start, current_end = start, end
    merged.append((current_start, current_end))
    return merged

def interval_overlap(interval1, interval2):
    """
    Calcule la durée de recouvrement entre deux intervalles (start, end).
    Renvoie 0 si pas de recouvrement.
    """
    s1, e1 = interval1
    s2, e2 = interval2
    start = max(s1, s2)
    end = min(e1, e2)
    return max(0, end - start)

def usage_in_period(intervals, query_start, query_end):
    """
    Calcule la somme des durées des intervalles d'usage (sans chevauchement)
    recouvrant la période [query_start, query_end).
    Les intervals sont une liste triée d'intervalles (start, end).
    """
    total = 0
    # Parcourir les intervalles ordonnés qui peuvent chevaucher la période demandée
    # On peut utiliser bisect pour optimiser la recherche
    # Chercher la première intervalle qui peut commencer avant query_end
    i = bisect.bisect_left(intervals, (query_end, ))
    # On regarde les intervalles avant cet indice (car ils peuvent chevaucher)
    for interval in intervals[max(i-10,0):i+10]:
        if interval[1] < query_start:
            continue
        total += interval_overlap(interval, (query_start, query_end))
    return total

def main():
    input = sys.stdin.readline
    while True:
        line = input()
        if not line:
            break
        N_M = line.strip()
        if N_M == '':
            continue
        N, M = map(int, N_M.split())
        # Condition d'arrêt
        if N == 0 and M == 0:
            break

        r = int(input())  # nombre d'enregistrements
        # dictionnaire pour stocker les connexions en cours par PC
        # et aussi stocker les intervals par étudiant
        # pc_login : key = pc, value = (student, start_time)
        pc_login = {}
        # Pour chaque étudiant, une liste d'intervalles cumulés sur tous les PCs
        student_intervals = {m: [] for m in range(1, M+1)}

        for _ in range(r):
            t, n, m, s = map(int, input().split())
            if s == 1:
                # login
                pc_login[n] = (m, t)
            else:
                # logout
                # récupérer l'étudiant qui était connecté
                logged_student, start_time = pc_login.pop(n)
                # historique de cet étudiant : ajouter intervalle
                # s'assure que c'est bien le même étudiant selon l'énoncé
                assert logged_student == m
                student_intervals[m].append((start_time, t))

        # On fusionne les intervalles pour chaque étudiant afin de gérer le multi-PC
        for m in student_intervals:
            student_intervals[m] = merge_intervals(sorted(student_intervals[m]))

        q = int(input())  # nombre de queries
        for _ in range(q):
            ts, te, m = map(int, input().split())
            # Calculer le temps d'usage du student m entre ts et te
            ans = usage_in_period(student_intervals.get(m, []), ts, te)
            print(ans)


if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Programme' (ID: 50667)
  → Token d'amorce (pas de prédiction)

Token 2: ' complet' (ID: 5127)
  → Token d'amorce (pas de prédiction)

Token 3: ' Python' (ID: 26534)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.7069202065467834
    2. ':' → logprob: -1.3319201469421387
    3. '\n' → logprob: -2.5819201469421387
    4. ' :' → logprob: -2.9569201469421387
    5. '#' → logprob: -3.2069201469421387
    6. '\' → logprob: -3.9569201469421387
    7. '
' → logprob: -4.706920146942139
    8. '

' → logprob: -5.206920146942139
    9. ''''' → logprob: -5.331920146942139
    10. '`' → logprob: -5.581920146942139

Token 4: ' pour' (ID: 1930)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.0211186408996582
    2. '#' → logprob: -1.2711186408996582
    3. '\' → logprob: -1.3961186408996582
    4. '
' → logprob: -3.521118640899658
    5. ':' → logprob: -3.646118640899658
    6. '```' → logprob: -3.771118640899658
    7. '

' → logprob: -4.771118640899658
    8. 'def' → logprob: -6.271118640899658
    9. ''\' → logprob: -6.271118640899658
    10. '' → logprob: -6.646118640899658

Token 5: ' le' (ID: 505)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.9621697068214417
    2. ' calcul' → logprob: -1.3371696472167969
    3. ' créer' → logprob: -2.462169647216797
    4. ' le' → logprob: -2.587169647216797
    5. ' la' → logprob: -2.962169647216797
    6. ' analyser' → logprob: -3.212169647216797
    7. ' afficher' → logprob: -4.212169647216797
    8. 'l' → logprob: -4.837169647216797
    9. ' génér' → logprob: -5.087169647216797
    10. ' traiter' → logprob: -5.212169647216797

Token 6: ' problème' (ID: 35630)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.2203163504600525
    2. 'tri' → logprob: -2.5953164100646973
    3. 'calcul' → logprob: -3.9703164100646973
    4. ' traitement' → logprob: -4.345316410064697
    5. 'c' → logprob: -4.595316410064697
    6. 'é' → logprob: -4.845316410064697
    7. ' #' → logprob: -4.845316410064697
    8. 'trait' → logprob: -4.970316410064697
    9. 'd' → logprob: -5.345316410064697
    10. ' tri' → logprob: -5.470316410064697

Token 7: ' d' (ID: 272)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.35621097683906555
    2. ' :' → logprob: -1.2312109470367432
    3. ' ' → logprob: -6.106211185455322
    4. '```' → logprob: -6.856211185455322
    5. '\' → logprob: -6.981211185455322
    6. '.' → logprob: -7.231211185455322
    7. '#' → logprob: -7.231211185455322
    8. ' de' → logprob: -7.231211185455322
    9. ' complet' → logprob: -8.606210708618164
    10. ' d' → logprob: -8.606210708618164

Token 8: ''analyse' (ID: 187692)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.19854815304279327
    2. ''é' → logprob: -2.1985480785369873
    3. 'e' → logprob: -3.5735480785369873
    4. ''e' → logprob: -4.948548316955566
    5. ''ex' → logprob: -5.448548316955566
    6. ''analyse' → logprob: -5.573548316955566
    7. ''espace' → logprob: -5.823548316955566
    8. ''ident' → logprob: -6.073548316955566
    9. 'é' → logprob: -6.073548316955566
    10. ''application' → logprob: -6.198548316955566

Token 9: ' des' (ID: 731)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5950968265533447
    2. ' de' → logprob: -1.8450968265533447
    3. ' :' → logprob: -2.2200968265533447
    4. '```' → logprob: -3.0950968265533447
    5. 's' → logprob: -3.2200968265533447
    6. '#' → logprob: -3.4700968265533447
    7. '\' → logprob: -4.095096588134766
    8. 'd' → logprob: -5.095096588134766
    9. ' ' → logprob: -5.220096588134766
    10. ' d' → logprob: -5.220096588134766

Token 10: ' connex' (ID: 154480)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4095524847507477
    2. ' ' → logprob: -1.9095524549484253
    3. ' ' → logprob: -2.534552574157715
    4. 's' → logprob: -3.534552574157715
    5. ' données' → logprob: -3.909552574157715
    6. 'tokens' → logprob: -4.784552574157715
    7. ' _' → logprob: -5.284552574157715
    8. 'import' → logprob: -5.284552574157715
    9. ' l' → logprob: -5.534552574157715
    10. 'd' → logprob: -5.784552574157715

Token 11: 'ions' (ID: 756)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.14728038012981415
    2. 'ion' → logprob: -2.39728045463562
    3. 'i' → logprob: -4.647280216217041
    4. 'ions' → logprob: -4.772280216217041
    5. '```' → logprob: -4.772280216217041
    6. 'ction' → logprob: -4.897280216217041
    7. 'ité' → logprob: -5.772280216217041
    8. 'ct' → logprob: -6.147280216217041
    9. '#' → logprob: -6.147280216217041
    10. 'ivité' → logprob: -6.897280216217041

Token 12: '/d' (ID: 6662)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7721784114837646
    2. ' :' → logprob: -1.6471784114837646
    3. '\' → logprob: -2.1471784114837646
    4. 'import' → logprob: -2.8971784114837646
    5. '#' → logprob: -3.0221784114837646
    6. '```' → logprob: -3.2721784114837646
    7. ' ' → logprob: -3.8971784114837646
    8. '_' → logprob: -4.522178649902344
    9. 's' → logprob: -4.897178649902344
    10. '.' → logprob: -5.022178649902344

Token 13: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.00835192110389471
    2. 'és' → logprob: -6.258351802825928
    3. 'e' → logprob: -6.508351802825928
    4. 'onnées' → logprob: -6.758351802825928
    5. 'ét' → logprob: -7.383351802825928
    6. ''é' → logprob: -8.008352279663086
    7. 'éc' → logprob: -8.133352279663086
    8. 'éf' → logprob: -8.258352279663086
    9. 'éta' → logprob: -8.508352279663086
    10. 'è' → logprob: -8.633352279663086

Token 14: 'conn' (ID: 12394)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.9752493500709534
    2. 'tect' → logprob: -1.3502492904663086
    3. 'tection' → logprob: -1.6002492904663086
    4. 't' → logprob: -2.6002492904663086
    5. 'te' → logprob: -2.8502492904663086
    6. 'x' → logprob: -4.850249290466309
    7. 'm' → logprob: -5.725249290466309
    8. 'conn' → logprob: -5.850249290466309
    9. 'c' → logprob: -6.100249290466309
    10. 'b' → logprob: -6.350249290466309

Token 15: 'ex' (ID: 490)
  Prédit: 'exion'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exion' → logprob: -0.4423329830169678
    2. 'ex' → logprob: -1.4423329830169678
    3. 'ection' → logprob: -2.8173329830169678
    4. 'ect' → logprob: -3.4423329830169678
    5. 'ections' → logprob: -3.5673329830169678
    6. 'ected' → logprob: -7.192333221435547
    7. 'ector' → logprob: -9.442333221435547
    8. 'ec' → logprob: -9.942333221435547
    9. 'e' → logprob: -9.942333221435547
    10. 'ectar' → logprob: -10.067333221435547

Token 16: 'ions' (ID: 756)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5358709692955017
    2. 'i' → logprob: -1.4108710289001465
    3. 'ion' → logprob: -2.6608710289001465
    4. 'ions' → logprob: -2.7858710289001465
    5. '#' → logprob: -3.5358710289001465
    6. 'd' → logprob: -6.2858710289001465
    7. '```' → logprob: -6.2858710289001465
    8. 'r' → logprob: -6.5358710289001465
    9. 'e' → logprob: -6.9108710289001465
    10. 'a' → logprob: -7.0358710289001465

Token 17: ' des' (ID: 731)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7851441502571106
    2. ' :' → logprob: -1.0351440906524658
    3. '```' → logprob: -2.410144090652466
    4. '#' → logprob: -2.910144090652466
    5. '\' → logprob: -3.785144090652466
    6. ' ' → logprob: -5.535144329071045
    7. 'import' → logprob: -5.660144329071045
    8. '\n' → logprob: -5.660144329071045
    9. '_' → logprob: -5.785144329071045
    10. ' ```' → logprob: -6.660144329071045

Token 18: ' PCs' (ID: 80763)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.008657712489366531
    2. ' ' → logprob: -5.758657932281494
    3. ' utilisateurs' → logprob: -6.258657932281494
    4. '_' → logprob: -7.383657932281494
    5. ' ```' → logprob: -7.508657932281494
    6. ' \' → logprob: -7.633657932281494
    7. '```' → logprob: -7.758657932281494
    8. '  ' → logprob: -8.133657455444336
    9. 's' → logprob: -8.258657455444336
    10. ''' → logprob: -9.258657455444336

Token 19: '

' (ID: 279)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.8769349455833435
    2. '#' → logprob: -1.1269350051879883
    3. '\n' → logprob: -2.2519350051879883
    4. ':' → logprob: -3.1269350051879883
    5. '\' → logprob: -3.2519350051879883
    6. '
' → logprob: -3.2519350051879883
    7. 'import' → logprob: -4.626935005187988
    8. ' :' → logprob: -5.751935005187988
    9. ' 

' → logprob: -5.751935005187988
    10. ' 
' → logprob: -6.001935005187988

Token 20: 'import' (ID: 561)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.525956928730011
    2. '#' → logprob: -1.7759568691253662
    3. 'import' → logprob: -2.275956869125366
    4. '
' → logprob: -2.275956869125366
    5. '\n' → logprob: -4.525957107543945
    6. ' 

' → logprob: -5.025957107543945
    7. '

' → logprob: -5.275957107543945
    8. ' 
' → logprob: -5.525957107543945
    9. '\' → logprob: -5.900957107543945
    10. '``' → logprob: -6.150957107543945

Token 21: ' sys' (ID: 12228)
  Prédit: ' socket'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' socket' → logprob: -0.04256928339600563
    2. ' os' → logprob: -3.417569398880005
    3. ' datetime' → logprob: -5.417569160461426
    4. ' time' → logprob: -6.167569160461426
    5. ' sys' → logprob: -6.792569160461426
    6. 'socket' → logprob: -7.792569160461426
    7. ' pandas' → logprob: -7.917569160461426
    8. ' tkinter' → logprob: -9.292569160461426
    9. ' threading' → logprob: -9.917569160461426
    10. ' re' → logprob: -9.917569160461426

Token 22: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.20850372314453125
    2. '\n' → logprob: -2.3335037231445312
    3. '

' → logprob: -3.2085037231445312
    4. 'import' → logprob: -3.7085037231445312
    5. '\' → logprob: -4.458503723144531
    6. '' → logprob: -5.583503723144531
    7. '```' → logprob: -5.583503723144531
    8. '<|end|>' → logprob: -5.958503723144531
    9. '#' → logprob: -6.458503723144531
    10. '.' → logprob: -7.083503723144531

Token 23: 'import' (ID: 561)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6331404447555542
    2. 'import' → logprob: -1.1331404447555542
    3. '

' → logprob: -2.5081405639648438
    4. '\n' → logprob: -3.3831405639648438
    5. '```' → logprob: -4.508140563964844
    6. ' 

' → logprob: -4.883140563964844
    7. '\' → logprob: -5.133140563964844
    8. '' → logprob: -6.883140563964844
    9. '  

' → logprob: -6.883140563964844
    10. '<|end|>' → logprob: -6.883140563964844

Token 24: ' bis' (ID: 7204)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.3552199602127075
    2. ' socket' → logprob: -2.105219841003418
    3. ' datetime' → logprob: -2.105219841003418
    4. ' time' → logprob: -3.230219841003418
    5. ' re' → logprob: -4.730219841003418
    6. 'os' → logprob: -6.105219841003418
    7. 'socket' → logprob: -6.355219841003418
    8. 'datetime' → logprob: -6.480219841003418
    9. 'time' → logprob: -7.230219841003418
    10. ' argparse' → logprob: -8.605219841003418

Token 25: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -0.00015538577281404287
    2. 't' → logprob: -8.875155448913574
    3. 'ectl' → logprob: -12.000155448913574
    4. 'ec' → logprob: -12.125155448913574
    5. 'ected' → logprob: -13.000155448913574
    6. 'e' → logprob: -14.750155448913574
    7. '```' → logprob: -15.125155448913574
    8. 'ects' → logprob: -15.500155448913574
    9. 'tab' → logprob: -15.875155448913574
    10. 'ection' → logprob: -16.125154495239258

Token 26: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6686949133872986
    2. '

' → logprob: -0.9186949133872986
    3. ' 

' → logprob: -3.2936949729919434
    4. 'import' → logprob: -3.9186949729919434
    5. '\n' → logprob: -4.418694972991943
    6. '' → logprob: -5.418694972991943
    7. '```' → logprob: -5.543694972991943
    8. '\' → logprob: -5.918694972991943
    9. '  

' → logprob: -6.293694972991943
    10. ' 
' → logprob: -7.043694972991943

Token 27: 'def' (ID: 1314)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.36896592378616333
    2. '
' → logprob: -1.8689658641815186
    3. 'class' → logprob: -2.8689658641815186
    4. 'import' → logprob: -3.4939658641815186
    5. '#' → logprob: -3.6189658641815186
    6. '\n' → logprob: -4.618966102600098
    7. '```' → logprob: -4.618966102600098
    8. '\' → logprob: -4.868966102600098
    9. 'def' → logprob: -5.493966102600098
    10. '' → logprob: -6.368966102600098

Token 28: ' merge' (ID: 20345)
  Prédit: ' analyze'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' analyze' → logprob: -1.055937647819519
    2. ' analyser' → logprob: -1.430937647819519
    3. '_' → logprob: -2.1809377670288086
    4. ' ' → logprob: -2.1809377670288086
    5. ' analyse' → logprob: -2.4309377670288086
    6. ' _' → logprob: -2.5559377670288086
    7. ' Analyse' → logprob: -5.555937767028809
    8. '_an' → logprob: -5.680937767028809
    9. ' Analyze' → logprob: -5.930937767028809
    10. ' analyzer' → logprob: -6.055937767028809

Token 29: '_inter' (ID: 16818)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.1624644547700882
    2. '_lists' → logprob: -2.7874643802642822
    3. '_inter' → logprob: -3.5374643802642822
    4. '_arrays' → logprob: -3.9124643802642822
    5. ' _' → logprob: -4.662464618682861
    6. '_ranges' → logprob: -4.912464618682861
    7. '(_' → logprob: -5.287464618682861
    8. '_segments' → logprob: -5.662464618682861
    9. '_sorted' → logprob: -6.412464618682861
    10. '_s' → logprob: -6.787464618682861

Token 30: 'vals' (ID: 44567)
  Prédit: 'vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vals' → logprob: -0.0007879483746364713
    2. 'val' → logprob: -7.375787734985352
    3. '_vals' → logprob: -10.125787734985352
    4. '_' → logprob: -10.375787734985352
    5. 'v' → logprob: -10.875787734985352
    6. '_val' → logprob: -11.125787734985352
    7. ' vals' → logprob: -11.250787734985352
    8. '```' → logprob: -11.375787734985352
    9. 'vel' → logprob: -12.875787734985352
    10. '__' → logprob: -12.875787734985352

Token 31: '(interval' (ID: 100435)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.016340624541044235
    2. '(interval' → logprob: -4.766340732574463
    3. ' (' → logprob: -5.016340732574463
    4. '(s' → logprob: -8.016340255737305
    5. '(a' → logprob: -9.641340255737305
    6. '(inter' → logprob: -9.766340255737305
    7. '(data' → logprob: -9.766340255737305
    8. '(lst' → logprob: -10.016340255737305
    9. '(list' → logprob: -10.141340255737305
    10. '(items' → logprob: -10.141340255737305

Token 32: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00014931005716789514
    2. 'als' → logprob: -9.375149726867676
    3. ')' → logprob: -10.375149726867676
    4. ' s' → logprob: -11.750149726867676
    5. 'vals' → logprob: -11.750149726867676
    6. 'val' → logprob: -12.125149726867676
    7. '```' → logprob: -12.375149726867676
    8. 'al' → logprob: -12.875149726867676
    9. 'ls' → logprob: -13.250149726867676
    10. ')s' → logprob: -14.000149726867676

Token 33: '):
' (ID: 1883)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9302138686180115
    2. '[' → logprob: -1.0552139282226562
    3. '):' → logprob: -1.5552139282226562
    4. ')' → logprob: -3.3052139282226562
    5. '<|end|>' → logprob: -5.930213928222656
    6. '():' → logprob: -6.930213928222656
    7. ' (' → logprob: -7.305213928222656
    8. '[]):' → logprob: -7.555213928222656
    9. '(
' → logprob: -7.805213928222656
    10. '[:]' → logprob: -8.055213928222656

Token 34: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6004425883293152
    2. '(' → logprob: -1.47544264793396
    3. '[' → logprob: -2.10044264793396
    4. '[:]' → logprob: -3.22544264793396
    5. ' :' → logprob: -4.475442409515381
    6. '[:' → logprob: -4.600442409515381
    7. '(interval' → logprob: -4.725442409515381
    8. '():' → logprob: -5.100442409515381
    9. '):' → logprob: -5.225442409515381
    10. '   ' → logprob: -5.350442409515381

Token 35: ' """
' (ID: 7037)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.2110320329666138
    2. ' :' → logprob: -1.3360320329666138
    3. ' []' → logprob: -1.9610320329666138
    4. '   ' → logprob: -2.586031913757324
    5. '    ' → logprob: -2.586031913757324
    6. ' sorted' → logprob: -2.961031913757324
    7. '[' → logprob: -3.961031913757324
    8. ' 
' → logprob: -4.086031913757324
    9. ' :
' → logprob: -4.711031913757324
    10. ' [' → logprob: -4.836031913757324

Token 36: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0130863189697266
    2. ' def' → logprob: -1.1380863189697266
    3. 'def' → logprob: -1.3880863189697266
    4. ' """' → logprob: -4.763086318969727
    5. '"""' → logprob: -5.013086318969727
    6. ' ' → logprob: -5.138086318969727
    7. ')' → logprob: -5.138086318969727
    8. ' list' → logprob: -5.263086318969727
    9. ' List' → logprob: -5.638086318969727
    10. 'List' → logprob: -5.638086318969727

Token 37: ' Fusion' (ID: 70618)
  Prédit: ' """'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' """' → logprob: -0.11648716032505035
    2. ' """
' → logprob: -2.9914872646331787
    3. '   ' → logprob: -3.6164872646331787
    4. '"""' → logprob: -3.8664872646331787
    5. ' def' → logprob: -6.3664870262146
    6. ' if' → logprob: -6.4914870262146
    7. ' )' → logprob: -6.4914870262146
    8. 'def' → logprob: -6.7414870262146
    9. ')' → logprob: -7.1164870262146
    10. ' 
' → logprob: -7.4914870262146

Token 38: 'ne' (ID: 611)
  Prédit: 'ner'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ner' → logprob: -0.14751429855823517
    2. ' des' → logprob: -2.0225143432617188
    3. '_' → logprob: -6.022514343261719
    4. ' ' → logprob: -7.022514343261719
    5. ' de' → logprob: -7.397514343261719
    6. '   ' → logprob: -8.272514343261719
    7. ' (' → logprob: -8.397514343261719
    8. '_des' → logprob: -9.147514343261719
    9. 'des' → logprob: -9.522514343261719
    10. 'ne' → logprob: -9.647514343261719

Token 39: ' une' (ID: 2463)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.09302880614995956
    2. ' des' → logprob: -2.4680287837982178
    3. ' ' → logprob: -5.718029022216797
    4. 'les' → logprob: -8.343029022216797
    5. ' deux' → logprob: -9.343029022216797
    6. ' et' → logprob: -9.718029022216797
    7. '_' → logprob: -9.718029022216797
    8. ' la' → logprob: -9.843029022216797
    9. '   ' → logprob: -9.968029022216797
    10. 'des' → logprob: -10.593029022216797

Token 40: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.04260846972465515
    2. ' ' → logprob: -3.4176084995269775
    3. 'liste' → logprob: -5.417608261108398
    4. ' list' → logprob: -5.917608261108398
    5. ' listes' → logprob: -7.917608261108398
    6. '_list' → logprob: -8.792608261108398
    7. ' sorted' → logprob: -8.792608261108398
    8. 's' → logprob: -8.792608261108398
    9. 'Liste' → logprob: -8.792608261108398
    10. ' Liste' → logprob: -9.042608261108398

Token 41: ' d' (ID: 272)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 42: ''inter' (ID: 55731)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.08117490261793137
    2. ''inter' → logprob: -3.831174850463867
    3. ' intervals' → logprob: -3.956174850463867
    4. 'es' → logprob: -4.706174850463867
    5. ' '' → logprob: -5.081174850463867
    6. 'e' → logprob: -5.331174850463867
    7. ' e' → logprob: -5.456174850463867
    8. ' ' → logprob: -5.581174850463867
    9. ''espace' → logprob: -6.831174850463867
    10. ' espaces' → logprob: -6.956174850463867

Token 43: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.8387479186058044
    2. 'val' → logprob: -0.9637479186058044
    3. 'vals' → logprob: -1.8387479782104492
    4. 'erv' → logprob: -3.963747978210449
    5. '_val' → logprob: -6.588747978210449
    6. '```' → logprob: -6.588747978210449
    7. 'va' → logprob: -7.213747978210449
    8. '_' → logprob: -7.213747978210449
    9. 'eval' → logprob: -7.463747978210449
    10. '-' → logprob: -7.463747978210449

Token 44: 'alles' (ID: 28825)
  Prédit: 'als'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'als' → logprob: -0.14270305633544922
    2. 'al' → logprob: -2.267703056335449
    3. 'a' → logprob: -4.392703056335449
    4. 'alles' → logprob: -5.142703056335449
    5. '```' → logprob: -5.517703056335449
    6. '   ' → logprob: -6.142703056335449
    7. 'alle' → logprob: -7.142703056335449
    8. 'vals' → logprob: -7.267703056335449
    9. '#' → logprob: -7.767703056335449
    10. 'ales' → logprob: -8.26770305633545

Token 45: ' (' (ID: 350)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6551904082298279
    2. '   ' → logprob: -1.6551904678344727
    3. '<|end|>' → logprob: -2.5301904678344727
    4. '[]' → logprob: -3.4051904678344727
    5. ' (' → logprob: -3.5301904678344727
    6. ' ' → logprob: -3.6551904678344727
    7. '  ' → logprob: -4.030190467834473
    8. 'def' → logprob: -4.030190467834473
    9. ',' → logprob: -4.780190467834473
    10. ' ]' → logprob: -4.780190467834473

Token 46: 'dé' (ID: 98340)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5052910447120667
    2. ',' → logprob: -1.8802909851074219
    3. '   ' → logprob: -2.505290985107422
    4. 'sorted' → logprob: -3.130290985107422
    5. '):' → logprob: -3.255290985107422
    6. ' sorted' → logprob: -3.380290985107422
    7. '):
' → logprob: -4.130290985107422
    8. ' )' → logprob: -4.380290985107422
    9. 'interval' → logprob: -5.630290985107422
    10. ' intervals' → logprob: -6.130290985107422

Token 47: 'jà' (ID: 19483)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0013501148205250502
    2. 'fin' → logprob: -6.751349925994873
    3. 'fen' → logprob: -9.501350402832031
    4. ')' → logprob: -11.001350402832031
    5. 'lim' → logprob: -11.376350402832031
    6. '```' → logprob: -12.126350402832031
    7. 'fn' → logprob: -12.251350402832031
    8. 'fis' → logprob: -12.501350402832031
    9. 'tection' → logprob: -12.626350402832031
    10. '   ' → logprob: -12.626350402832031

Token 48: ' tri' (ID: 12665)
  Prédit: ' tri'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tri' → logprob: -0.08166379481554031
    2. 'tri' → logprob: -2.5816638469696045
    3. 'tr' → logprob: -6.456663608551025
    4. 'sorted' → logprob: -7.581663608551025
    5. ' tr' → logprob: -7.706663608551025
    6. ' sorted' → logprob: -9.206664085388184
    7. '_tri' → logprob: -9.581664085388184
    8. 'tris' → logprob: -10.456664085388184
    9. ' Tri' → logprob: -11.081664085388184
    10. '_sorted' → logprob: -11.956664085388184

Token 49: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.0322297178208828
    2. 'ée' → logprob: -4.032229900360107
    3. 'ées' → logprob: -4.282229900360107
    4. 'é' → logprob: -9.28222942352295
    5. 'es' → logprob: -10.78222942352295
    6. 's' → logprob: -10.90722942352295
    7. '   ' → logprob: -11.15722942352295
    8. '```' → logprob: -11.28222942352295
    9. 'ès' → logprob: -13.90722942352295
    10. ')' → logprob: -13.90722942352295

Token 50: ' par' (ID: 686)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6619329452514648
    2. ' par' → logprob: -1.2869329452514648
    3. ' )' → logprob: -2.411932945251465
    4. ')' → logprob: -3.036932945251465
    5. ' ,' → logprob: -3.286932945251465
    6. ' et' → logprob: -3.786932945251465
    7. 'par' → logprob: -5.536932945251465
    8. ' ' → logprob: -6.036932945251465
    9. ' avec' → logprob: -6.911932945251465
    10. '   ' → logprob: -6.911932945251465

Token 51: ' début' (ID: 29589)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.5188140273094177
    2. ' start' → logprob: -1.2688140869140625
    3. '_start' → logprob: -3.6438140869140625
    4. ' l' → logprob: -4.0188140869140625
    5. 'l' → logprob: -4.1438140869140625
    6. 'dé' → logprob: -4.3938140869140625
    7. ' la' → logprob: -4.5188140869140625
    8. 'leur' → logprob: -4.8938140869140625
    9. ' leur' → logprob: -4.8938140869140625
    10. ' début' → logprob: -5.3938140869140625

Token 52: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02096223458647728
    2. '   ' → logprob: -4.770962238311768
    3. ',' → logprob: -5.145962238311768
    4. ' )' → logprob: -5.520962238311768
    5. '):
' → logprob: -7.145962238311768
    6. 'de' → logprob: -8.14596176147461
    7. '):' → logprob: -8.39596176147461
    8. 'interval' → logprob: -8.39596176147461
    9. ' des' → logprob: -8.64596176147461
    10. ' de' → logprob: -9.27096176147461

Token 53: ' en' (ID: 469)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009174861945211887
    2. ' :' → logprob: -5.634174823760986
    3. ':' → logprob: -6.384174823760986
    4. ',' → logprob: -6.759174823760986
    5. '    
' → logprob: -7.634174823760986
    6. '    ' → logprob: -7.884174823760986
    7. 'def' → logprob: -8.134175300598145
    8. '  ' → logprob: -8.759175300598145
    9. ' ,' → logprob: -8.884175300598145
    10. ' en' → logprob: -9.134175300598145

Token 54: ' un' (ID: 537)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -1.046574592590332
    2. ' une' → logprob: -1.671574592590332
    3. '   ' → logprob: -2.046574592590332
    4. ' ' → logprob: -2.546574592590332
    5. '[]' → logprob: -2.671574592590332
    6. ' un' → logprob: -2.671574592590332
    7. '  ' → logprob: -4.046574592590332
    8. '_' → logprob: -4.296574592590332
    9. ' ]' → logprob: -4.421574592590332
    10. ' a' → logprob: -4.671574592590332

Token 55: ' ensemble' (ID: 33081)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.43784502148628235
    2. ' espace' → logprob: -2.06284499168396
    3. '<|end|>' → logprob: -2.68784499168396
    4. ' seul' → logprob: -3.31284499168396
    5. 'es' → logprob: -3.68784499168396
    6. ' space' → logprob: -3.93784499168396
    7. 's' → logprob: -4.312845230102539
    8. '  ' → logprob: -4.562845230102539
    9. '<|end|>' → logprob: -4.937845230102539
    10. '_' → logprob: -5.562845230102539

Token 56: ' minimal' (ID: 19957)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 57: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -1.2315104007720947
    2. ' des' → logprob: -1.3565104007720947
    3. '_' → logprob: -1.4815104007720947
    4. ' de' → logprob: -1.8565104007720947
    5. ' ' → logprob: -3.4815104007720947
    6. '_token' → logprob: -5.231510162353516
    7. '_tokens' → logprob: -5.481510162353516
    8. '<|end|>' → logprob: -5.481510162353516
    9. ' of' → logprob: -6.106510162353516
    10. ' _' → logprob: -6.356510162353516

Token 58: ''inter' (ID: 55731)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.4694063663482666
    2. '<|end|>' → logprob: -1.4694063663482666
    3. ' intervals' → logprob: -1.7194063663482666
    4. ''' → logprob: -1.8444063663482666
    5. ' ' → logprob: -2.4694063663482666
    6. '<|end|>' → logprob: -3.4694063663482666
    7. '_inter' → logprob: -3.7194063663482666
    8. '  ' → logprob: -4.5944061279296875
    9. ' espaces' → logprob: -4.8444061279296875
    10. '```' → logprob: -4.8444061279296875

Token 59: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.27110591530799866
    2. 'vals' → logprob: -2.021106004714966
    3. 'val' → logprob: -2.396106004714966
    4. '```' → logprob: -5.146105766296387
    5. '   ' → logprob: -6.146105766296387
    6. '#' → logprob: -7.021105766296387
    7. 'vall' → logprob: -7.396105766296387
    8. '[' → logprob: -7.521105766296387
    9. 's' → logprob: -8.521105766296387
    10. '-' → logprob: -8.521105766296387

Token 60: 'alles' (ID: 28825)
  Prédit: 'alles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'alles' → logprob: -0.054013121873140335
    2. 'ales' → logprob: -3.4290130138397217
    3. 'al' → logprob: -4.679013252258301
    4. '```' → logprob: -6.429013252258301
    5. 'als' → logprob: -6.679013252258301
    6. '#' → logprob: -6.804013252258301
    7. '</' → logprob: -7.429013252258301
    8. '>' → logprob: -7.554013252258301
    9. '{' → logprob: -7.679013252258301
    10. 'aux' → logprob: -7.866513252258301

Token 61: '
' (ID: 198)
  Prédit: ' couvr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' couvr' → logprob: -0.6331905722618103
    2. ',' → logprob: -2.383190631866455
    3. ' ,' → logprob: -2.383190631866455
    4. '   ' → logprob: -2.508190631866455
    5. 's' → logprob: -3.633190631866455
    6. ' valid' → logprob: -3.883190631866455
    7. '.' → logprob: -4.008190631866455
    8. ' distinct' → logprob: -4.383190631866455
    9. '[' → logprob: -4.508190631866455
    10. '<|end|>' → logprob: -4.633190631866455

Token 62: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6353973150253296
    2. ':' → logprob: -2.135397434234619
    3. ')' → logprob: -2.260397434234619
    4. ',' → logprob: -2.885397434234619
    5. ' :' → logprob: -3.135397434234619
    6. 's' → logprob: -3.135397434234619
    7. '.' → logprob: -3.510397434234619
    8. '_' → logprob: -4.260397434234619
    9. '```' → logprob: -4.760397434234619
    10. ' ' → logprob: -5.135397434234619

Token 63: ' sans' (ID: 9828)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6314173340797424
    2. ' :' → logprob: -1.8814172744750977
    3. ':' → logprob: -2.0064172744750977
    4. '.' → logprob: -2.5064172744750977
    5. ' :
' → logprob: -3.8814172744750977
    6. ',' → logprob: -4.131417274475098
    7. ' ' → logprob: -4.381417274475098
    8. '```' → logprob: -4.756417274475098
    9. 'def' → logprob: -4.881417274475098
    10. ' ' → logprob: -5.131417274475098

Token 64: ' chev' (ID: 127415)
  Prédit: ' chev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chev' → logprob: -0.006894989404827356
    2. 's' → logprob: -6.131895065307617
    3. ' overlap' → logprob: -6.756895065307617
    4. ' rec' → logprob: -6.756895065307617
    5. 'over' → logprob: -7.256895065307617
    6. ' ' → logprob: -8.006895065307617
    7. ' overlaps' → logprob: -8.131895065307617
    8. ' espaces' → logprob: -8.381895065307617
    9. 'che' → logprob: -8.881895065307617
    10. 'inter' → logprob: -8.881895065307617

Token 65: 'auche' (ID: 143141)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.8790693879127502
    2. 'auche' → logprob: -1.1290693283081055
    3. 'ure' → logprob: -3.3790693283081055
    4. 'e' → logprob: -3.7540693283081055
    5. ' overlap' → logprob: -3.7540693283081055
    6. 'v' → logprob: -3.8790693283081055
    7. 'être' → logprob: -4.0040693283081055
    8. 'uvre' → logprob: -4.1290693283081055
    9. 'èvement' → logprob: -4.1290693283081055
    10. 'èche' → logprob: -4.2540693283081055

Token 66: 'ment' (ID: 508)
  Prédit: 'ement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ement' → logprob: -0.6338558793067932
    2. 'vement' → logprob: -1.1338558197021484
    3. 'p' → logprob: -2.6338558197021484
    4. 'ment' → logprob: -3.6338558197021484
    5. 'rement' → logprob: -4.508855819702148
    6. 'cement' → logprob: -5.008855819702148
    7. 'v' → logprob: -5.008855819702148
    8. 'lement' → logprob: -5.883855819702148
    9. 'urement' → logprob: -6.008855819702148
    10. 'quement' → logprob: -6.008855819702148

Token 67: '.
' (ID: 558)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9974271655082703
    2. ':' → logprob: -1.122427225112915
    3. '.' → logprob: -2.122427225112915
    4. '   ' → logprob: -2.122427225112915
    5. 's' → logprob: -3.372427225112915
    6. ' :' → logprob: -4.247426986694336
    7. ')' → logprob: -5.497426986694336
    8. ' ' → logprob: -6.247426986694336
    9. ',
' → logprob: -6.372426986694336
    10. ':
' → logprob: -6.622426986694336

Token 68: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0029250639490783215
    2. '```' → logprob: -7.127924919128418
    3. '    
' → logprob: -8.127924919128418
    4. ':' → logprob: -8.252924919128418
    5. '"""
' → logprob: -8.252924919128418
    6. '"""' → logprob: -8.502924919128418
    7. '  
' → logprob: -8.627924919128418
    8. '
' → logprob: -8.877924919128418
    9. ' 
' → logprob: -9.002924919128418
    10. ':
' → logprob: -9.127924919128418

Token 69: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05426720529794693
    2. '    
' → logprob: -4.054267406463623
    3. '   
' → logprob: -4.929267406463623
    4. '```' → logprob: -5.054267406463623
    5. '  
' → logprob: -5.179267406463623
    6. ':' → logprob: -5.554267406463623
    7. ' 
' → logprob: -5.679267406463623
    8. '
' → logprob: -6.304267406463623
    9. 'def' → logprob: -6.429267406463623
    10. '"' → logprob: -6.929267406463623

Token 70: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18767718970775604
    2. ' merged' → logprob: -2.4376771450042725
    3. 'merged' → logprob: -2.6876771450042725
    4. ' if' → logprob: -5.187677383422852
    5. 'result' → logprob: -5.312677383422852
    6. ' result' → logprob: -6.062677383422852
    7. '    
' → logprob: -6.812677383422852
    8. ' new' → logprob: -7.812677383422852
    9. 'if' → logprob: -7.812677383422852
    10. 'interval' → logprob: -8.437677383422852

Token 71: ' if' (ID: 538)
  Prédit: ' merged'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' merged' → logprob: -0.7152764797210693
    2. ' if' → logprob: -1.0902764797210693
    3. 'merged' → logprob: -1.9652764797210693
    4. ' result' → logprob: -4.215276718139648
    5. '   ' → logprob: -4.715276718139648
    6. 'result' → logprob: -5.090276718139648
    7. 'if' (adapté à ' if') → logprob: -5.590276718139648
    8. ' intervals' → logprob: -7.590276718139648
    9. 'interval' → logprob: -8.215276718139648
    10. ' new' → logprob: -9.215276718139648

Token 72: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.02061336115002632
    2. 'not' → logprob: -3.895613431930542
    3. ' len' → logprob: -10.145613670349121
    4. '	not' → logprob: -11.520613670349121
    5. 'len' → logprob: -12.020613670349121
    6. ' ' → logprob: -12.020613670349121
    7. ' ' → logprob: -12.645613670349121
    8. 'n't' → logprob: -13.458113670349121
    9. '   ' → logprob: -14.083113670349121
    10. '!' → logprob: -14.208113670349121

Token 73: ' intervals' (ID: 49900)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.2519456744194031
    2. ' intervals' → logprob: -1.5019457340240479
    3. 'inter' → logprob: -12.001945495605469
    4. '(interval' → logprob: -12.126945495605469
    5. ' interval' → logprob: -12.501945495605469
    6. 'Intervals' → logprob: -15.126945495605469
    7. ' ' → logprob: -15.751945495605469
    8. '```' → logprob: -15.814445495605469
    9. 'int' → logprob: -16.06444549560547
    10. ' ' → logprob: -16.50194549560547

Token 74: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0003167545364703983
    2. ' :' → logprob: -8.625316619873047
    3. ':
' → logprob: -9.375316619873047
    4. ':return' → logprob: -9.875316619873047
    5. ':list' → logprob: -14.750316619873047
    6. ':**' → logprob: -16.125316619873047
    7. '[' → logprob: -16.375316619873047
    8. '):' → logprob: -16.375316619873047
    9. ' :
' → logprob: -17.375316619873047
    10. '=' → logprob: -17.500316619873047

Token 75: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.321441113948822
    2. '    ' → logprob: -1.8214411735534668
    3. ' return' → logprob: -2.446441173553467
    4. 'return' → logprob: -4.446441173553467
    5. ' ' → logprob: -4.821441173553467
    6. ' 
' → logprob: -5.946441173553467
    7. '       ' → logprob: -6.696441173553467
    8. '    
' → logprob: -7.446441173553467
    9. '     
' → logprob: -7.446441173553467
    10. '	return' → logprob: -7.696441173553467

Token 76: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.5769657492637634
    2. 'return' (adapté à ' return') → logprob: -0.8269657492637634
    3. '   ' → logprob: -6.951965808868408
    4. '    ' → logprob: -10.07696533203125
    5. '[]' → logprob: -11.32696533203125
    6. '       ' → logprob: -12.20196533203125
    7. ' ' → logprob: -12.32696533203125
    8. '	return' → logprob: -13.32696533203125
    9. ':return' → logprob: -13.82696533203125
    10. 'ret' → logprob: -14.32696533203125

Token 77: ' []
' (ID: 8911)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.3133573830127716
    2. '[]' → logprob: -1.3133573532104492
    3. ' intervals' → logprob: -9.81335735321045
    4. ' []

' → logprob: -10.56335735321045
    5. ' []
' → logprob: -11.68835735321045
    6. '[]

' → logprob: -12.68835735321045
    7. 'interval' → logprob: -13.56335735321045
    8. '[]
' → logprob: -14.31335735321045
    9. ' ' → logprob: -14.56335735321045
    10. ' []
' → logprob: -14.93835735321045

Token 78: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6106691360473633
    2. '    
' → logprob: -0.8606691360473633
    3. ' 
' → logprob: -4.860669136047363
    4. 'interval' → logprob: -4.860669136047363
    5. '
' → logprob: -4.985669136047363
    6. '   
' → logprob: -5.485669136047363
    7. ' intervals' → logprob: -6.235669136047363
    8. 'merged' → logprob: -6.360669136047363
    9. 'result' → logprob: -6.610669136047363
    10. '  
' → logprob: -6.735669136047363

Token 79: ' merged' (ID: 49536)
  Prédit: ' merged'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' merged' → logprob: -0.40174540877342224
    2. 'merged' (adapté à ' merged') → logprob: -1.2767454385757446
    3. '   ' → logprob: -3.151745319366455
    4. ' result' → logprob: -5.151745319366455
    5. 'result' → logprob: -5.901745319366455
    6. '    
' → logprob: -7.651745319366455
    7. '    ' → logprob: -10.151745796203613
    8. ' intervals' → logprob: -10.276745796203613
    9. 'interval' → logprob: -11.151745796203613
    10. '
' → logprob: -11.526745796203613

Token 80: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0010395983699709177
    2. '=' → logprob: -7.376039505004883
    3. '_inter' → logprob: -7.876039505004883
    4. ' ' → logprob: -11.501039505004883
    5. '=[]' → logprob: -11.876039505004883
    6. '=[]
' → logprob: -12.376039505004883
    7. '_' → logprob: -12.501039505004883
    8. '   ' → logprob: -13.126039505004883
    9. ' =[' → logprob: -14.001039505004883
    10. '[' → logprob: -14.001039505004883

Token 81: ' []
' (ID: 8911)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.12851159274578094
    2. '[' → logprob: -2.128511667251587
    3. '[in' → logprob: -7.628511428833008
    4. '[int' → logprob: -8.378511428833008
    5. '[ind' → logprob: -8.378511428833008
    6. '[i' → logprob: -8.753511428833008
    7. '[start' → logprob: -8.753511428833008
    8. '[array' → logprob: -10.253511428833008
    9. '[arr' → logprob: -10.378511428833008
    10. '[event' → logprob: -10.628511428833008

Token 82: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5259593725204468
    2. 'interval' → logprob: -2.0259594917297363
    3. 'merged' → logprob: -2.1509594917297363
    4. ' current' → logprob: -3.1509594917297363
    5. 'current' → logprob: -3.5259594917297363
    6. ' merged' → logprob: -3.7759594917297363
    7. '[' → logprob: -3.7759594917297363
    8. ' [' → logprob: -4.150959491729736
    9. ' intervals' → logprob: -4.275959491729736
    10. ' for' → logprob: -5.275959491729736

Token 83: ' current' (ID: 2208)
  Prédit: ' current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.8209260106086731
    2. 'merged' → logprob: -1.1959259510040283
    3. 'current' (adapté à ' current') → logprob: -1.6959259510040283
    4. ' merged' → logprob: -3.1959259510040283
    5. '   ' → logprob: -3.4459259510040283
    6. 'interval' → logprob: -7.945926189422607
    7. 'for' → logprob: -8.19592571258545
    8. ' for' → logprob: -8.44592571258545
    9. '[current' → logprob: -9.07092571258545
    10. 'start' → logprob: -9.69592571258545

Token 84: '_start' (ID: 10949)
  Prédit: '_start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -0.031137194484472275
    2. ' =' → logprob: -3.781137228012085
    3. '_interval' → logprob: -5.281136989593506
    4. '=' → logprob: -6.406136989593506
    5. '_inter' → logprob: -7.531136989593506
    6. '_' → logprob: -8.031137466430664
    7. '_end' → logprob: -8.906137466430664
    8. '_begin' → logprob: -10.406137466430664
    9. '=start' → logprob: -10.781137466430664
    10. '=_' → logprob: -11.031137466430664

Token 85: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00038241007132455707
    2. ',current' → logprob: -8.500382423400879
    3. ' =' → logprob: -9.500382423400879
    4. '=' → logprob: -9.500382423400879
    5. ' ,' → logprob: -10.750382423400879
    6. '   ' → logprob: -12.750382423400879
    7. ',end' → logprob: -13.250382423400879
    8. ',
' → logprob: -14.375382423400879
    9. ',s' → logprob: -14.500382423400879
    10. ',c' → logprob: -15.125382423400879

Token 86: ' current' (ID: 2208)
  Prédit: ' current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.12694081664085388
    2. 'current' → logprob: -2.1269407272338867
    3. '   ' → logprob: -12.626940727233887
    4. ',current' → logprob: -13.126940727233887
    5. '_current' → logprob: -13.251940727233887
    6. '	current' → logprob: -13.626940727233887
    7. '$current' → logprob: -13.876940727233887
    8. 'urrent' → logprob: -13.876940727233887
    9. ' ' → logprob: -14.001940727233887
    10. 'Current' → logprob: -14.251940727233887

Token 87: '_end' (ID: 13707)
  Prédit: '_end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_end' → logprob: -0.00015800826076883823
    2. '_finish' → logprob: -9.500158309936523
    3. '_' → logprob: -10.000158309936523
    4. '_stop' → logprob: -11.250158309936523
    5. '_start' → logprob: -11.375158309936523
    6. '_s' → logprob: -12.375158309936523
    7. '_END' → logprob: -13.000158309936523
    8. ' _' → logprob: -13.375158309936523
    9. '_interval' → logprob: -14.000158309936523
    10. 'End' → logprob: -14.625158309936523

Token 88: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.693164050579071
    2. ' =' → logprob: -0.693164050579071
    3. ',' → logprob: -11.193163871765137
    4. '<|end|>' → logprob: -13.443163871765137
    5. ')' → logprob: -14.443163871765137
    6. '=}' → logprob: -15.943163871765137
    7. ' ' → logprob: -15.943163871765137
    8. '   ' → logprob: -16.068164825439453
    9. ']' → logprob: -16.068164825439453
    10. ' =
' → logprob: -16.568164825439453

Token 89: ' intervals' (ID: 49900)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.08894917368888855
    2. ' intervals' → logprob: -2.463949203491211
    3. ' interval' → logprob: -12.338949203491211
    4. '(interval' → logprob: -12.713949203491211
    5. '   ' → logprob: -13.088949203491211
    6. ' ' → logprob: -16.71394920349121
    7. 'inter' → logprob: -17.21394920349121
    8. '0' → logprob: -17.40144920349121
    9. '    ' → logprob: -17.96394920349121
    10. '```' → logprob: -18.02644920349121

Token 90: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.869017852295656e-06
    2. '0' → logprob: -12.375006675720215
    3. ' [' → logprob: -13.125006675720215
    4. '<|end|>' → logprob: -15.000006675720215
    5. '[
' → logprob: -16.25000762939453
    6. ' ' → logprob: -16.37500762939453
    7. 's' → logprob: -17.00000762939453
    8. '][' → logprob: -17.62500762939453
    9. '<|end|>' → logprob: -18.00000762939453
    10. '   ' → logprob: -18.25000762939453

Token 91: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.4974866644479334e-05
    2. ' ' → logprob: -11.625015258789062
    3. '[' → logprob: -12.125015258789062
    4. '   ' → logprob: -16.000015258789062
    5. '][' → logprob: -16.125015258789062
    6. ']' → logprob: -16.250015258789062
    7. ')' → logprob: -16.375015258789062
    8. ':' → logprob: -18.000015258789062
    9. '1' → logprob: -18.125015258789062
    10. '۰' → logprob: -18.500015258789062

Token 92: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.22002431750297546
    2. ')' → logprob: -2.220024347305298
    3. '[' → logprob: -2.595024347305298
    4. ',' → logprob: -4.970024108886719
    5. ' ]' → logprob: -5.470024108886719
    6. '   ' → logprob: -6.220024108886719
    7. ' )' → logprob: -8.220024108886719
    8. ' ' → logprob: -8.470024108886719
    9. '][' → logprob: -8.470024108886719
    10. '  ' → logprob: -10.095024108886719

Token 93: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1847723126411438
    2. '   ' → logprob: -2.434772253036499
    3. '\n' → logprob: -2.934772253036499
    4. '    
' → logprob: -4.434772491455078
    5. ' 
' → logprob: -5.309772491455078
    6. '  
' → logprob: -5.684772491455078
    7. '' → logprob: -5.934772491455078
    8. '   
' → logprob: -6.434772491455078
    9. '\' → logprob: -6.559772491455078
    10. ':' → logprob: -7.934772491455078

Token 94: ' for' (ID: 395)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.47689512372016907
    2. '
' → logprob: -1.2268950939178467
    3. '  
' → logprob: -3.6018950939178467
    4. ' ' → logprob: -3.8518950939178467
    5. '\n' → logprob: -4.226895332336426
    6. ':' → logprob: -5.226895332336426
    7. '    
' → logprob: -5.601895332336426
    8. '   ' → logprob: -5.726895332336426
    9. '' → logprob: -5.976895332336426
    10. ':
' → logprob: -5.976895332336426

Token 95: ' start' (ID: 1604)
  Prédit: ' start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' start' → logprob: -0.6118451952934265
    2. ' i' → logprob: -1.1118452548980713
    3. 'start' → logprob: -2.4868452548980713
    4. 'i' → logprob: -3.7368452548980713
    5. ' current' → logprob: -4.486845016479492
    6. ' interval' → logprob: -5.361845016479492
    7. 'interval' → logprob: -5.611845016479492
    8. '   ' → logprob: -7.361845016479492
    9. ' ' → logprob: -7.736845016479492
    10. 'current' → logprob: -7.986845016479492

Token 96: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00013250234769657254
    2. ' ,' → logprob: -9.00013256072998
    3. ' ' → logprob: -13.25013256072998
    4. ',current' → logprob: -13.62513256072998
    5. ',
' → logprob: -13.87513256072998
    6. '<|end|>' → logprob: -14.25013256072998
    7. ',s' → logprob: -14.37513256072998
    8. ',_' → logprob: -15.00013256072998
    9. ',end' → logprob: -15.00013256072998
    10. ',next' → logprob: -15.00013256072998

Token 97: ' end' (ID: 1268)
  Prédit: ' end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' end' → logprob: -0.09588393568992615
    2. 'end' → logprob: -3.095883846282959
    3. ' current' → logprob: -3.095883846282959
    4. 'current' → logprob: -6.970883846282959
    5. '	end' → logprob: -11.220884323120117
    6. '_end' → logprob: -12.595884323120117
    7. ' ' → logprob: -12.845884323120117
    8. ',end' → logprob: -14.595884323120117
    9. '>end' → logprob: -14.970884323120117
    10. ''end' → logprob: -15.095884323120117

Token 98: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.13975189626216888
    2. ',' → logprob: -2.88975191116333
    3. ' ,' → logprob: -3.38975191116333
    4. '<|end|>' → logprob: -3.38975191116333
    5. '   ' → logprob: -5.76475191116333
    6. ' ' → logprob: -6.88975191116333
    7. '<|end|>' → logprob: -7.01475191116333
    8. 'in' → logprob: -7.01475191116333
    9. ' :' → logprob: -7.88975191116333
    10. ':' → logprob: -8.014751434326172

Token 99: ' intervals' (ID: 49900)
  Prédit: ' intervals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' intervals' → logprob: -0.12694910168647766
    2. 'interval' → logprob: -2.1269490718841553
    3. 'inter' → logprob: -12.001949310302734
    4. '(interval' → logprob: -12.126949310302734
    5. ' interval' → logprob: -12.626949310302734
    6. ' ' → logprob: -13.501949310302734
    7. '
' → logprob: -13.876949310302734
    8. 'Intervals' → logprob: -13.876949310302734
    9. '   ' → logprob: -14.251949310302734
    10. 's' → logprob: -14.501949310302734

Token 100: '[' (ID: 58)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0024469965137541294
    2. '[' → logprob: -6.377447128295898
    3. ':
' → logprob: -8.002447128295898
    4. ' :' → logprob: -8.127447128295898
    5. '   ' → logprob: -9.752447128295898
    6. '):' → logprob: -10.752447128295898
    7. ',' → logprob: -11.127447128295898
    8. ')' → logprob: -12.252447128295898
    9. ' ' → logprob: -12.377447128295898
    10. '):
' → logprob: -13.877447128295898

Token 101: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07104016095399857
    2. '):' → logprob: -2.946040153503418
    3. ':' → logprob: -4.946040153503418
    4. ' ' → logprob: -5.446040153503418
    5. ']:' → logprob: -6.071040153503418
    6. '[' → logprob: -7.446040153503418
    7. ' ):' → logprob: -7.821040153503418
    8. ' :' → logprob: -8.071040153503418
    9. '):
' → logprob: -8.196040153503418
    10. ')' → logprob: -8.696040153503418

Token 102: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.46122118830680847
    2. ':' → logprob: -1.4612212181091309
    3. ',' → logprob: -2.836221218109131
    4. '):
' → logprob: -2.961221218109131
    5. '   ' → logprob: -4.086221218109131
    6. ']:' → logprob: -5.336221218109131
    7. ' ):' → logprob: -6.586221218109131
    8. ' :' → logprob: -6.836221218109131
    9. '       ' → logprob: -7.086221218109131
    10. ')' → logprob: -7.211221218109131

Token 103: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2590433359146118
    2. '):' → logprob: -2.2590432167053223
    3. '   ' → logprob: -2.6340432167053223
    4. '):
' → logprob: -3.2590432167053223
    5. ':
' → logprob: -5.009043216705322
    6. '       ' → logprob: -6.259043216705322
    7. ' :' → logprob: -6.384043216705322
    8. ',' → logprob: -7.134043216705322
    9. ')' → logprob: -7.884043216705322
    10. ']:' → logprob: -7.884043216705322

Token 104: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15561214089393616
    2. '   ' → logprob: -2.1556122303009033
    3. ':' → logprob: -3.9056122303009033
    4. '    ' → logprob: -5.905611991882324
    5. '<|end|>' → logprob: -6.030611991882324
    6. ' ' → logprob: -7.405611991882324
    7. ' :' → logprob: -7.530611991882324
    8. ',' → logprob: -7.905611991882324
    9. '  
' → logprob: -8.405611991882324
    10. '    
' → logprob: -8.405611991882324

Token 105: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08525345474481583
    2. '    ' → logprob: -3.7102534770965576
    3. ' if' → logprob: -4.2102532386779785
    4. ' ' → logprob: -4.3352532386779785
    5. '   ' → logprob: -4.5852532386779785
    6. '<|end|>' → logprob: -5.2102532386779785
    7. ' 
' → logprob: -5.5852532386779785
    8. '        
' → logprob: -5.9602532386779785
    9. '        ' → logprob: -6.0852532386779785
    10. '    
' → logprob: -6.8352532386779785

Token 106: ' start' (ID: 1604)
  Prédit: ' start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' start' → logprob: -0.019941316917538643
    2. ' current' → logprob: -4.769941329956055
    3. ' end' → logprob: -5.019941329956055
    4. 'start' → logprob: -5.394941329956055
    5. 'end' → logprob: -9.769941329956055
    6. 'current' → logprob: -10.394941329956055
    7. ' ' → logprob: -10.519941329956055
    8. ' ' → logprob: -13.769941329956055
    9. '	start' → logprob: -13.894941329956055
    10. '   ' → logprob: -14.644941329956055

Token 107: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.006718925200402737
    2. '<=' → logprob: -5.00671911239624
    3. '[' → logprob: -13.506718635559082
    4. ' ' → logprob: -14.131718635559082
    5. ' <' → logprob: -14.631718635559082
    6. ' >' → logprob: -15.006718635559082
    7. ' ' → logprob: -15.631718635559082
    8. ')<=' → logprob: -16.1317195892334
    9. ' <=",' → logprob: -16.2567195892334
    10. ')' → logprob: -16.5067195892334

Token 108: ' current' (ID: 2208)
  Prédit: ' current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.2014147937297821
    2. 'current' → logprob: -1.7014148235321045
    3. ' ' → logprob: -13.951415061950684
    4. '	current' → logprob: -15.326415061950684
    5. 'urrent' → logprob: -16.201414108276367
    6. 'cur' → logprob: -16.326414108276367
    7. '[current' → logprob: -16.826414108276367
    8. '=current' → logprob: -17.076414108276367
    9. '(current' → logprob: -17.451414108276367
    10. '$current' → logprob: -17.576414108276367

Token 109: '_end' (ID: 13707)
  Prédit: '_end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_end' → logprob: -3.297462171758525e-05
    2. '_' → logprob: -11.250033378601074
    3. 'end' → logprob: -11.750033378601074
    4. ' _' → logprob: -11.875033378601074
    5. ' ' → logprob: -12.750033378601074
    6. '_END' → logprob: -14.750033378601074
    7. '```' → logprob: -15.375033378601074
    8. '_max' → logprob: -15.625033378601074
    9. ' ' → logprob: -15.875033378601074
    10. '_token' → logprob: -15.875033378601074

Token 110: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6041045188903809
    2. ' +' → logprob: -0.9791045188903809
    3. '+' → logprob: -3.354104518890381
    4. ':
' → logprob: -3.979104518890381
    5. '   ' → logprob: -4.354104518890381
    6. ' :' → logprob: -4.854104518890381
    7. ' :
' → logprob: -6.104104518890381
    8. '       ' → logprob: -7.854104518890381
    9. ' ' → logprob: -7.979104518890381
    10. ' and' → logprob: -8.229104995727539

Token 111: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.26053476333618164
    2. '       ' → logprob: -1.7605347633361816
    3. ' :' → logprob: -3.0105347633361816
    4. '        ' → logprob: -6.385534763336182
    5. '           ' → logprob: -6.885534763336182
    6. '   ' → logprob: -7.010534763336182
    7. '<|end|>' → logprob: -7.010534763336182
    8. ':
' → logprob: -7.135534763336182
    9. ' and' → logprob: -7.260534763336182
    10. ' :
' → logprob: -7.635534763336182

Token 112: ' #' (ID: 1069)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.4922286868095398
    2. ' current' → logprob: -1.2422287464141846
    3. 'max' → logprob: -2.9922287464141846
    4. '       ' → logprob: -3.8672287464141846
    5. 'current' → logprob: -4.4922285079956055
    6. ' ' → logprob: -5.1172285079956055
    7. '           ' → logprob: -5.8672285079956055
    8. '   ' → logprob: -5.9922285079956055
    9. '    ' → logprob: -6.9922285079956055
    10. '_max' → logprob: -6.9922285079956055

Token 113: ' chev' (ID: 127415)
  Prédit: ' current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.11299087107181549
    2. 'current' → logprob: -2.2379908561706543
    3. '   ' → logprob: -9.862991333007812
    4. ' max' → logprob: -10.487991333007812
    5. 'max' → logprob: -10.737991333007812
    6. '	current' → logprob: -10.862991333007812
    7. 'Current' → logprob: -11.237991333007812
    8. '_current' → logprob: -11.987991333007812
    9. '=current' → logprob: -12.612991333007812
    10. ' ' → logprob: -12.737991333007812

Token 114: 'auche' (ID: 143141)
  Prédit: 'erge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'erge' → logprob: -0.044799357652664185
    2. 'er' → logprob: -4.669799327850342
    3. 'arge' → logprob: -4.794799327850342
    4. 'erve' → logprob: -5.294799327850342
    5. 'auche' → logprob: -5.294799327850342
    6. ' overlap' → logprob: -5.669799327850342
    7. '   ' → logprob: -6.044799327850342
    8. 'au' → logprob: -6.169799327850342
    9. 'erg' → logprob: -6.544799327850342
    10. '_overlap' → logprob: -6.919799327850342

Token 115: 'ment' (ID: 508)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.4141936302185059
    2. '_' → logprob: -1.5391936302185059
    3. 'r' → logprob: -1.6641936302185059
    4. '_end' → logprob: -3.289193630218506
    5. 'ment' → logprob: -3.414193630218506
    6. '   ' → logprob: -3.414193630218506
    7. ':' → logprob: -3.414193630218506
    8. '=' → logprob: -3.539193630218506
    9. ')' → logprob: -3.664193630218506
    10. ' =' → logprob: -3.914193630218506

Token 116: ',' (ID: 11)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.34232136607170105
    2. ':' → logprob: -1.9673213958740234
    3. ' and' → logprob: -2.3423213958740234
    4. ' et' → logprob: -4.217321395874023
    5. '           ' → logprob: -4.842321395874023
    6. ' :' → logprob: -4.967321395874023
    7. '       ' → logprob: -5.217321395874023
    8. ',' → logprob: -5.592321395874023
    9. ' =' → logprob: -5.717321395874023
    10. 'and' → logprob: -5.967321395874023

Token 117: ' on' (ID: 402)
  Prédit: ' current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.649050772190094
    2. '           ' → logprob: -0.774050772190094
    3. 'current' → logprob: -4.399050712585449
    4. ' max' → logprob: -6.649050712585449
    5. ' if' → logprob: -7.149050712585449
    6. '       ' → logprob: -7.899050712585449
    7. '               ' → logprob: -8.39905071258545
    8. ' ' → logprob: -8.89905071258545
    9. 'max' → logprob: -8.89905071258545
    10. 'end' → logprob: -9.39905071258545

Token 118: ' ét' (ID: 4976)
  Prédit: ' current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' current' → logprob: -1.3868168592453003
    2. '       ' → logprob: -1.5118168592453003
    3. 'current' → logprob: -1.5118168592453003
    4. ' continue' → logprob: -2.76181697845459
    5. 'merge' → logprob: -3.26181697845459
    6. 'continue' → logprob: -3.51181697845459
    7. ' update' → logprob: -3.51181697845459
    8. ' met' → logprob: -3.63681697845459
    9. ' merge' → logprob: -3.76181697845459
    10. 'update' → logprob: -4.01181697845459

Token 119: 'end' (ID: 419)
  Prédit: 'end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.002130633220076561
    2. 'ire' → logprob: -6.752130508422852
    3. 'endre' → logprob: -7.752130508422852
    4. 'ent' → logprob: -8.752130508422852
    5. '

' → logprob: -9.502130508422852
    6. '   ' → logprob: -9.627130508422852
    7. 'endra' → logprob: -10.127130508422852
    8. '
' → logprob: -10.502130508422852
    9. 'and' → logprob: -10.877130508422852
    10. '{' → logprob: -10.877130508422852

Token 120: ' la' (ID: 557)
  Prédit: ' current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.06700936704874039
    2. 'current' → logprob: -2.817009449005127
    3. '_current' → logprob: -5.817009449005127
    4. '   ' → logprob: -6.942009449005127
    5. ' le' → logprob: -7.942009449005127
    6. ' the' → logprob: -8.442008972167969
    7. '	current' → logprob: -9.067008972167969
    8. ' l' → logprob: -9.817008972167969
    9. '    ' → logprob: -10.067008972167969
    10. ' la' → logprob: -10.442008972167969

Token 121: ' fin' (ID: 2131)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.16674679517745972
    2. ' current' → logprob: -2.0417468547821045
    3. 'fin' → logprob: -5.166746616363525
    4. '_current' → logprob: -5.166746616363525
    5. ' fin' → logprob: -5.291746616363525
    6. 'end' → logprob: -5.541746616363525
    7. '_end' → logprob: -5.916746616363525
    8. '   ' → logprob: -8.791747093200684
    9. '_fin' → logprob: -8.791747093200684
    10. ' ' → logprob: -9.041747093200684

Token 122: '
' (ID: 198)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4656258821487427
    2. '<|end|>' → logprob: -2.090625762939453
    3. '_current' → logprob: -2.590625762939453
    4. '   ' → logprob: -2.715625762939453
    5. ' ' → logprob: -3.215625762939453
    6. ')' → logprob: -4.465625762939453
    7. '<|end|>' → logprob: -4.465625762939453
    8. 'current' → logprob: -4.590625762939453
    9. ' current' → logprob: -4.840625762939453
    10. '=' → logprob: -4.965625762939453

Token 123: '           ' (ID: 352)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7809969186782837
    2. '=' → logprob: -1.0309969186782837
    3. ' =' → logprob: -2.780996799468994
    4. ' ' → logprob: -3.030996799468994
    5. ':' → logprob: -3.405996799468994
    6. ')' → logprob: -4.530996799468994
    7. '   ' → logprob: -4.780996799468994
    8. ',' → logprob: -5.280996799468994
    9. '<|end|>' → logprob: -5.530996799468994
    10. ' _' → logprob: -5.780996799468994

Token 124: ' current' (ID: 2208)
  Prédit: ' current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.4329734742641449
    2. ' max' → logprob: -1.1829735040664673
    3. 'max' → logprob: -3.8079733848571777
    4. 'current' (adapté à ' current') → logprob: -3.8079733848571777
    5. '   ' → logprob: -8.557973861694336
    6. ' ' → logprob: -8.682973861694336
    7. '_current' → logprob: -10.182973861694336
    8. '	max' → logprob: -10.307973861694336
    9. '	current' → logprob: -10.432973861694336
    10. '=max' → logprob: -10.432973861694336

Token 125: '_end' (ID: 13707)
  Prédit: '_end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_end' → logprob: -0.00023929782037157565
    2. '_' → logprob: -8.500239372253418
    3. ' _' → logprob: -10.375239372253418
    4. '_END' → logprob: -13.625239372253418
    5. '   ' → logprob: -14.250239372253418
    6. '_End' → logprob: -15.000239372253418
    7. 'end' → logprob: -15.125239372253418
    8. '_max' → logprob: -15.125239372253418
    9. '_e' → logprob: -15.250239372253418
    10. '_
' → logprob: -15.375239372253418

Token 126: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16101302206516266
    2. '=' → logprob: -1.9110130071640015
    3. '=max' → logprob: -7.161013126373291
    4. 'max' → logprob: -12.411012649536133
    5. '<|end|>' → logprob: -12.661012649536133
    6. ' =
' → logprob: -13.286012649536133
    7. '=
' → logprob: -14.411012649536133
    8. '    ' → logprob: -14.786012649536133
    9. ' max' → logprob: -15.036012649536133
    10. '   ' → logprob: -15.161012649536133

Token 127: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.04859054833650589
    2. 'max' → logprob: -3.048590660095215
    3. '	max' → logprob: -12.923590660095215
    4. '(max' → logprob: -14.798590660095215
    5. '_max' → logprob: -16.2985897064209
    6. ',max' → logprob: -16.9235897064209
    7. '=max' → logprob: -17.1735897064209
    8. ' ' → logprob: -17.2985897064209
    9. ' end' → logprob: -17.2985897064209
    10. '[max' → logprob: -17.4235897064209

Token 128: '(current' (ID: 15023)
  Prédit: '(current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(current' → logprob: -0.013549809344112873
    2. 'current' → logprob: -4.8885498046875
    3. '(' → logprob: -5.1385498046875
    4. ' current' → logprob: -10.1385498046875
    5. ',current' → logprob: -11.5135498046875
    6. ' (' → logprob: -12.5135498046875
    7. '(
' → logprob: -13.0135498046875
    8. '(end' → logprob: -13.5135498046875
    9. '$current' → logprob: -14.2635498046875
    10. '	current' → logprob: -14.2635498046875

Token 129: '_end' (ID: 13707)
  Prédit: '_end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_end' → logprob: -0.00011236425780225545
    2. 'end' → logprob: -9.125112533569336
    3. '_' → logprob: -13.250112533569336
    4. ',end' → logprob: -15.125112533569336
    5. '-end' → logprob: -15.250112533569336
    6. 'End' → logprob: -15.375112533569336
    7. '_token' → logprob: -15.500112533569336
    8. '_END' → logprob: -16.125112533569336
    9. ',' → logprob: -16.250112533569336
    10. ' end' → logprob: -16.750112533569336

Token 130: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02478545531630516
    2. ',end' → logprob: -3.7747855186462402
    3. ' ,' → logprob: -6.52478551864624
    4. 'end' → logprob: -9.774785041809082
    5. ' end' → logprob: -12.274785041809082
    6. ',current' → logprob: -12.274785041809082
    7. ',
' → logprob: -13.399785041809082
    8. ' ' → logprob: -14.024785041809082
    9. '[end' → logprob: -14.274785041809082
    10. '(end' → logprob: -14.649785041809082

Token 131: ' end' (ID: 1268)
  Prédit: ' end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' end' → logprob: -0.16022443771362305
    2. 'end' → logprob: -1.910224437713623
    3. '	end' → logprob: -16.41022491455078
    4. '=end' → logprob: -16.53522491455078
    5. '(end' → logprob: -16.66022491455078
    6. '[end' → logprob: -17.16022491455078
    7. ''end' → logprob: -17.28522491455078
    8. ' ' → logprob: -17.28522491455078
    9. ',end' → logprob: -18.66022491455078
    10. '_end' → logprob: -18.91022491455078

Token 132: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010694405063986778
    2. ')
' → logprob: -4.88569450378418
    3. '       ' → logprob: -5.88569450378418
    4. '   ' → logprob: -8.51069450378418
    5. ' )' → logprob: -9.38569450378418
    6. '<|end|>' → logprob: -12.13569450378418
    7. ' )
' → logprob: -13.01069450378418
    8. '):
' → logprob: -13.13569450378418
    9. ')
' → logprob: -13.63569450378418
    10. ',' → logprob: -13.76069450378418

Token 133: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04153842851519585
    2. ' else' → logprob: -3.5415384769439697
    3. 'else' → logprob: -4.541538238525391
    4. '   ' → logprob: -7.416538238525391
    5. '
' → logprob: -9.04153823852539
    6. ')' → logprob: -9.54153823852539
    7. ' 
' → logprob: -9.66653823852539
    8. '    
' → logprob: -9.79153823852539
    9. '  
' → logprob: -10.29153823852539
    10. ' )' → logprob: -10.79153823852539

Token 134: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.04150640591979027
    2. '       ' → logprob: -3.291506290435791
    3. 'else' (adapté à ' else') → logprob: -5.791506290435791
    4. '   ' → logprob: -8.16650676727295
    5. '    ' → logprob: -9.91650676727295
    6. '	else' → logprob: -10.41650676727295
    7. ' elif' → logprob: -11.16650676727295
    8. '        ' → logprob: -11.79150676727295
    9. ' )' → logprob: -12.41650676727295
    10. '<|end|>' → logprob: -12.66650676727295

Token 135: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2881520092487335
    2. ':
' → logprob: -1.4131519794464111
    3. '       ' → logprob: -5.28815221786499
    4. '   ' → logprob: -7.28815221786499
    5. '           ' → logprob: -7.78815221786499
    6. ' :
' → logprob: -7.91315221786499
    7. ' :' → logprob: -8.413151741027832
    8. '):
' → logprob: -9.538151741027832
    9. ',' → logprob: -10.038151741027832
    10. '
' → logprob: -10.663151741027832

Token 136: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12678088247776031
    2. '   ' → logprob: -2.6267809867858887
    3. '           ' → logprob: -3.7517809867858887
    4. ' merged' → logprob: -4.751780986785889
    5. '
' → logprob: -5.001780986785889
    6. 'merged' → logprob: -5.126780986785889
    7. '        
' → logprob: -7.251780986785889
    8. '    
' → logprob: -7.751780986785889
    9. '#' → logprob: -8.87678050994873
    10. '            
' → logprob: -8.87678050994873

Token 137: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15924818813800812
    2. '
' → logprob: -2.534248113632202
    3. ' merged' → logprob: -3.159248113632202
    4. 'merged' → logprob: -4.284248352050781
    5. '   ' → logprob: -4.909248352050781
    6. '           ' → logprob: -5.534248352050781
    7. '        
' → logprob: -9.159248352050781
    8. ' 
' → logprob: -10.034248352050781
    9. 'Merged' → logprob: -10.909248352050781
    10. '            
' → logprob: -11.034248352050781

Token 138: ' pas' (ID: 2173)
  Prédit: ' merged'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' merged' → logprob: -0.29887422919273376
    2. 'merged' → logprob: -1.4238742589950562
    3. '   ' → logprob: -4.298874378204346
    4. '           ' → logprob: -5.923874378204346
    5. '       ' → logprob: -6.798874378204346
    6. '
' → logprob: -9.048873901367188
    7. ' ' → logprob: -10.798873901367188
    8. '    ' → logprob: -10.923873901367188
    9. 'Merged' → logprob: -11.048873901367188
    10. ' fused' → logprob: -12.673873901367188

Token 139: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.1232205256819725
    2. ' overlap' → logprob: -2.998220443725586
    3. '    ' → logprob: -3.998220443725586
    4. ' d' → logprob: -4.248220443725586
    5. '   ' → logprob: -4.748220443725586
    6. ' un' → logprob: -5.498220443725586
    7. ' ' → logprob: -5.623220443725586
    8. ' current' → logprob: -6.248220443725586
    9. ' merged' → logprob: -6.373220443725586
    10. 'de' → logprob: -6.373220443725586

Token 140: ' chev' (ID: 127415)
  Prédit: ' chev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chev' → logprob: -0.5305172801017761
    2. ' overlap' → logprob: -0.9055172801017761
    3. ' overlapping' → logprob: -6.030517101287842
    4. 'over' → logprob: -6.905517101287842
    5. ' ' → logprob: -7.405517101287842
    6. ' che' → logprob: -7.655517101287842
    7. 's' → logprob: -7.655517101287842
    8. ' overl' → logprob: -7.780517101287842
    9. 'che' → logprob: -7.905517101287842
    10. ' espace' → logprob: -8.030517578125

Token 141: 'auche' (ID: 143141)
  Prédit: 'auche'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'auche' → logprob: -0.08242705464363098
    2. 'achment' → logprob: -4.457427024841309
    3. 'achement' → logprob: -4.707427024841309
    4. 'ar' → logprob: -4.957427024841309
    5. 'lage' → logprob: -4.957427024841309
    6. 'la' → logprob: -4.957427024841309
    7. 'acement' → logprob: -5.582427024841309
    8. 'lav' → logprob: -5.707427024841309
    9. 'allage' → logprob: -5.707427024841309
    10. 'ancement' → logprob: -5.832427024841309

Token 142: 'ment' (ID: 508)
  Prédit: 'ment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ment' → logprob: -0.001556759118102491
    2. 'vement' → logprob: -7.376556873321533
    3. 'gment' → logprob: -7.876556873321533
    4. 'gement' → logprob: -8.876556396484375
    5. 'm' → logprob: -9.001556396484375
    6. 't' → logprob: -9.251556396484375
    7. 'nt' → logprob: -9.751556396484375
    8. 'mentation' → logprob: -10.251556396484375
    9. 'v' → logprob: -10.376556396484375
    10. 'nement' → logprob: -11.001556396484375

Token 143: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02688710018992424
    2. '
' → logprob: -4.151886940002441
    3. '       ' → logprob: -5.026886940002441
    4. '   ' → logprob: -5.901886940002441
    5. ',' → logprob: -7.026886940002441
    6. '    
' → logprob: -8.651886940002441
    7. 'merged' → logprob: -9.026886940002441
    8. '            
' → logprob: -9.151886940002441
    9. ',
' → logprob: -9.776886940002441
    10. '\n' → logprob: -10.276886940002441

Token 144: ' on' (ID: 402)
  Prédit: ' merged'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' merged' → logprob: -0.0532972551882267
    2. 'merged' → logprob: -3.053297281265259
    3. '   ' → logprob: -5.42829704284668
    4. '           ' → logprob: -8.67829704284668
    5. '       ' → logprob: -9.55329704284668
    6. ' ' → logprob: -10.42829704284668
    7. '    ' → logprob: -10.92829704284668
    8. 'Merged' → logprob: -12.05329704284668
    9. '            
' → logprob: -13.05329704284668
    10. ' ' → logprob: -13.17829704284668

Token 145: ' stock' (ID: 6546)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.2687075138092041
    2. 'append' → logprob: -2.518707513809204
    3. ' append' → logprob: -2.518707513809204
    4. '   ' → logprob: -3.268707513809204
    5. ' ajoute' → logprob: -4.268707275390625
    6. '           ' → logprob: -4.393707275390625
    7. ' merged' → logprob: -6.393707275390625
    8. '       ' → logprob: -6.768707275390625
    9. '_append' → logprob: -6.768707275390625
    10. '    ' → logprob: -7.268707275390625

Token 146: 'e' (ID: 68)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6758075952529907
    2. '   ' → logprob: -1.3008075952529907
    3. 'e' → logprob: -2.050807476043701
    4. '  ' → logprob: -4.050807476043701
    5. '.append' → logprob: -4.425807476043701
    6. ' current' → logprob: -4.675807476043701
    7. '       ' → logprob: -4.800807476043701
    8. 'le' → logprob: -4.925807476043701
    9. 'ne' → logprob: -4.925807476043701
    10. 'ule' → logprob: -5.550807476043701

Token 147: ' l' (ID: 305)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.8086775541305542
    2. ' current' → logprob: -1.4336775541305542
    3. '(current' → logprob: -1.5586775541305542
    4. 'current' → logprob: -2.4336776733398438
    5. ' ' → logprob: -5.058677673339844
    6. '[current' → logprob: -5.058677673339844
    7. ' (
' → logprob: -6.183677673339844
    8. '   ' → logprob: -6.808677673339844
    9. ')' → logprob: -7.808677673339844
    10. ',current' → logprob: -8.433677673339844

Token 148: ''ancien' (ID: 170667)
  Prédit: ' current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.13426820933818817
    2. 'current' → logprob: -3.009268283843994
    3. ' (' → logprob: -3.384268283843994
    4. ' ' → logprob: -3.634268283843994
    5. '(current' → logprob: -5.009268283843994
    6. '   ' → logprob: -5.884268283843994
    7. '[current' → logprob: -6.509268283843994
    8. ' (
' → logprob: -7.009268283843994
    9. ' merged' → logprob: -7.134268283843994
    10. ' tuple' → logprob: -7.509268283843994

Token 149: ' interval' (ID: 17116)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.7391563057899475
    2. 'current' → logprob: -1.3641562461853027
    3. ' current' → logprob: -1.8641562461853027
    4. ' interval' → logprob: -2.8641562461853027
    5. '_interval' → logprob: -3.3641562461853027
    6. '_current' → logprob: -5.239156246185303
    7. ',' → logprob: -5.739156246185303
    8. '   ' → logprob: -5.864156246185303
    9. '_' → logprob: -6.114156246185303
    10. ',current' → logprob: -6.114156246185303

Token 150: 'le' (ID: 282)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1554258167743683
    2. ' merged' → logprob: -3.155425786972046
    3. '   ' → logprob: -3.280425786972046
    4. ' ,' → logprob: -3.780425786972046
    5. 'merged' → logprob: -3.780425786972046
    6. 's' → logprob: -5.030426025390625
    7. ',
' → logprob: -5.780426025390625
    8. ')' → logprob: -6.030426025390625
    9. ' ' → logprob: -6.405426025390625
    10. 'Merged' → logprob: -7.030426025390625

Token 151: ' et' (ID: 859)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0025647184811532497
    2. '   ' → logprob: -7.002564907073975
    3. ',' → logprob: -7.252564907073975
    4. '            
' → logprob: -7.752564907073975
    5. '       ' → logprob: -8.502564430236816
    6. ',
' → logprob: -9.377564430236816
    7. '
' → logprob: -9.877564430236816
    8. 'current' → logprob: -10.127564430236816
    9. '    
' → logprob: -10.252564430236816
    10. '\n' → logprob: -10.627564430236816

Token 152: ' on' (ID: 402)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4398972988128662
    2. ' merged' → logprob: -1.3148972988128662
    3. 'merged' → logprob: -2.689897298812866
    4. ' current' → logprob: -5.439897537231445
    5. ' ajoute' → logprob: -5.564897537231445
    6. '   ' → logprob: -5.939897537231445
    7. 'current' → logprob: -6.064897537231445
    8. 'append' → logprob: -7.189897537231445
    9. ' append' → logprob: -7.189897537231445
    10. ' le' → logprob: -7.189897537231445

Token 153: ' démar' (ID: 72663)
  Prédit: ' ajoute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ajoute' → logprob: -0.7537108659744263
    2. 'append' → logprob: -1.1287108659744263
    3. ' append' → logprob: -2.2537107467651367
    4. 'current' → logprob: -3.8787107467651367
    5. '           ' → logprob: -4.128710746765137
    6. 'continue' → logprob: -4.378710746765137
    7. '.append' → logprob: -4.503710746765137
    8. ' continue' → logprob: -4.628710746765137
    9. ' current' → logprob: -4.753710746765137
    10. 'aj' → logprob: -5.878710746765137

Token 154: 're' (ID: 264)
  Prédit: 're'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.0023040547966957092
    2. 'r' → logprob: -6.1273040771484375
    3. 'e' → logprob: -10.377304077148438
    4. '
' → logprob: -10.877304077148438
    5. 'rer' → logprob: -10.877304077148438
    6. '```' → logprob: -11.877304077148438
    7. 'ra' → logprob: -12.002304077148438
    8. 'rage' → logprob: -12.127304077148438
    9. '   ' → logprob: -12.252304077148438
    10. 'race' → logprob: -12.627304077148438

Token 155: ' un' (ID: 537)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.5606319904327393
    2. ' un' → logprob: -1.3106319904327393
    3. ' current' → logprob: -2.5606319904327393
    4. ' a' → logprob: -3.4356319904327393
    5. ' new' → logprob: -4.06063175201416
    6. 'current' → logprob: -4.31063175201416
    7. ' ' → logprob: -4.93563175201416
    8. '   ' → logprob: -5.68563175201416
    9. 'un' → logprob: -6.18563175201416
    10. '    ' → logprob: -6.68563175201416

Token 156: ' nouveau' (ID: 23184)
  Prédit: ' nouveau'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nouveau' → logprob: -0.6680031418800354
    2. 'nou' → logprob: -1.6680030822753906
    3. ' new' → logprob: -2.0430030822753906
    4. 'new' → logprob: -2.6680030822753906
    5. ' nouvel' → logprob: -3.0430030822753906
    6. '   ' → logprob: -4.168003082275391
    7. 'interval' → logprob: -4.418003082275391
    8. 'n' → logprob: -5.043003082275391
    9. ' interval' → logprob: -5.668003082275391
    10. ' ' → logprob: -5.793003082275391

Token 157: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5736371278762817
    2. '
' → logprob: -1.0736371278762817
    3. '    
' → logprob: -2.948637008666992
    4. 'interval' → logprob: -3.948637008666992
    5. '\n' → logprob: -4.323637008666992
    6. ' interval' → logprob: -6.073637008666992
    7. ' 
' → logprob: -6.448637008666992
    8. 'current' → logprob: -6.823637008666992
    9. ',' → logprob: -7.073637008666992
    10. '  
' → logprob: -7.448637008666992

Token 158: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.771853506565094
    2. '           ' → logprob: -1.3968534469604492
    3. '    
' → logprob: -2.146853446960449
    4. '            
' → logprob: -2.771853446960449
    5. '\n' → logprob: -3.146853446960449
    6. '   ' → logprob: -3.521853446960449
    7. '  
' → logprob: -4.271853446960449
    8. ' 
' → logprob: -4.521853446960449
    9. '       ' → logprob: -5.271853446960449
    10. '   
' → logprob: -5.771853446960449

Token 159: ' merged' (ID: 49536)
  Prédit: 'merged'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'merged' (adapté à ' merged') → logprob: -0.9857791662216187
    2. ' merged' → logprob: -1.1107791662216187
    3. '   ' → logprob: -1.3607791662216187
    4. '
' → logprob: -3.485779285430908
    5. '       ' → logprob: -4.985779285430908
    6. '           ' → logprob: -6.735779285430908
    7. ' 
' → logprob: -6.860779285430908
    8. '    
' → logprob: -6.985779285430908
    9. '        
' → logprob: -8.48577880859375
    10. '            
' → logprob: -9.61077880859375

Token 160: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0001114106344175525
    2. '.' → logprob: -9.12511157989502
    3. '.extend' → logprob: -13.62511157989502
    4. ' .' → logprob: -14.12511157989502
    5. '.add' → logprob: -16.250110626220703
    6. 'append' → logprob: -16.375110626220703
    7. '.push' → logprob: -16.375110626220703
    8. '_append' → logprob: -17.000110626220703
    9. '.setdefault' → logprob: -17.000110626220703
    10. '_inter' → logprob: -17.125110626220703

Token 161: '((' (ID: 2054)
  Prédit: '(current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(current' → logprob: -0.6298354864120483
    2. '((' → logprob: -0.8798354864120483
    3. ' (' → logprob: -3.129835605621338
    4. '(' → logprob: -4.754835605621338
    5. ' ((' → logprob: -9.50483512878418
    6. '(interval' → logprob: -10.62983512878418
    7. '([' → logprob: -11.37983512878418
    8. ' ' → logprob: -11.75483512878418
    9. '   ' → logprob: -12.37983512878418
    10. '(curr' → logprob: -13.12983512878418

Token 162: 'current' (ID: 5804)
  Prédit: 'current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.00020425561524461955
    2. ' current' → logprob: -8.500204086303711
    3. '(current' → logprob: -14.750204086303711
    4. '   ' → logprob: -15.250204086303711
    5. 'cur' → logprob: -16.87520408630371
    6. '$current' → logprob: -17.25020408630371
    7. '	current' → logprob: -17.87520408630371
    8. 'Current' → logprob: -18.25020408630371
    9. ' ' → logprob: -18.37520408630371
    10. 'curr' → logprob: -18.50020408630371

Token 163: '_start' (ID: 10949)
  Prédit: '_start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -1.6405310816480778e-05
    2. '_end' → logprob: -11.375016212463379
    3. '_' → logprob: -13.375016212463379
    4. 'start' → logprob: -13.875016212463379
    5. ' _' → logprob: -14.125016212463379
    6. '_START' → logprob: -14.750016212463379
    7. ')_' → logprob: -15.625016212463379
    8. 'Start' → logprob: -15.750016212463379
    9. '_,' → logprob: -15.750016212463379
    10. '_s' → logprob: -16.125017166137695

Token 164: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.65707261255011e-06
    2. ',)' → logprob: -12.500008583068848
    3. ')' → logprob: -14.000008583068848
    4. ',
' → logprob: -14.125008583068848
    5. ' ,' → logprob: -14.125008583068848
    6. ',current' → logprob: -14.125008583068848
    7. '‌,' → logprob: -14.625008583068848
    8. '),' → logprob: -14.750008583068848
    9. ',

' → logprob: -14.875008583068848
    10. ',),' → logprob: -15.625008583068848

Token 165: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.16022545099258423
    2. ' current' → logprob: -1.9102253913879395
    3. '	current' → logprob: -15.035225868225098
    4. ',current' → logprob: -15.035225868225098
    5. '$current' → logprob: -15.285225868225098
    6. '(current' → logprob: -16.03522491455078
    7. '[current' → logprob: -16.16022491455078
    8. '_current' → logprob: -16.41022491455078
    9. ' ' → logprob: -16.78522491455078
    10. 'urrent' → logprob: -17.03522491455078

Token 166: '_end' (ID: 13707)
  Prédit: '_end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_end' → logprob: -3.4121114822482923e-06
    2. '_' → logprob: -13.500003814697266
    3. '_start' → logprob: -13.500003814697266
    4. 'end' → logprob: -15.125003814697266
    5. ')_' → logprob: -16.125003814697266
    6. ' _' → logprob: -16.500003814697266
    7. '_END' → logprob: -17.000003814697266
    8. '_e' → logprob: -17.000003814697266
    9. '_en' → logprob: -17.250003814697266
    10. '_fin' → logprob: -18.000003814697266

Token 167: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006137464661151171
    2. ')
' → logprob: -5.631137371063232
    3. '))' → logprob: -6.006137371063232
    4. '))
' → logprob: -10.25613784790039
    5. ',' → logprob: -11.13113784790039
    6. '   ' → logprob: -11.38113784790039
    7. '),' → logprob: -12.63113784790039
    8. ' )' → logprob: -13.13113784790039
    9. ')))' → logprob: -14.00613784790039
    10. ',)' → logprob: -14.13113784790039

Token 168: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09318193793296814
    2. '\n' → logprob: -3.718181848526001
    3. '
' → logprob: -3.843181848526001
    4. '    
' → logprob: -3.968181848526001
    5. 'current' → logprob: -4.46818208694458
    6. ' current' → logprob: -5.46818208694458
    7. '  
' → logprob: -5.71818208694458
    8. '       ' → logprob: -6.71818208694458
    9. ' 
' → logprob: -7.21818208694458
    10. '   
' → logprob: -7.34318208694458

Token 169: ' current' (ID: 2208)
  Prédit: ' current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.6978648900985718
    2. 'current' (adapté à ' current') → logprob: -0.6978648900985718
    3. '(current' → logprob: -5.447865009307861
    4. '
' → logprob: -9.072864532470703
    5. '   ' → logprob: -9.072864532470703
    6. ' (' → logprob: -9.447864532470703
    7. ' 
' → logprob: -10.322864532470703
    8. 'start' → logprob: -10.822864532470703
    9. '           ' → logprob: -11.947864532470703
    10. '            
' → logprob: -12.197864532470703

Token 170: '_start' (ID: 10949)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4767489731311798
    2. '_start' → logprob: -0.9767489433288574
    3. ' _' → logprob: -6.726748943328857
    4. '_s' → logprob: -6.976748943328857
    5. ')_' → logprob: -8.851749420166016
    6. '_space' → logprob: -9.351749420166016
    7. '=_' → logprob: -10.476749420166016
    8. '_
' → logprob: -10.601749420166016
    9. '_=' → logprob: -10.726749420166016
    10. '_new' → logprob: -10.726749420166016

Token 171: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.37211874127388
    2. ',' → logprob: -1.7471187114715576
    3. ' =' → logprob: -1.9971187114715576
    4. ' ,' → logprob: -7.247118949890137
    5. ')' → logprob: -12.122118949890137
    6. '<|end|>' → logprob: -12.497118949890137
    7. ' =)' → logprob: -13.997118949890137
    8. ' ' → logprob: -14.497118949890137
    9. ',current' → logprob: -14.747118949890137
    10. '<|end|>' → logprob: -15.247118949890137

Token 172: ' current' (ID: 2208)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.19813062250614166
    2. 'current' → logprob: -2.5731306076049805
    3. ' start' → logprob: -2.6981306076049805
    4. ' current' → logprob: -3.3231306076049805
    5. '=start' → logprob: -10.57313060760498
    6. '<|end|>' → logprob: -11.07313060760498
    7. ' ' → logprob: -12.07313060760498
    8. 'end' → logprob: -12.07313060760498
    9. '[start' → logprob: -12.44813060760498
    10. '_start' → logprob: -13.07313060760498

Token 173: '_end' (ID: 13707)
  Prédit: '_end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_end' → logprob: -0.0002658655575942248
    2. '_' → logprob: -8.625266075134277
    3. '=' → logprob: -10.250266075134277
    4. 'end' → logprob: -10.625266075134277
    5. '_start' → logprob: -11.625266075134277
    6. ' =' → logprob: -12.375266075134277
    7. '=_' → logprob: -12.500266075134277
    8. ' _' → logprob: -12.625266075134277
    9. '=end' → logprob: -12.875266075134277
    10. '_=' → logprob: -14.000266075134277

Token 174: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3868715465068817
    2. ' =' → logprob: -1.136871576309204
    3. '=start' → logprob: -15.886871337890625
    4. '=end' → logprob: -16.011871337890625
    5. ')' → logprob: -16.636871337890625
    6. '＝' → logprob: -16.636871337890625
    7. '=
' → logprob: -17.261871337890625
    8. '=

' → logprob: -17.636871337890625
    9. ' ' → logprob: -17.886871337890625
    10. ',' → logprob: -17.886871337890625

Token 175: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.014175030402839184
    2. ' start' → logprob: -4.264174938201904
    3. '(start' → logprob: -11.389175415039062
    4. '[start' → logprob: -16.764175415039062
    5. '	start' → logprob: -16.889175415039062
    6. '   ' → logprob: -18.639175415039062
    7. '(' → logprob: -18.764175415039062
    8. ' (' → logprob: -18.889175415039062
    9. '=start' → logprob: -18.889175415039062
    10. ' ' → logprob: -18.889175415039062

Token 176: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00032068457221612334
    2. '<|end|>' → logprob: -9.000320434570312
    3. ',
' → logprob: -9.250320434570312
    4. ' ,' → logprob: -9.625320434570312
    5. ',end' → logprob: -11.500320434570312
    6. '   ' → logprob: -11.500320434570312
    7. '<|end|>' → logprob: -12.500320434570312
    8. '       ' → logprob: -13.000320434570312
    9. ',current' → logprob: -13.500320434570312
    10. ',None' → logprob: -13.625320434570312

Token 177: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.20141343772411346
    2. ' end' → logprob: -1.7014133930206299
    3. ' ' → logprob: -16.701414108276367
    4. '	end' → logprob: -17.076414108276367
    5. '=end' → logprob: -17.451414108276367
    6. '[end' → logprob: -18.076414108276367
    7. '(end' → logprob: -18.201414108276367
    8. ''end' → logprob: -18.326414108276367
    9. '_end' → logprob: -18.826414108276367
    10. '   ' → logprob: -19.076414108276367

Token 178: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006478638388216496
    2. '    
' → logprob: -7.875648021697998
    3. '
' → logprob: -8.37564754486084
    4. '  
' → logprob: -11.75064754486084
    5. ')' → logprob: -12.25064754486084
    6. '       ' → logprob: -12.50064754486084
    7. 'merged' → logprob: -12.50064754486084
    8. '   
' → logprob: -12.75064754486084
    9. ')
' → logprob: -13.00064754486084
    10. '\n' → logprob: -13.25064754486084

Token 179: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007444059010595083
    2. '
' → logprob: -5.007443904876709
    3. '    
' → logprob: -7.757443904876709
    4. '  
' → logprob: -9.507444381713867
    5. 'merged' → logprob: -9.507444381713867
    6. '\n' → logprob: -10.132444381713867
    7. ')
' → logprob: -11.007444381713867
    8. ')' → logprob: -11.007444381713867
    9. ' merged' → logprob: -11.132444381713867
    10. '   
' → logprob: -11.757444381713867

Token 180: ' merged' (ID: 49536)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0022777693811804056
    2. 'merged' (adapté à ' merged') → logprob: -6.127277851104736
    3. ' merged' → logprob: -10.127277374267578
    4. '
' → logprob: -10.377277374267578
    5. ')' → logprob: -11.377277374267578
    6. '    
' → logprob: -12.252277374267578
    7. '```' → logprob: -13.127277374267578
    8. ')
' → logprob: -13.627277374267578
    9. '[' → logprob: -15.002277374267578
    10. '       ' → logprob: -15.127277374267578

Token 181: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -3.607391408877447e-05
    2. '.' → logprob: -10.250036239624023
    3. 'append' → logprob: -14.500036239624023
    4. ' .' → logprob: -16.875036239624023
    5. '.app' → logprob: -17.500036239624023
    6. '   ' → logprob: -17.875036239624023
    7. '.Append' → logprob: -19.625036239624023
    8. '.
' → logprob: -19.750036239624023
    9. '.add' → logprob: -20.125036239624023
    10. '.push' → logprob: -20.125036239624023

Token 182: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.00015872348740231246
    2. '(' → logprob: -8.750158309936523
    3. '(
' → logprob: -15.875158309936523
    4. '(('' → logprob: -16.625158309936523
    5. ' ((' → logprob: -17.125158309936523
    6. '(current' → logprob: -17.250158309936523
    7. '(("' → logprob: -18.375158309936523
    8. ' ' → logprob: -18.625158309936523
    9. ' (' → logprob: -19.000158309936523
    10. '()' → logprob: -20.000158309936523

Token 183: 'current' (ID: 5804)
  Prédit: 'current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -2.15310683415737e-05
    2. ' current' → logprob: -10.750021934509277
    3. '(current' → logprob: -17.87502098083496
    4. '_current' → logprob: -19.00002098083496
    5. '$current' → logprob: -19.12502098083496
    6. 'cur' → logprob: -19.37502098083496
    7. 'urrent' → logprob: -20.87502098083496
    8. 'Current' → logprob: -21.12502098083496
    9. '	current' → logprob: -21.12502098083496
    10. '[current' → logprob: -21.37502098083496

Token 184: '_start' (ID: 10949)
  Prédit: '_start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -7.896309739408025e-07
    2. 'start' → logprob: -14.500000953674316
    3. '_' → logprob: -17.0
    4. '_current' → logprob: -17.5
    5. '_START' → logprob: -17.625
    6. 'Start' → logprob: -18.125
    7. '_end' → logprob: -18.25
    8. '_,' → logprob: -18.75
    9. ' _' → logprob: -18.75
    10. ')_' → logprob: -19.0

Token 185: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.045823566731997e-05
    2. ' ,' → logprob: -10.875020027160645
    3. ',current' → logprob: -13.750020027160645
    4. ',
' → logprob: -15.000020027160645
    5. '‌,' → logprob: -18.00002098083496
    6. '   ' → logprob: -18.00002098083496
    7. ',

' → logprob: -19.12502098083496
    8. ')' → logprob: -19.25002098083496
    9. '،' → logprob: -19.62502098083496
    10. 'current' → logprob: -19.62502098083496

Token 186: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.3868715465068817
    2. ' current' → logprob: -1.136871576309204
    3. '$current' → logprob: -16.011871337890625
    4. '_current' → logprob: -16.136871337890625
    5. ' ' → logprob: -16.261871337890625
    6. '(current' → logprob: -16.511871337890625
    7. '	current' → logprob: -16.886871337890625
    8. ',current' → logprob: -17.011871337890625
    9. '[current' → logprob: -17.136871337890625
    10. 'Current' → logprob: -17.261871337890625

Token 187: '_end' (ID: 13707)
  Prédit: '_end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_end' → logprob: -1.4855663721391466e-05
    2. 'end' → logprob: -12.000015258789062
    3. ',' → logprob: -12.250015258789062
    4. ',_' → logprob: -13.500015258789062
    5. '_END' → logprob: -14.125015258789062
    6. ')_' → logprob: -14.500015258789062
    7. '_' → logprob: -15.125015258789062
    8. ')' → logprob: -15.250015258789062
    9. ',end' → logprob: -15.375015258789062
    10. ' _' → logprob: -15.750015258789062

Token 188: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005336574278771877
    2. ')
' → logprob: -5.380336761474609
    3. '))' → logprob: -7.255336761474609
    4. '))
' → logprob: -12.13033676147461
    5. ')
' → logprob: -13.38033676147461
    6. ' )' → logprob: -13.88033676147461
    7. '   ' → logprob: -14.50533676147461
    8. ')return' → logprob: -14.50533676147461
    9. ')`' → logprob: -14.88033676147461
    10. ')

' → logprob: -15.63033676147461

Token 189: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005388499237596989
    2. 'return' → logprob: -5.7553887367248535
    3. '
' → logprob: -6.8803887367248535
    4. ' return' → logprob: -7.2553887367248535
    5. '	return' → logprob: -8.380388259887695
    6. '    
' → logprob: -8.755388259887695
    7. ' ' → logprob: -10.380388259887695
    8. ':return' → logprob: -11.380388259887695
    9. '  ' → logprob: -11.755388259887695
    10. '    ' → logprob: -12.005388259887695

Token 190: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.6072492599487305
    2. '   ' → logprob: -1.1072492599487305
    3. ' return' → logprob: -2.1072492599487305
    4. '
' → logprob: -6.3572492599487305
    5. '	return' → logprob: -6.8572492599487305
    6. '    
' → logprob: -8.73224925994873
    7. ' ' → logprob: -9.35724925994873
    8. ':return' → logprob: -10.85724925994873
    9. ' 
' → logprob: -11.35724925994873
    10. '\n' → logprob: -11.98224925994873

Token 191: ' merged' (ID: 49536)
  Prédit: ' merged'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' merged' → logprob: -0.2014141082763672
    2. 'merged' → logprob: -1.7014141082763672
    3. ' ' → logprob: -14.826414108276367
    4. 'merge' → logprob: -15.951414108276367
    5. ' ' → logprob: -16.076414108276367
    6. 'Merged' → logprob: -16.076414108276367
    7. 'mer' → logprob: -16.951414108276367
    8. 'm' → logprob: -17.451414108276367
    9. ' merge' → logprob: -17.951414108276367
    10. ' fused' → logprob: -18.326414108276367

Token 192: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.34884586930274963
    2. 'def' → logprob: -1.5988458395004272
    3. '<|end|>' → logprob: -2.723845958709717
    4. '#' → logprob: -5.098845958709717
    5. '

' → logprob: -5.348845958709717
    6. ')' → logprob: -5.723845958709717
    7. '[' → logprob: -6.348845958709717
    8. '    
' → logprob: -6.473845958709717
    9. '\n' → logprob: -6.473845958709717
    10. '<|end|>' → logprob: -6.598845958709717

Token 193: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5345005393028259
    2. '
' → logprob: -0.9095005393028259
    3. '#' → logprob: -5.034500598907471
    4. '

' → logprob: -5.784500598907471
    5. '' → logprob: -7.909500598907471
    6. '  
' → logprob: -8.409500122070312
    7. '[' → logprob: -8.659500122070312
    8. ' def' → logprob: -8.784500122070312
    9. '\n' → logprob: -8.909500122070312
    10. ' 
' → logprob: -9.034500122070312

Token 194: ' interval' (ID: 17116)
  Prédit: ' process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' process' → logprob: -0.6247411966323853
    2. ' analyze' → logprob: -1.9997411966323853
    3. ' parse' → logprob: -2.3747410774230957
    4. 'process' → logprob: -2.8747410774230957
    5. ' main' → logprob: -3.2497410774230957
    6. ' analyse' → logprob: -3.3747410774230957
    7. ' find' → logprob: -4.124741077423096
    8. ' get' → logprob: -4.249741077423096
    9. 'parse' → logprob: -4.249741077423096
    10. ' count' → logprob: -4.499741077423096

Token 195: '_overlap' (ID: 179163)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2852596342563629
    2. '_' → logprob: -1.4102596044540405
    3. '_s' → logprob: -5.66025972366333
    4. '_contains' → logprob: -8.410259246826172
    5. ' s' → logprob: -9.160259246826172
    6. '_overlap' → logprob: -9.410259246826172
    7. '_list' → logprob: -10.410259246826172
    8. '_search' → logprob: -10.785259246826172
    9. '_union' → logprob: -10.785259246826172
    10. '_append' → logprob: -11.035259246826172

Token 196: '(interval' (ID: 100435)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07492958009243011
    2. '(interval' → logprob: -2.6999294757843018
    3. '(a' → logprob: -6.324929714202881
    4. '_' → logprob: -7.199929714202881
    5. '(s' → logprob: -7.449929714202881
    6. ' (' → logprob: -7.449929714202881
    7. '(inter' → logprob: -7.949929714202881
    8. 's' → logprob: -8.074929237365723
    9. '_inter' → logprob: -8.574929237365723
    10. '((' → logprob: -9.324929237365723

Token 197: '1' (ID: 16)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.08483190834522247
    2. '):' → logprob: -2.959831953048706
    3. ',' → logprob: -3.584831953048706
    4. ')' → logprob: -6.834831714630127
    5. 'a' → logprob: -8.709832191467285
    6. '_' → logprob: -8.959832191467285
    7. '):
' → logprob: -9.334832191467285
    8. '1' → logprob: -9.584832191467285
    9. '_a' → logprob: -9.709832191467285
    10. '[' → logprob: -10.209832191467285

Token 198: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0014130928320810199
    2. '):' → logprob: -6.626412868499756
    3. ' ,' → logprob: -10.876413345336914
    4. '_,' → logprob: -11.001413345336914
    5. 's' → logprob: -11.251413345336914
    6. '_' → logprob: -11.501413345336914
    7. '[' → logprob: -12.001413345336914
    8. '(interval' → logprob: -12.376413345336914
    9. '):
' → logprob: -12.626413345336914
    10. ',
' → logprob: -12.751413345336914

Token 199: ' interval' (ID: 17116)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.055405404418706894
    2. ' interval' → logprob: -2.930405378341675
    3. '(interval' → logprob: -7.680405616760254
    4. 'int' → logprob: -11.180405616760254
    5. 'inter' → logprob: -11.305405616760254
    6. ')' → logprob: -11.680405616760254
    7. ' intervals' → logprob: -11.805405616760254
    8. '_interval' → logprob: -12.430405616760254
    9. ' intervalo' → logprob: -12.680405616760254
    10. ' (' → logprob: -12.930405616760254

Token 200: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.1298740953207016
    2. 's' → logprob: -2.7548739910125732
    3. '1' → logprob: -3.2548739910125732
    4. '):' → logprob: -4.129874229431152
    5. ',' → logprob: -6.629874229431152
    6. ')' → logprob: -6.629874229431152
    7. '[' → logprob: -7.754874229431152
    8. '_' → logprob: -8.504874229431152
    9. '):
' → logprob: -8.754874229431152
    10. '_,' → logprob: -11.504874229431152

Token 201: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0019159071380272508
    2. '):
' → logprob: -6.37691593170166
    3. ')' → logprob: -8.50191593170166
    4. ' ):' → logprob: -12.12691593170166
    5. ',' → logprob: -13.37691593170166
    6. '):
' → logprob: -13.62691593170166
    7. ':' → logprob: -14.25191593170166
    8. '[' → logprob: -14.75191593170166
    9. '):

' → logprob: -15.12691593170166
    10. '   ' → logprob: -15.12691593170166

Token 202: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.026726361364126205
    2. '(a' → logprob: -4.026726245880127
    3. '(interval' → logprob: -5.276726245880127
    4. '(start' → logprob: -6.526726245880127
    5. '(:' → logprob: -7.776726245880127
    6. '((' → logprob: -7.776726245880127
    7. ':' → logprob: -8.151726722717285
    8. '(i' → logprob: -8.151726722717285
    9. '):' → logprob: -8.651726722717285
    10. ' (' → logprob: -9.901726722717285

Token 203: ' """
' (ID: 7037)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7889783978462219
    2. '(' → logprob: -0.9139783978462219
    3. ' (' → logprob: -3.038978338241577
    4. '   ' → logprob: -3.288978338241577
    5. ' :' → logprob: -3.663978338241577
    6. '):' → logprob: -4.038978576660156
    7. '(
' → logprob: -5.288978576660156
    8. ')' → logprob: -6.038978576660156
    9. '():' → logprob: -6.288978576660156
    10. ',' → logprob: -6.788978576660156

Token 204: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01589980535209179
    2. '    ' → logprob: -4.265899658203125
    3. ')' → logprob: -7.390899658203125
    4. ' (' → logprob: -8.265899658203125
    5. ' )' → logprob: -8.515899658203125
    6. ',' → logprob: -9.140899658203125
    7. '(' → logprob: -9.765899658203125
    8. 'def' → logprob: -9.765899658203125
    9. ' """' → logprob: -9.765899658203125
    10. ' """
' → logprob: -10.390899658203125

Token 205: ' Cal' (ID: 4453)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.056943826377391815
    2. ' 
' → logprob: -4.306943893432617
    3. 'def' → logprob: -4.556943893432617
    4. '    ' → logprob: -4.806943893432617
    5. '(
' → logprob: -5.431943893432617
    6. ' (' → logprob: -5.931943893432617
    7. ' (
' → logprob: -5.931943893432617
    8. ' ' → logprob: -6.181943893432617
    9. '(' → logprob: -6.306943893432617
    10. ')' → logprob: -6.431943893432617

Token 206: 'cule' (ID: 45017)
  Prédit: 'cule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cule' → logprob: -0.04170182719826698
    2. 'cul' → logprob: -3.4167017936706543
    3. 'c' → logprob: -4.916701793670654
    4. 'culate' → logprob: -8.541702270507812
    5. 'cula' → logprob: -8.666702270507812
    6. 'cules' → logprob: -8.916702270507812
    7. '
' → logprob: -10.166702270507812
    8. 'cu' → logprob: -10.416702270507812
    9. '``' → logprob: -11.166702270507812
    10. '   ' → logprob: -11.416702270507812

Token 207: ' la' (ID: 557)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.18502835929393768
    2. ' if' → logprob: -3.310028314590454
    3. '   ' → logprob: -3.685028314590454
    4. '1' → logprob: -4.185028553009033
    5. ' max' → logprob: -4.435028553009033
    6. '_' → logprob: -4.810028553009033
    7. ' s' → logprob: -4.810028553009033
    8. ' True' → logprob: -5.060028553009033
    9. ' =' → logprob: -5.185028553009033
    10. ' la' → logprob: -5.310028553009033

Token 208: ' durée' (ID: 57595)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.6718723773956299
    2. 'max' → logprob: -0.7968723773956299
    3. ' min' → logprob: -3.67187237739563
    4. 'min' → logprob: -4.671872138977051
    5. ' overlap' → logprob: -6.296872138977051
    6. ' maximum' → logprob: -7.546872138977051
    7. 'int' → logprob: -8.92187213897705
    8. '1' → logprob: -9.04687213897705
    9. ' maximale' → logprob: -9.04687213897705
    10. '   ' → logprob: -9.29687213897705

Token 209: ' de' (ID: 334)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 210: ' rec' (ID: 1369)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.2616705596446991
    2. ' max' → logprob: -1.5116705894470215
    3. 'min' → logprob: -5.6366705894470215
    4. ' min' → logprob: -6.0116705894470215
    5. ' l' → logprob: -6.5116705894470215
    6. 'l' → logprob: -6.7616705894470215
    7. 'interval' → logprob: -8.136670112609863
    8. ' la' → logprob: -8.511670112609863
    9. 'inter' → logprob: -9.011670112609863
    10. ' overlap' → logprob: -9.261670112609863

Token 211: 'ouv' (ID: 14851)
  Prédit: 'ouv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ouv' → logprob: -0.0015658074989914894
    2. ' chev' → logprob: -7.501565933227539
    3. 'ouvre' → logprob: -7.626565933227539
    4. 'verture' → logprob: -9.126565933227539
    5. 'oup' → logprob: -9.376565933227539
    6. 'ouverte' → logprob: -10.251565933227539
    7. 'ouvr' → logprob: -10.376565933227539
    8. '_' → logprob: -10.376565933227539
    9. 'ou' → logprob: -10.751565933227539
    10. 't' → logprob: -10.876565933227539

Token 212: 'rement' (ID: 66132)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.9531440734863281
    2. 'rement' → logprob: -0.9531440734863281
    3. 'erp' → logprob: -1.5781440734863281
    4. 'verture' → logprob: -5.328144073486328
    5. 'erve' → logprob: -5.953144073486328
    6. 'ep' → logprob: -6.203144073486328
    7. 'ert' → logprob: -6.203144073486328
    8. 'r' → logprob: -6.203144073486328
    9. 'nement' → logprob: -6.328144073486328
    10. 'erap' → logprob: -6.703144073486328

Token 213: ' entre' (ID: 3853)
  Prédit: ' entre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' entre' → logprob: -1.0232155323028564
    2. ' (' → logprob: -1.1482155323028564
    3. '_' → logprob: -2.1482155323028564
    4. ' ' → logprob: -2.6482155323028564
    5. '(' → logprob: -2.8982155323028564
    6. ' between' → logprob: -2.8982155323028564
    7. ' =' → logprob: -5.023215293884277
    8. '   ' → logprob: -6.023215293884277
    9. '  ' → logprob: -6.023215293884277
    10. 'entre' → logprob: -6.148215293884277

Token 214: ' deux' (ID: 10301)
  Prédit: ' interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' interval' → logprob: -0.03083960711956024
    2. 'interval' → logprob: -3.530839681625366
    3. '(interval' → logprob: -7.905839443206787
    4. ' (' → logprob: -8.155839920043945
    5. ' ' → logprob: -8.905839920043945
    6. 'inter' → logprob: -9.405839920043945
    7. ' interv' → logprob: -10.155839920043945
    8. ' intervalo' → logprob: -10.405839920043945
    9. ')' → logprob: -10.530839920043945
    10. ' ' → logprob: -10.655839920043945

Token 215: ' interv' (ID: 37413)
  Prédit: ' intervals'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' intervals' → logprob: -0.72220778465271
    2. ' interv' → logprob: -1.47220778465271
    3. ' (' → logprob: -2.09720778465271
    4. '_inter' → logprob: -2.84720778465271
    5. '(interval' → logprob: -3.22220778465271
    6. 'interval' → logprob: -3.72220778465271
    7. 'inter' → logprob: -4.472208023071289
    8. ' interval' → logprob: -4.972208023071289
    9. '(' → logprob: -5.222208023071289
    10. '_' → logprob: -5.472208023071289

Token 216: 'alles' (ID: 28825)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.0037554248701781034
    2. 'als' → logprob: -5.878755569458008
    3. 'alle' → logprob: -7.753755569458008
    4. 'alve' → logprob: -9.378755569458008
    5. 'alse' → logprob: -9.503755569458008
    6. '   ' → logprob: -9.753755569458008
    7. '[' → logprob: -10.128755569458008
    8. 'alles' → logprob: -10.378755569458008
    9. 'ale' → logprob: -10.753755569458008
    10. '(
' → logprob: -10.878755569458008

Token 217: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.34079769253730774
    2. '(interval' → logprob: -2.0907976627349854
    3. '_' → logprob: -3.0907976627349854
    4. ':' → logprob: -3.2157976627349854
    5. ' (' → logprob: -3.9657976627349854
    6. ')' → logprob: -3.9657976627349854
    7. ',' → logprob: -4.4657979011535645
    8. '(
' → logprob: -5.3407979011535645
    9. '):' → logprob: -5.4657979011535645
    10. '[' → logprob: -5.5907979011535645

Token 218: 'start' (ID: 5236)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.5141552686691284
    2. ')' → logprob: -1.7641552686691284
    3. ',' → logprob: -1.8891552686691284
    4. ' interval' → logprob: -3.264155387878418
    5. '(interval' → logprob: -4.139155387878418
    6. ' (' → logprob: -4.889155387878418
    7. ' )' → logprob: -4.889155387878418
    8. '(' → logprob: -6.014155387878418
    9. ' ,' → logprob: -6.139155387878418
    10. '1' → logprob: -6.389155387878418

Token 219: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11059479415416718
    2. '1' → logprob: -2.8605947494506836
    3. '_,' → logprob: -3.7355947494506836
    4. '_' → logprob: -4.360594749450684
    5. '[' → logprob: -5.110594749450684
    6. ' ,' → logprob: -5.985594749450684
    7. ',_' → logprob: -7.235594749450684
    8. ')' → logprob: -8.485594749450684
    9. '2' → logprob: -8.610594749450684
    10. '   ' → logprob: -8.610594749450684

Token 220: ' end' (ID: 1268)
  Prédit: ' end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' end' → logprob: -0.2519386410713196
    2. 'end' → logprob: -1.5019385814666748
    3. ',end' → logprob: -12.251938819885254
    4. '	end' → logprob: -13.376938819885254
    5. ',' → logprob: -14.001938819885254
    6. ''end' → logprob: -14.376938819885254
    7. '_end' → logprob: -14.876938819885254
    8. '=end' → logprob: -15.001938819885254
    9. '   ' → logprob: -15.126938819885254
    10. ' ' → logprob: -15.126938819885254

Token 221: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0790596529841423
    2. '):' → logprob: -2.829059600830078
    3. '1' → logprob: -4.204059600830078
    4. '):
' → logprob: -6.704059600830078
    5. '[' → logprob: -8.454059600830078
    6. '_' → logprob: -8.829059600830078
    7. '),' → logprob: -9.204059600830078
    8. ',' → logprob: -9.454059600830078
    9. ' )' → logprob: -9.704059600830078
    10. '   ' → logprob: -10.079059600830078

Token 222: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.317081093788147
    2. '   ' → logprob: -1.817081093788147
    3. ':' → logprob: -2.8170809745788574
    4. '):' → logprob: -4.442080974578857
    5. '):
' → logprob: -4.567080974578857
    6. ' ' → logprob: -5.192080974578857
    7. '  
' → logprob: -5.567080974578857
    8. ' )' → logprob: -5.567080974578857
    9. ' :' → logprob: -5.817080974578857
    10. ' 
' → logprob: -6.067080974578857

Token 223: ' Ren' (ID: 17631)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20080606639385223
    2. ':' → logprob: -2.575806140899658
    3. '):
' → logprob: -3.200806140899658
    4. '   ' → logprob: -3.825806140899658
    5. '):' → logprob: -4.200806140899658
    6. '  
' → logprob: -5.575806140899658
    7. ' ' → logprob: -5.700806140899658
    8. ' :' → logprob: -5.825806140899658
    9. ' )' → logprob: -5.825806140899658
    10. ':
' → logprob: -5.825806140899658

Token 224: 'voie' (ID: 70072)
  Prédit: 'voie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'voie' → logprob: -0.0023647055495530367
    2. 'v' → logprob: -7.127364635467529
    3. '   ' → logprob: -7.877364635467529
    4. 'voit' → logprob: -7.877364635467529
    5. 'voy' → logprob: -8.127365112304688
    6. 'd' → logprob: -8.752365112304688
    7. 'voi' → logprob: -8.877365112304688
    8. ' ' → logprob: -10.252365112304688
    9. 'vo' → logprob: -10.502365112304688
    10. 'du' → logprob: -10.627365112304688

Token 225: ' ' (ID: 220)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.40371832251548767
    2. ' min' → logprob: -2.0287182331085205
    3. '0' → logprob: -2.2787182331085205
    4. ' ' → logprob: -2.4037182331085205
    5. ' interval' → logprob: -5.5287184715271
    6. 'max' → logprob: -6.0287184715271
    7. ' (' → logprob: -7.7787184715271
    8. 'interval' → logprob: -8.153717994689941
    9. 'min' → logprob: -8.528717994689941
    10. ' l' → logprob: -9.028717994689941

Token 226: '0' (ID: 15)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.6685250401496887
    2. 'max' → logprob: -0.7935250401496887
    3. '0' → logprob: -3.918524980545044
    4. ' min' → logprob: -4.668525218963623
    5. 'min' → logprob: -5.168525218963623
    6. ' ' → logprob: -8.168524742126465
    7. 'interval' → logprob: -10.668524742126465
    8. '(max' → logprob: -10.918524742126465
    9. ' interval' → logprob: -12.168524742126465
    10. '   ' → logprob: -12.418524742126465

Token 227: ' si' (ID: 1784)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7602735757827759
    2. '<|end|>' → logprob: -0.7602735757827759
    3. ' ' → logprob: -3.0102734565734863
    4. ',' → logprob: -5.135273456573486
    5. '  ' → logprob: -5.760273456573486
    6. 'if' → logprob: -6.260273456573486
    7. ')' → logprob: -6.260273456573486
    8. '<|end|>' → logprob: -7.135273456573486
    9. '0' → logprob: -7.385273456573486
    10. ' or' → logprob: -8.135273933410645

Token 228: ' pas' (ID: 2173)
  Prédit: ' interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' interval' → logprob: -0.38739949464797974
    2. 'interval' → logprob: -1.262399435043335
    3. ' not' → logprob: -4.387399673461914
    4. '0' → logprob: -4.512399673461914
    5. ' les' → logprob: -5.512399673461914
    6. ' len' → logprob: -6.387399673461914
    7. '(interval' → logprob: -6.637399673461914
    8. ' il' → logprob: -6.762399673461914
    9. 'not' → logprob: -6.887399673461914
    10. ' intervals' → logprob: -6.887399673461914

Token 229: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.01575572043657303
    2. 'de' → logprob: -5.265755653381348
    3. '_overlap' → logprob: -5.765755653381348
    4. ' ' → logprob: -6.015755653381348
    5. ' d' → logprob: -6.015755653381348
    6. '_' → logprob: -6.765755653381348
    7. ' overlap' → logprob: -7.140755653381348
    8. '_de' → logprob: -8.015755653381348
    9. 'd' → logprob: -10.265755653381348
    10. '1' → logprob: -11.140755653381348

Token 230: ' rec' (ID: 1369)
  Prédit: ' overlap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' overlap' → logprob: -0.08564285933971405
    2. ' rec' → logprob: -2.9606428146362305
    3. 'over' → logprob: -4.4606428146362305
    4. '_overlap' → logprob: -4.5856428146362305
    5. ' chev' → logprob: -4.9606428146362305
    6. ' overlapping' → logprob: -7.7106428146362305
    7. ' overl' → logprob: -8.08564281463623
    8. ' ' → logprob: -8.46064281463623
    9. 'rec' → logprob: -8.58564281463623
    10. '_' → logprob: -9.46064281463623

Token 231: 'ouv' (ID: 14851)
  Prédit: 'ouv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ouv' → logprob: -0.02395256794989109
    2. 'ouvre' → logprob: -4.648952484130859
    3. '_' → logprob: -5.273952484130859
    4. '_overlap' → logprob: -5.898952484130859
    5. 'ov' → logprob: -6.523952484130859
    6. 'ouvr' → logprob: -6.773952484130859
    7. ' overlap' → logprob: -7.523952484130859
    8. 'ouvrez' → logprob: -7.898952484130859
    9. 'ouverte' → logprob: -7.898952484130859
    10. 'o' → logprob: -8.02395248413086

Token 232: 'rement' (ID: 66132)
  Prédit: 'ert'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ert' → logprob: -0.7232876420021057
    2. 'er' → logprob: -0.9732876420021057
    3. 'rement' → logprob: -2.098287582397461
    4. 'erp' → logprob: -5.723287582397461
    5. 'o' → logprob: -6.098287582397461
    6. 'erc' → logprob: -6.098287582397461
    7. 'erg' → logprob: -6.473287582397461
    8. 'erte' → logprob: -7.223287582397461
    9. 'erk' → logprob: -7.723287582397461
    10. 'erve' → logprob: -7.723287582397461

Token 233: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0991342067718506
    2. ',' → logprob: -1.3491342067718506
    3. ')' → logprob: -1.4741342067718506
    4. ' )' → logprob: -2.8491342067718506
    5. ' or' → logprob: -3.7241342067718506
    6. '.' → logprob: -4.34913444519043
    7. ')
' → logprob: -4.47413444519043
    8. ' )
' → logprob: -4.84913444519043
    9. 'def' → logprob: -4.97413444519043
    10. '1' → logprob: -4.97413444519043

Token 234: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8922266364097595
    2. ':' → logprob: -1.0172266960144043
    3. ':
' → logprob: -2.2672266960144043
    4. ')' → logprob: -2.8922266960144043
    5. '(
' → logprob: -4.017226696014404
    6. '(' → logprob: -4.267226696014404
    7. ' (' → logprob: -4.892226696014404
    8. '):
' → logprob: -5.142226696014404
    9. '.' → logprob: -5.642226696014404
    10. 'def' → logprob: -5.767226696014404

Token 235: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06602627038955688
    2. ')
' → logprob: -3.816026210784912
    3. ')' → logprob: -3.941026210784912
    4. '"""
' (adapté à ' """
') → logprob: -4.441026210784912
    5. ' """
' → logprob: -5.691026210784912
    6. '):
' → logprob: -5.941026210784912
    7. 'def' → logprob: -6.691026210784912
    8. '"""' → logprob: -7.191026210784912
    9. '
' → logprob: -7.566026210784912
    10. '```' → logprob: -7.691026210784912

Token 236: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006588420830667019
    2. ' if' → logprob: -5.881588459014893
    3. 'start' → logprob: -6.381588459014893
    4. ' start' → logprob: -6.506588459014893
    5. 'if' → logprob: -8.381587982177734
    6. '    
' → logprob: -8.881587982177734
    7. 'def' → logprob: -9.756587982177734
    8. ' 
' → logprob: -10.131587982177734
    9. '(start' → logprob: -10.256587982177734
    10. '  
' → logprob: -11.256587982177734

Token 237: ' s' (ID: 265)
  Prédit: ' start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' start' → logprob: -0.3995656371116638
    2. 'start' → logprob: -1.1495656967163086
    3. '   ' → logprob: -5.149565696716309
    4. ' max' → logprob: -5.524565696716309
    5. 'max' → logprob: -6.399565696716309
    6. 's' (adapté à ' s') → logprob: -7.274565696716309
    7. ' s' → logprob: -8.774565696716309
    8. 'a' → logprob: -8.899565696716309
    9. ' return' → logprob: -9.524565696716309
    10. ' overlap' → logprob: -10.149565696716309

Token 238: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1284947246313095
    2. 't' → logprob: -2.1284947395324707
    3. '_' → logprob: -6.628494739532471
    4. ' =' → logprob: -9.503494262695312
    5. ',' → logprob: -10.003494262695312
    6. '_start' → logprob: -10.253494262695312
    7. '   ' → logprob: -11.378494262695312
    8. '_,' → logprob: -11.503494262695312
    9. ' t' → logprob: -11.628494262695312
    10. ' ' → logprob: -11.628494262695312

Token 239: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011897491058334708
    2. ' ,' → logprob: -6.751189708709717
    3. ',s' → logprob: -12.001190185546875
    4. ',start' → logprob: -12.376190185546875
    5. ',end' → logprob: -12.501190185546875
    6. '_,' → logprob: -13.251190185546875
    7. ',max' → logprob: -13.626190185546875
    8. ',
' → logprob: -13.876190185546875
    9. ',int' → logprob: -14.501190185546875
    10. 's' → logprob: -15.251190185546875

Token 240: ' e' (ID: 319)
  Prédit: ' e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' e' → logprob: -0.5759506821632385
    2. 'e' → logprob: -0.8259506821632385
    3. ' s' → logprob: -11.825950622558594
    4. 's' → logprob: -12.825950622558594
    5. '	e' → logprob: -14.075950622558594
    6. ' ' → logprob: -15.575950622558594
    7. '   ' → logprob: -15.700950622558594
    8. ' t' → logprob: -16.325950622558594
    9. '_e' → logprob: -16.450950622558594
    10. ',e' → logprob: -18.575950622558594

Token 241: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006674022297374904
    2. '_' → logprob: -7.375667572021484
    3. ' ' → logprob: -10.375667572021484
    4. ' =' → logprob: -12.625667572021484
    5. ',' → logprob: -12.750667572021484
    6. '=' → logprob: -13.250667572021484
    7. '-' → logprob: -14.750667572021484
    8. 'r' → logprob: -15.000667572021484
    9. 'n' → logprob: -15.875667572021484
    10. '_start' → logprob: -16.125667572021484

Token 242: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6941561698913574
    2. ' =' → logprob: -0.9441561698913574
    3. ',' → logprob: -2.1941561698913574
    4. ' ,' → logprob: -10.569156646728516
    5. ' ' → logprob: -11.194156646728516
    6. ' =
' → logprob: -13.319156646728516
    7. '=
' → logprob: -14.444156646728516
    8. '=s' → logprob: -14.694156646728516
    9. ')' → logprob: -14.819156646728516
    10. ' s' → logprob: -15.194156646728516

Token 243: ' interval' (ID: 17116)
  Prédit: ' interval'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' interval' → logprob: -0.3868718445301056
    2. 'interval' → logprob: -1.1368718147277832
    3. '(interval' → logprob: -14.261872291564941
    4. ' ' → logprob: -16.011871337890625
    5. ' intervalo' → logprob: -17.761871337890625
    6. 'int' → logprob: -18.136871337890625
    7. '_interval' → logprob: -19.011871337890625
    8. '0' → logprob: -19.636871337890625
    9. '.interval' → logprob: -19.761871337890625
    10. ' intervals' → logprob: -19.886871337890625

Token 244: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.007105463184416294
    2. '2' → logprob: -5.007105350494385
    3. '_' → logprob: -8.507105827331543
    4. '[' → logprob: -8.757105827331543
    5. 's' → logprob: -11.882105827331543
    6. ' _' → logprob: -12.007105827331543
    7. '_interval' → logprob: -12.507105827331543
    8. ')' → logprob: -13.257105827331543
    9. ')_' → logprob: -13.257105827331543
    10. '_start' → logprob: -13.632105827331543

Token 245: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012417788384482265
    2. ',
' → logprob: -7.001241683959961
    3. '=' → logprob: -8.626241683959961
    4. ' ,' → logprob: -9.751241683959961
    5. ' =' → logprob: -10.626241683959961
    6. ' s' → logprob: -11.126241683959961
    7. '
' → logprob: -11.376241683959961
    8. '[' → logprob: -11.626241683959961
    9. ';' → logprob: -11.751241683959961
    10. ',s' → logprob: -11.751241683959961

Token 246: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1924239993095398
    2. '
' → logprob: -2.3174240589141846
    3. ' s' → logprob: -3.6924240589141846
    4. '    
' → logprob: -3.9424240589141846
    5. 's' → logprob: -4.3174238204956055
    6. ' 
' → logprob: -4.9424238204956055
    7. '  
' → logprob: -4.9424238204956055
    8. '=' → logprob: -6.5674238204956055
    9. ',' → logprob: -7.5674238204956055
    10. ' =' → logprob: -7.6924238204956055

Token 247: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.5238063335418701
    2. ' s' → logprob: -0.8988063335418701
    3. ' ' → logprob: -7.773806571960449
    4. '   ' → logprob: -8.89880657196045
    5. '	s' → logprob: -9.89880657196045
    6. ' 
' → logprob: -10.52380657196045
    7. ',' → logprob: -11.52380657196045
    8. '_' → logprob: -11.64880657196045
    9. 'e' → logprob: -12.14880657196045
    10. '_s' → logprob: -12.39880657196045

Token 248: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.5094070477061905e-05
    2. ',' → logprob: -11.250015258789062
    3. ' ' → logprob: -13.625015258789062
    4. '_' → logprob: -15.250015258789062
    5. '1' → logprob: -15.375015258789062
    6. ' ,' → logprob: -15.500015258789062
    7. '_,' → logprob: -15.625015258789062
    8. '₂' → logprob: -17.375015258789062
    9. ' s' → logprob: -18.250015258789062
    10. '
' → logprob: -18.375015258789062

Token 249: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.612634362885728e-05
    2. ' ,' → logprob: -9.500076293945312
    3. ',s' → logprob: -14.625076293945312
    4. ',
' → logprob: -15.000076293945312
    5. ',e' → logprob: -15.875076293945312
    6. ' s' → logprob: -16.625076293945312
    7. '‌,' → logprob: -16.750076293945312
    8. 's' → logprob: -17.000076293945312
    9. '2' → logprob: -17.000076293945312
    10. ' ' → logprob: -17.125076293945312

Token 250: ' e' (ID: 319)
  Prédit: ' e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' e' → logprob: -0.026302039623260498
    2. 'e' → logprob: -3.6513020992279053
    3. ' ' → logprob: -13.776302337646484
    4. 's' → logprob: -14.901302337646484
    5. ' s' → logprob: -15.151302337646484
    6. ' ' → logprob: -17.401302337646484
    7. '"' → logprob: -17.526302337646484
    8. ',' → logprob: -17.526302337646484
    9. '	e' → logprob: -17.651302337646484
    10. ''' → logprob: -17.901302337646484

Token 251: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0013053566217422485
    2. ' ' → logprob: -7.00130558013916
    3. '1' → logprob: -8.62630558013916
    4. ',' → logprob: -9.00130558013916
    5. ')' → logprob: -10.50130558013916
    6. ' s' → logprob: -10.75130558013916
    7. 's' → logprob: -11.25130558013916
    8. ' ,' → logprob: -11.37630558013916
    9. '  ' → logprob: -12.37630558013916
    10. '_' → logprob: -12.50130558013916

Token 252: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3873659074306488
    2. '=' → logprob: -1.1373659372329712
    3. ',' → logprob: -7.637365818023682
    4. ')' → logprob: -12.38736629486084
    5. '   ' → logprob: -12.76236629486084
    6. ' ' → logprob: -12.88736629486084
    7. ' =
' → logprob: -13.13736629486084
    8. '=
' → logprob: -14.38736629486084
    9. '=

' → logprob: -15.51236629486084
    10. '[' → logprob: -16.137365341186523

Token 253: ' interval' (ID: 17116)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.4740803837776184
    2. ' interval' → logprob: -0.9740803837776184
    3. ' ' → logprob: -13.599080085754395
    4. '(interval' → logprob: -13.849080085754395
    5. 's' → logprob: -14.724080085754395
    6. ' s' → logprob: -15.099080085754395
    7. '   ' → logprob: -15.599080085754395
    8. ' intervals' → logprob: -16.09908103942871
    9. ' intervalo' → logprob: -17.34908103942871
    10. '  ' → logprob: -17.47408103942871

Token 254: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00020890454470645636
    2. '[' → logprob: -8.625208854675293
    3. ' ' → logprob: -10.625208854675293
    4. '1' → logprob: -12.875208854675293
    5. '   ' → logprob: -13.875208854675293
    6. '[
' → logprob: -15.125208854675293
    7. '  ' → logprob: -15.250208854675293
    8. '```' → logprob: -15.500208854675293
    9. '<|end|>' → logprob: -15.625208854675293
    10. '_' → logprob: -15.875208854675293

Token 255: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.050326213240623474
    2. '
' → logprob: -3.175326108932495
    3. '    
' → logprob: -5.050326347351074
    4. '  
' → logprob: -7.675326347351074
    5. ' 
' → logprob: -8.675326347351074
    6. '   
' → logprob: -9.175326347351074
    7. ' if' → logprob: -10.050326347351074
    8. '[' → logprob: -11.425326347351074
    9. ',
' → logprob: -11.675326347351074
    10. '    ' → logprob: -11.675326347351074

Token 256: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015945447608828545
    2. '    
' → logprob: -4.6409454345703125
    3. '
' → logprob: -5.5159454345703125
    4. '  
' → logprob: -6.6409454345703125
    5. ' 
' → logprob: -7.3909454345703125
    6. '   
' → logprob: -8.890945434570312
    7. ' if' → logprob: -10.765945434570312
    8. ' return' → logprob: -11.640945434570312
    9. ',' → logprob: -11.640945434570312
    10. ',
' → logprob: -11.890945434570312

Token 257: ' start' (ID: 1604)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.49816998839378357
    2. ' return' → logprob: -1.748170018196106
    3. '   ' → logprob: -2.1231698989868164
    4. 'max' → logprob: -2.6231698989868164
    5. ' max' → logprob: -4.248169898986816
    6. '
' → logprob: -5.748169898986816
    7. 'over' → logprob: -5.748169898986816
    8. 'if' → logprob: -5.873169898986816
    9. ' if' → logprob: -6.623169898986816
    10. ' overlap' → logprob: -7.373169898986816

Token 258: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47518905997276306
    2. '=' → logprob: -0.9751890897750854
    3. '=max' → logprob: -6.850189208984375
    4. 'max' → logprob: -10.725189208984375
    5. '_max' → logprob: -11.350189208984375
    6. '   ' → logprob: -12.225189208984375
    7. ',' → logprob: -12.350189208984375
    8. '_' → logprob: -13.100189208984375
    9. '_overlap' → logprob: -13.475189208984375
    10. ',max' → logprob: -13.600189208984375

Token 259: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.575941264629364
    2. 'max' → logprob: -0.825941264629364
    3. 'min' → logprob: -13.57594108581543
    4. ' min' → logprob: -14.32594108581543
    5. '	max' → logprob: -18.07594108581543
    6. '   ' → logprob: -18.70094108581543
    7. ' ' → logprob: -20.20094108581543
    8. '_max' → logprob: -21.07594108581543
    9. '(max' → logprob: -21.20094108581543
    10. '[max' → logprob: -22.20094108581543

Token 260: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -1.5048530030981055e-06
    2. '(e' → logprob: -13.750001907348633
    3. '(' → logprob: -14.875001907348633
    4. 's' → logprob: -17.500001907348633
    5. ' (' → logprob: -19.875001907348633
    6. '(
' → logprob: -21.375001907348633
    7. '(es' → logprob: -23.000001907348633
    8. 'e' → logprob: -23.125001907348633
    9. '((' → logprob: -24.750001907348633
    10. ' s' → logprob: -25.000001907348633

Token 261: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.5577775128767826e-06
    2. 's' → logprob: -12.625005722045898
    3. '_' → logprob: -13.875005722045898
    4. ' s' → logprob: -14.250005722045898
    5. ' ' → logprob: -15.125005722045898
    6. ',' → logprob: -16.0000057220459
    7. ')' → logprob: -16.6250057220459
    8. '2' → logprob: -17.6250057220459
    9. '(s' → logprob: -17.8750057220459
    10. 'e' → logprob: -18.0000057220459

Token 262: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003267639840487391
    2. ' ,' → logprob: -8.625327110290527
    3. ',s' → logprob: -8.875327110290527
    4. 's' → logprob: -12.000327110290527
    5. ',start' → logprob: -14.375327110290527
    6. ',
' → logprob: -14.875327110290527
    7. ' s' → logprob: -15.625327110290527
    8. ',end' → logprob: -17.25032615661621
    9. ',

' → logprob: -17.75032615661621
    10. ',e' → logprob: -17.75032615661621

Token 263: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5759400129318237
    2. ' s' → logprob: -0.8259400129318237
    3. ' ' → logprob: -15.450940132141113
    4. '   ' → logprob: -15.575940132141113
    5. '  ' → logprob: -16.950939178466797
    6. '	s' → logprob: -16.950939178466797
    7. ' ' → logprob: -17.075939178466797
    8. '(s' → logprob: -17.325939178466797
    9. '_s' → logprob: -17.700939178466797
    10. '    ' → logprob: -17.700939178466797

Token 264: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. 's' → logprob: -17.75
    3. '₂' → logprob: -19.125
    4. ' ' → logprob: -19.25
    5. '۲' → logprob: -19.625
    6. '２' → logprob: -20.125
    7. '
' → logprob: -21.25
    8. '_' → logprob: -21.875
    9. 'e' → logprob: -22.875
    10. '[' → logprob: -23.125

Token 265: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004862280562520027
    2. ' )' → logprob: -5.754862308502197
    3. ')
' → logprob: -6.504862308502197
    4. ' )
' → logprob: -9.379861831665039
    5. ',' → logprob: -9.754861831665039
    6. '   ' → logprob: -11.004861831665039
    7. '<|end|>' → logprob: -11.004861831665039
    8. ' ,' → logprob: -12.379861831665039
    9. ')

' → logprob: -12.504861831665039
    10. ' ' → logprob: -13.754861831665039

Token 266: '   ' (ID: 271)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.10112699121236801
    2. '   ' → logprob: -3.2261269092559814
    3. ' ' → logprob: -4.6011271476745605
    4. 'if' → logprob: -4.9761271476745605
    5. ',' → logprob: -5.1011271476745605
    6. ' <' → logprob: -5.2261271476745605
    7. ' 
' → logprob: -5.4761271476745605
    8. ' end' → logprob: -5.7261271476745605
    9. '<|end|>' → logprob: -5.7261271476745605
    10. '    
' → logprob: -6.1011271476745605

Token 267: ' end' (ID: 1268)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.5388749241828918
    2. ' min' → logprob: -1.288874864578247
    3. 'end' (adapté à ' end') → logprob: -2.538874864578247
    4. ' end' → logprob: -2.788874864578247
    5. '   ' → logprob: -7.538875102996826
    6. '	min' → logprob: -12.163874626159668
    7. 'minimum' → logprob: -12.538874626159668
    8. ''end' → logprob: -12.538874626159668
    9. ' minimum' → logprob: -12.788874626159668
    10. '[min' → logprob: -12.913874626159668

Token 268: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04305034503340721
    2. '=' → logprob: -3.1680502891540527
    3. '=max' → logprob: -10.918050765991211
    4. '   ' → logprob: -11.168050765991211
    5. ' ' → logprob: -12.168050765991211
    6. ' >' → logprob: -13.293050765991211
    7. '=min' → logprob: -13.293050765991211
    8. ' =
' → logprob: -13.543050765991211
    9. '<|end|>' → logprob: -13.543050765991211
    10. ' if' → logprob: -13.668050765991211

Token 269: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0024756586644798517
    2. ' min' → logprob: -6.002475738525391
    3. 'max' → logprob: -18.00247573852539
    4. '(min' → logprob: -21.50247573852539
    5. '[min' → logprob: -21.62747573852539
    6. '	min' → logprob: -21.87747573852539
    7. '_min' → logprob: -22.75247573852539
    8. ' ' → logprob: -23.87747573852539
    9. ',min' → logprob: -23.87747573852539
    10. '.min' → logprob: -24.75247573852539

Token 270: '(e' (ID: 3454)
  Prédit: '(e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(e' → logprob: -0.00012082771718269214
    2. '(' → logprob: -9.250121116638184
    3. ' (' → logprob: -10.625121116638184
    4. '(
' → logprob: -15.625121116638184
    5. '(s' → logprob: -16.375120162963867
    6. ' e' → logprob: -17.125120162963867
    7. '(end' → logprob: -17.750120162963867
    8. 'e' → logprob: -18.250120162963867
    9. ' ' → logprob: -18.875120162963867
    10. '(

' → logprob: -20.875120162963867

Token 271: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.02632584422826767
    2. '1' → logprob: -3.6513259410858154
    3. ')' → logprob: -11.401326179504395
    4. '_' → logprob: -12.151326179504395
    5. ',' → logprob: -13.401326179504395
    6. ' ' → logprob: -13.401326179504395
    7. '   ' → logprob: -13.901326179504395
    8. 'e' → logprob: -14.026326179504395
    9. '3' → logprob: -14.026326179504395
    10. '```' → logprob: -14.401326179504395

Token 272: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001454955490771681
    2. ' ,' → logprob: -9.12514591217041
    3. ',e' → logprob: -11.00014591217041
    4. ')' → logprob: -11.00014591217041
    5. ',
' → logprob: -13.75014591217041
    6. ',end' → logprob: -14.00014591217041
    7. ',s' → logprob: -14.75014591217041
    8. 'e' → logprob: -15.25014591217041
    9. 's' → logprob: -15.50014591217041
    10. ' ' → logprob: -15.75014591217041

Token 273: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.2530112564563751
    2. ' e' → logprob: -1.5030112266540527
    3. 's' → logprob: -6.878011226654053
    4. ' s' → logprob: -9.878011703491211
    5. '	e' → logprob: -17.50301170349121
    6. ' ' → logprob: -18.00301170349121
    7. 'es' → logprob: -18.12801170349121
    8. 'end' → logprob: -18.50301170349121
    9. ')' → logprob: -18.75301170349121
    10. ')e' → logprob: -18.87801170349121

Token 274: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.125000953674316
    3. '₂' → logprob: -16.5
    4. '２' → logprob: -17.75
    5. '۲' → logprob: -18.0
    6. ')' → logprob: -19.25
    7. '[' → logprob: -20.75
    8. '   ' → logprob: -21.25
    9. '²' → logprob: -21.5
    10. 's' → logprob: -21.75

Token 275: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4484401345252991
    2. ')
' → logprob: -1.1984400749206543
    3. '   ' → logprob: -2.8234400749206543
    4. ' )
' → logprob: -9.198440551757812
    5. ')
' → logprob: -9.448440551757812
    6. '    
' → logprob: -10.323440551757812
    7. ' )' → logprob: -10.573440551757812
    8. '<|end|>' → logprob: -10.823440551757812
    9. '
' → logprob: -11.198440551757812
    10. '  
' → logprob: -12.323440551757812

Token 276: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0013836899306625128
    2. '    
' → logprob: -7.0013837814331055
    3. ' if' → logprob: -8.626383781433105
    4. '  
' → logprob: -9.251383781433105
    5. '
' → logprob: -9.501383781433105
    6. ' 
' → logprob: -9.876383781433105
    7. '\n' → logprob: -11.376383781433105
    8. '    ' → logprob: -11.376383781433105
    9. '   
' → logprob: -11.376383781433105
    10. 'if' → logprob: -11.751383781433105

Token 277: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012046166695654392
    2. ' if' → logprob: -4.7620463371276855
    3. '    
' → logprob: -6.3870463371276855
    4. ' 
' → logprob: -7.6370463371276855
    5. ' return' → logprob: -7.8870463371276855
    6. '    ' → logprob: -7.8870463371276855
    7. 'if' → logprob: -9.012045860290527
    8. '  
' → logprob: -9.012045860290527
    9. '
' → logprob: -9.137045860290527
    10. 'return' (adapté à ' return') → logprob: -10.012045860290527

Token 278: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.005397868808358908
    2. 'max' → logprob: -5.255397796630859
    3. ' end' → logprob: -8.75539779663086
    4. '0' → logprob: -12.63039779663086
    5. 'end' → logprob: -13.50539779663086
    6. '(max' → logprob: -13.88039779663086
    7. ' ' → logprob: -14.25539779663086
    8. '(end' → logprob: -16.38039779663086
    9. '	max' → logprob: -16.88039779663086
    10. ' ' → logprob: -17.13039779663086

Token 279: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -4.429896944202483e-05
    2. '(end' → logprob: -10.125043869018555
    3. ' (' → logprob: -12.875043869018555
    4. '0' → logprob: -13.500043869018555
    5. '(
' → logprob: -16.125043869018555
    6. '((' → logprob: -18.750043869018555
    7. ' ' → logprob: -18.750043869018555
    8. 'end' → logprob: -19.625043869018555
    9. '(

' → logprob: -21.000043869018555
    10. '1' → logprob: -22.000043869018555

Token 280: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002074840711429715
    2. ' ' → logprob: -6.502074718475342
    3. 'end' → logprob: -7.502074718475342
    4. ' end' → logprob: -11.0020751953125
    5. '(end' → logprob: -12.7520751953125
    6. ')' → logprob: -15.1270751953125
    7. '(' → logprob: -15.1270751953125
    8. '[end' → logprob: -15.8770751953125
    9. '   ' → logprob: -17.1270751953125
    10. '  ' → logprob: -17.2520751953125

Token 281: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011807866394519806
    2. ',end' → logprob: -4.761807918548584
    3. ' ,' → logprob: -5.761807918548584
    4. '(end' → logprob: -10.761807441711426
    5. 'end' → logprob: -11.261807441711426
    6. ' end' → logprob: -12.136807441711426
    7. ',
' → logprob: -13.511807441711426
    8. ')' → logprob: -13.886807441711426
    9. ' ' → logprob: -15.136807441711426
    10. '[end' → logprob: -15.136807441711426

Token 282: ' end' (ID: 1268)
  Prédit: ' end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' end' → logprob: -0.16022545099258423
    2. 'end' → logprob: -1.9102253913879395
    3. '(end' → logprob: -13.660225868225098
    4. ' ' → logprob: -16.78522491455078
    5. ''end' → logprob: -18.53522491455078
    6. '	end' → logprob: -18.66022491455078
    7. ')' → logprob: -18.91022491455078
    8. '=end' → logprob: -19.03522491455078
    9. '[end' → logprob: -20.16022491455078
    10. ',end' → logprob: -20.41022491455078

Token 283: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.014170442707836628
    2. '-' → logprob: -4.2641706466674805
    3. '-start' → logprob: -12.26417064666748
    4. ')' → logprob: -13.26417064666748
    5. ' ' → logprob: -16.014169692993164
    6. ' )' → logprob: -16.389169692993164
    7. ' ' → logprob: -16.889169692993164
    8. '-token' → logprob: -17.139169692993164
    9. ' –' → logprob: -17.639169692993164
    10. '-s' → logprob: -17.764169692993164

Token 284: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.10020667314529419
    2. ' start' → logprob: -2.3502066135406494
    3. ' ' → logprob: -17.72520637512207
    4. '	start' → logprob: -18.47520637512207
    5. '[start' → logprob: -19.60020637512207
    6. '   ' → logprob: -19.85020637512207
    7. '(start' → logprob: -20.22520637512207
    8. ')' → logprob: -20.72520637512207
    9. '=start' → logprob: -20.72520637512207
    10. '  ' → logprob: -20.85020637512207

Token 285: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0019448186503723264
    2. ' )' → logprob: -6.2519450187683105
    3. ')
' → logprob: -11.501944541931152
    4. '+' → logprob: -12.751944541931152
    5. '<|end|>' → logprob: -13.751944541931152
    6. '   ' → logprob: -14.626944541931152
    7. '+)' → logprob: -14.876944541931152
    8. '}' → logprob: -15.126944541931152
    9. ' )
' → logprob: -15.501944541931152
    10. ')+' → logprob: -15.626944541931152

Token 286: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.005814079660922289
    2. '
' → logprob: -5.380814075469971
    3. '<|end|>' → logprob: -7.755814075469971
    4. '

' → logprob: -8.005814552307129
    5. '\' → logprob: -8.880814552307129
    6. ' 
' → logprob: -9.505814552307129
    7. ' def' → logprob: -9.880814552307129
    8. '\n' → logprob: -10.005814552307129
    9. '  
' → logprob: -10.380814552307129
    10. '#' → logprob: -10.880814552307129

Token 287: ' usage' (ID: 16622)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'process' → logprob: -1.7753105163574219
    2. ' process' → logprob: -2.150310516357422
    3. 'compute' → logprob: -2.150310516357422
    4. ' find' → logprob: -2.525310516357422
    5. 'calculate' → logprob: -2.650310516357422
    6. 'parse' → logprob: -2.650310516357422
    7. ' calculate' → logprob: -2.900310516357422
    8. ' main' → logprob: -3.025310516357422
    9. ' compute' → logprob: -3.275310516357422
    10. 'get' → logprob: -3.525310516357422

Token 288: '_in' (ID: 2267)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8002431988716125
    2. '_' → logprob: -1.0502431392669678
    3. '_time' → logprob: -2.5502431392669678
    4. '_inter' → logprob: -2.5502431392669678
    5. '_times' → logprob: -3.6752431392669678
    6. '_stats' → logprob: -4.925243377685547
    7. 's' → logprob: -5.675243377685547
    8. '_duration' → logprob: -6.550243377685547
    9. '(_' → logprob: -6.800243377685547
    10. '_interval' → logprob: -7.300243377685547

Token 289: '_period' (ID: 46594)
  Prédit: 'ter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ter' → logprob: -0.015469585545361042
    2. '_interval' → logprob: -5.015469551086426
    3. '_inter' → logprob: -5.265469551086426
    4. 'te' → logprob: -7.140469551086426
    5. 'interval' → logprob: -7.140469551086426
    6. 'erval' → logprob: -7.890469551086426
    7. 't' → logprob: -8.515469551086426
    8. '_period' → logprob: -8.640469551086426
    9. '_window' → logprob: -8.890469551086426
    10. '_' → logprob: -8.890469551086426

Token 290: '(interval' (ID: 100435)
  Prédit: '(interval'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(interval' → logprob: -0.18509355187416077
    2. '(period' → logprob: -2.810093641281128
    3. '(' → logprob: -2.935093641281128
    4. '(start' → logprob: -3.185093641281128
    5. '(user' → logprob: -5.185093402862549
    6. ' (' → logprob: -6.060093402862549
    7. '(device' → logprob: -6.060093402862549
    8. '(s' → logprob: -6.935093402862549
    9. '(inter' → logprob: -7.935093402862549
    10. '(pc' → logprob: -8.060093879699707

Token 291: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.043282683938741684
    2. ',' → logprob: -3.1682827472686768
    3. ')' → logprob: -8.793282508850098
    4. '1' → logprob: -10.293282508850098
    5. '_list' → logprob: -11.168282508850098
    6. ',
' → logprob: -11.293282508850098
    7. '_,' → logprob: -11.293282508850098
    8. ' ,' → logprob: -11.293282508850098
    9. '):' → logprob: -12.168282508850098
    10. '):
' → logprob: -12.168282508850098

Token 292: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.1186566047836095e-05
    2. ' ,' → logprob: -10.500031471252441
    3. '(interval' → logprob: -13.875031471252441
    4. ',
' → logprob: -14.250031471252441
    5. '   ' → logprob: -14.625031471252441
    6. '[' → logprob: -15.000031471252441
    7. ',user' → logprob: -15.750031471252441
    8. ',[' → logprob: -16.250030517578125
    9. 's' → logprob: -16.375030517578125
    10. ',start' → logprob: -16.375030517578125

Token 293: ' query' (ID: 5703)
  Prédit: 'period'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'period' → logprob: -0.7105006575584412
    2. ' period' → logprob: -1.085500717163086
    3. ' start' → logprob: -2.210500717163086
    4. 'start' → logprob: -2.835500717163086
    5. 'interval' → logprob: -7.210500717163086
    6. ' query' → logprob: -7.835500717163086
    7. ' interval' → logprob: -8.085500717163086
    8. 'query' → logprob: -8.335500717163086
    9. 'periode' → logprob: -8.335500717163086
    10. '   ' → logprob: -8.960500717163086

Token 294: '_start' (ID: 10949)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4674343466758728
    2. '_inter' → logprob: -1.9674344062805176
    3. '_start' → logprob: -2.2174344062805176
    4. ',' → logprob: -2.9674344062805176
    5. '_period' → logprob: -3.2174344062805176
    6. '_interval' → logprob: -3.7174344062805176
    7. '_' → logprob: -5.467434406280518
    8. '):
' → logprob: -6.092434406280518
    9. ' ):' → logprob: -7.217434406280518
    10. 's' → logprob: -8.21743392944336

Token 295: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.702754474943504e-05
    2. ' ,' → logprob: -10.25003719329834
    3. ',
' → logprob: -13.62503719329834
    4. '_,' → logprob: -15.87503719329834
    5. '‌,' → logprob: -16.500036239624023
    6. '   ' → logprob: -17.250036239624023
    7. '):' → logprob: -17.500036239624023
    8. ',start' → logprob: -17.500036239624023
    9. ',int' → logprob: -17.875036239624023
    10. ',

' → logprob: -18.250036239624023

Token 296: ' query' (ID: 5703)
  Prédit: ' query'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' query' → logprob: -0.1797552853822708
    2. 'query' → logprob: -1.8047553300857544
    3. '	query' → logprob: -12.804755210876465
    4. '=query' → logprob: -13.304755210876465
    5. ' ' → logprob: -13.554755210876465
    6. '$query' → logprob: -13.554755210876465
    7. ' ' → logprob: -13.804755210876465
    8. '_query' → logprob: -14.179755210876465
    9. 'q' → logprob: -14.929755210876465
    10. ' q' → logprob: -15.429755210876465

Token 297: '_end' (ID: 13707)
  Prédit: '_end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_end' → logprob: -2.2007883671903983e-05
    2. '_finish' → logprob: -11.625021934509277
    3. '_END' → logprob: -12.125021934509277
    4. '_' → logprob: -13.000021934509277
    5. 'end' → logprob: -13.250021934509277
    6. 'End' → logprob: -13.625021934509277
    7. '_stop' → logprob: -13.625021934509277
    8. '_start' → logprob: -14.750021934509277
    9. '_End' → logprob: -15.750021934509277
    10. ')_' → logprob: -15.750021934509277

Token 298: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0007883060025051236
    2. '):
' → logprob: -7.62578821182251
    3. ')' → logprob: -8.125788688659668
    4. ' ):' → logprob: -12.500788688659668
    5. '   ' → logprob: -15.125788688659668
    6. '):
' → logprob: -15.250788688659668
    7. ',' → logprob: -15.875788688659668
    8. ':' → logprob: -16.50078773498535
    9. '):

' → logprob: -17.62578773498535
    10. ')：' → logprob: -17.87578773498535

Token 299: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08037340641021729
    2. ':' → logprob: -2.5803732872009277
    3. '(' → logprob: -7.580373287200928
    4. ' :' → logprob: -7.705373287200928
    5. '):' → logprob: -9.080373764038086
    6. '[' → logprob: -9.080373764038086
    7. ':
' → logprob: -9.830373764038086
    8. '    ' → logprob: -9.955373764038086
    9. ')' → logprob: -10.080373764038086
    10. '  ' → logprob: -10.330373764038086

Token 300: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0029822213109582663
    2. ' total' → logprob: -6.502982139587402
    3. 'total' → logprob: -8.002982139587402
    4. '    
' → logprob: -8.002982139587402
    5. '    ' → logprob: -8.627982139587402
    6. '
' → logprob: -9.002982139587402
    7. ' usage' → logprob: -9.252982139587402
    8. ' 
' → logprob: -9.377982139587402
    9. '  ' → logprob: -10.377982139587402
    10. '   
' → logprob: -10.377982139587402

Token 301: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.037920981645584106
    2. '"""
' → logprob: -4.287920951843262
    3. ' """
' → logprob: -4.662920951843262
    4. '"""' → logprob: -5.037920951843262
    5. '"' → logprob: -5.287920951843262
    6. ' """' → logprob: -7.162920951843262
    7. '    ' → logprob: -7.912920951843262
    8. 'def' → logprob: -7.912920951843262
    9. 'Calcul' → logprob: -8.162920951843262
    10. ' Calculates' → logprob: -9.162920951843262

Token 302: ' Cal' (ID: 4453)
  Prédit: ' total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.4087749421596527
    2. '   ' → logprob: -1.783774971961975
    3. 'total' → logprob: -2.4087748527526855
    4. ' usage' → logprob: -3.7837748527526855
    5. 'def' → logprob: -4.2837748527526855
    6. ' """
' → logprob: -4.9087748527526855
    7. ' result' → logprob: -5.0337748527526855
    8. 'usage' → logprob: -5.0337748527526855
    9. 'result' → logprob: -5.5337748527526855
    10. ' duration' → logprob: -5.7837748527526855

Token 303: 'cule' (ID: 45017)
  Prédit: 'cule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cule' → logprob: -0.002992678200826049
    2. 'cul' → logprob: -6.002992630004883
    3. 'c' → logprob: -8.002992630004883
    4. 'cules' → logprob: -9.252992630004883
    5. 'culate' → logprob: -9.627992630004883
    6. 'cula' → logprob: -11.002992630004883
    7. '
' → logprob: -13.877992630004883
    8. '```' → logprob: -14.627992630004883
    9. 'cu' → logprob: -15.252992630004883
    10. '\' → logprob: -15.377992630004883

Token 304: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.05933661013841629
    2. ' le' → logprob: -3.4343366622924805
    3. ' l' → logprob: -4.3093366622924805
    4. '   ' → logprob: -5.4343366622924805
    5. ' total' → logprob: -5.8093366622924805
    6. ' the' → logprob: -6.8093366622924805
    7. 'la' → logprob: -6.9343366622924805
    8. ' ' → logprob: -7.1843366622924805
    9. 'total' → logprob: -7.5593366622924805
    10. 'le' → logprob: -7.8093366622924805

Token 305: ' somme' (ID: 64484)
  Prédit: ' total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.23716793954372406
    2. ' usage' → logprob: -2.3621678352355957
    3. 'usage' → logprob: -3.1121678352355957
    4. 'total' → logprob: -3.1121678352355957
    5. ' sum' → logprob: -5.612167835235596
    6. ' temps' → logprob: -5.737167835235596
    7. 'sum' → logprob: -5.737167835235596
    8. 'temps' → logprob: -5.987167835235596
    9. ' dur' → logprob: -6.237167835235596
    10. ' durée' → logprob: -6.237167835235596

Token 306: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.37773042917251587
    2. '   ' → logprob: -2.252730369567871
    3. 'des' → logprob: -2.377730369567871
    4. '_' → logprob: -2.877730369567871
    5. ' ' → logprob: -3.627730369567871
    6. ' totale' → logprob: -4.502730369567871
    7. '_des' → logprob: -4.627730369567871
    8. ' de' → logprob: -5.502730369567871
    9. '(' → logprob: -6.252730369567871
    10. 'de' → logprob: -6.627730369567871

Token 307: ' dur' (ID: 1916)
  Prédit: 'over'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'over' → logprob: -1.3442645072937012
    2. ' usage' → logprob: -1.3442645072937012
    3. 'usage' → logprob: -1.7192645072937012
    4. ' overlap' → logprob: -2.469264507293701
    5. 'interval' → logprob: -2.844264507293701
    6. 'dur' → logprob: -4.344264507293701
    7. 'temps' → logprob: -4.344264507293701
    8. ' max' → logprob: -4.344264507293701
    9. ' temps' → logprob: -4.469264507293701
    10. 'max' → logprob: -4.469264507293701

Token 308: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.013007622212171555
    2. 'ée' → logprob: -4.513007640838623
    3. 'ees' → logprob: -6.263007640838623
    4. 'ee' → logprob: -10.763007164001465
    5. 'ations' → logprob: -11.013007164001465
    6. 'es' → logprob: -11.388007164001465
    7. 'e' → logprob: -13.763007164001465
    8. 'é' → logprob: -14.388007164001465
    9. 'r' → logprob: -14.638007164001465
    10. 'ation' → logprob: -14.638007164001465

Token 309: ' des' (ID: 731)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7720857262611389
    2. ' des' → logprob: -1.3970856666564941
    3. ' de' → logprob: -2.147085666656494
    4. ' d' → logprob: -2.272085666656494
    5. 'de' → logprob: -4.272085666656494
    6. '    ' → logprob: -4.647085666656494
    7. '_' → logprob: -5.022085666656494
    8. ',' → logprob: -5.147085666656494
    9. ' entre' → logprob: -5.272085666656494
    10. ' cumul' → logprob: -5.397085666656494

Token 310: ' interv' (ID: 37413)
  Prédit: ' interv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' interv' → logprob: -0.687368631362915
    2. 'interval' → logprob: -1.062368631362915
    3. ' intervals' → logprob: -2.687368631362915
    4. 'inter' → logprob: -3.187368631362915
    5. ' interval' → logprob: -3.687368631362915
    6. ' i' → logprob: -5.062368392944336
    7. 'i' → logprob: -5.562368392944336
    8. '(interval' → logprob: -5.812368392944336
    9. ' inter' → logprob: -6.812368392944336
    10. ' [' → logprob: -7.062368392944336

Token 311: 'alles' (ID: 28825)
  Prédit: 'als'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'als' → logprob: -0.03736405447125435
    2. 'al' → logprob: -3.9123640060424805
    3. 'alles' → logprob: -4.7873640060424805
    4. 'ales' → logprob: -5.5373640060424805
    5. '   ' → logprob: -6.0373640060424805
    6. '```' → logprob: -7.5373640060424805
    7. '[' → logprob: -8.78736400604248
    8. 'aux' → logprob: -9.16236400604248
    9. ' als' → logprob: -9.41236400604248
    10. 'vals' → logprob: -9.53736400604248

Token 312: ' d' (ID: 272)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15805116295814514
    2. ' qui' → logprob: -2.9080512523651123
    3. 'inter' → logprob: -3.7830512523651123
    4. ' compris' → logprob: -4.283051013946533
    5. ' entre' → logprob: -4.408051013946533
    6. ',' → logprob: -5.033051013946533
    7. 'dans' → logprob: -5.408051013946533
    8. ' dans' → logprob: -5.533051013946533
    9. ' intersect' → logprob: -5.908051013946533
    10. ' couvr' → logprob: -6.033051013946533

Token 313: ''' (ID: 6)
  Prédit: ''utilisation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisation' → logprob: -0.4174394905567169
    2. ''' → logprob: -2.5424394607543945
    3. 'ans' → logprob: -2.6674394607543945
    4. ''util' → logprob: -3.1674394607543945
    5. 'u' → logprob: -3.5424394607543945
    6. 'e' → logprob: -3.5424394607543945
    7. 'é' → logprob: -4.1674394607543945
    8. ''inter' → logprob: -4.9174394607543945
    9. ''une' → logprob: -5.2924394607543945
    10. ''ex' → logprob: -5.2924394607543945

Token 314: 'usage' (ID: 25871)
  Prédit: ' usage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' usage' → logprob: -0.26260149478912354
    2. 'usage' → logprob: -2.137601375579834
    3. 'interval' → logprob: -3.012601375579834
    4. 'util' → logprob: -3.512601375579834
    5. ' intervals' → logprob: -5.012601375579834
    6. ' utilisation' → logprob: -5.262601375579834
    7. ''utilisation' → logprob: -5.262601375579834
    8. 'inter' → logprob: -5.637601375579834
    9. 'connexion' → logprob: -5.887601375579834
    10. ' utilization' → logprob: -6.762601375579834

Token 315: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10462754219770432
    2. ' qui' → logprob: -3.7296276092529297
    3. ' compris' → logprob: -3.7296276092529297
    4. ' entre' → logprob: -3.9796276092529297
    5. ' dans' → logprob: -4.60462760925293
    6. ' within' → logprob: -5.60462760925293
    7. 'dans' → logprob: -5.60462760925293
    8. ',' → logprob: -5.60462760925293
    9. ' présents' → logprob: -6.35462760925293
    10. ' durant' → logprob: -6.85462760925293

Token 316: 'sans' (ID: 106726)
  Prédit: ' intervals'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' intervals' → logprob: -0.30105653405189514
    2. 'interval' → logprob: -1.6760565042495728
    3. ')' → logprob: -3.1760566234588623
    4. '   ' → logprob: -4.301056385040283
    5. ' )' → logprob: -5.176056385040283
    6. '(interval' → logprob: -6.176056385040283
    7. ' interval' → logprob: -6.551056385040283
    8. ',' → logprob: -6.676056385040283
    9. '[
' → logprob: -7.051056385040283
    10. ' [
' → logprob: -7.426056385040283

Token 317: ' chev' (ID: 127415)
  Prédit: ' chev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chev' → logprob: -0.04574701189994812
    2. 'che' → logprob: -3.2957470417022705
    3. ' overlap' → logprob: -5.295746803283691
    4. ' rec' → logprob: -6.920746803283691
    5. 'over' → logprob: -7.045746803283691
    6. 'rec' → logprob: -7.670746803283691
    7. '_che' → logprob: -9.920746803283691
    8. ' che' → logprob: -10.045746803283691
    9. '   ' → logprob: -10.045746803283691
    10. ' ' → logprob: -10.545746803283691

Token 318: 'auche' (ID: 143141)
  Prédit: 'auche'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'auche' → logprob: -0.3482423722743988
    2. ' overlap' → logprob: -1.3482424020767212
    3. '_overlap' → logprob: -4.723242282867432
    4. 'au' → logprob: -4.973242282867432
    5. ' overlapping' → logprob: -5.098242282867432
    6. 'Overlap' → logprob: -5.598242282867432
    7. ' overlaps' → logprob: -5.723242282867432
    8. 'a' → logprob: -7.223242282867432
    9. 'e' → logprob: -7.473242282867432
    10. 'over' → logprob: -7.598242282867432

Token 319: 'ment' (ID: 508)
  Prédit: 'ment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ment' → logprob: -0.005056333262473345
    2. 'ement' → logprob: -5.880056381225586
    3. 't' → logprob: -7.755056381225586
    4. 'nement' → logprob: -8.255056381225586
    5. 'vement' → logprob: -8.255056381225586
    6. ' ment' → logprob: -8.380056381225586
    7. 'nt' → logprob: -8.505056381225586
    8. 'gment' → logprob: -8.880056381225586
    9. ')' → logprob: -9.005056381225586
    10. 'rement' → logprob: -9.130056381225586

Token 320: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1772671490907669
    2. ' )' → logprob: -1.9272671937942505
    3. '   ' → logprob: -4.552267074584961
    4. ' entre' → logprob: -5.427267074584961
    5. ' des' → logprob: -7.677267074584961
    6. ',' → logprob: -7.802267074584961
    7. ' dans' → logprob: -8.552267074584961
    8. ' ' → logprob: -8.802267074584961
    9. ' ' → logprob: -9.427267074584961
    10. 's' → logprob: -9.802267074584961

Token 321: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17236125469207764
    2. ' entre' → logprob: -2.297361373901367
    3. ' dans' → logprob: -4.672361373901367
    4. ')' → logprob: -4.672361373901367
    5. ' compris' → logprob: -4.922361373901367
    6. ',' → logprob: -5.047361373901367
    7. ' des' → logprob: -5.297361373901367
    8. ' pendant' → logprob: -6.047361373901367
    9. ' présents' → logprob: -6.047361373901367
    10. ' durant' → logprob: -6.172361373901367

Token 322: ' rec' (ID: 1369)
  Prédit: ' compris'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' compris' → logprob: -1.224310278892517
    2. '   ' → logprob: -1.474310278892517
    3. ' entre' → logprob: -1.599310278892517
    4. ' dans' → logprob: -2.3493103981018066
    5. 'dans' → logprob: -3.0993103981018066
    6. ' qui' → logprob: -3.3493103981018066
    7. ')' → logprob: -3.3493103981018066
    8. ',' → logprob: -3.8493103981018066
    9. ' durant' → logprob: -5.349310398101807
    10. ' présents' → logprob: -5.349310398101807

Token 323: 'ouvr' (ID: 27314)
  Prédit: 'ouvr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ouvr' → logprob: -0.7301248908042908
    2. 'ouver' → logprob: -0.9801248908042908
    3. 'ouv' → logprob: -3.1051249504089355
    4. 'ouvre' → logprob: -3.6051249504089355
    5. 'up' → logprob: -3.8551249504089355
    6. 'ouvrez' → logprob: -4.4801249504089355
    7. 'u' → logprob: -4.9801249504089355
    8. 'over' → logprob: -5.2301249504089355
    9. 'oup' → logprob: -5.4801249504089355
    10. 'ouverte' → logprob: -5.6051249504089355

Token 324: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.2116565704345703
    2. 'és' → logprob: -1.9616565704345703
    3. 'es' → logprob: -3.3366565704345703
    4. 'é' → logprob: -5.21165657043457
    5. 'ent' → logprob: -5.71165657043457
    6. 'e' → logprob: -5.71165657043457
    7. 'ed' → logprob: -6.96165657043457
    8. 'ing' → logprob: -6.96165657043457
    9. '   ' → logprob: -9.46165657043457
    10. 'er' → logprob: -9.71165657043457

Token 325: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.5156102180480957
    2. ' query' → logprob: -1.5156102180480957
    3. ' au' → logprob: -3.1406102180480957
    4. ' le' → logprob: -3.3906102180480957
    5. ' l' → logprob: -3.6406102180480957
    6. ' ' → logprob: -3.7656102180480957
    7. ' les' → logprob: -3.8906102180480957
    8. ' une' → logprob: -4.390610218048096
    9. ' ' → logprob: -5.765610218048096
    10. ' entre' → logprob: -6.015610218048096

Token 326: ' période' (ID: 46855)
  Prédit: ' query'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' query' → logprob: -0.25616568326950073
    2. 'query' → logprob: -2.3811657428741455
    3. ' interval' → logprob: -3.3811657428741455
    4. ' la' → logprob: -4.256165504455566
    5. 'interval' → logprob: -4.381165504455566
    6. ' période' → logprob: -4.381165504455566
    7. ' plage' → logprob: -4.381165504455566
    8. ' l' → logprob: -5.006165504455566
    9. ' ' → logprob: -5.506165504455566
    10. ' [' → logprob: -5.631165504455566

Token 327: ' [' (ID: 723)
  Prédit: ' query'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' query' → logprob: -0.25428178906440735
    2. ' [' → logprob: -1.879281759262085
    3. ' ' → logprob: -4.004281997680664
    4. '[' → logprob: -4.129281997680664
    5. 'query' → logprob: -4.129281997680664
    6. '(query' → logprob: -4.754281997680664
    7. ' (' → logprob: -5.754281997680664
    8. ' entre' → logprob: -6.754281997680664
    9. ' requested' → logprob: -7.004281997680664
    10. '   ' → logprob: -7.129281997680664

Token 328: 'query' (ID: 2975)
  Prédit: 'query'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'query' → logprob: -0.47464466094970703
    2. ' query' → logprob: -0.974644660949707
    3. ',' → logprob: -7.599644660949707
    4. ' ,' → logprob: -10.349644660949707
    5. '=query' → logprob: -11.599644660949707
    6. '(query' → logprob: -11.724644660949707
    7. ')' → logprob: -11.849644660949707
    8. ' )' → logprob: -13.224644660949707
    9. '	query' → logprob: -13.224644660949707
    10. '_query' → logprob: -13.224644660949707

Token 329: '_start' (ID: 10949)
  Prédit: '_start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -1.2113979209971149e-05
    2. '_,' → logprob: -11.875012397766113
    3. '_' → logprob: -13.375012397766113
    4. '_end' → logprob: -13.875012397766113
    5. 'start' → logprob: -14.125012397766113
    6. '_query' → logprob: -14.625012397766113
    7. '_START' → logprob: -14.625012397766113
    8. ',' → logprob: -14.750012397766113
    9. ' _' → logprob: -15.250012397766113
    10. 'Start' → logprob: -16.500011444091797

Token 330: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015127197839319706
    2. ' ,' → logprob: -6.50151252746582
    3. ',
' → logprob: -12.00151252746582
    4. 'query' → logprob: -14.00151252746582
    5. '=query' → logprob: -14.37651252746582
    6. '(query' → logprob: -14.50151252746582
    7. '_query' → logprob: -14.75151252746582
    8. ' ' → logprob: -14.75151252746582
    9. '   ' → logprob: -15.00151252746582
    10. ',

' → logprob: -15.37651252746582

Token 331: ' query' (ID: 5703)
  Prédit: ' query'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' query' → logprob: -0.31331050395965576
    2. 'query' → logprob: -1.3133105039596558
    3. ',' → logprob: -10.813310623168945
    4. ' ' → logprob: -11.813310623168945
    5. ' ' → logprob: -12.063310623168945
    6. '	query' → logprob: -12.438310623168945
    7. '$query' → logprob: -12.688310623168945
    8. '=query' → logprob: -13.313310623168945
    9. '(query' → logprob: -13.438310623168945
    10. '_query' → logprob: -13.938310623168945

Token 332: '_end' (ID: 13707)
  Prédit: '_end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_end' → logprob: -0.0018817579839378595
    2. '_query' → logprob: -6.3768815994262695
    3. 'query' → logprob: -9.75188159942627
    4. ',' → logprob: -10.00188159942627
    5. ' _' → logprob: -10.87688159942627
    6. 'end' → logprob: -11.25188159942627
    7. '_' → logprob: -11.62688159942627
    8. ')' → logprob: -11.62688159942627
    9. ']' → logprob: -12.12688159942627
    10. 'End' → logprob: -12.37688159942627

Token 333: ').
' (ID: 6294)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.007322055287659168
    2. ')' → logprob: -5.882321834564209
    3. ']
' → logprob: -6.507321834564209
    4. '])' → logprob: -6.507321834564209
    5. '].' → logprob: -6.757321834564209
    6. '+' → logprob: -8.882322311401367
    7. ' ]' → logprob: -9.007322311401367
    8. '],' → logprob: -11.007322311401367
    9. ')]' → logprob: -11.382322311401367
    10. '])
' → logprob: -11.757322311401367

Token 334: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0027694518212229013
    2. ')' → logprob: -6.252769470214844
    3. '    
' → logprob: -8.002769470214844
    4. ' )' → logprob: -8.627769470214844
    5. 'def' → logprob: -9.502769470214844
    6. '\n' → logprob: -9.502769470214844
    7. ' 
' → logprob: -10.252769470214844
    8. '    ' → logprob: -10.877769470214844
    9. '\' → logprob: -11.002769470214844
    10. '
' → logprob: -11.127769470214844

Token 335: ' Les' (ID: 7029)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001239752396941185
    2. ')' → logprob: -7.876239776611328
    3. '    
' → logprob: -8.376239776611328
    4. 'def' → logprob: -8.501239776611328
    5. '    ' → logprob: -9.626239776611328
    6. '   
' → logprob: -9.751239776611328
    7. '  ' → logprob: -9.876239776611328
    8. ' ' → logprob: -10.126239776611328
    9. '  
' → logprob: -10.376239776611328
    10. '
' → logprob: -10.376239776611328

Token 336: ' intervals' (ID: 49900)
  Prédit: ' intervals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' intervals' → logprob: -1.0286056995391846
    2. ' i' → logprob: -1.1536056995391846
    3. 'i' → logprob: -2.0286056995391846
    4. '   ' → logprob: -3.2786056995391846
    5. ' idx' → logprob: -3.6536056995391846
    6. ' usage' → logprob: -3.9036056995391846
    7. ' result' → logprob: -4.1536054611206055
    8. 'interval' → logprob: -4.2786054611206055
    9. ' total' → logprob: -4.4036054611206055
    10. ' query' → logprob: -4.4036054611206055

Token 337: ' sont' (ID: 5242)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.039647188037633896
    2. '=' → logprob: -3.914647102355957
    3. 's' → logprob: -4.914647102355957
    4. '_s' → logprob: -6.164647102355957
    5. '   ' → logprob: -6.164647102355957
    6. '_' → logprob: -6.414647102355957
    7. ' sont' → logprob: -6.789647102355957
    8. ',' → logprob: -7.789647102355957
    9. ' ' → logprob: -7.914647102355957
    10. ':' → logprob: -8.039647102355957

Token 338: ' une' (ID: 2463)
  Prédit: ' tri'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' tri' → logprob: -0.5531707406044006
    2. 'dé' → logprob: -2.303170680999756
    3. ' déjà' → logprob: -2.428170680999756
    4. 'tri' → logprob: -2.803170680999756
    5. ' suppos' → logprob: -2.803170680999756
    6. '   ' → logprob: -3.803170680999756
    7. 'supp' → logprob: -3.928170680999756
    8. ' sorted' → logprob: -4.428170680999756
    9. 'tr' → logprob: -4.428170680999756
    10. ' dé' → logprob: -4.428170680999756

Token 339: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.08718661218881607
    2. ' list' → logprob: -3.087186574935913
    3. 'liste' → logprob: -3.587186574935913
    4. ' listes' → logprob: -5.462186813354492
    5. ' ' → logprob: -5.962186813354492
    6. ' sorted' → logprob: -6.337186813354492
    7. 'list' → logprob: -6.837186813354492
    8. '   ' → logprob: -8.962186813354492
    9. '  ' → logprob: -9.712186813354492
    10. 'sorted' → logprob: -9.712186813354492

Token 340: ' tri' (ID: 12665)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.09086624532938004
    2. 'd' → logprob: -3.4658663272857666
    3. ' of' → logprob: -3.8408663272857666
    4. ' des' → logprob: -4.2158660888671875
    5. ' de' → logprob: -5.0908660888671875
    6. '[' → logprob: -5.7158660888671875
    7. ' )' → logprob: -6.3408660888671875
    8. ',' → logprob: -6.4658660888671875
    9. '<|end|>' → logprob: -6.4658660888671875
    10. ')' → logprob: -6.7158660888671875

Token 341: 'ée' (ID: 2894)
  Prédit: 'és'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.06284035742282867
    2. 'ée' → logprob: -2.812840461730957
    3. 'ées' → logprob: -7.187840461730957
    4. 'é' → logprob: -9.687840461730957
    5. '   ' → logprob: -10.687840461730957
    6. 's' → logprob: -11.687840461730957
    7. '       ' → logprob: -12.937840461730957
    8. '```' → logprob: -13.062840461730957
    9. 'rés' → logprob: -13.062840461730957
    10. 'nés' → logprob: -13.687840461730957

Token 342: ' d' (ID: 272)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.27186036109924316
    2. ' ,' → logprob: -1.6468603610992432
    3. ' d' → logprob: -3.271860361099243
    4. 'd' → logprob: -5.771860122680664
    5. '[' → logprob: -6.021860122680664
    6. '  ' → logprob: -8.521860122680664
    7. ',
' → logprob: -8.646860122680664
    8. ' ' → logprob: -8.771860122680664
    9. 'des' → logprob: -8.771860122680664
    10. ')' → logprob: -8.896860122680664

Token 343: ''inter' (ID: 55731)
  Prédit: ' tuples'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' tuples' → logprob: -0.25624537467956543
    2. ' (' → logprob: -2.0062453746795654
    3. ' des' → logprob: -2.6312453746795654
    4. '(' → logprob: -5.2562456130981445
    5. ')' → logprob: -5.3812456130981445
    6. ' )' → logprob: -6.3812456130981445
    7. 's' → logprob: -6.8812456130981445
    8. ',' → logprob: -7.1312456130981445
    9. 'des' → logprob: -7.1312456130981445
    10. ' intervals' → logprob: -7.2562456130981445

Token 344: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.7057415843009949
    2. 'vals' → logprob: -1.3307416439056396
    3. 'val' → logprob: -2.3307416439056396
    4. '_' → logprob: -3.3307416439056396
    5. 'vel' → logprob: -4.4557414054870605
    6. '(' → logprob: -4.5807414054870605
    7. '```' → logprob: -4.6432414054870605
    8. 's' → logprob: -4.8932414054870605
    9. '_val' → logprob: -5.0182414054870605
    10. 'vall' → logprob: -5.3307414054870605

Token 345: 'alles' (ID: 28825)
  Prédit: 'alles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'alles' → logprob: -0.559721052646637
    2. 'als' → logprob: -1.5597209930419922
    3. 'al' → logprob: -1.6847209930419922
    4. 'ales' → logprob: -3.809720993041992
    5. '   ' → logprob: -6.434720993041992
    6. '```' → logprob: -6.872220993041992
    7. 'aux' → logprob: -7.559720993041992
    8. '<' → logprob: -7.622220993041992
    9. 's' → logprob: -7.622220993041992
    10. '#' → logprob: -7.809720993041992

Token 346: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.8995034694671631
    2. ',' → logprob: -1.024503469467163
    3. '   ' → logprob: -2.649503469467163
    4. '(' → logprob: -2.899503469467163
    5. ')' → logprob: -3.149503469467163
    6. ' ,' → logprob: -4.024503707885742
    7. '[' → logprob: -4.649503707885742
    8. 's' → logprob: -4.774503707885742
    9. '[(' → logprob: -4.774503707885742
    10. ' [(' → logprob: -5.399503707885742

Token 347: 'start' (ID: 5236)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3350840210914612
    2. ',' → logprob: -1.9600839614868164
    3. ' (' → logprob: -2.8350839614868164
    4. '(' → logprob: -3.4600839614868164
    5. '(start' → logprob: -3.5850839614868164
    6. ' ,' → logprob: -4.835083961486816
    7. 'start' → logprob: -6.085083961486816
    8. ' tuples' → logprob: -6.085083961486816
    9. '[start' → logprob: -6.210083961486816
    10. ' )' → logprob: -6.335083961486816

Token 348: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00035119339008815587
    2. 's' → logprob: -8.250350952148438
    3. ' ,' → logprob: -10.500350952148438
    4. ',
' → logprob: -10.750350952148438
    5. '_,' → logprob: -10.875350952148438
    6. ')' → logprob: -11.625350952148438
    7. '[' → logprob: -12.750350952148438
    8. '   ' → logprob: -13.000350952148438
    9. '),' → logprob: -13.875350952148438
    10. ' ' → logprob: -14.375350952148438

Token 349: ' end' (ID: 1268)
  Prédit: ' end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' end' → logprob: -0.12693022191524506
    2. 'end' → logprob: -2.1269302368164062
    3. ' ' → logprob: -13.751930236816406
    4. ',end' → logprob: -14.876930236816406
    5. '	end' → logprob: -15.001930236816406
    6. '   ' → logprob: -16.001930236816406
    7. '_end' → logprob: -16.376930236816406
    8. '  ' → logprob: -16.751930236816406
    9. '[end' → logprob: -17.251930236816406
    10. '(end' → logprob: -18.001930236816406

Token 350: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.057460349053144455
    2. 's' → logprob: -2.932460308074951
    3. '),' → logprob: -6.307460308074951
    4. ')s' → logprob: -8.05746078491211
    5. ')
' → logprob: -8.68246078491211
    6. ').' → logprob: -9.43246078491211
    7. '[' → logprob: -10.30746078491211
    8. ']' → logprob: -10.55746078491211
    9. '):
' → logprob: -10.55746078491211
    10. '):' → logprob: -10.68246078491211

Token 351: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010318581946194172
    2. ')' → logprob: -4.635318756103516
    3. '    
' → logprob: -7.760318756103516
    4. '
' → logprob: -10.760318756103516
    5. ' )' → logprob: -10.760318756103516
    6. 'def' → logprob: -11.010318756103516
    7. '    ' → logprob: -11.135318756103516
    8. ' ' → logprob: -11.260318756103516
    9. '  ' → logprob: -11.385318756103516
    10. ' 
' → logprob: -12.010318756103516

Token 352: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009122650139033794
    2. ')' → logprob: -4.759122848510742
    3. '    
' → logprob: -8.509122848510742
    4. '
' → logprob: -9.759122848510742
    5. 'def' → logprob: -9.759122848510742
    6. ']' → logprob: -10.134122848510742
    7. ' )' → logprob: -10.259122848510742
    8. ')
' → logprob: -10.509122848510742
    9. '   
' → logprob: -11.384122848510742
    10. '  ' → logprob: -11.509122848510742

Token 353: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0010593677870929241
    2. 'total' → logprob: -7.501059532165527
    3. ' total' → logprob: -8.251059532165527
    4. 'usage' → logprob: -9.251059532165527
    5. ' usage' → logprob: -9.751059532165527
    6. 'result' → logprob: -10.376059532165527
    7. '    
' → logprob: -10.376059532165527
    8. ' result' → logprob: -12.001059532165527
    9. '   ' → logprob: -12.126059532165527
    10. '
' → logprob: -12.501059532165527

Token 354: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' (adapté à ' total') → logprob: -0.24400867521762848
    2. 'usage' → logprob: -1.7440086603164673
    3. '   ' → logprob: -3.744008779525757
    4. 'result' → logprob: -4.369008541107178
    5. 'i' → logprob: -5.744008541107178
    6. 'duration' → logprob: -7.244008541107178
    7. 'left' → logprob: -7.869008541107178
    8. ' total' → logprob: -8.244009017944336
    9. 'index' → logprob: -8.494009017944336
    10. 'used' → logprob: -8.869009017944336

Token 355: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5217276215553284
    2. ' =' → logprob: -1.2717275619506836
    3. '_usage' → logprob: -2.1467275619506836
    4. '_time' → logprob: -5.521727561950684
    5. '=' → logprob: -5.646727561950684
    6. '_duration' → logprob: -6.771727561950684
    7. ' _' → logprob: -8.146727561950684
    8. ' ' → logprob: -10.021727561950684
    9. '_space' → logprob: -10.021727561950684
    10. '_use' → logprob: -10.146727561950684

Token 356: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.22541499137878418
    2. ' ' → logprob: -1.6004149913787842
    3. ' ' → logprob: -13.100415229797363
    4. '   ' → logprob: -15.475415229797363
    5. '  ' → logprob: -17.225414276123047
    6. '۰' → logprob: -18.412914276123047
    7. '1' → logprob: -18.537914276123047
    8. '	' → logprob: -18.787914276123047
    9. 's' → logprob: -18.850414276123047
    10. ' 
' → logprob: -18.975414276123047

Token 357: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.1689596148207784e-05
    2. ' ' → logprob: -9.875051498413086
    3. '   ' → logprob: -16.875051498413086
    4. 'import' → logprob: -18.125051498413086
    5. '```' → logprob: -18.750051498413086
    6. '  ' → logprob: -18.875051498413086
    7. '000' → logprob: -19.500051498413086
    8. '۰' → logprob: -19.875051498413086
    9. ' ' → logprob: -20.500051498413086
    10. 'bis' → logprob: -20.687551498413086

Token 358: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10320572555065155
    2. '   ' → logprob: -2.728205680847168
    3. '    
' → logprob: -3.978205680847168
    4. ' 
' → logprob: -5.603205680847168
    5. '	
' → logprob: -5.978205680847168
    6. '   
' → logprob: -6.478205680847168
    7. '  
' → logprob: -6.478205680847168
    8. 'for' → logprob: -6.603205680847168
    9. ' for' → logprob: -6.853205680847168
    10. '
' → logprob: -7.103205680847168

Token 359: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002975679701194167
    2. '    
' → logprob: -6.1279754638671875
    3. '
' → logprob: -7.3779754638671875
    4. ' for' → logprob: -9.502975463867188
    5. 'for' → logprob: -9.752975463867188
    6. '   
' → logprob: -12.002975463867188
    7. 'idx' → logprob: -12.627975463867188
    8. '	for' → logprob: -13.002975463867188
    9. '    
' → logprob: -13.127975463867188
    10. '    ' → logprob: -13.127975463867188

Token 360: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.02595781534910202
    2. 'i' → logprob: -4.0259575843811035
    3. '   ' → logprob: -5.6509575843811035
    4. 'left' → logprob: -6.0259575843811035
    5. 'idx' → logprob: -7.0259575843811035
    6. ' for' → logprob: -7.7759575843811035
    7. '#' (adapté à ' #') → logprob: -8.400958061218262
    8. 'query' → logprob: -8.900958061218262
    9. 'index' → logprob: -9.400958061218262
    10. 'interval' → logprob: -10.525958061218262

Token 361: ' Parc' (ID: 68618)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4853987395763397
    2. 'i' → logprob: -1.485398769378662
    3. 'left' → logprob: -2.985398769378662
    4. '#' → logprob: -2.985398769378662
    5. 'idx' → logprob: -3.610398769378662
    6. '   ' → logprob: -4.985398769378662
    7. 'query' → logprob: -5.110398769378662
    8. 'pos' → logprob: -5.235398769378662
    9. 'l' → logprob: -5.985398769378662
    10. 'index' → logprob: -6.110398769378662

Token 362: 'our' (ID: 401)
  Prédit: 'our'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'our' → logprob: -0.053065311163663864
    2. 'ours' → logprob: -3.303065299987793
    3. '   ' → logprob: -4.803065299987793
    4. 'ourt' → logprob: -5.928065299987793
    5. 'urrent' → logprob: -7.428065299987793
    6. 'or' → logprob: -7.553065299987793
    7. 'er' → logprob: -7.678065299987793
    8. 'for' → logprob: -7.678065299987793
    9. 'u' → logprob: -7.928065299987793
    10. '       ' → logprob: -8.178065299987793

Token 363: 'ir' (ID: 380)
  Prédit: 'ir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ir' → logprob: -2.939851037808694e-05
    2. 's' → logprob: -11.500029563903809
    3. 'i' → logprob: -11.875029563903809
    4. 'r' → logprob: -12.250029563903809
    5. 'er' → logprob: -12.750029563903809
    6. 'ant' → logprob: -13.125029563903809
    7. 't' → logprob: -14.500029563903809
    8. 'is' → logprob: -14.750029563903809
    9. 'ons' → logprob: -15.000029563903809
    10. 'ent' → logprob: -15.125029563903809

Token 364: ' les' (ID: 1341)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.21367524564266205
    2. 'for' → logprob: -1.8386752605438232
    3. '   ' → logprob: -3.4636752605438232
    4. ' intervals' → logprob: -7.338675022125244
    5. ' i' → logprob: -7.588675022125244
    6. '	for' → logprob: -7.963675022125244
    7. 'i' → logprob: -8.213675498962402
    8. 'import' → logprob: -9.338675498962402
    9. 'interval' → logprob: -9.463675498962402
    10. 'bis' → logprob: -10.588675498962402

Token 365: ' interv' (ID: 37413)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.0446992851793766
    2. ' intervals' → logprob: -3.169699192047119
    3. 'for' → logprob: -7.794699192047119
    4. 'inter' → logprob: -8.169699668884277
    5. 'bis' → logprob: -8.169699668884277
    6. ' for' → logprob: -8.419699668884277
    7. 'i' → logprob: -8.544699668884277
    8. ' interval' → logprob: -9.294699668884277
    9. '(interval' → logprob: -9.919699668884277
    10. '   ' → logprob: -10.044699668884277

Token 366: 'alles' (ID: 28825)
  Prédit: 'iers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.4983639717102051
    2. 'als' → logprob: -2.123363971710205
    3. 'vals' → logprob: -2.373363971710205
    4. 'ents' → logprob: -2.748363971710205
    5. 'erv' → logprob: -3.498363971710205
    6. '   ' → logprob: -3.748363971710205
    7. 'aux' → logprob: -4.748363971710205
    8. 'val' → logprob: -4.998363971710205
    9. 'ier' → logprob: -5.748363971710205
    10. 'its' → logprob: -5.873363971710205

Token 367: ' ord' (ID: 6608)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6349366903305054
    2. ' for' → logprob: -0.8849366903305054
    3. 'for' → logprob: -2.884936809539795
    4. ':' → logprob: -7.509936809539795
    5. '	for' → logprob: -8.384936332702637
    6. ' in' → logprob: -8.759936332702637
    7. ',' → logprob: -9.134936332702637
    8. '  ' → logprob: -10.134936332702637
    9. '    ' → logprob: -10.759936332702637
    10. 'def' → logprob: -10.884936332702637

Token 368: 'onn' (ID: 9525)
  Prédit: 'onn'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'onn' → logprob: -0.0017658589640632272
    2. 'on' → logprob: -7.001765727996826
    3. 'onnées' → logprob: -7.751765727996826
    4. 'onné' → logprob: -8.251766204833984
    5. 'onnée' → logprob: -9.501766204833984
    6. 'in' → logprob: -9.876766204833984
    7. 'onna' → logprob: -11.501766204833984
    8. 'onnes' → logprob: -11.501766204833984
    9. 'onne' → logprob: -12.251766204833984
    10. '   ' → logprob: -13.001766204833984

Token 369: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.06663203984498978
    2. 'onn' → logprob: -2.941632032394409
    3. 'onné' → logprob: -4.941632270812988
    4. 'ed' → logprob: -6.191632270812988
    5. 'rés' → logprob: -7.316632270812988
    6. 'onnée' → logprob: -7.691632270812988
    7. 'é' → logprob: -7.941632270812988
    8. 'es' → logprob: -7.941632270812988
    9. 'nés' → logprob: -8.441632270812988
    10. 'onnées' → logprob: -9.066632270812988

Token 370: ' qui' (ID: 2780)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10542429983615875
    2. ' for' → logprob: -2.355424404144287
    3. 'for' → logprob: -5.480424404144287
    4. ',' → logprob: -7.730424404144287
    5. '	for' → logprob: -8.355423927307129
    6. '    
' → logprob: -8.980423927307129
    7. ' pour' → logprob: -9.730423927307129
    8. '  ' → logprob: -10.605423927307129
    9. ' ' → logprob: -10.730423927307129
    10. ' ,' → logprob: -10.980423927307129

Token 371: ' peuvent' (ID: 21321)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1324037313461304
    2. ' for' → logprob: -1.3824037313461304
    3. 'ont' → logprob: -1.3824037313461304
    4. 's' → logprob: -3.75740385055542
    5. ' peuvent' → logprob: -3.75740385055542
    6. ' pourraient' → logprob: -3.75740385055542
    7. ' sont' → logprob: -4.13240385055542
    8. '   ' → logprob: -4.63240385055542
    9. ' pour' → logprob: -4.75740385055542
    10. ' could' → logprob: -5.13240385055542

Token 372: ' chev' (ID: 127415)
  Prédit: 'inter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inter' → logprob: -0.44895172119140625
    2. 'over' → logprob: -2.6989517211914062
    3. ' intersect' → logprob: -2.6989517211914062
    4. 'être' → logprob: -3.0739517211914062
    5. 'potential' → logprob: -3.1989517211914062
    6. 'comm' → logprob: -3.8239517211914062
    7. 'con' → logprob: -3.9489517211914062
    8. 'cro' → logprob: -4.198951721191406
    9. 'b' → logprob: -4.323951721191406
    10. 'se' → logprob: -4.823951721191406

Token 373: 'au' (ID: 753)
  Prédit: 'au'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'au' → logprob: -0.3505691885948181
    2. 'over' → logprob: -1.850569248199463
    3. 'er' → logprob: -3.975569248199463
    4. 'a' → logprob: -4.225569248199463
    5. 'ucher' → logprob: -4.350569248199463
    6. 'acher' → logprob: -4.475569248199463
    7. 'o' → logprob: -4.725569248199463
    8. 'ev' → logprob: -4.725569248199463
    9. 'oyer' → logprob: -4.725569248199463
    10. 'aller' → logprob: -4.850569248199463

Token 374: 'cher' (ID: 6665)
  Prédit: 'ver'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ver' → logprob: -0.12645643949508667
    2. 'vr' → logprob: -2.5014564990997314
    3. 'cher' → logprob: -4.001456260681152
    4. 'v' → logprob: -4.376456260681152
    5. 'er' → logprob: -5.876456260681152
    6. 'vant' → logprob: -6.501456260681152
    7. 'a' → logprob: -8.251456260681152
    8. 'vent' → logprob: -8.501456260681152
    9. '#' → logprob: -8.876456260681152
    10. 'vert' → logprob: -9.001456260681152

Token 375: ' la' (ID: 557)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.44848430156707764
    2. ' intervals' → logprob: -1.6984843015670776
    3. ' les' → logprob: -3.073484420776367
    4. '(interval' → logprob: -3.448484420776367
    5. 'interval' → logprob: -3.698484420776367
    6. ' for' → logprob: -4.073484420776367
    7. ' avec' → logprob: -4.573484420776367
    8. ' des' → logprob: -4.948484420776367
    9. ' with' → logprob: -5.198484420776367
    10. ' aux' → logprob: -5.198484420776367

Token 376: ' période' (ID: 46855)
  Prédit: 'query'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'query' → logprob: -0.3253050744533539
    2. ' query' → logprob: -1.4503051042556763
    3. 'bis' → logprob: -4.700304985046387
    4. ' bis' → logprob: -5.075304985046387
    5. '(query' → logprob: -5.325304985046387
    6. ' (' → logprob: -5.325304985046387
    7. '   ' → logprob: -5.700304985046387
    8. 'interval' → logprob: -5.825304985046387
    9. ' intervals' → logprob: -5.825304985046387
    10. '[' → logprob: -6.200304985046387

Token 377: ' demand' (ID: 8492)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017632272094488144
    2. ' for' → logprob: -4.267632484436035
    3. 'for' → logprob: -6.142632484436035
    4. '    
' → logprob: -7.767632484436035
    5. ':' → logprob: -8.267632484436035
    6. ',' → logprob: -8.267632484436035
    7. '	for' → logprob: -9.642632484436035
    8. '    ' → logprob: -9.892632484436035
    9. '  ' → logprob: -10.392632484436035
    10. 'import' → logprob: -10.642632484436035

Token 378: 'ée' (ID: 2894)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.01234953198581934
    2. 'er' → logprob: -5.762349605560303
    3. 'és' → logprob: -5.887349605560303
    4. 'gent' → logprob: -5.887349605560303
    5. 'rés' → logprob: -7.137349605560303
    6. 'ger' → logprob: -7.262349605560303
    7. 'ge' → logprob: -7.387349605560303
    8. 'agés' → logprob: -8.387349128723145
    9. 'illés' → logprob: -8.637349128723145
    10. '   ' → logprob: -8.887349128723145

Token 379: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0025223882403224707
    2. ' for' → logprob: -6.3775224685668945
    3. 'for' → logprob: -7.7525224685668945
    4. '    
' → logprob: -8.627522468566895
    5. ',' → logprob: -9.127522468566895
    6. ':' → logprob: -9.877522468566895
    7. '.' → logprob: -11.377522468566895
    8. '  ' → logprob: -11.752522468566895
    9. '    ' → logprob: -12.627522468566895
    10. '   
' → logprob: -12.627522468566895

Token 380: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003356659086421132
    2. ' for' → logprob: -6.253356456756592
    3. 'for' → logprob: -6.628356456756592
    4. '    
' → logprob: -9.37835693359375
    5. ',' → logprob: -12.62835693359375
    6. 'index' → logprob: -12.87835693359375
    7. '
' → logprob: -13.00335693359375
    8. 'idx' → logprob: -13.12835693359375
    9. '	for' → logprob: -13.50335693359375
    10. '       ' → logprob: -13.87835693359375

Token 381: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.0479036569595337
    2. ' i' → logprob: -1.4229036569595337
    3. '   ' → logprob: -1.6729036569595337
    4. 'i' → logprob: -2.422903537750244
    5. 'for' → logprob: -2.797903537750244
    6. ' idx' → logprob: -3.172903537750244
    7. 'idx' → logprob: -4.672903537750244
    8. ' left' → logprob: -4.672903537750244
    9. ' index' → logprob: -5.422903537750244
    10. 'left' → logprob: -5.922903537750244

Token 382: ' On' (ID: 2160)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.3909066915512085
    2. ' i' → logprob: -1.3909066915512085
    3. '   ' → logprob: -1.6409066915512085
    4. ' idx' → logprob: -2.015906810760498
    5. ' for' → logprob: -2.890906810760498
    6. 'idx' → logprob: -3.390906810760498
    7. 'for' → logprob: -3.640906810760498
    8. ' left' → logprob: -3.640906810760498
    9. 'left' → logprob: -4.390906810760498
    10. 'index' → logprob: -4.890906810760498

Token 383: ' peut' (ID: 9216)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2086691856384277
    2. 'i' → logprob: -1.4586691856384277
    3. 'import' → logprob: -1.4586691856384277
    4. 'for' → logprob: -2.3336691856384277
    5. 'start' → logprob: -3.2086691856384277
    6. ' for' → logprob: -4.208669185638428
    7. ' i' → logprob: -4.208669185638428
    8. 'idx' → logprob: -4.458669185638428
    9. 'n' → logprob: -4.708669185638428
    10. '=' → logprob: -4.833669185638428

Token 384: ' utiliser' (ID: 43227)
  Prédit: ' utiliser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' utiliser' → logprob: -0.5590779185295105
    2. 'import' → logprob: -2.0590779781341553
    3. 'util' → logprob: -2.3090779781341553
    4. ' use' → logprob: -2.5590779781341553
    5. '   ' → logprob: -3.1840779781341553
    6. 'use' → logprob: -4.559077739715576
    7. 'chercher' → logprob: -4.684077739715576
    8. 'bis' → logprob: -4.809077739715576
    9. 'start' → logprob: -4.934077739715576
    10. ' start' → logprob: -5.184077739715576

Token 385: ' bis' (ID: 7204)
  Prédit: 'bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bis' → logprob: -0.016202695667743683
    2. ' bis' → logprob: -4.141202926635742
    3. 'b' → logprob: -8.891202926635742
    4. '   ' → logprob: -11.016202926635742
    5. '	b' → logprob: -12.016202926635742
    6. 'import' → logprob: -12.641202926635742
    7. 'binary' → logprob: -13.266202926635742
    8. ' ' → logprob: -13.516202926635742
    9. 'bi' → logprob: -14.891202926635742
    10. ' binary' → logprob: -15.141202926635742

Token 386: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -2.8444881536415778e-05
    2. 'e' → logprob: -10.875028610229492
    3. 'ec' → logprob: -12.625028610229492
    4. '   ' → logprob: -13.500028610229492
    5. 'ectl' → logprob: -13.750028610229492
    6. 'ected' → logprob: -14.375028610229492
    7. 'ex' → logprob: -14.500028610229492
    8. 'ection' → logprob: -14.500028610229492
    9. 'ects' → logprob: -14.500028610229492
    10. ' ect' → logprob: -15.125028610229492

Token 387: ' pour' (ID: 1930)
  Prédit: '_left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_left' → logprob: -0.44744324684143066
    2. '_' → logprob: -1.5724432468414307
    3. '.b' → logprob: -1.9474432468414307
    4. '_right' → logprob: -4.697443008422852
    5. '.' → logprob: -7.197443008422852
    6. '_,' → logprob: -8.947443008422852
    7. '_b' → logprob: -8.947443008422852
    8. '._' → logprob: -9.322443008422852
    9. '_.' → logprob: -9.822443008422852
    10. '   ' → logprob: -10.447443008422852

Token 388: ' optimiser' (ID: 195777)
  Prédit: 'bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bis' → logprob: -0.4903123080730438
    2. ' trouver' → logprob: -1.2403123378753662
    3. ' bis' → logprob: -3.740312337875366
    4. 'tr' → logprob: -3.740312337875366
    5. 'find' → logprob: -3.865312337875366
    6. 'chercher' → logprob: -4.990312099456787
    7. ' find' → logprob: -5.115312099456787
    8. '   ' → logprob: -5.115312099456787
    9. 'import' → logprob: -5.740312099456787
    10. ' rechercher' → logprob: -6.240312099456787

Token 389: ' la' (ID: 557)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3395943343639374
    2. ' start' → logprob: -1.7145943641662598
    3. 'start' → logprob: -3.3395943641662598
    4. ' left' → logprob: -3.5895943641662598
    5. 'left' → logprob: -4.33959436416626
    6. ' idx' → logprob: -4.71459436416626
    7. ' index' → logprob: -5.21459436416626
    8. 'idx' → logprob: -5.71459436416626
    9. 'index' → logprob: -5.96459436416626
    10. ' pos' → logprob: -6.08959436416626

Token 390: ' recherche' (ID: 24975)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'position' → logprob: -0.8111777305603027
    2. 'bis' → logprob: -1.9361777305603027
    3. 'index' → logprob: -2.1861777305603027
    4. 'pos' → logprob: -2.3111777305603027
    5. 'left' → logprob: -3.0611777305603027
    6. 'idx' → logprob: -3.4361777305603027
    7. ' position' → logprob: -3.6861777305603027
    8. ' bis' → logprob: -4.186177730560303
    9. 'start' → logprob: -4.436177730560303
    10. '   ' → logprob: -4.561177730560303

Token 391: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14138470590114594
    2. '_start' → logprob: -2.7663846015930176
    3. '_left' → logprob: -3.8913846015930176
    4. 'start' → logprob: -4.016384601593018
    5. ' start' → logprob: -5.391384601593018
    6. '_' → logprob: -5.391384601593018
    7. '_pos' → logprob: -5.766384601593018
    8. '_right' → logprob: -5.891384601593018
    9. ',' → logprob: -6.266384601593018
    10. 'left' → logprob: -6.266384601593018

Token 392: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022602811455726624
    2. ' start' → logprob: -5.2726030349731445
    3. ' idx' → logprob: -5.5226030349731445
    4. ' left' → logprob: -6.0226030349731445
    5. 'start' → logprob: -6.1476030349731445
    6. ' i' → logprob: -6.3976030349731445
    7. 'idx' → logprob: -6.3976030349731445
    8. ' pos' → logprob: -6.5226030349731445
    9. 'index' → logprob: -7.0226030349731445
    10. ' index' → logprob: -7.1476030349731445

Token 393: ' #' (ID: 1069)
  Prédit: ' idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' idx' → logprob: -1.2158437967300415
    2. ' left' → logprob: -1.9658437967300415
    3. 'idx' → logprob: -2.215843677520752
    4. ' i' → logprob: -2.590843677520752
    5. ' index' → logprob: -2.590843677520752
    6. 'index' → logprob: -2.590843677520752
    7. 'left' → logprob: -2.840843677520752
    8. ' pos' → logprob: -2.840843677520752
    9. 'i' → logprob: -3.090843677520752
    10. 'pos' → logprob: -3.590843677520752

Token 394: ' Cher' (ID: 48756)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -1.2279531955718994
    2. 'i' → logprob: -1.3529531955718994
    3. 'pos' → logprob: -1.8529531955718994
    4. 'index' → logprob: -2.3529531955718994
    5. 'left' → logprob: -2.4779531955718994
    6. ' idx' → logprob: -2.9779531955718994
    7. ' i' → logprob: -3.4779531955718994
    8. ' left' → logprob: -4.60295295715332
    9. ' pos' → logprob: -4.72795295715332
    10. 'start' → logprob: -5.35295295715332

Token 395: 'cher' (ID: 6665)
  Prédit: 'cher'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cher' → logprob: -0.21157370507717133
    2. 'ch' → logprob: -1.8365737199783325
    3. '   ' → logprob: -3.961573600769043
    4. 'che' → logprob: -5.211573600769043
    5. 'rch' → logprob: -5.586573600769043
    6. 'r' → logprob: -6.836573600769043
    7. 'c' → logprob: -7.461573600769043
    8. '#' → logprob: -7.836573600769043
    9. 'chez' → logprob: -8.211573600769043
    10. 'cht' → logprob: -9.211573600769043

Token 396: ' la' (ID: 557)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -1.4050372838974
    2. '   ' → logprob: -1.7800372838974
    3. 'index' → logprob: -2.0300374031066895
    4. 'idx' → logprob: -2.4050374031066895
    5. '_left' → logprob: -2.4050374031066895
    6. 'left' → logprob: -2.9050374031066895
    7. 'l' → logprob: -3.9050374031066895
    8. '_index' → logprob: -3.9050374031066895
    9. '_right' → logprob: -3.9050374031066895
    10. '_idx' → logprob: -4.0300374031066895

Token 397: ' première' (ID: 23423)
  Prédit: ' position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' position' → logprob: -1.1709662675857544
    2. 'position' → logprob: -1.2959662675857544
    3. 'pos' → logprob: -1.5459662675857544
    4. 'index' → logprob: -3.420966148376465
    5. 'left' → logprob: -3.545966148376465
    6. 'right' → logprob: -4.045966148376465
    7. ' index' → logprob: -4.170966148376465
    8. ' right' → logprob: -4.170966148376465
    9. ' bis' → logprob: -4.420966148376465
    10. ' pos' → logprob: -4.670966148376465

Token 398: ' interval' (ID: 17116)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.6498242616653442
    2. 'interval' → logprob: -1.7748242616653442
    3. 'position' → logprob: -1.8998242616653442
    4. 'index' → logprob: -3.0248241424560547
    5. ' position' → logprob: -3.5248241424560547
    6. '_pos' → logprob: -4.274824142456055
    7. '_position' → logprob: -4.399824142456055
    8. 'idx' → logprob: -4.649824142456055
    9. '_' → logprob: -4.774824142456055
    10. '_interval' → logprob: -4.899824142456055

Token 399: 'le' (ID: 282)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8127701878547668
    2. 'le' → logprob: -1.312770128250122
    3. 'val' → logprob: -2.062770128250122
    4. '_start' → logprob: -2.187770128250122
    5. '_index' → logprob: -4.562770366668701
    6. '_val' → logprob: -5.062770366668701
    7. 's' → logprob: -5.312770366668701
    8. 'v' → logprob: -5.437770366668701
    9. 'e' → logprob: -5.812770366668701
    10. '_end' → logprob: -5.812770366668701

Token 400: ' qui' (ID: 2780)
  Prédit: '_start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_start' → logprob: -0.9872398972511292
    2. ' =' → logprob: -1.2372398376464844
    3. '_index' → logprob: -2.4872398376464844
    4. 's' → logprob: -2.7372398376464844
    5. '_' → logprob: -3.2372398376464844
    6. '=' → logprob: -4.112239837646484
    7. '_end' → logprob: -4.237239837646484
    8. '_idx' → logprob: -4.362239837646484
    9. '_=' → logprob: -4.487239837646484
    10. ' à' → logprob: -4.612239837646484

Token 401: ' peut' (ID: 9216)
  Prédit: ' pourrait'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pourrait' → logprob: -1.2127909660339355
    2. 's' → logprob: -1.5877909660339355
    3. ' peut' → logprob: -1.9627909660339355
    4. ' a' → logprob: -1.9627909660339355
    5. ')' → logprob: -3.7127909660339355
    6. '_start' → logprob: -4.2127909660339355
    7. ' dépasse' → logprob: -4.2127909660339355
    8. ' est' → logprob: -4.3377909660339355
    9. 'start' → logprob: -4.3377909660339355
    10. '_' → logprob: -4.4627909660339355

Token 402: ' commencer' (ID: 66055)
  Prédit: 'over'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'over' → logprob: -0.8336679339408875
    2. 'inter' → logprob: -1.8336679935455322
    3. ' intersect' → logprob: -2.5836679935455322
    4. ' commencer' → logprob: -2.8336679935455322
    5. ' overlap' → logprob: -3.2086679935455322
    6. '_overlap' → logprob: -3.2086679935455322
    7. 'start' → logprob: -3.8336679935455322
    8. 'avoir' → logprob: -3.8336679935455322
    9. 'dé' → logprob: -3.8336679935455322
    10. 's' → logprob: -4.083667755126953

Token 403: ' avant' (ID: 13339)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.7837547063827515
    2. ' =' → logprob: -1.7837547063827515
    3. '_' → logprob: -1.9087547063827515
    4. ',' → logprob: -2.908754825592041
    5. ' _' → logprob: -3.283754825592041
    6. ' dans' → logprob: -4.033754825592041
    7. '   ' → logprob: -4.033754825592041
    8. '_pos' → logprob: -4.283754825592041
    9. ' ,' → logprob: -4.533754825592041
    10. ' at' → logprob: -4.783754825592041

Token 404: ' query' (ID: 5703)
  Prédit: ' query'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' query' → logprob: -0.22595520317554474
    2. 'query' → logprob: -1.6009552478790283
    3. '(query' → logprob: -7.850955009460449
    4. '=query' → logprob: -9.97595500946045
    5. '	query' → logprob: -10.22595500946045
    6. '_query' → logprob: -10.60095500946045
    7. '   ' → logprob: -11.47595500946045
    8. ' (' → logprob: -11.47595500946045
    9. 'bis' → logprob: -12.22595500946045
    10. '(' → logprob: -12.60095500946045

Token 405: '_end' (ID: 13707)
  Prédit: '_end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_end' → logprob: -0.1427946239709854
    2. '_start' → logprob: -2.017794609069824
    3. '_' → logprob: -9.392794609069824
    4. '   ' → logprob: -11.892794609069824
    5. ' _' → logprob: -12.142794609069824
    6. 'start' → logprob: -13.017794609069824
    7. 'end' → logprob: -13.642794609069824
    8. '
' → logprob: -13.642794609069824
    9. '_max' → logprob: -13.642794609069824
    10. '_fin' → logprob: -13.642794609069824

Token 406: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.309614896774292
    2. 'idx' → logprob: -1.309614896774292
    3. 'index' → logprob: -2.184614896774292
    4. ' idx' → logprob: -2.184614896774292
    5. ' =' → logprob: -2.559614896774292
    6. 'pos' → logprob: -2.934614896774292
    7. '_index' → logprob: -3.559614896774292
    8. ' index' → logprob: -3.809614896774292
    9. '_idx' → logprob: -4.184615135192871
    10. ' pos' → logprob: -4.309615135192871

Token 407: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8196272253990173
    2. ' idx' → logprob: -1.944627285003662
    3. ' pos' → logprob: -2.194627285003662
    4. 'pos' → logprob: -2.319627285003662
    5. 'idx' → logprob: -2.569627285003662
    6. 'index' → logprob: -2.944627285003662
    7. ' i' → logprob: -3.194627285003662
    8. ' index' → logprob: -3.944627285003662
    9. 'i' → logprob: -4.194627285003662
    10. 'left' → logprob: -7.444627285003662

Token 408: ' i' (ID: 575)
  Prédit: ' idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.9662549495697021
    2. ' pos' → logprob: -1.7162549495697021
    3. ' index' → logprob: -2.216254949569702
    4. 'index' → logprob: -2.466254949569702
    5. 'idx' → logprob: -2.591254949569702
    6. ' i' → logprob: -2.841254949569702
    7. 'pos' → logprob: -3.091254949569702
    8. 'i' (adapté à ' i') → logprob: -3.341254949569702
    9. '   ' → logprob: -3.591254949569702
    10. ' left' → logprob: -6.341255187988281

Token 409: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11397037655115128
    2. '=' → logprob: -2.2389702796936035
    3. 'nd' → logprob: -6.9889702796936035
    4. 'n' → logprob: -8.738970756530762
    5. 'x' → logprob: -10.363970756530762
    6. 'dx' → logprob: -11.863970756530762
    7. '_' → logprob: -12.488970756530762
    8. 's' → logprob: -12.613970756530762
    9. 'nt' → logprob: -12.613970756530762
    10. '_start' → logprob: -13.113970756530762

Token 410: ' bis' (ID: 7204)
  Prédit: 'bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bis' → logprob: -0.0008260641479864717
    2. ' bis' → logprob: -7.125825881958008
    3. '0' → logprob: -10.875825881958008
    4. 'b' → logprob: -13.375825881958008
    5. 'len' → logprob: -14.375825881958008
    6. ' ' → logprob: -15.250825881958008
    7. '
' → logprob: -16.625825881958008
    8. '	b' → logprob: -16.625825881958008
    9. 'bi' → logprob: -16.750825881958008
    10. 'bs' → logprob: -16.750825881958008

Token 411: 'ect' (ID: 534)
  Prédit: 'sect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sect' → logprob: -0.19764110445976257
    2. 'ect' → logprob: -1.822641134262085
    3. 's' → logprob: -4.822640895843506
    4. 'ct' → logprob: -6.072640895843506
    5. '   ' → logprob: -6.822640895843506
    6. 'e' → logprob: -6.947640895843506
    7. 'lect' → logprob: -6.947640895843506
    8. 'n' → logprob: -7.322640895843506
    9. 'sec' → logprob: -7.322640895843506
    10. 'r' → logprob: -7.322640895843506

Token 412: '.b' (ID: 1292)
  Prédit: '.b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.b' → logprob: -0.005280246026813984
    2. '_left' → logprob: -5.255280017852783
    3. '_right' → logprob: -10.005280494689941
    4. '.' → logprob: -13.630280494689941
    5. '.ins' → logprob: -17.005279541015625
    6. ' .' → logprob: -17.380279541015625
    7. '._' → logprob: -17.755279541015625
    8. 'left' → logprob: -17.880279541015625
    9. '.left' → logprob: -18.005279541015625
    10. 'Left' → logprob: -18.130279541015625

Token 413: 'is' (ID: 276)
  Prédit: 'is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -5.512236498361744e-07
    2. 'ect' → logprob: -15.000000953674316
    3. 'ist' → logprob: -15.750000953674316
    4. 'ise' → logprob: -17.75
    5. 'isl' → logprob: -17.875
    6. 's' → logprob: -18.5
    7. 'i' → logprob: -19.125
    8. 'sect' → logprob: -19.125
    9. 'isb' → logprob: -19.375
    10. '(is' → logprob: -19.5

Token 414: 'ect' (ID: 534)
  Prédit: 'ct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ct' → logprob: -0.09028534591197968
    2. 'ect' → logprob: -2.465285301208496
    3. 'n' → logprob: -7.090285301208496
    4. 'sect' → logprob: -8.465285301208496
    5. 'r' → logprob: -9.340285301208496
    6. '   ' → logprob: -10.590285301208496
    7. '```' → logprob: -10.840285301208496
    8. 't' → logprob: -11.090285301208496
    9. '#' → logprob: -11.340285301208496
    10. '
' → logprob: -11.590285301208496

Token 415: '_left' (ID: 22189)
  Prédit: '_left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -0.0981345996260643
    2. '(interval' → logprob: -2.8481345176696777
    3. '_right' → logprob: -3.3481345176696777
    4. 'left' → logprob: -8.598134994506836
    5. 'interval' → logprob: -9.098134994506836
    6. 'Left' → logprob: -10.723134994506836
    7. '(inter' → logprob: -11.223134994506836
    8. '(' → logprob: -11.223134994506836
    9. 'right' → logprob: -11.473134994506836
    10. 'Right' → logprob: -12.473134994506836

Token 416: '(interval' (ID: 100435)
  Prédit: '(interval'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(interval' → logprob: -0.006721298210322857
    2. 'interval' → logprob: -5.006721496582031
    3. ' (' → logprob: -12.881721496582031
    4. '(
' → logprob: -13.756721496582031
    5. '([(' → logprob: -14.131721496582031
    6. '(' → logprob: -14.506721496582031
    7. '   ' → logprob: -14.631721496582031
    8. '
' → logprob: -15.006721496582031
    9. ' intervals' → logprob: -15.756721496582031
    10. '((' → logprob: -16.50672149658203

Token 417: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.002874772995710373
    2. 'als' → logprob: -6.377874851226807
    3. 'vals' → logprob: -7.002874851226807
    4. 'interval' → logprob: -9.502874374389648
    5. 'al' → logprob: -9.627874374389648
    6. '(interval' → logprob: -10.377874374389648
    7. '   ' → logprob: -10.752874374389648
    8. ')' → logprob: -11.252874374389648
    9. 'erv' → logprob: -11.752874374389648
    10. ' intervals' → logprob: -12.002874374389648

Token 418: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.066919301403686e-05
    2. ',(' → logprob: -9.500090599060059
    3. ' ,' → logprob: -11.625090599060059
    4. '(interval' → logprob: -13.000090599060059
    5. '(' → logprob: -13.500090599060059
    6. ',
' → logprob: -14.250090599060059
    7. '((' → logprob: -14.375090599060059
    8. '   ' → logprob: -14.625090599060059
    9. ',[' → logprob: -15.500090599060059
    10. 'interval' → logprob: -15.625090599060059

Token 419: ' (' (ID: 350)
  Prédit: '(query'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(query' → logprob: -0.12788230180740356
    2. ' (' → logprob: -2.127882242202759
    3. '(' → logprob: -7.252882480621338
    4. '   ' → logprob: -9.62788200378418
    5. '(q' → logprob: -9.87788200378418
    6. '((' → logprob: -10.00288200378418
    7. ' ' → logprob: -10.62788200378418
    8. '(interval' → logprob: -11.25288200378418
    9. '(Query' → logprob: -11.25288200378418
    10. '  ' → logprob: -11.37788200378418

Token 420: 'query' (ID: 2975)
  Prédit: 'query'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'query' → logprob: -0.0005891331238672137
    2. '0' → logprob: -7.750589370727539
    3. '(query' → logprob: -9.000589370727539
    4. ' query' → logprob: -10.625589370727539
    5. '	query' → logprob: -12.625589370727539
    6. '$query' → logprob: -13.125589370727539
    7. '=query' → logprob: -14.000589370727539
    8. ')' → logprob: -14.000589370727539
    9. '   ' → logprob: -14.125589370727539
    10. '-query' → logprob: -14.625589370727539

Token 421: '_end' (ID: 13707)
  Prédit: '_start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -0.08907938003540039
    2. '_end' → logprob: -2.4640793800354004
    3. 'start' → logprob: -9.089078903198242
    4. 'end' → logprob: -11.214078903198242
    5. '_' → logprob: -11.964078903198242
    6. 'Start' → logprob: -12.839078903198242
    7. '_START' → logprob: -13.964078903198242
    8. '   ' → logprob: -14.714078903198242
    9. 'End' → logprob: -14.839078903198242
    10. '_
' → logprob: -14.964078903198242

Token 422: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003751423500943929
    2. ',))
' → logprob: -8.500374794006348
    3. ' ,' → logprob: -9.375374794006348
    4. '))' → logprob: -10.000374794006348
    5. ',)' → logprob: -11.125374794006348
    6. '0' → logprob: -11.125374794006348
    7. ',
' → logprob: -12.250374794006348
    8. ',),' → logprob: -13.000374794006348
    9. ',,' → logprob: -13.875374794006348
    10. '1' → logprob: -14.375374794006348

Token 423: ' ))
' (ID: 43705)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08848229795694351
    2. '))' → logprob: -2.58848237991333
    3. '-' → logprob: -4.83848237991333
    4. ' ' → logprob: -7.33848237991333
    5. 'query' → logprob: -8.088481903076172
    6. 'float' → logprob: -8.213481903076172
    7. ' ))' → logprob: -8.963481903076172
    8. ')' → logprob: -9.838481903076172
    9. ' -' → logprob: -9.838481903076172
    10. 'None' → logprob: -9.963481903076172

Token 424: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6148069500923157
    2. '-' → logprob: -1.364806890487671
    3. ' -' → logprob: -1.989806890487671
    4. '   ' → logprob: -3.239806890487671
    5. ')' → logprob: -4.11480712890625
    6. ')
' → logprob: -5.36480712890625
    7. '    
' → logprob: -6.23980712890625
    8. ' 
' → logprob: -7.11480712890625
    9. 'while' → logprob: -7.23980712890625
    10. '  
' → logprob: -7.36480712890625

Token 425: ' #' (ID: 1069)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.07242611795663834
    2. 'if' → logprob: -3.0724260807037354
    3. ' i' → logprob: -4.5724263191223145
    4. 'while' → logprob: -5.0724263191223145
    5. ' if' → logprob: -6.3224263191223145
    6. 'for' → logprob: -6.5724263191223145
    7. '-' → logprob: -6.5724263191223145
    8. '0' → logprob: -7.5724263191223145
    9. ' while' → logprob: -7.6974263191223145
    10. '
' → logprob: -7.8224263191223145

Token 426: ' On' (ID: 2160)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.07683320343494415
    2. 'for' → logprob: -3.2018332481384277
    3. 'while' → logprob: -3.9518332481384277
    4. 'if' → logprob: -4.451833248138428
    5. '#' → logprob: -6.576833248138428
    6. '   ' → logprob: -7.576833248138428
    7. ' i' → logprob: -7.951833248138428
    8. ' for' → logprob: -10.07683277130127
    9. '
' → logprob: -10.20183277130127
    10. ' while' → logprob: -11.20183277130127

Token 427: ' regarde' (ID: 115760)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6178374290466309
    2. ' i' → logprob: -1.2428374290466309
    3. '=' → logprob: -2.492837429046631
    4. ' vais' → logprob: -4.242837429046631
    5. ' commence' → logprob: -4.492837429046631
    6. ' =' → logprob: -4.617837429046631
    7. ' continue' → logprob: -4.992837429046631
    8. '-' → logprob: -5.242837429046631
    9. ' ' → logprob: -5.242837429046631
    10. 'n' → logprob: -5.617837429046631

Token 428: ' les' (ID: 1341)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7120872735977173
    2. ' i' → logprob: -0.7120872735977173
    3. '	i' → logprob: -5.587087154388428
    4. '   ' → logprob: -5.712087154388428
    5. ' ' → logprob: -5.712087154388428
    6. ' if' → logprob: -6.212087154388428
    7. ' les' → logprob: -6.712087154388428
    8. ' for' → logprob: -6.837087154388428
    9. '  ' → logprob: -7.087087154388428
    10. 'if' → logprob: -7.337087154388428

Token 429: ' interv' (ID: 37413)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.04528513923287392
    2. ' i' → logprob: -3.795285224914551
    3. 'for' → logprob: -4.670285224914551
    4. ' for' → logprob: -5.045285224914551
    5. ' intervals' → logprob: -6.295285224914551
    6. 'while' → logprob: -6.545285224914551
    7. 'interval' → logprob: -7.045285224914551
    8. '   ' → logprob: -7.295285224914551
    9. ' while' → logprob: -7.920285224914551
    10. ' ' → logprob: -8.79528522491455

Token 430: 'alles' (ID: 28825)
  Prédit: 'als'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'als' → logprob: -0.27249372005462646
    2. 'al' → logprob: -2.272493839263916
    3. 'alles' → logprob: -2.522493839263916
    4. 'ales' → logprob: -3.522493839263916
    5. 'ers' → logprob: -4.397493839263916
    6. '   ' → logprob: -5.897493839263916
    7. 'er' → logprob: -6.397493839263916
    8. 'ents' → logprob: -6.522493839263916
    9. 'aux' → logprob: -6.772493839263916
    10. 'r' → logprob: -7.522493839263916

Token 431: ' avant' (ID: 13339)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.6465283632278442
    2. 'i' → logprob: -1.5215283632278442
    3. ' i' → logprob: -2.0215282440185547
    4. '   ' → logprob: -2.7715282440185547
    5. ',' → logprob: -3.8965282440185547
    6. 'def' → logprob: -5.021528244018555
    7. ' à' → logprob: -5.271528244018555
    8. 'max' → logprob: -5.646528244018555
    9. ':' → logprob: -5.771528244018555
    10. '[' → logprob: -6.021528244018555

Token 432: ' cet' (ID: 19505)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.16111987829208374
    2. ' i' → logprob: -1.9111199378967285
    3. ':' → logprob: -7.6611199378967285
    4. '	i' → logprob: -9.16111946105957
    5. ',' → logprob: -9.41111946105957
    6. 'max' → logprob: -9.91111946105957
    7. ',i' → logprob: -10.28611946105957
    8. '   ' → logprob: -10.28611946105957
    9. ' max' → logprob: -10.53611946105957
    10. ' ' → logprob: -10.78611946105957

Token 433: ' indice' (ID: 90848)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.001575448433868587
    2. ' i' → logprob: -6.876575469970703
    3. 'e' → logprob: -8.126575469970703
    4. 'index' → logprob: -8.751575469970703
    5. 'indice' → logprob: -9.876575469970703
    6. ' index' → logprob: -11.751575469970703
    7. 'í' → logprob: -12.251575469970703
    8. ':' → logprob: -12.626575469970703
    9. 'indices' → logprob: -12.876575469970703
    10. 'a' → logprob: -13.126575469970703

Token 434: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19232279062271118
    2. ' i' → logprob: -2.4423227310180664
    3. ' while' → logprob: -3.8173227310180664
    4. ' for' → logprob: -3.8173227310180664
    5. 'i' → logprob: -3.9423227310180664
    6. 'while' → logprob: -4.567322731018066
    7. ',' → logprob: -4.942322731018066
    8. 'for' → logprob: -6.442322731018066
    9. '    
' → logprob: -6.942322731018066
    10. ':' → logprob: -7.067322731018066

Token 435: 'car' (ID: 6830)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0356687493622303
    2. ' i' → logprob: -4.035668849945068
    3. ')' → logprob: -4.535668849945068
    4. 'max' → logprob: -6.410668849945068
    5. ',' → logprob: -6.535668849945068
    6. ' for' → logprob: -6.910668849945068
    7. ':' → logprob: -7.410668849945068
    8. ' max' → logprob: -7.660668849945068
    9. '   ' → logprob: -8.16066837310791
    10. 'for' → logprob: -8.16066837310791

Token 436: ' ils' (ID: 15387)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2407827228307724
    2. 'interval' → logprob: -2.3657827377319336
    3. ' i' → logprob: -2.9907827377319336
    4. ' intervals' → logprob: -3.7407827377319336
    5. ')' → logprob: -4.115782737731934
    6. ' ils' → logprob: -4.865782737731934
    7. 'les' → logprob: -5.740782737731934
    8. 'start' → logprob: -5.865782737731934
    9. 'ils' → logprob: -5.865782737731934
    10. '(i' → logprob: -6.615782737731934

Token 437: ' peuvent' (ID: 21321)
  Prédit: 'pe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pe' → logprob: -0.9329884052276611
    2. ')' → logprob: -1.5579884052276611
    3. ' peuvent' → logprob: -1.6829884052276611
    4. ' pourraient' → logprob: -2.682988405227661
    5. 'pour' → logprob: -3.557988405227661
    6. ' pour' → logprob: -4.057988166809082
    7. 'ont' → logprob: -4.182988166809082
    8. 'may' → logprob: -4.307988166809082
    9. ' may' → logprob: -4.432988166809082
    10. ' might' → logprob: -4.557988166809082

Token 438: ' chev' (ID: 127415)
  Prédit: 'over'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'over' → logprob: -0.4863525629043579
    2. 'dé' → logprob: -2.3613524436950684
    3. 'égal' → logprob: -2.3613524436950684
    4. ' overlap' → logprob: -3.1113524436950684
    5. ' commencer' → logprob: -3.4863524436950684
    6. 'a' → logprob: -3.4863524436950684
    7. ' avoir' → logprob: -4.236352443695068
    8. 'comm' → logprob: -4.486352443695068
    9. 'avoir' → logprob: -4.736352443695068
    10. ' aussi' → logprob: -4.736352443695068

Token 439: 'au' (ID: 753)
  Prédit: 'au'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'au' → logprob: -0.2224331945180893
    2. 'a' → logprob: -1.9724332094192505
    3. 'o' → logprob: -3.097433090209961
    4. 'over' → logprob: -5.472433090209961
    5. 'acher' → logprob: -5.597433090209961
    6. 'oir' → logprob: -7.097433090209961
    7. 'oler' → logprob: -7.222433090209961
    8. 'auer' → logprob: -7.222433090209961
    9. 'aur' → logprob: -7.347433090209961
    10. 'auch' → logprob: -7.347433090209961

Token 440: 'cher' (ID: 6665)
  Prédit: 'cher'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cher' → logprob: -0.003625366138294339
    2. 'vr' → logprob: -5.753625392913818
    3. 'ver' → logprob: -8.25362491607666
    4. 'ch' → logprob: -9.37862491607666
    5. 'v' → logprob: -10.12862491607666
    6. 'voir' → logprob: -10.50362491607666
    7. 'che' → logprob: -11.50362491607666
    8. 'er' → logprob: -12.50362491607666
    9. 'vor' → logprob: -12.87862491607666
    10. 'chr' → logprob: -13.00362491607666

Token 441: ')
' (ID: 446)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.7385669350624084
    2. 'i' → logprob: -1.3635668754577637
    3. ')' → logprob: -2.3635668754577637
    4. ',' → logprob: -2.8635668754577637
    5. '   ' → logprob: -3.2385668754577637
    6. '),' → logprob: -4.488566875457764
    7. '(i' → logprob: -4.613566875457764
    8. '[i' → logprob: -4.988566875457764
    9. ' la' → logprob: -5.363566875457764
    10. ' ' → logprob: -5.488566875457764

Token 442: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01791602000594139
    2. ' i' → logprob: -5.142916202545166
    3. 'i' → logprob: -5.392916202545166
    4. ' for' → logprob: -6.142916202545166
    5. '    
' → logprob: -6.642916202545166
    6. 'for' → logprob: -7.017916202545166
    7. '
' → logprob: -7.142916202545166
    8. '-' → logprob: -7.642916202545166
    9. ' while' → logprob: -7.767916202545166
    10. ',' → logprob: -8.142915725708008

Token 443: ' for' (ID: 395)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.50582355260849
    2. 'for' (adapté à ' for') → logprob: -1.2558236122131348
    3. ' for' → logprob: -3.0058236122131348
    4. '   ' → logprob: -3.3808236122131348
    5. 'while' → logprob: -3.8808236122131348
    6. ' i' → logprob: -5.130823612213135
    7. ' while' → logprob: -6.255823612213135
    8. '
' → logprob: -10.005823135375977
    9. ',' → logprob: -10.005823135375977
    10. '    
' → logprob: -10.380823135375977

Token 444: ' interval' (ID: 17116)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.6444272398948669
    2. ' j' → logprob: -0.7694272398948669
    3. ' idx' → logprob: -5.019427299499512
    4. 'idx' → logprob: -5.519427299499512
    5. 'i' → logprob: -8.269427299499512
    6. 'start' → logprob: -8.644427299499512
    7. ' start' → logprob: -9.144427299499512
    8. 'index' → logprob: -9.269427299499512
    9. 'x' → logprob: -9.394427299499512
    10. '_j' → logprob: -9.519427299499512

Token 445: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.11731226742267609
    2. 'in' → logprob: -2.36731219291687
    3. '[' → logprob: -5.367312431335449
    4. '_start' → logprob: -5.742312431335449
    5. '_idx' → logprob: -6.367312431335449
    6. ' ' → logprob: -6.367312431335449
    7. '_index' → logprob: -6.492312431335449
    8. 's' → logprob: -7.367312431335449
    9. ',' → logprob: -7.492312431335449
    10. ')' → logprob: -7.867312431335449

Token 446: ' intervals' (ID: 49900)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.020545274019241333
    2. ' intervals' → logprob: -3.895545244216919
    3. ' interval' → logprob: -13.77054500579834
    4. '   ' → logprob: -13.89554500579834
    5. '(interval' → logprob: -14.27054500579834
    6. ' ' → logprob: -15.14554500579834
    7. '	' → logprob: -15.77054500579834
    8. '  ' → logprob: -16.520545959472656
    9. 'inter' → logprob: -17.020545959472656
    10. 're' → logprob: -17.145545959472656

Token 447: '[max' (ID: 84690)
  Prédit: '[:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.00786296185106039
    2. ':' → logprob: -5.0078630447387695
    3. '[i' → logprob: -7.2578630447387695
    4. ':
' → logprob: -8.50786304473877
    5. '[' → logprob: -9.25786304473877
    6. '[::-' → logprob: -9.50786304473877
    7. '[max' → logprob: -10.25786304473877
    8. '   ' → logprob: -11.25786304473877
    9. '[:-' → logprob: -11.50786304473877
    10. ' [:' → logprob: -12.38286304473877

Token 448: '(i' (ID: 3649)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00012082771718269214
    2. '(i' → logprob: -9.375121116638184
    3. '0' → logprob: -10.250121116638184
    4. ' (' → logprob: -14.500121116638184
    5. '(
' → logprob: -17.750120162963867
    6. 'i' → logprob: -18.000120162963867
    7. ' ' → logprob: -19.625120162963867
    8. ' i' → logprob: -20.375120162963867
    9. '((' → logprob: -21.750120162963867
    10. '(index' → logprob: -21.875120162963867

Token 449: '-' (ID: 12)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8400581479072571
    2. '-' → logprob: -1.2150580883026123
    3. '0' → logprob: -1.3400580883026123
    4. ' -' → logprob: -4.840058326721191
    5. ' ' → logprob: -6.965058326721191
    6. '[' → logprob: -8.590058326721191
    7. '(len' → logprob: -8.590058326721191
    8. ' (' → logprob: -8.715058326721191
    9. '(-' → logprob: -8.840058326721191
    10. ',' → logprob: -9.590058326721191

Token 450: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.6902069449424744
    2. '1' → logprob: -1.0652070045471191
    3. '5' → logprob: -2.065207004547119
    4. '3' → logprob: -4.565207004547119
    5. '2' → logprob: -5.065207004547119
    6. '50' → logprob: -5.565207004547119
    7. '100' → logprob: -5.690207004547119
    8. '20' → logprob: -6.440207004547119
    9. '0' → logprob: -7.065207004547119
    10. 'len' → logprob: -7.940207004547119

Token 451: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0018598537426441908
    2. '0' → logprob: -6.876859664916992
    3. ' ,' → logprob: -7.126859664916992
    4. ',i' → logprob: -11.501859664916992
    5. ' ' → logprob: -12.501859664916992
    6. ',len' → logprob: -13.626859664916992
    7. ',None' → logprob: -13.876859664916992
    8. ',-' → logprob: -14.001859664916992
    9. '):' → logprob: -14.126859664916992
    10. ':,' → logprob: -14.501859664916992

Token 452: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00010914575977949426
    2. ' ' → logprob: -9.12510871887207
    3. '   ' → logprob: -16.62510871887207
    4. '  ' → logprob: -17.62510871887207
    5. '00' → logprob: -19.12510871887207
    6. '۰' → logprob: -19.25010871887207
    7. ')' → logprob: -19.56260871887207
    8. '
' → logprob: -19.56260871887207
    9. '    ' → logprob: -20.00010871887207
    10. '000' → logprob: -20.00010871887207

Token 453: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03001358173787594
    2. ':' → logprob: -3.9050135612487793
    3. ')' → logprob: -5.280013561248779
    4. ':i' → logprob: -6.030013561248779
    5. ' ):' → logprob: -6.655013561248779
    6. ']:' → logprob: -8.155014038085938
    7. ' :' → logprob: -9.280014038085938
    8. ':)' → logprob: -9.655014038085938
    9. '):(' → logprob: -9.780014038085938
    10. ':]' → logprob: -10.405014038085938

Token 454: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0009075298439711332
    2. 'min' → logprob: -8.250907897949219
    3. ']:
' → logprob: -8.750907897949219
    4. ' i' → logprob: -8.875907897949219
    5. ']:' → logprob: -9.250907897949219
    6. '   ' → logprob: -9.500907897949219
    7. ']):
' → logprob: -10.375907897949219
    8. '(i' → logprob: -10.500907897949219
    9. 'bis' → logprob: -10.750907897949219
    10. ']' → logprob: -10.750907897949219

Token 455: '+' (ID: 10)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.011807155795395374
    2. ']:
' → logprob: -4.511806964874268
    3. ']' → logprob: -7.761806964874268
    4. ']:
' → logprob: -8.761807441711426
    5. '+' → logprob: -9.511807441711426
    6. ' ]' → logprob: -9.761807441711426
    7. ']):' → logprob: -11.011807441711426
    8. ']+' → logprob: -11.261807441711426
    9. ':' → logprob: -12.261807441711426
    10. '   ' → logprob: -12.886807441711426

Token 456: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.00017421995289623737
    2. '1' → logprob: -9.000174522399902
    3. '5' → logprob: -10.125174522399902
    4. '0' → logprob: -12.000174522399902
    5. '20' → logprob: -13.375174522399902
    6. ' ' → logprob: -13.625174522399902
    7. '11' → logprob: -14.500174522399902
    8. '
' → logprob: -14.750174522399902
    9. '   ' → logprob: -16.062673568725586
    10. '```' → logprob: -16.125173568725586

Token 457: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.013834838755428791
    2. ']:
' → logprob: -4.3888349533081055
    3. ']' → logprob: -6.8888349533081055
    4. ']:
' → logprob: -8.513834953308105
    5. ' ]' → logprob: -9.263834953308105
    6. ']:

' → logprob: -12.763834953308105
    7. ']):' → logprob: -13.263834953308105
    8. ':' → logprob: -13.263834953308105
    9. '   ' → logprob: -13.888834953308105
    10. ']:


' → logprob: -14.263834953308105

Token 458: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011328263208270073
    2. ':' → logprob: -4.886328220367432
    3. '        
' → logprob: -7.011328220367432
    4. '    ' → logprob: -7.261328220367432
    5. '   ' → logprob: -7.761328220367432
    6. '	   ' → logprob: -8.26132869720459
    7. ':
' → logprob: -8.38632869720459
    8. ',' → logprob: -8.63632869720459
    9. ' if' → logprob: -8.63632869720459
    10. '	' → logprob: -8.76132869720459

Token 459: ' if' (ID: 538)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.8414881229400635
    2. 'if' (adapté à ' if') → logprob: -1.0914881229400635
    3. ' if' → logprob: -2.4664881229400635
    4. 's' → logprob: -2.4664881229400635
    5. '       ' → logprob: -3.0914881229400635
    6. ' start' → logprob: -4.591487884521484
    7. ' s' → logprob: -5.341487884521484
    8. '   ' → logprob: -6.216487884521484
    9. 'qs' → logprob: -7.466487884521484
    10. 'over' → logprob: -8.716487884521484

Token 460: ' interval' (ID: 17116)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.47436487674713135
    2. ' interval' → logprob: -0.9743648767471313
    3. '   ' → logprob: -9.099365234375
    4. '(interval' → logprob: -9.349365234375
    5. ' not' → logprob: -10.224365234375
    6. 'not' → logprob: -11.099365234375
    7. ' ' → logprob: -11.099365234375
    8. 'inter' → logprob: -11.849365234375
    9. '  ' → logprob: -12.224365234375
    10. 'len' → logprob: -12.599365234375

Token 461: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.407366916188039e-05
    2. 'and' → logprob: -10.500054359436035
    3. ' and' → logprob: -11.500054359436035
    4. '][' → logprob: -12.250054359436035
    5. ' [' → logprob: -13.250054359436035
    6. '==' → logprob: -13.500054359436035
    7. 'end' → logprob: -13.625054359436035
    8. ')' → logprob: -14.250054359436035
    9. ':' → logprob: -14.250054359436035
    10. '(' → logprob: -14.375054359436035

Token 462: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07889506965875626
    2. '0' → logprob: -2.578895092010498
    3. 'end' → logprob: -13.32889461517334
    4. ' ' → logprob: -13.45389461517334
    5. '
' → logprob: -14.20389461517334
    6. '[' → logprob: -14.82889461517334
    7. 'start' → logprob: -15.39139461517334
    8. '   ' → logprob: -15.95389461517334
    9. '１' → logprob: -16.516395568847656
    10. 's' → logprob: -16.578895568847656

Token 463: ']' (ID: 60)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.2523687481880188
    2. '>' → logprob: -1.502368688583374
    3. ' ' → logprob: -8.627368927001953
    4. ' <=' → logprob: -9.127368927001953
    5. ' >=' → logprob: -9.377368927001953
    6. '>=' → logprob: -10.502368927001953
    7. '<=' → logprob: -11.127368927001953
    8. ']' → logprob: -12.002368927001953
    9. ')' → logprob: -12.377368927001953
    10. '   ' → logprob: -12.502368927001953

Token 464: ' <' (ID: 464)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.25959932804107666
    2. '<=' → logprob: -2.134599208831787
    3. ' >' → logprob: -2.384599208831787
    4. ' <=' → logprob: -4.009599208831787
    5. ' ' → logprob: -10.509599685668945
    6. '>=' → logprob: -11.009599685668945
    7. 'and' → logprob: -11.259599685668945
    8. '()>' → logprob: -11.634599685668945
    9. '   ' → logprob: -13.384599685668945
    10. '<' → logprob: -13.384599685668945

Token 465: ' query' (ID: 5703)
  Prédit: 'query'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'query' → logprob: -0.014165272004902363
    2. ' query' → logprob: -4.26416540145874
    3. '=query' → logprob: -13.639164924621582
    4. '	query' → logprob: -14.889164924621582
    5. '$query' → logprob: -16.8891658782959
    6. '   ' → logprob: -16.8891658782959
    7. ' ' → logprob: -17.7641658782959
    8. '(query' → logprob: -17.8891658782959
    9. 'q' → logprob: -18.2641658782959
    10. '=' → logprob: -18.5141658782959

Token 466: '_start' (ID: 10949)
  Prédit: '_start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -6.869017852295656e-06
    2. 'start' → logprob: -12.125006675720215
    3. '_end' → logprob: -14.375006675720215
    4. 'Start' → logprob: -15.000006675720215
    5. '_' → logprob: -15.125006675720215
    6. '_START' → logprob: -15.375006675720215
    7. '[start' → logprob: -17.75000762939453
    8. '_started' → logprob: -18.12500762939453
    9. '_Start' → logprob: -18.75000762939453
    10. '_star' → logprob: -18.87500762939453

Token 467: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1534092128276825
    2. ' or' → logprob: -2.653409242630005
    3. ':
' → logprob: -3.028409242630005
    4. '       ' → logprob: -3.903409242630005
    5. '           ' → logprob: -6.653409004211426
    6. ' :' → logprob: -7.028409004211426
    7. '   ' → logprob: -7.903409004211426
    8. ' :
' → logprob: -8.528409004211426
    9. ' and' → logprob: -9.028409004211426
    10. '        ' → logprob: -9.278409004211426

Token 468: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07126787304878235
    2. ':' → logprob: -3.44626784324646
    3. ':
' → logprob: -4.071268081665039
    4. '       ' → logprob: -4.446268081665039
    5. ' continue' → logprob: -4.946268081665039
    6. 'continue' → logprob: -7.321268081665039
    7. ' or' → logprob: -8.446268081665039
    8. '          ' → logprob: -10.321268081665039
    9. '		' → logprob: -10.446268081665039
    10. '   ' → logprob: -10.571268081665039

Token 469: ' continue' (ID: 4901)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.19294913113117218
    2. ' continue' → logprob: -2.317949056625366
    3. 'continue' (adapté à ' continue') → logprob: -2.567949056625366
    4. '       ' → logprob: -8.817949295043945
    5. '	continue' → logprob: -10.067949295043945
    6. '		' → logprob: -10.192949295043945
    7. '               ' → logprob: -10.442949295043945
    8. 'contin' → logprob: -11.067949295043945
    9. '          ' → logprob: -12.317949295043945
    10. '   ' → logprob: -12.317949295043945

Token 470: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0049315509386360645
    2. '
' → logprob: -5.504931449890137
    3. '        
' → logprob: -7.754931449890137
    4. '<|end|>' → logprob: -8.129931449890137
    5. '    
' → logprob: -10.254931449890137
    6. '  
' → logprob: -10.754931449890137
    7. ' 
' → logprob: -11.004931449890137
    8. '   ' → logprob: -11.504931449890137
    9. '      ' → logprob: -11.629931449890137
    10. '       
' → logprob: -11.629931449890137

Token 471: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005135946557857096
    2. '        
' → logprob: -8.500514030456543
    3. '<|end|>' → logprob: -8.750514030456543
    4. '   ' → logprob: -10.125514030456543
    5. '    
' → logprob: -10.500514030456543
    6. '
' → logprob: -10.875514030456543
    7. '      ' → logprob: -11.625514030456543
    8. '  
' → logprob: -11.875514030456543
    9. '       
' → logprob: -11.875514030456543
    10. ' 
' → logprob: -11.875514030456543

Token 472: ' total' (ID: 3609)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.024076398462057114
    2. ' if' → logprob: -4.274076461791992
    3. 'if' → logprob: -4.649076461791992
    4. '   ' → logprob: -8.274076461791992
    5. '        
' → logprob: -11.024076461791992
    6. '           ' → logprob: -12.274076461791992
    7. '	' → logprob: -12.399076461791992
    8. 'elif' → logprob: -12.774076461791992
    9. '      ' → logprob: -13.274076461791992
    10. '	if' → logprob: -13.399076461791992

Token 473: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.12696747481822968
    2. '+=' → logprob: -2.126967430114746
    3. '+' → logprob: -10.876967430114746
    4. ']+=' → logprob: -11.751967430114746
    5. '=' → logprob: -12.001967430114746
    6. '    ' → logprob: -12.876967430114746
    7. '   ' → logprob: -13.251967430114746
    8. '+=(' → logprob: -14.876967430114746
    9. ' ' → logprob: -15.001967430114746
    10. '+='' → logprob: -15.251967430114746

Token 474: ' interval' (ID: 17116)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.004703653044998646
    2. ' interval' → logprob: -5.379703521728516
    3. 'max' → logprob: -9.629703521728516
    4. 'min' → logprob: -11.129703521728516
    5. ' max' → logprob: -13.754703521728516
    6. '   ' → logprob: -14.254703521728516
    7. ' min' → logprob: -14.504703521728516
    8. '(interval' → logprob: -14.754703521728516
    9. ' ' → logprob: -16.004703521728516
    10. 'int' → logprob: -16.379703521728516

Token 475: '_overlap' (ID: 179163)
  Prédit: '_overlap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_overlap' → logprob: -2.546478935983032e-05
    2. '[' → logprob: -10.875025749206543
    3. 'over' → logprob: -13.000025749206543
    4. '
' → logprob: -13.375025749206543
    5. '_' → logprob: -13.875025749206543
    6. ')' → logprob: -15.125025749206543
    7. '_
' → logprob: -15.500025749206543
    8. '_interval' → logprob: -15.750025749206543
    9. 'Overlap' → logprob: -15.750025749206543
    10. ' overlap' → logprob: -16.125024795532227

Token 476: '(interval' (ID: 100435)
  Prédit: '(interval'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(interval' → logprob: -0.00017946491425391287
    2. '(' → logprob: -8.750179290771484
    3. ' (' → logprob: -11.000179290771484
    4. 'interval' → logprob: -13.250179290771484
    5. '(
' → logprob: -13.625179290771484
    6. '((' → logprob: -14.250179290771484
    7. '(inter' → logprob: -14.875179290771484
    8. ' interval' → logprob: -15.375179290771484
    9. '(query' → logprob: -17.625179290771484
    10. '(in' → logprob: -17.625179290771484

Token 477: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004195906512904912
    2. ' ,' → logprob: -8.250419616699219
    3. ',(' → logprob: -8.875419616699219
    4. '(' → logprob: -11.750419616699219
    5. ' (' → logprob: -12.125419616699219
    6. '(interval' → logprob: -12.875419616699219
    7. '   ' → logprob: -13.750419616699219
    8. '((' → logprob: -14.750419616699219
    9. '       ' → logprob: -15.125419616699219
    10. ',
' → logprob: -15.250419616699219

Token 478: ' (' (ID: 350)
  Prédit: '(query'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(query' → logprob: -0.03451523557305336
    2. ' (' → logprob: -3.409515142440796
    3. '(' → logprob: -7.909515380859375
    4. '   ' → logprob: -8.409515380859375
    5. '(interval' → logprob: -8.409515380859375
    6. ' ' → logprob: -10.909515380859375
    7. '(question' → logprob: -11.159515380859375
    8. '  ' → logprob: -11.534515380859375
    9. '(Query' → logprob: -12.409515380859375
    10. '(request' → logprob: -12.909515380859375

Token 479: 'query' (ID: 2975)
  Prédit: 'query'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'query' → logprob: -0.00020401719666551799
    2. ' query' → logprob: -8.500204086303711
    3. '(query' → logprob: -15.250204086303711
    4. '$query' → logprob: -16.25020408630371
    5. '	query' → logprob: -16.37520408630371
    6. '   ' → logprob: -16.50020408630371
    7. '=query' → logprob: -17.00020408630371
    8. ' ' → logprob: -17.62520408630371
    9. '  ' → logprob: -18.25020408630371
    10. '_query' → logprob: -19.00020408630371

Token 480: '_start' (ID: 10949)
  Prédit: '_start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -1.0445127372804563e-05
    2. 'start' → logprob: -11.75001049041748
    3. '[start' → logprob: -14.25001049041748
    4. '_query' → logprob: -14.25001049041748
    5. '_START' → logprob: -14.50001049041748
    6. '_' → logprob: -15.12501049041748
    7. '[' → logprob: -16.000009536743164
    8. '_end' → logprob: -16.125009536743164
    9. 'Start' → logprob: -16.625009536743164
    10. ' _' → logprob: -17.375009536743164

Token 481: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.4849443838757e-06
    2. ' ,' → logprob: -13.250004768371582
    3. ',
' → logprob: -13.250004768371582
    4. ',

' → logprob: -14.625004768371582
    5. '‌,' → logprob: -15.625004768371582
    6. '<|end|>' → logprob: -16.250003814697266
    7. ',)' → logprob: -16.625003814697266
    8. ')' → logprob: -16.875003814697266
    9. '،' → logprob: -17.750003814697266
    10. ',user' → logprob: -17.750003814697266

Token 482: ' query' (ID: 5703)
  Prédit: ' query'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' query' → logprob: -0.38687190413475037
    2. 'query' → logprob: -1.1368719339370728
    3. '$query' → logprob: -15.261872291564941
    4. '	query' → logprob: -15.386872291564941
    5. '=query' → logprob: -15.886872291564941
    6. '_query' → logprob: -16.261871337890625
    7. ' ' → logprob: -16.511871337890625
    8. 'Query' → logprob: -16.636871337890625
    9. '(query' → logprob: -16.636871337890625
    10. ' ' → logprob: -16.886871337890625

Token 483: '_end' (ID: 13707)
  Prédit: '_end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_end' → logprob: -2.47495681833243e-05
    2. '_start' → logprob: -11.250024795532227
    3. 'end' → logprob: -11.500024795532227
    4. ',' → logprob: -14.250024795532227
    5. '_END' → logprob: -15.125024795532227
    6. 'End' → logprob: -15.250024795532227
    7. ',end' → logprob: -15.625024795532227
    8. ',_' → logprob: -16.625024795532227
    9. '))' → logprob: -17.500024795532227
    10. '_,' → logprob: -17.500024795532227

Token 484: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0004071971052326262
    2. '))
' → logprob: -7.8754072189331055
    3. ')' → logprob: -10.625407218933105
    4. ')))' → logprob: -14.000407218933105
    5. ' ))' → logprob: -14.000407218933105
    6. '   ' → logprob: -14.125407218933105
    7. '))

' → logprob: -15.625407218933105
    8. ' ' → logprob: -16.87540626525879
    9. '))
' → logprob: -17.00040626525879
    10. '       ' → logprob: -17.37540626525879

Token 485: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026477128267288208
    2. ' return' → logprob: -4.151477336883545
    3. 'return' → logprob: -5.151477336883545
    4. '    
' → logprob: -6.151477336883545
    5. ' 
' → logprob: -6.401477336883545
    6. '
' → logprob: -7.401477336883545
    7. '	return' → logprob: -8.901476860046387
    8. '  
' → logprob: -11.401476860046387
    9. '   
' → logprob: -11.401476860046387
    10. '	
' → logprob: -11.901476860046387

Token 486: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27873843908309937
    2. ' return' → logprob: -1.7787384986877441
    3. '
' → logprob: -3.403738498687744
    4. 'return' (adapté à ' return') → logprob: -3.528738498687744
    5. '    
' → logprob: -5.153738498687744
    6. '	return' → logprob: -5.528738498687744
    7. ' 
' → logprob: -7.153738498687744
    8. ' ' → logprob: -7.278738498687744
    9. '   
' → logprob: -8.778738021850586
    10. '  
' → logprob: -8.903738021850586

Token 487: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.061967913061380386
    2. 'total' → logprob: -2.8119678497314453
    3. ' tot' → logprob: -16.686967849731445
    4. ' ' → logprob: -17.061967849731445
    5. '	total' → logprob: -17.061967849731445
    6. '(total' → logprob: -17.436967849731445
    7. ' tota' → logprob: -18.436967849731445
    8. ' ' → logprob: -18.811967849731445
    9. 't' → logprob: -19.311967849731445
    10. '_total' → logprob: -19.436967849731445

Token 488: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 489: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.017596544697880745
    2. '#' → logprob: -4.26759672164917
    3. '<|end|>' → logprob: -6.26759672164917
    4. 'class' → logprob: -7.39259672164917
    5. '
' → logprob: -8.142596244812012
    6. '```' → logprob: -8.267596244812012
    7. '<|end|>' → logprob: -9.142596244812012
    8. '  
' → logprob: -9.767596244812012
    9. '\n' → logprob: -9.892596244812012
    10. 'import' → logprob: -10.642596244812012

Token 490: ' main' (ID: 2758)
  Prédit: ' process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' process' → logprob: -0.6124383807182312
    2. ' main' → logprob: -2.237438440322876
    3. ' parse' → logprob: -2.237438440322876
    4. 'process' → logprob: -2.862438440322876
    5. ' update' → logprob: -3.112438440322876
    6. ' analyze' → logprob: -3.612438440322876
    7. 'parse' → logprob: -4.487438201904297
    8. ' connection' → logprob: -4.487438201904297
    9. ' analyse' → logprob: -4.487438201904297
    10. ' track' → logprob: -4.612438201904297

Token 491: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.005101410672068596
    2. '(' → logprob: -5.380101203918457
    3. '()' → logprob: -8.005101203918457
    4. '():
' → logprob: -9.380101203918457
    5. ' ():' → logprob: -10.130101203918457
    6. '_' → logprob: -11.505101203918457
    7. '()>' → logprob: -13.005101203918457
    8. ':' → logprob: -13.255101203918457
    9. ' (' → logprob: -13.255101203918457
    10. '(argv' → logprob: -13.505101203918457

Token 492: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.027595773339271545
    2. 'n' → logprob: -4.9025959968566895
    3. ':' → logprob: -5.1525959968566895
    4. '    ' → logprob: -6.0275959968566895
    5. ' 
' → logprob: -6.0275959968566895
    6. '#' → logprob: -7.0275959968566895
    7. ' readline' → logprob: -7.0275959968566895
    8. ' ' → logprob: -7.2775959968566895
    9. '```' → logprob: -7.2775959968566895
    10. ' input' → logprob: -7.2775959968566895

Token 493: ' input' (ID: 3422)
  Prédit: ' import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.7017476558685303
    2. '   ' → logprob: -1.4517476558685303
    3. ' n' → logprob: -1.7017476558685303
    4. 'n' → logprob: -3.4517476558685303
    5. ' input' → logprob: -3.8267476558685303
    6. 'import' → logprob: -4.326747894287109
    7. ' line' → logprob: -4.576747894287109
    8. ' lines' → logprob: -5.076747894287109
    9. ' pass' → logprob: -7.326747894287109
    10. ' connection' → logprob: -8.07674789428711

Token 494: ' =' (ID: 314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03248731419444084
    2. '_line' → logprob: -3.657487392425537
    3. '_' → logprob: -6.032487392425537
    4. '_lines' → logprob: -6.157487392425537
    5. '_data' → logprob: -6.657487392425537
    6. '_l' → logprob: -9.407486915588379
    7. ' =' → logprob: -9.532486915588379
    8. '(' → logprob: -9.657486915588379
    9. '()
' → logprob: -10.032486915588379
    10. '=' → logprob: -10.532486915588379

Token 495: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.048591457307338715
    2. 'sys' → logprob: -3.048591375350952
    3. '	sys' → logprob: -13.048591613769531
    4. '=sys' → logprob: -13.798591613769531
    5. 'input' → logprob: -14.923591613769531
    6. '(sys' → logprob: -14.923591613769531
    7. ' input' → logprob: -15.673591613769531
    8. ' ' → logprob: -18.04859161376953
    9. '```' → logprob: -19.17359161376953
    10. ' iter' → logprob: -19.29859161376953

Token 496: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0032050427980720997
    2. '.' → logprob: -5.753204822540283
    3. '.stdout' → logprob: -11.503205299377441
    4. '.argv' → logprob: -11.878205299377441
    5. '.readline' → logprob: -12.003205299377441
    6. '.std' → logprob: -13.128205299377441
    7. ' .' → logprob: -13.503205299377441
    8. '.st' → logprob: -15.003205299377441
    9. 'stdin' → logprob: -16.003204345703125
    10. '.input' → logprob: -16.128204345703125

Token 497: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.00029160623671486974
    2. 'read' → logprob: -8.50029182434082
    3. '.read' → logprob: -9.62529182434082
    4. '_read' → logprob: -11.87529182434082
    5. '.readlines' → logprob: -11.87529182434082
    6. ' readline' → logprob: -12.12529182434082
    7. '.' → logprob: -13.12529182434082
    8. 'buffer' → logprob: -15.50029182434082
    9. '
' → logprob: -15.75029182434082
    10. '   ' → logprob: -16.75029182434082

Token 498: '
' (ID: 198)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.15728679299354553
    2. '().' → logprob: -2.2822868824005127
    3. '()
' → logprob: -3.1572868824005127
    4. '   ' → logprob: -7.032286643981934
    5. '()\' → logprob: -10.907286643981934
    6. '()

' → logprob: -11.532286643981934
    7. '()
' → logprob: -11.657286643981934
    8. '
' → logprob: -11.782286643981934
    9. ' ()' → logprob: -12.032286643981934
    10. '())' → logprob: -12.782286643981934

Token 499: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007822979241609573
    2. '    
' → logprob: -4.8828229904174805
    3. 'n' → logprob: -10.00782299041748
    4. '
' → logprob: -10.13282299041748
    5. '()' → logprob: -10.13282299041748
    6. '    ' → logprob: -11.13282299041748
    7. '   
' → logprob: -11.25782299041748
    8. '  
' → logprob: -11.38282299041748
    9. ' while' → logprob: -11.50782299041748
    10. ' 
' → logprob: -11.75782299041748

Token 500: ' while' (ID: 2049)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.46080461144447327
    2. ' n' → logprob: -1.0858045816421509
    3. '   ' → logprob: -3.5858047008514404
    4. 'nb' → logprob: -6.460804462432861
    5. ' nb' → logprob: -7.210804462432861
    6. 'num' → logprob: -7.710804462432861
    7. ' while' → logprob: -8.58580493927002
    8. 'N' → logprob: -8.71080493927002
    9. '    
' → logprob: -8.96080493927002
    10. 'nbr' → logprob: -9.46080493927002

Token 501: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.012572398409247398
    2. 'True' → logprob: -4.387572288513184
    3. '(True' → logprob: -9.762572288513184
    4. ' ' → logprob: -13.012572288513184
    5. ' line' → logprob: -13.262572288513184
    6. '1' → logprob: -14.262572288513184
    7. '=True' → logprob: -16.2625732421875
    8. ' true' → logprob: -16.5125732421875
    9. ' (' → logprob: -16.6375732421875
    10. 'true' → logprob: -16.7625732421875

Token 502: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.024529116228222847
    2. '():' → logprob: -4.024528980255127
    3. ':
' → logprob: -5.274528980255127
    4. '   ' → logprob: -8.024529457092285
    5. '       ' → logprob: -8.024529457092285
    6. '():
' → logprob: -8.149529457092285
    7. ' :' → logprob: -9.024529457092285
    8. ',' → logprob: -9.149529457092285
    9. '):' → logprob: -10.399529457092285
    10. '(' → logprob: -11.649529457092285

Token 503: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18664054572582245
    2. '   ' → logprob: -1.9366405010223389
    3. ' line' → logprob: -3.686640501022339
    4. 'line' → logprob: -7.311640739440918
    5. '    ' → logprob: -9.186640739440918
    6. '	line' → logprob: -9.686640739440918
    7. '           ' → logprob: -10.061640739440918
    8. ' ligne' → logprob: -10.561640739440918
    9. '   ' → logprob: -11.061640739440918
    10. '      ' → logprob: -11.061640739440918

Token 504: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' (adapté à ' line') → logprob: -0.2563368082046509
    2. ' line' → logprob: -1.5063368082046509
    3. '   ' → logprob: -5.756336688995361
    4. 'ligne' → logprob: -7.381336688995361
    5. ' ligne' → logprob: -8.25633716583252
    6. 'n' → logprob: -8.63133716583252
    7. 'l' → logprob: -8.88133716583252
    8. 'L' → logprob: -11.63133716583252
    9. ' n' → logprob: -11.63133716583252
    10. '	line' → logprob: -12.13133716583252

Token 505: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931490898132324
    2. ' =' → logprob: -0.6931490898132324
    3. '=line' → logprob: -13.19314956665039
    4. '=input' → logprob: -17.06814956665039
    5. '＝' → logprob: -18.56814956665039
    6. ' ' → logprob: -18.56814956665039
    7. 's' → logprob: -18.69314956665039
    8. 'line' → logprob: -19.06814956665039
    9. '_' → logprob: -19.31814956665039
    10. ' =
' → logprob: -19.69314956665039

Token 506: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.3200625777244568
    2. ' input' → logprob: -1.3200626373291016
    3. 'sys' → logprob: -5.570062637329102
    4. ' sys' → logprob: -5.820062637329102
    5. '=input' → logprob: -17.1950626373291
    6. ' ' → logprob: -17.4450626373291
    7. '=sys' → logprob: -17.6950626373291
    8. '   ' → logprob: -18.3200626373291
    9. '(input' → logprob: -18.5700626373291
    10. 'import' → logprob: -18.8200626373291

Token 507: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.051008403301239014
    2. '().' → logprob: -3.426008462905884
    3. '()
' → logprob: -4.426008224487305
    4. '.strip' → logprob: -5.301008224487305
    5. '.rstrip' → logprob: -8.676008224487305
    6. 'strip' → logprob: -10.176008224487305
    7. '=' → logprob: -11.176008224487305
    8. '()
' → logprob: -11.426008224487305
    9. 'rstrip' → logprob: -11.551008224487305
    10. ' =' → logprob: -11.926008224487305

Token 508: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00761017482727766
    2. '.strip' → logprob: -5.382610321044922
    3. '<|end|>' → logprob: -6.382610321044922
    4. '.rstrip' → logprob: -7.757610321044922
    5. '   ' → logprob: -8.007610321044922
    6. ' if' → logprob: -8.132610321044922
    7. '<|end|>' → logprob: -10.132610321044922
    8. ' =' → logprob: -10.382610321044922
    9. '        
' → logprob: -10.632610321044922
    10. '
' → logprob: -10.882610321044922

Token 509: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.12862847745418549
    2. '       ' → logprob: -2.2536284923553467
    3. 'if' (adapté à ' if') → logprob: -4.378628253936768
    4. '	if' → logprob: -6.503628253936768
    5. '   ' → logprob: -7.503628253936768
    6. ' ' → logprob: -7.878628253936768
    7. '.strip' → logprob: -8.503628730773926
    8. '	' → logprob: -8.753628730773926
    9. '    ' → logprob: -9.378628730773926
    10. '	   ' → logprob: -9.753628730773926

Token 510: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.0031241215765476227
    2. ' line' → logprob: -6.253124237060547
    3. 'not' → logprob: -6.753124237060547
    4. 'line' → logprob: -10.503124237060547
    5. ' ' → logprob: -17.128124237060547
    6. '#line' → logprob: -17.128124237060547
    7. '=line' → logprob: -17.378124237060547
    8. '	not' → logprob: -18.378124237060547
    9. '	line' → logprob: -18.753124237060547
    10. '[line' → logprob: -19.128124237060547

Token 511: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.07889000326395035
    2. ' line' → logprob: -2.578890085220337
    3. '(line' → logprob: -16.703889846801758
    4. '=line' → logprob: -16.953889846801758
    5. '	line' → logprob: -17.203889846801758
    6. '#line' → logprob: -17.453889846801758
    7. '[line' → logprob: -17.578889846801758
    8. ' ligne' → logprob: -17.828889846801758
    9. 'ligne' → logprob: -19.203889846801758
    10. '
' → logprob: -20.328889846801758

Token 512: ':
' (ID: 734)
  Prédit: '.strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.023531373590230942
    2. ':' → logprob: -4.523531436920166
    3. '.' → logprob: -4.773531436920166
    4. ':
' → logprob: -5.648531436920166
    5. '.rstrip' → logprob: -8.023530960083008
    6. ' or' → logprob: -10.398530960083008
    7. 'strip' → logprob: -10.773530960083008
    8. '.trim' → logprob: -11.273530960083008
    9. '.readline' → logprob: -11.398530960083008
    10. '.chomp' → logprob: -11.773530960083008

Token 513: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04380618780851364
    2. '       ' → logprob: -3.1688060760498047
    3. '   ' → logprob: -7.543806076049805
    4. ' break' → logprob: -10.043806076049805
    5. '	   ' → logprob: -10.168806076049805
    6. '		' → logprob: -10.418806076049805
    7. ' or' → logprob: -10.543806076049805
    8. ':' → logprob: -10.793806076049805
    9. ' ' → logprob: -11.043806076049805
    10. ',' → logprob: -11.043806076049805

Token 514: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9620378017425537
    2. 'break' (adapté à ' break') → logprob: -0.9620378017425537
    3. ' break' → logprob: -1.4620378017425537
    4. '       ' → logprob: -5.837038040161133
    5. '	break' → logprob: -7.587038040161133
    6. '   ' → logprob: -7.962038040161133
    7. '               ' → logprob: -8.837038040161133
    8. '
' → logprob: -10.462038040161133
    9. 'return' → logprob: -10.837038040161133
    10. '_break' → logprob: -11.587038040161133

Token 515: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012574403546750546
    2. '        
' → logprob: -4.512574195861816
    3. '
' → logprob: -7.637574195861816
    4. ',' → logprob: -8.012574195861816
    5. '<|end|>' → logprob: -8.262574195861816
    6. '    
' → logprob: -9.137574195861816
    7. '   ' → logprob: -9.762574195861816
    8. '		
' → logprob: -9.762574195861816
    9. '	' → logprob: -9.762574195861816
    10. '  
' → logprob: -9.887574195861816

Token 516: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008482214179821312
    2. '        
' → logprob: -7.125848293304443
    3. '   ' → logprob: -11.625847816467285
    4. '
' → logprob: -11.625847816467285
    5. '<|end|>' → logprob: -12.250847816467285
    6. '           ' → logprob: -12.875847816467285
    7. ',' → logprob: -13.000847816467285
    8. '    
' → logprob: -13.250847816467285
    9. '	' → logprob: -13.375847816467285
    10. '        ' → logprob: -13.625847816467285

Token 517: ' N' (ID: 478)
  Prédit: ' parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' parts' → logprob: -0.45048728585243225
    2. '       ' → logprob: -1.5754872560501099
    3. ' n' → logprob: -2.5754873752593994
    4. 'n' → logprob: -3.7004873752593994
    5. 'parts' → logprob: -3.7004873752593994
    6. ' line' → logprob: -4.20048713684082
    7. ' data' → logprob: -4.70048713684082
    8. 'line' → logprob: -6.45048713684082
    9. 'data' → logprob: -6.45048713684082
    10. ' params' → logprob: -7.07548713684082

Token 518: '_M' (ID: 2372)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06746078282594681
    2. '=' → logprob: -2.817460775375366
    3. ',' → logprob: -5.317461013793945
    4. '=int' → logprob: -7.567461013793945
    5. ' ' → logprob: -10.942461013793945
    6. ' ,' → logprob: -11.067461013793945
    7. '    ' → logprob: -11.692461013793945
    8. '   ' → logprob: -12.067461013793945
    9. ')' → logprob: -13.567461013793945
    10. '=line' → logprob: -13.692461013793945

Token 519: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31427979469299316
    2. '=' → logprob: -1.3142797946929932
    3. ',' → logprob: -6.939279556274414
    4. ' ' → logprob: -10.814279556274414
    5. '    ' → logprob: -11.689279556274414
    6. '=int' → logprob: -12.439279556274414
    7. '=line' → logprob: -12.564279556274414
    8. ')' → logprob: -12.814279556274414
    9. '   ' → logprob: -13.064279556274414
    10. ' ,' → logprob: -13.314279556274414

Token 520: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.0022122275549918413
    2. ' line' → logprob: -6.502212047576904
    3. 'list' → logprob: -7.252212047576904
    4. ' list' → logprob: -14.252212524414062
    5. '[line' → logprob: -15.877212524414062
    6. '=line' → logprob: -16.502212524414062
    7. '	line' → logprob: -16.627212524414062
    8. 'tuple' → logprob: -16.752212524414062
    9. '(line' → logprob: -16.752212524414062
    10. '#line' → logprob: -18.002212524414062

Token 521: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.0051858508959412575
    2. '.' → logprob: -5.505186080932617
    3. '.rstrip' → logprob: -7.505186080932617
    4. '.split' → logprob: -7.505186080932617
    5. 'strip' → logprob: -12.255186080932617
    6. ' .' → logprob: -13.630186080932617
    7. '.chomp' → logprob: -16.380186080932617
    8. 'split' → logprob: -16.755186080932617
    9. '[:-' → logprob: -17.130186080932617
    10. 'rstrip' → logprob: -17.255186080932617

Token 522: '()
' (ID: 1234)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0004973902832716703
    2. '()' → logprob: -7.750497341156006
    3. '.split' → logprob: -9.625497817993164
    4. '()
' → logprob: -15.250497817993164
    5. '.' → logprob: -15.750497817993164
    6. 'split' → logprob: -16.375497817993164
    7. ' ().' → logprob: -17.000497817993164
    8. '(' → logprob: -17.625497817993164
    9. '()==' → logprob: -17.750497817993164
    10. '()

' → logprob: -18.000497817993164

Token 523: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10539382696151733
    2. '
' → logprob: -3.605393886566162
    3. ' =' → logprob: -3.605393886566162
    4. '=' → logprob: -4.355393886566162
    5. '.split' → logprob: -4.480393886566162
    6. '        
' → logprob: -4.980393886566162
    7. ' ==' → logprob: -5.355393886566162
    8. 'if' → logprob: -5.730393886566162
    9. '==' → logprob: -5.980393886566162
    10. ' if' → logprob: -6.480393886566162

Token 524: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.13916322588920593
    2. ' if' → logprob: -2.1391632556915283
    3. '=' → logprob: -4.639163017272949
    4. '       ' → logprob: -6.639163017272949
    5. ' =' → logprob: -6.889163017272949
    6. '==' → logprob: -9.13916301727295
    7. '
' → logprob: -10.63916301727295
    8. '   ' → logprob: -11.26416301727295
    9. '	if' → logprob: -12.13916301727295
    10. '=
' → logprob: -12.38916301727295

Token 525: ' N' (ID: 478)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -9.877503907773644e-05
    2. 'not' → logprob: -9.625099182128906
    3. ' N' → logprob: -10.375099182128906
    4. 'N' → logprob: -14.000099182128906
    5. ' ' → logprob: -14.250099182128906
    6. ' no' → logprob: -18.375099182128906
    7. '   ' → logprob: -19.375099182128906
    8. ' ' → logprob: -19.375099182128906
    9. '	not' → logprob: -19.875099182128906
    10. ' n' → logprob: -20.625099182128906

Token 526: '_M' (ID: 2372)
  Prédit: '_M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_M' → logprob: -0.03903654217720032
    2. '_' → logprob: -3.289036512374878
    3. ' ==' → logprob: -7.789036750793457
    4. ' _' → logprob: -8.164036750793457
    5. '==' → logprob: -9.039036750793457
    6. ''_' → logprob: -10.289036750793457
    7. '_MC' → logprob: -10.539036750793457
    8. '._' → logprob: -10.664036750793457
    9. '```' → logprob: -11.164036750793457
    10. '_
' → logprob: -12.039036750793457

Token 527: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.07895654439926147
    2. '==' → logprob: -2.5789566040039062
    3. '=' → logprob: -9.953956604003906
    4. ' =' → logprob: -11.203956604003906
    5. '.startswith' → logprob: -13.328956604003906
    6. '=="' → logprob: -14.328956604003906
    7. '[' → logprob: -14.703956604003906
    8. '=='' → logprob: -14.953956604003906
    9. ' !=' → logprob: -14.953956604003906
    10. '()==' → logprob: -15.203956604003906

Token 528: ' '':
' (ID: 125614)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''' → logprob: -0.11127782613039017
    2. '""' → logprob: -2.8612778186798096
    3. ''' → logprob: -3.8612778186798096
    4. '"":' → logprob: -3.8612778186798096
    5. '"' → logprob: -5.111278057098389
    6. ' '':
' → logprob: -14.11127758026123
    7. ' "":
' → logprob: -14.86127758026123
    8. ' '' → logprob: -15.11127758026123
    9. ''t' → logprob: -15.36127758026123
    10. ''',' → logprob: -15.48627758026123

Token 529: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09411159157752991
    2. ':' → logprob: -2.469111680984497
    3. ':
' → logprob: -5.719111442565918
    4. ' continue' → logprob: -7.219111442565918
    5. 'continue' → logprob: -7.719111442565918
    6. '       ' → logprob: -7.969111442565918
    7. '	       ' → logprob: -9.469111442565918
    8. ' or' → logprob: -9.594111442565918
    9. '		' → logprob: -9.844111442565918
    10. '          ' → logprob: -10.594111442565918

Token 530: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.10790007561445236
    2. '           ' → logprob: -2.8579001426696777
    3. ' continue' → logprob: -3.1079001426696777
    4. 'break' → logprob: -8.98289966583252
    5. '	continue' → logprob: -10.73289966583252
    6. 'contin' → logprob: -11.35789966583252
    7. ' break' → logprob: -11.48289966583252
    8. 'return' → logprob: -11.73289966583252
    9. '               ' → logprob: -11.73289966583252
    10. '       ' → logprob: -12.23289966583252

Token 531: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006960927043110132
    2. '        
' → logprob: -6.006960868835449
    3. ' =' → logprob: -6.006960868835449
    4. '
' → logprob: -7.506960868835449
    5. ' 
' → logprob: -7.506960868835449
    6. '=' → logprob: -8.50696086883545
    7. ',' → logprob: -8.88196086883545
    8. ' N' → logprob: -9.25696086883545
    9. '	' → logprob: -10.25696086883545
    10. '  
' → logprob: -10.25696086883545

Token 532: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0013768990756943822
    2. '        
' → logprob: -7.876377105712891
    3. 'n' → logprob: -8.00137710571289
    4. ' N' → logprob: -8.87637710571289
    5. 'N' → logprob: -9.00137710571289
    6. ' n' → logprob: -9.75137710571289
    7. 'try' → logprob: -9.75137710571289
    8. '	' → logprob: -9.87637710571289
    9. ' ' → logprob: -10.37637710571289
    10. '```' → logprob: -10.37637710571289

Token 533: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' (adapté à ' N') → logprob: -0.0024342858232557774
    2. 'n' → logprob: -6.252434253692627
    3. 'try' → logprob: -8.502434730529785
    4. ' N' → logprob: -8.752434730529785
    5. '       ' → logprob: -8.877434730529785
    6. 'parts' → logprob: -13.127434730529785
    7. ' try' → logprob: -14.252434730529785
    8. ' n' → logprob: -14.502434730529785
    9. 'num' → logprob: -14.752434730529785
    10. ' parts' → logprob: -15.502434730529785

Token 534: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012974964920431376
    2. ',M' → logprob: -7.251297473907471
    3. '_,' → logprob: -8.001297950744629
    4. ' ,' → logprob: -9.251297950744629
    5. ',_' → logprob: -9.626297950744629
    6. ',N' → logprob: -10.626297950744629
    7. ',int' → logprob: -11.376297950744629
    8. '_' → logprob: -11.751297950744629
    9. ',m' → logprob: -11.751297950744629
    10. '_M' → logprob: -11.876297950744629

Token 535: ' M' (ID: 391)
  Prédit: ' M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.5760352611541748
    2. 'M' → logprob: -0.8260352611541748
    3. ' ' → logprob: -9.701035499572754
    4. '=' → logprob: -10.576035499572754
    5. ' =' → logprob: -12.326035499572754
    6. '=M' → logprob: -14.076035499572754
    7. 'N' → logprob: -14.326035499572754
    8. ' ' → logprob: -14.451035499572754
    9. 'space' → logprob: -14.576035499572754
    10. '  ' → logprob: -14.826035499572754

Token 536: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132667541503906
    2. ' =' → logprob: -1.3132667541503906
    3. ',' → logprob: -12.81326675415039
    4. ')' → logprob: -13.81326675415039
    5. '=line' → logprob: -14.81326675415039
    6. '=int' → logprob: -15.43826675415039
    7. '＝' → logprob: -15.93826675415039
    8. ')=' → logprob: -16.31326675415039
    9. '<|end|>' → logprob: -16.31326675415039
    10. ' ' → logprob: -16.43826675415039

Token 537: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.16060134768486023
    2. 'map' → logprob: -1.9106013774871826
    3. ' N' → logprob: -8.035601615905762
    4. 'N' → logprob: -9.910601615905762
    5. ' line' → logprob: -13.285601615905762
    6. 'line' → logprob: -14.535601615905762
    7. ' ' → logprob: -15.035601615905762
    8. '(map' → logprob: -15.285601615905762
    9. '	map' → logprob: -15.410601615905762
    10. '[N' → logprob: -15.410601615905762

Token 538: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.010417329147458076
    2. '(str' → logprob: -5.010417461395264
    3. '(' → logprob: -5.635417461395264
    4. '(lambda' → logprob: -9.635416984558105
    5. 'int' → logprob: -10.135416984558105
    6. 'str' → logprob: -11.260416984558105
    7. '[int' → logprob: -12.385416984558105
    8. '(
' → logprob: -13.510416984558105
    9. '(tuple' → logprob: -13.885416984558105
    10. ' (' → logprob: -14.885416984558105

Token 539: ',' (ID: 11)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.11692047864198685
    2. ')' → logprob: -2.7419204711914062
    3. 'N' → logprob: -3.2419204711914062
    4. '(line' → logprob: -5.491920471191406
    5. ',' → logprob: -6.866920471191406
    6. '(' → logprob: -7.241920471191406
    7. ',N' → logprob: -7.366920471191406
    8. 'line' → logprob: -8.616920471191406
    9. ' N' → logprob: -9.616920471191406
    10. ')(' → logprob: -11.491920471191406

Token 540: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0002613358374219388
    2. ' N' → logprob: -8.250261306762695
    3. 'line' → logprob: -22.000261306762695
    4. '   ' → logprob: -22.000261306762695
    5. '	N' → logprob: -22.625261306762695
    6. ')' → logprob: -22.875261306762695
    7. ' ' → logprob: -23.375261306762695
    8. ' line' → logprob: -24.500261306762695
    9. '(N' → logprob: -24.875261306762695
    10. 'n' → logprob: -25.250261306762695

Token 541: '_M' (ID: 2372)
  Prédit: '_M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_M' → logprob: -0.01963813789188862
    2. '.' → logprob: -4.6446380615234375
    3. 'M' → logprob: -6.3946380615234375
    4. '.strip' → logprob: -6.3946380615234375
    5. '.split' → logprob: -6.5196380615234375
    6. ')' → logprob: -6.5196380615234375
    7. '_.' → logprob: -7.6446380615234375
    8. '().' → logprob: -7.6446380615234375
    9. '.readline' → logprob: -7.7696380615234375
    10. '.M' → logprob: -7.8946380615234375

Token 542: '.split' (ID: 10347)
  Prédit: '.split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.14051000773906708
    2. '().' → logprob: -2.140510082244873
    3. '.' → logprob: -4.640510082244873
    4. '.strip' → logprob: -5.640510082244873
    5. ' .' → logprob: -8.515509605407715
    6. 'split' → logprob: -9.390509605407715
    7. ')' → logprob: -13.890509605407715
    8. '(split' → logprob: -15.015509605407715
    9. '   ' → logprob: -15.140509605407715
    10. ' split' → logprob: -15.390509605407715

Token 543: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.13200689852237701
    2. '()' → logprob: -2.132006883621216
    3. '('' → logprob: -5.507007122039795
    4. '(' → logprob: -7.382007122039795
    5. '())
' → logprob: -8.632006645202637
    6. ')' → logprob: -9.132006645202637
    7. '()
' → logprob: -9.632006645202637
    8. '(None' → logprob: -11.507006645202637
    9. '(','' → logprob: -11.632006645202637
    10. '()]' → logprob: -12.757006645202637

Token 544: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0028105827514082193
    2. '        
' → logprob: -6.502810478210449
    3. 'events' → logprob: -8.37781047821045
    4. 'interval' → logprob: -8.50281047821045
    5. '   ' → logprob: -8.62781047821045
    6. '	' → logprob: -8.87781047821045
    7. ' intervals' → logprob: -9.37781047821045
    8. '```' → logprob: -9.37781047821045
    9. 'connections' → logprob: -10.25281047821045
    10. 'if' → logprob: -10.37781047821045

Token 545: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8225024938583374
    2. 'usage' → logprob: -1.4475024938583374
    3. 'interval' → logprob: -2.072502613067627
    4. 'connections' → logprob: -2.572502613067627
    5. 'events' → logprob: -3.572502613067627
    6. 'pc' → logprob: -3.822502613067627
    7. 'conn' → logprob: -4.572502613067627
    8. 'con' → logprob: -4.697502613067627
    9. 'sessions' → logprob: -4.822502613067627
    10. 'logs' → logprob: -4.822502613067627

Token 546: ' Condition' (ID: 30255)
  Prédit: 'usage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'usage' → logprob: -1.3413735628128052
    2. 'connections' → logprob: -1.3413735628128052
    3. 'pc' → logprob: -1.8413735628128052
    4. 'interval' → logprob: -2.3413734436035156
    5. 'events' → logprob: -2.8413734436035156
    6. 'logs' → logprob: -3.2163734436035156
    7. 'pcs' → logprob: -3.5913734436035156
    8. 'sessions' → logprob: -3.8413734436035156
    9. 'conn' → logprob: -3.9663734436035156
    10. 'con' → logprob: -3.9663734436035156

Token 547: ' d' (ID: 272)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.11904878169298172
    2. ' if' → logprob: -2.244048833847046
    3. '       ' → logprob: -5.869048595428467
    4. '   ' → logprob: -6.744048595428467
    5. 's' → logprob: -7.119048595428467
    6. ':' → logprob: -7.494048595428467
    7. ' =' → logprob: -8.369049072265625
    8. 'assert' → logprob: -8.619049072265625
    9. 'N' → logprob: -8.744049072265625
    10. 'for' → logprob: -9.744049072265625

Token 548: ''arrêt' (ID: 186362)
  Prédit: ''arrêt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''arrêt' → logprob: -0.07415652275085449
    2. 'arr' → logprob: -3.3241565227508545
    3. 'ar' → logprob: -3.6991565227508545
    4. '’arrêt' → logprob: -5.699156761169434
    5. ''arr' → logprob: -6.449156761169434
    6. 'e' → logprob: -6.699156761169434
    7. 'if' → logprob: -6.824156761169434
    8. ''entrée' → logprob: -7.449156761169434
    9. ' arrêt' → logprob: -7.449156761169434
    10. 'éc' → logprob: -7.824156761169434

Token 549: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.28409770131111145
    2. 'if' → logprob: -1.784097671508789
    3. ' if' → logprob: -2.534097671508789
    4. '	if' → logprob: -11.534097671508789
    5. '	' → logprob: -12.659097671508789
    6. ',' → logprob: -12.659097671508789
    7. '	   ' → logprob: -13.159097671508789
    8. '   ' → logprob: -13.284097671508789
    9. '           ' → logprob: -13.534097671508789
    10. ':' → logprob: -14.159097671508789

Token 550: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1345466673374176
    2. 'if' → logprob: -2.1345467567443848
    3. ' if' → logprob: -4.884546756744385
    4. '   ' → logprob: -11.759546279907227
    5. '	if' → logprob: -11.759546279907227
    6. '	' → logprob: -12.009546279907227
    7. '	   ' → logprob: -13.259546279907227
    8. ' ' → logprob: -13.509546279907227
    9. '           ' → logprob: -14.009546279907227
    10. 'If' → logprob: -14.884546279907227

Token 551: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.04633714258670807
    2. '       ' → logprob: -3.296337127685547
    3. ' if' → logprob: -4.796337127685547
    4. '   ' → logprob: -14.421337127685547
    5. '	if' → logprob: -14.421337127685547
    6. 'If' → logprob: -16.046337127685547
    7. ' ' → logprob: -16.671337127685547
    8. '	' → logprob: -17.171337127685547
    9. '      ' → logprob: -17.296337127685547
    10. '	   ' → logprob: -17.546337127685547

Token 552: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.008615161292254925
    2. ' N' → logprob: -4.758615016937256
    3. '(N' → logprob: -15.008615493774414
    4. '(' → logprob: -15.633615493774414
    5. ' ' → logprob: -15.758615493774414
    6. ' (' → logprob: -16.633615493774414
    7. '	N' → logprob: -17.758615493774414
    8. '   ' → logprob: -18.508615493774414
    9. ' ' → logprob: -18.508615493774414
    10. 'n' → logprob: -19.258615493774414

Token 553: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.34871935844421387
    2. '==' → logprob: -1.2237193584442139
    3. '=' → logprob: -8.973719596862793
    4. ' ' → logprob: -9.723719596862793
    5. '==
' → logprob: -10.848719596862793
    6. ',' → logprob: -11.223719596862793
    7. ')==' → logprob: -11.473719596862793
    8. ' =' → logprob: -11.473719596862793
    9. ' ,' → logprob: -11.723719596862793
    10. ' M' → logprob: -12.098719596862793

Token 554: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.4391956685576588e-05
    2. ' ' → logprob: -10.625024795532227
    3. 'M' → logprob: -22.125024795532227
    4. '-' → logprob: -22.125024795532227
    5. '۰' → logprob: -22.750024795532227
    6. '   ' → logprob: -22.875024795532227
    7. '  ' → logprob: -23.625024795532227
    8. 'N' → logprob: -23.875024795532227
    9. ' M' → logprob: -23.875024795532227
    10. ' ' → logprob: -23.875024795532227

Token 555: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -13.875000953674316
    3. '-' → logprob: -22.250001907348633
    4. 'M' → logprob: -22.500001907348633
    5. '   ' → logprob: -22.875001907348633
    6. '۰' → logprob: -23.250001907348633
    7. 'N' → logprob: -23.500001907348633
    8. '０' → logprob: -23.875001907348633
    9. '  ' → logprob: -24.375001907348633
    10. '```' → logprob: -24.375001907348633

Token 556: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.12692999839782715
    2. ' and' → logprob: -2.126929998397827
    3. '	and' → logprob: -14.126930236816406
    4. '   ' → logprob: -14.501930236816406
    5. ' ' → logprob: -14.626930236816406
    6. ' и' → logprob: -16.001930236816406
    7. '0' → logprob: -16.626930236816406
    8. '```' → logprob: -17.376930236816406
    9. 'et' → logprob: -17.501930236816406
    10. '           ' → logprob: -17.501930236816406

Token 557: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.00861456897109747
    2. ' M' → logprob: -4.758614540100098
    3. ' ' → logprob: -18.008615493774414
    4. '   ' → logprob: -18.133615493774414
    5. '	M' → logprob: -18.133615493774414
    6. '  ' → logprob: -18.758615493774414
    7. ' ' → logprob: -19.758615493774414
    8. ',M' → logprob: -22.008615493774414
    9. '_M' → logprob: -22.008615493774414
    10. '    ' → logprob: -22.758615493774414

Token 558: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.1602432131767273
    2. ' ==' → logprob: -1.910243272781372
    3. '0' → logprob: -11.160243034362793
    4. ')==' → logprob: -13.410243034362793
    5. '=' → logprob: -13.535243034362793
    6. '<|end|>' → logprob: -14.285243034362793
    7. '==
' → logprob: -14.785243034362793
    8. ']==' → logprob: -15.160243034362793
    9. '===' → logprob: -15.660243034362793
    10. '()==' → logprob: -15.660243034362793

Token 559: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.15310683415737e-05
    2. ' ' → logprob: -10.750021934509277
    3. '<|end|>' → logprob: -20.25002098083496
    4. '۰' → logprob: -20.87502098083496
    5. '=' → logprob: -21.62502098083496
    6. '  ' → logprob: -21.75002098083496
    7. '```' → logprob: -21.75002098083496
    8. '<|end|>' → logprob: -21.87502098083496
    9. '   ' → logprob: -22.12502098083496
    10. '০' → logprob: -22.50002098083496

Token 560: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.941850526549388e-06
    2. ' ' → logprob: -11.750007629394531
    3. '۰' → logprob: -19.62500762939453
    4. '০' → logprob: -21.37500762939453
    5. '```' → logprob: -21.37500762939453
    6. '  ' → logprob: -21.62500762939453
    7. '<|end|>' → logprob: -21.62500762939453
    8. '<|end|>' → logprob: -22.06250762939453
    9. '０' → logprob: -22.37500762939453
    10. '०' → logprob: -22.56250762939453

Token 561: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.31416696310043335
    2. ':' → logprob: -1.3141670227050781
    3. '           ' → logprob: -7.189167022705078
    4. '       ' → logprob: -8.939167022705078
    5. '   ' → logprob: -12.189167022705078
    6. ':
' → logprob: -12.314167022705078
    7. ':return' → logprob: -12.439167022705078
    8. ' :
' → logprob: -13.314167022705078
    9. '):
' → logprob: -13.564167022705078
    10. ' :' → logprob: -14.939167022705078

Token 562: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00013405199570115656
    2. '       ' → logprob: -9.000134468078613
    3. '		' → logprob: -12.250134468078613
    4. '          ' → logprob: -13.250134468078613
    5. ' break' → logprob: -13.500134468078613
    6. '	       ' → logprob: -14.125134468078613
    7. '   ' → logprob: -14.500134468078613
    8. '               ' → logprob: -14.625134468078613
    9. '         ' → logprob: -15.625134468078613
    10. '
' → logprob: -15.750134468078613

Token 563: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.21085838973522186
    2. '           ' → logprob: -2.4608583450317383
    3. ' break' → logprob: -2.4608583450317383
    4. 'return' → logprob: -3.9608583450317383
    5. ' return' → logprob: -8.210858345031738
    6. '               ' → logprob: -10.335858345031738
    7. '
' → logprob: -10.710858345031738
    8. '       ' → logprob: -11.835858345031738
    9. '	break' → logprob: -12.085858345031738
    10. '		' → logprob: -14.335858345031738

Token 564: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016549929976463318
    2. '        
' → logprob: -4.141550064086914
    3. '
' → logprob: -8.641550064086914
    4. '```' → logprob: -9.516550064086914
    5. 'interval' → logprob: -10.266550064086914
    6. '    
' → logprob: -10.266550064086914
    7. '            
' → logprob: -10.391550064086914
    8. '   ' → logprob: -10.516550064086914
    9. ' intervals' → logprob: -11.016550064086914
    10. '       
' → logprob: -11.516550064086914

Token 565: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005732413846999407
    2. '        
' → logprob: -5.880732536315918
    3. 'usage' → logprob: -7.005732536315918
    4. 'pc' → logprob: -7.630732536315918
    5. 'connections' → logprob: -7.630732536315918
    6. 'sessions' → logprob: -8.380732536315918
    7. 'connected' → logprob: -8.755732536315918
    8. '   ' → logprob: -8.880732536315918
    9. 'conn' → logprob: -9.380732536315918
    10. 'users' → logprob: -9.880732536315918

Token 566: ' r' (ID: 428)
  Prédit: 'connections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'connections' → logprob: -0.7795441746711731
    2. 'events' → logprob: -1.9045441150665283
    3. 'pc' → logprob: -2.4045441150665283
    4. 'conn' → logprob: -2.6545441150665283
    5. 'usage' → logprob: -2.9045441150665283
    6. 'con' → logprob: -2.9045441150665283
    7. 'sessions' → logprob: -3.0295441150665283
    8. 'interval' → logprob: -4.279544353485107
    9. '#' → logprob: -4.279544353485107
    10. 'logs' → logprob: -4.529544353485107

Token 567: ' =' (ID: 314)
  Prédit: 'ec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ec' → logprob: -0.40410277247428894
    2. 'e' → logprob: -1.6541028022766113
    3. 'anges' → logprob: -3.9041028022766113
    4. '   ' → logprob: -4.154102802276611
    5. 'essions' → logprob: -4.529102802276611
    6. 'ead' → logprob: -4.904102802276611
    7. 'unning' → logprob: -4.904102802276611
    8. 'em' → logprob: -4.904102802276611
    9. 'eg' → logprob: -5.154102802276611
    10. 'es' → logprob: -5.279102802276611

Token 568: ' int' (ID: 677)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.08428966999053955
    2. ' {}' → logprob: -2.95928955078125
    3. '[]' → logprob: -3.83428955078125
    4. '{}' → logprob: -5.33428955078125
    5. ' [' → logprob: -6.45928955078125
    6. ' [[]' → logprob: -7.70928955078125
    7. 'dict' → logprob: -8.70928955078125
    8. ' ' → logprob: -9.45928955078125
    9. ' []
' → logprob: -9.45928955078125
    10. '[' → logprob: -9.45928955078125

Token 569: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.018493587151169777
    2. '(sys' → logprob: -4.64349365234375
    3. '(line' → logprob: -4.89349365234375
    4. 'input' → logprob: -7.76849365234375
    5. '(' → logprob: -8.39349365234375
    6. '()' → logprob: -8.39349365234375
    7. 'sys' → logprob: -8.51849365234375
    8. '(N' → logprob: -10.26849365234375
    9. 'line' → logprob: -10.39349365234375
    10. '()
' → logprob: -11.01849365234375

Token 570: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.024422435089945793
    2. '()' → logprob: -3.7744224071502686
    3. '().' → logprob: -6.774422645568848
    4. '())
' → logprob: -10.524422645568848
    5. '()
' → logprob: -12.649422645568848
    6. '())

' → logprob: -13.649422645568848
    7. ')' → logprob: -14.024422645568848
    8. '(' → logprob: -14.274422645568848
    9. ' ())' → logprob: -14.524422645568848
    10. '();)' → logprob: -15.899422645568848

Token 571: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026624558493494987
    2. '	' → logprob: -5.27662467956543
    3. '        
' → logprob: -5.27662467956543
    4. 'interval' → logprob: -5.77662467956543
    5. ' intervals' → logprob: -6.02662467956543
    6. 'timestamps' → logprob: -6.27662467956543
    7. 'usage' → logprob: -6.27662467956543
    8. '	   ' → logprob: -6.90162467956543
    9. 'connections' → logprob: -7.52662467956543
    10. '   ' → logprob: -7.77662467956543

Token 572: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04226890578866005
    2. 'usage' → logprob: -4.542268753051758
    3. 'interval' → logprob: -4.792268753051758
    4. '        
' → logprob: -4.917268753051758
    5. 'connections' → logprob: -5.667268753051758
    6. 'events' → logprob: -6.292268753051758
    7. 'timestamps' → logprob: -6.542268753051758
    8. 'times' → logprob: -6.917268753051758
    9. '	' → logprob: -7.042268753051758
    10. 'conn' → logprob: -7.042268753051758

Token 573: ' nombre' (ID: 9733)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.09735836833715439
    2. '
' → logprob: -4.222358226776123
    3. ')' → logprob: -4.347358226776123
    4. '       ' → logprob: -4.472358226776123
    5. 'result' → logprob: -4.847358226776123
    6. ' r' → logprob: -5.097358226776123
    7. 'total' → logprob: -5.472358226776123
    8. 'n' → logprob: -5.597358226776123
    9. 'for' → logprob: -5.597358226776123
    10. 'input' → logprob: -5.597358226776123

Token 574: ' d' (ID: 272)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.3004541397094727
    2. 'de' → logprob: -1.5504541397094727
    3. 'd' → logprob: -2.1754541397094727
    4. '_des' → logprob: -2.3004541397094727
    5. 'des' → logprob: -2.4254541397094727
    6. ' de' → logprob: -2.9254541397094727
    7. '_de' → logprob: -3.1754541397094727
    8. '=' → logprob: -3.4254541397094727
    9. '_d' → logprob: -3.9254541397094727
    10. ' d' → logprob: -4.300454139709473

Token 575: ''en' (ID: 16740)
  Prédit: 'év'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'év' → logprob: -0.5868129730224609
    2. 'e' → logprob: -2.836812973022461
    3. 'é' → logprob: -3.211812973022461
    4. 'el' → logprob: -3.461812973022461
    5. 'r' → logprob: -3.461812973022461
    6. 'requests' → logprob: -3.586812973022461
    7. '_records' → logprob: -3.836812973022461
    8. 'records' → logprob: -4.086812973022461
    9. '```' → logprob: -4.086812973022461
    10. '_requests' → logprob: -4.211812973022461

Token 576: 'registre' (ID: 77466)
  Prédit: 'registre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'registre' → logprob: -0.02576567232608795
    2. 'tr' → logprob: -4.650765895843506
    3. 'reg' → logprob: -5.025765895843506
    4. 'registr' → logprob: -5.400765895843506
    5. 'registrement' → logprob: -6.650765895843506
    6. 'regs' → logprob: -6.900765895843506
    7. 'r' → logprob: -6.900765895843506
    8. 'tries' → logprob: -7.400765895843506
    9. 't' → logprob: -8.025765419006348
    10. 'register' → logprob: -8.775765419006348

Token 577: 'ments' (ID: 1626)
  Prédit: 'ments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ments' → logprob: -0.00021951000962872058
    2. 'm' → logprob: -8.750219345092773
    3. 'ment' → logprob: -9.875219345092773
    4. 'r' → logprob: -12.500219345092773
    5. 'nts' → logprob: -13.500219345092773
    6. 'ements' → logprob: -13.750219345092773
    7. 'd' → logprob: -14.375219345092773
    8. 'me' → logprob: -14.625219345092773
    9. '```' → logprob: -14.625219345092773
    10. 'nements' → logprob: -15.000219345092773

Token 578: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0014837936032563448
    2. '        
' → logprob: -7.501483917236328
    3. '<|end|>' → logprob: -8.376483917236328
    4. 'usage' → logprob: -8.626483917236328
    5. 'connections' → logprob: -9.126483917236328
    6. ' intervals' → logprob: -9.751483917236328
    7. 'interval' → logprob: -10.126483917236328
    8. 'records' → logprob: -10.501483917236328
    9. '   ' → logprob: -10.501483917236328
    10. ' usage' → logprob: -10.626483917236328

Token 579: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007559045334346592
    2. 'usage' → logprob: -8.00075626373291
    3. '        
' → logprob: -8.75075626373291
    4. ' usage' → logprob: -9.62575626373291
    5. 'connections' → logprob: -9.87575626373291
    6. 'records' → logprob: -10.62575626373291
    7. 'conn' → logprob: -11.12575626373291
    8. '   ' → logprob: -11.50075626373291
    9. 'connected' → logprob: -11.62575626373291
    10. 'sessions' → logprob: -11.87575626373291

Token 580: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8782975077629089
    2. 'records' → logprob: -1.1282975673675537
    3. 'usage' → logprob: -1.7532975673675537
    4. 'connections' → logprob: -3.7532975673675537
    5. 'interval' → logprob: -4.128297328948975
    6. 'logs' → logprob: -4.503297328948975
    7. 'events' → logprob: -4.628297328948975
    8. 'pc' → logprob: -5.003297328948975
    9. 'conn' → logprob: -5.378297328948975
    10. 'us' → logprob: -5.503297328948975

Token 581: ' diction' (ID: 155259)
  Prédit: 'records'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'records' → logprob: -0.9418666958808899
    2. 'usage' → logprob: -1.1918666362762451
    3. 'pc' → logprob: -2.191866636276245
    4. 'conn' → logprob: -3.191866636276245
    5. 'connections' → logprob: -3.191866636276245
    6. 'interval' → logprob: -3.316866636276245
    7. 'events' → logprob: -4.566866874694824
    8. 'logs' → logprob: -4.566866874694824
    9. 'us' → logprob: -4.816866874694824
    10. ' usage' → logprob: -4.941866874694824

Token 582: 'naire' (ID: 30464)
  Prédit: 'naire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'naire' → logprob: -0.03653721883893013
    2. 'ary' → logprob: -3.5365371704101562
    3. '   ' → logprob: -5.661537170410156
    4. 'naires' → logprob: -6.161537170410156
    5. 'aire' → logprob: -7.286537170410156
    6. 'n' → logprob: -7.786537170410156
    7. ' ary' → logprob: -11.161537170410156
    8. 'ar' → logprob: -11.286537170410156
    9. ' =' → logprob: -11.536537170410156
    10. '  ' → logprob: -12.286537170410156

Token 583: ' pour' (ID: 1930)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9003437757492065
    2. ' =' → logprob: -1.1503437757492065
    3. ' des' → logprob: -1.7753437757492065
    4. 'des' → logprob: -3.775343894958496
    5. 'connections' → logprob: -4.275343894958496
    6. '_connections' → logprob: -4.275343894958496
    7. '=' → logprob: -4.400343894958496
    8. '_des' → logprob: -5.150343894958496
    9. 'usage' → logprob: -5.400343894958496
    10. 'user' → logprob: -5.525343894958496

Token 584: ' stock' (ID: 6546)
  Prédit: ' stock'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stock' → logprob: -1.2322936058044434
    2. 'pc' → logprob: -1.4822936058044434
    3. 'user' → logprob: -2.4822936058044434
    4. ' pc' → logprob: -2.7322936058044434
    5. 'default' → logprob: -2.8572936058044434
    6. 'stock' → logprob: -2.9822936058044434
    7. ' user' → logprob: -3.1072936058044434
    8. 'conn' → logprob: -3.6072936058044434
    9. ' les' → logprob: -3.7322936058044434
    10. 'interval' → logprob: -4.232293605804443

Token 585: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.0007574541959911585
    2. 'ner' → logprob: -7.375757217407227
    3. '   ' → logprob: -10.000757217407227
    4. ' des' → logprob: -10.125757217407227
    5. 'érer' → logprob: -10.750757217407227
    6. '       ' → logprob: -11.750757217407227
    7. '{' → logprob: -11.750757217407227
    8. 'age' → logprob: -13.750757217407227
    9. '    ' → logprob: -14.250757217407227
    10. '           ' → logprob: -14.750757217407227

Token 586: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.6767562627792358
    2. ' usage' → logprob: -2.1767563819885254
    3. ' intervals' → logprob: -2.4267563819885254
    4. 'les' → logprob: -2.4267563819885254
    5. 'usage' → logprob: -3.1767563819885254
    6. 'connections' → logprob: -3.5517563819885254
    7. 'interval' → logprob: -3.9267563819885254
    8. 'pc' → logprob: -4.051756381988525
    9. ' pc' → logprob: -4.301756381988525
    10. ' user' → logprob: -4.426756381988525

Token 587: ' connex' (ID: 154480)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.7007604241371155
    2. 'usage' → logprob: -1.7007603645324707
    3. 'inter' → logprob: -2.4507603645324707
    4. 'conn' → logprob: -2.7007603645324707
    5. 'pc' → logprob: -3.4507603645324707
    6. ' intervals' → logprob: -3.7007603645324707
    7. 'us' → logprob: -3.7007603645324707
    8. 'connections' → logprob: -3.8257603645324707
    9. ' interv' → logprob: -4.575760364532471
    10. 'events' → logprob: -4.700760364532471

Token 588: 'ions' (ID: 756)
  Prédit: 'ions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ions' → logprob: -0.0010280465940013528
    2. 'ion' → logprob: -7.001028060913086
    3. 'ections' → logprob: -9.876028060913086
    4. '```' → logprob: -11.626028060913086
    5. '#' → logprob: -11.751028060913086
    6. ' ions' → logprob: -11.751028060913086
    7. 'i' → logprob: -11.751028060913086
    8. 'ex' → logprob: -11.876028060913086
    9. 's' → logprob: -13.001028060913086
    10. 'ctions' → logprob: -13.001028060913086

Token 589: ' en' (ID: 469)
  Prédit: 'pc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pc' → logprob: -1.6460610628128052
    2. ' des' → logprob: -1.8960610628128052
    3. '_des' → logprob: -2.2710609436035156
    4. '   ' → logprob: -2.3960609436035156
    5. 'des' → logprob: -2.3960609436035156
    6. '_pc' → logprob: -2.6460609436035156
    7. '       ' → logprob: -2.7710609436035156
    8. ' =' → logprob: -2.8960609436035156
    9. '_' → logprob: -3.3960609436035156
    10. '_par' → logprob: -3.8960609436035156

Token 590: ' cours' (ID: 10138)
  Prédit: 'cours'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cours' → logprob: -0.0019257789244875312
    2. 'cour' → logprob: -7.251925945281982
    3. ' cours' → logprob: -7.501925945281982
    4. '```' → logprob: -8.126925468444824
    5. 'default' → logprob: -9.751925468444824
    6. 'court' → logprob: -9.751925468444824
    7. '
' → logprob: -10.126925468444824
    8. '   ' → logprob: -10.251925468444824
    9. 'c' → logprob: -10.251925468444824
    10. 'course' → logprob: -11.001925468444824

Token 591: ' par' (ID: 686)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2623138725757599
    2. 'connections' → logprob: -2.0123138427734375
    3. 'conn' → logprob: -2.8873138427734375
    4. 'con' → logprob: -5.0123138427734375
    5. '   ' → logprob: -5.5123138427734375
    6. ' =' → logprob: -5.5123138427734375
    7. 'user' → logprob: -5.6373138427734375
    8. ' connections' → logprob: -5.6373138427734375
    9. 'active' → logprob: -5.8873138427734375
    10. ',' → logprob: -6.0123138427734375

Token 592: ' PC' (ID: 8584)
  Prédit: 'pc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pc' → logprob: -0.595301628112793
    2. 'PC' → logprob: -1.720301628112793
    3. 'user' → logprob: -2.345301628112793
    4. ' pc' → logprob: -2.345301628112793
    5. ' PC' → logprob: -2.845301628112793
    6. ' user' → logprob: -4.845301628112793
    7. 'ordinateur' → logprob: -5.845301628112793
    8. 'client' → logprob: -6.595301628112793
    9. 'device' → logprob: -6.970301628112793
    10. 'machine' → logprob: -7.095301628112793

Token 593: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3875461220741272
    2. 'connections' → logprob: -2.2625460624694824
    3. ' =' → logprob: -2.5125460624694824
    4. 'conn' → logprob: -2.5125460624694824
    5. ' connections' → logprob: -4.762546062469482
    6. '_connections' → logprob: -5.137546062469482
    7. '=' → logprob: -5.262546062469482
    8. '
' → logprob: -5.762546062469482
    9. 'pc' → logprob: -5.887546062469482
    10. 'active' → logprob: -6.137546062469482

Token 594: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003131132572889328
    2. ' pc' → logprob: -7.503130912780762
    3. 'pc' → logprob: -7.503130912780762
    4. ',' → logprob: -7.878130912780762
    5. '_' → logprob: -8.128130912780762
    6. 'conn' → logprob: -8.253130912780762
    7. ' =' → logprob: -8.378130912780762
    8. '        
' → logprob: -8.878130912780762
    9. '{' → logprob: -9.378130912780762
    10. '   ' → logprob: -9.378130912780762

Token 595: ' #' (ID: 1069)
  Prédit: 'connections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'connections' → logprob: -0.23391605913639069
    2. ' connections' → logprob: -2.4839160442352295
    3. 'conn' → logprob: -2.6089160442352295
    4. 'con' → logprob: -3.8589160442352295
    5. ' connex' → logprob: -4.483916282653809
    6. 'connected' → logprob: -5.108916282653809
    7. 'connect' → logprob: -5.983916282653809
    8. 'pc' → logprob: -6.233916282653809
    9. '   ' → logprob: -6.483916282653809
    10. ' ongoing' → logprob: -6.608916282653809

Token 596: ' et' (ID: 859)
  Prédit: 'connections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'connections' → logprob: -0.40252572298049927
    2. 'conn' → logprob: -1.7775256633758545
    3. ' connections' → logprob: -2.7775256633758545
    4. 'con' → logprob: -3.6525256633758545
    5. 'pc' → logprob: -3.7775256633758545
    6. 'connected' → logprob: -4.277525901794434
    7. ' connex' → logprob: -4.777525901794434
    8. 'connect' → logprob: -4.777525901794434
    9. ' pc' → logprob: -5.902525901794434
    10. 'connexion' → logprob: -6.152525901794434

Token 597: ' aussi' (ID: 9894)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' les' → logprob: -1.0961145162582397
    2. 'les' → logprob: -2.5961146354675293
    3. ' leurs' → logprob: -2.5961146354675293
    4. 'de' → logprob: -2.7211146354675293
    5. ' usage' → logprob: -2.7211146354675293
    6. 'interval' → logprob: -2.7211146354675293
    7. 'usage' → logprob: -2.9711146354675293
    8. ' intervals' → logprob: -3.3461146354675293
    9. 'd' → logprob: -3.8461146354675293
    10. ' their' → logprob: -3.8461146354675293

Token 598: ' stock' (ID: 6546)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.5718019008636475
    2. ' les' → logprob: -2.3218019008636475
    3. 'des' → logprob: -2.5718019008636475
    4. ' leurs' → logprob: -2.9468019008636475
    5. ' des' → logprob: -3.1968019008636475
    6. 'leurs' → logprob: -3.1968019008636475
    7. 'leur' → logprob: -3.1968019008636475
    8. 'pour' → logprob: -3.4468019008636475
    9. 'le' → logprob: -4.696802139282227
    10. ' pour' → logprob: -4.821802139282227

Token 599: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.07198017835617065
    2. 'age' → logprob: -2.9469802379608154
    3. 'ées' → logprob: -4.696979999542236
    4. 'és' → logprob: -5.696979999542236
    5. 'é' → logprob: -5.821979999542236
    6. 'ant' → logprob: -7.071979999542236
    7. 'ée' → logprob: -8.196980476379395
    8. 'e' → logprob: -8.696980476379395
    9. '   ' → logprob: -10.446980476379395
    10. 'ager' → logprob: -10.571980476379395

Token 600: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.33989378809928894
    2. ' les' → logprob: -1.3398938179016113
    3. ' leurs' → logprob: -4.214893817901611
    4. 'leurs' → logprob: -5.214893817901611
    5. 'leur' → logprob: -6.714893817901611
    6. '   ' → logprob: -7.464893817901611
    7. ' leur' → logprob: -7.839893817901611
    8. '#' → logprob: -7.839893817901611
    9. 'des' → logprob: -8.089893341064453
    10. 'le' → logprob: -8.339893341064453

Token 601: ' intervals' (ID: 49900)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -1.2369195222854614
    2. 'inter' → logprob: -1.7369195222854614
    3. ' interv' → logprob: -1.7369195222854614
    4. 'dé' → logprob: -2.611919403076172
    5. 'de' → logprob: -2.986919403076172
    6. ' intervals' → logprob: -2.986919403076172
    7. 'conn' → logprob: -3.111919403076172
    8. ' périodes' → logprob: -3.611919403076172
    9. ' historiques' → logprob: -3.986919403076172
    10. 'd' → logprob: -3.986919403076172

Token 602: ' par' (ID: 686)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.7503501176834106
    2. 's' → logprob: -2.125349998474121
    3. ' par' → logprob: -2.125349998474121
    4. '   ' → logprob: -2.625349998474121
    5. ' d' → logprob: -2.750349998474121
    6. '       ' → logprob: -2.875349998474121
    7. '_par' → logprob: -2.875349998474121
    8. '
' → logprob: -3.125349998474121
    9. '_usage' → logprob: -3.125349998474121
    10. ' des' → logprob: -3.500349998474121

Token 603: ' étudiant' (ID: 153135)
  Prédit: 'pc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pc' → logprob: -0.7913468480110168
    2. 'PC' → logprob: -0.7913468480110168
    3. ' PC' → logprob: -2.916346788406372
    4. ' pc' → logprob: -3.291346788406372
    5. 'ordinateur' → logprob: -7.041347026824951
    6. 'Pc' → logprob: -8.541346549987793
    7. 'user' → logprob: -8.666346549987793
    8. ' ordinateur' → logprob: -8.666346549987793
    9. '```' → logprob: -9.166346549987793
    10. 'id' → logprob: -9.541346549987793

Token 604: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5647409558296204
    2. '
' → logprob: -1.3147408962249756
    3. 'conn' → logprob: -3.5647408962249756
    4. 'connections' → logprob: -3.8147408962249756
    5. '        
' → logprob: -4.189741134643555
    6. 's' → logprob: -4.189741134643555
    7. '   ' → logprob: -4.689741134643555
    8. ',' → logprob: -4.939741134643555
    9. 'usage' → logprob: -5.189741134643555
    10. '_connections' → logprob: -5.314741134643555

Token 605: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00712251104414463
    2. '        
' → logprob: -5.75712251663208
    3. 'conn' → logprob: -7.25712251663208
    4. 'connections' → logprob: -7.25712251663208
    5. ' connections' → logprob: -7.75712251663208
    6. '
' → logprob: -7.88212251663208
    7. 'sessions' → logprob: -8.382122039794922
    8. ' sessions' → logprob: -8.632122039794922
    9. ' connected' → logprob: -8.882122039794922
    10. ' usage' → logprob: -8.882122039794922

Token 606: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6292595863342285
    2. 'connections' → logprob: -1.7542595863342285
    3. 'con' → logprob: -2.3792595863342285
    4. 'conn' → logprob: -3.0042595863342285
    5. 'pc' → logprob: -3.3792595863342285
    6. ' connections' → logprob: -3.7542595863342285
    7. 'sessions' → logprob: -4.1292595863342285
    8. ' pcs' → logprob: -4.6292595863342285
    9. 'usage' → logprob: -4.7542595863342285
    10. 'pcs' → logprob: -4.8792595863342285

Token 607: ' pc' (ID: 18736)
  Prédit: 'connections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'connections' → logprob: -0.3603828251361847
    2. 'pc' → logprob: -2.2353827953338623
    3. 'conn' → logprob: -2.3603827953338623
    4. 'con' → logprob: -2.8603827953338623
    5. '   ' → logprob: -4.735383033752441
    6. 'usage' → logprob: -5.235383033752441
    7. 'sessions' → logprob: -5.360383033752441
    8. ' connections' → logprob: -5.360383033752441
    9. 'pcs' → logprob: -5.485383033752441
    10. 'connexion' → logprob: -6.110383033752441

Token 608: '_login' (ID: 30163)
  Prédit: '_usage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_usage' → logprob: -0.5846129059791565
    2. '_connections' → logprob: -2.2096128463745117
    3. '_conn' → logprob: -2.4596128463745117
    4. '_to' → logprob: -2.5846128463745117
    5. '_states' → logprob: -3.0846128463745117
    6. 's' → logprob: -3.4596128463745117
    7. '_sessions' → logprob: -3.7096128463745117
    8. '_inter' → logprob: -3.9596128463745117
    9. '_con' → logprob: -5.084612846374512
    10. '_dict' → logprob: -5.084612846374512

Token 609: ' :' (ID: 712)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.23073852062225342
    2. '=' → logprob: -2.355738639831543
    3. 's' → logprob: -3.230738639831543
    4. '_sessions' → logprob: -3.730738639831543
    5. '_times' → logprob: -3.855738639831543
    6. '_in' → logprob: -4.480738639831543
    7. '={}' → logprob: -5.480738639831543
    8. '_status' → logprob: -6.105738639831543
    9. '_states' → logprob: -6.230738639831543
    10. '_inter' → logprob: -6.355738639831543

Token 610: ' key' (ID: 2140)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.0007424455252476037
    2. ' {}' → logprob: -7.625742435455322
    3. 'dict' → logprob: -8.50074291229248
    4. '{' → logprob: -10.62574291229248
    5. 'default' → logprob: -10.87574291229248
    6. ' dict' → logprob: -12.62574291229248
    7. '{}
' → logprob: -13.00074291229248
    8. ' defaultdict' → logprob: -13.62574291229248
    9. '={}' → logprob: -14.75074291229248
    10. '{})' → logprob: -15.37574291229248

Token 611: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3517034947872162
    2. ' =' → logprob: -1.2267035245895386
    3. 's' → logprob: -6.851703643798828
    4. '=int' → logprob: -6.851703643798828
    5. ',' → logprob: -8.101703643798828
    6. '   ' → logprob: -8.851703643798828
    7. '=str' → logprob: -8.976703643798828
    8. '_pc' → logprob: -9.726703643798828
    9. 'pc' → logprob: -9.851703643798828
    10. ':' → logprob: -9.851703643798828

Token 612: ' pc' (ID: 18736)
  Prédit: 'pc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pc' → logprob: -0.17208679020404816
    2. ' pc' → logprob: -2.672086715698242
    3. 'int' → logprob: -3.297086715698242
    4. 'str' → logprob: -4.172086715698242
    5. '(pc' → logprob: -4.172086715698242
    6. 'PC' → logprob: -4.672086715698242
    7. '(int' → logprob: -5.297086715698242
    8. ' int' → logprob: -6.172086715698242
    9. ' PC' → logprob: -6.922086715698242
    10. ' (' → logprob: -7.172086715698242

Token 613: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3327820897102356
    2. '_id' → logprob: -1.4577820301055908
    3. '_' → logprob: -4.33278226852417
    4. '_login' → logprob: -4.45778226852417
    5. '\t' → logprob: -4.58278226852417
    6. '   ' → logprob: -5.70778226852417
    7. ' ,' → logprob: -6.20778226852417
    8. 'id' → logprob: -6.33278226852417
    9. '_ids' → logprob: -6.58278226852417
    10. '_,' → logprob: -6.70778226852417

Token 614: ' value' (ID: 1432)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.5767647624015808
    2. ' value' → logprob: -0.8267647624015808
    3. 'values' → logprob: -8.201765060424805
    4. ' valeur' → logprob: -8.701765060424805
    5. ' values' → logprob: -9.576765060424805
    6. 'val' → logprob: -10.076765060424805
    7. ' ' → logprob: -10.326765060424805
    8. '   ' → logprob: -10.951765060424805
    9. ''value' → logprob: -11.076765060424805
    10. '"value' → logprob: -11.076765060424805

Token 615: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25233691930770874
    2. ' =' → logprob: -1.5023369789123535
    3. ':' → logprob: -8.377336502075195
    4. '=list' → logprob: -9.752336502075195
    5. '=[]' → logprob: -10.127336502075195
    6. '=[' → logprob: -10.627336502075195
    7. '[' → logprob: -11.127336502075195
    8. '=[]
' → logprob: -12.002336502075195
    9. '=None' → logprob: -12.127336502075195
    10. ' :' → logprob: -12.377336502075195

Token 616: ' (' (ID: 350)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.016049502417445183
    2. '{}' → logprob: -4.391049385070801
    3. 'None' → logprob: -5.891049385070801
    4. ' []' → logprob: -8.5160493850708
    5. '[(' → logprob: -8.8910493850708
    6. '(None' → logprob: -9.1410493850708
    7. 'list' → logprob: -9.5160493850708
    8. '[' → logprob: -9.5160493850708
    9. '[]
' → logprob: -10.1410493850708
    10. '(' → logprob: -10.7660493850708

Token 617: 'student' (ID: 22495)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.726983904838562
    2. 'None' → logprob: -0.851983904838562
    3. 'login' → logprob: -3.9769840240478516
    4. 'current' → logprob: -4.101984024047852
    5. 'user' → logprob: -4.476984024047852
    6. ' None' → logprob: -4.601984024047852
    7. 'int' → logprob: -5.226984024047852
    8. 'student' → logprob: -5.726984024047852
    9. 'True' → logprob: -5.851984024047852
    10. ' start' → logprob: -6.101984024047852

Token 618: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08211544901132584
    2. '_id' → logprob: -2.582115411758423
    3. 'id' → logprob: -6.457115650177002
    4. ' ,' → logprob: -6.582115650177002
    5. 'ID' → logprob: -8.582115173339844
    6. ',
' → logprob: -10.832115173339844
    7. ')' → logprob: -11.457115173339844
    8. '_,' → logprob: -11.832115173339844
    9. 's' → logprob: -12.332115173339844
    10. '_ID' → logprob: -12.707115173339844

Token 619: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.8470830321311951
    2. 'login' → logprob: -0.8470830321311951
    3. ' login' → logprob: -2.59708309173584
    4. ' start' → logprob: -2.72208309173584
    5. 'connect' → logprob: -6.47208309173584
    6. 'connexion' → logprob: -8.22208309173584
    7. 'conn' → logprob: -8.72208309173584
    8. ' connect' → logprob: -8.97208309173584
    9. 'time' → logprob: -9.59708309173584
    10. 'connection' → logprob: -9.97208309173584

Token 620: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.011551721952855587
    2. ')' → logprob: -4.511551856994629
    3. 'time' → logprob: -7.886551856994629
    4. ',' → logprob: -9.386551856994629
    5. '_timestamp' → logprob: -10.886551856994629
    6. '_' → logprob: -11.011551856994629
    7. '_t' → logprob: -12.886551856994629
    8. ')
' → logprob: -14.011551856994629
    9. ' time' → logprob: -14.011551856994629
    10. 'Time' → logprob: -14.261551856994629

Token 621: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11862696707248688
    2. ')
' → logprob: -2.2436270713806152
    3. ',' → logprob: -5.493627071380615
    4. 'time' → logprob: -7.493627071380615
    5. ')
' → logprob: -7.743627071380615
    6. '_time' → logprob: -7.993627071380615
    7. '   ' → logprob: -8.743626594543457
    8. '),' → logprob: -10.368626594543457
    9. ')

' → logprob: -10.368626594543457
    10. '       ' → logprob: -10.493626594543457

Token 622: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10010809451341629
    2. '
' → logprob: -3.1001081466674805
    3. '<|end|>' → logprob: -3.2251081466674805
    4. '        
' → logprob: -5.3501081466674805
    5. ')' → logprob: -6.6001081466674805
    6. '   ' → logprob: -7.1001081466674805
    7. ',' → logprob: -7.1001081466674805
    8. '  
' → logprob: -7.2251081466674805
    9. '    
' → logprob: -7.8501081466674805
    10. '\n' → logprob: -8.22510814666748

Token 623: ' pc' (ID: 18736)
  Prédit: 'pc'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pc' (adapté à ' pc') → logprob: -0.28893187642097473
    2. '       ' → logprob: -1.6639318466186523
    3. ' pc' → logprob: -2.9139318466186523
    4. '   ' → logprob: -5.538931846618652
    5. '
' → logprob: -6.413931846618652
    6. '	pc' → logprob: -7.288931846618652
    7. '        
' → logprob: -7.913931846618652
    8. ' ' → logprob: -9.163931846618652
    9. '    ' → logprob: -9.788931846618652
    10. '        ' → logprob: -10.038931846618652

Token 624: '_login' (ID: 30163)
  Prédit: '_login'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_login' → logprob: -0.0008149892091751099
    2. '_' → logprob: -7.750814914703369
    3. '_log' → logprob: -8.500815391540527
    4. '_logging' → logprob: -9.625815391540527
    5. '_logout' → logprob: -10.375815391540527
    6. '_usage' → logprob: -11.125815391540527
    7. ' _' → logprob: -11.625815391540527
    8. '_logged' → logprob: -12.000815391540527
    9. '_Login' → logprob: -12.125815391540527
    10. '_connections' → logprob: -12.250815391540527

Token 625: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16032567620277405
    2. ' =' → logprob: -1.9103256464004517
    3. '={}' → logprob: -9.28532600402832
    4. '={' → logprob: -12.28532600402832
    5. ' ={' → logprob: -14.16032600402832
    6. '[' → logprob: -14.16032600402832
    7. ' ' → logprob: -14.28532600402832
    8. '   ' → logprob: -14.78532600402832
    9. '{}' → logprob: -14.91032600402832
    10. ')' → logprob: -15.16032600402832

Token 626: ' {}
' (ID: 11421)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -3.8889261304575484e-06
    2. 'dict' → logprob: -12.500003814697266
    3. ' {}' → logprob: -17.625003814697266
    4. '{}
' → logprob: -17.875003814697266
    5. '{})' → logprob: -19.125003814697266
    6. '={}' → logprob: -19.500003814697266
    7. '{}

' → logprob: -20.125003814697266
    8. '{' → logprob: -20.125003814697266
    9. '{},' → logprob: -20.625003814697266
    10. '{}\' → logprob: -21.500003814697266

Token 627: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005781257525086403
    2. 'pc' → logprob: -6.130781173706055
    3. 'student' → logprob: -6.880781173706055
    4. '#' → logprob: -7.380781173706055
    5. 'usage' → logprob: -7.505781173706055
    6. '        
' → logprob: -7.755781173706055
    7. 'interval' → logprob: -8.380781173706055
    8. '   ' → logprob: -8.630781173706055
    9. '	' → logprob: -9.130781173706055
    10. 'user' → logprob: -9.880781173706055

Token 628: ' #' (ID: 1069)
  Prédit: 'student'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'student' → logprob: -0.1322268694639206
    2. 'interval' → logprob: -2.3822269439697266
    3. 'usage' → logprob: -4.007226943969727
    4. ' student' → logprob: -5.757226943969727
    5. '#' (adapté à ' #') → logprob: -6.132226943969727
    6. 'stud' → logprob: -6.382226943969727
    7. 'students' → logprob: -6.507226943969727
    8. 'pc' → logprob: -6.757226943969727
    9. ' intervals' → logprob: -7.257226943969727
    10. 'et' → logprob: -7.382226943969727

Token 629: ' Pour' (ID: 13931)
  Prédit: 'student'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'student' → logprob: -0.011899515055119991
    2. 'usage' → logprob: -5.011899471282959
    3. 'interval' → logprob: -5.761899471282959
    4. '#' → logprob: -7.511899471282959
    5. 'user' → logprob: -7.886899471282959
    6. ' student' → logprob: -7.886899471282959
    7. 'students' → logprob: -8.011899948120117
    8. 'stud' → logprob: -8.636899948120117
    9. 'pc' → logprob: -9.636899948120117
    10. 'et' → logprob: -10.261899948120117

Token 630: ' chaque' (ID: 21194)
  Prédit: ' stock'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stock' → logprob: -0.5780061483383179
    2. 'student' → logprob: -1.8280061483383179
    3. 'stock' → logprob: -1.9530061483383179
    4. ' chaque' → logprob: -2.5780062675476074
    5. ' student' → logprob: -3.9530062675476074
    6. 'each' → logprob: -5.078006267547607
    7. ' les' → logprob: -5.328006267547607
    8. ' each' → logprob: -5.703006267547607
    9. ' key' → logprob: -5.953006267547607
    10. 'key' → logprob: -6.078006267547607

Token 631: ' étudiant' (ID: 153135)
  Prédit: 'student'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'student' → logprob: -0.06202224642038345
    2. ' student' → logprob: -3.3120222091674805
    3. 'et' → logprob: -4.9370222091674805
    4. ' étudiant' → logprob: -4.9370222091674805
    5. 'ét' → logprob: -5.3120222091674805
    6. 'ele' → logprob: -6.8120222091674805
    7. 'pc' → logprob: -7.0620222091674805
    8. 'él' → logprob: -7.8120222091674805
    9. 'interval' → logprob: -8.06202220916748
    10. ' pc' → logprob: -8.62452220916748

Token 632: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.17361384630203247
    2. 'usage' → logprob: -3.2986137866973877
    3. 'student' → logprob: -3.4236137866973877
    4. ':' → logprob: -3.6736137866973877
    5. 'interval' → logprob: -3.9236137866973877
    6. ' intervals' → logprob: -4.173614025115967
    7. '       ' → logprob: -4.923614025115967
    8. ' usage' → logprob: -5.798614025115967
    9. '#' → logprob: -5.798614025115967
    10. ' student' → logprob: -6.173614025115967

Token 633: ' une' (ID: 2463)
  Prédit: 'student'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'student' → logprob: -1.1377984285354614
    2. 'interval' → logprob: -1.1377984285354614
    3. '#' → logprob: -1.3877984285354614
    4. 'usage' → logprob: -2.387798309326172
    5. 'students' → logprob: -4.887798309326172
    6. ' intervals' → logprob: -5.887798309326172
    7. 'et' → logprob: -6.637798309326172
    8. ' student' → logprob: -6.887798309326172
    9. 'pc' → logprob: -7.137798309326172
    10. ' #' → logprob: -7.387798309326172

Token 634: ' liste' (ID: 31719)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'default' → logprob: -0.8581863045692444
    2. '{}' → logprob: -1.6081862449645996
    3. 'list' → logprob: -1.7331862449645996
    4. 'dict' → logprob: -2.3581862449645996
    5. '{' → logprob: -2.9831862449645996
    6. '{
' → logprob: -3.6081862449645996
    7. 'interval' → logprob: -4.6081862449646
    8. '[]' → logprob: -5.7331862449646
    9. '#' → logprob: -5.9831862449646
    10. 'liste' → logprob: -5.9831862449646

Token 635: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.5685243606567383
    2. ' =' → logprob: -1.8185243606567383
    3. ' d' → logprob: -2.5685243606567383
    4. '=' → logprob: -2.9435243606567383
    5. '[]' → logprob: -3.3185243606567383
    6. '       ' → logprob: -3.3185243606567383
    7. 'des' → logprob: -4.068524360656738
    8. '_inter' → logprob: -5.068524360656738
    9. 'de' → logprob: -5.193524360656738
    10. '   ' → logprob: -5.443524360656738

Token 636: ''inter' (ID: 55731)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.3737306296825409
    2. 'inter' → logprob: -1.2487306594848633
    3. '(' → logprob: -4.748730659484863
    4. '(interval' → logprob: -4.748730659484863
    5. ' intervals' → logprob: -6.498730659484863
    6. '(inter' → logprob: -6.623730659484863
    7. 'usage' → logprob: -6.748730659484863
    8. ''inter' → logprob: -6.748730659484863
    9. '(t' → logprob: -7.873730659484863
    10. ' (' → logprob: -8.123730659484863

Token 637: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.03931933268904686
    2. 'val' → logprob: -3.9143192768096924
    3. 'vals' → logprob: -4.5393195152282715
    4. 'erv' → logprob: -6.0393195152282715
    5. 'alles' → logprob: -6.2893195152282715
    6. 'vall' → logprob: -7.1643195152282715
    7. '#' → logprob: -7.9143195152282715
    8. '```' → logprob: -8.164319038391113
    9. 'r' → logprob: -8.414319038391113
    10. 'valid' → logprob: -8.664319038391113

Token 638: 'alles' (ID: 28825)
  Prédit: 'alles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'alles' → logprob: -0.005738221574574709
    2. 'al' → logprob: -5.755738258361816
    3. 'ales' → logprob: -7.505738258361816
    4. 'als' → logprob: -7.880738258361816
    5. 'val' → logprob: -8.505738258361816
    6. '```' → logprob: -8.755738258361816
    7. 'alle' → logprob: -9.130738258361816
    8. '   ' → logprob: -9.193238258361816
    9. 'v' → logprob: -9.318238258361816
    10. 'all' → logprob: -9.318238258361816

Token 639: ' cumul' (ID: 163119)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.1764674186706543
    2. '       ' → logprob: -1.6764674186706543
    3. ' intervals' → logprob: -2.3014674186706543
    4. 'usage' → logprob: -2.4264674186706543
    5. '=' → logprob: -3.0514674186706543
    6. 'interval' → logprob: -3.3014674186706543
    7. '[]' → logprob: -3.3014674186706543
    8. '=[]' → logprob: -3.4264674186706543
    9. ' usage' → logprob: -3.6764674186706543
    10. '_usage' → logprob: -3.9264674186706543

Token 640: 'és' (ID: 1756)
  Prédit: 'ut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ut' → logprob: -1.3328217267990112
    2. 'érés' → logprob: -1.3328217267990112
    3. 'utive' → logprob: -2.332821846008301
    4. 'ative' → logprob: -2.457821846008301
    5. 'ée' → logprob: -2.457821846008301
    6. 'és' → logprob: -2.707821846008301
    7. 'atifs' → logprob: -3.457821846008301
    8. 'ér' → logprob: -3.832821846008301
    9. '   ' → logprob: -4.207821846008301
    10. 'érée' → logprob: -4.457821846008301

Token 641: ' sur' (ID: 1512)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -1.1321052312850952
    2. 'd' → logprob: -1.2571052312850952
    3. ' =' → logprob: -2.0071053504943848
    4. 'usage' → logprob: -2.6321053504943848
    5. '       ' → logprob: -3.3821053504943848
    6. '_usage' → logprob: -3.3821053504943848
    7. ' usage' → logprob: -3.8821053504943848
    8. '=' → logprob: -4.132105350494385
    9. 'interval' → logprob: -4.132105350494385
    10. ' intervals' → logprob: -4.382105350494385

Token 642: ' tous' (ID: 10688)
  Prédit: 'which'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'which' → logprob: -1.1746212244033813
    2. '[]' → logprob: -1.4246212244033813
    3. 'l' → logprob: -1.9246212244033813
    4. 'usage' → logprob: -2.924621105194092
    5. 'time' → logprob: -3.049621105194092
    6. 'le' → logprob: -3.549621105194092
    7. 'les' → logprob: -3.674621105194092
    8. 'int' → logprob: -4.424621105194092
    9. 'la' → logprob: -4.424621105194092
    10. ' which' → logprob: -4.424621105194092

Token 643: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.03924735635519028
    2. '       ' → logprob: -3.9142472743988037
    3. ' les' → logprob: -5.164247512817383
    4. '   ' → logprob: -5.664247512817383
    5. 'ses' → logprob: -6.289247512817383
    6. 'leurs' → logprob: -6.289247512817383
    7. 'pcs' → logprob: -6.414247512817383
    8. 'pc' → logprob: -7.164247512817383
    9. ' ses' → logprob: -7.539247512817383
    10. 'le' → logprob: -7.539247512817383

Token 644: ' PCs' (ID: 80763)
  Prédit: 'pcs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pcs' → logprob: -0.31835663318634033
    2. 'pc' → logprob: -1.8183566331863403
    3. 'PC' → logprob: -2.443356513977051
    4. ' pcs' → logprob: -4.693356513977051
    5. ' PCs' → logprob: -5.443356513977051
    6. 'sessions' → logprob: -5.568356513977051
    7. 'PCS' → logprob: -6.818356513977051
    8. ' pc' → logprob: -6.943356513977051
    9. ' PC' → logprob: -7.068356513977051
    10. 'usage' → logprob: -7.443356513977051

Token 645: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.29242101311683655
    2. 'usage' → logprob: -2.1674211025238037
    3. 'student' → logprob: -2.2924211025238037
    4. 'user' → logprob: -4.542420864105225
    5. 'students' → logprob: -4.917420864105225
    6. ' usage' → logprob: -5.042420864105225
    7. ' student' → logprob: -5.792420864105225
    8. 'et' → logprob: -5.917420864105225
    9. ',' → logprob: -6.667420864105225
    10. '        
' → logprob: -6.917420864105225

Token 646: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06033118814229965
    2. 'student' → logprob: -3.310331106185913
    3. 'usage' → logprob: -4.685331344604492
    4. ' student' → logprob: -5.560331344604492
    5. 'user' → logprob: -5.685331344604492
    6. ' usage' → logprob: -6.310331344604492
    7. 'et' → logprob: -7.060331344604492
    8. 'interval' → logprob: -7.435331344604492
    9. ' intervals' → logprob: -7.560331344604492
    10. 'students' → logprob: -8.060331344604492

Token 647: ' student' (ID: 6760)
  Prédit: 'student'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'student' (adapté à ' student') → logprob: -0.2642691135406494
    2. 'usage' → logprob: -2.2642691135406494
    3. '       ' → logprob: -2.3892691135406494
    4. 'user' → logprob: -4.26426887512207
    5. 'students' → logprob: -4.63926887512207
    6. 'interval' → logprob: -5.38926887512207
    7. 'et' → logprob: -6.01426887512207
    8. ' student' → logprob: -6.01426887512207
    9. 'stud' → logprob: -7.13926887512207
    10. ' usage' → logprob: -7.26426887512207

Token 648: '_inter' (ID: 16818)
  Prédit: '_inter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inter' → logprob: -0.23225486278533936
    2. '_usage' → logprob: -1.6072548627853394
    3. '_sessions' → logprob: -5.607254981994629
    4. '_times' → logprob: -6.982254981994629
    5. '_connections' → logprob: -7.482254981994629
    6. '_' → logprob: -7.857254981994629
    7. '_us' → logprob: -8.482254981994629
    8. 'usage' → logprob: -8.732254981994629
    9. ' =' → logprob: -8.732254981994629
    10. '=' → logprob: -8.857254981994629

Token 649: 'vals' (ID: 44567)
  Prédit: 'vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vals' → logprob: -0.05198996514081955
    2. '_inter' → logprob: -3.926990032196045
    3. 'v' → logprob: -4.551990032196045
    4. 'val' → logprob: -4.676990032196045
    5. '_' → logprob: -6.051990032196045
    6. 's' → logprob: -6.551990032196045
    7. 'vel' → logprob: -6.801990032196045
    8. 'interval' → logprob: -7.051990032196045
    9. '_vals' → logprob: -7.051990032196045
    10. '_usage' → logprob: -7.926990032196045

Token 650: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1269427090883255
    2. ' =' → logprob: -2.1269426345825195
    3. '={}' → logprob: -11.25194263458252
    4. 's' → logprob: -14.12694263458252
    5. '={' → logprob: -15.00194263458252
    6. '={}
' → logprob: -15.37694263458252
    7. '=[]' → logprob: -16.376943588256836
    8. ' ' → logprob: -16.501943588256836
    9. '＝' → logprob: -16.876943588256836
    10. '   ' → logprob: -17.126943588256836

Token 651: ' {' (ID: 354)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -6.217951886355877e-05
    2. ' {}' → logprob: -9.750061988830566
    3. 'default' → logprob: -13.000061988830566
    4. 'dict' → logprob: -14.125061988830566
    5. '{})' → logprob: -15.250061988830566
    6. '{}

' → logprob: -15.625061988830566
    7. 'collections' → logprob: -15.875061988830566
    8. '{' → logprob: -16.500062942504883
    9. ' defaultdict' → logprob: -16.750062942504883
    10. '{}
' → logprob: -16.750062942504883

Token 652: 'm' (ID: 76)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.13245713710784912
    2. 'student' → logprob: -2.7574572563171387
    3. 'k' → logprob: -3.1324572563171387
    4. '}' → logprob: -4.882457256317139
    5. 'str' → logprob: -5.257457256317139
    6. '       ' → logprob: -6.757457256317139
    7. ' student' → logprob: -7.507457256317139
    8. 's' → logprob: -7.632457256317139
    9. ' i' → logprob: -7.632457256317139
    10. 'key' → logprob: -7.882457256317139

Token 653: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.038699883967638016
    2. ':i' → logprob: -3.2886998653411865
    3. ':m' → logprob: -8.413700103759766
    4. 'i' → logprob: -8.663700103759766
    5. ' :' → logprob: -9.163700103759766
    6. '+' → logprob: -9.413700103759766
    7. ':{}' → logprob: -11.163700103759766
    8. ':int' → logprob: -11.288700103759766
    9. ':set' → logprob: -11.913700103759766
    10. 'for' → logprob: -12.538700103759766

Token 654: ' []' (ID: 6126)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0016341203590855002
    2. '[]
' → logprob: -7.001634120941162
    3. '[]}' → logprob: -7.251634120941162
    4. '[]

' → logprob: -11.376633644104004
    5. ' []' → logprob: -13.501633644104004
    6. '[' → logprob: -14.876633644104004
    7. '[]>' → logprob: -16.25163459777832
    8. '[]"' → logprob: -16.75163459777832
    9. '[])' → logprob: -18.12663459777832
    10. '   ' → logprob: -18.75163459777832

Token 655: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5759717226028442
    2. ' for' → logprob: -0.8259717226028442
    3. '       ' → logprob: -11.200971603393555
    4. '   ' → logprob: -11.700971603393555
    5. ':' → logprob: -12.200971603393555
    6. '	for' → logprob: -13.575971603393555
    7. ' ' → logprob: -13.950971603393555
    8. '        ' → logprob: -13.950971603393555
    9. '           ' → logprob: -14.700971603393555
    10. ')' → logprob: -14.825971603393555

Token 656: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: 0.0
    2. ' m' → logprob: -18.875
    3. '	m' → logprob: -19.375
    4. 'м' → logprob: -21.375
    5. ' м' → logprob: -24.25
    6. '_m' → logprob: -24.25
    7. 'ｍ' → logprob: -24.625
    8. ')m' → logprob: -24.875
    9. 'م' → logprob: -26.0
    10. 'mmi' → logprob: -26.125

Token 657: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2857219874858856
    2. 'in' → logprob: -1.535722017288208
    3. 'm' → logprob: -3.410722017288208
    4. 'range' → logprob: -9.160721778869629
    5. ' m' → logprob: -9.285721778869629
    6. 'n' → logprob: -13.160721778869629
    7. ' ' → logprob: -13.285721778869629
    8. 'i' → logprob: -13.535721778869629
    9. ' range' → logprob: -13.660721778869629
    10. 'ange' → logprob: -13.785721778869629

Token 658: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -4.56102097814437e-05
    2. ' range' → logprob: -10.000045776367188
    3. 'm' → logprob: -16.500045776367188
    4. '(range' → logprob: -20.750045776367188
    5. '   ' → logprob: -21.375045776367188
    6. '
' → logprob: -22.125045776367188
    7. '	range' → logprob: -22.250045776367188
    8. ' ' → logprob: -22.750045776367188
    9. '  ' → logprob: -23.625045776367188
    10. 'rang' → logprob: -24.125045776367188

Token 659: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0020204742904752493
    2. '(N' → logprob: -6.377020359039307
    3. '(M' → logprob: -8.127020835876465
    4. '1' → logprob: -10.752020835876465
    5. ' (' → logprob: -14.127020835876465
    6. '(m' → logprob: -15.377020835876465
    7. '   ' → logprob: -16.00201988220215
    8. 'N' → logprob: -16.00201988220215
    9. '(n' → logprob: -16.87701988220215
    10. '(
' → logprob: -17.00201988220215

Token 660: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.009707223623991013
    2. 'N' → logprob: -4.759707450866699
    3. 'M' → logprob: -6.884707450866699
    4. '(' → logprob: -9.8847074508667
    5. '   ' → logprob: -11.3847074508667
    6. '(N' → logprob: -13.0097074508667
    7. '(M' → logprob: -13.1347074508667
    8. ' ' → logprob: -14.1347074508667
    9. ' N' → logprob: -15.3847074508667
    10. '0' → logprob: -15.5097074508667

Token 661: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00024751186720095575
    2. ',M' → logprob: -8.875247955322266
    3. ' ,' → logprob: -10.125247955322266
    4. ',N' → logprob: -10.375247955322266
    5. '1' → logprob: -10.375247955322266
    6. ',m' → logprob: -12.375247955322266
    7. ',
' → logprob: -15.125247955322266
    8. '   ' → logprob: -15.125247955322266
    9. ',n' → logprob: -15.750247955322266
    10. ' ' → logprob: -15.750247955322266

Token 662: ' M' (ID: 391)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.25194013118743896
    2. 'M' → logprob: -1.501940131187439
    3. ' N' → logprob: -11.75193977355957
    4. ' M' → logprob: -13.00193977355957
    5. 'm' → logprob: -14.75193977355957
    6. '   ' → logprob: -14.75193977355957
    7. '    ' → logprob: -16.62693977355957
    8. '  ' → logprob: -18.00193977355957
    9. '       ' → logprob: -18.25193977355957
    10. 'n' → logprob: -18.25193977355957

Token 663: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.005931758787482977
    2. ' +' → logprob: -5.130931854248047
    3. ')}' → logprob: -13.005931854248047
    4. '   ' → logprob: -15.130931854248047
    5. ')' → logprob: -15.380931854248047
    6. '1' → logprob: -16.380931854248047
    7. '```' → logprob: -17.380931854248047
    8. '+
' → logprob: -17.505931854248047
    9. ' ' → logprob: -17.755931854248047
    10. '+m' → logprob: -17.880931854248047

Token 664: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0564331205387134e-05
    2. ' ' → logprob: -11.50001049041748
    3. '   ' → logprob: -15.25001049041748
    4. '+' → logprob: -15.62501049041748
    5. '2' → logprob: -17.000011444091797
    6. ')' → logprob: -17.250011444091797
    7. '```' → logprob: -18.625011444091797
    8. '
' → logprob: -18.875011444091797
    9. '    ' → logprob: -19.625011444091797
    10. '01' → logprob: -19.875011444091797

Token 665: ')}

' (ID: 184554)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '}' → logprob: -0.3139457702636719
    2. ')}' → logprob: -1.5639457702636719
    3. ')' → logprob: -2.813945770263672
    4. ' }' → logprob: -9.438945770263672
    5. '})' → logprob: -10.063945770263672
    6. '   ' → logprob: -10.563945770263672
    7. '	' → logprob: -12.188945770263672
    8. ' )' → logprob: -12.563945770263672
    9. '       ' → logprob: -12.813945770263672
    10. ');}' → logprob: -13.438945770263672

Token 666: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0032058770302683115
    2. 'for' → logprob: -6.5032057762146
    3. '        
' → logprob: -7.1282057762146
    4. ' for' → logprob: -7.3782057762146
    5. '   ' → logprob: -8.878206253051758
    6. '
' → logprob: -10.003206253051758
    7. '<|end|>' → logprob: -10.628206253051758
    8. '	for' → logprob: -11.128206253051758
    9. '	   ' → logprob: -11.878206253051758
    10. '		
' → logprob: -12.003206253051758

Token 667: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0026566318701952696
    2. '       ' → logprob: -6.00265645980835
    3. ' for' → logprob: -8.627656936645508
    4. '        
' → logprob: -14.002656936645508
    5. '	for' → logprob: -14.627656936645508
    6. '   ' → logprob: -15.252656936645508
    7. '```' → logprob: -15.877656936645508
    8. '
' → logprob: -16.502656936645508
    9. 'from' → logprob: -17.877656936645508
    10. 'events' → logprob: -18.002656936645508

Token 668: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.664371848164592e-05
    2. '_i' → logprob: -11.875016212463379
    3. '_r' → logprob: -12.000016212463379
    4. ' _' → logprob: -13.500016212463379
    5. '_range' → logprob: -14.375016212463379
    6. '_in' → logprob: -15.375016212463379
    7. '_en' → logprob: -15.625016212463379
    8. '_id' → logprob: -15.875016212463379
    9. '_=' → logprob: -15.875016212463379
    10. '_j' → logprob: -16.375017166137695

Token 669: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.22810491919517517
    2. 'in' → logprob: -1.6031049489974976
    3. 'range' → logprob: -6.228105068206787
    4. 'r' → logprob: -7.478105068206787
    5. ' range' → logprob: -9.853104591369629
    6. ' ' → logprob: -10.228104591369629
    7. ' r' → logprob: -10.478104591369629
    8. 'i' → logprob: -11.603104591369629
    9. '_' → logprob: -12.103104591369629
    10. 'n' → logprob: -12.228104591369629

Token 670: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0007177923689596355
    2. ' range' → logprob: -7.250717639923096
    3. 'r' → logprob: -12.125718116760254
    4. 'rang' → logprob: -14.500718116760254
    5. '(range' → logprob: -15.125718116760254
    6. ')' → logprob: -15.250718116760254
    7. '   ' → logprob: -15.250718116760254
    8. '	range' → logprob: -15.375718116760254
    9. 'ange' → logprob: -15.750718116760254
    10. ' ' → logprob: -15.875718116760254

Token 671: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -7.107425062713446e-06
    2. '(' → logprob: -12.750006675720215
    3. ' (' → logprob: -12.750006675720215
    4. 'r' → logprob: -13.875006675720215
    5. ' r' → logprob: -15.250006675720215
    6. '   ' → logprob: -16.62500762939453
    7. '(range' → logprob: -17.75000762939453
    8. '(re' → logprob: -18.50000762939453
    9. '(int' → logprob: -18.87500762939453
    10. '	r' → logprob: -19.12500762939453

Token 672: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3529503345489502
    2. '):
' → logprob: -1.2279503345489502
    3. ')' → logprob: -5.852950096130371
    4. ',' → logprob: -7.352950096130371
    5. '):
' → logprob: -7.727950096130371
    6. '       ' → logprob: -7.852950096130371
    7. '   ' → logprob: -9.477950096130371
    8. ':' → logprob: -10.352950096130371
    9. ' ):' → logprob: -11.227950096130371
    10. '):

' → logprob: -12.227950096130371

Token 673: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01534503884613514
    2. ' line' → logprob: -4.265345096588135
    3. 'line' → logprob: -7.515345096588135
    4. '	       ' → logprob: -8.265344619750977
    5. '	line' → logprob: -9.640344619750977
    6. ' ligne' → logprob: -10.015344619750977
    7. '		' → logprob: -10.140344619750977
    8. '   ' → logprob: -10.265344619750977
    9. '       ' → logprob: -10.390344619750977
    10. '```' → logprob: -11.015344619750977

Token 674: ' t' (ID: 260)
  Prédit: 'event'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'event' → logprob: -1.337480068206787
    2. 'line' → logprob: -1.462480068206787
    3. ' line' → logprob: -1.837480068206787
    4. ' parts' → logprob: -2.712480068206787
    5. '           ' → logprob: -2.837480068206787
    6. 'parts' → logprob: -2.837480068206787
    7. 'data' → logprob: -3.462480068206787
    8. 'record' → logprob: -3.587480068206787
    9. 'evt' → logprob: -3.587480068206787
    10. ' event' → logprob: -4.087480068206787

Token 675: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7147218585014343
    2. ' =' → logprob: -1.214721918106079
    3. '=' → logprob: -2.714721918106079
    4. ' ,' → logprob: -2.714721918106079
    5. 'okens' → logprob: -2.964721918106079
    6. 'ime' → logprob: -4.5897216796875
    7. '=line' → logprob: -5.5897216796875
    8. '_line' → logprob: -5.9647216796875
    9. 'imestamp' → logprob: -6.0897216796875
    10. 'oken' → logprob: -6.3397216796875

Token 676: ' n' (ID: 297)
  Prédit: 'pc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pc' → logprob: -0.1434851586818695
    2. 'p' → logprob: -2.2684850692749023
    3. 's' → logprob: -4.768485069274902
    4. ' pc' → logprob: -4.893485069274902
    5. 'm' → logprob: -5.393485069274902
    6. 'student' → logprob: -6.018485069274902
    7. 'action' → logprob: -7.018485069274902
    8. 'u' → logprob: -7.143485069274902
    9. 'c' → logprob: -7.268485069274902
    10. 'event' → logprob: -7.393485069274902

Token 677: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001777960715116933
    2. ' ,' → logprob: -9.750177383422852
    3. 'o' → logprob: -10.500177383422852
    4. '_,' → logprob: -10.750177383422852
    5. '_pc' → logprob: -10.875177383422852
    6. 'et' → logprob: -11.750177383422852
    7. 'um' → logprob: -12.000177383422852
    8. '_str' → logprob: -12.000177383422852
    9. 's' → logprob: -12.375177383422852
    10. 'u' → logprob: -12.500177383422852

Token 678: ' m' (ID: 284)
  Prédit: 'pc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pc' → logprob: -0.5251359939575195
    2. 'p' → logprob: -1.5251359939575195
    3. 'a' → logprob: -3.0251359939575195
    4. 'c' → logprob: -3.6501359939575195
    5. 'etat' → logprob: -3.6501359939575195
    6. 'action' → logprob: -4.0251359939575195
    7. 's' → logprob: -4.1501359939575195
    8. 'e' → logprob: -4.2751359939575195
    9. 'm' → logprob: -4.7751359939575195
    10. ' pc' → logprob: -5.2751359939575195

Token 679: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07019306719303131
    2. '=' → logprob: -2.69519305229187
    3. ',' → logprob: -8.44519329071045
    4. ' ' → logprob: -11.19519329071045
    5. '   ' → logprob: -12.07019329071045
    6. ')' → logprob: -12.19519329071045
    7. 't' → logprob: -12.57019329071045
    8. '  ' → logprob: -13.44519329071045
    9. '_' → logprob: -13.69519329071045
    10. '=line' → logprob: -13.82019329071045

Token 680: ' s' (ID: 265)
  Prédit: 'action'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'action' → logprob: -0.36111095547676086
    2. 'a' → logprob: -2.4861109256744385
    3. 'event' → logprob: -2.9861109256744385
    4. 'status' → logprob: -3.3611109256744385
    5. 's' → logprob: -3.4861109256744385
    6. 'state' → logprob: -4.111111164093018
    7. 'c' → logprob: -4.236111164093018
    8. 'etat' → logprob: -4.236111164093018
    9. 'e' → logprob: -4.361111164093018
    10. ' action' → logprob: -4.611111164093018

Token 681: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.21161913871765137
    2. 't' → logprob: -1.9616191387176514
    3. '=' → logprob: -3.2116191387176514
    4. ',' → logprob: -5.4616193771362305
    5. 'tat' → logprob: -6.5866193771362305
    6. 'tr' → logprob: -6.9616193771362305
    7. 'tring' → logprob: -7.3366193771362305
    8. 'ession' → logprob: -8.46161937713623
    9. 'etat' → logprob: -8.71161937713623
    10. 'ate' → logprob: -8.71161937713623

Token 682: ' map' (ID: 4014)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.48340028524398804
    2. 'map' → logprob: -0.983400285243988
    3. 'sys' → logprob: -4.983400344848633
    4. ' map' → logprob: -6.608400344848633
    5. ' input' → logprob: -6.983400344848633
    6. ' sys' → logprob: -9.233400344848633
    7. 'line' → logprob: -10.358400344848633
    8. '(input' → logprob: -11.983400344848633
    9. '[input' → logprob: -11.983400344848633
    10. 'list' → logprob: -12.733400344848633

Token 683: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.015260986983776093
    2. '(str' → logprob: -4.265261173248291
    3. 'int' → logprob: -7.515261173248291
    4. 'str' → logprob: -7.515261173248291
    5. '=int' → logprob: -12.765260696411133
    6. '[int' → logprob: -13.265260696411133
    7. ',int' → logprob: -13.390260696411133
    8. ' int' → logprob: -14.515260696411133
    9. '=str' → logprob: -15.515260696411133
    10. ' str' → logprob: -15.890260696411133

Token 684: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.6159521341323853
    2. '(input' → logprob: -1.3659521341323853
    3. ',' → logprob: -1.7409521341323853
    4. '(sys' → logprob: -3.6159520149230957
    5. ')' → logprob: -7.365952014923096
    6. 'sys' → logprob: -7.615952014923096
    7. 'input' → logprob: -7.865952014923096
    8. '(line' → logprob: -8.490952491760254
    9. ',(' → logprob: -8.865952491760254
    10. '(' → logprob: -8.865952491760254

Token 685: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.04877312481403351
    2. 'sys' → logprob: -3.0487730503082275
    3. ' input' → logprob: -8.673772811889648
    4. ' sys' → logprob: -11.423772811889648
    5. ')' → logprob: -13.423772811889648
    6. '(input' → logprob: -13.798772811889648
    7. 'line' → logprob: -14.423772811889648
    8. 'map' → logprob: -15.548772811889648
    9. '(sys' → logprob: -15.548772811889648
    10. '[input' → logprob: -16.17377281188965

Token 686: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -4.36574100604048e-06
    2. '()' → logprob: -12.375004768371582
    3. ' ().' → logprob: -17.375003814697266
    4. '(' → logprob: -17.625003814697266
    5. ')' → logprob: -18.250003814697266
    6. '()
' → logprob: -18.500003814697266
    7. '())' → logprob: -18.500003814697266
    8. 's' → logprob: -19.250003814697266
    9. '.strip' → logprob: -19.625003814697266
    10. '.split' → logprob: -19.750003814697266

Token 687: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.5759606957435608
    2. 'strip' → logprob: -0.8259606957435608
    3. 'rstrip' → logprob: -11.200961112976074
    4. ' strip' → logprob: -12.450961112976074
    5. ' split' → logprob: -12.950961112976074
    6. '().' → logprob: -13.825961112976074
    7. '(split' → logprob: -15.950961112976074
    8. '.strip' → logprob: -16.200960159301758
    9. '(strip' → logprob: -16.450960159301758
    10. 'read' → logprob: -17.075960159301758

Token 688: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04402853175997734
    2. '())' → logprob: -3.1690285205841064
    3. '()' → logprob: -7.9190287590026855
    4. ')
' → logprob: -8.044028282165527
    5. '(' → logprob: -8.794028282165527
    6. '())
' → logprob: -9.294028282165527
    7. ' )' → logprob: -10.544028282165527
    8. ')
' → logprob: -10.669028282165527
    9. ')`' → logprob: -10.794028282165527
    10. '   ' → logprob: -11.919028282165527

Token 689: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005160108208656311
    2. '       ' → logprob: -6.005160331726074
    3. ' if' → logprob: -7.130160331726074
    4. '		' → logprob: -7.380160331726074
    5. '	       ' → logprob: -8.380160331726074
    6. '
' → logprob: -8.630160331726074
    7. '            
' → logprob: -8.630160331726074
    8. ')' → logprob: -9.005160331726074
    9. 'if' → logprob: -9.130160331726074
    10. '<|end|>' → logprob: -9.505160331726074

Token 690: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5054566264152527
    2. 'if' (adapté à ' if') → logprob: -1.5054566860198975
    3. ' if' → logprob: -1.7554566860198975
    4. '       ' → logprob: -6.255456447601318
    5. '   ' → logprob: -9.380456924438477
    6. '	if' → logprob: -11.630456924438477
    7. '#' → logprob: -13.130456924438477
    8. '	       ' → logprob: -13.380456924438477
    9. '	   ' → logprob: -13.755456924438477
    10. '            
' → logprob: -13.755456924438477

Token 691: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.04859759286046028
    2. ' s' → logprob: -3.048597574234009
    3. '   ' → logprob: -12.29859733581543
    4. ' ' → logprob: -13.29859733581543
    5. '     ' → logprob: -13.79859733581543
    6. '(s' → logprob: -14.29859733581543
    7. '           ' → logprob: -14.42359733581543
    8. '    ' → logprob: -14.54859733581543
    9. '	s' → logprob: -15.04859733581543
    10. '       ' → logprob: -15.42359733581543

Token 692: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.34851542115211487
    2. ' ==' → logprob: -1.2235153913497925
    3. ':' → logprob: -9.973515510559082
    4. '=' → logprob: -12.098515510559082
    5. '==
' → logprob: -12.348515510559082
    6. '==-' → logprob: -12.348515510559082
    7. ']==' → logprob: -12.723515510559082
    8. ')==' → logprob: -12.848515510559082
    9. ' ' → logprob: -13.973515510559082
    10. '===' → logprob: -14.098515510559082

Token 693: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02063099667429924
    2. '0' → logprob: -4.145630836486816
    3. ' ' → logprob: -5.395630836486816
    4. '2' → logprob: -10.895630836486816
    5. '-' → logprob: -11.395630836486816
    6. '   ' → logprob: -11.520630836486816
    7. '+' → logprob: -13.020630836486816
    8. '3' → logprob: -13.145630836486816
    9. ' -' → logprob: -13.958130836486816
    10. '4' → logprob: -14.145630836486816

Token 694: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.020601917058229446
    2. '0' → logprob: -3.895601987838745
    3. ' ' → logprob: -10.645602226257324
    4. '-' → logprob: -11.270602226257324
    5. '+' → logprob: -11.520602226257324
    6. '2' → logprob: -11.645602226257324
    7. ''' → logprob: -14.395602226257324
    8. '3' → logprob: -14.395602226257324
    9. '100' → logprob: -14.520602226257324
    10. '   ' → logprob: -14.895602226257324

Token 695: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2280280441045761
    2. ':
' → logprob: -1.6030280590057373
    3. '           ' → logprob: -6.478027820587158
    4. ' and' → logprob: -7.353027820587158
    5. ' :' → logprob: -9.478028297424316
    6. '   ' → logprob: -9.478028297424316
    7. ' :
' → logprob: -9.978028297424316
    8. ':
' → logprob: -10.228028297424316
    9. '       ' → logprob: -10.353028297424316
    10. ':#' → logprob: -10.353028297424316

Token 696: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4489200711250305
    2. '               ' → logprob: -1.0739200115203857
    3. ':' → logprob: -5.198920249938965
    4. ':
' → logprob: -5.448920249938965
    5. '       ' → logprob: -5.573920249938965
    6. '#' → logprob: -6.448920249938965
    7. '   ' → logprob: -6.448920249938965
    8. ' if' → logprob: -6.573920249938965
    9. ' #' → logprob: -6.823920249938965
    10. 'if' → logprob: -8.698920249938965

Token 697: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06682295352220535
    2. ' if' → logprob: -3.1918230056762695
    3. '               ' → logprob: -4.0668230056762695
    4. 'if' → logprob: -5.9418230056762695
    5. 'pc' → logprob: -7.1918230056762695
    6. ' pc' → logprob: -7.1918230056762695
    7. '   ' → logprob: -7.5668230056762695
    8. '#' (adapté à ' #') → logprob: -7.5668230056762695
    9. '       ' → logprob: -7.6918230056762695
    10. ' #' → logprob: -7.9418230056762695

Token 698: ' login' (ID: 9464)
  Prédit: 'pc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pc' → logprob: -0.07122558355331421
    2. 'if' → logprob: -2.946225643157959
    3. '#' → logprob: -4.196225643157959
    4. '               ' → logprob: -7.821225643157959
    5. '           ' → logprob: -7.946225643157959
    6. ' pc' → logprob: -8.3212251663208
    7. ' if' → logprob: -9.4462251663208
    8. '   ' → logprob: -10.5712251663208
    9. '                   ' → logprob: -11.3212251663208
    10. ' #' → logprob: -11.8212251663208

Token 699: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.45900118350982666
    2. '           ' → logprob: -1.8340011835098267
    3. ':
' → logprob: -2.584001064300537
    4. '                   ' → logprob: -2.959001064300537
    5. '
' → logprob: -3.084001064300537
    6. '       ' → logprob: -4.459001064300537
    7. '   ' → logprob: -5.084001064300537
    8. '                
' → logprob: -5.209001064300537
    9. '            
' → logprob: -5.959001064300537
    10. ' :
' → logprob: -6.334001064300537

Token 700: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.021544350311160088
    2. '                   ' → logprob: -4.521544456481934
    3. '           ' → logprob: -5.146544456481934
    4. '       ' → logprob: -6.271544456481934
    5. ' if' → logprob: -7.521544456481934
    6. '   ' → logprob: -7.646544456481934
    7. ':
' → logprob: -7.771544456481934
    8. '                
' → logprob: -7.896544456481934
    9. '                ' → logprob: -8.271544456481934
    10. ':' → logprob: -9.521544456481934

Token 701: ' pc' (ID: 18736)
  Prédit: 'pc'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pc' (adapté à ' pc') → logprob: -0.09432206302881241
    2. 'if' → logprob: -3.2193219661712646
    3. '               ' → logprob: -4.094322204589844
    4. '           ' → logprob: -4.219322204589844
    5. ' pc' → logprob: -4.469322204589844
    6. ' if' → logprob: -5.094322204589844
    7. '   ' → logprob: -7.594322204589844
    8. '                   ' → logprob: -7.969322204589844
    9. '	pc' → logprob: -9.844322204589844
    10. '       ' → logprob: -10.344322204589844

Token 702: '_login' (ID: 30163)
  Prédit: '_login'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_login' → logprob: -0.00015097891446202993
    2. 'login' → logprob: -9.500150680541992
    3. '=' → logprob: -10.750150680541992
    4. '_' → logprob: -10.875150680541992
    5. ' =' → logprob: -11.125150680541992
    6. '_log' → logprob: -11.250150680541992
    7. '=_' → logprob: -13.125150680541992
    8. '_logout' → logprob: -13.625150680541992
    9. '_LOGIN' → logprob: -14.250150680541992
    10. '_lock' → logprob: -14.750150680541992

Token 703: '[n' (ID: 15433)
  Prédit: '[m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[m' → logprob: -0.06263143569231033
    2. '[n' → logprob: -2.812631368637085
    3. '[' → logprob: -7.437631607055664
    4. '.setdefault' → logprob: -10.187631607055664
    5. '[(' → logprob: -10.312631607055664
    6. '[p' → logprob: -13.062631607055664
    7. '[t' → logprob: -14.312631607055664
    8. ' [' → logprob: -14.937631607055664
    9. '[s' → logprob: -15.312631607055664
    10. '[c' → logprob: -15.812631607055664

Token 704: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0002330992283532396
    2. ']=' → logprob: -8.500232696533203
    3. '[n' → logprob: -10.625232696533203
    4. '][' → logprob: -13.250232696533203
    5. ']=(' → logprob: -13.250232696533203
    6. ' ]' → logprob: -13.750232696533203
    7. '[m' → logprob: -15.125232696533203
    8. '[' → logprob: -15.625232696533203
    9. '   ' → logprob: -16.250232696533203
    10. ')' → logprob: -16.750232696533203

Token 705: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.09237176924943924
    2. '[n' → logprob: -2.592371702194214
    3. ' =' → logprob: -4.467371940612793
    4. ']' → logprob: -6.592371940612793
    5. '[' → logprob: -8.342371940612793
    6. ']=' → logprob: -9.092371940612793
    7. '[m' → logprob: -9.217371940612793
    8. '[(' → logprob: -9.842371940612793
    9. '=n' → logprob: -10.842371940612793
    10. '=(' → logprob: -12.592371940612793

Token 706: ' (' (ID: 350)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.0002637199067976326
    2. ' (' → logprob: -8.250264167785645
    3. '(n' → logprob: -13.250264167785645
    4. '(' → logprob: -14.500264167785645
    5. '   ' → logprob: -15.625264167785645
    6. '(s' → logprob: -17.375263214111328
    7. '(t' → logprob: -18.125263214111328
    8. '[m' → logprob: -18.625263214111328
    9. '((' → logprob: -18.875263214111328
    10. 'm' → logprob: -18.875263214111328

Token 707: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -3.128163257315464e-07
    2. ' m' → logprob: -15.125
    3. '(m' → logprob: -20.75
    4. '   ' → logprob: -20.875
    5. '	m' → logprob: -21.125
    6. ')m' → logprob: -21.25
    7. 'м' → logprob: -21.75
    8. 's' → logprob: -22.0
    9. ')' → logprob: -22.75
    10. '_m' → logprob: -23.0

Token 708: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014001218369230628
    2. ',t' → logprob: -9.000140190124512
    3. ' ,' → logprob: -11.250140190124512
    4. 't' → logprob: -12.875140190124512
    5. '‌,' → logprob: -15.000140190124512
    6. ',time' → logprob: -15.875140190124512
    7. ',
' → logprob: -16.750139236450195
    8. ',n' → logprob: -17.000139236450195
    9. 's' → logprob: -17.125139236450195
    10. '	' → logprob: -17.500139236450195

Token 709: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.00038038729690015316
    2. ' t' → logprob: -7.875380516052246
    3. '	t' → logprob: -16.37537956237793
    4. '   ' → logprob: -17.00037956237793
    5. ')t' → logprob: -17.12537956237793
    6. '`t' → logprob: -17.25037956237793
    7. 'time' → logprob: -17.50037956237793
    8. ')' → logprob: -18.12537956237793
    9. ' ' → logprob: -19.25037956237793
    10. '_t' → logprob: -19.25037956237793

Token 710: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04865708574652672
    2. ')
' → logprob: -3.048657178878784
    3. ')
' → logprob: -9.923657417297363
    4. '               ' → logprob: -11.548657417297363
    5. '           ' → logprob: -12.423657417297363
    6. ')

' → logprob: -12.548657417297363
    7. '       ' → logprob: -13.298657417297363
    8. ' )' → logprob: -13.673657417297363
    9. '   ' → logprob: -14.798657417297363
    10. ' )
' → logprob: -16.048656463623047

Token 711: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006575515493750572
    2. '       ' → logprob: -5.506575584411621
    3. 'else' → logprob: -6.631575584411621
    4. '
' → logprob: -7.381575584411621
    5. 'elif' → logprob: -8.756575584411621
    6. '               ' → logprob: -9.131575584411621
    7. ' else' → logprob: -9.256575584411621
    8. '   ' → logprob: -9.506575584411621
    9. '		' → logprob: -10.381575584411621
    10. '	       ' → logprob: -10.506575584411621

Token 712: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10517376661300659
    2. 'else' (adapté à ' else') → logprob: -2.6051738262176514
    3. '           ' → logprob: -3.8551738262176514
    4. ' else' → logprob: -5.480173587799072
    5. 'elif' → logprob: -7.730173587799072
    6. '   ' → logprob: -9.10517406463623
    7. ' elif' → logprob: -10.85517406463623
    8. '	else' → logprob: -11.10517406463623
    9. '               ' → logprob: -12.48017406463623
    10. '	' → logprob: -12.85517406463623

Token 713: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.05176088213920593
    2. ':' → logprob: -3.3017609119415283
    3. '               ' → logprob: -4.301760673522949
    4. ':
' → logprob: -10.42676067352295
    5. ' :
' → logprob: -10.55176067352295
    6. '           ' → logprob: -11.67676067352295
    7. '                   ' → logprob: -12.17676067352295
    8. '   ' → logprob: -12.67676067352295
    9. '):
' → logprob: -13.55176067352295
    10. 'if' → logprob: -13.80176067352295

Token 714: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.07446970790624619
    2. '           ' → logprob: -3.449469804763794
    3. 'if' → logprob: -4.324469566345215
    4. '#' → logprob: -4.324469566345215
    5. ' if' → logprob: -4.449469566345215
    6. ' #' → logprob: -6.574469566345215
    7. '       ' → logprob: -8.699469566345215
    8. '   ' → logprob: -8.824469566345215
    9. ' ' → logprob: -10.449469566345215
    10. '	       ' → logprob: -11.324469566345215

Token 715: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.45479968190193176
    2. ' if' → logprob: -1.7047996520996094
    3. '               ' → logprob: -2.3297996520996094
    4. '#' (adapté à ' #') → logprob: -3.3297996520996094
    5. '           ' → logprob: -3.3297996520996094
    6. 'student' → logprob: -5.579799652099609
    7. '       ' → logprob: -5.704799652099609
    8. ' #' → logprob: -6.079799652099609
    9. 'start' → logprob: -6.579799652099609
    10. ' student' → logprob: -7.079799652099609

Token 716: ' logout' (ID: 43634)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8852256536483765
    2. 'logout' → logprob: -1.0102256536483765
    3. ' logout' → logprob: -2.135225772857666
    4. 'if' → logprob: -3.135225772857666
    5. ' #' → logprob: -3.260225772857666
    6. ' if' → logprob: -3.885225772857666
    7. 'dé' → logprob: -7.635225772857666
    8. 'de' → logprob: -7.760225772857666
    9. 'log' → logprob: -8.010225296020508
    10. '       ' → logprob: -8.135225296020508

Token 717: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.8322387933731079
    2. '           ' → logprob: -1.457238793373108
    3. ' if' → logprob: -1.832238793373108
    4. 'if' → logprob: -1.957238793373108
    5. '       ' → logprob: -3.5822386741638184
    6. '
' → logprob: -7.457238674163818
    7. '   ' → logprob: -7.457238674163818
    8. ',' → logprob: -7.957238674163818
    9. '                   ' → logprob: -8.707239151000977
    10. ')' → logprob: -8.707239151000977

Token 718: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.23643821477890015
    2. ' if' → logprob: -2.236438274383545
    3. '               ' → logprob: -2.611438274383545
    4. 'if' → logprob: -3.736438274383545
    5. '       ' → logprob: -5.486438274383545
    6. '
' → logprob: -6.486438274383545
    7. '            
' → logprob: -8.111437797546387
    8. '   ' → logprob: -9.236437797546387
    9. ',' → logprob: -9.736437797546387
    10. '        
' → logprob: -9.986437797546387

Token 719: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.07106092572212219
    2. 'student' → logprob: -2.8210608959198
    3. '               ' → logprob: -5.696061134338379
    4. ' if' → logprob: -6.071061134338379
    5. 'start' → logprob: -6.571061134338379
    6. 'sm' → logprob: -7.696061134338379
    7. '           ' → logprob: -7.821061134338379
    8. 'login' → logprob: -7.946061134338379
    9. 'm' → logprob: -8.571061134338379
    10. '(student' → logprob: -8.946061134338379

Token 720: ' récupérer' (ID: 120406)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.11934906244277954
    2. ' if' → logprob: -2.9943490028381348
    3. 'student' → logprob: -2.9943490028381348
    4. 'pc' → logprob: -5.494349002838135
    5. '               ' → logprob: -5.744349002838135
    6. ' student' → logprob: -6.744349002838135
    7. 'm' → logprob: -7.244349002838135
    8. 'si' → logprob: -7.244349002838135
    9. '           ' → logprob: -7.619349002838135
    10. 's' → logprob: -7.994349002838135

Token 721: ' l' (ID: 305)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.7755298614501953
    2. 'l' → logprob: -1.7755298614501953
    3. 'student' → logprob: -2.0255298614501953
    4. '(m' → logprob: -2.5255298614501953
    5. '(student' → logprob: -3.0255298614501953
    6. 'if' → logprob: -3.7755298614501953
    7. 'pc' → logprob: -4.150529861450195
    8. '       ' → logprob: -4.400529861450195
    9. 'la' → logprob: -4.650529861450195
    10. '   ' → logprob: -4.775529861450195

Token 722: ''ét' (ID: 23771)
  Prédit: 'student'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'student' → logprob: -0.9251328110694885
    2. ' if' → logprob: -1.5501327514648438
    3. ' student' → logprob: -1.9251327514648438
    4. 'if' → logprob: -1.9251327514648438
    5. '(student' → logprob: -3.6751327514648438
    6. 'pc' → logprob: -3.9251327514648438
    7. ' pc' → logprob: -4.050132751464844
    8. ' étudiant' → logprob: -4.550132751464844
    9. 'm' → logprob: -5.050132751464844
    10. ' m' → logprob: -5.675132751464844

Token 723: 'udiant' (ID: 101120)
  Prédit: 'udiant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'udiant' → logprob: -0.0031484849750995636
    2. 'u' → logprob: -7.003148555755615
    3. 'ud' → logprob: -7.128148555755615
    4. 'udent' → logprob: -7.753148555755615
    5. 'udiante' → logprob: -8.253148078918457
    6. '(student' → logprob: -8.503148078918457
    7. 'udi' → logprob: -9.128148078918457
    8. '   ' → logprob: -9.253148078918457
    9. 'udia' → logprob: -9.878148078918457
    10. '(' → logprob: -10.003148078918457

Token 724: ' qui' (ID: 2780)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18712875247001648
    2. 'et' → logprob: -2.812128782272339
    3. ',m' → logprob: -3.312128782272339
    4. 'm' → logprob: -3.812128782272339
    5. 'student' → logprob: -3.937128782272339
    6. 'if' → logprob: -4.31212854385376
    7. 'connected' → logprob: -5.81212854385376
    8. 'ét' → logprob: -6.31212854385376
    9. 'assoc' → logprob: -6.43712854385376
    10. 'current' → logprob: -6.56212854385376

Token 725: ' était' (ID: 16647)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.1236891746520996
    2. 'avait' → logprob: -1.6236891746520996
    3. 'occup' → logprob: -2.2486891746520996
    4. 'ét' → logprob: -2.3736891746520996
    5. 'est' → logprob: -2.4986891746520996
    6. 's' → logprob: -2.8736891746520996
    7. ' a' → logprob: -2.8736891746520996
    8. 'util' → logprob: -3.4986891746520996
    9. ' s' → logprob: -4.7486891746521
    10. ' était' → logprob: -4.9986891746521

Token 726: ' connecté' (ID: 167973)
  Prédit: 'connect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'connect' → logprob: -0.15021513402462006
    2. 'ass' → logprob: -3.1502151489257812
    3. ' connecté' → logprob: -3.5252151489257812
    4. 'pc' → logprob: -3.6502151489257812
    5. 'lié' → logprob: -3.9002151489257812
    6. 'logged' → logprob: -4.400215148925781
    7. 'connected' → logprob: -6.650215148925781
    8. 'sur' → logprob: -6.900215148925781
    9. ' logged' → logprob: -7.150215148925781
    10. 'en' → logprob: -7.275215148925781

Token 727: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.730904757976532
    2. '               ' → logprob: -1.3559048175811768
    3. '(m' → logprob: -2.9809048175811768
    4. 'et' → logprob: -3.1059048175811768
    5. 'sur' → logprob: -3.4809048175811768
    6. '           ' → logprob: -3.9809048175811768
    7. 'if' → logprob: -4.355904579162598
    8. 'prev' → logprob: -4.605904579162598
    9. 'pc' → logprob: -4.605904579162598
    10. 'à' → logprob: -4.855904579162598

Token 728: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5556367635726929
    2. ',' → logprob: -1.0556367635726929
    3. ',m' → logprob: -3.1806368827819824
    4. '(m' → logprob: -3.6806368827819824
    5. 'm' → logprob: -5.055636882781982
    6. ' (' → logprob: -6.430636882781982
    7. ' m' → logprob: -7.305636882781982
    8. 'prev' → logprob: -7.430636882781982
    9. '           ' → logprob: -7.555636882781982
    10. ' if' → logprob: -7.805636882781982

Token 729: ' logged' (ID: 25442)
  Prédit: 'student'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'student' → logprob: -0.3051476776599884
    2. 'if' → logprob: -1.555147647857666
    3. 'm' → logprob: -4.555147647857666
    4. '               ' → logprob: -4.805147647857666
    5. 'stud' → logprob: -4.805147647857666
    6. 'et' → logprob: -4.930147647857666
    7. ' if' → logprob: -5.555147647857666
    8. ' student' → logprob: -6.430147647857666
    9. 'prev' → logprob: -6.555147647857666
    10. '           ' → logprob: -6.680147647857666

Token 730: '_student' (ID: 84027)
  Prédit: '_pc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pc' → logprob: -0.47857117652893066
    2. ' =' → logprob: -1.8535711765289307
    3. '_in' → logprob: -2.4785711765289307
    4. '_m' → logprob: -2.4785711765289307
    5. '=' → logprob: -3.7285711765289307
    6. '_student' → logprob: -4.103570938110352
    7. 'in' → logprob: -4.728570938110352
    8. 'pc' → logprob: -5.603570938110352
    9. '_user' → logprob: -6.853570938110352
    10. '_st' → logprob: -7.853570938110352

Token 731: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002655079588294029
    2. '=' → logprob: -8.625265121459961
    3. ' =' → logprob: -9.875265121459961
    4. ',m' → logprob: -10.375265121459961
    5. ',n' → logprob: -13.375265121459961
    6. ' ,' → logprob: -14.000265121459961
    7. '=m' → logprob: -14.625265121459961
    8. 'm' → logprob: -16.75026512145996
    9. ',current' → logprob: -17.12526512145996
    10. ',p' → logprob: -17.37526512145996

Token 732: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.0178851131349802
    2. 'login' → logprob: -4.392885208129883
    3. ' start' → logprob: -5.267885208129883
    4. 'logged' → logprob: -9.142885208129883
    5. ' login' → logprob: -9.642885208129883
    6. 't' → logprob: -11.642885208129883
    7. 'log' → logprob: -12.017885208129883
    8. 'connected' → logprob: -12.767885208129883
    9. 'logout' → logprob: -12.767885208129883
    10. 'begin' → logprob: -13.142885208129883

Token 733: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.004919685423374176
    2. '_' → logprob: -6.004919528961182
    3. '_t' → logprob: -6.379919528961182
    4. 'time' → logprob: -8.12992000579834
    5. ',' → logprob: -8.37992000579834
    6. '=' → logprob: -9.62992000579834
    7. 't' → logprob: -9.87992000579834
    8. ' =' → logprob: -10.12992000579834
    9. ',_' → logprob: -10.12992000579834
    10. ')' → logprob: -12.00492000579834

Token 734: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25192946195602417
    2. ' =' → logprob: -1.501929521560669
    3. ' ' → logprob: -15.87692928314209
    4. '   ' → logprob: -16.001930236816406
    5. ',' → logprob: -16.251930236816406
    6. '	' → logprob: -17.001930236816406
    7. ')' → logprob: -17.001930236816406
    8. '=user' → logprob: -17.876930236816406
    9. ')=' → logprob: -18.251930236816406
    10. '  ' → logprob: -18.626930236816406

Token 735: ' pc' (ID: 18736)
  Prédit: 'pc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pc' → logprob: -0.38688185811042786
    2. ' pc' → logprob: -1.1368818283081055
    3. '	pc' → logprob: -12.011881828308105
    4. '(pc' → logprob: -13.386881828308105
    5. '_pc' → logprob: -13.636881828308105
    6. '   ' → logprob: -13.886881828308105
    7. '           ' → logprob: -15.386881828308105
    8. ' ' → logprob: -15.511881828308105
    9. '.pc' → logprob: -15.636881828308105
    10. ' PC' → logprob: -16.261882781982422

Token 736: '_login' (ID: 30163)
  Prédit: '_login'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_login' → logprob: -0.0035903332754969597
    2. 'login' → logprob: -5.753590106964111
    3. 'pc' → logprob: -8.12859058380127
    4. 'Login' → logprob: -10.37859058380127
    5. ' pc' → logprob: -11.37859058380127
    6. 'in' → logprob: -11.50359058380127
    7. '_log' → logprob: -11.50359058380127
    8. '_LOGIN' → logprob: -11.62859058380127
    9. '_pc' → logprob: -11.75359058380127
    10. ' login' → logprob: -12.12859058380127

Token 737: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -0.12770280241966248
    2. '[n' → logprob: -2.1277027130126953
    3. 'pop' → logprob: -7.627702713012695
    4. 'n' → logprob: -8.752702713012695
    5. '.get' → logprob: -10.127702713012695
    6. ' =' → logprob: -10.502702713012695
    7. '=n' → logprob: -11.127702713012695
    8. '.' → logprob: -11.252702713012695
    9. '=' → logprob: -11.252702713012695
    10. '   ' → logprob: -11.502702713012695

Token 738: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.5928495486150496e-05
    2. 'n' → logprob: -11.375016212463379
    3. '[n' → logprob: -12.875016212463379
    4. '(' → logprob: -13.750016212463379
    5. ' (' → logprob: -14.500016212463379
    6. '(
' → logprob: -15.875016212463379
    7. ' n' → logprob: -17.500015258789062
    8. '	n' → logprob: -17.625015258789062
    9. ')n' → logprob: -18.875015258789062
    10. '   ' → logprob: -19.250015258789062

Token 739: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.5861724831629544e-05
    2. ')
' → logprob: -10.000056266784668
    3. ',' → logprob: -12.875056266784668
    4. ' )' → logprob: -13.250056266784668
    5. ')
' → logprob: -13.500056266784668
    6. '       ' → logprob: -13.625056266784668
    7. '           ' → logprob: -13.750056266784668
    8. '               ' → logprob: -13.875056266784668
    9. '   ' → logprob: -14.500056266784668
    10. ')[' → logprob: -14.750056266784668

Token 740: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5639355778694153
    2. '       ' → logprob: -1.0639355182647705
    3. 'interval' → logprob: -3.0639355182647705
    4. 'student' → logprob: -3.9389355182647705
    5. '           ' → logprob: -5.56393575668335
    6. ' student' → logprob: -5.93893575668335
    7. '                
' → logprob: -5.93893575668335
    8. '
' → logprob: -6.06393575668335
    9. ',' → logprob: -6.06393575668335
    10. '        
' → logprob: -7.06393575668335

Token 741: ' #' (ID: 1069)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.09195668995380402
    2. 'student' → logprob: -2.716956615447998
    3. '               ' → logprob: -4.091956615447998
    4. ' interval' → logprob: -6.341956615447998
    5. 'new' → logprob: -7.341956615447998
    6. 'inter' → logprob: -7.341956615447998
    7. 'current' → logprob: -7.466956615447998
    8. '#' (adapté à ' #') → logprob: -7.966956615447998
    9. ' student' → logprob: -8.091957092285156
    10. 'end' → logprob: -8.216957092285156

Token 742: ' historique' (ID: 87461)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.32736772298812866
    2. 'student' → logprob: -1.3273677825927734
    3. 'end' → logprob: -5.202367782592773
    4. '#' → logprob: -5.202367782592773
    5. 'new' → logprob: -7.202367782592773
    6. '               ' → logprob: -7.202367782592773
    7. 'if' → logprob: -7.702367782592773
    8. 'current' → logprob: -8.452367782592773
    9. 'inter' → logprob: -8.452367782592773
    10. 'start' → logprob: -9.202367782592773

Token 743: ' de' (ID: 334)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.07172800600528717
    2. 'student' → logprob: -2.946727991104126
    3. ' =' → logprob: -5.196728229522705
    4. ' student' → logprob: -5.446728229522705
    5. 'interval' → logprob: -5.571728229522705
    6. '(student' → logprob: -6.821728229522705
    7. '=' → logprob: -7.446728229522705
    8. '       ' → logprob: -8.071727752685547
    9. ' intervals' → logprob: -8.696727752685547
    10. ',' → logprob: -8.821727752685547

Token 744: ' cet' (ID: 19505)
  Prédit: 'student'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'student' → logprob: -0.023601820692420006
    2. 'l' → logprob: -4.89860200881958
    3. ' student' → logprob: -5.27360200881958
    4. 'interval' → logprob: -5.39860200881958
    5. 'connexion' → logprob: -6.27360200881958
    6. 'connection' → logprob: -6.52360200881958
    7. '(student' → logprob: -7.27360200881958
    8. 'usage' → logprob: -7.64860200881958
    9. 'conn' → logprob: -7.77360200881958
    10. 'con' → logprob: -8.023601531982422

Token 745: ' étudiant' (ID: 153135)
  Prédit: ' étudiant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' étudiant' → logprob: -0.7336627840995789
    2. 'student' → logprob: -1.6086628437042236
    3. 'ét' → logprob: -1.7336628437042236
    4. 'interval' → logprob: -2.7336628437042236
    5. ' student' → logprob: -3.3586628437042236
    6. 'él' → logprob: -4.8586626052856445
    7. 'et' → logprob: -5.1086626052856445
    8. ' él' → logprob: -5.3586626052856445
    9. 'inter' → logprob: -6.1086626052856445
    10. 'élé' → logprob: -6.2336626052856445

Token 746: ' :' (ID: 712)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.06630375981330872
    2. 'student' → logprob: -2.8163037300109863
    3. ' student' → logprob: -6.066303730010986
    4. 'interval' → logprob: -7.066303730010986
    5. '(student' → logprob: -8.066304206848145
    6. ',' → logprob: -8.566304206848145
    7. '.append' → logprob: -9.066304206848145
    8. ' =' → logprob: -9.191304206848145
    9. '@student' → logprob: -9.441304206848145
    10. 'user' → logprob: -9.566304206848145

Token 747: ' ajouter' (ID: 78457)
  Prédit: 'student'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'student' → logprob: -0.007566287647932768
    2. 'interval' → logprob: -5.132566452026367
    3. '               ' → logprob: -7.007566452026367
    4. ' student' → logprob: -7.382566452026367
    5. 'bis' → logprob: -10.257566452026367
    6. 'students' → logprob: -10.882566452026367
    7. 'start' → logprob: -11.507566452026367
    8. 'inter' → logprob: -12.132566452026367
    9. ' intervals' → logprob: -12.132566452026367
    10. '           ' → logprob: -12.132566452026367

Token 748: ' interval' (ID: 17116)
  Prédit: '(student'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(student' → logprob: -0.14547616243362427
    2. ' (' → logprob: -2.0204761028289795
    3. '(start' → logprob: -6.395476341247559
    4. '(s' → logprob: -8.270476341247559
    5. '(' → logprob: -8.395476341247559
    6. '(interval' → logprob: -8.895476341247559
    7. '((' → logprob: -9.145476341247559
    8. '(st' → logprob: -9.270476341247559
    9. '(m' → logprob: -9.770476341247559
    10. 'student' → logprob: -9.770476341247559

Token 749: 'le' (ID: 282)
  Prédit: '(student'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(student' → logprob: -0.48931601643562317
    2. ' (' → logprob: -2.489315986633301
    3. '(s' → logprob: -2.489315986633301
    4. 's' → logprob: -2.614315986633301
    5. '(' → logprob: -3.614315986633301
    6. '(m' → logprob: -4.239315986633301
    7. '((' → logprob: -4.239315986633301
    8. ',' → logprob: -4.489315986633301
    9. '           ' → logprob: -4.614315986633301
    10. 'le' → logprob: -4.739315986633301

Token 750: '
' (ID: 198)
  Prédit: '(student'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(student' → logprob: -0.9386376738548279
    2. ' (' → logprob: -1.0636377334594727
    3. '               ' → logprob: -1.5636377334594727
    4. 'student' → logprob: -4.438637733459473
    5. ' =' → logprob: -4.813637733459473
    6. '.append' → logprob: -4.938637733459473
    7. '(s' → logprob: -5.063637733459473
    8. '(' → logprob: -5.188637733459473
    9. ',' → logprob: -5.188637733459473
    10. ' student' → logprob: -5.563637733459473

Token 751: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.13526706397533417
    2. 'student' → logprob: -2.2602670192718506
    3. '(student' → logprob: -4.13526725769043
    4. ' student' → logprob: -5.26026725769043
    5. 'interval' → logprob: -8.26026725769043
    6. '       ' → logprob: -8.51026725769043
    7. ' (' → logprob: -8.63526725769043
    8. ',' → logprob: -9.13526725769043
    9. ')' → logprob: -9.88526725769043
    10. '                
' → logprob: -10.26026725769043

Token 752: ' #' (ID: 1069)
  Prédit: 'student'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'student' → logprob: -0.0014233296969905496
    2. 'interval' → logprob: -7.001423358917236
    3. '               ' → logprob: -8.376422882080078
    4. ' student' → logprob: -8.626422882080078
    5. '   ' → logprob: -10.251422882080078
    6. 'start' → logprob: -10.501422882080078
    7. 'bis' → logprob: -11.126422882080078
    8. '           ' → logprob: -12.001422882080078
    9. 'new' → logprob: -12.376422882080078
    10. '(student' → logprob: -12.626422882080078

Token 753: ' s' (ID: 265)
  Prédit: 'student'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'student' → logprob: -0.0038995807990431786
    2. '               ' → logprob: -5.878899574279785
    3. 'interval' → logprob: -7.003899574279785
    4. ' student' → logprob: -8.878899574279785
    5. 'if' → logprob: -11.003899574279785
    6. 'start' → logprob: -11.378899574279785
    7. 'students' → logprob: -12.753899574279785
    8. 'import' → logprob: -13.253899574279785
    9. 'new' → logprob: -13.253899574279785
    10. 'current' → logprob: -13.753899574279785

Token 754: ''ass' (ID: 43919)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.018805524334311485
    2. ' =' → logprob: -4.518805503845215
    3. 'interval' → logprob: -5.768805503845215
    4. '=' → logprob: -6.518805503845215
    5. 'student' → logprob: -7.018805503845215
    6. '_interval' → logprob: -7.268805503845215
    7. '_start' → logprob: -8.268805503845215
    8. '_inter' → logprob: -8.393805503845215
    9. '   ' → logprob: -8.393805503845215
    10. 'start' → logprob: -8.643805503845215

Token 755: 'ure' (ID: 627)
  Prédit: 'ert'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ert' → logprob: -0.5278317928314209
    2. 'ure' → logprob: -1.402831792831421
    3. 'urer' → logprob: -2.902831792831421
    4. 'ur' → logprob: -3.027831792831421
    5. 'e' → logprob: -4.27783203125
    6. 'urent' → logprob: -4.27783203125
    7. 'eur' → logprob: -4.52783203125
    8. 'er' → logprob: -5.52783203125
    9. 'urant' → logprob: -5.52783203125
    10. 'uret' → logprob: -6.15283203125

Token 756: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.13093319535255432
    2. '               ' → logprob: -2.2559332847595215
    3. ' =' → logprob: -5.3809332847595215
    4. '                   ' → logprob: -5.6309332847595215
    5. 'que' → logprob: -5.6309332847595215
    6. '=' → logprob: -6.1309332847595215
    7. ' de' → logprob: -7.0059332847595215
    8. '           ' → logprob: -7.2559332847595215
    9. '   ' → logprob: -8.130932807922363
    10. '                ' → logprob: -8.130932807922363

Token 757: ' c' (ID: 274)
  Prédit: 'student'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'student' → logprob: -0.20319581031799316
    2. ' student' → logprob: -1.9531958103179932
    3. 'start' → logprob: -3.578195810317993
    4. '(student' → logprob: -5.203195571899414
    5. ' start' → logprob: -5.703195571899414
    6. 'len' → logprob: -6.328195571899414
    7. 'interval' → logprob: -6.953195571899414
    8. 't' → logprob: -7.078195571899414
    9. ' t' → logprob: -8.203195571899414
    10. ' len' → logprob: -8.328195571899414

Token 758: ''est' (ID: 6616)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.1293727308511734
    2. 'student' → logprob: -2.5043728351593018
    3. 'start' → logprob: -4.254372596740723
    4. ' student' → logprob: -5.004372596740723
    5. '(student' → logprob: -5.754372596740723
    6. 'not' → logprob: -5.879372596740723
    7. 'interval' → logprob: -6.004372596740723
    8. 'n' → logprob: -6.129372596740723
    9. '#' → logprob: -6.629372596740723
    10. 'udent' → logprob: -7.504372596740723

Token 759: ' bien' (ID: 5340)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.09694082289934158
    2. 'logged' → logprob: -3.346940755844116
    3. ' start' → logprob: -3.846940755844116
    4. 'not' → logprob: -4.721940994262695
    5. 'student' → logprob: -4.971940994262695
    6. 't' → logprob: -5.346940994262695
    7. ' logged' → logprob: -5.596940994262695
    8. 's' → logprob: -5.846940994262695
    9. 'len' → logprob: -5.971940994262695
    10. 'log' → logprob: -7.096940994262695

Token 760: ' le' (ID: 505)
  Prédit: 'logged'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'logged' → logprob: -0.41291919350624084
    2. 'start' → logprob: -1.4129191637039185
    3. 'm' → logprob: -3.412919282913208
    4. ' logged' → logprob: -3.787919282913208
    5. 'student' → logprob: -4.537919044494629
    6. 'not' → logprob: -5.162919044494629
    7. 'log' → logprob: -5.412919044494629
    8. 'len' → logprob: -5.912919044494629
    9. ' start' → logprob: -5.912919044494629
    10. '   ' → logprob: -6.037919044494629

Token 761: ' même' (ID: 9679)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.39298832416534424
    2. 'logged' → logprob: -1.2679883241653442
    3. ' même' → logprob: -3.6429882049560547
    4. 'start' → logprob: -5.392988204956055
    5. 'same' → logprob: -5.642988204956055
    6. 'bon' → logprob: -5.642988204956055
    7. 'even' → logprob: -6.517988204956055
    8. 'mé' → logprob: -7.142988204956055
    9. ' logged' → logprob: -7.142988204956055
    10. 'student' → logprob: -7.392988204956055

Token 762: ' étudiant' (ID: 153135)
  Prédit: 'student'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'student' → logprob: -0.32607173919677734
    2. 'if' → logprob: -2.7010717391967773
    3. 'ét' → logprob: -2.9510717391967773
    4. ' étudiant' → logprob: -3.2010717391967773
    5. '               ' → logprob: -3.4510717391967773
    6. 'm' → logprob: -3.7010717391967773
    7. ' if' → logprob: -4.201071739196777
    8. 'et' → logprob: -4.201071739196777
    9. ' student' → logprob: -4.576071739196777
    10. '           ' → logprob: -4.826071739196777

Token 763: ' selon' (ID: 27571)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.12896615266799927
    2. ' if' → logprob: -2.6289660930633545
    3. ' and' → logprob: -3.6289660930633545
    4. 'if' → logprob: -4.003966331481934
    5. ')' → logprob: -6.378966331481934
    6. '<|end|>' → logprob: -7.003966331481934
    7. 'and' → logprob: -7.753966331481934
    8. ',' → logprob: -8.503966331481934
    9. '                
' → logprob: -9.003966331481934
    10. 'interval' → logprob: -9.003966331481934

Token 764: ' l' (ID: 305)
  Prédit: 'logged'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'logged' → logprob: -0.026979690417647362
    2. 'm' → logprob: -3.776979684829712
    3. ' logged' → logprob: -6.026979923248291
    4. '           ' → logprob: -8.151979446411133
    5. 'l' → logprob: -8.526979446411133
    6. 'log' → logprob: -8.651979446411133
    7. '   ' → logprob: -8.901979446411133
    8. ' m' → logprob: -9.276979446411133
    9. '               ' → logprob: -9.526979446411133
    10. 'student' → logprob: -9.526979446411133

Token 765: ''' (ID: 6)
  Prédit: 'histor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'histor' → logprob: -1.2144824266433716
    2. 'logged' → logprob: -1.5894824266433716
    3. 'student' → logprob: -2.339482307434082
    4. 'id' → logprob: -2.964482307434082
    5. 'm' → logprob: -3.089482307434082
    6. ' logged' → logprob: -3.339482307434082
    7. 'e' → logprob: -3.714482307434082
    8. 'interval' → logprob: -3.839482307434082
    9. 'identified' → logprob: -4.089482307434082
    10. ''ét' → logprob: -4.214482307434082

Token 766: 'én' (ID: 3289)
  Prédit: 'logged'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'logged' → logprob: -0.18892382085323334
    2. 'm' → logprob: -1.8139238357543945
    3. ' logged' → logprob: -5.4389238357543945
    4. 'student' → logprob: -5.6889238357543945
    5. 'start' → logprob: -8.063923835754395
    6. ' m' → logprob: -8.688923835754395
    7. 's' → logprob: -8.813923835754395
    8. 'if' → logprob: -9.188923835754395
    9. '   ' → logprob: -9.438923835754395
    10. 'log' → logprob: -9.688923835754395

Token 767: 'oncé' (ID: 59071)
  Prédit: 'oncé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oncé' → logprob: -0.8238196969032288
    2. 't' → logprob: -0.9488196969032288
    3. 'd' → logprob: -3.823819637298584
    4. 'registrement' → logprob: -3.823819637298584
    5. 'se' → logprob: -3.948819637298584
    6. 'um' → logprob: -3.948819637298584
    7. 'udiant' → logprob: -4.198819637298584
    8. 'tre' → logprob: -4.698819637298584
    9. 'n' → logprob: -4.948819637298584
    10. 'registr' → logprob: -5.323819637298584

Token 768: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.060362398624420166
    2. 'student' → logprob: -3.3103623390197754
    3. ' student' → logprob: -4.185362339019775
    4. ' if' → logprob: -5.810362339019775
    5. 'interval' → logprob: -6.810362339019775
    6. '(student' → logprob: -7.060362339019775
    7. 'if' → logprob: -7.310362339019775
    8. '                
' → logprob: -7.810362339019775
    9. ',' → logprob: -8.560362815856934
    10. ')' → logprob: -8.810362815856934

Token 769: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.42563408613204956
    2. 'student' → logprob: -1.1756341457366943
    3. ' student' → logprob: -3.3006341457366943
    4. 'interval' → logprob: -7.425633907318115
    5. '(student' → logprob: -8.675634384155273
    6. ')' → logprob: -9.425634384155273
    7. '       ' → logprob: -9.425634384155273
    8. '                
' → logprob: -10.050634384155273
    9. '@student' → logprob: -10.300634384155273
    10. ',' → logprob: -10.425634384155273

Token 770: ' assert' (ID: 3696)
  Prédit: 'student'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'student' → logprob: -0.009411437436938286
    2. 'interval' → logprob: -5.384411334991455
    3. '               ' → logprob: -5.634411334991455
    4. ' student' → logprob: -6.884411334991455
    5. 'if' → logprob: -8.884411811828613
    6. 'start' → logprob: -11.384411811828613
    7. '   ' → logprob: -12.634411811828613
    8. 'new' → logprob: -12.759411811828613
    9. '(student' → logprob: -12.759411811828613
    10. 'current' → logprob: -13.009411811828613

Token 771: ' logged' (ID: 25442)
  Prédit: 'logged'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'logged' → logprob: -0.016459181904792786
    2. ' logged' → logprob: -4.141458988189697
    3. 'log' → logprob: -7.891458988189697
    4. 'm' → logprob: -10.016459465026855
    5. '(log' → logprob: -12.516459465026855
    6. ' log' → logprob: -14.016459465026855
    7. ' m' → logprob: -14.266459465026855
    8. '   ' → logprob: -15.391459465026855
    9. '_logged' → logprob: -15.516459465026855
    10. 'Logged' → logprob: -16.01645851135254

Token 772: '_student' (ID: 84027)
  Prédit: '_student'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_student' → logprob: -2.1008713702030946e-06
    2. '_' → logprob: -14.125001907348633
    3. '_students' → logprob: -14.250001907348633
    4. 'student' → logprob: -16.125001907348633
    5. ' _' → logprob: -16.250001907348633
    6. '_logged' → logprob: -16.625001907348633
    7. '_patient' → logprob: -16.750001907348633
    8. '@student' → logprob: -16.875001907348633
    9. '_st' → logprob: -16.875001907348633
    10. 'Student' → logprob: -17.125001907348633

Token 773: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.1602262556552887
    2. '==' → logprob: -1.9102262258529663
    3. '==
' → logprob: -14.160225868225098
    4. ')==' → logprob: -14.285225868225098
    5. '=' → logprob: -15.285225868225098
    6. ']==' → logprob: -15.660225868225098
    7. 'm' → logprob: -15.785225868225098
    8. ')' → logprob: -16.160226821899414
    9. ' ' → logprob: -16.660226821899414
    10. ' ' → logprob: -17.285226821899414

Token 774: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0024756586644798517
    2. ' m' → logprob: -6.002475738525391
    3. '	m' → logprob: -19.75247573852539
    4. 'м' → logprob: -20.62747573852539
    5. '   ' → logprob: -21.50247573852539
    6. ')m' → logprob: -22.12747573852539
    7. '_m' → logprob: -22.87747573852539
    8. 'md' → logprob: -23.25247573852539
    9. '<m' → logprob: -23.37747573852539
    10. '[m' → logprob: -23.37747573852539

Token 775: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.009369632229208946
    2. 'student' → logprob: -4.759369850158691
    3. '                
' → logprob: -8.384369850158691
    4. ',' → logprob: -8.884369850158691
    5. ' student' → logprob: -8.884369850158691
    6. 'interval' → logprob: -8.884369850158691
    7. '
' → logprob: -10.134369850158691
    8. ')' → logprob: -11.134369850158691
    9. ')
' → logprob: -11.884369850158691
    10. '(student' → logprob: -11.884369850158691

Token 776: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.13271000981330872
    2. 'student' → logprob: -2.1327099800109863
    3. ' student' → logprob: -5.382709980010986
    4. '                
' → logprob: -7.257709980010986
    5. 'interval' → logprob: -8.507710456848145
    6. '
' → logprob: -9.882710456848145
    7. '@student' → logprob: -10.007710456848145
    8. '       ' → logprob: -10.382710456848145
    9. '(student' → logprob: -10.507710456848145
    10. '           ' → logprob: -10.507710456848145

Token 777: ' student' (ID: 6760)
  Prédit: 'student'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'student' (adapté à ' student') → logprob: -0.0030384398996829987
    2. '               ' → logprob: -6.50303840637207
    3. 'interval' → logprob: -6.87803840637207
    4. ' student' → logprob: -7.62803840637207
    5. '                
' → logprob: -12.50303840637207
    6. 'if' → logprob: -13.12803840637207
    7. 'start' → logprob: -13.12803840637207
    8. '           ' → logprob: -13.37803840637207
    9. 'current' → logprob: -13.75303840637207
    10. 'new' → logprob: -13.75303840637207

Token 778: '_inter' (ID: 16818)
  Prédit: '_inter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inter' → logprob: -4.842555426876061e-06
    2. ''_' → logprob: -13.500004768371582
    3. 'interval' → logprob: -14.625004768371582
    4. '```' → logprob: -14.875004768371582
    5. 'inter' → logprob: -15.000004768371582
    6. '"_' → logprob: -15.000004768371582
    7. '_interval' → logprob: -15.125004768371582
    8. ')_' → logprob: -15.250004768371582
    9. '_' → logprob: -15.375004768371582
    10. 's' → logprob: -15.875004768371582

Token 779: 'vals' (ID: 44567)
  Prédit: 'vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vals' → logprob: -0.10406693071126938
    2. 'als' → logprob: -2.354066848754883
    3. 'val' → logprob: -6.604066848754883
    4. '_' → logprob: -7.854066848754883
    5. '_inter' → logprob: -7.854066848754883
    6. '_vals' → logprob: -7.854066848754883
    7. '   ' → logprob: -8.979066848754883
    8. 'al' → logprob: -9.354066848754883
    9. '```' → logprob: -9.354066848754883
    10. 'ls' → logprob: -9.354066848754883

Token 780: '[m' (ID: 29271)
  Prédit: '[m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[m' → logprob: -2.534558552724775e-05
    2. '[n' → logprob: -11.125025749206543
    3. '[' → logprob: -11.875025749206543
    4. 'm' → logprob: -12.750025749206543
    5. '```' → logprob: -16.000024795532227
    6. ' [' → logprob: -16.125024795532227
    7. '[s' → logprob: -16.500024795532227
    8. '[M' → logprob: -16.500024795532227
    9. '.setdefault' → logprob: -16.750024795532227
    10. '	m' → logprob: -17.375024795532227

Token 781: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.0001149867384810932
    2. '.append' → logprob: -9.750115394592285
    3. ').' → logprob: -10.375115394592285
    4. ' ].' → logprob: -11.000115394592285
    5. ']' → logprob: -12.250115394592285
    6. '   ' → logprob: -13.500115394592285
    7. '.' → logprob: -13.750115394592285
    8. '[-' → logprob: -14.750115394592285
    9. '][-' → logprob: -14.875115394592285
    10. '	' → logprob: -15.250115394592285

Token 782: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -1.9361264946837764e-07
    2. '.append' → logprob: -16.5
    3. ' append' → logprob: -17.75
    4. 'app' → logprob: -19.125
    5. 'appen' → logprob: -21.625
    6. '	append' → logprob: -22.25
    7. '_append' → logprob: -22.375
    8. '   ' → logprob: -22.5
    9. 'Append' → logprob: -23.0
    10. ' ' → logprob: -24.625

Token 783: '((' (ID: 2054)
  Prédit: '(start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(start' → logprob: -0.26301324367523193
    2. '((' → logprob: -1.513013243675232
    3. '(' → logprob: -4.5130133628845215
    4. ' (' → logprob: -10.263012886047363
    5. '(Start' → logprob: -11.138012886047363
    6. '(current' → logprob: -13.013012886047363
    7. '(t' → logprob: -13.138012886047363
    8. '   ' → logprob: -13.513012886047363
    9. '(end' → logprob: -13.513012886047363
    10. '(time' → logprob: -15.763012886047363

Token 784: 'start' (ID: 5236)
  Prédit: 'start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -2.1008713702030946e-06
    2. ' start' → logprob: -13.250001907348633
    3. '(start' → logprob: -15.375001907348633
    4. '[start' → logprob: -20.625001907348633
    5. ',start' → logprob: -21.125001907348633
    6. '	start' → logprob: -22.500001907348633
    7. '   ' → logprob: -22.875001907348633
    8. '_start' → logprob: -23.000001907348633
    9. ')' → logprob: -23.750001907348633
    10. '=start' → logprob: -23.875001907348633

Token 785: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -1.9743012671824545e-05
    2. 'time' → logprob: -11.000020027160645
    3. '_start' → logprob: -13.625020027160645
    4. '_token' → logprob: -14.625020027160645
    5. 'start' → logprob: -14.750020027160645
    6. '_times' → logprob: -14.875020027160645
    7. 't' → logprob: -16.000019073486328
    8. '_' → logprob: -16.625019073486328
    9. '_code' → logprob: -17.000019073486328
    10. ',' → logprob: -17.000019073486328

Token 786: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011827271664515138
    2. ',t' → logprob: -6.751182556152344
    3. ' ,' → logprob: -11.751182556152344
    4. ',
' → logprob: -12.876182556152344
    5. 't' → logprob: -13.251182556152344
    6. ',s' → logprob: -16.876182556152344
    7. '           ' → logprob: -17.001182556152344
    8. ',\
' → logprob: -17.126182556152344
    9. '‌,' → logprob: -17.376182556152344
    10. ',n' → logprob: -17.376182556152344

Token 787: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0005533903022296727
    2. ' t' → logprob: -7.500553607940674
    3. '   ' → logprob: -15.250553131103516
    4. '	t' → logprob: -16.375553131103516
    5. '                   ' → logprob: -18.000553131103516
    6. '           ' → logprob: -18.500553131103516
    7. '               ' → logprob: -18.500553131103516
    8. '       ' → logprob: -19.125553131103516
    9. '`t' → logprob: -19.125553131103516
    10. '    ' → logprob: -19.250553131103516

Token 788: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5759571194648743
    2. '))' → logprob: -0.8259571194648743
    3. '))
' → logprob: -12.450957298278809
    4. ')
' → logprob: -12.700957298278809
    5. ' )' → logprob: -12.825957298278809
    6. ')))' → logprob: -13.200957298278809
    7. '       ' → logprob: -13.200957298278809
    8. '   ' → logprob: -13.450957298278809
    9. ' ))' → logprob: -13.575957298278809
    10. '),' → logprob: -14.700957298278809

Token 789: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11033304035663605
    2. '
' → logprob: -2.73533296585083
    3. '   ' → logprob: -4.11033296585083
    4. '<|end|>' → logprob: -4.61033296585083
    5. '        
' → logprob: -5.11033296585083
    6. 'for' → logprob: -5.61033296585083
    7. '#' → logprob: -6.86033296585083
    8. '    
' → logprob: -7.11033296585083
    9. ' for' → logprob: -7.48533296585083
    10. '```' → logprob: -7.61033296585083

Token 790: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.25343528389930725
    2. '       ' → logprob: -1.5034352540969849
    3. '#' (adapté à ' #') → logprob: -7.003435134887695
    4. '   ' → logprob: -7.878435134887695
    5. ' for' → logprob: -8.878435134887695
    6. '        
' → logprob: -10.003435134887695
    7. '
' → logprob: -11.003435134887695
    8. '```' → logprob: -11.253435134887695
    9. '           ' → logprob: -14.128435134887695
    10. '	for' → logprob: -14.378435134887695

Token 791: ' On' (ID: 2160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03339865803718567
    2. '       ' → logprob: -4.033398628234863
    3. '#' → logprob: -4.283398628234863
    4. ' for' → logprob: -6.658398628234863
    5. '   ' → logprob: -10.533398628234863
    6. 'For' → logprob: -11.658398628234863
    7. ' ' → logprob: -12.158398628234863
    8. ' #' → logprob: -12.408398628234863
    9. 'pour' → logprob: -13.283398628234863
    10. '        
' → logprob: -13.408398628234863

Token 792: ' fusion' (ID: 48115)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1565088927745819
    2. ' for' → logprob: -2.4065089225769043
    3. '       ' → logprob: -3.0315089225769043
    4. '#' → logprob: -5.781508922576904
    5. '   ' → logprob: -6.281508922576904
    6. ' ' → logprob: -7.531508922576904
    7. '      ' → logprob: -8.656508445739746
    8. '     ' → logprob: -8.781508445739746
    9. 'pour' → logprob: -8.906508445739746
    10. '  ' → logprob: -9.406508445739746

Token 793: 'ne' (ID: 611)
  Prédit: 'ne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ne' → logprob: -0.01919643022119999
    2. 'ner' → logprob: -4.269196510314941
    3. '   ' → logprob: -5.894196510314941
    4. '       ' → logprob: -7.269196510314941
    5. 'ère' → logprob: -7.769196510314941
    6. 'e' → logprob: -8.019196510314941
    7. 'né' → logprob: -8.644196510314941
    8. 'nne' → logprob: -8.894196510314941
    9. 'er' → logprob: -9.769196510314941
    10. 'érer' → logprob: -10.019196510314941

Token 794: ' les' (ID: 1341)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2377406358718872
    2. '       ' → logprob: -1.6127406358718872
    3. ' for' → logprob: -4.612740516662598
    4. 'pour' → logprob: -6.862740516662598
    5. 'les' → logprob: -7.987740516662598
    6. '
' → logprob: -8.112740516662598
    7. '   ' → logprob: -8.112740516662598
    8. ' pour' → logprob: -9.362740516662598
    9. '{' → logprob: -9.862740516662598
    10. '        
' → logprob: -10.362740516662598

Token 795: ' interv' (ID: 37413)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.12745580077171326
    2. 'interval' → logprob: -2.627455711364746
    3. ' for' → logprob: -3.377455711364746
    4. ' intervals' → logprob: -5.252455711364746
    5. 'student' → logprob: -5.752455711364746
    6. '   ' → logprob: -6.502455711364746
    7. 'inter' → logprob: -7.127455711364746
    8. '{' → logprob: -7.502455711364746
    9. '#' → logprob: -7.502455711364746
    10. '{
' → logprob: -7.877455711364746

Token 796: 'alles' (ID: 28825)
  Prédit: 'als'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'als' → logprob: -0.009826567955315113
    2. 'ents' → logprob: -5.38482666015625
    3. 'al' → logprob: -6.00982666015625
    4. 'vals' → logprob: -7.25982666015625
    5. 'aux' → logprob: -7.38482666015625
    6. 'interval' → logprob: -8.88482666015625
    7. '   ' → logprob: -9.19732666015625
    8. 'alls' → logprob: -9.38482666015625
    9. '#' → logprob: -9.38482666015625
    10. 'ales' → logprob: -9.50982666015625

Token 797: ' pour' (ID: 1930)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1433670073747635
    2. 'for' → logprob: -2.143367052078247
    3. ' for' → logprob: -4.143366813659668
    4. 'pour' → logprob: -8.018366813659668
    5. ' pour' → logprob: -10.018366813659668
    6. '   ' → logprob: -10.518366813659668
    7. ' ' → logprob: -12.018366813659668
    8. ',' → logprob: -12.018366813659668
    9. '{
' → logprob: -12.643366813659668
    10. '{' → logprob: -12.643366813659668

Token 798: ' chaque' (ID: 21194)
  Prédit: ' m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.38714587688446045
    2. 'm' → logprob: -1.1371458768844604
    3. ' student' → logprob: -8.63714599609375
    4. 'student' → logprob: -10.01214599609375
    5. ' key' → logprob: -11.26214599609375
    6. ' chaque' → logprob: -12.01214599609375
    7. ' k' → logprob: -12.26214599609375
    8. ' s' → logprob: -12.38714599609375
    9. ' étudiant' → logprob: -12.51214599609375
    10. 's' → logprob: -13.01214599609375

Token 799: ' étudiant' (ID: 153135)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.6633018255233765
    2. 'student' → logprob: -0.9133018255233765
    3. ' student' → logprob: -3.663301944732666
    4. ' m' → logprob: -3.663301944732666
    5. ' étudiant' → logprob: -3.663301944732666
    6. 'ét' → logprob: -5.413301944732666
    7. 'et' → logprob: -6.913301944732666
    8. 'interval' → logprob: -7.413301944732666
    9. 'ele' → logprob: -9.038301467895508
    10. 'él' → logprob: -9.288301467895508

Token 800: ' afin' (ID: 22217)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0035434053279459476
    2. 'for' → logprob: -6.003543376922607
    3. ' for' → logprob: -6.878543376922607
    4. '   ' → logprob: -10.378543853759766
    5. '
' → logprob: -12.878543853759766
    6. '        
' → logprob: -13.253543853759766
    7. '	for' → logprob: -14.628543853759766
    8. '           ' → logprob: -14.878543853759766
    9. '<|end|>' → logprob: -14.878543853759766
    10. ',' → logprob: -15.128543853759766

Token 801: ' de' (ID: 334)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.6141989827156067
    2. '       ' → logprob: -1.239198923110962
    3. 'de' → logprob: -1.864198923110962
    4. '   ' → logprob: -4.614199161529541
    5. ' d' → logprob: -6.114199161529541
    6. ' de' → logprob: -6.739199161529541
    7. '           ' → logprob: -8.114198684692383
    8. '    ' → logprob: -8.489198684692383
    9. '#' → logprob: -8.739198684692383
    10. '        ' → logprob: -8.989198684692383

Token 802: ' gérer' (ID: 86786)
  Prédit: 'optim'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'optim' → logprob: -0.7988859415054321
    2. '   ' → logprob: -1.6738859415054321
    3. ' éviter' → logprob: -2.6738858222961426
    4. '       ' → logprob: -3.0488858222961426
    5. ' optimiser' → logprob: -3.0488858222961426
    6. ' garantir' → logprob: -3.4238858222961426
    7. 'avoir' → logprob: -3.6738858222961426
    8. 'év' → logprob: -3.7988858222961426
    9. ' assurer' → logprob: -4.048885822296143
    10. 'ass' → logprob: -4.298885822296143

Token 803: ' le' (ID: 505)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.1394847184419632
    2. ' les' → logprob: -3.0144846439361572
    3. 'le' → logprob: -3.7644846439361572
    4. 'correct' → logprob: -4.514484882354736
    5. 'leurs' → logprob: -4.764484882354736
    6. '       ' → logprob: -4.764484882354736
    7. ' correctement' → logprob: -4.889484882354736
    8. 'leur' → logprob: -5.014484882354736
    9. 'au' → logprob: -5.639484882354736
    10. 'la' → logprob: -5.889484882354736

Token 804: ' multi' (ID: 12151)
  Prédit: ' chev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' chev' → logprob: -0.8857853412628174
    2. 'cas' → logprob: -1.2607853412628174
    3. 'che' → logprob: -1.6357853412628174
    4. 'rec' → logprob: -2.8857853412628174
    5. ' rec' → logprob: -4.010785102844238
    6. 'possible' → logprob: -5.010785102844238
    7. ' cas' → logprob: -5.135785102844238
    8. 'c' → logprob: -5.135785102844238
    9. 's' → logprob: -5.635785102844238
    10. 'cro' → logprob: -6.260785102844238

Token 805: '-PC' (ID: 168367)
  Prédit: 'pc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pc' → logprob: -0.5313414931297302
    2. '-' → logprob: -2.031341552734375
    3. '_pc' → logprob: -2.531341552734375
    4. 'connexion' → logprob: -2.781341552734375
    5. 'PC' → logprob: -3.406341552734375
    6. 'pl' → logprob: -3.656341552734375
    7. '_' → logprob: -4.656341552734375
    8. '-p' → logprob: -5.031341552734375
    9. 'ordinateur' → logprob: -5.031341552734375
    10. '-PC' → logprob: -5.156341552734375

Token 806: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05213175714015961
    2. 'for' → logprob: -3.3021316528320312
    3. ' for' → logprob: -4.302131652832031
    4. '   ' → logprob: -8.302131652832031
    5. ' pour' → logprob: -9.802131652832031
    6. 'pour' → logprob: -10.302131652832031
    7. '        
' → logprob: -10.427131652832031
    8. '```' → logprob: -11.052131652832031
    9. ',' → logprob: -11.302131652832031
    10. 's' → logprob: -11.427131652832031

Token 807: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002942287246696651
    2. 'for' → logprob: -8.50029468536377
    3. ' for' → logprob: -9.75029468536377
    4. '   ' → logprob: -10.37529468536377
    5. '           ' → logprob: -14.62529468536377
    6. '        
' → logprob: -15.25029468536377
    7. ' ' → logprob: -15.75029468536377
    8. '<|end|>' → logprob: -15.87529468536377
    9. '      ' → logprob: -16.375293731689453
    10. '
' → logprob: -16.375293731689453

Token 808: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.34131038188934326
    2. ' for' → logprob: -1.7163103818893433
    3. '       ' → logprob: -2.216310501098633
    4. '   ' → logprob: -8.091310501098633
    5. ' ' → logprob: -10.216310501098633
    6. '	for' → logprob: -10.341310501098633
    7. '        
' → logprob: -10.716310501098633
    8. '
' → logprob: -10.966310501098633
    9. '```' → logprob: -12.966310501098633
    10. ' 
' → logprob: -13.466310501098633

Token 809: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.062941774725914
    2. 'student' → logprob: -3.312941789627075
    3. ' m' → logprob: -3.937941789627075
    4. ' student' → logprob: -5.312941551208496
    5. 'stud' → logprob: -9.937941551208496
    6. ' étudiant' → logprob: -10.062941551208496
    7. 'et' → logprob: -10.187941551208496
    8. ' stud' → logprob: -10.687941551208496
    9. 'stu' → logprob: -12.062941551208496
    10. '	m' → logprob: -12.187941551208496

Token 810: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04328805208206177
    2. 'in' → logprob: -3.168287992477417
    3. ',' → logprob: -8.293288230895996
    4. ' ' → logprob: -11.543288230895996
    5. ' ,' → logprob: -12.293288230895996
    6. '	in' → logprob: -12.668288230895996
    7. 'space' → logprob: -12.793288230895996
    8. 'm' → logprob: -12.793288230895996
    9. '   ' → logprob: -13.168288230895996
    10. ' i' → logprob: -13.293288230895996

Token 811: ' student' (ID: 6760)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2575986981391907
    2. 'student' → logprob: -1.632598638534546
    3. ' range' → logprob: -3.632598638534546
    4. ' student' → logprob: -5.257598876953125
    5. '(student' → logprob: -12.632598876953125
    6. 'sorted' → logprob: -12.882598876953125
    7. ' ' → logprob: -13.132598876953125
    8. '   ' → logprob: -13.382598876953125
    9. 'Student' → logprob: -13.695098876953125
    10. 'list' → logprob: -14.195098876953125

Token 812: '_inter' (ID: 16818)
  Prédit: '_inter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inter' → logprob: -0.028394803404808044
    2. ',' → logprob: -4.02839469909668
    3. ' in' → logprob: -4.77839469909668
    4. 'in' → logprob: -7.90339469909668
    5. '_' → logprob: -7.90339469909668
    6. '_ranges' → logprob: -8.15339469909668
    7. '   ' → logprob: -8.90339469909668
    8. '_,' → logprob: -9.27839469909668
    9. ',_' → logprob: -9.27839469909668
    10. 'inter' → logprob: -9.65339469909668

Token 813: 'vals' (ID: 44567)
  Prédit: 'vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vals' → logprob: -0.04141879826784134
    2. 'als' → logprob: -3.4164187908172607
    3. 's' → logprob: -5.66641902923584
    4. 'val' → logprob: -6.04141902923584
    5. 'ents' → logprob: -7.04141902923584
    6. 'erv' → logprob: -8.41641902923584
    7. 'r' → logprob: -9.04141902923584
    8. '   ' → logprob: -9.16641902923584
    9. '_inter' → logprob: -9.41641902923584
    10. '```' → logprob: -9.79141902923584

Token 814: ':
' (ID: 734)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.38108953833580017
    2. ' in' → logprob: -1.2560895681381226
    3. ',' → logprob: -3.881089448928833
    4. ']' → logprob: -4.881089687347412
    5. ':' → logprob: -6.381089687347412
    6. 'm' → logprob: -7.506089687347412
    7. '].' → logprob: -8.131089210510254
    8. ' ' → logprob: -8.381089210510254
    9. ')' → logprob: -8.506089210510254
    10. ']:' → logprob: -8.756089210510254

Token 815: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0933169275522232
    2. '       ' → logprob: -3.3433170318603516
    3. 'student' → logprob: -3.3433170318603516
    4. '           ' → logprob: -4.468317031860352
    5. ' student' → logprob: -4.968317031860352
    6. '@student' → logprob: -11.218317031860352
    7. ' ' → logprob: -12.093317031860352
    8. '(student' → logprob: -12.218317031860352
    9. '	   ' → logprob: -12.843317031860352
    10. '  ' → logprob: -13.218317031860352

Token 816: ' student' (ID: 6760)
  Prédit: 'student'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'student' (adapté à ' student') → logprob: -0.07888758182525635
    2. ' student' → logprob: -2.953887462615967
    3. '   ' → logprob: -3.953887462615967
    4. '           ' → logprob: -5.703887462615967
    5. '       ' → logprob: -7.078887462615967
    6. ' ' → logprob: -8.078887939453125
    7. '  ' → logprob: -10.828887939453125
    8. '@student' → logprob: -11.203887939453125
    9. '(student' → logprob: -11.828887939453125
    10. '               ' → logprob: -12.703887939453125

Token 817: '_inter' (ID: 16818)
  Prédit: '_inter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inter' → logprob: -6.704273118884885e-07
    2. '[' → logprob: -16.0
    3. '   ' → logprob: -16.25
    4. ']_' → logprob: -16.75
    5. '           ' → logprob: -16.875
    6. 's' → logprob: -17.125
    7. ''_' → logprob: -17.25
    8. 'inter' → logprob: -17.25
    9. '
' → logprob: -17.5
    10. '_interval' → logprob: -17.5

Token 818: 'vals' (ID: 44567)
  Prédit: 'vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vals' → logprob: -0.6377653479576111
    2. '_inter' → logprob: -0.7627653479576111
    3. 's' → logprob: -5.762765407562256
    4. 'val' → logprob: -7.637765407562256
    5. 'als' → logprob: -7.887765407562256
    6. '[' → logprob: -8.637764930725098
    7. 'v' → logprob: -8.762764930725098
    8. '```' → logprob: -9.387764930725098
    9. 'erv' → logprob: -9.512764930725098
    10. 'al' → logprob: -9.512764930725098

Token 819: '[m' (ID: 29271)
  Prédit: '[m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[m' → logprob: -4.246537173457909e-06
    2. 'm' → logprob: -12.500003814697266
    3. ' [' → logprob: -16.250003814697266
    4. '```' → logprob: -16.375003814697266
    5. '[' → logprob: -16.500003814697266
    6. '=m' → logprob: -17.000003814697266
    7. '\[' → logprob: -17.250003814697266
    8. '][' → logprob: -17.375003814697266
    9. '   ' → logprob: -18.250003814697266
    10. '
' → logprob: -18.375003814697266

Token 820: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0010359067237004638
    2. ']=' → logprob: -6.876035690307617
    3. ' ]' → logprob: -13.251035690307617
    4. '=' → logprob: -13.626035690307617
    5. '[m' → logprob: -16.251035690307617
    6. '[' → logprob: -16.751035690307617
    7. ')' → logprob: -17.126035690307617
    8. ' =' → logprob: -18.001035690307617
    9. ']=(' → logprob: -18.251035690307617
    10. ')]' → logprob: -18.501035690307617

Token 821: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -7.493430894101039e-05
    2. ' =' → logprob: -9.500075340270996
    3. ']=' → logprob: -17.50007438659668
    4. ']' → logprob: -18.50007438659668
    5. ')=' → logprob: -18.75007438659668
    6. ')' → logprob: -19.50007438659668
    7. '＝' → logprob: -19.62507438659668
    8. '.=' → logprob: -20.37507438659668
    9. '[' → logprob: -20.50007438659668
    10. '=

' → logprob: -20.87507438659668

Token 822: ' merge' (ID: 20345)
  Prédit: 'merge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'merge' → logprob: -0.0019294669618830085
    2. ' merge' → logprob: -6.25192928314209
    3. 'merged' → logprob: -14.25192928314209
    4. '   ' → logprob: -16.501930236816406
    5. ' merged' → logprob: -17.751930236816406
    6. '.merge' → logprob: -18.626930236816406
    7. ' ' → logprob: -19.376930236816406
    8. 'mer' → logprob: -19.751930236816406
    9. '  ' → logprob: -19.751930236816406
    10. 'sorted' → logprob: -20.376930236816406

Token 823: '_inter' (ID: 16818)
  Prédit: '_inter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inter' → logprob: -5.676981345459353e-06
    2. 'interval' → logprob: -12.500005722045898
    3. '_' → logprob: -13.750005722045898
    4. '_interval' → logprob: -14.250005722045898
    5. 'inter' → logprob: -16.5000057220459
    6. '(interval' → logprob: -17.5000057220459
    7. '(_' → logprob: -18.2500057220459
    8. '
' → logprob: -19.1250057220459
    9. '_in' → logprob: -19.2500057220459
    10. ''_' → logprob: -19.3750057220459

Token 824: 'vals' (ID: 44567)
  Prédit: 'vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vals' → logprob: -0.006309607997536659
    2. 'val' → logprob: -6.006309509277344
    3. 'als' → logprob: -6.006309509277344
    4. '_inter' → logprob: -7.756309509277344
    5. 'al' → logprob: -8.506309509277344
    6. '_' → logprob: -8.631309509277344
    7. 'interval' → logprob: -8.631309509277344
    8. 's' → logprob: -9.006309509277344
    9. 'vel' → logprob: -9.631309509277344
    10. 'erv' → logprob: -10.256309509277344

Token 825: '(sorted' (ID: 92488)
  Prédit: '(student'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(student' → logprob: -3.128163257315464e-07
    2. 'student' → logprob: -16.0
    3. ' (' → logprob: -16.875
    4. '(Student' → logprob: -17.25
    5. '(st' → logprob: -17.75
    6. '(' → logprob: -18.125
    7. '(sorted' → logprob: -18.375
    8. '(user' → logprob: -18.625
    9. '@student' → logprob: -19.5
    10. '(patient' → logprob: -19.625

Token 826: '(student' (ID: 67367)
  Prédit: '(student'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(student' → logprob: -0.004078997299075127
    2. 'student' → logprob: -5.5040788650512695
    3. ' student' → logprob: -15.00407886505127
    4. 'Student' → logprob: -16.004079818725586
    5. '@student' → logprob: -16.254079818725586
    6. ')' → logprob: -16.629079818725586
    7. '(
' → logprob: -18.254079818725586
    8. '(Student' → logprob: -18.504079818725586
    9. '/student' → logprob: -18.504079818725586
    10. '_student' → logprob: -18.754079818725586

Token 827: '_inter' (ID: 16818)
  Prédit: '_inter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inter' → logprob: -7.469590491382405e-05
    2. '(student' → logprob: -9.75007438659668
    3. 'student' → logprob: -11.75007438659668
    4. 'interval' → logprob: -12.12507438659668
    5. 'inter' → logprob: -12.87507438659668
    6. '_student' → logprob: -16.00007438659668
    7. 'Intervals' → logprob: -16.62507438659668
    8. '(_' → logprob: -16.62507438659668
    9. ')' → logprob: -17.00007438659668
    10. '_in' → logprob: -17.37507438659668

Token 828: 'vals' (ID: 44567)
  Prédit: 'vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vals' → logprob: -0.20632599294185638
    2. 'als' → logprob: -1.7063260078430176
    3. 'erv' → logprob: -6.706326007843018
    4. '[' → logprob: -7.081326007843018
    5. 'val' → logprob: -7.456326007843018
    6. '_' → logprob: -7.456326007843018
    7. 'ls' → logprob: -7.706326007843018
    8. 'student' → logprob: -8.58132553100586
    9. '{' → logprob: -8.70632553100586
    10. 't' → logprob: -9.20632553100586

Token 829: '[m' (ID: 29271)
  Prédit: '[m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[m' → logprob: -0.00016718693950679153
    2. 'student' → logprob: -9.125166893005371
    3. '(m' → logprob: -10.375166893005371
    4. '(student' → logprob: -10.625166893005371
    5. '[(' → logprob: -13.625166893005371
    6. '[' → logprob: -14.500166893005371
    7. 'm' → logprob: -14.500166893005371
    8. ' student' → logprob: -15.750166893005371
    9. '[player' → logprob: -16.250167846679688
    10. ')' → logprob: -16.625167846679688

Token 830: ']))

' (ID: 92947)
  Prédit: ']))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']))' → logprob: -0.05616302415728569
    2. '))' → logprob: -3.0561630725860596
    3. ')))' → logprob: -5.4311628341674805
    4. '(m' → logprob: -6.4311628341674805
    5. '[m' → logprob: -7.1811628341674805
    6. ']' → logprob: -8.55616283416748
    7. ']))
' → logprob: -9.05616283416748
    8. '])' → logprob: -9.05616283416748
    9. '']))' → logprob: -9.05616283416748
    10. 'm' → logprob: -9.80616283416748

Token 831: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008022629655897617
    2. 'for' → logprob: -5.383022785186768
    3. '
' → logprob: -5.883022785186768
    4. '```' → logprob: -8.38302230834961
    5. '        
' → logprob: -8.38302230834961
    6. ' for' → logprob: -9.25802230834961
    7. '   ' → logprob: -10.25802230834961
    8. 'query' → logprob: -12.13302230834961
    9. '    
' → logprob: -12.50802230834961
    10. 'while' → logprob: -12.63302230834961

Token 832: ' q' (ID: 2335)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.127356618642807
    2. '       ' → logprob: -2.12735652923584
    3. 'results' → logprob: -8.87735652923584
    4. ' for' → logprob: -9.00235652923584
    5. 'queries' → logprob: -9.50235652923584
    6. 'query' → logprob: -10.12735652923584
    7. '#' → logprob: -11.12735652923584
    8. '   ' → logprob: -11.37735652923584
    9. 'answers' → logprob: -12.25235652923584
    10. '        
' → logprob: -12.25235652923584

Token 833: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03293691948056221
    2. 'u' → logprob: -3.7829368114471436
    3. '=' → logprob: -4.782937049865723
    4. 'uer' → logprob: -7.532937049865723
    5. 'ue' → logprob: -7.782937049865723
    6. '_' → logprob: -8.407937049865723
    7. '   ' → logprob: -9.782937049865723
    8. 'uel' → logprob: -12.407937049865723
    9. '=_' → logprob: -12.407937049865723
    10. 'ual' → logprob: -12.782937049865723

Token 834: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0040830280631780624
    2. ' int' → logprob: -5.504083156585693
    3. 'q' → logprob: -12.379082679748535
    4. ' q' → logprob: -15.504082679748535
    5. '   ' → logprob: -16.37908363342285
    6. '[int' → logprob: -18.00408363342285
    7. '=int' → logprob: -18.12908363342285
    8. ' ' → logprob: -18.37908363342285
    9. '  ' → logprob: -18.37908363342285
    10. '    ' → logprob: -18.62908363342285

Token 835: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.00016861737822182477
    2. 'input' → logprob: -8.875168800354004
    3. '()' → logprob: -10.625168800354004
    4. '(' → logprob: -12.500168800354004
    5. '=input' → logprob: -15.000168800354004
    6. '(sys' → logprob: -15.625168800354004
    7. '(
' → logprob: -16.625167846679688
    8. ' input' → logprob: -16.625167846679688
    9. '<input' → logprob: -18.375167846679688
    10. '()
' → logprob: -18.375167846679688

Token 836: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.011107826605439186
    2. '()' → logprob: -4.511107921600342
    3. ')' → logprob: -10.261107444763184
    4. '())
' → logprob: -10.761107444763184
    5. ' ())' → logprob: -13.511107444763184
    6. '()
' → logprob: -13.761107444763184
    7. '(' → logprob: -14.386107444763184
    8. '();)' → logprob: -14.886107444763184
    9. '()>' → logprob: -16.7611083984375
    10. '())

' → logprob: -16.8861083984375

Token 837: ' ' (ID: 220)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.478857159614563
    2. '       ' → logprob: -0.978857159614563
    3. ' for' → logprob: -5.478857040405273
    4. '   ' → logprob: -7.853857040405273
    5. '	for' → logprob: -8.603857040405273
    6. '<|end|>' → logprob: -11.478857040405273
    7. '	   ' → logprob: -12.228857040405273
    8. '        
' → logprob: -12.603857040405273
    9. '```' → logprob: -13.728857040405273
    10. ' ' → logprob: -14.228857040405273

Token 838: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.009642407298088074
    2. '       ' → logprob: -5.009642601013184
    3. ' for' → logprob: -5.884642601013184
    4. '	for' → logprob: -9.009642601013184
    5. '   ' → logprob: -11.634642601013184
    6. 'queries' → logprob: -12.259642601013184
    7. 'query' → logprob: -12.884642601013184
    8. '	' → logprob: -14.259642601013184
    9. '<|end|>' → logprob: -14.259642601013184
    10. '	   ' → logprob: -15.509642601013184

Token 839: ' nombre' (ID: 9733)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0026364149525761604
    2. 'query' → logprob: -6.627636432647705
    3. ' for' → logprob: -6.877636432647705
    4. '
' → logprob: -8.627635955810547
    5. 'queries' → logprob: -9.752635955810547
    6. 'input' → logprob: -10.877635955810547
    7. 'q' → logprob: -11.377635955810547
    8. '   ' → logprob: -13.127635955810547
    9. '_query' → logprob: -13.252635955810547
    10. '#' → logprob: -13.502635955810547

Token 840: ' de' (ID: 334)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7534164786338806
    2. '   ' → logprob: -1.3784165382385254
    3. 'queries' → logprob: -2.6284165382385254
    4. '_queries' → logprob: -2.8784165382385254
    5. 'for' → logprob: -3.6284165382385254
    6. 'q' → logprob: -4.003416538238525
    7. 'des' → logprob: -4.378416538238525
    8. '	for' → logprob: -4.628416538238525
    9. 'def' → logprob: -4.878416538238525
    10. ' =' → logprob: -5.253416538238525

Token 841: ' queries' (ID: 32122)
  Prédit: 'queries'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queries' → logprob: -0.3127425014972687
    2. 'requ' → logprob: -1.4377424716949463
    3. ' requ' → logprob: -4.312742710113525
    4. 'questions' → logprob: -4.812742710113525
    5. 'query' → logprob: -5.562742710113525
    6. 're' → logprob: -6.312742710113525
    7. ' queries' → logprob: -6.312742710113525
    8. 'd' → logprob: -7.312742710113525
    9. '_queries' → logprob: -7.937742710113525
    10. ' questions' → logprob: -8.312742233276367

Token 842: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.28720608353614807
    2. '       ' → logprob: -1.4122060537338257
    3. ' for' → logprob: -5.412206172943115
    4. '   ' → logprob: -7.037206172943115
    5. '<|end|>' → logprob: -7.662206172943115
    6. '	for' → logprob: -8.662205696105957
    7. '        
' → logprob: -10.912205696105957
    8. '	   ' → logprob: -11.787205696105957
    9. '<|end|>' → logprob: -12.037205696105957
    10. '
' → logprob: -12.037205696105957

Token 843: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3545834422111511
    2. '       ' → logprob: -1.229583501815796
    3. '   ' → logprob: -5.979583263397217
    4. ' for' → logprob: -5.979583263397217
    5. '	for' → logprob: -6.979583263397217
    6. '<|end|>' → logprob: -9.479583740234375
    7. '	   ' → logprob: -10.104583740234375
    8. '	' → logprob: -12.604583740234375
    9. '```' → logprob: -13.229583740234375
    10. '
' → logprob: -13.604583740234375

Token 844: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0021664367523044348
    2. ' for' → logprob: -6.752166271209717
    3. '       ' → logprob: -7.002166271209717
    4. '	for' → logprob: -9.377166748046875
    5. '   ' → logprob: -14.252166748046875
    6. '
' → logprob: -15.127166748046875
    7. '```' → logprob: -16.877166748046875
    8. '        
' → logprob: -17.002166748046875
    9. '	' → logprob: -17.002166748046875
    10. '	   ' → logprob: -17.752166748046875

Token 845: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4740787148475647
    2. ' _' → logprob: -0.9740787148475647
    3. ' ' → logprob: -14.099079132080078
    4. ' ' → logprob: -15.599079132080078
    5. '_=' → logprob: -15.974079132080078
    6. '__' → logprob: -16.224079132080078
    7. '_q' → logprob: -16.599079132080078
    8. ' i' → logprob: -16.599079132080078
    9. '   ' → logprob: -16.724079132080078
    10. '_i' → logprob: -16.849079132080078

Token 846: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.20559880137443542
    2. '_' → logprob: -2.455598831176758
    3. ' _' → logprob: -2.955598831176758
    4. 'in' → logprob: -3.080598831176758
    5. 'query' → logprob: -7.580598831176758
    6. 'range' → logprob: -7.830598831176758
    7. 'q' → logprob: -7.955598831176758
    8. ' ' → logprob: -8.080598831176758
    9. '_query' → logprob: -8.955598831176758
    10. ' range' → logprob: -9.205598831176758

Token 847: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0024762547109276056
    2. ' range' → logprob: -6.002476215362549
    3. '_' → logprob: -14.877476692199707
    4. 'query' → logprob: -16.75247573852539
    5. ' ' → logprob: -17.12747573852539
    6. 'input' → logprob: -17.75247573852539
    7. 'q' → logprob: -17.75247573852539
    8. '(range' → logprob: -17.87747573852539
    9. '	range' → logprob: -18.25247573852539
    10. 'r' → logprob: -19.12747573852539

Token 848: '(q' (ID: 21479)
  Prédit: '(q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(q' → logprob: -0.0803365483880043
    2. '(' → logprob: -2.580336570739746
    3. 'q' → logprob: -7.705336570739746
    4. 'range' → logprob: -8.080336570739746
    5. ' (' → logprob: -8.205336570739746
    6. ' q' → logprob: -8.830336570739746
    7. '(range' → logprob: -9.080336570739746
    8. ' in' → logprob: -9.705336570739746
    9. ' range' → logprob: -10.455336570739746
    10. '(
' → logprob: -10.580336570739746

Token 849: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.3017584979534149
    2. '):' → logprob: -1.8017585277557373
    3. ',' → logprob: -2.8017585277557373
    4. '():
' → logprob: -4.051758289337158
    5. ':' → logprob: -4.801758289337158
    6. ':
' → logprob: -5.426758289337158
    7. '       ' → logprob: -6.301758289337158
    8. '():' → logprob: -6.426758289337158
    9. '   ' → logprob: -7.551758289337158
    10. '):
' → logprob: -8.176758766174316

Token 850: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004672445356845856
    2. 'query' → logprob: -6.379672527313232
    3. '       ' → logprob: -7.254672527313232
    4. 'line' → logprob: -7.379672527313232
    5. ' line' → logprob: -8.004672050476074
    6. '   ' → logprob: -8.004672050476074
    7. '	       ' → logprob: -8.004672050476074
    8. '```' → logprob: -9.254672050476074
    9. '	   ' → logprob: -9.504672050476074
    10. '		' → logprob: -9.754672050476074

Token 851: ' ts' (ID: 6601)
  Prédit: 'qs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'qs' → logprob: -0.6942397356033325
    2. 'query' → logprob: -1.0692397356033325
    3. 's' → logprob: -3.444239616394043
    4. 'L' → logprob: -3.694239616394043
    5. 'l' → logprob: -3.819239616394043
    6. 'ts' (adapté à ' ts') → logprob: -4.069239616394043
    7. 'start' → logprob: -4.319239616394043
    8. 'S' → logprob: -4.819239616394043
    9. 'a' → logprob: -4.819239616394043
    10. '           ' → logprob: -4.819239616394043

Token 852: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.14884573221206665
    2. 't' → logprob: -2.023845672607422
    3. ' ,' → logprob: -6.523845672607422
    4. '_,' → logprob: -7.023845672607422
    5. ',t' → logprob: -7.023845672607422
    6. '_query' → logprob: -7.148845672607422
    7. 'art' → logprob: -7.898845672607422
    8. '_start' → logprob: -7.898845672607422
    9. 'tr' → logprob: -8.148845672607422
    10. '_t' → logprob: -8.398845672607422

Token 853: ' te' (ID: 729)
  Prédit: 'te'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'te' → logprob: -0.10078603774309158
    2. 'tf' → logprob: -2.350785970687866
    3. ' te' → logprob: -7.600786209106445
    4. ' tf' → logprob: -9.725786209106445
    5. 'td' → logprob: -11.350786209106445
    6. 'tt' → logprob: -13.350786209106445
    7. 't' → logprob: -13.475786209106445
    8. 'tv' → logprob: -13.850786209106445
    9. 'tte' → logprob: -14.475786209106445
    10. '(te' → logprob: -14.975786209106445

Token 854: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16100308299064636
    2. ' =' → logprob: -1.9110031127929688
    3. ',' → logprob: -7.161003112792969
    4. ')' → logprob: -14.411003112792969
    5. ' ,' → logprob: -14.536003112792969
    6. '           ' → logprob: -14.661003112792969
    7. '            ' → logprob: -15.411003112792969
    8. ' ' → logprob: -16.16100311279297
    9. '		' → logprob: -16.16100311279297
    10. '=int' → logprob: -16.28600311279297

Token 855: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.1678948849439621
    2. 'student' → logprob: -3.4178948402404785
    3. 'et' → logprob: -3.9178948402404785
    4. 'sm' → logprob: -4.1678948402404785
    5. 'em' → logprob: -4.2928948402404785
    6. 'stu' → logprob: -4.4178948402404785
    7. 'u' → logprob: -4.7928948402404785
    8. 'st' → logprob: -4.7928948402404785
    9. 'stud' → logprob: -5.0428948402404785
    10. 'x' → logprob: -5.1678948402404785

Token 856: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4287692904472351
    2. ' =' → logprob: -1.0537693500518799
    3. ',' → logprob: -9.8037691116333
    4. ' ' → logprob: -12.5537691116333
    5. ')' → logprob: -12.9287691116333
    6. '           ' → logprob: -13.6787691116333
    7. '  ' → logprob: -13.9287691116333
    8. '   ' → logprob: -14.3037691116333
    9. '    ' → logprob: -14.3037691116333
    10. '<|end|>' → logprob: -14.8037691116333

Token 857: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.2519291639328003
    2. 'map' → logprob: -1.5019291639328003
    3. '	map' → logprob: -16.876928329467773
    4. '    ' → logprob: -19.251928329467773
    5. '           ' → logprob: -19.501928329467773
    6. ' ' → logprob: -20.001928329467773
    7. '(map' → logprob: -20.251928329467773
    8. '   ' → logprob: -20.251928329467773
    9. ',map' → logprob: -20.501928329467773
    10. 'm' → logprob: -20.626928329467773

Token 858: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00013858173042535782
    2. 'int' → logprob: -9.000138282775879
    3. '=int' → logprob: -11.875138282775879
    4. '[int' → logprob: -12.625138282775879
    5. ',int' → logprob: -13.125138282775879
    6. '<int' → logprob: -13.500138282775879
    7. ' int' → logprob: -14.250138282775879
    8. '	int' → logprob: -15.250138282775879
    9. ']int' → logprob: -15.750138282775879
    10. '(' → logprob: -16.000139236450195

Token 859: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06391829252243042
    2. '(int' → logprob: -3.688918352127075
    3. '(),' → logprob: -3.938918352127075
    4. ',input' → logprob: -4.688918113708496
    5. '(' → logprob: -5.563918113708496
    6. ',int' → logprob: -5.938918113708496
    7. '(input' → logprob: -6.688918113708496
    8. ')' → logprob: -8.688918113708496
    9. '()' → logprob: -9.188918113708496
    10. ' ,' → logprob: -9.438918113708496

Token 860: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -7.672236824873835e-05
    2. ' input' → logprob: -9.500076293945312
    3. 'int' → logprob: -13.250076293945312
    4. '(input' → logprob: -16.750076293945312
    5. 'map' → logprob: -18.625076293945312
    6. 'list' → logprob: -19.875076293945312
    7. 'str' → logprob: -20.000076293945312
    8. ',input' → logprob: -20.125076293945312
    9. 'sys' → logprob: -20.375076293945312
    10. '=input' → logprob: -21.250076293945312

Token 861: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0003918271977454424
    2. '()' → logprob: -7.875391960144043
    3. '())' → logprob: -11.875391960144043
    4. '(),' → logprob: -12.750391960144043
    5. '()
' → logprob: -14.250391960144043
    6. ')' → logprob: -15.125391960144043
    7. ' ().' → logprob: -15.500391960144043
    8. '());' → logprob: -16.000391006469727
    9. '()>' → logprob: -16.125391006469727
    10. '()[' → logprob: -16.500391006469727

Token 862: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -9.088346359931165e-07
    2. 'strip' → logprob: -14.500000953674316
    3. ' split' → logprob: -14.875000953674316
    4. '(split' → logprob: -17.875
    5. 'rstrip' → logprob: -17.875
    6. 'spl' → logprob: -18.125
    7. 'plit' → logprob: -18.25
    8. '.split' → logprob: -20.375
    9. 'skip' → logprob: -20.5
    10. '```' → logprob: -21.0

Token 863: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4758658707141876
    2. ')
' → logprob: -0.9758658409118652
    3. '           ' → logprob: -6.600865840911865
    4. '()' → logprob: -8.600866317749023
    5. '())
' → logprob: -8.850866317749023
    6. ')
' → logprob: -10.350866317749023
    7. '())' → logprob: -11.100866317749023
    8. '       ' → logprob: -11.225866317749023
    9. ' )
' → logprob: -11.350866317749023
    10. '   ' → logprob: -11.350866317749023

Token 864: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002770405262708664
    2. '       ' → logprob: -6.87777042388916
    3. 'print' → logprob: -7.62777042388916
    4. 'total' → logprob: -7.75277042388916
    5. '            
' → logprob: -8.37777042388916
    6. '```' → logprob: -8.50277042388916
    7. '   ' → logprob: -9.37777042388916
    8. ' total' → logprob: -9.50277042388916
    9. '        
' → logprob: -10.12777042388916
    10. ' print' → logprob: -10.50277042388916

Token 865: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.16282159090042114
    2. 'usage' → logprob: -2.5378215312957764
    3. '           ' → logprob: -3.4128215312957764
    4. 'time' → logprob: -4.4128217697143555
    5. 'total' → logprob: -4.4128217697143555
    6. ' print' → logprob: -5.2878217697143555
    7. 'duration' → logprob: -5.6628217697143555
    8. 'result' → logprob: -6.2878217697143555
    9. 'answer' → logprob: -6.5378217697143555
    10. ' usage' → logprob: -6.7878217697143555

Token 866: ' Calcul' (ID: 57243)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.29545921087265015
    2. 'usage' → logprob: -1.670459270477295
    3. '           ' → logprob: -3.545459270477295
    4. 'result' → logprob: -4.045459270477295
    5. 'answer' → logprob: -4.920459270477295
    6. 'duration' → logprob: -5.170459270477295
    7. 'total' → logprob: -5.545459270477295
    8. 'res' → logprob: -6.420459270477295
    9. 'time' → logprob: -6.795459270477295
    10. 'ans' → logprob: -7.795459270477295

Token 867: 'er' (ID: 259)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09473517537117004
    2. 'print' → logprob: -2.4697351455688477
    3. ' print' → logprob: -5.594735145568848
    4. 'total' → logprob: -6.969735145568848
    5. 'result' → logprob: -8.344735145568848
    6. '            
' → logprob: -9.094735145568848
    7. 'usage' → logprob: -9.219735145568848
    8. '
' → logprob: -9.469735145568848
    9. 'answer' → logprob: -9.469735145568848
    10. '       ' → logprob: -9.719735145568848

Token 868: ' le' (ID: 505)
  Prédit: 'usage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'usage' → logprob: -0.576478123664856
    2. '           ' → logprob: -1.201478123664856
    3. 'total' → logprob: -2.8264780044555664
    4. 'print' → logprob: -4.201478004455566
    5. ' usage' → logprob: -4.201478004455566
    6. 'duration' → logprob: -4.326478004455566
    7. 'result' → logprob: -4.826478004455566
    8. 'answer' → logprob: -4.826478004455566
    9. 'time' → logprob: -5.326478004455566
    10. 'le' → logprob: -5.576478004455566

Token 869: ' temps' (ID: 11160)
  Prédit: 'usage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'usage' → logprob: -0.03192298859357834
    2. 'result' → logprob: -4.156922817230225
    3. 'total' → logprob: -5.281922817230225
    4. ' usage' → logprob: -5.656922817230225
    5. 'temps' → logprob: -6.031922817230225
    6. 'print' → logprob: -6.906922817230225
    7. 'time' → logprob: -6.906922817230225
    8. 'duration' → logprob: -7.031922817230225
    9. 'used' → logprob: -7.156922817230225
    10. 'res' → logprob: -7.281922817230225

Token 870: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.8633829355239868
    2. 'd' → logprob: -1.4883829355239868
    3. 'total' → logprob: -2.3633828163146973
    4. '           ' → logprob: -2.4883828163146973
    5. 'util' → logprob: -2.7383828163146973
    6. 'used' → logprob: -2.8633828163146973
    7. ' total' → logprob: -4.113382816314697
    8. '_util' → logprob: -4.363382816314697
    9. 'usage' → logprob: -4.738382816314697
    10. '_total' → logprob: -5.863382816314697

Token 871: ''' (ID: 6)
  Prédit: 'usage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'usage' → logprob: -0.12867093086242676
    2. ' usage' → logprob: -2.1286709308624268
    3. 'util' → logprob: -6.753670692443848
    4. '_usage' → logprob: -7.753670692443848
    5. ''utilisation' → logprob: -9.878670692443848
    6. ' utilisation' → logprob: -10.128670692443848
    7. '_' → logprob: -11.128670692443848
    8. 'used' → logprob: -12.003670692443848
    9. '```' → logprob: -12.128670692443848
    10. '`' → logprob: -12.253670692443848

Token 872: 'usage' (ID: 25871)
  Prédit: 'usage'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'usage' → logprob: -0.002108147833496332
    2. ' usage' → logprob: -6.877108097076416
    3. 'util' → logprob: -7.377108097076416
    4. '```' → logprob: -8.627108573913574
    5. '_usage' → logprob: -9.127108573913574
    6. '`' → logprob: -9.502108573913574
    7. ''utilisation' → logprob: -10.252108573913574
    8. ' utilisation' → logprob: -11.377108573913574
    9. 'connexion' → logprob: -11.877108573913574
    10. '   ' → logprob: -11.877108573913574

Token 873: ' du' (ID: 1462)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07489782571792603
    2. 'print' → logprob: -3.0748977661132812
    3. ' =' → logprob: -4.574897766113281
    4. '=' → logprob: -5.074897766113281
    5. 'total' → logprob: -5.074897766113281
    6. 'usage' → logprob: -6.949897766113281
    7. '(total' → logprob: -7.949897766113281
    8. ' print' → logprob: -8.074897766113281
    9. 'result' → logprob: -8.074897766113281
    10. '            
' → logprob: -8.199897766113281

Token 874: ' student' (ID: 6760)
  Prédit: 'student'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'student' → logprob: -0.20457755029201508
    2. ' student' → logprob: -1.7045775651931763
    3. 'm' → logprob: -7.204577445983887
    4. 'usage' → logprob: -7.204577445983887
    5. 'interval' → logprob: -7.329577445983887
    6. ' usage' → logprob: -7.829577445983887
    7. ' étudiant' → logprob: -8.329577445983887
    8. '(student' → logprob: -8.579577445983887
    9. 'user' → logprob: -9.704577445983887
    10. 'ét' → logprob: -10.829577445983887

Token 875: ' m' (ID: 284)
  Prédit: '(student'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(student' → logprob: -1.1090635061264038
    2. '           ' → logprob: -1.4840635061264038
    3. 'student' → logprob: -1.4840635061264038
    4. ' =' → logprob: -2.3590636253356934
    5. '=' → logprob: -2.8590636253356934
    6. ',' → logprob: -4.859063625335693
    7. ' student' → logprob: -5.109063625335693
    8. '_' → logprob: -5.234063625335693
    9. 'for' → logprob: -5.234063625335693
    10. '(m' → logprob: -5.234063625335693

Token 876: ' entre' (ID: 3853)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01963486149907112
    2. 'print' → logprob: -4.39463472366333
    3. 'total' → logprob: -5.64463472366333
    4. '(total' → logprob: -7.39463472366333
    5. 'interval' → logprob: -7.51963472366333
    6. '            
' → logprob: -7.89463472366333
    7. '       ' → logprob: -8.269635200500488
    8. 'usage' → logprob: -8.394635200500488
    9. '=' → logprob: -8.769635200500488
    10. ' print' → logprob: -8.894635200500488

Token 877: ' ts' (ID: 6601)
  Prédit: 'ts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ts' → logprob: -0.0016643505077809095
    2. '(ts' → logprob: -6.501664161682129
    3. ' ts' → logprob: -8.751664161682129
    4. '	ts' → logprob: -12.876664161682129
    5. '   ' → logprob: -14.251664161682129
    6. '_ts' → logprob: -15.376664161682129
    7. 'tsx' → logprob: -15.876664161682129
    8. '  ' → logprob: -16.626665115356445
    9. '(' → logprob: -17.001665115356445
    10. ' ' → logprob: -17.126665115356445

Token 878: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005415653809905052
    2. ' et' → logprob: -6.130415439605713
    3. ' ,' → logprob: -6.255415439605713
    4. 'et' → logprob: -6.755415439605713
    5. ' and' → logprob: -9.255415916442871
    6. 'and' → logprob: -11.005415916442871
    7. '_et' → logprob: -11.255415916442871
    8. ' и' → logprob: -12.380415916442871
    9. ',
' → logprob: -12.630415916442871
    10. '_,' → logprob: -13.255415916442871

Token 879: ' te' (ID: 729)
  Prédit: ' te'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' te' → logprob: -0.31326258182525635
    2. 'te' → logprob: -1.3132625818252563
    3. '(te' → logprob: -14.438262939453125
    4. '_te' → logprob: -15.563262939453125
    5. ' ' → logprob: -16.063262939453125
    6. 'ts' → logprob: -18.438262939453125
    7. 'Te' → logprob: -18.938262939453125
    8. 'tte' → logprob: -18.938262939453125
    9. 'tes' → logprob: -19.063262939453125
    10. '.te' → logprob: -19.063262939453125

Token 880: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07383736968040466
    2. 'print' → logprob: -2.9488372802734375
    3. '
' → logprob: -4.1988372802734375
    4. '            
' → logprob: -6.9488372802734375
    5. '       ' → logprob: -7.1988372802734375
    6. 'total' → logprob: -7.1988372802734375
    7. ' print' → logprob: -7.9488372802734375
    8. '   ' → logprob: -9.198837280273438
    9. 'usage' → logprob: -9.198837280273438
    10. '```' → logprob: -9.448837280273438

Token 881: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.016956819221377373
    2. '       ' → logprob: -5.766956806182861
    3. 'print' → logprob: -5.766956806182861
    4. '            
' → logprob: -5.766956806182861
    5. '   ' → logprob: -6.891956806182861
    6. ')' → logprob: -7.016956806182861
    7. '```' → logprob: -7.266956806182861
    8. '=' → logprob: -7.641956806182861
    9. ' 
' → logprob: -8.14195728302002
    10. '    
' → logprob: -8.14195728302002

Token 882: ' ans' (ID: 3345)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.07510751485824585
    2. 'usage' → logprob: -3.2001075744628906
    3. '           ' → logprob: -4.200107574462891
    4. 'time' → logprob: -4.950107574462891
    5. 'total' → logprob: -5.325107574462891
    6. ' print' → logprob: -6.200107574462891
    7. '
' → logprob: -7.450107574462891
    8. 'duration' → logprob: -7.700107574462891
    9. 'result' → logprob: -7.825107574462891
    10. 'answer' → logprob: -8.07510757446289

Token 883: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132677972316742
    2. '=' → logprob: -1.3132678270339966
    3. '_' → logprob: -13.313267707824707
    4. ')' → logprob: -13.563267707824707
    5. '   ' → logprob: -13.938267707824707
    6. ' +=' → logprob: -14.438267707824707
    7. '    ' → logprob: -14.688267707824707
    8. '_=' → logprob: -15.563267707824707
    9. ' ' → logprob: -15.688267707824707
    10. 'space' → logprob: -15.938267707824707

Token 884: ' usage' (ID: 16622)
  Prédit: 'usage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'usage' → logprob: -0.00038038729690015316
    2. ' usage' → logprob: -7.875380516052246
    3. 'use' → logprob: -15.875380516052246
    4. '   ' → logprob: -16.62537956237793
    5. '0' → logprob: -18.00037956237793
    6. '       ' → logprob: -19.12537956237793
    7. 'Usage' → logprob: -19.50037956237793
    8. ' ' → logprob: -19.62537956237793
    9. 'used' → logprob: -19.87537956237793
    10. '  ' → logprob: -20.37537956237793

Token 885: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -3.128163257315464e-07
    2. '_en' → logprob: -15.875
    3. '_' → logprob: -16.875
    4. 's' → logprob: -18.5
    5. 'in' → logprob: -18.625
    6. '_inter' → logprob: -18.75
    7. '_usage' → logprob: -18.875
    8. 'In' → logprob: -19.125
    9. '_IN' → logprob: -19.25
    10. '=_' → logprob: -20.0

Token 886: '_period' (ID: 46594)
  Prédit: '_period'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_period' → logprob: -0.0022167498245835304
    2. 'period' → logprob: -6.127216815948486
    3. '_interval' → logprob: -12.127216339111328
    4. '_' → logprob: -12.252216339111328
    5. 'interval' → logprob: -12.252216339111328
    6. '```' → logprob: -12.877216339111328
    7. '_in' → logprob: -13.002216339111328
    8. 'student' → logprob: -13.127216339111328
    9. 'query' → logprob: -13.127216339111328
    10. '_per' → logprob: -13.377216339111328

Token 887: '(student' (ID: 67367)
  Prédit: '(student'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(student' → logprob: -4.203409844194539e-05
    2. '(' → logprob: -10.125041961669922
    3. '(
' → logprob: -13.375041961669922
    4. ' (' → logprob: -15.750041961669922
    5. '(st' → logprob: -16.125041961669922
    6. '(Student' → logprob: -16.500041961669922
    7. '(user' → logprob: -16.625041961669922
    8. 'student' → logprob: -18.000041961669922
    9. '(

' → logprob: -18.375041961669922
    10. '@student' → logprob: -18.375041961669922

Token 888: '_inter' (ID: 16818)
  Prédit: '_inter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inter' → logprob: -6.551721889991313e-05
    2. 'interval' → logprob: -9.750065803527832
    3. '[m' → logprob: -12.500065803527832
    4. '_interval' → logprob: -13.000065803527832
    5. 'inter' → logprob: -14.750065803527832
    6. 'Intervals' → logprob: -15.250065803527832
    7. 's' → logprob: -15.375065803527832
    8. '_student' → logprob: -16.000064849853516
    9. ' intervals' → logprob: -16.500064849853516
    10. '_' → logprob: -17.500064849853516

Token 889: 'vals' (ID: 44567)
  Prédit: 'vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vals' → logprob: -0.13227888941764832
    2. 'als' → logprob: -2.2572789192199707
    3. 'erv' → logprob: -5.257278919219971
    4. 't' → logprob: -5.382278919219971
    5. 'val' → logprob: -5.882278919219971
    6. 's' → logprob: -6.507278919219971
    7. 'ls' → logprob: -7.007278919219971
    8. 'ter' → logprob: -7.632278919219971
    9. 'r' → logprob: -7.882278919219971
    10. 'interval' → logprob: -8.007278442382812

Token 890: '.get' (ID: 775)
  Prédit: '[m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[m' → logprob: -1.1517960956552997e-05
    2. '[' → logprob: -11.500011444091797
    3. ' [' → logprob: -14.500011444091797
    4. '[s' → logprob: -15.250011444091797
    5. '```' → logprob: -15.500011444091797
    6. 'm' → logprob: -16.375011444091797
    7. '(m' → logprob: -16.625011444091797
    8. 's' → logprob: -17.000011444091797
    9. '[player' → logprob: -17.000011444091797
    10. '[user' → logprob: -17.250011444091797

Token 891: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -3.531315314830863e-06
    2. ' (' → logprob: -13.125003814697266
    3. 'm' → logprob: -14.750003814697266
    4. '(' → logprob: -14.750003814697266
    5. '[m' → logprob: -14.750003814697266
    6. '(
' → logprob: -16.250003814697266
    7. '```' → logprob: -16.750003814697266
    8. ',m' → logprob: -17.125003814697266
    9. ')' → logprob: -17.125003814697266
    10. '(student' → logprob: -17.375003814697266

Token 892: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001510335598140955
    2. ',(' → logprob: -6.626510143280029
    3. '(ts' → logprob: -9.001510620117188
    4. ' ,' → logprob: -10.126510620117188
    5. ',[' → logprob: -11.126510620117188
    6. '   ' → logprob: -13.751510620117188
    7. '(' → logprob: -13.751510620117188
    8. '(m' → logprob: -13.876510620117188
    9. ' (' → logprob: -14.376510620117188
    10. '((' → logprob: -14.501510620117188

Token 893: ' []' (ID: 6126)
  Prédit: 'ts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ts' → logprob: -0.296358585357666
    2. '(ts' → logprob: -1.421358585357666
    3. '[]' → logprob: -4.921358585357666
    4. ' ts' → logprob: -5.921358585357666
    5. ' (' → logprob: -6.421358585357666
    6. '[])' → logprob: -6.796358585357666
    7. '[],' → logprob: -7.171358585357666
    8. '[(' → logprob: -7.296358585357666
    9. ')' → logprob: -8.546358108520508
    10. '[' → logprob: -8.671358108520508

Token 894: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0020023921970278025
    2. '(ts' → logprob: -6.252002239227295
    3. ' ,' → logprob: -9.752002716064453
    4. ',(' → logprob: -11.502002716064453
    5. '(' → logprob: -12.752002716064453
    6. '   ' → logprob: -13.502002716064453
    7. '(),' → logprob: -15.502002716064453
    8. ' (' → logprob: -15.502002716064453
    9. ',
' → logprob: -15.627002716064453
    10. '           ' → logprob: -16.127002716064453

Token 895: ' ts' (ID: 6601)
  Prédit: 'ts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ts' → logprob: -0.023246292024850845
    2. ' ts' → logprob: -3.7732462882995605
    3. '	ts' → logprob: -14.148246765136719
    4. '(ts' → logprob: -15.898246765136719
    5. '_ts' → logprob: -17.02324676513672
    6. '   ' → logprob: -18.27324676513672
    7. ' ' → logprob: -19.02324676513672
    8. 't' → logprob: -19.02324676513672
    9. 'tsi' → logprob: -19.27324676513672
    10. ' Ts' → logprob: -19.27324676513672

Token 896: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.6286106983898208e-05
    2. ' ,' → logprob: -11.125016212463379
    3. ',
' → logprob: -14.125016212463379
    4. ',\
' → logprob: -15.625016212463379
    5. ',tr' → logprob: -16.250017166137695
    6. ')' → logprob: -16.500017166137695
    7. '<|end|>' → logprob: -16.625017166137695
    8. ',to' → logprob: -16.750017166137695
    9. '‌,' → logprob: -17.250017166137695
    10. ',end' → logprob: -17.250017166137695

Token 897: ' te' (ID: 729)
  Prédit: 'te'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'te' → logprob: -0.048587486147880554
    2. ' te' → logprob: -3.0485875606536865
    3. '(te' → logprob: -16.923587799072266
    4. '_te' → logprob: -17.673587799072266
    5. ' ' → logprob: -18.173587799072266
    6. 'Te' → logprob: -18.298587799072266
    7. '   ' → logprob: -19.173587799072266
    8. 'tei' → logprob: -19.423587799072266
    9. '.te' → logprob: -19.423587799072266
    10. 'tea' → logprob: -19.923587799072266

Token 898: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07895027101039886
    2. ')
' → logprob: -2.5789501667022705
    3. '           ' → logprob: -10.453949928283691
    4. ')
' → logprob: -10.703949928283691
    5. ' )' → logprob: -12.578949928283691
    6. '   ' → logprob: -12.578949928283691
    7. ' )
' → logprob: -13.703949928283691
    8. '       ' → logprob: -14.828949928283691
    9. ')`
' → logprob: -14.953949928283691
    10. ' ' → logprob: -15.828949928283691

Token 899: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4744492769241333
    2. 'print' → logprob: -0.9744492769241333
    3. ' print' → logprob: -8.474449157714844
    4. '<|end|>' → logprob: -10.099449157714844
    5. '```' → logprob: -10.224449157714844
    6. '		' → logprob: -10.349449157714844
    7. '       ' → logprob: -10.599449157714844
    8. '
' → logprob: -11.474449157714844
    9. '   ' → logprob: -12.099449157714844
    10. '	print' → logprob: -12.474449157714844

Token 900: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00044663884909823537
    2. '           ' → logprob: -7.750446796417236
    3. ' print' → logprob: -11.250446319580078
    4. '       ' → logprob: -12.875446319580078
    5. '	print' → logprob: -15.500446319580078
    6. '   ' → logprob: -15.750446319580078
    7. '```' → logprob: -16.625446319580078
    8. '.print' → logprob: -17.875446319580078
    9. '#print' → logprob: -18.625446319580078
    10. '
' → logprob: -19.000446319580078

Token 901: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -1.3544423381972592e-05
    2. '(' → logprob: -11.25001335144043
    3. 'ans' → logprob: -14.87501335144043
    4. '()' → logprob: -16.87501335144043
    5. ' (' → logprob: -17.00001335144043
    6. '(int' → logprob: -17.50001335144043
    7. '(answer' → logprob: -17.87501335144043
    8. '(f' → logprob: -18.25001335144043
    9. '(abs' → logprob: -18.37501335144043
    10. '(
' → logprob: -18.87501335144043

Token 902: ')


' (ID: 7861)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001446611131541431
    2. '()' → logprob: -9.500144958496094
    3. '())' → logprob: -9.625144958496094
    4. ' )' → logprob: -12.625144958496094
    5. ')
' → logprob: -15.875144958496094
    6. '(' → logprob: -16.375144958496094
    7. '))' → logprob: -17.375144958496094
    8. ')`' → logprob: -17.625144958496094
    9. '   ' → logprob: -18.250144958496094
    10. '')' → logprob: -19.250144958496094

Token 903: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 904: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.5763043165206909
    2. ' __' → logprob: -0.8263043165206909
    3. '_' → logprob: -8.20130443572998
    4. '_name' → logprob: -9.82630443572998
    5. 'name' → logprob: -10.82630443572998
    6. '___' → logprob: -11.82630443572998
    7. ' ' → logprob: -12.07630443572998
    8. 'Name' → logprob: -13.82630443572998
    9. ' ' → logprob: -14.95130443572998
    10. ' "__' → logprob: -14.95130443572998

Token 905: 'name' (ID: 897)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5035206079483032
    2. '==' → logprob: -1.3785206079483032
    3. '__' → logprob: -2.1285204887390137
    4. '=="' → logprob: -3.7535204887390137
    5. '=='' → logprob: -7.128520488739014
    6. ' __' → logprob: -8.878520965576172
    7. 'name' → logprob: -9.628520965576172
    8. 'main' → logprob: -10.503520965576172
    9. ' =="' → logprob: -10.628520965576172
    10. '[' → logprob: -11.003520965576172

Token 906: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -2.7014437364414334e-05
    2. '==' → logprob: -10.62502670288086
    3. '__.__' → logprob: -13.50002670288086
    4. '=="' → logprob: -14.37502670288086
    5. ' ==' → logprob: -14.75002670288086
    6. '___' → logprob: -17.00002670288086
    7. '__.' → logprob: -17.12502670288086
    8. '_' → logprob: -17.37502670288086
    9. '____' → logprob: -17.50002670288086
    10. 'name' → logprob: -17.50002670288086

Token 907: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.10014918446540833
    2. '=="' → logprob: -3.100149154663086
    3. ' ==' → logprob: -3.600149154663086
    4. '__' → logprob: -3.850149154663086
    5. '=='' → logprob: -6.475149154663086
    6. '=' → logprob: -9.475149154663086
    7. '==
' → logprob: -10.850149154663086
    8. '===' → logprob: -11.475149154663086
    9. '_' → logprob: -13.350149154663086
    10. '==="' → logprob: -13.475149154663086

Token 908: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.03805778920650482
    2. ''' → logprob: -3.288057804107666
    3. ' "__' → logprob: -11.538057327270508
    4. '__' → logprob: -12.038057327270508
    5. ' '__' → logprob: -15.163057327270508
    6. '"user' → logprob: -15.663057327270508
    7. '"name' → logprob: -16.163057327270508
    8. '("__' → logprob: -17.288057327270508
    9. '   ' → logprob: -17.913057327270508
    10. ''"' → logprob: -18.163057327270508

Token 909: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0013477344764396548
    2. '__' → logprob: -6.626347541809082
    3. '"' → logprob: -10.876347541809082
    4. 'name' → logprob: -13.376347541809082
    5. '_main' → logprob: -14.876347541809082
    6. ''' → logprob: -15.251347541809082
    7. '__":
' → logprob: -15.376347541809082
    8. ' main' → logprob: -15.626347541809082
    9. 'ma' → logprob: -15.751347541809082
    10. 'mp' → logprob: -16.6263484954834

Token 910: '__":
' (ID: 49892)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.18151608109474182
    2. '__":
' → logprob: -1.8065160512924194
    3. '_' → logprob: -6.931516170501709
    4. '__':
' → logprob: -7.931516170501709
    5. '==' → logprob: -8.68151569366455
    6. '__:' → logprob: -9.80651569366455
    7. ' ==' → logprob: -10.68151569366455
    8. ':' → logprob: -10.68151569366455
    9. '__["' → logprob: -10.80651569366455
    10. '.__' → logprob: -10.80651569366455

Token 911: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20416338741779327
    2. 'main' → logprob: -1.7041634321212769
    3. '	main' → logprob: -6.329163551330566
    4. ' main' → logprob: -6.954163551330566
    5. '   ' → logprob: -13.079163551330566
    6. ' ' → logprob: -13.329163551330566
    7. '(main' → logprob: -13.704163551330566
    8. '_main' → logprob: -13.954163551330566
    9. '  ' → logprob: -13.954163551330566
    10. '__' → logprob: -14.329163551330566

Token 912: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -4.320199877838604e-07
    2. ' main' → logprob: -15.0
    3. '	main' → logprob: -18.75
    4. '   ' → logprob: -21.375
    5. '_main' → logprob: -23.125
    6. '(main' → logprob: -23.25
    7. '.main' → logprob: -23.875
    8. 'Main' → logprob: -26.125
    9. 'maine' → logprob: -27.375
    10. '-main' → logprob: -27.5

Token 913: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 911
Tokens correctement prédits (1ère position, stricte): 369
Tokens correctement prédits (1ère position, avec adaptation): 389
Tokens correctement prédits (top 10): 678
Précision stricte (1ère position): 40.50%
Précision adaptée (1ère position): 42.70%
Précision (top 10): 74.42%
================================================================================
