================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:17:08
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

# Cette fonction calcule (base^exp) % mod de manière efficace par exponentiation rapide
def mod_exp(base, exp, mod):
    result = 1
    cur = base % mod
    while exp > 0:
        if exp & 1:
            result = (result * cur) % mod
        cur = (cur * cur) % mod
        exp >>= 1
    return result

# Fonction principale qui pour un ensemble de nombres entiers [A, B],
# compte le nombre de sous-ensembles non vides qui sont triés à la fois
# par ordre numérique et par ordre lexicographique sur leur représentation en chaîne.
def count_sorted_subsets(A, B, P):
    # Générer la liste des entiers entre A et B
    numbers = list(range(A, B + 1))
    n = len(numbers)
    
    # Convertir en chaînes pour la comparaison lexicographique
    str_numbers = [str(x) for x in numbers]
    
    # Trier numériquement (croissant)
    num_sorted = sorted(numbers)
    # Trier lexicographiquement
    lex_sorted = sorted(numbers, key=lambda x: str(x))
    
    # Vérifier pour chaque nombre si la position dans les deux tris est la même.
    # Cette condition équivaut à la propriété suivante:
    # Pour tout couple (x,y), x<y numérique implique str(x)<str(y) lexicographiquement.
    # Donc argsort des deux tris doit être identique.
    # Nous allons construire un tableau où res[i]=1 si num_sorted[i] 
    # et lex_sorted[i] correspondent (même valeur).
    # Si res[i]=1 pour tous i, alors tout l'ensemble est bon.
    # Le problème demande les sous-ensembles, 
    # or à partir de l'ensemble complet, seuls des "blocs" contigus selon l'ordre lex
    # et numérique sont compatibles.
    # Examinons les permutations pour trouver les "blocs" de concordance.

    # On crée un dictionnaire position dans le tri lex
    pos_lex = {}
    for idx, val in enumerate(lex_sorted):
        pos_lex[val] = idx
    
    # On va examiner la permutation induced par les positions lex dans l'ordre numérique
    perm = [pos_lex[val] for val in num_sorted]
    # perm est une permutation de [0, n-1]
    
    # Nous cherchons les plus longs segments où perm[i] == i,
    # cela correspond aux sous-ensembles où
    # l'ordre numérique et lexicographique coïncident.
    # Or notre problème est plus fin, car les sous-ensembles peuvent
    # être n'importe quelles combinaisons des éléments pour lesquels la double
    # condition est vraie, mais seulement si dans la sous-liste triée numériquement,
    # la correspondance lex et numérique coïncide.

    # Le problème revient à: compter les sous-ensemble non vides
    # d'éléments qui forment des segments contigus dans num_sorted dans lesquels
    # perm[i]=i pour tous les éléments du segment.
    # En effet, si l'ordre de position lex est identique à l'ordre numérique
    # pour tous les éléments du segment, alors pour tout sous-ensemble de ce
    # segment, la propriété est vérifiée.
    
    # Ainsi, le tableau perm définit des positions,
    # et on détecte les segments continues où perm[i] == i.
    
    # Nous allons identifier ces "blocs" de longueur consécutive 
    # où perm[i] == i.
    
    total_subsets = 0
    
    # On parcourt perm et compte les longueurs de segments consécutifs perm[i]==i
    # pour chacun on ajoute (2^length -1) car toutes les combinaisons non vides
    # dans ce segment sont valides.
    
    length = 0
    for i in range(n):
        if perm[i] == i:
            length += 1
        else:
            # Si la chaine s'interrompt, on calcule les subsets pour le segment précédent
            if length > 0:
                total_subsets = (total_subsets + mod_exp(2, length, P) - 1) % P
                length = 0
    # Traiter le dernier segment s'il existe
    if length > 0:
        total_subsets = (total_subsets + mod_exp(2, length, P) - 1) % P

    return total_subsets % P

# Lire les données jusqu'à "0 0 0"
for line in sys.stdin:
    A, B, P = map(int, line.split())
    if A == 0 and B == 0 and P == 0:
        break
    result = count_sorted_subsets(A, B, P)
    print(result)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: '#' (ID: 2)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0531209371984005
    2. '\n' → logprob: -3.6781208515167236
    3. 'import' → logprob: -4.303121089935303
    4. '\' → logprob: -4.803121089935303
    5. '[' → logprob: -6.928121089935303
    6. '' → logprob: -7.303121089935303
    7. '```' → logprob: -7.553121089935303
    8. 'newline' → logprob: -7.553121089935303
    9. '#' → logprob: -7.928121089935303
    10. '<|end|>' → logprob: -8.053120613098145

Token 4: ' Cette' (ID: 27383)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2650187015533447
    2. ' This' → logprob: -2.7650187015533447
    3. ' The' → logprob: -3.6400187015533447
    4. ' argparse' → logprob: -3.8900187015533447
    5. 'def' → logprob: -4.515018463134766
    6. ' is' → logprob: -4.640018463134766
    7. ' argv' → logprob: -4.765018463134766
    8. 'argv' → logprob: -4.890018463134766
    9. 'This' → logprob: -4.890018463134766
    10. '!' → logprob: -5.015018463134766

Token 5: ' fonction' (ID: 17610)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.015314402990043163
    2. '_' → logprob: -4.26531457901001
    3. ' code' → logprob: -7.39031457901001
    4. '  ' → logprob: -9.265314102172852
    5. ' ' → logprob: -9.640314102172852
    6. ' )' → logprob: -9.890314102172852
    7. ' ‌' → logprob: -10.015314102172852
    8. ' is' → logprob: -10.140314102172852
    9. '.' → logprob: -10.515314102172852
    10. '_code' → logprob: -10.640314102172852

Token 6: ' calc' (ID: 25691)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.38887953758239746
    2. '_' → logprob: -1.6388795375823975
    3. 'def' → logprob: -2.5138795375823975
    4. ' def' → logprob: -4.263879776000977
    5. '(' → logprob: -4.513879776000977
    6. 's' → logprob: -5.138879776000977
    7. ':' → logprob: -6.013879776000977
    8. ' ' → logprob: -6.638879776000977
    9. ' de' → logprob: -7.263879776000977
    10. 'd' → logprob: -7.388879776000977

Token 7: 'ule' (ID: 1601)
  Prédit: 'ule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ule' → logprob: -5.478889215737581e-05
    2. 'ul' → logprob: -10.125054359436035
    3. '_' → logprob: -11.875054359436035
    4. 'ulé' → logprob: -13.000054359436035
    5. '```' → logprob: -13.625054359436035
    6. '\' → logprob: -13.750054359436035
    7. 'cule' → logprob: -14.000054359436035
    8. '**' → logprob: -15.000054359436035
    9. 'u' → logprob: -15.125054359436035
    10. 'уле' → logprob: -15.125054359436035

Token 8: ' (' (ID: 350)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.021049315109848976
    2. ' ' → logprob: -4.396049499511719
    3. '_le' → logprob: -6.021049499511719
    4. '_la' → logprob: -6.146049499511719
    5. '_l' → logprob: -6.396049499511719
    6. 's' → logprob: -7.021049499511719
    7. 'l' → logprob: -8.271049499511719
    8. '<|end|>' → logprob: -8.396049499511719
    9. '_s' → logprob: -8.646049499511719
    10. ' la' → logprob: -9.146049499511719

Token 9: 'base' (ID: 5423)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.4373216927051544
    2. ')' → logprob: -1.437321662902832
    3. ' )' → logprob: -2.812321662902832
    4. 'la' → logprob: -3.437321662902832
    5. 'le' → logprob: -4.437321662902832
    6. 'l' → logprob: -5.312321662902832
    7. ' l' → logprob: -5.937321662902832
    8. 's' → logprob: -6.812321662902832
    9. ' le' → logprob: -6.937321662902832
    10. 'factor' → logprob: -7.062321662902832

Token 10: '^' (ID: 61)
  Prédit: ' **'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' **' → logprob: -0.06592069566249847
    2. '**' → logprob: -3.06592059135437
    3. ' **)' → logprob: -5.065920829772949
    4. ')' → logprob: -5.065920829772949
    5. ',' → logprob: -6.690920829772949
    6. ' ' → logprob: -7.190920829772949
    7. ' ' → logprob: -7.315920829772949
    8. ' ^' → logprob: -7.565920829772949
    9. ' raised' → logprob: -8.44092082977295
    10. ' à' → logprob: -8.81592082977295

Token 11: 'exp' (ID: 8067)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.02215074934065342
    2. 'exp' → logprob: -4.39715051651001
    3. ' exponent' → logprob: -4.89715051651001
    4. ')' → logprob: -7.27215051651001
    5. 'expo' → logprob: -7.39715051651001
    6. ' ' → logprob: -8.147150993347168
    7. ' ex' → logprob: -8.647150993347168
    8. ' expo' → logprob: -9.397150993347168
    9. ' n' → logprob: -9.897150993347168
    10. 'n' → logprob: -10.022150993347168

Token 12: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00038693982060067356
    2. ' )' → logprob: -8.375387191772461
    3. '_' → logprob: -9.375387191772461
    4. 'e' → logprob: -11.250387191772461
    5. '')' → logprob: -11.375387191772461
    6. ')**' → logprob: -11.500387191772461
    7. 'u' → logprob: -12.000387191772461
    8. '-' → logprob: -12.125387191772461
    9. '`)' → logprob: -12.500387191772461
    10. '_)' → logprob: -12.625387191772461

Token 13: ' %' (ID: 1851)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.434990257024765
    2. ')' → logprob: -2.184990167617798
    3. ' def' → logprob: -2.184990167617798
    4. ' ' → logprob: -2.434990167617798
    5. ' )' → logprob: -3.684990167617798
    6. '_' → logprob: -5.309990406036377
    7. '*' → logprob: -6.434990406036377
    8. ' de' → logprob: -6.434990406036377
    9. ',' → logprob: -6.809990406036377
    10. '\' → logprob: -7.059990406036377

Token 14: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.3800104260444641
    2. ' modulus' → logprob: -1.8800103664398193
    3. ' mod' → logprob: -2.3800103664398193
    4. ' modulo' → logprob: -3.2550103664398193
    5. '```' → logprob: -5.255010604858398
    6. '(' → logprob: -5.505010604858398
    7. '(mod' → logprob: -6.005010604858398
    8. ' ' → logprob: -6.005010604858398
    9. ' (' → logprob: -6.130010604858398
    10. 'base' → logprob: -6.130010604858398

Token 15: ' de' (ID: 334)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.07226622849702835
    2. 'd' → logprob: -3.1972663402557373
    3. '\' → logprob: -3.9472663402557373
    4. 'de' → logprob: -5.197266101837158
    5. ' def' → logprob: -6.197266101837158
    6. ' de' → logprob: -6.697266101837158
    7. '\n' → logprob: -7.822266101837158
    8. ' d' → logprob: -9.572266578674316
    9. '```' → logprob: -9.572266578674316
    10. '
' → logprob: -10.322266578674316

Token 16: ' manière' (ID: 35013)
  Prédit: ' manière'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' manière' → logprob: -0.4397318363189697
    2. ' façon' → logprob: -1.1897318363189697
    3. 'man' → logprob: -4.439731597900391
    4. 'p' → logprob: -4.439731597900391
    5. 'f' → logprob: -4.939731597900391
    6. ' la' → logprob: -5.439731597900391
    7. 'fa' → logprob: -5.564731597900391
    8. 's' → logprob: -6.314731597900391
    9. ' man' → logprob: -6.439731597900391
    10. 'r' → logprob: -6.689731597900391

Token 17: ' efficace' (ID: 54338)
  Prédit: ' efficace'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' efficace' → logprob: -0.07203686237335205
    2. ' effic' → logprob: -2.9470367431640625
    3. 'efficient' → logprob: -5.1970367431640625
    4. 'r' → logprob: -6.3220367431640625
    5. ' eficiente' → logprob: -6.6970367431640625
    6. ' réc' → logprob: -6.8220367431640625
    7. 'eff' → logprob: -6.9470367431640625
    8. ' rapide' → logprob: -6.9470367431640625
    9. ' efficaces' → logprob: -6.9470367431640625
    10. ' efficient' → logprob: -7.5720367431640625

Token 18: ' par' (ID: 686)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.020428713411092758
    2. '\' → logprob: -4.770428657531738
    3. 'd' → logprob: -4.770428657531738
    4. ' def' → logprob: -6.645428657531738
    5. '```' → logprob: -6.645428657531738
    6. 'de' → logprob: -8.520428657531738
    7. '\n' → logprob: -9.020428657531738
    8. ' 
' → logprob: -9.270428657531738
    9. ' 

' → logprob: -10.145428657531738
    10. ' d' → logprob: -10.395428657531738

Token 19: ' exponent' (ID: 51159)
  Prédit: ' exponent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' exponent' → logprob: -0.05110333114862442
    2. 'ex' → logprob: -3.176103353500366
    3. ' l' → logprob: -6.301103115081787
    4. 'import' → logprob: -6.926103115081787
    5. ' réc' → logprob: -7.051103115081787
    6. 'l' → logprob: -7.551103115081787
    7. ' la' → logprob: -7.926103115081787
    8. ' recursion' → logprob: -7.926103115081787
    9. '#' → logprob: -8.301103591918945
    10. 'pow' → logprob: -8.551103591918945

Token 20: 'iation' (ID: 23408)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0034351812209933996
    2. 'a' → logprob: -6.628435134887695
    3. 'ation' → logprob: -7.003435134887695
    4. 'i' → logprob: -8.128435134887695
    5. ' t' → logprob: -8.128435134887695
    6. 'iation' → logprob: -8.378435134887695
    7. 'ti' → logprob: -9.003435134887695
    8. '```' → logprob: -10.128435134887695
    9. 'e' → logprob: -10.378435134887695
    10. 'l' → logprob: -10.378435134887695

Token 21: ' rapide' (ID: 44887)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.22367757558822632
    2. ' ' → logprob: -3.348677635192871
    3. ' _' → logprob: -3.473677635192871
    4. '_recursive' → logprob: -3.848677635192871
    5. '_iter' → logprob: -4.223677635192871
    6. ')' → logprob: -4.723677635192871
    7. '_py' → logprob: -4.973677635192871
    8. ' par' → logprob: -5.098677635192871
    9. ' it' → logprob: -5.098677635192871
    10. ' python' → logprob: -5.223677635192871

Token 22: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.07567640393972397
    2. '\' → logprob: -2.950676441192627
    3. 'd' → logprob: -5.075676441192627
    4. 'de' → logprob: -5.700676441192627
    5. ' de' → logprob: -5.700676441192627
    6. ' def' → logprob: -5.700676441192627
    7. '```' → logprob: -6.325676441192627
    8. '\n' → logprob: -6.450676441192627
    9. ':' → logprob: -8.450675964355469
    10. '_' → logprob: -8.825675964355469

Token 23: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.018528807908296585
    2. 'd' → logprob: -4.018528938293457
    3. 'de' → logprob: -8.018528938293457
    4. '\' → logprob: -10.143528938293457
    5. '```' → logprob: -11.893528938293457
    6. 'dé' → logprob: -13.643528938293457
    7. ' def' → logprob: -14.018528938293457
    8. '\n' → logprob: -14.268528938293457
    9. ':def' → logprob: -16.01852798461914
    10. '``' → logprob: -16.14352798461914

Token 24: ' mod' (ID: 1812)
  Prédit: ' mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.04063652083277702
    2. ' pow' → logprob: -3.6656365394592285
    3. ' modular' → logprob: -5.4156365394592285
    4. 'mod' → logprob: -5.5406365394592285
    5. ' power' → logprob: -5.9156365394592285
    6. ' ' → logprob: -6.6656365394592285
    7. ' fast' → logprob: -7.1656365394592285
    8. 'pow' → logprob: -7.4156365394592285
    9. ' puissance' → logprob: -7.7906365394592285
    10. ' puiss' → logprob: -10.66563606262207

Token 25: '_exp' (ID: 30306)
  Prédit: '_pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pow' → logprob: -0.176308274269104
    2. '_exp' → logprob: -2.3013081550598145
    3. '_ex' → logprob: -3.6763081550598145
    4. '_' → logprob: -3.9263081550598145
    5. '_power' → logprob: -4.1763081550598145
    6. 'pow' → logprob: -7.1763081550598145
    7. ' _' → logprob: -9.426308631896973
    8. 'exp' → logprob: -9.551308631896973
    9. '_mul' → logprob: -10.301308631896973
    10. '_add' → logprob: -10.676308631896973

Token 26: '(base' (ID: 25314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5760387778282166
    2. '(base' → logprob: -0.8260387778282166
    3. ' (' → logprob: -10.076038360595703
    4. '_' → logprob: -10.826038360595703
    5. '(x' → logprob: -11.326038360595703
    6. '(a' → logprob: -12.451038360595703
    7. '_base' → logprob: -12.576038360595703
    8. '(b' → logprob: -12.826038360595703
    9. '(BASE' → logprob: -12.951038360595703
    10. '_(' → logprob: -13.451038360595703

Token 27: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005550591740757227
    2. ' ,' → logprob: -7.500555038452148
    3. ',
' → logprob: -14.500555038452148
    4. ',

' → logprob: -15.125555038452148
    5. ' ' → logprob: -15.250555038452148
    6. ')' → logprob: -15.250555038452148
    7. ',b' → logprob: -15.250555038452148
    8. '<|end|>' → logprob: -15.625555038452148
    9. '‌,' → logprob: -15.875555038452148
    10. '):' → logprob: -16.25055503845215

Token 28: ' exp' (ID: 2794)
  Prédit: ' exp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' exp' → logprob: -0.6932068467140198
    2. 'exp' → logprob: -0.6932068467140198
    3. ' exponent' → logprob: -10.693206787109375
    4. 'ex' → logprob: -11.068206787109375
    5. ' ' → logprob: -11.318206787109375
    6. '	exp' → logprob: -12.193206787109375
    7. ' ex' → logprob: -13.443206787109375
    8. '_exp' → logprob: -14.568206787109375
    9. ' ' → logprob: -14.943206787109375
    10. '   ' → logprob: -14.943206787109375

Token 29: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.14345139265060425
    2. ',' → logprob: -2.018451452255249
    3. ')' → logprob: -7.51845121383667
    4. ' ):' → logprob: -9.518451690673828
    5. ' ,' → logprob: -9.643451690673828
    6. ':' → logprob: -9.768451690673828
    7. '):
' → logprob: -11.518451690673828
    8. '=' → logprob: -12.143451690673828
    9. ' ' → logprob: -13.018451690673828
    10. '   ' → logprob: -13.268451690673828

Token 30: ' mod' (ID: 1812)
  Prédit: ' mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.0012108299415558577
    2. 'mod' → logprob: -6.751210689544678
    3. ' ' → logprob: -10.751211166381836
    4. ' modulus' → logprob: -11.626211166381836
    5. ' ' → logprob: -13.126211166381836
    6. '	mod' → logprob: -13.126211166381836
    7. ' modulo' → logprob: -13.376211166381836
    8. ')' → logprob: -13.751211166381836
    9. ',' → logprob: -14.001211166381836
    10. ' modul' → logprob: -14.126211166381836

Token 31: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0007659103139303625
    2. ')' → logprob: -7.250765800476074
    3. ':' → logprob: -10.000765800476074
    4. ' ):' → logprob: -11.625765800476074
    5. '):
' → logprob: -14.375765800476074
    6. ',' → logprob: -15.250765800476074
    7. '=' → logprob: -15.375765800476074
    8. ' :' → logprob: -15.750765800476074
    9. '   ' → logprob: -16.00076675415039
    10. ')：' → logprob: -16.75076675415039

Token 32: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04449121654033661
    2. '   ' → logprob: -3.2944912910461426
    3. ' :' → logprob: -5.669491291046143
    4. '):' → logprob: -6.044491291046143
    5. ':
' → logprob: -8.169490814208984
    6. ':**' → logprob: -9.044490814208984
    7. ')' → logprob: -10.169490814208984
    8. ',' → logprob: -10.544490814208984
    9. '):
' → logprob: -10.794490814208984
    10. ' ' → logprob: -10.794490814208984

Token 33: ' result' (ID: 1534)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06408713012933731
    2. ' result' → logprob: -3.314087152481079
    3. ' if' → logprob: -4.5640869140625
    4. '    ' → logprob: -4.5640869140625
    5. 'result' (adapté à ' result') → logprob: -6.0640869140625
    6. '    
' → logprob: -6.6890869140625
    7. 'if' → logprob: -8.3140869140625
    8. '     
' → logprob: -8.4390869140625
    9. '```' → logprob: -8.6890869140625
    10. ' ' → logprob: -8.6890869140625

Token 34: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00682240491732955
    2. '=' → logprob: -5.00682258605957
    3. ' ' → logprob: -9.25682258605957
    4. '<|end|>' → logprob: -11.88182258605957
    5. ' =)' → logprob: -13.50682258605957
    6. '<|end|>' → logprob: -14.63182258605957
    7. ' =
' → logprob: -14.88182258605957
    8. '  ' → logprob: -14.88182258605957
    9. ')' → logprob: -15.00682258605957
    10. ' |=' → logprob: -15.00682258605957

Token 35: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.42870253324508667
    2. ' ' → logprob: -1.0537025928497314
    3. '   ' → logprob: -13.428702354431152
    4. ' ' → logprob: -15.678702354431152
    5. '```' → logprob: -16.36620330810547
    6. '  ' → logprob: -16.55370330810547
    7. 'pow' → logprob: -17.55370330810547
    8. '    ' → logprob: -17.61620330810547
    9. '１' → logprob: -18.17870330810547
    10. '۱' → logprob: -18.17870330810547

Token 36: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. '   ' → logprob: -17.5000057220459
    4. '```' → logprob: -19.3750057220459
    5. 'pow' → logprob: -20.0000057220459
    6. '`' → logprob: -21.3750057220459
    7. '۱' → logprob: -21.3750057220459
    8. '１' → logprob: -21.6250057220459
    9. '  ' → logprob: -21.6250057220459
    10. '(' → logprob: -22.4375057220459

Token 37: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.25555142760276794
    2. '<|end|>' → logprob: -2.630551338195801
    3. '   ' → logprob: -2.755551338195801
    4. '    ' → logprob: -3.005551338195801
    5. '  ' → logprob: -4.005551338195801
    6. ',' → logprob: -5.255551338195801
    7. ')' → logprob: -5.380551338195801
    8. '<|end|>' → logprob: -6.005551338195801
    9. '    
' → logprob: -6.255551338195801
    10. '   
' → logprob: -6.880551338195801

Token 38: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.221180722117424
    2. '    
' → logprob: -1.9711806774139404
    3. '   
' → logprob: -4.2211809158325195
    4. ' ' → logprob: -4.3461809158325195
    5. '    ' → logprob: -5.2211809158325195
    6. '     
' → logprob: -5.8461809158325195
    7. '
' → logprob: -5.9711809158325195
    8. ' while' → logprob: -5.9711809158325195
    9. '```' → logprob: -6.0961809158325195
    10. ')' → logprob: -6.0961809158325195

Token 39: ' cur' (ID: 4396)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '    ' → logprob: -1.2945373058319092
    2. '    
' → logprob: -1.2945373058319092
    3. '     
' → logprob: -1.7945373058319092
    4. '   ' → logprob: -2.044537305831909
    5. ' while' → logprob: -2.669537305831909
    6. ' 
' → logprob: -3.669537305831909
    7. ' ' → logprob: -3.669537305831909
    8. '   
' → logprob: -3.919537305831909
    9. 'while' → logprob: -5.669537544250488
    10. '  
' → logprob: -6.544537544250488

Token 40: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.32235902547836304
    2. '=' → logprob: -1.9473590850830078
    3. ' =' → logprob: -2.822359085083008
    4. ' ' → logprob: -3.322359085083008
    5. 'ent' → logprob: -3.947359085083008
    6. 'rent' → logprob: -5.447359085083008
    7. '_base' → logprob: -5.572359085083008
    8. '   ' → logprob: -5.947359085083008
    9. '*' → logprob: -6.197359085083008
    10. '_val' → logprob: -6.697359085083008

Token 41: ' base' (ID: 3611)
  Prédit: ' base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' base' → logprob: -0.06202515959739685
    2. 'base' → logprob: -2.8120250701904297
    3. ' ' → logprob: -10.81202507019043
    4. '(base' → logprob: -10.81202507019043
    5. '	base' → logprob: -11.68702507019043
    6. '   ' → logprob: -12.81202507019043
    7. '    ' → logprob: -13.56202507019043
    8. '1' → logprob: -14.06202507019043
    9. ' ' → logprob: -14.06202507019043
    10. '_base' → logprob: -14.18702507019043

Token 42: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.5664628744125366
    2. '<|end|>' → logprob: -1.6914628744125366
    3. '%' → logprob: -1.9414628744125366
    4. ' ' → logprob: -3.191462993621826
    5. '<|end|>' → logprob: -3.691462993621826
    6. '   ' → logprob: -3.816462993621826
    7. '    
' → logprob: -5.566462993621826
    8. ' 
' → logprob: -5.816462993621826
    9. '    ' → logprob: -6.066462993621826
    10. '  ' → logprob: -6.191462993621826

Token 43: ' mod' (ID: 1812)
  Prédit: ' mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.5759522914886475
    2. 'mod' → logprob: -0.8259522914886475
    3. ' ' → logprob: -12.200952529907227
    4. ' ' → logprob: -12.575952529907227
    5. '(mod' → logprob: -12.950952529907227
    6. '	mod' → logprob: -13.450952529907227
    7. '  ' → logprob: -15.450952529907227
    8. ' modul' → logprob: -16.575952529907227
    9. '_mod' → logprob: -16.950952529907227
    10. ' мод' → logprob: -16.950952529907227

Token 44: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38604748249053955
    2. '    
' → logprob: -1.7610474824905396
    3. '
' → logprob: -2.01104736328125
    4. '   
' → logprob: -5.76104736328125
    5. ' 
' → logprob: -6.01104736328125
    6. '  
' → logprob: -6.26104736328125
    7. '```' → logprob: -6.26104736328125
    8. '\n' → logprob: -6.63604736328125
    9. '     
' → logprob: -7.01104736328125
    10. '    ' → logprob: -7.26104736328125

Token 45: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9163484573364258
    2. '    
' → logprob: -1.1663484573364258
    3. '   ' → logprob: -1.5413484573364258
    4. ' 
' → logprob: -3.166348457336426
    5. '   
' → logprob: -4.291348457336426
    6. '  
' → logprob: -5.291348457336426
    7. '     
' → logprob: -5.666348457336426
    8. '    ' → logprob: -5.791348457336426
    9. '```' → logprob: -6.666348457336426
    10. ' while' → logprob: -6.666348457336426

Token 46: ' while' (ID: 2049)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6980152130126953
    2. ' while' → logprob: -1.0730152130126953
    3. 'while' (adapté à ' while') → logprob: -2.9480152130126953
    4. '    
' → logprob: -3.3230152130126953
    5. '
' → logprob: -3.5730152130126953
    6. '```' → logprob: -4.448015213012695
    7. ' 
' → logprob: -4.948015213012695
    8. '<|end|>' → logprob: -5.073015213012695
    9. ' ' → logprob: -5.448015213012695
    10. '   
' → logprob: -5.823015213012695

Token 47: ' exp' (ID: 2794)
  Prédit: ' exp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' exp' → logprob: -0.0336758978664875
    2. 'exp' → logprob: -3.4086759090423584
    3. '(exp' → logprob: -10.658676147460938
    4. ' ex' → logprob: -13.158676147460938
    5. '	exp' → logprob: -13.658676147460938
    6. ' ' → logprob: -14.158676147460938
    7. ' (' → logprob: -14.158676147460938
    8. ' ' → logprob: -14.408676147460938
    9. '_exp' → logprob: -14.783676147460938
    10. 'ex' → logprob: -14.908676147460938

Token 48: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.005236360710114241
    2. '>' → logprob: -5.2552361488342285
    3. ' ' → logprob: -13.380236625671387
    4. ' ' → logprob: -14.505236625671387
    5. '   ' → logprob: -15.880236625671387
    6. ' &' → logprob: -16.13023567199707
    7. '  ' → logprob: -16.63023567199707
    8. '    ' → logprob: -17.00523567199707
    9. '0' → logprob: -17.25523567199707
    10. ')' → logprob: -17.88023567199707

Token 49: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06993654370307922
    2. ' ' → logprob: -2.694936513900757
    3. ' ' → logprob: -15.944936752319336
    4. '>' → logprob: -16.819936752319336
    5. '  ' → logprob: -17.569936752319336
    6. '=' → logprob: -17.694936752319336
    7. '۰' → logprob: -17.944936752319336
    8. '```' → logprob: -18.069936752319336
    9. '   ' → logprob: -18.569936752319336
    10. '    ' → logprob: -18.694936752319336

Token 50: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.15310683415737e-05
    2. ' ' → logprob: -10.750021934509277
    3. '۰' → logprob: -18.87502098083496
    4. '1' → logprob: -20.62502098083496
    5. '```' → logprob: -20.62502098083496
    6. '>' → logprob: -20.87502098083496
    7. '٠' → logprob: -21.12502098083496
    8. '  ' → logprob: -21.25002098083496
    9. '<|end|>' → logprob: -21.37502098083496
    10. '০' → logprob: -21.75002098083496

Token 51: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0007316163973882794
    2. ' :' → logprob: -8.000731468200684
    3. ':
' → logprob: -8.375731468200684
    4. '       ' → logprob: -9.250731468200684
    5. '   ' → logprob: -10.000731468200684
    6. '):' → logprob: -11.750731468200684
    7. ':**' → logprob: -12.750731468200684
    8. ',' → logprob: -12.875731468200684
    9. '<|end|>' → logprob: -13.000731468200684
    10. ' and' → logprob: -13.250731468200684

Token 52: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11690075695514679
    2. ':' → logprob: -3.116900682449341
    3. '    ' → logprob: -4.36690092086792
    4. '   ' → logprob: -4.49190092086792
    5. ' 
' → logprob: -4.86690092086792
    6. ' ' → logprob: -5.24190092086792
    7. '        
' → logprob: -5.24190092086792
    8. '\' → logprob: -5.49190092086792
    9. ' :' → logprob: -5.86690092086792
    10. '\n' → logprob: -5.86690092086792

Token 53: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4505343735218048
    2. '     
' → logprob: -1.9505343437194824
    3. '    ' → logprob: -2.4505343437194824
    4. ' 
' → logprob: -2.7005343437194824
    5. 'if' (adapté à ' if') → logprob: -3.8255343437194824
    6. ' if' → logprob: -4.575534343719482
    7. ' \' → logprob: -4.700534343719482
    8. '   ' → logprob: -5.325534343719482
    9. '       ' → logprob: -5.450534343719482
    10. '    
' → logprob: -5.575534343719482

Token 54: ' exp' (ID: 2794)
  Prédit: ' exp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' exp' → logprob: -0.22804465889930725
    2. ' ' → logprob: -1.9780446290969849
    3. 'exp' → logprob: -3.2280447483062744
    4. ' (' → logprob: -3.7280447483062744
    5. '(exp' → logprob: -6.353044509887695
    6. '	exp' → logprob: -9.853044509887695
    7. ' ' → logprob: -9.978044509887695
    8. '  ' → logprob: -11.353044509887695
    9. '    ' → logprob: -11.728044509887695
    10. 'ex' → logprob: -11.978044509887695

Token 55: ' &' (ID: 827)
  Prédit: ' &'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.05510985851287842
    2. ' %' → logprob: -3.055109977722168
    3. ' ' → logprob: -5.430109977722168
    4. '&' → logprob: -6.805109977722168
    5. '%' → logprob: -6.930109977722168
    6. ' ' → logprob: -10.805109977722168
    7. '  ' → logprob: -12.805109977722168
    8. '   ' → logprob: -12.930109977722168
    9. '&nbsp' → logprob: -13.055109977722168
    10. '<|end|>' → logprob: -13.305109977722168

Token 56: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2519429922103882
    2. '1' → logprob: -1.5019429922103882
    3. ' ' → logprob: -11.37694263458252
    4. '<|end|>' → logprob: -14.50194263458252
    5. 'nbsp' → logprob: -14.75194263458252
    6. '  ' → logprob: -15.50194263458252
    7. '' → logprob: -15.68944263458252
    8. '_' → logprob: -15.68944263458252
    9. '```' → logprob: -15.93944263458252
    10. '<|end|>' → logprob: -16.314443588256836

Token 57: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.7610454708337784e-05
    2. ' ' → logprob: -10.500027656555176
    3. '' → logprob: -17.50002670288086
    4. '   ' → logprob: -17.75002670288086
    5. '۱' → logprob: -19.62502670288086
    6. '01' → logprob: -19.87502670288086
    7. '```' → logprob: -20.00002670288086
    8. ' ' → logprob: -20.25002670288086
    9. '１' → logprob: -20.37502670288086
    10. '  ' → logprob: -20.62502670288086

Token 58: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0021322984248399734
    2. ' :' → logprob: -6.252132415771484
    3. ':
' → logprob: -8.627132415771484
    4. '):' → logprob: -11.627132415771484
    5. ' ==' → logprob: -12.502132415771484
    6. '=' → logprob: -12.877132415771484
    7. ':**' → logprob: -13.252132415771484
    8. '==' → logprob: -13.377132415771484
    9. ' :
' → logprob: -13.502132415771484
    10. '>:' → logprob: -14.002132415771484

Token 59: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.22572466731071472
    2. '           ' → logprob: -2.100724697113037
    3. '       ' → logprob: -2.725724697113037
    4. ':
' → logprob: -4.725724697113037
    5. ' :' → logprob: -5.725724697113037
    6. 'result' → logprob: -7.850724697113037
    7. '=' → logprob: -7.850724697113037
    8. '   ' → logprob: -8.100724220275879
    9. ' =' → logprob: -8.225724220275879
    10. ' :
' → logprob: -9.225724220275879

Token 60: ' result' (ID: 1534)
  Prédit: ' result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.23473785817623138
    2. 'result' (adapté à ' result') → logprob: -1.6097378730773926
    3. '(result' → logprob: -5.734737873077393
    4. ' (' → logprob: -6.109737873077393
    5. ' ' → logprob: -6.484737873077393
    6. '           ' → logprob: -6.859737873077393
    7. '       ' → logprob: -8.734737396240234
    8. '    ' → logprob: -9.234737396240234
    9. ' *' → logprob: -9.234737396240234
    10. ' =' → logprob: -9.234737396240234

Token 61: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4118652641773224
    2. '=' → logprob: -1.286865234375
    3. ' *=' → logprob: -3.286865234375
    4. ' *' → logprob: -4.036865234375
    5. '*' → logprob: -5.161865234375
    6. ' ' → logprob: -8.286865234375
    7. '*=' → logprob: -8.286865234375
    8. '    ' → logprob: -9.286865234375
    9. '   ' → logprob: -10.536865234375
    10. ' ' → logprob: -10.911865234375

Token 62: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.018889635801315308
    2. '(result' → logprob: -4.018889427185059
    3. ' result' → logprob: -7.643889427185059
    4. 'result' → logprob: -8.268889427185059
    5. '(' → logprob: -12.518889427185059
    6. ' ' → logprob: -15.893889427185059
    7. '[result' → logprob: -16.393890380859375
    8. ',result' → logprob: -17.018890380859375
    9. ' ' → logprob: -17.018890380859375
    10. '=result' → logprob: -17.143890380859375

Token 63: 'result' (ID: 2521)
  Prédit: 'result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.25193166732788086
    2. ' result' → logprob: -1.5019316673278809
    3. '(result' → logprob: -13.626932144165039
    4. '	result' → logprob: -14.251932144165039
    5. ' ' → logprob: -15.376932144165039
    6. ')' → logprob: -16.37693214416504
    7. '_result' → logprob: -16.62693214416504
    8. '   ' → logprob: -16.75193214416504
    9. '[result' → logprob: -16.75193214416504
    10. ' resultat' → logprob: -16.87693214416504

Token 64: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.02975917048752308
    2. '*' → logprob: -3.529759168624878
    3. ' ' → logprob: -11.779759407043457
    4. ' ' → logprob: -14.529759407043457
    5. ')' → logprob: -14.904759407043457
    6. '   ' → logprob: -15.654759407043457
    7. 'result' → logprob: -15.779759407043457
    8. '  ' → logprob: -17.40475845336914
    9. '```' → logprob: -18.77975845336914
    10. '*object' → logprob: -18.77975845336914

Token 65: ' cur' (ID: 4396)
  Prédit: ' cur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cur' → logprob: -0.2014141082763672
    2. 'cur' → logprob: -1.7014141082763672
    3. '	cur' → logprob: -14.326414108276367
    4. ' ' → logprob: -15.576414108276367
    5. '(cur' → logprob: -16.951414108276367
    6. '[cur' → logprob: -17.451414108276367
    7. '_cur' → logprob: -18.201414108276367
    8. '   ' → logprob: -18.576414108276367
    9. 'Cur' → logprob: -18.701414108276367
    10. '.cur' → logprob: -19.076414108276367

Token 66: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009128939709626138
    2. ' )' → logprob: -7.000912666320801
    3. ')%' → logprob: -13.5009126663208
    4. '）' → logprob: -18.125913619995117
    5. '   ' → logprob: -18.250913619995117
    6. ' ' → logprob: -18.375913619995117
    7. '`)' → logprob: -18.500913619995117
    8. '}' → logprob: -18.750913619995117
    9. ']' → logprob: -19.375913619995117
    10. '    ' → logprob: -19.500913619995117

Token 67: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.00040004486800171435
    2. '%' → logprob: -8.000399589538574
    3. ')' → logprob: -10.250399589538574
    4. ' ' → logprob: -10.500399589538574
    5. ' ' → logprob: -14.375399589538574
    6. ')%' → logprob: -15.000399589538574
    7. ' )' → logprob: -15.000399589538574
    8. '```' → logprob: -16.12540054321289
    9. ' %=' → logprob: -16.75040054321289
    10. '`' → logprob: -16.87540054321289

Token 68: ' mod' (ID: 1812)
  Prédit: ' mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.01815333589911461
    2. 'mod' → logprob: -4.018153190612793
    3. ' ' → logprob: -13.518153190612793
    4. ' ' → logprob: -13.643153190612793
    5. '(mod' → logprob: -14.518153190612793
    6. ' modul' → logprob: -15.643153190612793
    7. '	mod' → logprob: -16.14315414428711
    8. '```' → logprob: -16.51815414428711
    9. ' мод' → logprob: -17.51815414428711
    10. ' modu' → logprob: -17.51815414428711

Token 69: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.8575315475463867
    2. '       ' → logprob: -1.1075315475463867
    3. '
' → logprob: -1.4825315475463867
    4. '        
' → logprob: -4.982531547546387
    5. '  
' → logprob: -5.982531547546387
    6. '    
' → logprob: -6.232531547546387
    7. ' 
' → logprob: -6.732531547546387
    8. '' → logprob: -6.732531547546387
    9. '
' → logprob: -6.732531547546387
    10. '   
' → logprob: -7.732531547546387

Token 70: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12908989191055298
    2. '
' → logprob: -2.379089832305908
    3. '        
' → logprob: -4.379089832305908
    4. '\n' → logprob: -4.629089832305908
    5. ' 
' → logprob: -6.504089832305908
    6. '  
' → logprob: -6.879089832305908
    7. '
' → logprob: -6.879089832305908
    8. '    
' → logprob: -7.254089832305908
    9. '' → logprob: -7.879089832305908
    10. '   ' → logprob: -8.004090309143066

Token 71: ' cur' (ID: 4396)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05158359929919243
    2. '
' → logprob: -4.051583766937256
    3. '        
' → logprob: -4.051583766937256
    4. ' 
' → logprob: -4.426583766937256
    5. '\n' → logprob: -7.051583766937256
    6. '    
' → logprob: -7.301583766937256
    7. '     
' → logprob: -7.801583766937256
    8. '       
' → logprob: -8.176583290100098
    9. '   ' → logprob: -8.301583290100098
    10. '  
' → logprob: -8.676583290100098

Token 72: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07894068211317062
    2. ' =' → logprob: -2.5789406299591064
    3. '   ' → logprob: -10.828940391540527
    4. '*=' → logprob: -10.828940391540527
    5. '*' → logprob: -12.203940391540527
    6. ' ' → logprob: -12.703940391540527
    7. '    ' → logprob: -13.703940391540527
    8. ' *=' → logprob: -13.703940391540527
    9. '  ' → logprob: -14.703940391540527
    10. '**' → logprob: -15.078940391540527

Token 73: ' (' (ID: 350)
  Prédit: '(cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cur' → logprob: -0.38718360662460327
    2. ' (' → logprob: -1.137183666229248
    3. '(' → logprob: -8.13718318939209
    4. ' ' → logprob: -11.13718318939209
    5. '[cur' → logprob: -13.01218318939209
    6. '(c' → logprob: -13.63718318939209
    7. '(curr' → logprob: -13.88718318939209
    8. 'cur' → logprob: -15.88718318939209
    9. '(current' → logprob: -15.88718318939209
    10. '(C' → logprob: -16.137184143066406

Token 74: 'cur' (ID: 3264)
  Prédit: 'cur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.0007124318508431315
    2. ' cur' → logprob: -7.2507123947143555
    3. '(cur' → logprob: -13.250712394714355
    4. '	cur' → logprob: -14.250712394714355
    5. ' ' → logprob: -16.750713348388672
    6. '[cur' → logprob: -16.750713348388672
    7. '   ' → logprob: -18.000713348388672
    8. '.cur' → logprob: -18.375713348388672
    9. '-cur' → logprob: -18.875713348388672
    10. '_cur' → logprob: -19.625713348388672

Token 75: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.6944748163223267
    2. ' *' → logprob: -0.6944748163223267
    3. ' ' → logprob: -6.694474697113037
    4. '2' → logprob: -10.319475173950195
    5. '  ' → logprob: -11.194475173950195
    6. '   ' → logprob: -11.319475173950195
    7. '[cur' → logprob: -11.694475173950195
    8. '**' → logprob: -12.069475173950195
    9. 'cur' → logprob: -12.194475173950195
    10. ' ' → logprob: -12.319475173950195

Token 76: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.20143361389636993
    2. ' cur' → logprob: -1.7014336585998535
    3. ' ' → logprob: -11.451433181762695
    4. '	cur' → logprob: -11.701433181762695
    5. '_cur' → logprob: -14.451433181762695
    6. '[cur' → logprob: -14.576433181762695
    7. '(cur' → logprob: -15.701433181762695
    8. '.cur' → logprob: -16.701433181762695
    9. ')' → logprob: -16.826433181762695
    10. '-cur' → logprob: -17.076433181762695

Token 77: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.300083648762666e-05
    2. ' )' → logprob: -10.000053405761719
    3. ')%' → logprob: -11.875053405761719
    4. '   ' → logprob: -15.000053405761719
    5. ' ' → logprob: -17.12505340576172
    6. '%' → logprob: -17.50005340576172
    7. '}' → logprob: -17.75005340576172
    8. ')
' → logprob: -17.87505340576172
    9. '```' → logprob: -17.87505340576172
    10. ' %' → logprob: -18.25005340576172

Token 78: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.049386028200387955
    2. '%' → logprob: -3.2993860244750977
    3. ' ' → logprob: -4.674386024475098
    4. ' mod' → logprob: -7.424386024475098
    5. ' ' → logprob: -7.424386024475098
    6. '`' → logprob: -7.674386024475098
    7. ')' → logprob: -8.799386024475098
    8. 'mod' → logprob: -10.424386024475098
    9. '"' → logprob: -10.924386024475098
    10. ' `' → logprob: -11.424386024475098

Token 79: ' mod' (ID: 1812)
  Prédit: ' mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.005234594456851482
    2. 'mod' → logprob: -5.255234718322754
    3. ' ' → logprob: -15.005234718322754
    4. '	mod' → logprob: -15.130234718322754
    5. '(mod' → logprob: -16.130233764648438
    6. ' ' → logprob: -16.755233764648438
    7. ' мод' → logprob: -17.130233764648438
    8. ' modul' → logprob: -18.005233764648438
    9. '```' → logprob: -18.130233764648438
    10. ' mo' → logprob: -18.380233764648438

Token 80: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005231275223195553
    2. ' 
' → logprob: -6.0052313804626465
    3. '   ' → logprob: -6.8802313804626465
    4. '        
' → logprob: -7.3802313804626465
    5. '
' → logprob: -7.6302313804626465
    6. '    
' → logprob: -9.130230903625488
    7. '  
' → logprob: -9.130230903625488
    8. '```' → logprob: -9.755230903625488
    9. ' exp' → logprob: -10.130230903625488
    10. ' ' → logprob: -10.255230903625488

Token 81: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01706089824438095
    2. ' 
' → logprob: -5.01706075668335
    3. '        
' → logprob: -6.14206075668335
    4. '\' → logprob: -6.26706075668335
    5. '```' → logprob: -6.51706075668335
    6. '        ' → logprob: -7.14206075668335
    7. '`' → logprob: -7.26706075668335
    8. '``' → logprob: -7.39206075668335
    9. '     
' → logprob: -8.017061233520508
    10. '   ' → logprob: -8.017061233520508

Token 82: ' exp' (ID: 2794)
  Prédit: ' exp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' exp' → logprob: -0.039439328014850616
    2. 'exp' (adapté à ' exp') → logprob: -3.4144394397735596
    3. '       ' → logprob: -6.0394392013549805
    4. ' ' → logprob: -6.7894392013549805
    5. ' 
' → logprob: -6.9144392013549805
    6. ' ' → logprob: -7.1644392013549805
    7. '_exp' → logprob: -8.91443920135498
    8. '        ' → logprob: -9.03943920135498
    9. '(exp' → logprob: -9.91443920135498
    10. '    ' → logprob: -10.53943920135498

Token 83: ' >>=' (ID: 81952)
  Prédit: ' >>='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >>=' → logprob: -0.17049820721149445
    2. ' >>' → logprob: -2.1704981327056885
    3. ' ' → logprob: -3.5454981327056885
    4. '>>' → logprob: -4.545498371124268
    5. ' >>>' → logprob: -6.920498371124268
    6. '    ' → logprob: -7.670498371124268
    7. ' ' → logprob: -7.670498371124268
    8. ' »' → logprob: -8.54549789428711
    9. '<|end|>' → logprob: -8.92049789428711
    10. ' >' → logprob: -9.17049789428711

Token 84: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002614550176076591
    2. ' ' → logprob: -8.250261306762695
    3. '```' → logprob: -16.750261306762695
    4. ' ' → logprob: -17.000261306762695
    5. '' → logprob: -18.500261306762695
    6. '   ' → logprob: -19.000261306762695
    7. '`' → logprob: -19.125261306762695
    8. '１' → logprob: -19.375261306762695
    9. '‌' → logprob: -20.062761306762695
    10. '۱' → logprob: -20.250261306762695

Token 85: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.250000953674316
    3. '```' → logprob: -17.625
    4. '' → logprob: -19.875
    5. '   ' → logprob: -20.6875
    6. '１' → logprob: -20.9375
    7. '۱' → logprob: -21.5625
    8. '১' → logprob: -21.6875
    9. '१' → logprob: -21.6875
    10. ' ' → logprob: -21.875

Token 86: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23057422041893005
    2. '
' → logprob: -1.9805742502212524
    3. '    
' → logprob: -3.355574131011963
    4. ' 
' → logprob: -3.605574131011963
    5. ' return' → logprob: -6.355574131011963
    6. 'return' → logprob: -7.105574131011963
    7. '   
' → logprob: -7.230574131011963
    8. '  
' → logprob: -7.355574131011963
    9. '\n' → logprob: -7.480574131011963
    10. '       ' → logprob: -7.730574131011963

Token 87: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018187757581472397
    2. 'return' → logprob: -5.018187522888184
    3. '
' → logprob: -5.268187522888184
    4. ' return' → logprob: -6.018187522888184
    5. '    
' → logprob: -6.018187522888184
    6. ' 
' → logprob: -6.893187522888184
    7. ':return' → logprob: -8.768187522888184
    8. '   
' → logprob: -9.143187522888184
    9. '       ' → logprob: -11.018187522888184
    10. '  
' → logprob: -11.143187522888184

Token 88: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7909165024757385
    2. 'return' (adapté à ' return') → logprob: -1.0409164428710938
    3. ' return' → logprob: -1.6659164428710938
    4. ' 
' → logprob: -7.040916442871094
    5. '    
' → logprob: -7.040916442871094
    6. '
' → logprob: -7.290916442871094
    7. 'r' → logprob: -7.665916442871094
    8. ':return' → logprob: -7.665916442871094
    9. '	return' → logprob: -7.915916442871094
    10. ' ' → logprob: -7.915916442871094

Token 89: ' result' (ID: 1534)
  Prédit: ' result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.014164221473038197
    2. 'result' → logprob: -4.264164447784424
    3. ' ' → logprob: -14.639163970947266
    4. '(result' → logprob: -16.014163970947266
    5. ' ' → logprob: -16.264163970947266
    6. '	result' → logprob: -17.389163970947266
    7. '_result' → logprob: -19.264163970947266
    8. ' resultat' → logprob: -19.514163970947266
    9. '[result' → logprob: -19.764163970947266
    10. '=result' → logprob: -20.389163970947266

Token 90: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2405371069908142
    2. '\n' → logprob: -2.365537166595459
    3. '<|end|>' → logprob: -2.490537166595459
    4. '#' → logprob: -3.740537166595459
    5. '\' → logprob: -5.615537166595459
    6. '

' → logprob: -5.865537166595459
    7. '```' → logprob: -5.865537166595459
    8. 'n' → logprob: -6.865537166595459
    9. ' ' → logprob: -7.615537166595459
    10. '<|end|>' → logprob: -7.865537166595459

Token 91: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.45406365394592285
    2. '#' → logprob: -1.2040636539459229
    3. '<|end|>' → logprob: -3.204063653945923
    4. '\n' → logprob: -4.454063415527344
    5. '

' → logprob: -5.329063415527344
    6. '```' → logprob: -5.829063415527344
    7. '' → logprob: -6.954063415527344
    8. '\' → logprob: -7.204063415527344
    9. 'n' → logprob: -7.579063415527344
    10. '  
' → logprob: -8.079063415527344

Token 92: ' Fonction' (ID: 189149)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.11212017387151718
    2. 'def' → logprob: -2.3621201515197754
    3. ' #' → logprob: -6.112120151519775
    4. 'd' → logprob: -6.737120151519775
    5. ' ' → logprob: -6.987120151519775
    6. '\' → logprob: -6.987120151519775
    7. 'import' → logprob: -6.987120151519775
    8. '```' → logprob: -7.112120151519775
    9. 'print' → logprob: -7.237120151519775
    10. 'if' → logprob: -7.612120151519775

Token 93: ' principale' (ID: 68926)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7141798734664917
    2. '_' → logprob: -0.9641798734664917
    3. 's' → logprob: -2.9641799926757812
    4. ' def' → logprob: -3.3391799926757812
    5. ' ' → logprob: -4.839179992675781
    6. '(' → logprob: -5.089179992675781
    7. ' de' → logprob: -5.214179992675781
    8. '_de' → logprob: -6.214179992675781
    9. '_def' → logprob: -6.464179992675781
    10. ')' → logprob: -6.714179992675781

Token 94: ' qui' (ID: 2780)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.026937808841466904
    2. '
' → logprob: -4.151937961578369
    3. '\' → logprob: -5.151937961578369
    4. '```' → logprob: -6.401937961578369
    5. '<|end|>' → logprob: -6.901937961578369
    6. ':def' → logprob: -7.151937961578369
    7. ' def' → logprob: -7.276937961578369
    8. ':' → logprob: -7.526937961578369
    9. '(
' → logprob: -9.526937484741211
    10. 'ndef' → logprob: -9.526937484741211

Token 95: ' pour' (ID: 1930)
  Prédit: ' lit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lit' → logprob: -1.3046420812606812
    2. ' calc' → logprob: -1.5546420812606812
    3. ' prend' → logprob: -1.5546420812606812
    4. ' permet' → logprob: -2.3046422004699707
    5. ' vér' → logprob: -2.6796422004699707
    6. ':' → logprob: -3.0546422004699707
    7. ' demande' → logprob: -4.054642200469971
    8. ' réalise' → logprob: -4.679642200469971
    9. ' utilise' → logprob: -5.054642200469971
    10. ' appelle' → logprob: -5.179642200469971

Token 96: ' un' (ID: 537)
  Prédit: 'rait'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rait' → logprob: -0.9610337018966675
    2. ' ' → logprob: -2.211033821105957
    3. ' chaque' → logprob: -2.211033821105957
    4. ' calcul' → logprob: -2.211033821105957
    5. 't' → logprob: -2.586033821105957
    6. 'ra' → logprob: -2.836033821105957
    7. ' calc' → logprob: -3.211033821105957
    8. 'quoi' → logprob: -4.336033821105957
    9. ' un' → logprob: -4.711033821105957
    10. 'r' → logprob: -4.836033821105957

Token 97: ' ensemble' (ID: 33081)
  Prédit: ' nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.8225763440132141
    2. ' entier' → logprob: -1.0725762844085693
    3. 'e' → logprob: -2.5725762844085693
    4. ' n' → logprob: -2.9475762844085693
    5. 'nombre' → logprob: -3.5725762844085693
    6. ' ' → logprob: -4.447576522827148
    7. 'n' → logprob: -4.572576522827148
    8. 'ent' → logprob: -4.947576522827148
    9. ' input' → logprob: -5.447576522827148
    10. ' e' → logprob: -5.822576522827148

Token 98: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -1.0485783815383911
    2. 'd' → logprob: -1.5485783815383911
    3. ' de' → logprob: -1.5485783815383911
    4. 'de' → logprob: -2.0485782623291016
    5. ' donné' → logprob: -2.7985782623291016
    6. ' ' → logprob: -4.173578262329102
    7. 's' → logprob: -5.423578262329102
    8. '<|end|>' → logprob: -5.923578262329102
    9. 'don' → logprob: -6.298578262329102
    10. ' des' → logprob: -6.548578262329102

Token 99: ' nombres' (ID: 76205)
  Prédit: ' nombres'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombres' → logprob: -0.215022012591362
    2. 'n' → logprob: -2.590022087097168
    3. ' tests' → logprob: -3.715022087097168
    4. ' valeurs' → logprob: -4.465022087097168
    5. 'ex' → logprob: -4.715022087097168
    6. ' cas' → logprob: -4.840022087097168
    7. 'tests' → logprob: -4.965022087097168
    8. 'nombre' → logprob: -4.965022087097168
    9. ' test' → logprob: -5.090022087097168
    10. ' lignes' → logprob: -5.340022087097168

Token 100: ' ent' (ID: 1121)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1726171970367432
    2. 'def' → logprob: -1.6726171970367432
    3. ' :' → logprob: -2.422617197036743
    4. ' n' → logprob: -2.547617197036743
    5. ':' → logprob: -2.672617197036743
    6. ' ,' → logprob: -3.047617197036743
    7. ',' → logprob: -3.547617197036743
    8. 's' → logprob: -3.922617197036743
    9. 'd' → logprob: -4.047616958618164
    10. ' d' → logprob: -4.172616958618164

Token 101: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.00013774730905424803
    2. 'ières' → logprob: -9.625137329101562
    3. 'i' → logprob: -9.875137329101562
    4. 'ier' → logprob: -11.875137329101562
    5. 'ers' → logprob: -12.875137329101562
    6. '#' → logprob: -12.875137329101562
    7. '```' → logprob: -13.375137329101562
    8. '   ' → logprob: -13.500137329101562
    9. 'ires' → logprob: -13.625137329101562
    10. 'ière' → logprob: -14.375137329101562

Token 102: ' [' (ID: 723)
  Prédit: ' ,'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ,' → logprob: -1.1812877655029297
    2. ',' → logprob: -1.4312877655029297
    3. ':' → logprob: -1.9312877655029297
    4. 'def' → logprob: -2.4312877655029297
    5. ' :' → logprob: -2.4312877655029297
    6. ' ' → logprob: -3.0562877655029297
    7. 's' → logprob: -3.8062877655029297
    8. ' à' → logprob: -4.93128776550293
    9. ' calculates' → logprob: -5.05628776550293
    10. 'd' → logprob: -5.55628776550293

Token 103: 'A' (ID: 32)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3693094849586487
    2. ' n' → logprob: -1.619309425354004
    3. 'a' → logprob: -3.869309425354004
    4. 'N' → logprob: -4.119309425354004
    5. 'numbers' → logprob: -4.119309425354004
    6. 'ent' → logprob: -4.744309425354004
    7. ' N' → logprob: -4.869309425354004
    8. '```' → logprob: -5.119309425354004
    9. ' numbers' → logprob: -5.494309425354004
    10. 'nums' → logprob: -5.494309425354004

Token 104: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004425490275025368
    2. '_i' → logprob: -7.379425525665283
    3. ',N' → logprob: -7.629425525665283
    4. ']' → logprob: -7.879425525665283
    5. 'n' → logprob: -7.879425525665283
    6. ',n' → logprob: -8.129425048828125
    7. '1' → logprob: -8.129425048828125
    8. 'i' → logprob: -8.254425048828125
    9. ' ,' → logprob: -8.629425048828125
    10. '_n' → logprob: -8.629425048828125

Token 105: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.12816935777664185
    2. ' B' → logprob: -2.128169298171997
    3. ',' → logprob: -7.878169536590576
    4. ' ' → logprob: -8.378169059753418
    5. 'L' → logprob: -8.628169059753418
    6. 'N' → logprob: -8.628169059753418
    7. 'Z' → logprob: -9.753169059753418
    8. ')' → logprob: -10.253169059753418
    9. 'b' → logprob: -10.878169059753418
    10. ',B' → logprob: -11.128169059753418

Token 106: '],
' (ID: 2274)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.09097541868686676
    2. ',' → logprob: -2.840975522994995
    3. '],' → logprob: -3.590975522994995
    4. ' ]' → logprob: -7.340975284576416
    5. ')' → logprob: -9.340975761413574
    6. ']:' → logprob: -9.715975761413574
    7. ' ],' → logprob: -9.965975761413574
    8. '].' → logprob: -10.590975761413574
    9. ' ' → logprob: -10.590975761413574
    10. ' ,' → logprob: -10.715975761413574

Token 107: '#' (ID: 2)
  Prédit: ' calc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' calc' → logprob: -1.0528398752212524
    2. 'cal' → logprob: -1.1778398752212524
    3. '#' → logprob: -1.4278398752212524
    4. 'calc' → logprob: -3.552839756011963
    5. 'calcul' → logprob: -3.552839756011963
    6. 'dé' → logprob: -4.427839756011963
    7. ' calcul' → logprob: -5.052839756011963
    8. 'cherche' → logprob: -5.927839756011963
    9. 'def' → logprob: -5.927839756011963
    10. ' #' → logprob: -6.052839756011963

Token 108: ' compte' (ID: 19657)
  Prédit: ' calc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' calc' → logprob: -0.7061699628829956
    2. '#' → logprob: -1.2061699628829956
    3. 'cal' → logprob: -2.706170082092285
    4. 'def' → logprob: -2.956170082092285
    5. 'calc' → logprob: -3.831170082092285
    6. 'calcul' → logprob: -4.206170082092285
    7. ' mod' → logprob: -4.956170082092285
    8. ' trouve' → logprob: -5.456170082092285
    9. ' calcul' → logprob: -5.581170082092285
    10. 'mod' → logprob: -5.581170082092285

Token 109: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.5119906067848206
    2. 'le' → logprob: -1.1369905471801758
    3. ' les' → logprob: -3.386990547180176
    4. ' combien' → logprob: -3.636990547180176
    5. 'les' → logprob: -4.261990547180176
    6. ',' → logprob: -7.136990547180176
    7. ' ' → logprob: -7.136990547180176
    8. '_le' → logprob: -7.261990547180176
    9. 'comb' → logprob: -7.636990547180176
    10. '<|end|>' → logprob: -7.636990547180176

Token 110: ' nombre' (ID: 9733)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.42918631434440613
    2. ' nombre' → logprob: -1.0541863441467285
    3. 'n' → logprob: -8.55418586730957
    4. ' nombres' → logprob: -8.92918586730957
    5. 's' → logprob: -9.80418586730957
    6. '_nombre' → logprob: -11.05418586730957
    7. 'Nombre' → logprob: -11.17918586730957
    8. '#' → logprob: -11.30418586730957
    9. ' nomb' → logprob: -11.55418586730957
    10. ' ' → logprob: -11.67918586730957

Token 111: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.3990221917629242
    2. ' d' → logprob: -2.399022102355957
    3. ' des' → logprob: -2.524022102355957
    4. 'de' → logprob: -3.149022102355957
    5. '<|end|>' → logprob: -3.274022102355957
    6. ' ' → logprob: -3.649022102355957
    7. 'd' → logprob: -3.899022102355957
    8. ' total' → logprob: -4.899022102355957
    9. 'total' → logprob: -4.899022102355957
    10. '  ' → logprob: -6.024022102355957

Token 112: ' sous' (ID: 14487)
  Prédit: ' nombres'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' nombres' → logprob: -0.15080296993255615
    2. 'n' → logprob: -3.1508030891418457
    3. 'x' → logprob: -3.2758030891418457
    4. 'pal' → logprob: -4.275803089141846
    5. 'ent' → logprob: -4.400803089141846
    6. ' pal' → logprob: -4.525803089141846
    7. 's' → logprob: -5.650803089141846
    8. ' ent' → logprob: -6.150803089141846
    9. 'car' → logprob: -6.275803089141846
    10. ' x' → logprob: -6.275803089141846

Token 113: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.21504883468151093
    2. '_' → logprob: -2.3400487899780273
    3. '_s' → logprob: -3.8400487899780273
    4. '\' → logprob: -4.465048789978027
    5. 's' → logprob: -4.590048789978027
    6. '-s' → logprob: -4.715048789978027
    7. '_inter' → logprob: -4.965048789978027
    8. '-inter' → logprob: -5.215048789978027
    9. '   ' → logprob: -5.465048789978027
    10. '_sequences' → logprob: -5.465048789978027

Token 114: 'ense' (ID: 1603)
  Prédit: 'ense'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ense' → logprob: -0.0886097252368927
    2. 'inter' → logprob: -3.4636096954345703
    3. 'interval' → logprob: -3.5886096954345703
    4. 'sé' → logprob: -4.71360969543457
    5. 'segments' → logprob: -5.71360969543457
    6. 'ent' → logprob: -6.08860969543457
    7. 'chain' → logprob: -6.21360969543457
    8. '```' → logprob: -6.71360969543457
    9. 'sequence' → logprob: -6.83860969543457
    10. 's' → logprob: -6.83860969543457

Token 115: 'mbles' (ID: 60383)
  Prédit: 'mbles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mbles' → logprob: -0.02985103614628315
    2. 'mb' → logprob: -3.904850959777832
    3. 'mble' → logprob: -4.904850959777832
    4. 'm' → logprob: -6.779850959777832
    5. 'ts' → logprob: -7.404850959777832
    6. 'mbler' → logprob: -10.154850959777832
    7. 't' → logprob: -10.529850959777832
    8. 'mbly' → logprob: -10.779850959777832
    9. 'mbled' → logprob: -11.904850959777832
    10. 'ms' → logprob: -11.904850959777832

Token 116: ' non' (ID: 2893)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4944421947002411
    2. '<|end|>' → logprob: -1.2444422245025635
    3. ' de' → logprob: -3.6194422245025635
    4. '_' → logprob: -3.6194422245025635
    5. ' ,' → logprob: -5.119441986083984
    6. ')' → logprob: -5.494441986083984
    7. ' dont' → logprob: -5.619441986083984
    8. ' _' → logprob: -5.744441986083984
    9. ' )' → logprob: -5.744441986083984
    10. ' whose' → logprob: -5.994441986083984

Token 117: ' v' (ID: 323)
  Prédit: 'vid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vid' → logprob: -0.06629294157028198
    2. 'vide' → logprob: -3.3162930011749268
    3. 'v' → logprob: -3.9412930011749268
    4. ' v' → logprob: -5.191292762756348
    5. ' ' → logprob: -7.566292762756348
    6. 'n' → logprob: -7.691292762756348
    7. '```' → logprob: -7.816292762756348
    8. ' vide' → logprob: -8.191292762756348
    9. '_vid' → logprob: -8.191292762756348
    10. '   ' → logprob: -8.316292762756348

Token 118: 'ides' (ID: 4105)
  Prédit: 'ides'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ides' → logprob: -0.2162935882806778
    2. 'ide' → logprob: -2.3412935733795166
    3. 'ac' → logprob: -3.9662935733795166
    4. '0' → logprob: -4.216293811798096
    5. 'u' → logprob: -4.341293811798096
    6. 'ids' → logprob: -4.591293811798096
    7. 'id' → logprob: -4.841293811798096
    8. 'az' → logprob: -5.091293811798096
    9. 'i' → logprob: -6.091293811798096
    10. '   ' → logprob: -6.591293811798096

Token 119: ' qui' (ID: 2780)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.2327808141708374
    2. ' compris' → logprob: -1.2327808141708374
    3. ',' → logprob: -2.107780933380127
    4. ' whose' → logprob: -2.732780933380127
    5. ' ' → logprob: -3.232780933380127
    6. ' ,' → logprob: -3.357780933380127
    7. ' dont' → logprob: -3.982780933380127
    8. '<|end|>' → logprob: -3.982780933380127
    9. 'de' → logprob: -4.107780933380127
    10. 'def' → logprob: -4.232780933380127

Token 120: ' sont' (ID: 5242)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.747920572757721
    2. 'ont' → logprob: -1.1229205131530762
    3. ' ont' → logprob: -1.9979205131530762
    4. ' sont' → logprob: -4.622920513153076
    5. ' donnent' → logprob: -4.997920513153076
    6. ' satisf' → logprob: -5.247920513153076
    7. ' ' → logprob: -5.372920513153076
    8. ')' → logprob: -5.372920513153076
    9. ' respect' → logprob: -5.372920513153076
    10. ' s' → logprob: -5.497920513153076

Token 121: ' tri' (ID: 12665)
  Prédit: ' divis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' divis' → logprob: -1.1465034484863281
    2. 'div' → logprob: -1.7715034484863281
    3. ' des' → logprob: -1.8965034484863281
    4. 'des' → logprob: -1.8965034484863281
    5. ' ' → logprob: -2.771503448486328
    6. 'multip' → logprob: -3.146503448486328
    7. 'pas' → logprob: -3.896503448486328
    8. '   ' → logprob: -4.021503448486328
    9. '<|end|>' → logprob: -4.771503448486328
    10. ' pas' → logprob: -4.771503448486328

Token 122: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.12812574207782745
    2. 'ang' → logprob: -2.7531256675720215
    3. 'es' → logprob: -3.5031256675720215
    4. 's' → logprob: -4.2531256675720215
    5. 'angles' → logprob: -5.2531256675720215
    6. 'é' → logprob: -5.5031256675720215
    7. 'angle' → logprob: -7.1281256675720215
    8. 'ées' → logprob: -7.8781256675720215
    9. '#' → logprob: -8.50312614440918
    10. 'e' → logprob: -8.75312614440918

Token 123: ' à' (ID: 1221)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3407444655895233
    2. ',' → logprob: -2.2157444953918457
    3. 'cro' → logprob: -3.0907444953918457
    4. '<|end|>' → logprob: -3.4657444953918457
    5. ' ,' → logprob: -4.715744495391846
    6. ' et' → logprob: -4.840744495391846
    7. ' en' → logprob: -5.090744495391846
    8. 'de' → logprob: -5.090744495391846
    9. '```' → logprob: -5.090744495391846
    10. ' ' → logprob: -5.215744495391846

Token 124: ' la' (ID: 557)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.0600553750991821
    2. '<|end|>' → logprob: -1.5600553750991821
    3. 'cro' → logprob: -2.1850552558898926
    4. 'strict' → logprob: -2.3100552558898926
    5. 'la' → logprob: -2.4350552558898926
    6. 'part' → logprob: -2.6850552558898926
    7. 'ordre' → logprob: -4.060055255889893
    8. ' l' → logprob: -4.560055255889893
    9. 'lac' → logprob: -4.685055255889893
    10. 'creasing' → logprob: -5.060055255889893

Token 125: ' fois' (ID: 14697)
  Prédit: 'strict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'strict' → logprob: -0.18997745215892792
    2. 'cro' → logprob: -1.9399774074554443
    3. 'part' → logprob: -5.189977645874023
    4. 'val' → logprob: -5.439977645874023
    5. '#' → logprob: -5.814977645874023
    6. 'mon' → logprob: -5.939977645874023
    7. 'mont' → logprob: -6.439977645874023
    8. '1' → logprob: -6.814977645874023
    9. ' strictly' → logprob: -7.314977645874023
    10. 'l' → logprob: -7.689977645874023

Token 126: '
' (ID: 198)
  Prédit: ' par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.9936814904212952
    2. 'cro' → logprob: -0.9936814904212952
    3. 'strict' → logprob: -2.4936814308166504
    4. ' en' → logprob: -3.3686814308166504
    5. 'en' → logprob: -3.3686814308166504
    6. ' selon' → logprob: -3.8686814308166504
    7. '#' → logprob: -4.36868143081665
    8. ' ' → logprob: -4.74368143081665
    9. 'A' → logprob: -4.86868143081665
    10. 'par' → logprob: -4.99368143081665

Token 127: '#' (ID: 2)
  Prédit: 'lex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lex' → logprob: -1.7757105827331543
    2. 'cro' → logprob: -1.9007105827331543
    3. ' sur' → logprob: -2.2757105827331543
    4. 'dans' → logprob: -2.2757105827331543
    5. ' lex' → logprob: -2.5257105827331543
    6. ' dans' → logprob: -2.7757105827331543
    7. ' en' → logprob: -2.7757105827331543
    8. 'strict' → logprob: -2.9007105827331543
    9. 'def' → logprob: -3.2757105827331543
    10. 'en' → logprob: -3.2757105827331543

Token 128: ' par' (ID: 686)
  Prédit: 'cro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cro' → logprob: -0.7945373058319092
    2. 'strict' → logprob: -0.7945373058319092
    3. 'en' → logprob: -2.669537305831909
    4. ' en' → logprob: -4.919537544250488
    5. ' par' → logprob: -5.544537544250488
    6. '#' → logprob: -5.919537544250488
    7. 'par' → logprob: -6.294537544250488
    8. 'non' → logprob: -6.294537544250488
    9. ' strict' → logprob: -6.419537544250488
    10. ' cro' → logprob: -6.669537544250488

Token 129: ' ordre' (ID: 103061)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -1.1389520168304443
    2. 'la' → logprob: -1.3889520168304443
    3. 'leur' → logprob: -1.5139520168304443
    4. 'leurs' → logprob: -1.8889520168304443
    5. 'l' → logprob: -3.5139520168304443
    6. 'élé' → logprob: -4.888952255249023
    7. ' la' → logprob: -5.763952255249023
    8. 'tail' → logprob: -5.763952255249023
    9. 'le' → logprob: -6.013952255249023
    10. 'ordre' → logprob: -6.388952255249023

Token 130: ' numérique' (ID: 73962)
  Prédit: 'cro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cro' → logprob: -0.3289963901042938
    2. ' lex' → logprob: -1.8289964199066162
    3. 'lex' → logprob: -3.078996419906616
    4. ' cro' → logprob: -3.328996419906616
    5. 'strict' → logprob: -3.453996419906616
    6. ' strict' → logprob: -6.578996181488037
    7. 'd' → logprob: -6.703996181488037
    8. ' lexi' → logprob: -7.078996181488037
    9. 'c' → logprob: -7.328996181488037
    10. 'asc' → logprob: -7.828996181488037

Token 131: ' et' (ID: 859)
  Prédit: ' et'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' et' → logprob: -0.3927985727787018
    2. 'et' → logprob: -1.6427985429763794
    3. 'cro' → logprob: -2.142798662185669
    4. ' cro' → logprob: -5.51779842376709
    5. ' (' → logprob: -6.14279842376709
    6. ' and' → logprob: -6.76779842376709
    7. 'strict' → logprob: -6.76779842376709
    8. 'def' → logprob: -7.01779842376709
    9. 'asc' → logprob: -7.14279842376709
    10. ',' → logprob: -7.39279842376709

Token 132: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.24432654678821564
    2. 'lex' → logprob: -2.494326591491699
    3. ' lex' → logprob: -2.744326591491699
    4. 'par' → logprob: -3.494326591491699
    5. '<|end|>' → logprob: -4.244326591491699
    6. ' en' → logprob: -4.369326591491699
    7. ' lexi' → logprob: -5.619326591491699
    8. 'strict' → logprob: -5.869326591491699
    9. 'en' → logprob: -7.494326591491699
    10. 'leur' → logprob: -7.681826591491699

Token 133: ' ordre' (ID: 103061)
  Prédit: 'leur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'leur' → logprob: -0.427695095539093
    2. ' taille' → logprob: -2.6776950359344482
    3. 'lex' → logprob: -3.0526950359344482
    4. 'ordre' → logprob: -3.0526950359344482
    5. ' longueur' → logprob: -3.1776950359344482
    6. ' leur' → logprob: -3.4276950359344482
    7. 'l' → logprob: -3.6776950359344482
    8. 'leurs' → logprob: -3.9276950359344482
    9. ' ordre' → logprob: -4.677695274353027
    10. 'long' → logprob: -5.052695274353027

Token 134: ' lex' (ID: 37772)
  Prédit: 'lex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lex' → logprob: -0.323546439409256
    2. 'd' → logprob: -1.6985464096069336
    3. ' lex' → logprob: -2.5735464096069336
    4. 'de' → logprob: -5.198546409606934
    5. 'strict' → logprob: -5.823546409606934
    6. ' d' → logprob: -6.198546409606934
    7. '<|end|>' → logprob: -6.323546409606934
    8. ' lexi' → logprob: -7.198546409606934
    9. 'alph' → logprob: -7.198546409606934
    10. ' de' → logprob: -7.448546409606934

Token 135: 'ic' (ID: 291)
  Prédit: 'ic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ic' → logprob: -0.5891176462173462
    2. 'i' → logprob: -0.8391176462173462
    3. 'ico' → logprob: -4.839117527008057
    4. 'ique' → logprob: -7.589117527008057
    5. 'ï' → logprob: -7.589117527008057
    6. 'igraph' → logprob: -7.714117527008057
    7. ' ' → logprob: -7.714117527008057
    8. 'ographique' → logprob: -7.714117527008057
    9. 'é' → logprob: -7.839117527008057
    10. 'icale' → logprob: -8.089118003845215

Token 136: 'ographique' (ID: 108012)
  Prédit: 'ographique'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ographique' → logprob: -0.2557612657546997
    2. 'al' → logprob: -1.6307612657546997
    3. 'ograph' → logprob: -4.50576114654541
    4. 'ale' → logprob: -5.63076114654541
    5. 'graph' → logprob: -5.75576114654541
    6. 'que' → logprob: -6.00576114654541
    7. 'quement' → logprob: -6.00576114654541
    8. 'ographe' → logprob: -6.25576114654541
    9. 'o' → logprob: -7.00576114654541
    10. 'og' → logprob: -7.75576114654541

Token 137: ' sur' (ID: 1512)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00040934275602921844
    2. '
' → logprob: -7.875409126281738
    3. ' def' → logprob: -10.625409126281738
    4. ':def' → logprob: -13.250409126281738
    5. ':' → logprob: -13.500409126281738
    6. '\' → logprob: -14.625409126281738
    7. 'de' → logprob: -14.625409126281738
    8. ':
' → logprob: -14.875409126281738
    9. '```' → logprob: -15.625409126281738
    10. 'ndef' → logprob: -16.000410079956055

Token 138: ' leur' (ID: 9853)
  Prédit: 'leurs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'leurs' → logprob: -1.343839168548584
    2. 'les' → logprob: -1.968839168548584
    3. 'leur' → logprob: -2.343839168548584
    4. 'la' → logprob: -2.343839168548584
    5. ' leurs' → logprob: -2.468839168548584
    6. 'l' → logprob: -2.468839168548584
    7. ' la' → logprob: -2.843839168548584
    8. 'str' → logprob: -2.968839168548584
    9. 'le' → logprob: -3.468839168548584
    10. ' ' → logprob: -4.218839168548584

Token 139: ' représentation' (ID: 162614)
  Prédit: ' représentation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' représentation' → logprob: -0.2661917805671692
    2. ' représent' → logprob: -1.8911917209625244
    3. 'repr' → logprob: -3.2661917209625244
    4. 're' → logprob: -4.7661919593811035
    5. ' repr' → logprob: -5.0161919593811035
    6. ' liste' → logprob: -5.7661919593811035
    7. ' représ' → logprob: -5.7661919593811035
    8. ' representation' → logprob: -6.0161919593811035
    9. 'representation' → logprob: -6.1411919593811035
    10. ' repre' → logprob: -6.3911919593811035

Token 140: ' en' (ID: 469)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -1.0227837562561035
    2. ' en' → logprob: -1.1477837562561035
    3. 'string' → logprob: -2.3977837562561035
    4. 'en' → logprob: -2.8977837562561035
    5. 'b' → logprob: -3.5227837562561035
    6. ' b' → logprob: -3.6477837562561035
    7. 'str' → logprob: -3.7727837562561035
    8. 'import' → logprob: -4.1477837562561035
    9. 'des' → logprob: -4.1477837562561035
    10. ' alph' → logprob: -4.3977837562561035

Token 141: ' chaîne' (ID: 89288)
  Prédit: 'chaine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -0.7035899758338928
    2. 'str' → logprob: -1.828589916229248
    3. 'string' → logprob: -2.203589916229248
    4. ' chaînes' → logprob: -2.453589916229248
    5. ' chaîne' → logprob: -3.203589916229248
    6. 'b' → logprob: -3.453589916229248
    7. 'cha' → logprob: -4.203589916229248
    8. 'base' → logprob: -4.453589916229248
    9. 's' → logprob: -4.953589916229248
    10. 'chain' → logprob: -5.203589916229248

Token 142: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4873352646827698
    2. 'def' → logprob: -1.362335205078125
    3. ' :' → logprob: -3.362335205078125
    4. ',' → logprob: -3.362335205078125
    5. 'de' → logprob: -3.737335205078125
    6. ' de' → logprob: -4.237335205078125
    7. ':
' → logprob: -4.737335205078125
    8. ' :
' → logprob: -5.987335205078125
    9. ':def' → logprob: -6.737335205078125
    10. ' ,' → logprob: -6.737335205078125

Token 143: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0014573780354112387
    2. '
' → logprob: -6.626457214355469
    3. 'd' → logprob: -10.001457214355469
    4. '\' → logprob: -10.501457214355469
    5. ' def' → logprob: -10.626457214355469
    6. ' 
' → logprob: -11.251457214355469
    7. 'de' → logprob: -11.751457214355469
    8. '```' → logprob: -11.876457214355469
    9. '#' → logprob: -13.001457214355469
    10. ':def' → logprob: -13.251457214355469

Token 144: ' count' (ID: 3605)
  Prédit: ' count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.06745833158493042
    2. ' sorted' → logprob: -3.192458391189575
    3. 'count' → logprob: -4.067458152770996
    4. ' nombre' → logprob: -5.942458152770996
    5. 'sorted' → logprob: -7.317458152770996
    6. ' compter' → logprob: -7.442458152770996
    7. ' def' → logprob: -7.817458152770996
    8. ' subsets' → logprob: -8.067458152770996
    9. '	count' → logprob: -8.192458152770996
    10. ' counting' → logprob: -8.317458152770996

Token 145: '_sorted' (ID: 104993)
  Prédit: '_sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sorted' → logprob: -0.02806149236857891
    2. '_sub' → logprob: -3.9030613899230957
    3. '_' → logprob: -5.528061389923096
    4. '_order' → logprob: -6.028061389923096
    5. '_s' → logprob: -7.528061389923096
    6. '_str' → logprob: -8.528061866760254
    7. '_non' → logprob: -9.278061866760254
    8. '_sort' → logprob: -9.653061866760254
    9. '_valid' → logprob: -10.278061866760254
    10. '_subset' → logprob: -10.278061866760254

Token 146: '_sub' (ID: 11572)
  Prédit: '_sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sub' → logprob: -0.00621305126696825
    2. '_' → logprob: -5.631213188171387
    3. '_sets' → logprob: -6.506213188171387
    4. '_s' → logprob: -7.256213188171387
    5. '_subset' → logprob: -8.381213188171387
    6. '_lists' → logprob: -10.131213188171387
    7. '_non' → logprob: -10.381213188171387
    8. '_sequences' → logprob: -11.256213188171387
    9. '_arrays' → logprob: -11.381213188171387
    10. '_under' → logprob: -11.881213188171387

Token 147: 'sets' (ID: 7234)
  Prédit: 'sets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sets' → logprob: -0.012801096774637699
    2. 'se' → logprob: -4.887801170349121
    3. 'set' → logprob: -6.137801170349121
    4. 's' → logprob: -6.137801170349121
    5. '_' → logprob: -8.262801170349121
    6. '_sets' → logprob: -8.387801170349121
    7. '```' → logprob: -8.512801170349121
    8. 'seq' → logprob: -10.262801170349121
    9. 'ets' → logprob: -10.887801170349121
    10. 'a' → logprob: -11.262801170349121

Token 148: '(A' (ID: 10706)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09034830331802368
    2. '(A' → logprob: -2.590348243713379
    3. '(a' → logprob: -4.590348243713379
    4. '(base' → logprob: -7.965348243713379
    5. '(range' → logprob: -8.090348243713379
    6. '():' → logprob: -9.465348243713379
    7. ' (' → logprob: -9.715348243713379
    8. '(n' → logprob: -9.965348243713379
    9. '([' → logprob: -10.090348243713379
    10. '(
' → logprob: -10.090348243713379

Token 149: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.771655115589965e-05
    2. ' ,' → logprob: -11.000018119812012
    3. ',B' → logprob: -14.125018119812012
    4. ',b' → logprob: -16.500017166137695
    5. ',int' → logprob: -17.125017166137695
    6. ',
' → logprob: -17.625017166137695
    7. ':' → logprob: -18.000017166137695
    8. ',A' → logprob: -18.500017166137695
    9. '‌,' → logprob: -18.500017166137695
    10. '_,' → logprob: -20.000017166137695

Token 150: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.3132812976837158
    2. ' B' → logprob: -1.3132812976837158
    3. ' ' → logprob: -11.813281059265137
    4. ')' → logprob: -12.313281059265137
    5. '<|end|>' → logprob: -13.063281059265137
    6. '   ' → logprob: -13.313281059265137
    7. '	B' → logprob: -14.563281059265137
    8. ',' → logprob: -14.688281059265137
    9. '  ' → logprob: -14.688281059265137
    10. ' )' → logprob: -14.813281059265137

Token 151: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -9.877503907773644e-05
    2. '):
' → logprob: -10.250099182128906
    3. ')' → logprob: -10.375099182128906
    4. ':' → logprob: -11.125099182128906
    5. ',' → logprob: -11.250099182128906
    6. ' ):' → logprob: -12.625099182128906
    7. '):
' → logprob: -14.750099182128906
    8. ']:' → logprob: -15.375099182128906
    9. '   ' → logprob: -15.500099182128906
    10. '[]):' → logprob: -15.875099182128906

Token 152: ' P' (ID: 398)
  Prédit: ' mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.08095483481884003
    2. 'mod' → logprob: -2.9559547901153564
    3. ' m' → logprob: -4.9559550285339355
    4. ' M' → logprob: -5.3309550285339355
    5. ' ):' → logprob: -5.4559550285339355
    6. ' p' → logprob: -6.3309550285339355
    7. '):' → logprob: -6.5809550285339355
    8. 'm' → logprob: -6.8309550285339355
    9. ' modulus' → logprob: -7.0809550285339355
    10. ' )' → logprob: -7.0809550285339355

Token 153: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00041816019802354276
    2. '):
' → logprob: -8.125417709350586
    3. ')' → logprob: -9.500417709350586
    4. ' ):' → logprob: -10.250417709350586
    5. '):
' → logprob: -11.875417709350586
    6. ',' → logprob: -13.250417709350586
    7. '=' → logprob: -13.750417709350586
    8. ':' → logprob: -14.125417709350586
    9. '):

' → logprob: -16.000417709350586
    10. '_' → logprob: -16.125417709350586

Token 154: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0012721391394734383
    2. ':
' → logprob: -7.626272201538086
    3. '   ' → logprob: -7.876272201538086
    4. '():' → logprob: -8.501272201538086
    5. '):' → logprob: -9.001272201538086
    6. ' :' → logprob: -10.751272201538086
    7. ',' → logprob: -11.001272201538086
    8. '(' → logprob: -11.001272201538086
    9. ')' → logprob: -12.251272201538086
    10. '(n' → logprob: -12.376272201538086

Token 155: ' #' (ID: 1069)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.11853231489658356
    2. 'n' → logprob: -2.243532419204712
    3. '   ' → logprob: -5.743532180786133
    4. '    
' → logprob: -7.618532180786133
    5. ' mod' → logprob: -7.993532180786133
    6. ' #' → logprob: -8.243532180786133
    7. ' length' → logprob: -8.368532180786133
    8. ' pass' → logprob: -8.493532180786133
    9. '#' (adapté à ' #') → logprob: -8.868532180786133
    10. ' sorted' → logprob: -9.243532180786133

Token 156: ' Gén' (ID: 71828)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.2421884685754776
    2. 'n' → logprob: -1.6171884536743164
    3. ' from' → logprob: -5.367188453674316
    4. 'from' → logprob: -5.492188453674316
    5. ' mod' → logprob: -6.367188453674316
    6. ' length' → logprob: -6.617188453674316
    7. '#' → logprob: -6.867188453674316
    8. 'def' → logprob: -7.742188453674316
    9. 'length' → logprob: -7.742188453674316
    10. 'mod' → logprob: -7.867188453674316

Token 157: 'érer' (ID: 29097)
  Prédit: 'érer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érer' → logprob: -0.21041730046272278
    2. 'er' → logprob: -1.7104172706604004
    3. 'érateur' → logprob: -5.9604172706604
    4. '   ' → logprob: -6.4604172706604
    5. 'ération' → logprob: -6.7104172706604
    6. 'érons' → logprob: -7.3354172706604
    7. 'érés' → logprob: -7.4604172706604
    8. 'enerated' → logprob: -8.085417747497559
    9. 'érée' → logprob: -8.085417747497559
    10. 'enerate' → logprob: -8.335417747497559

Token 158: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.16525070369243622
    2. ' les' → logprob: -2.790250778198242
    3. 'la' → logprob: -3.540250778198242
    4. 'les' → logprob: -4.290250778198242
    5. 'all' → logprob: -4.290250778198242
    6. 'the' → logprob: -4.665250778198242
    7. ' all' → logprob: -5.040250778198242
    8. ' the' → logprob: -5.290250778198242
    9. 'numbers' → logprob: -5.665250778198242
    10. ' une' → logprob: -6.165250778198242

Token 159: ' liste' (ID: 31719)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.2928103506565094
    2. ' liste' → logprob: -1.667810320854187
    3. 'n' → logprob: -3.6678104400634766
    4. 'list' → logprob: -3.9178104400634766
    5. 'lst' → logprob: -5.292810440063477
    6. 'pl' → logprob: -5.417810440063477
    7. 'range' → logprob: -5.667810440063477
    8. ' listes' → logprob: -6.542810440063477
    9. ' list' → logprob: -7.167810440063477
    10. 's' → logprob: -7.167810440063477

Token 160: ' des' (ID: 731)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006956553552299738
    2. ' des' → logprob: -5.506956577301025
    3. '=' → logprob: -7.256956577301025
    4. 'de' → logprob: -7.381956577301025
    5. 'des' → logprob: -8.256956100463867
    6. '<|end|>' → logprob: -8.381956100463867
    7. ' de' → logprob: -8.631956100463867
    8. 'numbers' → logprob: -9.131956100463867
    9. '   ' → logprob: -9.256956100463867
    10. 's' → logprob: -9.381956100463867

Token 161: ' ent' (ID: 1121)
  Prédit: ' nombres'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' nombres' → logprob: -0.15660765767097473
    2. 'n' → logprob: -2.2816076278686523
    3. ' numbers' → logprob: -3.6566076278686523
    4. 'numbers' → logprob: -4.531607627868652
    5. 'nums' → logprob: -5.406607627868652
    6. ' valeurs' → logprob: -8.281607627868652
    7. 'nombre' → logprob: -8.281607627868652
    8. ' n' → logprob: -8.406607627868652
    9. 'num' → logprob: -8.531607627868652
    10. 'ent' → logprob: -8.781607627868652

Token 162: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.0005922323907725513
    2. 't' → logprob: -8.125592231750488
    3. 'ières' → logprob: -8.500592231750488
    4. 'ers' → logprob: -10.750592231750488
    5. 'i' → logprob: -10.875592231750488
    6. 'ier' → logprob: -11.125592231750488
    7. '```' → logprob: -12.250592231750488
    8. 'ires' → logprob: -12.250592231750488
    9. 'tiers' → logprob: -12.625592231750488
    10. '   ' → logprob: -12.750592231750488

Token 163: ' entre' (ID: 3853)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3583548665046692
    2. ' entre' → logprob: -2.6083548069000244
    3. ' between' → logprob: -2.7333548069000244
    4. 'from' → logprob: -3.4833548069000244
    5. 'numbers' → logprob: -3.9833548069000244
    6. 'between' → logprob: -4.3583550453186035
    7. '   ' → logprob: -4.6083550453186035
    8. 'values' → logprob: -4.6083550453186035
    9. 'range' → logprob: -4.9833550453186035
    10. 'nums' → logprob: -5.1083550453186035

Token 164: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.4740777611732483
    2. 'A' → logprob: -0.9740777611732483
    3. ' ' → logprob: -15.099078178405762
    4. '(A' → logprob: -15.224078178405762
    5. '	A' → logprob: -16.474077224731445
    6. '   ' → logprob: -16.724077224731445
    7. '
' → logprob: -17.474077224731445
    8. ' ' → logprob: -17.849077224731445
    9. 'a' → logprob: -18.099077224731445
    10. '```' → logprob: -18.474077224731445

Token 165: ' et' (ID: 859)
  Prédit: ' et'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' et' → logprob: -0.12911482155323029
    2. ',' → logprob: -3.129114866256714
    3. 'et' → logprob: -3.379114866256714
    4. ' and' → logprob: -3.754114866256714
    5. '<|end|>' → logprob: -4.504114627838135
    6. ' ' → logprob: -5.254114627838135
    7. 'and' → logprob: -6.754114627838135
    8. ' ,' → logprob: -7.254114627838135
    9. ' и' → logprob: -8.004115104675293
    10. '+' → logprob: -8.254115104675293

Token 166: ' B' (ID: 418)
  Prédit: ' B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.011047935113310814
    2. 'B' → logprob: -4.511047840118408
    3. ' ' → logprob: -16.51104736328125
    4. '	B' → logprob: -17.13604736328125
    5. '<|end|>' → logprob: -17.63604736328125
    6. '>B' → logprob: -18.38604736328125
    7. ' ' → logprob: -18.51104736328125
    8. '=B' → logprob: -19.13604736328125
    9. '+B' → logprob: -20.26104736328125
    10. '```' → logprob: -20.38604736328125

Token 167: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7980016469955444
    2. ':' → logprob: -1.1730016469955444
    3. ' =' → logprob: -2.048001766204834
    4. ',' → logprob: -3.923001766204834
    5. '
' → logprob: -4.048001766204834
    6. '=' → logprob: -4.423001766204834
    7. 'numbers' → logprob: -4.923001766204834
    8. 'nums' → logprob: -5.173001766204834
    9. '    
' → logprob: -5.298001766204834
    10. ' :' → logprob: -5.423001766204834

Token 168: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7587286829948425
    2. '   ' → logprob: -1.0087287425994873
    3. ' =' → logprob: -2.6337287425994873
    4. ',' → logprob: -3.6337287425994873
    5. ' :' → logprob: -3.6337287425994873
    6. '=' → logprob: -4.383728504180908
    7. '    ' → logprob: -5.258728504180908
    8. '.' → logprob: -5.883728504180908
    9. ' ' → logprob: -5.883728504180908
    10. ' ,' → logprob: -6.508728504180908

Token 169: ' numbers' (ID: 8663)
  Prédit: ' numbers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' numbers' → logprob: -0.9424986243247986
    2. ' nums' → logprob: -0.9424986243247986
    3. 'numbers' (adapté à ' numbers') → logprob: -2.5674986839294434
    4. 'nums' → logprob: -2.9424986839294434
    5. ' lst' → logprob: -3.8174986839294434
    6. '   ' → logprob: -4.067498683929443
    7. ' integers' → logprob: -4.442498683929443
    8. ' n' → logprob: -4.692498683929443
    9. 'n' → logprob: -5.192498683929443
    10. ' s' → logprob: -5.567498683929443

Token 170: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.020542940124869347
    2. '=' → logprob: -3.895542860031128
    3. ' =[' → logprob: -15.145543098449707
    4. '=[]' → logprob: -15.395543098449707
    5. ' ' → logprob: -15.520543098449707
    6. 's' → logprob: -16.27054214477539
    7. '=[' → logprob: -16.64554214477539
    8. ',' → logprob: -16.89554214477539
    9. ' ' → logprob: -17.27054214477539
    10. ')' → logprob: -17.52054214477539

Token 171: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.023455452173948288
    2. 'list' → logprob: -3.7734553813934326
    3. ' [' → logprob: -8.773455619812012
    4. '[list' → logprob: -10.023455619812012
    5. ' ' → logprob: -12.398455619812012
    6. '[' → logprob: -13.273455619812012
    7. '```' → logprob: -13.648455619812012
    8. '	list' → logprob: -14.148455619812012
    9. ' range' → logprob: -14.148455619812012
    10. 'range' → logprob: -14.273455619812012

Token 172: '(range' (ID: 50017)
  Prédit: '(range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -7.5649528298527e-05
    2. '(' → logprob: -9.500075340270996
    3. 'range' → logprob: -14.625075340270996
    4. '(
' → logprob: -16.125076293945312
    5. '	range' → logprob: -16.375076293945312
    6. '(

' → logprob: -18.125076293945312
    7. ' range' → logprob: -19.125076293945312
    8. '(r' → logprob: -19.125076293945312
    9. '```' → logprob: -20.000076293945312
    10. 'rang' → logprob: -20.000076293945312

Token 173: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.018154505640268326
    2. '(' → logprob: -4.018154621124268
    3. '(
' → logprob: -12.64315414428711
    4. ' (' → logprob: -14.14315414428711
    5. '(I' → logprob: -15.64315414428711
    6. ')' → logprob: -15.64315414428711
    7. '(B' → logprob: -16.51815414428711
    8. 'A' → logprob: -17.14315414428711
    9. ')(' → logprob: -17.26815414428711
    10. '((' → logprob: -17.76815414428711

Token 174: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008987197652459145
    2. ' ,' → logprob: -7.375898838043213
    3. ',B' → logprob: -8.250898361206055
    4. ',A' → logprob: -11.875898361206055
    5. ',P' → logprob: -13.250898361206055
    6. ',
' → logprob: -13.875898361206055
    7. 'B' → logprob: -15.000898361206055
    8. ',b' → logprob: -15.125898361206055
    9. ' ' → logprob: -15.500898361206055
    10. 'A' → logprob: -15.625898361206055

Token 175: ' B' (ID: 418)
  Prédit: ' B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.07889066636562347
    2. 'B' → logprob: -2.578890562057495
    3. ' ' → logprob: -14.703890800476074
    4. '	B' → logprob: -15.328890800476074
    5. ' 
' → logprob: -15.953890800476074
    6. '   ' → logprob: -16.578889846801758
    7. ' ' → logprob: -17.328889846801758
    8. '    ' → logprob: -17.953889846801758
    9. ' (' → logprob: -17.953889846801758
    10. '(B' → logprob: -18.203889846801758

Token 176: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.25193455815315247
    2. ' +' → logprob: -1.50193452835083
    3. ' ' → logprob: -13.001935005187988
    4. '+B' → logprob: -13.876935005187988
    5. ',' → logprob: -14.251935005187988
    6. '1' → logprob: -14.876935005187988
    7. '<|end|>' → logprob: -15.501935005187988
    8. '   ' → logprob: -15.626935005187988
    9. '+
' → logprob: -15.751935005187988
    10. ' ,' → logprob: -15.751935005187988

Token 177: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.054883409291505814
    2. ' ' → logprob: -2.9298834800720215
    3. '   ' → logprob: -14.304883003234863
    4. ')' → logprob: -15.679883003234863
    5. '```' → logprob: -15.804883003234863
    6. '  ' → logprob: -16.42988395690918
    7. ' ' → logprob: -16.99238395690918
    8. '    ' → logprob: -17.67988395690918
    9. '2' → logprob: -17.67988395690918
    10. '
' → logprob: -17.80488395690918

Token 178: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0011717714369297028
    2. ' ' → logprob: -6.751171588897705
    3. '))' → logprob: -13.751172065734863
    4. ')' → logprob: -15.751172065734863
    5. '   ' → logprob: -16.251171112060547
    6. '```' → logprob: -16.751171112060547
    7. '0' → logprob: -17.251171112060547
    8. '2' → logprob: -17.688671112060547
    9. '  ' → logprob: -18.063671112060547
    10. ' ))' → logprob: -18.126171112060547

Token 179: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -4.23917081207037e-05
    2. ' ))' → logprob: -10.875041961669922
    3. ')' → logprob: -11.250041961669922
    4. '))
' → logprob: -11.625041961669922
    5. ' ' → logprob: -14.875041961669922
    6. '));' → logprob: -15.250041961669922
    7. ')))' → logprob: -15.625041961669922
    8. '))

' → logprob: -15.875041961669922
    9. ',' → logprob: -16.125041961669922
    10. ''))' → logprob: -16.375041961669922

Token 180: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.004609911236912012
    2. '   ' → logprob: -5.754610061645508
    3. '    
' → logprob: -7.004610061645508
    4. '  
' → logprob: -8.504610061645508
    5. ' 
' → logprob: -9.254610061645508
    6. '
' → logprob: -9.254610061645508
    7. '   
' → logprob: -10.754610061645508
    8. '```' → logprob: -10.754610061645508
    9. '<|end|>' → logprob: -11.004610061645508
    10. 'n' → logprob: -11.004610061645508

Token 181: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.8568784594535828
    2. 'n' (adapté à ' n') → logprob: -0.9818784594535828
    3. 'dp' → logprob: -2.2318785190582275
    4. '   ' → logprob: -2.8568785190582275
    5. ' dp' → logprob: -3.7318785190582275
    6. ' mod' → logprob: -5.606878280639648
    7. '
' → logprob: -5.731878280639648
    8. 'mod' → logprob: -6.106878280639648
    9. ' length' → logprob: -7.731878280639648
    10. 'N' → logprob: -7.856878280639648

Token 182: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0011587966000661254
    2. '=' → logprob: -7.001158714294434
    3. ' ' → logprob: -8.501158714294434
    4. ' =
' → logprob: -10.501158714294434
    5. '  ' → logprob: -12.001158714294434
    6. 's' → logprob: -13.126158714294434
    7. ')' → logprob: -13.126158714294434
    8. ',' → logprob: -13.626158714294434
    9. ' =)' → logprob: -14.126158714294434
    10. '<|end|>' → logprob: -14.126158714294434

Token 183: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.023256542161107063
    2. 'len' → logprob: -3.773256540298462
    3. '(len' → logprob: -11.648256301879883
    4. '[len' → logprob: -13.523256301879883
    5. '=len' → logprob: -14.648256301879883
    6. '	len' → logprob: -15.023256301879883
    7. ' ' → logprob: -15.523256301879883
    8. ',len' → logprob: -16.898256301879883
    9. '<len' → logprob: -17.023256301879883
    10. '```' → logprob: -17.773256301879883

Token 184: '(numbers' (ID: 98592)
  Prédit: '(numbers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(numbers' → logprob: -0.0005032312474213541
    2. '(' → logprob: -7.625503063201904
    3. '(number' → logprob: -12.000503540039062
    4. '(n' → logprob: -12.750503540039062
    5. ' (' → logprob: -13.250503540039062
    6. 'numbers' → logprob: -13.625503540039062
    7. '(
' → logprob: -13.750503540039062
    8. '(num' → logprob: -14.250503540039062
    9. '(nums' → logprob: -15.000503540039062
    10. ' numbers' → logprob: -15.625503540039062

Token 185: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.028536492725834e-05
    2. ' )' → logprob: -9.750070571899414
    3. ')
' → logprob: -11.500070571899414
    4. '   ' → logprob: -13.625070571899414
    5. ' ' → logprob: -15.125070571899414
    6. ')

' → logprob: -16.625070571899414
    7. '#' → logprob: -16.750070571899414
    8. '))' → logprob: -16.750070571899414
    9. ')#' → logprob: -16.875070571899414
    10. ')n' → logprob: -17.125070571899414

Token 186: '    
' (ID: 1944)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04619475454092026
    2. '   ' → logprob: -4.171194553375244
    3. '    
' → logprob: -4.421194553375244
    4. 'dp' → logprob: -4.421194553375244
    5. ' 
' → logprob: -5.671194553375244
    6. '  
' → logprob: -7.421194553375244
    7. ' dp' → logprob: -7.796194553375244
    8. 'DP' → logprob: -8.296195030212402
    9. '   
' → logprob: -8.546195030212402
    10. '<|end|>' → logprob: -8.921195030212402

Token 187: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.00178429891820997
    2. '#' → logprob: -6.501784324645996
    3. 'sorted' → logprob: -9.501784324645996
    4. 'mod' → logprob: -9.501784324645996
    5. 'from' → logprob: -9.751784324645996
    6. '   ' → logprob: -10.501784324645996
    7. 'count' → logprob: -11.001784324645996
    8. 'import' → logprob: -12.001784324645996
    9. 'memo' → logprob: -12.376784324645996
    10. ' dp' → logprob: -12.626784324645996

Token 188: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.004140379838645458
    2. 'count' → logprob: -6.504140377044678
    3. '#' (adapté à ' #') → logprob: -7.004140377044678
    4. 'sorted' → logprob: -7.129140377044678
    5. 'mod' → logprob: -7.254140377044678
    6. 'from' → logprob: -9.629140853881836
    7. 'MOD' → logprob: -10.004140853881836
    8. 'total' → logprob: -10.254140853881836
    9. 'counts' → logprob: -11.129140853881836
    10. 'memo' → logprob: -11.629140853881836

Token 189: ' Convert' (ID: 15629)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.009336797520518303
    2. '#' → logprob: -5.384336948394775
    3. 'sorted' → logprob: -6.384336948394775
    4. ' dp' → logprob: -6.884336948394775
    5. 'mod' → logprob: -7.134336948394775
    6. 'from' → logprob: -7.384336948394775
    7. 'count' → logprob: -8.259336471557617
    8. 'sub' → logprob: -10.134336471557617
    9. 'import' → logprob: -10.259336471557617
    10. ' sorted' → logprob: -10.259336471557617

Token 190: 'ir' (ID: 380)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05096795782446861
    2. 'ate' → logprob: -3.9259679317474365
    3. 'er' → logprob: -5.050968170166016
    4. 'numbers' → logprob: -5.425968170166016
    5. '(numbers' → logprob: -5.425968170166016
    6. '_numbers' → logprob: -5.550968170166016
    7. 'strings' → logprob: -5.550968170166016
    8. ' numbers' → logprob: -5.925968170166016
    9. '_strings' → logprob: -6.675968170166016
    10. 'ates' → logprob: -7.800968170166016

Token 191: ' en' (ID: 469)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.3179270923137665
    2. 'numbers' → logprob: -2.317927122116089
    3. 'les' → logprob: -2.442927122116089
    4. ' numbers' → logprob: -3.442927122116089
    5. ' chaque' → logprob: -4.06792688369751
    6. '_numbers' → logprob: -4.69292688369751
    7. ' each' → logprob: -5.56792688369751
    8. 'each' → logprob: -5.69292688369751
    9. 'all' → logprob: -5.94292688369751
    10. '   ' → logprob: -6.06792688369751

Token 192: ' chaînes' (ID: 179904)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.5141627192497253
    2. 'strings' → logprob: -1.0141627788543701
    3. ' strings' → logprob: -4.014162540435791
    4. ' chaînes' → logprob: -4.264162540435791
    5. ' str' → logprob: -6.014162540435791
    6. '[str' → logprob: -6.889162540435791
    7. 'string' → logprob: -7.014162540435791
    8. 'list' → logprob: -7.764162540435791
    9. 'chaine' → logprob: -7.889162540435791
    10. '   ' → logprob: -8.01416301727295

Token 193: ' pour' (ID: 1930)
  Prédit: 'strings'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'strings' → logprob: -0.42155346274375916
    2. '   ' → logprob: -1.4215534925460815
    3. ' strings' → logprob: -3.421553373336792
    4. 'numbers' → logprob: -3.421553373336792
    5. 'string' → logprob: -4.546553611755371
    6. 'str' → logprob: -5.046553611755371
    7. ' numbers' → logprob: -5.171553611755371
    8. '_strings' → logprob: -5.796553611755371
    9. ' =' → logprob: -6.046553611755371
    10. ' strs' → logprob: -6.296553611755371

Token 194: ' la' (ID: 557)
  Prédit: ' pouvoir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pouvoir' → logprob: -1.0234277248382568
    2. ' lex' → logprob: -1.5234277248382568
    3. 'str' → logprob: -2.273427724838257
    4. ' comparer' → logprob: -2.648427724838257
    5. ' la' → logprob: -2.773427724838257
    6. ' str' → logprob: -2.898427724838257
    7. ' le' → logprob: -3.898427724838257
    8. ' strings' → logprob: -4.023427963256836
    9. ' faciliter' → logprob: -4.148427963256836
    10. 'lex' → logprob: -4.148427963256836

Token 195: ' comparaison' (ID: 170508)
  Prédit: ' comparaison'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' comparaison' → logprob: -0.7334305644035339
    2. 'lex' → logprob: -2.2334306240081787
    3. 'compar' → logprob: -2.4834306240081787
    4. 'suite' → logprob: -2.4834306240081787
    5. 'str' → logprob: -2.8584306240081787
    6. ' lex' → logprob: -3.3584306240081787
    7. 'tri' → logprob: -3.4834306240081787
    8. 'string' → logprob: -3.8584306240081787
    9. 'sort' → logprob: -4.2334303855896
    10. 'comparison' → logprob: -4.4834303855896

Token 196: ' lex' (ID: 37772)
  Prédit: 'strings'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'strings' → logprob: -0.5326929092407227
    2. '   ' → logprob: -1.4076929092407227
    3. ' strings' → logprob: -2.0326929092407227
    4. 'string' → logprob: -4.407692909240723
    5. 'str' → logprob: -4.907692909240723
    6. ' strs' → logprob: -5.032692909240723
    7. ' string' → logprob: -5.157692909240723
    8. 's' → logprob: -6.532692909240723
    9. 'numbers' → logprob: -6.532692909240723
    10. ' numbers' → logprob: -6.907692909240723

Token 197: 'ic' (ID: 291)
  Prédit: 'ic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ic' → logprob: -0.01888998970389366
    2. 'ico' → logprob: -4.018889904022217
    3. 'i' → logprob: -7.393889904022217
    4. 'ical' → logprob: -10.143890380859375
    5. 'ique' → logprob: -10.768890380859375
    6. '_order' → logprob: -11.393890380859375
    7. 'é' → logprob: -11.643890380859375
    8. '_' → logprob: -12.143890380859375
    9. 'igraph' → logprob: -12.268890380859375
    10. 'iques' → logprob: -12.393890380859375

Token 198: 'ographique' (ID: 108012)
  Prédit: 'ographique'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ographique' → logprob: -0.001023758901283145
    2. 'ographiques' → logprob: -7.626023769378662
    3. 'o' → logprob: -8.126023292541504
    4. 'ograph' → logprob: -9.501023292541504
    5. 'oq' → logprob: -10.626023292541504
    6. 'og' → logprob: -10.751023292541504
    7. 'que' → logprob: -10.751023292541504
    8. 'graph' → logprob: -10.751023292541504
    9. 'ograp' → logprob: -11.626023292541504
    10. 'ographe' → logprob: -11.626023292541504

Token 199: '
' (ID: 198)
  Prédit: 'strings'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'strings' → logprob: -0.18436038494110107
    2. '   ' → logprob: -2.5593605041503906
    3. ' strings' → logprob: -2.9343605041503906
    4. 'str' → logprob: -4.434360504150391
    5. 'numbers' → logprob: -4.809360504150391
    6. ' strs' → logprob: -5.059360504150391
    7. 'string' → logprob: -5.184360504150391
    8. ' numbers' → logprob: -6.684360504150391
    9. 'nums' → logprob: -6.684360504150391
    10. 's' → logprob: -6.809360504150391

Token 200: '   ' (ID: 271)
  Prédit: ' strings'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' strings' → logprob: -0.9475890398025513
    2. '   ' → logprob: -1.0725890398025513
    3. 'strings' → logprob: -1.5725890398025513
    4. ' numbers' → logprob: -3.5725889205932617
    5. ' strs' → logprob: -4.322588920593262
    6. 'numbers' → logprob: -4.572588920593262
    7. 'string' → logprob: -5.947588920593262
    8. ' string' → logprob: -6.572588920593262
    9. 'str' → logprob: -6.697588920593262
    10. ' nums' → logprob: -6.697588920593262

Token 201: ' str' (ID: 989)
  Prédit: 'strings'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strings' → logprob: -0.7221823930740356
    2. 'str' (adapté à ' str') → logprob: -1.4721823930740356
    3. '   ' → logprob: -2.222182273864746
    4. ' strings' → logprob: -2.597182273864746
    5. ' strs' → logprob: -2.972182273864746
    6. ' str' → logprob: -3.222182273864746
    7. 'string' → logprob: -5.847182273864746
    8. 'numbers' → logprob: -5.972182273864746
    9. 'nums' → logprob: -6.222182273864746
    10. ' numbers' → logprob: -6.472182273864746

Token 202: '_numbers' (ID: 76842)
  Prédit: '_numbers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_numbers' → logprob: -0.10821700096130371
    2. 's' → logprob: -3.1082170009613037
    3. '_nums' → logprob: -3.1082170009613037
    4. 'ings' → logprob: -4.358217239379883
    5. '_n' → logprob: -8.608217239379883
    6. 'ing' → logprob: -9.858217239379883
    7. 'numbers' → logprob: -9.983217239379883
    8. 'umbers' → logprob: -10.733217239379883
    9. 'nums' → logprob: -10.733217239379883
    10. '_num' → logprob: -10.983217239379883

Token 203: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38687217235565186
    2. '=' → logprob: -1.1368721723556519
    3. ' =[' → logprob: -14.511872291564941
    4. '=[' → logprob: -15.636872291564941
    5. '[' → logprob: -16.261871337890625
    6. '=[]' → logprob: -16.636871337890625
    7. ']' → logprob: -16.761871337890625
    8. 's' → logprob: -16.886871337890625
    9. '＝' → logprob: -17.011871337890625
    10. ')' → logprob: -17.136871337890625

Token 204: ' [' (ID: 723)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.21725058555603027
    2. ' [' → logprob: -2.4672505855560303
    3. ' list' → logprob: -2.7172505855560303
    4. 'list' → logprob: -3.2172505855560303
    5. '[' → logprob: -5.467250823974609
    6. '[str' → logprob: -9.46725082397461
    7. '[List' → logprob: -11.09225082397461
    8. '[string' → logprob: -12.71725082397461
    9. '[s' → logprob: -12.96725082397461
    10. '[i' → logprob: -13.21725082397461

Token 205: 'str' (ID: 689)
  Prédit: 'str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.0019287518225610256
    2. ' str' → logprob: -6.251928806304932
    3. '   ' → logprob: -16.501928329467773
    4. '	str' → logprob: -16.751928329467773
    5. '(str' → logprob: -17.251928329467773
    6. 's' → logprob: -18.626928329467773
    7. ' ' → logprob: -18.876928329467773
    8. '=str' → logprob: -19.626928329467773
    9. '[str' → logprob: -20.251928329467773
    10. '```' → logprob: -20.751928329467773

Token 206: '(x' (ID: 4061)
  Prédit: '(num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(num' → logprob: -0.01642552576959133
    2. '(x' → logprob: -4.266425609588623
    3. '(n' → logprob: -7.141425609588623
    4. '(number' → logprob: -7.266425609588623
    5. 'num' → logprob: -7.891425609588623
    6. '(numbers' → logprob: -8.016425132751465
    7. '(' → logprob: -10.016425132751465
    8. '(i' → logprob: -11.516425132751465
    9. '(nb' → logprob: -12.766425132751465
    10. ' num' → logprob: -13.391425132751465

Token 207: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00013643606507685035
    2. '(n' → logprob: -9.250136375427246
    3. ' )' → logprob: -10.750136375427246
    4. '(x' → logprob: -11.625136375427246
    5. '(numbers' → logprob: -12.500136375427246
    6. '(i' → logprob: -12.875136375427246
    7. '(num' → logprob: -14.250136375427246
    8. '   ' → logprob: -14.625136375427246
    9. 'n' → logprob: -15.000136375427246
    10. ' ' → logprob: -15.125136375427246

Token 208: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006141965277493
    2. ' for' → logprob: -6.2561421394348145
    3. 'for' → logprob: -6.6311421394348145
    4. '(n' → logprob: -6.6311421394348145
    5. '(x' → logprob: -7.3811421394348145
    6. '(num' → logprob: -8.006141662597656
    7. '(numbers' → logprob: -8.131141662597656
    8. '   ' → logprob: -9.506141662597656
    9. '(i' → logprob: -9.881141662597656
    10. ' )' → logprob: -10.256141662597656

Token 209: ' x' (ID: 1215)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'numbers' → logprob: -0.4741540253162384
    2. ' numbers' → logprob: -0.974153995513916
    3. 'x' → logprob: -10.474154472351074
    4. '(numbers' → logprob: -10.974154472351074
    5. 'number' → logprob: -11.349154472351074
    6. ' ' → logprob: -11.974154472351074
    7. 'num' → logprob: -11.974154472351074
    8. ' x' → logprob: -12.849154472351074
    9. '_numbers' → logprob: -13.099154472351074
    10. 'umbers' → logprob: -13.974154472351074

Token 210: ' in' (ID: 306)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'numbers' → logprob: -0.543587327003479
    2. ' in' → logprob: -1.043587327003479
    3. ' numbers' → logprob: -3.0435872077941895
    4. '(numbers' → logprob: -4.4185872077941895
    5. 'in' → logprob: -5.1685872077941895
    6. 'umbers' → logprob: -6.9185872077941895
    7. 'x' → logprob: -8.043587684631348
    8. ' ' → logprob: -8.918587684631348
    9. ')' → logprob: -9.293587684631348
    10. '_numbers' → logprob: -9.793587684631348

Token 211: ' numbers' (ID: 8663)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'numbers' → logprob: -0.0021885682363063097
    2. ' numbers' → logprob: -6.127188682556152
    3. '(numbers' → logprob: -13.502188682556152
    4. ' ' → logprob: -14.252188682556152
    5. '   ' → logprob: -14.377188682556152
    6. 'range' → logprob: -14.627188682556152
    7. 'number' → logprob: -16.002187728881836
    8. 'umbers' → logprob: -16.627187728881836
    9. ']' → logprob: -16.877187728881836
    10. ')' → logprob: -17.002187728881836

Token 212: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0011239065788686275
    2. '   ' → logprob: -7.501123905181885
    3. ' ]' → logprob: -7.501123905181885
    4. ']
' → logprob: -11.251124382019043
    5. ')' → logprob: -13.001124382019043
    6. ')]' → logprob: -13.376124382019043
    7. ']
' → logprob: -14.251124382019043
    8. ']

' → logprob: -14.876124382019043
    9. ' ' → logprob: -16.001123428344727
    10. '       ' → logprob: -16.376123428344727

Token 213: '    
' (ID: 1944)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.47415515780448914
    2. '   ' → logprob: -1.4741551876068115
    3. '    
' → logprob: -2.0991551876068115
    4. 'dp' → logprob: -3.7241551876068115
    5. ' dp' → logprob: -7.474154949188232
    6. ' 
' → logprob: -7.599154949188232
    7. '  
' → logprob: -7.974154949188232
    8. '   
' → logprob: -9.34915542602539
    9. 'DP' → logprob: -9.72415542602539
    10. '

' → logprob: -10.22415542602539

Token 214: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.2308908998966217
    2. '   ' → logprob: -1.6058908700942993
    3. '#' → logprob: -5.85589075088501
    4. ' dp' → logprob: -6.10589075088501
    5. '
' → logprob: -8.355891227722168
    6. '    
' → logprob: -10.355891227722168
    7. 'import' → logprob: -10.480891227722168
    8. ' #' → logprob: -10.480891227722168
    9. 'from' → logprob: -10.980891227722168
    10. 'count' → logprob: -11.605891227722168

Token 215: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0016941038193181157
    2. '#' (adapté à ' #') → logprob: -6.501694202423096
    3. 'from' → logprob: -9.001693725585938
    4. 'mod' → logprob: -10.126693725585938
    5. 'sorted' → logprob: -11.501693725585938
    6. 'import' → logprob: -11.626693725585938
    7. 'count' → logprob: -13.001693725585938
    8. 'MOD' → logprob: -13.126693725585938
    9. 'DP' → logprob: -13.251693725585938
    10. ' dp' → logprob: -13.626693725585938

Token 216: ' Trier' (ID: 191551)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.004463112447410822
    2. '#' → logprob: -6.004463195800781
    3. ' dp' → logprob: -6.879463195800781
    4. 'from' → logprob: -7.754463195800781
    5. 'import' → logprob: -8.629463195800781
    6. 'mod' → logprob: -9.129463195800781
    7. ' Initialize' → logprob: -9.379463195800781
    8. 'Initialize' → logprob: -10.504463195800781
    9. ' #' → logprob: -10.754463195800781
    10. 'MOD' → logprob: -11.004463195800781

Token 217: ' num' (ID: 2269)
  Prédit: ' str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.7056875228881836
    2. 'str' → logprob: -1.3306875228881836
    3. '   ' → logprob: -1.8306875228881836
    4. '_str' → logprob: -3.4556875228881836
    5. ' numbers' → logprob: -4.455687522888184
    6. 'numbers' → logprob: -4.580687522888184
    7. '_numbers' → logprob: -4.955687522888184
    8. '(str' → logprob: -5.080687522888184
    9. '	str' → logprob: -5.580687522888184
    10. '(numbers' → logprob: -6.580687522888184

Token 218: 'éri' (ID: 13499)
  Prédit: 'éri'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'éri' → logprob: -0.9667236804962158
    2. 'ériques' → logprob: -1.0917236804962158
    3. 'érique' → logprob: -1.8417236804962158
    4. 'er' → logprob: -2.341723680496216
    5. '   ' → logprob: -4.966723442077637
    6. 'é' → logprob: -5.091723442077637
    7. '_str' → logprob: -5.716723442077637
    8. '_numbers' → logprob: -5.841723442077637
    9. '#' → logprob: -6.216723442077637
    10. '       ' → logprob: -6.716723442077637

Token 219: 'quement' (ID: 42437)
  Prédit: 'quement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quement' → logprob: -0.0003413031517993659
    2. 'que' → logprob: -8.375341415405273
    3. 'iquement' → logprob: -10.000341415405273
    4. 'ques' → logprob: -10.125341415405273
    5. 'rement' → logprob: -11.000341415405273
    6. 'qu' → logprob: -12.375341415405273
    7. 'c' → logprob: -13.750341415405273
    8. 'q' → logprob: -14.500341415405273
    9. 'èrement' → logprob: -14.750341415405273
    10. 'ment' → logprob: -14.875341415405273

Token 220: ' (' (ID: 350)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'numbers' → logprob: -0.1494051218032837
    2. '<|end|>' → logprob: -2.649405002593994
    3. ',' → logprob: -3.399405002593994
    4. '   ' → logprob: -4.649405002593994
    5. 'str' → logprob: -5.149405002593994
    6. '(numbers' → logprob: -5.149405002593994
    7. ' numbers' → logprob: -5.774405002593994
    8. '<|end|>' → logprob: -6.024405002593994
    9. '    
' → logprob: -6.274405002593994
    10. '_numbers' → logprob: -6.399405002593994

Token 221: 'cro' (ID: 53052)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'numbers' → logprob: -0.5142987370491028
    2. ')' → logprob: -1.014298677444458
    3. ' )' → logprob: -4.264298915863037
    4. '   ' → logprob: -5.139298915863037
    5. ' numbers' → logprob: -5.264298915863037
    6. 'str' → logprob: -5.889298915863037
    7. ')
' → logprob: -5.889298915863037
    8. '
' → logprob: -6.139298915863037
    9. '#' → logprob: -6.389298915863037
    10. '(numbers' → logprob: -7.264298915863037

Token 222: 'issant' (ID: 31359)
  Prédit: 'issant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'issant' → logprob: -0.004361048340797424
    2. 'issante' → logprob: -5.504361152648926
    3. 'issance' → logprob: -9.504361152648926
    4. 'is' → logprob: -9.629361152648926
    5. 'ss' → logprob: -10.129361152648926
    6. 'issants' → logprob: -10.629361152648926
    7. 'i' → logprob: -11.254361152648926
    8. 'iss' → logprob: -11.629361152648926
    9. '```' → logprob: -11.629361152648926
    10. 'issent' → logprob: -11.879361152648926

Token 223: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000526938121765852
    2. ',' → logprob: -8.500527381896973
    3. ' )' → logprob: -8.625527381896973
    4. ')
' → logprob: -9.500527381896973
    5. '),' → logprob: -10.625527381896973
    6. '<|end|>' → logprob: -11.875527381896973
    7. '   ' → logprob: -12.000527381896973
    8. ')#' → logprob: -12.250527381896973
    9. ' ' → logprob: -12.625527381896973
    10. ')

' → logprob: -13.000527381896973

Token 224: '   ' (ID: 271)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'numbers' → logprob: -0.14863072335720062
    2. ')' → logprob: -3.6486306190490723
    3. '
' → logprob: -3.7736306190490723
    4. 'str' → logprob: -4.023630619049072
    5. '    
' → logprob: -4.273630619049072
    6. '(numbers' → logprob: -4.398630619049072
    7. '<|end|>' → logprob: -4.523630619049072
    8. ',' → logprob: -4.523630619049072
    9. '   ' → logprob: -4.648630619049072
    10. ' numbers' → logprob: -5.523630619049072

Token 225: ' num' (ID: 2269)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'numbers' → logprob: -0.10089801251888275
    2. ' numbers' → logprob: -2.350898027420044
    3. 'sorted' → logprob: -7.850897789001465
    4. '
' → logprob: -9.475897789001465
    5. ' sorted' → logprob: -9.725897789001465
    6. 'str' → logprob: -9.725897789001465
    7. '   ' → logprob: -9.850897789001465
    8. '    
' → logprob: -10.975897789001465
    9. ' str' → logprob: -11.975897789001465
    10. 'number' → logprob: -12.475897789001465

Token 226: '_sorted' (ID: 104993)
  Prédit: 'bers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bers' → logprob: -0.010301589965820312
    2. 'ers' → logprob: -4.76030158996582
    3. '_numbers' → logprob: -6.51030158996582
    4. '```' → logprob: -9.63530158996582
    5. 's' → logprob: -10.38530158996582
    6. '_sorted' → logprob: -10.51030158996582
    7. 'sorted' → logprob: -11.38530158996582
    8. 'mb' → logprob: -11.38530158996582
    9. 'numbers' → logprob: -11.51030158996582
    10. 'ber' → logprob: -12.26030158996582

Token 227: ' =' (ID: 314)
  Prédit: '_numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_numbers' → logprob: -0.01791602000594139
    2. '=' → logprob: -4.392916202545166
    3. ' =' → logprob: -5.392916202545166
    4. '_' → logprob: -8.017915725708008
    5. '_nums' → logprob: -8.017915725708008
    6. 'numbers' → logprob: -9.517915725708008
    7. '_sorted' → logprob: -9.892915725708008
    8. '=[]' → logprob: -11.517915725708008
    9. '(numbers' → logprob: -11.767915725708008
    10. '_list' → logprob: -11.892915725708008

Token 228: ' sorted' (ID: 20099)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.4308701157569885
    2. ' sorted' → logprob: -1.1808700561523438
    3. 'numbers' → logprob: -3.4308700561523438
    4. ' numbers' → logprob: -4.555870056152344
    5. ' ' → logprob: -8.930870056152344
    6. '   ' → logprob: -11.180870056152344
    7. '(sorted' → logprob: -11.555870056152344
    8. '  ' → logprob: -11.680870056152344
    9. 'list' → logprob: -12.555870056152344
    10. '[' → logprob: -13.493370056152344

Token 229: '(numbers' (ID: 98592)
  Prédit: '(numbers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(numbers' → logprob: -0.002217699773609638
    2. 'numbers' → logprob: -6.127217769622803
    3. '(str' → logprob: -10.627217292785645
    4. '(' → logprob: -12.627217292785645
    5. 'str' → logprob: -12.877217292785645
    6. '_numbers' → logprob: -14.752217292785645
    7. '(number' → logprob: -15.002217292785645
    8. '(num' → logprob: -15.002217292785645
    9. ' numbers' → logprob: -15.252217292785645
    10. '(strings' → logprob: -15.627217292785645

Token 230: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0016922038048505783
    2. ' )' → logprob: -6.751692295074463
    3. ',' → logprob: -8.001691818237305
    4. '   ' → logprob: -8.876691818237305
    5. ')
' → logprob: -10.251691818237305
    6. ' ,' → logprob: -13.126691818237305
    7. ' ' → logprob: -13.376691818237305
    8. ')
' → logprob: -13.501691818237305
    9. ',)' → logprob: -13.626691818237305
    10. ')

' → logprob: -14.126691818237305

Token 231: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4372173845767975
    2. '    
' → logprob: -1.187217354774475
    3. '   ' → logprob: -3.5622174739837646
    4. '<|end|>' → logprob: -4.3122172355651855
    5. '  
' → logprob: -5.8122172355651855
    6. ' 
' → logprob: -6.0622172355651855
    7. '   
' → logprob: -7.0622172355651855
    8. ')' → logprob: -8.562217712402344
    9. ' ' → logprob: -8.687217712402344
    10. '  ' → logprob: -8.937217712402344

Token 232: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7474674582481384
    2. '    
' → logprob: -0.8724674582481384
    3. '   ' → logprob: -2.497467517852783
    4. 'str' → logprob: -4.997467517852783
    5. ' lex' → logprob: -4.997467517852783
    6. ' 
' → logprob: -5.122467517852783
    7. ' str' → logprob: -6.247467517852783
    8. 'lex' → logprob: -6.747467517852783
    9. '    ' → logprob: -7.372467517852783
    10. '   
' → logprob: -7.497467517852783

Token 233: ' Trier' (ID: 191551)
  Prédit: 'lex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lex' → logprob: -0.20599569380283356
    2. 'str' → logprob: -2.455995798110962
    3. '#' → logprob: -2.955995798110962
    4. ' lex' → logprob: -3.330995798110962
    5. ' str' → logprob: -5.455995559692383
    6. ' lexi' → logprob: -5.955995559692383
    7. 'Lex' → logprob: -6.080995559692383
    8. ' #' → logprob: -6.705995559692383
    9. '   ' → logprob: -7.580995559692383
    10. 'string' → logprob: -8.830995559692383

Token 234: ' lex' (ID: 37772)
  Prédit: ' lex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lex' → logprob: -0.2952377200126648
    2. 'lex' → logprob: -1.6702377796173096
    3. '(str' → logprob: -3.1702377796173096
    4. 'str' → logprob: -4.9202375411987305
    5. ' lexi' → logprob: -5.1702375411987305
    6. ' str' → logprob: -5.5452375411987305
    7. '_' → logprob: -5.7952375411987305
    8. '_str' → logprob: -6.2952375411987305
    9. '(' → logprob: -6.2952375411987305
    10. ' lexical' → logprob: -7.5452375411987305

Token 235: 'ic' (ID: 291)
  Prédit: 'ic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ic' → logprob: -0.4166892468929291
    2. '_sorted' → logprob: -2.166689157485962
    3. 'ico' → logprob: -2.666689157485962
    4. '_' → logprob: -3.166689157485962
    5. 'iquement' → logprob: -3.291689157485962
    6. 'sorted' → logprob: -3.666689157485962
    7. '(sorted' → logprob: -4.166689395904541
    8. 'str' → logprob: -4.916689395904541
    9. 'i' → logprob: -5.291689395904541
    10. '_str' → logprob: -5.541689395904541

Token 236: 'ograph' (ID: 4257)
  Prédit: 'ograph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ograph' → logprob: -0.2986029386520386
    2. 'ographique' → logprob: -1.7986029386520386
    3. 'ographically' → logprob: -2.673603057861328
    4. 'ographiques' → logprob: -4.798603057861328
    5. 'iquement' → logprob: -5.048603057861328
    6. 'ographical' → logprob: -5.548603057861328
    7. 'ographic' → logprob: -6.673603057861328
    8. 'o' → logprob: -6.673603057861328
    9. 'ogra' → logprob: -7.298603057861328
    10. 'ograp' → logprob: -7.548603057861328

Token 237: 'iquement' (ID: 83934)
  Prédit: 'iquement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iquement' → logprob: -0.003339671529829502
    2. 'ique' → logprob: -6.628339767456055
    3. 'i' → logprob: -7.128339767456055
    4. 'iqu' → logprob: -8.378339767456055
    5. 'quement' → logprob: -8.878339767456055
    6. 'iq' → logprob: -9.128339767456055
    7. 'ie' → logprob: -9.253339767456055
    8. 'ically' → logprob: -9.378339767456055
    9. 'ic' → logprob: -9.503339767456055
    10. '[' → logprob: -9.628339767456055

Token 238: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.192093625664711
    2. ' lex' → logprob: -2.06709361076355
    3. '=' → logprob: -3.81709361076355
    4. 'lex' → logprob: -4.317093849182129
    5. '   ' → logprob: -4.692093849182129
    6. 'str' → logprob: -6.567093849182129
    7. ' lexi' → logprob: -7.192093849182129
    8. ' (' → logprob: -7.817093849182129
    9. ',' → logprob: -8.442093849182129
    10. ' str' → logprob: -8.692093849182129

Token 239: '   ' (ID: 271)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.46507248282432556
    2. ' lex' → logprob: -1.590072512626648
    3. '=' → logprob: -2.7150723934173584
    4. 'lex' → logprob: -3.0900723934173584
    5. '   ' → logprob: -3.3400723934173584
    6. 'str' → logprob: -4.2150726318359375
    7. ' str' → logprob: -6.0900726318359375
    8. ' lexi' → logprob: -6.7150726318359375
    9. ',' → logprob: -6.8400726318359375
    10. '=str' → logprob: -7.0900726318359375

Token 240: ' lex' (ID: 37772)
  Prédit: 'lex'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lex' (adapté à ' lex') → logprob: -0.15690413117408752
    2. ' lex' → logprob: -2.0319042205810547
    3. 'str' → logprob: -4.656904220581055
    4. ' str' → logprob: -6.031904220581055
    5. ' lexi' → logprob: -6.656904220581055
    6. '   ' → logprob: -7.031904220581055
    7. '    ' → logprob: -11.406904220581055
    8. 'sorted' → logprob: -11.781904220581055
    9. ' ' → logprob: -12.281904220581055
    10. '  ' → logprob: -12.406904220581055

Token 241: '_sorted' (ID: 104993)
  Prédit: '_sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sorted' → logprob: -0.00010449681576574221
    2. '_' → logprob: -9.875104904174805
    3. 'sorted' → logprob: -10.000104904174805
    4. '_numbers' → logprob: -12.500104904174805
    5. '_str' → logprob: -13.000104904174805
    6. '_sort' → logprob: -14.625104904174805
    7. '=' → logprob: -15.500104904174805
    8. '_strings' → logprob: -15.750104904174805
    9. '_num' → logprob: -16.000104904174805
    10. ' =' → logprob: -16.000104904174805

Token 242: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10020796209573746
    2. ' =' → logprob: -2.350208044052124
    3. '(numbers' → logprob: -15.225208282470703
    4. '=str' → logprob: -15.850208282470703
    5. '＝' → logprob: -15.975208282470703
    6. ')' → logprob: -16.100208282470703
    7. '(' → logprob: -16.350208282470703
    8. '=[]' → logprob: -16.350208282470703
    9. ' ' → logprob: -16.475208282470703
    10. '=num' → logprob: -16.600208282470703

Token 243: ' sorted' (ID: 20099)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.012517773546278477
    2. ' sorted' → logprob: -4.387517929077148
    3. '(sorted' → logprob: -12.262517929077148
    4. 'str' → logprob: -13.512517929077148
    5. '   ' → logprob: -13.637517929077148
    6. ' ' → logprob: -15.012517929077148
    7. '.sorted' → logprob: -15.012517929077148
    8. '  ' → logprob: -16.13751792907715
    9. 's' → logprob: -16.63751792907715
    10. '[' → logprob: -16.63751792907715

Token 244: '(numbers' (ID: 98592)
  Prédit: '(str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(str' → logprob: -2.6895233531831764e-05
    2. 'str' → logprob: -10.75002670288086
    3. '(' → logprob: -12.50002670288086
    4. ' (' → logprob: -13.75002670288086
    5. '(strings' → logprob: -15.50002670288086
    6. '[str' → logprob: -15.75002670288086
    7. '	str' → logprob: -16.37502670288086
    8. ' str' → logprob: -17.00002670288086
    9. '=str' → logprob: -17.62502670288086
    10. '(
' → logprob: -17.75002670288086

Token 245: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01167178526520729
    2. ',key' → logprob: -4.511672019958496
    3. 'key' → logprob: -8.136672019958496
    4. ')' → logprob: -8.511672019958496
    5. ' ,' → logprob: -9.136672019958496
    6. ' key' → logprob: -10.886672019958496
    7. 'str' → logprob: -13.636672019958496
    8. '(key' → logprob: -13.886672019958496
    9. ',str' → logprob: -14.386672019958496
    10. '[key' → logprob: -15.011672019958496

Token 246: ' key' (ID: 2140)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.5759546756744385
    2. ' key' → logprob: -0.8259546756744385
    3. '   ' → logprob: -11.32595443725586
    4. ',key' → logprob: -13.20095443725586
    5. '	key' → logprob: -14.20095443725586
    6. '(key' → logprob: -15.07595443725586
    7. '  ' → logprob: -15.70095443725586
    8. ' ' → logprob: -16.57595443725586
    9. ',' → logprob: -16.95095443725586
    10. ')' → logprob: -17.32595443725586

Token 247: '=lambda' (ID: 64865)
  Prédit: '=str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=str' → logprob: -0.6952351331710815
    2. '=lambda' → logprob: -0.6952351331710815
    3. '=' → logprob: -6.445235252380371
    4. ' =' → logprob: -8.195235252380371
    5. 'str' → logprob: -9.320235252380371
    6. 'lambda' → logprob: -9.695235252380371
    7. ' lambda' → logprob: -9.820235252380371
    8. '=len' → logprob: -11.820235252380371
    9. ' str' → logprob: -12.445235252380371
    10. '=int' → logprob: -12.695235252380371

Token 248: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.01815006136894226
    2. ' x' → logprob: -4.0181498527526855
    3. 'str' → logprob: -15.893150329589844
    4. 's' → logprob: -17.518150329589844
    5. ' ' → logprob: -18.018150329589844
    6. '   ' → logprob: -18.518150329589844
    7. '	x' → logprob: -19.768150329589844
    8. 'i' → logprob: -20.018150329589844
    9. 'num' → logprob: -20.018150329589844
    10. 'y' → logprob: -20.268150329589844

Token 249: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.012155702337622643
    2. 'str' → logprob: -4.887155532836914
    3. ':str' → logprob: -5.512155532836914
    4. ' :' → logprob: -8.012155532836914
    5. ' str' → logprob: -9.387155532836914
    6. '=str' → logprob: -9.512155532836914
    7. 's' → logprob: -12.262155532836914
    8. '   ' → logprob: -13.637155532836914
    9. ':
' → logprob: -13.762155532836914
    10. '[str' → logprob: -13.762155532836914

Token 250: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.008153998292982578
    2. ' str' → logprob: -4.883153915405273
    3. 'lambda' → logprob: -7.633153915405273
    4. ' lambda' → logprob: -9.758153915405273
    5. 's' → logprob: -13.383153915405273
    6. '[str' → logprob: -13.633153915405273
    7. '   ' → logprob: -14.508153915405273
    8. '	str' → logprob: -14.633153915405273
    9. '(str' → logprob: -14.633153915405273
    10. ' ' → logprob: -14.758153915405273

Token 251: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0017322985222563148
    2. 'x' → logprob: -6.376732349395752
    3. '_numbers' → logprob: -10.626731872558594
    4. '(' → logprob: -12.751731872558594
    5. 'numbers' → logprob: -13.376731872558594
    6. '[x' → logprob: -15.126731872558594
    7. ' x' → logprob: -15.126731872558594
    8. ',x' → logprob: -16.001731872558594
    9. '	x' → logprob: -16.001731872558594
    10. 'Numbers' → logprob: -16.501731872558594

Token 252: '))
' (ID: 2210)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.026330262422561646
    2. 'x' → logprob: -3.6513302326202393
    3. '[x' → logprob: -10.65132999420166
    4. ')' → logprob: -13.02632999420166
    5. ')x' → logprob: -13.90132999420166
    6. '{x' → logprob: -14.27632999420166
    7. '(' → logprob: -14.52632999420166
    8. 'numbers' → logprob: -14.52632999420166
    9. '	x' → logprob: -15.02632999420166
    10. '_numbers' → logprob: -15.15132999420166

Token 253: '    
' (ID: 1944)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1526537537574768
    2. '<|end|>' → logprob: -2.277653694152832
    3. '    
' → logprob: -3.652653694152832
    4. '   ' → logprob: -4.777653694152832
    5. '

' → logprob: -6.527653694152832
    6. '  
' → logprob: -6.902653694152832
    7. '<|end|>' → logprob: -7.402653694152832
    8. '
    
' → logprob: -7.777653694152832
    9. '\n' → logprob: -7.902653694152832
    10. ' 
' → logprob: -8.402653694152832

Token 254: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24105039238929749
    2. '
' → logprob: -2.2410504817962646
    3. '    
' → logprob: -2.2410504817962646
    4. ' 
' → logprob: -7.3660502433776855
    5. '#' → logprob: -8.491050720214844
    6. '    ' → logprob: -9.116050720214844
    7. '    
    
' → logprob: -9.241050720214844
    8. 'dp' → logprob: -9.616050720214844
    9. '  
' → logprob: -9.616050720214844
    10. 'n' → logprob: -9.741050720214844

Token 255: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.05730580538511276
    2. '#' (adapté à ' #') → logprob: -3.0573058128356934
    3. ' dp' → logprob: -5.557305812835693
    4. 'count' → logprob: -6.057305812835693
    5. '   ' → logprob: -7.057305812835693
    6. '
' → logprob: -8.182305335998535
    7. 'from' → logprob: -8.432305335998535
    8. ' #' → logprob: -8.432305335998535
    9. 'DP' → logprob: -8.557305335998535
    10. 'valid' → logprob: -9.307305335998535

Token 256: ' Vér' (ID: 159169)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.09363612532615662
    2. '#' → logprob: -2.8436360359191895
    3. ' dp' → logprob: -4.0936360359191895
    4. 'from' → logprob: -5.2186360359191895
    5. ' from' → logprob: -5.8436360359191895
    6. ' #' → logprob: -6.5936360359191895
    7. 'if' → logprob: -6.7186360359191895
    8. ' if' → logprob: -7.2186360359191895
    9. 'count' → logprob: -7.2186360359191895
    10. 'import' → logprob: -7.7186360359191895

Token 257: 'ifier' (ID: 4550)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.42616546154022217
    2. 'if' → logprob: -1.9261654615402222
    3. 'ifier' → logprob: -2.1761655807495117
    4. '#' → logprob: -3.0511655807495117
    5. 'iner' → logprob: -3.5511655807495117
    6. 'er' → logprob: -4.926165580749512
    7. 'fer' → logprob: -6.926165580749512
    8. 'ify' → logprob: -7.301165580749512
    9. '_' → logprob: -7.926165580749512
    10. 'ner' → logprob: -8.426165580749512

Token 258: ' pour' (ID: 1930)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2160339057445526
    2. '(' → logprob: -2.841033935546875
    3. 'if' → logprob: -3.216033935546875
    4. '   ' → logprob: -3.341033935546875
    5. ' for' → logprob: -4.216033935546875
    6. ' que' → logprob: -4.716033935546875
    7. ' (' → logprob: -4.841033935546875
    8. ' #' → logprob: -5.591033935546875
    9. ' si' → logprob: -5.716033935546875
    10. '(
' → logprob: -5.716033935546875

Token 259: ' chaque' (ID: 21194)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.02355315536260605
    2. 'i' → logprob: -3.8985531330108643
    3. ' chaque' → logprob: -6.523553371429443
    4. ' ' → logprob: -8.523552894592285
    5. ' idx' → logprob: -8.773552894592285
    6. ' la' → logprob: -9.023552894592285
    7. ' les' → logprob: -9.023552894592285
    8. ' toutes' → logprob: -9.273552894592285
    9. ' l' → logprob: -9.398552894592285
    10. ' num' → logprob: -9.523552894592285

Token 260: ' nombre' (ID: 9733)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3730463683605194
    2. ' i' → logprob: -1.2480463981628418
    3. 'index' → logprob: -5.623046398162842
    4. ' nombre' → logprob: -5.748046398162842
    5. 'nombre' → logprob: -6.123046398162842
    6. ' adjacent' → logprob: -6.248046398162842
    7. ' index' → logprob: -6.373046398162842
    8. 'subset' → logprob: -6.373046398162842
    9. ' subset' → logprob: -6.623046398162842
    10. 'indice' → logprob: -6.748046398162842

Token 261: ' si' (ID: 1784)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.1980227679014206
    2. ' si' → logprob: -3.0730228424072266
    3. ' i' → logprob: -3.4480228424072266
    4. 's' → logprob: -3.6980228424072266
    5. 'if' → logprob: -3.8230228424072266
    6. ',' → logprob: -4.198022842407227
    7. ' s' → logprob: -4.573022842407227
    8. 'si' → logprob: -4.823022842407227
    9. 'i' → logprob: -4.948022842407227
    10. ' dans' → logprob: -5.573022842407227

Token 262: ' la' (ID: 557)
  Prédit: ' il'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' il' → logprob: -0.23377284407615662
    2. 'num' → logprob: -2.7337727546691895
    3. ' str' → logprob: -3.1087727546691895
    4. ' num' → logprob: -3.3587727546691895
    5. 'str' → logprob: -4.6087727546691895
    6. ' ils' → logprob: -4.8587727546691895
    7. ' ' → logprob: -5.1087727546691895
    8. ' la' → logprob: -5.4837727546691895
    9. ' on' → logprob: -5.4837727546691895
    10. ' sa' → logprob: -5.6087727546691895

Token 263: ' position' (ID: 4010)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.6705456972122192
    2. ' position' → logprob: -1.6705456972122192
    3. 'num' → logprob: -2.0455455780029297
    4. 'position' → logprob: -2.0455455780029297
    5. ' i' → logprob: -3.0455455780029297
    6. 'n' → logprob: -3.1705455780029297
    7. ' num' → logprob: -3.2955455780029297
    8. ' next' → logprob: -3.6705455780029297
    9. 'index' → logprob: -3.7955455780029297
    10. ' positions' → logprob: -4.29554557800293

Token 264: ' dans' (ID: 2671)
  Prédit: ' dans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dans' → logprob: -0.9270960688591003
    2. 'dans' → logprob: -1.4270961284637451
    3. 'num' → logprob: -1.8020961284637451
    4. 'i' → logprob: -3.302096128463745
    5. ' num' → logprob: -3.677096128463745
    6. ' i' → logprob: -3.677096128463745
    7. ' en' → logprob: -4.052095890045166
    8. 's' → logprob: -4.177095890045166
    9. ' de' → logprob: -4.427095890045166
    10. ' in' → logprob: -4.427095890045166

Token 265: ' les' (ID: 1341)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.11798083037137985
    2. ' num' → logprob: -2.242980718612671
    3. 'lex' → logprob: -5.99298095703125
    4. ' ' → logprob: -6.61798095703125
    5. ' lex' → logprob: -7.49298095703125
    6. ' la' → logprob: -8.36798095703125
    7. 'la' → logprob: -8.86798095703125
    8. 'str' → logprob: -10.43048095703125
    9. 'l' → logprob: -10.61798095703125
    10. '[num' → logprob: -10.68048095703125

Token 266: ' deux' (ID: 10301)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.4666861295700073
    2. 'num' → logprob: -1.3416861295700073
    3. ' deux' → logprob: -2.716686248779297
    4. 'list' → logprob: -3.966686248779297
    5. ' num' → logprob: -5.216686248779297
    6. 'lex' → logprob: -5.341686248779297
    7. ' listes' → logprob: -5.841686248779297
    8. 'lists' → logprob: -6.091686248779297
    9. ' ' → logprob: -6.341686248779297
    10. 'sorted' → logprob: -7.091686248779297

Token 267: ' tris' (ID: 183328)
  Prédit: ' listes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' listes' → logprob: -0.9565139412879944
    2. 'tr' → logprob: -1.3315138816833496
    3. 'list' → logprob: -2.0815138816833496
    4. 'tris' → logprob: -2.3315138816833496
    5. 'tri' → logprob: -2.9565138816833496
    6. ' tri' → logprob: -4.33151388168335
    7. 'sorted' → logprob: -4.33151388168335
    8. 'lists' → logprob: -4.70651388168335
    9. '_' → logprob: -5.20651388168335
    10. ' lists' → logprob: -5.45651388168335

Token 268: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.24872130155563354
    2. 'est' → logprob: -1.9987213611602783
    3. 's' → logprob: -3.3737213611602783
    4. ' coincide' → logprob: -3.7487213611602783
    5. 'cor' → logprob: -4.373721122741699
    6. ' correspond' → logprob: -5.373721122741699
    7. 'co' → logprob: -5.748721122741699
    8. ' ' → logprob: -6.498721122741699
    9. ' is' → logprob: -6.998721122741699
    10. 'diff' → logprob: -7.123721122741699

Token 269: ' la' (ID: 557)
  Prédit: 'ident'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ident' → logprob: -0.6988235712051392
    2. ' the' → logprob: -1.6988235712051392
    3. 'the' → logprob: -1.9488235712051392
    4. ' ident' → logprob: -2.3238234519958496
    5. '   ' → logprob: -4.32382345199585
    6. ' ' → logprob: -4.44882345199585
    7. ' identical' → logprob: -4.57382345199585
    8. ' la' → logprob: -5.32382345199585
    9. '    ' → logprob: -5.44882345199585
    10. '<|end|>' → logprob: -5.44882345199585

Token 270: ' même' (ID: 9679)
  Prédit: ' même'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' même' → logprob: -0.7534704804420471
    2. 'same' → logprob: -0.8784704804420471
    3. ' same' → logprob: -3.1284704208374023
    4. ' ' → logprob: -3.7534704208374023
    5. ' mêmes' → logprob: -4.128470420837402
    6. '=' → logprob: -4.628470420837402
    7. '   ' → logprob: -5.628470420837402
    8. 'ident' → logprob: -5.628470420837402
    9. 'm' → logprob: -5.753470420837402
    10. 'even' → logprob: -6.378470420837402

Token 271: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18517498672008514
    2. ':' → logprob: -1.8101749420166016
    3. ':
' → logprob: -6.810174942016602
    4. '
' → logprob: -6.935174942016602
    5. ' for' → logprob: -7.310174942016602
    6. '    
' → logprob: -7.435174942016602
    7. '.' → logprob: -7.560174942016602
    8. ',' → logprob: -7.685174942016602
    9. '  
' → logprob: -8.310174942016602
    10. ' :' → logprob: -8.560174942016602

Token 272: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5372959971427917
    2. '   ' → logprob: -1.0372960567474365
    3. ' positions' → logprob: -3.6622960567474365
    4. 'for' → logprob: -3.9122960567474365
    5. '
' → logprob: -5.037295818328857
    6. ' indices' → logprob: -5.912295818328857
    7. 'positions' → logprob: -6.162295818328857
    8. 'indices' → logprob: -6.537295818328857
    9. '    
' → logprob: -6.912295818328857
    10. ' ' → logprob: -8.037296295166016

Token 273: ' #' (ID: 1069)
  Prédit: ' positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' positions' → logprob: -0.4626298248767853
    2. 'positions' → logprob: -1.837629795074463
    3. ' indices' → logprob: -2.962629795074463
    4. 'indices' → logprob: -3.087629795074463
    5. 'pos' → logprob: -3.462629795074463
    6. '   ' → logprob: -3.712629795074463
    7. ' pos' → logprob: -4.587629795074463
    8. ' for' → logprob: -4.587629795074463
    9. ' valid' → logprob: -4.837629795074463
    10. 'for' → logprob: -4.962629795074463

Token 274: ' Cette' (ID: 27383)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.8196179270744324
    2. 'positions' → logprob: -1.5696179866790771
    3. ' positions' → logprob: -2.444617986679077
    4. 'indices' → logprob: -2.944617986679077
    5. ' pos' → logprob: -2.944617986679077
    6. 'index' → logprob: -3.319617986679077
    7. ' index' → logprob: -3.819617986679077
    8. ' indices' → logprob: -3.944617986679077
    9. ' valid' → logprob: -4.194617748260498
    10. 'for' → logprob: -4.444617748260498

Token 275: ' condition' (ID: 7060)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'position' → logprob: -0.6827167272567749
    2. 'part' → logprob: -1.557716727256775
    3. 'v' → logprob: -2.0577168464660645
    4. ' vér' → logprob: -3.6827168464660645
    5. 'verification' → logprob: -3.8077168464660645
    6. '#' → logprob: -3.9327168464660645
    7. 'condition' → logprob: -4.4327168464660645
    8. 'check' → logprob: -4.5577168464660645
    9. 'fonction' → logprob: -4.6827168464660645
    10. 'est' → logprob: -5.1827168464660645

Token 276: ' équ' (ID: 18899)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' est' → logprob: -1.0408748388290405
    2. ' n' → logprob: -1.7908748388290405
    3. ' is' → logprob: -2.29087495803833
    4. ':' → logprob: -2.41587495803833
    5. '   ' → logprob: -2.41587495803833
    6. ' if' → logprob: -2.79087495803833
    7. ' continue' → logprob: -3.66587495803833
    8. ' permet' → logprob: -4.04087495803833
    9. ' for' → logprob: -4.29087495803833
    10. ' =' → logprob: -4.41587495803833

Token 277: 'iv' (ID: 349)
  Prédit: 'iv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iv' → logprob: -8.864272967912257e-05
    2. 'ival' → logprob: -9.500088691711426
    3. 'i' → logprob: -12.500088691711426
    4. 'ivalent' → logprob: -12.500088691711426
    5. 'iva' → logprob: -13.625088691711426
    6. 'val' → logprob: -14.125088691711426
    7. 'vale' → logprob: -14.500088691711426
    8. '

' → logprob: -14.500088691711426
    9. 'ivant' → logprob: -15.000088691711426
    10. 'ivt' → logprob: -15.250088691711426

Token 278: 'aut' (ID: 1828)
  Prédit: 'aut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aut' → logprob: -0.03295791149139404
    2. 'ale' → logprob: -4.407958030700684
    3. 'al' → logprob: -4.907958030700684
    4. 'alent' → logprob: -4.907958030700684
    5. 'ault' → logprob: -6.157958030700684
    6. 'a' → logprob: -6.282958030700684
    7. 'aux' → logprob: -7.907958030700684
    8. 'alt' → logprob: -8.157958030700684
    9. 'au' → logprob: -8.782958030700684
    10. 'alit' → logprob: -9.032958030700684

Token 279: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.006122179329395294
    2. 'à' → logprob: -5.88112211227417
    3. ' to' → logprob: -6.88112211227417
    4. ' ' → logprob: -7.00612211227417
    5. '   ' → logprob: -7.38112211227417
    6. ' a' → logprob: -8.131122589111328
    7. '  ' → logprob: -8.756122589111328
    8. ' ' → logprob: -9.756122589111328
    9. ''à' → logprob: -9.881122589111328
    10. '_' → logprob: -10.006122589111328

Token 280: ' la' (ID: 557)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.109984278678894
    2. ' vérifier' → logprob: -1.609984278678894
    3. ' all' → logprob: -1.984984278678894
    4. 'all' → logprob: -2.1099843978881836
    5. ' ce' → logprob: -2.8599843978881836
    6. 'True' → logprob: -3.1099843978881836
    7. ' True' → logprob: -3.3599843978881836
    8. ' une' → logprob: -5.109984397888184
    9. '(True' → logprob: -5.109984397888184
    10. ' toutes' → logprob: -5.234984397888184

Token 281: ' propriété' (ID: 87730)
  Prédit: 'condition'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'condition' → logprob: -1.972614049911499
    2. ' condition' → logprob: -2.222614049911499
    3. 'prem' → logprob: -2.347614049911499
    4. 'all' → logprob: -2.722614049911499
    5. 'position' → logprob: -2.847614049911499
    6. 'contin' → logprob: -2.972614049911499
    7. ' même' → logprob: -3.097614049911499
    8. 's' → logprob: -3.347614049911499
    9. 'continu' → logprob: -3.347614049911499
    10. ' all' → logprob: -3.472614049911499

Token 282: ' suivante' (ID: 107439)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.6015992760658264
    2. ' de' → logprob: -1.6015992164611816
    3. ' que' → logprob: -2.2265992164611816
    4. ' suivante' → logprob: -2.8515992164611816
    5. 'de' → logprob: -3.7265992164611816
    6. 'd' → logprob: -3.8515992164611816
    7. ' ' → logprob: -5.101599216461182
    8. '   ' → logprob: -5.351599216461182
    9. 'def' → logprob: -5.351599216461182
    10. 'sorted' → logprob: -5.601599216461182

Token 283: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12105369567871094
    2. ' :' → logprob: -2.246053695678711
    3. '   ' → logprob: -4.996053695678711
    4. ' ' → logprob: -7.496053695678711
    5. ',' → logprob: -8.121053695678711
    6. ':
' → logprob: -8.746053695678711
    7. ':\' → logprob: -9.621053695678711
    8. ' :
' → logprob: -10.246053695678711
    9. ':

' → logprob: -10.371053695678711
    10. '_:' → logprob: -10.496053695678711

Token 284: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0632767453789711
    2. ' for' → logprob: -3.688276767730713
    3. '    ' → logprob: -4.188276767730713
    4. '    
' → logprob: -5.188276767730713
    5. ' 
' → logprob: -5.438276767730713
    6. ' ' → logprob: -6.313276767730713
    7. ' ' → logprob: -6.438276767730713
    8. ' if' → logprob: -6.813276767730713
    9. '  
' → logprob: -6.813276767730713
    10. '     
' → logprob: -7.188276767730713

Token 285: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.777987539768219
    2. ' positions' → logprob: -1.2779874801635742
    3. ' indices' → logprob: -2.402987480163574
    4. 'for' → logprob: -3.152987480163574
    5. 'positions' → logprob: -3.277987480163574
    6. ' valid' → logprob: -3.527987480163574
    7. 'indices' → logprob: -4.027987480163574
    8. ' pos' → logprob: -4.277987480163574
    9. 'pos' → logprob: -4.402987480163574
    10. ' equal' → logprob: -6.152987480163574

Token 286: ' Pour' (ID: 13931)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6796722412109375
    2. ' for' → logprob: -1.0546722412109375
    3. '#' → logprob: -3.0546722412109375
    4. 'les' → logprob: -4.1796722412109375
    5. 'if' → logprob: -4.5546722412109375
    6. ' if' → logprob: -4.6796722412109375
    7. 'Pour' → logprob: -4.6796722412109375
    8. ' les' → logprob: -5.3046722412109375
    9. 'Si' → logprob: -5.5546722412109375
    10. 'Les' → logprob: -5.8046722412109375

Token 287: ' tout' (ID: 5501)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5262766480445862
    2. 'i' → logprob: -0.9012766480445862
    3. ' all' → logprob: -6.026276588439941
    4. 'all' → logprob: -8.276276588439941
    5. ' every' → logprob: -9.776276588439941
    6. ' ' → logprob: -9.776276588439941
    7. ' tout' → logprob: -9.776276588439941
    8. ' idx' → logprob: -9.901276588439941
    9. ' ' → logprob: -10.151276588439941
    10. ' toute' → logprob: -10.401276588439941

Token 288: ' couple' (ID: 7167)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.20193910598754883
    2. 'i' → logprob: -1.7019391059875488
    3. ' ' → logprob: -9.20193862915039
    4. ' x' → logprob: -9.45193862915039
    5. ' ' → logprob: -9.57693862915039
    6. 'x' → logprob: -9.95193862915039
    7. ' index' → logprob: -10.57693862915039
    8. 'k' → logprob: -10.82693862915039
    9. '	i' → logprob: -11.07693862915039
    10. 'indice' → logprob: -11.07693862915039

Token 289: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.061896082013845444
    2. '(i' → logprob: -2.9368960857391357
    3. ' i' → logprob: -5.686895847320557
    4. ' de' → logprob: -7.186895847320557
    5. '(' → logprob: -7.436895847320557
    6. ' ' → logprob: -7.686895847320557
    7. '(x' → logprob: -7.811895847320557
    8. 'i' → logprob: -8.436896324157715
    9. '(a' → logprob: -8.561896324157715
    10. ' d' → logprob: -8.811896324157715

Token 290: 'x' (ID: 87)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1146734282374382
    2. ' i' → logprob: -2.239673376083374
    3. ')' → logprob: -7.989673614501953
    4. 'x' → logprob: -8.239673614501953
    5. 'num' → logprob: -8.239673614501953
    6. '   ' → logprob: -8.614673614501953
    7. '(i' → logprob: -8.739673614501953
    8. ',' → logprob: -8.989673614501953
    9. 'a' → logprob: -8.989673614501953
    10. ' (' → logprob: -9.364673614501953

Token 291: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006388253066688776
    2. ' ,' → logprob: -5.381388187408447
    3. ',y' → logprob: -6.506388187408447
    4. '),' → logprob: -9.006388664245605
    5. '1' → logprob: -9.631388664245605
    6. ',i' → logprob: -10.756388664245605
    7. 'y' → logprob: -11.381388664245605
    8. 'i' → logprob: -11.506388664245605
    9. ',x' → logprob: -11.631388664245605
    10. ',num' → logprob: -12.131388664245605

Token 292: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.1707669496536255
    2. ')' → logprob: -2.170766830444336
    3. ',' → logprob: -3.420766830444336
    4. ' ),' → logprob: -5.045766830444336
    5. ',)' → logprob: -6.920766830444336
    6. ' ,' → logprob: -7.545766830444336
    7. ' )' → logprob: -7.545766830444336
    8. ',),' → logprob: -7.795766830444336
    9. '),
' → logprob: -8.045766830444336
    10. ' dans' → logprob: -8.170766830444336

Token 293: ' x' (ID: 1215)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.46011459827423096
    2. '#' → logprob: -1.960114598274231
    3. ' x' → logprob: -2.4601144790649414
    4. ' #' → logprob: -2.8351144790649414
    5. '   ' → logprob: -3.3351144790649414
    6. 'x' → logprob: -4.210114479064941
    7. ' y' → logprob: -4.210114479064941
    8. 'if' → logprob: -4.585114479064941
    9. '    ' → logprob: -5.835114479064941
    10. '<|end|>' → logprob: -6.585114479064941

Token 294: '<' (ID: 27)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.116681307554245
    2. ' <' → logprob: -2.4916813373565674
    3. '<=' → logprob: -4.616681098937988
    4. ' ==' → logprob: -4.741681098937988
    5. ' ,' → logprob: -5.741681098937988
    6. ',' → logprob: -6.491681098937988
    7. 's' → logprob: -7.366681098937988
    8. ' !=' → logprob: -7.741681098937988
    9. '<' → logprob: -8.116681098937988
    10. ')' → logprob: -8.241681098937988

Token 295: 'y' (ID: 88)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.15583403408527374
    2. 'y' → logprob: -2.0308339595794678
    3. ' ' → logprob: -4.780834197998047
    4. '=' → logprob: -5.905834197998047
    5. '<|end|>' → logprob: -7.030834197998047
    6. ' =' → logprob: -8.905834197998047
    7. ',' → logprob: -8.905834197998047
    8. ' ' → logprob: -9.030834197998047
    9. ' x' → logprob: -9.155834197998047
    10. 'x' → logprob: -9.780834197998047

Token 296: ' numérique' (ID: 73962)
  Prédit: ' implies'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' implies' → logprob: -0.9845848083496094
    2. ' et' → logprob: -1.7345848083496094
    3. ' implique' → logprob: -2.2345848083496094
    4. ' and' → logprob: -2.2345848083496094
    5. ' dans' → logprob: -2.7345848083496094
    6. ' =>' → logprob: -3.1095848083496094
    7. '=>' → logprob: -3.8595848083496094
    8. ',' → logprob: -3.8595848083496094
    9. 'im' → logprob: -4.109584808349609
    10. 'impl' → logprob: -4.109584808349609

Token 297: ' implique' (ID: 168269)
  Prédit: ' et'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' et' → logprob: -0.902766227722168
    2. ' and' → logprob: -2.152766227722168
    3. '=>' → logprob: -2.277766227722168
    4. ' implies' → logprob: -2.277766227722168
    5. 'et' → logprob: -2.527766227722168
    6. ' implique' → logprob: -2.652766227722168
    7. ' =>' → logprob: -3.027766227722168
    8. 'im' → logprob: -3.527766227722168
    9. 'impl' → logprob: -4.152766227722168
    10. 'and' → logprob: -4.652766227722168

Token 298: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.8123980164527893
    2. ' str' → logprob: -1.0623979568481445
    3. 'x' → logprob: -2.1873979568481445
    4. ' que' → logprob: -2.9373979568481445
    5. ' x' → logprob: -3.5623979568481445
    6. '(str' → logprob: -5.6873979568481445
    7. ' ' → logprob: -6.1873979568481445
    8. 'lex' → logprob: -6.1873979568481445
    9. ' lex' → logprob: -6.3123979568481445
    10. ' that' → logprob: -6.9373979568481445

Token 299: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.05354961007833481
    2. '_numbers' → logprob: -3.5535495281219482
    3. '(str' → logprob: -3.9285495281219482
    4. '(' → logprob: -6.303549766540527
    5. '(y' → logprob: -7.178549766540527
    6. '(n' → logprob: -7.928549766540527
    7. '(numbers' → logprob: -8.053549766540527
    8. 'str' → logprob: -9.053549766540527
    9. '(a' → logprob: -10.053549766540527
    10. 'x' → logprob: -10.178549766540527

Token 300: ')<' (ID: 62287)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.013526995666325092
    2. ')<' → logprob: -4.388526916503906
    3. '[' → logprob: -7.763526916503906
    4. '(x' → logprob: -9.138526916503906
    5. '")' → logprob: -9.388526916503906
    6. ' )' → logprob: -9.763526916503906
    7. '())' → logprob: -9.763526916503906
    8. '')' → logprob: -10.263526916503906
    9. ' <' → logprob: -10.513526916503906
    10. '<' → logprob: -10.638526916503906

Token 301: 'str' (ID: 689)
  Prédit: 'str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.28662869334220886
    2. ' str' → logprob: -1.4116287231445312
    3. '(str' → logprob: -5.286628723144531
    4. '	str' → logprob: -8.661628723144531
    5. '=str' → logprob: -9.536628723144531
    6. 's' → logprob: -10.161628723144531
    7. ' ' → logprob: -10.661628723144531
    8. 'stri' → logprob: -11.161628723144531
    9. ' (' → logprob: -11.786628723144531
    10. 'y' → logprob: -11.786628723144531

Token 302: '(y' (ID: 14684)
  Prédit: '(y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.07654117047786713
    2. '(x' → logprob: -2.7015411853790283
    3. '(' → logprob: -5.076540946960449
    4. ' (' → logprob: -8.70154094696045
    5. 'y' → logprob: -9.07654094696045
    6. '(str' → logprob: -10.70154094696045
    7. ' ' → logprob: -11.57654094696045
    8. '(
' → logprob: -12.32654094696045
    9. '(u' → logprob: -12.57654094696045
    10. ',' → logprob: -12.70154094696045

Token 303: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.032944872975349426
    2. ')
' → logprob: -4.407944679260254
    3. ' )' → logprob: -4.657944679260254
    4. '))' → logprob: -6.032944679260254
    5. '")' → logprob: -6.782944679260254
    6. ')")
' → logprob: -6.907944679260254
    7. ')")' → logprob: -7.032944679260254
    8. '),' → logprob: -7.032944679260254
    9. ' ' → logprob: -7.157944679260254
    10. ' )
' → logprob: -7.532944679260254

Token 304: ' lex' (ID: 37772)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.028587589040398598
    2. '.' → logprob: -4.528587818145752
    3. ',' → logprob: -4.903587818145752
    4. ':' → logprob: -5.778587818145752
    5. '    
' → logprob: -6.403587818145752
    6. '
' → logprob: -6.778587818145752
    7. '       ' → logprob: -7.653587818145752
    8. '  
' → logprob: -7.778587818145752
    9. '  ' → logprob: -7.903587818145752
    10. '<|end|>' → logprob: -7.903587818145752

Token 305: 'ic' (ID: 291)
  Prédit: 'ic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ic' → logprob: -0.6069011688232422
    2. '   ' → logprob: -1.9819011688232422
    3. '_sorted' → logprob: -2.356901168823242
    4. '#' → logprob: -2.981901168823242
    5. 'ico' → logprob: -3.731901168823242
    6. 'i' → logprob: -3.856901168823242
    7. 'ique' → logprob: -4.106901168823242
    8. '.' → logprob: -4.231901168823242
    9. 'iquement' → logprob: -4.606901168823242
    10. ',' → logprob: -4.606901168823242

Token 306: 'ograph' (ID: 4257)
  Prédit: 'ographique'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ographique' → logprob: -0.06600786000490189
    2. 'o' → logprob: -3.1910078525543213
    3. 'iquement' → logprob: -4.5660080909729
    4. 'ograph' → logprob: -4.9410080909729
    5. 'ique' → logprob: -6.5660080909729
    6. 'ographically' → logprob: -6.8160080909729
    7. 'ographiques' → logprob: -7.3160080909729
    8. 'ograp' → logprob: -8.316007614135742
    9. 'oq' → logprob: -8.441007614135742
    10. 'og' → logprob: -8.566007614135742

Token 307: 'iquement' (ID: 83934)
  Prédit: 'iquement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iquement' → logprob: -0.3515436351299286
    2. 'ique' → logprob: -1.226543664932251
    3. 'al' → logprob: -7.101543426513672
    4. 'iqu' → logprob: -7.726543426513672
    5. 'quement' → logprob: -7.851543426513672
    6. 'iq' → logprob: -8.226543426513672
    7. 'raph' → logprob: -8.226543426513672
    8. 'iques' → logprob: -8.851543426513672
    9. 'i' → logprob: -8.976543426513672
    10. 'rique' → logprob: -9.101543426513672

Token 308: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09187807142734528
    2. '.' → logprob: -3.4668781757354736
    3. '    
' → logprob: -3.9668781757354736
    4. ',' → logprob: -4.0918779373168945
    5. '
' → logprob: -4.5918779373168945
    6. '  
' → logprob: -5.9668779373168945
    7. ':' → logprob: -6.3418779373168945
    8. ',
' → logprob: -6.9668779373168945
    9. '<|end|>' → logprob: -7.0918779373168945
    10. ' ' → logprob: -7.2168779373168945

Token 309: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006005940958857536
    2. '
' → logprob: -6.131005764007568
    3. '    
' → logprob: -6.381005764007568
    4. ' positions' → logprob: -7.131005764007568
    5. ' for' → logprob: -7.506005764007568
    6. ' indices' → logprob: -8.506006240844727
    7. 'positions' → logprob: -9.006006240844727
    8. 'indices' → logprob: -9.631006240844727
    9. '#' → logprob: -9.756006240844727
    10. '    ' → logprob: -10.256006240844727

Token 310: ' #' (ID: 1069)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.6800922751426697
    2. 'for' → logprob: -1.8050923347473145
    3. '   ' → logprob: -1.9300923347473145
    4. 'positions' → logprob: -2.5550923347473145
    5. 'position' → logprob: -3.9300923347473145
    6. ' for' → logprob: -4.0550923347473145
    7. ' positions' → logprob: -4.1800923347473145
    8. ' pos' → logprob: -4.6800923347473145
    9. 'index' → logprob: -4.9300923347473145
    10. '#' (adapté à ' #') → logprob: -4.9300923347473145

Token 311: ' Donc' (ID: 88837)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -1.30967116355896
    2. ' for' → logprob: -1.68467116355896
    3. 'for' → logprob: -1.68467116355896
    4. ' pos' → logprob: -2.43467116355896
    5. ' positions' → logprob: -2.55967116355896
    6. ' position' → logprob: -3.05967116355896
    7. 'positions' → logprob: -3.43467116355896
    8. 'if' → logprob: -4.059671401977539
    9. ' if' → logprob: -4.309671401977539
    10. ' index' → logprob: -4.309671401977539

Token 312: ' args' (ID: 4966)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16914696991443634
    2. ' valid' → logprob: -3.04414701461792
    3. ' count' → logprob: -3.41914701461792
    4. 'count' → logprob: -4.16914701461792
    5. ' i' → logprob: -4.41914701461792
    6. ' result' → logprob: -5.04414701461792
    7. ' res' → logprob: -5.29414701461792
    8. ' subsets' → logprob: -5.29414701461792
    9. ' def' → logprob: -5.66914701461792
    10. ' for' → logprob: -5.79414701461792

Token 313: 'ort' (ID: 390)
  Prédit: 'ort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ort' → logprob: -0.8637458682060242
    2. '=' → logprob: -0.9887458682060242
    3. 'orted' → logprob: -2.613745927810669
    4. ' =' → logprob: -2.738745927810669
    5. 'orts' → logprob: -3.738745927810669
    6. 'sort' → logprob: -4.98874568939209
    7. '   ' → logprob: -4.98874568939209
    8. '_sorted' → logprob: -5.11374568939209
    9. 'sorted' → logprob: -5.36374568939209
    10. '_positions' → logprob: -5.73874568939209

Token 314: ' des' (ID: 731)
  Prédit: '_num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_num' → logprob: -0.341736763715744
    2. ' =' → logprob: -2.5917367935180664
    3. 'num' → logprob: -2.8417367935180664
    4. '_' → logprob: -3.5917367935180664
    5. 's' → logprob: -3.7167367935180664
    6. '_nums' → logprob: -3.9667367935180664
    7. '_n' → logprob: -4.216736793518066
    8. '_indices' → logprob: -4.716736793518066
    9. '1' → logprob: -4.716736793518066
    10. 'A' → logprob: -5.091736793518066

Token 315: ' deux' (ID: 10301)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'numbers' → logprob: -0.9584940671920776
    2. 'num' → logprob: -1.0834940671920776
    3. ' numbers' → logprob: -2.083494186401367
    4. 'str' → logprob: -2.833494186401367
    5. ' lex' → logprob: -3.708494186401367
    6. ' num' → logprob: -3.708494186401367
    7. 'lex' → logprob: -4.083494186401367
    8. ' str' → logprob: -4.083494186401367
    9. ' indices' → logprob: -5.833494186401367
    10. 'indices' → logprob: -6.208494186401367

Token 316: ' tris' (ID: 183328)
  Prédit: 'indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'indices' → logprob: -0.9972618222236633
    2. '_' → logprob: -1.7472617626190186
    3. 'num' → logprob: -1.9972617626190186
    4. '_num' → logprob: -2.6222617626190186
    5. 's' → logprob: -3.2472617626190186
    6. 'lists' → logprob: -3.6222617626190186
    7. ' indices' → logprob: -3.7472617626190186
    8. ' =' → logprob: -3.9972617626190186
    9. '_indices' → logprob: -4.122262001037598
    10. ' numériques' → logprob: -4.247262001037598

Token 317: ' doit' (ID: 21822)
  Prédit: '_num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_num' → logprob: -0.07786008715629578
    2. '_' → logprob: -3.452860116958618
    3. 'num' → logprob: -3.952860116958618
    4. '1' → logprob: -4.327859878540039
    5. ' =' → logprob: -6.452859878540039
    6. '_n' → logprob: -6.452859878540039
    7. '   ' → logprob: -6.577859878540039
    8. '_nums' → logprob: -6.827859878540039
    9. ' num' → logprob: -6.952859878540039
    10. 'def' → logprob: -7.577859878540039

Token 318: ' être' (ID: 9104)
  Prédit: ' être'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' être' → logprob: -0.19212546944618225
    2. 'être' → logprob: -1.8171254396438599
    3. ''être' → logprob: -6.94212532043457
    4. 'êtres' → logprob: -7.06712532043457
    5. 's' → logprob: -7.19212532043457
    6. ' be' → logprob: -7.19212532043457
    7. '_' → logprob: -7.31712532043457
    8. 'égal' → logprob: -7.31712532043457
    9. ' coinc' → logprob: -7.31712532043457
    10. 'co' → logprob: -7.56712532043457

Token 319: ' ident' (ID: 3951)
  Prédit: 'ident'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ident' → logprob: -0.09333354234695435
    2. ' ident' → logprob: -2.5933334827423096
    3. 'le' → logprob: -5.218333721160889
    4. 'égal' → logprob: -6.093333721160889
    5. 'la' → logprob: -6.718333721160889
    6. 'les' → logprob: -6.843333721160889
    7. ' ég' → logprob: -6.968333721160889
    8. ' égal' → logprob: -7.468333721160889
    9. 'ég' → logprob: -7.593333721160889
    10. ' la' → logprob: -7.968333721160889

Token 320: 'ique' (ID: 2222)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.5691729187965393
    2. 'ques' → logprob: -1.4441728591918945
    3. 'cal' → logprob: -1.9441728591918945
    4. 'ique' → logprob: -3.8191728591918945
    5. 'iques' → logprob: -4.3191728591918945
    6. '#' → logprob: -5.1941728591918945
    7. '```' → logprob: -6.4441728591918945
    8. '}' → logprob: -7.0691728591918945
    9. 'c' → logprob: -7.0691728591918945
    10. '_' → logprob: -7.3191728591918945

Token 321: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09691853076219559
    2. '.' → logprob: -2.5969185829162598
    3. '
' → logprob: -4.97191858291626
    4. '    
' → logprob: -5.47191858291626
    5. ',' → logprob: -5.59691858291626
    6. '.
' → logprob: -6.97191858291626
    7. ':' → logprob: -7.09691858291626
    8. 'def' → logprob: -8.096918106079102
    9. '  
' → logprob: -9.221918106079102
    10. ',
' → logprob: -9.221918106079102

Token 322: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016059592366218567
    2. '    
' → logprob: -4.516059398651123
    3. '
' → logprob: -5.641059398651123
    4. 'indices' → logprob: -7.016059398651123
    5. ' indices' → logprob: -8.766059875488281
    6. '   
' → logprob: -9.141059875488281
    7. '  
' → logprob: -9.641059875488281
    8. 'def' → logprob: -10.266059875488281
    9. '```' → logprob: -10.266059875488281
    10. 'positions' → logprob: -11.016059875488281

Token 323: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7511003613471985
    2. ' num' → logprob: -1.0011003017425537
    3. 'num' → logprob: -2.3761003017425537
    4. 'pos' → logprob: -3.6261003017425537
    5. ' pos' → logprob: -3.6261003017425537
    6. 'def' → logprob: -6.251100540161133
    7. ' if' → logprob: -6.251100540161133
    8. ' indices' → logprob: -6.376100540161133
    9. ' def' → logprob: -6.626100540161133
    10. ' positions' → logprob: -6.751100540161133

Token 324: ' Nous' (ID: 20193)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.6846137642860413
    2. ' pos' → logprob: -1.8096137046813965
    3. 'num' → logprob: -1.9346137046813965
    4. ' num' → logprob: -2.0596137046813965
    5. 'index' → logprob: -4.6846137046813965
    6. ' index' → logprob: -4.8096137046813965
    7. 'from' → logprob: -5.1846137046813965
    8. ' if' → logprob: -5.3096137046813965
    9. ' position' → logprob: -5.3096137046813965
    10. 'if' → logprob: -5.5596137046813965

Token 325: ' allons' (ID: 97647)
  Prédit: ' allons'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' allons' → logprob: -1.6922882795333862
    2. ' =' → logprob: -2.067288398742676
    3. ' devons' → logprob: -2.192288398742676
    4. 'for' → logprob: -2.317288398742676
    5. 'def' → logprob: -2.317288398742676
    6. '#' → logprob: -2.817288398742676
    7. ' for' → logprob: -2.817288398742676
    8. ' pouvons' → logprob: -2.942288398742676
    9. '   ' → logprob: -3.067288398742676
    10. ' continu' → logprob: -3.567288398742676

Token 326: ' construire' (ID: 92473)
  Prédit: ' vérifier'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' vérifier' → logprob: -0.30642807483673096
    2. ' continuer' → logprob: -3.1814279556274414
    3. '#' → logprob: -3.4314279556274414
    4. 'v' → logprob: -3.6814279556274414
    5. 'contin' → logprob: -3.8064279556274414
    6. ' créer' → logprob: -3.8064279556274414
    7. 'util' → logprob: -3.8064279556274414
    8. ' utiliser' → logprob: -4.056427955627441
    9. '   ' → logprob: -4.181427955627441
    10. 'ver' → logprob: -4.556427955627441

Token 327: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.703578770160675
    2. ' une' → logprob: -1.3285787105560303
    3. ' deux' → logprob: -1.8285787105560303
    4. ' two' → logprob: -2.9535787105560303
    5. 'un' → logprob: -5.078578948974609
    6. ' ' → logprob: -5.328578948974609
    7. ' a' → logprob: -5.453578948974609
    8. 'a' → logprob: -6.578578948974609
    9. 'une' → logprob: -7.078578948974609
    10. ' an' → logprob: -7.203578948974609

Token 328: ' tableau' (ID: 67053)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0890805795788765
    2. 'mapping' → logprob: -3.589080572128296
    3. ' dp' → logprob: -3.714080572128296
    4. 'index' → logprob: -4.839080810546875
    5. 'pos' → logprob: -5.214080810546875
    6. 'graph' → logprob: -5.339080810546875
    7. ' mapping' → logprob: -5.714080810546875
    8. 'position' → logprob: -5.839080810546875
    9. ' tableau' → logprob: -6.714080810546875
    10. 'table' → logprob: -6.839080810546875

Token 329: ' où' (ID: 15113)
  Prédit: ' pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pos' → logprob: -1.171722173690796
    2. ' d' → logprob: -1.671722173690796
    3. 'pos' → logprob: -2.046722173690796
    4. ' position' → logprob: -2.171722173690796
    5. '   ' → logprob: -2.546722173690796
    6. ' positions' → logprob: -2.921722173690796
    7. ' index' → logprob: -3.921722173690796
    8. ' des' → logprob: -4.171722412109375
    9. ' indices' → logprob: -4.296722412109375
    10. 'position' → logprob: -4.421722412109375

Token 330: ' res' (ID: 694)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.5480713844299316
    2. 'positions' → logprob: -1.7980713844299316
    3. 'indices' → logprob: -3.2980713844299316
    4. 'valid' → logprob: -3.2980713844299316
    5. ' positions' → logprob: -3.4230713844299316
    6. 'dp' → logprob: -3.6730713844299316
    7. 'position' → logprob: -4.048071384429932
    8. 'i' → logprob: -4.173071384429932
    9. ' pos' → logprob: -4.173071384429932
    10. 'for' → logprob: -4.923071384429932

Token 331: '[i' (ID: 1768)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11010978370904922
    2. '[i' → logprob: -3.235109806060791
    3. '=' → logprob: -3.360109806060791
    4. '[' → logprob: -3.985109806060791
    5. 'ult' → logprob: -6.485109806060791
    6. '=[]' → logprob: -6.485109806060791
    7. 's' → logprob: -6.985109806060791
    8. '[]' → logprob: -6.985109806060791
    9. '   ' → logprob: -7.360109806060791
    10. ' ' → logprob: -7.360109806060791

Token 332: ']=' (ID: 9539)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.010279403068125248
    2. ']=' → logprob: -4.885279178619385
    3. ' ]' → logprob: -6.760279178619385
    4. '=' → logprob: -7.260279178619385
    5. ' =' → logprob: -8.385279655456543
    6. ']==' → logprob: -8.385279655456543
    7. '   ' → logprob: -9.135279655456543
    8. ']+=' → logprob: -9.385279655456543
    9. 's' → logprob: -10.635279655456543
    10. ']int' → logprob: -11.135279655456543

Token 333: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.05529453605413437
    2. 'True' → logprob: -3.4302945137023926
    3. 'i' → logprob: -4.180294513702393
    4. ' True' → logprob: -6.680294513702393
    5. '(i' → logprob: -6.805294513702393
    6. ' ' → logprob: -7.180294513702393
    7. '(True' → logprob: -7.430294513702393
    8. '0' → logprob: -7.555294513702393
    9. 'int' → logprob: -7.680294513702393
    10. 'res' → logprob: -7.930294513702393

Token 334: ' si' (ID: 1784)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.019982673227787018
    2. '<|end|>' → logprob: -4.894982814788818
    3. 'if' → logprob: -5.144982814788818
    4. '   ' → logprob: -6.269982814788818
    5. ' for' → logprob: -6.519982814788818
    6. '
' → logprob: -7.019982814788818
    7. ',' → logprob: -7.394982814788818
    8. ' ' → logprob: -7.894982814788818
    9. ' si' → logprob: -7.894982814788818
    10. ' only' → logprob: -8.64498233795166

Token 335: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.19990943372249603
    2. ' num' → logprob: -2.5749094486236572
    3. 'str' → logprob: -3.1999094486236572
    4. 'numbers' → logprob: -3.5749094486236572
    5. ' str' → logprob: -4.449909210205078
    6. ' numbers' → logprob: -5.074909210205078
    7. 'i' → logprob: -5.324909210205078
    8. 'lex' → logprob: -5.574909210205078
    9. ' i' → logprob: -5.824909210205078
    10. ' lex' → logprob: -6.699909210205078

Token 336: '_sorted' (ID: 104993)
  Prédit: '_sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sorted' → logprob: -6.802049756515771e-05
    2. '_' → logprob: -10.250067710876465
    3. '_s' → logprob: -11.500067710876465
    4. 'sorted' → logprob: -11.625067710876465
    5. ' _' → logprob: -11.750067710876465
    6. '[_' → logprob: -14.250067710876465
    7. '   ' → logprob: -14.250067710876465
    8. ')_' → logprob: -14.500067710876465
    9. ']_' → logprob: -14.875067710876465
    10. '_sort' → logprob: -14.875067710876465

Token 337: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.001169033464975655
    2. '[' → logprob: -7.126169204711914
    3. '.index' → logprob: -9.126169204711914
    4. 'index' → logprob: -9.501169204711914
    5. '[index' → logprob: -10.001169204711914
    6. 'indices' → logprob: -10.501169204711914
    7. ' ==' → logprob: -10.501169204711914
    8. '==' → logprob: -10.751169204711914
    9. '_indices' → logprob: -12.001169204711914
    10. '[idx' → logprob: -12.126169204711914

Token 338: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.725976824760437
    2. ']==' → logprob: -1.350976824760437
    3. '==' → logprob: -1.475976824760437
    4. ' ==' → logprob: -3.6009769439697266
    5. ']=' → logprob: -8.225976943969727
    6. '=' → logprob: -8.600976943969727
    7. ')==' → logprob: -8.975976943969727
    8. ' ]' → logprob: -9.100976943969727
    9. '```' → logprob: -9.350976943969727
    10. ')' → logprob: -9.475976943969727

Token 339: ' 
' (ID: 793)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0891093760728836
    2. ' ==' → logprob: -2.464109420776367
    3. ']==' → logprob: -8.964109420776367
    4. '==
' → logprob: -10.839109420776367
    5. '=' → logprob: -11.839109420776367
    6. ']' → logprob: -12.339109420776367
    7. '<=' → logprob: -12.964109420776367
    8. ')==' → logprob: -13.214109420776367
    9. ' ' → logprob: -13.589109420776367
    10. '```' → logprob: -13.964109420776367

Token 340: '   ' (ID: 271)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.28311991691589355
    2. ' ==' → logprob: -1.4081199169158936
    3. '<=' → logprob: -6.783120155334473
    4. ' <=' → logprob: -8.283120155334473
    5. ']==' → logprob: -8.283120155334473
    6. ']' → logprob: -9.408120155334473
    7. 'et' → logprob: -9.908120155334473
    8. ' et' → logprob: -10.408120155334473
    9. '=' → logprob: -10.533120155334473
    10. ' ' → logprob: -10.533120155334473

Token 341: ' #' (ID: 1069)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.1616012305021286
    2. ' ==' → logprob: -1.911601185798645
    3. ']==' → logprob: -7.7866010665893555
    4. '<=' → logprob: -7.9116010665893555
    5. ']' → logprob: -9.161601066589355
    6. 'et' → logprob: -9.786601066589355
    7. 's' → logprob: -9.911601066589355
    8. '#' (adapté à ' #') → logprob: -10.036601066589355
    9. 'dans' → logprob: -10.161601066589355
    10. '>=' → logprob: -10.161601066589355

Token 342: ' et' (ID: 859)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.01036636158823967
    2. ' ==' → logprob: -4.635366439819336
    3. 'est' → logprob: -8.385366439819336
    4. 'et' → logprob: -8.760366439819336
    5. 'dans' → logprob: -9.885366439819336
    6. 's' → logprob: -10.385366439819336
    7. ' est' → logprob: -10.760366439819336
    8. '==
' → logprob: -10.885366439819336
    9. ']==' → logprob: -11.010366439819336
    10. '!=' → logprob: -11.635366439819336

Token 343: ' lex' (ID: 37772)
  Prédit: 'lex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lex' → logprob: -0.03369411081075668
    2. ' lex' → logprob: -3.40869402885437
    3. 'str' → logprob: -10.65869426727295
    4. '   ' → logprob: -11.40869426727295
    5. 'num' → logprob: -12.28369426727295
    6. ' ' → logprob: -12.90869426727295
    7. ' lexi' → logprob: -13.03369426727295
    8. '    ' → logprob: -14.03369426727295
    9. '  ' → logprob: -14.03369426727295
    10. '#' → logprob: -14.65869426727295

Token 344: '_sorted' (ID: 104993)
  Prédit: '_sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sorted' → logprob: -1.7120533811976202e-05
    2. 'sorted' → logprob: -11.250017166137695
    3. '_s' → logprob: -13.750017166137695
    4. '_' → logprob: -14.250017166137695
    5. ')_' → logprob: -14.875017166137695
    6. 'Sorted' → logprob: -15.375017166137695
    7. 'i' → logprob: -15.750017166137695
    8. '[' → logprob: -16.000017166137695
    9. ']_' → logprob: -16.000017166137695
    10. ''_' → logprob: -16.125017166137695

Token 345: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.002356856595724821
    2. '[' → logprob: -6.127357006072998
    3. ' [' → logprob: -9.50235652923584
    4. '[I' → logprob: -10.87735652923584
    5. '[pos' → logprob: -11.37735652923584
    6. ''s' → logprob: -11.37735652923584
    7. '[
' → logprob: -12.37735652923584
    8. '[position' → logprob: -12.37735652923584
    9. ')[' → logprob: -12.62735652923584
    10. '[j' → logprob: -12.87735652923584

Token 346: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.062104254961013794
    2. ']==' → logprob: -2.8121042251586914
    3. ']=' → logprob: -9.937104225158691
    4. ' ]' → logprob: -10.437104225158691
    5. ' sont' → logprob: -11.812104225158691
    6. 's' → logprob: -12.187104225158691
    7. 'are' → logprob: -12.437104225158691
    8. ']=='' → logprob: -12.562104225158691
    9. '==' → logprob: -12.687104225158691
    10. '```' → logprob: -12.687104225158691

Token 347: ' correspondent' (ID: 86218)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.2288840115070343
    2. ' ==' → logprob: -1.728883981704712
    3. ']==' → logprob: -4.353884220123291
    4. ' are' → logprob: -4.978884220123291
    5. ']' → logprob: -5.353884220123291
    6. '=' → logprob: -6.853884220123291
    7. 'are' → logprob: -7.978884220123291
    8. ')==' → logprob: -8.353883743286133
    9. '[' → logprob: -8.603883743286133
    10. ' ' → logprob: -8.978883743286133

Token 348: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05204881727695465
    2. ' and' → logprob: -3.802048921585083
    3. ' et' → logprob: -4.552048683166504
    4. 'and' → logprob: -5.552048683166504
    5. '   ' → logprob: -5.677048683166504
    6. ';' → logprob: -5.927048683166504
    7. ' ,' → logprob: -6.052048683166504
    8. '<|end|>' → logprob: -6.677048683166504
    9. ' ' → logprob: -7.302048683166504
    10. '=True' → logprob: -7.677048683166504

Token 349: 'm' (ID: 76)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '),' → logprob: -0.25749650597572327
    2. ')' → logprob: -2.5074965953826904
    3. ' and' → logprob: -3.2574965953826904
    4. ' et' → logprob: -3.2574965953826904
    5. 'and' → logprob: -4.132496356964111
    6. 'et' → logprob: -4.382496356964111
    7. ' ),' → logprob: -4.757496356964111
    8. ',' → logprob: -4.882496356964111
    9. '   ' → logprob: -5.007496356964111
    10. ' ' → logprob: -5.632496356964111

Token 350: 'ême' (ID: 7961)
  Prédit: 'ême'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ême' → logprob: -0.28339147567749023
    2. 'ean' → logprob: -3.1583914756774902
    3. 'e' → logprob: -3.2833914756774902
    4. 'a' → logprob: -3.9083914756774902
    5. 'aint' → logprob: -3.9083914756774902
    6. '   ' → logprob: -4.28339147567749
    7. 'atches' → logprob: -4.53339147567749
    8. ')' → logprob: -4.53339147567749
    9. 'atching' → logprob: -4.53339147567749
    10. 'atch' → logprob: -4.53339147567749

Token 351: ' valeur' (ID: 41664)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -1.2940994501113892
    2. 'number' → logprob: -1.6690994501113892
    3. 'value' → logprob: -1.9190994501113892
    4. '<|end|>' → logprob: -2.9190993309020996
    5. ' valeur' → logprob: -3.0440993309020996
    6. 'élé' → logprob: -3.0440993309020996
    7. ' nombre' → logprob: -3.0440993309020996
    8. ')' → logprob: -3.0440993309020996
    9. 'element' → logprob: -3.1690993309020996
    10. 'numbers' → logprob: -4.2940993309021

Token 352: ').
' (ID: 6294)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '),' → logprob: -0.3813588619232178
    2. ')' → logprob: -1.3813588619232178
    3. ' et' → logprob: -3.6313588619232178
    4. ' and' → logprob: -3.7563588619232178
    5. '   ' → logprob: -5.256359100341797
    6. ' ),' → logprob: -5.506359100341797
    7. ',' → logprob: -6.006359100341797
    8. ' )' → logprob: -6.381359100341797
    9. 'et' → logprob: -7.381359100341797
    10. 'and' → logprob: -7.506359100341797

Token 353: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006966728251427412
    2. 'res' → logprob: -5.756966590881348
    3. ' res' → logprob: -6.006966590881348
    4. ' for' → logprob: -7.506966590881348
    5. '
' → logprob: -8.006966590881348
    6. 'for' → logprob: -8.631966590881348
    7. ' ' → logprob: -9.756966590881348
    8. '```' → logprob: -9.756966590881348
    9. '    
' → logprob: -10.131966590881348
    10. 'def' → logprob: -10.506966590881348

Token 354: ' #' (ID: 1069)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.41208112239837646
    2. ' res' → logprob: -1.6620811223983765
    3. '   ' → logprob: -1.9120811223983765
    4. '```' → logprob: -9.537080764770508
    5. '	res' → logprob: -10.287080764770508
    6. ' ' → logprob: -10.537080764770508
    7. '
' → logprob: -10.787080764770508
    8. '    
' → logprob: -11.287080764770508
    9. 'result' → logprob: -12.037080764770508
    10. ' for' → logprob: -12.662080764770508

Token 355: ' Si' (ID: 7832)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.002361021237447858
    2. ' res' → logprob: -6.627360820770264
    3. '   ' → logprob: -6.877360820770264
    4. '	res' → logprob: -13.877361297607422
    5. '
' → logprob: -14.127361297607422
    6. ' ' → logprob: -14.752361297607422
    7. '    
' → logprob: -15.002361297607422
    8. 'for' → logprob: -15.252361297607422
    9. '```' → logprob: -15.377361297607422
    10. '#' → logprob: -15.627361297607422

Token 356: ' res' (ID: 694)
  Prédit: ' num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' num' → logprob: -0.5301790833473206
    2. 'num' → logprob: -1.2801790237426758
    3. ' i' → logprob: -2.905179023742676
    4. ' not' → logprob: -3.905179023742676
    5. ' all' → logprob: -3.905179023742676
    6. 'i' → logprob: -4.030179023742676
    7. ' any' → logprob: -5.030179023742676
    8. 'not' → logprob: -5.655179023742676
    9. 'all' → logprob: -6.655179023742676
    10. ' ' → logprob: -6.655179023742676

Token 357: '[i' (ID: 1768)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8192409873008728
    2. ' =' → logprob: -1.0692410469055176
    3. '[i' → logprob: -1.5692410469055176
    4. '[' → logprob: -5.319241046905518
    5. '=[' → logprob: -6.319241046905518
    6. ']' → logprob: -8.19424057006836
    7. ' ' → logprob: -8.94424057006836
    8. ' ==' → logprob: -9.06924057006836
    9. ' =[' → logprob: -9.31924057006836
    10. '==' → logprob: -9.44424057006836

Token 358: ']=' (ID: 9539)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5965204834938049
    2. '==' → logprob: -1.7215204238891602
    3. ' ==' → logprob: -2.22152042388916
    4. '[i' → logprob: -2.72152042388916
    5. ']==' → logprob: -2.84652042388916
    6. '=' → logprob: -3.97152042388916
    7. '[' → logprob: -5.22152042388916
    8. ' ]' → logprob: -5.47152042388916
    9. ']=' → logprob: -6.22152042388916
    10. '   ' → logprob: -6.22152042388916

Token 359: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1853969246149063
    2. '1' → logprob: -2.060396909713745
    3. ' ' → logprob: -3.185396909713745
    4. '=' → logprob: -7.935397148132324
    5. '   ' → logprob: -10.247897148132324
    6. '```' → logprob: -11.060397148132324
    7. '  ' → logprob: -11.497897148132324
    8. ' =' → logprob: -11.622897148132324
    9. '==' → logprob: -12.622897148132324
    10. ' ' → logprob: -12.935397148132324

Token 360: ' pour' (ID: 1930)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6937388181686401
    2. ' and' → logprob: -0.8187388181686401
    3. ',' → logprob: -3.5687389373779297
    4. 'and' → logprob: -4.19373893737793
    5. ' else' → logprob: -5.06873893737793
    6. ':
' → logprob: -5.56873893737793
    7. ' et' → logprob: -6.31873893737793
    8. '   ' → logprob: -6.94373893737793
    9. 'else' → logprob: -7.44373893737793
    10. ' ' → logprob: -7.56873893737793

Token 361: ' tous' (ID: 10688)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.35670262575149536
    2. ' all' → logprob: -1.4817025661468506
    3. 'i' → logprob: -3.7317025661468506
    4. ' ' → logprob: -4.23170280456543
    5. ' i' → logprob: -4.60670280456543
    6. ' tous' → logprob: -5.23170280456543
    7. 'tout' → logprob: -5.35670280456543
    8. 't' → logprob: -5.60670280456543
    9. '   ' → logprob: -5.85670280456543
    10. ' tout' → logprob: -6.60670280456543

Token 362: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.3486388325691223
    2. 'i' → logprob: -1.2236387729644775
    3. ' ' → logprob: -8.848638534545898
    4. ',' → logprob: -11.348638534545898
    5. ' les' → logprob: -11.473638534545898
    6. ' indices' → logprob: -11.723638534545898
    7. 'indices' → logprob: -12.473638534545898
    8. '	i' → logprob: -12.598638534545898
    9. '   ' → logprob: -12.723638534545898
    10. ',i' → logprob: -13.223638534545898

Token 363: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1681423932313919
    2. ',' → logprob: -1.9181424379348755
    3. '   ' → logprob: -5.918142318725586
    4. ' :' → logprob: -6.168142318725586
    5. ' ,' → logprob: -7.168142318725586
    6. ' and' → logprob: -7.543142318725586
    7. ' else' → logprob: -7.668142318725586
    8. ' in' → logprob: -8.293142318725586
    9. ':
' → logprob: -8.293142318725586
    10. '[i' → logprob: -8.918142318725586

Token 364: ' alors' (ID: 17971)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3423806130886078
    2. '       ' → logprob: -1.9673806428909302
    3. '    ' → logprob: -2.2173805236816406
    4. ' return' → logprob: -3.9673805236816406
    5. ' continue' → logprob: -5.217380523681641
    6. ' ' → logprob: -5.967380523681641
    7. ' ' → logprob: -5.967380523681641
    8. ' #' → logprob: -6.467380523681641
    9. 'return' → logprob: -6.842380523681641
    10. '  ' → logprob: -6.842380523681641

Token 365: ' tout' (ID: 5501)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.41416388750076294
    2. '   ' → logprob: -1.6641638278961182
    3. 'return' → logprob: -2.039163827896118
    4. ' True' → logprob: -5.664164066314697
    5. ' n' → logprob: -5.914164066314697
    6. ' le' → logprob: -6.289164066314697
    7. ' la' → logprob: -6.289164066314697
    8. ' result' → logprob: -6.414164066314697
    9. ' ' → logprob: -6.539164066314697
    10. ' #' → logprob: -7.164164066314697

Token 366: ' l' (ID: 305)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.3550957441329956
    2. ' subset' → logprob: -1.8550957441329956
    3. ' is' → logprob: -3.230095863342285
    4. 'est' → logprob: -3.730095863342285
    5. 'subset' → logprob: -3.855095863342285
    6. ' va' → logprob: -4.480095863342285
    7. ' le' → logprob: -4.480095863342285
    8. ' subsets' → logprob: -4.980095863342285
    9. 's' → logprob: -5.105095863342285
    10. 'sorted' → logprob: -5.105095863342285

Token 367: ''ensemble' (ID: 79341)
  Prédit: ''ensemble'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''ensemble' → logprob: -0.5653228163719177
    2. 'a' → logprob: -1.6903228759765625
    3. 'e' → logprob: -2.0653228759765625
    4. 'es' → logprob: -2.8153228759765625
    5. 'iste' → logprob: -4.1903228759765625
    6. ''' → logprob: -5.0653228759765625
    7. 'subset' → logprob: -5.0653228759765625
    8. '’ensemble' → logprob: -5.4403228759765625
    9. 'sorted' → logprob: -5.5653228759765625
    10. '_subset' → logprob: -6.0653228759765625

Token 368: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.01589534431695938
    2. 'est' → logprob: -5.140895366668701
    3. ' =' → logprob: -5.890895366668701
    4. '=' → logprob: -7.140895366668701
    5. ' des' → logprob: -7.140895366668701
    6. ' is' → logprob: -7.390895366668701
    7. ' n' → logprob: -7.390895366668701
    8. 'numbers' → logprob: -7.390895366668701
    9. ' vaut' → logprob: -8.015894889831543
    10. '[' → logprob: -8.140894889831543

Token 369: ' bon' (ID: 4846)
  Prédit: ' tri'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' tri' → logprob: -0.5367220640182495
    2. 'sorted' → logprob: -1.7867220640182495
    3. ' sorted' → logprob: -2.411722183227539
    4. 'tri' → logprob: -2.536722183227539
    5. 'tr' → logprob: -3.911722183227539
    6. 'valid' → logprob: -4.161722183227539
    7. ' valid' → logprob: -4.411722183227539
    8. 'strict' → logprob: -4.786722183227539
    9. ' ' → logprob: -5.286722183227539
    10. ' valide' → logprob: -5.661722183227539

Token 370: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0801646038889885
    2. ',' → logprob: -2.705164670944214
    3. '    
' → logprob: -5.580164432525635
    4. '.' → logprob: -5.955164432525635
    5. '
' → logprob: -6.955164432525635
    6. ',
' → logprob: -7.205164432525635
    7. ':' → logprob: -7.580164432525635
    8. ';' → logprob: -8.330164909362793
    9. '  ' → logprob: -8.830164909362793
    10. '  
' → logprob: -8.830164909362793

Token 371: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004629957489669323
    2. '    
' → logprob: -6.379630088806152
    3. '
' → logprob: -6.504630088806152
    4. ',' → logprob: -7.879630088806152
    5. ':' → logprob: -9.004630088806152
    6. '  
' → logprob: -9.129630088806152
    7. '```' → logprob: -9.254630088806152
    8. ' res' → logprob: -9.379630088806152
    9. '.' → logprob: -9.504630088806152
    10. 'res' → logprob: -9.504630088806152

Token 372: ' #' (ID: 1069)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.06589525938034058
    2. '   ' → logprob: -3.0658953189849854
    3. ' res' → logprob: -4.065895080566406
    4. '	res' → logprob: -12.440895080566406
    5. ' ' → logprob: -13.065895080566406
    6. 'result' → logprob: -13.565895080566406
    7. 'def' → logprob: -13.815895080566406
    8. '  ' → logprob: -14.065895080566406
    9. '    
' → logprob: -14.440895080566406
    10. '
' → logprob: -15.315895080566406

Token 373: ' Le' (ID: 2018)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.15886139869689941
    2. ' res' → logprob: -2.0338613986968994
    3. '   ' → logprob: -4.15886116027832
    4. ' for' → logprob: -8.65886116027832
    5. 'for' → logprob: -8.78386116027832
    6. '
' → logprob: -9.65886116027832
    7. '    
' → logprob: -11.28386116027832
    8. ' ' → logprob: -11.90886116027832
    9. '	res' → logprob: -12.15886116027832
    10. 'result' → logprob: -13.03386116027832

Token 374: ' problème' (ID: 35630)
  Prédit: ' res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.18096613883972168
    2. 'res' → logprob: -1.8059661388397217
    3. '   ' → logprob: -7.055966377258301
    4. '#' → logprob: -9.1809663772583
    5. ' ' → logprob: -9.8059663772583
    6. ' result' → logprob: -10.3059663772583
    7. ' #' → logprob: -10.6809663772583
    8. 'result' → logprob: -10.9309663772583
    9. ' n' → logprob: -11.0559663772583
    10. 'def' → logprob: -11.4309663772583

Token 375: ' demande' (ID: 26737)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.5029571056365967
    2. ' est' → logprob: -1.8779571056365967
    3. '   ' → logprob: -2.0029571056365967
    4. '<|end|>' → logprob: -2.0029571056365967
    5. ' n' → logprob: -2.1279571056365967
    6. ' is' → logprob: -2.5029571056365967
    7. 'n' → logprob: -3.3779571056365967
    8. ' reste' → logprob: -3.8779571056365967
    9. ' ' → logprob: -4.377957344055176
    10. ' #' → logprob: -4.627957344055176

Token 376: ' les' (ID: 1341)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.16825805604457855
    2. '   ' → logprob: -2.66825795173645
    3. 'de' → logprob: -2.91825795173645
    4. 'd' → logprob: -4.918258190155029
    5. '    ' → logprob: -5.293258190155029
    6. ' d' → logprob: -5.418258190155029
    7. ' ' → logprob: -6.168258190155029
    8. '#' → logprob: -6.918258190155029
    9. '    
' → logprob: -6.918258190155029
    10. 'le' → logprob: -7.043258190155029

Token 377: ' sous' (ID: 14487)
  Prédit: ' sous'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sous' → logprob: -1.012617588043213
    2. 's' → logprob: -1.512617588043213
    3. ' nombres' → logprob: -1.887617588043213
    4. 'nombre' → logprob: -2.512617588043213
    5. '#' → logprob: -3.012617588043213
    6. ' subsets' → logprob: -3.512617588043213
    7. ' nombre' → logprob: -3.887617588043213
    8. 'rés' → logprob: -4.637617588043213
    9. 'count' → logprob: -4.762617588043213
    10. 'mod' → logprob: -4.762617588043213

Token 378: '-' (ID: 12)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.12047792226076126
    2. 'ense' → logprob: -2.7454779148101807
    3. 'sets' → logprob: -4.12047815322876
    4. '-' → logprob: -4.49547815322876
    5. '   ' → logprob: -5.49547815322876
    6. '_sequences' → logprob: -5.49547815322876
    7. '_sets' → logprob: -5.62047815322876
    8. '_list' → logprob: -6.12047815322876
    9. '_set' → logprob: -6.24547815322876
    10. '\' → logprob: -6.74547815322876

Token 379: 'ense' (ID: 1603)
  Prédit: 'ense'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ense' → logprob: -0.0002205828350270167
    2. 'ensemble' → logprob: -8.87522029876709
    3. 'sets' → logprob: -11.12522029876709
    4. '_' → logprob: -11.37522029876709
    5. '   ' → logprob: -11.62522029876709
    6. '
' → logprob: -11.75022029876709
    7. '-' → logprob: -12.25022029876709
    8. 'enses' → logprob: -12.25022029876709
    9. '\' → logprob: -12.62522029876709
    10. ' ensembles' → logprob: -12.62522029876709

Token 380: 'mbles' (ID: 60383)
  Prédit: 'mbles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mbles' → logprob: -0.003906588070094585
    2. 'mb' → logprob: -6.003906726837158
    3. 'mble' → logprob: -6.628906726837158
    4. 'm' → logprob: -9.37890625
    5. 'ts' → logprob: -11.25390625
    6. 'quences' → logprob: -12.12890625
    7. 'mbly' → logprob: -13.25390625
    8. 'bles' → logprob: -13.87890625
    9. 'gments' → logprob: -14.25390625
    10. 'mbler' → logprob: -14.50390625

Token 381: ',' (ID: 11)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8242869973182678
    2. ' non' → logprob: -1.574286937713623
    3. ',' → logprob: -2.699286937713623
    4. ' =' → logprob: -2.824286937713623
    5. '_non' → logprob: -3.074286937713623
    6. 'non' → logprob: -3.199286937713623
    7. ' _' → logprob: -3.324286937713623
    8. '_valid' → logprob: -4.324286937713623
    9. '[]' → logprob: -4.449286937713623
    10. '   ' → logprob: -4.574286937713623

Token 382: ' 
' (ID: 793)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.12069643288850784
    2. '   ' → logprob: -2.245696544647217
    3. ' #' → logprob: -5.620696544647217
    4. ' mais' → logprob: -6.370696544647217
    5. 'import' → logprob: -7.495696544647217
    6. 'mais' → logprob: -7.745696544647217
    7. '    
' → logprob: -8.120696067810059
    8. ' but' → logprob: -8.245696067810059
    9. '
' → logprob: -8.870696067810059
    10. 'but' → logprob: -8.995696067810059

Token 383: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24542631208896637
    2. '#' → logprob: -1.7454262971878052
    3. ' #' → logprob: -3.4954264163970947
    4. ' mais' → logprob: -4.620426177978516
    5. ' donc' → logprob: -7.245426177978516
    6. '    
' → logprob: -7.620426177978516
    7. ' et' → logprob: -8.120426177978516
    8. 'mais' → logprob: -8.620426177978516
    9. '    ' → logprob: -8.745426177978516
    10. ' pas' → logprob: -8.995426177978516

Token 384: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.020799722522497177
    2. ' donc' → logprob: -4.89579963684082
    3. '   ' → logprob: -5.27079963684082
    4. ' #' → logprob: -5.52079963684082
    5. ' mais' → logprob: -6.02079963684082
    6. 'mais' → logprob: -7.27079963684082
    7. 'don' → logprob: -8.77079963684082
    8. 'et' → logprob: -9.39579963684082
    9. ' et' → logprob: -9.39579963684082
    10. 'not' → logprob: -9.77079963684082

Token 385: ' or' (ID: 503)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.002512996783480048
    2. '   ' → logprob: -6.5025129318237305
    3. ' #' → logprob: -7.0025129318237305
    4. 'mais' → logprob: -10.37751293182373
    5. '    
' → logprob: -11.87751293182373
    6. '
' → logprob: -11.87751293182373
    7. 'return' → logprob: -12.00251293182373
    8. ' mais' → logprob: -12.25251293182373
    9. 'Donc' → logprob: -12.25251293182373
    10. 'res' → logprob: -12.25251293182373

Token 386: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0374293327331543
    2. '#' → logprob: -1.4124293327331543
    3. ' #' → logprob: -2.2874293327331543
    4. ' for' → logprob: -2.7874293327331543
    5. ' on' → logprob: -2.7874293327331543
    6. ' res' → logprob: -3.0374293327331543
    7. ' il' → logprob: -3.2874293327331543
    8. 'res' → logprob: -3.7874293327331543
    9. ' i' → logprob: -4.412429332733154
    10. ' n' → logprob: -4.787429332733154

Token 387: ' partir' (ID: 12100)
  Prédit: 'cause'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cause' → logprob: -0.0023226027842611074
    2. 'part' → logprob: -6.752322673797607
    3. 'prés' → logprob: -7.627322673797607
    4. ' cause' → logprob: -9.37732219696045
    5. 'prem' → logprob: -9.87732219696045
    6. 'car' → logprob: -9.87732219696045
    7. 'la' → logprob: -10.12732219696045
    8. 'prendre' → logprob: -10.25232219696045
    9. 'prior' → logprob: -10.37732219696045
    10. 'present' → logprob: -10.50232219696045

Token 388: ' de' (ID: 334)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.1433875560760498
    2. ' d' → logprob: -1.3933875560760498
    3. ' de' → logprob: -1.8933875560760498
    4. '[i' → logprob: -2.39338755607605
    5. ' des' → logprob: -2.76838755607605
    6. '   ' → logprob: -3.01838755607605
    7. 'de' → logprob: -3.26838755607605
    8. '=' → logprob: -4.268387794494629
    9. '[' → logprob: -5.143387794494629
    10. ' du' → logprob: -5.393387794494629

Token 389: ' l' (ID: 305)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -1.0475647449493408
    2. 'i' → logprob: -1.1725647449493408
    3. 'une' → logprob: -2.297564744949341
    4. 'la' → logprob: -2.672564744949341
    5. 'l' → logprob: -2.797564744949341
    6. 'un' → logprob: -2.922564744949341
    7. '#' → logprob: -3.797564744949341
    8. 'indices' → logprob: -5.297564506530762
    9. '1' → logprob: -5.422564506530762
    10. 'n' → logprob: -5.797564506530762

Token 390: ''ensemble' (ID: 79341)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.0602078437805176
    2. ''' → logprob: -1.4352078437805176
    3. 'i' → logprob: -1.4352078437805176
    4. 'e' → logprob: -3.0602078437805176
    5. ''ind' → logprob: -3.5602078437805176
    6. ''i' → logprob: -3.9352078437805176
    7. ''instant' → logprob: -4.060207843780518
    8. ''ensemble' → logprob: -4.435207843780518
    9. ''end' → logprob: -5.310207843780518
    10. ''import' → logprob: -5.435207843780518

Token 391: ' complet' (ID: 5127)
  Prédit: ' complet'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' complet' → logprob: -0.19829075038433075
    2. 'continu' → logprob: -2.9482908248901367
    3. '[i' → logprob: -3.8232908248901367
    4. ' continu' → logprob: -3.9482908248901367
    5. 'num' → logprob: -3.9482908248901367
    6. 'com' → logprob: -4.448290824890137
    7. ',' → logprob: -4.823290824890137
    8. ' entier' → logprob: -4.948290824890137
    9. 'cont' → logprob: -5.698290824890137
    10. ' num' → logprob: -6.073290824890137

Token 392: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.152863010764122
    2. ' ,' → logprob: -2.152863025665283
    3. 'numbers' → logprob: -4.652863025665283
    4. ' on' → logprob: -5.152863025665283
    5. ' de' → logprob: -6.152863025665283
    6. ' numbers' → logprob: -6.277863025665283
    7. 'num' → logprob: -7.027863025665283
    8. 'def' → logprob: -7.152863025665283
    9. '.' → logprob: -7.902863025665283
    10. 'de' → logprob: -8.027862548828125

Token 393: ' seuls' (ID: 115488)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.05985838174819946
    2. '#' → logprob: -4.059858322143555
    3. ' #' → logprob: -4.434858322143555
    4. ' il' → logprob: -4.434858322143555
    5. 'on' → logprob: -5.059858322143555
    6. ' nous' → logprob: -5.934858322143555
    7. ' i' → logprob: -6.684858322143555
    8. '   ' → logprob: -7.184858322143555
    9. ' we' → logprob: -7.309858322143555
    10. ' ' → logprob: -7.434858322143555

Token 394: ' des' (ID: 731)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.3187176287174225
    2. ' les' → logprob: -1.9437175989151
    3. ' ceux' → logprob: -2.0687177181243896
    4. 's' → logprob: -7.5687174797058105
    5. 'ces' → logprob: -7.8187174797058105
    6. ' des' → logprob: -7.9437174797058105
    7. ' ' → logprob: -8.068717956542969
    8. 'des' → logprob: -8.068717956542969
    9. '<|end|>' → logprob: -8.693717956542969
    10. 't' → logprob: -8.818717956542969

Token 395: ' "' (ID: 392)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7955746650695801
    2. 'indices' → logprob: -1.29557466506958
    3. 'segments' → logprob: -1.92057466506958
    4. 'interval' → logprob: -2.54557466506958
    5. 'inter' → logprob: -4.42057466506958
    6. 'élé' → logprob: -4.54557466506958
    7. 'sub' → logprob: -4.79557466506958
    8. 'ense' → logprob: -5.04557466506958
    9. ' sous' → logprob: -6.04557466506958
    10. 'i' → logprob: -6.42057466506958

Token 396: 'bl' (ID: 1751)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3164083957672119
    2. 'élé' → logprob: -2.066408395767212
    3. 'segments' → logprob: -2.691408395767212
    4. 'indices' → logprob: -3.441408395767212
    5. 'ense' → logprob: -3.816408395767212
    6. 'interval' → logprob: -5.566408157348633
    7. 'inter' → logprob: -5.691408157348633
    8. 'sub' → logprob: -6.191408157348633
    9. '"' → logprob: -6.441408157348633
    10. 'bl' → logprob: -6.691408157348633

Token 397: 'ocs' (ID: 20929)
  Prédit: 'ocks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ocks' → logprob: -0.15462225675582886
    2. 'ock' → logprob: -2.4046223163604736
    3. 'oc' → logprob: -3.4046223163604736
    4. 'ocs' → logprob: -4.2796220779418945
    5. 'o' → logprob: -5.7796220779418945
    6. '```' → logprob: -7.5296220779418945
    7. 'ocked' → logprob: -8.154622077941895
    8. 'e' → logprob: -8.154622077941895
    9. 'an' → logprob: -8.279622077941895
    10. 'oque' → logprob: -8.404622077941895

Token 398: '"' (ID: 1)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.7842910885810852
    2. 'cont' → logprob: -1.6592910289764404
    3. ' cont' → logprob: -2.1592910289764404
    4. 'contin' → logprob: -2.4092910289764404
    5. 'de' → logprob: -2.7842910289764404
    6. '_cont' → logprob: -3.0342910289764404
    7. ' contiguous' → logprob: -4.5342912673950195
    8. 'con' → logprob: -4.7842912673950195
    9. ' contin' → logprob: -5.0342912673950195
    10. ' of' → logprob: -5.9092912673950195

Token 399: ' cont' (ID: 836)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.6554179191589355
    2. 'cont' → logprob: -1.2804179191589355
    3. ' cont' → logprob: -2.5304179191589355
    4. 'de' → logprob: -2.5304179191589355
    5. ' cons' → logprob: -3.6554179191589355
    6. 'd' → logprob: -5.7804179191589355
    7. 'contin' → logprob: -5.7804179191589355
    8. 'cons' → logprob: -6.2804179191589355
    9. 'con' → logprob: -6.4054179191589355
    10. '_cont' → logprob: -6.5304179191589355

Token 400: 'igus' (ID: 79914)
  Prédit: 'igus'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'igus' → logprob: -0.08936068415641785
    2. 'igu' → logprob: -2.8393607139587402
    3. 'iguous' → logprob: -4.96436071395874
    4. 'in' → logprob: -4.96436071395874
    5. 'inu' → logprob: -5.08936071395874
    6. 'inus' → logprob: -5.46436071395874
    7. 'ig' → logprob: -6.96436071395874
    8. 'enus' → logprob: -7.21436071395874
    9. 'inue' → logprob: -8.214360237121582
    10. '```' → logprob: -8.589360237121582

Token 401: ' selon' (ID: 27571)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.12946532666683197
    2. 'de' → logprob: -2.754465341567993
    3. ' où' → logprob: -4.129465103149414
    4. ' of' → logprob: -4.754465103149414
    5. 'où' → logprob: -5.129465103149414
    6. 'd' → logprob: -5.379465103149414
    7. '<|end|>' → logprob: -6.004465103149414
    8. '=' → logprob: -6.129465103149414
    9. 's' → logprob: -6.254465103149414
    10. ' ' → logprob: -6.254465103149414

Token 402: ' l' (ID: 305)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.9707497954368591
    2. ' la' → logprob: -1.470749855041504
    3. ' lex' → logprob: -2.095749855041504
    4. 'lex' → logprob: -2.345749855041504
    5. ' num' → logprob: -2.970749855041504
    6. ' l' → logprob: -3.595749855041504
    7. 'la' → logprob: -3.970749855041504
    8. 'l' → logprob: -4.220749855041504
    9. '1' → logprob: -4.345749855041504
    10. ' les' → logprob: -4.470749855041504

Token 403: ''ordre' (ID: 124753)
  Prédit: ''ordre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''ordre' → logprob: -0.3538685441017151
    2. 'a' → logprob: -1.7288684844970703
    3. 'e' → logprob: -2.3538684844970703
    4. ''' → logprob: -4.35386848449707
    5. 'es' → logprob: -4.97886848449707
    6. ''ex' → logprob: -6.35386848449707
    7. ''a' → logprob: -7.10386848449707
    8. '’ordre' → logprob: -7.47886848449707
    9. ''exp' → logprob: -8.10386848449707
    10. 'ordre' → logprob: -8.35386848449707

Token 404: ' lex' (ID: 37772)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.4011148512363434
    2. ' num' → logprob: -2.2761149406433105
    3. ' lex' → logprob: -2.2761149406433105
    4. ' numérique' → logprob: -2.2761149406433105
    5. 'lex' → logprob: -4.6511149406433105
    6. '_num' → logprob: -5.5261149406433105
    7. '   ' → logprob: -6.0261149406433105
    8. ' des' → logprob: -6.5261149406433105
    9. 'numer' → logprob: -6.6511149406433105
    10. ' numer' → logprob: -7.4011149406433105

Token 405: '
' (ID: 198)
  Prédit: '_sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sorted' → logprob: -0.1534150242805481
    2. '_' → logprob: -2.5284149646759033
    3. 'ic' → logprob: -3.1534149646759033
    4. 'ico' → logprob: -5.153415203094482
    5. ' ' → logprob: -5.278415203094482
    6. ')' → logprob: -6.278415203094482
    7. ' ' → logprob: -6.528415203094482
    8. 'sorted' → logprob: -6.778415203094482
    9. 'e' → logprob: -6.903415203094482
    10. 'ique' → logprob: -7.653415203094482

Token 406: '   ' (ID: 271)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.5904426574707031
    2. '_sorted' → logprob: -1.5904426574707031
    3. 'e' → logprob: -1.9654426574707031
    4. '   ' → logprob: -2.340442657470703
    5. 'ic' → logprob: -2.340442657470703
    6. ')' → logprob: -3.215442657470703
    7. 'i' → logprob: -3.465442657470703
    8. 'ique' → logprob: -3.465442657470703
    9. 'ical' → logprob: -3.715442657470703
    10. 'ico' → logprob: -3.715442657470703

Token 407: ' #' (ID: 1069)
  Prédit: 'ique'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ique' → logprob: -0.9973130226135254
    2. '   ' → logprob: -1.7473130226135254
    3. ')' → logprob: -2.8723130226135254
    4. ' et' → logprob: -3.1223130226135254
    5. 'e' → logprob: -3.4973130226135254
    6. ' seront' → logprob: -3.4973130226135254
    7. 'iques' → logprob: -3.6223130226135254
    8. '_sorted' → logprob: -3.7473130226135254
    9. ' peuvent' → logprob: -3.8723130226135254
    10. '"' → logprob: -3.8723130226135254

Token 408: ' et' (ID: 859)
  Prédit: ' peuvent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' peuvent' → logprob: -0.7343947291374207
    2. '#' → logprob: -1.8593947887420654
    3. ' =' → logprob: -3.1093947887420654
    4. '=' → logprob: -3.1093947887420654
    5. 'pe' → logprob: -3.1093947887420654
    6. ' et' → logprob: -3.4843947887420654
    7. ' sont' → logprob: -3.4843947887420654
    8. ' continu' → logprob: -3.8593947887420654
    9. 's' → logprob: -4.234394550323486
    10. 'continu' → logprob: -4.359394550323486

Token 409: ' numérique' (ID: 73962)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.024093156680464745
    2. ' numérique' → logprob: -4.149093151092529
    3. ' num' → logprob: -4.899093151092529
    4. 'numer' → logprob: -8.774093627929688
    5. 'numeric' → logprob: -8.899093627929688
    6. '#' → logprob: -9.524093627929688
    7. 'l' → logprob: -9.899093627929688
    8. ' ' → logprob: -10.774093627929688
    9. ' numeric' → logprob: -10.899093627929688
    10. ' numériques' → logprob: -10.899093627929688

Token 410: ' sont' (ID: 5242)
  Prédit: ' peuvent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' peuvent' → logprob: -0.2073908895254135
    2. ' continu' → logprob: -3.332390785217285
    3. ' sont' → logprob: -3.457390785217285
    4. ')' → logprob: -3.707390785217285
    5. ' doivent' → logprob: -4.832390785217285
    6. ' continue' → logprob: -4.957390785217285
    7. '   ' → logprob: -4.957390785217285
    8. 'pe' → logprob: -4.957390785217285
    9. ' pourront' → logprob: -4.957390785217285
    10. ',' → logprob: -5.332390785217285

Token 411: ' compatibles' (ID: 168779)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -1.9611080884933472
    2. 'valid' → logprob: -1.9611080884933472
    3. 'égal' → logprob: -1.9611080884933472
    4. 'bons' → logprob: -2.2111082077026367
    5. 'a' → logprob: -2.4611082077026367
    6. 'compat' → logprob: -2.5861082077026367
    7. ' possibles' → logprob: -2.7111082077026367
    8. ' val' → logprob: -2.9611082077026367
    9. ' aussi' → logprob: -3.2111082077026367
    10. ' compatibles' → logprob: -3.5861082077026367

Token 412: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07679235935211182
    2. '
' → logprob: -2.8267922401428223
    3. '    
' → logprob: -4.451792240142822
    4. 'res' → logprob: -7.076792240142822
    5. '  
' → logprob: -7.451792240142822
    6. '   
' → logprob: -7.951792240142822
    7. ',' → logprob: -8.20179271697998
    8. ' res' → logprob: -8.57679271697998
    9. '```' → logprob: -8.95179271697998
    10. '\n' → logprob: -9.07679271697998

Token 413: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03169804438948631
    2. 'res' → logprob: -3.906697988510132
    3. ' res' → logprob: -5.281698226928711
    4. '
' → logprob: -5.656698226928711
    5. '    
' → logprob: -6.656698226928711
    6. '```' → logprob: -8.406698226928711
    7. '  
' → logprob: -8.531698226928711
    8. '  ' → logprob: -9.281698226928711
    9. '   
' → logprob: -9.406698226928711
    10. ' ' → logprob: -9.531698226928711

Token 414: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1612996757030487
    2. '
' → logprob: -2.786299705505371
    3. 'res' → logprob: -3.286299705505371
    4. ' res' → logprob: -3.536299705505371
    5. '    
' → logprob: -3.911299705505371
    6. '   
' → logprob: -8.661299705505371
    7. '  
' → logprob: -9.036299705505371
    8. '#' (adapté à ' #') → logprob: -9.161299705505371
    9. ' 
' → logprob: -9.161299705505371
    10. '```' → logprob: -9.661299705505371

Token 415: ' Ex' (ID: 1771)
  Prédit: ' res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.2955422103404999
    2. 'res' → logprob: -1.4205422401428223
    3. '   ' → logprob: -4.420542240142822
    4. '
' → logprob: -7.670542240142822
    5. ' compatible' → logprob: -8.045541763305664
    6. ' i' → logprob: -8.920541763305664
    7. ' good' → logprob: -8.920541763305664
    8. ' valid' → logprob: -9.170541763305664
    9. '    
' → logprob: -9.295541763305664
    10. ' result' → logprob: -9.420541763305664

Token 416: 'amin' (ID: 7893)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01649165153503418
    2. '#' → logprob: -4.766491889953613
    3. 'res' → logprob: -5.641491889953613
    4. 'i' → logprob: -6.766491889953613
    5. 'p' → logprob: -8.141491889953613
    6. 't' → logprob: -8.391491889953613
    7. 'def' → logprob: -8.391491889953613
    8. 'start' → logprob: -8.391491889953613
    9. ' #' → logprob: -8.641491889953613
    10. 'for' → logprob: -8.766491889953613

Token 417: 'ons' (ID: 1808)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.020162265747785568
    2. 'ons' → logprob: -4.270162105560303
    3. 'e' → logprob: -5.145162105560303
    4. '#' → logprob: -9.770162582397461
    5. 'on' → logprob: -10.395162582397461
    6. '```' → logprob: -10.895162582397461
    7. '   ' → logprob: -11.145162582397461
    8. 'ed' → logprob: -12.520162582397461
    9. 'ez' → logprob: -12.520162582397461
    10. 'es' → logprob: -12.520162582397461

Token 418: ' les' (ID: 1341)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.9306881427764893
    2. 'i' → logprob: -1.1806881427764893
    3. '   ' → logprob: -1.9306881427764893
    4. 'res' → logprob: -2.3056881427764893
    5. ' res' → logprob: -4.18068790435791
    6. 'for' → logprob: -4.55568790435791
    7. ' for' → logprob: -4.93068790435791
    8. ' ' → logprob: -6.18068790435791
    9. ' la' → logprob: -6.43068790435791
    10. 'last' → logprob: -6.43068790435791

Token 419: ' permutations' (ID: 174595)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.13798870146274567
    2. 'i' → logprob: -2.762988805770874
    3. ' res' → logprob: -3.762988805770874
    4. 'blocks' → logprob: -4.637988567352295
    5. 'positions' → logprob: -5.137988567352295
    6. 'start' → logprob: -5.262988567352295
    7. 'diff' → logprob: -5.637988567352295
    8. ' i' → logprob: -6.387988567352295
    9. '```' → logprob: -6.387988567352295
    10. '   ' → logprob: -6.387988567352295

Token 420: ' pour' (ID: 1930)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5015130043029785
    2. '_num' → logprob: -1.5015130043029785
    3. 'num' → logprob: -2.6265130043029785
    4. '_' → logprob: -3.2515130043029785
    5. '=' → logprob: -3.7515130043029785
    6. '   ' → logprob: -4.2515130043029785
    7. ':' → logprob: -5.7515130043029785
    8. '_indices' → logprob: -5.7515130043029785
    9. '.' → logprob: -6.0015130043029785
    10. '_pos' → logprob: -6.3765130043029785

Token 421: ' trouver' (ID: 23195)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.10306195914745331
    2. ' i' → logprob: -2.3530619144439697
    3. ' trouver' → logprob: -6.603062152862549
    4. 'identifier' → logprob: -7.978062152862549
    5. ' identifier' → logprob: -8.10306167602539
    6. ' continuer' → logprob: -8.35306167602539
    7. 'voir' → logprob: -8.72806167602539
    8. ' voir' → logprob: -9.22806167602539
    9. ' comprendre' → logprob: -9.72806167602539
    10. 'ident' → logprob: -10.47806167602539

Token 422: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.7236922979354858
    2. 'i' → logprob: -1.8486922979354858
    3. ' i' → logprob: -1.8486922979354858
    4. 'les' → logprob: -2.2236924171447754
    5. ' des' → logprob: -3.0986924171447754
    6. 'des' → logprob: -4.598692417144775
    7. 'start' → logprob: -4.973692417144775
    8. '   ' → logprob: -5.098692417144775
    9. ' la' → logprob: -5.473692417144775
    10. ' start' → logprob: -5.973692417144775

Token 423: ' "' (ID: 392)
  Prédit: 'bl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bl' → logprob: -0.7964445948600769
    2. ' blocs' → logprob: -1.4214446544647217
    3. ' segments' → logprob: -2.4214446544647217
    4. 'segments' → logprob: -2.7964446544647217
    5. 'blocks' → logprob: -3.1714446544647217
    6. 'i' → logprob: -3.5464446544647217
    7. 'break' → logprob: -4.421444416046143
    8. 'indices' → logprob: -5.046444416046143
    9. ' intervals' → logprob: -5.046444416046143
    10. ' blocks' → logprob: -5.046444416046143

Token 424: 'bl' (ID: 1751)
  Prédit: 'bl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bl' → logprob: -0.11609376966953278
    2. 'segments' → logprob: -3.366093873977661
    3. 'blocks' → logprob: -3.616093873977661
    4. 'break' → logprob: -3.866093873977661
    5. 'runs' → logprob: -5.366093635559082
    6. 'zones' → logprob: -5.491093635559082
    7. 'contin' → logprob: -6.491093635559082
    8. 'cont' → logprob: -6.616093635559082
    9. ' segments' → logprob: -6.616093635559082
    10. 'ranges' → logprob: -6.616093635559082

Token 425: 'ocs' (ID: 20929)
  Prédit: 'ocs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ocs' → logprob: -0.29483330249786377
    2. 'ocks' → logprob: -1.4198333024978638
    3. '```' → logprob: -5.419833183288574
    4. 'oc' → logprob: -5.544833183288574
    5. '``' → logprob: -6.669833183288574
    6. 'o' → logprob: -7.044833183288574
    7. '#' → logprob: -7.419833183288574
    8. '`' → logprob: -7.919833183288574
    9. 'ock' → logprob: -8.044833183288574
    10. '	' → logprob: -9.044833183288574

Token 426: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.5282925963401794
    2. '")' → logprob: -1.7782926559448242
    3. '_cont' → logprob: -3.028292655944824
    4. ' de' → logprob: -3.278292655944824
    5. 'cont' → logprob: -3.403292655944824
    6. 'de' → logprob: -3.653292655944824
    7. ' cont' → logprob: -3.778292655944824
    8. '_' → logprob: -4.153292655944824
    9. ')' → logprob: -4.153292655944824
    10. 'contin' → logprob: -4.653292655944824

Token 427: ' de' (ID: 334)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9442805647850037
    2. '   ' → logprob: -1.8192806243896484
    3. 'pos' → logprob: -2.1942806243896484
    4. ':' → logprob: -2.6942806243896484
    5. ' positions' → logprob: -2.6942806243896484
    6. 'positions' → logprob: -3.1942806243896484
    7. 'indices' → logprob: -3.9442806243896484
    8. ' pos' → logprob: -3.9442806243896484
    9. ' indices' → logprob: -4.319280624389648
    10. 'res' → logprob: -4.444280624389648

Token 428: ' concord' (ID: 71275)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.3669800758361816
    2. 'contin' → logprob: -1.6169800758361816
    3. '1' → logprob: -2.2419800758361816
    4. 'con' → logprob: -2.3669800758361816
    5. 'indices' → logprob: -2.3669800758361816
    6. 'positions' → logprob: -2.7419800758361816
    7. ' i' → logprob: -3.2419800758361816
    8. ' ' → logprob: -3.7419800758361816
    9. 'val' → logprob: -3.8669800758361816
    10. ' contin' → logprob: -3.9919800758361816

Token 429: 'ance' (ID: 766)
  Prédit: 'ance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ance' → logprob: -0.0168678630143404
    2. 'ances' → logprob: -4.141867637634277
    3. 'ant' → logprob: -7.766867637634277
    4. 'a' → logprob: -8.641867637634277
    5. 'an' → logprob: -8.766867637634277
    6. 'e' → logprob: -11.141867637634277
    7. 'nance' → logprob: -11.141867637634277
    8. '#' → logprob: -11.766867637634277
    9. '1' → logprob: -12.266867637634277
    10. 'rence' → logprob: -12.516867637634277

Token 430: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0361485555768013
    2. '
' → logprob: -4.911148548126221
    3. ',' → logprob: -5.036148548126221
    4. ':' → logprob: -5.286148548126221
    5. '    
' → logprob: -5.661148548126221
    6. 'res' → logprob: -5.786148548126221
    7. '.' → logprob: -5.911148548126221
    8. ' =' → logprob: -6.286148548126221
    9. 'def' → logprob: -7.036148548126221
    10. 'indices' → logprob: -7.411148548126221

Token 431: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1420532464981079
    2. 'pos' → logprob: -2.3920531272888184
    3. 'position' → logprob: -4.517053127288818
    4. 'positions' → logprob: -5.017053127288818
    5. 'index' → logprob: -5.142053127288818
    6. 'res' → logprob: -5.267053127288818
    7. '
' → logprob: -5.642053127288818
    8. '    
' → logprob: -6.142053127288818
    9. 'num' → logprob: -6.267053127288818
    10. '#' → logprob: -6.267053127288818

Token 432: ' #' (ID: 1069)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.7898701429367065
    2. 'res' → logprob: -0.9148701429367065
    3. '   ' → logprob: -2.789870262145996
    4. 'position' → logprob: -3.539870262145996
    5. ' res' → logprob: -4.039870262145996
    6. 'positions' → logprob: -4.289870262145996
    7. 'index' → logprob: -4.914870262145996
    8. ' pos' → logprob: -5.664870262145996
    9. 'num' → logprob: -6.039870262145996
    10. '#' (adapté à ' #') → logprob: -6.039870262145996

Token 433: ' On' (ID: 2160)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.08376829326152802
    2. 'index' → logprob: -3.208768367767334
    3. 'position' → logprob: -3.708768367767334
    4. 'num' → logprob: -5.083768367767334
    5. 'positions' → logprob: -5.333768367767334
    6. 'value' → logprob: -6.083768367767334
    7. 'idx' → logprob: -7.208768367767334
    8. 'res' → logprob: -7.583768367767334
    9. '#' → logprob: -8.083767890930176
    10. ' pos' → logprob: -8.458767890930176

Token 434: ' crée' (ID: 102256)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.8685300350189209
    2. 'pos' → logprob: -1.618530035018921
    3. '#' → logprob: -2.493530035018921
    4. 'def' → logprob: -3.243530035018921
    5. 'continue' → logprob: -3.618530035018921
    6. 'from' → logprob: -3.743530035018921
    7. 'try' → logprob: -3.868530035018921
    8. ' #' → logprob: -4.1185302734375
    9. 'index' → logprob: -4.1185302734375
    10. ' num' → logprob: -4.1185302734375

Token 435: ' un' (ID: 537)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.12705419957637787
    2. 'num' → logprob: -3.002054214477539
    3. 'index' → logprob: -3.502054214477539
    4. 'position' → logprob: -3.752054214477539
    5. '   ' → logprob: -5.127054214477539
    6. 'un' → logprob: -5.752054214477539
    7. 'idx' → logprob: -6.252054214477539
    8. ' pos' → logprob: -6.377054214477539
    9. 'une' → logprob: -7.752054214477539
    10. '#' → logprob: -7.752054214477539

Token 436: ' diction' (ID: 155259)
  Prédit: 'dict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dict' → logprob: -1.2311558723449707
    2. 'd' → logprob: -1.3561558723449707
    3. 'index' → logprob: -1.9811558723449707
    4. 'pos' → logprob: -2.1061558723449707
    5. 'mapping' → logprob: -2.1061558723449707
    6. 'position' → logprob: -3.2311558723449707
    7. 'dic' → logprob: -4.731155872344971
    8. 'map' → logprob: -5.106155872344971
    9. 'indice' → logprob: -5.606155872344971
    10. 'table' → logprob: -5.856155872344971

Token 437: 'naire' (ID: 30464)
  Prédit: 'naire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'naire' → logprob: -0.0038068529684096575
    2. 'aire' → logprob: -6.253807067871094
    3. '   ' → logprob: -7.003807067871094
    4. 'ary' → logprob: -7.628807067871094
    5. 'naires' → logprob: -8.378807067871094
    6. 'ion' → logprob: -9.878807067871094
    7. 'import' → logprob: -10.253807067871094
    8. 'n' → logprob: -10.628807067871094
    9. '{' → logprob: -10.753807067871094
    10. 'inaire' → logprob: -11.003807067871094

Token 438: ' position' (ID: 4010)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.23505860567092896
    2. 'pos' → logprob: -2.110058546066284
    3. ' num' → logprob: -3.360058546066284
    4. '   ' → logprob: -3.485058546066284
    5. ' pos' → logprob: -4.360058784484863
    6. 'index' → logprob: -5.610058784484863
    7. 'position' → logprob: -6.360058784484863
    8. ' =' → logprob: -6.735058784484863
    9. 'idx' → logprob: -7.110058784484863
    10. ' index' → logprob: -7.235058784484863

Token 439: ' dans' (ID: 2671)
  Prédit: '_num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_num' → logprob: -0.0715433657169342
    2. 'num' → logprob: -2.6965434551239014
    3. ' =' → logprob: -7.696543216705322
    4. '_' → logprob: -8.07154369354248
    5. '_nums' → logprob: -8.82154369354248
    6. '_pos' → logprob: -9.07154369354248
    7. '_in' → logprob: -9.57154369354248
    8. '_numeric' → logprob: -9.69654369354248
    9. '   ' → logprob: -9.82154369354248
    10. '=' → logprob: -10.07154369354248

Token 440: ' le' (ID: 505)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.034097783267498016
    2. 'lex' → logprob: -3.409097671508789
    3. ' num' → logprob: -8.409097671508789
    4. ' lex' → logprob: -9.284097671508789
    5. '_num' → logprob: -10.034097671508789
    6. '```' → logprob: -11.284097671508789
    7. 'numer' → logprob: -11.409097671508789
    8. 'la' → logprob: -11.534097671508789
    9. 'nums' → logprob: -12.034097671508789
    10. '   ' → logprob: -12.159097671508789

Token 441: ' tri' (ID: 12665)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.013535698875784874
    2. 'lex' → logprob: -4.388535499572754
    3. ' num' → logprob: -7.138535499572754
    4. ' lex' → logprob: -9.138535499572754
    5. 'dict' → logprob: -9.638535499572754
    6. 'd' → logprob: -11.138535499572754
    7. 'numer' → logprob: -12.263535499572754
    8. '   ' → logprob: -12.513535499572754
    9. '[num' → logprob: -12.513535499572754
    10. 'nums' → logprob: -12.513535499572754

Token 442: ' lex' (ID: 37772)
  Prédit: '_num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_num' → logprob: -0.4318799078464508
    2. 'num' → logprob: -1.0568798780441284
    3. '_' → logprob: -6.931879997253418
    4. ' num' → logprob: -7.056879997253418
    5. 'lex' → logprob: -8.181879997253418
    6. ' =' → logprob: -8.306879997253418
    7. ' numérique' → logprob: -8.556879997253418
    8. '_numeric' → logprob: -9.056879997253418
    9. 'numer' → logprob: -9.556879997253418
    10. '```' → logprob: -9.806879997253418

Token 443: '
' (ID: 198)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.4620271921157837
    2. 'lex' → logprob: -2.212027072906494
    3. ' =' → logprob: -2.462027072906494
    4. '_' → logprob: -2.587027072906494
    5. '_pos' → logprob: -2.837027072906494
    6. '=' → logprob: -5.462027072906494
    7. '_positions' → logprob: -5.462027072906494
    8. 'ical' → logprob: -5.587027072906494
    9. '_order' → logprob: -5.712027072906494
    10. '_num' → logprob: -5.837027072906494

Token 444: '   ' (ID: 271)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5103082656860352
    2. ' =' → logprob: -1.6353082656860352
    3. ' lex' → logprob: -2.010308265686035
    4. 'lex' → logprob: -3.385308265686035
    5. '_pos' → logprob: -3.760308265686035
    6. '_positions' → logprob: -5.635308265686035
    7. '=' → logprob: -6.260308265686035
    8. ':' → logprob: -6.260308265686035
    9. 'pos' → logprob: -6.510308265686035
    10. '   ' → logprob: -6.635308265686035

Token 445: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' (adapté à ' pos') → logprob: -0.7153599262237549
    2. 'lex' → logprob: -0.8403599262237549
    3. ' lex' → logprob: -2.590359926223755
    4. ' pos' → logprob: -5.465359687805176
    5. 'position' → logprob: -9.090359687805176
    6. '   ' → logprob: -9.840359687805176
    7. 'positions' → logprob: -11.590359687805176
    8. ' lexi' → logprob: -11.840359687805176
    9. 'dict' → logprob: -12.090359687805176
    10. ' position' → logprob: -12.590359687805176

Token 446: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0026887289714068174
    2. 'lex' → logprob: -6.877688884735107
    3. ' =' → logprob: -6.877688884735107
    4. '=' → logprob: -7.627688884735107
    5. '_in' → logprob: -10.25268840789795
    6. 'Lex' → logprob: -10.25268840789795
    7. ' lex' → logprob: -10.62768840789795
    8. '_=' → logprob: -11.12768840789795
    9. '.lex' → logprob: -12.50268840789795
    10. '=_' → logprob: -12.50268840789795

Token 447: 'lex' (ID: 3179)
  Prédit: 'lex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lex' → logprob: -0.004586061462759972
    2. '_' → logprob: -5.629586219787598
    3. 'in' → logprob: -7.379586219787598
    4. 'dict' → logprob: -8.254586219787598
    5. '_in' → logprob: -9.879586219787598
    6. ' lex' → logprob: -11.129586219787598
    7. '```' → logprob: -12.254586219787598
    8. '_dict' → logprob: -12.379586219787598
    9. ' =' → logprob: -12.504586219787598
    10. '=' → logprob: -12.504586219787598

Token 448: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05489165335893631
    2. ' =' → logprob: -2.929891586303711
    3. '={}' → logprob: -12.179891586303711
    4. '[' → logprob: -14.179891586303711
    5. '=dict' → logprob: -14.179891586303711
    6. '={' → logprob: -14.804891586303711
    7. '   ' → logprob: -15.179891586303711
    8. '=[' → logprob: -15.179891586303711
    9. ']' → logprob: -15.304891586303711
    10. '=[]' → logprob: -15.554891586303711

Token 449: ' {}
' (ID: 11421)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.0001601539261173457
    2. '{i' → logprob: -9.500160217285156
    3. '{x' → logprob: -10.250160217285156
    4. ' {' → logprob: -10.750160217285156
    5. '{}' → logprob: -11.250160217285156
    6. '{id' → logprob: -12.125160217285156
    7. '{}
' → logprob: -12.625160217285156
    8. '{s' → logprob: -12.875160217285156
    9. '{name' → logprob: -13.000160217285156
    10. '{k' → logprob: -13.625160217285156

Token 450: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3488113582134247
    2. ' for' → logprob: -1.223811388015747
    3. '   ' → logprob: -8.223811149597168
    4. ')' → logprob: -10.598811149597168
    5. '<|end|>' → logprob: -10.723811149597168
    6. '	for' → logprob: -10.848811149597168
    7. '
' → logprob: -11.723811149597168
    8. ',' → logprob: -11.848811149597168
    9. ' 
' → logprob: -12.848811149597168
    10. ' ' → logprob: -13.223811149597168

Token 451: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.014183958061039448
    2. ' for' → logprob: -4.26418399810791
    3. '   ' → logprob: -10.88918399810791
    4. '	for' → logprob: -14.26418399810791
    5. '
' → logprob: -14.76418399810791
    6. 'enumer' → logprob: -15.26418399810791
    7. ' ' → logprob: -16.264183044433594
    8. ')' → logprob: -16.639183044433594
    9. ' 
' → logprob: -16.639183044433594
    10. '       ' → logprob: -16.889183044433594

Token 452: ' idx' (ID: 14016)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.01001046597957611
    2. ' i' → logprob: -4.760010242462158
    3. 'idx' → logprob: -6.760010242462158
    4. 'index' → logprob: -9.385010719299316
    5. ' idx' → logprob: -9.385010719299316
    6. 'num' → logprob: -10.010010719299316
    7. 'val' → logprob: -11.510010719299316
    8. 'v' → logprob: -12.260010719299316
    9. 'x' → logprob: -12.760010719299316
    10. '   ' → logprob: -13.260010719299316

Token 453: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00773510430008173
    2. ' in' → logprob: -5.507735252380371
    3. 'in' → logprob: -5.882735252380371
    4. ' ,' → logprob: -7.257735252380371
    5. ' ' → logprob: -9.632735252380371
    6. ',num' → logprob: -10.257735252380371
    7. ',n' → logprob: -11.257735252380371
    8. ',value' → logprob: -11.882735252380371
    9. ',x' → logprob: -12.132735252380371
    10. 'i' → logprob: -12.632735252380371

Token 454: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.08265163004398346
    2. 'num' → logprob: -2.5826516151428223
    3. 'v' → logprob: -6.082651615142822
    4. 'value' → logprob: -7.082651615142822
    5. ' val' → logprob: -7.582651615142822
    6. 'x' → logprob: -9.20765209197998
    7. ' num' → logprob: -10.70765209197998
    8. ' v' → logprob: -14.45765209197998
    9. 'number' → logprob: -15.08265209197998
    10. ' value' → logprob: -15.58265209197998

Token 455: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10022015124559402
    2. 'in' → logprob: -2.350220203399658
    3. ' ' → logprob: -12.2252197265625
    4. ')' → logprob: -12.4752197265625
    5. 'In' → logprob: -14.1002197265625
    6. 'import' → logprob: -14.6002197265625
    7. 's' → logprob: -14.6002197265625
    8. '	in' → logprob: -14.6002197265625
    9. '   ' → logprob: -15.3502197265625
    10. '```' → logprob: -15.4752197265625

Token 456: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.0009155054576694965
    2. ' enumerate' → logprob: -7.00091552734375
    3. 'lex' → logprob: -12.75091552734375
    4. '   ' → logprob: -14.62591552734375
    5. ' ' → logprob: -15.00091552734375
    6. 'enum' → logprob: -15.37591552734375
    7. '  ' → logprob: -16.37591552734375
    8. 'en' → logprob: -16.75091552734375
    9. '    ' → logprob: -17.00091552734375
    10. '```' → logprob: -17.25091552734375

Token 457: '(' (ID: 7)
  Prédit: 'lex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lex' → logprob: -0.01841447502374649
    2. '(' → logprob: -4.018414497375488
    3. ' lex' → logprob: -8.268414497375488
    4. ')' → logprob: -12.893414497375488
    5. 'str' → logprob: -12.893414497375488
    6. '   ' → logprob: -13.893414497375488
    7. '.lex' → logprob: -14.268414497375488
    8. ' ' → logprob: -15.143414497375488
    9. 'Lex' → logprob: -15.393414497375488
    10. '  ' → logprob: -15.393414497375488

Token 458: 'lex' (ID: 3179)
  Prédit: 'lex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lex' → logprob: -0.0005626845522783697
    2. ' lex' → logprob: -8.12556266784668
    3. 'str' → logprob: -8.25056266784668
    4. '   ' → logprob: -13.37556266784668
    5. 'numbers' → logprob: -13.62556266784668
    6. 'num' → logprob: -14.12556266784668
    7. ')' → logprob: -14.25056266784668
    8. ' ' → logprob: -14.37556266784668
    9. '  ' → logprob: -15.25056266784668
    10. ' str' → logprob: -15.87556266784668

Token 459: '_sorted' (ID: 104993)
  Prédit: '_sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sorted' → logprob: -1.0564331205387134e-05
    2. 'sorted' → logprob: -11.50001049041748
    3. '_numbers' → logprob: -14.87501049041748
    4. '_' → logprob: -17.625011444091797
    5. 'Sorted' → logprob: -18.375011444091797
    6. ')' → logprob: -18.750011444091797
    7. '_s' → logprob: -19.625011444091797
    8. '(sorted' → logprob: -20.000011444091797
    9. 's' → logprob: -20.500011444091797
    10. '```' → logprob: -20.625011444091797

Token 460: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.026439517736434937
    2. '):
' → logprob: -3.6514394283294678
    3. '):
' → logprob: -9.151439666748047
    4. '   ' → logprob: -11.151439666748047
    5. ' ):' → logprob: -11.526439666748047
    6. ')' → logprob: -12.526439666748047
    7. ':' → logprob: -13.026439666748047
    8. '[]):' → logprob: -14.526439666748047
    9. '):

' → logprob: -14.651439666748047
    10. '}:' → logprob: -14.901439666748047

Token 461: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.031029146164655685
    2. '   ' → logprob: -3.781029224395752
    3. ':' → logprob: -5.031029224395752
    4. '):' → logprob: -8.031028747558594
    5. ' pos' → logprob: -8.281028747558594
    6. '):
' → logprob: -8.906028747558594
    7. '    ' → logprob: -8.906028747558594
    8. ')' → logprob: -9.406028747558594
    9. ':
' → logprob: -10.031028747558594
    10. ' ' → logprob: -10.281028747558594

Token 462: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' (adapté à ' pos') → logprob: -0.16165660321712494
    2. '   ' → logprob: -2.161656618118286
    3. ' pos' → logprob: -3.411656618118286
    4. '       ' → logprob: -6.786656379699707
    5. '	pos' → logprob: -11.161656379699707
    6. '           ' → logprob: -14.036656379699707
    7. ' ' → logprob: -14.161656379699707
    8. '    ' → logprob: -14.536656379699707
    9. '  ' → logprob: -14.661656379699707
    10. 'position' → logprob: -16.411657333374023

Token 463: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.9361264946837764e-07
    2. '_pos' → logprob: -16.625
    3. 'lex' → logprob: -16.875
    4. 'Lex' → logprob: -17.125
    5. '[' → logprob: -17.625
    6. '[_' → logprob: -18.0
    7. ' lex' → logprob: -18.375
    8. '.lex' → logprob: -19.125
    9. ' _' → logprob: -19.375
    10. '[pos' → logprob: -20.125

Token 464: 'lex' (ID: 3179)
  Prédit: 'lex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lex' → logprob: -2.3438327843905427e-05
    2. '_' → logprob: -11.00002384185791
    3. ' lex' → logprob: -12.75002384185791
    4. 'val' → logprob: -13.75002384185791
    5. 'Lex' → logprob: -14.50002384185791
    6. '.lex' → logprob: -14.75002384185791
    7. 'ex' → logprob: -15.37502384185791
    8. 'le' → logprob: -15.87502384185791
    9. '```' → logprob: -15.87502384185791
    10. 'lec' → logprob: -16.000022888183594

Token 465: '[val' (ID: 162482)
  Prédit: '[val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[val' → logprob: 0.0
    2. '[' → logprob: -17.375
    3. 'val' → logprob: -18.875
    4. ' [' → logprob: -19.5
    5. '```' → logprob: -20.375
    6. '
' → logprob: -20.875
    7. '\[' → logprob: -21.125
    8. '=' → logprob: -21.375
    9. ',val' → logprob: -21.375
    10. '   ' → logprob: -21.5

Token 466: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0008471485925838351
    2. ']=' → logprob: -7.125847339630127
    3. '=' → logprob: -10.250846862792969
    4. ' ]' → logprob: -12.125846862792969
    5. ')' → logprob: -13.750846862792969
    6. ' =' → logprob: -14.000846862792969
    7. ')=' → logprob: -18.00084686279297
    8. '}' → logprob: -18.12584686279297
    9. '']' → logprob: -18.25084686279297
    10. '   ' → logprob: -18.50084686279297

Token 467: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0015024791937321424
    2. ' =' → logprob: -6.501502513885498
    3. ']=' → logprob: -17.251502990722656
    4. ')=' → logprob: -17.501502990722656
    5. '=
' → logprob: -18.001502990722656
    6. '=index' → logprob: -18.376502990722656
    7. ']' → logprob: -18.501502990722656
    8. '=}' → logprob: -18.876502990722656
    9. ')' → logprob: -19.001502990722656
    10. '=int' → logprob: -19.751502990722656

Token 468: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.0005530327325686812
    2. ' idx' → logprob: -7.500553131103516
    3. '	idx' → logprob: -19.375553131103516
    4. '[idx' → logprob: -20.250553131103516
    5. '(idx' → logprob: -20.750553131103516
    6. '   ' → logprob: -22.625553131103516
    7. ' ' → logprob: -24.000553131103516
    8. '_idx' → logprob: -24.125553131103516
    9. 'index' → logprob: -24.125553131103516
    10. 'id' → logprob: -24.375553131103516

Token 469: '
    
' (ID: 15698)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.44157546758651733
    2. '   ' → logprob: -1.316575527191162
    3. '    
' → logprob: -2.691575527191162
    4. '<|end|>' → logprob: -4.441575527191162
    5. '  
' → logprob: -5.066575527191162
    6. '```' → logprob: -6.691575527191162
    7. '\n' → logprob: -7.441575527191162
    8. '<|end|>' → logprob: -7.691575527191162
    9. '   
' → logprob: -8.191575050354004
    10. ' 
' → logprob: -8.941575050354004

Token 470: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012223646976053715
    2. '#' → logprob: -5.137223720550537
    3. 'pos' → logprob: -5.887223720550537
    4. '    
' → logprob: -6.012223720550537
    5. '
' → logprob: -7.637223720550537
    6. ' pos' → logprob: -8.137223243713379
    7. 'res' → logprob: -9.762223243713379
    8. ' #' → logprob: -9.762223243713379
    9. '```' → logprob: -10.387223243713379
    10. 'indices' → logprob: -11.012223243713379

Token 471: ' #' (ID: 1069)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -1.0328357219696045
    2. '   ' → logprob: -1.1578357219696045
    3. ' res' → logprob: -1.1578357219696045
    4. 'dp' → logprob: -5.407835960388184
    5. 'pos' → logprob: -6.032835960388184
    6. '#' (adapté à ' #') → logprob: -6.907835960388184
    7. 'result' → logprob: -7.032835960388184
    8. 'block' → logprob: -7.157835960388184
    9. ' dp' → logprob: -7.282835960388184
    10. ' block' → logprob: -7.407835960388184

Token 472: ' On' (ID: 2160)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.67950040102005
    2. 'dp' → logprob: -1.1795003414154053
    3. 'blocks' → logprob: -2.6795003414154053
    4. 'pos' → logprob: -2.8045003414154053
    5. '   ' → logprob: -3.9295003414154053
    6. 'block' → logprob: -4.679500579833984
    7. 'start' → logprob: -5.179500579833984
    8. 'visited' → logprob: -5.554500579833984
    9. '#' → logprob: -5.679500579833984
    10. 'positions' → logprob: -6.054500579833984

Token 473: ' va' (ID: 3423)
  Prédit: ' crée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' crée' → logprob: -1.2792860269546509
    2. 'continue' → logprob: -1.6542860269546509
    3. '#' → logprob: -1.7792860269546509
    4. '   ' → logprob: -2.1542859077453613
    5. 'create' → logprob: -2.2792859077453613
    6. 'cr' → logprob: -3.7792859077453613
    7. 'res' → logprob: -4.029285907745361
    8. ' create' → logprob: -4.029285907745361
    9. ' continue' → logprob: -4.529285907745361
    10. 'contin' → logprob: -5.029285907745361

Token 474: ' examiner' (ID: 115931)
  Prédit: ' créer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' créer' → logprob: -1.2624289989471436
    2. '   ' → logprob: -1.3874289989471436
    3. 'count' → logprob: -2.0124289989471436
    4. ' create' → logprob: -3.2624289989471436
    5. ' count' → logprob: -3.3874289989471436
    6. ' compter' → logprob: -3.3874289989471436
    7. ' construire' → logprob: -3.8874289989471436
    8. 'i' → logprob: -3.8874289989471436
    9. '#' → logprob: -4.012429237365723
    10. 'create' → logprob: -4.137429237365723

Token 475: ' la' (ID: 557)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6946186423301697
    2. ' i' → logprob: -1.1946187019348145
    3. 'for' → logprob: -3.3196187019348145
    4. 'prev' → logprob: -3.4446187019348145
    5. '   ' → logprob: -3.6946187019348145
    6. ' un' → logprob: -3.9446187019348145
    7. 'une' → logprob: -4.0696187019348145
    8. ' les' → logprob: -4.4446187019348145
    9. 'un' → logprob: -4.4446187019348145
    10. ' for' → logprob: -4.5696187019348145

Token 476: ' permutation' (ID: 135200)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.8733941316604614
    2. 'pos' → logprob: -2.248394012451172
    3. 'position' → logprob: -2.373394012451172
    4. 'prev' → logprob: -2.623394012451172
    5. 'der' → logprob: -2.873394012451172
    6. 'positions' → logprob: -3.248394012451172
    7. 'n' → logprob: -3.373394012451172
    8. 'num' → logprob: -3.373394012451172
    9. 'previous' → logprob: -4.248394012451172
    10. 'res' → logprob: -4.498394012451172

Token 477: ' induced' (ID: 57797)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.9541246294975281
    2. ' num' → logprob: -1.7041246891021729
    3. '   ' → logprob: -2.204124689102173
    4. ' perm' → logprob: -2.954124689102173
    5. 'pos' → logprob: -3.329124689102173
    6. 'inverse' → logprob: -3.454124689102173
    7. ' pos' → logprob: -3.579124689102173
    8. ' inverse' → logprob: -3.704124689102173
    9. 'in' → logprob: -3.829124689102173
    10. ' des' → logprob: -3.954124689102173

Token 478: ' par' (ID: 686)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.6685054898262024
    2. ' by' → logprob: -1.6685054302215576
    3. ' par' → logprob: -1.9185054302215576
    4. '   ' → logprob: -2.7935054302215576
    5. 'by' → logprob: -2.9185054302215576
    6. 'ée' → logprob: -4.543505668640137
    7. 'par' → logprob: -4.793505668640137
    8. ' ' → logprob: -5.168505668640137
    9. 'ed' → logprob: -6.043505668640137
    10. 'ue' → logprob: -6.043505668640137

Token 479: ' les' (ID: 1341)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.07869092375040054
    2. ' num' → logprob: -2.828691005706787
    3. '[num' → logprob: -5.828691005706787
    4. ' la' → logprob: -5.953691005706787
    5. 'enumer' → logprob: -6.203691005706787
    6. 'lex' → logprob: -6.953691005706787
    7. '#' → logprob: -7.078691005706787
    8. ' ' → logprob: -7.328691005706787
    9. 'sorted' → logprob: -7.328691005706787
    10. ' lex' → logprob: -7.453691005706787

Token 480: ' positions' (ID: 15897)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.022363508120179176
    2. ' num' → logprob: -4.647363662719727
    3. '[num' → logprob: -4.897363662719727
    4. 'enumer' → logprob: -6.272363662719727
    5. 'range' → logprob: -7.022363662719727
    6. '[i' → logprob: -8.272363662719727
    7. 'pos' → logprob: -8.397363662719727
    8. 'sorted' → logprob: -8.397363662719727
    9. 'i' → logprob: -8.647363662719727
    10. '[' → logprob: -8.647363662719727

Token 481: ' lex' (ID: 37772)
  Prédit: ' dans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dans' → logprob: -0.7454457879066467
    2. '   ' → logprob: -1.620445728302002
    3. 'dans' → logprob: -2.120445728302002
    4. 'num' → logprob: -2.245445728302002
    5. ' num' → logprob: -2.870445728302002
    6. ' de' → logprob: -4.370445728302002
    7. 'de' → logprob: -5.245445728302002
    8. ' in' → logprob: -5.370445728302002
    9. ' ' → logprob: -5.495445728302002
    10. ' en' → logprob: -5.620445728302002

Token 482: ' dans' (ID: 2671)
  Prédit: '_sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sorted' → logprob: -1.0498666763305664
    2. '_num' → logprob: -1.2998666763305664
    3. '   ' → logprob: -2.0498666763305664
    4. 'num' → logprob: -3.5498666763305664
    5. ' dans' → logprob: -3.5498666763305664
    6. ':' → logprob: -3.7998666763305664
    7. '_numeric' → logprob: -3.9248666763305664
    8. ' ' → logprob: -4.049866676330566
    9. ',' → logprob: -4.299866676330566
    10. '_' → logprob: -4.424866676330566

Token 483: ' l' (ID: 305)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.037118155509233475
    2. 'la' → logprob: -3.7871181964874268
    3. 'l' → logprob: -5.037117958068848
    4. 'le' → logprob: -5.912117958068848
    5. ' num' → logprob: -6.037117958068848
    6. ' la' → logprob: -7.162117958068848
    7. 'range' → logprob: -7.662117958068848
    8. '[num' → logprob: -8.912117958068848
    9. ' ' → logprob: -9.037117958068848
    10. '   ' → logprob: -9.162117958068848

Token 484: ''ordre' (ID: 124753)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.025638453662395477
    2. ' num' → logprob: -4.400638580322266
    3. '[num' → logprob: -5.775638580322266
    4. 'range' → logprob: -5.775638580322266
    5. 'ordre' → logprob: -6.025638580322266
    6. ''ordre' → logprob: -7.150638580322266
    7. ' range' → logprob: -7.275638580322266
    8. 'enumer' → logprob: -7.900638580322266
    9. ' ordre' → logprob: -8.025638580322266
    10. '[' → logprob: -8.150638580322266

Token 485: ' numérique' (ID: 73962)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.012914314866065979
    2. ' num' → logprob: -5.012914180755615
    3. '   ' → logprob: -5.887914180755615
    4. ' numérique' → logprob: -7.012914180755615
    5. '(num' → logprob: -7.262914180755615
    6. '_num' → logprob: -7.387914180755615
    7. 'numer' → logprob: -7.387914180755615
    8. '[num' → logprob: -9.262914657592773
    9. 'numeric' → logprob: -9.512914657592773
    10. '=num' → logprob: -9.637914657592773

Token 486: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04856204614043236
    2. ':' → logprob: -4.173562049865723
    3. ' for' → logprob: -4.548562049865723
    4. '    
' → logprob: -5.548562049865723
    5. 'for' → logprob: -5.798562049865723
    6. 'num' → logprob: -6.048562049865723
    7. ',' → logprob: -6.048562049865723
    8. '.' → logprob: -6.173562049865723
    9. ' num' → logprob: -6.298562049865723
    10. '
' → logprob: -6.423562049865723

Token 487: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0008734668954275548
    2. ':' → logprob: -7.375873565673828
    3. '    
' → logprob: -9.625873565673828
    4. '
' → logprob: -9.750873565673828
    5. '.' → logprob: -10.000873565673828
    6. ',' → logprob: -10.625873565673828
    7. 'for' → logprob: -10.875873565673828
    8. ' for' → logprob: -10.875873565673828
    9. 'pos' → logprob: -13.375873565673828
    10. '    ' → logprob: -13.500873565673828

Token 488: ' perm' (ID: 5961)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08990101516246796
    2. 'perm' (adapté à ' perm') → logprob: -3.4649009704589844
    3. 'pos' → logprob: -4.089900970458984
    4. ' perm' → logprob: -4.464900970458984
    5. ' permutation' → logprob: -5.214900970458984
    6. ' pos' → logprob: -5.339900970458984
    7. ' positions' → logprob: -5.589900970458984
    8. 'positions' → logprob: -5.714900970458984
    9. 'indices' → logprob: -5.714900970458984
    10. ' indices' → logprob: -6.214900970458984

Token 489: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03364869952201843
    2. '=' → logprob: -3.408648729324341
    3. '   ' → logprob: -13.658648490905762
    4. '=[' → logprob: -14.908648490905762
    5. '=[]' → logprob: -14.908648490905762
    6. ' =[' → logprob: -14.908648490905762
    7. ' ' → logprob: -15.033648490905762
    8. '[' → logprob: -15.533648490905762
    9. ']' → logprob: -16.533649444580078
    10. '_' → logprob: -16.783649444580078

Token 490: ' [' (ID: 723)
  Prédit: '[pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[pos' → logprob: -0.004243773873895407
    2. '[' → logprob: -6.004243850708008
    3. ' [' → logprob: -6.754243850708008
    4. '[num' → logprob: -8.004243850708008
    5. '[list' → logprob: -8.754243850708008
    6. '[val' → logprob: -10.004243850708008
    7. '[len' → logprob: -11.129243850708008
    8. '[]' → logprob: -11.254243850708008
    9. '[position' → logprob: -11.754243850708008
    10. '[]
' → logprob: -11.754243850708008

Token 491: 'pos' (ID: 1103)
  Prédit: 'pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.0007099286303855479
    2. ' pos' → logprob: -7.2507100105285645
    3. '[pos' → logprob: -17.250709533691406
    4. '(pos' → logprob: -18.125709533691406
    5. '	pos' → logprob: -18.500709533691406
    6. '   ' → logprob: -18.625709533691406
    7. '_pos' → logprob: -19.625709533691406
    8. '.pos' → logprob: -20.625709533691406
    9. 'position' → logprob: -20.875709533691406
    10. '-pos' → logprob: -21.125709533691406

Token 492: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -4.320199877838604e-07
    2. '[' → logprob: -16.0
    3. '_pos' → logprob: -16.0
    4. '[pos' → logprob: -16.375
    5. 'pos' → logprob: -17.0
    6. 'lex' → logprob: -17.75
    7. '[_' → logprob: -19.625
    8. '(pos' → logprob: -20.375
    9. 'Lex' → logprob: -20.375
    10. '_[' → logprob: -20.625

Token 493: 'lex' (ID: 3179)
  Prédit: 'lex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lex' → logprob: -0.001946725882589817
    2. '_' → logprob: -6.251946926116943
    3. ' lex' → logprob: -11.501946449279785
    4. 'Lex' → logprob: -12.376946449279785
    5. '.lex' → logprob: -13.751946449279785
    6. 'pos' → logprob: -14.251946449279785
    7. '[' → logprob: -14.751946449279785
    8. '```' → logprob: -15.251946449279785
    9. '   ' → logprob: -15.876946449279785
    10. '
' → logprob: -15.876946449279785

Token 494: '[val' (ID: 162482)
  Prédit: '[num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[num' → logprob: -0.43899962306022644
    2. '(num' → logprob: -1.1889996528625488
    3. '[val' → logprob: -3.563999652862549
    4. 'num' → logprob: -4.313999652862549
    5. '(val' → logprob: -5.438999652862549
    6. '(x' → logprob: -5.813999652862549
    7. 'val' → logprob: -7.188999652862549
    8. '[x' → logprob: -7.313999652862549
    9. 'x' → logprob: -8.56399917602539
    10. '(v' → logprob: -10.06399917602539

Token 495: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -8.537868779967539e-06
    2. ' ]' → logprob: -11.750008583068848
    3. ')' → logprob: -15.375008583068848
    4. '   ' → logprob: -15.500008583068848
    5. 'for' → logprob: -16.37500762939453
    6. 'num' → logprob: -17.00000762939453
    7. ' ' → logprob: -17.25000762939453
    8. ']]' → logprob: -17.25000762939453
    9. ')]' → logprob: -17.62500762939453
    10. ' for' → logprob: -17.75000762939453

Token 496: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.0486290380358696
    2. 'for' → logprob: -3.04862904548645
    3. ']' → logprob: -11.173628807067871
    4. ' ' → logprob: -11.298628807067871
    5. '   ' → logprob: -11.423628807067871
    6. ')' → logprob: -12.673628807067871
    7. '	for' → logprob: -14.548628807067871
    8. 'val' → logprob: -15.173628807067871
    9. '  ' → logprob: -15.798628807067871
    10. 'num' → logprob: -16.423629760742188

Token 497: ' val' (ID: 1459)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.00593472458422184
    2. ' num' → logprob: -5.130934715270996
    3. '   ' → logprob: -12.755934715270996
    4. ' ' → logprob: -13.755934715270996
    5. '(num' → logprob: -14.130934715270996
    6. '	num' → logprob: -15.005934715270996
    7. '  ' → logprob: -15.630934715270996
    8. 'numbers' → logprob: -15.880934715270996
    9. 'val' → logprob: -16.005935668945312
    10. '[num' → logprob: -16.130935668945312

Token 498: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0487947016954422
    2. 'in' → logprob: -3.048794746398926
    3. 'num' → logprob: -8.548794746398926
    4. 'val' → logprob: -12.423794746398926
    5. ' num' → logprob: -12.548794746398926
    6. '
' → logprob: -13.048794746398926
    7. ' ' → logprob: -13.798794746398926
    8. 'ins' → logprob: -14.173794746398926
    9. 'import' → logprob: -14.923794746398926
    10. '   ' → logprob: -15.048794746398926

Token 499: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.0003377270477358252
    2. ' num' → logprob: -8.000337600708008
    3. '   ' → logprob: -13.500337600708008
    4. 'numbers' → logprob: -14.500337600708008
    5. ' ' → logprob: -15.875337600708008
    6. '(num' → logprob: -16.625337600708008
    7. '  ' → logprob: -16.875337600708008
    8. 'nums' → logprob: -17.000337600708008
    9. '
' → logprob: -17.500337600708008
    10. '[num' → logprob: -17.625337600708008

Token 500: '_sorted' (ID: 104993)
  Prédit: '_sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sorted' → logprob: -6.2729995988775045e-06
    2. 'sorted' → logprob: -12.000006675720215
    3. '_' → logprob: -18.1250057220459
    4. 's' → logprob: -19.3750057220459
    5. '_s' → logprob: -19.5000057220459
    6. 'Sorted' → logprob: -20.6250057220459
    7. '_numbers' → logprob: -20.6250057220459
    8. '(sorted' → logprob: -21.2500057220459
    9. '_sort' → logprob: -21.3750057220459
    10. '```' → logprob: -21.3750057220459

Token 501: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0007457832107320428
    2. ' ]' → logprob: -7.50074577331543
    3. '   ' → logprob: -8.62574577331543
    4. ']
' → logprob: -11.75074577331543
    5. ')' → logprob: -12.62574577331543
    6. ')]' → logprob: -14.00074577331543
    7. ']
' → logprob: -14.87574577331543
    8. ']

' → logprob: -15.87574577331543
    9. '  ' → logprob: -16.12574577331543
    10. ' ' → logprob: -16.12574577331543

Token 502: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9030543565750122
    2. '    
' → logprob: -1.1530543565750122
    3. '
' → logprob: -1.2780543565750122
    4. '
' → logprob: -9.153054237365723
    5. 'n' → logprob: -9.528054237365723
    6. '  
' → logprob: -10.278054237365723
    7. '   
' → logprob: -10.528054237365723
    8. '        
' → logprob: -10.528054237365723
    9. '    
' → logprob: -10.653054237365723
    10. '    
    
' → logprob: -10.653054237365723

Token 503: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05598754808306694
    2. 'count' → logprob: -3.180987596511841
    3. '#' (adapté à ' #') → logprob: -6.055987358093262
    4. '    
' → logprob: -6.180987358093262
    5. 'res' → logprob: -6.180987358093262
    6. 'blocks' → logprob: -6.180987358093262
    7. 'length' → logprob: -6.805987358093262
    8. '
' → logprob: -7.055987358093262
    9. 'n' → logprob: -7.680987358093262
    10. 'dp' → logprob: -8.055987358093262

Token 504: ' perm' (ID: 5961)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.6176233887672424
    2. 'blocks' → logprob: -1.3676233291625977
    3. 'res' → logprob: -2.6176233291625977
    4. '   ' → logprob: -2.6176233291625977
    5. 'dp' → logprob: -4.117623329162598
    6. '#' → logprob: -5.117623329162598
    7. ' res' → logprob: -5.242623329162598
    8. ' count' → logprob: -5.367623329162598
    9. 'answer' → logprob: -5.367623329162598
    10. 'length' → logprob: -5.742623329162598

Token 505: ' est' (ID: 893)
  Prédit: '.sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.8089873194694519
    2. ' =' → logprob: -1.0589873790740967
    3. '=' → logprob: -2.1839873790740967
    4. '<|end|>' → logprob: -3.5589873790740967
    5. ')' → logprob: -4.308987140655518
    6. 'def' → logprob: -4.558987140655518
    7. '   ' → logprob: -4.808987140655518
    8. '[' → logprob: -4.933987140655518
    9. ' is' → logprob: -5.683987140655518
    10. '<|end|>' → logprob: -5.808987140655518

Token 506: ' une' (ID: 2463)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8489198088645935
    2. 'une' → logprob: -1.2239198684692383
    3. '[]' → logprob: -1.8489198684692383
    4. ' une' → logprob: -2.9739198684692383
    5. ' [' → logprob: -3.4739198684692383
    6. 'perm' → logprob: -3.8489198684692383
    7. ' la' → logprob: -5.848919868469238
    8. 'la' → logprob: -5.973919868469238
    9. ' perm' → logprob: -6.098919868469238
    10. ' []' → logprob: -6.473919868469238

Token 507: ' permutation' (ID: 135200)
  Prédit: 'per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'per' → logprob: -0.2947517931461334
    2. ' liste' → logprob: -2.1697518825531006
    3. 'liste' → logprob: -2.4197518825531006
    4. 'strict' → logprob: -3.6697518825531006
    5. 'list' → logprob: -4.1697516441345215
    6. ' permutation' → logprob: -5.4197516441345215
    7. ' list' → logprob: -6.5447516441345215
    8. 'mon' → logprob: -6.7947516441345215
    9. 'perm' → logprob: -7.0447516441345215
    10. 'in' → logprob: -7.7947516441345215

Token 508: ' de' (ID: 334)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 509: ' [' (ID: 723)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.22847019135951996
    2. '[' → logprob: -2.6034700870513916
    3. 'n' → logprob: -2.9784700870513916
    4. 'list' → logprob: -3.1034700870513916
    5. '[n' → logprob: -4.103470325469971
    6. ' range' → logprob: -4.353470325469971
    7. ' [' → logprob: -6.103470325469971
    8. ' n' → logprob: -6.228470325469971
    9. ' list' → logprob: -7.353470325469971
    10. 'len' → logprob: -9.603469848632812

Token 510: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0012607101816684008
    2. 'n' → logprob: -6.751260757446289
    3. ' ' → logprob: -10.001260757446289
    4. 'range' → logprob: -10.126260757446289
    5. ' n' → logprob: -12.376260757446289
    6. ' range' → logprob: -14.626260757446289
    7. '(n' → logprob: -15.376260757446289
    8. '
' → logprob: -16.25126075744629
    9. '(range' → logprob: -16.87626075744629
    10. ')n' → logprob: -17.37626075744629

Token 511: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.023357167840003967
    2. '...' → logprob: -4.273357391357422
    3. ' ,' → logprob: -5.148357391357422
    4. '..' → logprob: -6.773357391357422
    5. ',...' → logprob: -7.398357391357422
    6. ',n' → logprob: -7.398357391357422
    7. ' ' → logprob: -7.523357391357422
    8. ',
' → logprob: -9.148357391357422
    9. 'n' → logprob: -9.773357391357422
    10. '<|end|>' → logprob: -9.773357391357422

Token 512: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.69315105676651
    2. ' n' → logprob: -0.69315105676651
    3. '	n' → logprob: -13.068151473999023
    4. ' ' → logprob: -14.193151473999023
    5. ',n' → logprob: -14.693151473999023
    6. ',' → logprob: -15.818151473999023
    7. '(n' → logprob: -15.943151473999023
    8. '...' → logprob: -16.443151473999023
    9. 'len' → logprob: -16.568151473999023
    10. ' ' → logprob: -16.693151473999023

Token 513: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5065451860427856
    2. ')' → logprob: -1.1315451860427856
    3. ']' → logprob: -2.631545066833496
    4. '[' → logprob: -6.006545066833496
    5. ' -' → logprob: -8.381545066833496
    6. ')]' → logprob: -9.756545066833496
    7. '[
' → logprob: -10.131545066833496
    8. '1' → logprob: -10.256545066833496
    9. ' )' → logprob: -11.256545066833496
    10. '),' → logprob: -11.381545066833496

Token 514: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.3458322731312364e-06
    2. ' ' → logprob: -12.125007629394531
    3. '-' → logprob: -13.625007629394531
    4. ')' → logprob: -14.500007629394531
    5. 'n' → logprob: -16.25000762939453
    6. ']' → logprob: -16.62500762939453
    7. '```' → logprob: -17.12500762939453
    8. '
' → logprob: -17.50000762939453
    9. ' ' → logprob: -18.75000762939453
    10. ' -' → logprob: -19.12500762939453

Token 515: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -8.399378566537052e-05
    2. ']
' → logprob: -10.250083923339844
    3. ' ]' → logprob: -10.500083923339844
    4. '],' → logprob: -11.500083923339844
    5. '].' → logprob: -11.875083923339844
    6. ']
' → logprob: -13.250083923339844
    7. ']

' → logprob: -13.750083923339844
    8. '   ' → logprob: -15.250083923339844
    9. '];' → logprob: -15.625083923339844
    10. ')' → logprob: -15.750083923339844

Token 516: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.37582632899284363
    2. '
' → logprob: -1.250826358795166
    3. '    
' → logprob: -3.625826358795166
    4. 'def' → logprob: -9.750825881958008
    5. '#' → logprob: -9.875825881958008
    6. '
' → logprob: -10.000825881958008
    7. '

' → logprob: -10.250825881958008
    8. 'count' → logprob: -10.500825881958008
    9. '  
' → logprob: -10.750825881958008
    10. '   
' → logprob: -11.000825881958008

Token 517: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.43064460158348083
    2. 'blocks' → logprob: -1.6806446313858032
    3. 'count' → logprob: -2.1806445121765137
    4. 'dp' → logprob: -3.4306445121765137
    5. 'res' → logprob: -5.180644512176514
    6. '#' → logprob: -5.555644512176514
    7. 'length' → logprob: -6.055644512176514
    8. 'valid' → logprob: -6.805644512176514
    9. 'good' → logprob: -6.930644512176514
    10. 'total' → logprob: -7.555644512176514

Token 518: ' #' (ID: 1069)
  Prédit: 'blocks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blocks' → logprob: -0.6055634021759033
    2. 'count' → logprob: -1.6055634021759033
    3. '   ' → logprob: -1.8555634021759033
    4. 'dp' → logprob: -3.6055634021759033
    5. 'res' → logprob: -4.105563163757324
    6. 'i' → logprob: -4.855563163757324
    7. 'def' → logprob: -4.980563163757324
    8. '#' (adapté à ' #') → logprob: -5.230563163757324
    9. 'good' → logprob: -5.605563163757324
    10. 'length' → logprob: -5.605563163757324

Token 519: ' Nous' (ID: 20193)
  Prédit: 'blocks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'blocks' → logprob: -0.1342536062002182
    2. 'count' → logprob: -2.25925350189209
    3. '#' → logprob: -5.00925350189209
    4. 'res' → logprob: -5.38425350189209
    5. 'segments' → logprob: -6.63425350189209
    6. 'dp' → logprob: -6.88425350189209
    7. 'i' → logprob: -7.00925350189209
    8. ' blocks' → logprob: -7.38425350189209
    9. 'long' → logprob: -7.63425350189209
    10. 'start' → logprob: -7.63425350189209

Token 520: ' cherch' (ID: 194183)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8450124859809875
    2. 'i' → logprob: -0.9700124859809875
    3. ' i' → logprob: -2.9700124263763428
    4. 'n' → logprob: -3.2200124263763428
    5. 'def' → logprob: -3.2200124263763428
    6. 'count' → logprob: -4.095012664794922
    7. ' n' → logprob: -4.095012664794922
    8. ' allons' → logprob: -5.595012664794922
    9. 'prev' → logprob: -5.970012664794922
    10. '#' → logprob: -6.095012664794922

Token 521: 'ons' (ID: 1808)
  Prédit: 'ons'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ons' → logprob: -0.0003728774609044194
    2. '#' → logprob: -8.000372886657715
    3. 'on' → logprob: -11.000372886657715
    4. 'er' → logprob: -11.625372886657715
    5. '   ' → logprob: -12.250372886657715
    6. '```' → logprob: -13.000372886657715
    7. '##' → logprob: -13.375372886657715
    8. '\' → logprob: -15.125372886657715
    9. 'ont' → logprob: -15.375372886657715
    10. 'e' → logprob: -15.375372886657715

Token 522: ' les' (ID: 1341)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.420085072517395
    2. ' les' → logprob: -1.795085072517395
    3. 'les' → logprob: -1.795085072517395
    4. ' des' → logprob: -2.0450849533081055
    5. ' à' → logprob: -3.0450849533081055
    6. 'des' → logprob: -3.0450849533081055
    7. 'à' → logprob: -3.1700849533081055
    8. '   ' → logprob: -3.4200849533081055
    9. ' le' → logprob: -3.6700849533081055
    10. ' ' → logprob: -3.9200849533081055

Token 523: ' plus' (ID: 2932)
  Prédit: 'bl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bl' → logprob: -1.233778715133667
    2. 'long' → logprob: -1.483778715133667
    3. 'blocks' → logprob: -1.608778715133667
    4. 'count' → logprob: -1.983778715133667
    5. 'i' → logprob: -3.108778715133667
    6. 'segments' → logprob: -3.108778715133667
    7. 'max' → logprob: -4.108778953552246
    8. ' longest' → logprob: -4.733778953552246
    9. 'contin' → logprob: -4.983778953552246
    10. 'bloc' → logprob: -5.608778953552246

Token 524: ' longs' (ID: 102836)
  Prédit: 'long'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'long' → logprob: -0.5504519939422607
    2. ' longues' → logprob: -1.1754519939422607
    3. ' longs' → logprob: -2.3004519939422607
    4. ' long' → logprob: -4.92545223236084
    5. ' longue' → logprob: -5.55045223236084
    6. 'gr' → logprob: -6.92545223236084
    7. '_long' → logprob: -7.17545223236084
    8. ' grandes' → logprob: -8.42545223236084
    9. ' grands' → logprob: -8.67545223236084
    10. 'cour' → logprob: -8.80045223236084

Token 525: ' segments' (ID: 33749)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.4188961982727051
    2. ' segments' → logprob: -1.168896198272705
    3. 'cro' → logprob: -4.668896198272705
    4. 's' → logprob: -5.793896198272705
    5. 'in' → logprob: -6.043896198272705
    6. ' blocs' → logprob: -6.043896198272705
    7. 'interval' → logprob: -6.418896198272705
    8. 'segment' → logprob: -6.543896198272705
    9. ' morceaux' → logprob: -6.793896198272705
    10. 'inc' → logprob: -6.793896198272705

Token 526: ' où' (ID: 15113)
  Prédit: 'strict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strict' → logprob: -0.681576132774353
    2. ' de' → logprob: -1.806576132774353
    3. 'de' → logprob: -1.931576132774353
    4. 'cro' → logprob: -2.9315762519836426
    5. 'cont' → logprob: -3.4315762519836426
    6. '   ' → logprob: -3.6815762519836426
    7. ' où' → logprob: -3.9315762519836426
    8. 'con' → logprob: -5.056576251983643
    9. 'où' → logprob: -5.181576251983643
    10. ' strict' → logprob: -5.306576251983643

Token 527: ' perm' (ID: 5961)
  Prédit: 'perm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'perm' → logprob: -0.029842358082532883
    2. ' perm' → logprob: -3.5298423767089844
    3. '   ' → logprob: -9.529842376708984
    4. 'per' → logprob: -11.404842376708984
    5. ' ' → logprob: -13.404842376708984
    6. ' ' → logprob: -13.654842376708984
    7. 'la' → logprob: -14.029842376708984
    8. '```' → logprob: -14.154842376708984
    9. '  ' → logprob: -14.404842376708984
    10. '(' → logprob: -14.654842376708984

Token 528: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00043555660522542894
    2. '[j' → logprob: -8.250435829162598
    3. ' est' → logprob: -9.375435829162598
    4. '[' → logprob: -9.875435829162598
    5. ' is' → logprob: -11.875435829162598
    6. '[k' → logprob: -12.625435829162598
    7. 'est' → logprob: -12.750435829162598
    8. 'i' → logprob: -12.750435829162598
    9. '```' → logprob: -12.875435829162598
    10. ' i' → logprob: -13.000435829162598

Token 529: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.05577594414353371
    2. ']+' → logprob: -3.4307758808135986
    3. '+' → logprob: -4.055776119232178
    4. ']==' → logprob: -5.805776119232178
    5. ' ]' → logprob: -7.305776119232178
    6. ' +' → logprob: -8.30577564239502
    7. ']<=' → logprob: -8.93077564239502
    8. 'i' → logprob: -9.43077564239502
    9. '==' → logprob: -9.55577564239502
    10. ' ==' → logprob: -9.68077564239502

Token 530: ' ==' (ID: 951)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.31427088379859924
    2. ' <' → logprob: -1.6892708539962769
    3. '<' → logprob: -2.6892709732055664
    4. ' +' → logprob: -5.189270973205566
    5. '==' → logprob: -5.314270973205566
    6. ' ==' → logprob: -6.314270973205566
    7. ']' → logprob: -6.939270973205566
    8. '[i' → logprob: -7.314270973205566
    9. '<=' → logprob: -7.689270973205566
    10. 'i' → logprob: -7.814270973205566

Token 531: ' i' (ID: 575)
  Prédit: 'perm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'perm' → logprob: -0.07323199510574341
    2. 'i' → logprob: -2.6982319355010986
    3. ' perm' → logprob: -6.198232173919678
    4. ' i' → logprob: -6.948232173919678
    5. 'per' → logprob: -9.32323169708252
    6. 'prev' → logprob: -10.07323169708252
    7. '   ' → logprob: -10.26073169708252
    8. 'pos' → logprob: -11.26073169708252
    9. 'min' → logprob: -11.57323169708252
    10. 'max' → logprob: -11.63573169708252

Token 532: ',
' (ID: 412)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005923516000621021
    2. 'i' → logprob: -8.500592231750488
    3. ',' → logprob: -9.500592231750488
    4. ' and' → logprob: -9.750592231750488
    5. 'and' → logprob: -9.750592231750488
    6. '
' → logprob: -10.000592231750488
    7. ' i' → logprob: -10.000592231750488
    8. '.' → logprob: -10.625592231750488
    9. '    
' → logprob: -11.000592231750488
    10. 'def' → logprob: -11.625592231750488

Token 533: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0960787683725357
    2. 'i' → logprob: -2.846078872680664
    3. ' i' → logprob: -3.596078872680664
    4. '       ' → logprob: -6.346078872680664
    5. 'c' → logprob: -6.471078872680664
    6. ' c' → logprob: -7.096078872680664
    7. 'start' → logprob: -7.596078872680664
    8. ' start' → logprob: -8.471078872680664
    9. '#' → logprob: -8.596078872680664
    10. ' car' → logprob: -8.721078872680664

Token 534: ' #' (ID: 1069)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.2370266914367676
    2. '   ' → logprob: -1.3620266914367676
    3. 'c' → logprob: -1.6120266914367676
    4. ' c' → logprob: -2.2370266914367676
    5. ' i' → logprob: -2.3620266914367676
    6. 'start' → logprob: -4.487026691436768
    7. ' car' → logprob: -4.737026691436768
    8. 'car' → logprob: -4.987026691436768
    9. ' start' → logprob: -5.362026691436768
    10. '       ' → logprob: -5.612026691436768

Token 535: ' cela' (ID: 17542)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.3018275499343872
    2. 'i' → logprob: -2.1768274307250977
    3. '   ' → logprob: -2.6768274307250977
    4. '#' → logprob: -2.9268274307250977
    5. 'segments' → logprob: -4.551827430725098
    6. 'l' → logprob: -4.676827430725098
    7. 'count' → logprob: -6.301827430725098
    8. 'res' → logprob: -6.301827430725098
    9. ' start' → logprob: -8.426827430725098
    10. 'blocks' → logprob: -8.676827430725098

Token 536: ' correspond' (ID: 11095)
  Prédit: ' signifie'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' signifie' → logprob: -0.028804665431380272
    2. ' indique' → logprob: -5.028804779052734
    3. ' veut' → logprob: -5.653804779052734
    4. ' corresponds' → logprob: -5.653804779052734
    5. ' permet' → logprob: -5.778804779052734
    6. 'ind' → logprob: -6.153804779052734
    7. ' correspond' → logprob: -6.153804779052734
    8. 'cor' → logprob: -6.778804779052734
    9. 'sign' → logprob: -7.278804779052734
    10. ',' → logprob: -7.403804779052734

Token 537: ' aux' (ID: 5850)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.20252516865730286
    2. ' to' → logprob: -2.5775251388549805
    3. ' aux' → logprob: -3.2025251388549805
    4. 'à' → logprob: -3.9525251388549805
    5. 'to' → logprob: -4.0775251388549805
    6. '<|end|>' → logprob: -4.0775251388549805
    7. ' au' → logprob: -5.5775251388549805
    8. ' ' → logprob: -5.5775251388549805
    9. '   ' → logprob: -5.9525251388549805
    10. 'aux' → logprob: -6.9525251388549805

Token 538: ' sous' (ID: 14487)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.6730537414550781
    2. 'positions' → logprob: -1.6730537414550781
    3. ' segments' → logprob: -1.7980537414550781
    4. 'indices' → logprob: -3.173053741455078
    5. 'bl' → logprob: -4.173053741455078
    6. ' positions' → logprob: -4.548053741455078
    7. 's' → logprob: -4.673053741455078
    8. 'i' → logprob: -4.798053741455078
    9. 'blocks' → logprob: -4.798053741455078
    10. 'bloc' → logprob: -4.923053741455078

Token 539: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6323502659797668
    2. 'ense' → logprob: -0.8823502659797668
    3. 'segments' → logprob: -3.882350206375122
    4. '   ' → logprob: -4.632350444793701
    5. '_' → logprob: -5.007350444793701
    6. 'sets' → logprob: -5.257350444793701
    7. '_segments' → logprob: -6.007350444793701
    8. '_list' → logprob: -6.382350444793701
    9. 's' → logprob: -7.007350444793701
    10. '=' → logprob: -7.382350444793701

Token 540: 'ense' (ID: 1603)
  Prédit: 'ense'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ense' → logprob: -0.006330333184450865
    2. 'segments' → logprob: -5.131330490112305
    3. 'sé' → logprob: -8.631330490112305
    4. 's' → logprob: -9.631330490112305
    5. 'ensemble' → logprob: -10.006330490112305
    6. 'list' → logprob: -10.506330490112305
    7. 'bl' → logprob: -11.381330490112305
    8. 'interval' → logprob: -11.631330490112305
    9. 'inter' → logprob: -11.756330490112305
    10. 'sets' → logprob: -12.006330490112305

Token 541: 'mbles' (ID: 60383)
  Prédit: 'mbles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mbles' → logprob: -0.034308839589357376
    2. 'ts' → logprob: -4.784308910369873
    3. 'gments' → logprob: -5.159308910369873
    4. 'mble' → logprob: -5.159308910369873
    5. 'ments' → logprob: -5.409308910369873
    6. 'm' → logprob: -5.659308910369873
    7. 'quences' → logprob: -5.784308910369873
    8. 'mb' → logprob: -5.909308910369873
    9. 't' → logprob: -10.159308433532715
    10. 'nts' → logprob: -11.159308433532715

Token 542: ' où' (ID: 15113)
  Prédit: 'cont'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cont' → logprob: -1.0989246368408203
    2. 'contin' → logprob: -1.5989246368408203
    3. '   ' → logprob: -2.0989246368408203
    4. '#' → logprob: -2.2239246368408203
    5. 'strict' → logprob: -2.4739246368408203
    6. 'de' → logprob: -3.0989246368408203
    7. ' de' → logprob: -3.8489246368408203
    8. 'où' → logprob: -3.9739246368408203
    9. 'continu' → logprob: -4.59892463684082
    10. ' où' → logprob: -4.72392463684082

Token 543: '
' (ID: 198)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.3743246793746948
    2. 'les' → logprob: -1.3743246793746948
    3. 'num' → logprob: -1.6243246793746948
    4. 'la' → logprob: -1.9993246793746948
    5. ' les' → logprob: -3.2493247985839844
    6. ' l' → logprob: -3.3743247985839844
    7. '#' → logprob: -3.7493247985839844
    8. ' la' → logprob: -4.499324798583984
    9. 'val' → logprob: -4.499324798583984
    10. 'le' → logprob: -4.624324798583984

Token 544: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.912386417388916
    2. '#' → logprob: -1.912386417388916
    3. ' les' → logprob: -2.162386417388916
    4. ' la' → logprob: -2.537386417388916
    5. 'num' → logprob: -2.912386417388916
    6. 'la' → logprob: -3.037386417388916
    7. 'perm' → logprob: -3.162386417388916
    8. 'les' → logprob: -3.412386417388916
    9. ' perm' → logprob: -4.537386417388916
    10. ' num' → logprob: -4.662386417388916

Token 545: ' #' (ID: 1069)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.2934083640575409
    2. ' num' → logprob: -3.0434083938598633
    3. '#' (adapté à ' #') → logprob: -3.1684083938598633
    4. '   ' → logprob: -3.1684083938598633
    5. 'la' → logprob: -3.5434083938598633
    6. 'perm' → logprob: -3.6684083938598633
    7. 'les' → logprob: -4.293408393859863
    8. ' les' → logprob: -4.543408393859863
    9. ' la' → logprob: -4.918408393859863
    10. 'le' → logprob: -5.418408393859863

Token 546: ' l' (ID: 305)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.16188597679138184
    2. 'les' → logprob: -3.286885976791382
    3. 'la' → logprob: -3.411885976791382
    4. '#' → logprob: -3.536885976791382
    5. 'l' → logprob: -4.161886215209961
    6. 'val' → logprob: -5.036886215209961
    7. 'perm' → logprob: -5.161886215209961
    8. 'le' → logprob: -5.161886215209961
    9. 'lex' → logprob: -6.036886215209961
    10. 'numbers' → logprob: -6.161886215209961

Token 547: ''ordre' (ID: 124753)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.7242395281791687
    2. 'a' → logprob: -1.3492395877838135
    3. ''ordre' → logprob: -2.3492395877838135
    4. ''' → logprob: -2.7242395877838135
    5. 'es' → logprob: -2.7242395877838135
    6. ''ex' → logprob: -4.974239349365234
    7. 'i' → logprob: -5.474239349365234
    8. ''exp' → logprob: -6.099239349365234
    9. '#' → logprob: -6.099239349365234
    10. ''i' → logprob: -6.224239349365234

Token 548: ' numérique' (ID: 73962)
  Prédit: ' numérique'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' numérique' → logprob: -0.6720763444900513
    2. 'num' → logprob: -1.1720763444900513
    3. '   ' → logprob: -2.4220762252807617
    4. ' num' → logprob: -3.4220762252807617
    5. ' est' → logprob: -3.7970762252807617
    6. 'numer' → logprob: -4.047076225280762
    7. ' des' → logprob: -5.672076225280762
    8. ' lex' → logprob: -5.922076225280762
    9. '_num' → logprob: -6.047076225280762
    10. ' numer' → logprob: -6.797076225280762

Token 549: ' et' (ID: 859)
  Prédit: 'et'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'et' → logprob: -0.46814051270484924
    2. ' et' → logprob: -1.0931404829025269
    3. ' ==' → logprob: -4.468140602111816
    4. ' and' → logprob: -4.718140602111816
    5. '==' → logprob: -5.218140602111816
    6. '   ' → logprob: -5.218140602111816
    7. 'and' → logprob: -5.343140602111816
    8. '#' → logprob: -6.843140602111816
    9. ',' → logprob: -8.218140602111816
    10. ' est' → logprob: -8.343140602111816

Token 550: ' lex' (ID: 37772)
  Prédit: 'lex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lex' → logprob: -0.6041611433029175
    2. ' lex' → logprob: -1.1041611433029175
    3. 'l' → logprob: -2.354161262512207
    4. ' l' → logprob: -3.729161262512207
    5. ' lexi' → logprob: -6.979161262512207
    6. 'la' → logprob: -7.729161262512207
    7. '   ' → logprob: -7.979161262512207
    8. 'le' → logprob: -8.354161262512207
    9. ' lexical' → logprob: -8.354161262512207
    10. ' la' → logprob: -8.854161262512207

Token 551: 'ic' (ID: 291)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.08566267043352127
    2. 'ique' → logprob: -3.335662603378296
    3. '[i' → logprob: -3.710662603378296
    4. '   ' → logprob: -4.335662841796875
    5. 'ic' → logprob: -5.585662841796875
    6. 'ico' → logprob: -7.085662841796875
    7. ' i' → logprob: -7.210662841796875
    8. '(i' → logprob: -7.710662841796875
    9. '  ' → logprob: -7.960662841796875
    10. 'iques' → logprob: -7.960662841796875

Token 552: 'ographique' (ID: 108012)
  Prédit: 'ographique'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ographique' → logprob: -0.03187691420316696
    2. 'o' → logprob: -3.906876802444458
    3. 'ograph' → logprob: -5.281877040863037
    4. 'ographiques' → logprob: -5.406877040863037
    5. 'graph' → logprob: -8.406876564025879
    6. 'ique' → logprob: -8.531876564025879
    7. 'og' → logprob: -8.531876564025879
    8. '
' → logprob: -8.531876564025879
    9. 'ograp' → logprob: -9.031876564025879
    10. 'ogr' → logprob: -9.156876564025879

Token 553: ' co' (ID: 1407)
  Prédit: 'co'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'co' → logprob: -0.4233951270580292
    2. 's' → logprob: -1.6733951568603516
    3. 'cor' → logprob: -2.6733951568603516
    4. ' sont' → logprob: -3.9233951568603516
    5. ' concord' → logprob: -4.173395156860352
    6. 'est' → logprob: -4.298395156860352
    7. '#' → logprob: -4.298395156860352
    8. 'con' → logprob: -4.673395156860352
    9. '   ' → logprob: -5.423395156860352
    10. ' est' → logprob: -6.048395156860352

Token 554: 'ï' (ID: 9954)
  Prédit: 'ï'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ï' → logprob: -0.15753500163555145
    2. 'nc' → logprob: -2.5325350761413574
    3. 'inc' → logprob: -3.1575350761413574
    4. 'ïn' → logprob: -5.657535076141357
    5. 'n' → logprob: -5.782535076141357
    6. 'incident' → logprob: -5.782535076141357
    7. 'r' → logprob: -6.032535076141357
    8. 'ї' → logprob: -6.657535076141357
    9. 'indice' → logprob: -7.157535076141357
    10. 'î' → logprob: -7.282535076141357

Token 555: 'nc' (ID: 24825)
  Prédit: 'nc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nc' → logprob: -0.00067323591792956
    2. 'n' → logprob: -8.125673294067383
    3. 'nd' → logprob: -8.500673294067383
    4. 'ï' → logprob: -10.375673294067383
    5. 'ns' → logprob: -10.750673294067383
    6. '%' → logprob: -11.000673294067383
    7. 'mp' → logprob: -11.500673294067383
    8. 'nf' → logprob: -11.875673294067383
    9. 'ndice' → logprob: -11.875673294067383
    10. '#' → logprob: -12.000673294067383

Token 556: 'ident' (ID: 2477)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.27688586711883545
    2. 'dent' → logprob: -1.7768858671188354
    3. 'ident' → logprob: -3.651885986328125
    4. 'ide' → logprob: -3.651885986328125
    5. 'd' → logprob: -4.401885986328125
    6. '\' → logprob: -6.276885986328125
    7. '#' → logprob: -7.276885986328125
    8. '%' → logprob: -7.776885986328125
    9. '```' → logprob: -8.026885986328125
    10. '[' → logprob: -8.276885986328125

Token 557: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00025657136575318873
    2. '    
' → logprob: -9.125256538391113
    3. '
' → logprob: -9.750256538391113
    4. '.' → logprob: -9.875256538391113
    5. ',' → logprob: -11.000256538391113
    6. 'i' → logprob: -12.000256538391113
    7. '.
' → logprob: -13.250256538391113
    8. 'def' → logprob: -13.250256538391113
    9. ' i' → logprob: -13.375256538391113
    10. ',
' → logprob: -13.625256538391113

Token 558: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05828062817454338
    2. '
' → logprob: -3.5582807064056396
    3. '    
' → logprob: -3.8082807064056396
    4. 'count' → logprob: -5.9332804679870605
    5. 'segments' → logprob: -6.0582804679870605
    6. 'res' → logprob: -8.558280944824219
    7. '```' → logprob: -8.558280944824219
    8. 'result' → logprob: -9.058280944824219
    9. 'length' → logprob: -9.433280944824219
    10. 'i' → logprob: -9.433280944824219

Token 559: ' #' (ID: 1069)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.7035024166107178
    2. '   ' → logprob: -0.9535024166107178
    3. 'segments' → logprob: -2.8285024166107178
    4. 'res' → logprob: -3.4535024166107178
    5. 'valid' → logprob: -4.828502655029297
    6. 'blocks' → logprob: -5.328502655029297
    7. 'long' → logprob: -5.703502655029297
    8. 'i' → logprob: -5.828502655029297
    9. 'good' → logprob: -6.203502655029297
    10. 'result' → logprob: -6.328502655029297

Token 560: ' Or' (ID: 2604)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5262255668640137
    2. 'count' → logprob: -1.4012255668640137
    3. 'res' → logprob: -2.4012255668640137
    4. 'segments' → logprob: -3.5262255668640137
    5. 'valid' → logprob: -4.401225566864014
    6. 'start' → logprob: -4.776225566864014
    7. 'i' → logprob: -4.776225566864014
    8. 'result' → logprob: -5.651225566864014
    9. 'blocks' → logprob: -6.026225566864014
    10. 'long' → logprob: -6.151225566864014

Token 561: ' notre' (ID: 12092)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8621774911880493
    2. 'i' → logprob: -1.8621774911880493
    3. ' res' → logprob: -1.9871774911880493
    4. ' i' → logprob: -2.2371773719787598
    5. 'count' → logprob: -2.7371773719787598
    6. 'segments' → logprob: -3.4871773719787598
    7. 'res' → logprob: -3.8621773719787598
    8. ' count' → logprob: -4.23717737197876
    9. ' segments' → logprob: -4.48717737197876
    10. ' result' → logprob: -5.36217737197876

Token 562: ' problème' (ID: 35630)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4370437264442444
    2. ' code' → logprob: -2.0620436668395996
    3. 'code' → logprob: -2.4370436668395996
    4. ' i' → logprob: -2.8120436668395996
    5. 'def' → logprob: -4.0620436668396
    6. 'for' → logprob: -4.8120436668396
    7. '#' → logprob: -5.0620436668396
    8. 'perm' → logprob: -5.3120436668396
    9. 'next' → logprob: -5.4370436668396
    10. 'last' → logprob: -5.6870436668396

Token 563: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.13640348613262177
    2. '   ' → logprob: -3.5114035606384277
    3. ' n' → logprob: -3.6364035606384277
    4. 'est' → logprob: -3.8864035606384277
    5. ' consiste' → logprob: -4.886403560638428
    6. ':' → logprob: -5.136403560638428
    7. 'n' → logprob: -5.136403560638428
    8. '#' → logprob: -5.386403560638428
    9. ' nécessite' → logprob: -5.636403560638428
    10. ' is' → logprob: -5.886403560638428

Token 564: ' plus' (ID: 2932)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.5823930501937866
    2. ' maintenant' → logprob: -1.5823930501937866
    3. 'd' → logprob: -2.207393169403076
    4. ' de' → logprob: -3.832393169403076
    5. 'maint' → logprob: -3.832393169403076
    6. 'que' → logprob: -4.207393169403076
    7. 'à' → logprob: -4.332393169403076
    8. 'plus' → logprob: -4.457393169403076
    9. ' que' → logprob: -5.207393169403076
    10. '#' → logprob: -5.332393169403076

Token 565: ' fin' (ID: 2131)
  Prédit: 'complex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'complex' → logprob: -0.370052695274353
    2. ' complexe' → logprob: -2.1200528144836426
    3. ' délic' → logprob: -2.9950528144836426
    4. 'com' → logprob: -3.2450528144836426
    5. 'simple' → logprob: -3.6200528144836426
    6. 'pr' → logprob: -4.370052814483643
    7. ' complex' → logprob: -4.745052814483643
    8. ' compliqué' → logprob: -4.870052814483643
    9. 'd' → logprob: -5.120052814483643
    10. '```' → logprob: -5.495052814483643

Token 566: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10167696326971054
    2. ',' → logprob: -3.1016769409179688
    3. '.' → logprob: -3.3516769409179688
    4. ' :' → logprob: -4.976676940917969
    5. '   ' → logprob: -5.851676940917969
    6. '...' → logprob: -6.351676940917969
    7. ' ,' → logprob: -7.351676940917969
    8. '#' → logprob: -7.601676940917969
    9. ' car' → logprob: -7.601676940917969
    10. ' ' → logprob: -8.351676940917969

Token 567: ' car' (ID: 1669)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6268109083175659
    2. ' i' → logprob: -1.376810908317566
    3. '#' → logprob: -2.0018110275268555
    4. 'i' → logprob: -2.6268110275268555
    5. ' #' → logprob: -5.3768110275268555
    6. ' for' → logprob: -8.001811027526855
    7. 'for' → logprob: -8.501811027526855
    8. '    ' → logprob: -9.501811027526855
    9. 'continue' → logprob: -9.501811027526855
    10. 'c' → logprob: -9.876811027526855

Token 568: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'les' → logprob: -1.388639211654663
    2. 'il' → logprob: -1.763639211654663
    3. 'nous' → logprob: -1.763639211654663
    4. 'on' → logprob: -1.888639211654663
    5. '#' → logprob: -2.638639211654663
    6. ' on' → logprob: -3.763639211654663
    7. 'le' → logprob: -3.888639211654663
    8. ' il' → logprob: -4.013639450073242
    9. 'ces' → logprob: -4.138639450073242
    10. '   ' → logprob: -4.263639450073242

Token 569: ' sous' (ID: 14487)
  Prédit: ' sous'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sous' → logprob: -0.8391181826591492
    2. 's' → logprob: -0.9641181826591492
    3. 'bl' → logprob: -3.339118242263794
    4. ' segments' → logprob: -3.714118242263794
    5. 'segments' → logprob: -3.839118242263794
    6. ' blocs' → logprob: -3.964118242263794
    7. '"' → logprob: -4.214118003845215
    8. 'sub' → logprob: -4.714118003845215
    9. ' subsets' → logprob: -4.714118003845215
    10. 'blocks' → logprob: -5.089118003845215

Token 570: '-' (ID: 12)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5800734758377075
    2. '-' → logprob: -0.9550734758377075
    3. 'ense' → logprob: -3.830073356628418
    4. '   ' → logprob: -4.330073356628418
    5. '_segments' → logprob: -4.330073356628418
    6. '=' → logprob: -6.205073356628418
    7. 'segments' → logprob: -7.080073356628418
    8. 'sets' → logprob: -7.205073356628418
    9. '_set' → logprob: -7.330073356628418
    10. '_sequences' → logprob: -7.705073356628418

Token 571: 'ense' (ID: 1603)
  Prédit: 'ense'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ense' → logprob: -0.0003213997988495976
    2. 'ensemble' → logprob: -9.000321388244629
    3. 'segments' → logprob: -9.250321388244629
    4. 'sets' → logprob: -10.000321388244629
    5. 'list' → logprob: -10.875321388244629
    6. '   ' → logprob: -11.625321388244629
    7. '```' → logprob: -12.500321388244629
    8. 'enses' → logprob: -12.875321388244629
    9. '#' → logprob: -13.000321388244629
    10. 'bl' → logprob: -13.125321388244629

Token 572: 'mbles' (ID: 60383)
  Prédit: 'mbles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mbles' → logprob: -1.0406019687652588
    2. 'ts' → logprob: -1.1656019687652588
    3. 'ments' → logprob: -1.6656019687652588
    4. 'quences' → logprob: -2.540601968765259
    5. 'gments' → logprob: -3.165601968765259
    6. 't' → logprob: -4.16560173034668
    7. 'mb' → logprob: -5.66560173034668
    8. 'nts' → logprob: -6.16560173034668
    9. 'r' → logprob: -6.41560173034668
    10. 'mble' → logprob: -7.16560173034668

Token 573: ' peuvent' (ID: 21321)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 574: '
' (ID: 198)
  Prédit: 'être'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'être' → logprob: -0.7574942111968994
    2. ' être' → logprob: -1.8824942111968994
    3. 's' → logprob: -2.2574942111968994
    4. 'se' → logprob: -2.5074942111968994
    5. 'ne' → logprob: -3.0074942111968994
    6. ' se' → logprob: -3.5074942111968994
    7. ' ne' → logprob: -3.5074942111968994
    8. ' ' → logprob: -3.8824942111968994
    9. ' s' → logprob: -4.13249397277832
    10. 'contin' → logprob: -4.63249397277832

Token 575: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6730831265449524
    2. ' être' → logprob: -1.4230830669403076
    3. '#' → logprob: -2.5480830669403076
    4. 'être' → logprob: -2.9230830669403076
    5. ' #' → logprob: -3.5480830669403076
    6. ' =' → logprob: -3.9230830669403076
    7. ' continuer' → logprob: -4.173083305358887
    8. ' ne' → logprob: -4.548083305358887
    9. 'contin' → logprob: -4.673083305358887
    10. ' se' → logprob: -4.923083305358887

Token 576: ' #' (ID: 1069)
  Prédit: ' être'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' être' → logprob: -0.817915678024292
    2. 'être' → logprob: -1.067915678024292
    3. ' se' → logprob: -3.192915678024292
    4. 'contin' → logprob: -3.317915678024292
    5. ' only' → logprob: -3.692915678024292
    6. ' continuer' → logprob: -3.942915678024292
    7. ' seulement' → logprob: -4.317915916442871
    8. '#' (adapté à ' #') → logprob: -4.317915916442871
    9. ' uniquement' → logprob: -4.317915916442871
    10. ' ne' → logprob: -4.567915916442871

Token 577: ' être' (ID: 9104)
  Prédit: 'être'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'être' → logprob: -0.654512882232666
    2. ' être' → logprob: -1.404512882232666
    3. 'contin' → logprob: -2.779512882232666
    4. ' s' → logprob: -3.654512882232666
    5. ' se' → logprob: -3.904512882232666
    6. ' continuer' → logprob: -4.279512882232666
    7. ' be' → logprob: -4.404512882232666
    8. 's' → logprob: -4.404512882232666
    9. ' correspond' → logprob: -4.404512882232666
    10. 'se' → logprob: -4.529512882232666

Token 578: ' n' (ID: 297)
  Prédit: 'non'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'non' → logprob: -1.5530339479446411
    2. 'form' → logprob: -2.1780338287353516
    3. 'dis' → logprob: -2.3030338287353516
    4. 'const' → logprob: -2.6780338287353516
    5. ' discontinu' → logprob: -2.6780338287353516
    6. 'dé' → logprob: -2.8030338287353516
    7. ' form' → logprob: -3.1780338287353516
    8. 'des' → logprob: -3.1780338287353516
    9. ' non' → logprob: -3.3030338287353516
    10. 'cont' → logprob: -3.3030338287353516

Token 579: ''importe' (ID: 103032)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.24102407693862915
    2. ''importe' → logprob: -2.2410240173339844
    3. 'um' → logprob: -3.6160240173339844
    4. 'onc' → logprob: -4.491024017333984
    5. 'cont' → logprob: -5.116024017333984
    6. 'és' → logprob: -5.116024017333984
    7. 'ot' → logprob: -5.116024017333984
    8. 'uls' → logprob: -5.491024017333984
    9. 'ull' → logprob: -5.741024017333984
    10. 'u' → logprob: -5.866024017333984

Token 580: ' quelles' (ID: 138516)
  Prédit: 'où'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'où' → logprob: -0.17448017001152039
    2. ' où' → logprob: -2.4244801998138428
    3. 'quel' → logprob: -4.424479961395264
    4. ' quelle' → logprob: -4.549479961395264
    5. 'where' → logprob: -4.674479961395264
    6. '```' → logprob: -5.049479961395264
    7. 'quelle' → logprob: -5.299479961395264
    8. ' quels' → logprob: -5.674479961395264
    9. 'dans' → logprob: -5.924479961395264
    10. ' quel' → logprob: -6.049479961395264

Token 581: ' comb' (ID: 4134)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.3358936309814453
    2. 'positions' → logprob: -2.0858936309814453
    3. ' sous' → logprob: -2.7108936309814453
    4. '   ' → logprob: -2.8358936309814453
    5. 'i' → logprob: -2.9608936309814453
    6. 'indices' → logprob: -3.0858936309814453
    7. 'segments' → logprob: -3.0858936309814453
    8. ' ' → logprob: -3.2108936309814453
    9. ' segments' → logprob: -3.2108936309814453
    10. ' positions' → logprob: -3.2108936309814453

Token 582: 'inais' (ID: 42744)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5593780279159546
    2. 'inais' → logprob: -1.0593780279159546
    3. 'ina' → logprob: -2.934378147125244
    4. 'inas' → logprob: -4.309378147125244
    5. 'inations' → logprob: -4.684378147125244
    6. 'i' → logprob: -6.309378147125244
    7. 'iné' → logprob: -6.309378147125244
    8. 'ination' → logprob: -7.309378147125244
    9. 'ines' → logprob: -7.684378147125244
    10. 'is' → logprob: -8.184377670288086

Token 583: 'ons' (ID: 1808)
  Prédit: 'ons'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ons' → logprob: -0.002451638225466013
    2. 'sons' → logprob: -6.127451419830322
    3. 'son' → logprob: -8.87745189666748
    4. 'on' → logprob: -10.12745189666748
    5. 's' → logprob: -10.25245189666748
    6. 'ais' → logprob: -11.00245189666748
    7. 'isons' → logprob: -11.00245189666748
    8. '#' → logprob: -12.25245189666748
    9. 'ions' → logprob: -12.75245189666748
    10. '
' → logprob: -13.50245189666748

Token 584: ' des' (ID: 731)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 585: ' éléments' (ID: 57375)
  Prédit: 'indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indices' → logprob: -0.5969451665878296
    2. 'élé' → logprob: -1.2219451665878296
    3. ' indices' → logprob: -3.221945285797119
    4. 'i' → logprob: -3.346945285797119
    5. 'positions' → logprob: -3.596945285797119
    6. 'segments' → logprob: -3.596945285797119
    7. ' éléments' → logprob: -4.971945285797119
    8. 'bl' → logprob: -5.846945285797119
    9. 'elements' → logprob: -5.971945285797119
    10. 'indexes' → logprob: -5.971945285797119

Token 586: ' pour' (ID: 1930)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5293793082237244
    2. '   ' → logprob: -1.4043793678283691
    3. '.' → logprob: -2.654379367828369
    4. '[i' → logprob: -3.279379367828369
    5. '<|end|>' → logprob: -4.154379367828369
    6. ' ,' → logprob: -4.279379367828369
    7. '[' → logprob: -4.654379367828369
    8. ' de' → logprob: -6.029379367828369
    9. ')' → logprob: -6.529379367828369
    10. ' ' → logprob: -7.029379367828369

Token 587: ' lesquels' (ID: 106476)
  Prédit: ' lesquelles'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lesquelles' → logprob: -0.6539938449859619
    2. ' lesquels' → logprob: -0.7789938449859619
    3. 'les' → logprob: -4.153993606567383
    4. 'which' → logprob: -7.278993606567383
    5. 'quoi' → logprob: -7.278993606567383
    6. '```' → logprob: -7.778993606567383
    7. 'qui' → logprob: -7.903993606567383
    8. ' lesqu' → logprob: -8.153993606567383
    9. '#' → logprob: -8.278993606567383
    10. 'l' → logprob: -8.528993606567383

Token 588: ' la' (ID: 557)
  Prédit: 'perm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'perm' → logprob: -0.11953937262296677
    2. ' perm' → logprob: -2.244539260864258
    3. ' l' → logprob: -6.119539260864258
    4. 'l' → logprob: -6.744539260864258
    5. ' la' → logprob: -7.244539260864258
    6. '   ' → logprob: -7.494539260864258
    7. 'la' → logprob: -7.869539260864258
    8. 'les' → logprob: -8.244539260864258
    9. ' ' → logprob: -8.244539260864258
    10. ' les' → logprob: -8.369539260864258

Token 589: ' double' (ID: 3503)
  Prédit: ' perm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' perm' → logprob: -0.40977898240089417
    2. 'perm' → logprob: -1.1597789525985718
    3. ' permutation' → logprob: -4.659779071807861
    4. 'condition' → logprob: -6.034779071807861
    5. 'val' → logprob: -6.034779071807861
    6. ' condition' → logprob: -6.409779071807861
    7. 'per' → logprob: -6.659779071807861
    8. 'diff' → logprob: -6.659779071807861
    9. 'prem' → logprob: -7.159779071807861
    10. 'position' → logprob: -7.534779071807861

Token 590: '
' (ID: 198)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6333717703819275
    2. 'ordre' → logprob: -1.2583718299865723
    3. 'égalité' → logprob: -3.3833718299865723
    4. ' ordre' → logprob: -3.6333718299865723
    5. '_s' → logprob: -4.758371829986572
    6. ''ordre' → logprob: -5.008371829986572
    7. ' égal' → logprob: -5.133371829986572
    8. 'tri' → logprob: -5.133371829986572
    9. ' _' → logprob: -5.258371829986572
    10. '_sorted' → logprob: -5.258371829986572

Token 591: '   ' (ID: 271)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.7786717414855957
    2. 'ordre' → logprob: -1.9036717414855957
    3. ' comparaison' → logprob: -2.2786717414855957
    4. 'égalité' → logprob: -2.4036717414855957
    5. ' égal' → logprob: -2.7786717414855957
    6. '#' → logprob: -2.9036717414855957
    7. ' ordre' → logprob: -2.9036717414855957
    8. '=' → logprob: -3.4036717414855957
    9. '   ' → logprob: -3.4036717414855957
    10. ' ' → logprob: -3.5286717414855957

Token 592: ' #' (ID: 1069)
  Prédit: 'égalité'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'égalité' → logprob: -1.4495124816894531
    2. 'ordre' → logprob: -1.9495124816894531
    3. '=' → logprob: -2.074512481689453
    4. '_' → logprob: -2.324512481689453
    5. ' égal' → logprob: -3.199512481689453
    6. ' ordre' → logprob: -3.199512481689453
    7. '<=' → logprob: -3.574512481689453
    8. '
' → logprob: -3.699512481689453
    9. ' comparaison' → logprob: -3.699512481689453
    10. '   ' → logprob: -3.824512481689453

Token 593: ' condition' (ID: 7060)
  Prédit: 'égalité'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'égalité' → logprob: -0.4064435064792633
    2. 'ordre' → logprob: -2.2814435958862305
    3. 'compar' → logprob: -2.6564435958862305
    4. ' comparaison' → logprob: -3.5314435958862305
    5. 'condition' → logprob: -4.0314435958862305
    6. '
' → logprob: -4.2814435958862305
    7. ' égal' → logprob: -4.4064435958862305
    8. 'order' → logprob: -4.5314435958862305
    9. 'in' → logprob: -4.7814435958862305
    10. ' ordre' → logprob: -4.9064435958862305

Token 594: ' est' (ID: 893)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.5961644649505615
    2. ' est' → logprob: -1.0961644649505615
    3. 's' → logprob: -3.4711644649505615
    4. 'de' → logprob: -3.8461644649505615
    5. 'est' → logprob: -4.221164703369141
    6. ' d' → logprob: -4.596164703369141
    7. 'd' → logprob: -4.846164703369141
    8. ' s' → logprob: -4.971164703369141
    9. ' se' → logprob: -5.096164703369141
    10. ' continue' → logprob: -5.596164703369141

Token 595: ' vraie' (ID: 105841)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.04894057661294937
    2. ' True' → logprob: -3.923940658569336
    3. 'True' → logprob: -4.673940658569336
    4. ' vraie' → logprob: -5.423940658569336
    5. ' vér' → logprob: -5.798940658569336
    6. 's' → logprob: -5.923940658569336
    7. 'ver' → logprob: -6.423940658569336
    8. 'true' → logprob: -6.423940658569336
    9. '   ' → logprob: -6.798940658569336
    10. ' respect' → logprob: -7.423940658569336

Token 596: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8683321475982666
    2. '.' → logprob: -1.3683321475982666
    3. '   ' → logprob: -1.8683321475982666
    4. '
' → logprob: -2.7433321475982666
    5. ':' → logprob: -3.4933321475982666
    6. ',
' → logprob: -4.4933319091796875
    7. '#' → logprob: -4.4933319091796875
    8. '    
' → logprob: -4.4933319091796875
    9. '  
' → logprob: -4.7433319091796875
    10. '<|end|>' → logprob: -4.8683319091796875

Token 597: ' mais' (ID: 2899)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3317282795906067
    2. ' mais' → logprob: -2.331728219985962
    3. '#' → logprob: -2.456728219985962
    4. ' i' → logprob: -3.081728219985962
    5. ' #' → logprob: -3.831728219985962
    6. '    
' → logprob: -4.956728458404541
    7. ' 
' → logprob: -5.456728458404541
    8. ' et' → logprob: -5.456728458404541
    9. ' but' → logprob: -5.456728458404541
    10. ' ' → logprob: -6.331728458404541

Token 598: ' seulement' (ID: 32072)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pas' → logprob: -2.282503366470337
    2. ' ici' → logprob: -2.407503366470337
    3. 'les' → logprob: -2.532503366470337
    4. 'nous' → logprob: -2.657503366470337
    5. 'perm' → logprob: -2.907503366470337
    6. 'il' → logprob: -2.907503366470337
    7. ' on' → logprob: -3.032503366470337
    8. 'not' → logprob: -3.032503366470337
    9. 'le' → logprob: -3.032503366470337
    10. 'on' → logprob: -3.407503366470337

Token 599: ' si' (ID: 1784)
  Prédit: 'dans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dans' → logprob: -1.395924687385559
    2. ' si' → logprob: -1.520924687385559
    3. ' pour' → logprob: -1.520924687385559
    4. 'pour' → logprob: -2.2709245681762695
    5. ' dans' → logprob: -2.7709245681762695
    6. 'si' → logprob: -3.0209245681762695
    7. 'cont' → logprob: -3.5209245681762695
    8. 'contin' → logprob: -4.1459245681762695
    9. ' ceux' → logprob: -4.2709245681762695
    10. ' sur' → logprob: -5.0209245681762695

Token 600: ' dans' (ID: 2671)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' les' → logprob: -1.0443066358566284
    2. 'perm' → logprob: -1.0443066358566284
    3. 'les' → logprob: -1.9193066358566284
    4. ' perm' → logprob: -2.794306755065918
    5. ' ils' → logprob: -3.169306755065918
    6. 'they' → logprob: -4.919306755065918
    7. ' ' → logprob: -4.919306755065918
    8. ' la' → logprob: -5.169306755065918
    9. ' they' → logprob: -5.294306755065918
    10. 'la' → logprob: -5.419306755065918

Token 601: ' la' (ID: 557)
  Prédit: 'perm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'perm' → logprob: -0.43696802854537964
    2. 'la' → logprob: -1.6869680881500244
    3. 'l' → logprob: -2.6869680881500244
    4. 'les' → logprob: -3.3119680881500244
    5. 'lex' → logprob: -3.8119680881500244
    6. ' la' → logprob: -4.561967849731445
    7. 'le' → logprob: -4.811967849731445
    8. ' perm' → logprob: -5.311967849731445
    9. 'une' → logprob: -5.311967849731445
    10. 'the' → logprob: -5.936967849731445

Token 602: ' sous' (ID: 14487)
  Prédit: 'perm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'perm' → logprob: -0.05646198242902756
    2. 'per' → logprob: -4.056461811065674
    3. 'segment' → logprob: -4.681461811065674
    4. ' perm' → logprob: -5.306461811065674
    5. 'sub' → logprob: -5.306461811065674
    6. 'subset' → logprob: -5.306461811065674
    7. 'range' → logprob: -6.181461811065674
    8. 'contin' → logprob: -6.306461811065674
    9. 'bloc' → logprob: -6.431461811065674
    10. 's' → logprob: -6.556461811065674

Token 603: '-l' (ID: 2887)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.37017515301704407
    2. 'set' → logprob: -2.1201751232147217
    3. '   ' → logprob: -2.3701751232147217
    4. '_set' → logprob: -4.120175361633301
    5. '_list' → logprob: -4.245175361633301
    6. 'array' → logprob: -4.620175361633301
    7. 'sets' → logprob: -4.620175361633301
    8. '_array' → logprob: -5.245175361633301
    9. 'sequence' → logprob: -5.495175361633301
    10. '_sequences' → logprob: -5.745175361633301

Token 604: 'iste' (ID: 4872)
  Prédit: 'iste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iste' → logprob: -0.8277602195739746
    2. 'igne' → logprob: -1.0777602195739746
    3. 'ine' → logprob: -2.2027602195739746
    4. 'iné' → logprob: -2.8277602195739746
    5. 'ist' → logprob: -3.9527602195739746
    6. 'e' → logprob: -4.827760219573975
    7. '   ' → logprob: -5.827760219573975
    8. 'i' → logprob: -5.952760219573975
    9. 'inea' → logprob: -6.077760219573975
    10. 'is' → logprob: -6.202760219573975

Token 605: ' tri' (ID: 12665)
  Prédit: 'perm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'perm' → logprob: -0.67794269323349
    2. ' perm' → logprob: -1.0529427528381348
    3. '   ' → logprob: -2.5529427528381348
    4. ',' → logprob: -3.6779427528381348
    5. '[i' → logprob: -4.427942752838135
    6. ' de' → logprob: -5.052942752838135
    7. 'i' → logprob: -6.177942752838135
    8. '```' → logprob: -6.302942752838135
    9. ' précédente' → logprob: -6.427942752838135
    10. ' ' → logprob: -6.677942752838135

Token 606: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.02101629227399826
    2. 'uée' → logprob: -4.8960161209106445
    3. '   ' → logprob: -5.1460161209106445
    4. '#' → logprob: -6.6460161209106445
    5. 'née' → logprob: -7.0210161209106445
    6. 'é' → logprob: -7.0210161209106445
    7. 'lée' → logprob: -7.2710161209106445
    8. 'ang' → logprob: -8.021016120910645
    9. 'd' → logprob: -8.146016120910645
    10. 'cée' → logprob: -8.271016120910645

Token 607: ' num' (ID: 2269)
  Prédit: ' lex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lex' → logprob: -0.9295381903648376
    2. 'num' → logprob: -1.1795382499694824
    3. '   ' → logprob: -1.5545382499694824
    4. ' num' → logprob: -3.5545382499694824
    5. 'lex' → logprob: -3.8045382499694824
    6. ',' → logprob: -4.929538249969482
    7. '_num' → logprob: -5.429538249969482
    8. ' par' → logprob: -5.554538249969482
    9. '(num' → logprob: -6.054538249969482
    10. 'perm' → logprob: -6.179538249969482

Token 608: 'éri' (ID: 13499)
  Prédit: 'érique'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érique' → logprob: -0.014350474812090397
    2. '   ' → logprob: -5.264350414276123
    3. '_sorted' → logprob: -5.514350414276123
    4. 'é' → logprob: -7.014350414276123
    5. 'ériques' → logprob: -7.139350414276123
    6. 'érica' → logprob: -7.514350414276123
    7. '_' → logprob: -7.764350414276123
    8. 'érée' → logprob: -7.889350414276123
    9. 'éri' → logprob: -8.014350891113281
    10. 'éraire' → logprob: -8.514350891113281

Token 609: 'quement' (ID: 42437)
  Prédit: 'quement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quement' → logprob: -0.20174135267734528
    2. 'que' → logprob: -1.701741337776184
    3. 'q' → logprob: -9.826741218566895
    4. 'qu' → logprob: -9.826741218566895
    5. ' ' → logprob: -9.951741218566895
    6. 'ques' → logprob: -10.201741218566895
    7. '   ' → logprob: -10.201741218566895
    8. '#' → logprob: -10.701741218566895
    9. 'quee' → logprob: -11.701741218566895
    10. '```' → logprob: -11.701741218566895

Token 610: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5463183522224426
    2. '   ' → logprob: -1.5463182926177979
    3. '[i' → logprob: -2.296318292617798
    4. '[' → logprob: -3.046318292617798
    5. ']' → logprob: -4.296318531036377
    6. ' ,' → logprob: -4.796318531036377
    7. ')' → logprob: -4.796318531036377
    8. '.' → logprob: -5.296318531036377
    9. '  ' → logprob: -6.046318531036377
    10. ' ' → logprob: -6.171318531036377

Token 611: '   ' (ID: 271)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.06394155323505402
    2. '   ' → logprob: -2.813941478729248
    3. ' #' → logprob: -7.563941478729248
    4. 'les' → logprob: -7.813941478729248
    5. '```' → logprob: -8.688941955566406
    6. ' les' → logprob: -8.813941955566406
    7. 'la' → logprob: -8.813941955566406
    8. ' la' → logprob: -9.063941955566406
    9. '       ' → logprob: -9.063941955566406
    10. 'le' → logprob: -9.188941955566406

Token 612: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15804646909236908
    2. '#' (adapté à ' #') → logprob: -3.0330464839935303
    3. ' ils' → logprob: -3.4080464839935303
    4. 'ils' → logprob: -4.158046245574951
    5. ' #' → logprob: -4.908046245574951
    6. ' chaque' → logprob: -5.033046245574951
    7. ' la' → logprob: -5.408046245574951
    8. ' ' → logprob: -5.533046245574951
    9. '    ' → logprob: -5.533046245574951
    10. ' il' → logprob: -5.533046245574951

Token 613: ' la' (ID: 557)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.17261987924575806
    2. ' #' → logprob: -2.7976198196411133
    3. 'les' → logprob: -3.5476198196411133
    4. ' les' → logprob: -3.9226198196411133
    5. 'dans' → logprob: -4.547619819641113
    6. 'perm' → logprob: -5.297619819641113
    7. ' la' → logprob: -5.297619819641113
    8. '   ' → logprob: -5.547619819641113
    9. ' ils' → logprob: -5.547619819641113
    10. ' dans' → logprob: -5.547619819641113

Token 614: ' correspond' (ID: 11095)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9419238567352295
    2. 'lex' → logprob: -1.3169238567352295
    3. 'position' → logprob: -2.1919238567352295
    4. ' permutation' → logprob: -3.4419238567352295
    5. 'contin' → logprob: -4.191924095153809
    6. ' perm' → logprob: -4.316924095153809
    7. 'chaine' → logprob: -4.316924095153809
    8. 'diff' → logprob: -4.316924095153809
    9. ' sous' → logprob: -4.316924095153809
    10. 'per' → logprob: -4.316924095153809

Token 615: 'ance' (ID: 766)
  Prédit: 'ance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ance' → logprob: -0.17212995886802673
    2. 'ence' → logprob: -1.9221299886703491
    3. ' à' → logprob: -5.922130107879639
    4. '   ' → logprob: -6.422130107879639
    5. '[' → logprob: -7.172130107879639
    6. ' =' → logprob: -7.297130107879639
    7. 'e' → logprob: -7.297130107879639
    8. ' perm' → logprob: -7.297130107879639
    9. 'ent' → logprob: -7.422130107879639
    10. '=' → logprob: -7.672130107879639

Token 616: ' lex' (ID: 37772)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.10493218898773193
    2. ' des' → logprob: -3.4799323081970215
    3. 'est' → logprob: -4.4799323081970215
    4. ' is' → logprob: -4.6049323081970215
    5. ' de' → logprob: -4.6049323081970215
    6. ' se' → logprob: -4.7299323081970215
    7. '[i' → logprob: -5.7299323081970215
    8. ' entre' → logprob: -5.8549323081970215
    9. ' ' → logprob: -5.9799323081970215
    10. ' continue' → logprob: -6.1049323081970215

Token 617: ' et' (ID: 859)
  Prédit: '_sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sorted' → logprob: -0.22499112784862518
    2. 'ic' → logprob: -1.9749910831451416
    3. 'i' → logprob: -3.5999910831451416
    4. 'ique' → logprob: -4.474991321563721
    5. '[i' → logprob: -5.099991321563721
    6. 'ico' → logprob: -5.349991321563721
    7. 'icale' → logprob: -5.349991321563721
    8. '   ' → logprob: -5.599991321563721
    9. 'sorted' → logprob: -7.224991321563721
    10. '_indices' → logprob: -7.474991321563721

Token 618: ' numérique' (ID: 73962)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.07260118424892426
    2. ' numérique' → logprob: -2.697601079940796
    3. ' num' → logprob: -6.697601318359375
    4. 'numer' → logprob: -7.822601318359375
    5. 'l' → logprob: -8.072601318359375
    6. 'numeric' → logprob: -8.197601318359375
    7. '_num' → logprob: -9.322601318359375
    8. ' ' → logprob: -9.822601318359375
    9. 'n' → logprob: -10.072601318359375
    10. '```' → logprob: -10.072601318359375

Token 619: ' co' (ID: 1407)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.3129284083843231
    2. 'est' → logprob: -1.4379284381866455
    3. 's' → logprob: -4.937928199768066
    4. 'continue' → logprob: -5.187928199768066
    5. ' continue' → logprob: -5.312928199768066
    6. '[i' → logprob: -5.937928199768066
    7. ' se' → logprob: -6.312928199768066
    8. 'se' → logprob: -6.312928199768066
    9. 'contin' → logprob: -6.437928199768066
    10. 'reste' → logprob: -7.312928199768066

Token 620: 'ï' (ID: 9954)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.419771671295166
    2. 'inc' → logprob: -1.919771671295166
    3. 'nc' → logprob: -2.544771671295166
    4. 'rr' → logprob: -3.294771671295166
    5. 'mp' → logprob: -3.294771671295166
    6. 'nt' → logprob: -4.669771671295166
    7. 'ï' → logprob: -5.044771671295166
    8. '```' → logprob: -5.044771671295166
    9. '``' → logprob: -6.294771671295166
    10. '   ' → logprob: -6.732271671295166

Token 621: 'nc' (ID: 24825)
  Prédit: 'nc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nc' → logprob: -0.003286678809672594
    2. 'mp' → logprob: -7.128286838531494
    3. 'n' → logprob: -7.628286838531494
    4. 'r' → logprob: -7.628286838531494
    5. 'ï' → logprob: -8.253286361694336
    6. 'inc' → logprob: -8.753286361694336
    7. 'nt' → logprob: -8.753286361694336
    8. '```' → logprob: -8.878286361694336
    9. 'nv' → logprob: -9.628286361694336
    10. 'rr' → logprob: -9.815786361694336

Token 622: 'ide' (ID: 617)
  Prédit: 'ide'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ide' → logprob: -0.32872071862220764
    2. 'ident' → logprob: -1.3287206888198853
    3. 'idente' → logprob: -5.703720569610596
    4. 'id' → logprob: -5.953720569610596
    5. '\' → logprob: -7.203720569610596
    6. '#' → logprob: -7.203720569610596
    7. 'er' → logprob: -7.328720569610596
    8. 'i' → logprob: -7.578720569610596
    9. 'idé' → logprob: -7.578720569610596
    10. 'ïde' → logprob: -7.828720569610596

Token 623: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17328500747680664
    2. '.' → logprob: -2.1732850074768066
    3. ',' → logprob: -3.2982850074768066
    4. '    
' → logprob: -5.798285007476807
    5. ':' → logprob: -6.923285007476807
    6. ',
' → logprob: -7.423285007476807
    7. '
' → logprob: -7.423285007476807
    8. '[i' → logprob: -7.923285007476807
    9. '  
' → logprob: -7.923285007476807
    10. '\' → logprob: -8.173284530639648

Token 624: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02182794362306595
    2. '    
' → logprob: -4.3968281745910645
    3. '
' → logprob: -4.8968281745910645
    4. '```' → logprob: -7.6468281745910645
    5. 'i' → logprob: -7.7718281745910645
    6. ' i' → logprob: -7.8968281745910645
    7. '  
' → logprob: -9.521827697753906
    8. '   
' → logprob: -9.896827697753906
    9. 'def' → logprob: -9.896827697753906
    10. 'result' → logprob: -10.021827697753906

Token 625: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0407545305788517
    2. '#' (adapté à ' #') → logprob: -3.665754556655884
    3. 'valid' → logprob: -6.040754318237305
    4. 'dp' → logprob: -6.165754318237305
    5. '    
' → logprob: -6.415754318237305
    6. 'from' → logprob: -6.540754318237305
    7. 'count' → logprob: -6.915754318237305
    8. '
' → logprob: -7.040754318237305
    9. 'res' → logprob: -7.040754318237305
    10. 'segments' → logprob: -7.040754318237305

Token 626: ' Le' (ID: 2018)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.7896613478660583
    2. 'i' → logprob: -1.0396614074707031
    3. 'count' → logprob: -2.789661407470703
    4. '   ' → logprob: -3.039661407470703
    5. 'segments' → logprob: -3.414661407470703
    6. '#' → logprob: -4.789661407470703
    7. 'res' → logprob: -4.914661407470703
    8. 'valid' → logprob: -5.039661407470703
    9. 'block' → logprob: -5.414661407470703
    10. ' i' → logprob: -5.539661407470703

Token 627: ' problème' (ID: 35630)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.4572490155696869
    2. 'i' → logprob: -1.4572490453720093
    3. 'count' → logprob: -3.4572489261627197
    4. '#' → logprob: -4.207249164581299
    5. 'block' → logprob: -4.207249164581299
    6. ' start' → logprob: -4.457249164581299
    7. ' i' → logprob: -4.582249164581299
    8. 'segments' → logprob: -4.582249164581299
    9. 'max' → logprob: -5.207249164581299
    10. 'last' → logprob: -5.207249164581299

Token 628: ' revient' (ID: 95900)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.1917059421539307
    2. 'est' → logprob: -1.1917059421539307
    3. ' est' → logprob: -1.6917059421539307
    4. '   ' → logprob: -2.6917059421539307
    5. ' n' → logprob: -3.4417059421539307
    6. 'n' → logprob: -3.6917059421539307
    7. 'reste' → logprob: -4.066705703735352
    8. ' se' → logprob: -4.316705703735352
    9. 'continue' → logprob: -4.316705703735352
    10. '=' → logprob: -4.816705703735352

Token 629: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.5880514979362488
    2. 'à' → logprob: -0.8380514979362488
    3. '   ' → logprob: -5.3380513191223145
    4. ''à' → logprob: -6.0880513191223145
    5. ' donc' → logprob: -6.7130513191223145
    6. '#' → logprob: -6.7130513191223145
    7. 'import' → logprob: -7.9630513191223145
    8. 'for' → logprob: -8.088051795959473
    9. ' maintenant' → logprob: -8.088051795959473
    10. ' ' → logprob: -8.588051795959473

Token 630: ':' (ID: 25)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.6991147994995117
    2. 'comp' → logprob: -2.0741147994995117
    3. 'count' → logprob: -2.3241147994995117
    4. 'identifier' → logprob: -2.6991147994995117
    5. 'chercher' → logprob: -2.9491147994995117
    6. '0' → logprob: -3.1991147994995117
    7. 'calcul' → logprob: -3.3241147994995117
    8. ' compter' → logprob: -3.5741147994995117
    9. '#' → logprob: -4.449114799499512
    10. 'dé' → logprob: -4.949114799499512

Token 631: ' compter' (ID: 81694)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9347838759422302
    2. '   ' → logprob: -1.934783935546875
    3. ' #' → logprob: -2.184783935546875
    4. 'i' → logprob: -3.184783935546875
    5. ' Trou' → logprob: -3.184783935546875
    6. 'count' → logprob: -3.309783935546875
    7. ' i' → logprob: -3.309783935546875
    8. 'contin' → logprob: -3.559783935546875
    9. ' compter' → logprob: -3.684783935546875
    10. 'from' → logprob: -3.934783935546875

Token 632: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.4667636454105377
    2. 'les' → logprob: -1.3417636156082153
    3. ' le' → logprob: -2.841763734817505
    4. ',' → logprob: -3.841763734817505
    5. 'le' → logprob: -3.966763734817505
    6. ' la' → logprob: -4.841763496398926
    7. ' ' → logprob: -7.216763496398926
    8. 'the' → logprob: -7.591763496398926
    9. 'la' → logprob: -7.841763496398926
    10. 'l' → logprob: -7.966763496398926

Token 633: ' sous' (ID: 14487)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.07471068203449249
    2. 's' → logprob: -2.9497106075286865
    3. 'segment' → logprob: -5.324710845947266
    4. 'bl' → logprob: -5.699710845947266
    5. 'nombre' → logprob: -6.074710845947266
    6. 'inter' → logprob: -6.574710845947266
    7. ' segments' → logprob: -6.699710845947266
    8. 'sub' → logprob: -6.699710845947266
    9. 'interval' → logprob: -7.074710845947266
    10. 'blocks' → logprob: -7.199710845947266

Token 634: '-' (ID: 12)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.14856691658496857
    2. '-' → logprob: -2.523566961288452
    3. 'sets' → logprob: -3.648566961288452
    4. 'ense' → logprob: -4.773566722869873
    5. '_sets' → logprob: -5.023566722869873
    6. '_set' → logprob: -5.648566722869873
    7. '_segments' → logprob: -6.023566722869873
    8. 's' → logprob: -6.398566722869873
    9. '_sequences' → logprob: -6.398566722869873
    10. '   ' → logprob: -6.648566722869873

Token 635: 'ensemble' (ID: 37301)
  Prédit: 'ense'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ense' → logprob: -0.005232456140220165
    2. 'ensemble' → logprob: -6.380232334136963
    3. 'segments' → logprob: -7.130232334136963
    4. 'bl' → logprob: -7.505232334136963
    5. 'list' → logprob: -7.505232334136963
    6. 'sets' → logprob: -8.005232810974121
    7. 's' → logprob: -8.380232810974121
    8. 'interval' → logprob: -8.880232810974121
    9. '```' → logprob: -9.005232810974121
    10. 'sé' → logprob: -9.005232810974121

Token 636: ' non' (ID: 2893)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.012895015068352222
    2. 'cont' → logprob: -5.762895107269287
    3. ' cont' → logprob: -6.137895107269287
    4. ' non' → logprob: -6.887895107269287
    5. ',' → logprob: -7.012895107269287
    6. '   ' → logprob: -7.137895107269287
    7. 'strict' → logprob: -7.137895107269287
    8. ' de' → logprob: -7.512895107269287
    9. ')' → logprob: -7.637895107269287
    10. '_cont' → logprob: -8.137894630432129

Token 637: ' v' (ID: 323)
  Prédit: 'vid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vid' → logprob: -0.33745312690734863
    2. ' v' → logprob: -1.5874531269073486
    3. 'v' → logprob: -2.9624531269073486
    4. '_vid' → logprob: -4.4624528884887695
    5. 'vide' → logprob: -4.7124528884887695
    6. '   ' → logprob: -5.2124528884887695
    7. '_v' → logprob: -6.5874528884887695
    8. ' vide' → logprob: -7.8374528884887695
    9. ' ' → logprob: -7.9624528884887695
    10. '_' → logprob: -7.9624528884887695

Token 638: 'ides' (ID: 4105)
  Prédit: 'ides'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ides' → logprob: -0.1790587455034256
    2. 'u' → logprob: -1.9290587902069092
    3. 'ide' → logprob: -4.17905855178833
    4. 'id' → logprob: -6.30405855178833
    5. 'i' → logprob: -8.804059028625488
    6. 'idé' → logprob: -8.804059028625488
    7. '   ' → logprob: -9.054059028625488
    8. 'al' → logprob: -9.179059028625488
    9. 'uids' → logprob: -9.179059028625488
    10. ' ' → logprob: -9.679059028625488

Token 639: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2588271200656891
    2. ',' → logprob: -1.8838270902633667
    3. 'def' → logprob: -4.508827209472656
    4. ' de' → logprob: -5.008827209472656
    5. 'contin' → logprob: -5.133827209472656
    6. ' qui' → logprob: -5.258827209472656
    7. '.' → logprob: -5.383827209472656
    8. 'cont' → logprob: -5.508827209472656
    9. '```' → logprob: -5.633827209472656
    10. ' ' → logprob: -5.758827209472656

Token 640: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0016374544939026237
    2. ',' → logprob: -7.3766374588012695
    3. '.' → logprob: -8.12663745880127
    4. '#' → logprob: -8.75163745880127
    5. ')' → logprob: -8.75163745880127
    6. ' de' → logprob: -9.50163745880127
    7. 'def' → logprob: -9.87663745880127
    8. '       ' → logprob: -10.62663745880127
    9. '    ' → logprob: -10.87663745880127
    10. ' dans' → logprob: -10.87663745880127

Token 641: ' #' (ID: 1069)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7734745144844055
    2. '   ' → logprob: -1.7734744548797607
    3. ' de' → logprob: -2.5234744548797607
    4. 'contin' → logprob: -3.0234744548797607
    5. ' où' → logprob: -3.0234744548797607
    6. '.' → logprob: -3.6484744548797607
    7. 'de' → logprob: -4.02347469329834
    8. ' qui' → logprob: -4.27347469329834
    9. 'cont' → logprob: -4.27347469329834
    10. 'def' → logprob: -4.39847469329834

Token 642: ' d' (ID: 272)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.5951772928237915
    2. ' de' → logprob: -2.220177173614502
    3. '   ' → logprob: -2.345177173614502
    4. 'de' → logprob: -2.470177173614502
    5. 'contin' → logprob: -2.470177173614502
    6. 'def' → logprob: -2.595177173614502
    7. 'où' → logprob: -2.595177173614502
    8. ' où' → logprob: -3.220177173614502
    9. 'dans' → logprob: -3.345177173614502
    10. 'cont' → logprob: -3.470177173614502

Token 643: ''' (ID: 6)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.390725314617157
    2. 'ans' → logprob: -2.5157253742218018
    3. 'u' → logprob: -2.6407253742218018
    4. 'es' → logprob: -3.2657253742218018
    5. 'eux' → logprob: -3.2657253742218018
    6. 'i' → logprob: -4.015725135803223
    7. ''un' → logprob: -4.015725135803223
    8. ''une' → logprob: -4.390725135803223
    9. '[]' → logprob: -5.140725135803223
    10. ''' → logprob: -5.390725135803223

Token 644: 'élé' (ID: 15228)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.0039528608322144
    2. 'i' → logprob: -1.6289528608322144
    3. ''un' → logprob: -2.628952980041504
    4. ''une' → logprob: -2.628952980041504
    5. ''' → logprob: -3.003952980041504
    6. 'eux' → logprob: -3.003952980041504
    7. 'élé' → logprob: -3.503952980041504
    8. 'es' → logprob: -3.753952980041504
    9. 'une' → logprob: -3.878952980041504
    10. '[' → logprob: -3.878952980041504

Token 645: 'ments' (ID: 1626)
  Prédit: 'ments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ments' → logprob: -0.00321336486376822
    2. 'ment' → logprob: -5.753213405609131
    3. 'm' → logprob: -11.128212928771973
    4. '[' → logprob: -13.003212928771973
    5. '```' → logprob: -13.003212928771973
    6. 'men' → logprob: -13.378212928771973
    7. '#' → logprob: -13.378212928771973
    8. 'mente' → logprob: -13.378212928771973
    9. 'me' → logprob: -13.878212928771973
    10. '`' → logprob: -13.878212928771973

Token 646: ' qui' (ID: 2780)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.0539342164993286
    2. ' i' → logprob: -1.1789342164993286
    3. 'i' → logprob: -1.6789342164993286
    4. ',' → logprob: -3.803934097290039
    5. 'dans' → logprob: -4.428934097290039
    6. ' tels' → logprob: -4.678934097290039
    7. ' de' → logprob: -4.803934097290039
    8. ')' → logprob: -4.928934097290039
    9. 'dont' → logprob: -5.053934097290039
    10. ',i' → logprob: -5.053934097290039

Token 647: ' for' (ID: 395)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5059604644775391
    2. 'for' → logprob: -2.255960464477539
    3. ' sont' → logprob: -2.630960464477539
    4. 'perm' → logprob: -2.880960464477539
    5. 'ont' → logprob: -3.005960464477539
    6. 'contin' → logprob: -3.630960464477539
    7. '#' → logprob: -3.630960464477539
    8. ' for' → logprob: -4.630960464477539
    9. ' perm' → logprob: -4.880960464477539
    10. '   ' → logprob: -5.130960464477539

Token 648: 'ment' (ID: 508)
  Prédit: 'ment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ment' → logprob: -2.522638169466518e-05
    2. '#' → logprob: -11.000024795532227
    3. '```' → logprob: -13.375024795532227
    4. 'me' → logprob: -13.625024795532227
    5. 'm' → logprob: -14.375024795532227
    6. '\' → logprob: -14.375024795532227
    7. '   ' → logprob: -14.625024795532227
    8. '=' → logprob: -14.625024795532227
    9. 'ent' → logprob: -14.750024795532227
    10. 'mant' → logprob: -14.875024795532227

Token 649: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -1.051559567451477
    2. 'des' → logprob: -1.176559567451477
    3. 'une' → logprob: -1.676559567451477
    4. ' une' → logprob: -2.0515594482421875
    5. 'un' → logprob: -4.0515594482421875
    6. ' un' → logprob: -5.6765594482421875
    7. '<|end|>' → logprob: -6.4265594482421875
    8. 'contin' → logprob: -7.3015594482421875
    9. 'a' → logprob: -7.6765594482421875
    10. '```' → logprob: -7.9265594482421875

Token 650: ' segments' (ID: 33749)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.22958524525165558
    2. 's' → logprob: -1.7295852899551392
    3. 'bl' → logprob: -4.72958517074585
    4. 'segment' → logprob: -4.85458517074585
    5. 'sé' → logprob: -5.35458517074585
    6. ' segments' → logprob: -6.47958517074585
    7. 'interval' → logprob: -6.85458517074585
    8. 'blocks' → logprob: -6.97958517074585
    9. 'bloc' → logprob: -7.60458517074585
    10. 'sub' → logprob: -7.72958517074585

Token 651: ' cont' (ID: 836)
  Prédit: 'cont'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cont' → logprob: -1.0000300407409668
    2. 'strict' → logprob: -1.0000300407409668
    3. 'contin' → logprob: -2.625030040740967
    4. ' de' → logprob: -2.875030040740967
    5. 'de' → logprob: -3.125030040740967
    6. ' cont' → logprob: -3.250030040740967
    7. '   ' → logprob: -4.625030040740967
    8. ',' → logprob: -4.875030040740967
    9. ' strict' → logprob: -5.375030040740967
    10. ' où' → logprob: -5.375030040740967

Token 652: 'igus' (ID: 79914)
  Prédit: 'igus'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'igus' → logprob: -0.0014555935049429536
    2. 'igu' → logprob: -7.626455783843994
    3. 'inus' → logprob: -7.626455783843994
    4. 'in' → logprob: -8.251455307006836
    5. 'ig' → logprob: -8.626455307006836
    6. 'inu' → logprob: -10.626455307006836
    7. '```' → logprob: -13.001455307006836
    8. 'enus' → logprob: -13.126455307006836
    9. '   ' → logprob: -13.501455307006836
    10. 'iguous' → logprob: -13.876455307006836

Token 653: ' dans' (ID: 2671)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2532840967178345
    2. ',' → logprob: -2.128283977508545
    3. ' dans' → logprob: -3.378283977508545
    4. ' in' → logprob: -4.128283977508545
    5. 'dans' → logprob: -4.128283977508545
    6. '    ' → logprob: -5.253283977508545
    7. ' en' → logprob: -5.503283977508545
    8. '[i' → logprob: -5.753283977508545
    9. ')' → logprob: -5.878283977508545
    10. '    
' → logprob: -5.878283977508545

Token 654: ' num' (ID: 2269)
  Prédit: 'perm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'perm' → logprob: -0.5494281053543091
    2. 'num' → logprob: -1.424428105354309
    3. ' perm' → logprob: -2.2994279861450195
    4. 'lex' → logprob: -3.2994279861450195
    5. ' num' → logprob: -4.4244279861450195
    6. ' lex' → logprob: -4.6744279861450195
    7. ' la' → logprob: -4.7994279861450195
    8. 'la' → logprob: -4.9244279861450195
    9. 'l' → logprob: -6.0494279861450195
    10. 'range' → logprob: -6.5494279861450195

Token 655: '_sorted' (ID: 104993)
  Prédit: '_sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sorted' → logprob: -9.610702363715973e-06
    2. '_' → logprob: -12.125009536743164
    3. 'sorted' → logprob: -13.250009536743164
    4. '   ' → logprob: -13.625009536743164
    5. '_sort' → logprob: -14.875009536743164
    6. '_s' → logprob: -15.625009536743164
    7. ' _' → logprob: -15.875009536743164
    8. '__' → logprob: -16.500009536743164
    9. '```' → logprob: -17.125009536743164
    10. '_list' → logprob: -17.125009536743164

Token 656: ' dans' (ID: 2671)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0030246488749980927
    2. ',' → logprob: -6.253024578094482
    3. '
' → logprob: -8.00302505493164
    4. 'def' → logprob: -8.62802505493164
    5. '    
' → logprob: -8.62802505493164
    6. '.' → logprob: -8.87802505493164
    7. '#' → logprob: -9.62802505493164
    8. ',
' → logprob: -10.50302505493164
    9. '```' → logprob: -10.50302505493164
    10. ')' → logprob: -10.75302505493164

Token 657: ' lesquels' (ID: 106476)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.2712761461734772
    2. 'la' → logprob: -2.3962762355804443
    3. ' lesquels' → logprob: -2.5212762355804443
    4. 'le' → logprob: -3.7712762355804443
    5. 'perm' → logprob: -4.021275997161865
    6. 'l' → logprob: -4.271275997161865
    7. 'une' → logprob: -5.896275997161865
    8. 'len' → logprob: -6.521275997161865
    9. 'which' → logprob: -7.146275997161865
    10. 'des' → logprob: -7.396275997161865

Token 658: '
' (ID: 198)
  Prédit: 'perm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'perm' → logprob: -0.004347159992903471
    2. ' perm' → logprob: -6.004347324371338
    3. 'all' → logprob: -6.879347324371338
    4. '   ' → logprob: -7.379347324371338
    5. 'for' → logprob: -9.12934684753418
    6. 'per' → logprob: -10.87934684753418
    7. ' all' → logprob: -10.87934684753418
    8. 'la' → logprob: -11.00434684753418
    9. '       ' → logprob: -11.25434684753418
    10. 'tout' → logprob: -11.75434684753418

Token 659: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04749881103634834
    2. 'perm' → logprob: -3.1724987030029297
    3. ' perm' → logprob: -5.79749870300293
    4. ' la' → logprob: -7.79749870300293
    5. 'la' → logprob: -8.04749870300293
    6. 'all' → logprob: -9.04749870300293
    7. '  ' → logprob: -9.29749870300293
    8. 'tout' → logprob: -9.79749870300293
    9. '    ' → logprob: -9.92249870300293
    10. ' les' → logprob: -9.92249870300293

Token 660: ' #' (ID: 1069)
  Prédit: 'perm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'perm' → logprob: -0.009220344014465809
    2. 'all' → logprob: -5.259220123291016
    3. ' perm' → logprob: -6.259220123291016
    4. '   ' → logprob: -6.884220123291016
    5. 'for' → logprob: -7.884220123291016
    6. 'tout' → logprob: -8.134220123291016
    7. 't' → logprob: -9.134220123291016
    8. 'la' → logprob: -9.759220123291016
    9. 'per' → logprob: -10.259220123291016
    10. ' all' → logprob: -10.509220123291016

Token 661: ' perm' (ID: 5961)
  Prédit: 'perm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'perm' → logprob: -0.012919493950903416
    2. ' perm' → logprob: -5.1379194259643555
    3. 'all' → logprob: -5.7629194259643555
    4. 'for' → logprob: -6.0129194259643555
    5. 'tout' → logprob: -7.7629194259643555
    6. 'la' → logprob: -8.512919425964355
    7. 'pour' → logprob: -8.887919425964355
    8. 't' → logprob: -9.012919425964355
    9. '   ' → logprob: -9.262919425964355
    10. 'les' → logprob: -9.512919425964355

Token 662: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0003312937042210251
    2. '[' → logprob: -8.500330924987793
    3. '\[' → logprob: -9.500330924987793
    4. '```' → logprob: -10.875330924987793
    5. ' [' → logprob: -11.250330924987793
    6. '==' → logprob: -12.125330924987793
    7. 'i' → logprob: -12.625330924987793
    8. ' ==' → logprob: -13.125330924987793
    9. '   ' → logprob: -13.250330924987793
    10. '[j' → logprob: -13.875330924987793

Token 663: ']=' (ID: 9539)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.17506474256515503
    2. '==' → logprob: -2.8000648021698
    3. ']==' → logprob: -2.8000648021698
    4. ' ==' → logprob: -3.6750648021698
    5. '[i' → logprob: -4.425064563751221
    6. ' ]' → logprob: -6.925064563751221
    7. '[' → logprob: -8.425065040588379
    8. '```' → logprob: -8.925065040588379
    9. '=' → logprob: -9.425065040588379
    10. ']=' → logprob: -9.800065040588379

Token 664: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -3.214019307051785e-05
    2. ' i' → logprob: -10.375032424926758
    3. '   ' → logprob: -14.750032424926758
    4. 'perm' → logprob: -16.000032424926758
    5. '	i' → logprob: -16.125032424926758
    6. ' ' → logprob: -16.375032424926758
    7. '```' → logprob: -17.000032424926758
    8. '    ' → logprob: -17.125032424926758
    9. '[i' → logprob: -17.125032424926758
    10. '  ' → logprob: -17.125032424926758

Token 665: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0019449377432465553
    2. '
' → logprob: -6.7519450187683105
    3. '    
' → logprob: -7.8769450187683105
    4. 'count' → logprob: -8.126944541931152
    5. 'def' → logprob: -10.626944541931152
    6. '```' → logprob: -11.376944541931152
    7. '#' → logprob: -11.751944541931152
    8. 'result' → logprob: -11.751944541931152
    9. 'segments' → logprob: -11.876944541931152
    10. 'res' → logprob: -11.876944541931152

Token 666: ' tous' (ID: 10688)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.36585694551467896
    2. 't' → logprob: -2.365856885910034
    3. 'tout' → logprob: -2.365856885910034
    4. ' i' → logprob: -2.490856885910034
    5. 'all' → logprob: -4.365857124328613
    6. ' tous' → logprob: -5.240857124328613
    7. 'la' → logprob: -5.740857124328613
    8. 'l' → logprob: -5.740857124328613
    9. '(i' → logprob: -6.115857124328613
    10. ' ' → logprob: -6.740857124328613

Token 667: ' les' (ID: 1341)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3490738272666931
    2. ' i' → logprob: -1.224073886871338
    3. ' ' → logprob: -8.22407341003418
    4. '<|end|>' → logprob: -8.97407341003418
    5. '```' → logprob: -10.34907341003418
    6. '[i' → logprob: -10.34907341003418
    7. '.' → logprob: -10.34907341003418
    8. '  ' → logprob: -11.09907341003418
    9. ',' → logprob: -11.09907341003418
    10. '   ' → logprob: -11.47407341003418

Token 668: ' éléments' (ID: 57375)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00978961680084467
    2. ' i' → logprob: -5.13478946685791
    3. 'indices' → logprob: -5.63478946685791
    4. ' indices' → logprob: -9.13478946685791
    5. 'élé' → logprob: -9.38478946685791
    6. '```' → logprob: -10.50978946685791
    7. 'positions' → logprob: -11.25978946685791
    8. ' ' → logprob: -11.50978946685791
    9. 'indexes' → logprob: -11.50978946685791
    10. 'indice' → logprob: -12.25978946685791

Token 669: ' du' (ID: 1462)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10228259861469269
    2. '.' → logprob: -2.4772825241088867
    3. ',' → logprob: -4.602282524108887
    4. '    
' → logprob: -7.102282524108887
    5. ',
' → logprob: -7.727282524108887
    6. '.
' → logprob: -7.852282524108887
    7. '
' → logprob: -8.352282524108887
    8. ':' → logprob: -8.602282524108887
    9. ' i' → logprob: -8.602282524108887
    10. '[i' → logprob: -8.602282524108887

Token 670: ' segment' (ID: 14806)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.00026968008023686707
    2. ' segment' → logprob: -8.375269889831543
    3. 'bloc' → logprob: -11.250269889831543
    4. 'seg' → logprob: -11.625269889831543
    5. 'segments' → logprob: -12.250269889831543
    6. 'block' → logprob: -12.875269889831543
    7. '```' → logprob: -13.000269889831543
    8. '_segment' → logprob: -13.125269889831543
    9. '(segment' → logprob: -13.250269889831543
    10. 'interval' → logprob: -13.500269889831543

Token 671: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0049939402379095554
    2. '
' → logprob: -6.004993915557861
    3. '    
' → logprob: -6.379993915557861
    4. 'count' → logprob: -7.379993915557861
    5. 'segments' → logprob: -9.75499439239502
    6. 'def' → logprob: -9.87999439239502
    7. 'res' → logprob: -11.37999439239502
    8. 'i' → logprob: -11.50499439239502
    9. '#' → logprob: -11.62999439239502
    10. '```' → logprob: -11.87999439239502

Token 672: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03232355788350105
    2. 'count' → logprob: -3.6573235988616943
    3. '    
' → logprob: -6.282323360443115
    4. '```' → logprob: -6.657323360443115
    5. 'res' → logprob: -6.907323360443115
    6. '
' → logprob: -7.032323360443115
    7. 'segments' → logprob: -7.782323360443115
    8. 'i' → logprob: -9.532323837280273
    9. 'dp' → logprob: -9.657323837280273
    10. 'counts' → logprob: -9.782323837280273

Token 673: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14885735511779785
    2. 'count' → logprob: -2.023857355117798
    3. 'res' → logprob: -6.023857116699219
    4. 'segments' → logprob: -6.648857116699219
    5. '#' (adapté à ' #') → logprob: -7.398857116699219
    6. 'valid' → logprob: -7.648857116699219
    7. '    
' → logprob: -8.273857116699219
    8. 'result' → logprob: -8.273857116699219
    9. '```' → logprob: -8.648857116699219
    10. 'cnt' → logprob: -9.023857116699219

Token 674: ' En' (ID: 2130)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.6069923043251038
    2. '   ' → logprob: -0.8569923043251038
    3. 'segments' → logprob: -4.481992244720459
    4. 'start' → logprob: -5.106992244720459
    5. 'i' → logprob: -5.106992244720459
    6. 'res' → logprob: -6.231992244720459
    7. 'valid' → logprob: -6.731992244720459
    8. 'cnt' → logprob: -6.856992244720459
    9. 'counts' → logprob: -7.481992244720459
    10. 'length' → logprob: -7.481992244720459

Token 675: ' effet' (ID: 24342)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.7797315120697021
    2. ' effet' → logprob: -2.154731512069702
    3. ' continu' → logprob: -2.154731512069702
    4. 'i' → logprob: -2.279731512069702
    5. ' somme' → logprob: -2.529731512069702
    6. 'suite' → logprob: -2.529731512069702
    7. ' résumé' → logprob: -2.779731512069702
    8. ' i' → logprob: -3.279731512069702
    9. 'def' → logprob: -3.404731512069702
    10. ' fait' → logprob: -3.654731512069702

Token 676: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22948716580867767
    2. ',' → logprob: -1.6044871807098389
    3. ' ,' → logprob: -6.60448694229126
    4. '
' → logprob: -7.22948694229126
    5. ',
' → logprob: -7.72948694229126
    6. ' for' → logprob: -8.229487419128418
    7. '#' → logprob: -8.479487419128418
    8. 'for' → logprob: -8.979487419128418
    9. '    ' → logprob: -9.104487419128418
    10. '    
' → logprob: -9.104487419128418

Token 677: ' si' (ID: 1784)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39083948731422424
    2. 'count' → logprob: -1.6408394575119019
    3. 'i' → logprob: -2.8908395767211914
    4. 'segments' → logprob: -3.3908395767211914
    5. 'start' → logprob: -3.8908395767211914
    6. ' i' → logprob: -4.640839576721191
    7. '#' → logprob: -6.515839576721191
    8. 'length' → logprob: -6.640839576721191
    9. ' count' → logprob: -6.765839576721191
    10. ' segments' → logprob: -6.890839576721191

Token 678: ' l' (ID: 305)
  Prédit: ' perm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' perm' → logprob: -0.5357730388641357
    2. 'perm' → logprob: -1.0357730388641357
    3. ' all' → logprob: -3.7857730388641357
    4. ' on' → logprob: -4.285773277282715
    5. 'all' → logprob: -5.410773277282715
    6. ' tous' → logprob: -5.785773277282715
    7. ' les' → logprob: -6.160773277282715
    8. ' for' → logprob: -6.285773277282715
    9. ' la' → logprob: -6.410773277282715
    10. ' not' → logprob: -6.660773277282715

Token 679: ''ordre' (ID: 124753)
  Prédit: 'perm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'perm' → logprob: -0.6414937376976013
    2. 'i' → logprob: -1.891493797302246
    3. ' perm' → logprob: -2.266493797302246
    4. 'e' → logprob: -2.766493797302246
    5. 'a' → logprob: -3.266493797302246
    6. ''ensemble' → logprob: -3.641493797302246
    7. ''' → logprob: -3.766493797302246
    8. ''on' → logprob: -4.016493797302246
    9. ''i' → logprob: -4.516493797302246
    10. '#' → logprob: -4.766493797302246

Token 680: ' de' (ID: 334)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.1813836544752121
    2. '_' → logprob: -2.4313836097717285
    3. ' est' → logprob: -3.8063836097717285
    4. '[' → logprob: -4.1813836097717285
    5. '   ' → logprob: -5.0563836097717285
    6. 'est' → logprob: -5.5563836097717285
    7. ' des' → logprob: -5.6813836097717285
    8. 'perm' → logprob: -5.6813836097717285
    9. ' [' → logprob: -6.1813836097717285
    10. ' de' → logprob: -6.3063836097717285

Token 681: ' position' (ID: 4010)
  Prédit: 'perm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'perm' → logprob: -0.5395705699920654
    2. 'num' → logprob: -1.7895705699920654
    3. 'i' → logprob: -2.6645705699920654
    4. 'l' → logprob: -2.7895705699920654
    5. ' perm' → logprob: -3.4145705699920654
    6. 'la' → logprob: -4.0395708084106445
    7. 'lex' → logprob: -4.5395708084106445
    8. 'per' → logprob: -4.7895708084106445
    9. ' num' → logprob: -5.0395708084106445
    10. ' l' → logprob: -5.0395708084106445

Token 682: ' lex' (ID: 37772)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5082003474235535
    2. '[i' → logprob: -1.2582004070281982
    3. 's' → logprob: -3.1332004070281982
    4. ' i' → logprob: -4.133200168609619
    5. 'i' → logprob: -4.383200168609619
    6. ' ==' → logprob: -4.758200168609619
    7. '   ' → logprob: -5.008200168609619
    8. '[' → logprob: -5.633200168609619
    9. '==' → logprob: -5.758200168609619
    10. '=' → logprob: -5.758200168609619

Token 683: ' est' (ID: 893)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7670552730560303
    2. ' ==' → logprob: -1.5170552730560303
    3. '   ' → logprob: -2.3920552730560303
    4. '==' → logprob: -2.7670552730560303
    5. '[i' → logprob: -2.8920552730560303
    6. 'ique' → logprob: -3.7670552730560303
    7. ' est' → logprob: -4.017055511474609
    8. '(i' → logprob: -4.642055511474609
    9. 'est' → logprob: -5.142055511474609
    10. 'icale' → logprob: -5.517055511474609

Token 684: ' ident' (ID: 3951)
  Prédit: 'ident'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ident' → logprob: -0.9874907732009888
    2. 'égal' → logprob: -1.2374907732009888
    3. 'strict' → logprob: -1.8624907732009888
    4. 'i' → logprob: -3.112490653991699
    5. 'exact' → logprob: -3.362490653991699
    6. 'continu' → logprob: -3.987490653991699
    7. 'continue' → logprob: -4.112490653991699
    8. 'le' → logprob: -4.237490653991699
    9. 'cro' → logprob: -4.612490653991699
    10. 'respect' → logprob: -5.737490653991699

Token 685: 'ique' (ID: 2222)
  Prédit: 'ique'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ique' → logprob: -0.005556978285312653
    2. 'que' → logprob: -6.130557060241699
    3. 'ical' → logprob: -6.380557060241699
    4. 't' → logprob: -7.005557060241699
    5. '#' → logprob: -8.1305570602417
    6. 'cal' → logprob: -9.5055570602417
    7. 'e' → logprob: -10.1305570602417
    8. '   ' → logprob: -10.5055570602417
    9. 'iq' → logprob: -10.5055570602417
    10. 'iqué' → logprob: -10.5055570602417

Token 686: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.5207058787345886
    2. ',' → logprob: -2.1457059383392334
    3. '   ' → logprob: -2.1457059383392334
    4. ' et' → logprob: -2.5207059383392334
    5. '=' → logprob: -3.8957059383392334
    6. ' ' → logprob: -4.020705699920654
    7. ' aux' → logprob: -4.270705699920654
    8. 'à' → logprob: -4.645705699920654
    9. 'et' → logprob: -4.895705699920654
    10. ' =' → logprob: -5.395705699920654

Token 687: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.17647653818130493
    2. 'i' → logprob: -2.55147647857666
    3. 'num' → logprob: -3.30147647857666
    4. 'la' → logprob: -3.67647647857666
    5. 'perm' → logprob: -4.30147647857666
    6. ' l' → logprob: -5.42647647857666
    7. ' i' → logprob: -7.67647647857666
    8. '[i' → logprob: -7.80147647857666
    9. 'pos' → logprob: -7.92647647857666
    10. 'position' → logprob: -8.30147647857666

Token 688: ''ordre' (ID: 124753)
  Prédit: ''ordre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''ordre' → logprob: -0.6041088700294495
    2. 'i' → logprob: -1.1041088104248047
    3. ''i' → logprob: -2.2291088104248047
    4. ''' → logprob: -5.229108810424805
    5. 'ordre' → logprob: -5.479108810424805
    6. '[i' → logprob: -7.229108810424805
    7. 'e' → logprob: -7.229108810424805
    8. 'num' → logprob: -7.229108810424805
    9. ''ident' → logprob: -8.354108810424805
    10. 'order' → logprob: -8.479108810424805

Token 689: ' numérique' (ID: 73962)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.9375939965248108
    2. ' numérique' → logprob: -0.9375939965248108
    3. '[i' → logprob: -2.312593936920166
    4. '   ' → logprob: -3.187593936920166
    5. ' num' → logprob: -3.687593936920166
    6. ' des' → logprob: -4.062593936920166
    7. 'des' → logprob: -5.062593936920166
    8. 'numer' → logprob: -5.437593936920166
    9. ' ' → logprob: -5.687593936920166
    10. '_num' → logprob: -5.687593936920166

Token 690: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7067328095436096
    2. '   ' → logprob: -0.8317328095436096
    3. ' pour' → logprob: -3.581732749938965
    4. 'pour' → logprob: -4.206732749938965
    5. 'for' → logprob: -4.956732749938965
    6. ' for' → logprob: -5.206732749938965
    7. 'dans' → logprob: -5.581732749938965
    8. ' sur' → logprob: -5.581732749938965
    9. 'sur' → logprob: -5.956732749938965
    10. ',
' → logprob: -6.331732749938965

Token 691: '   ' (ID: 271)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2606061100959778
    2. '   ' → logprob: -1.510606050491333
    3. ':' → logprob: -6.260606288909912
    4. ',
' → logprob: -6.260606288909912
    5. 'for' → logprob: -6.885606288909912
    6. ' for' → logprob: -6.885606288909912
    7. ' pour' → logprob: -7.010606288909912
    8. '#' → logprob: -8.260605812072754
    9. '[i' → logprob: -8.260605812072754
    10. 'pour' → logprob: -8.385605812072754

Token 692: ' #' (ID: 1069)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.46493420004844666
    2. ':' → logprob: -1.589934229850769
    3. '[i' → logprob: -2.2149341106414795
    4. '   ' → logprob: -3.4649341106414795
    5. ' and' → logprob: -4.589934349060059
    6. '[' → logprob: -5.964934349060059
    7. '.' → logprob: -5.964934349060059
    8. ''' → logprob: -6.464934349060059
    9. ' ,' → logprob: -6.464934349060059
    10. ' ' → logprob: -6.714934349060059

Token 693: ' pour' (ID: 1930)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5176891088485718
    2. '   ' → logprob: -1.0176891088485718
    3. 'for' → logprob: -4.517689228057861
    4. 'pour' → logprob: -4.642689228057861
    5. '#' → logprob: -5.267689228057861
    6. 'dans' → logprob: -6.017689228057861
    7. ' for' → logprob: -6.267689228057861
    8. 'contin' → logprob: -6.267689228057861
    9. ' pour' → logprob: -6.642689228057861
    10. 'n' → logprob: -7.017689228057861

Token 694: ' tous' (ID: 10688)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.5519821643829346
    2. ' chaque' → logprob: -1.5519821643829346
    3. ' i' → logprob: -1.9269821643829346
    4. 't' → logprob: -1.9269821643829346
    5. 'un' → logprob: -2.6769821643829346
    6. 'tout' → logprob: -2.6769821643829346
    7. ' tous' → logprob: -3.5519821643829346
    8. ' un' → logprob: -3.5519821643829346
    9. 'le' → logprob: -3.9269821643829346
    10. 'l' → logprob: -4.0519819259643555

Token 695: ' les' (ID: 1341)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.38821324706077576
    2. ' i' → logprob: -1.1382132768630981
    3. ',' → logprob: -8.263213157653809
    4. ' ' → logprob: -8.513213157653809
    5. '[i' → logprob: -8.513213157653809
    6. '_i' → logprob: -9.138213157653809
    7. 'indices' → logprob: -9.263213157653809
    8. '   ' → logprob: -9.513213157653809
    9. ',i' → logprob: -10.138213157653809
    10. ' indices' → logprob: -10.138213157653809

Token 696: ' éléments' (ID: 57375)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4453699290752411
    2. 'élé' → logprob: -1.8203699588775635
    3. ' i' → logprob: -2.0703699588775635
    4. 'indices' → logprob: -3.1953699588775635
    5. ' indices' → logprob: -4.820369720458984
    6. ' éléments' → logprob: -4.820369720458984
    7. 'elements' → logprob: -5.320369720458984
    8. 'segments' → logprob: -6.070369720458984
    9. ' elements' → logprob: -6.945369720458984
    10. ' ]' → logprob: -7.195369720458984

Token 697: ' du' (ID: 1462)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2945868670940399
    2. '   ' → logprob: -2.0445868968963623
    3. ' de' → logprob: -2.6695868968963623
    4. ' i' → logprob: -3.6695868968963623
    5. '[i' → logprob: -4.544586658477783
    6. ' dans' → logprob: -5.544586658477783
    7. ',i' → logprob: -5.919586658477783
    8. 'dans' → logprob: -6.169586658477783
    9. ' ,' → logprob: -6.294586658477783
    10. ':' → logprob: -6.544586658477783

Token 698: ' segment' (ID: 14806)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.00038455575122497976
    2. ' segment' → logprob: -8.000384330749512
    3. 'bloc' → logprob: -11.375384330749512
    4. 'segments' → logprob: -11.750384330749512
    5. 'seg' → logprob: -12.125384330749512
    6. 'interval' → logprob: -12.250384330749512
    7. 'block' → logprob: -12.625384330749512
    8. '_segment' → logprob: -12.875384330749512
    9. 's' → logprob: -12.875384330749512
    10. 'subset' → logprob: -13.000384330749512

Token 699: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6807609796524048
    2. ',' → logprob: -1.3057609796524048
    3. ':' → logprob: -1.5557609796524048
    4. ':
' → logprob: -5.555760860443115
    5. ',
' → logprob: -6.180760860443115
    6. ' :' → logprob: -6.180760860443115
    7. '.' → logprob: -6.680760860443115
    8. ' ,' → logprob: -6.930760860443115
    9. '[i' → logprob: -8.055761337280273
    10. '       ' → logprob: -8.305761337280273

Token 700: ' alors' (ID: 17971)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011887984350323677
    2. '#' → logprob: -4.511888027191162
    3. 'result' → logprob: -8.261887550354004
    4. 'segments' → logprob: -9.386887550354004
    5. ' #' → logprob: -9.511887550354004
    6. 'i' → logprob: -9.761887550354004
    7. 'res' → logprob: -9.886887550354004
    8. '       ' → logprob: -10.011887550354004
    9. 'indice' → logprob: -10.511887550354004
    10. ' on' → logprob: -10.511887550354004

Token 701: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16528798639774323
    2. 'le' → logprob: -2.665287971496582
    3. '#' → logprob: -3.165287971496582
    4. 'la' → logprob: -4.415287971496582
    5. 'for' → logprob: -4.915287971496582
    6. 'ces' → logprob: -5.915287971496582
    7. 'cha' → logprob: -6.040287971496582
    8. 'on' → logprob: -6.040287971496582
    9. 'les' → logprob: -6.165287971496582
    10. 'ce' → logprob: -6.290287971496582

Token 702: ' tout' (ID: 5501)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5288103222846985
    2. ' i' → logprob: -0.9038103222846985
    3. ' chaque' → logprob: -6.653810501098633
    4. ' tous' → logprob: -7.653810501098633
    5. 'tout' → logprob: -7.778810501098633
    6. ' val' → logprob: -7.903810501098633
    7. ' ' → logprob: -8.028810501098633
    8. ' tout' → logprob: -8.403810501098633
    9. ' la' → logprob: -8.403810501098633
    10. 'val' → logprob: -8.403810501098633

Token 703: ' sous' (ID: 14487)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.22883810102939606
    2. 'i' → logprob: -1.6038380861282349
    3. ' x' → logprob: -7.353837966918945
    4. 'x' → logprob: -7.353837966918945
    5. 'élé' → logprob: -7.853837966918945
    6. ' ' → logprob: -7.978837966918945
    7. '```' → logprob: -8.603837966918945
    8. ' subset' → logprob: -8.978837966918945
    9. ' couple' → logprob: -8.978837966918945
    10. ' ' → logprob: -9.353837966918945

Token 704: '-' (ID: 12)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.032060377299785614
    2. '   ' → logprob: -4.157060146331787
    3. '[i' → logprob: -5.657060146331787
    4. '-' → logprob: -6.282060146331787
    5. '[' → logprob: -7.032060146331787
    6. '_i' → logprob: -7.032060146331787
    7. '=' → logprob: -7.282060146331787
    8. ',' → logprob: -7.657060146331787
    9. 'i' → logprob: -7.657060146331787
    10. 'set' → logprob: -7.657060146331787

Token 705: 'ensemble' (ID: 37301)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.45086199045181274
    2. 'ensemble' → logprob: -1.075861930847168
    3. 'i' → logprob: -5.325861930847168
    4. 'segments' → logprob: -5.450861930847168
    5. 'liste' → logprob: -5.700861930847168
    6. 'ense' → logprob: -6.075861930847168
    7. '_segment' → logprob: -6.325861930847168
    8. '[i' → logprob: -6.825861930847168
    9. 'list' → logprob: -7.325861930847168
    10. 'seg' → logprob: -7.575861930847168

Token 706: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.506995677947998
    2. '[i' → logprob: -1.256995677947998
    3. ' de' → logprob: -2.881995677947998
    4. ' i' → logprob: -4.131995677947998
    5. ',' → logprob: -4.506995677947998
    6. ' contiguous' → logprob: -5.631995677947998
    7. ' continu' → logprob: -5.881995677947998
    8. ' of' → logprob: -5.881995677947998
    9. '```' → logprob: -6.006995677947998
    10. 'cont' → logprob: -6.131995677947998

Token 707: ' ce' (ID: 2357)
  Prédit: ' ce'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ce' → logprob: -0.061245858669281006
    2. 'ces' → logprob: -3.311245918273926
    3. 'ce' → logprob: -5.436245918273926
    4. ' ces' → logprob: -5.436245918273926
    5. 'i' → logprob: -5.936245918273926
    6. 'cet' → logprob: -6.061245918273926
    7. ' cet' → logprob: -6.186245918273926
    8. ' cette' → logprob: -6.311245918273926
    9. 'cel' → logprob: -6.436245918273926
    10. '```' → logprob: -6.811245918273926

Token 708: '
' (ID: 198)
  Prédit: ' segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' segment' → logprob: -0.4844800531864166
    2. 'segment' → logprob: -1.1094800233840942
    3. '_segment' → logprob: -3.734480142593384
    4. '_' → logprob: -3.859480142593384
    5. ' _' → logprob: -5.609479904174805
    6. ' ' → logprob: -7.109479904174805
    7. ' ]' → logprob: -7.359479904174805
    8. '```' → logprob: -7.359479904174805
    9. '   ' → logprob: -7.859479904174805
    10. '
' → logprob: -7.984479904174805

Token 709: '   ' (ID: 271)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.540033757686615
    2. ' segment' → logprob: -1.0400338172912598
    3. '_segment' → logprob: -3.2900338172912598
    4. '_' → logprob: -4.04003381729126
    5. ' _' → logprob: -6.04003381729126
    6. '[i' → logprob: -7.41503381729126
    7. 'i' → logprob: -7.41503381729126
    8. ' i' → logprob: -7.66503381729126
    9. 'seg' → logprob: -7.79003381729126
    10. ' #' → logprob: -7.91503381729126

Token 710: ' #' (ID: 1069)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.07892569899559021
    2. ' segment' → logprob: -2.703925609588623
    3. '#' (adapté à ' #') → logprob: -5.953925609588623
    4. '   ' → logprob: -6.203925609588623
    5. ' #' → logprob: -6.953925609588623
    6. 'i' → logprob: -7.578925609588623
    7. '```' → logprob: -7.828925609588623
    8. '_segment' → logprob: -7.953925609588623
    9. 'bloc' → logprob: -8.203926086425781
    10. '
' → logprob: -8.203926086425781

Token 711: ' segment' (ID: 14806)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.126250222325325
    2. 'i' → logprob: -2.2512502670288086
    3. ' segment' → logprob: -5.626250267028809
    4. '#' → logprob: -6.501250267028809
    5. '
' → logprob: -6.751250267028809
    6. ' i' → logprob: -6.751250267028809
    7. '[i' → logprob: -7.001250267028809
    8. 'range' → logprob: -7.001250267028809
    9. '```' → logprob: -7.001250267028809
    10. 'num' → logprob: -7.126250267028809

Token 712: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2278558611869812
    2. '   ' → logprob: -2.352855920791626
    3. ':' → logprob: -2.477855920791626
    4. ',
' → logprob: -4.352855682373047
    5. ':
' → logprob: -4.602855682373047
    6. ' ,' → logprob: -7.227855682373047
    7. '[i' → logprob: -7.852855682373047
    8. ' :' → logprob: -8.477855682373047
    9. '```' → logprob: -9.727855682373047
    10. ' :
' → logprob: -9.852855682373047

Token 713: ' la' (ID: 557)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1380672454833984
    2. ' le' → logprob: -1.1380672454833984
    3. ' la' → logprob: -1.2630672454833984
    4. '#' → logprob: -3.8880672454833984
    5. ' #' → logprob: -4.013067245483398
    6. ' on' → logprob: -4.763067245483398
    7. 'le' → logprob: -5.013067245483398
    8. 'la' → logprob: -5.263067245483398
    9. '       ' → logprob: -5.388067245483398
    10. ' the' → logprob: -6.263067245483398

Token 714: ' propriété' (ID: 87730)
  Prédit: 'ordre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ordre' → logprob: -1.325333595275879
    2. 'condition' → logprob: -2.450333595275879
    3. 'prem' → logprob: -2.575333595275879
    4. ' condition' → logprob: -2.700333595275879
    5. ' taille' → logprob: -2.825333595275879
    6. ' ordre' → logprob: -3.075333595275879
    7. ' perm' → logprob: -3.450333595275879
    8. ' double' → logprob: -3.700333595275879
    9. ' prochaine' → logprob: -3.825333595275879
    10. 's' → logprob: -3.950333595275879

Token 715: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.05358124524354935
    2. ' de' → logprob: -4.428581237792969
    3. 'est' → logprob: -4.553581237792969
    4. 's' → logprob: -5.303581237792969
    5. ' continue' → logprob: -5.303581237792969
    6. ' s' → logprob: -5.428581237792969
    7. ' #' → logprob: -5.553581237792969
    8. '   ' → logprob: -6.053581237792969
    9. ' ' → logprob: -6.928581237792969
    10. '_' → logprob: -6.928581237792969

Token 716: ' vér' (ID: 42524)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.11363514512777328
    2. '   ' → logprob: -3.2386350631713867
    3. ' True' → logprob: -3.4886350631713867
    4. 'True' → logprob: -4.738635063171387
    5. ' vraie' → logprob: -4.738635063171387
    6. ' respect' → logprob: -5.363635063171387
    7. ' vér' → logprob: -5.863635063171387
    8. '
' → logprob: -6.113635063171387
    9. '```' → logprob: -6.113635063171387
    10. 'true' → logprob: -6.363635063171387

Token 717: 'ifiée' (ID: 88506)
  Prédit: 'ifiée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifiée' → logprob: -0.0033725807443261147
    2. 'ifi' → logprob: -6.878372669219971
    3. 'fi' → logprob: -7.253372669219971
    4. 'if' → logprob: -7.378372669219971
    5. 'ifie' → logprob: -7.753372669219971
    6. 'i' → logprob: -8.003372192382812
    7. 'ifiable' → logprob: -9.503372192382812
    8. 'ifié' → logprob: -9.628372192382812
    9. '
' → logprob: -10.503372192382812
    10. 'ifiés' → logprob: -11.378372192382812

Token 718: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012143334373831749
    2. '    
' → logprob: -4.637143135070801
    3. '
' → logprob: -6.512143135070801
    4. '.' → logprob: -7.387143135070801
    5. '.
' → logprob: -9.0121431350708
    6. ',' → logprob: -10.3871431350708
    7. '  
' → logprob: -10.6371431350708
    8. '
    
' → logprob: -10.6371431350708
    9. '    
    
' → logprob: -11.1371431350708
    10. '   
' → logprob: -11.3871431350708

Token 719: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09729001671075821
    2. 'count' → logprob: -2.5972900390625
    3. 'res' → logprob: -5.3472900390625
    4. 'i' → logprob: -5.5972900390625
    5. '```' → logprob: -5.8472900390625
    6. 'segments' → logprob: -5.9722900390625
    7. 'result' → logprob: -6.7222900390625
    8. '    
' → logprob: -7.3472900390625
    9. '
' → logprob: -7.4722900390625
    10. 'start' → logprob: -7.4722900390625

Token 720: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -4.513339445111342e-05
    2. 'count' → logprob: -10.875044822692871
    3. 'segments' → logprob: -11.000044822692871
    4. '    
' → logprob: -12.625044822692871
    5. 'res' → logprob: -12.750044822692871
    6. '```' → logprob: -13.375044822692871
    7. 'i' → logprob: -14.750044822692871
    8. 'counts' → logprob: -14.750044822692871
    9. 'valid' → logprob: -15.250044822692871
    10. '
' → logprob: -15.250044822692871

Token 721: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.43534085154533386
    2. 'count' → logprob: -1.1853408813476562
    3. 'segments' → logprob: -3.8103408813476562
    4. 'i' → logprob: -4.185340881347656
    5. 'res' → logprob: -5.185340881347656
    6. 'valid' → logprob: -6.560340881347656
    7. 'blocks' → logprob: -6.935340881347656
    8. 'result' → logprob: -7.685340881347656
    9. 'start' → logprob: -8.185340881347656
    10. 'cnt' → logprob: -8.435340881347656

Token 722: ' Ainsi' (ID: 65093)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.027721703052520752
    2. 'i' → logprob: -4.652721881866455
    3. 'res' → logprob: -4.652721881866455
    4. 'segments' → logprob: -5.277721881866455
    5. 'result' → logprob: -6.777721881866455
    6. 'total' → logprob: -7.027721881866455
    7. 'ans' → logprob: -8.027721405029297
    8. 'blocks' → logprob: -8.152721405029297
    9. 'answer' → logprob: -8.652721405029297
    10. 'cnt' → logprob: -9.277721405029297

Token 723: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5765509605407715
    2. 'count' → logprob: -1.0765509605407715
    3. 'i' → logprob: -2.8265509605407715
    4. 'segments' → logprob: -4.2015509605407715
    5. 'res' → logprob: -4.3265509605407715
    6. 'total' → logprob: -5.0765509605407715
    7. ' i' → logprob: -6.8265509605407715
    8. 'result' → logprob: -6.9515509605407715
    9. 'ans' → logprob: -7.5765509605407715
    10. ' count' → logprob: -8.70155143737793

Token 724: ' le' (ID: 505)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.5524736642837524
    2. 'i' → logprob: -1.3024736642837524
    3. ' i' → logprob: -3.302473545074463
    4. 'segments' → logprob: -3.302473545074463
    5. 'res' → logprob: -3.677473545074463
    6. 'total' → logprob: -4.427473545074463
    7. ' count' → logprob: -4.427473545074463
    8. '   ' → logprob: -4.677473545074463
    9. 'start' → logprob: -5.302473545074463
    10. ' res' → logprob: -5.552473545074463

Token 725: ' tableau' (ID: 67053)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.5241894125938416
    2. 'i' → logprob: -1.0241894721984863
    3. '   ' → logprob: -4.149189472198486
    4. 'res' → logprob: -4.524189472198486
    5. 'segments' → logprob: -5.274189472198486
    6. 'mod' → logprob: -5.399189472198486
    7. 'start' → logprob: -5.649189472198486
    8. 'answer' → logprob: -6.149189472198486
    9. 'ans' → logprob: -6.274189472198486
    10. 'total' → logprob: -6.774189472198486

Token 726: ' perm' (ID: 5961)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.3424949049949646
    2. '   ' → logprob: -1.3424949645996094
    3. ' =' → logprob: -4.592494964599609
    4. '=' → logprob: -5.842494964599609
    5. 'segments' → logprob: -5.842494964599609
    6. 'cont' → logprob: -6.092494964599609
    7. 'de' → logprob: -6.467494964599609
    8. ' res' → logprob: -6.467494964599609
    9. 'valid' → logprob: -7.092494964599609
    10. 'con' → logprob: -7.092494964599609

Token 727: ' définit' (ID: 89835)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.7668490409851074
    2. '[i' → logprob: -1.7668490409851074
    3. ' =' → logprob: -1.8918490409851074
    4. '.sort' → logprob: -2.5168490409851074
    5. 'is' → logprob: -2.8918490409851074
    6. '   ' → logprob: -3.6418490409851074
    7. '.append' → logprob: -3.7668490409851074
    8. ' est' → logprob: -3.7668490409851074
    9. 'def' → logprob: -3.7668490409851074
    10. '=[' → logprob: -3.8918490409851074

Token 728: ' des' (ID: 731)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.166426181793213
    2. 'des' → logprob: -1.416426181793213
    3. 'une' → logprob: -1.791426181793213
    4. 'un' → logprob: -1.916426181793213
    5. 'i' → logprob: -3.166426181793213
    6. 'segments' → logprob: -3.416426181793213
    7. 'les' → logprob: -4.541426181793213
    8. ' des' → logprob: -4.791426181793213
    9. ' un' → logprob: -5.416426181793213
    10. ' une' → logprob: -5.416426181793213

Token 729: ' positions' (ID: 15897)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.14558149874210358
    2. 'bl' → logprob: -2.3955814838409424
    3. 'interval' → logprob: -4.1455817222595215
    4. 'i' → logprob: -5.1455817222595215
    5. 'group' → logprob: -5.3955817222595215
    6. 'segment' → logprob: -5.7705817222595215
    7. 'zones' → logprob: -6.0205817222595215
    8. 'positions' → logprob: -6.5205817222595215
    9. 'blocks' → logprob: -6.5205817222595215
    10. 'contin' → logprob: -6.6455817222595215

Token 730: ',
' (ID: 412)
  Prédit: 'où'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'où' → logprob: -0.8248633742332458
    2. 'i' → logprob: -1.8248634338378906
    3. ' où' → logprob: -1.8248634338378906
    4. 'contin' → logprob: -2.6998634338378906
    5. ' i' → logprob: -3.0748634338378906
    6. '   ' → logprob: -3.5748634338378906
    7. 'cont' → logprob: -3.6998634338378906
    8. 'strict' → logprob: -3.9498634338378906
    9. 'de' → logprob: -4.699863433837891
    10. '[i' → logprob: -5.074863433837891

Token 731: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0072051286697387695
    2. 'i' → logprob: -5.257205009460449
    3. 'start' → logprob: -7.007205009460449
    4. 'segments' → logprob: -7.382205009460449
    5. '#' → logprob: -8.13220500946045
    6. ' i' → logprob: -10.00720500946045
    7. 'n' → logprob: -10.38220500946045
    8. 'def' → logprob: -10.63220500946045
    9. 'blocks' → logprob: -11.75720500946045
    10. 'l' → logprob: -11.88220500946045

Token 732: ' #' (ID: 1069)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4479655921459198
    2. '   ' → logprob: -1.4479656219482422
    3. 'start' → logprob: -2.197965621948242
    4. '#' (adapté à ' #') → logprob: -4.447965621948242
    5. 'segment' → logprob: -6.697965621948242
    6. 'block' → logprob: -7.572965621948242
    7. 'segments' → logprob: -7.697965621948242
    8. 'l' → logprob: -8.322965621948242
    9. ' i' → logprob: -8.572965621948242
    10. 'n' → logprob: -8.697965621948242

Token 733: ' et' (ID: 859)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.2499345988035202
    2. 'i' → logprob: -1.8749345541000366
    3. 'segments' → logprob: -3.124934673309326
    4. 'blocks' → logprob: -4.874934673309326
    5. 'block' → logprob: -5.249934673309326
    6. '   ' → logprob: -5.374934673309326
    7. '#' → logprob: -6.124934673309326
    8. 'l' → logprob: -6.999934673309326
    9. 'segment' → logprob: -6.999934673309326
    10. 'current' → logprob: -7.374934673309326

Token 734: ' on' (ID: 402)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.25679558515548706
    2. 'segments' → logprob: -2.631795644760132
    3. 'mod' → logprob: -3.131795644760132
    4. '   ' → logprob: -3.256795644760132
    5. 'res' → logprob: -4.006795406341553
    6. 'answer' → logprob: -4.381795406341553
    7. 'ans' → logprob: -4.381795406341553
    8. 'count' → logprob: -5.381795406341553
    9. '#' → logprob: -5.756795406341553
    10. 'start' → logprob: -5.881795406341553

Token 735: ' détect' (ID: 118715)
  Prédit: 'pe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pe' → logprob: -0.5304866433143616
    2. 'va' → logprob: -1.9054865837097168
    3. 'i' → logprob: -2.655486583709717
    4. 'continue' → logprob: -2.905486583709717
    5. 'cherche' → logprob: -3.030486583709717
    6. ' va' → logprob: -3.780486583709717
    7. ' peut' → logprob: -4.030486583709717
    8. ' i' → logprob: -4.780486583709717
    9. 'a' → logprob: -5.155486583709717
    10. '   ' → logprob: -5.280486583709717

Token 736: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -6.64708495605737e-05
    2. 'ent' → logprob: -10.375066757202148
    3. 'er' → logprob: -10.500066757202148
    4. '   ' → logprob: -13.000066757202148
    5. '```' → logprob: -13.750066757202148
    6. 'ect' → logprob: -14.125066757202148
    7. 'é' → logprob: -14.125066757202148
    8. 'era' → logprob: -14.375066757202148
    9. '#' → logprob: -14.625066757202148
    10. '       ' → logprob: -14.750066757202148

Token 737: ' les' (ID: 1341)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.43192777037620544
    2. 'des' → logprob: -2.6819276809692383
    3. '   ' → logprob: -2.8069276809692383
    4. ' i' → logprob: -2.8069276809692383
    5. 'les' → logprob: -2.8069276809692383
    6. 'start' → logprob: -3.3069276809692383
    7. ' des' → logprob: -4.431927680969238
    8. ' ' → logprob: -4.681927680969238
    9. ' start' → logprob: -5.056927680969238
    10. 'de' → logprob: -5.181927680969238

Token 738: ' segments' (ID: 33749)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.6352700591087341
    2. 'bl' → logprob: -1.510270118713379
    3. ' segments' → logprob: -1.760270118713379
    4. 'i' → logprob: -3.385270118713379
    5. ' blocs' → logprob: -4.385270118713379
    6. 'interval' → logprob: -4.760270118713379
    7. 'blocks' → logprob: -5.260270118713379
    8. 'dé' → logprob: -6.135270118713379
    9. ' i' → logprob: -6.385270118713379
    10. 'start' → logprob: -6.385270118713379

Token 739: ' continues' (ID: 15093)
  Prédit: 'où'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'où' → logprob: -1.3444644212722778
    2. '   ' → logprob: -1.7194644212722778
    3. ' où' → logprob: -1.7194644212722778
    4. 'where' → logprob: -1.8444644212722778
    5. 'i' → logprob: -2.2194643020629883
    6. ' where' → logprob: -2.7194643020629883
    7. ' i' → logprob: -3.7194643020629883
    8. 'de' → logprob: -4.719464302062988
    9. ' de' → logprob: -5.719464302062988
    10. ' of' → logprob: -6.469464302062988

Token 740: ' où' (ID: 15113)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2742222547531128
    2. '   ' → logprob: -2.2742223739624023
    3. ' i' → logprob: -2.6492223739624023
    4. ',' → logprob: -4.024222373962402
    5. ' où' → logprob: -4.399222373962402
    6. 'où' → logprob: -4.399222373962402
    7. 'where' → logprob: -4.899222373962402
    8. ' where' → logprob: -5.399222373962402
    9. ' =' → logprob: -6.024222373962402
    10. 'de' → logprob: -6.399222373962402

Token 741: ' perm' (ID: 5961)
  Prédit: 'perm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'perm' → logprob: -0.013006575405597687
    2. 'i' → logprob: -5.013006687164307
    3. ' perm' → logprob: -5.138006687164307
    4. ' i' → logprob: -8.138006210327148
    5. '   ' → logprob: -10.013006210327148
    6. 'per' → logprob: -11.138006210327148
    7. '```' → logprob: -11.638006210327148
    8. 'pos' → logprob: -11.763006210327148
    9. 'idx' → logprob: -12.263006210327148
    10. ' ' → logprob: -12.263006210327148

Token 742: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00018411019118502736
    2. '[' → logprob: -8.875184059143066
    3. '\[' → logprob: -11.375184059143066
    4. '==' → logprob: -11.875184059143066
    5. '   ' → logprob: -12.000184059143066
    6. ' ==' → logprob: -12.125184059143066
    7. ' [' → logprob: -12.375184059143066
    8. '```' → logprob: -12.750184059143066
    9. 'i' → logprob: -13.625184059143066
    10. '[pos' → logprob: -13.875184059143066

Token 743: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -1.015707015991211
    2. ']==' → logprob: -1.390707015991211
    3. ']' → logprob: -1.640707015991211
    4. ' ==' → logprob: -1.640707015991211
    5. ' ]' → logprob: -7.265707015991211
    6. ']=' → logprob: -8.515707015991211
    7. '=' → logprob: -9.265707015991211
    8. '[i' → logprob: -9.765707015991211
    9. '```' → logprob: -9.890707015991211
    10. ' ' → logprob: -10.140707015991211

Token 744: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3133205473423004
    2. ' ==' → logprob: -1.313320517539978
    3. '=' → logprob: -11.18832015991211
    4. '[i' → logprob: -11.18832015991211
    5. ']==' → logprob: -11.31332015991211
    6. '==
' → logprob: -11.81332015991211
    7. '```' → logprob: -12.56332015991211
    8. '[' → logprob: -12.68832015991211
    9. ' ' → logprob: -13.31332015991211
    10. ')==' → logprob: -13.31332015991211

Token 745: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00218583014793694
    2. ' i' → logprob: -6.127185821533203
    3. ' ' → logprob: -14.877185821533203
    4. '```' → logprob: -15.752185821533203
    5. '   ' → logprob: -16.502185821533203
    6. '	i' → logprob: -16.752185821533203
    7. ' ' → logprob: -17.127185821533203
    8. '[i' → logprob: -17.252185821533203
    9. '
' → logprob: -17.377185821533203
    10. '  ' → logprob: -17.502185821533203

Token 746: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00025204161647707224
    2. 'segments' → logprob: -9.375251770019531
    3. '
' → logprob: -9.750251770019531
    4. '    
' → logprob: -9.875251770019531
    5. 'count' → logprob: -10.125251770019531
    6. 'def' → logprob: -12.000251770019531
    7. 'i' → logprob: -12.750251770019531
    8. 'result' → logprob: -13.000251770019531
    9. 'res' → logprob: -13.250251770019531
    10. '```' → logprob: -13.250251770019531

Token 747: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001503790495917201
    2. 'segments' → logprob: -6.876503944396973
    3. 'count' → logprob: -8.501503944396973
    4. '```' → logprob: -8.626503944396973
    5. '    
' → logprob: -10.001503944396973
    6. 'res' → logprob: -11.126503944396973
    7. 'i' → logprob: -11.626503944396973
    8. 'result' → logprob: -12.001503944396973
    9. 'start' → logprob: -12.001503944396973
    10. 'blocks' → logprob: -13.501503944396973

Token 748: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0004216170927975327
    2. 'count' → logprob: -8.500421524047852
    3. 'segments' → logprob: -9.000421524047852
    4. '```' → logprob: -9.625421524047852
    5. 'i' → logprob: -10.750421524047852
    6. 'res' → logprob: -12.625421524047852
    7. 'result' → logprob: -13.000421524047852
    8. '    
' → logprob: -14.500421524047852
    9. 'start' → logprob: -15.125421524047852
    10. 'counts' → logprob: -15.375421524047852

Token 749: ' #' (ID: 1069)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.21498316526412964
    2. 'segments' → logprob: -2.2149832248687744
    3. '   ' → logprob: -2.9649832248687744
    4. 'res' → logprob: -3.8399832248687744
    5. 'result' → logprob: -5.089982986450195
    6. 'i' → logprob: -5.714982986450195
    7. 'answer' → logprob: -7.964982986450195
    8. 'ans' → logprob: -7.964982986450195
    9. 'valid' → logprob: -8.089982986450195
    10. 'sub' → logprob: -8.589982986450195

Token 750: ' Nous' (ID: 20193)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.44057807326316833
    2. 'i' → logprob: -1.4405781030654907
    3. '   ' → logprob: -2.440577983856201
    4. 'segments' → logprob: -3.815577983856201
    5. 'res' → logprob: -5.065577983856201
    6. 'start' → logprob: -6.815577983856201
    7. 'result' → logprob: -6.940577983856201
    8. 'ans' → logprob: -7.190577983856201
    9. 'answer' → logprob: -8.19057846069336
    10. 'valid' → logprob: -8.19057846069336

Token 751: ' allons' (ID: 97647)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.338128924369812
    2. 'i' → logprob: -1.838128924369812
    3. ' i' → logprob: -2.4631290435791016
    4. 'n' → logprob: -4.713129043579102
    5. ' n' → logprob: -4.963129043579102
    6. 'def' → logprob: -5.213129043579102
    7. ' start' → logprob: -5.338129043579102
    8. 'start' → logprob: -5.338129043579102
    9. ' =' → logprob: -6.338129043579102
    10. 'segment' → logprob: -6.588129043579102

Token 752: ' identifier' (ID: 24577)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.05327577888965607
    2. ' i' → logprob: -3.3032758235931396
    3. 'count' → logprob: -4.8032755851745605
    4. 'start' → logprob: -6.0532755851745605
    5. 'segment' → logprob: -6.3032755851745605
    6. '   ' → logprob: -7.0532755851745605
    7. 'segments' → logprob: -7.0532755851745605
    8. ' segment' → logprob: -8.678276062011719
    9. ' start' → logprob: -8.803276062011719
    10. 'comp' → logprob: -8.803276062011719

Token 753: ' ces' (ID: 10532)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.13256676495075226
    2. 'i' → logprob: -2.6325666904449463
    3. ' start' → logprob: -3.6325666904449463
    4. 'segments' → logprob: -4.507566928863525
    5. 'les' → logprob: -5.507566928863525
    6. ' i' → logprob: -5.757566928863525
    7. '   ' → logprob: -6.132566928863525
    8. 'de' → logprob: -6.507566928863525
    9. 'current' → logprob: -7.507566928863525
    10. ' les' → logprob: -7.882566928863525

Token 754: ' "' (ID: 392)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4463874101638794
    2. 'segments' → logprob: -1.1963874101638794
    3. ' segments' → logprob: -3.32138729095459
    4. ' i' → logprob: -4.69638729095459
    5. 'start' → logprob: -4.82138729095459
    6. ' start' → logprob: -6.57138729095459
    7. 'bl' → logprob: -7.32138729095459
    8. 'blocks' → logprob: -7.44638729095459
    9. ' blocs' → logprob: -7.57138729095459
    10. '```' → logprob: -8.69638729095459

Token 755: 'bl' (ID: 1751)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.15606455504894257
    2. 'bl' → logprob: -2.906064510345459
    3. 'i' → logprob: -3.031064510345459
    4. ' segments' → logprob: -4.156064510345459
    5. 'blocks' → logprob: -4.531064510345459
    6. 'start' → logprob: -4.781064510345459
    7. ' blocs' → logprob: -6.406064510345459
    8. 'dé' → logprob: -6.906064510345459
    9. ' i' → logprob: -7.406064510345459
    10. 'bloc' → logprob: -7.531064510345459

Token 756: 'ocs' (ID: 20929)
  Prédit: 'ocks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ocks' → logprob: -0.03954727575182915
    2. 'ocs' → logprob: -3.4145472049713135
    3. 'ock' → logprob: -5.414547443389893
    4. 'oc' → logprob: -6.914547443389893
    5. '_' → logprob: -8.789546966552734
    6. 'o' → logprob: -9.289546966552734
    7. '```' → logprob: -9.289546966552734
    8. '#' → logprob: -11.414546966552734
    9. 'locks' → logprob: -11.414546966552734
    10. ' ock' → logprob: -11.539546966552734

Token 757: '"' (ID: 1)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03702728822827339
    2. 'segments' → logprob: -4.037027359008789
    3. 'start' → logprob: -4.912027359008789
    4. ' =' → logprob: -6.162027359008789
    5. 'i' → logprob: -6.412027359008789
    6. 'current' → logprob: -6.787027359008789
    7. 'blocks' → logprob: -7.162027359008789
    8. '
' → logprob: -7.162027359008789
    9. ' i' → logprob: -7.287027359008789
    10. 'contin' → logprob: -7.412027359008789

Token 758: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0524480938911438
    2. '
' → logprob: -3.802448034286499
    3. 'blocks' → logprob: -4.177448272705078
    4. 'segments' → logprob: -4.927448272705078
    5. '    
' → logprob: -5.927448272705078
    6. 'i' → logprob: -7.052448272705078
    7. 'def' → logprob: -7.677448272705078
    8. 'start' → logprob: -7.802448272705078
    9. 'block' → logprob: -8.052448272705078
    10. ' =' → logprob: -8.052448272705078

Token 759: ' longueur' (ID: 104613)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7938989996910095
    2. 'contin' → logprob: -0.9188989996910095
    3. 'con' → logprob: -2.2938990592956543
    4. 'cont' → logprob: -4.418899059295654
    5. 'continu' → logprob: -5.043899059295654
    6. 'égalité' → logprob: -5.293899059295654
    7. '```' → logprob: -5.418899059295654
    8. 'continue' → logprob: -6.043899059295654
    9. 'indices' → logprob: -6.168899059295654
    10. 'const' → logprob: -6.168899059295654

Token 760: ' cons' (ID: 1473)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.4650813341140747
    2. 'i' → logprob: -1.4650813341140747
    3. 'cur' → logprob: -1.5900813341140747
    4. 'current' → logprob: -2.340081214904785
    5. ' =' → logprob: -2.965081214904785
    6. '   ' → logprob: -3.090081214904785
    7. 'curr' → logprob: -3.465081214904785
    8. ' i' → logprob: -3.965081214904785
    9. 'contin' → logprob: -4.215081214904785
    10. 'n' → logprob: -4.465081214904785

Token 761: 'écut' (ID: 96392)
  Prédit: 'écut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'écut' → logprob: -0.25368285179138184
    2. 'ecut' → logprob: -1.5036828517913818
    3. 'ecu' → logprob: -8.003683090209961
    4. 'ec' → logprob: -8.503683090209961
    5. 'equ' → logprob: -8.503683090209961
    6. 'e' → logprob: -8.628683090209961
    7. 'éc' → logprob: -8.753683090209961
    8. 'équ' → logprob: -8.878683090209961
    9. 'ecute' → logprob: -9.128683090209961
    10. 't' → logprob: -9.253683090209961

Token 762: 'ive' (ID: 585)
  Prédit: 'ive'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ive' → logprob: -0.30234020948410034
    2. 'utive' → logprob: -1.5523402690887451
    3. 'ifs' → logprob: -3.802340269088745
    4. 'ut' → logprob: -4.302340030670166
    5. 'ives' → logprob: -4.802340030670166
    6. 'if' → logprob: -5.677340030670166
    7. 'u' → logprob: -8.177340507507324
    8. 'uts' → logprob: -8.302340507507324
    9. 'i' → logprob: -8.427340507507324
    10. '#' → logprob: -9.302340507507324

Token 763: ' 
' (ID: 793)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22651690244674683
    2. 'start' → logprob: -2.3515169620513916
    3. 'i' → logprob: -2.6015169620513916
    4. ' i' → logprob: -4.4765167236328125
    5. '
' → logprob: -4.9765167236328125
    6. 'current' → logprob: -5.7265167236328125
    7. '    
' → logprob: -5.8515167236328125
    8. ',' → logprob: -6.1015167236328125
    9. ' start' → logprob: -6.2265167236328125
    10. 'block' → logprob: -6.6015167236328125

Token 764: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12115783989429474
    2. 'i' → logprob: -2.3711578845977783
    3. ' i' → logprob: -4.246157646179199
    4. ' =' → logprob: -6.746157646179199
    5. 'start' → logprob: -6.746157646179199
    6. 'current' → logprob: -6.746157646179199
    7. ',' → logprob: -6.996157646179199
    8. 'cur' → logprob: -7.246157646179199
    9. '=' → logprob: -7.496157646179199
    10. 'en' → logprob: -8.8711576461792

Token 765: ' #' (ID: 1069)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4041631817817688
    2. 'start' → logprob: -2.029163122177124
    3. '   ' → logprob: -2.154163122177124
    4. '=' → logprob: -4.029163360595703
    5. ' =' → logprob: -4.279163360595703
    6. 'current' → logprob: -4.529163360595703
    7. ',' → logprob: -4.654163360595703
    8. ' i' → logprob: -4.779163360595703
    9. 'cur' → logprob: -5.404163360595703
    10. 'segments' → logprob: -5.779163360595703

Token 766: ' où' (ID: 15113)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.17039385437965393
    2. 'start' → logprob: -2.545393943786621
    3. 'block' → logprob: -4.295393943786621
    4. 'current' → logprob: -4.295393943786621
    5. 'blocks' → logprob: -4.795393943786621
    6. 'cur' → logprob: -4.920393943786621
    7. '   ' → logprob: -5.045393943786621
    8. '=' → logprob: -5.045393943786621
    9. 'valid' → logprob: -5.170393943786621
    10. 'segments' → logprob: -5.670393943786621

Token 767: ' perm' (ID: 5961)
  Prédit: 'perm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'perm' → logprob: -0.011285129003226757
    2. ' perm' → logprob: -4.511285305023193
    3. 'i' → logprob: -8.636284828186035
    4. '   ' → logprob: -11.011284828186035
    5. ' i' → logprob: -11.261284828186035
    6. 'per' → logprob: -11.636284828186035
    7. 'all' → logprob: -11.761284828186035
    8. '```' → logprob: -12.636284828186035
    9. 'pos' → logprob: -12.886284828186035
    10. 'for' → logprob: -13.386284828186035

Token 768: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0002614550176076591
    2. '   ' → logprob: -9.250261306762695
    3. '```' → logprob: -9.875261306762695
    4. ' ==' → logprob: -10.250261306762695
    5. '==' → logprob: -10.750261306762695
    6. '[' → logprob: -11.000261306762695
    7. 'i' → logprob: -11.875261306762695
    8. 'def' → logprob: -11.875261306762695
    9. ' [' → logprob: -12.250261306762695
    10. '[j' → logprob: -12.625261306762695

Token 769: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.014564204961061478
    2. ']==' → logprob: -4.389564037322998
    3. '[i' → logprob: -6.764564037322998
    4. '==' → logprob: -7.389564037322998
    5. ' ]' → logprob: -9.264564514160156
    6. '   ' → logprob: -9.389564514160156
    7. ' ==' → logprob: -9.764564514160156
    8. '```' → logprob: -10.889564514160156
    9. '[j' → logprob: -11.764564514160156
    10. '[' → logprob: -12.389564514160156

Token 770: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3879639506340027
    2. ' ==' → logprob: -1.1379640102386475
    3. '[i' → logprob: -7.137963771820068
    4. ']==' → logprob: -8.637964248657227
    5. '```' → logprob: -10.137964248657227
    6. ']' → logprob: -10.887964248657227
    7. '=' → logprob: -11.012964248657227
    8. '[' → logprob: -11.137964248657227
    9. '   ' → logprob: -11.387964248657227
    10. ' ' → logprob: -12.137964248657227

Token 771: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0009137284359894693
    2. ' i' → logprob: -7.000913619995117
    3. '   ' → logprob: -13.875913619995117
    4. ' ' → logprob: -14.250913619995117
    5. '```' → logprob: -15.375913619995117
    6. '	i' → logprob: -16.000913619995117
    7. ' ' → logprob: -16.625913619995117
    8. '     ' → logprob: -17.000913619995117
    9. '  ' → logprob: -17.000913619995117
    10. '
' → logprob: -17.125913619995117

Token 772: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0016787484055384994
    2. '
' → logprob: -6.626678943634033
    3. '    
' → logprob: -8.501678466796875
    4. 'blocks' → logprob: -9.626678466796875
    5. 'def' → logprob: -10.751678466796875
    6. 'segments' → logprob: -10.876678466796875
    7. 'i' → logprob: -11.126678466796875
    8. '.' → logprob: -12.501678466796875
    9. ',
' → logprob: -12.626678466796875
    10. ' i' → logprob: -12.626678466796875

Token 773: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0030105074401944876
    2. '    
' → logprob: -7.003010272979736
    3. 'blocks' → logprob: -7.503010272979736
    4. '```' → logprob: -7.628010272979736
    5. 'i' → logprob: -7.753010272979736
    6. '
' → logprob: -7.878010272979736
    7. 'segments' → logprob: -8.878010749816895
    8. 'count' → logprob: -10.128010749816895
    9. 'start' → logprob: -10.628010749816895
    10. 'res' → logprob: -11.628010749816895

Token 774: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012705878354609013
    2. 'blocks' → logprob: -4.5127058029174805
    3. 'segments' → logprob: -6.5127058029174805
    4. 'i' → logprob: -9.13770580291748
    5. '```' → logprob: -10.26270580291748
    6. 'res' → logprob: -11.26270580291748
    7. 'bl' → logprob: -12.01270580291748
    8. 'valid' → logprob: -12.88770580291748
    9. 'block' → logprob: -13.38770580291748
    10. 'result' → logprob: -13.51270580291748

Token 775: ' total' (ID: 3609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2186613231897354
    2. 'blocks' → logprob: -2.093661308288574
    3. 'segments' → logprob: -3.218661308288574
    4. 'i' → logprob: -4.093661308288574
    5. 'start' → logprob: -5.093661308288574
    6. 'res' → logprob: -5.343661308288574
    7. 'bl' → logprob: -6.343661308288574
    8. 'count' → logprob: -6.468661308288574
    9. 'block' → logprob: -7.468661308288574
    10. 'valid' → logprob: -7.468661308288574

Token 776: '_sub' (ID: 11572)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0293034315109253
    2. ' =' → logprob: -1.0293034315109253
    3. '=' → logprob: -1.2793034315109253
    4. '_count' → logprob: -5.529303550720215
    5. ' +=' → logprob: -6.654303550720215
    6. '_counts' → logprob: -7.529303550720215
    7. '_sub' → logprob: -7.654303550720215
    8. '_=' → logprob: -8.529303550720215
    9. '_segments' → logprob: -9.029303550720215
    10. '_mod' → logprob: -9.029303550720215

Token 777: 'sets' (ID: 7234)
  Prédit: 'sets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sets' → logprob: -8.0536883615423e-05
    2. 'set' → logprob: -10.250080108642578
    3. '_sets' → logprob: -10.625080108642578
    4. 's' → logprob: -12.125080108642578
    5. '=' → logprob: -12.250080108642578
    6. 'ets' → logprob: -12.500080108642578
    7. ' =' → logprob: -12.500080108642578
    8. '_' → logprob: -13.875080108642578
    9. '   ' → logprob: -14.500080108642578
    10. 'SETS' → logprob: -14.750080108642578

Token 778: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09098151326179504
    2. '=' → logprob: -2.4659814834594727
    3. ' +=' → logprob: -6.215981483459473
    4. '+=' → logprob: -10.215981483459473
    5. ' ' → logprob: -12.715981483459473
    6. '   ' → logprob: -13.840981483459473
    7. '  ' → logprob: -14.590981483459473
    8. ',' → logprob: -14.715981483459473
    9. '_' → logprob: -15.090981483459473
    10. '+' → logprob: -16.34098243713379

Token 779: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00018065694894175977
    2. ' ' → logprob: -8.6251802444458
    3. '   ' → logprob: -14.2501802444458
    4. 'n' → logprob: -16.437681198120117
    5. '(' → logprob: -16.750181198120117
    6. 'pow' → logprob: -16.750181198120117
    7. '```' → logprob: -17.000181198120117
    8. '=' → logprob: -17.062681198120117
    9. '1' → logprob: -17.250181198120117
    10. '۰' → logprob: -17.375181198120117

Token 780: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -15.000000953674316
    3. 'pow' → logprob: -16.375
    4. '1' → logprob: -17.375
    5. '(' → logprob: -18.0
    6. '```' → logprob: -18.5
    7. 'n' → logprob: -19.0
    8. '2' → logprob: -19.25
    9. 'mod' → logprob: -19.375
    10. '۰' → logprob: -19.375

Token 781: '
    
' (ID: 15698)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006757391383871436
    2. 'i' → logprob: -8.000676155090332
    3. '    
' → logprob: -8.500676155090332
    4. ' i' → logprob: -9.875676155090332
    5. '
' → logprob: -10.000676155090332
    6. 'current' → logprob: -10.500676155090332
    7. '```' → logprob: -11.750676155090332
    8. 'start' → logprob: -12.875676155090332
    9. ' current' → logprob: -14.375676155090332
    10. ',' → logprob: -15.125676155090332

Token 782: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0690142884850502
    2. 'i' → logprob: -2.819014310836792
    3. 'start' → logprob: -5.069014072418213
    4. 'current' → logprob: -7.569014072418213
    5. 'block' → logprob: -8.694014549255371
    6. '```' → logprob: -10.694014549255371
    7. ' i' → logprob: -11.069014549255371
    8. 'segment' → logprob: -11.694014549255371
    9. '    
' → logprob: -13.819014549255371
    10. '  ' → logprob: -14.569014549255371

Token 783: ' #' (ID: 1069)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5783781409263611
    2. 'start' → logprob: -0.8283781409263611
    3. 'block' → logprob: -6.328378200531006
    4. 'current' → logprob: -8.203377723693848
    5. 'segment' → logprob: -8.203377723693848
    6. 'length' → logprob: -9.953377723693848
    7. 'l' → logprob: -10.203377723693848
    8. 'count' → logprob: -11.578377723693848
    9. ' start' → logprob: -12.828377723693848
    10. ' i' → logprob: -13.203377723693848

Token 784: ' On' (ID: 2160)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.062083978205919266
    2. 'start' → logprob: -2.8120839595794678
    3. 'block' → logprob: -9.812084197998047
    4. 'segment' → logprob: -10.312084197998047
    5. 'current' → logprob: -10.562084197998047
    6. ' i' → logprob: -14.187084197998047
    7. '```' → logprob: -14.812084197998047
    8. '   ' → logprob: -15.187084197998047
    9. 'l' → logprob: -15.562084197998047
    10. 'length' → logprob: -15.812084197998047

Token 785: ' parc' (ID: 22138)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0003490514063742012
    2. ' i' → logprob: -8.375349044799805
    3. 'start' → logprob: -9.750349044799805
    4. '   ' → logprob: -9.750349044799805
    5. 'segment' → logprob: -14.625349044799805
    6. ' start' → logprob: -15.375349044799805
    7. 'block' → logprob: -15.500349044799805
    8. '```' → logprob: -15.750349044799805
    9. 'current' → logprob: -15.875349044799805
    10. 'n' → logprob: -16.625349044799805

Token 786: 'ourt' (ID: 38600)
  Prédit: 'our'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'our' → logprob: -0.13692724704742432
    2. 'ours' → logprob: -2.1369271278381348
    3. 'ourt' → logprob: -4.636927127838135
    4. 'ur' → logprob: -8.636927604675293
    5. 'urs' → logprob: -11.011927604675293
    6. 'ou' → logprob: -11.261927604675293
    7. 'u' → logprob: -11.386927604675293
    8. 'oure' → logprob: -11.386927604675293
    9. '#' → logprob: -11.636927604675293
    10. 'or' → logprob: -12.511927604675293

Token 787: ' perm' (ID: 5961)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1660512238740921
    2. ' i' → logprob: -2.166051149368286
    3. '   ' → logprob: -3.291051149368286
    4. 'n' → logprob: -7.166051387786865
    5. 'range' → logprob: -8.541050910949707
    6. 'for' → logprob: -9.666050910949707
    7. ' n' → logprob: -9.791050910949707
    8. ' range' → logprob: -11.416050910949707
    9. ' for' → logprob: -11.791050910949707
    10. '	i' → logprob: -12.041050910949707

Token 788: ' et' (ID: 859)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.20459279417991638
    2. '   ' → logprob: -2.079592704772949
    3. ' i' → logprob: -3.829592704772949
    4. 'for' → logprob: -4.079592704772949
    5. ':' → logprob: -5.079592704772949
    6. '=' → logprob: -5.204592704772949
    7. ' =' → logprob: -5.454592704772949
    8. '
' → logprob: -6.454592704772949
    9. ',' → logprob: -7.079592704772949
    10. ',i' → logprob: -7.329592704772949

Token 789: ' compte' (ID: 19657)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.09078873693943024
    2. 'start' → logprob: -2.4657888412475586
    3. '   ' → logprob: -6.715788841247559
    4. 'l' → logprob: -8.215788841247559
    5. 'segment' → logprob: -8.590788841247559
    6. 'length' → logprob: -9.840788841247559
    7. 'block' → logprob: -10.340788841247559
    8. ' i' → logprob: -10.465788841247559
    9. 'current' → logprob: -11.090788841247559
    10. ' start' → logprob: -11.215788841247559

Token 790: ' les' (ID: 1341)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0530954971909523
    2. 'current' → logprob: -3.553095579147339
    3. ' i' → logprob: -4.30309534072876
    4. '   ' → logprob: -5.55309534072876
    5. 'start' → logprob: -6.55309534072876
    6. 'con' → logprob: -7.05309534072876
    7. 'cur' → logprob: -7.30309534072876
    8. 'block' → logprob: -7.67809534072876
    9. ' current' → logprob: -7.80309534072876
    10. 'length' → logprob: -8.053095817565918

Token 791: ' longue' (ID: 59564)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segments' → logprob: -1.0881855487823486
    2. 'current' → logprob: -1.4631855487823486
    3. 'long' → logprob: -1.4631855487823486
    4. 'con' → logprob: -2.8381855487823486
    5. 'i' → logprob: -3.0881855487823486
    6. 'bl' → logprob: -3.4631855487823486
    7. 'bloc' → logprob: -3.9631855487823486
    8. 'blocks' → logprob: -4.3381853103637695
    9. 'block' → logprob: -4.8381853103637695
    10. 'length' → logprob: -4.8381853103637695

Token 792: 'urs' (ID: 1628)
  Prédit: 'ur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ur' → logprob: -0.7746378183364868
    2. 'urs' → logprob: -0.8996378183364868
    3. 'r' → logprob: -2.0246376991271973
    4. '_r' → logprob: -9.274638175964355
    5. 'urse' → logprob: -9.274638175964355
    6. '=' → logprob: -10.274638175964355
    7. '_' → logprob: -10.524638175964355
    8. 'u' → logprob: -10.524638175964355
    9. 'ure' → logprob: -11.274638175964355
    10. 's' → logprob: -11.274638175964355

Token 793: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3600362539291382
    2. 'current' → logprob: -1.7350362539291382
    3. '=' → logprob: -3.4850363731384277
    4. 'con' → logprob: -3.7350363731384277
    5. 'cur' → logprob: -3.9850363731384277
    6. 'i' → logprob: -3.9850363731384277
    7. ' =' → logprob: -4.610036373138428
    8. 'block' → logprob: -5.735036373138428
    9. 'curr' → logprob: -5.735036373138428
    10. 'cour' → logprob: -5.985036373138428

Token 794: ' segments' (ID: 33749)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.113662488758564
    2. ' segments' → logprob: -3.7386624813079834
    3. 's' → logprob: -3.8636624813079834
    4. 'bl' → logprob: -4.3636627197265625
    5. 'segment' → logprob: -4.8636627197265625
    6. 'la' → logprob: -5.2386627197265625
    7. 'sé' → logprob: -5.2386627197265625
    8. 'con' → logprob: -5.4886627197265625
    9. 'bloc' → logprob: -5.4886627197265625
    10. ' blocs' → logprob: -5.6136627197265625

Token 795: ' cons' (ID: 1473)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.3798296451568604
    2. '   ' → logprob: -1.3798296451568604
    3. 'current' → logprob: -1.6298296451568604
    4. 'con' → logprob: -1.8798296451568604
    5. 'cur' → logprob: -2.5048296451568604
    6. 'cons' → logprob: -4.504829406738281
    7. ' =' → logprob: -4.504829406738281
    8. 'cont' → logprob: -4.754829406738281
    9. '=' → logprob: -4.879829406738281
    10. 'contin' → logprob: -4.879829406738281

Token 796: 'écut' (ID: 96392)
  Prédit: 'écut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'écut' → logprob: -0.34926629066467285
    2. 'ecut' → logprob: -1.2242662906646729
    3. 'ec' → logprob: -8.599266052246094
    4. 'e' → logprob: -8.724266052246094
    5. 'ecu' → logprob: -9.349266052246094
    6. 'equ' → logprob: -9.599266052246094
    7. '{' → logprob: -10.099266052246094
    8. 'cut' → logprob: -10.099266052246094
    9. 'équ' → logprob: -10.474266052246094
    10. '```' → logprob: -10.599266052246094

Token 797: 'ifs' (ID: 14119)
  Prédit: 'ifs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifs' → logprob: -0.4121098518371582
    2. 'ive' → logprob: -2.037109851837158
    3. 'ives' → logprob: -2.037109851837158
    4. 'if' → logprob: -2.912109851837158
    5. 'ut' → logprob: -4.912109851837158
    6. 'i' → logprob: -5.287109851837158
    7. 'ivement' → logprob: -5.912109851837158
    8. 'iv' → logprob: -6.162109851837158
    9. '=' → logprob: -6.287109851837158
    10. 'utive' → logprob: -6.787109851837158

Token 798: ' perm' (ID: 5961)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2543604373931885
    2. '   ' → logprob: -1.7543604373931885
    3. ' i' → logprob: -3.1293604373931885
    4. ' =' → logprob: -5.629360198974609
    5. 'current' → logprob: -7.004360198974609
    6. ',' → logprob: -7.129360198974609
    7. '=' → logprob: -7.254360198974609
    8. 'cur' → logprob: -7.879360198974609
    9. 'cont' → logprob: -8.87936019897461
    10. '```' → logprob: -8.87936019897461

Token 799: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.061118245124816895
    2. 'i' → logprob: -3.9361181259155273
    3. '==' → logprob: -4.936118125915527
    4. '   ' → logprob: -4.936118125915527
    5. '[' → logprob: -5.311118125915527
    6. ' ==' → logprob: -5.561118125915527
    7. '<|end|>' → logprob: -6.061118125915527
    8. ' =' → logprob: -6.561118125915527
    9. 'def' → logprob: -6.936118125915527
    10. '.' → logprob: -7.061118125915527

Token 800: ']==' (ID: 34128)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0337950699031353
    2. ']==' → logprob: -3.408795118331909
    3. '==' → logprob: -9.283795356750488
    4. ' ]' → logprob: -10.533795356750488
    5. ' ==' → logprob: -11.658795356750488
    6. ']=' → logprob: -11.908795356750488
    7. ']
' → logprob: -12.408795356750488
    8. '[i' → logprob: -12.658795356750488
    9. '   ' → logprob: -13.283795356750488
    10. ']]' → logprob: -13.783795356750488

Token 801: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0001234428636962548
    2. ' i' → logprob: -9.000123023986816
    3. '   ' → logprob: -17.500123977661133
    4. '	i' → logprob: -18.125123977661133
    5. '```' → logprob: -18.500123977661133
    6. ' ' → logprob: -18.750123977661133
    7. '1' → logprob: -19.625123977661133
    8. '
' → logprob: -19.875123977661133
    9. '  ' → logprob: -20.125123977661133
    10. '[i' → logprob: -20.500123977661133

Token 802: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20781300961971283
    2. 'i' → logprob: -1.707813024520874
    3. ' i' → logprob: -5.207812786102295
    4. '
' → logprob: -7.832812786102295
    5. ',' → logprob: -8.332813262939453
    6. '    
' → logprob: -9.832813262939453
    7. 'length' → logprob: -9.957813262939453
    8. 'current' → logprob: -10.332813262939453
    9. '  ' → logprob: -10.957813262939453
    10. 'idx' → logprob: -11.207813262939453

Token 803: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0029843561351299286
    2. 'i' → logprob: -5.877984523773193
    3. ' i' → logprob: -9.627984046936035
    4. '```' → logprob: -9.627984046936035
    5. '    
' → logprob: -11.252984046936035
    6. 'length' → logprob: -11.252984046936035
    7. 'current' → logprob: -11.377984046936035
    8. 'for' → logprob: -13.127984046936035
    9. 'segment' → logprob: -13.252984046936035
    10. 'cur' → logprob: -13.877984046936035

Token 804: ' #' (ID: 1069)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.19320406019687653
    2. '   ' → logprob: -1.9432040452957153
    3. 'length' → logprob: -3.943204164505005
    4. 'current' → logprob: -4.693203926086426
    5. 'segment' → logprob: -5.693203926086426
    6. 'count' → logprob: -8.568203926086426
    7. ' i' → logprob: -8.943203926086426
    8. '```' → logprob: -9.318203926086426
    9. 'cur' → logprob: -10.318203926086426
    10. 'start' → logprob: -10.818203926086426

Token 805: ' pour' (ID: 1930)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.04939692094922066
    2. 'length' → logprob: -3.7993969917297363
    3. 'current' → logprob: -4.299396991729736
    4. 'segment' → logprob: -5.049396991729736
    5. '   ' → logprob: -5.299396991729736
    6. 'start' → logprob: -7.799396991729736
    7. 'count' → logprob: -8.924396514892578
    8. 'cur' → logprob: -9.799396514892578
    9. ' i' → logprob: -9.924396514892578
    10. 'block' → logprob: -10.299396514892578

Token 806: ' chacun' (ID: 52136)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0012195244198665023
    2. ' i' → logprob: -6.751219749450684
    3. 'start' → logprob: -11.001219749450684
    4. 'length' → logprob: -11.126219749450684
    5. 'segment' → logprob: -12.251219749450684
    6. 'l' → logprob: -12.626219749450684
    7. 'current' → logprob: -13.251219749450684
    8. 'idx' → logprob: -14.001219749450684
    9. '(i' → logprob: -14.126219749450684
    10. ' ' → logprob: -14.251219749450684

Token 807: ' on' (ID: 402)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.24637173116207123
    2. ' i' → logprob: -1.9963717460632324
    3. '   ' → logprob: -2.4963717460632324
    4. '```' → logprob: -10.496371269226074
    5. ' =' → logprob: -10.871371269226074
    6. 'length' → logprob: -11.246371269226074
    7. 'segment' → logprob: -11.496371269226074
    8. ',' → logprob: -11.746371269226074
    9. '  ' → logprob: -11.746371269226074
    10. '	i' → logprob: -11.871371269226074

Token 808: ' ajoute' (ID: 91611)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.34803372621536255
    2. ' i' → logprob: -1.4730336666107178
    3. '   ' → logprob: -3.2230336666107178
    4. '=' → logprob: -4.598033905029297
    5. ' =' → logprob: -4.723033905029297
    6. 'n' → logprob: -6.098033905029297
    7. 'length' → logprob: -7.348033905029297
    8. '=i' → logprob: -7.473033905029297
    9. '       ' → logprob: -7.723033905029297
    10. ':' → logprob: -7.848033905029297

Token 809: ' (' (ID: 350)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -1.132391095161438
    2. '(length' → logprob: -1.382391095161438
    3. ' (' → logprob: -1.507391095161438
    4. ' length' → logprob: -1.757391095161438
    5. ' la' → logprob: -4.132390975952148
    6. ' segment' → logprob: -5.382390975952148
    7. '   ' → logprob: -6.257390975952148
    8. 'l' → logprob: -6.632390975952148
    9. '(segment' → logprob: -6.757390975952148
    10. ' l' → logprob: -6.882390975952148

Token 810: '2' (ID: 17)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.10358893871307373
    2. '(length' → logprob: -2.4785890579223633
    3. 'segment' → logprob: -5.353589057922363
    4. ' length' → logprob: -5.603589057922363
    5. 'l' → logprob: -6.103589057922363
    6. '(segment' → logprob: -7.228589057922363
    7. '(l' → logprob: -7.353589057922363
    8. 'len' → logprob: -7.603589057922363
    9. 'leng' → logprob: -7.853589057922363
    10. 'long' → logprob: -7.978589057922363

Token 811: '^' (ID: 61)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.003636065172031522
    2. ' **' → logprob: -5.628635883331299
    3. '^' → logprob: -10.503636360168457
    4. '```' → logprob: -13.378636360168457
    5. '
' → logprob: -13.628636360168457
    6. 'length' → logprob: -14.003636360168457
    7. ' ' → logprob: -14.128636360168457
    8. ' ' → logprob: -14.253636360168457
    9. '^{' → logprob: -14.253636360168457
    10. '[length' → logprob: -14.878636360168457

Token 812: 'length' (ID: 7914)
  Prédit: 'length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.021819310262799263
    2. 'segment' → logprob: -4.021819114685059
    3. 'l' → logprob: -6.396819114685059
    4. 'long' → logprob: -7.521819114685059
    5. 'leng' → logprob: -7.646819114685059
    6. 'len' → logprob: -8.771819114685059
    7. 'count' → logprob: -8.896819114685059
    8. 'seg' → logprob: -8.896819114685059
    9. 'k' → logprob: -8.896819114685059
    10. 'cur' → logprob: -9.146819114685059

Token 813: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.016281628981232643
    2. '-' → logprob: -4.766281604766846
    3. ')' → logprob: -5.016281604766846
    4. ')-' → logprob: -7.016281604766846
    5. ' )' → logprob: -9.391282081604004
    6. 'length' → logprob: -11.766282081604004
    7. '   ' → logprob: -11.891282081604004
    8. ' ' → logprob: -12.266282081604004
    9. '-length' → logprob: -12.766282081604004
    10. ')-(' → logprob: -13.766282081604004

Token 814: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.6312321753939614e-05
    2. ' ' → logprob: -10.250036239624023
    3. '   ' → logprob: -14.750036239624023
    4. '
' → logprob: -15.000036239624023
    5. ')' → logprob: -16.750036239624023
    6. '```' → logprob: -17.500036239624023
    7. '<|end|>' → logprob: -18.750036239624023
    8. '

' → logprob: -19.125036239624023
    9. '       ' → logprob: -19.375036239624023
    10. '    ' → logprob: -20.125036239624023

Token 815: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00028410006780177355
    2. ' )' → logprob: -8.250284194946289
    3. '   ' → logprob: -12.125284194946289
    4. ')*' → logprob: -12.375284194946289
    5. ')
' → logprob: -12.625284194946289
    6. '))' → logprob: -13.125284194946289
    7. ' ' → logprob: -13.500284194946289
    8. ')+' → logprob: -13.625284194946289
    9. '),' → logprob: -14.125284194946289
    10. ')**' → logprob: -14.250284194946289

Token 816: ' car' (ID: 1669)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5860787034034729
    2. '
' → logprob: -0.8360787034034729
    3. '    
' → logprob: -4.711078643798828
    4. '
' → logprob: -7.711078643798828
    5. '\n' → logprob: -8.211078643798828
    6. '```' → logprob: -9.336078643798828
    7. 'i' → logprob: -9.461078643798828
    8. '\' → logprob: -10.336078643798828
    9. ' i' → logprob: -10.461078643798828
    10. '   
' → logprob: -10.586078643798828

Token 817: ' toutes' (ID: 17502)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.7164031863212585
    2. ' chaque' → logprob: -0.9664031863212585
    3. ' les' → logprob: -2.9664032459259033
    4. 'length' → logprob: -3.8414032459259033
    5. 'les' → logprob: -4.341403007507324
    6. 'on' → logprob: -4.841403007507324
    7. ' length' → logprob: -5.216403007507324
    8. ' total' → logprob: -5.341403007507324
    9. 'total' → logprob: -5.466403007507324
    10. ' each' → logprob: -5.591403007507324

Token 818: ' les' (ID: 1341)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 819: ' comb' (ID: 4134)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 820: 'inais' (ID: 42744)
  Prédit: 'inais'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inais' → logprob: -0.08905483782291412
    2. 'in' → logprob: -3.589054822921753
    3. 'inations' → logprob: -3.589054822921753
    4. 'os' → logprob: -4.464055061340332
    5. 'ina' → logprob: -6.089055061340332
    6. 'is' → logprob: -6.089055061340332
    7. 'i' → logprob: -6.089055061340332
    8. '```' → logprob: -6.464055061340332
    9. '-' → logprob: -7.089055061340332
    10. '   ' → logprob: -7.089055061340332

Token 821: 'ons' (ID: 1808)
  Prédit: 'ons'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ons' → logprob: -0.03372880071401596
    2. 'sons' → logprob: -3.408728837966919
    3. 's' → logprob: -10.03372859954834
    4. 'son' → logprob: -11.40872859954834
    5. 't' → logprob: -11.65872859954834
    6. 'on' → logprob: -12.03372859954834
    7. '#' → logprob: -12.40872859954834
    8. 'ais' → logprob: -12.40872859954834
    9. 'isons' → logprob: -14.28372859954834
    10. 'asons' → logprob: -14.28372859954834

Token 822: ' non' (ID: 2893)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.4669169187545776
    2. ' possibles' → logprob: -1.5919169187545776
    3. ' possible' → logprob: -2.091917037963867
    4. ' de' → logprob: -2.341917037963867
    5. ' +' → logprob: -2.716917037963867
    6. '+' → logprob: -2.841917037963867
    7. '^' → logprob: -3.341917037963867
    8. 'possible' → logprob: -3.716917037963867
    9. '_possible' → logprob: -3.966917037963867
    10. ' ' → logprob: -3.966917037963867

Token 823: ' v' (ID: 323)
  Prédit: 'vide'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vide' → logprob: -0.15740106999874115
    2. ' vide' → logprob: -3.4074010848999023
    3. 'v' → logprob: -4.032401084899902
    4. '_v' → logprob: -4.032401084899902
    5. '   ' → logprob: -4.282401084899902
    6. '```' → logprob: -4.282401084899902
    7. '_vid' → logprob: -4.657401084899902
    8. '_empty' → logprob: -4.907401084899902
    9. ')' → logprob: -4.907401084899902
    10. 'empty' → logprob: -5.282401084899902

Token 824: 'ides' (ID: 4105)
  Prédit: 'ides'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ides' → logprob: -0.065226711332798
    2. 'u' → logprob: -2.9402267932891846
    3. 'ues' → logprob: -5.1902265548706055
    4. 'ide' → logprob: -6.0652265548706055
    5. 'id' → logprob: -6.9402265548706055
    6. 'al' → logprob: -7.9402265548706055
    7. 'i' → logprob: -8.315226554870605
    8. 'idé' → logprob: -8.940226554870605
    9. 'a' → logprob: -9.315226554870605
    10. 'uid' → logprob: -9.565226554870605

Token 825: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2544885873794556
    2. '+' → logprob: -1.6294885873794556
    3. '   ' → logprob: -1.8794885873794556
    4. ' +' → logprob: -1.8794885873794556
    5. '<|end|>' → logprob: -3.379488468170166
    6. ',' → logprob: -3.629488468170166
    7. ' )' → logprob: -3.629488468170166
    8. ' ' → logprob: -3.754488468170166
    9. '(' → logprob: -4.379488468170166
    10. '^' → logprob: -4.629488468170166

Token 826: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1369314044713974
    2. ' +' → logprob: -2.7619314193725586
    3. ')' → logprob: -4.261931419372559
    4. '<|end|>' → logprob: -4.386931419372559
    5. '+' → logprob: -5.136931419372559
    6. '    ' → logprob: -5.386931419372559
    7. '       ' → logprob: -5.511931419372559
    8. ' ' → logprob: -5.761931419372559
    9. 'tokens' → logprob: -5.886931419372559
    10. ' +=' → logprob: -5.886931419372559

Token 827: ' #' (ID: 1069)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.599683403968811
    2. '+' → logprob: -1.224683403968811
    3. '   ' → logprob: -2.9746832847595215
    4. '^' → logprob: -3.4746832847595215
    5. ')' → logprob: -3.7246832847595215
    6. ' ^' → logprob: -3.7246832847595215
    7. ' )' → logprob: -5.3496832847595215
    8. '^{' → logprob: -5.8496832847595215
    9. '**' → logprob: -6.0996832847595215
    10. ' ' → logprob: -6.0996832847595215

Token 828: ' dans' (ID: 2671)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0680336058139801
    2. '^' → logprob: -2.8180336952209473
    3. '-' → logprob: -6.318033695220947
    4. '^{' → logprob: -6.318033695220947
    5. ' +' → logprob: -6.943033695220947
    6. '**' → logprob: -7.943033695220947
    7. ')' → logprob: -8.068033218383789
    8. 'of' → logprob: -8.443033218383789
    9. '*' → logprob: -9.068033218383789
    10. '=' → logprob: -9.443033218383789

Token 829: ' ce' (ID: 2357)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.24610914289951324
    2. ' la' → logprob: -2.6211092472076416
    3. 'la' → logprob: -2.9961092472076416
    4. ' ce' → logprob: -3.4961092472076416
    5. 'the' → logprob: -4.4961090087890625
    6. ' length' → logprob: -4.4961090087890625
    7. 'segment' → logprob: -4.4961090087890625
    8. 'ces' → logprob: -5.1211090087890625
    9. ' le' → logprob: -5.3711090087890625
    10. ' ces' → logprob: -5.8711090087890625

Token 830: ' segment' (ID: 14806)
  Prédit: ' segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' segment' → logprob: -0.35431456565856934
    2. 'segment' → logprob: -1.8543145656585693
    3. '_segment' → logprob: -2.8543145656585693
    4. '_' → logprob: -2.9793145656585693
    5. ' _' → logprob: -3.8543145656585693
    6. '_bloc' → logprob: -5.854314804077148
    7. '   ' → logprob: -6.104314804077148
    8. ' block' → logprob: -6.854314804077148
    9. '_block' → logprob: -7.104314804077148
    10. ' bloc' → logprob: -7.104314804077148

Token 831: ' sont' (ID: 5242)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010614565573632717
    2. ' =' → logprob: -5.135614395141602
    3. '
' → logprob: -6.010614395141602
    4. '=' → logprob: -7.260614395141602
    5. ' i' → logprob: -7.635614395141602
    6. '    
' → logprob: -8.010614395141602
    7. ':' → logprob: -8.635614395141602
    8. 'i' → logprob: -8.885614395141602
    9. 'def' → logprob: -9.760614395141602
    10. ',' → logprob: -9.885614395141602

Token 832: ' val' (ID: 1459)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6195626854896545
    2. '```' → logprob: -2.8695626258850098
    3. 'calcul' → logprob: -2.8695626258850098
    4. 'valid' → logprob: -3.2445626258850098
    5. 'mod' → logprob: -3.4945626258850098
    6. ' calcul' → logprob: -3.4945626258850098
    7. '%' → logprob: -3.4945626258850098
    8. '(' → logprob: -3.7445626258850098
    9. ' valid' → logprob: -3.7445626258850098
    10. 'multip' → logprob: -4.11956262588501

Token 833: 'ides' (ID: 4105)
  Prédit: 'ides'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ides' → logprob: -0.32119879126548767
    2. 'ide' → logprob: -1.32119882106781
    3. 'id' → logprob: -6.0711989402771
    4. 'ues' → logprob: -6.0711989402771
    5. '
' → logprob: -6.4461989402771
    6. '#' → logprob: -7.8211989402771
    7. 'ue' → logprob: -8.446198463439941
    8. '   ' → logprob: -8.446198463439941
    9. 'ables' → logprob: -9.071198463439941
    10. '[' → logprob: -9.446198463439941

Token 834: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06377334892749786
    2. '
' → logprob: -2.8137733936309814
    3. '    
' → logprob: -6.438773155212402
    4. 'i' → logprob: -9.688773155212402
    5. '```' → logprob: -10.188773155212402
    6. 'current' → logprob: -10.563773155212402
    7. 'length' → logprob: -10.688773155212402
    8. ' i' → logprob: -11.063773155212402
    9. '
' → logprob: -11.563773155212402
    10. '   
' → logprob: -12.313773155212402

Token 835: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0035717925056815147
    2. '    
' → logprob: -6.7535719871521
    3. '
' → logprob: -7.1285719871521
    4. 'i' → logprob: -7.1285719871521
    5. '```' → logprob: -7.3785719871521
    6. ' i' → logprob: -9.253571510314941
    7. '\n' → logprob: -10.503571510314941
    8. '\' → logprob: -10.878571510314941
    9. '   
' → logprob: -12.253571510314941
    10. 'for' → logprob: -12.378571510314941

Token 836: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007020648336037993
    2. 'i' → logprob: -8.375701904296875
    3. 'current' → logprob: -8.625701904296875
    4. '```' → logprob: -8.625701904296875
    5. 'length' → logprob: -9.250701904296875
    6. '    
' → logprob: -11.625701904296875
    7. 'cur' → logprob: -12.125701904296875
    8. '``' → logprob: -14.625701904296875
    9. 'start' → logprob: -14.625701904296875
    10. '
' → logprob: -14.875701904296875

Token 837: ' length' (ID: 5517)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.03192910552024841
    2. 'length' (adapté à ' length') → logprob: -3.5319290161132812
    3. '   ' → logprob: -6.781929016113281
    4. 'segment' → logprob: -7.281929016113281
    5. 'current' → logprob: -8.281929016113281
    6. 'start' → logprob: -10.406929016113281
    7. '```' → logprob: -10.406929016113281
    8. ' i' → logprob: -11.281929016113281
    9. 'cur' → logprob: -11.656929016113281
    10. 'count' → logprob: -12.156929016113281

Token 838: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31326720118522644
    2. '=' → logprob: -1.3132672309875488
    3. '   ' → logprob: -12.18826675415039
    4. ' ' → logprob: -16.06326675415039
    5. '  ' → logprob: -16.68826675415039
    6. ' +=' → logprob: -17.18826675415039
    7. '	' → logprob: -17.18826675415039
    8. ',' → logprob: -17.56326675415039
    9. 's' → logprob: -17.93826675415039
    10. ')' → logprob: -18.06326675415039

Token 839: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.13388703338569e-06
    2. ' ' → logprob: -11.625009536743164
    3. '1' → logprob: -16.750009536743164
    4. '   ' → logprob: -17.375009536743164
    5. '=' → logprob: -18.625009536743164
    6. '۰' → logprob: -19.250009536743164
    7. '```' → logprob: -19.500009536743164
    8. '  ' → logprob: -20.875009536743164
    9. '[' → logprob: -21.875009536743164
    10. '000' → logprob: -22.000009536743164

Token 840: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.3856492842023727e-06
    2. ' ' → logprob: -14.000000953674316
    3. '1' → logprob: -14.500000953674316
    4. '   ' → logprob: -19.875001907348633
    5. '۰' → logprob: -20.625001907348633
    6. '=' → logprob: -21.000001907348633
    7. '０' → logprob: -21.250001907348633
    8. '```' → logprob: -21.750001907348633
    9. '(' → logprob: -23.500001907348633
    10. '2' → logprob: -23.562501907348633

Token 841: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5495140552520752
    2. ' for' → logprob: -1.2995140552520752
    3. 'for' → logprob: -2.549514055252075
    4. '   ' → logprob: -2.924514055252075
    5. '<|end|>' → logprob: -4.924513816833496
    6. '    
' → logprob: -5.799513816833496
    7. 'i' → logprob: -6.174513816833496
    8. ' 
' → logprob: -6.174513816833496
    9. '  
' → logprob: -6.549513816833496
    10. ' i' → logprob: -7.674513816833496

Token 842: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6668278574943542
    2. ' for' → logprob: -1.041827917098999
    3. '   ' → logprob: -2.041827917098999
    4. '
' → logprob: -6.29182767868042
    5. '<|end|>' → logprob: -6.79182767868042
    6. '    
' → logprob: -8.041828155517578
    7. '	for' → logprob: -8.291828155517578
    8. 'n' → logprob: -9.041828155517578
    9. 'i' → logprob: -9.291828155517578
    10. ' 
' → logprob: -9.541828155517578

Token 843: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -6.337155355140567e-05
    2. ' for' → logprob: -9.750062942504883
    3. '   ' → logprob: -12.750062942504883
    4. 'i' → logprob: -13.250062942504883
    5. 'n' → logprob: -14.750062942504883
    6. '
' → logprob: -18.500062942504883
    7. '	for' → logprob: -18.750062942504883
    8. '    
' → logprob: -18.875062942504883
    9. '```' → logprob: -19.250062942504883
    10. 'For' → logprob: -21.375062942504883

Token 844: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.02324605919420719
    2. ' i' → logprob: -3.7732460498809814
    3. 'idx' → logprob: -15.148245811462402
    4. '	i' → logprob: -15.773245811462402
    5. 'perm' → logprob: -16.39824676513672
    6. '   ' → logprob: -16.64824676513672
    7. ' ' → logprob: -17.02324676513672
    8. ' idx' → logprob: -17.52324676513672
    9. '```' → logprob: -18.89824676513672
    10. '_i' → logprob: -18.89824676513672

Token 845: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.05170847102999687
    2. 'in' → logprob: -3.051708459854126
    3. '=' → logprob: -6.176708698272705
    4. '   ' → logprob: -7.676708698272705
    5. ' ' → logprob: -8.801708221435547
    6. ' =' → logprob: -9.426708221435547
    7. '0' → logprob: -9.551708221435547
    8. ')' → logprob: -9.801708221435547
    9. '	in' → logprob: -9.926708221435547
    10. ',' → logprob: -10.176708221435547

Token 846: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.0206720617134124e-05
    2. ' range' → logprob: -11.50001049041748
    3. 'perm' → logprob: -18.375009536743164
    4. '   ' → logprob: -18.375009536743164
    5. '(range' → logprob: -20.250009536743164
    6. '	range' → logprob: -20.625009536743164
    7. '  ' → logprob: -22.375009536743164
    8. ' ' → logprob: -22.500009536743164
    9. '```' → logprob: -22.750009536743164
    10. 'rang' → logprob: -24.000009536743164

Token 847: '(n' (ID: 2406)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -6.2729995988775045e-06
    2. '(n' → logprob: -12.000006675720215
    3. ' n' → logprob: -16.2500057220459
    4. '   ' → logprob: -18.7500057220459
    5. '	n' → logprob: -20.5000057220459
    6. ')n' → logprob: -21.2500057220459
    7. 'len' → logprob: -21.7500057220459
    8. ',n' → logprob: -21.8750057220459
    9. '0' → logprob: -22.1250057220459
    10. '[n' → logprob: -22.3750057220459

Token 848: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5272531509399414
    2. '):
' → logprob: -0.9022531509399414
    3. ':' → logprob: -5.652253150939941
    4. '   ' → logprob: -7.902253150939941
    5. '):
' → logprob: -8.902253150939941
    6. ')' → logprob: -10.152253150939941
    7. ':
' → logprob: -10.902253150939941
    8. ' ):' → logprob: -11.652253150939941
    9. ' ):
' → logprob: -12.152253150939941
    10. '       ' → logprob: -12.402253150939941

Token 849: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00025526012177579105
    2. '   ' → logprob: -8.625255584716797
    3. '<|end|>' → logprob: -10.375255584716797
    4. ' if' → logprob: -10.625255584716797
    5. '```' → logprob: -12.125255584716797
    6. '    ' → logprob: -12.625255584716797
    7. '<|end|>' → logprob: -13.250255584716797
    8. '        
' → logprob: -13.375255584716797
    9. ':' → logprob: -13.500255584716797
    10. 'if' → logprob: -14.000255584716797

Token 850: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.016621800139546394
    2. '       ' → logprob: -4.2666215896606445
    3. ' if' → logprob: -6.0166215896606445
    4. '   ' → logprob: -11.516621589660645
    5. '```' → logprob: -11.891621589660645
    6. '	if' → logprob: -14.516621589660645
    7. 'If' → logprob: -16.14162254333496
    8. ' ' → logprob: -17.39162254333496
    9. '           ' → logprob: -17.51662254333496
    10. '``' → logprob: -18.39162254333496

Token 851: ' perm' (ID: 5961)
  Prédit: 'perm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'perm' → logprob: -0.004078878089785576
    2. ' perm' → logprob: -5.5040788650512695
    3. 'per' → logprob: -14.87907886505127
    4. '   ' → logprob: -16.379079818725586
    5. 'i' → logprob: -18.004079818725586
    6. 'perf' → logprob: -18.504079818725586
    7. 'pos' → logprob: -19.754079818725586
    8. 'Perm' → logprob: -19.754079818725586
    9. '_perm' → logprob: -20.004079818725586
    10. ' i' → logprob: -20.129079818725586

Token 852: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.2378600735682994e-05
    2. '==' → logprob: -10.875032424926758
    3. ' ==' → logprob: -11.875032424926758
    4. '[' → logprob: -12.125032424926758
    5. 'i' → logprob: -14.750032424926758
    6. ' [' → logprob: -15.000032424926758
    7. '[
' → logprob: -15.750032424926758
    8. '```' → logprob: -17.125032424926758
    9. '   ' → logprob: -17.375032424926758
    10. ' i' → logprob: -17.500032424926758

Token 853: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.06254959106445312
    2. ' ==' → logprob: -2.812549591064453
    3. ']==' → logprob: -7.687549591064453
    4. ')==' → logprob: -9.937549591064453
    5. ']' → logprob: -10.187549591064453
    6. ')' → logprob: -10.562549591064453
    7. '=' → logprob: -12.562549591064453
    8. '[' → logprob: -12.812549591064453
    9. '==
' → logprob: -12.937549591064453
    10. '[i' → logprob: -13.312549591064453

Token 854: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.00033581978641450405
    2. ' ==' → logprob: -8.000335693359375
    3. '==
' → logprob: -16.000335693359375
    4. '=' → logprob: -16.250335693359375
    5. ']==' → logprob: -16.375335693359375
    6. ')==' → logprob: -17.625335693359375
    7. '```' → logprob: -18.750335693359375
    8. '===' → logprob: -18.750335693359375
    9. '!=' → logprob: -18.875335693359375
    10. '()==' → logprob: -18.875335693359375

Token 855: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00033558503491804004
    2. ' i' → logprob: -8.000335693359375
    3. '   ' → logprob: -16.125335693359375
    4. ' ' → logprob: -18.000335693359375
    5. '	i' → logprob: -18.000335693359375
    6. '    ' → logprob: -19.875335693359375
    7. '  ' → logprob: -19.875335693359375
    8. '     ' → logprob: -20.875335693359375
    9. '       ' → logprob: -21.125335693359375
    10. '[i' → logprob: -21.375335693359375

Token 856: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.545808732509613
    2. ':
' → logprob: -0.920808732509613
    3. '           ' → logprob: -3.920808792114258
    4. '       ' → logprob: -6.045808792114258
    5. '):
' → logprob: -10.045808792114258
    6. ',' → logprob: -10.545808792114258
    7. '<|end|>' → logprob: -10.670808792114258
    8. ' and' → logprob: -10.795808792114258
    9. '   ' → logprob: -10.920808792114258
    10. ' :' → logprob: -11.045808792114258

Token 857: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006347034592181444
    2. '	       ' → logprob: -5.631347179412842
    3. '       ' → logprob: -6.631347179412842
    4. 'length' → logprob: -7.631347179412842
    5. '		' → logprob: -8.506346702575684
    6. '	   ' → logprob: -8.506346702575684
    7. ' length' → logprob: -8.881346702575684
    8. '<|end|>' → logprob: -9.756346702575684
    9. '    	   ' → logprob: -10.381346702575684
    10. '	length' → logprob: -10.631346702575684

Token 858: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' (adapté à ' length') → logprob: -0.0029999276157468557
    2. '           ' → logprob: -6.752999782562256
    3. ' length' → logprob: -7.002999782562256
    4. '       ' → logprob: -7.002999782562256
    5. '	length' → logprob: -11.753000259399414
    6. '   ' → logprob: -13.378000259399414
    7. '               ' → logprob: -15.753000259399414
    8. '_length' → logprob: -16.003000259399414
    9. ',length' → logprob: -17.503000259399414
    10. '	   ' → logprob: -17.878000259399414

Token 859: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.3868882656097412
    2. ' +=' → logprob: -1.1368882656097412
    3. '   ' → logprob: -11.38688850402832
    4. '       ' → logprob: -13.13688850402832
    5. ']+=' → logprob: -13.26188850402832
    6. '=' → logprob: -13.63688850402832
    7. '           ' → logprob: -14.76188850402832
    8. '+' → logprob: -15.13688850402832
    9. '    ' → logprob: -15.63688850402832
    10. '        ' → logprob: -17.26188850402832

Token 860: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.438573680294212e-06
    2. ' ' → logprob: -12.125005722045898
    3. '   ' → logprob: -18.6250057220459
    4. '```' → logprob: -20.1250057220459
    5. '  ' → logprob: -22.6250057220459
    6. '۱' → logprob: -22.8750057220459
    7. '0' → logprob: -23.5625057220459
    8. ' ' → logprob: -23.5625057220459
    9. '१' → logprob: -23.7500057220459
    10. '１' → logprob: -23.8750057220459

Token 861: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. '```' → logprob: -20.5
    4. '   ' → logprob: -20.625
    5. '۱' → logprob: -23.125
    6. '１' → logprob: -23.6875
    7. '  ' → logprob: -24.0625
    8. '
' → logprob: -24.25
    9. '`' → logprob: -24.25
    10. '१' → logprob: -24.625

Token 862: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00033534664544276893
    2. '
' → logprob: -8.375335693359375
    3. ' else' → logprob: -10.125335693359375
    4. 'else' → logprob: -10.625335693359375
    5. '   ' → logprob: -11.125335693359375
    6. '<|end|>' → logprob: -11.625335693359375
    7. ' 
' → logprob: -12.000335693359375
    8. '    
' → logprob: -12.750335693359375
    9. '        
' → logprob: -13.500335693359375
    10. '  
' → logprob: -14.000335693359375

Token 863: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003503626212477684
    2. 'else' → logprob: -8.250349998474121
    3. ' else' → logprob: -9.375349998474121
    4. '   ' → logprob: -12.875349998474121
    5. '```' → logprob: -13.750349998474121
    6. '           ' → logprob: -15.625349998474121
    7. 'elif' → logprob: -15.750349998474121
    8. '	' → logprob: -16.125350952148438
    9. '	else' → logprob: -16.750350952148438
    10. 'continue' → logprob: -17.375350952148438

Token 864: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22584404051303864
    2. 'else' (adapté à ' else') → logprob: -1.7258440256118774
    3. ' else' → logprob: -3.725844144821167
    4. '	else' → logprob: -10.725844383239746
    5. '   ' → logprob: -11.100844383239746
    6. '```' → logprob: -12.850844383239746
    7. 'elif' → logprob: -13.600844383239746
    8. '	' → logprob: -14.850844383239746
    9. '_else' → logprob: -15.975844383239746
    10. '           ' → logprob: -16.35084342956543

Token 865: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.19454321265220642
    2. ':
' → logprob: -1.9445432424545288
    3. '       ' → logprob: -3.9445431232452393
    4. '           ' → logprob: -4.319543361663818
    5. '   ' → logprob: -7.194543361663818
    6. 'if' → logprob: -9.44454288482666
    7. '```' → logprob: -9.69454288482666
    8. '):
' → logprob: -9.94454288482666
    9. ' :' → logprob: -10.69454288482666
    10. '{' → logprob: -11.06954288482666

Token 866: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20225544273853302
    2. 'if' → logprob: -1.7022554874420166
    3. '           ' → logprob: -7.7022552490234375
    4. ' if' → logprob: -8.577255249023438
    5. 'total' → logprob: -9.327255249023438
    6. '   ' → logprob: -9.452255249023438
    7. '```' → logprob: -10.327255249023438
    8. '#' → logprob: -14.452255249023438
    9. '	if' → logprob: -15.077255249023438
    10. '``' → logprob: -15.702255249023438

Token 867: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.17610037326812744
    2. 'total' → logprob: -1.9261003732681274
    3. '           ' → logprob: -4.176100254058838
    4. '       ' → logprob: -8.676100730895996
    5. ' if' → logprob: -8.676100730895996
    6. '   ' → logprob: -10.551100730895996
    7. ' total' → logprob: -11.051100730895996
    8. '               ' → logprob: -12.301100730895996
    9. '```' → logprob: -12.926100730895996
    10. '
' → logprob: -13.926100730895996

Token 868: ' Si' (ID: 7832)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.47519195079803467
    2. 'if' → logprob: -0.9751919507980347
    3. '           ' → logprob: -6.850192070007324
    4. '       ' → logprob: -10.975192070007324
    5. ' if' → logprob: -11.100192070007324
    6. ' total' → logprob: -11.225192070007324
    7. '   ' → logprob: -11.975192070007324
    8. '               ' → logprob: -13.725192070007324
    9. '```' → logprob: -14.100192070007324
    10. '
' → logprob: -15.225192070007324

Token 869: ' la' (ID: 557)
  Prédit: ' length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' length' → logprob: -0.4740951359272003
    2. 'length' → logprob: -0.9740951061248779
    3. ' longueur' → logprob: -12.224095344543457
    4. '   ' → logprob: -12.849095344543457
    5. '	length' → logprob: -13.224095344543457
    6. 'long' → logprob: -13.349095344543457
    7. ' total' → logprob: -13.599095344543457
    8. '           ' → logprob: -13.599095344543457
    9. '(length' → logprob: -13.724095344543457
    10. 'total' → logprob: -13.724095344543457

Token 870: ' chaine' (ID: 192094)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.10178033262491226
    2. 'if' → logprob: -3.101780414581299
    3. 'long' → logprob: -3.101780414581299
    4. ' if' → logprob: -5.601780414581299
    5. ' length' → logprob: -6.226780414581299
    6. ' longueur' → logprob: -7.851780414581299
    7. 'total' → logprob: -8.22677993774414
    8. '           ' → logprob: -8.85177993774414
    9. '   ' → logprob: -9.47677993774414
    10. ' long' → logprob: -9.85177993774414

Token 871: ' s' (ID: 265)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06165637820959091
    2. 'length' → logprob: -4.561656475067139
    3. 'total' → logprob: -5.061656475067139
    4. 'if' → logprob: -5.061656475067139
    5. '       ' → logprob: -5.186656475067139
    6. '>' → logprob: -5.311656475067139
    7. '   ' → logprob: -5.561656475067139
    8. '#' → logprob: -5.561656475067139
    9. '               ' → logprob: -5.936656475067139
    10. ' >' → logprob: -6.436656475067139

Token 872: ''inter' (ID: 55731)
  Prédit: 'ur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ur' → logprob: -0.7206722497940063
    2. 'total' → logprob: -1.7206722497940063
    3. 'length' → logprob: -2.470672130584717
    4. 'if' → logprob: -3.095672130584717
    5. 'n' → logprob: -4.220672130584717
    6. 'n't' → logprob: -4.220672130584717
    7. 'uite' → logprob: -4.470672130584717
    8. 'i' → logprob: -4.595672130584717
    9. 'tot' → logprob: -4.595672130584717
    10. ''est' → logprob: -4.720672130584717

Token 873: 'rompt' (ID: 47192)
  Prédit: 'rompt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rompt' → logprob: -0.0040442063473165035
    2. 'rom' → logprob: -5.754044055938721
    3. 'rupt' → logprob: -7.379044055938721
    4. 'om' → logprob: -8.754044532775879
    5. 'rupted' → logprob: -10.254044532775879
    6. 'upt' → logprob: -11.754044532775879
    7. 'rum' → logprob: -12.129044532775879
    8. 'rome' → logprob: -12.254044532775879
    9. 'r' → logprob: -12.379044532775879
    10. 'omp' → logprob: -12.504044532775879

Token 874: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04895011708140373
    2. ':
' → logprob: -3.9239501953125
    3. ':' → logprob: -4.0489501953125
    4. ',' → logprob: -4.9239501953125
    5. '               ' → logprob: -5.7989501953125
    6. ',
' → logprob: -9.6739501953125
    7. '       ' → logprob: -10.1739501953125
    8. '
' → logprob: -10.1739501953125
    9. '            
' → logprob: -10.1739501953125
    10. '```' → logprob: -10.4239501953125

Token 875: ' on' (ID: 402)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5132154226303101
    2. 'if' → logprob: -1.26321542263031
    3. 'total' → logprob: -2.2632155418395996
    4. ' if' → logprob: -4.6382155418396
    5. ' total' → logprob: -5.3882155418396
    6. '               ' → logprob: -8.263215065002441
    7. '       ' → logprob: -9.013215065002441
    8. '   ' → logprob: -10.513215065002441
    9. '```' → logprob: -11.513215065002441
    10. '                   ' → logprob: -13.013215065002441

Token 876: ' calc' (ID: 25691)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9200376272201538
    2. 'total' → logprob: -0.9200376272201538
    3. 'if' → logprob: -1.6700376272201538
    4. ' total' → logprob: -4.795037746429443
    5. ' if' → logprob: -6.045037746429443
    6. 'aj' → logprob: -7.545037746429443
    7. '       ' → logprob: -7.670037746429443
    8. '#' → logprob: -7.670037746429443
    9. 'calcul' → logprob: -7.795037746429443
    10. 'add' → logprob: -8.045037269592285

Token 877: 'ule' (ID: 1601)
  Prédit: 'ule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ule' → logprob: -9.603335638530552e-05
    2. 'cule' → logprob: -10.250096321105957
    3. 'uler' → logprob: -10.875096321105957
    4. 'ulate' → logprob: -11.000096321105957
    5. '       ' → logprob: -11.250096321105957
    6. 'ulé' → logprob: -13.250096321105957
    7. 'le' → logprob: -13.375096321105957
    8. 'ul' → logprob: -13.625096321105957
    9. '   ' → logprob: -13.625096321105957
    10. 'ère' → logprob: -14.125096321105957

Token 878: ' les' (ID: 1341)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.754111111164093
    2. 'total' → logprob: -0.879111111164093
    3. ' total' → logprob: -2.3791110515594482
    4. '(total' → logprob: -4.129111289978027
    5. ' (' → logprob: -6.379111289978027
    6. '               ' → logprob: -6.629111289978027
    7. '(' → logprob: -7.129111289978027
    8. ' le' → logprob: -7.129111289978027
    9. ' la' → logprob: -7.879111289978027
    10. '```' → logprob: -8.629111289978027

Token 879: ' subsets' (ID: 165377)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.2627492845058441
    2. 'sub' → logprob: -1.5127493143081665
    3. ' total' → logprob: -5.012749195098877
    4. ' subsets' → logprob: -6.387749195098877
    5. '   ' → logprob: -7.262749195098877
    6. '_sub' → logprob: -7.512749195098877
    7. 'subset' → logprob: -7.637749195098877
    8. ' ' → logprob: -8.637749671936035
    9. 'subtotal' → logprob: -9.012749671936035
    10. '       ' → logprob: -9.887749671936035

Token 880: ' pour' (ID: 1930)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01376323401927948
    2. 'total' → logprob: -4.638763427734375
    3. '(total' → logprob: -7.013763427734375
    4. '               ' → logprob: -7.263763427734375
    5. ',' → logprob: -7.388763427734375
    6. '            
' → logprob: -7.388763427734375
    7. ' total' → logprob: -7.513763427734375
    8. ' =' → logprob: -8.388763427734375
    9. '_total' → logprob: -9.513763427734375
    10. '```' → logprob: -9.888763427734375

Token 881: ' le' (ID: 505)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.7330806255340576
    2. 'la' → logprob: -0.8580806255340576
    3. ' la' → logprob: -3.6080806255340576
    4. ' ce' → logprob: -3.7330806255340576
    5. '           ' → logprob: -3.9830806255340576
    6. 'le' → logprob: -4.608080863952637
    7. ' length' → logprob: -4.733080863952637
    8. 'ce' → logprob: -5.983080863952637
    9. ' cette' → logprob: -5.983080863952637
    10. ' le' → logprob: -7.358080863952637

Token 882: ' segment' (ID: 14806)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.10926970839500427
    2. 'bloc' → logprob: -2.609269618988037
    3. 'block' → logprob: -3.609269618988037
    4. 'length' → logprob: -5.984269618988037
    5. '       ' → logprob: -9.609270095825195
    6. '```' → logprob: -9.734270095825195
    7. '   ' → logprob: -9.859270095825195
    8. ' segment' → logprob: -10.484270095825195
    9. '
' → logprob: -10.984270095825195
    10. '     ' → logprob: -11.109270095825195

Token 883: ' précédent' (ID: 128462)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.000855001388117671
    2. 'total' → logprob: -7.500854969024658
    3. '            
' → logprob: -9.125855445861816
    4. '(total' → logprob: -9.500855445861816
    5. '               ' → logprob: -10.375855445861816
    6. ' total' → logprob: -10.750855445861816
    7. ',' → logprob: -10.875855445861816
    8. '```' → logprob: -11.250855445861816
    9. '       ' → logprob: -11.750855445861816
    10. '		' → logprob: -12.250855445861816

Token 884: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003908965270966291
    2. 'total' → logprob: -6.253909111022949
    3. '
' → logprob: -6.628909111022949
    4. ' total' → logprob: -8.12890911102295
    5. '            
' → logprob: -8.62890911102295
    6. '       ' → logprob: -9.87890911102295
    7. '               ' → logprob: -10.37890911102295
    8. '(total' → logprob: -10.75390911102295
    9. '```' → logprob: -11.12890911102295
    10. '		' → logprob: -11.25390911102295

Token 885: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00016921341011766344
    2. '       ' → logprob: -9.000168800354004
    3. '            
' → logprob: -10.750168800354004
    4. '               ' → logprob: -12.625168800354004
    5. '		' → logprob: -12.875168800354004
    6. '
' → logprob: -12.875168800354004
    7. ',' → logprob: -12.875168800354004
    8. '```' → logprob: -12.875168800354004
    9. '   ' → logprob: -13.125168800354004
    10. '	       ' → logprob: -13.250168800354004

Token 886: ' if' (ID: 538)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.04134765639901161
    2. '           ' → logprob: -3.7913477420806885
    3. 'if' (adapté à ' if') → logprob: -4.041347503662109
    4. '       ' → logprob: -8.41634750366211
    5. ' total' → logprob: -9.04134750366211
    6. ' if' → logprob: -11.66634750366211
    7. '```' → logprob: -11.79134750366211
    8. '   ' → logprob: -11.91634750366211
    9. '               ' → logprob: -13.29134750366211
    10. '``' → logprob: -14.79134750366211

Token 887: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.0067154900170862675
    2. ' length' → logprob: -5.006715297698975
    3. '	length' → logprob: -16.506715774536133
    4. '   ' → logprob: -17.006715774536133
    5. '(length' → logprob: -17.006715774536133
    6. 'ength' → logprob: -19.006715774536133
    7. 'leng' → logprob: -19.131715774536133
    8. 'long' → logprob: -19.131715774536133
    9. ' longueur' → logprob: -19.256715774536133
    10. ' ' → logprob: -19.256715774536133

Token 888: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.2014601230621338
    2. ' >' → logprob: -1.7014601230621338
    3. ' ' → logprob: -11.826459884643555
    4. ' >
' → logprob: -12.076459884643555
    5. '   ' → logprob: -12.326459884643555
    6. '">' → logprob: -12.576459884643555
    7. '>
' → logprob: -12.701459884643555
    8. ' ' → logprob: -12.951459884643555
    9. ')>' → logprob: -13.201459884643555
    10. '*>' → logprob: -13.451459884643555

Token 889: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.541112427134067e-05
    2. ' ' → logprob: -9.500075340270996
    3. '```' → logprob: -15.250075340270996
    4. '۰' → logprob: -15.500075340270996
    5. '=' → logprob: -16.625076293945312
    6. '
' → logprob: -17.875076293945312
    7. '٠' → logprob: -18.375076293945312
    8. '<|end|>' → logprob: -18.375076293945312
    9. '   ' → logprob: -18.500076293945312
    10. '０' → logprob: -18.750076293945312

Token 890: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.45848218582978e-06
    2. ' ' → logprob: -13.00000286102295
    3. '۰' → logprob: -16.625001907348633
    4. '```' → logprob: -17.625001907348633
    5. '٠' → logprob: -19.250001907348633
    6. '০' → logprob: -19.625001907348633
    7. '०' → logprob: -19.875001907348633
    8. '０' → logprob: -20.000001907348633
    9. '=' → logprob: -20.125001907348633
    10. '   ' → logprob: -20.125001907348633

Token 891: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.08136328309774399
    2. ':' → logprob: -2.5813632011413574
    3. '               ' → logprob: -6.331363201141357
    4. '           ' → logprob: -7.456363201141357
    5. '):
' → logprob: -9.331363677978516
    6. ':
' → logprob: -12.081363677978516
    7. ':

' → logprob: -12.331363677978516
    8. ' :
' → logprob: -12.456363677978516
    9. ',' → logprob: -12.956363677978516
    10. '=' → logprob: -13.456363677978516

Token 892: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004000276792794466
    2. 'total' → logprob: -5.754000186920166
    3. ' total' → logprob: -7.254000186920166
    4. '```' → logprob: -10.254000663757324
    5. '           ' → logprob: -10.504000663757324
    6. '
' → logprob: -10.504000663757324
    7. '                
' → logprob: -11.254000663757324
    8. '                   ' → logprob: -12.754000663757324
    9. '(total' → logprob: -12.879000663757324
    10. '``' → logprob: -13.629000663757324

Token 893: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' (adapté à ' total') → logprob: -0.0030595881398767233
    2. '               ' → logprob: -6.253059387207031
    3. ' total' → logprob: -6.878059387207031
    4. '           ' → logprob: -9.253059387207031
    5. '                   ' → logprob: -12.878059387207031
    6. '```' → logprob: -14.128059387207031
    7. '
' → logprob: -14.753059387207031
    8. '(total' → logprob: -15.378059387207031
    9. '   ' → logprob: -16.00305938720703
    10. '``' → logprob: -16.12805938720703

Token 894: '_sub' (ID: 11572)
  Prédit: '_sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sub' → logprob: -3.166338137816638e-05
    2. '_' → logprob: -11.125031471252441
    3. 'sub' → logprob: -11.875031471252441
    4. '=' → logprob: -12.875031471252441
    5. '+=' → logprob: -13.250031471252441
    6. ' =' → logprob: -13.375031471252441
    7. ' +=' → logprob: -13.375031471252441
    8. '_total' → logprob: -14.000031471252441
    9. '+' → logprob: -15.250031471252441
    10. '_=' → logprob: -15.375031471252441

Token 895: 'sets' (ID: 7234)
  Prédit: 'sets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sets' → logprob: -0.010389248840510845
    2. '_sub' → logprob: -5.01038932800293
    3. 'sub' → logprob: -5.63538932800293
    4. 'set' → logprob: -9.63538932800293
    5. 'total' → logprob: -11.51038932800293
    6. '=' → logprob: -11.51038932800293
    7. '_sets' → logprob: -12.76038932800293
    8. '   ' → logprob: -12.88538932800293
    9. 'ets' → logprob: -13.51038932800293
    10. ' =' → logprob: -13.63538932800293

Token 896: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.2681841552257538
    2. '+=' → logprob: -1.5181841850280762
    3. ' =' → logprob: -4.518184185028076
    4. '=' → logprob: -5.268184185028076
    5. '+=(' → logprob: -10.393183708190918
    6. '   ' → logprob: -11.143183708190918
    7. '```' → logprob: -12.268183708190918
    8. '+' → logprob: -12.268183708190918
    9. ']+=' → logprob: -13.268183708190918
    10. '    ' → logprob: -13.393183708190918

Token 897: ' (' (ID: 350)
  Prédit: '(total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(total' → logprob: -0.0006581080378964543
    2. ' (' → logprob: -7.37565803527832
    3. '(' → logprob: -11.25065803527832
    4. '(t' → logprob: -12.12565803527832
    5. '(mod' → logprob: -12.37565803527832
    6. '(result' → logprob: -12.50065803527832
    7. '(max' → logprob: -14.00065803527832
    8. '(count' → logprob: -14.12565803527832
    9. '   ' → logprob: -14.62565803527832
    10. '(current' → logprob: -15.00065803527832

Token 898: 'total' (ID: 9577)
  Prédit: 'total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.1602993607521057
    2. '(total' → logprob: -1.910299301147461
    3. ' total' → logprob: -9.660299301147461
    4. ' (' → logprob: -11.660299301147461
    5. '   ' → logprob: -14.035299301147461
    6. '(' → logprob: -14.535299301147461
    7. ',total' → logprob: -14.785299301147461
    8. '	total' → logprob: -15.285299301147461
    9. '$total' → logprob: -15.285299301147461
    10. 'tot' → logprob: -15.410299301147461

Token 899: '_sub' (ID: 11572)
  Prédit: '_sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sub' → logprob: -7.517272024415433e-05
    2. 'sub' → logprob: -9.500075340270996
    3. '_' → logprob: -16.75007438659668
    4. '```' → logprob: -17.12507438659668
    5. 'substr' → logprob: -17.25007438659668
    6. 'Sub' → logprob: -17.25007438659668
    7. 'total' → logprob: -17.37507438659668
    8. '_SUB' → logprob: -17.62507438659668
    9. '	sub' → logprob: -17.87507438659668
    10. '_total' → logprob: -18.00007438659668

Token 900: 'sets' (ID: 7234)
  Prédit: 'sets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sets' → logprob: -0.011053952388465405
    2. 'ets' → logprob: -4.511054039001465
    3. 'ests' → logprob: -13.136054039001465
    4. '_sets' → logprob: -13.636054039001465
    5. 'set' → logprob: -14.386054039001465
    6. 'total' → logprob: -14.511054039001465
    7. 'ects' → logprob: -14.511054039001465
    8. '   ' → logprob: -15.011054039001465
    9. 'sts' → logprob: -15.761054039001465
    10. 'Sets' → logprob: -15.886054039001465

Token 901: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3868713080883026
    2. ' +' → logprob: -1.136871337890625
    3. '＋' → logprob: -16.136871337890625
    4. '+
' → logprob: -17.011871337890625
    5. ' ' → logprob: -17.261871337890625
    6. '+(' → logprob: -17.261871337890625
    7. ' plus' → logprob: -17.636871337890625
    8. ' +
' → logprob: -17.636871337890625
    9. ' ' → logprob: -18.386871337890625
    10. '+=' → logprob: -18.636871337890625

Token 902: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.22682452201843262
    2. '(mod' → logprob: -1.6018245220184326
    3. ' (' → logprob: -7.476824760437012
    4. 'pow' → logprob: -7.726824760437012
    5. ' mod' → logprob: -8.101824760437012
    6. '(pow' → logprob: -10.226824760437012
    7. '   ' → logprob: -10.851824760437012
    8. '(' → logprob: -10.851824760437012
    9. '(p' → logprob: -11.976824760437012
    10. '(m' → logprob: -12.351824760437012

Token 903: '_exp' (ID: 30306)
  Prédit: '_exp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_exp' → logprob: -5.538490950129926e-05
    2. 'exp' → logprob: -9.875055313110352
    3. '_pow' → logprob: -13.375055313110352
    4. 'Exp' → logprob: -14.625055313110352
    5. '_EXP' → logprob: -14.750055313110352
    6. '```' → logprob: -14.875055313110352
    7. '-exp' → logprob: -15.125055313110352
    8. ''exp' → logprob: -15.875055313110352
    9. 'pow' → logprob: -16.00005531311035
    10. '_' → logprob: -16.00005531311035

Token 904: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.20157384872436523
    2. '2' → logprob: -1.7015738487243652
    3. '(
' → logprob: -9.451574325561523
    4. ')' → logprob: -10.201574325561523
    5. '   ' → logprob: -11.201574325561523
    6. ' (' → logprob: -11.576574325561523
    7. ' ' → logprob: -12.076574325561523
    8. '                   ' → logprob: -12.826574325561523
    9. '               ' → logprob: -12.951574325561523
    10. '           ' → logprob: -13.201574325561523

Token 905: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0010392407421022654
    2. '(' → logprob: -6.876039028167725
    3. ' ' → logprob: -12.376039505004883
    4. '   ' → logprob: -13.501039505004883
    5. '
' → logprob: -14.501039505004883
    6. '(
' → logprob: -16.001039505004883
    7. '```' → logprob: -16.126039505004883
    8. '    ' → logprob: -16.876039505004883
    9. ')' → logprob: -17.001039505004883
    10. '       ' → logprob: -17.501039505004883

Token 906: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3893299102783203
    2. ',length' → logprob: -1.1393299102783203
    3. '(length' → logprob: -6.88932991027832
    4. 'length' → logprob: -7.01432991027832
    5. ' ,' → logprob: -7.76432991027832
    6. '[length' → logprob: -9.51432991027832
    7. ' length' → logprob: -10.51432991027832
    8. ',len' → logprob: -11.76432991027832
    9. '<|end|>' → logprob: -13.88932991027832
    10. ' ' → logprob: -14.01432991027832

Token 907: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -2.339278580620885e-06
    2. ' length' → logprob: -13.375001907348633
    3. '(length' → logprob: -15.000001907348633
    4. '[length' → logprob: -15.500001907348633
    5. ',length' → logprob: -16.125001907348633
    6. '	length' → logprob: -18.625001907348633
    7. 'ength' → logprob: -20.250001907348633
    8. 'leng' → logprob: -20.375001907348633
    9. '_length' → logprob: -21.875001907348633
    10. 'len' → logprob: -22.000001907348633

Token 908: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001427538663847372
    2. ' ,' → logprob: -8.875143051147461
    3. ')' → logprob: -13.875143051147461
    4. ' -' → logprob: -15.125143051147461
    5. '```' → logprob: -15.125143051147461
    6. '           ' → logprob: -15.500143051147461
    7. ',
' → logprob: -15.500143051147461
    8. ',P' → logprob: -15.625143051147461
    9. '   ' → logprob: -16.00014305114746
    10. ',p' → logprob: -16.25014305114746

Token 909: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -7.896309739408025e-07
    2. ' P' → logprob: -14.250000953674316
    3. '           ' → logprob: -18.125
    4. '   ' → logprob: -18.625
    5. '       ' → logprob: -20.0
    6. '                   ' → logprob: -20.25
    7. ')' → logprob: -20.375
    8. 'p' → logprob: -20.5
    9. '               ' → logprob: -20.625
    10. '
' → logprob: -20.75

Token 910: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.029855774715542793
    2. '))' → logprob: -3.529855728149414
    3. ' )' → logprob: -9.904855728149414
    4. ')-' → logprob: -10.029855728149414
    5. ',' → logprob: -12.404855728149414
    6. ')
' → logprob: -13.279855728149414
    7. '))-' → logprob: -13.779855728149414
    8. ' ))' → logprob: -13.904855728149414
    9. ')))' → logprob: -14.404855728149414
    10. '')' → logprob: -14.654855728149414

Token 911: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01569153368473053
    2. ' -' → logprob: -4.890691757202148
    3. ')%' → logprob: -5.390691757202148
    4. '-' → logprob: -6.015691757202148
    5. '%' → logprob: -7.390691757202148
    6. ' )' → logprob: -8.140691757202148
    7. ' %' → logprob: -9.765691757202148
    8. '%)' → logprob: -10.515691757202148
    9. '       ' → logprob: -11.015691757202148
    10. '-)' → logprob: -11.140691757202148

Token 912: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.625000953674316
    3. '   ' → logprob: -17.25
    4. '           ' → logprob: -18.0
    5. '<|end|>' → logprob: -18.125
    6. '       ' → logprob: -18.875
    7. '                   ' → logprob: -19.25
    8. '
' → logprob: -19.375
    9. '```' → logprob: -19.625
    10. '               ' → logprob: -20.25

Token 913: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.125
    3. '   ' → logprob: -17.75
    4. '       ' → logprob: -19.0
    5. '           ' → logprob: -19.125
    6. '<|end|>' → logprob: -19.125
    7. '```' → logprob: -20.0
    8. '                   ' → logprob: -20.375
    9. '               ' → logprob: -20.875
    10. '                       ' → logprob: -21.125

Token 914: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0020261851605027914
    2. ' +' → logprob: -6.627026081085205
    3. '+' → logprob: -8.002026557922363
    4. ')%' → logprob: -8.377026557922363
    5. ' )' → logprob: -9.502026557922363
    6. '       ' → logprob: -10.127026557922363
    7. '           ' → logprob: -11.752026557922363
    8. '               ' → logprob: -12.127026557922363
    9. '   ' → logprob: -13.002026557922363
    10. '+)' → logprob: -13.252026557922363

Token 915: ' %' (ID: 1851)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6656240820884705
    2. ' %' → logprob: -1.2906241416931152
    3. ')' → logprob: -2.2906241416931152
    4. '%' → logprob: -2.7906241416931152
    5. '       ' → logprob: -4.290624141693115
    6. '               ' → logprob: -4.665624141693115
    7. ' +' → logprob: -4.665624141693115
    8. '<|end|>' → logprob: -4.915624141693115
    9. ' ' → logprob: -6.040624141693115
    10. '+' → logprob: -7.040624141693115

Token 916: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -4.320199877838604e-07
    2. ' P' → logprob: -14.75
    3. '>P' → logprob: -18.625
    4. '=P' → logprob: -18.875
    5. '\P' → logprob: -19.125
    6. '	P' → logprob: -20.375
    7. '[P' → logprob: -20.625
    8. '<P' → logprob: -20.75
    9. '_P' → logprob: -20.875
    10. '```' → logprob: -21.5

Token 917: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03238242119550705
    2. '
' → logprob: -3.6573824882507324
    3. '            
' → logprob: -5.532382488250732
    4. 'length' → logprob: -7.282382488250732
    5. '        
' → logprob: -8.282382011413574
    6. '               ' → logprob: -8.407382011413574
    7. '
' → logprob: -8.782382011413574
    8. '                
' → logprob: -8.782382011413574
    9. '       ' → logprob: -9.032382011413574
    10. '```' → logprob: -9.282382011413574

Token 918: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0069093103520572186
    2. '       ' → logprob: -6.256909370422363
    3. '            
' → logprob: -6.256909370422363
    4. '        
' → logprob: -6.381909370422363
    5. '
' → logprob: -7.506909370422363
    6. '\n' → logprob: -8.256909370422363
    7. 'length' → logprob: -8.631909370422363
    8. '    
' → logprob: -9.381909370422363
    9. '```' → logprob: -10.006909370422363
    10. '<|end|>' → logprob: -10.381909370422363

Token 919: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' (adapté à ' length') → logprob: -0.00011045700375689194
    2. ' length' → logprob: -9.500110626220703
    3. '           ' → logprob: -10.250110626220703
    4. '   ' → logprob: -16.000110626220703
    5. '	length' → logprob: -17.250110626220703
    6. '       ' → logprob: -19.000110626220703
    7. '_length' → logprob: -19.750110626220703
    8. 'Length' → logprob: -20.000110626220703
    9. '               ' → logprob: -20.375110626220703
    10. 'ength' → logprob: -21.125110626220703

Token 920: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00023059594968799502
    2. ' =' → logprob: -8.37523078918457
    3. '0' → logprob: -18.37523078918457
    4. '＝' → logprob: -18.62523078918457
    5. '=
' → logprob: -19.62523078918457
    6. '.=' → logprob: -19.87523078918457
    7. '=}' → logprob: -20.25023078918457
    8. ' ' → logprob: -20.50023078918457
    9. '=

' → logprob: -20.50023078918457
    10. ',' → logprob: -21.12523078918457

Token 921: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. '   ' → logprob: -21.625
    4. '۰' → logprob: -22.0
    5. '```' → logprob: -23.375
    6. '=' → logprob: -24.25
    7. '٠' → logprob: -24.625
    8. '  ' → logprob: -25.0
    9. '０' → logprob: -25.125
    10. ' ' → logprob: -25.25

Token 922: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. '۰' → logprob: -19.625
    4. '   ' → logprob: -20.0
    5. '```' → logprob: -20.125
    6. '=' → logprob: -21.8125
    7. '٠' → logprob: -22.25
    8. '০' → logprob: -22.3125
    9. '[' → logprob: -22.5
    10. '1' → logprob: -22.625

Token 923: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2366010993719101
    2. '
' → logprob: -1.6116011142730713
    3. '    
' → logprob: -4.986600875854492
    4. 'if' → logprob: -6.361600875854492
    5. '```' → logprob: -6.736600875854492
    6. ' 
' → logprob: -7.486600875854492
    7. '\n' → logprob: -8.111600875854492
    8. ' if' → logprob: -8.736600875854492
    9. '  
' → logprob: -8.736600875854492
    10. '\
' → logprob: -9.861600875854492

Token 924: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.037691518664360046
    2. '
' → logprob: -3.537691593170166
    3. '```' → logprob: -5.162691593170166
    4. 'if' → logprob: -6.662691593170166
    5. '    
' → logprob: -7.162691593170166
    6. ' if' → logprob: -10.162691116333008
    7. ' 
' → logprob: -10.662691116333008
    8. '  
' → logprob: -11.037691116333008
    9. '``' → logprob: -11.537691116333008
    10. '\
' → logprob: -11.787691116333008

Token 925: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.02990390732884407
    2. '#' (adapté à ' #') → logprob: -3.5299038887023926
    3. ' if' → logprob: -9.90490436553955
    4. '   ' → logprob: -10.02990436553955
    5. '```' → logprob: -10.02990436553955
    6. '
' → logprob: -11.15490436553955
    7. '    
' → logprob: -14.40490436553955
    8. 'for' → logprob: -15.27990436553955
    9. '``' → logprob: -16.654903411865234
    10. ' #' → logprob: -17.154903411865234

Token 926: ' Tra' (ID: 12393)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00319375516846776
    2. '#' → logprob: -5.7531938552856445
    3. '   ' → logprob: -12.003193855285645
    4. 'Si' → logprob: -12.253193855285645
    5. ' if' → logprob: -12.628193855285645
    6. 'If' → logprob: -13.253193855285645
    7. '```' → logprob: -17.003192901611328
    8. 'si' → logprob: -17.128192901611328
    9. 'Après' → logprob: -18.628192901611328
    10. '       ' → logprob: -18.753192901611328

Token 927: 'iter' (ID: 2340)
  Prédit: 'iter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iter' → logprob: -0.04320894181728363
    2. 'ter' → logprob: -3.1682088375091553
    3. 't' → logprob: -10.168209075927734
    4. 'it' → logprob: -10.418209075927734
    5. 'er' → logprob: -10.543209075927734
    6. 'if' → logprob: -11.043209075927734
    7. 'ver' → logprob: -11.168209075927734
    8. '#' → logprob: -11.418209075927734
    9. 'itez' → logprob: -11.418209075927734
    10. 'fter' → logprob: -11.918209075927734

Token 928: ' le' (ID: 505)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.21548838913440704
    2. 'la' → logprob: -2.5904884338378906
    3. 'final' → logprob: -3.8404884338378906
    4. 'the' → logprob: -4.090488433837891
    5. 'les' → logprob: -4.215488433837891
    6. '   ' → logprob: -4.215488433837891
    7. ' le' → logprob: -4.340488433837891
    8. ' la' → logprob: -4.340488433837891
    9. 'if' → logprob: -4.840488433837891
    10. 'remaining' → logprob: -4.965488433837891

Token 929: ' dernier' (ID: 27982)
  Prédit: 'dern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dern' → logprob: -0.002945251762866974
    2. 'der' → logprob: -6.252945423126221
    3. 'last' → logprob: -7.377945423126221
    4. ' dernier' → logprob: -8.002944946289062
    5. 'segment' → logprob: -10.752944946289062
    6. 'cas' → logprob: -11.002944946289062
    7. 'if' → logprob: -12.252944946289062
    8. 'reste' → logprob: -12.752944946289062
    9. '```' → logprob: -13.002944946289062
    10. 'final' → logprob: -13.002944946289062

Token 930: ' segment' (ID: 14806)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.41056349873542786
    2. 'if' → logprob: -1.2855634689331055
    3. ' segment' → logprob: -3.4105634689331055
    4. ' if' → logprob: -3.6605634689331055
    5. '   ' → logprob: -7.1605634689331055
    6. 'bloc' → logprob: -8.410563468933105
    7. '```' → logprob: -9.035563468933105
    8. ' bloc' → logprob: -9.785563468933105
    9. 'length' → logprob: -9.785563468933105
    10. ' ' → logprob: -9.785563468933105

Token 931: ' s' (ID: 265)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018456367775797844
    2. 'if' → logprob: -4.01845645904541
    3. ' if' → logprob: -8.14345645904541
    4. '```' → logprob: -11.14345645904541
    5. '	if' → logprob: -14.39345645904541
    6. '       ' → logprob: -15.14345645904541
    7. '    
' → logprob: -16.518455505371094
    8. 'If' → logprob: -16.893455505371094
    9. ',' → logprob: -17.143455505371094
    10. ' ' → logprob: -17.393455505371094

Token 932: ''il' (ID: 14683)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.011670605279505253
    2. ''il' → logprob: -5.0116705894470215
    3. 'if' → logprob: -5.7616705894470215
    4. ''i' → logprob: -6.3866705894470215
    5. '   ' → logprob: -10.38667106628418
    6. 'si' → logprob: -10.63667106628418
    7. '```' → logprob: -11.26167106628418
    8. ''ils' → logprob: -11.51167106628418
    9. 'length' → logprob: -11.88667106628418
    10. ''''' → logprob: -12.63667106628418

Token 933: ' existe' (ID: 19498)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.4049170911312103
    2. '>' → logprob: -1.1549171209335327
    3. ' length' → logprob: -4.404917240142822
    4. 'len' → logprob: -6.154917240142822
    5. '   ' → logprob: -6.779917240142822
    6. 'a' → logprob: -7.154917240142822
    7. '[length' → logprob: -8.154916763305664
    8. 'est' → logprob: -8.279916763305664
    9. ' >' → logprob: -8.279916763305664
    10. 'n' → logprob: -8.529916763305664

Token 934: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005259610712528229
    2. 'if' → logprob: -5.2552595138549805
    3. '```' → logprob: -10.88025951385498
    4. ' if' → logprob: -12.00525951385498
    5. '       ' → logprob: -14.38025951385498
    6. '
' → logprob: -15.63025951385498
    7. '    
' → logprob: -16.130260467529297
    8. '	if' → logprob: -17.005260467529297
    9. '           ' → logprob: -17.380260467529297
    10. '``' → logprob: -17.630260467529297

Token 935: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03193453326821327
    2. 'if' → logprob: -3.5319344997406006
    3. '```' → logprob: -6.65693473815918
    4. ' if' → logprob: -7.03193473815918
    5. '``' → logprob: -12.40693473815918
    6. '       ' → logprob: -12.65693473815918
    7. '	if' → logprob: -13.03193473815918
    8. '    
' → logprob: -13.15693473815918
    9. '<|end|>' → logprob: -14.03193473815918
    10. 'If' → logprob: -15.15693473815918

Token 936: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.06323780864477158
    2. '   ' → logprob: -2.8132379055023193
    3. ' if' → logprob: -6.81323766708374
    4. '```' → logprob: -8.688238143920898
    5. '	if' → logprob: -14.188238143920898
    6. '       ' → logprob: -14.313238143920898
    7. '``' → logprob: -15.938238143920898
    8. 'If' → logprob: -16.5632381439209
    9. '    
' → logprob: -17.3132381439209
    10. '
' → logprob: -17.3132381439209

Token 937: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.1002068892121315
    2. ' length' → logprob: -2.3502068519592285
    3. '(length' → logprob: -15.725207328796387
    4. '	length' → logprob: -16.85020637512207
    5. '   ' → logprob: -17.47520637512207
    6. '[length' → logprob: -18.10020637512207
    7. 'len' → logprob: -18.35020637512207
    8. 'leng' → logprob: -18.35020637512207
    9. ' ' → logprob: -18.97520637512207
    10. ' lenght' → logprob: -19.47520637512207

Token 938: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.03367520496249199
    2. ' >' → logprob: -3.408675193786621
    3. '   ' → logprob: -10.908675193786621
    4. ':' → logprob: -11.533675193786621
    5. ' ' → logprob: -15.158675193786621
    6. ':
' → logprob: -15.283675193786621
    7. '{' → logprob: -15.783675193786621
    8. '  ' → logprob: -15.783675193786621
    9. ' ' → logprob: -15.783675193786621
    10. '       ' → logprob: -16.658676147460938

Token 939: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00029625516617670655
    2. ' ' → logprob: -8.125296592712402
    3. '   ' → logprob: -16.375295639038086
    4. '<|end|>' → logprob: -17.625295639038086
    5. '=' → logprob: -18.000295639038086
    6. '```' → logprob: -18.500295639038086
    7. '۰' → logprob: -19.125295639038086
    8. '  ' → logprob: -19.375295639038086
    9. '[' → logprob: -19.937795639038086
    10. '<|end|>' → logprob: -20.375295639038086

Token 940: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.014684110297821e-06
    2. ' ' → logprob: -11.625008583068848
    3. '۰' → logprob: -18.875009536743164
    4. '=' → logprob: -19.000009536743164
    5. '   ' → logprob: -19.250009536743164
    6. '```' → logprob: -20.125009536743164
    7. '٠' → logprob: -20.625009536743164
    8. '０' → logprob: -20.750009536743164
    9. '०' → logprob: -20.875009536743164
    10. '০' → logprob: -20.937509536743164

Token 941: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.43545612692832947
    2. ':
' → logprob: -1.1854561567306519
    3. '       ' → logprob: -3.0604560375213623
    4. '   ' → logprob: -7.560456275939941
    5. '):
' → logprob: -11.810456275939941
    6. '=' → logprob: -11.935456275939941
    7. ':

' → logprob: -12.060456275939941
    8. ',' → logprob: -12.310456275939941
    9. ' total' → logprob: -13.435456275939941
    10. 'total' → logprob: -13.560456275939941

Token 942: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003337969828862697
    2. ' total' → logprob: -8.500333786010742
    3. ':' → logprob: -9.875333786010742
    4. '(total' → logprob: -10.875333786010742
    5. 'total' → logprob: -11.000333786010742
    6. '```' → logprob: -11.125333786010742
    7. '<|end|>' → logprob: -11.500333786010742
    8. ':
' → logprob: -12.125333786010742
    9. '   ' → logprob: -12.375333786010742
    10. ',' → logprob: -13.500333786010742

Token 943: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' (adapté à ' total') → logprob: -0.20577329397201538
    2. ' total' → logprob: -1.7057733535766602
    3. '       ' → logprob: -5.45577335357666
    4. '   ' → logprob: -10.70577335357666
    5. '(total' → logprob: -10.95577335357666
    6. '	total' → logprob: -11.20577335357666
    7. 'Total' → logprob: -11.70577335357666
    8. '           ' → logprob: -11.70577335357666
    9. '_total' → logprob: -12.45577335357666
    10. '```' → logprob: -13.20577335357666

Token 944: '_sub' (ID: 11572)
  Prédit: '_sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sub' → logprob: -3.173704271830502e-06
    2. 'sub' → logprob: -12.75000286102295
    3. 'total' → logprob: -16.625003814697266
    4. '\' → logprob: -17.250003814697266
    5. 'Sub' → logprob: -17.375003814697266
    6. '_total' → logprob: -18.000003814697266
    7. '_SUB' → logprob: -18.250003814697266
    8. '   ' → logprob: -18.250003814697266
    9. '_s' → logprob: -18.625003814697266
    10. '_sets' → logprob: -18.750003814697266

Token 945: 'sets' (ID: 7234)
  Prédit: 'sets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sets' → logprob: -0.012782858684659004
    2. '_sub' → logprob: -4.512783050537109
    3. 'sub' → logprob: -6.762783050537109
    4. 'ets' → logprob: -7.762783050537109
    5. 'set' → logprob: -9.01278305053711
    6. '_sets' → logprob: -11.13778305053711
    7. 'ub' → logprob: -11.26278305053711
    8. 'et' → logprob: -14.26278305053711
    9. '_set' → logprob: -14.51278305053711
    10. 'st' → logprob: -14.76278305053711

Token 946: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01814994215965271
    2. ' =' → logprob: -4.0181498527526855
    3. '   ' → logprob: -17.643150329589844
    4. '+=' → logprob: -18.643150329589844
    5. ' ' → logprob: -19.268150329589844
    6. '＝' → logprob: -20.393150329589844
    7. ' +=' → logprob: -20.518150329589844
    8. '```' → logprob: -20.518150329589844
    9. '       ' → logprob: -20.643150329589844
    10. ')' → logprob: -20.768150329589844

Token 947: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.07895984500646591
    2. '(total' → logprob: -2.5789599418640137
    3. '(' → logprob: -9.578959465026855
    4. '   ' → logprob: -14.953959465026855
    5. '(max' → logprob: -16.328960418701172
    6. ' ' → logprob: -16.578960418701172
    7. '       ' → logprob: -16.703960418701172
    8. '(current' → logprob: -16.953960418701172
    9. ' total' → logprob: -17.078960418701172
    10. '(t' → logprob: -17.078960418701172

Token 948: 'total' (ID: 9577)
  Prédit: 'total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.005241583567112684
    2. '(total' → logprob: -5.255241394042969
    3. ' total' → logprob: -11.755241394042969
    4. '   ' → logprob: -17.50524139404297
    5. '	total' → logprob: -18.13024139404297
    6. '$total' → logprob: -18.13024139404297
    7. ' (' → logprob: -18.75524139404297
    8. ',total' → logprob: -19.00524139404297
    9. 'tot' → logprob: -19.25524139404297
    10. '_total' → logprob: -19.50524139404297

Token 949: '_sub' (ID: 11572)
  Prédit: '_sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sub' → logprob: -0.00019507692195475101
    2. 'total' → logprob: -9.625195503234863
    3. '(total' → logprob: -9.750195503234863
    4. 'sub' → logprob: -9.875195503234863
    5. '+' → logprob: -11.375195503234863
    6. 'Sub' → logprob: -12.500195503234863
    7. '_total' → logprob: -14.000195503234863
    8. 'P' → logprob: -14.750195503234863
    9. '_exp' → logprob: -15.125195503234863
    10. '(' → logprob: -15.250195503234863

Token 950: 'sets' (ID: 7234)
  Prédit: 'sets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sets' → logprob: -0.006046231836080551
    2. '_sub' → logprob: -5.381046295166016
    3. 'sub' → logprob: -7.756046295166016
    4. 'ets' → logprob: -7.756046295166016
    5. 'set' → logprob: -7.881046295166016
    6. 'exp' → logprob: -9.881046295166016
    7. 'ub' → logprob: -10.256046295166016
    8. 'sects' → logprob: -10.256046295166016
    9. 'total' → logprob: -10.506046295166016
    10. 'et' → logprob: -11.756046295166016

Token 951: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.2519298195838928
    2. '+' → logprob: -1.501929759979248
    3. ' ' → logprob: -14.501930236816406
    4. ' ' → logprob: -15.876930236816406
    5. '＋' → logprob: -17.001930236816406
    6. '+
' → logprob: -18.251930236816406
    7. ' +
' → logprob: -18.626930236816406
    8. ')' → logprob: -18.876930236816406
    9. '```' → logprob: -19.001930236816406
    10. '   ' → logprob: -19.001930236816406

Token 952: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.004987424239516258
    2. ' mod' → logprob: -5.5049872398376465
    3. '(mod' → logprob: -7.0049872398376465
    4. ' (' → logprob: -13.879987716674805
    5. '	mod' → logprob: -16.129987716674805
    6. '(' → logprob: -16.254987716674805
    7. '_mod' → logprob: -17.629987716674805
    8. '   ' → logprob: -19.129987716674805
    9. '.mod' → logprob: -19.254987716674805
    10. ' мод' → logprob: -19.379987716674805

Token 953: '_exp' (ID: 30306)
  Prédit: '_exp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_exp' → logprob: -0.003180563682690263
    2. 'exp' → logprob: -5.753180503845215
    3. 'Exp' → logprob: -13.753180503845215
    4. '2' → logprob: -14.628180503845215
    5. 'mod' → logprob: -15.003180503845215
    6. 'EXP' → logprob: -15.503180503845215
    7. '-exp' → logprob: -15.503180503845215
    8. '(' → logprob: -15.878180503845215
    9. ''exp' → logprob: -15.878180503845215
    10. '	exp' → logprob: -16.37818145751953

Token 954: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -7.896309739408025e-07
    2. '(
' → logprob: -14.625000953674316
    3. '2' → logprob: -15.875000953674316
    4. ' (' → logprob: -16.625
    5. '```' → logprob: -18.75
    6. '(

' → logprob: -18.875
    7. '<|end|>' → logprob: -19.0
    8. ')' → logprob: -19.25
    9. '(
' → logprob: -20.25
    10. '('' → logprob: -20.75

Token 955: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.125
    3. '(' → logprob: -19.125
    4. '```' → logprob: -19.375
    5. '   ' → logprob: -20.875
    6. '[' → logprob: -21.75
    7. ')' → logprob: -22.0
    8. '  ' → logprob: -22.625
    9. '۲' → logprob: -22.625
    10. '<|end|>' → logprob: -23.375

Token 956: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0019997733179479837
    2. '(' → logprob: -6.251999855041504
    3. ',length' → logprob: -10.626999855041504
    4. '2' → logprob: -10.751999855041504
    5. ' ,' → logprob: -11.001999855041504
    6. '(length' → logprob: -12.876999855041504
    7. ')' → logprob: -13.126999855041504
    8. ' ' → logprob: -13.376999855041504
    9. ',
' → logprob: -14.626999855041504
    10. '```' → logprob: -15.126999855041504

Token 957: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.0002036595979006961
    2. ' length' → logprob: -8.500204086303711
    3. '(length' → logprob: -16.37520408630371
    4. ',length' → logprob: -16.87520408630371
    5. '   ' → logprob: -18.62520408630371
    6. '[length' → logprob: -18.87520408630371
    7. '	length' → logprob: -19.37520408630371
    8. 'ength' → logprob: -20.87520408630371
    9. ',' → logprob: -21.00020408630371
    10. '_length' → logprob: -21.00020408630371

Token 958: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.810037742368877e-05
    2. ',P' → logprob: -10.625038146972656
    3. ',length' → logprob: -11.375038146972656
    4. ' ,' → logprob: -13.250038146972656
    5. '   ' → logprob: -15.750038146972656
    6. 'length' → logprob: -15.875038146972656
    7. '```' → logprob: -17.250038146972656
    8. ',
' → logprob: -17.250038146972656
    9. ',len' → logprob: -17.375038146972656
    10. '       ' → logprob: -17.750038146972656

Token 959: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -1.759734732331708e-05
    2. ' P' → logprob: -11.000017166137695
    3. '   ' → logprob: -14.000017166137695
    4. ')' → logprob: -18.125017166137695
    5. '       ' → logprob: -18.125017166137695
    6. '```' → logprob: -18.250017166137695
    7. '	P' → logprob: -18.625017166137695
    8. ',P' → logprob: -19.250017166137695
    9. ',' → logprob: -19.250017166137695
    10. ' ' → logprob: -19.625017166137695

Token 960: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005966392927803099
    2. ')' → logprob: -7.625596523284912
    3. '   ' → logprob: -9.37559700012207
    4. ' ,' → logprob: -11.75059700012207
    5. '),' → logprob: -12.00059700012207
    6. '       ' → logprob: -12.00059700012207
    7. '           ' → logprob: -14.12559700012207
    8. '```' → logprob: -14.12559700012207
    9. ',
' → logprob: -14.25059700012207
    10. ' ' → logprob: -14.50059700012207

Token 961: ' -' (ID: 533)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004418743774294853
    2. ' -' → logprob: -8.250441551208496
    3. '-' → logprob: -8.875441551208496
    4. ' ,' → logprob: -10.875441551208496
    5. ')' → logprob: -11.375441551208496
    6. '   ' → logprob: -12.625441551208496
    7. '%' → logprob: -12.875441551208496
    8. '       ' → logprob: -13.000441551208496
    9. ' %' → logprob: -14.375441551208496
    10. '```' → logprob: -14.625441551208496

Token 962: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.869017852295656e-06
    2. ' ' → logprob: -12.000006675720215
    3. '   ' → logprob: -14.875006675720215
    4. '<|end|>' → logprob: -16.25000762939453
    5. '       ' → logprob: -16.50000762939453
    6. '```' → logprob: -16.62500762939453
    7. 'import' → logprob: -18.00000762939453
    8. ')' → logprob: -19.50000762939453
    9. '           ' → logprob: -19.75000762939453
    10. '...' → logprob: -20.12500762939453

Token 963: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.125
    3. '   ' → logprob: -17.875
    4. '       ' → logprob: -19.125
    5. '```' → logprob: -19.125
    6. '<|end|>' → logprob: -19.125
    7. 'import' → logprob: -19.75
    8. ')' → logprob: -21.0
    9. '           ' → logprob: -21.625
    10. '
' → logprob: -21.875

Token 964: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.6240566083070007e-06
    2. ')%' → logprob: -14.125001907348633
    3. ' )' → logprob: -14.625001907348633
    4. '   ' → logprob: -15.125001907348633
    5. ')
' → logprob: -17.875001907348633
    6. '')' → logprob: -17.875001907348633
    7. '       ' → logprob: -18.375001907348633
    8. '")' → logprob: -18.500001907348633
    9. '`)' → logprob: -18.500001907348633
    10. ']' → logprob: -19.250001907348633

Token 965: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.5251951813697815
    2. ' %' → logprob: -0.9001951813697815
    3. ')' → logprob: -6.275195121765137
    4. ')%' → logprob: -9.275195121765137
    5. '       ' → logprob: -10.400195121765137
    6. '   ' → logprob: -10.525195121765137
    7. '```' → logprob: -12.025195121765137
    8. '           ' → logprob: -12.150195121765137
    9. ' ' → logprob: -12.775195121765137
    10. '()%' → logprob: -12.900195121765137

Token 966: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.0015023599844425917
    2. ' P' → logprob: -6.501502513885498
    3. '(P' → logprob: -18.751502990722656
    4. ' ' → logprob: -19.001502990722656
    5. '   ' → logprob: -19.751502990722656
    6. '	P' → logprob: -20.251502990722656
    7. '\P' → logprob: -20.626502990722656
    8. '```' → logprob: -20.751502990722656
    9. '  ' → logprob: -21.251502990722656
    10. '_P' → logprob: -21.376502990722656

Token 967: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0008442913531325758
    2. '    
' → logprob: -7.875844478607178
    3. 'return' → logprob: -8.00084400177002
    4. ' return' → logprob: -9.62584400177002
    5. '
' → logprob: -10.12584400177002
    6. '	return' → logprob: -11.25084400177002
    7. '<|end|>' → logprob: -12.50084400177002
    8. '        
' → logprob: -13.50084400177002
    9. '```' → logprob: -13.62584400177002
    10. '       ' → logprob: -13.75084400177002

Token 968: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008550391532480717
    2. 'return' → logprob: -5.38355016708374
    3. '```' → logprob: -6.13355016708374
    4. ' return' → logprob: -6.63355016708374
    5. '<|end|>' → logprob: -8.883550643920898
    6. '    
' → logprob: -9.133550643920898
    7. '	return' → logprob: -9.258550643920898
    8. '
' → logprob: -10.258550643920898
    9. '``' → logprob: -10.633550643920898
    10. '       ' → logprob: -11.883550643920898

Token 969: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4741803705692291
    2. 'return' (adapté à ' return') → logprob: -0.9741803407669067
    3. ' return' → logprob: -9.724180221557617
    4. '```' → logprob: -10.224180221557617
    5. '	return' → logprob: -12.099180221557617
    6. ':return' → logprob: -14.349180221557617
    7. '_return' → logprob: -14.849180221557617
    8. '{return' → logprob: -14.974180221557617
    9. '    
' → logprob: -15.849180221557617
    10. '       ' → logprob: -15.974180221557617

Token 970: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.1602255403995514
    2. ' total' → logprob: -1.910225510597229
    3. '   ' → logprob: -13.660225868225098
    4. '(total' → logprob: -15.785225868225098
    5. ' ' → logprob: -16.53522491455078
    6. '	total' → logprob: -17.28522491455078
    7. 'tot' → logprob: -19.91022491455078
    8. '$total' → logprob: -20.16022491455078
    9. ' ' → logprob: -20.28522491455078
    10. '  ' → logprob: -20.41022491455078

Token 971: '_sub' (ID: 11572)
  Prédit: '_sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sub' → logprob: -1.0280383548888494e-06
    2. '_s' → logprob: -15.125000953674316
    3. 'sub' → logprob: -15.625000953674316
    4. '_' → logprob: -15.625000953674316
    5. '_subset' → logprob: -16.000001907348633
    6. '_sets' → logprob: -16.125001907348633
    7. '\' → logprob: -16.625001907348633
    8. 's' → logprob: -17.250001907348633
    9. '```' → logprob: -17.500001907348633
    10. ''_' → logprob: -17.625001907348633

Token 972: 'sets' (ID: 7234)
  Prédit: 'sets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sets' → logprob: -0.16023509204387665
    2. 'ets' → logprob: -1.910235047340393
    3. 'ests' → logprob: -12.160235404968262
    4. '_sets' → logprob: -12.160235404968262
    5. 'ects' → logprob: -15.910235404968262
    6. 'ts' → logprob: -16.285234451293945
    7. ' sets' → logprob: -17.035234451293945
    8. 'Sets' → logprob: -17.160234451293945
    9. '__' → logprob: -17.535234451293945
    10. 'set' → logprob: -17.535234451293945

Token 973: ' %' (ID: 1851)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 974: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -1.0206720617134124e-05
    2. ' P' → logprob: -11.50001049041748
    3. '(P' → logprob: -19.000009536743164
    4. ' ' → logprob: -19.250009536743164
    5. '\P' → logprob: -22.000009536743164
    6. '   ' → logprob: -22.250009536743164
    7. 'p' → logprob: -22.875009536743164
    8. '  ' → logprob: -23.375009536743164
    9. '(' → logprob: -23.500009536743164
    10. '	P' → logprob: -23.750009536743164

Token 975: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 976: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 977: ' Lire' (ID: 57624)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.05315269157290459
    2. '<|end|>' → logprob: -3.1781527996063232
    3. 'def' → logprob: -5.178152561187744
    4. '```' → logprob: -5.553152561187744
    5. 'import' → logprob: -8.053153038024902
    6. '<|end|>' → logprob: -8.678153038024902
    7. 'if' → logprob: -11.053153038024902
    8. '...' → logprob: -12.303153038024902
    9. 'pass' → logprob: -12.303153038024902
    10. 'Explain' → logprob: -12.553153038024902

Token 978: ' les' (ID: 1341)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.11006173491477966
    2. 'import' → logprob: -2.7350616455078125
    3. 'input' → logprob: -4.2350616455078125
    4. 'if' → logprob: -4.6100616455078125
    5. '```' → logprob: -5.7350616455078125
    6. 'def' → logprob: -6.1100616455078125
    7. '<|end|>' → logprob: -6.2350616455078125
    8. ' input' → logprob: -7.1100616455078125
    9. 'n' → logprob: -7.2350616455078125
    10. '(' → logprob: -7.2350616455078125

Token 979: ' données' (ID: 30580)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.24996644258499146
    2. ' inputs' → logprob: -2.3749663829803467
    3. 'inputs' → logprob: -2.7499663829803467
    4. 'input' → logprob: -3.8749663829803467
    5. '#' → logprob: -4.374966621398926
    6. 'entrée' → logprob: -5.124966621398926
    7. 'n' → logprob: -5.499966621398926
    8. ' entr' → logprob: -5.624966621398926
    9. 'entr' → logprob: -5.624966621398926
    10. 'stdin' → logprob: -5.749966621398926

Token 980: ' jusqu' (ID: 21961)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.003157634288072586
    2. 'import' → logprob: -6.253157615661621
    3. 'for' → logprob: -8.253157615661621
    4. 'input' → logprob: -8.253157615661621
    5. 'N' → logprob: -8.503157615661621
    6. 'if' → logprob: -9.128157615661621
    7. ' n' → logprob: -9.503157615661621
    8. '(n' → logprob: -9.503157615661621
    9. 'line' → logprob: -9.628157615661621
    10. 'num' → logprob: -10.003157615661621

Token 981: ''à' (ID: 33688)
  Prédit: ''à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''à' → logprob: -0.10029637813568115
    2. 'à' → logprob: -2.7252964973449707
    3. '’à' → logprob: -4.725296497344971
    4. 'a' → logprob: -4.975296497344971
    5. ''au' → logprob: -6.100296497344971
    6. '()' → logprob: -6.475296497344971
    7. 'EOF' → logprob: -6.475296497344971
    8. 'au' → logprob: -6.600296497344971
    9. '=' → logprob: -6.600296497344971
    10. ' EOF' → logprob: -6.600296497344971

Token 982: ' "' (ID: 392)
  Prédit: 'EOF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'EOF' → logprob: -0.535193145275116
    2. 'la' → logprob: -1.0351932048797607
    3. ' la' → logprob: -3.0351932048797607
    4. ' EOF' → logprob: -4.535192966461182
    5. 'fin' → logprob: -7.785192966461182
    6. '```' → logprob: -9.91019344329834
    7. 'l' → logprob: -11.16019344329834
    8. 'le' → logprob: -12.66019344329834
    9. ' eof' → logprob: -13.16019344329834
    10. 'f' → logprob: -13.41019344329834

Token 983: '0' (ID: 15)
  Prédit: 'EOF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'EOF' → logprob: -0.037936944514513016
    2. ' EOF' → logprob: -4.412937164306641
    3. 'import' → logprob: -4.912937164306641
    4. '"' → logprob: -5.287937164306641
    5. '""' → logprob: -5.287937164306641
    6. '```' → logprob: -5.787937164306641
    7. '''' → logprob: -6.037937164306641
    8. '"""' → logprob: -7.287937164306641
    9. '#' → logprob: -8.28793716430664
    10. '=""' → logprob: -8.66293716430664

Token 984: ' ' (ID: 220)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -1.2494933605194092
    2. ' ' → logprob: -1.6244933605194092
    3. 'if' → logprob: -2.749493360519409
    4. '0' → logprob: -2.749493360519409
    5. '   ' → logprob: -2.999493360519409
    6. ',' → logprob: -2.999493360519409
    7. ' while' → logprob: -2.999493360519409
    8. '  ' → logprob: -3.249493360519409
    9. 'import' → logprob: -3.499493360519409
    10. 'input' → logprob: -3.749493360519409

Token 985: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1802329272031784
    2. ' ' → logprob: -1.8052328824996948
    3. ',' → logprob: -8.055233001708984
    4. '"' → logprob: -9.805233001708984
    5. '<|end|>' → logprob: -9.930233001708984
    6. '#' → logprob: -11.180233001708984
    7. '  ' → logprob: -11.555233001708984
    8. '1' → logprob: -11.930233001708984
    9. '<|end|>' → logprob: -12.055233001708984
    10. '
' → logprob: -12.555233001708984

Token 986: ' ' (ID: 220)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.3382701277732849
    2. '0' → logprob: -2.3382701873779297
    3. ' ' → logprob: -2.7132701873779297
    4. '```' → logprob: -3.5882701873779297
    5. '<|end|>' → logprob: -3.9632701873779297
    6. '
' → logprob: -3.9632701873779297
    7. '\n' → logprob: -4.21327018737793
    8. '<|end|>' → logprob: -4.46327018737793
    9. '  ' → logprob: -5.33827018737793
    10. ',' → logprob: -5.46327018737793

Token 987: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01768438331782818
    2. '"' → logprob: -4.267684459686279
    3. '\n' → logprob: -5.892684459686279
    4. ' ' → logprob: -8.142683982849121
    5. '<|end|>' → logprob: -8.392683982849121
    6. '<|end|>' → logprob: -9.517683982849121
    7. '```' → logprob: -10.017683982849121
    8. '">' → logprob: -10.642683982849121
    9. '1' → logprob: -10.767683982849121
    10. '"\' → logprob: -11.392683982849121

Token 988: '"
' (ID: 1092)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5045995116233826
    2. 'while' → logprob: -1.3795995712280273
    3. '\n' → logprob: -2.0045995712280273
    4. '

' → logprob: -5.879599571228027
    5. 'for' → logprob: -6.254599571228027
    6. ' while' → logprob: -6.504599571228027
    7. '
' → logprob: -7.379599571228027
    8. 'n' → logprob: -7.629599571228027
    9. '```' → logprob: -7.754599571228027
    10. 'import' → logprob: -7.879599571228027

Token 989: 'for' (ID: 1938)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.010689573362469673
    2. 'for' → logprob: -4.635689735412598
    3. ' while' → logprob: -7.385689735412598
    4. '```' → logprob: -8.760689735412598
    5. '
' → logprob: -9.635689735412598
    6. 'import' → logprob: -10.135689735412598
    7. 'n' → logprob: -10.635689735412598
    8. 'if' → logprob: -11.510689735412598
    9. ' for' → logprob: -12.135689735412598
    10. 'line' → logprob: -12.510689735412598

Token 990: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.007944806478917599
    2. 'line' → logprob: -4.882944583892822
    3. ' ligne' → logprob: -9.00794506072998
    4. 'ligne' → logprob: -9.38294506072998
    5. ' ' → logprob: -9.63294506072998
    6. '	line' → logprob: -10.63294506072998
    7. ' l' → logprob: -11.50794506072998
    8. 'l' → logprob: -11.50794506072998
    9. ' _' → logprob: -12.00794506072998
    10. ' ' → logprob: -12.75794506072998

Token 991: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0013352400856092572
    2. 'in' → logprob: -6.626335144042969
    3. ' =' → logprob: -12.376335144042969
    4. '=' → logprob: -13.626335144042969
    5. ' ' → logprob: -13.626335144042969
    6. '   ' → logprob: -13.751335144042969
    7. '	in' → logprob: -14.751335144042969
    8. 'line' → logprob: -15.626335144042969
    9. 'import' → logprob: -16.00133514404297
    10. '_in' → logprob: -16.25133514404297

Token 992: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.0009124171338044107
    2. ' sys' → logprob: -7.000912189483643
    3. '=sys' → logprob: -14.1259126663208
    4. 'stdin' → logprob: -16.875911712646484
    5. '(sys' → logprob: -17.375911712646484
    6. 'input' → logprob: -17.625911712646484
    7. '	sys' → logprob: -18.000911712646484
    8. '```' → logprob: -19.125911712646484
    9. 'import' → logprob: -19.875911712646484
    10. 'in' → logprob: -22.000911712646484

Token 993: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.00507804099470377
    2. 'stdin' → logprob: -5.380077838897705
    3. '.readline' → logprob: -8.505078315734863
    4. '(stdin' → logprob: -8.630078315734863
    5. '.' → logprob: -10.630078315734863
    6. ' stdin' → logprob: -10.880078315734863
    7. 'in' → logprob: -11.255078315734863
    8. '.stdout' → logprob: -11.505078315734863
    9. 'import' → logprob: -13.005078315734863
    10. '```' → logprob: -13.005078315734863

Token 994: ':
' (ID: 734)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.28914570808410645
    2. ':' → logprob: -2.5391457080841064
    3. 'in' → logprob: -3.0391457080841064
    4. '.readline' → logprob: -3.1641457080841064
    5. ':
' → logprob: -4.039145469665527
    6. '   ' → logprob: -4.289145469665527
    7. '.strip' → logprob: -4.664145469665527
    8. '=' → logprob: -4.914145469665527
    9. ' =' → logprob: -5.039145469665527
    10. '():
' → logprob: -5.289145469665527

Token 995: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0008398807840421796
    2. '    
' → logprob: -7.875839710235596
    3. ' if' → logprob: -8.750840187072754
    4. 'tokens' → logprob: -9.250840187072754
    5. '```' → logprob: -10.000840187072754
    6. ' line' → logprob: -10.250840187072754
    7. '<|end|>' → logprob: -11.000840187072754
    8. 'a' → logprob: -11.375840187072754
    9. ' tokens' → logprob: -11.375840187072754
    10. 'data' → logprob: -11.500840187072754

Token 996: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' (adapté à ' A') → logprob: -0.15377111732959747
    2. 'line' → logprob: -2.528771162033081
    3. ' line' → logprob: -3.403771162033081
    4. '   ' → logprob: -4.028770923614502
    5. ' A' → logprob: -5.028770923614502
    6. 'if' → logprob: -6.153770923614502
    7. 'a' → logprob: -6.153770923614502
    8. ' if' → logprob: -8.02877140045166
    9. ' parts' → logprob: -8.27877140045166
    10. 'parts' → logprob: -8.77877140045166

Token 997: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00033939589047804475
    2. ' ,' → logprob: -8.75033950805664
    3. ',A' → logprob: -9.75033950805664
    4. '=' → logprob: -10.37533950805664
    5. '<|end|>' → logprob: -11.12533950805664
    6. ',b' → logprob: -11.50033950805664
    7. ',B' → logprob: -11.62533950805664
    8. ',int' → logprob: -11.75033950805664
    9. '_,' → logprob: -12.00033950805664
    10. ',s' → logprob: -12.37533950805664

Token 998: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.00033581978641450405
    2. ' B' → logprob: -8.000335693359375
    3. 'P' → logprob: -15.375335693359375
    4. ' ' → logprob: -16.375335693359375
    5. '<|end|>' → logprob: -17.125335693359375
    6. ',' → logprob: -18.125335693359375
    7. '  ' → logprob: -18.750335693359375
    8. 'b' → logprob: -19.500335693359375
    9. '  
' → logprob: -20.125335693359375
    10. '=' → logprob: -20.125335693359375

Token 999: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006835783366113901
    2. '=' → logprob: -5.0068359375
    3. ' ,' → logprob: -9.6318359375
    4. ' =' → logprob: -10.2568359375
    5. '<|end|>' → logprob: -11.3818359375
    6. ',A' → logprob: -12.2568359375
    7. '‌,' → logprob: -14.1318359375
    8. ')' → logprob: -15.0068359375
    9. ',P' → logprob: -15.2568359375
    10. ',B' → logprob: -15.4443359375

Token 1000: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -7.226628895296017e-06
    2. ' P' → logprob: -11.875007629394531
    3. ' ' → logprob: -16.37500762939453
    4. 'C' → logprob: -19.12500762939453
    5. '   ' → logprob: -19.25000762939453
    6. '  ' → logprob: -19.50000762939453
    7. 'p' → logprob: -19.50000762939453
    8. '	P' → logprob: -20.12500762939453
    9. '  
' → logprob: -21.00000762939453
    10. '
' → logprob: -21.37500762939453

Token 1001: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.007607697509229183
    2. ' =' → logprob: -4.882607460021973
    3. '=line' → logprob: -13.507607460021973
    4. '=
' → logprob: -15.507607460021973
    5. ')' → logprob: -17.50760841369629
    6. '=

' → logprob: -17.63260841369629
    7. ' ' → logprob: -18.13260841369629
    8. ' =
' → logprob: -18.50760841369629
    9. ',' → logprob: -18.50760841369629
    10. '=input' → logprob: -18.63260841369629

Token 1002: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.3133124113082886
    2. ' map' → logprob: -1.3133124113082886
    3. '(map' → logprob: -10.813312530517578
    4. 'line' → logprob: -11.188312530517578
    5. '[line' → logprob: -11.938312530517578
    6. ' line' → logprob: -12.188312530517578
    7. '[' → logprob: -12.438312530517578
    8. '	map' → logprob: -14.563312530517578
    9. ' [' → logprob: -15.313312530517578
    10. '(line' → logprob: -16.313312530517578

Token 1003: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -2.4391956685576588e-05
    2. 'int' → logprob: -11.125024795532227
    3. '(str' → logprob: -11.750024795532227
    4. '=int' → logprob: -14.625024795532227
    5. '(' → logprob: -14.750024795532227
    6. '(lambda' → logprob: -14.750024795532227
    7. '[int' → logprob: -15.500024795532227
    8. '<int' → logprob: -15.500024795532227
    9. '```' → logprob: -16.750024795532227
    10. 'str' → logprob: -17.750024795532227

Token 1004: ',' (ID: 11)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.0029526203870773315
    2. 'line' → logprob: -6.252952575683594
    3. ')' → logprob: -7.377952575683594
    4. '=line' → logprob: -8.877952575683594
    5. ',line' → logprob: -9.002952575683594
    6. '(' → logprob: -9.502952575683594
    7. '[line' → logprob: -10.752952575683594
    8. ' line' → logprob: -10.752952575683594
    9. '#line' → logprob: -11.752952575683594
    10. ',' → logprob: -12.752952575683594

Token 1005: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -1.0206720617134124e-05
    2. ' line' → logprob: -11.50001049041748
    3. '(line' → logprob: -17.000009536743164
    4. '=line' → logprob: -20.750009536743164
    5. '[line' → logprob: -21.125009536743164
    6. '	line' → logprob: -21.125009536743164
    7. '#line' → logprob: -21.875009536743164
    8. '_line' → logprob: -22.500009536743164
    9. '   ' → logprob: -22.875009536743164
    10. ',line' → logprob: -24.500009536743164

Token 1006: '.split' (ID: 10347)
  Prédit: '.strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.203693225979805
    2. '().' → logprob: -1.9536932706832886
    3. '.split' → logprob: -3.203693151473999
    4. '.rstrip' → logprob: -6.328693389892578
    5. '.readline' → logprob: -9.703693389892578
    6. '.' → logprob: -10.203693389892578
    7. 'strip' → logprob: -10.828693389892578
    8. '(strip' → logprob: -11.703693389892578
    9. 'split' → logprob: -12.703693389892578
    10. 'rstrip' → logprob: -12.953693389892578

Token 1007: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0020728250965476036
    2. ')' → logprob: -6.627072811126709
    3. '()' → logprob: -7.252072811126709
    4. '(' → logprob: -10.877073287963867
    5. '())
' → logprob: -11.127073287963867
    6. '(','' → logprob: -13.377073287963867
    7. '('' → logprob: -13.502073287963867
    8. '(),' → logprob: -14.752073287963867
    9. '()]' → logprob: -15.627073287963867
    10. ' ())' → logprob: -15.627073287963867

Token 1008: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.645972728729248
    2. ' if' → logprob: -0.895972728729248
    3. '<|end|>' → logprob: -3.020972728729248
    4. '   ' → logprob: -4.520972728729248
    5. '```' → logprob: -5.520972728729248
    6. ' ' → logprob: -6.895972728729248
    7. '[' → logprob: -7.270972728729248
    8. '
' → logprob: -7.520972728729248
    9. 'i' → logprob: -7.770972728729248
    10. '  
' → logprob: -8.770973205566406

Token 1009: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.00010151672904612496
    2. ' if' → logprob: -9.250101089477539
    3. '   ' → logprob: -12.125101089477539
    4. '```' → logprob: -18.25010108947754
    5. '	if' → logprob: -18.50010108947754
    6. 'If' → logprob: -19.50010108947754
    7. 'i' → logprob: -20.00010108947754
    8. '
' → logprob: -20.12510108947754
    9. ';if' → logprob: -20.25010108947754
    10. '    
' → logprob: -20.25010108947754

Token 1010: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.00317783304490149
    2. ' A' → logprob: -5.753177642822266
    3. '(A' → logprob: -15.878177642822266
    4. '(' → logprob: -17.503177642822266
    5. ' ' → logprob: -17.503177642822266
    6. '	A' → logprob: -18.753177642822266
    7. '   ' → logprob: -19.378177642822266
    8. ' (' → logprob: -20.378177642822266
    9. '  ' → logprob: -20.878177642822266
    10. '0' → logprob: -21.003177642822266

Token 1011: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3135647773742676
    2. '==' → logprob: -1.3135647773742676
    3. '=' → logprob: -8.93856430053711
    4. ' <=' → logprob: -10.31356430053711
    5. ' ' → logprob: -10.43856430053711
    6. '<=' → logprob: -10.56356430053711
    7. '0' → logprob: -11.06356430053711
    8. '   ' → logprob: -11.31356430053711
    9. '<|end|>' → logprob: -11.56356430053711
    10. '```' → logprob: -11.93856430053711

Token 1012: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -17.0
    3. 'B' → logprob: -18.0
    4. '۰' → logprob: -22.75
    5. '```' → logprob: -24.875
    6. '=' → logprob: -24.875
    7. '==' → logprob: -25.375
    8. ' B' → logprob: -25.75
    9. '０' → logprob: -26.5
    10. '
' → logprob: -26.5

Token 1013: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.5
    3. 'B' → logprob: -17.125
    4. 'and' → logprob: -22.25
    5. '۰' → logprob: -23.375
    6. ' B' → logprob: -24.625
    7. '=' → logprob: -25.25
    8. ' and' → logprob: -25.5
    9. '```' → logprob: -25.75
    10. '==' → logprob: -25.75

Token 1014: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.386875182390213
    2. 'and' → logprob: -1.1368751525878906
    3. '   ' → logprob: -14.13687515258789
    4. '	and' → logprob: -14.13687515258789
    5. ' и' → logprob: -14.26187515258789
    6. ' ' → logprob: -14.26187515258789
    7. '0' → logprob: -14.38687515258789
    8. '    ' → logprob: -15.38687515258789
    9. '  ' → logprob: -16.26187515258789
    10. ',' → logprob: -16.88687515258789

Token 1015: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -2.7610454708337784e-05
    2. ' B' → logprob: -10.500027656555176
    3. '   ' → logprob: -17.87502670288086
    4. '  ' → logprob: -19.37502670288086
    5. ' ' → logprob: -21.25002670288086
    6. '	B' → logprob: -21.87502670288086
    7. 'b' → logprob: -24.12502670288086
    8. '    ' → logprob: -24.87502670288086
    9. '>B' → logprob: -26.12502670288086
    10. 'A' → logprob: -26.25002670288086

Token 1016: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.4741049110889435
    2. '==' → logprob: -0.9741048812866211
    3. '0' → logprob: -11.224104881286621
    4. ' ' → logprob: -11.849104881286621
    5. ' and' → logprob: -12.349104881286621
    6. 'and' → logprob: -13.599104881286621
    7. '=' → logprob: -14.474104881286621
    8. '===' → logprob: -14.599104881286621
    9. '```' → logprob: -15.599104881286621
    10. ')==' → logprob: -15.724104881286621

Token 1017: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.438573680294212e-06
    2. ' ' → logprob: -12.125005722045898
    3. 'and' → logprob: -19.0000057220459
    4. ' and' → logprob: -20.7500057220459
    5. '```' → logprob: -22.2500057220459
    6. '  ' → logprob: -22.5000057220459
    7. '   ' → logprob: -22.5000057220459
    8. '=' → logprob: -23.0000057220459
    9. '۰' → logprob: -23.2500057220459
    10. '<|end|>' → logprob: -23.6250057220459

Token 1018: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.375003814697266
    3. 'and' → logprob: -22.000003814697266
    4. ' and' → logprob: -22.500003814697266
    5. 'A' → logprob: -24.000003814697266
    6. '۰' → logprob: -24.250003814697266
    7. '  ' → logprob: -25.250003814697266
    8. '```' → logprob: -25.375003814697266
    9. '=' → logprob: -25.750003814697266
    10. ' ' → logprob: -25.875003814697266

Token 1019: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.20145183801651
    2. 'and' → logprob: -1.7014517784118652
    3. '0' → logprob: -10.201452255249023
    4. ' ' → logprob: -14.576452255249023
    5. '```' → logprob: -15.576452255249023
    6. '==' → logprob: -15.826452255249023
    7. ' и' → logprob: -15.826452255249023
    8. '	and' → logprob: -15.951452255249023
    9. '&&' → logprob: -16.076452255249023
    10. '<|end|>' → logprob: -16.326452255249023

Token 1020: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -2.1008713702030946e-06
    2. ' P' → logprob: -13.250001907348633
    3. '0' → logprob: -15.500001907348633
    4. '   ' → logprob: -19.375001907348633
    5. ' ' → logprob: -20.000001907348633
    6. '  ' → logprob: -20.375001907348633
    7. '	P' → logprob: -23.250001907348633
    8. '
' → logprob: -23.750001907348633
    9. '```' → logprob: -24.625001907348633
    10. '    ' → logprob: -25.250001907348633

Token 1021: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.008740085177123547
    2. ' ==' → logprob: -4.758739948272705
    3. '=' → logprob: -9.258740425109863
    4. '<|end|>' → logprob: -11.258740425109863
    5. '<|end|>' → logprob: -12.383740425109863
    6. '0' → logprob: -12.633740425109863
    7. '===' → logprob: -12.758740425109863
    8. ')==' → logprob: -12.883740425109863
    9. '()==' → logprob: -14.008740425109863
    10. ']==' → logprob: -14.008740425109863

Token 1022: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.000006675720215
    3. '۰' → logprob: -20.5000057220459
    4. '   ' → logprob: -21.1250057220459
    5. '  ' → logprob: -22.1250057220459
    6. '```' → logprob: -22.2500057220459
    7. '০' → logprob: -22.8750057220459
    8. '०' → logprob: -23.7500057220459
    9. '1' → logprob: -23.8750057220459
    10. '٠' → logprob: -24.0000057220459

Token 1023: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.875
    3. '۰' → logprob: -21.875
    4. '   ' → logprob: -22.5
    5. '```' → logprob: -23.75
    6. '০' → logprob: -23.875
    7. '  ' → logprob: -24.0
    8. '1' → logprob: -24.75
    9. '٠' → logprob: -24.75
    10. '०' → logprob: -25.0

Token 1024: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1369352489709854
    2. ':
' → logprob: -2.386935234069824
    3. '       ' → logprob: -3.636935234069824
    4. '   ' → logprob: -4.636935234069824
    5. '):
' → logprob: -11.761935234069824
    6. '	break' → logprob: -12.136935234069824
    7. '():
' → logprob: -12.136935234069824
    8. '.' → logprob: -12.261935234069824
    9. ',' → logprob: -12.761935234069824
    10. '     ' → logprob: -12.886935234069824

Token 1025: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010955621488392353
    2. '   ' → logprob: -4.635955810546875
    3. ':' → logprob: -6.760955810546875
    4. ':
' → logprob: -10.385955810546875
    5. '	break' → logprob: -12.510955810546875
    6. '      ' → logprob: -13.635955810546875
    7. '     ' → logprob: -13.760955810546875
    8. 'break' → logprob: -14.260955810546875
    9. ' break' → logprob: -14.385955810546875
    10. '           ' → logprob: -14.385955810546875

Token 1026: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.0006892018136568367
    2. ' break' → logprob: -7.7506890296936035
    3. '   ' → logprob: -8.750689506530762
    4. '	break' → logprob: -9.250689506530762
    5. '       ' → logprob: -12.500689506530762
    6. '_break' → logprob: -15.000689506530762
    7. '    
' → logprob: -16.750688552856445
    8. '```' → logprob: -16.875688552856445
    9. 'Break' → logprob: -17.000688552856445
    10. '
' → logprob: -18.000688552856445

Token 1027: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14478442072868347
    2. 'print' → logprob: -2.019784450531006
    3. '    
' → logprob: -6.519784450531006
    4. '
' → logprob: -7.894784450531006
    5. '  
' → logprob: -9.394783973693848
    6. '```' → logprob: -9.394783973693848
    7. ' print' → logprob: -9.769783973693848
    8. '	print' → logprob: -11.769783973693848
    9. 'result' → logprob: -11.769783973693848
    10. '#print' → logprob: -12.269783973693848

Token 1028: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.001167364651337266
    2. '   ' → logprob: -6.876167297363281
    3. 'result' → logprob: -9.126167297363281
    4. '```' → logprob: -11.251167297363281
    5. ' print' → logprob: -11.501167297363281
    6. '    
' → logprob: -13.376167297363281
    7. '
' → logprob: -14.876167297363281
    8. '	print' → logprob: -15.001167297363281
    9. '``' → logprob: -16.37616729736328
    10. 'output' → logprob: -16.37616729736328

Token 1029: ' result' (ID: 1534)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0002043748099822551
    2. 'result' (adapté à ' result') → logprob: -9.000204086303711
    3. ' print' → logprob: -9.500204086303711
    4. '   ' → logprob: -12.625204086303711
    5. '```' → logprob: -13.625204086303711
    6. 'output' → logprob: -14.000204086303711
    7. '    
' → logprob: -15.250204086303711
    8. '	print' → logprob: -15.625204086303711
    9. 'answer' → logprob: -16.62520408630371
    10. ' result' → logprob: -17.12520408630371

Token 1030: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38687604665756226
    2. '=' → logprob: -1.136876106262207
    3. '   ' → logprob: -13.136876106262207
    4. ')' → logprob: -14.261876106262207
    5. ',' → logprob: -14.761876106262207
    6. ' ' → logprob: -14.886876106262207
    7. '＝' → logprob: -15.136876106262207
    8. '    ' → logprob: -15.636876106262207
    9. 'print' → logprob: -15.761876106262207
    10. '=sys' → logprob: -16.26187515258789

Token 1031: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.000553151941858232
    2. ' count' → logprob: -7.500553131103516
    3. '(count' → logprob: -16.375553131103516
    4. '	count' → logprob: -21.375553131103516
    5. '=count' → logprob: -23.000553131103516
    6. '   ' → logprob: -23.625553131103516
    7. 'print' → logprob: -23.750553131103516
    8. '[count' → logprob: -23.875553131103516
    9. '$count' → logprob: -23.875553131103516
    10. 'counts' → logprob: -24.000553131103516

Token 1032: '_sorted' (ID: 104993)
  Prédit: '_sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sorted' → logprob: -9.968312951968983e-06
    2. '_' → logprob: -11.750009536743164
    3. '_saved' → logprob: -13.750009536743164
    4. '_scaled' → logprob: -15.250009536743164
    5. '_filtered' → logprob: -15.875009536743164
    6. 'sorted' → logprob: -15.875009536743164
    7. '_processed' → logprob: -16.250009536743164
    8. '_s' → logprob: -16.500009536743164
    9. '_total' → logprob: -16.875009536743164
    10. '(sorted' → logprob: -17.375009536743164

Token 1033: '_sub' (ID: 11572)
  Prédit: '_sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sub' → logprob: -0.0002622894535306841
    2. '_sorted' → logprob: -8.250262260437012
    3. '_' → logprob: -14.625262260437012
    4. 'sub' → logprob: -14.875262260437012
    5. 'sorted' → logprob: -16.500263214111328
    6. '_subset' → logprob: -16.625263214111328
    7. '_s' → logprob: -18.000263214111328
    8. '_filtered' → logprob: -18.875263214111328
    9. '(sorted' → logprob: -18.875263214111328
    10. '_SUB' → logprob: -19.250263214111328

Token 1034: 'sets' (ID: 7234)
  Prédit: 'ets'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ets' → logprob: -0.20143526792526245
    2. 'sets' → logprob: -1.7014353275299072
    3. 'et' → logprob: -11.701435089111328
    4. 'ub' → logprob: -11.951435089111328
    5. 'ests' → logprob: -12.576435089111328
    6. '_sets' → logprob: -13.951435089111328
    7. '_sub' → logprob: -14.201435089111328
    8. 'uts' → logprob: -14.826435089111328
    9. '```' → logprob: -15.076435089111328
    10. 'sub' → logprob: -15.201435089111328

Token 1035: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.005254626274108887
    2. '(' → logprob: -5.255254745483398
    3. '(
' → logprob: -11.130254745483398
    4. ' (' → logprob: -12.630254745483398
    5. '<|end|>' → logprob: -14.130254745483398
    6. '((' → logprob: -14.630254745483398
    7. ')' → logprob: -14.630254745483398
    8. '(numbers' → logprob: -15.755254745483398
    9. '(a' → logprob: -16.0052547454834
    10. '(B' → logprob: -16.3802547454834

Token 1036: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00016885579680092633
    2. ',B' → logprob: -9.000168800354004
    3. ' ,' → logprob: -10.375168800354004
    4. ')' → logprob: -12.375168800354004
    5. '   ' → logprob: -12.625168800354004
    6. ',
' → logprob: -12.875168800354004
    7. '+' → logprob: -13.500168800354004
    8. ',b' → logprob: -14.750168800354004
    9. '<|end|>' → logprob: -14.750168800354004
    10. ',P' → logprob: -15.000168800354004

Token 1037: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0010332842357456684
    2. ' B' → logprob: -6.876033306121826
    3. '   ' → logprob: -15.251032829284668
    4. ' ' → logprob: -15.876032829284668
    5. 'result' → logprob: -17.376033782958984
    6. '    ' → logprob: -18.751033782958984
    7. '<|end|>' → logprob: -18.751033782958984
    8. '  ' → logprob: -19.001033782958984
    9. '	B' → logprob: -19.001033782958984
    10. '```' → logprob: -19.251033782958984

Token 1038: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.7697225252486533e-06
    2. ',P' → logprob: -12.750003814697266
    3. ' ,' → logprob: -14.500003814697266
    4. ',
' → logprob: -15.375003814697266
    5. '   ' → logprob: -16.625003814697266
    6. ')' → logprob: -17.000003814697266
    7. '<|end|>' → logprob: -18.000003814697266
    8. '‌,' → logprob: -18.250003814697266
    9. '```' → logprob: -19.250003814697266
    10. '),' → logprob: -19.625003814697266

Token 1039: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -1.5048530030981055e-06
    2. ' P' → logprob: -13.500001907348633
    3. '   ' → logprob: -20.000001907348633
    4. ')' → logprob: -21.750001907348633
    5. '=P' → logprob: -22.500001907348633
    6. '	P' → logprob: -23.000001907348633
    7. '[P' → logprob: -23.500001907348633
    8. '"P' → logprob: -23.750001907348633
    9. '```' → logprob: -24.000001907348633
    10. '\P' → logprob: -24.250001907348633

Token 1040: ')
' (ID: 446)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021456731483340263
    2. 'print' → logprob: -4.271456718444824
    3. '
' → logprob: -5.396456718444824
    4. ' print' → logprob: -6.146456718444824
    5. ')' → logprob: -8.646456718444824
    6. '    
' → logprob: -9.021456718444824
    7. '<|end|>' → logprob: -9.021456718444824
    8. '	print' → logprob: -9.896456718444824
    9. ',' → logprob: -10.771456718444824
    10. '```' → logprob: -11.021456718444824

Token 1041: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38774895668029785
    2. 'print' → logprob: -1.1377489566802979
    3. '```' → logprob: -7.387748718261719
    4. ' print' → logprob: -8.387748718261719
    5. '	print' → logprob: -10.887748718261719
    6. '
' → logprob: -12.262748718261719
    7. '``' → logprob: -12.262748718261719
    8. '    
' → logprob: -13.387748718261719
    9. '#print' → logprob: -14.262748718261719
    10. '`' → logprob: -15.762748718261719

Token 1042: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -9.088346359931165e-07
    2. ' print' → logprob: -14.000000953674316
    3. '   ' → logprob: -18.25
    4. '```' → logprob: -19.0
    5. '	print' → logprob: -21.375
    6. '#print' → logprob: -21.75
    7. '    
' → logprob: -21.875
    8. 'sys' → logprob: -22.25
    9. '-print' → logprob: -22.625
    10. '_print' → logprob: -22.875

Token 1043: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -9.088346359931165e-07
    2. 'result' → logprob: -14.500000953674316
    3. '(' → logprob: -15.000000953674316
    4. '(f' → logprob: -19.625
    5. '(results' → logprob: -19.875
    6. '=result' → logprob: -19.875
    7. ' result' → logprob: -20.5
    8. '(res' → logprob: -20.625
    9. ',result' → logprob: -21.375
    10. ' (' → logprob: -21.5

Token 1044: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.024535046890378
    2. '()' → logprob: -4.149535179138184
    3. '())' → logprob: -4.774535179138184
    4. '(' → logprob: -12.024535179138184
    5. '   ' → logprob: -12.149535179138184
    6. ' )' → logprob: -12.524535179138184
    7. '')' → logprob: -12.899535179138184
    8. '`)' → logprob: -13.649535179138184
    9. '")' → logprob: -13.899535179138184
    10. ')`' → logprob: -13.899535179138184


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1042
Tokens correctement prédits (1ère position, stricte): 336
Tokens correctement prédits (1ère position, avec adaptation): 352
Tokens correctement prédits (top 10): 730
Précision stricte (1ère position): 32.25%
Précision adaptée (1ère position): 33.78%
Précision (top 10): 70.06%
================================================================================
