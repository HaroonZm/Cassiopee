================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:05:48
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

directions = [
    (0,1), (0,-1), (1,0), (-1,0),
    (1,1), (1,-1), (-1,1), (-1,-1)
]

def get_sequence(grid, h, w, x, y, dx, dy, length):
    seq = []
    for i in range(length):
        nx = (x + dx*i) % h
        ny = (y + dy*i) % w
        seq.append(grid[nx][ny])
    return "".join(seq)

def no_overlap(length, h, w, dx, dy):
    # The maximum length of non-self-overlapping sequence in direction (dx,dy)
    # is limited by the minimal period before returning to start.
    # Because grid is torus, the distance to overlap can be found by
    # finding the minimal k>0 such that (k*dx)%h==0 and (k*dy)%w==0.
    k = 1
    while True:
        if (dx*k)%h == 0 and (dy*k)%w == 0:
            return k
        k += 1

def max_len_no_overlap(h, w, dx, dy):
    # compute minimal positive k such that (k*dx)%h==0 and (k*dy)%w==0
    # that is the minimal length before sequence overlaps itself
    # we want maximal length = minimal k
    if dx == 0 and dy == 0:
        return 0
    if dx == 0:
        # minimal k such that (0)%h=0 always true, and (k*dy)%w=0
        g = gcd(w, abs(dy))
        return w//g
    if dy == 0:
        g = gcd(h, abs(dx))
        return h//g
    # general case
    gh = h // gcd(h, abs(dx))
    gw = w // gcd(w, abs(dy))
    # minimal k such that k%gh==0 and k%gw==0 -> lcm(gh,gw)
    l = lcm(gh,gw)
    return l

def gcd(a,b):
    while b:
        a,b = b,a%b
    return a

def lcm(a,b):
    return a*b//gcd(a,b)

def find_longest_spell(grid, h, w):
    found = {}
    max_len = 0
    results = set()
    for x in range(h):
        for y in range(w):
            for dx, dy in directions:
                max_len_dir = max_len_no_overlap(h, w, dx, dy)
                # minimal length is 2
                for length in range(2, max_len_dir+1):
                    s = get_sequence(grid, h, w, x, y, dx, dy, length)
                    # To satisfy two sequences do not overlap themselves,
                    # length must be <= max_len_dir
                    # Save all found strings with their counts
                    found.setdefault(s, set()).add((x,y,dx,dy))

    # We must check strings that appear more than once with different (start or direction)
    # allowing shared squares between two sequences, but sequences themselves no overlap.
    # So count how many distinct (x,y,dx,dy) appear for each string
    # Actually done in found dict.

    # Select those with at least 2 distinct positions/directions
    candidates = [s for s, spots in found.items() if len(spots) > 1]

    if not candidates:
        return "0"
    # longest length strings only
    longest_len = max(len(s) for s in candidates)
    longest_candidates = [s for s in candidates if len(s) == longest_len]
    # lex smallest
    spell = min(longest_candidates)
    return spell

def main():
    input = sys.stdin.readline
    while True:
        line = input()
        if not line:
            break
        h,w = map(int,line.split())
        if h == 0 and w == 0:
            break
        grid = [input().strip() for _ in range(h)]
        ans = find_longest_spell(grid, h, w)
        print(ans)

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'dire' (ID: 57765)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.26693636178970337
    2. '\n' → logprob: -2.0169363021850586
    3. 'import' → logprob: -3.1419363021850586
    4. '<|end|>' → logprob: -3.2669363021850586
    5. 'newline' → logprob: -5.516936302185059
    6. '\' → logprob: -5.516936302185059
    7. '<|end|>' → logprob: -6.141936302185059
    8. '' → logprob: -6.266936302185059
    9. 'print' → logprob: -6.891936302185059
    10. '\r' → logprob: -6.891936302185059

Token 4: 'ctions' (ID: 2620)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.7343143224716187
    2. 'ct' → logprob: -1.1093143224716187
    3. 'ctions' → logprob: -1.7343143224716187
    4. 'ction' → logprob: -4.359314441680908
    5. 'ctor' → logprob: -7.609314441680908
    6. 'cts' → logprob: -8.73431396484375
    7. 'ctors' → logprob: -8.98431396484375
    8. 'cto' → logprob: -9.98431396484375
    9. ' c' → logprob: -10.35931396484375
    10. '   ' → logprob: -10.48431396484375

Token 5: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.1547967791557312
    2. '=' → logprob: -2.279796838760376
    3. ' =' → logprob: -3.779796838760376
    4. '[' → logprob: -4.029796600341797
    5. '.=' → logprob: -9.029796600341797
    6. '```' → logprob: -9.654796600341797
    7. ':' → logprob: -10.154796600341797
    8. ')' → logprob: -10.154796600341797
    9. '[:]' → logprob: -10.154796600341797
    10. '_' → logprob: -10.279796600341797

Token 6: ' [
' (ID: 4240)
  Prédit: '[''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '['' → logprob: -0.8380324840545654
    2. ' ['' → logprob: -1.0880324840545654
    3. ' {' → logprob: -2.8380324840545654
    4. '["' → logprob: -3.0880324840545654
    5. ' ["' → logprob: -3.4630324840545654
    6. ' {}' → logprob: -3.5880324840545654
    7. '{}' → logprob: -3.7130324840545654
    8. '{' → logprob: -4.2130327224731445
    9. ' [' → logprob: -4.7130327224731445
    10. '[' → logprob: -4.9630327224731445

Token 7: '   ' (ID: 271)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.12566205859184265
    2. '"' → logprob: -2.750662088394165
    3. '   ' → logprob: -3.750662088394165
    4. '(' → logprob: -4.125661849975586
    5. '[' → logprob: -4.375661849975586
    6. ' '' → logprob: -7.750661849975586
    7. ''n' → logprob: -8.250661849975586
    8. ' "' → logprob: -8.375661849975586
    9. '('' → logprob: -9.000661849975586
    10. '['' → logprob: -9.125661849975586

Token 8: ' (' (ID: 350)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.35437795519828796
    2. '"' → logprob: -1.2293779850006104
    3. '(' (adapté à ' (') → logprob: -5.979377746582031
    4. ''n' → logprob: -6.479377746582031
    5. '[' → logprob: -7.479377746582031
    6. '   ' → logprob: -7.854377746582031
    7. ''N' → logprob: -8.729377746582031
    8. ''m' → logprob: -9.354377746582031
    9. ''d' → logprob: -9.854377746582031
    10. ' "' → logprob: -9.854377746582031

Token 9: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.36594751477241516
    2. '1' → logprob: -1.6159474849700928
    3. '-' → logprob: -2.8659474849700928
    4. ' ' → logprob: -2.9909474849700928
    5. '(' → logprob: -8.115947723388672
    6. ' -' → logprob: -8.740947723388672
    7. '(-' → logprob: -10.115947723388672
    8. '   ' → logprob: -10.365947723388672
    9. '"' → logprob: -10.865947723388672
    10. ''' → logprob: -11.365947723388672

Token 10: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.4855663721391466e-05
    2. '1' → logprob: -12.375015258789062
    3. ',)' → logprob: -12.500015258789062
    4. ',-' → logprob: -13.000015258789062
    5. ')' → logprob: -13.375015258789062
    6. ' ,' → logprob: -14.375015258789062
    7. ',
' → logprob: -14.625015258789062
    8. '-' → logprob: -14.625015258789062
    9. ',

' → logprob: -14.750015258789062
    10. ',),' → logprob: -15.125015258789062

Token 11: '1' (ID: 16)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.25973349809646606
    2. '1' → logprob: -1.5097334384918213
    3. '-' → logprob: -5.3847336769104
    4. ' -' → logprob: -5.7597336769104
    5. '   ' → logprob: -11.384733200073242
    6. '0' → logprob: -11.509733200073242
    7. ')' → logprob: -11.509733200073242
    8. '  ' → logprob: -13.259733200073242
    9. '    ' → logprob: -14.634733200073242
    10. '```' → logprob: -14.759733200073242

Token 12: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.021085619926452637
    2. ')' → logprob: -3.896085739135742
    3. '),
' → logprob: -7.646085739135742
    4. '),

' → logprob: -10.146085739135742
    5. '),(' → logprob: -10.646085739135742
    6. '),
' → logprob: -13.646085739135742
    7. ' ),' → logprob: -14.771085739135742
    8. '   ' → logprob: -15.396085739135742
    9. ' ' → logprob: -15.521085739135742
    10. '0' → logprob: -16.396085739135742

Token 13: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.11134150624275208
    2. '(' → logprob: -2.3613414764404297
    3. '   ' → logprob: -4.61134147644043
    4. '0' → logprob: -7.61134147644043
    5. '<|end|>' → logprob: -7.86134147644043
    6. ' ' → logprob: -8.73634147644043
    7. '    ' → logprob: -9.48634147644043
    8. '  ' → logprob: -11.61134147644043
    9. ' (-' → logprob: -12.48634147644043
    10. '<|end|>' → logprob: -13.48634147644043

Token 14: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.010535651817917824
    2. '1' → logprob: -4.635535717010498
    3. '-' → logprob: -7.385535717010498
    4. ' ' → logprob: -8.76053524017334
    5. ' -' → logprob: -13.63553524017334
    6. '```' → logprob: -14.57303524017334
    7. '01' → logprob: -15.13553524017334
    8. '   ' → logprob: -16.510536193847656
    9. '+' → logprob: -16.510536193847656
    10. '  ' → logprob: -17.073036193847656

Token 15: ',-' (ID: 8202)
  Prédit: ',-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',-' → logprob: -0.006965423934161663
    2. ',' → logprob: -5.131965637207031
    3. '-' → logprob: -6.881965637207031
    4. ',-

' → logprob: -12.756965637207031
    5. ' ,-' → logprob: -13.256965637207031
    6. '1' → logprob: -13.506965637207031
    7. ',-
' → logprob: -13.506965637207031
    8. '),' → logprob: -14.881965637207031
    9. ' ,' → logprob: -15.131965637207031
    10. '0' → logprob: -15.131965637207031

Token 16: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2200749754119897e-06
    2. ' ' → logprob: -13.750001907348633
    3. '```' → logprob: -14.625001907348633
    4. '2' → logprob: -16.437501907348633
    5. '-' → logprob: -16.875001907348633
    6. '１' → logprob: -17.250001907348633
    7. '۱' → logprob: -17.250001907348633
    8. '१' → logprob: -17.875001907348633
    9. '>' → logprob: -18.000001907348633
    10. '১' → logprob: -18.062501907348633

Token 17: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.02634000964462757
    2. ')' → logprob: -3.6513400077819824
    3. '),(' → logprob: -10.27634048461914
    4. ' ),' → logprob: -13.15134048461914
    5. '),
' → logprob: -13.52634048461914
    6. '),

' → logprob: -14.65134048461914
    7. '<|end|>' → logprob: -15.15134048461914
    8. ',' → logprob: -15.52634048461914
    9. ')]' → logprob: -15.65134048461914
    10. '   ' → logprob: -15.65134048461914

Token 18: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.012891478836536407
    2. '<|end|>' → logprob: -5.1378912925720215
    3. '(' → logprob: -5.3878912925720215
    4. '   ' → logprob: -6.1378912925720215
    5. ' ' → logprob: -9.63789176940918
    6. ')' → logprob: -10.13789176940918
    7. ' (-' → logprob: -10.63789176940918
    8. '<|end|>' → logprob: -10.76289176940918
    9. '    ' → logprob: -11.13789176940918
    10. '  ' → logprob: -11.38789176940918

Token 19: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.008438809774816036
    2. '-' → logprob: -4.883438587188721
    3. '0' → logprob: -7.258438587188721
    4. ' ' → logprob: -9.008439064025879
    5. ' -' → logprob: -12.258439064025879
    6. '```' → logprob: -14.883439064025879
    7. ')' → logprob: -15.383439064025879
    8. '2' → logprob: -16.008438110351562
    9. '(' → logprob: -16.008438110351562
    10. '(-' → logprob: -17.133438110351562

Token 20: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009282566024921834
    2. '0' → logprob: -7.1259284019470215
    3. ' ,' → logprob: -9.000927925109863
    4. ' ' → logprob: -15.500927925109863
    5. '```' → logprob: -15.875927925109863
    6. ',-' → logprob: -18.00092887878418
    7. '‌,' → logprob: -18.18842887878418
    8. '，' → logprob: -18.43842887878418
    9. ')' → logprob: -18.43842887878418
    10. '),' → logprob: -18.62592887878418

Token 21: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9743012671824545e-05
    2. ' ' → logprob: -10.875020027160645
    3. '-' → logprob: -14.875020027160645
    4. '1' → logprob: -16.125019073486328
    5. '۰' → logprob: -16.687519073486328
    6. '```' → logprob: -16.812519073486328
    7. ')' → logprob: -17.875019073486328
    8. '   ' → logprob: -19.125019073486328
    9. ' ' → logprob: -19.375019073486328
    10. '٠' → logprob: -19.500019073486328

Token 22: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.010093786753714085
    2. ')' → logprob: -4.635093688964844
    3. '),(' → logprob: -8.010093688964844
    4. ' ),' → logprob: -12.760093688964844
    5. '),
' → logprob: -13.510093688964844
    6. '),

' → logprob: -14.635093688964844
    7. '   ' → logprob: -15.135093688964844
    8. ',' → logprob: -15.260093688964844
    9. ',),' → logprob: -16.635093688964844
    10. '(' → logprob: -16.885093688964844

Token 23: ' (-' (ID: 21382)
  Prédit: ' (-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (-' → logprob: -0.6081835031509399
    2. ' (' → logprob: -0.9831835031509399
    3. '(-' → logprob: -3.2331833839416504
    4. '(' → logprob: -3.2331833839416504
    5. '0' → logprob: -6.10818338394165
    6. ')' → logprob: -8.233183860778809
    7. ' ' → logprob: -8.858183860778809
    8. '   ' → logprob: -10.483183860778809
    9. ' -' → logprob: -12.108183860778809
    10. ' )' → logprob: -12.483183860778809

Token 24: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.0
    3. '0' → logprob: -19.0
    4. '۱' → logprob: -19.5
    5. '１' → logprob: -19.5
    6. '१' → logprob: -19.625
    7. '```' → logprob: -19.625
    8. '১' → logprob: -19.875
    9. ')' → logprob: -20.875
    10. '>' → logprob: -21.0

Token 25: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000585918256547302
    2. '0' → logprob: -7.500586032867432
    3. ' ,' → logprob: -10.500585556030273
    4. ')' → logprob: -12.500585556030273
    5. '1' → logprob: -13.750585556030273
    6. '```' → logprob: -15.375585556030273
    7. ' ' → logprob: -16.125585556030273
    8. '<|end|>' → logprob: -16.625585556030273
    9. '   ' → logprob: -16.750585556030273
    10. '),' → logprob: -17.250585556030273

Token 26: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00014001218369230628
    2. ' ' → logprob: -8.875140190124512
    3. '1' → logprob: -16.250139236450195
    4. '```' → logprob: -17.750139236450195
    5. '۰' → logprob: -17.875139236450195
    6. ')' → logprob: -18.000139236450195
    7. '   ' → logprob: -19.687639236450195
    8. ',' → logprob: -20.000139236450195
    9. '０' → logprob: -20.250139236450195
    10. ' ' → logprob: -20.562639236450195

Token 27: '),
' (ID: 2313)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05008404701948166
    2. '),' → logprob: -3.050084114074707
    3. ')]' → logprob: -6.550084114074707
    4. '   ' → logprob: -10.300084114074707
    5. ')],' → logprob: -11.300084114074707
    6. ' )' → logprob: -12.050084114074707
    7. ')])' → logprob: -12.300084114074707
    8. ']' → logprob: -12.800084114074707
    9. '),(' → logprob: -13.050084114074707
    10. ')...' → logprob: -14.175084114074707

Token 28: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9837093949317932
    2. ' (' → logprob: -1.2337093353271484
    3. ']' → logprob: -1.4837093353271484
    4. '(' → logprob: -2.2337093353271484
    5. ' ]' → logprob: -7.233709335327148
    6. '    ' → logprob: -9.858709335327148
    7. '(-' → logprob: -10.233709335327148
    8. ' ' → logprob: -10.483709335327148
    9. '  ' → logprob: -10.483709335327148
    10. ' (-' → logprob: -10.858709335327148

Token 29: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.36556708812713623
    2. '(' (adapté à ' (') → logprob: -1.2405670881271362
    3. '   ' → logprob: -4.365567207336426
    4. ']' → logprob: -5.490567207336426
    5. ' ]' → logprob: -10.240567207336426
    6. ' ' → logprob: -10.615567207336426
    7. '(-' → logprob: -10.740567207336426
    8. ' (-' → logprob: -10.990567207336426
    9. ')' → logprob: -11.365567207336426
    10. '<|end|>' → logprob: -11.365567207336426

Token 30: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0115135433152318
    2. '0' → logprob: -4.511513710021973
    3. '-' → logprob: -8.386513710021973
    4. ' ' → logprob: -8.386513710021973
    5. '```' → logprob: -12.386513710021973
    6. ')' → logprob: -13.386513710021973
    7. ' -' → logprob: -13.761513710021973
    8. '   ' → logprob: -13.886513710021973
    9. '2' → logprob: -13.949013710021973
    10. '  ' → logprob: -15.449013710021973

Token 31: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010496005415916443
    2. ' ,' → logprob: -7.376049518585205
    3. ',-' → logprob: -8.001049995422363
    4. '1' → logprob: -9.376049995422363
    5. ')' → logprob: -14.126049995422363
    6. '-' → logprob: -14.376049995422363
    7. ' ' → logprob: -14.626049995422363
    8. ',)' → logprob: -15.501049995422363
    9. ' ,-' → logprob: -15.876049995422363
    10. ',
' → logprob: -16.188549041748047

Token 32: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00043805985478684306
    2. '-' → logprob: -8.12543773651123
    3. ' ' → logprob: -8.87543773651123
    4. '0' → logprob: -14.12543773651123
    5. ')' → logprob: -14.37543773651123
    6. ' -' → logprob: -14.50043773651123
    7. '```' → logprob: -15.50043773651123
    8. '   ' → logprob: -17.250438690185547
    9. '۱' → logprob: -17.937938690185547
    10. ' ' → logprob: -18.125438690185547

Token 33: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.02978902868926525
    2. ')' → logprob: -3.5297889709472656
    3. '),(' → logprob: -10.404788970947266
    4. ' ),' → logprob: -13.029788970947266
    5. ',' → logprob: -13.154788970947266
    6. '),
' → logprob: -13.654788970947266
    7. '),

' → logprob: -13.779788970947266
    8. '<|end|>' → logprob: -14.029788970947266
    9. ',),' → logprob: -15.154788970947266
    10. '},' → logprob: -15.779788970947266

Token 34: ' (' (ID: 350)
  Prédit: ' (-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (-' → logprob: -0.09384291619062424
    2. '(-' → logprob: -3.0938429832458496
    3. ' (' → logprob: -3.3438429832458496
    4. '(' → logprob: -4.71884298324585
    5. ' -' → logprob: -11.468842506408691
    6. '<|end|>' → logprob: -12.093842506408691
    7. '1' → logprob: -13.593842506408691
    8. '-' → logprob: -13.843842506408691
    9. ' ' → logprob: -14.093842506408691
    10. ')' → logprob: -15.343842506408691

Token 35: '1' (ID: 16)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0020566426683217287
    2. '1' → logprob: -6.25205659866333
    3. ' -' → logprob: -9.002057075500488
    4. ' ' → logprob: -12.627057075500488
    5. ')' → logprob: -15.002057075500488
    6. '(-' → logprob: -15.127057075500488
    7. ',-' → logprob: -15.252057075500488
    8. '−' → logprob: -15.877057075500488
    9. '(' → logprob: -16.002056121826172
    10. '```' → logprob: -16.127056121826172

Token 36: ',-' (ID: 8202)
  Prédit: ',-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',-' → logprob: -0.03841496258974075
    2. ',' → logprob: -3.28841495513916
    3. '-' → logprob: -7.91341495513916
    4. '0' → logprob: -12.91341495513916
    5. ',-

' → logprob: -13.41341495513916
    6. ',)' → logprob: -14.03841495513916
    7. ',-
' → logprob: -14.03841495513916
    8. '1' → logprob: -14.28841495513916
    9. '-,' → logprob: -15.41341495513916
    10. ')' → logprob: -15.66341495513916

Token 37: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.25
    3. '<|end|>' → logprob: -18.0
    4. '۱' → logprob: -19.625
    5. '```' → logprob: -20.0
    6. '১' → logprob: -20.125
    7. '१' → logprob: -20.25
    8. '１' → logprob: -20.375
    9. ')' → logprob: -20.75
    10. '<|end|>' → logprob: -21.25

Token 38: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.018196886405348778
    2. ')' → logprob: -4.018197059631348
    3. '),(' → logprob: -10.143197059631348
    4. ' ),' → logprob: -12.393197059631348
    5. '),
' → logprob: -13.518197059631348
    6. '),

' → logprob: -13.893197059631348
    7. ',' → logprob: -14.268197059631348
    8. '<|end|>' → logprob: -15.518197059631348
    9. ').' → logprob: -16.51819610595703
    10. ',),' → logprob: -16.64319610595703

Token 39: ' (-' (ID: 21382)
  Prédit: ' (-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (-' → logprob: -0.14495708048343658
    2. '(-' → logprob: -2.0199570655822754
    3. ' -' → logprob: -6.144957065582275
    4. '-' → logprob: -9.269957542419434
    5. '(' → logprob: -10.644957542419434
    6. ' (' → logprob: -11.894957542419434
    7. '<|end|>' → logprob: -12.144957542419434
    8. '   ' → logprob: -13.769957542419434
    9. ')' → logprob: -13.894957542419434
    10. '[-' → logprob: -14.269957542419434

Token 40: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. '-' → logprob: -15.000000953674316
    3. ' ' → logprob: -16.4375
    4. '```' → logprob: -16.8125
    5. '0' → logprob: -17.25
    6. '１' → logprob: -17.375
    7. '۱' → logprob: -17.9375
    8. ')' → logprob: -18.0625
    9. '}' → logprob: -18.1875
    10. '

' → logprob: -18.3125

Token 41: ',' (ID: 11)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4287697374820709
    2. ',' → logprob: -1.0537697076797485
    3. ' ' → logprob: -10.428770065307617
    4. ' ,' → logprob: -10.803770065307617
    5. ',-' → logprob: -11.553770065307617
    6. '-' → logprob: -12.428770065307617
    7. '0' → logprob: -13.178770065307617
    8. '<|end|>' → logprob: -13.553770065307617
    9. '```' → logprob: -14.303770065307617
    10. ')' → logprob: -15.053770065307617

Token 42: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3856492842023727e-06
    2. ' ' → logprob: -13.750000953674316
    3. '-' → logprob: -15.875000953674316
    4. '<|end|>' → logprob: -16.375001907348633
    5. '0' → logprob: -18.375001907348633
    6. '```' → logprob: -18.812501907348633
    7. '۱' → logprob: -19.062501907348633
    8. '１' → logprob: -19.062501907348633
    9. '১' → logprob: -19.250001907348633
    10. ')' → logprob: -19.375001907348633

Token 43: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.31332921981811523
    2. ')' → logprob: -1.3133292198181152
    3. '),(' → logprob: -10.188329696655273
    4. ')]' → logprob: -10.938329696655273
    5. ' ),' → logprob: -12.563329696655273
    6. '),
' → logprob: -13.063329696655273
    7. ',' → logprob: -13.063329696655273
    8. ' )' → logprob: -14.188329696655273
    9. '),

' → logprob: -14.313329696655273
    10. ')],' → logprob: -14.438329696655273

Token 44: ' (-' (ID: 21382)
  Prédit: '(-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.5700767636299133
    2. ' (-' → logprob: -1.0700767040252686
    3. ' -' → logprob: -2.8200767040252686
    4. '-' → logprob: -3.4450767040252686
    5. '(' → logprob: -11.695076942443848
    6. ')' → logprob: -11.945076942443848
    7. '   ' → logprob: -12.695076942443848
    8. '0' → logprob: -12.695076942443848
    9. '<|end|>' → logprob: -12.695076942443848
    10. '[-' → logprob: -12.945076942443848

Token 45: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ')' → logprob: -14.875000953674316
    3. ' ' → logprob: -16.875
    4. '-' → logprob: -17.5
    5. '```' → logprob: -17.875
    6. '１' → logprob: -18.25
    7. '१' → logprob: -18.8125
    8. '১' → logprob: -19.375
    9. '">' → logprob: -19.5
    10. '۱' → logprob: -19.5625

Token 46: ',-' (ID: 8202)
  Prédit: ',-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',-' → logprob: -0.005316412076354027
    2. '-' → logprob: -5.880316257476807
    3. ',' → logprob: -6.005316257476807
    4. ')' → logprob: -10.630316734313965
    5. '",-' → logprob: -12.255316734313965
    6. ',-

' → logprob: -12.255316734313965
    7. ',-
' → logprob: -13.255316734313965
    8. '<|end|>' → logprob: -13.255316734313965
    9. ' -' → logprob: -13.505316734313965
    10. ' ,-' → logprob: -13.630316734313965

Token 47: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ')' → logprob: -15.875
    3. ' ' → logprob: -16.5
    4. '```' → logprob: -19.625
    5. '１' → logprob: -20.5
    6. '}' → logprob: -20.625
    7. '})' → logprob: -20.875
    8. '   ' → logprob: -21.0
    9. '۱' → logprob: -21.25
    10. '१' → logprob: -21.375

Token 48: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008617922430858016
    2. '),' → logprob: -7.500861644744873
    3. ')]' → logprob: -8.125862121582031
    4. ']' → logprob: -11.375862121582031
    5. '   ' → logprob: -14.500862121582031
    6. ' )' → logprob: -15.000862121582031
    7. ')
' → logprob: -15.250862121582031
    8. '),
' → logprob: -16.25086212158203
    9. '}' → logprob: -16.75086212158203
    10. ')])' → logprob: -16.75086212158203

Token 49: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00043257648940198123
    2. ')' → logprob: -7.75043249130249
    3. ')]' → logprob: -14.500432968139648
    4. ' ]' → logprob: -14.625432968139648
    5. '}' → logprob: -15.125432968139648
    6. '```' → logprob: -15.625432968139648
    7. '   ' → logprob: -15.875432968139648
    8. '])' → logprob: -16.37543296813965
    9. '`]' → logprob: -16.50043296813965
    10. '']' → logprob: -16.50043296813965

Token 50: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6743122935295105
    2. 'd' → logprob: -1.2993123531341553
    3. '#' → logprob: -2.6743123531341553
    4. '(' → logprob: -2.7993123531341553
    5. '[' → logprob: -3.6743123531341553
    6. '.' → logprob: -4.549312114715576
    7. 'n' → logprob: -4.799312114715576
    8. ']' → logprob: -5.049312114715576
    9. '```' → logprob: -5.424312114715576
    10. ')' → logprob: -5.424312114715576

Token 51: ' get' (ID: 717)
  Prédit: ' valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' valid' → logprob: -0.7281392216682434
    2. ' is' → logprob: -1.3531391620635986
    3. ' find' → logprob: -2.6031391620635986
    4. ' bfs' → logprob: -2.9781391620635986
    5. ' check' → logprob: -3.1031391620635986
    6. ' ' → logprob: -3.6031391620635986
    7. ' dfs' → logprob: -3.9781391620635986
    8. ' get' → logprob: -4.478139400482178
    9. ' explore' → logprob: -4.978139400482178
    10. ' neighbors' → logprob: -5.353139400482178

Token 52: '_sequence' (ID: 55606)
  Prédit: '_neighbors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_neighbors' → logprob: -0.03224183991551399
    2. '_moves' → logprob: -4.5322418212890625
    3. '_next' → logprob: -5.1572418212890625
    4. '_' → logprob: -5.1572418212890625
    5. '_valid' → logprob: -5.9072418212890625
    6. '_possible' → logprob: -6.5322418212890625
    7. '_neighbor' → logprob: -6.6572418212890625
    8. '_ne' → logprob: -7.1572418212890625
    9. '_coordinates' → logprob: -7.6572418212890625
    10. '_direction' → logprob: -7.6572418212890625

Token 53: '(grid' (ID: 51818)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02067922241985798
    2. '_' → logprob: -4.145678997039795
    3. '_length' → logprob: -7.395678997039795
    4. '_at' → logprob: -7.645678997039795
    5. 's' → logprob: -7.770678997039795
    6. '```' → logprob: -8.020679473876953
    7. '_tokens' → logprob: -8.145679473876953
    8. '_token' → logprob: -8.520679473876953
    9. '_sequence' → logprob: -8.645679473876953
    10. '_coordinates' → logprob: -8.895679473876953

Token 54: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00038896629121154547
    2. ',row' → logprob: -8.500389099121094
    3. ' ,' → logprob: -8.750389099121094
    4. '[row' → logprob: -11.625389099121094
    5. ')' → logprob: -12.750389099121094
    6. '[' → logprob: -13.125389099121094
    7. '):' → logprob: -13.250389099121094
    8. ',column' → logprob: -13.375389099121094
    9. ',size' → logprob: -13.625389099121094
    10. '<|end|>' → logprob: -13.625389099121094

Token 55: ' h' (ID: 312)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.7938393354415894
    2. ' row' → logprob: -1.2938393354415894
    3. 'x' → logprob: -1.6688393354415894
    4. 'row' → logprob: -2.793839454650879
    5. ' start' → logprob: -4.543839454650879
    6. ' i' → logprob: -5.418839454650879
    7. ' r' → logprob: -5.918839454650879
    8. 'start' → logprob: -6.293839454650879
    9. 'i' → logprob: -6.418839454650879
    10. 'r' → logprob: -6.793839454650879

Token 56: ',' (ID: 11)
  Prédit: 'eight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eight' → logprob: -0.4310005009174347
    2. ',' → logprob: -1.0560004711151123
    3. 'e' → logprob: -7.056000709533691
    4. 'ight' → logprob: -7.681000709533691
    5. ',e' → logprob: -8.431000709533691
    6. ',w' → logprob: -9.056000709533691
    7. ',int' → logprob: -9.306000709533691
    8. ',height' → logprob: -9.306000709533691
    9. 't' → logprob: -9.806000709533691
    10. ',i' → logprob: -9.931000709533691

Token 57: ' w' (ID: 286)
  Prédit: ' w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.577002227306366
    2. 'w' → logprob: -0.827002227306366
    3. ' ' → logprob: -7.077002048492432
    4. 't' → logprob: -9.82700252532959
    5. 'r' → logprob: -10.20200252532959
    6. '   ' → logprob: -10.57700252532959
    7. '	w' → logprob: -11.07700252532959
    8. '```' → logprob: -11.32700252532959
    9. 'y' → logprob: -11.70200252532959
    10. ' r' → logprob: -11.82700252532959

Token 58: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014942311681807041
    2. '):' → logprob: -4.264942169189453
    3. ')' → logprob: -7.264942169189453
    4. ' ,' → logprob: -9.764942169189453
    5. '),' → logprob: -12.014942169189453
    6. ' ):' → logprob: -13.014942169189453
    7. ',
' → logprob: -13.514942169189453
    8. ',)' → logprob: -13.639942169189453
    9. ',row' → logprob: -13.764942169189453
    10. ',int' → logprob: -14.139942169189453

Token 59: ' x' (ID: 1215)
  Prédit: ' word'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' word' → logprob: -1.1114124059677124
    2. ' start' → logprob: -1.9864124059677124
    3. ' length' → logprob: -2.236412525177002
    4. ' direction' → logprob: -2.236412525177002
    5. ' x' → logprob: -2.861412525177002
    6. 'start' → logprob: -3.486412525177002
    7. ' i' → logprob: -3.736412525177002
    8. ' row' → logprob: -3.861412525177002
    9. ' sequence' → logprob: -3.861412525177002
    10. 'word' → logprob: -4.111412525177002

Token 60: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006232033483684063
    2. '):' → logprob: -7.5006232261657715
    3. ')' → logprob: -10.125622749328613
    4. ' ,' → logprob: -10.625622749328613
    5. ',y' → logprob: -12.375622749328613
    6. '),' → logprob: -15.125622749328613
    7. ' ):' → logprob: -15.125622749328613
    8. ',j' → logprob: -16.12562370300293
    9. '):
' → logprob: -16.37562370300293
    10. ',p' → logprob: -16.75062370300293

Token 61: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.20148371160030365
    2. 'y' → logprob: -1.7014837265014648
    3. ')' → logprob: -10.451483726501465
    4. ' ' → logprob: -10.576483726501465
    5. ' )' → logprob: -12.201483726501465
    6. ')y' → logprob: -12.576483726501465
    7. ' direction' → logprob: -13.076483726501465
    8. '	y' → logprob: -13.201483726501465
    9. '<|end|>' → logprob: -14.201483726501465
    10. ' d' → logprob: -14.951483726501465

Token 62: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6949025392532349
    2. '):' → logprob: -0.6949025392532349
    3. ')' → logprob: -6.444902420043945
    4. ' ,' → logprob: -9.569902420043945
    5. ' ):' → logprob: -10.194902420043945
    6. '   ' → logprob: -10.694902420043945
    7. '):
' → logprob: -11.694902420043945
    8. '),' → logprob: -11.944902420043945
    9. ':' → logprob: -12.694902420043945
    10. ',p' → logprob: -13.319902420043945

Token 63: ' dx' (ID: 29472)
  Prédit: ' dx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dx' → logprob: -0.7114454507827759
    2. ' direction' → logprob: -1.2114454507827759
    3. 'dx' → logprob: -1.7114454507827759
    4. 'direction' → logprob: -4.711445331573486
    5. ' length' → logprob: -5.336445331573486
    6. 'd' → logprob: -5.586445331573486
    7. ' d' → logprob: -5.961445331573486
    8. '   ' → logprob: -6.086445331573486
    9. ' ' → logprob: -6.336445331573486
    10. '	d' → logprob: -6.711445331573486

Token 64: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.41340893507003784
    2. ',' → logprob: -1.1634089946746826
    3. ')' → logprob: -3.6634089946746826
    4. '):
' → logprob: -8.038409233093262
    5. '),' → logprob: -9.538409233093262
    6. ' ,' → logprob: -9.663409233093262
    7. ' ):' → logprob: -10.038409233093262
    8. '):

' → logprob: -12.163409233093262
    9. ')=' → logprob: -12.413409233093262
    10. '   ' → logprob: -12.538409233093262

Token 65: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.6932176947593689
    2. ' dy' → logprob: -0.6932176947593689
    3. ' ' → logprob: -9.943217277526855
    4. ')' → logprob: -11.318217277526855
    5. '<|end|>' → logprob: -12.818217277526855
    6. '1' → logprob: -13.193217277526855
    7. 'y' → logprob: -13.693217277526855
    8. 'Dy' → logprob: -13.943217277526855
    9. ' )' → logprob: -14.193217277526855
    10. '.dy' → logprob: -14.318217277526855

Token 66: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.000952075351960957
    2. ')' → logprob: -7.000952243804932
    3. ':' → logprob: -11.125951766967773
    4. ',' → logprob: -11.500951766967773
    5. ' ):' → logprob: -11.500951766967773
    6. '):
' → logprob: -12.625951766967773
    7. '   ' → logprob: -13.625951766967773
    8. '),' → logprob: -15.500951766967773
    9. ' ' → logprob: -15.750951766967773
    10. ')：' → logprob: -16.000951766967773

Token 67: ' length' (ID: 5517)
  Prédit: ' length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' length' → logprob: -0.10842645913362503
    2. ' n' → logprob: -3.108426570892334
    3. 'length' → logprob: -3.858426570892334
    4. ' ' → logprob: -4.358426570892334
    5. ' l' → logprob: -4.608426570892334
    6. 'n' → logprob: -4.858426570892334
    7. 'l' → logprob: -5.733426570892334
    8. ' k' → logprob: -6.358426570892334
    9. 'k' → logprob: -7.733426570892334
    10. '  ' → logprob: -8.733426094055176

Token 68: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.000837384897749871
    2. ')' → logprob: -7.125837326049805
    3. ' ):' → logprob: -11.250837326049805
    4. ':' → logprob: -11.500837326049805
    5. ',' → logprob: -12.375837326049805
    6. '):
' → logprob: -13.250837326049805
    7. '=' → logprob: -13.250837326049805
    8. '   ' → logprob: -14.000837326049805
    9. ' ' → logprob: -14.625837326049805
    10. ''):' → logprob: -16.125837326049805

Token 69: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.36740243434906006
    2. ':' → logprob: -1.36740243434906
    3. ' :' → logprob: -3.4924025535583496
    4. '):' → logprob: -4.74240255355835
    5. '    ' → logprob: -5.11740255355835
    6. ')' → logprob: -6.11740255355835
    7. ' ' → logprob: -6.24240255355835
    8. ',' → logprob: -6.86740255355835
    9. ' ):' → logprob: -7.36740255355835
    10. ':
' → logprob: -7.86740255355835

Token 70: ' seq' (ID: 26775)
  Prédit: ' sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sequence' → logprob: -0.517048180103302
    2. 'sequence' → logprob: -1.7670481204986572
    3. '   ' → logprob: -2.1420481204986572
    4. 'result' → logprob: -3.3920481204986572
    5. ' result' → logprob: -3.8920481204986572
    6. ' seq' → logprob: -4.517048358917236
    7. '    ' → logprob: -4.642048358917236
    8. ' ' → logprob: -4.767048358917236
    9. '```' → logprob: -4.767048358917236
    10. ' 
' → logprob: -5.267048358917236

Token 71: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.22208349406719208
    2. ' =' → logprob: -2.097083568572998
    3. 'u' → logprob: -2.597083568572998
    4. '=[]' → logprob: -6.722083568572998
    5. 'ue' → logprob: -8.84708309173584
    6. '   ' → logprob: -9.34708309173584
    7. '=u' → logprob: -9.47208309173584
    8. '```' → logprob: -9.84708309173584
    9. '=[]
' → logprob: -10.09708309173584
    10. 'uen' → logprob: -10.59708309173584

Token 72: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.7704503536224365
    2. ' []' → logprob: -1.0204503536224365
    3. '""' → logprob: -2.1454503536224365
    4. ' ""' → logprob: -3.5204503536224365
    5. ' ''' → logprob: -4.020450592041016
    6. '''' → logprob: -4.520450592041016
    7. '[' → logprob: -7.645450592041016
    8. ' [' → logprob: -7.895450592041016
    9. '"' → logprob: -8.770450592041016
    10. ' ' → logprob: -8.895450592041016

Token 73: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04243481904268265
    2. ' for' → logprob: -4.0424346923828125
    3. '    
' → logprob: -4.6674346923828125
    4. '<|end|>' → logprob: -5.4174346923828125
    5. 'for' → logprob: -5.5424346923828125
    6. '    ' → logprob: -5.7924346923828125
    7. ' ' → logprob: -6.7924346923828125
    8. ' 
' → logprob: -8.042434692382812
    9. '  
' → logprob: -8.167434692382812
    10. '```' → logprob: -8.417434692382812

Token 74: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.12886439263820648
    2. ' for' → logprob: -2.128864288330078
    3. '   ' → logprob: -6.253864288330078
    4. '```' → logprob: -12.003864288330078
    5. '    
' → logprob: -13.503864288330078
    6. 'i' → logprob: -13.503864288330078
    7. '	for' → logprob: -14.253864288330078
    8. '  ' → logprob: -14.503864288330078
    9. 'current' → logprob: -14.628864288330078
    10. '    ' → logprob: -14.628864288330078

Token 75: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.636330246925354
    2. ' ' → logprob: -0.886330246925354
    3. ' _' → logprob: -3.3863301277160645
    4. ' range' → logprob: -4.1363301277160645
    5. '_' → logprob: -5.3863301277160645
    6. 'i' → logprob: -5.8863301277160645
    7. 'range' → logprob: -7.0113301277160645
    8. ' in' → logprob: -8.511330604553223
    9. '_i' → logprob: -9.761330604553223
    10. ' xrange' → logprob: -10.386330604553223

Token 76: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004200678784400225
    2. 'in' → logprob: -5.504200458526611
    3. ' ' → logprob: -9.12920093536377
    4. '	in' → logprob: -12.62920093536377
    5. '   ' → logprob: -13.25420093536377
    6. '  ' → logprob: -13.25420093536377
    7. '<|end|>' → logprob: -13.62920093536377
    8. '    ' → logprob: -13.62920093536377
    9. 'range' → logprob: -14.12920093536377
    10. '```' → logprob: -14.50420093536377

Token 77: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.023286130279302597
    2. 'range' → logprob: -3.7732861042022705
    3. ' ' → logprob: -10.398285865783691
    4. '	range' → logprob: -12.273285865783691
    5. '(range' → logprob: -12.648285865783691
    6. ' xrange' → logprob: -13.273285865783691
    7. '  ' → logprob: -15.523285865783691
    8. '_range' → logprob: -16.023286819458008
    9. '.range' → logprob: -17.023286819458008
    10. '   ' → logprob: -17.023286819458008

Token 78: '(length' (ID: 47037)
  Prédit: '(length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(length' → logprob: -0.0006598960608243942
    2. '(' → logprob: -7.750659942626953
    3. ' (' → logprob: -9.000659942626953
    4. ' length' → logprob: -9.375659942626953
    5. 'length' → logprob: -11.500659942626953
    6. '	length' → logprob: -12.125659942626953
    7. '[length' → logprob: -13.250659942626953
    8. '(len' → logprob: -13.250659942626953
    9. '(l' → logprob: -14.125659942626953
    10. ',length' → logprob: -14.125659942626953

Token 79: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.010397273115813732
    2. '):
' → logprob: -4.635397434234619
    3. ' ):' → logprob: -7.510397434234619
    4. '   ' → logprob: -9.635396957397461
    5. ' ):
' → logprob: -11.635396957397461
    6. ')' → logprob: -11.760396957397461
    7. ':' → logprob: -12.385396957397461
    8. '):
' → logprob: -12.885396957397461
    9. '+' → logprob: -12.885396957397461
    10. ' ' → logprob: -14.010396957397461

Token 80: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005950896302238107
    2. '        
' → logprob: -8.000595092773438
    3. ',' → logprob: -9.875595092773438
    4. '<|end|>' → logprob: -10.000595092773438
    5. '   ' → logprob: -10.500595092773438
    6. '    
' → logprob: -11.250595092773438
    7. '```' → logprob: -11.375595092773438
    8. ' 
' → logprob: -11.375595092773438
    9. '    ' → logprob: -11.625595092773438
    10. ' ' → logprob: -11.750595092773438

Token 81: ' nx' (ID: 50118)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.9662288427352905
    2. ' nx' → logprob: -0.9662288427352905
    3. '
' → logprob: -1.7162288427352905
    4. 'nx' (adapté à ' nx') → logprob: -4.46622896194458
    5. '           ' → logprob: -5.09122896194458
    6. ' x' → logprob: -5.09122896194458
    7. '        
' → logprob: -5.21622896194458
    8. 'x' → logprob: -5.34122896194458
    9. ' seq' → logprob: -5.59122896194458
    10. '```' → logprob: -5.71622896194458

Token 82: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.026600416749715805
    2. '=' → logprob: -3.6516003608703613
    3. ',' → logprob: -8.15160083770752
    4. 'x' → logprob: -12.77660083770752
    5. '=x' → logprob: -12.77660083770752
    6. ')' → logprob: -13.02660083770752
    7. ' ' → logprob: -13.65160083770752
    8. ' =
' → logprob: -14.40160083770752
    9. '```' → logprob: -14.77660083770752
    10. ' ,' → logprob: -15.02660083770752

Token 83: ' (' (ID: 350)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.038042064756155014
    2. 'x' → logprob: -3.2880420684814453
    3. ' ' → logprob: -15.038042068481445
    4. '	x' → logprob: -15.163042068481445
    5. '   ' → logprob: -17.038042068481445
    6. '    ' → logprob: -18.413042068481445
    7. '(x' → logprob: -18.413042068481445
    8. '"x' → logprob: -18.788042068481445
    9. ')x' → logprob: -18.913042068481445
    10. '=x' → logprob: -19.288042068481445

Token 84: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0015029559144750237
    2. ' x' → logprob: -6.501502990722656
    3. ')x' → logprob: -14.626502990722656
    4. '	x' → logprob: -16.751502990722656
    5. '   ' → logprob: -17.501502990722656
    6. ' ' → logprob: -17.626502990722656
    7. ')' → logprob: -19.001502990722656
    8. '"x' → logprob: -19.126502990722656
    9. '(x' → logprob: -19.501502990722656
    10. ''x' → logprob: -20.251502990722656

Token 85: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.061980683356523514
    2. '+' → logprob: -2.811980724334717
    3. ')' → logprob: -12.061980247497559
    4. '+i' → logprob: -13.186980247497559
    5. ' ' → logprob: -13.436980247497559
    6. ')+' → logprob: -13.561980247497559
    7. '+x' → logprob: -14.811980247497559
    8. ')+(' → logprob: -14.936980247497559
    9. '   ' → logprob: -15.061980247497559
    10. ' plus' → logprob: -15.311980247497559

Token 86: ' dx' (ID: 29472)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.038617536425590515
    2. ' dx' → logprob: -3.7886176109313965
    3. 'i' → logprob: -4.2886176109313965
    4. ' i' → logprob: -6.6636176109313965
    5. '   ' → logprob: -8.413617134094238
    6. ' ' → logprob: -11.288617134094238
    7. '(dx' → logprob: -12.038617134094238
    8. '    ' → logprob: -12.288617134094238
    9. ')' → logprob: -12.913617134094238
    10. '  ' → logprob: -13.038617134094238

Token 87: '*i' (ID: 51147)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.04870886728167534
    2. '*i' → logprob: -3.298708915710449
    3. '*' → logprob: -4.548708915710449
    4. ')' → logprob: -10.92370891571045
    5. ' ' → logprob: -11.92370891571045
    6. 'i' → logprob: -12.67370891571045
    7. ' i' → logprob: -14.54870891571045
    8. '   ' → logprob: -14.79870891571045
    9. '[i' → logprob: -14.92370891571045
    10. '*object' → logprob: -15.67370891571045

Token 88: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0013814250705763698
    2. ' )' → logprob: -6.7513813972473145
    3. ')%' → logprob: -9.376381874084473
    4. ')
' → logprob: -9.751381874084473
    5. ',' → logprob: -10.251381874084473
    6. ')

' → logprob: -11.126381874084473
    7. ')y' → logprob: -12.501381874084473
    8. '       ' → logprob: -13.001381874084473
    9. '<|end|>' → logprob: -13.251381874084473
    10. '```' → logprob: -13.501381874084473

Token 89: ' %' (ID: 1851)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2667276859283447
    2. '<|end|>' → logprob: -1.5167276859283447
    3. ' ' → logprob: -5.141727447509766
    4. ',' → logprob: -6.141727447509766
    5. ' )' → logprob: -6.391727447509766
    6. '
' → logprob: -6.516727447509766
    7. '<|end|>' → logprob: -7.016727447509766
    8. '       ' → logprob: -7.266727447509766
    9. ']' → logprob: -7.641727447509766
    10. '```' → logprob: -8.141727447509766

Token 90: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.26698821783065796
    2. 'w' → logprob: -1.5169882774353027
    3. ' h' → logprob: -4.516988277435303
    4. ' w' → logprob: -5.516988277435303
    5. ' ' → logprob: -12.516987800598145
    6. '   ' → logprob: -13.391987800598145
    7. '	h' → logprob: -14.766987800598145
    8. '```' → logprob: -15.266987800598145
    9. '  ' → logprob: -16.01698875427246
    10. '	w' → logprob: -16.51698875427246

Token 91: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 92: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.487431138753891
    2. '<|end|>' → logprob: -0.9874311685562134
    3. '        ' → logprob: -5.737431049346924
    4. ' ' → logprob: -5.987431049346924
    5. '
' → logprob: -6.112431049346924
    6. '        
' → logprob: -6.612431049346924
    7. ',' → logprob: -6.987431049346924
    8. '<|end|>' → logprob: -7.237431049346924
    9. ')' → logprob: -7.362431049346924
    10. ' 
' → logprob: -7.862431049346924

Token 93: ' ny' (ID: 4423)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.0875295102596283
    2. 'ny' (adapté à ' ny') → logprob: -4.08752965927124
    3. ' (' → logprob: -4.33752965927124
    4. 'y' → logprob: -4.46252965927124
    5. ' w' → logprob: -4.96252965927124
    6. '(w' → logprob: -4.96252965927124
    7. '       ' → logprob: -5.08752965927124
    8. '(n' → logprob: -5.46252965927124
    9. 'wy' → logprob: -5.46252965927124
    10. '(y' → logprob: -5.71252965927124

Token 94: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11403302103281021
    2. '<|end|>' → logprob: -2.4890329837799072
    3. '=' → logprob: -3.7390329837799072
    4. ' ' → logprob: -7.239033222198486
    5. '<|end|>' → logprob: -8.739032745361328
    6. ')' → logprob: -9.989032745361328
    7. ' (' → logprob: -10.114032745361328
    8. '(' → logprob: -12.114032745361328
    9. ',' → logprob: -12.364032745361328
    10. '```' → logprob: -12.739032745361328

Token 95: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.01099748071283102
    2. '(y' → logprob: -4.635997295379639
    3. '(' → logprob: -6.760997295379639
    4. '(w' → logprob: -9.885997772216797
    5. ' y' → logprob: -10.635997772216797
    6. ' ' → logprob: -12.760997772216797
    7. 'y' → logprob: -13.010997772216797
    8. 'w' → logprob: -13.760997772216797
    9. '<|end|>' → logprob: -14.135997772216797
    10. '(s' → logprob: -15.010997772216797

Token 96: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.02367085963487625
    2. '(y' → logprob: -4.023670673370361
    3. ' y' → logprob: -6.023670673370361
    4. 'w' → logprob: -6.148670673370361
    5. ' (' → logprob: -7.523670673370361
    6. '(w' → logprob: -8.27367115020752
    7. '   ' → logprob: -9.64867115020752
    8. '(' → logprob: -10.39867115020752
    9. ')' → logprob: -10.77367115020752
    10. ')y' → logprob: -12.02367115020752

Token 97: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.16023032367229462
    2. '+' → logprob: -1.910230278968811
    3. '<|end|>' → logprob: -12.41023063659668
    4. ' ' → logprob: -14.53523063659668
    5. '+i' → logprob: -14.53523063659668
    6. ' ' → logprob: -15.53523063659668
    7. ')' → logprob: -15.53523063659668
    8. ' +
' → logprob: -15.53523063659668
    9. ' plus' → logprob: -16.03523063659668
    10. '<|end|>' → logprob: -16.41023063659668

Token 98: ' dy' (ID: 11996)
  Prédit: ' dy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dy' → logprob: -0.2830556035041809
    2. 'dy' → logprob: -1.4080555438995361
    3. 'w' → logprob: -7.158055782318115
    4. ' w' → logprob: -8.033055305480957
    5. '(d' → logprob: -8.908055305480957
    6. 'd' → logprob: -9.033055305480957
    7. ' ' → logprob: -9.158055305480957
    8. ' (' → logprob: -9.283055305480957
    9. '1' → logprob: -9.533055305480957
    10. ' dx' → logprob: -9.783055305480957

Token 99: '*i' (ID: 51147)
  Prédit: '*i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*i' → logprob: -0.0006477446295320988
    2. '*' → logprob: -7.62564754486084
    3. ' *' → logprob: -8.75064754486084
    4. 'i' → logprob: -14.62564754486084
    5. '*j' → logprob: -15.00064754486084
    6. '*f' → logprob: -16.500648498535156
    7. '*num' → logprob: -16.625648498535156
    8. ' ' → logprob: -16.750648498535156
    9. '*u' → logprob: -16.750648498535156
    10. '*
' → logprob: -17.000648498535156

Token 100: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002831464516930282
    2. ' )' → logprob: -8.625283241271973
    3. ')%' → logprob: -9.375283241271973
    4. '   ' → logprob: -12.125283241271973
    5. '       ' → logprob: -12.125283241271973
    6. ')
' → logprob: -12.250283241271973
    7. '%' → logprob: -13.375283241271973
    8. ')`' → logprob: -15.250283241271973
    9. '    ' → logprob: -15.625283241271973
    10. '%)' → logprob: -15.750283241271973

Token 101: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.1429295837879181
    2. '%' → logprob: -2.0179295539855957
    3. ' ' → logprob: -9.017930030822754
    4. ')' → logprob: -9.142930030822754
    5. ')%' → logprob: -11.392930030822754
    6. '<|end|>' → logprob: -12.017930030822754
    7. ' )' → logprob: -13.767930030822754
    8. '        ' → logprob: -13.892930030822754
    9. '       ' → logprob: -13.892930030822754
    10. '%n' → logprob: -14.392930030822754

Token 102: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.0067156096920371056
    2. ' w' → logprob: -5.006715774536133
    3. '   ' → logprob: -16.256715774536133
    4. ' ' → logprob: -16.256715774536133
    5. '	w' → logprob: -18.381715774536133
    6. '```' → logprob: -19.006715774536133
    7. '  ' → logprob: -19.381715774536133
    8. '_w' → logprob: -19.756715774536133
    9. '       ' → logprob: -19.756715774536133
    10. ''w' → logprob: -19.881715774536133

Token 103: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00045736716128885746
    2. ')' → logprob: -8.375457763671875
    3. '<|end|>' → logprob: -8.875457763671875
    4. ',' → logprob: -10.250457763671875
    5. '        
' → logprob: -11.250457763671875
    6. '   ' → logprob: -12.125457763671875
    7. '```' → logprob: -12.250457763671875
    8. 'seq' → logprob: -12.375457763671875
    9. '
' → logprob: -12.875457763671875
    10. '<|end|>' → logprob: -13.000457763671875

Token 104: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011241449974477291
    2. '        
' → logprob: -7.376124382019043
    3. '<|end|>' → logprob: -8.876124382019043
    4. ' if' → logprob: -9.001124382019043
    5. '
' → logprob: -9.126124382019043
    6. 'if' → logprob: -10.501124382019043
    7. ' seq' → logprob: -11.001124382019043
    8. '  
' → logprob: -11.376124382019043
    9. 'seq' → logprob: -11.501124382019043
    10. '```' → logprob: -11.626124382019043

Token 105: ' seq' (ID: 26775)
  Prédit: 'seq'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seq' (adapté à ' seq') → logprob: -0.02456936240196228
    2. ' seq' → logprob: -3.774569272994995
    3. '       ' → logprob: -7.024569511413574
    4. 'if' → logprob: -7.899569511413574
    5. ' if' → logprob: -9.899569511413574
    6. '
' → logprob: -12.649569511413574
    7. '   ' → logprob: -13.149569511413574
    8. 'sequence' → logprob: -13.399569511413574
    9. 'try' → logprob: -13.899569511413574
    10. '.seq' → logprob: -14.024569511413574

Token 106: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.1002492681145668
    2. '.' → logprob: -2.3502492904663086
    3. 'append' → logprob: -10.225249290466309
    4. '.Append' → logprob: -12.600249290466309
    5. '.app' → logprob: -14.100249290466309
    6. ' .' → logprob: -14.350249290466309
    7. '.extend' → logprob: -14.975249290466309
    8. ' append' → logprob: -14.975249290466309
    9. '_append' → logprob: -15.350249290466309
    10. '.push' → logprob: -15.725249290466309

Token 107: '(grid' (ID: 51818)
  Prédit: '(grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(grid' → logprob: -0.00012999906903132796
    2. '(' → logprob: -9.000129699707031
    3. 'grid' → logprob: -12.250129699707031
    4. ' grid' → logprob: -13.500129699707031
    5. ' (' → logprob: -15.875129699707031
    6. '(
' → logprob: -16.00012969970703
    7. '(gr' → logprob: -16.50012969970703
    8. '(Grid' → logprob: -17.37512969970703
    9. ':grid' → logprob: -18.62512969970703
    10. '(

' → logprob: -19.00012969970703

Token 108: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.00025895543512888253
    2. '[' → logprob: -8.375259399414062
    3. ')[' → logprob: -11.375259399414062
    4. ' [' → logprob: -11.875259399414062
    5. '[
' → logprob: -12.375259399414062
    6. '   ' → logprob: -13.250259399414062
    7. ')' → logprob: -13.500259399414062
    8. '(nx' → logprob: -14.750259399414062
    9. '```' → logprob: -15.000259399414062
    10. '][' → logprob: -15.000259399414062

Token 109: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -4.5252596464706585e-05
    2. '][' → logprob: -10.375044822692871
    3. '[x' → logprob: -11.750044822692871
    4. '   ' → logprob: -13.375044822692871
    5. '[' → logprob: -13.500044822692871
    6. ' x' → logprob: -13.875044822692871
    7. ')x' → logprob: -14.375044822692871
    8. ']' → logprob: -14.625044822692871
    9. '	x' → logprob: -15.500044822692871
    10. '       ' → logprob: -16.000045776367188

Token 110: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.001309882733039558
    2. '[' → logprob: -7.126309871673584
    3. ']' → logprob: -7.626309871673584
    4. ' ][' → logprob: -11.126310348510742
    5. '[n' → logprob: -14.376310348510742
    6. '   ' → logprob: -14.376310348510742
    7. '"][' → logprob: -14.751310348510742
    8. ''][' → logprob: -15.001310348510742
    9. ')][' → logprob: -15.626310348510742
    10. '])' → logprob: -15.751310348510742

Token 111: 'ny' (ID: 3008)
  Prédit: 'ny'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -0.000808082812000066
    2. ' ny' → logprob: -7.125808238983154
    3. 'n' → logprob: -13.375807762145996
    4. 'nyi' → logprob: -13.875807762145996
    5. '   ' → logprob: -15.000807762145996
    6. ' ' → logprob: -15.000807762145996
    7. 'ney' → logprob: -16.500808715820312
    8. ''ny' → logprob: -16.500808715820312
    9. 'nyt' → logprob: -16.625808715820312
    10. '
' → logprob: -16.875808715820312

Token 112: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.1067400872707367
    2. ')' → logprob: -2.3567399978637695
    3. ']' → logprob: -5.1067399978637695
    4. ' ])' → logprob: -8.10673999786377
    5. ' )' → logprob: -9.48173999786377
    6. ')])' → logprob: -10.48173999786377
    7. ')]' → logprob: -10.98173999786377
    8. '   ' → logprob: -11.85673999786377
    9. '])
' → logprob: -11.98173999786377
    10. '[' → logprob: -11.98173999786377

Token 113: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007903324440121651
    2. 'return' → logprob: -8.0007905960083
    3. '
' → logprob: -8.1257905960083
    4. ' return' → logprob: -9.1257905960083
    5. '    
' → logprob: -10.2507905960083
    6. '	return' → logprob: -11.7507905960083
    7. '  
' → logprob: -13.1257905960083
    8. '```' → logprob: -13.8757905960083
    9. '       ' → logprob: -14.0007905960083
    10. ' 
' → logprob: -14.2507905960083

Token 114: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.051030952483415604
    2. ' return' → logprob: -3.0510308742523193
    3. '   ' → logprob: -6.426031112670898
    4. '
' → logprob: -7.301031112670898
    5. ' ' → logprob: -9.426031112670898
    6. '    
' → logprob: -10.426031112670898
    7. '  
' → logprob: -11.551031112670898
    8. '```' → logprob: -11.676031112670898
    9. '	return' → logprob: -11.801031112670898
    10. ' 
' → logprob: -12.676031112670898

Token 115: ' "".' (ID: 94734)
  Prédit: ' seq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' seq' → logprob: -0.5806454420089722
    2. 'seq' → logprob: -0.8306454420089722
    3. ' ''.' → logprob: -6.205645561218262
    4. '''.' → logprob: -6.330645561218262
    5. ' "".' → logprob: -7.830645561218262
    6. '"' → logprob: -8.330645561218262
    7. ' ' → logprob: -8.705645561218262
    8. '   ' → logprob: -10.705645561218262
    9. '(seq' → logprob: -10.955645561218262
    10. 'se' → logprob: -11.830645561218262

Token 116: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -5.200166469876422e-06
    2. 'jo' → logprob: -12.375004768371582
    3. 'j' → logprob: -14.250004768371582
    4. '```' → logprob: -16.3750057220459
    5. ' join' → logprob: -16.6250057220459
    6. 'joint' → logprob: -17.0000057220459
    7. '/j' → logprob: -17.3750057220459
    8. '(join' → logprob: -17.8750057220459
    9. '"' → logprob: -18.1250057220459
    10. '.join' → logprob: -18.5000057220459

Token 117: '(seq' (ID: 78669)
  Prédit: '(seq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(seq' → logprob: -0.0004038593906443566
    2. '(' → logprob: -7.875403881072998
    3. 'seq' → logprob: -10.87540340423584
    4. '(se' → logprob: -12.50040340423584
    5. '(sequence' → logprob: -14.37540340423584
    6. '(
' → logprob: -15.12540340423584
    7. ' (' → logprob: -16.000404357910156
    8. '(ss' → logprob: -16.125404357910156
    9. '("("' → logprob: -17.500404357910156
    10. '(tuple' → logprob: -18.125404357910156

Token 118: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.512236498361744e-07
    2. ' )' → logprob: -15.250000953674316
    3. ')
' → logprob: -15.375000953674316
    4. ')`' → logprob: -18.75
    5. ')

' → logprob: -19.125
    6. '<|end|>' → logprob: -19.5
    7. '}' → logprob: -19.875
    8. '),' → logprob: -20.125
    9. '))' → logprob: -20.5
    10. ']' → logprob: -20.625

Token 119: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.029795385897159576
    2. '
' → logprob: -3.9047954082489014
    3. '<|end|>' → logprob: -5.029795169830322
    4. '

' → logprob: -6.279795169830322
    5. '```' → logprob: -7.779795169830322
    6. '#' → logprob: -9.15479564666748
    7. '  
' → logprob: -9.77979564666748
    8. 'for' → logprob: -9.77979564666748
    9. '<|end|>' → logprob: -10.90479564666748
    10. ' 

' → logprob: -11.02979564666748

Token 120: ' no' (ID: 860)
  Prédit: ' find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' find' → logprob: -0.043431419879198074
    2. ' main' → logprob: -4.043431282043457
    3. ' search' → logprob: -4.543431282043457
    4. ' check' → logprob: -4.668431282043457
    5. ' count' → logprob: -6.418431282043457
    6. ' word' → logprob: -7.043431282043457
    7. 'find' → logprob: -7.543431282043457
    8. ' is' → logprob: -7.668431282043457
    9. 'search' → logprob: -8.293431282043457
    10. ' longest' → logprob: -8.543431282043457

Token 121: '_overlap' (ID: 179163)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.08608133345842361
    2. 'n' → logprob: -3.3360812664031982
    3. 'w' → logprob: -3.7110812664031982
    4. 'ne' → logprob: -4.461081504821777
    5. 'r' → logprob: -5.461081504821777
    6. '_duplicates' → logprob: -6.586081504821777
    7. '_wrap' → logprob: -7.211081504821777
    8. '_repeat' → logprob: -7.461081504821777
    9. '_duplicate' → logprob: -7.461081504821777
    10. 'def' → logprob: -7.586081504821777

Token 122: '(length' (ID: 47037)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05247286707162857
    2. '(d' → logprob: -3.8024728298187256
    3. '_' → logprob: -4.927473068237305
    4. '_(' → logprob: -5.802473068237305
    5. '(sequence' → logprob: -5.802473068237305
    6. '(grid' → logprob: -5.927473068237305
    7. '(_' → logprob: -6.052473068237305
    8. '(seq' → logprob: -6.177473068237305
    9. ' (' → logprob: -7.052473068237305
    10. '_sequences' → logprob: -7.177473068237305

Token 123: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0014996256213635206
    2. '):' → logprob: -6.876499652862549
    3. ' ,' → logprob: -8.25149917602539
    4. ',length' → logprob: -9.37649917602539
    5. ',n' → logprob: -9.75149917602539
    6. ')' → logprob: -11.25149917602539
    7. ',int' → logprob: -12.25149917602539
    8. ',size' → logprob: -12.62649917602539
    9. ' ):' → logprob: -12.75149917602539
    10. ',d' → logprob: -13.00149917602539

Token 124: ' h' (ID: 312)
  Prédit: ' seq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' seq' → logprob: -0.9287243485450745
    2. ' sequences' → logprob: -1.1787242889404297
    3. ' grid' → logprob: -2.4287242889404297
    4. ' used' → logprob: -3.1787242889404297
    5. ' sequence' → logprob: -3.5537242889404297
    6. 'seq' → logprob: -3.6787242889404297
    7. ' positions' → logprob: -4.55372428894043
    8. ' word' → logprob: -4.67872428894043
    9. ' words' → logprob: -4.80372428894043
    10. ' pos' → logprob: -4.80372428894043

Token 125: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00017183588352054358
    2. ' ,' → logprob: -9.250171661376953
    3. ',w' → logprob: -9.750171661376953
    4. 'w' → logprob: -11.500171661376953
    5. ',
' → logprob: -12.375171661376953
    6. ')' → logprob: -13.875171661376953
    7. ',width' → logprob: -14.875171661376953
    8. ',

' → logprob: -15.375171661376953
    9. '<|end|>' → logprob: -16.000171661376953
    10. '‌,' → logprob: -16.125171661376953

Token 126: ' w' (ID: 286)
  Prédit: ' w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.5231742858886719
    2. 'w' → logprob: -0.8981742858886719
    3. 'length' → logprob: -11.273174285888672
    4. ' ' → logprob: -11.648174285888672
    5. 'def' → logprob: -12.398174285888672
    6. '   ' → logprob: -12.648174285888672
    7. ' length' → logprob: -12.648174285888672
    8. ')' → logprob: -12.898174285888672
    9. '```' → logprob: -13.023174285888672
    10. 'width' → logprob: -13.273174285888672

Token 127: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.062146034091711044
    2. '):' → logprob: -2.812145948410034
    3. ')' → logprob: -9.812146186828613
    4. ' ,' → logprob: -10.312146186828613
    5. '):
' → logprob: -10.437146186828613
    6. ' ):' → logprob: -10.937146186828613
    7. '   ' → logprob: -11.187146186828613
    8. ',
' → logprob: -11.562146186828613
    9. ',d' → logprob: -12.437146186828613
    10. ',n' → logprob: -12.812146186828613

Token 128: ' dx' (ID: 29472)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.6967294216156006
    2. 'se' → logprob: -2.5717294216156006
    3. ' grid' → logprob: -2.5717294216156006
    4. 'used' → logprob: -2.8217294216156006
    5. 'sequence' → logprob: -2.9467294216156006
    6. 'positions' → logprob: -3.4467294216156006
    7. 'visited' → logprob: -3.4467294216156006
    8. 'seq' → logprob: -3.5717294216156006
    9. ' sequences' → logprob: -3.8217294216156006
    10. ' used' → logprob: -4.07172966003418

Token 129: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000531467841938138
    2. ' ,' → logprob: -7.6255316734313965
    3. ',
' → logprob: -10.875531196594238
    4. ',d' → logprob: -11.500531196594238
    5. ',y' → logprob: -12.375531196594238
    6. ')' → logprob: -13.000531196594238
    7. '<|end|>' → logprob: -13.625531196594238
    8. '):' → logprob: -14.000531196594238
    9. ',n' → logprob: -14.125531196594238
    10. ',

' → logprob: -14.250531196594238

Token 130: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.04858975484967232
    2. ' dy' → logprob: -3.0485897064208984
    3. 'd' → logprob: -13.798589706420898
    4. 'Dy' → logprob: -14.548589706420898
    5. '   ' → logprob: -15.423589706420898
    6. '<|end|>' → logprob: -15.798589706420898
    7. '.dy' → logprob: -15.798589706420898
    8. 'def' → logprob: -16.0485897064209
    9. ' ' → logprob: -16.0485897064209
    10. '
' → logprob: -16.5485897064209

Token 131: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4288167953491211
    2. '):' → logprob: -1.053816795349121
    3. ')' → logprob: -9.678816795349121
    4. ' ):' → logprob: -10.803816795349121
    5. '):
' → logprob: -11.053816795349121
    6. ' ,' → logprob: -11.803816795349121
    7. '   ' → logprob: -12.303816795349121
    8. ':' → logprob: -13.553816795349121
    9. ',
' → logprob: -13.803816795349121
    10. ',n' → logprob: -15.053816795349121

Token 132: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0003017385315615684
    2. ':' → logprob: -9.875301361083984
    3. ' for' → logprob: -10.125301361083984
    4. ')' → logprob: -10.125301361083984
    5. 'n' → logprob: -10.750301361083984
    6. ' return' → logprob: -11.000301361083984
    7. '{' → logprob: -11.000301361083984
    8. ',' → logprob: -11.250301361083984
    9. 'def' → logprob: -11.625301361083984
    10. '<|end|>' → logprob: -11.625301361083984

Token 133: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1263311207294464
    2. ' visited' → logprob: -2.751331090927124
    3. 'visited' → logprob: -3.376331090927124
    4. ' positions' → logprob: -4.751331329345703
    5. 'positions' → logprob: -5.751331329345703
    6. ' steps' → logprob: -6.876331329345703
    7. ' coverage' → logprob: -7.126331329345703
    8. 'over' → logprob: -7.126331329345703
    9. ' return' → logprob: -7.751331329345703
    10. '    
' → logprob: -7.876331329345703

Token 134: ' The' (ID: 623)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.6316370368003845
    2. ' visited' → logprob: -1.0066370964050293
    3. 'seen' → logprob: -3.8816370964050293
    4. ' positions' → logprob: -4.006637096405029
    5. 'positions' → logprob: -4.256637096405029
    6. ' seen' → logprob: -4.381637096405029
    7. 'steps' → logprob: -5.006637096405029
    8. ' if' → logprob: -5.131637096405029
    9. ' steps' → logprob: -5.256637096405029
    10. 'if' → logprob: -5.256637096405029

Token 135: ' maximum' (ID: 10562)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.3930027484893799
    2. 'return' → logprob: -2.26800274848938
    3. ' return' → logprob: -2.26800274848938
    4. ' if' → logprob: -2.64300274848938
    5. ' max' → logprob: -2.89300274848938
    6. 'max' → logprob: -3.01800274848938
    7. 'visited' → logprob: -3.01800274848938
    8. '#' → logprob: -3.26800274848938
    9. ' visited' → logprob: -3.26800274848938
    10. ' steps' → logprob: -3.76800274848938

Token 136: ' length' (ID: 5517)
  Prédit: 'steps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'steps' → logprob: -1.2965528964996338
    2. 'distance' → logprob: -1.2965528964996338
    3. 'over' → logprob: -2.421552896499634
    4. ' steps' → logprob: -2.921552896499634
    5. 'sequence' → logprob: -3.046552896499634
    6. ' number' → logprob: -3.046552896499634
    7. 'offset' → logprob: -3.171552896499634
    8. ' distance' → logprob: -3.171552896499634
    9. 'number' → logprob: -4.046552658081055
    10. 'shift' → logprob: -4.046552658081055

Token 137: ' of' (ID: 328)
  Prédit: ' that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' that' → logprob: -0.9664952754974365
    2. ' is' → logprob: -1.2164952754974365
    3. ' =' → logprob: -1.7164952754974365
    4. ' ' → logprob: -3.0914952754974365
    5. ' of' → logprob: -3.8414952754974365
    6. ' for' → logprob: -4.091495513916016
    7. '=' → logprob: -4.091495513916016
    8. 'that' → logprob: -4.591495513916016
    9. ' to' → logprob: -4.841495513916016
    10. ' possible' → logprob: -5.716495513916016

Token 138: ' non' (ID: 2893)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -2.2855684757232666
    2. 'a' → logprob: -2.5355684757232666
    3. 'the' → logprob: -2.5355684757232666
    4. ' dx' → logprob: -2.5355684757232666
    5. 'dx' → logprob: -2.5355684757232666
    6. 'dire' → logprob: -2.5355684757232666
    7. ' a' → logprob: -2.7855684757232666
    8. 'steps' → logprob: -2.7855684757232666
    9. 'sequence' → logprob: -2.7855684757232666
    10. ' steps' → logprob: -2.9105684757232666

Token 139: '-self' (ID: 89352)
  Prédit: ' overlapping'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' overlapping' → logprob: -0.3879542350769043
    2. '-over' → logprob: -1.7629542350769043
    3. 'over' → logprob: -2.1379542350769043
    4. ' overlap' → logprob: -4.512954235076904
    5. '-' → logprob: -4.637954235076904
    6. '_overlap' → logprob: -5.887954235076904
    7. '_over' → logprob: -6.012954235076904
    8. ' over' → logprob: -6.887954235076904
    9. ' repeating' → logprob: -7.262954235076904
    10. ' -' → logprob: -7.387954235076904

Token 140: '-over' (ID: 37193)
  Prédit: '-over'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-over' → logprob: -0.20420897006988525
    2. ' overlapping' → logprob: -2.5792088508605957
    3. '-' → logprob: -2.8292088508605957
    4. 'over' → logprob: -4.079208850860596
    5. ' overlap' → logprob: -4.454208850860596
    6. '-inter' → logprob: -5.454208850860596
    7. ' avoiding' → logprob: -5.704208850860596
    8. '-cross' → logprob: -6.079208850860596
    9. '_overlap' → logprob: -6.204208850860596
    10. '```' → logprob: -6.704208850860596

Token 141: 'lapping' (ID: 152588)
  Prédit: 'lapping'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lapping' → logprob: -0.03601182997226715
    2. 'apping' → logprob: -3.9110119342803955
    3. 'lap' → logprob: -4.286011695861816
    4. 'l' → logprob: -7.411011695861816
    5. 'ap' → logprob: -7.911011695861816
    6. 'aping' → logprob: -8.411011695861816
    7. 'ing' → logprob: -9.161011695861816
    8. 'ping' → logprob: -9.661011695861816
    9. 'pping' → logprob: -10.036011695861816
    10. 'laps' → logprob: -10.161011695861816

Token 142: ' sequence' (ID: 16281)
  Prédit: ' sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sequence' → logprob: -0.8798041343688965
    2. 'sequence' → logprob: -1.0048041343688965
    3. ' sequences' → logprob: -1.7548041343688965
    4. 'steps' → logprob: -4.6298041343688965
    5. ' steps' → logprob: -5.0048041343688965
    6. 'path' → logprob: -5.5048041343688965
    7. ' path' → logprob: -6.0048041343688965
    8. 'step' → logprob: -6.0048041343688965
    9. 'segments' → logprob: -6.5048041343688965
    10. 'se' → logprob: -6.6298041343688965

Token 143: ' in' (ID: 306)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22379396855831146
    2. ' is' → logprob: -1.7237939834594727
    3. '=' → logprob: -4.098793983459473
    4. '   ' → logprob: -6.348793983459473
    5. ' for' → logprob: -6.973793983459473
    6. 'is' → logprob: -7.348793983459473
    7. ' ' → logprob: -7.598793983459473
    8. ' def' → logprob: -8.098793983459473
    9. 'def' → logprob: -8.223793983459473
    10. ' in' → logprob: -8.973793983459473

Token 144: ' direction' (ID: 9262)
  Prédit: ' any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' any' → logprob: -0.9599628448486328
    2. ' a' → logprob: -1.5849628448486328
    3. ' given' → logprob: -2.209962844848633
    4. ' the' → logprob: -2.959962844848633
    5. ' directions' → logprob: -2.959962844848633
    6. ' one' → logprob: -3.584962844848633
    7. ' this' → logprob: -3.584962844848633
    8. ' direction' → logprob: -3.584962844848633
    9. ' either' → logprob: -3.709962844848633
    10. 'a' → logprob: -3.959962844848633

Token 145: ' (' (ID: 350)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.10185731202363968
    2. ' ' → logprob: -2.7268574237823486
    3. 's' → logprob: -4.9768571853637695
    4. ' can' → logprob: -5.3518571853637695
    5. ' for' → logprob: -5.7268571853637695
    6. ' (' → logprob: -6.2268571853637695
    7. ' dx' → logprob: -6.2268571853637695
    8. 'is' → logprob: -6.6018571853637695
    9. ' "' → logprob: -6.7268571853637695
    10. ' must' → logprob: -6.7268571853637695

Token 146: 'dx' (ID: 22100)
  Prédit: 'dx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.35508793592453003
    2. ' dx' → logprob: -1.2300879955291748
    3. ')' → logprob: -5.605087757110596
    4. ',' → logprob: -6.230087757110596
    5. '(dx' → logprob: -8.480088233947754
    6. ' ,' → logprob: -8.605088233947754
    7. 'd' → logprob: -9.230088233947754
    8. ' )' → logprob: -9.230088233947754
    9. '_dx' → logprob: -9.855088233947754
    10. ' ' → logprob: -10.105088233947754

Token 147: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0017286106012761593
    2. ' ,' → logprob: -6.501728534698486
    3. ')' → logprob: -8.751729011535645
    4. ',
' → logprob: -10.501729011535645
    5. 'dy' → logprob: -11.126729011535645
    6. ',d' → logprob: -11.751729011535645
    7. ',

' → logprob: -12.376729011535645
    8. ',)' → logprob: -12.626729011535645
    9. '   ' → logprob: -13.001729011535645
    10. 'def' → logprob: -13.501729011535645

Token 148: 'dy' (ID: 7593)
  Prédit: ' dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dy' → logprob: -0.4287464916706085
    2. 'dy' → logprob: -1.0537464618682861
    3. ',' → logprob: -11.178746223449707
    4. ')' → logprob: -11.803746223449707
    5. '   ' → logprob: -12.053746223449707
    6. ' ' → logprob: -12.553746223449707
    7. '
' → logprob: -12.803746223449707
    8. '```' → logprob: -12.928746223449707
    9. '

' → logprob: -13.303746223449707
    10. '.dy' → logprob: -13.553746223449707

Token 149: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009849939495325089
    2. ' )' → logprob: -4.634850025177002
    3. ' is' → logprob: -10.759849548339844
    4. '   ' → logprob: -11.009849548339844
    5. ')
' → logprob: -11.384849548339844
    6. '):
' → logprob: -11.759849548339844
    7. ' ' → logprob: -11.884849548339844
    8. '):' → logprob: -12.009849548339844
    9. 'def' → logprob: -12.259849548339844
    10. ',' → logprob: -12.259849548339844

Token 150: '   ' (ID: 271)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.003094531362876296
    2. ' ' → logprob: -6.378094673156738
    3. ' =' → logprob: -7.628094673156738
    4. ' for' → logprob: -8.753094673156738
    5. '   ' → logprob: -8.878094673156738
    6. ' 
' → logprob: -9.253094673156738
    7. 'is' → logprob: -9.378094673156738
    8. '=' → logprob: -9.628094673156738
    9. ' depends' → logprob: -9.628094673156738
    10. ')' → logprob: -10.003094673156738

Token 151: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5938327312469482
    2. 'if' → logprob: -1.4688327312469482
    3. 'max' → logprob: -2.8438327312469482
    4. ' max' → logprob: -2.9688327312469482
    5. '   ' → logprob: -3.0938327312469482
    6. ' =' → logprob: -3.7188327312469482
    7. ' steps' → logprob: -4.343832969665527
    8. '=' → logprob: -5.093832969665527
    9. 'steps' → logprob: -5.343832969665527
    10. ')' → logprob: -5.468832969665527

Token 152: ' is' (ID: 382)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.836532711982727
    2. ' max' → logprob: -0.836532711982727
    3. ' steps' → logprob: -3.0865325927734375
    4. 'max' → logprob: -3.4615325927734375
    5. 'if' → logprob: -4.2115325927734375
    6. '   ' → logprob: -4.2115325927734375
    7. ' step' → logprob: -4.5865325927734375
    8. ' is' → logprob: -5.5865325927734375
    9. 'steps' → logprob: -6.0865325927734375
    10. ' ' → logprob: -6.3365325927734375

Token 153: ' limited' (ID: 9913)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.7088502645492554
    2. 'max' → logprob: -1.8338502645492554
    3. ' h' → logprob: -2.208850383758545
    4. ' min' → logprob: -2.333850383758545
    5. 'min' → logprob: -2.958850383758545
    6. 'h' → logprob: -3.708850383758545
    7. ' (' → logprob: -3.833850383758545
    8. '(max' → logprob: -4.833850383758545
    9. ' length' → logprob: -4.958850383758545
    10. 'length' → logprob: -4.958850383758545

Token 154: ' by' (ID: 656)
  Prédit: ' by'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' by' → logprob: -0.03502654284238815
    2. ' to' → logprob: -3.4100265502929688
    3. 'by' → logprob: -7.160026550292969
    4. ' ' → logprob: -7.910026550292969
    5. 'to' → logprob: -9.535026550292969
    6. ',' → logprob: -9.660026550292969
    7. '<|end|>' → logprob: -11.035026550292969
    8. '   ' → logprob: -11.410026550292969
    9. '  ' → logprob: -11.410026550292969
    10. '_' → logprob: -11.410026550292969

Token 155: ' the' (ID: 290)
  Prédit: ' h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.5640599131584167
    2. ' max' → logprob: -1.6890599727630615
    3. 'h' → logprob: -2.1890599727630615
    4. 'max' → logprob: -2.6890599727630615
    5. ' min' → logprob: -3.3140599727630615
    6. 'min' → logprob: -4.314059734344482
    7. ' (' → logprob: -5.189059734344482
    8. ' abs' → logprob: -6.189059734344482
    9. 'length' → logprob: -6.314059734344482
    10. ' length' → logprob: -6.814059734344482

Token 156: ' minimal' (ID: 19957)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -1.0612235069274902
    2. 'min' → logprob: -1.4362235069274902
    3. ' h' → logprob: -2.0612235069274902
    4. 'max' → logprob: -2.3112235069274902
    5. ' min' → logprob: -2.4362235069274902
    6. ' max' → logprob: -3.4362235069274902
    7. 'g' → logprob: -3.4362235069274902
    8. ' gcd' → logprob: -3.9362235069274902
    9. ' math' → logprob: -5.18622350692749
    10. ' l' → logprob: -5.56122350692749

Token 157: ' period' (ID: 5265)
  Prédit: ' distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' distance' → logprob: -1.084964632987976
    2. ' dimension' → logprob: -2.0849647521972656
    3. ' steps' → logprob: -2.3349647521972656
    4. 'distance' → logprob: -2.3349647521972656
    5. ' step' → logprob: -2.8349647521972656
    6. ' of' → logprob: -2.8349647521972656
    7. 'abs' → logprob: -3.8349647521972656
    8. '(' → logprob: -4.084964752197266
    9. ' dx' → logprob: -4.209964752197266
    10. '(
' → logprob: -4.209964752197266

Token 158: ' before' (ID: 2254)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9458207488059998
    2. '   ' → logprob: -1.9458208084106445
    3. ' in' → logprob: -2.0708208084106445
    4. ' ' → logprob: -2.1958208084106445
    5. '_' → logprob: -3.1958208084106445
    6. ',' → logprob: -3.1958208084106445
    7. 's' → logprob: -3.9458208084106445
    8. '=' → logprob: -4.0708208084106445
    9. ' ,' → logprob: -4.0708208084106445
    10. ':' → logprob: -4.1958208084106445

Token 159: ' returning' (ID: 22968)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.5366081595420837
    2. 'the' → logprob: -1.4116082191467285
    3. ' overlap' → logprob: -4.2866082191467285
    4. ' sequence' → logprob: -4.4116082191467285
    5. '(dx' → logprob: -4.4116082191467285
    6. ' wrapping' → logprob: -4.5366082191467285
    7. ' positions' → logprob: -4.5366082191467285
    8. ' a' → logprob: -4.6616082191467285
    9. ' sequences' → logprob: -4.7866082191467285
    10. ' either' → logprob: -4.9116082191467285

Token 160: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.011135069653391838
    2. 'to' → logprob: -5.511135101318359
    3. ' ' → logprob: -5.636135101318359
    4. '"' → logprob: -6.386135101318359
    5. ' "' → logprob: -7.136135101318359
    6. '_to' → logprob: -8.38613510131836
    7. ' None' → logprob: -8.88613510131836
    8. '_' → logprob: -9.01113510131836
    9. ' _' → logprob: -9.13613510131836
    10. '   ' → logprob: -9.88613510131836

Token 161: ' start' (ID: 1604)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.8009158372879028
    2. ' the' → logprob: -1.4259158372879028
    3. '(' → logprob: -2.0509157180786133
    4. 'the' → logprob: -2.1759157180786133
    5. ' (' → logprob: -3.1759157180786133
    6. 'x' → logprob: -3.9259157180786133
    7. '0' → logprob: -5.675915718078613
    8. ' x' → logprob: -6.050915718078613
    9. 'start' → logprob: -8.175915718078613
    10. '(nx' → logprob: -8.550915718078613

Token 162: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.40418967604637146
    2. ' ' → logprob: -1.7791897058486938
    3. ',' → logprob: -3.2791895866394043
    4. '.' → logprob: -3.7791895866394043
    5. ' ,' → logprob: -3.7791895866394043
    6. '_' → logprob: -4.404189586639404
    7. ' return' → logprob: -4.529189586639404
    8. '    ' → logprob: -4.779189586639404
    9. ' for' → logprob: -4.904189586639404
    10. '
' → logprob: -5.029189586639404

Token 163: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8433550596237183
    2. ' steps' → logprob: -1.5933550596237183
    3. ' max' → logprob: -2.218355178833008
    4. ' if' → logprob: -2.218355178833008
    5. ' step' → logprob: -2.843355178833008
    6. ' period' → logprob: -4.093355178833008
    7. 'steps' → logprob: -4.343355178833008
    8. 'max' → logprob: -4.468355178833008
    9. 'period' → logprob: -4.468355178833008
    10. ' p' → logprob: -4.843355178833008

Token 164: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.16256162524223328
    2. 'if' → logprob: -2.5375616550445557
    3. ' steps' → logprob: -3.6625616550445557
    4. '   ' → logprob: -4.537561416625977
    5. ' step' → logprob: -4.537561416625977
    6. ' period' → logprob: -5.037561416625977
    7. 'period' → logprob: -5.287561416625977
    8. 'steps' → logprob: -6.162561416625977
    9. ' p' → logprob: -6.412561416625977
    10. ' max' → logprob: -6.537561416625977

Token 165: ' Because' (ID: 13602)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.43181121349334717
    2. ' if' → logprob: -1.4318112134933472
    3. 'period' → logprob: -2.9318113327026367
    4. 'step' → logprob: -4.181811332702637
    5. ' period' → logprob: -4.556811332702637
    6. 'steps' → logprob: -4.806811332702637
    7. ' step' → logprob: -4.806811332702637
    8. ' steps' → logprob: -4.931811332702637
    9. '   ' → logprob: -6.306811332702637
    10. 'max' → logprob: -6.431811332702637

Token 166: ' grid' (ID: 10586)
  Prédit: ' dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dx' → logprob: -0.27347007393836975
    2. ' abs' → logprob: -2.523470163345337
    3. 'abs' → logprob: -2.898470163345337
    4. 'dx' → logprob: -3.023470163345337
    5. ' (' → logprob: -3.523470163345337
    6. '(dx' → logprob: -3.898470163345337
    7. '(abs' → logprob: -6.523469924926758
    8. ' not' → logprob: -6.648469924926758
    9. '(' → logprob: -6.648469924926758
    10. ' if' → logprob: -7.898469924926758

Token 167: ' is' (ID: 382)
  Prédit: ' dimensions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dimensions' → logprob: -1.1336909532546997
    2. ' is' → logprob: -1.8836909532546997
    3. ' cells' → logprob: -2.25869083404541
    4. ' wrapping' → logprob: -2.25869083404541
    5. ' size' → logprob: -2.50869083404541
    6. ' sizes' → logprob: -2.88369083404541
    7. ' has' → logprob: -3.25869083404541
    8. 'size' → logprob: -4.13369083404541
    9. ' positions' → logprob: -4.13369083404541
    10. ' height' → logprob: -4.13369083404541

Token 168: ' tor' (ID: 7516)
  Prédit: ' tor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tor' → logprob: -0.8668566942214966
    2. 't' → logprob: -1.4918566942214966
    3. ' wrapped' → logprob: -2.491856575012207
    4. 'tor' → logprob: -2.741856575012207
    5. ' wrapping' → logprob: -3.116856575012207
    6. ' finite' → logprob: -3.491856575012207
    7. 'wrapped' → logprob: -3.616856575012207
    8. ' periodic' → logprob: -4.241856575012207
    9. ' cyclic' → logprob: -4.241856575012207
    10. 'finite' → logprob: -4.616856575012207

Token 169: 'us' (ID: 385)
  Prédit: 'us'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'us' → logprob: -0.43345552682876587
    2. 'oidal' → logprob: -1.058455467224121
    3. 'oid' → logprob: -6.433455467224121
    4. '```' → logprob: -6.808455467224121
    5. '``' → logprob: -8.308455467224121
    6. 'o' → logprob: -8.558455467224121
    7. ' us' → logprob: -8.558455467224121
    8. 'u' → logprob: -8.808455467224121
    9. 'ic' → logprob: -8.808455467224121
    10. '#' → logprob: -8.808455467224121

Token 170: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13998687267303467
    2. ' ,' → logprob: -2.139986991882324
    3. ',
' → logprob: -4.639986991882324
    4. ':' → logprob: -7.389986991882324
    5. '   ' → logprob: -7.639986991882324
    6. 'def' → logprob: -7.764986991882324
    7. ' size' → logprob: -8.014986991882324
    8. '.' → logprob: -8.264986991882324
    9. ',

' → logprob: -8.639986991882324
    10. ' def' → logprob: -9.389986991882324

Token 171: ' the' (ID: 290)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.12268974632024765
    2. ' return' → logprob: -3.247689723968506
    3. 'if' → logprob: -3.372689723968506
    4. '   ' → logprob: -3.497689723968506
    5. ' max' → logprob: -4.997689723968506
    6. 'return' → logprob: -5.997689723968506
    7. ' period' → logprob: -7.497689723968506
    8. 'import' → logprob: -7.872689723968506
    9. 'period' → logprob: -7.872689723968506
    10. 'max' → logprob: -8.497690200805664

Token 172: ' distance' (ID: 9324)
  Prédit: 'period'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'period' → logprob: -0.8098076581954956
    2. ' period' → logprob: -1.6848076581954956
    3. ' return' → logprob: -2.434807777404785
    4. 'from' → logprob: -3.059807777404785
    5. ' from' → logprob: -3.309807777404785
    6. 'return' → logprob: -3.434807777404785
    7. ' max' → logprob: -3.559807777404785
    8. 'import' → logprob: -3.559807777404785
    9. ' gcd' → logprob: -3.559807777404785
    10. ' l' → logprob: -4.059807777404785

Token 173: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -1.25128173828125
    2. ' before' → logprob: -1.75128173828125
    3. ' =' → logprob: -2.12628173828125
    4. ' between' → logprob: -2.50128173828125
    5. ' in' → logprob: -2.75128173828125
    6. ' is' → logprob: -2.87628173828125
    7. ' until' → logprob: -3.12628173828125
    8. ' at' → logprob: -3.37628173828125
    9. 's' → logprob: -3.75128173828125
    10. ' traveled' → logprob: -4.00128173828125

Token 174: ' overlap' (ID: 56631)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.6593890190124512
    2. ' return' → logprob: -2.284389019012451
    3. 'l' → logprob: -2.409389019012451
    4. 'h' → logprob: -2.659389019012451
    5. ' l' → logprob: -3.159389019012451
    6. ' h' → logprob: -3.159389019012451
    7. ' complete' → logprob: -4.159389019012451
    8. '(' → logprob: -4.284389019012451
    9. 'complete' → logprob: -4.409389019012451
    10. 'x' → logprob: -4.534389019012451

Token 175: ' can' (ID: 665)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.1279313862323761
    2. ' in' → logprob: -2.6279313564300537
    3. 'is' → logprob: -3.6279313564300537
    4. ' ' → logprob: -4.877931594848633
    5. 'in' → logprob: -5.252931594848633
    6. ' for' → logprob: -6.002931594848633
    7. ' must' → logprob: -6.627931594848633
    8. ' depends' → logprob: -7.127931594848633
    9. ' along' → logprob: -7.377931594848633
    10. '   ' → logprob: -7.502931594848633

Token 176: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.01420182641595602
    2. 'be' → logprob: -4.389201641082764
    3. ' not' → logprob: -7.014201641082764
    4. ' only' → logprob: -8.014202117919922
    5. ' ' → logprob: -8.764202117919922
    6. 'not' → logprob: -9.389202117919922
    7. '	be' → logprob: -9.514202117919922
    8. '_be' → logprob: -10.014202117919922
    9. ' at' → logprob: -11.139202117919922
    10. '   ' → logprob: -11.639202117919922

Token 177: ' found' (ID: 2491)
  Prédit: ' h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.4727727472782135
    2. 'h' → logprob: -1.2227727174758911
    3. ' math' → logprob: -3.9727728366851807
    4. '(h' → logprob: -4.347772598266602
    5. ' calculated' → logprob: -4.472772598266602
    6. ' abs' → logprob: -4.972772598266602
    7. ' (' → logprob: -4.972772598266602
    8. ' found' → logprob: -5.347772598266602
    9. 'math' → logprob: -5.722772598266602
    10. ' computed' → logprob: -6.097772598266602

Token 178: ' by' (ID: 656)
  Prédit: ' by'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' by' → logprob: -0.5468806624412537
    2. '   ' → logprob: -0.9218806624412537
    3. '    ' → logprob: -4.171880722045898
    4. 'by' → logprob: -5.671880722045898
    5. ' from' → logprob: -6.421880722045898
    6. '    
' → logprob: -6.921880722045898
    7. 'from' → logprob: -7.296880722045898
    8. ' as' → logprob: -7.921880722045898
    9. ' ' → logprob: -8.421880722045898
    10. ' =' → logprob: -9.171880722045898

Token 179: '
' (ID: 198)
  Prédit: ' h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' h' → logprob: -1.0986089706420898
    2. ' abs' → logprob: -1.2236089706420898
    3. 'abs' → logprob: -2.22360897064209
    4. '1' → logprob: -2.72360897064209
    5. ' (' → logprob: -3.34860897064209
    6. 'h' → logprob: -3.47360897064209
    7. ' ' → logprob: -3.72360897064209
    8. ' pow' → logprob: -3.84860897064209
    9. 'pow' → logprob: -3.97360897064209
    10. '(abs' → logprob: -3.97360897064209

Token 180: '   ' (ID: 271)
  Prédit: ' abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' abs' → logprob: -1.1263659000396729
    2. ' math' → logprob: -1.1263659000396729
    3. ' gcd' → logprob: -1.6263659000396729
    4. ' l' → logprob: -3.501365900039673
    5. ' sys' → logprob: -3.626365900039673
    6. 'abs' → logprob: -3.876365900039673
    7. ' h' → logprob: -4.126365661621094
    8. '   ' → logprob: -4.376365661621094
    9. ' (' → logprob: -4.501365661621094
    10. ' ' → logprob: -4.501365661621094

Token 181: ' #' (ID: 1069)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.8121620416641235
    2. ' from' → logprob: -1.3121620416641235
    3. 'import' → logprob: -1.5621620416641235
    4. ' import' → logprob: -4.062161922454834
    5. 'g' → logprob: -4.187161922454834
    6. 'abs' → logprob: -4.187161922454834
    7. ' abs' → logprob: -4.937161922454834
    8. ' gcd' → logprob: -5.062161922454834
    9. ' for' → logprob: -5.562161922454834
    10. '   ' → logprob: -6.187161922454834

Token 182: ' finding' (ID: 12129)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.9171465635299683
    2. ' abs' → logprob: -0.9171465635299683
    3. '(abs' → logprob: -3.292146682739258
    4. ' math' → logprob: -3.542146682739258
    5. ' (' → logprob: -3.792146682739258
    6. ' sys' → logprob: -3.917146682739258
    7. ' h' → logprob: -4.042146682739258
    8. 'import' → logprob: -4.167146682739258
    9. 'math' → logprob: -4.667146682739258
    10. 'h' → logprob: -4.667146682739258

Token 183: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.7765486836433411
    2. ' abs' → logprob: -0.9015486836433411
    3. 'abs' → logprob: -2.7765486240386963
    4. ' gcd' → logprob: -3.7765486240386963
    5. 'the' → logprob: -4.151548862457275
    6. 'g' → logprob: -5.151548862457275
    7. ' ' → logprob: -5.276548862457275
    8. ' sys' → logprob: -5.276548862457275
    9. ' h' → logprob: -5.651548862457275
    10. 'x' → logprob: -5.776548862457275

Token 184: ' minimal' (ID: 19957)
  Prédit: ' abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' abs' → logprob: -0.6428443789482117
    2. 'abs' → logprob: -1.6428444385528564
    3. ' gcd' → logprob: -1.7678444385528564
    4. 'g' → logprob: -3.3928444385528564
    5. 'h' → logprob: -3.5178444385528564
    6. ' h' → logprob: -4.142844200134277
    7. 'import' → logprob: -4.892844200134277
    8. 'x' → logprob: -5.517844200134277
    9. ' (' → logprob: -5.767844200134277
    10. ' sys' → logprob: -5.767844200134277

Token 185: ' k' (ID: 372)
  Prédit: ' positive'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' positive' → logprob: -0.06660749763250351
    2. ' period' → logprob: -3.1916074752807617
    3. ' number' → logprob: -4.941607475280762
    4. 'positive' → logprob: -5.191607475280762
    5. ' integer' → logprob: -5.691607475280762
    6. ' k' → logprob: -5.941607475280762
    7. 'period' → logprob: -7.191607475280762
    8. ' t' → logprob: -7.316607475280762
    9. ' n' → logprob: -7.566607475280762
    10. 'k' → logprob: -7.816607475280762

Token 186: '>' (ID: 29)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.2710779011249542
    2. '>' → logprob: -1.6460778713226318
    3. ' such' → logprob: -3.146077871322632
    4. ' ' → logprob: -7.646078109741211
    5. ' for' → logprob: -7.646078109741211
    6. ' >=' → logprob: -8.646078109741211
    7. '<|end|>' → logprob: -9.021078109741211
    8. 'such' → logprob: -9.396078109741211
    9. ' that' → logprob: -9.646078109741211
    10. ' ' → logprob: -9.896078109741211

Token 187: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005233882926404476
    2. ' ' → logprob: -5.2552337646484375
    3. '1' → logprob: -16.505233764648438
    4. '[' → logprob: -18.380233764648438
    5. ' zero' → logprob: -18.380233764648438
    6. '>' → logprob: -19.005233764648438
    7. '<|end|>' → logprob: -19.005233764648438
    8. '=' → logprob: -19.255233764648438
    9. 'zero' → logprob: -20.255233764648438
    10. '```' → logprob: -20.380233764648438

Token 188: ' such' (ID: 2238)
  Prédit: ' such'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' such' → logprob: -0.0029914898332208395
    2. 'such' → logprob: -5.877991676330566
    3. ' for' → logprob: -9.252991676330566
    4. ' s' → logprob: -9.627991676330566
    5. ' so' → logprob: -12.127991676330566
    6. ',' → logprob: -12.252991676330566
    7. ' ' → logprob: -12.377991676330566
    8. ' that' → logprob: -12.627991676330566
    9. 's' → logprob: -13.127991676330566
    10. 'for' → logprob: -13.252991676330566

Token 189: ' that' (ID: 484)
  Prédit: 'that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'that' → logprob: -0.05241189897060394
    2. ' that' → logprob: -3.1774117946624756
    3. 'at' → logprob: -4.802412033081055
    4. 'hat' → logprob: -7.802412033081055
    5. '_that' → logprob: -7.802412033081055
    6. 'That' → logprob: -9.302412033081055
    7. '	that' → logprob: -10.052412033081055
    8. 'def' → logprob: -10.427412033081055
    9. 't' → logprob: -10.552412033081055
    10. 'to' → logprob: -11.302412033081055

Token 190: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.12717095017433167
    2. '(k' → logprob: -2.377171039581299
    3. ' k' → logprob: -4.252171039581299
    4. '(dx' → logprob: -4.752171039581299
    5. 'k' → logprob: -6.502171039581299
    6. ' dx' → logprob: -6.877171039581299
    7. 'kx' → logprob: -7.127171039581299
    8. 'dx' → logprob: -8.75217056274414
    9. '(' → logprob: -9.50217056274414
    10. '(nx' → logprob: -9.75217056274414

Token 191: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.13658206164836884
    2. 'kx' → logprob: -2.636582136154175
    3. 'dx' → logprob: -3.511582136154175
    4. '(dx' → logprob: -4.261581897735596
    5. '(k' → logprob: -5.136581897735596
    6. ' k' → logprob: -5.636581897735596
    7. ' (' → logprob: -6.136581897735596
    8. ' dx' → logprob: -7.886581897735596
    9. 'kd' → logprob: -9.886582374572754
    10. '   ' → logprob: -10.511582374572754

Token 192: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.14696139097213745
    2. ' *' → logprob: -2.0219614505767822
    3. ')' → logprob: -5.896961212158203
    4. 'dx' → logprob: -7.021961212158203
    5. ')*' → logprob: -8.771961212158203
    6. ',' → logprob: -9.146961212158203
    7. ' ' → logprob: -9.271961212158203
    8. '*)' → logprob: -9.896961212158203
    9. '*(' → logprob: -10.021961212158203
    10. ' dx' → logprob: -10.146961212158203

Token 193: 'dx' (ID: 22100)
  Prédit: 'dx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.0007089786231517792
    2. ' dx' → logprob: -7.750709056854248
    3. '(dx' → logprob: -8.37570858001709
    4. ')' → logprob: -10.75070858001709
    5. 'd' → logprob: -11.87570858001709
    6. '(' → logprob: -13.00070858001709
    7. '_dx' → logprob: -13.00070858001709
    8. '```' → logprob: -13.12570858001709
    9. ' (' → logprob: -13.62570858001709
    10. 'abs' → logprob: -13.75070858001709

Token 194: ')%' (ID: 57656)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0893998071551323
    2. ')%' → logprob: -2.964399814605713
    3. ' )' → logprob: -3.714399814605713
    4. '%' → logprob: -5.089399814605713
    5. ' %' → logprob: -5.839399814605713
    6. ',' → logprob: -8.589399337768555
    7. '%x' → logprob: -8.964399337768555
    8. ' ,' → logprob: -9.464399337768555
    9. '[' → logprob: -10.589399337768555
    10. ' ' → logprob: -11.464399337768555

Token 195: 'h' (ID: 71)
  Prédit: 'h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.0004886920796707273
    2. ' h' → logprob: -7.625488758087158
    3. '(h' → logprob: -14.75048828125
    4. '(' → logprob: -15.12548828125
    5. 'w' → logprob: -16.75048828125
    6. ' (' → logprob: -17.12548828125
    7. '
' → logprob: -17.25048828125
    8. 'k' → logprob: -17.37548828125
    9. ' ' → logprob: -17.62548828125
    10. '	h' → logprob: -17.87548828125

Token 196: '==' (ID: 560)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.1269739866256714
    2. '==' → logprob: -2.126974105834961
    3. ' ' → logprob: -10.376974105834961
    4. '=' → logprob: -12.001974105834961
    5. ' =' → logprob: -12.626974105834961
    6. '==
' → logprob: -13.376974105834961
    7. '()==' → logprob: -14.126974105834961
    8. ')==' → logprob: -14.251974105834961
    9. ' and' → logprob: -14.626974105834961
    10. ' ' → logprob: -15.001974105834961

Token 197: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0008045066497288644
    2. ' ' → logprob: -7.125804424285889
    3. 'k' → logprob: -17.375804901123047
    4. '
' → logprob: -18.625804901123047
    5. ' ' → logprob: -18.875804901123047
    6. ' k' → logprob: -19.750804901123047
    7. '(' → logprob: -19.875804901123047
    8. '  ' → logprob: -20.000804901123047
    9. '   ' → logprob: -20.125804901123047
    10. '

' → logprob: -20.625804901123047

Token 198: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.005804955493658781
    2. 'and' → logprob: -5.630805015563965
    3. ' or' → logprob: -6.130805015563965
    4. ' ' → logprob: -10.630805015563965
    5. 'or' → logprob: -13.255805015563965
    6. '   ' → logprob: -14.380805015563965
    7. ',' → logprob: -14.880805015563965
    8. '<|end|>' → logprob: -15.255805015563965
    9. ' ' → logprob: -16.25580406188965
    10. ' ,' → logprob: -16.75580406188965

Token 199: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.693148672580719
    2. '(k' → logprob: -0.693148672580719
    3. ' ' → logprob: -14.193148612976074
    4. '(' → logprob: -14.693148612976074
    5. '   ' → logprob: -16.19314956665039
    6. '  ' → logprob: -16.31814956665039
    7. '(n' → logprob: -17.56814956665039
    8. '    ' → logprob: -17.69314956665039
    9. ' ' → logprob: -17.69314956665039
    10. '
' → logprob: -18.19314956665039

Token 200: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.04449475556612015
    2. '(k' → logprob: -3.169494867324829
    3. ' (' → logprob: -6.79449462890625
    4. ' k' → logprob: -7.91949462890625
    5. 'kx' → logprob: -11.66949462890625
    6. '(' → logprob: -13.66949462890625
    7. ' ' → logprob: -14.79449462890625
    8. ')' → logprob: -15.29449462890625
    9. '{k' → logprob: -15.66949462890625
    10. '	k' → logprob: -15.66949462890625

Token 201: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -7.20734242349863e-05
    2. ' *' → logprob: -9.750072479248047
    3. ')' → logprob: -12.375072479248047
    4. ')*' → logprob: -12.750072479248047
    5. '*d' → logprob: -12.875072479248047
    6. '*)' → logprob: -13.625072479248047
    7. '*(' → logprob: -14.250072479248047
    8. '*>' → logprob: -15.125072479248047
    9. '*
' → logprob: -15.250072479248047
    10. ' ' → logprob: -15.375072479248047

Token 202: 'dy' (ID: 7593)
  Prédit: 'dy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.0010451936395838857
    2. ' dy' → logprob: -6.876045227050781
    3. 'dx' → logprob: -12.376045227050781
    4. 'd' → logprob: -13.751045227050781
    5. '   ' → logprob: -13.751045227050781
    6. ' ' → logprob: -13.751045227050781
    7. '0' → logprob: -14.001045227050781
    8. '.dy' → logprob: -14.001045227050781
    9. '```' → logprob: -14.626045227050781
    10. '-d' → logprob: -14.626045227050781

Token 203: ')%' (ID: 57656)
  Prédit: ')%'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')%' → logprob: -0.011356787756085396
    2. ')' → logprob: -4.636356830596924
    3. ')==' → logprob: -7.136356830596924
    4. '%' → logprob: -7.386356830596924
    5. '%)' → logprob: -9.136356353759766
    6. ' )' → logprob: -9.636356353759766
    7. '==' → logprob: -12.636356353759766
    8. ' %' → logprob: -12.886356353759766
    9. ' ' → logprob: -13.261356353759766
    10. '   ' → logprob: -13.886356353759766

Token 204: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -2.7729658540920354e-05
    2. ' w' → logprob: -10.500027656555176
    3. '0' → logprob: -16.625028610229492
    4. ' ' → logprob: -16.875028610229492
    5. '   ' → logprob: -17.875028610229492
    6. '
' → logprob: -18.500028610229492
    7. '	w' → logprob: -19.125028610229492
    8. '<w' → logprob: -19.625028610229492
    9. 'h' → logprob: -19.875028610229492
    10. '  ' → logprob: -19.875028610229492

Token 205: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0010621058754622936
    2. ' ==' → logprob: -6.876061916351318
    3. '=' → logprob: -11.001062393188477
    4. '()==' → logprob: -12.126062393188477
    5. '==
' → logprob: -12.751062393188477
    6. ')==' → logprob: -13.126062393188477
    7. ']==' → logprob: -13.126062393188477
    8. '===' → logprob: -16.251062393188477
    9. '==(' → logprob: -16.501062393188477
    10. '==-' → logprob: -16.626062393188477

Token 206: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -12.87500286102295
    3. '   ' → logprob: -21.125001907348633
    4. '(' → logprob: -21.250001907348633
    5. '۰' → logprob: -21.875001907348633
    6. '```' → logprob: -22.375001907348633
    7. '  ' → logprob: -23.125001907348633
    8. '<|end|>' → logprob: -23.125001907348633
    9. '00' → logprob: -23.250001907348633
    10. ' (' → logprob: -23.500001907348633

Token 207: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0066258469596505165
    2. '
' → logprob: -5.256625652313232
    3. '    
' → logprob: -7.256625652313232
    4. 'import' → logprob: -8.50662612915039
    5. 'def' → logprob: -8.63162612915039
    6. '  
' → logprob: -9.38162612915039
    7. 'from' → logprob: -10.00662612915039
    8. ')' → logprob: -10.38162612915039
    9. ',' → logprob: -10.50662612915039
    10. ',
' → logprob: -11.00662612915039

Token 208: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010461211204528809
    2. 'def' → logprob: -5.635461330413818
    3. ' k' → logprob: -6.010461330413818
    4. 'from' → logprob: -6.635461330413818
    5. 'k' → logprob: -7.135461330413818
    6. 'import' → logprob: -7.635461330413818
    7. ' from' → logprob: -7.760461330413818
    8. '    
' → logprob: -8.13546085357666
    9. ' if' → logprob: -8.26046085357666
    10. ' for' → logprob: -8.26046085357666

Token 209: ' k' (ID: 372)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03277207911014557
    2. ' k' → logprob: -4.157772064208984
    3. '
' → logprob: -4.282772064208984
    4. 'k' (adapté à ' k') → logprob: -6.782772064208984
    5. '    
' → logprob: -7.157772064208984
    6. '  
' → logprob: -8.282772064208984
    7. 'def' → logprob: -8.407772064208984
    8. 'import' → logprob: -9.282772064208984
    9. ' 
' → logprob: -9.407772064208984
    10. ' from' → logprob: -10.032772064208984

Token 210: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25193002820014954
    2. '=' → logprob: -1.5019299983978271
    3. ' ' → logprob: -14.876930236816406
    4. ',' → logprob: -14.876930236816406
    5. 's' → logprob: -16.876930236816406
    6. '  ' → logprob: -16.876930236816406
    7. '=int' → logprob: -17.126930236816406
    8. 'import' → logprob: -17.501930236816406
    9. '=None' → logprob: -18.501930236816406
    10. '>' → logprob: -18.626930236816406

Token 211: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00012475410767365247
    2. ' ' → logprob: -9.00012493133545
    3. '0' → logprob: -14.12512493133545
    4. '2' → logprob: -14.87512493133545
    5. '   ' → logprob: -15.87512493133545
    6. 'None' → logprob: -17.125123977661133
    7. '(' → logprob: -18.062623977661133
    8. '  ' → logprob: -18.062623977661133
    9. '```' → logprob: -18.375123977661133
    10. '
' → logprob: -18.375123977661133

Token 212: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.061054359131958e-06
    2. ' ' → logprob: -12.000007629394531
    3. '0' → logprob: -13.875007629394531
    4. 'None' → logprob: -15.000007629394531
    5. '   ' → logprob: -15.250007629394531
    6. '2' → logprob: -16.25000762939453
    7. '
' → logprob: -16.37500762939453
    8. 'l' → logprob: -17.00000762939453
    9. '(' → logprob: -17.12500762939453
    10. 'next' → logprob: -17.75000762939453

Token 213: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.059610676020383835
    2. 'while' → logprob: -3.434610605239868
    3. '<|end|>' → logprob: -4.309610843658447
    4. ' while' → logprob: -4.434610843658447
    5. '<|end|>' → logprob: -8.559610366821289
    6. '	while' → logprob: -9.934610366821289
    7. 'While' → logprob: -10.809610366821289
    8. '
' → logprob: -10.809610366821289
    9. '  
' → logprob: -11.059610366821289
    10. ' 
' → logprob: -11.184610366821289

Token 214: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4587611258029938
    2. ' while' → logprob: -1.5837610960006714
    3. 'while' → logprob: -2.208761215209961
    4. '<|end|>' → logprob: -2.958761215209961
    5. '	while' → logprob: -7.708761215209961
    6. '<|end|>' → logprob: -7.833761215209961
    7. 'While' → logprob: -10.083761215209961
    8. ' 
' → logprob: -10.333761215209961
    9. '  
' → logprob: -10.833761215209961
    10. ',' → logprob: -11.208761215209961

Token 215: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.0015112892724573612
    2. ' while' → logprob: -6.501511096954346
    3. '
' → logprob: -12.001511573791504
    4. 'from' → logprob: -13.376511573791504
    5. 'import' → logprob: -14.376511573791504
    6. '   ' → logprob: -14.751511573791504
    7. '	while' → logprob: -15.626511573791504
    8. ' 
' → logprob: -17.501510620117188
    9. 'While' → logprob: -17.626510620117188
    10. '  
' → logprob: -17.751510620117188

Token 216: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.6156641244888306
    2. ' not' → logprob: -1.4906641244888306
    3. 'True' → logprob: -1.6156641244888306
    4. ' k' → logprob: -4.615664005279541
    5. '(True' → logprob: -4.615664005279541
    6. 'not' → logprob: -4.865664005279541
    7. 'k' → logprob: -4.990664005279541
    8. ' (' → logprob: -7.365664005279541
    9. '(k' → logprob: -7.615664005279541
    10. '(not' → logprob: -8.7406644821167

Token 217: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07123734802007675
    2. ':
' → logprob: -2.696237325668335
    3. '       ' → logprob: -7.946237564086914
    4. '   ' → logprob: -8.196237564086914
    5. ' and' → logprob: -8.321237564086914
    6. ',' → logprob: -8.946237564086914
    7. '):
' → logprob: -9.446237564086914
    8. ' :' → logprob: -10.321237564086914
    9. '<|end|>' → logprob: -10.321237564086914
    10. ' not' → logprob: -10.946237564086914

Token 218: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5717676281929016
    2. ' not' → logprob: -0.9467676281929016
    3. 'not' → logprob: -4.196767807006836
    4. ' if' → logprob: -4.446767807006836
    5. '   ' → logprob: -4.946767807006836
    6. ' k' → logprob: -5.696767807006836
    7. ' (' → logprob: -5.696767807006836
    8. '    ' → logprob: -6.946767807006836
    9. '(not' → logprob: -6.946767807006836
    10. '        ' → logprob: -7.196767807006836

Token 219: ' if' (ID: 538)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.4487912952899933
    2. ' (' → logprob: -1.948791265487671
    3. ' not' → logprob: -2.448791265487671
    4. 'if' (adapté à ' if') → logprob: -3.198791265487671
    5. ' if' → logprob: -3.198791265487671
    6. 'not' → logprob: -3.948791265487671
    7. '(not' → logprob: -4.32379150390625
    8. '       ' → logprob: -4.32379150390625
    9. 'k' → logprob: -6.57379150390625
    10. ' k' → logprob: -6.57379150390625

Token 220: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.3269626498222351
    2. '(k' → logprob: -1.3269627094268799
    3. ' not' → logprob: -5.076962471008301
    4. '((' → logprob: -5.826962471008301
    5. ' ((' → logprob: -5.826962471008301
    6. '(not' → logprob: -7.451962471008301
    7. '(' → logprob: -8.4519624710083
    8. '(d' → logprob: -8.5769624710083
    9. '(x' → logprob: -8.9519624710083
    10. '(dx' → logprob: -9.0769624710083

Token 221: 'dx' (ID: 22100)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.020421355962753296
    2. ' (' → logprob: -4.145421504974365
    3. 'k' → logprob: -5.520421504974365
    4. '(dx' → logprob: -8.145421028137207
    5. '(d' → logprob: -10.895421028137207
    6. ' k' → logprob: -10.895421028137207
    7. '(' → logprob: -10.895421028137207
    8. '   ' → logprob: -11.770421028137207
    9. 'kx' → logprob: -11.770421028137207
    10. '((' → logprob: -12.270421028137207

Token 222: '*k' (ID: 81061)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.3906593322753906
    2. '*k' → logprob: -1.1406593322753906
    3. '*' → logprob: -5.640659332275391
    4. ')' → logprob: -9.39065933227539
    5. '%' → logprob: -10.14065933227539
    6. ' ' → logprob: -10.39065933227539
    7. ')*' → logprob: -10.89065933227539
    8. '==' → logprob: -11.26565933227539
    9. ' ==' → logprob: -11.51565933227539
    10. ' %' → logprob: -11.89065933227539

Token 223: ')%' (ID: 57656)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4751434326171875
    2. ')%' → logprob: -0.9751434326171875
    3. ' )' → logprob: -6.8501434326171875
    4. '%' → logprob: -12.350143432617188
    5. ' %' → logprob: -13.475143432617188
    6. '   ' → logprob: -14.975143432617188
    7. ' ' → logprob: -16.225143432617188
    8. '%)' → logprob: -16.350143432617188
    9. ')
' → logprob: -16.850143432617188
    10. ')==' → logprob: -17.100143432617188

Token 224: 'h' (ID: 71)
  Prédit: 'h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.011048054322600365
    2. ' h' → logprob: -4.511047840118408
    3. ' ' → logprob: -16.01104736328125
    4. '<|end|>' → logprob: -16.26104736328125
    5. '	h' → logprob: -17.01104736328125
    6. '+h' → logprob: -17.63604736328125
    7. '?h' → logprob: -18.13604736328125
    8. '(h' → logprob: -18.38604736328125
    9. '<h' → logprob: -18.51104736328125
    10. '
' → logprob: -18.76104736328125

Token 225: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.271479070186615
    2. '!=' → logprob: -1.7714791297912598
    3. ' ==' → logprob: -3.3964791297912598
    4. ' !=' → logprob: -3.3964791297912598
    5. ' or' → logprob: -7.77147912979126
    6. 'or' → logprob: -8.271478652954102
    7. '=' → logprob: -13.021478652954102
    8. '==
' → logprob: -13.271478652954102
    9. '()!=' → logprob: -14.021478652954102
    10. ')!=' → logprob: -14.521478652954102

Token 226: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02630053460597992
    2. ' ' → logprob: -3.6513004302978516
    3. '
' → logprob: -15.651300430297852
    4. '   ' → logprob: -17.15130043029785
    5. '  ' → logprob: -17.96380043029785
    6. '

' → logprob: -18.77630043029785
    7. '=' → logprob: -18.83880043029785
    8. ' ' → logprob: -18.83880043029785
    9. '  
' → logprob: -18.96380043029785
    10. '۰' → logprob: -18.96380043029785

Token 227: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.4391956685576588e-05
    2. ' ' → logprob: -10.625024795532227
    3. '   ' → logprob: -18.750024795532227
    4. '
' → logprob: -19.000024795532227
    5. '  ' → logprob: -19.312524795532227
    6. '

' → logprob: -19.437524795532227
    7. '۰' → logprob: -20.187524795532227
    8. 'h' → logprob: -20.937524795532227
    9. '=' → logprob: -21.000024795532227
    10. '```' → logprob: -21.062524795532227

Token 228: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.03804229199886322
    2. 'and' → logprob: -3.2880423069000244
    3. ' ' → logprob: -14.538042068481445
    4. ' or' → logprob: -15.413042068481445
    5. '        ' → logprob: -16.788042068481445
    6. '           ' → logprob: -17.788042068481445
    7. '    ' → logprob: -18.413042068481445
    8. '       ' → logprob: -18.538042068481445
    9. 'or' → logprob: -18.913042068481445
    10. '	and' → logprob: -19.288042068481445

Token 229: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.04869943857192993
    2. '(d' → logprob: -3.048699378967285
    3. '(dx' → logprob: -9.173699378967285
    4. ' ' → logprob: -12.673699378967285
    5. '(' → logprob: -13.298699378967285
    6. '(dw' → logprob: -13.548699378967285
    7. ' ' → logprob: -14.298699378967285
    8. '(py' → logprob: -15.548699378967285
    9. '(dp' → logprob: -15.673699378967285
    10. '(s' → logprob: -15.673699378967285

Token 230: 'dy' (ID: 7593)
  Prédit: 'dy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.5113753080368042
    2. '(d' → logprob: -1.0113753080368042
    3. ' dy' → logprob: -3.5113754272460938
    4. ' (' → logprob: -5.011375427246094
    5. 'd' → logprob: -10.511375427246094
    6. '   ' → logprob: -11.011375427246094
    7. ' ' → logprob: -11.386375427246094
    8. '	d' → logprob: -11.511375427246094
    9. '(' → logprob: -11.761375427246094
    10. '.dy' → logprob: -12.011375427246094

Token 231: '*k' (ID: 81061)
  Prédit: '*k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*k' → logprob: -0.00026383911608718336
    2. ' *' → logprob: -8.625264167785645
    3. '*' → logprob: -9.500264167785645
    4. 'k' → logprob: -11.750264167785645
    5. ')*' → logprob: -14.500264167785645
    6. ')' → logprob: -15.125264167785645
    7. '*)' → logprob: -15.625264167785645
    8. '*w' → logprob: -16.250263214111328
    9. '<|end|>' → logprob: -16.750263214111328
    10. ' k' → logprob: -16.875263214111328

Token 232: ')%' (ID: 57656)
  Prédit: ')%'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')%' → logprob: -0.0013282144209370017
    2. ')' → logprob: -6.626327991485596
    3. ' )' → logprob: -13.376328468322754
    4. '%' → logprob: -14.501328468322754
    5. '%)' → logprob: -15.751328468322754
    6. ']%' → logprob: -16.876327514648438
    7. ')...' → logprob: -18.376327514648438
    8. '}%' → logprob: -18.501327514648438
    9. '   ' → logprob: -18.501327514648438
    10. ' %' → logprob: -19.126327514648438

Token 233: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.00014180023572407663
    2. ' w' → logprob: -8.875142097473145
    3. ' ' → logprob: -13.500142097473145
    4. '   ' → logprob: -16.125141143798828
    5. '  ' → logprob: -16.250141143798828
    6. '
' → logprob: -16.375141143798828
    7. '(w' → logprob: -17.000141143798828
    8. '<|end|>' → logprob: -17.000141143798828
    9. '    ' → logprob: -17.125141143798828
    10. '	w' → logprob: -17.750141143798828

Token 234: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5759497284889221
    2. ' ==' → logprob: -0.8259497284889221
    3. ' ' → logprob: -12.575949668884277
    4. ')==' → logprob: -12.700949668884277
    5. ']==' → logprob: -13.325949668884277
    6. '=' → logprob: -14.325949668884277
    7. ')' → logprob: -14.450949668884277
    8. '()==' → logprob: -14.575949668884277
    9. '==
' → logprob: -15.950949668884277
    10. ' ' → logprob: -16.325950622558594

Token 235: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002806894714012742
    2. ' ' → logprob: -5.877806663513184
    3. '   ' → logprob: -13.377806663513184
    4. '  ' → logprob: -15.127806663513184
    5. '<|end|>' → logprob: -17.0028076171875
    6. '    ' → logprob: -17.1903076171875
    7. '       ' → logprob: -17.3153076171875
    8. '=' → logprob: -17.5653076171875
    9. '```' → logprob: -18.1903076171875
    10. '00' → logprob: -18.2528076171875

Token 236: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.517272024415433e-05
    2. ' ' → logprob: -9.500075340270996
    3. '   ' → logprob: -15.250075340270996
    4. '  ' → logprob: -17.50007438659668
    5. '00' → logprob: -18.87507438659668
    6. '<|end|>' → logprob: -19.06257438659668
    7. '    ' → logprob: -19.31257438659668
    8. '۰' → logprob: -19.31257438659668
    9. '       ' → logprob: -19.43757438659668
    10. '```' → logprob: -19.62507438659668

Token 237: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1446806639432907
    2. ':
' → logprob: -2.0196807384490967
    3. ' and' → logprob: -6.644680500030518
    4. ' or' → logprob: -7.644680500030518
    5. ':return' → logprob: -9.894680976867676
    6. '       ' → logprob: -10.144680976867676
    7. ' :' → logprob: -10.144680976867676
    8. '):
' → logprob: -10.644680976867676
    9. ' :
' → logprob: -11.019680976867676
    10. '           ' → logprob: -11.394680976867676

Token 238: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001298330957069993
    2. ' break' → logprob: -6.876298427581787
    3. ' return' → logprob: -9.376297950744629
    4. ':' → logprob: -9.626297950744629
    5. '
' → logprob: -10.251297950744629
    6. ':
' → logprob: -10.751297950744629
    7. '       ' → logprob: -11.001297950744629
    8. ',' → logprob: -11.501297950744629
    9. '               ' → logprob: -11.626297950744629
    10. ' ' → logprob: -12.751297950744629

Token 239: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.22968541085720062
    2. '           ' → logprob: -1.7296854257583618
    3. 'return' (adapté à ' return') → logprob: -3.9796853065490723
    4. ' break' → logprob: -4.729685306549072
    5. '       ' → logprob: -8.72968578338623
    6. '               ' → logprob: -9.47968578338623
    7. 'break' → logprob: -9.47968578338623
    8. ' ' → logprob: -11.35468578338623
    9. '
' → logprob: -11.47968578338623
    10. '   ' → logprob: -11.72968578338623

Token 240: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.00861456897109747
    2. ' k' → logprob: -4.758614540100098
    3. '	k' → logprob: -18.008615493774414
    4. ' ' → logprob: -18.383615493774414
    5. ' ' → logprob: -18.508615493774414
    6. '   ' → logprob: -19.258615493774414
    7. 'None' → logprob: -19.883615493774414
    8. '{k' → logprob: -20.008615493774414
    9. 'kx' → logprob: -20.133615493774414
    10. ' к' → logprob: -20.508615493774414

Token 241: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.2352385965641588e-05
    2. '
' → logprob: -12.500012397766113
    3. '<|end|>' → logprob: -13.125012397766113
    4. ',' → logprob: -13.250012397766113
    5. '   ' → logprob: -13.375012397766113
    6. '<|end|>' → logprob: -13.625012397766113
    7. 'k' → logprob: -14.500012397766113
    8. '      ' → logprob: -15.250012397766113
    9. '        
' → logprob: -15.375012397766113
    10. '           ' → logprob: -15.375012397766113

Token 242: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -6.73052782076411e-05
    2. '   ' → logprob: -11.000067710876465
    3. 'k' → logprob: -11.125067710876465
    4. '
' → logprob: -11.250067710876465
    5. '<|end|>' → logprob: -11.750067710876465
    6. '<|end|>' → logprob: -12.375067710876465
    7. '           ' → logprob: -13.250067710876465
    8. '        
' → logprob: -13.625067710876465
    9. 'import' → logprob: -13.750067710876465
    10. ' k' → logprob: -14.000067710876465

Token 243: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' (adapté à ' k') → logprob: -0.011261556297540665
    2. '       ' → logprob: -4.511261463165283
    3. '   ' → logprob: -9.011261940002441
    4. ' k' → logprob: -9.386261940002441
    5. '	k' → logprob: -12.386261940002441
    6. '
' → logprob: -12.761261940002441
    7. '++' → logprob: -15.386261940002441
    8. '           ' → logprob: -15.511261940002441
    9. '     ' → logprob: -16.386260986328125
    10. '      ' → logprob: -16.511260986328125

Token 244: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.20250004529953003
    2. ' +=' → logprob: -1.7025001049041748
    3. '+' → logprob: -6.827499866485596
    4. ' +' → logprob: -13.577500343322754
    5. '=' → logprob: -13.952500343322754
    6. '+="' → logprob: -15.952500343322754
    7. ']+=' → logprob: -15.952500343322754
    8. ' ' → logprob: -16.577499389648438
    9. '+='' → logprob: -16.827499389648438
    10. '+
' → logprob: -17.577499389648438

Token 245: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. '   ' → logprob: -21.25
    4. '```' → logprob: -23.0
    5. '۱' → logprob: -23.625
    6. '１' → logprob: -23.875
    7. '
' → logprob: -24.125
    8. '  ' → logprob: -24.125
    9. '१' → logprob: -24.5
    10. '১' → logprob: -24.875

Token 246: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.625
    3. '   ' → logprob: -20.875
    4. '```' → logprob: -22.0
    5. '۱' → logprob: -22.875
    6. '
' → logprob: -23.125
    7. '１' → logprob: -23.125
    8. '  ' → logprob: -23.375
    9. '१' → logprob: -24.3125
    10. '`' → logprob: -24.3125

Token 247: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 248: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6102017760276794
    2. '<|end|>' → logprob: -1.8602018356323242
    3. '
' → logprob: -2.485201835632324
    4. '#' → logprob: -2.610201835632324
    5. 'length' → logprob: -2.985201835632324
    6. 'for' → logprob: -3.235201835632324
    7. ')' → logprob: -3.860201835632324
    8. '(' → logprob: -5.360201835632324
    9. 'x' → logprob: -5.485201835632324
    10. '<|end|>' → logprob: -5.985201835632324

Token 249: ' max' (ID: 2999)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.5450797080993652
    2. ' find' → logprob: -1.5450797080993652
    3. 'max' → logprob: -3.0450797080993652
    4. 'long' → logprob: -3.6700797080993652
    5. ' longest' → logprob: -3.6700797080993652
    6. 'check' → logprob: -3.7950797080993652
    7. 'main' → logprob: -3.9200797080993652
    8. 'is' → logprob: -4.045079708099365
    9. ' max' → logprob: -4.295079708099365
    10. ' main' → logprob: -4.920079708099365

Token 250: '_len' (ID: 13683)
  Prédit: '_sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sequence' → logprob: -0.5564435124397278
    2. '_unique' → logprob: -1.181443452835083
    3. '_pal' → logprob: -2.806443452835083
    4. '_length' → logprob: -2.931443452835083
    5. '_sub' → logprob: -6.306443691253662
    6. '_re' → logprob: -6.806443691253662
    7. '_common' → logprob: -7.306443691253662
    8. '_repeat' → logprob: -7.931443691253662
    9. '_non' → logprob: -8.056443214416504
    10. '_duplicate' → logprob: -8.431443214416504

Token 251: '_no' (ID: 13575)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.012260913848877
    2. '_unique' → logprob: -1.762260913848877
    3. '_sequence' → logprob: -2.137260913848877
    4. '_' → logprob: -2.137260913848877
    5. '(length' → logprob: -2.512260913848877
    6. '(d' → logprob: -3.012260913848877
    7. '_(' → logprob: -3.887260913848877
    8. '(sequence' → logprob: -4.137260913848877
    9. '(_' → logprob: -5.012260913848877
    10. '_sub' → logprob: -5.262260913848877

Token 252: '_overlap' (ID: 179163)
  Prédit: '_overlap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_overlap' → logprob: -0.000643691688310355
    2. 'over' → logprob: -8.000643730163574
    3. '_over' → logprob: -8.375643730163574
    4. '_' → logprob: -9.750643730163574
    5. '_repeat' → logprob: -12.625643730163574
    6. '_sequence' → logprob: -12.750643730163574
    7. '_self' → logprob: -12.875643730163574
    8. 'self' → logprob: -13.500643730163574
    9. 'sequence' → logprob: -13.875643730163574
    10. ' overlap' → logprob: -13.875643730163574

Token 253: '(h' (ID: 8120)
  Prédit: '(length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(length' → logprob: -0.055554162710905075
    2. '(' → logprob: -2.930554151535034
    3. ' (' → logprob: -8.680554389953613
    4. '(h' → logprob: -8.805554389953613
    5. '(dx' → logprob: -9.430554389953613
    6. '(l' → logprob: -9.680554389953613
    7. '(depth' → logprob: -9.805554389953613
    8. '(d' → logprob: -9.930554389953613
    9. '(len' → logprob: -11.305554389953613
    10. '(_' → logprob: -11.430554389953613

Token 254: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008675140561535954
    2. ',w' → logprob: -7.3758673667907715
    3. ' ,' → logprob: -8.37586784362793
    4. ',
' → logprob: -11.75086784362793
    5. 'w' → logprob: -13.75086784362793
    6. ',

' → logprob: -14.50086784362793
    7. '‌,' → logprob: -15.37586784362793
    8. 'def' → logprob: -16.37586784362793
    9. ',d' → logprob: -16.50086784362793
    10. ' w' → logprob: -16.62586784362793

Token 255: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.20141996443271637
    2. ' w' → logprob: -1.7014199495315552
    3. ' ' → logprob: -12.701419830322266
    4. '   ' → logprob: -13.701419830322266
    5. 'h' → logprob: -14.951419830322266
    6. ' ' → logprob: -15.076419830322266
    7. '  ' → logprob: -15.076419830322266
    8. ',' → logprob: -15.076419830322266
    9. ',w' → logprob: -15.326419830322266
    10. '    ' → logprob: -15.701419830322266

Token 256: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.515961285913363e-05
    2. ' ,' → logprob: -9.750064849853516
    3. ',d' → logprob: -12.000064849853516
    4. ',
' → logprob: -15.000064849853516
    5. '   ' → logprob: -16.125064849853516
    6. '):' → logprob: -16.875064849853516
    7. ',

' → logprob: -17.125064849853516
    8. ',h' → logprob: -17.750064849853516
    9. '‌,' → logprob: -17.875064849853516
    10. ')' → logprob: -18.125064849853516

Token 257: ' dx' (ID: 29472)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.5419145822525024
    2. 'length' → logprob: -1.5419145822525024
    3. 'dire' → logprob: -2.666914463043213
    4. ' dx' → logprob: -2.791914463043213
    5. ' directions' → logprob: -3.666914463043213
    6. 'grid' → logprob: -4.416914463043213
    7. ' length' → logprob: -4.416914463043213
    8. '):' → logprob: -4.541914463043213
    9. ')' → logprob: -5.291914463043213
    10. ' grid' → logprob: -6.541914463043213

Token 258: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.32392441527918e-05
    2. ' ,' → logprob: -9.875053405761719
    3. ',
' → logprob: -13.625053405761719
    4. ',d' → logprob: -15.375053405761719
    5. '   ' → logprob: -16.00005340576172
    6. '‌,' → logprob: -16.87505340576172
    7. ')' → logprob: -17.25005340576172
    8. ',

' → logprob: -17.37505340576172
    9. '):
' → logprob: -17.50005340576172
    10. '_,' → logprob: -17.87505340576172

Token 259: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.3868713676929474
    2. ' dy' → logprob: -1.136871337890625
    3. '.dy' → logprob: -15.636871337890625
    4. 'Dy' → logprob: -16.636871337890625
    5. 'd' → logprob: -16.886871337890625
    6. ' ' → logprob: -17.636871337890625
    7. '   ' → logprob: -19.261871337890625
    8. ' ddy' → logprob: -19.261871337890625
    9. ' Dy' → logprob: -19.386871337890625
    10. '	d' → logprob: -19.386871337890625

Token 260: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.08940678834915161
    2. ',' → logprob: -2.464406728744507
    3. '):
' → logprob: -8.339406967163086
    4. ')' → logprob: -8.964406967163086
    5. ' ):' → logprob: -9.589406967163086
    6. ' ,' → logprob: -10.839406967163086
    7. ':' → logprob: -11.964406967163086
    8. '   ' → logprob: -12.589406967163086
    9. '):
' → logprob: -13.964406967163086
    10. ',length' → logprob: -14.339406967163086

Token 261: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09832780063152313
    2. ':' → logprob: -2.973327875137329
    3. ':
' → logprob: -3.598327875137329
    4. ' k' → logprob: -4.84832763671875
    5. 'k' → logprob: -5.72332763671875
    6. ',' → logprob: -6.97332763671875
    7. '(k' → logprob: -7.72332763671875
    8. '    
' → logprob: -8.34832763671875
    9. 'import' → logprob: -8.47332763671875
    10. '):
' → logprob: -8.59832763671875

Token 262: ' #' (ID: 1069)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.2763802707195282
    2. '   ' → logprob: -1.9013803005218506
    3. 'k' → logprob: -2.5263803005218506
    4. ' l' → logprob: -5.9013800621032715
    5. ' if' → logprob: -6.0263800621032715
    6. ' return' → logprob: -6.4013800621032715
    7. '
' → logprob: -6.6513800621032715
    8. '    ' → logprob: -7.1513800621032715
    9. ' low' → logprob: -7.1513800621032715
    10. ' from' → logprob: -8.02638053894043

Token 263: ' compute' (ID: 23864)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.0426714420318604
    2. 'return' → logprob: -1.5426714420318604
    3. '   ' → logprob: -1.9176714420318604
    4. 'if' → logprob: -2.0426714420318604
    5. 'from' → logprob: -3.0426714420318604
    6. 'l' → logprob: -3.0426714420318604
    7. ' return' → logprob: -4.292671203613281
    8. 'import' → logprob: -4.792671203613281
    9. 'period' → logprob: -5.167671203613281
    10. 'min' → logprob: -5.292671203613281

Token 264: ' minimal' (ID: 19957)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.1405104398727417
    2. 'from' → logprob: -1.6405104398727417
    3. '   ' → logprob: -1.8905104398727417
    4. 'g' → logprob: -2.1405105590820312
    5. 'import' → logprob: -2.6405105590820312
    6. 'l' → logprob: -2.6405105590820312
    7. 'def' → logprob: -3.6405105590820312
    8. ' k' → logprob: -4.640510559082031
    9. ' from' → logprob: -4.890510559082031
    10. 'min' → logprob: -5.015510559082031

Token 265: ' positive' (ID: 8841)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0821179747581482
    2. ' k' → logprob: -2.582118034362793
    3. ' period' → logprob: -6.082118034362793
    4. 'period' → logprob: -7.707118034362793
    5. ' positive' → logprob: -8.332118034362793
    6. 'def' → logprob: -9.332118034362793
    7. 'positive' → logprob: -10.207118034362793
    8. ' length' → logprob: -10.707118034362793
    9. ' def' → logprob: -10.832118034362793
    10. '_period' → logprob: -10.957118034362793

Token 266: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.12697535753250122
    2. ' k' → logprob: -2.1269752979278564
    3. ' integer' → logprob: -11.001975059509277
    4. 'integer' → logprob: -11.501975059509277
    5. ' period' → logprob: -12.126975059509277
    6. 'period' → logprob: -12.126975059509277
    7. 'def' → logprob: -12.626975059509277
    8. ' def' → logprob: -13.501975059509277
    9. ' ' → logprob: -13.501975059509277
    10. '_k' → logprob: -14.501975059509277

Token 267: ' such' (ID: 2238)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2748769223690033
    2. ' =' → logprob: -1.7748769521713257
    3. '=' → logprob: -3.774876832962036
    4. ' such' → logprob: -4.024877071380615
    5. 'k' → logprob: -5.274877071380615
    6. ' ' → logprob: -5.399877071380615
    7. 'def' → logprob: -5.524877071380615
    8. 'dx' → logprob: -5.899877071380615
    9. ' that' → logprob: -6.149877071380615
    10. '
' → logprob: -6.399877071380615

Token 268: ' that' (ID: 484)
  Prédit: 'that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'that' → logprob: -0.5997166037559509
    2. ' that' → logprob: -0.8497166037559509
    3. 'hat' → logprob: -3.8497166633605957
    4. 'at' → logprob: -7.349716663360596
    5. '   ' → logprob: -7.724716663360596
    6. '_that' → logprob: -8.224716186523438
    7. 'That' → logprob: -8.349716186523438
    8. '=' → logprob: -8.599716186523438
    9. '```' → logprob: -9.849716186523438
    10. ')' → logprob: -9.849716186523438

Token 269: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.1395447552204132
    2. '(dx' → logprob: -2.264544725418091
    3. '(k' → logprob: -3.639544725418091
    4. '(d' → logprob: -9.889544486999512
    5. ' ' → logprob: -10.889544486999512
    6. '   ' → logprob: -11.264544486999512
    7. ' k' → logprob: -12.014544486999512
    8. '(x' → logprob: -12.514544486999512
    9. 'k' → logprob: -12.639544486999512
    10. '  ' → logprob: -13.014544486999512

Token 270: 'k' (ID: 74)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.4078257977962494
    2. '(dx' → logprob: -1.5328258275985718
    3. 'k' → logprob: -2.1578257083892822
    4. 'kx' → logprob: -6.407825946807861
    5. ' dx' → logprob: -7.157825946807861
    6. '(k' → logprob: -7.782825946807861
    7. ' (' → logprob: -8.157825469970703
    8. ' k' → logprob: -9.532825469970703
    9. 'kd' → logprob: -9.782825469970703
    10. 'h' → logprob: -10.407825469970703

Token 271: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.026360448449850082
    2. ' *' → logprob: -3.651360511779785
    3. ')' → logprob: -10.151360511779785
    4. ')*' → logprob: -12.276360511779785
    5. '*)' → logprob: -12.401360511779785
    6. ' ' → logprob: -12.776360511779785
    7. '*
' → logprob: -13.151360511779785
    8. 'dx' → logprob: -13.151360511779785
    9. ' )' → logprob: -13.651360511779785
    10. '*(' → logprob: -14.401360511779785

Token 272: 'dx' (ID: 22100)
  Prédit: 'dx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.0014704647473990917
    2. '(dx' → logprob: -7.126470565795898
    3. ' dx' → logprob: -7.376470565795898
    4. '
' → logprob: -12.001470565795898
    5. ' ' → logprob: -12.126470565795898
    6. 'abs' → logprob: -12.376470565795898
    7. 'd' → logprob: -12.501470565795898
    8. '   ' → logprob: -12.626470565795898
    9. '(' → logprob: -12.626470565795898
    10. ')' → logprob: -12.751470565795898

Token 273: ')%' (ID: 57656)
  Prédit: ')%'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')%' → logprob: -0.20145709812641144
    2. ')' → logprob: -1.701457142829895
    3. ' )' → logprob: -10.076457023620605
    4. '   ' → logprob: -14.576457023620605
    5. ')
' → logprob: -15.201457023620605
    6. '%' → logprob: -15.326457023620605
    7. '%)' → logprob: -15.326457023620605
    8. ')\
' → logprob: -16.701457977294922
    9. ')\' → logprob: -16.826457977294922
    10. ')==' → logprob: -16.826457977294922

Token 274: 'h' (ID: 71)
  Prédit: 'h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.00012368128227535635
    2. ' h' → logprob: -9.000123977661133
    3. '   ' → logprob: -16.000123977661133
    4. '(h' → logprob: -17.125123977661133
    5. ' ' → logprob: -17.250123977661133
    6. '
' → logprob: -17.375123977661133
    7. ' (' → logprob: -17.875123977661133
    8. '(' → logprob: -18.500123977661133
    9. ')' → logprob: -18.500123977661133
    10. '<|end|>' → logprob: -18.500123977661133

Token 275: '==' (ID: 560)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.16022665798664093
    2. '==' → logprob: -1.9102267026901245
    3. '=' → logprob: -13.910226821899414
    4. ' ' → logprob: -14.535226821899414
    5. ' =' → logprob: -15.035226821899414
    6. ')==' → logprob: -15.285226821899414
    7. '==
' → logprob: -15.785226821899414
    8. ']==' → logprob: -16.535226821899414
    9. ')' → logprob: -16.535226821899414
    10. '()==' → logprob: -16.660226821899414

Token 276: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001502717612311244
    2. ' ' → logprob: -6.501502513885498
    3. '
' → logprob: -15.751502990722656
    4. '   ' → logprob: -16.126502990722656
    5. '=' → logprob: -17.189002990722656
    6. '  ' → logprob: -17.564002990722656
    7. '```' → logprob: -17.689002990722656
    8. 'k' → logprob: -17.814002990722656
    9. ',' → logprob: -17.939002990722656
    10. '

' → logprob: -18.126502990722656

Token 277: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.010227365419268608
    2. 'and' → logprob: -4.635227203369141
    3. '   ' → logprob: -8.51022720336914
    4. ' or' → logprob: -8.51022720336914
    5. '<|end|>' → logprob: -10.63522720336914
    6. ' ' → logprob: -10.76022720336914
    7. ',' → logprob: -11.26022720336914
    8. 'def' → logprob: -12.26022720336914
    9. 'import' → logprob: -13.63522720336914
    10. '  ' → logprob: -14.01022720336914

Token 278: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.10022284835577011
    2. '(k' → logprob: -2.3502228260040283
    3. '   ' → logprob: -11.72522258758545
    4. '(dx' → logprob: -12.22522258758545
    5. ' ' → logprob: -13.35022258758545
    6. '(d' → logprob: -13.85022258758545
    7. '  ' → logprob: -14.47522258758545
    8. '    ' → logprob: -16.725223541259766
    9. '(' → logprob: -17.600223541259766
    10. ',' → logprob: -18.225223541259766

Token 279: 'k' (ID: 74)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.003198035294190049
    2. ' (' → logprob: -5.878198146820068
    3. 'k' → logprob: -8.50319766998291
    4. '(dx' → logprob: -8.75319766998291
    5. '(' → logprob: -10.75319766998291
    6. '   ' → logprob: -12.00319766998291
    7. '(d' → logprob: -12.87819766998291
    8. ' ' → logprob: -14.62819766998291
    9. 'kx' → logprob: -14.87819766998291
    10. 'dx' → logprob: -15.00319766998291

Token 280: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.0006034302059561014
    2. '*d' → logprob: -8.125603675842285
    3. 'dy' → logprob: -9.000603675842285
    4. '*k' → logprob: -9.500603675842285
    5. ')' → logprob: -10.375603675842285
    6. '*(' → logprob: -10.500603675842285
    7. ' *' → logprob: -10.625603675842285
    8. ')*' → logprob: -11.875603675842285
    9. '%' → logprob: -12.250603675842285
    10. ')%' → logprob: -12.500603675842285

Token 281: 'dy' (ID: 7593)
  Prédit: 'dy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.0010355490958318114
    2. 'w' → logprob: -7.126035690307617
    3. ' dy' → logprob: -8.751035690307617
    4. '(w' → logprob: -10.626035690307617
    5. '(d' → logprob: -10.751035690307617
    6. 'd' → logprob: -11.501035690307617
    7. '(' → logprob: -12.001035690307617
    8. 'dw' → logprob: -12.876035690307617
    9. 'dx' → logprob: -13.376035690307617
    10. 'wy' → logprob: -13.751035690307617

Token 282: ')%' (ID: 57656)
  Prédit: ')%'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')%' → logprob: -0.350903183221817
    2. '%' → logprob: -1.2259031534194946
    3. ')' → logprob: -7.100903034210205
    4. ' %' → logprob: -7.225903034210205
    5. '%)' → logprob: -7.600903034210205
    6. '==' → logprob: -9.850903511047363
    7. ' ==' → logprob: -9.975903511047363
    8. 'w' → logprob: -9.975903511047363
    9. '()%' → logprob: -9.975903511047363
    10. ' )' → logprob: -10.350903511047363

Token 283: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -9.662937372922897e-05
    2. ' w' → logprob: -9.250096321105957
    3. ' ' → logprob: -15.125096321105957
    4. '   ' → logprob: -16.250097274780273
    5. '```' → logprob: -16.875097274780273
    6. '  ' → logprob: -17.375097274780273
    7. '
' → logprob: -17.375097274780273
    8. 'h' → logprob: -18.750097274780273
    9. '    ' → logprob: -19.000097274780273
    10. '	w' → logprob: -19.125097274780273

Token 284: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.012551801279187202
    2. ' ==' → logprob: -4.387551784515381
    3. '==
' → logprob: -10.637552261352539
    4. '()==' → logprob: -12.387552261352539
    5. ')==' → logprob: -12.762552261352539
    6. '```' → logprob: -12.887552261352539
    7. ' ' → logprob: -13.012552261352539
    8. ']==' → logprob: -13.262552261352539
    9. '   ' → logprob: -13.512552261352539
    10. '=' → logprob: -14.012552261352539

Token 285: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.9160102712921798e-05
    2. ' ' → logprob: -10.500029563903809
    3. 'w' → logprob: -13.500029563903809
    4. '   ' → logprob: -17.375028610229492
    5. ' w' → logprob: -17.625028610229492
    6. '
' → logprob: -18.875028610229492
    7. '```' → logprob: -19.250028610229492
    8. '  ' → logprob: -19.375028610229492
    9. 'h' → logprob: -19.500028610229492
    10. 'd' → logprob: -19.750028610229492

Token 286: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.11050789803266525
    2. '   ' → logprob: -2.3605079650878906
    3. ':' → logprob: -5.485507965087891
    4. ':
' → logprob: -6.360507965087891
    5. 'def' → logprob: -6.610507965087891
    6. '<|end|>' → logprob: -6.860507965087891
    7. ',' → logprob: -7.610507965087891
    8. 'import' → logprob: -8.36050796508789
    9. '<|end|>' → logprob: -8.48550796508789
    10. '    
' → logprob: -8.86050796508789

Token 287: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38903161883354187
    2. '
' → logprob: -1.1390316486358643
    3. ' k' → logprob: -7.264031410217285
    4. '    
' → logprob: -7.514031410217285
    5. 'k' → logprob: -8.014031410217285
    6. 'def' → logprob: -9.264031410217285
    7. '```' → logprob: -9.264031410217285
    8. '  
' → logprob: -9.639031410217285
    9. 'import' → logprob: -9.764031410217285
    10. ',' → logprob: -9.764031410217285

Token 288: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2623935639858246
    2. 'k' → logprob: -2.3873934745788574
    3. ' k' → logprob: -3.0123934745788574
    4. 'from' → logprob: -3.2623934745788574
    5. ' from' → logprob: -3.7623934745788574
    6. 'def' → logprob: -4.887393474578857
    7. 'import' → logprob: -5.262393474578857
    8. '
' → logprob: -5.387393474578857
    9. 'g' → logprob: -5.887393474578857
    10. 'l' → logprob: -6.262393474578857

Token 289: ' that' (ID: 484)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2590669095516205
    2. ' from' → logprob: -2.2590668201446533
    3. 'from' → logprob: -3.5090668201446533
    4. ' if' → logprob: -4.009067058563232
    5. ' k' → logprob: -4.384067058563232
    6. 'g' → logprob: -4.509067058563232
    7. ' g' → logprob: -4.759067058563232
    8. 'import' → logprob: -4.884067058563232
    9. ' import' → logprob: -5.009067058563232
    10. ' gcd' → logprob: -5.009067058563232

Token 290: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.2702772617340088
    2. ' return' → logprob: -1.2702772617340088
    3. '   ' → logprob: -2.270277261734009
    4. 'def' → logprob: -2.270277261734009
    5. 'return' → logprob: -2.895277261734009
    6. ' def' → logprob: -3.145277261734009
    7. ' k' → logprob: -3.270277261734009
    8. 'k' → logprob: -4.14527702331543
    9. ' #' → logprob: -4.14527702331543
    10. '
' → logprob: -4.39527702331543

Token 291: ' the' (ID: 290)
  Prédit: ' gcd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' gcd' → logprob: -1.7562949657440186
    2. 'import' → logprob: -2.0062949657440186
    3. ' k' → logprob: -2.1312949657440186
    4. 'g' → logprob: -2.6312949657440186
    5. '   ' → logprob: -2.7562949657440186
    6. ' h' → logprob: -2.8812949657440186
    7. ' g' → logprob: -2.8812949657440186
    8. ' (' → logprob: -3.0062949657440186
    9. ' math' → logprob: -3.2562949657440186
    10. ' abs' → logprob: -3.3812949657440186

Token 292: ' minimal' (ID: 19957)
  Prédit: ' minimal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' minimal' → logprob: -0.35817205905914307
    2. ' length' → logprob: -2.3581719398498535
    3. ' period' → logprob: -2.7331719398498535
    4. ' max' → logprob: -3.4831719398498535
    5. 'max' → logprob: -3.4831719398498535
    6. 'period' → logprob: -3.7331719398498535
    7. 'length' → logprob: -4.3581719398498535
    8. 'minimal' → logprob: -4.3581719398498535
    9. ' maximum' → logprob: -4.7331719398498535
    10. ' maximal' → logprob: -5.2331719398498535

Token 293: ' length' (ID: 5517)
  Prédit: ' positive'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' positive' → logprob: -0.9848573207855225
    2. ' k' → logprob: -1.1098573207855225
    3. ' length' → logprob: -2.3598573207855225
    4. 'k' → logprob: -2.4848573207855225
    5. ' period' → logprob: -2.6098573207855225
    6. ' number' → logprob: -3.9848573207855225
    7. 'period' → logprob: -4.609857559204102
    8. 'length' → logprob: -5.109857559204102
    9. 'positive' → logprob: -5.359857559204102
    10. ' sequence' → logprob: -5.984857559204102

Token 294: ' before' (ID: 2254)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4782449007034302
    2. 'def' → logprob: -1.3532449007034302
    3. ' =' → logprob: -3.1032447814941406
    4. '
' → logprob: -3.8532447814941406
    5. ' ' → logprob: -4.103244781494141
    6. ' def' → logprob: -4.603244781494141
    7. ' return' → logprob: -5.228244781494141
    8. ',' → logprob: -5.478244781494141
    9. ' that' → logprob: -5.603244781494141
    10. '=' → logprob: -5.853244781494141

Token 295: ' sequence' (ID: 16281)
  Prédit: 'over'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'over' → logprob: -1.9121270179748535
    2. 'return' → logprob: -2.0371270179748535
    3. ' returning' → logprob: -2.0371270179748535
    4. 'sequence' → logprob: -2.2871270179748535
    5. ' sequence' → logprob: -2.2871270179748535
    6. ' overlap' → logprob: -2.4121270179748535
    7. ' the' → logprob: -2.5371270179748535
    8. 'the' → logprob: -2.7871270179748535
    9. ' overlapping' → logprob: -2.7871270179748535
    10. ' return' → logprob: -3.6621270179748535

Token 296: ' overlaps' (ID: 173439)
  Prédit: ' repeats'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' repeats' → logprob: -0.0557740293443203
    2. ' overlaps' → logprob: -3.805773973464966
    3. ' can' → logprob: -4.555774211883545
    4. 'over' → logprob: -4.555774211883545
    5. ' returns' → logprob: -6.180774211883545
    6. ' will' → logprob: -6.805774211883545
    7. 'can' → logprob: -7.055774211883545
    8. ' wraps' → logprob: -7.180774211883545
    9. ' loops' → logprob: -7.180774211883545
    10. 'returns' → logprob: -7.680774211883545

Token 297: ' itself' (ID: 8807)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011775940656661987
    2. '
' → logprob: -5.011775970458984
    3. 'def' → logprob: -5.386775970458984
    4. ',' → logprob: -8.761775970458984
    5. '    
' → logprob: -9.011775970458984
    6. 'import' → logprob: -9.886775970458984
    7. ',
' → logprob: -9.886775970458984
    8. ':' → logprob: -11.136775970458984
    9. '  
' → logprob: -11.511775970458984
    10. 'from' → logprob: -11.636775970458984

Token 298: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09177552163600922
    2. '
' → logprob: -2.466775417327881
    3. 'import' → logprob: -7.216775417327881
    4. 'def' → logprob: -7.216775417327881
    5. '    
' → logprob: -7.466775417327881
    6. ',' → logprob: -7.966775417327881
    7. '  
' → logprob: -9.216775894165039
    8. ',
' → logprob: -9.716775894165039
    9. '
' → logprob: -9.841775894165039
    10. 'from' → logprob: -9.966775894165039

Token 299: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10795722156763077
    2. ':' → logprob: -2.607957124710083
    3. ':
' → logprob: -4.107957363128662
    4. '
' → logprob: -5.232957363128662
    5. 'import' → logprob: -6.232957363128662
    6. 'def' → logprob: -6.982957363128662
    7. 'from' → logprob: -6.982957363128662
    8. ',' → logprob: -7.232957363128662
    9. ')' → logprob: -7.232957363128662
    10. ' from' → logprob: -7.357957363128662

Token 300: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11788208782672882
    2. 'k' → logprob: -2.367882013320923
    3. ' k' → logprob: -4.117882251739502
    4. '
' → logprob: -7.617882251739502
    5. '    
' → logprob: -8.242881774902344
    6. 'def' → logprob: -8.617881774902344
    7. 'from' → logprob: -9.367881774902344
    8. ' if' → logprob: -9.617881774902344
    9. 'if' → logprob: -10.367881774902344
    10. '```' → logprob: -10.742881774902344

Token 301: ' we' (ID: 581)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20837868750095367
    2. 'from' → logprob: -2.833378791809082
    3. 'k' → logprob: -3.083378791809082
    4. ' from' → logprob: -3.208378791809082
    5. ' k' → logprob: -4.458378791809082
    6. 'g' → logprob: -5.333378791809082
    7. 'def' → logprob: -5.458378791809082
    8. 'import' → logprob: -5.583378791809082
    9. 'return' → logprob: -5.833378791809082
    10. 'l' → logprob: -5.833378791809082

Token 302: ' want' (ID: 1682)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' can' → logprob: -1.0351728200912476
    2. 'import' → logprob: -1.6601728200912476
    3. 'def' → logprob: -1.9101728200912476
    4. ' return' → logprob: -2.535172939300537
    5. 'return' → logprob: -2.785172939300537
    6. '   ' → logprob: -3.160172939300537
    7. ' need' → logprob: -3.535172939300537
    8. ' import' → logprob: -3.785172939300537
    9. ' def' → logprob: -4.160172939300537
    10. 'can' → logprob: -4.285172939300537

Token 303: ' maximal' (ID: 65414)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.8775902986526489
    2. ' k' → logprob: -1.377590298652649
    3. ' min' → logprob: -2.0025901794433594
    4. '   ' → logprob: -2.3775901794433594
    5. ' max' → logprob: -3.1275901794433594
    6. ' def' → logprob: -4.002590179443359
    7. 'min' → logprob: -4.627590179443359
    8. 'def' → logprob: -4.877590179443359
    9. ' h' → logprob: -5.377590179443359
    10. 'k' → logprob: -5.627590179443359

Token 304: ' length' (ID: 5517)
  Prédit: ' length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' length' → logprob: -0.5296630859375
    2. 'length' → logprob: -1.5296630859375
    3. ' k' → logprob: -2.2796630859375
    4. '_length' → logprob: -3.0296630859375
    5. '_len' → logprob: -4.0296630859375
    6. 'k' → logprob: -4.4046630859375
    7. 'len' → logprob: -5.5296630859375
    8. ' def' → logprob: -5.7796630859375
    9. ' return' → logprob: -5.9046630859375
    10. 'def' → logprob: -6.5296630859375

Token 305: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1273449808359146
    2. ' ' → logprob: -2.252345085144043
    3. '=' → logprob: -4.502345085144043
    4. 'def' → logprob: -6.752345085144043
    5. ' def' → logprob: -7.877345085144043
    6. ' 
' → logprob: -8.252345085144043
    7. ',' → logprob: -8.252345085144043
    8. ' +' → logprob: -8.502345085144043
    9. ' ,' → logprob: -8.627345085144043
    10. ' =
' → logprob: -8.877345085144043

Token 306: ' minimal' (ID: 19957)
  Prédit: ' no'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' no' → logprob: -0.15046438574790955
    2. 'no' → logprob: -2.1504642963409424
    3. 'k' → logprob: -4.2754645347595215
    4. ' k' → logprob: -4.9004645347595215
    5. '(no' → logprob: -7.5254645347595215
    6. ' (' → logprob: -7.6504645347595215
    7. 'min' → logprob: -8.775464057922363
    8. ' min' → logprob: -8.775464057922363
    9. ' ' → logprob: -8.775464057922363
    10. '(' → logprob: -10.025464057922363

Token 307: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.11483711749315262
    2. 'k' → logprob: -2.989837169647217
    3. ' positive' → logprob: -4.114837169647217
    4. '_k' → logprob: -4.364837169647217
    5. '(k' → logprob: -4.489837169647217
    6. ' length' → logprob: -5.489837169647217
    7. ' ' → logprob: -5.989837169647217
    8. ' def' → logprob: -6.239837169647217
    9. '_length' → logprob: -6.364837169647217
    10. '(' → logprob: -6.739837169647217

Token 308: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.26664575934410095
    2. ' ' → logprob: -2.766645669937134
    3. '
' → logprob: -3.641645669937134
    4. '   ' → logprob: -3.891645669937134
    5. ' def' → logprob: -3.891645669937134
    6. ' =' → logprob: -4.016645908355713
    7. ':' → logprob: -4.141645908355713
    8. ' return' → logprob: -4.391645908355713
    9. '(k' → logprob: -4.641645908355713
    10. 'return' → logprob: -4.766645908355713

Token 309: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6321008801460266
    2. ':' → logprob: -1.1321008205413818
    3. 'def' → logprob: -3.007100820541382
    4. ')' → logprob: -3.632100820541382
    5. ' ' → logprob: -3.632100820541382
    6. '
' → logprob: -3.882100820541382
    7. '<|end|>' → logprob: -5.632101058959961
    8. '):' → logprob: -5.757101058959961
    9. ' :' → logprob: -6.257101058959961
    10. ',' → logprob: -6.507101058959961

Token 310: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.579706072807312
    2. '
' → logprob: -1.954706072807312
    3. ' return' → logprob: -2.4547061920166016
    4. ' from' → logprob: -3.0797061920166016
    5. 'k' → logprob: -3.8297061920166016
    6. 'import' → logprob: -3.8297061920166016
    7. 'return' → logprob: -4.079706192016602
    8. ' k' → logprob: -4.079706192016602
    9. 'from' → logprob: -4.079706192016602
    10. 'g' → logprob: -4.329706192016602

Token 311: ' dx' (ID: 29472)
  Prédit: ' dx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dx' → logprob: -0.008027588948607445
    2. 'dx' → logprob: -4.88302755355835
    3. '(dx' → logprob: -8.633028030395508
    4. ' (' → logprob: -8.758028030395508
    5. ' ' → logprob: -10.508028030395508
    6. ' d' → logprob: -10.883028030395508
    7. '(' → logprob: -11.258028030395508
    8. ' not' → logprob: -11.383028030395508
    9. '   ' → logprob: -12.633028030395508
    10. ' h' → logprob: -12.945528030395508

Token 312: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.16038163006305695
    2. '==' → logprob: -1.9103816747665405
    3. ' !=' → logprob: -9.160381317138672
    4. ' ' → logprob: -10.785381317138672
    5. '!=' → logprob: -11.285381317138672
    6. '=' → logprob: -11.410381317138672
    7. ' is' → logprob: -14.035381317138672
    8. '==
' → logprob: -14.035381317138672
    9. 'is' → logprob: -14.160381317138672
    10. '0' → logprob: -14.285381317138672

Token 313: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0031777136027812958
    2. ' ' → logprob: -5.753177642822266
    3. '   ' → logprob: -18.753177642822266
    4. '=' → logprob: -18.878177642822266
    5. '
' → logprob: -19.003177642822266
    6. 'and' → logprob: -19.128177642822266
    7. '۰' → logprob: -19.253177642822266
    8. ' and' → logprob: -19.628177642822266
    9. '==' → logprob: -19.878177642822266
    10. '```' → logprob: -20.128177642822266

Token 314: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004307884373702109
    2. ' ' → logprob: -7.750430583953857
    3. '
' → logprob: -17.000431060791016
    4. '=' → logprob: -17.937931060791016
    5. '۰' → logprob: -18.312931060791016
    6. '   ' → logprob: -18.500431060791016
    7. '

' → logprob: -18.562931060791016
    8. 'and' → logprob: -18.562931060791016
    9. ' and' → logprob: -18.687931060791016
    10. '  ' → logprob: -18.812931060791016

Token 315: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6443867087364197
    2. ':
' → logprob: -0.7693867087364197
    3. ' and' → logprob: -4.6443867683410645
    4. '   ' → logprob: -7.0193867683410645
    5. 'and' → logprob: -7.7693867683410645
    6. ':return' → logprob: -7.7693867683410645
    7. ' or' → logprob: -8.394386291503906
    8. ' :' → logprob: -10.394386291503906
    9. ' :
' → logprob: -10.519386291503906
    10. ' ' → logprob: -10.644386291503906

Token 316: ' dy' (ID: 11996)
  Prédit: ' dy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dy' → logprob: -0.2254156768321991
    2. 'dy' → logprob: -1.6004157066345215
    3. ' ' → logprob: -13.850415229797363
    4. '0' → logprob: -13.975415229797363
    5. '.dy' → logprob: -14.475415229797363
    6. '   ' → logprob: -15.725415229797363
    7. 'd' → logprob: -15.850415229797363
    8. '	d' → logprob: -16.22541618347168
    9. 'Dy' → logprob: -16.53791618347168
    10. ' ' → logprob: -16.60041618347168

Token 317: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.038130078464746475
    2. '==' → logprob: -3.288130044937134
    3. ' ' → logprob: -9.538129806518555
    4. '0' → logprob: -11.413129806518555
    5. ' !=' → logprob: -13.788129806518555
    6. ')==' → logprob: -13.913129806518555
    7. '<|end|>' → logprob: -14.163129806518555
    8. ']==' → logprob: -14.413129806518555
    9. ' ' → logprob: -14.788129806518555
    10. ')' → logprob: -15.038129806518555

Token 318: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.17975179851055145
    2. ' ' → logprob: -1.8047517538070679
    3. '1' → logprob: -12.1797513961792
    4. ' ' → logprob: -14.5547513961792
    5. '   ' → logprob: -14.6797513961792
    6. '  ' → logprob: -15.8047513961792
    7. '```' → logprob: -16.117252349853516
    8. '۰' → logprob: -16.867252349853516
    9. '[' → logprob: -16.929752349853516
    10. '(' → logprob: -16.929752349853516

Token 319: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0036012595519423485
    2. ' ' → logprob: -5.62860107421875
    3. '   ' → logprob: -14.75360107421875
    4. '1' → logprob: -14.75360107421875
    5. '  ' → logprob: -16.19110107421875
    6. '۰' → logprob: -17.19110107421875
    7. '```' → logprob: -17.56610107421875
    8. '(' → logprob: -17.94110107421875
    9. '-' → logprob: -17.94110107421875
    10. '    ' → logprob: -18.06610107421875

Token 320: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.31475770473480225
    2. ':
' → logprob: -1.3147577047348022
    3. ':return' → logprob: -6.939757823944092
    4. '   ' → logprob: -7.814757823944092
    5. ' :
' → logprob: -10.314757347106934
    6. '):
' → logprob: -10.439757347106934
    7. ' :' → logprob: -10.689757347106934
    8. ':
' → logprob: -11.189757347106934
    9. '       ' → logprob: -11.939757347106934
    10. '):' → logprob: -12.189757347106934

Token 321: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008327359100803733
    2. ' return' → logprob: -7.625832557678223
    3. '   ' → logprob: -8.875832557678223
    4. ':' → logprob: -9.750832557678223
    5. 'return' → logprob: -10.375832557678223
    6. ':
' → logprob: -10.750832557678223
    7. '0' → logprob: -11.000832557678223
    8. ',' → logprob: -11.000832557678223
    9. ':return' → logprob: -11.375832557678223
    10. '    ' → logprob: -12.125832557678223

Token 322: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.45630237460136414
    2. 'return' (adapté à ' return') → logprob: -1.2063024044036865
    3. '   ' → logprob: -2.7063024044036865
    4. '
' → logprob: -8.831302642822266
    5. '    ' → logprob: -9.831302642822266
    6. '       ' → logprob: -10.081302642822266
    7. ':return' → logprob: -11.456302642822266
    8. '0' → logprob: -11.581302642822266
    9. ' ' → logprob: -11.956302642822266
    10. '    
' → logprob: -12.081302642822266

Token 323: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10973908007144928
    2. 'max' → logprob: -2.734739065170288
    3. '1' → logprob: -4.234739303588867
    4. 'h' → logprob: -4.984739303588867
    5. 'float' → logprob: -5.109739303588867
    6. 'min' → logprob: -5.484739303588867
    7. 'None' → logprob: -5.484739303588867
    8. ' ' → logprob: -6.109739303588867
    9. ' max' → logprob: -7.859739303588867
    10. 'length' → logprob: -8.109739303588867

Token 324: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.09296970814466476
    2. 'min' → logprob: -3.5929696559906006
    3. 'max' → logprob: -3.5929696559906006
    4. 'float' → logprob: -3.8429696559906006
    5. '1' → logprob: -4.46796989440918
    6. 'h' → logprob: -7.59296989440918
    7. '-' → logprob: -8.09296989440918
    8. 'inf' → logprob: -11.84296989440918
    9. ' float' → logprob: -11.96796989440918
    10. '-h' → logprob: -12.71796989440918

Token 325: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.012470567598938942
    2. '    
' → logprob: -5.137470722198486
    3. '   ' → logprob: -5.387470722198486
    4. '\n' → logprob: -7.137470722198486
    5. '  
' → logprob: -7.512470722198486
    6. '<|end|>' → logprob: -8.512470245361328
    7. ' 
' → logprob: -8.637470245361328
    8. '
' → logprob: -9.887470245361328
    9. '	
' → logprob: -10.137470245361328
    10. '   
' → logprob: -10.262470245361328

Token 326: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10864772647619247
    2. '   ' → logprob: -2.6086478233337402
    3. '    
' → logprob: -3.7336478233337402
    4. '\n' → logprob: -5.98364782333374
    5. '  
' → logprob: -6.60864782333374
    6. ' 
' → logprob: -7.35864782333374
    7. '<|end|>' → logprob: -8.108647346496582
    8. '	
' → logprob: -8.608647346496582
    9. '   
' → logprob: -9.358647346496582
    10. '

' → logprob: -10.233647346496582

Token 327: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17408090829849243
    2. '    
' → logprob: -2.5490808486938477
    3. '
' → logprob: -3.1740808486938477
    4. ' if' → logprob: -4.299080848693848
    5. 'import' → logprob: -4.924080848693848
    6. 'from' → logprob: -5.674080848693848
    7. ' 
' → logprob: -5.799080848693848
    8. 'k' → logprob: -5.924080848693848
    9. ' k' → logprob: -6.049080848693848
    10. ' from' → logprob: -6.299080848693848

Token 328: ' dx' (ID: 29472)
  Prédit: ' dx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dx' → logprob: -0.11292591691017151
    2. 'dx' → logprob: -2.2379260063171387
    3. ' dy' → logprob: -10.11292552947998
    4. '(dx' → logprob: -10.98792552947998
    5. ' abs' → logprob: -11.11292552947998
    6. '   ' → logprob: -11.73792552947998
    7. ' ' → logprob: -12.11292552947998
    8. 'dy' → logprob: -12.36292552947998
    9. ' not' → logprob: -12.48792552947998
    10. 'abs' → logprob: -13.11292552947998

Token 329: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.22544525563716888
    2. '==' → logprob: -1.60044527053833
    3. ' ' → logprob: -10.850444793701172
    4. '=' → logprob: -12.350444793701172
    5. '==
' → logprob: -12.850444793701172
    6. 'is' → logprob: -13.975444793701172
    7. ' ==
' → logprob: -13.975444793701172
    8. ' !=' → logprob: -14.100444793701172
    9. '0' → logprob: -14.225444793701172
    10. '```' → logprob: -14.350444793701172

Token 330: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5759445428848267
    2. '0' → logprob: -0.8259445428848267
    3. '=' → logprob: -13.700944900512695
    4. '1' → logprob: -13.700944900512695
    5. 'None' → logprob: -14.138444900512695
    6. ' None' → logprob: -14.325944900512695
    7. '  ' → logprob: -15.575944900512695
    8. '
' → logprob: -15.575944900512695
    9. '   ' → logprob: -15.638444900512695
    10. ' 
' → logprob: -16.075944900512695

Token 331: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003178782993927598
    2. ' ' → logprob: -5.753178596496582
    3. '   ' → logprob: -14.878178596496582
    4. '
' → logprob: -15.503178596496582
    5. '1' → logprob: -15.815678596496582
    6. '  ' → logprob: -16.7531795501709
    7. 'None' → logprob: -17.2531795501709
    8. '

' → logprob: -17.4406795501709
    9. '=' → logprob: -17.7531795501709
    10. '    ' → logprob: -17.9406795501709

Token 332: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.049621548503637314
    2. ':
' → logprob: -3.04962158203125
    3. ' or' → logprob: -7.42462158203125
    4. '   ' → logprob: -8.42462158203125
    5. ' :' → logprob: -9.42462158203125
    6. ':return' → logprob: -9.54962158203125
    7. ' and' → logprob: -10.29962158203125
    8. ' :
' → logprob: -11.67462158203125
    9. ':

' → logprob: -12.04962158203125
    10. 'or' → logprob: -12.29962158203125

Token 333: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6279561519622803
    2. '       ' → logprob: -1.2529561519622803
    3. ' return' → logprob: -1.8779561519622803
    4. 'return' → logprob: -3.6279561519622803
    5. '    ' → logprob: -7.502956390380859
    6. '	return' → logprob: -8.62795639038086
    7. '
' → logprob: -9.25295639038086
    8. ':return' → logprob: -9.50295639038086
    9. ':' → logprob: -10.12795639038086
    10. '     ' → logprob: -10.37795639038086

Token 334: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.16531142592430115
    2. ' return' → logprob: -1.9153114557266235
    3. '   ' → logprob: -5.290311336517334
    4. '       ' → logprob: -11.540311813354492
    5. 'import' → logprob: -11.915311813354492
    6. '    ' → logprob: -12.040311813354492
    7. '
' → logprob: -12.415311813354492
    8. 'w' → logprob: -12.790311813354492
    9. '{return' → logprob: -13.915311813354492
    10. 'for' → logprob: -14.165311813354492

Token 335: ' minimal' (ID: 19957)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.5262084603309631
    2. 'return' → logprob: -0.9012084603309631
    3. '   ' → logprob: -6.026208400726318
    4. '    ' → logprob: -7.401208400726318
    5. '
' → logprob: -11.401208877563477
    6. ' w' → logprob: -11.776208877563477
    7. 'import' → logprob: -11.901208877563477
    8. 'w' → logprob: -12.026208877563477
    9. '       ' → logprob: -12.526208877563477
    10. 'if' → logprob: -12.776208877563477

Token 336: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.1433131843805313
    2. 'k' → logprob: -2.01831316947937
    3. ' length' → logprob: -8.89331340789795
    4. ' dy' → logprob: -9.14331340789795
    5. ' (' → logprob: -9.51831340789795
    6. ' positive' → logprob: -9.76831340789795
    7. 'length' → logprob: -10.14331340789795
    8. ' def' → logprob: -10.39331340789795
    9. ' w' → logprob: -10.51831340789795
    10. '{k' → logprob: -10.64331340789795

Token 337: ' such' (ID: 2238)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.048780277371406555
    2. '=' → logprob: -3.0487802028656006
    3. '   ' → logprob: -8.67378044128418
    4. 'return' → logprob: -12.54878044128418
    5. 's' → logprob: -13.04878044128418
    6. ' ' → logprob: -13.42378044128418
    7. ' for' → logprob: -13.42378044128418
    8. '       ' → logprob: -13.54878044128418
    9. ',' → logprob: -13.79878044128418
    10. '>' → logprob: -13.92378044128418

Token 338: ' that' (ID: 484)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6943338513374329
    2. ' =' → logprob: -0.6943338513374329
    3. '       ' → logprob: -7.069334030151367
    4. '        ' → logprob: -9.569334030151367
    5. 's' → logprob: -9.694334030151367
    6. 'import' → logprob: -10.944334030151367
    7. '#' → logprob: -11.069334030151367
    8. ',' → logprob: -11.194334030151367
    9. '   ' → logprob: -11.194334030151367
    10. '           ' → logprob: -11.569334030151367

Token 339: ' (' (ID: 350)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.009424067102372646
    2. '(k' → logprob: -5.134424209594727
    3. ' (' → logprob: -5.759424209594727
    4. '(dx' → logprob: -9.009424209594727
    5. '(h' → logprob: -9.884424209594727
    6. '(w' → logprob: -9.884424209594727
    7. '(' → logprob: -10.134424209594727
    8. '(abs' → logprob: -10.634424209594727
    9. 'k' → logprob: -10.759424209594727
    10. '(dw' → logprob: -11.634424209594727

Token 340: '0' (ID: 15)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.8420556783676147
    2. '(d' → logprob: -1.0920556783676147
    3. '(k' → logprob: -2.2170557975769043
    4. 'dy' → logprob: -2.5920557975769043
    5. ' (' → logprob: -4.217055797576904
    6. '(' → logprob: -4.467055797576904
    7. '0' → logprob: -4.717055797576904
    8. ' k' → logprob: -5.092055797576904
    9. ' dy' → logprob: -5.592055797576904
    10. '1' → logprob: -5.592055797576904

Token 341: ')%' (ID: 57656)
  Prédit: '*k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*k' → logprob: -0.012468920089304447
    2. '*' → logprob: -4.5124688148498535
    3. ' *' → logprob: -6.7624688148498535
    4. ')' → logprob: -9.137469291687012
    5. ')*' → logprob: -9.762469291687012
    6. '*y' → logprob: -10.012469291687012
    7. 'k' → logprob: -11.262469291687012
    8. '*n' → logprob: -11.762469291687012
    9. '*x' → logprob: -11.887469291687012
    10. '*)' → logprob: -12.137469291687012

Token 342: 'h' (ID: 71)
  Prédit: 'h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.4288717806339264
    2. 'w' → logprob: -1.053871750831604
    3. '1' → logprob: -9.928872108459473
    4. ' h' → logprob: -10.678872108459473
    5. ' w' → logprob: -10.678872108459473
    6. 'dy' → logprob: -10.803872108459473
    7. '(w' → logprob: -11.553872108459473
    8. '   ' → logprob: -11.553872108459473
    9. '(h' → logprob: -11.678872108459473
    10. ' ' → logprob: -12.178872108459473

Token 343: '=' (ID: 28)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5815756916999817
    2. ' ==' → logprob: -0.8315756916999817
    3. ' !=' → logprob: -5.831575870513916
    4. ' and' → logprob: -7.206575870513916
    5. '!=' → logprob: -7.331575870513916
    6. ')' → logprob: -7.581575870513916
    7. ')==' → logprob: -8.706575393676758
    8. 'k' → logprob: -8.956575393676758
    9. ' or' → logprob: -8.956575393676758
    10. ' ' → logprob: -9.456575393676758

Token 344: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.17250201106071472
    2. '1' → logprob: -2.297502040863037
    3. 'h' → logprob: -3.422502040863037
    4. 'w' → logprob: -4.047502040863037
    5. ' ' → logprob: -5.297502040863037
    6. 'k' → logprob: -6.172502040863037
    7. ' h' → logprob: -7.797502040863037
    8. ' w' → logprob: -8.297501564025879
    9. ' k' → logprob: -10.797501564025879
    10. '(h' → logprob: -10.922501564025879

Token 345: ' always' (ID: 3324)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0031531229615211487
    2. 'and' → logprob: -5.878153324127197
    3. ' or' → logprob: -8.503152847290039
    4. ' is' → logprob: -9.503152847290039
    5. ' ' → logprob: -10.003152847290039
    6. ' return' → logprob: -11.503152847290039
    7. ',' → logprob: -12.128152847290039
    8. ':' → logprob: -13.253152847290039
    9. ' but' → logprob: -13.378152847290039
    10. '   ' → logprob: -13.878152847290039

Token 346: ' true' (ID: 1343)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.029948681592941284
    2. '       ' → logprob: -3.9049487113952637
    3. ',' → logprob: -5.279948711395264
    4. 'and' → logprob: -5.904948711395264
    5. ' return' → logprob: -6.904948711395264
    6. ' ' → logprob: -8.654948234558105
    7. ' ,' → logprob: -9.154948234558105
    8. 'return' → logprob: -9.279948234558105
    9. '   ' → logprob: -10.154948234558105
    10. '        ' → logprob: -10.529948234558105

Token 347: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.29227063059806824
    2. ',' → logprob: -2.2922706604003906
    3. ' and' → logprob: -2.5422706604003906
    4. '
' → logprob: -3.1672706604003906
    5. '   ' → logprob: -3.9172706604003906
    6. ' return' → logprob: -5.167270660400391
    7. 'return' → logprob: -6.167270660400391
    8. ',
' → logprob: -6.542270660400391
    9. ' ,' → logprob: -7.542270660400391
    10. 'and' → logprob: -7.792270660400391

Token 348: ' and' (ID: 326)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.7424740791320801
    2. ' return' → logprob: -1.36747407913208
    3. 'k' → logprob: -2.36747407913208
    4. '       ' → logprob: -2.61747407913208
    5. ' and' → logprob: -3.11747407913208
    6. 'return' → logprob: -3.74247407913208
    7. ' if' → logprob: -3.99247407913208
    8. ' so' → logprob: -5.36747407913208
    9. ' but' → logprob: -5.61747407913208
    10. ' minimal' → logprob: -5.99247407913208

Token 349: ' (' (ID: 350)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.3889555037021637
    2. ' (' → logprob: -1.1389554738998413
    3. '(k' → logprob: -6.263955593109131
    4. '(' → logprob: -10.013955116271973
    5. '(dx' → logprob: -10.513955116271973
    6. '   ' → logprob: -10.638955116271973
    7. ' ' → logprob: -10.888955116271973
    8. '((' → logprob: -11.263955116271973
    9. '(abs' → logprob: -11.263955116271973
    10. '
' → logprob: -12.138955116271973

Token 350: 'k' (ID: 74)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.23253898322582245
    2. '(d' → logprob: -1.6075389385223389
    3. 'k' → logprob: -5.107539176940918
    4. '(k' → logprob: -7.607539176940918
    5. '(dx' → logprob: -8.607539176940918
    6. ' dy' → logprob: -8.982539176940918
    7. ' (' → logprob: -9.482539176940918
    8. 'd' → logprob: -9.732539176940918
    9. '(' → logprob: -9.982539176940918
    10. 'dx' → logprob: -10.732539176940918

Token 351: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.0017202809685841203
    2. ' *' → logprob: -6.376720428466797
    3. 'dy' → logprob: -11.376720428466797
    4. '
' → logprob: -13.501720428466797
    5. ' ' → logprob: -13.626720428466797
    6. ' dy' → logprob: -13.876720428466797
    7. ')' → logprob: -14.376720428466797
    8. '0' → logprob: -14.501720428466797
    9. '*y' → logprob: -14.751720428466797
    10. '   ' → logprob: -15.001720428466797

Token 352: 'dy' (ID: 7593)
  Prédit: 'dy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.0015124812489375472
    2. ' dy' → logprob: -6.50151252746582
    3. '1' → logprob: -13.12651252746582
    4. '(d' → logprob: -13.12651252746582
    5. ' ' → logprob: -13.25151252746582
    6. '   ' → logprob: -13.50151252746582
    7. 'abs' → logprob: -14.12651252746582
    8. '(' → logprob: -14.37651252746582
    9. '.dy' → logprob: -15.12651252746582
    10. '```' → logprob: -15.37651252746582

Token 353: ')%' (ID: 57656)
  Prédit: ')%'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')%' → logprob: -0.04860587790608406
    2. ')' → logprob: -3.0486059188842773
    3. ' )' → logprob: -11.298605918884277
    4. '%' → logprob: -12.298605918884277
    5. '%)' → logprob: -14.173605918884277
    6. '   ' → logprob: -15.298605918884277
    7. ')
' → logprob: -16.17360496520996
    8. ' %' → logprob: -16.29860496520996
    9. ']%' → logprob: -16.42360496520996
    10. ')#' → logprob: -16.54860496520996

Token 354: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.0001234428636962548
    2. ' w' → logprob: -9.000123023986816
    3. ' ' → logprob: -18.125123977661133
    4. '   ' → logprob: -18.750123977661133
    5. '<w' → logprob: -19.000123977661133
    6. '(w' → logprob: -19.125123977661133
    7. '	w' → logprob: -19.375123977661133
    8. '
' → logprob: -20.750123977661133
    9. ''w' → logprob: -21.375123977661133
    10. '       ' → logprob: -21.375123977661133

Token 355: '=' (ID: 28)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.31326746940612793
    2. ' ==' → logprob: -1.313267469406128
    3. ')==' → logprob: -12.938267707824707
    4. '=' → logprob: -13.563267707824707
    5. ']==' → logprob: -13.813267707824707
    6. '==
' → logprob: -14.938267707824707
    7. ' ' → logprob: -15.063267707824707
    8. '()==' → logprob: -15.813267707824707
    9. ' ' → logprob: -16.43826675415039
    10. ' !=' → logprob: -16.68826675415039

Token 356: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.494741632603109e-05
    2. ' ' → logprob: -9.37508487701416
    3. '   ' → logprob: -17.250085830688477
    4. '=' → logprob: -18.687585830688477
    5. '
' → logprob: -18.812585830688477
    6. '  ' → logprob: -19.187585830688477
    7. '==' → logprob: -19.375085830688477
    8. '(' → logprob: -19.437585830688477
    9. 'w' → logprob: -20.062585830688477
    10. '۰' → logprob: -20.125085830688477

Token 357: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7381396293640137
    2. ' is' → logprob: -1.7381396293640137
    3. ' =' → logprob: -2.1131396293640137
    4. ':' → logprob: -2.1131396293640137
    5. '=' → logprob: -2.4881396293640137
    6. ':
' → logprob: -4.863139629364014
    7. ' return' → logprob: -5.488139629364014
    8. ',' → logprob: -5.738139629364014
    9. '   ' → logprob: -5.863139629364014
    10. ':return' → logprob: -7.613139629364014

Token 358: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016710663214325905
    2. ' =' → logprob: -4.2667107582092285
    3. '   ' → logprob: -6.3917107582092285
    4. '=' → logprob: -7.3917107582092285
    5. ',' → logprob: -9.26671028137207
    6. ' return' → logprob: -9.89171028137207
    7. ':' → logprob: -10.14171028137207
    8. '        
' → logprob: -11.14171028137207
    9. 'return' → logprob: -11.64171028137207
    10. ' k' → logprob: -11.76671028137207

Token 359: ' g' (ID: 329)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6347512602806091
    2. 'return' → logprob: -1.009751319885254
    3. 'k' → logprob: -2.634751319885254
    4. ' k' → logprob: -3.884751319885254
    5. '       ' → logprob: -4.759751319885254
    6. '   ' → logprob: -6.259751319885254
    7. 'from' → logprob: -6.884751319885254
    8. 'import' → logprob: -7.384751319885254
    9. ' from' → logprob: -8.134751319885254
    10. 'l' → logprob: -9.134751319885254

Token 360: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4745488464832306
    2. ' =' → logprob: -0.9745488166809082
    3. '=g' → logprob: -7.849548816680908
    4. ',' → logprob: -9.974549293518066
    5. 'from' → logprob: -11.849549293518066
    6. '=w' → logprob: -11.974549293518066
    7. ' ' → logprob: -12.224549293518066
    8. 'cd' → logprob: -12.724549293518066
    9. 'w' → logprob: -12.724549293518066
    10. '   ' → logprob: -12.974549293518066

Token 361: ' gcd' (ID: 106918)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.3131919801235199
    2. 'g' → logprob: -1.8131920099258423
    3. '1' → logprob: -3.4381918907165527
    4. ' gcd' → logprob: -3.4381918907165527
    5. ' w' → logprob: -4.188191890716553
    6. '__' → logprob: -4.938191890716553
    7. 'math' → logprob: -5.313191890716553
    8. ' ' → logprob: -5.563191890716553
    9. 'pow' → logprob: -5.688191890716553
    10. 'abs' → logprob: -6.563191890716553

Token 362: '(w' (ID: 7420)
  Prédit: '(w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -0.0013752338709309697
    2. '(d' → logprob: -6.751375198364258
    3. 'w' → logprob: -8.626375198364258
    4. '(' → logprob: -10.751375198364258
    5. '(dw' → logprob: -13.251375198364258
    6. '(h' → logprob: -14.126375198364258
    7. '(y' → logprob: -14.501375198364258
    8. ' (' → logprob: -15.001375198364258
    9. '(abs' → logprob: -15.251375198364258
    10. 'dy' → logprob: -15.876375198364258

Token 363: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010204248828813434
    2. ',d' → logprob: -7.376020431518555
    3. ' ,' → logprob: -7.876020431518555
    4. ',
' → logprob: -12.126020431518555
    5. ',y' → logprob: -12.126020431518555
    6. ',w' → logprob: -14.501020431518555
    7. ',k' → logprob: -14.626020431518555
    8. ',g' → logprob: -14.626020431518555
    9. ')' → logprob: -14.876020431518555
    10. ' dy' → logprob: -15.126020431518555

Token 364: ' abs' (ID: 8443)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.028378810733556747
    2. ' dy' → logprob: -3.65337872505188
    3. 'abs' → logprob: -6.278378963470459
    4. ' abs' → logprob: -8.5283784866333
    5. '   ' → logprob: -13.6533784866333
    6. 'dx' → logprob: -15.9033784866333
    7. '.dy' → logprob: -15.9033784866333
    8. '    ' → logprob: -16.278379440307617
    9. ' ' → logprob: -16.403379440307617
    10. 'd' → logprob: -16.528379440307617

Token 365: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.02327284961938858
    2. 'dy' → logprob: -3.773272752761841
    3. ' dy' → logprob: -10.898272514343262
    4. '(' → logprob: -12.023272514343262
    5. 'd' → logprob: -13.148272514343262
    6. '(
' → logprob: -15.023272514343262
    7. '	d' → logprob: -15.773272514343262
    8. ' (' → logprob: -15.898272514343262
    9. '   ' → logprob: -16.273273468017578
    10. '{' → logprob: -16.648273468017578

Token 366: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.048710569739341736
    2. 'dy' → logprob: -3.048710584640503
    3. ' dy' → logprob: -9.798710823059082
    4. '   ' → logprob: -10.298710823059082
    5. ' y' → logprob: -11.798710823059082
    6. '(y' → logprob: -12.173710823059082
    7. ' ' → logprob: -12.173710823059082
    8. 'iy' → logprob: -13.298710823059082
    9. ')' → logprob: -13.298710823059082
    10. 'ay' → logprob: -13.298710823059082

Token 367: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.006394300144165754
    2. '))
' → logprob: -5.131394386291504
    3. ')' → logprob: -7.756394386291504
    4. ' ))' → logprob: -10.756394386291504
    5. ')))' → logprob: -12.006394386291504
    6. '))

' → logprob: -12.381394386291504
    7. ')
' → logprob: -13.006394386291504
    8. '))
' → logprob: -14.131394386291504
    9. ' ))
' → logprob: -14.256394386291504
    10. '   ' → logprob: -14.506394386291504

Token 368: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018366143107414246
    2. '
' → logprob: -4.26836633682251
    3. ')' → logprob: -6.39336633682251
    4. '<|end|>' → logprob: -6.89336633682251
    5. ',' → logprob: -7.14336633682251
    6. ' return' → logprob: -8.768365859985352
    7. ')
' → logprob: -8.893365859985352
    8. 'return' → logprob: -9.518365859985352
    9. '        
' → logprob: -9.518365859985352
    10. ';' → logprob: -10.143365859985352

Token 369: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.281892329454422
    2. ' return' → logprob: -1.5318922996520996
    3. '       ' → logprob: -3.5318922996520996
    4. '{return' → logprob: -9.281892776489258
    5. ':return' → logprob: -9.406892776489258
    6. '	return' → logprob: -10.031892776489258
    7. 'g' → logprob: -11.031892776489258
    8. ')return' → logprob: -12.406892776489258
    9. '        ' → logprob: -12.656892776489258
    10. '```' → logprob: -12.781892776489258

Token 370: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.006716317031532526
    2. ' w' → logprob: -5.006716251373291
    3. '(w' → logprob: -14.63171672821045
    4. '   ' → logprob: -15.63171672821045
    5. '	w' → logprob: -16.006715774536133
    6. ' ' → logprob: -16.506715774536133
    7. '    ' → logprob: -16.631715774536133
    8. ' (' → logprob: -16.756715774536133
    9. ' ' → logprob: -17.506715774536133
    10. '(' → logprob: -18.256715774536133

Token 371: '//' (ID: 393)
  Prédit: ' //'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.5759623050689697
    2. '//' → logprob: -0.8259623050689697
    3. ' ' → logprob: -12.20096206665039
    4. '/g' → logprob: -12.57596206665039
    5. ' /' → logprob: -12.70096206665039
    6. 'g' → logprob: -12.70096206665039
    7. '#' → logprob: -12.95096206665039
    8. ' ' → logprob: -13.20096206665039
    9. '/' → logprob: -13.70096206665039
    10. '://' → logprob: -14.70096206665039

Token 372: 'g' (ID: 70)
  Prédit: 'g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -6.2729995988775045e-06
    2. ' g' → logprob: -12.000006675720215
    3. '	g' → logprob: -16.7500057220459
    4. '*g' → logprob: -18.0000057220459
    5. '/g' → logprob: -18.8750057220459
    6. '   ' → logprob: -19.0000057220459
    7. '#g' → logprob: -19.0000057220459
    8. ' ' → logprob: -19.1250057220459
    9. ':g' → logprob: -19.3750057220459
    10. '<|end|>' → logprob: -19.3750057220459

Token 373: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11069168150424957
    2. '
' → logprob: -2.610691785812378
    3. '<|end|>' → logprob: -3.610691785812378
    4. '    
' → logprob: -6.610691547393799
    5. 'elif' → logprob: -7.235691547393799
    6. '<|end|>' → logprob: -7.485691547393799
    7. 'def' → logprob: -8.110692024230957
    8. ')' → logprob: -8.360692024230957
    9. '```' → logprob: -8.610692024230957
    10. 'import' → logprob: -8.610692024230957

Token 374: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2608698904514313
    2. '
' → logprob: -1.5108698606491089
    3. '    
' → logprob: -5.635869979858398
    4. 'if' → logprob: -6.135869979858398
    5. ' if' → logprob: -7.260869979858398
    6. 'elif' → logprob: -7.635869979858398
    7. '  
' → logprob: -7.760869979858398
    8. '<|end|>' → logprob: -7.885869979858398
    9. '```' → logprob: -8.010869979858398
    10. ' ' → logprob: -8.885869979858398

Token 375: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.001669942052103579
    2. 'elif' → logprob: -6.626669883728027
    3. 'else' → logprob: -9.001669883728027
    4. ' if' → logprob: -9.001669883728027
    5. '   ' → logprob: -9.251669883728027
    6. 'from' → logprob: -14.751669883728027
    7. '```' → logprob: -15.251669883728027
    8. '
' → logprob: -15.251669883728027
    9. 'return' → logprob: -15.501669883728027
    10. ' elif' → logprob: -15.751669883728027

Token 376: ' dy' (ID: 11996)
  Prédit: ' dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dx' → logprob: -0.3288609981536865
    2. ' dy' → logprob: -1.5788609981536865
    3. 'dx' → logprob: -2.9538609981536865
    4. 'dy' → logprob: -4.203861236572266
    5. ' abs' → logprob: -5.953861236572266
    6. ' h' → logprob: -6.453861236572266
    7. 'h' → logprob: -6.578861236572266
    8. '(dx' → logprob: -7.453861236572266
    9. 'abs' → logprob: -7.703861236572266
    10. ' ' → logprob: -8.328861236572266

Token 377: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.00760887423530221
    2. '==' → logprob: -4.882608890533447
    3. ' ' → logprob: -13.257608413696289
    4. ' ==
' → logprob: -15.007608413696289
    5. ':' → logprob: -15.257608413696289
    6. ')==' → logprob: -16.50760841369629
    7. '==
' → logprob: -16.75760841369629
    8. ' ' → logprob: -16.88260841369629
    9. ')' → logprob: -17.00760841369629
    10. ']==' → logprob: -17.00760841369629

Token 378: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04859565943479538
    2. ' ' → logprob: -3.048595666885376
    3. '   ' → logprob: -11.923595428466797
    4. '  ' → logprob: -14.986095428466797
    5. '(' → logprob: -15.423595428466797
    6. ' ' → logprob: -15.673595428466797
    7. 'def' → logprob: -15.861095428466797
    8. 'import' → logprob: -16.111095428466797
    9. '[' → logprob: -16.298595428466797
    10. '1' → logprob: -16.673595428466797

Token 379: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.596781946020201e-05
    2. ' ' → logprob: -10.000045776367188
    3. '   ' → logprob: -14.750045776367188
    4. '  ' → logprob: -17.750045776367188
    5. '(' → logprob: -17.875045776367188
    6. 'def' → logprob: -18.125045776367188
    7. '[' → logprob: -18.187545776367188
    8. '```' → logprob: -18.375045776367188
    9. '#' → logprob: -18.437545776367188
    10. '
' → logprob: -19.000045776367188

Token 380: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.38841700553894043
    2. ':
' → logprob: -1.1384170055389404
    3. '   ' → logprob: -6.6384172439575195
    4. '       ' → logprob: -8.88841724395752
    5. ':

' → logprob: -10.01341724395752
    6. '{
' → logprob: -11.26341724395752
    7. '):
' → logprob: -11.38841724395752
    8. '{' → logprob: -11.51341724395752
    9. ' :
' → logprob: -12.26341724395752
    10. ' :' → logprob: -12.38841724395752

Token 381: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15855078399181366
    2. '   ' → logprob: -2.03355073928833
    3. '#' → logprob: -4.40855073928833
    4. ' #' → logprob: -6.78355073928833
    5. ':' → logprob: -7.28355073928833
    6. '```' → logprob: -7.28355073928833
    7. '	' → logprob: -7.78355073928833
    8. ':
' → logprob: -9.158551216125488
    9. ' ' → logprob: -9.408551216125488
    10. '{
' → logprob: -9.533551216125488

Token 382: ' g' (ID: 329)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.10660476237535477
    2. '   ' → logprob: -2.981604814529419
    3. '       ' → logprob: -3.606604814529419
    4. ' #' → logprob: -4.10660457611084
    5. 'g' (adapté à ' g') → logprob: -5.10660457611084
    6. ' g' → logprob: -7.98160457611084
    7. '#g' → logprob: -8.60660457611084
    8. '
' → logprob: -8.85660457611084
    9. ' ' → logprob: -10.10660457611084
    10. '  ' → logprob: -11.35660457611084

Token 383: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07889033854007721
    2. '=' → logprob: -2.578890323638916
    3. '=g' → logprob: -14.953890800476074
    4. ' ' → logprob: -15.828890800476074
    5. '   ' → logprob: -15.953890800476074
    6. 'import' → logprob: -17.328889846801758
    7. ' =
' → logprob: -18.953889846801758
    8. 'g' → logprob: -19.203889846801758
    9. ' ' → logprob: -19.328889846801758
    10. '=
' → logprob: -19.703889846801758

Token 384: ' gcd' (ID: 106918)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.0031791406217962503
    2. ' gcd' → logprob: -5.75317907333374
    3. 'gcc' → logprob: -14.003179550170898
    4. 'import' → logprob: -15.253179550170898
    5. 'h' → logprob: -15.878179550170898
    6. 'gc' → logprob: -17.0031795501709
    7. ''g' → logprob: -17.5031795501709
    8. ' ' → logprob: -17.6281795501709
    9. 'abs' → logprob: -17.7531795501709
    10. '   ' → logprob: -17.8781795501709

Token 385: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -6.704273118884885e-07
    2. 'h' → logprob: -14.500000953674316
    3. '(' → logprob: -16.375
    4. '(
' → logprob: -19.5
    5. ' (' → logprob: -19.75
    6. '<h' → logprob: -21.375
    7. 'import' → logprob: -22.625
    8. '   ' → logprob: -22.75
    9. '	h' → logprob: -22.75
    10. '[h' → logprob: -23.0

Token 386: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00027611342375166714
    2. ' ,' → logprob: -9.250276565551758
    3. '(' → logprob: -9.500276565551758
    4. ',h' → logprob: -10.125276565551758
    5. '(abs' → logprob: -10.625276565551758
    6. ',w' → logprob: -11.000276565551758
    7. ')' → logprob: -12.000276565551758
    8. ',
' → logprob: -12.000276565551758
    9. '(w' → logprob: -12.500276565551758
    10. '(h' → logprob: -12.625276565551758

Token 387: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.029772469773888588
    2. ' abs' → logprob: -3.5297725200653076
    3. '(abs' → logprob: -10.779772758483887
    4. 'dx' → logprob: -13.904772758483887
    5. ' dx' → logprob: -15.154772758483887
    6. '   ' → logprob: -16.77977180480957
    7. '.abs' → logprob: -18.27977180480957
    8. ' ' → logprob: -19.77977180480957
    9. '(dx' → logprob: -19.77977180480957
    10. '(' → logprob: -19.90477180480957

Token 388: '(dx' (ID: 124932)
  Prédit: '(dx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dx' → logprob: -0.07889287173748016
    2. 'dx' → logprob: -2.578892946243286
    3. ' dx' → logprob: -12.828892707824707
    4. '_dx' → logprob: -15.328892707824707
    5. '(' → logprob: -16.078893661499023
    6. 'Dx' → logprob: -16.953893661499023
    7. ')' → logprob: -17.078893661499023
    8. '.dx' → logprob: -17.203893661499023
    9. '(d' → logprob: -18.828893661499023
    10. ' (' → logprob: -18.828893661499023

Token 389: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.15235529839992523
    2. '))
' → logprob: -2.027355194091797
    3. ')' → logprob: -4.652355194091797
    4. ')
' → logprob: -9.777355194091797
    5. '))

' → logprob: -10.652355194091797
    6. '))
' → logprob: -12.277355194091797
    7. ' ))
' → logprob: -13.027355194091797
    8. '   ' → logprob: -13.152355194091797
    9. ' ))' → logprob: -13.527355194091797
    10. ')))' → logprob: -13.902355194091797

Token 390: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15494851768016815
    2. '   ' → logprob: -2.4049484729766846
    3. 'return' → logprob: -3.2799484729766846
    4. '
' → logprob: -4.779948711395264
    5. ' return' → logprob: -5.779948711395264
    6. ')' → logprob: -6.779948711395264
    7. '	return' → logprob: -7.529948711395264
    8. ')
' → logprob: -7.529948711395264
    9. '```' → logprob: -7.904948711395264
    10. '  
' → logprob: -8.154948234558105

Token 391: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.062042634934186935
    2. ' return' → logprob: -2.812042713165283
    3. '   ' → logprob: -9.562042236328125
    4. '       ' → logprob: -12.437042236328125
    5. '	return' → logprob: -14.812042236328125
    6. '
' → logprob: -15.687042236328125
    7. ' ' → logprob: -16.937042236328125
    8. ':return' → logprob: -17.812042236328125
    9. 'eturn' → logprob: -17.937042236328125
    10. '```' → logprob: -18.562042236328125

Token 392: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.0002613358374219388
    2. ' h' → logprob: -8.250261306762695
    3. '   ' → logprob: -16.125261306762695
    4. '	h' → logprob: -17.750261306762695
    5. '    ' → logprob: -21.125261306762695
    6. '(h' → logprob: -21.250261306762695
    7. '       ' → logprob: -21.375261306762695
    8. '  ' → logprob: -21.875261306762695
    9. ' ' → logprob: -21.875261306762695
    10. '"h' → logprob: -22.375261306762695

Token 393: '//' (ID: 393)
  Prédit: '//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -1.7835754988482222e-05
    2. ' //' → logprob: -11.000018119812012
    3. '//#' → logprob: -15.125018119812012
    4. '//=' → logprob: -15.125018119812012
    5. '```' → logprob: -15.875018119812012
    6. '#' → logprob: -16.375017166137695
    7. '//'' → logprob: -16.875017166137695
    8. '/g' → logprob: -17.000017166137695
    9. '//@' → logprob: -17.250017166137695
    10. ',//' → logprob: -17.250017166137695

Token 394: 'g' (ID: 70)
  Prédit: 'g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -1.9361264946837764e-07
    2. ' g' → logprob: -16.5
    3. '	g' → logprob: -19.75
    4. '   ' → logprob: -21.375
    5. ' ' → logprob: -22.0
    6. ''g' → logprob: -22.875
    7. '(g' → logprob: -23.125
    8. '
' → logprob: -23.125
    9. '#g' → logprob: -23.25
    10. '_g' → logprob: -23.375

Token 395: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01698131673038006
    2. '
' → logprob: -4.76698112487793
    3. '    
' → logprob: -5.64198112487793
    4. 'g' → logprob: -5.89198112487793
    5. '  
' → logprob: -6.76698112487793
    6. 'from' → logprob: -8.51698112487793
    7. '   
' → logprob: -8.51698112487793
    8. '```' → logprob: -9.39198112487793
    9. '  ' → logprob: -9.51698112487793
    10. '\
' → logprob: -9.64198112487793

Token 396: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009316250681877136
    2. 'g' → logprob: -5.384316444396973
    3. '
' → logprob: -5.884316444396973
    4. 'from' → logprob: -7.259316444396973
    5. '    
' → logprob: -7.259316444396973
    6. 'import' → logprob: -8.884316444396973
    7. 'return' → logprob: -9.259316444396973
    8. '```' → logprob: -9.259316444396973
    9. '  
' → logprob: -9.634316444396973
    10. ' g' → logprob: -10.509316444396973

Token 397: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4002741575241089
    2. 'g' → logprob: -1.2752741575241089
    3. 'from' → logprob: -3.7752742767333984
    4. ' g' → logprob: -4.025274276733398
    5. ' from' → logprob: -5.150274276733398
    6. '
' → logprob: -5.900274276733398
    7. 'import' → logprob: -7.775274276733398
    8. '```' → logprob: -7.775274276733398
    9. '    
' → logprob: -8.650274276733398
    10. 'def' → logprob: -10.025274276733398

Token 398: ' general' (ID: 5985)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.5947426557540894
    2. 'from' → logprob: -1.3447426557540894
    3. 'def' → logprob: -1.7197426557540894
    4. ' from' → logprob: -5.719742774963379
    5. 'import' → logprob: -6.219742774963379
    6. '   ' → logprob: -6.594742774963379
    7. ' def' → logprob: -7.344742774963379
    8. ' g' → logprob: -7.594742774963379
    9. 'l' → logprob: -8.594742774963379
    10. '
' → logprob: -8.969742774963379

Token 399: ' case' (ID: 1890)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.9149680137634277
    2. '   ' → logprob: -0.9149680137634277
    3. ' g' → logprob: -1.9149680137634277
    4. ' case' → logprob: -4.164968013763428
    5. ' gcd' → logprob: -4.789968013763428
    6. 'from' → logprob: -4.914968013763428
    7. ' k' → logprob: -5.414968013763428
    8. 'def' → logprob: -5.539968013763428
    9. 'import' → logprob: -5.789968013763428
    10. 'case' → logprob: -5.789968013763428

Token 400: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17809581756591797
    2. ' from' → logprob: -2.678095817565918
    3. 'from' → logprob: -3.178095817565918
    4. 'g' → logprob: -3.928095817565918
    5. ' g' → logprob: -4.178095817565918
    6. '
' → logprob: -4.178095817565918
    7. '```' → logprob: -6.803095817565918
    8. 'import' → logprob: -7.553095817565918
    9. ' gcd' → logprob: -7.803095817565918
    10. 'def' → logprob: -9.428095817565918

Token 401: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1155896857380867
    2. '
' → logprob: -2.9905896186828613
    3. ' g' → logprob: -3.4905896186828613
    4. ' from' → logprob: -4.365589618682861
    5. 'g' → logprob: -5.490589618682861
    6. '```' → logprob: -5.490589618682861
    7. 'from' → logprob: -5.740589618682861
    8. ' gcd' → logprob: -6.990589618682861
    9. 'import' → logprob: -7.115589618682861
    10. '    
' → logprob: -7.365589618682861

Token 402: ' gh' (ID: 27170)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.46483486890792847
    2. 'from' → logprob: -1.2148349285125732
    3. ' from' → logprob: -3.4648349285125732
    4. 'def' → logprob: -3.9648349285125732
    5. ' g' → logprob: -3.9648349285125732
    6. '   ' → logprob: -5.839834690093994
    7. ' def' → logprob: -6.589834690093994
    8. 'import' → logprob: -7.339834690093994
    9. 'for' → logprob: -8.714835166931152
    10. 'k' → logprob: -8.964835166931152

Token 403: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3878825902938843
    2. ' =' → logprob: -1.1378825902938843
    3. ',' → logprob: -7.512882709503174
    4. 'cd' → logprob: -8.137882232666016
    5. '=g' → logprob: -9.387882232666016
    6. '=h' → logprob: -10.262882232666016
    7. '=int' → logprob: -10.387882232666016
    8. '   ' → logprob: -11.887882232666016
    9. 'cf' → logprob: -12.762882232666016
    10. ' ' → logprob: -12.887882232666016

Token 404: ' h' (ID: 312)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.06200141832232475
    2. ' gcd' → logprob: -2.8120014667510986
    3. 'h' → logprob: -11.18700122833252
    4. ' ' → logprob: -11.93700122833252
    5. ' g' → logprob: -12.56200122833252
    6. '   ' → logprob: -12.68700122833252
    7. 'abs' → logprob: -13.68700122833252
    8. 'math' → logprob: -14.06200122833252
    9. 'gcc' → logprob: -14.18700122833252
    10. 'sys' → logprob: -14.31200122833252

Token 405: ' //' (ID: 602)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4986926317214966
    2. '=' → logprob: -1.6236926317214966
    3. '//' → logprob: -2.373692512512207
    4. '   ' → logprob: -2.623692512512207
    5. ' //' → logprob: -5.123692512512207
    6. '#' → logprob: -5.498692512512207
    7. 'def' → logprob: -5.498692512512207
    8. ',' → logprob: -5.873692512512207
    9. 'g' → logprob: -5.873692512512207
    10. '=g' → logprob: -5.998692512512207

Token 406: ' gcd' (ID: 106918)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.0035116916988044977
    2. ' gcd' → logprob: -6.753511905670166
    3. 'math' → logprob: -6.753511905670166
    4. '__' → logprob: -7.003511905670166
    5. 'import' → logprob: -9.503511428833008
    6. ' ' → logprob: -9.878511428833008
    7. '   ' → logprob: -10.753511428833008
    8. 'from' → logprob: -11.003511428833008
    9. '_g' → logprob: -11.753511428833008
    10. 'abs' → logprob: -11.878511428833008

Token 407: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.027031555771827698
    2. 'h' → logprob: -3.652031660079956
    3. 'gh' → logprob: -7.902031421661377
    4. '(' → logprob: -8.902031898498535
    5. '(dx' → logprob: -8.902031898498535
    6. '(g' → logprob: -10.152031898498535
    7. '(abs' → logprob: -10.777031898498535
    8. '[h' → logprob: -11.152031898498535
    9. ',h' → logprob: -12.277031898498535
    10. 'hx' → logprob: -13.652031898498535

Token 408: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005052778869867325
    2. '(dx' → logprob: -5.50505256652832
    3. ' ,' → logprob: -8.00505256652832
    4. ',d' → logprob: -8.63005256652832
    5. ',h' → logprob: -8.63005256652832
    6. 'dx' → logprob: -8.88005256652832
    7. 'abs' → logprob: -10.00505256652832
    8. ',g' → logprob: -10.00505256652832
    9. '(abs' → logprob: -10.50505256652832
    10. ',x' → logprob: -12.13005256652832

Token 409: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.081220842897892
    2. 'dx' → logprob: -2.706220865249634
    3. ' abs' → logprob: -4.581220626831055
    4. ' dx' → logprob: -6.956220626831055
    5. '(abs' → logprob: -10.956220626831055
    6. '(dx' → logprob: -12.206220626831055
    7. '   ' → logprob: -13.456220626831055
    8. ' ' → logprob: -14.831220626831055
    9. 'adx' → logprob: -15.706220626831055
    10. 'ax' → logprob: -15.831220626831055

Token 410: '(dx' (ID: 124932)
  Prédit: '(dx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dx' → logprob: -0.0004307884373702109
    2. 'dx' → logprob: -7.750430583953857
    3. ' dx' → logprob: -16.000431060791016
    4. '(' → logprob: -17.250431060791016
    5. '_dx' → logprob: -18.125431060791016
    6. ')' → logprob: -18.625431060791016
    7. ' (' → logprob: -19.125431060791016
    8. '(x' → logprob: -19.250431060791016
    9. '   ' → logprob: -19.500431060791016
    10. '(d' → logprob: -19.625431060791016

Token 411: '))
' (ID: 2210)
  Prédit: '))
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))
' → logprob: -0.3142421543598175
    2. '))' → logprob: -1.3142421245574951
    3. ')' → logprob: -7.189242362976074
    4. '))

' → logprob: -9.564242362976074
    5. ' ))
' → logprob: -9.814242362976074
    6. ')
' → logprob: -9.939242362976074
    7. '))
' → logprob: -10.814242362976074
    8. '   ' → logprob: -10.939242362976074
    9. ' ' → logprob: -12.439242362976074
    10. ' ))' → logprob: -12.689242362976074

Token 412: '   ' (ID: 271)
  Prédit: 'gw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gw' → logprob: -0.4119861423969269
    2. ' gw' → logprob: -1.6619861125946045
    3. '   ' → logprob: -1.9119861125946045
    4. ' ' → logprob: -10.536986351013184
    5. '
' → logprob: -10.661986351013184
    6. ',' → logprob: -10.661986351013184
    7. 'g' → logprob: -11.786986351013184
    8. ' Gw' → logprob: -11.911986351013184
    9. '       ' → logprob: -12.036986351013184
    10. '    
' → logprob: -12.161986351013184

Token 413: ' gw' (ID: 18053)
  Prédit: 'gw'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gw' (adapté à ' gw') → logprob: -0.023305343464016914
    2. ' gw' → logprob: -3.7733054161071777
    3. '   ' → logprob: -9.89830493927002
    4. 'g' → logprob: -12.89830493927002
    5. ' ' → logprob: -13.02330493927002
    6. 'gh' → logprob: -14.27330493927002
    7. 'gc' → logprob: -14.27330493927002
    8. 'gj' → logprob: -14.52330493927002
    9. 'gx' → logprob: -14.52330493927002
    10. '  ' → logprob: -14.64830493927002

Token 414: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759639143943787
    2. '=' → logprob: -0.8259639143943787
    3. 'w' → logprob: -10.700963973999023
    4. '=w' → logprob: -13.575963973999023
    5. ' ' → logprob: -14.950963973999023
    6. '   ' → logprob: -15.950963973999023
    7. ' w' → logprob: -15.950963973999023
    8. 's' → logprob: -17.325963973999023
    9. ',' → logprob: -18.450963973999023
    10. '＝' → logprob: -18.825963973999023

Token 415: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.06200655549764633
    2. ' w' → logprob: -2.8120064735412598
    3. '   ' → logprob: -10.187006950378418
    4. ' ' → logprob: -14.312006950378418
    5. '	w' → logprob: -15.187006950378418
    6. '  ' → logprob: -15.562006950378418
    7. '    ' → logprob: -16.0620059967041
    8. '(w' → logprob: -16.8120059967041
    9. '       ' → logprob: -18.0620059967041
    10. ' ' → logprob: -18.9370059967041

Token 416: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.3132777214050293
    2. '//' → logprob: -1.3132777214050293
    3. ' ' → logprob: -12.313278198242188
    4. ' /' → logprob: -12.313278198242188
    5. '=' → logprob: -12.813278198242188
    6. '/' → logprob: -13.313278198242188
    7. '   ' → logprob: -13.438278198242188
    8. 'w' → logprob: -15.438278198242188
    9. ' ' → logprob: -15.438278198242188
    10. '//=' → logprob: -15.688278198242188

Token 417: ' gcd' (ID: 106918)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.0006273718317970634
    2. ' gcd' → logprob: -7.375627517700195
    3. '   ' → logprob: -14.250627517700195
    4. 'gcc' → logprob: -16.750627517700195
    5. ' ' → logprob: -16.875627517700195
    6. '  ' → logprob: -17.750627517700195
    7. '	g' → logprob: -18.250627517700195
    8. '(g' → logprob: -18.875627517700195
    9. 'gd' → logprob: -19.000627517700195
    10. 'gc' → logprob: -19.000627517700195

Token 418: '(w' (ID: 7420)
  Prédit: '(w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -6.630610641877865e-06
    2. 'w' → logprob: -12.000006675720215
    3. ' (' → logprob: -15.500006675720215
    4. '(' → logprob: -15.875006675720215
    5. '   ' → logprob: -17.2500057220459
    6. '<w' → logprob: -18.3750057220459
    7. '(wx' → logprob: -19.2500057220459
    8. '	w' → logprob: -19.5000057220459
    9. '(g' → logprob: -19.8750057220459
    10. '(
' → logprob: -20.2500057220459

Token 419: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09163881093263626
    2. '(abs' → logprob: -2.4666388034820557
    3. 'abs' → logprob: -5.966639041900635
    4. '(' → logprob: -9.591638565063477
    5. ' ,' → logprob: -10.216638565063477
    6. ' abs' → logprob: -11.341638565063477
    7. 'w' → logprob: -12.466638565063477
    8. '.abs' → logprob: -12.716638565063477
    9. 'dy' → logprob: -13.091638565063477
    10. '   ' → logprob: -13.466638565063477

Token 420: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -3.2378600735682994e-05
    2. ' abs' → logprob: -10.500032424926758
    3. '(abs' → logprob: -12.250032424926758
    4. '   ' → logprob: -18.000032424926758
    5. 'dy' → logprob: -19.750032424926758
    6. '.abs' → logprob: -20.125032424926758
    7. ' ' → logprob: -20.375032424926758
    8. '  ' → logprob: -20.750032424926758
    9. '
' → logprob: -20.875032424926758
    10. '```' → logprob: -22.125032424926758

Token 421: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -5.8126592193730175e-05
    2. 'dy' → logprob: -9.8750581741333
    3. '(dx' → logprob: -12.8750581741333
    4. '(' → logprob: -13.8750581741333
    5. '   ' → logprob: -14.1250581741333
    6. ' (' → logprob: -14.2500581741333
    7. '(
' → logprob: -14.8750581741333
    8. '{' → logprob: -15.1250581741333
    9. '[' → logprob: -15.8750581741333
    10. ')' → logprob: -16.000057220458984

Token 422: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -4.4060561776859686e-05
    2. 'dy' → logprob: -10.125043869018555
    3. ')' → logprob: -13.625043869018555
    4. ' y' → logprob: -13.875043869018555
    5. 'x' → logprob: -14.250043869018555
    6. '(y' → logprob: -14.500043869018555
    7. '   ' → logprob: -15.750043869018555
    8. 'y's' → logprob: -15.750043869018555
    9. ' dy' → logprob: -16.375043869018555
    10. 'iy' → logprob: -16.500043869018555

Token 423: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07905469834804535
    2. '))' → logprob: -2.579054594039917
    3. ')
' → logprob: -9.329054832458496
    4. '))
' → logprob: -9.704054832458496
    5. ')))' → logprob: -11.579054832458496
    6. '())' → logprob: -12.954054832458496
    7. '   ' → logprob: -13.954054832458496
    8. '()' → logprob: -14.329054832458496
    9. ')}' → logprob: -14.954054832458496
    10. ' )' → logprob: -14.954054832458496

Token 424: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0010537689086049795
    2. 'from' → logprob: -8.376053810119629
    3. ' from' → logprob: -8.501053810119629
    4. 'return' → logprob: -8.626053810119629
    5. 'import' → logprob: -8.876053810119629
    6. ' return' → logprob: -9.376053810119629
    7. '    
' → logprob: -10.251053810119629
    8. '
' → logprob: -10.376053810119629
    9. ',' → logprob: -10.626053810119629
    10. ' k' → logprob: -10.626053810119629

Token 425: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006914287339895964
    2. 'from' → logprob: -5.256914138793945
    3. ' from' → logprob: -7.006914138793945
    4. 'return' → logprob: -8.381914138793945
    5. 'l' → logprob: -8.881914138793945
    6. ' l' → logprob: -9.381914138793945
    7. 'g' → logprob: -9.381914138793945
    8. 'def' → logprob: -9.506914138793945
    9. 'import' → logprob: -10.131914138793945
    10. '    
' → logprob: -10.506914138793945

Token 426: ' minimal' (ID: 19957)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.3083324134349823
    2. 'def' → logprob: -1.8083324432373047
    3. 'l' → logprob: -3.3083324432373047
    4. ' from' → logprob: -3.3083324432373047
    5. 'return' → logprob: -3.9333324432373047
    6. ' return' → logprob: -6.183332443237305
    7. ' l' → logprob: -6.433332443237305
    8. '   ' → logprob: -6.683332443237305
    9. ' def' → logprob: -6.933332443237305
    10. 'import' → logprob: -6.933332443237305

Token 427: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.31680211424827576
    2. ' k' → logprob: -1.3168021440505981
    3. 'from' → logprob: -6.941802024841309
    4. ' from' → logprob: -7.316802024841309
    5. 'l' → logprob: -7.566802024841309
    6. 'def' → logprob: -8.316802024841309
    7. ' def' → logprob: -8.566802024841309
    8. ' l' → logprob: -8.941802024841309
    9. 'import' → logprob: -8.941802024841309
    10. ' for' → logprob: -9.066802024841309

Token 428: ' such' (ID: 2238)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0052398028783500195
    2. '=' → logprob: -5.255239963531494
    3. 'import' → logprob: -13.130239486694336
    4. '   ' → logprob: -14.005239486694336
    5. '=k' → logprob: -14.005239486694336
    6. ' =
' → logprob: -14.130239486694336
    7. ' ' → logprob: -14.630239486694336
    8. '=int' → logprob: -15.005239486694336
    9. ',' → logprob: -15.505239486694336
    10. ':' → logprob: -15.630239486694336

Token 429: ' that' (ID: 484)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2053104043006897
    2. ' =' → logprob: -1.705310344696045
    3. '   ' → logprob: -6.580310344696045
    4. '=
' → logprob: -7.330310344696045
    5. 's' → logprob: -8.455310821533203
    6. 'def' → logprob: -8.830310821533203
    7. ',' → logprob: -9.080310821533203
    8. ' be' → logprob: -9.080310821533203
    9. 'be' → logprob: -9.205310821533203
    10. '=lambda' → logprob: -9.330310821533203

Token 430: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.8161395788192749
    2. ' k' → logprob: -1.441139578819275
    3. '(k' → logprob: -2.1911396980285645
    4. 'gh' → logprob: -2.3161396980285645
    5. '(' → logprob: -3.1911396980285645
    6. ' gh' → logprob: -3.3161396980285645
    7. ' (' → logprob: -3.4411396980285645
    8. '(g' → logprob: -7.5661396980285645
    9. ' ' → logprob: -8.316139221191406
    10. '   ' → logprob: -9.316139221191406

Token 431: '%' (ID: 4)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.14056521654129028
    2. ' *' → logprob: -2.3905651569366455
    3. ' %' → logprob: -3.6405651569366455
    4. '%' → logprob: -4.390565395355225
    5. '*g' → logprob: -7.515565395355225
    6. '*(' → logprob: -9.390564918518066
    7. '*d' → logprob: -10.015564918518066
    8. ' is' → logprob: -10.015564918518066
    9. '%x' → logprob: -10.390564918518066
    10. ' ' → logprob: -10.515564918518066

Token 432: 'gh' (ID: 956)
  Prédit: 'gh'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gh' → logprob: -0.00012356207298580557
    2. ' gh' → logprob: -9.000123977661133
    3. '(' → logprob: -16.625123977661133
    4. 'gw' → logprob: -17.875123977661133
    5. '-gh' → logprob: -18.000123977661133
    6. 'ghi' → logprob: -18.500123977661133
    7. 'ght' → logprob: -18.625123977661133
    8. 'Gh' → logprob: -18.750123977661133
    9. 'gl' → logprob: -19.000123977661133
    10. '
' → logprob: -19.125123977661133

Token 433: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.22544269263744354
    2. ' ==' → logprob: -1.60044264793396
    3. '=' → logprob: -11.100442886352539
    4. '==
' → logprob: -12.475442886352539
    5. ' =' → logprob: -12.725442886352539
    6. ']==' → logprob: -12.975442886352539
    7. ')==' → logprob: -13.725442886352539
    8. '()==' → logprob: -13.725442886352539
    9. ' and' → logprob: -13.850442886352539
    10. 'and' → logprob: -13.975442886352539

Token 434: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007861602935008705
    2. 'gw' → logprob: -7.250786304473877
    3. ' ' → logprob: -9.875785827636719
    4. 'gh' → logprob: -10.750785827636719
    5. ' gw' → logprob: -13.125785827636719
    6. '
' → logprob: -15.250785827636719
    7. '[' → logprob: -15.375785827636719
    8. 'g' → logprob: -16.00078582763672
    9. '{' → logprob: -16.00078582763672
    10. ' gh' → logprob: -16.25078582763672

Token 435: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.008719642646610737
    2. 'and' → logprob: -4.758719444274902
    3. ' or' → logprob: -9.258719444274902
    4. '   ' → logprob: -11.633719444274902
    5. ' ' → logprob: -15.133719444274902
    6. 'or' → logprob: -15.133719444274902
    7. '```' → logprob: -16.00872039794922
    8. ',' → logprob: -16.38372039794922
    9. '
' → logprob: -16.50872039794922
    10. '*' → logprob: -17.13372039794922

Token 436: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.10020720958709717
    2. ' k' → logprob: -2.3502073287963867
    3. ' ' → logprob: -15.100207328796387
    4. '   ' → logprob: -16.60020637512207
    5. '	k' → logprob: -16.97520637512207
    6. '  ' → logprob: -17.60020637512207
    7. ' ' → logprob: -17.60020637512207
    8. '```' → logprob: -18.72520637512207
    9. 'kx' → logprob: -19.22520637512207
    10. ',k' → logprob: -19.22520637512207

Token 437: '%' (ID: 4)
  Prédit: '%'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.062030091881752014
    2. ' %' → logprob: -2.812030076980591
    3. '%s' → logprob: -10.812029838562012
    4. '%x' → logprob: -11.062029838562012
    5. '%d' → logprob: -11.812029838562012
    6. '%c' → logprob: -12.187029838562012
    7. '%e' → logprob: -12.437029838562012
    8. '%b' → logprob: -12.562029838562012
    9. '%n' → logprob: -12.812029838562012
    10. '%i' → logprob: -13.687029838562012

Token 438: 'gw' (ID: 36816)
  Prédit: 'gw'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gw' → logprob: -1.6240566083070007e-06
    2. ' gw' → logprob: -13.875001907348633
    3. 'g' → logprob: -14.375001907348633
    4. ' ' → logprob: -17.125001907348633
    5. '(g' → logprob: -17.875001907348633
    6. '
' → logprob: -18.000001907348633
    7. '   ' → logprob: -18.375001907348633
    8. '```' → logprob: -19.125001907348633
    9. ' 
' → logprob: -19.500001907348633
    10. '/g' → logprob: -19.625001907348633

Token 439: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6931679248809814
    2. ' ==' → logprob: -0.6931679248809814
    3. '==
' → logprob: -11.568167686462402
    4. ')==' → logprob: -12.318167686462402
    5. '=' → logprob: -13.193167686462402
    6. ']==' → logprob: -13.568167686462402
    7. ' ==
' → logprob: -13.693167686462402
    8. '```' → logprob: -13.943167686462402
    9. ' =' → logprob: -14.818167686462402
    10. ' ' → logprob: -14.943167686462402

Token 440: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000500370399095118
    2. ' ' → logprob: -7.750500202178955
    3. 'gh' → logprob: -9.625500679016113
    4. ' gh' → logprob: -13.125500679016113
    5. '(' → logprob: -14.250500679016113
    6. 'g' → logprob: -15.250500679016113
    7. '[' → logprob: -16.000499725341797
    8. '  ' → logprob: -16.000499725341797
    9. ' (' → logprob: -16.125499725341797
    10. '
' → logprob: -16.250499725341797

Token 441: ' ->' (ID: 2747)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014004123397171497
    2. ' =' → logprob: -5.264004230499268
    3. '
' → logprob: -5.639004230499268
    4. ' return' → logprob: -6.639004230499268
    5. ' is' → logprob: -6.639004230499268
    6. ':' → logprob: -7.389004230499268
    7. 'return' → logprob: -7.639004230499268
    8. '=' → logprob: -7.889004230499268
    9. ':
' → logprob: -8.13900375366211
    10. 'import' → logprob: -8.51400375366211

Token 442: ' l' (ID: 305)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7445498108863831
    2. ' (' → logprob: -0.9945498108863831
    3. 'gh' → logprob: -2.6195497512817383
    4. ' gh' → logprob: -2.7445497512817383
    5. '(l' → logprob: -4.744549751281738
    6. '(g' → logprob: -5.619549751281738
    7. 'l' → logprob: -6.369549751281738
    8. '(k' → logprob: -6.744549751281738
    9. ' l' → logprob: -7.119549751281738
    10. '(gl' → logprob: -7.994549751281738

Token 443: 'cm' (ID: 7871)
  Prédit: 'cm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cm' → logprob: -2.3676733690081164e-05
    2. ' =' → logprob: -10.87502384185791
    3. 'c' → logprob: -13.12502384185791
    4. 'cms' → logprob: -13.62502384185791
    5. '=' → logprob: -14.00002384185791
    6. 'm' → logprob: -15.75002384185791
    7. 'l' → logprob: -16.000022888183594
    8. 'e' → logprob: -16.250022888183594
    9. ' cm' → logprob: -16.625022888183594
    10. '   ' → logprob: -16.750022888183594

Token 444: '(' (ID: 7)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2588679790496826
    2. '=' → logprob: -1.5088679790496826
    3. '(' → logprob: -5.133868217468262
    4. '_' → logprob: -7.383868217468262
    5. '_val' → logprob: -8.883868217468262
    6. 'gh' → logprob: -9.008868217468262
    7. '_value' → logprob: -10.258868217468262
    8. '   ' → logprob: -10.508868217468262
    9. '(
' → logprob: -11.508868217468262
    10. ' (' → logprob: -11.508868217468262

Token 445: 'gh' (ID: 956)
  Prédit: 'gh'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gh' → logprob: -8.864272967912257e-05
    2. '(' → logprob: -9.500088691711426
    3. ' gh' → logprob: -11.250088691711426
    4. ')' → logprob: -14.375088691711426
    5. '   ' → logprob: -16.87508773803711
    6. '(
' → logprob: -17.00008773803711
    7. 'ghi' → logprob: -17.12508773803711
    8. 'ght' → logprob: -17.25008773803711
    9. '-gh' → logprob: -17.25008773803711
    10. 'g' → logprob: -17.75008773803711

Token 446: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03157053515315056
    2. ',g' → logprob: -3.6565704345703125
    3. ' ,' → logprob: -5.6565704345703125
    4. '_g' → logprob: -7.1565704345703125
    5. 'gw' → logprob: -8.281570434570312
    6. '(g' → logprob: -8.406570434570312
    7. ')' → logprob: -8.656570434570312
    8. '   ' → logprob: -9.281570434570312
    9. '_,' → logprob: -9.406570434570312
    10. ',_' → logprob: -10.406570434570312

Token 447: 'gw' (ID: 36816)
  Prédit: 'gw'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gw' → logprob: -0.00861669983714819
    2. ' gw' → logprob: -4.758616924285889
    3. '   ' → logprob: -13.88361644744873
    4. ' ' → logprob: -14.13361644744873
    5. '
' → logprob: -15.50861644744873
    6. 'g' → logprob: -16.008617401123047
    7. 'Gw' → logprob: -17.133617401123047
    8. 'gv' → logprob: -17.258617401123047
    9. '  ' → logprob: -17.633617401123047
    10. ' Gw' → logprob: -17.758617401123047

Token 448: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.922563963802531e-05
    2. ')
' → logprob: -10.500079154968262
    3. '   ' → logprob: -11.000079154968262
    4. '()' → logprob: -11.500079154968262
    5. '())' → logprob: -11.750079154968262
    6. ' )' → logprob: -12.000079154968262
    7. '))' → logprob: -12.375079154968262
    8. 'def' → logprob: -14.250079154968262
    9. '")' → logprob: -14.375079154968262
    10. ')))' → logprob: -14.500079154968262

Token 449: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06698082387447357
    2. 'return' → logprob: -3.4419808387756348
    3. ' return' → logprob: -3.9419808387756348
    4. '
' → logprob: -4.816980838775635
    5. 'from' → logprob: -6.941980838775635
    6. 'import' → logprob: -6.941980838775635
    7. '    
' → logprob: -7.066980838775635
    8. '```' → logprob: -7.066980838775635
    9. 'g' → logprob: -8.066980361938477
    10. ' from' → logprob: -8.191980361938477

Token 450: ' l' (ID: 305)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.46836331486701965
    2. 'return' → logprob: -1.7183632850646973
    3. ' return' → logprob: -1.7183632850646973
    4. 'from' → logprob: -5.468363285064697
    5. ' l' → logprob: -5.593363285064697
    6. '
' → logprob: -5.718363285064697
    7. ' from' → logprob: -6.218363285064697
    8. 'def' → logprob: -7.343363285064697
    9. '```' → logprob: -7.843363285064697
    10. 'l' (adapté à ' l') → logprob: -8.093363761901855

Token 451: ' =' (ID: 314)
  Prédit: 'cm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cm' → logprob: -0.0001916200271807611
    2. 'c' → logprob: -8.750191688537598
    3. ' =' → logprob: -10.875191688537598
    4. 'cms' → logprob: -11.625191688537598
    5. '_cm' → logprob: -12.875191688537598
    6. '=' → logprob: -14.000191688537598
    7. ' cm' → logprob: -14.125191688537598
    8. 'cmp' → logprob: -15.500191688537598
    9. '   ' → logprob: -15.625191688537598
    10. 'en' → logprob: -15.625191688537598

Token 452: ' l' (ID: 305)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.47924479842185974
    2. 'gh' → logprob: -1.1042448282241821
    3. ' (' → logprob: -3.3542447090148926
    4. ' gh' → logprob: -4.354244709014893
    5. '(g' → logprob: -7.354244709014893
    6. '(l' → logprob: -8.60424518585205
    7. ' ' → logprob: -8.72924518585205
    8. '(h' → logprob: -9.10424518585205
    9. '   ' → logprob: -9.35424518585205
    10. '  ' → logprob: -9.60424518585205

Token 453: 'cm' (ID: 7871)
  Prédit: 'cm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cm' → logprob: -1.2471589798224159e-05
    2. 'gh' → logprob: -12.250012397766113
    3. 'c' → logprob: -12.625012397766113
    4. 'cms' → logprob: -13.375012397766113
    5. '_cm' → logprob: -13.625012397766113
    6. 'm' → logprob: -14.125012397766113
    7. 'CM' → logprob: -15.000012397766113
    8. '(cm' → logprob: -15.250012397766113
    9. '(' → logprob: -16.37501335144043
    10. ' cm' → logprob: -16.87501335144043

Token 454: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.1756367712223437e-05
    2. '(
' → logprob: -11.875011444091797
    3. ' (' → logprob: -12.500011444091797
    4. 'gh' → logprob: -14.000011444091797
    5. '(`' → logprob: -17.250011444091797
    6. '(

' → logprob: -17.375011444091797
    7. '(G' → logprob: -17.875011444091797
    8. ')' → logprob: -18.000011444091797
    9. '(g' → logprob: -18.000011444091797
    10. '```' → logprob: -18.000011444091797

Token 455: 'gh' (ID: 956)
  Prédit: 'gh'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gh' → logprob: -3.214019307051785e-05
    2. '(' → logprob: -10.375032424926758
    3. ')' → logprob: -14.750032424926758
    4. ' gh' → logprob: -14.875032424926758
    5. 'ght' → logprob: -16.750032424926758
    6. '-gh' → logprob: -18.000032424926758
    7. '   ' → logprob: -18.125032424926758
    8. 'ghi' → logprob: -18.250032424926758
    9. 'g' → logprob: -18.750032424926758
    10. 'GH' → logprob: -18.875032424926758

Token 456: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.167648876318708e-05
    2. ' ,' → logprob: -10.125041961669922
    3. ',
' → logprob: -14.250041961669922
    4. ',g' → logprob: -14.875041961669922
    5. 'gw' → logprob: -15.375041961669922
    6. ' ' → logprob: -16.125041961669922
    7. '   ' → logprob: -16.625041961669922
    8. ')' → logprob: -16.875041961669922
    9. '),' → logprob: -17.500041961669922
    10. '```' → logprob: -17.750041961669922

Token 457: 'gw' (ID: 36816)
  Prédit: 'gw'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gw' → logprob: -2.15310683415737e-05
    2. ' gw' → logprob: -10.750021934509277
    3. '   ' → logprob: -17.12502098083496
    4. '
' → logprob: -17.75002098083496
    5. 'g' → logprob: -18.75002098083496
    6. ' ' → logprob: -19.62502098083496
    7. 'Gw' → logprob: -20.00002098083496
    8. ')' → logprob: -20.50002098083496
    9. '```' → logprob: -20.50002098083496
    10. 'gv' → logprob: -20.50002098083496

Token 458: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00029685118352063
    2. ')
' → logprob: -8.125296592712402
    3. ')
' → logprob: -15.125296592712402
    4. '   ' → logprob: -15.250296592712402
    5. ')return' → logprob: -16.25029754638672
    6. ' )' → logprob: -16.50029754638672
    7. ')`' → logprob: -16.50029754638672
    8. '))' → logprob: -17.37529754638672
    9. ')

' → logprob: -18.00029754638672
    10. '),' → logprob: -18.37529754638672

Token 459: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4214429259300232
    2. '
' → logprob: -1.421442985534668
    3. '<|end|>' → logprob: -2.921442985534668
    4. ' return' → logprob: -3.921442985534668
    5. 'return' → logprob: -3.921442985534668
    6. '	return' → logprob: -5.671442985534668
    7. ')' → logprob: -6.421442985534668
    8. ':return' → logprob: -6.796442985534668
    9. '\n' → logprob: -7.421442985534668
    10. '    
' → logprob: -7.546442985534668

Token 460: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0017995312809944153
    2. ' return' → logprob: -6.751799583435059
    3. 'return' (adapté à ' return') → logprob: -7.376799583435059
    4. '	return' → logprob: -13.126799583435059
    5. '       ' → logprob: -14.126799583435059
    6. ':return' → logprob: -14.626799583435059
    7. '
' → logprob: -16.001798629760742
    8. '    
' → logprob: -17.126798629760742
    9. '    ' → logprob: -17.251798629760742
    10. '  ' → logprob: -17.626798629760742

Token 461: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.47407710552215576
    2. 'l' → logprob: -0.9740771055221558
    3. '	l' → logprob: -16.474077224731445
    4. ' ' → logprob: -18.099077224731445
    5. '   ' → logprob: -18.599077224731445
    6. ' ' → logprob: -20.724077224731445
    7. '
' → logprob: -21.599077224731445
    8. '    ' → logprob: -22.599077224731445
    9. '​' → logprob: -22.849077224731445
    10. '```' → logprob: -22.849077224731445

Token 462: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 463: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.12232019752264023
    2. 'import' → logprob: -2.8723201751708984
    3. 'from' → logprob: -3.3723201751708984
    4. '
' → logprob: -4.122320175170898
    5. ':' → logprob: -5.122320175170898
    6. '

' → logprob: -7.372320175170898
    7. '```' → logprob: -7.872320175170898
    8. '<|end|>' → logprob: -7.997320175170898
    9. '(' → logprob: -8.747320175170898
    10. ':def' → logprob: -9.247320175170898

Token 464: ' gcd' (ID: 106918)
  Prédit: ' gcd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' gcd' → logprob: -0.005045894533395767
    2. 'g' → logprob: -5.8800458908081055
    3. ' max' → logprob: -6.3800458908081055
    4. ' l' → logprob: -8.130045890808105
    5. ' ' → logprob: -9.880045890808105
    6. 'l' → logprob: -10.005045890808105
    7. ' main' → logprob: -10.380045890808105
    8. ' g' → logprob: -10.755045890808105
    9. ' get' → logprob: -11.005045890808105
    10. 'max' → logprob: -11.130045890808105

Token 465: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0840858519077301
    2. '(' → logprob: -2.5840859413146973
    3. ' (' → logprob: -5.334085941314697
    4. '(x' → logprob: -7.959085941314697
    5. '(g' → logprob: -12.334085464477539
    6. ' ' → logprob: -13.834085464477539
    7. '(
' → logprob: -13.959085464477539
    8. 'a' → logprob: -14.334085464477539
    9. '(n' → logprob: -15.209085464477539
    10. 'def' → logprob: -15.334085464477539

Token 466: ',b' (ID: 17568)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01050108764320612
    2. ',a' → logprob: -4.760500907897949
    3. ',b' → logprob: -6.510500907897949
    4. ' ,' → logprob: -7.885500907897949
    5. 'a' → logprob: -11.51050090789795
    6. ',g' → logprob: -12.63550090789795
    7. '(a' → logprob: -13.38550090789795
    8. ',n' → logprob: -14.26050090789795
    9. ',int' → logprob: -14.26050090789795
    10. ',
' → logprob: -14.76050090789795

Token 467: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10245067626237869
    2. '):
' → logprob: -2.3524506092071533
    3. ',' → logprob: -6.227450847625732
    4. ',b' → logprob: -9.227450370788574
    5. ' ):' → logprob: -9.727450370788574
    6. '   ' → logprob: -10.477450370788574
    7. ')' → logprob: -10.602450370788574
    8. '=' → logprob: -11.227450370788574
    9. '):
' → logprob: -11.352450370788574
    10. '):

' → logprob: -11.602450370788574

Token 468: '   ' (ID: 271)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5013852119445801
    2. '   ' → logprob: -1.25138521194458
    3. 'if' → logprob: -2.25138521194458
    4. '
' → logprob: -6.62638521194458
    5. '```' → logprob: -7.00138521194458
    6. ' while' → logprob: -7.87638521194458
    7. 'while' → logprob: -9.126384735107422
    8. 'b' → logprob: -9.876384735107422
    9. ' return' → logprob: -10.251384735107422
    10. '    
' → logprob: -10.501384735107422

Token 469: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.4171184003353119
    2. ' while' → logprob: -1.4171184301376343
    3. 'if' → logprob: -2.4171183109283447
    4. ' if' → logprob: -4.792118549346924
    5. '
' → logprob: -7.292118549346924
    6. '   ' → logprob: -8.542118072509766
    7. '    
' → logprob: -9.167118072509766
    8. '```' → logprob: -9.292118072509766
    9. 'b' → logprob: -9.667118072509766
    10. 'a' → logprob: -11.667118072509766

Token 470: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0019286326132714748
    2. ' b' → logprob: -6.251928806304932
    3. '   ' → logprob: -17.751928329467773
    4. '	b' → logprob: -19.251928329467773
    5. 'a' → logprob: -19.501928329467773
    6. ' ' → logprob: -20.001928329467773
    7. '>b' → logprob: -20.751928329467773
    8. '_b' → logprob: -21.001928329467773
    9. ')b' → logprob: -22.376928329467773
    10. '%b' → logprob: -22.626928329467773

Token 471: ':
' (ID: 734)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.04536716267466545
    2. ' !=' → logprob: -3.7953672409057617
    3. ':
' → logprob: -4.545367240905762
    4. ':' → logprob: -5.420367240905762
    5. '<|end|>' → logprob: -6.295367240905762
    6. ')!=' → logprob: -6.795367240905762
    7. 'a' → logprob: -7.045367240905762
    8. '!==' → logprob: -7.295367240905762
    9. '   ' → logprob: -7.670367240905762
    10. '>' → logprob: -8.295367240905762

Token 472: '       ' (ID: 309)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.21477720141410828
    2. ' a' → logprob: -1.9647772312164307
    3. '   ' → logprob: -2.9647772312164307
    4. '	a' → logprob: -7.464776992797852
    5. '       ' → logprob: -7.964776992797852
    6. '>a' → logprob: -8.589776992797852
    7. ',a' → logprob: -9.089776992797852
    8. '<|end|>' → logprob: -9.464776992797852
    9. '=a' → logprob: -9.589776992797852
    10. ',' → logprob: -9.839776992797852

Token 473: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.0019301822176203132
    2. ' a' → logprob: -6.251930236816406
    3. '	a' → logprob: -13.626930236816406
    4. '   ' → logprob: -15.001930236816406
    5. '>a' → logprob: -16.251930236816406
    6. '(a' → logprob: -18.626930236816406
    7. 'temp' → logprob: -18.876930236816406
    8. '```' → logprob: -19.001930236816406
    9. 't' → logprob: -19.126930236816406
    10. '<|end|>' → logprob: -19.251930236816406

Token 474: ',b' (ID: 17568)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00384722463786602
    2. ',b' → logprob: -6.128847122192383
    3. '%' → logprob: -7.253847122192383
    4. '%=' → logprob: -8.003847122192383
    5. ' ,' → logprob: -8.128847122192383
    6. '%b' → logprob: -8.753847122192383
    7. ' %=' → logprob: -9.503847122192383
    8. '%,' → logprob: -10.128847122192383
    9. '=' → logprob: -10.503847122192383
    10. ',a' → logprob: -12.128847122192383

Token 475: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0004329341172706336
    2. ' =' → logprob: -7.750432968139648
    3. '=b' → logprob: -13.375432968139648
    4. '%=' → logprob: -14.750432968139648
    5. '=a' → logprob: -15.000432968139648
    6. '=
' → logprob: -17.50043296813965
    7. 'a' → logprob: -20.37543296813965
    8. 'b' → logprob: -20.50043296813965
    9. '=

' → logprob: -20.50043296813965
    10. ')=' → logprob: -21.00043296813965

Token 476: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.3132617771625519
    2. ' b' → logprob: -1.3132617473602295
    3. '   ' → logprob: -17.313261032104492
    4. ' ' → logprob: -17.938261032104492
    5. '	b' → logprob: -19.063261032104492
    6. '    ' → logprob: -20.188261032104492
    7. '(b' → logprob: -21.563261032104492
    8. '  ' → logprob: -22.063261032104492
    9. ',b' → logprob: -22.063261032104492
    10. '>b' → logprob: -22.063261032104492

Token 477: ',a' (ID: 26776)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0195663683116436
    2. ',a' → logprob: -4.019566535949707
    3. 'a' → logprob: -7.394566535949707
    4. ' ,' → logprob: -7.644566535949707
    5. ' a' → logprob: -8.394566535949707
    6. ',b' → logprob: -9.269566535949707
    7. ',
' → logprob: -14.644566535949707
    8. '<|end|>' → logprob: -15.144566535949707
    9. '%' → logprob: -15.394566535949707
    10. ' ' → logprob: -15.519566535949707

Token 478: '%b' (ID: 148937)
  Prédit: '%b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%b' → logprob: -0.12911219894886017
    2. ' %' → logprob: -2.1291122436523438
    3. '%' → logprob: -6.129112243652344
    4. '%B' → logprob: -13.129112243652344
    5. '%s' → logprob: -14.754112243652344
    6. '%i' → logprob: -15.129112243652344
    7. '%d' → logprob: -15.379112243652344
    8. 'b' → logprob: -15.629112243652344
    9. '%e' → logprob: -16.379112243652344
    10. '%x' → logprob: -17.004112243652344

Token 479: '
' (ID: 198)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.6401457786560059
    2. '
' → logprob: -1.5151457786560059
    3. '   ' → logprob: -1.6401457786560059
    4. ' return' → logprob: -3.140145778656006
    5. '<|end|>' → logprob: -4.265145778656006
    6. ':return' → logprob: -8.015146255493164
    7. '<|end|>' → logprob: -8.390146255493164
    8. ' ' → logprob: -8.515146255493164
    9. '	return' → logprob: -8.640146255493164
    10. 'eturn' → logprob: -8.890146255493164

Token 480: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003015737747773528
    2. 'return' → logprob: -5.878015518188477
    3. ' return' → logprob: -8.503015518188477
    4. '
' → logprob: -12.628015518188477
    5. '	return' → logprob: -13.503015518188477
    6. ':return' → logprob: -13.753015518188477
    7. '```' → logprob: -14.753015518188477
    8. 'def' → logprob: -15.003015518188477
    9. 'a' → logprob: -15.253015518188477
    10. '<|end|>' → logprob: -15.628015518188477

Token 481: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.005791562143713236
    2. ' return' → logprob: -5.255791664123535
    3. '   ' → logprob: -7.505791664123535
    4. '{return' → logprob: -12.380791664123535
    5. '	return' → logprob: -13.255791664123535
    6. ':return' → logprob: -13.630791664123535
    7. ' ' → logprob: -15.755791664123535
    8. '
' → logprob: -16.13079071044922
    9. 'eturn' → logprob: -16.75579071044922
    10. '  ' → logprob: -17.50579071044922

Token 482: ' a' (ID: 261)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.03824322298169136
    2. 'a' → logprob: -3.288243293762207
    3. ' b' → logprob: -8.538243293762207
    4. ' a' → logprob: -12.038243293762207
    5. '	b' → logprob: -21.03824234008789
    6. 'abs' → logprob: -23.03824234008789
    7. ' ' → logprob: -23.16324234008789
    8. '   ' → logprob: -23.16324234008789
    9. '	a' → logprob: -23.66324234008789
    10. '0' → logprob: -24.03824234008789

Token 483: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0011094938963651657
    2. '
' → logprob: -7.001109600067139
    3. 'from' → logprob: -8.62610912322998
    4. '

' → logprob: -11.25110912322998
    5. 'import' → logprob: -12.62610912322998
    6. '```' → logprob: -13.87610912322998
    7. ' def' → logprob: -14.00110912322998
    8. '    
' → logprob: -15.37610912322998
    9. '  
' → logprob: -15.75110912322998
    10. ' 
' → logprob: -16.876110076904297

Token 484: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0002670575922820717
    2. 'from' → logprob: -8.250267028808594
    3. 'import' → logprob: -12.625267028808594
    4. '```' → logprob: -13.000267028808594
    5. ' def' → logprob: -16.250267028808594
    6. '
' → logprob: -18.625267028808594
    7. '    
' → logprob: -19.375267028808594
    8. ' from' → logprob: -19.500267028808594
    9. '	def' → logprob: -19.500267028808594
    10. '``' → logprob: -19.500267028808594

Token 485: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.02975187823176384
    2. ' l' → logprob: -3.529751777648926
    3. 'lc' → logprob: -14.154751777648926
    4. 'def' → logprob: -15.154751777648926
    5. 'lcd' → logprob: -15.779751777648926
    6. '	l' → logprob: -16.154752731323242
    7. 'lm' → logprob: -17.404752731323242
    8. ' def' → logprob: -17.654752731323242
    9. ' ' → logprob: -18.029752731323242
    10. 'lz' → logprob: -18.154752731323242

Token 486: 'cm' (ID: 7871)
  Prédit: 'cm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cm' → logprob: -1.1472419600977446e-06
    2. 'cms' → logprob: -14.500000953674316
    3. 'c' → logprob: -14.875000953674316
    4. ' cm' → logprob: -16.500001907348633
    5. 'cmd' → logprob: -17.875001907348633
    6. 'ambda' → logprob: -18.125001907348633
    7. 'cmp' → logprob: -18.375001907348633
    8. '   ' → logprob: -18.625001907348633
    9. 'cd' → logprob: -19.000001907348633
    10. 'm' → logprob: -19.250001907348633

Token 487: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.00023226479243021458
    2. '(' → logprob: -8.375232696533203
    3. ' (' → logprob: -13.750232696533203
    4. '(x' → logprob: -15.625232696533203
    5. '(
' → logprob: -16.000232696533203
    6. 'a' → logprob: -16.750232696533203
    7. '(A' → logprob: -16.875232696533203
    8. 'def' → logprob: -16.875232696533203
    9. '(ab' → logprob: -18.000232696533203
    10. '```' → logprob: -18.125232696533203

Token 488: ',b' (ID: 17568)
  Prédit: ',b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',b' → logprob: -0.3872435688972473
    2. ',' → logprob: -1.1372435092926025
    3. ' ,' → logprob: -8.637243270874023
    4. 'b' → logprob: -9.262243270874023
    5. ',a' → logprob: -9.262243270874023
    6. ',
' → logprob: -13.012243270874023
    7. 'a' → logprob: -13.262243270874023
    8. ' b' → logprob: -14.887243270874023
    9. ',int' → logprob: -15.387243270874023
    10. '   ' → logprob: -15.887243270874023

Token 489: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.25241154432296753
    2. '):
' → logprob: -1.5024116039276123
    3. ')' → logprob: -8.377411842346191
    4. ',' → logprob: -9.002411842346191
    5. ' ):' → logprob: -9.877411842346191
    6. '):
' → logprob: -10.127411842346191
    7. '):

' → logprob: -11.127411842346191
    8. ':' → logprob: -12.002411842346191
    9. ' ):
' → logprob: -12.127411842346191
    10. '   ' → logprob: -12.627411842346191

Token 490: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6104347109794617
    2. 'return' → logprob: -1.3604347705841064
    3. ' return' → logprob: -1.6104347705841064
    4. 'a' → logprob: -7.860434532165527
    5. ' a' → logprob: -9.360434532165527
    6. '	return' → logprob: -10.610434532165527
    7. '    ' → logprob: -11.235434532165527
    8. ' ' → logprob: -11.860434532165527
    9. '    
' → logprob: -11.985434532165527
    10. 'def' → logprob: -12.610434532165527

Token 491: ' return' (ID: 622)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.06451549381017685
    2. ' a' → logprob: -2.8145155906677246
    3. ' return' → logprob: -6.564515590667725
    4. 'return' (adapté à ' return') → logprob: -7.314515590667725
    5. '(a' → logprob: -7.814515590667725
    6. ' (' → logprob: -9.689515113830566
    7. '   ' → logprob: -12.939515113830566
    8. ' ' → logprob: -14.439515113830566
    9. '	a' → logprob: -14.814515113830566
    10. '(' → logprob: -16.064516067504883

Token 492: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.08862587064504623
    2. ' a' → logprob: -2.588625907897949
    3. '(a' → logprob: -4.838625907897949
    4. ' (' → logprob: -6.338625907897949
    5. ' ' → logprob: -13.21362590789795
    6. '	a' → logprob: -14.08862590789795
    7. '(' → logprob: -14.21362590789795
    8. '   ' → logprob: -14.71362590789795
    9. '  ' → logprob: -15.46362590789795
    10. ' ' → logprob: -15.71362590789795

Token 493: '*b' (ID: 72162)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.09590679407119751
    2. ' *' → logprob: -3.0959067344665527
    3. '*a' → logprob: -3.0959067344665527
    4. '*(' → logprob: -7.720906734466553
    5. 'a' → logprob: -8.220907211303711
    6. '//' → logprob: -9.095907211303711
    7. '*l' → logprob: -9.220907211303711
    8. '*b' → logprob: -10.345907211303711
    9. ' //' → logprob: -11.595907211303711
    10. '(a' → logprob: -12.345907211303711

Token 494: '//' (ID: 393)
  Prédit: '//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.313273549079895
    2. ' //' → logprob: -1.313273549079895
    3. '#' → logprob: -11.438273429870605
    4. ' ' → logprob: -14.563273429870605
    5. ' ' → logprob: -15.313273429870605
    6. '```' → logprob: -16.313274383544922
    7. ' #' → logprob: -16.438274383544922
    8. '//=' → logprob: -17.313274383544922
    9. 'b' → logprob: -17.563274383544922
    10. '   ' → logprob: -17.688274383544922

Token 495: 'g' (ID: 70)
  Prédit: 'g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -3.128163257315464e-07
    2. ' gcd' → logprob: -15.5
    3. '   ' → logprob: -20.875
    4. 'gcc' → logprob: -22.0
    5. '_g' → logprob: -22.375
    6. '(g' → logprob: -22.5
    7. '	g' → logprob: -23.0
    8. 'b' → logprob: -23.375
    9. '```' → logprob: -23.625
    10. '/g' → logprob: -23.75

Token 496: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -0.00043102685594931245
    2. 'c' → logprob: -7.750431060791016
    3. 'cf' → logprob: -15.875431060791016
    4. 'cdn' → logprob: -16.000431060791016
    5. 'cdf' → logprob: -16.625431060791016
    6. '```' → logprob: -18.375431060791016
    7. 'cb' → logprob: -18.500431060791016
    8. '	cd' → logprob: -18.500431060791016
    9. '_cd' → logprob: -18.875431060791016
    10. 'cmath' → logprob: -19.125431060791016

Token 497: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.002479700604453683
    2. '(' → logprob: -6.002479553222656
    3. ' (' → logprob: -13.502479553222656
    4. 'a' → logprob: -13.627479553222656
    5. '(b' → logprob: -14.252479553222656
    6. '(
' → logprob: -15.377479553222656
    7. '(ab' → logprob: -15.627479553222656
    8. '<|end|>' → logprob: -15.877479553222656
    9. '((' → logprob: -16.127479553222656
    10. '(abs' → logprob: -16.252479553222656

Token 498: ',b' (ID: 17568)
  Prédit: ',b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',b' → logprob: -0.07012860476970673
    2. '(a' → logprob: -3.6951286792755127
    3. 'b' → logprob: -3.9451286792755127
    4. ',' → logprob: -4.445128440856934
    5. '(b' → logprob: -4.570128440856934
    6. '(' → logprob: -7.695128440856934
    7. 'a' → logprob: -7.820128440856934
    8. ',a' → logprob: -7.945128440856934
    9. ' ,' → logprob: -9.445128440856934
    10. ' b' → logprob: -9.445128440856934

Token 499: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007913224399089813
    2. '(a' → logprob: -4.882913112640381
    3. 'a' → logprob: -9.007913589477539
    4. '(' → logprob: -9.632913589477539
    5. ')a' → logprob: -9.757913589477539
    6. '(b' → logprob: -10.882913589477539
    7. 'b' → logprob: -11.007913589477539
    8. ')b' → logprob: -11.257913589477539
    9. ')
' → logprob: -12.757913589477539
    10. '<|end|>' → logprob: -12.757913589477539

Token 500: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 501: ' find' (ID: 1646)
  Prédit: ' find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' find' → logprob: -0.41816848516464233
    2. ' main' → logprob: -1.418168544769287
    3. 'find' → logprob: -3.043168544769287
    4. ' longest' → logprob: -4.168168544769287
    5. 'main' → logprob: -4.418168544769287
    6. ' count' → logprob: -4.668168544769287
    7. ' check' → logprob: -5.418168544769287
    8. 'count' → logprob: -6.043168544769287
    9. ' max' → logprob: -6.168168544769287
    10. ' is' → logprob: -6.168168544769287

Token 502: '_long' (ID: 42288)
  Prédit: '_max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.20644313097000122
    2. '_' → logprob: -2.8314430713653564
    3. '_sequence' → logprob: -2.8314430713653564
    4. '_long' → logprob: -3.5814430713653564
    5. '_sequences' → logprob: -3.7064430713653564
    6. '_unique' → logprob: -4.9564433097839355
    7. '_sub' → logprob: -5.7064433097839355
    8. '_word' → logprob: -6.3314433097839355
    9. '_best' → logprob: -7.2064433097839355
    10. '_pattern' → logprob: -7.4564433097839355

Token 503: 'est' (ID: 376)
  Prédit: 'est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -2.7133641196996905e-05
    2. 'es' → logprob: -11.75002670288086
    3. 'ests' → logprob: -12.87502670288086
    4. '
' → logprob: -13.12502670288086
    5. '_sequence' → logprob: -13.12502670288086
    6. 'gest' → logprob: -13.12502670288086
    7. '```' → logprob: -13.12502670288086
    8. '_sequences' → logprob: -13.87502670288086
    9. '   ' → logprob: -14.12502670288086
    10. 'e' → logprob: -14.25002670288086

Token 504: '_spell' (ID: 186925)
  Prédit: '_unique'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_unique' → logprob: -0.6795519590377808
    2. '_sequence' → logprob: -0.9295519590377808
    3. '_pal' → logprob: -2.6795520782470703
    4. '_sub' → logprob: -3.9295520782470703
    5. '_repeat' → logprob: -5.92955207824707
    6. '_' → logprob: -6.42955207824707
    7. '_word' → logprob: -6.67955207824707
    8. '_re' → logprob: -6.67955207824707
    9. '_duplicate' → logprob: -7.05455207824707
    10. '_run' → logprob: -7.67955207824707

Token 505: '(grid' (ID: 51818)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2776064872741699
    2. '(grid' → logprob: -1.77760648727417
    3. '(length' → logprob: -3.40260648727417
    4. '_length' → logprob: -4.02760648727417
    5. '_sequence' → logprob: -5.15260648727417
    6. '(word' → logprob: -5.40260648727417
    7. '(sequence' → logprob: -5.65260648727417
    8. '(h' → logprob: -6.40260648727417
    9. '():' → logprob: -6.65260648727417
    10. '("("' → logprob: -7.40260648727417

Token 506: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.492120155598968e-05
    2. ' ,' → logprob: -10.125064849853516
    3. '(grid' → logprob: -11.500064849853516
    4. '):' → logprob: -12.000064849853516
    5. ',h' → logprob: -12.500064849853516
    6. ',
' → logprob: -13.750064849853516
    7. '   ' → logprob: -13.875064849853516
    8. ',g' → logprob: -14.500064849853516
    9. ',row' → logprob: -14.750064849853516
    10. ',size' → logprob: -15.125064849853516

Token 507: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.01821795664727688
    2. ' h' → logprob: -4.018218040466309
    3. ')' → logprob: -10.518218040466309
    4. '   ' → logprob: -10.643218040466309
    5. '):
' → logprob: -12.143218040466309
    6. 'H' → logprob: -12.893218040466309
    7. ' ' → logprob: -13.643218040466309
    8. '	h' → logprob: -13.893218040466309
    9. 'length' → logprob: -13.893218040466309
    10. '):' → logprob: -13.893218040466309

Token 508: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008520012721419334
    2. ',w' → logprob: -4.883520126342773
    3. ' ,' → logprob: -7.008520126342773
    4. ',
' → logprob: -11.883520126342773
    5. 'w' → logprob: -13.383520126342773
    6. '_,' → logprob: -16.008520126342773
    7. ' w' → logprob: -16.258520126342773
    8. ',int' → logprob: -16.383520126342773
    9. ',\
' → logprob: -16.383520126342773
    10. ',width' → logprob: -16.633520126342773

Token 509: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.3132631182670593
    2. ' w' → logprob: -1.313263177871704
    3. '   ' → logprob: -14.063262939453125
    4. '
' → logprob: -15.063262939453125
    5. ' ' → logprob: -15.563262939453125
    6. '    ' → logprob: -16.938262939453125
    7. 'W' → logprob: -17.813262939453125
    8. ',' → logprob: -17.813262939453125
    9. '	w' → logprob: -17.813262939453125
    10. '  ' → logprob: -17.938262939453125

Token 510: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03291154280304909
    2. '):' → logprob: -3.532911539077759
    3. '):
' → logprob: -5.782911777496338
    4. ' ,' → logprob: -10.15791130065918
    5. '   ' → logprob: -11.90791130065918
    6. ',y' → logprob: -11.90791130065918
    7. 'def' → logprob: -12.65791130065918
    8. ')' → logprob: -12.78291130065918
    9. '):
' → logprob: -13.15791130065918
    10. ',
' → logprob: -13.15791130065918

Token 511: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005614925175905228
    2. ' max' → logprob: -7.875561714172363
    3. 'max' → logprob: -9.125561714172363
    4. ' longest' → logprob: -10.375561714172363
    5. ' length' → logprob: -11.125561714172363
    6. '```' → logprob: -11.625561714172363
    7. 'maxlength' → logprob: -12.125561714172363
    8. '    ' → logprob: -12.875561714172363
    9. '
' → logprob: -13.250561714172363
    10. '    
' → logprob: -13.500561714172363

Token 512: ' found' (ID: 2491)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.20882612466812134
    2. 'max' → logprob: -2.2088260650634766
    3. '   ' → logprob: -2.7088260650634766
    4. ' best' → logprob: -4.708826065063477
    5. 'best' → logprob: -6.458826065063477
    6. ' longest' → logprob: -6.708826065063477
    7. ' length' → logprob: -9.708826065063477
    8. ' res' → logprob: -9.958826065063477
    9. 'long' → logprob: -9.958826065063477
    10. ' result' → logprob: -10.583826065063477

Token 513: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8788302540779114
    2. '_length' → logprob: -1.0038301944732666
    3. '_max' → logprob: -2.1288301944732666
    4. '_len' → logprob: -3.2538301944732666
    5. ' =' → logprob: -3.5038301944732666
    6. '=' → logprob: -3.6288301944732666
    7. 'max' → logprob: -6.128830432891846
    8. '_long' → logprob: -7.003830432891846
    9. '   ' → logprob: -8.503829956054688
    10. '_best' → logprob: -8.628829956054688

Token 514: ' {}
' (ID: 11421)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.27181676030158997
    2. ' ' → logprob: -2.2718167304992676
    3. '""' → logprob: -2.2718167304992676
    4. ' ""' → logprob: -4.021816730499268
    5. '"' → logprob: -4.646816730499268
    6. ' ""
' → logprob: -6.021816730499268
    7. '   ' → logprob: -7.021816730499268
    8. '''' → logprob: -7.771816730499268
    9. ' None' → logprob: -9.396817207336426
    10. '(' → logprob: -9.771817207336426

Token 515: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0015087933279573917
    2. '
' → logprob: -6.876508712768555
    3. '    
' → logprob: -8.001508712768555
    4. ' for' → logprob: -9.876508712768555
    5. 'for' → logprob: -10.001508712768555
    6. 'max' → logprob: -11.251508712768555
    7. '```' → logprob: -12.001508712768555
    8. ' max' → logprob: -12.376508712768555
    9. 'maxlength' → logprob: -12.376508712768555
    10. ',' → logprob: -13.001508712768555

Token 516: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.691589891910553
    2. ' max' → logprob: -1.5665898323059082
    3. 'for' → logprob: -2.191589832305908
    4. ' for' → logprob: -2.941589832305908
    5. '   ' → logprob: -3.066589832305908
    6. 'long' → logprob: -3.691589832305908
    7. ' longest' → logprob: -3.816589832305908
    8. 'best' → logprob: -4.316589832305908
    9. 'result' → logprob: -4.816589832305908
    10. ' best' → logprob: -5.941589832305908

Token 517: '_len' (ID: 13683)
  Prédit: '_length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.3875429928302765
    2. '_len' → logprob: -1.137542963027954
    3. '_' → logprob: -7.512543201446533
    4. 'len' → logprob: -9.137542724609375
    5. '_l' → logprob: -12.137542724609375
    6. '_seq' → logprob: -12.762542724609375
    7. 'length' → logprob: -13.012542724609375
    8. '_max' → logprob: -13.387542724609375
    9. '_spell' → logprob: -13.512542724609375
    10. '_sequence' → logprob: -14.262542724609375

Token 518: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06234128773212433
    2. ' =' → logprob: -3.0623412132263184
    3. '_' → logprob: -4.437341213226318
    4. '_=' → logprob: -6.437341213226318
    5. ',' → logprob: -9.187341690063477
    6. '   ' → logprob: -9.812341690063477
    7. ')' → logprob: -10.937341690063477
    8. ' ' → logprob: -11.187341690063477
    9. '_found' → logprob: -11.312341690063477
    10. '_,' → logprob: -12.187341690063477

Token 519: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.038046542555093765
    2. ' ' → logprob: -3.2880465984344482
    3. '   ' → logprob: -12.288046836853027
    4. '  ' → logprob: -15.788046836853027
    5. '1' → logprob: -15.913046836853027
    6. ' ' → logprob: -16.28804588317871
    7. '    ' → logprob: -16.41304588317871
    8. '=' → logprob: -17.78804588317871
    9. ' -' → logprob: -18.03804588317871
    10. '```' → logprob: -18.28804588317871

Token 520: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.9040898880339228e-05
    2. ' ' → logprob: -10.500028610229492
    3. '-' → logprob: -13.500028610229492
    4. '1' → logprob: -17.750028610229492
    5. '   ' → logprob: -18.375028610229492
    6. ' -' → logprob: -18.750028610229492
    7. '"' → logprob: -18.875028610229492
    8. '(' → logprob: -19.375028610229492
    9. '```' → logprob: -19.500028610229492
    10. '  ' → logprob: -20.250028610229492

Token 521: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20335164666175842
    2. '
' → logprob: -1.703351616859436
    3. '    
' → logprob: -6.4533514976501465
    4. ',' → logprob: -8.328351974487305
    5. ' for' → logprob: -10.203351974487305
    6. ',
' → logprob: -11.328351974487305
    7. 'for' → logprob: -11.328351974487305
    8. 'max' → logprob: -11.453351974487305
    9. '
' → logprob: -12.078351974487305
    10. ' max' → logprob: -12.203351974487305

Token 522: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3647644817829132
    2. '
' → logprob: -1.2397644519805908
    3. '    
' → logprob: -4.36476469039917
    4. ' for' → logprob: -6.48976469039917
    5. ' 
' → logprob: -7.36476469039917
    6. '<|end|>' → logprob: -7.48976469039917
    7. ',' → logprob: -8.239764213562012
    8. '	
' → logprob: -9.114764213562012
    9. 'for' → logprob: -9.614764213562012
    10. '  
' → logprob: -9.864764213562012

Token 523: ' results' (ID: 4376)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.23056598007678986
    2. 'result' → logprob: -2.4805660247802734
    3. ' for' → logprob: -3.1055660247802734
    4. 'max' → logprob: -3.1055660247802734
    5. 'res' → logprob: -4.730566024780273
    6. ' result' → logprob: -5.105566024780273
    7. ' max' → logprob: -5.230566024780273
    8. 'best' → logprob: -5.230566024780273
    9. 'start' → logprob: -6.230566024780273
    10. ' res' → logprob: -6.605566024780273

Token 524: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2014571875333786
    2. '=' → logprob: -1.701457142829895
    3. '=[]' → logprob: -10.951457023620605
    4. '   ' → logprob: -11.826457023620605
    5. '[]' → logprob: -12.076457023620605
    6. ',' → logprob: -12.451457023620605
    7. '={}' → logprob: -12.451457023620605
    8. ' ' → logprob: -13.701457023620605
    9. ':' → logprob: -14.076457023620605
    10. '[:]' → logprob: -14.076457023620605

Token 525: ' set' (ID: 920)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.4044243097305298
    2. '[]' → logprob: -1.1544243097305298
    3. ' set' → logprob: -4.52942419052124
    4. 'set' → logprob: -5.65442419052124
    5. '{}' → logprob: -6.15442419052124
    6. ' {}' → logprob: -7.27942419052124
    7. ' []
' → logprob: -8.654424667358398
    8. '[]
' → logprob: -9.654424667358398
    9. ' ' → logprob: -10.654424667358398
    10. '   ' → logprob: -11.404424667358398

Token 526: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0031981545034796
    2. '()
' → logprob: -5.753198146820068
    3. '(' → logprob: -11.753198623657227
    4. '()

' → logprob: -12.253198623657227
    5. '()\' → logprob: -12.253198623657227
    6. '()
' → logprob: -13.253198623657227
    7. '()`' → logprob: -15.003198623657227
    8. '()]' → logprob: -15.128198623657227
    9. ' ()' → logprob: -15.503198623657227
    10. '()"' → logprob: -16.128198623657227

Token 527: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004163995385169983
    2. '
' → logprob: -6.129164218902588
    3. '    
' → logprob: -6.254164218902588
    4. ' for' → logprob: -11.37916374206543
    5. '```' → logprob: -11.62916374206543
    6. '  
' → logprob: -11.75416374206543
    7. '<|end|>' → logprob: -12.12916374206543
    8. 'for' → logprob: -12.37916374206543
    9. ' 
' → logprob: -12.50416374206543
    10. '	
' → logprob: -12.62916374206543

Token 528: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1433320939540863
    2. ' for' → logprob: -2.393332004547119
    3. '
' → logprob: -3.268332004547119
    4. 'for' (adapté à ' for') → logprob: -5.643332004547119
    5. '    
' → logprob: -7.768332004547119
    6. ' 
' → logprob: -9.018332481384277
    7. '	for' → logprob: -11.268332481384277
    8. ' ' → logprob: -11.643332481384277
    9. '   
' → logprob: -11.643332481384277
    10. '  
' → logprob: -12.018332481384277

Token 529: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.47452133893966675
    2. ' x' → logprob: -0.9745213389396667
    3. ' i' → logprob: -8.47452163696289
    4. 'i' → logprob: -8.72452163696289
    5. '   ' → logprob: -10.59952163696289
    6. ' dx' → logprob: -10.84952163696289
    7. 'dx' → logprob: -11.84952163696289
    8. ' ' → logprob: -11.97452163696289
    9. '	x' → logprob: -12.47452163696289
    10. ' direction' → logprob: -12.59952163696289

Token 530: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.023291366174817085
    2. 'in' → logprob: -3.7732913494110107
    3. ' ' → logprob: -10.77329158782959
    4. ',' → logprob: -11.89829158782959
    5. '	in' → logprob: -12.39829158782959
    6. '   ' → logprob: -12.52329158782959
    7. '0' → logprob: -12.89829158782959
    8. ')' → logprob: -13.27329158782959
    9. 'range' → logprob: -13.27329158782959
    10. 'import' → logprob: -14.14829158782959

Token 531: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.10020720958709717
    2. ' range' → logprob: -2.3502073287963867
    3. ' ' → logprob: -15.100207328796387
    4. '   ' → logprob: -16.85020637512207
    5. 'r' → logprob: -17.10020637512207
    6. '0' → logprob: -17.60020637512207
    7. ')' → logprob: -17.85020637512207
    8. '	range' → logprob: -18.47520637512207
    9. '  ' → logprob: -18.97520637512207
    10. '
' → logprob: -19.22520637512207

Token 532: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.00017839208885561675
    2. 'h' → logprob: -8.750178337097168
    3. '(' → logprob: -11.250178337097168
    4. ' (' → logprob: -12.250178337097168
    5. ' h' → logprob: -13.250178337097168
    6. ',h' → logprob: -15.500178337097168
    7. '(
' → logprob: -16.625179290771484
    8. '   ' → logprob: -17.125179290771484
    9. ',' → logprob: -17.125179290771484
    10. '	h' → logprob: -17.250179290771484

Token 533: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.07031996548175812
    2. '):' → logprob: -2.695319890975952
    3. '   ' → logprob: -7.945320129394531
    4. '):
' → logprob: -11.570320129394531
    5. ')' → logprob: -12.070320129394531
    6. ':' → logprob: -12.695320129394531
    7. ':
' → logprob: -12.820320129394531
    8. '):

' → logprob: -12.945320129394531
    9. '       ' → logprob: -13.570320129394531
    10. ' ):
' → logprob: -14.070320129394531

Token 534: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02227630838751793
    2. ' for' → logprob: -3.8972764015197754
    3. '<|end|>' → logprob: -6.772276401519775
    4. '   ' → logprob: -8.022275924682617
    5. 'for' → logprob: -9.772275924682617
    6. '	   ' → logprob: -9.897275924682617
    7. '	for' → logprob: -10.147275924682617
    8. ',' → logprob: -10.397275924682617
    9. '<|end|>' → logprob: -10.772275924682617
    10. '	' → logprob: -11.772275924682617

Token 535: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.203107088804245
    2. 'for' (adapté à ' for') → logprob: -2.0781071186065674
    3. ' y' → logprob: -3.7031071186065674
    4. '   ' → logprob: -4.328106880187988
    5. ' w' → logprob: -4.578106880187988
    6. 'y' → logprob: -5.078106880187988
    7. '       ' → logprob: -5.953106880187988
    8. 'w' → logprob: -6.453106880187988
    9. ' ' → logprob: -9.953106880187988
    10. '           ' → logprob: -10.453106880187988

Token 536: ' y' (ID: 342)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.020956752821803093
    2. ' w' → logprob: -4.020956516265869
    3. 'y' → logprob: -6.020956516265869
    4. ' y' → logprob: -7.895956516265869
    5. '0' → logprob: -13.020956993103027
    6. '   ' → logprob: -14.520956993103027
    7. ' ' → logprob: -15.395956993103027
    8. ' range' → logprob: -15.520956993103027
    9. 'x' → logprob: -15.895956993103027
    10. 'range' → logprob: -17.27095603942871

Token 537: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.009774390608072281
    2. 'in' → logprob: -4.634774208068848
    3. '   ' → logprob: -11.384774208068848
    4. ' ' → logprob: -12.634774208068848
    5. '       ' → logprob: -13.509774208068848
    6. '    ' → logprob: -14.009774208068848
    7. '        ' → logprob: -14.884774208068848
    8. '(' → logprob: -15.134774208068848
    9. ')' → logprob: -15.134774208068848
    10. ',' → logprob: -15.759774208068848

Token 538: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.16124548017978668
    2. ' range' → logprob: -1.9112454652786255
    3. 'w' → logprob: -6.911245346069336
    4. ' w' → logprob: -10.661245346069336
    5. '(range' → logprob: -14.161245346069336
    6. '(w' → logprob: -15.536245346069336
    7. ' ' → logprob: -18.536245346069336
    8. '   ' → logprob: -19.411245346069336
    9. '	range' → logprob: -19.661245346069336
    10. '<w' → logprob: -19.661245346069336

Token 539: '(w' (ID: 7420)
  Prédit: '(w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -0.04357043281197548
    2. 'w' → logprob: -3.1685705184936523
    3. '(' → logprob: -8.418570518493652
    4. ' (' → logprob: -8.668570518493652
    5. ' w' → logprob: -8.793570518493652
    6. '0' → logprob: -11.543570518493652
    7. '   ' → logprob: -12.293570518493652
    8. 'range' → logprob: -12.793570518493652
    9. '	w' → logprob: -12.918570518493652
    10. '       ' → logprob: -13.168570518493652

Token 540: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.3496667742729187
    2. '):' → logprob: -1.2246668338775635
    3. ':' → logprob: -7.724666595458984
    4. '       ' → logprob: -8.099666595458984
    5. ')' → logprob: -8.974666595458984
    6. '           ' → logprob: -9.099666595458984
    7. ':
' → logprob: -9.349666595458984
    8. '   ' → logprob: -9.599666595458984
    9. ',' → logprob: -10.599666595458984
    10. '):
' → logprob: -10.724666595458984

Token 541: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0002636006975080818
    2. ' for' → logprob: -8.500263214111328
    3. '               ' → logprob: -10.375263214111328
    4. ',' → logprob: -12.125263214111328
    5. '	       ' → logprob: -12.375263214111328
    6. '       ' → logprob: -12.875263214111328
    7. 'for' → logprob: -13.000263214111328
    8. ':' → logprob: -13.250263214111328
    9. '                   ' → logprob: -13.375263214111328
    10. '
' → logprob: -13.375263214111328

Token 542: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.08561398088932037
    2. 'for' (adapté à ' for') → logprob: -2.960613965988159
    3. '               ' → logprob: -3.710613965988159
    4. '           ' → logprob: -5.960614204406738
    5. '       ' → logprob: -6.085614204406738
    6. '   ' → logprob: -7.210614204406738
    7. ' ' → logprob: -9.210614204406738
    8. '	for' → logprob: -9.835614204406738
    9. ' ' → logprob: -10.710614204406738
    10. '	       ' → logprob: -11.960614204406738

Token 543: ' dx' (ID: 29472)
  Prédit: ' dx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dx' → logprob: -0.41221675276756287
    2. 'dx' → logprob: -1.1622167825698853
    3. '(dx' → logprob: -3.7872166633605957
    4. ' (' → logprob: -6.912216663360596
    5. ' direction' → logprob: -7.537216663360596
    6. 'direction' → logprob: -8.287217140197754
    7. '(' → logprob: -8.662217140197754
    8. '   ' → logprob: -8.787217140197754
    9. 'd' → logprob: -9.412217140197754
    10. '(d' → logprob: -10.287217140197754

Token 544: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005470201838761568
    2. 'in' → logprob: -5.505470275878906
    3. ',' → logprob: -6.755470275878906
    4. ' ,' → logprob: -9.005470275878906
    5. '   ' → logprob: -10.255470275878906
    6. '	in' → logprob: -11.130470275878906
    7. ' ' → logprob: -11.130470275878906
    8. '    ' → logprob: -11.755470275878906
    9. ')' → logprob: -12.130470275878906
    10. '0' → logprob: -12.505470275878906

Token 545: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.3133261799812317
    2. ' dy' → logprob: -1.313326120376587
    3. '<|end|>' → logprob: -10.063325881958008
    4. ' (' → logprob: -12.063325881958008
    5. ' ' → logprob: -12.438325881958008
    6. 'd' → logprob: -12.813325881958008
    7. '.dy' → logprob: -12.938325881958008
    8. '(' → logprob: -13.188325881958008
    9. 'dire' → logprob: -14.188325881958008
    10. 'dyr' → logprob: -14.188325881958008

Token 546: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.009814057499170303
    2. 'in' → logprob: -4.634814262390137
    3. '<|end|>' → logprob: -10.134814262390137
    4. '   ' → logprob: -12.384814262390137
    5. ')' → logprob: -12.634814262390137
    6. ' ' → logprob: -13.009814262390137
    7. '	in' → logprob: -13.259814262390137
    8. '<|end|>' → logprob: -13.634814262390137
    9. '):
' → logprob: -13.759814262390137
    10. ',' → logprob: -13.759814262390137

Token 547: ' directions' (ID: 24921)
  Prédit: 'dire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dire' → logprob: -0.0040785204619169235
    2. ' directions' → logprob: -5.504078388214111
    3. 'irections' → logprob: -16.254077911376953
    4. 'direct' → logprob: -17.379077911376953
    5. 'direction' → logprob: -17.629077911376953
    6. 'd' → logprob: -18.879077911376953
    7. ' ' → logprob: -19.504077911376953
    8. '[' → logprob: -19.504077911376953
    9. '   ' → logprob: -19.629077911376953
    10. '```' → logprob: -19.879077911376953

Token 548: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.21004828810691833
    2. ':
' → logprob: -1.7100483179092407
    3. '               ' → logprob: -5.085048198699951
    4. '):
' → logprob: -7.210048198699951
    5. '<|end|>' → logprob: -7.460048198699951
    6. '           ' → logprob: -7.710048198699951
    7. '       ' → logprob: -8.71004867553711
    8. '                       ' → logprob: -9.33504867553711
    9. '():
' → logprob: -9.58504867553711
    10. ',' → logprob: -9.58504867553711

Token 549: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0012139255413785577
    2. '                
' → logprob: -7.126214027404785
    3. '           ' → logprob: -9.001214027404785
    4. '<|end|>' → logprob: -9.751214027404785
    5. '                ' → logprob: -10.376214027404785
    6. '                   ' → logprob: -10.626214027404785
    7. '              ' → logprob: -10.876214027404785
    8. ':' → logprob: -11.001214027404785
    9. '            
' → logprob: -11.126214027404785
    10. '                               ' → logprob: -11.376214027404785

Token 550: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.625194251537323
    2. 'max' (adapté à ' max') → logprob: -1.1251943111419678
    3. '                   ' → logprob: -3.1251943111419678
    4. ' length' → logprob: -3.2501943111419678
    5. 'length' → logprob: -3.8751943111419678
    6. 'for' → logprob: -4.625194072723389
    7. ' for' → logprob: -4.875194072723389
    8. '   ' → logprob: -5.500194072723389
    9. 'len' → logprob: -6.250194072723389
    10. 'step' → logprob: -6.500194072723389

Token 551: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -0.014383620582520962
    2. '_length' → logprob: -4.264383792877197
    3. '_' → logprob: -9.139383316040039
    4. 'len' → logprob: -9.889383316040039
    5. '_val' → logprob: -11.264383316040039
    6. '_l' → logprob: -11.514383316040039
    7. ' _' → logprob: -11.889383316040039
    8. '_seq' → logprob: -12.014383316040039
    9. '_token' → logprob: -12.139383316040039
    10. '=_' → logprob: -12.764383316040039

Token 552: '_dir' (ID: 9526)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09293755888938904
    2. '=' → logprob: -2.467937469482422
    3. '_no' → logprob: -6.217937469482422
    4. ' ' → logprob: -7.342937469482422
    5. '_' → logprob: -7.467937469482422
    6. '_possible' → logprob: -8.092937469482422
    7. '_=' → logprob: -9.467937469482422
    8. '=max' → logprob: -10.092937469482422
    9. 'no' → logprob: -10.092937469482422
    10. 'No' → logprob: -10.842937469482422

Token 553: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08904340863227844
    2. '=' → logprob: -2.464043378829956
    3. ' ' → logprob: -9.714043617248535
    4. '   ' → logprob: -11.089043617248535
    5. ',' → logprob: -11.339043617248535
    6. '=max' → logprob: -12.339043617248535
    7. ')' → logprob: -12.839043617248535
    8. '    ' → logprob: -13.714043617248535
    9. '<|end|>' → logprob: -13.714043617248535
    10. '  ' → logprob: -13.714043617248535

Token 554: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.10021001845598221
    2. 'max' → logprob: -2.350209951400757
    3. ' min' → logprob: -13.725210189819336
    4. '(max' → logprob: -13.975210189819336
    5. '_max' → logprob: -15.225210189819336
    6. '	max' → logprob: -15.350210189819336
    7. ' no' → logprob: -15.475210189819336
    8. '0' → logprob: -15.850210189819336
    9. ' ' → logprob: -16.100210189819336
    10. '=max' → logprob: -16.225210189819336

Token 555: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -6.704273118884885e-07
    2. 'len' → logprob: -15.375000953674316
    3. '_max' → logprob: -16.625
    4. '(_' → logprob: -16.625
    5. '_' → logprob: -17.625
    6. ' _' → logprob: -17.625
    7. 'max' → logprob: -17.875
    8. '(len' → logprob: -17.875
    9. '(max' → logprob: -18.125
    10. '_LEN' → logprob: -18.75

Token 556: '_no' (ID: 13575)
  Prédit: '_no'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_no' → logprob: -6.630610641877865e-06
    2. 'no' → logprob: -12.125006675720215
    3. '(no' → logprob: -15.625006675720215
    4. 'No' → logprob: -15.750006675720215
    5. ' no' → logprob: -15.875006675720215
    6. '```' → logprob: -16.0000057220459
    7. '+' → logprob: -16.1250057220459
    8. '_not' → logprob: -16.2500057220459
    9. '   ' → logprob: -16.6250057220459
    10. ',no' → logprob: -17.1250057220459

Token 557: '_overlap' (ID: 179163)
  Prédit: '_overlap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_overlap' → logprob: -2.9875325708417222e-05
    2. 'over' → logprob: -10.750029563903809
    3. '_over' → logprob: -12.375029563903809
    4. '_no' → logprob: -12.750029563903809
    5. ' overlap' → logprob: -15.250029563903809
    6. 'Overlap' → logprob: -15.375029563903809
    7. '_override' → logprob: -15.625029563903809
    8. 'no' → logprob: -16.125030517578125
    9. '_' → logprob: -16.875030517578125
    10. '(over' → logprob: -17.125030517578125

Token 558: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -5.080963092041202e-06
    2. '(' → logprob: -12.500004768371582
    3. ' (' → logprob: -14.000004768371582
    4. '```' → logprob: -15.000004768371582
    5. '(
' → logprob: -16.2500057220459
    6. 'h' → logprob: -17.5000057220459
    7. '   ' → logprob: -18.2500057220459
    8. '[h' → logprob: -19.2500057220459
    9. ' ' → logprob: -19.8750057220459
    10. '=' → logprob: -20.2500057220459

Token 559: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011087790131568909
    2. ',w' → logprob: -4.511087894439697
    3. ',
' → logprob: -10.886087417602539
    4. ' ,' → logprob: -11.011087417602539
    5. 'w' → logprob: -12.511087417602539
    6. ',d' → logprob: -15.636087417602539
    7. ' w' → logprob: -15.886087417602539
    8. '   ' → logprob: -16.01108741760254
    9. ',

' → logprob: -16.51108741760254
    10. '               ' → logprob: -16.88608741760254

Token 560: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.001170225441455841
    2. ' w' → logprob: -6.7511701583862305
    3. '   ' → logprob: -18.251171112060547
    4. ' ' → logprob: -19.126171112060547
    5. '	w' → logprob: -19.376171112060547
    6. '<w' → logprob: -20.376171112060547
    7. '    ' → logprob: -21.251171112060547
    8. '  ' → logprob: -21.501171112060547
    9. ',w' → logprob: -21.876171112060547
    10. '```' → logprob: -22.001171112060547

Token 561: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00016229959146585315
    2. ' ,' → logprob: -8.750162124633789
    3. ',
' → logprob: -13.375162124633789
    4. '   ' → logprob: -14.250162124633789
    5. '                   ' → logprob: -14.750162124633789
    6. '               ' → logprob: -14.875162124633789
    7. '(dx' → logprob: -14.875162124633789
    8. ',d' → logprob: -15.625162124633789
    9. ')' → logprob: -16.62516212463379
    10. '```' → logprob: -17.62516212463379

Token 562: ' dx' (ID: 29472)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.02975395694375038
    2. ' dx' → logprob: -3.5297539234161377
    3. '(dx' → logprob: -13.279753684997559
    4. '_dx' → logprob: -14.154753684997559
    5. '   ' → logprob: -14.779753684997559
    6. 'd' → logprob: -15.154753684997559
    7. ' ' → logprob: -16.279754638671875
    8. '
' → logprob: -16.779754638671875
    9. ')' → logprob: -17.029754638671875
    10. '.dx' → logprob: -17.029754638671875

Token 563: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00016718693950679153
    2. ' ,' → logprob: -8.750166893005371
    3. '               ' → logprob: -12.750166893005371
    4. ',
' → logprob: -13.000166893005371
    5. ',d' → logprob: -13.000166893005371
    6. '                   ' → logprob: -14.875166893005371
    7. '‌,' → logprob: -15.750166893005371
    8. '```' → logprob: -16.375167846679688
    9. '   ' → logprob: -16.500167846679688
    10. ',y' → logprob: -16.625167846679688

Token 564: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.0001234428636962548
    2. ' dy' → logprob: -9.000123023986816
    3. '.dy' → logprob: -21.625123977661133
    4. '   ' → logprob: -22.875123977661133
    5. 'd' → logprob: -23.375123977661133
    6. 'Dy' → logprob: -23.500123977661133
    7. ' ' → logprob: -24.000123977661133
    8. 'dym' → logprob: -24.250123977661133
    9. 'dx' → logprob: -24.500123977661133
    10. 'dyr' → logprob: -24.750123977661133

Token 565: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.43926891684532166
    2. ')' → logprob: -1.064268946647644
    3. '               ' → logprob: -4.564269065856934
    4. ')
' → logprob: -10.064269065856934
    5. ',' → logprob: -11.314269065856934
    6. '
' → logprob: -11.564269065856934
    7. ')

' → logprob: -12.439269065856934
    8. ' )
' → logprob: -12.689269065856934
    9. '   ' → logprob: -12.814269065856934
    10. ' ' → logprob: -12.814269065856934

Token 566: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.003127806121483445
    2. '                
' → logprob: -6.753127574920654
    3. '<|end|>' → logprob: -6.753127574920654
    4. ' for' → logprob: -8.253128051757812
    5. '
' → logprob: -8.378128051757812
    6. ',' → logprob: -9.628128051757812
    7. '```' → logprob: -9.628128051757812
    8. '<|end|>' → logprob: -10.128128051757812
    9. ' 
' → logprob: -11.378128051757812
    10. ' token' → logprob: -11.503128051757812

Token 567: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.09017021209001541
    2. ' for' → logprob: -2.46517014503479
    3. 'length' → logprob: -6.965170383453369
    4. '               ' → logprob: -8.590169906616211
    5. ' length' → logprob: -9.840169906616211
    6. 'if' → logprob: -10.590169906616211
    7. '```' → logprob: -12.215169906616211
    8. 'token' → logprob: -12.465169906616211
    9. ' if' → logprob: -12.590169906616211
    10. '                   ' → logprob: -12.590169906616211

Token 568: ' minimal' (ID: 19957)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.005584598984569311
    2. ' for' → logprob: -5.380584716796875
    3. 'length' → logprob: -7.005584716796875
    4. '               ' → logprob: -10.005584716796875
    5. ' length' → logprob: -12.880584716796875
    6. 'if' → logprob: -12.880584716796875
    7. '```' → logprob: -13.505584716796875
    8. '                
' → logprob: -14.130584716796875
    9. 'token' → logprob: -14.130584716796875
    10. '                   ' → logprob: -14.255584716796875

Token 569: ' length' (ID: 5517)
  Prédit: '_len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -1.1667637825012207
    2. ' for' → logprob: -1.9167637825012207
    3. '_length' → logprob: -1.9167637825012207
    4. ' length' → logprob: -2.1667637825012207
    5. 'for' → logprob: -2.4167637825012207
    6. 'length' → logprob: -3.2917637825012207
    7. '_seq' → logprob: -3.5417637825012207
    8. ' max' → logprob: -3.6667637825012207
    9. 'max' → logprob: -3.6667637825012207
    10. '               ' → logprob: -4.541763782501221

Token 570: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.400038480758667
    2. '=' → logprob: -1.150038480758667
    3. '               ' → logprob: -4.900038719177246
    4. 'for' → logprob: -6.025038719177246
    5. ' for' → logprob: -6.775038719177246
    6. 'from' → logprob: -7.525038719177246
    7. 'token' → logprob: -8.525038719177246
    8. '+' → logprob: -8.775038719177246
    9. ',' → logprob: -9.025038719177246
    10. '<|end|>' → logprob: -9.025038719177246

Token 571: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.06065242737531662
    2. '2' → logprob: -2.935652494430542
    3. ' ' → logprob: -5.185652256011963
    4. '   ' → logprob: -9.935652732849121
    5. '               ' → logprob: -10.060652732849121
    6. '3' → logprob: -10.560652732849121
    7. 'max' → logprob: -11.185652732849121
    8. '                   ' → logprob: -12.185652732849121
    9. ' max' → logprob: -12.310652732849121
    10. '```' → logprob: -13.185652732849121

Token 572: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4754960536956787
    2. '2' → logprob: -0.9754960536956787
    3. '3' → logprob: -7.350496292114258
    4. 'max' → logprob: -7.600496292114258
    5. ' ' → logprob: -8.600496292114258
    6. '   ' → logprob: -9.850496292114258
    7. ' max' → logprob: -11.725496292114258
    8. '```' → logprob: -12.225496292114258
    9. 'len' → logprob: -12.725496292114258
    10. '
' → logprob: -12.725496292114258

Token 573: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.001479505910538137
    2. ' for' → logprob: -6.751479625701904
    3. '<|end|>' → logprob: -8.751479148864746
    4. '                
' → logprob: -9.501479148864746
    5. 'for' → logprob: -10.501479148864746
    6. ',' → logprob: -10.876479148864746
    7. '<|end|>' → logprob: -11.876479148864746
    8. '              ' → logprob: -12.126479148864746
    9. '                ' → logprob: -12.376479148864746
    10. '
' → logprob: -12.626479148864746

Token 574: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0015460490249097347
    2. '<|end|>' → logprob: -7.3765459060668945
    3. '                
' → logprob: -7.6265459060668945
    4. ' for' → logprob: -8.251545906066895
    5. ',' → logprob: -9.751545906066895
    6. '  
' → logprob: -11.001545906066895
    7. ' 
' → logprob: -11.126545906066895
    8. '                ' → logprob: -11.251545906066895
    9. '<|end|>' → logprob: -11.251545906066895
    10. ' and' → logprob: -11.501545906066895

Token 575: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.702929675579071
    2. 'for' (adapté à ' for') → logprob: -0.702929675579071
    3. '               ' → logprob: -4.952929496765137
    4. 'length' → logprob: -6.327929496765137
    5. ' length' → logprob: -7.077929496765137
    6. 'len' → logprob: -11.827929496765137
    7. ' if' → logprob: -11.952929496765137
    8. 'if' → logprob: -12.327929496765137
    9. ' min' → logprob: -12.827929496765137
    10. '```' → logprob: -12.827929496765137

Token 576: ' length' (ID: 5517)
  Prédit: ' length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' length' → logprob: -0.5764979124069214
    2. 'length' → logprob: -0.8264979124069214
    3. 'l' → logprob: -7.701498031616211
    4. ' l' → logprob: -9.451498031616211
    5. 'leng' → logprob: -12.201498031616211
    6. 'seq' → logprob: -12.326498031616211
    7. 'L' → logprob: -12.576498031616211
    8. '	length' → logprob: -13.076498031616211
    9. '   ' → logprob: -13.326498031616211
    10. ' seq' → logprob: -13.326498031616211

Token 577: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0040807779878377914
    2. 'in' → logprob: -5.504080772399902
    3. ' ' → logprob: -13.379080772399902
    4. '	in' → logprob: -14.629080772399902
    5. '```' → logprob: -16.50408172607422
    6. ' ' → logprob: -16.50408172607422
    7. '=' → logprob: -16.75408172607422
    8. 'n' → logprob: -17.12908172607422
    9. '_in' → logprob: -17.25408172607422
    10. ',' → logprob: -17.50408172607422

Token 578: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.16022849082946777
    2. ' range' → logprob: -1.9102284908294678
    3. ' ' → logprob: -13.285228729248047
    4. '(range' → logprob: -13.660228729248047
    5. '   ' → logprob: -14.285228729248047
    6. '	range' → logprob: -14.535228729248047
    7. '2' → logprob: -15.410228729248047
    8. '  ' → logprob: -16.410228729248047
    9. '    ' → logprob: -18.035228729248047
    10. '[' → logprob: -18.285228729248047

Token 579: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.003656722605228424
    2. '2' → logprob: -5.62865686416626
    3. ' (' → logprob: -10.878656387329102
    4. '                   ' → logprob: -11.128656387329102
    5. ' ' → logprob: -11.378656387329102
    6. '               ' → logprob: -11.753656387329102
    7. '(
' → logprob: -13.378656387329102
    8. '                       ' → logprob: -14.378656387329102
    9. '                               ' → logprob: -14.753656387329102
    10. '   ' → logprob: -15.628656387329102

Token 580: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.8074162653647363e-05
    2. ' ' → logprob: -11.000018119812012
    3. '   ' → logprob: -13.625018119812012
    4. '
' → logprob: -17.000017166137695
    5. '  ' → logprob: -17.750017166137695
    6. ')' → logprob: -18.500017166137695
    7. '    ' → logprob: -18.625017166137695
    8. '           ' → logprob: -18.750017166137695
    9. '               ' → logprob: -19.000017166137695
    10. '                   ' → logprob: -19.125017166137695

Token 581: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005222928593866527
    2. ',max' → logprob: -8.00052261352539
    3. ' ,' → logprob: -8.62552261352539
    4. ',length' → logprob: -12.50052261352539
    5. ',
' → logprob: -13.50052261352539
    6. ',len' → logprob: -13.87552261352539
    7. ',min' → logprob: -14.12552261352539
    8. '   ' → logprob: -15.75052261352539
    9. ',num' → logprob: -16.75052261352539
    10. ',m' → logprob: -16.87552261352539

Token 582: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0007100477814674377
    2. ' max' → logprob: -7.2507100105285645
    3. '(max' → logprob: -16.875709533691406
    4. '                   ' → logprob: -17.125709533691406
    5. '               ' → logprob: -18.625709533691406
    6. '[max' → logprob: -18.750709533691406
    7. '	max' → logprob: -18.750709533691406
    8. 'min' → logprob: -19.000709533691406
    9. '_max' → logprob: -19.625709533691406
    10. '```' → logprob: -19.875709533691406

Token 583: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -4.320199877838604e-07
    2. 'len' → logprob: -15.125
    3. '_l' → logprob: -16.875
    4. '_' → logprob: -17.375
    5. '_max' → logprob: -18.0
    6. '_LEN' → logprob: -18.25
    7. '_dir' → logprob: -18.375
    8. '(len' → logprob: -18.5
    9. 'Len' → logprob: -18.625
    10. '_length' → logprob: -18.875

Token 584: '_dir' (ID: 9526)
  Prédit: '_dir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dir' → logprob: -6.289473822107539e-05
    2. 'dir' → logprob: -9.750062942504883
    3. '-dir' → logprob: -13.000062942504883
    4. '+' → logprob: -14.125062942504883
    5. '_len' → logprob: -14.500062942504883
    6. 'Dir' → logprob: -14.625062942504883
    7. '(dir' → logprob: -16.750062942504883
    8. ')' → logprob: -16.750062942504883
    9. ' dir' → logprob: -16.875062942504883
    10. '   ' → logprob: -16.875062942504883

Token 585: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.12693189084529877
    2. ' +' → logprob: -2.12693190574646
    3. '):
' → logprob: -13.001932144165039
    4. '):' → logprob: -14.376932144165039
    5. '[' → logprob: -15.001932144165039
    6. '()+' → logprob: -15.376932144165039
    7. '   ' → logprob: -15.876932144165039
    8. '+
' → logprob: -16.87693214416504
    9. '＋' → logprob: -17.50193214416504
    10. '+h' → logprob: -17.50193214416504

Token 586: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. '   ' → logprob: -17.875
    4. '(' → logprob: -18.375
    5. '
' → logprob: -20.5
    6. '```' → logprob: -20.625
    7. ')' → logprob: -20.75
    8. ',' → logprob: -22.125
    9. ' (' → logprob: -22.625
    10. '=' → logprob: -23.0

Token 587: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04411374032497406
    2. '):
' → logprob: -3.6691136360168457
    3. ':' → logprob: -4.044113636016846
    4. ',' → logprob: -10.044114112854004
    5. ' ):' → logprob: -10.919114112854004
    6. ':
' → logprob: -11.544114112854004
    7. ' :' → logprob: -11.669114112854004
    8. ')' → logprob: -11.669114112854004
    9. '               ' → logprob: -11.919114112854004
    10. '):
' → logprob: -12.044114112854004

Token 588: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0004062434600200504
    2. '                    
' → logprob: -8.625406265258789
    3. '                       ' → logprob: -9.750406265258789
    4. ' token' → logprob: -10.000406265258789
    5. '```' → logprob: -10.500406265258789
    6. 'token' → logprob: -11.375406265258789
    7. ' if' → logprob: -11.625406265258789
    8. '               ' → logprob: -11.625406265258789
    9. '                  ' → logprob: -11.750406265258789
    10. '                    ' → logprob: -12.000406265258789

Token 589: ' s' (ID: 265)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.20548756420612335
    2. 'seq' → logprob: -1.830487608909607
    3. ' seq' → logprob: -3.9554874897003174
    4. 'sequence' → logprob: -5.5804877281188965
    5. ' sequence' → logprob: -6.4554877281188965
    6. '                   ' → logprob: -7.5804877281188965
    7. 'token' → logprob: -9.330487251281738
    8. 'code' → logprob: -9.705487251281738
    9. '   ' → logprob: -9.830487251281738
    10. 's' (adapté à ' s') → logprob: -10.705487251281738

Token 590: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.020798316225409508
    2. '=' → logprob: -3.8957982063293457
    3. 'eq' → logprob: -8.520798683166504
    4. 'e' → logprob: -10.645798683166504
    5. ' ' → logprob: -11.020798683166504
    6. 'pace' → logprob: -12.895798683166504
    7. ' equ' → logprob: -12.895798683166504
    8. ' ' → logprob: -13.145798683166504
    9. ' eq' → logprob: -13.270798683166504
    10. 'equ' → logprob: -13.395798683166504

Token 591: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.06196824833750725
    2. ' get' → logprob: -2.8119683265686035
    3. '(get' → logprob: -14.811967849731445
    4. '	get' → logprob: -16.561967849731445
    5. '   ' → logprob: -16.811967849731445
    6. '=get' → logprob: -16.936967849731445
    7. '.get' → logprob: -17.061967849731445
    8. '_get' → logprob: -17.561967849731445
    9. '[get' → logprob: -17.936967849731445
    10. ')get' → logprob: -18.311967849731445

Token 592: '_sequence' (ID: 55606)
  Prédit: '_sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sequence' → logprob: -1.2352385965641588e-05
    2. 'sequence' → logprob: -11.625012397766113
    3. '_' → logprob: -12.875012397766113
    4. ' sequence' → logprob: -15.000012397766113
    5. '(sequence' → logprob: -15.625012397766113
    6. '_seq' → logprob: -16.250011444091797
    7. 's' → logprob: -16.375011444091797
    8. '_sequences' → logprob: -17.250011444091797
    9. '_SEQUENCE' → logprob: -17.250011444091797
    10. 'Sequence' → logprob: -17.375011444091797

Token 593: '(grid' (ID: 51818)
  Prédit: '(grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(grid' → logprob: -2.696889623621246e-06
    2. '(' → logprob: -13.00000286102295
    3. ' (' → logprob: -15.87500286102295
    4. '(
' → logprob: -16.500001907348633
    5. '(Grid' → logprob: -16.875001907348633
    6. '(g' → logprob: -19.250001907348633
    7. '(gr' → logprob: -19.250001907348633
    8. ':grid' → logprob: -20.250001907348633
    9. ' grid' → logprob: -20.625001907348633
    10. '(graph' → logprob: -20.750001907348633

Token 594: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.9054008084349334e-05
    2. ',h' → logprob: -10.500039100646973
    3. ' ,' → logprob: -11.875039100646973
    4. ',x' → logprob: -12.625039100646973
    5. '(' → logprob: -14.625039100646973
    6. ',
' → logprob: -15.500039100646973
    7. ',s' → logprob: -16.000038146972656
    8. ',w' → logprob: -16.500038146972656
    9. ',n' → logprob: -16.875038146972656
    10. ',(' → logprob: -17.250038146972656

Token 595: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.01814994215965271
    2. ' h' → logprob: -4.0181498527526855
    3. '	h' → logprob: -17.393150329589844
    4. '   ' → logprob: -17.393150329589844
    5. '    ' → logprob: -17.643150329589844
    6. '                   ' → logprob: -18.018150329589844
    7. ' ' → logprob: -18.643150329589844
    8. 'x' → logprob: -18.893150329589844
    9. '                    ' → logprob: -19.018150329589844
    10. 's' → logprob: -19.393150329589844

Token 596: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001005630983854644
    2. ',x' → logprob: -9.750100135803223
    3. ' ,' → logprob: -10.125100135803223
    4. '   ' → logprob: -14.375100135803223
    5. ',w' → logprob: -14.875100135803223
    6. ',
' → logprob: -15.125100135803223
    7. ',y' → logprob: -15.250100135803223
    8. '       ' → logprob: -15.500100135803223
    9. '                   ' → logprob: -16.87510108947754
    10. '‌,' → logprob: -16.87510108947754

Token 597: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.0001584850688232109
    2. ' w' → logprob: -8.750158309936523
    3. '	w' → logprob: -20.250158309936523
    4. '   ' → logprob: -21.625158309936523
    5. ',w' → logprob: -23.500158309936523
    6. 'width' → logprob: -23.500158309936523
    7. ' ' → logprob: -23.625158309936523
    8. '<w' → logprob: -24.250158309936523
    9. 'wx' → logprob: -24.375158309936523
    10. ''w' → logprob: -24.500158309936523

Token 598: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006429764907807112
    2. ',x' → logprob: -7.375642776489258
    3. ' ,' → logprob: -11.125642776489258
    4. 'x' → logprob: -13.875642776489258
    5. '   ' → logprob: -14.750642776489258
    6. '                   ' → logprob: -15.750642776489258
    7. ',
' → logprob: -16.750642776489258
    8. '```' → logprob: -17.000642776489258
    9. '                       ' → logprob: -17.750642776489258
    10. '                           ' → logprob: -18.000642776489258

Token 599: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -2.15310683415737e-05
    2. ' x' → logprob: -10.750021934509277
    3. '	x' → logprob: -20.00002098083496
    4. '   ' → logprob: -22.37502098083496
    5. '"x' → logprob: -23.00002098083496
    6. ')x' → logprob: -23.12502098083496
    7. ',x' → logprob: -23.37502098083496
    8. '(x' → logprob: -23.75002098083496
    9. '{x' → logprob: -24.37502098083496
    10. '
' → logprob: -24.62502098083496

Token 600: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00020985817536711693
    2. ',y' → logprob: -9.00020980834961
    3. ' ,' → logprob: -9.37520980834961
    4. '   ' → logprob: -14.00020980834961
    5. '                   ' → logprob: -15.62520980834961
    6. '       ' → logprob: -15.87520980834961
    7. '```' → logprob: -15.87520980834961
    8. ',
' → logprob: -16.12520980834961
    9. 'y' → logprob: -17.12520980834961
    10. '           ' → logprob: -17.25020980834961

Token 601: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.00020354038861114532
    2. ' y' → logprob: -8.500203132629395
    3. '   ' → logprob: -19.25020408630371
    4. '	y' → logprob: -19.25020408630371
    5. ' ' → logprob: -20.37520408630371
    6. ')y' → logprob: -20.50020408630371
    7. '                   ' → logprob: -20.62520408630371
    8. '    ' → logprob: -21.00020408630371
    9. '  ' → logprob: -21.62520408630371
    10. 'x' → logprob: -22.25020408630371

Token 602: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.670925358776003e-05
    2. ' ,' → logprob: -9.625066757202148
    3. '                   ' → logprob: -15.250066757202148
    4. '   ' → logprob: -15.750066757202148
    5. '```' → logprob: -16.62506675720215
    6. 'dx' → logprob: -16.75006675720215
    7. '                       ' → logprob: -17.75006675720215
    8. ',
' → logprob: -18.12506675720215
    9. '_,' → logprob: -18.25006675720215
    10. '                           ' → logprob: -18.87506675720215

Token 603: ' dx' (ID: 29472)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.029750604182481766
    2. ' dx' → logprob: -3.5297505855560303
    3. '_dx' → logprob: -16.15475082397461
    4. '(dx' → logprob: -16.52975082397461
    5. '.dx' → logprob: -19.15475082397461
    6. '   ' → logprob: -19.15475082397461
    7. 'd' → logprob: -19.65475082397461
    8. 'DX' → logprob: -19.77975082397461
    9. 'Dx' → logprob: -19.90475082397461
    10. '```' → logprob: -20.40475082397461

Token 604: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.578184497309849e-05
    2. ' ,' → logprob: -9.375085830688477
    3. ',
' → logprob: -14.500085830688477
    4. ',d' → logprob: -15.500085830688477
    5. '                   ' → logprob: -16.625085830688477
    6. '```' → logprob: -17.000085830688477
    7. '   ' → logprob: -17.250085830688477
    8. '‌,' → logprob: -18.000085830688477
    9. ')' → logprob: -18.250085830688477
    10. ',y' → logprob: -18.625085830688477

Token 605: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.0001584850688232109
    2. ' dy' → logprob: -8.750158309936523
    3. 'd' → logprob: -19.750158309936523
    4. 'dx' → logprob: -20.250158309936523
    5. '.dy' → logprob: -21.250158309936523
    6. 'Dy' → logprob: -21.375158309936523
    7. '   ' → logprob: -22.250158309936523
    8. ')' → logprob: -22.750158309936523
    9. 'ddy' → logprob: -23.000158309936523
    10. 'dj' → logprob: -23.250158309936523

Token 606: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003491705865599215
    2. ',length' → logprob: -8.000349044799805
    3. ' ,' → logprob: -11.250349044799805
    4. '                   ' → logprob: -15.250349044799805
    5. 'length' → logprob: -15.500349044799805
    6. '[length' → logprob: -16.000349044799805
    7. ',
' → logprob: -17.000349044799805
    8. ' length' → logprob: -17.250349044799805
    9. ',len' → logprob: -17.375349044799805
    10. ')' → logprob: -17.375349044799805

Token 607: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.00020354038861114532
    2. ' length' → logprob: -8.500203132629395
    3. 'leng' → logprob: -21.12520408630371
    4. 'len' → logprob: -21.37520408630371
    5. '	length' → logprob: -22.62520408630371
    6. 'l' → logprob: -22.75020408630371
    7. '(length' → logprob: -23.37520408630371
    8. '   ' → logprob: -23.75020408630371
    9. 'ength' → logprob: -23.75020408630371
    10. 'Length' → logprob: -24.00020408630371

Token 608: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.030087044462561607
    2. ')
' → logprob: -3.5300869941711426
    3. '                   ' → logprob: -8.1550874710083
    4. ')
' → logprob: -10.1550874710083
    5. '):
' → logprob: -12.7800874710083
    6. ')`
' → logprob: -13.2800874710083
    7. ')`' → logprob: -13.6550874710083
    8. ')

' → logprob: -13.7800874710083
    9. '               ' → logprob: -14.2800874710083
    10. ' )' → logprob: -14.4050874710083

Token 609: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0004311460361350328
    2. '                    
' → logprob: -8.625431060791016
    3. '               ' → logprob: -8.875431060791016
    4. '
' → logprob: -10.125431060791016
    5. '<|end|>' → logprob: -11.250431060791016
    6. '           ' → logprob: -11.375431060791016
    7. '                       ' → logprob: -11.500431060791016
    8. '                  ' → logprob: -11.625431060791016
    9. '                    ' → logprob: -12.250431060791016
    10. '```' → logprob: -12.375431060791016

Token 610: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3715416193008423
    2. '                   ' → logprob: -1.7465416193008423
    3. ' if' → logprob: -1.9965416193008423
    4. '```' → logprob: -9.871541976928711
    5. '               ' → logprob: -10.871541976928711
    6. '                       ' → logprob: -11.121541976928711
    7. '                    
' → logprob: -11.371541976928711
    8. '
' → logprob: -11.496541976928711
    9. '                    ' → logprob: -11.871541976928711
    10. ' key' → logprob: -11.996541976928711

Token 611: ' To' (ID: 2514)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.10129828006029129
    2. ' if' → logprob: -2.3512983322143555
    3. '                   ' → logprob: -6.8512983322143555
    4. '#' → logprob: -11.351298332214355
    5. '
' → logprob: -11.726298332214355
    6. ' key' → logprob: -12.726298332214355
    7. 'key' → logprob: -13.226298332214355
    8. '   ' → logprob: -13.351298332214355
    9. '```' → logprob: -13.601298332214355
    10. '               ' → logprob: -13.851298332214355

Token 612: ' satisfy' (ID: 35441)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.0223840475082397
    2. '                   ' → logprob: -1.2723840475082397
    3. 'if' → logprob: -1.2723840475082397
    4. 's' → logprob: -3.7723841667175293
    5. '#' → logprob: -4.147384166717529
    6. 'len' → logprob: -5.147384166717529
    7. ' s' → logprob: -5.397384166717529
    8. ' ' → logprob: -5.772384166717529
    9. ' for' → logprob: -6.022384166717529
    10. '               ' → logprob: -6.147384166717529

Token 613: ' two' (ID: 1920)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.9875016808509827
    2. ' len' → logprob: -0.9875016808509827
    3. 'len' → logprob: -1.987501621246338
    4. 's' → logprob: -2.362501621246338
    5. ' all' → logprob: -3.862501621246338
    6. 'all' → logprob: -7.112501621246338
    7. '(len' → logprob: -7.237501621246338
    8. ' ' → logprob: -7.987501621246338
    9. '(s' → logprob: -8.362502098083496
    10. ''s' → logprob: -8.737502098083496

Token 614: ' sequences' (ID: 45665)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.556454062461853
    2. ' s' → logprob: -1.556454062461853
    3. ' occurrences' → logprob: -2.4314541816711426
    4. ' appearances' → logprob: -3.6814541816711426
    5. ' not' → logprob: -3.8064541816711426
    6. ' sequences' → logprob: -3.9314541816711426
    7. 's' → logprob: -4.806454181671143
    8. '_occ' → logprob: -4.931454181671143
    9. ' copies' → logprob: -5.306454181671143
    10. ' occur' → logprob: -5.556454181671143

Token 615: ' do' (ID: 621)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.07118727266788483
    2. ' in' → logprob: -2.6961872577667236
    3. ' ' → logprob: -7.571187496185303
    4. 'not' → logprob: -7.821187496185303
    5. ' !=' → logprob: -9.321187019348145
    6. 'in' → logprob: -9.946187019348145
    7. ' =' → logprob: -10.071187019348145
    8. ' ==' → logprob: -10.946187019348145
    9. '                   ' → logprob: -11.196187019348145
    10. '_not' → logprob: -11.446187019348145

Token 616: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.12816190719604492
    2. 'not' → logprob: -2.128161907196045
    3. 'n't' → logprob: -7.003161907196045
    4. 'uble' → logprob: -9.128162384033203
    5. 's' → logprob: -9.253162384033203
    6. '_not' → logprob: -9.628162384033203
    7. ' s' → logprob: -11.253162384033203
    8. 'es' → logprob: -11.253162384033203
    9. 'uplicate' → logprob: -12.253162384033203
    10. 'ouble' → logprob: -12.753162384033203

Token 617: ' overlap' (ID: 56631)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.12667334079742432
    2. ' in' → logprob: -3.2516732215881348
    3. ' overlap' → logprob: -3.8766732215881348
    4. ' appear' → logprob: -4.001673221588135
    5. ' have' → logprob: -4.126673221588135
    6. 'not' → logprob: -5.251673221588135
    7. ' exist' → logprob: -5.251673221588135
    8. ' ' → logprob: -5.751673221588135
    9. ' occur' → logprob: -6.501673221588135
    10. ' s' → logprob: -6.626673221588135

Token 618: ' themselves' (ID: 9247)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.08798975497484207
    2. '                   ' → logprob: -3.5879898071289062
    3. ' if' → logprob: -3.9629898071289062
    4. ',' → logprob: -4.212989807128906
    5. 'and' → logprob: -4.712989807128906
    6. ' ' → logprob: -5.712989807128906
    7. ':' → logprob: -5.712989807128906
    8. '                    ' → logprob: -6.337989807128906
    9. ' not' → logprob: -7.212989807128906
    10. '                       ' → logprob: -7.462989807128906

Token 619: ',
' (ID: 412)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5354718565940857
    2. ',' → logprob: -1.2854719161987305
    3. ' or' → logprob: -2.4104719161987305
    4. ' and' → logprob: -3.1604719161987305
    5. 'and' → logprob: -6.0354719161987305
    6. ' ,' → logprob: -7.0354719161987305
    7. ' if' → logprob: -7.2854719161987305
    8. ',
' → logprob: -7.7854719161987305
    9. '                    ' → logprob: -8.03547191619873
    10. ':' → logprob: -8.28547191619873

Token 620: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.03441503643989563
    2. '                    
' → logprob: -4.284415245056152
    3. '                    ' → logprob: -4.659415245056152
    4. ' ' → logprob: -5.909415245056152
    5. ' if' → logprob: -6.534415245056152
    6. ' and' → logprob: -6.784415245056152
    7. '<|end|>' → logprob: -7.159415245056152
    8. ' not' → logprob: -7.534415245056152
    9. ' or' → logprob: -7.909415245056152
    10. '                     
' → logprob: -8.034415245056152

Token 621: ' #' (ID: 1069)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.07614897936582565
    2. ' if' → logprob: -2.8261489868164062
    3. 'if' → logprob: -4.951148986816406
    4. ' not' → logprob: -6.826148986816406
    5. ' and' → logprob: -7.076148986816406
    6. '                    ' → logprob: -7.076148986816406
    7. '                    
' → logprob: -7.201148986816406
    8. '
' → logprob: -7.201148986816406
    9. '               ' → logprob: -7.826148986816406
    10. ' ' → logprob: -8.201148986816406

Token 622: ' length' (ID: 5517)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5049505829811096
    2. '                   ' → logprob: -1.2549505233764648
    3. 'if' → logprob: -2.254950523376465
    4. '
' → logprob: -6.379950523376465
    5. ' s' → logprob: -6.879950523376465
    6. ' not' → logprob: -6.879950523376465
    7. ' key' → logprob: -7.629950523376465
    8. '                    ' → logprob: -7.879950523376465
    9. '                    
' → logprob: -8.254950523376465
    10. 's' → logprob: -8.504950523376465

Token 623: ' must' (ID: 2804)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.019843144342303276
    2. ' not' → logprob: -4.519843101501465
    3. '<=' → logprob: -6.019843101501465
    4. ' >' → logprob: -6.144843101501465
    5. ' *' → logprob: -6.769843101501465
    6. ' must' → logprob: -7.144843101501465
    7. ' <' → logprob: -7.519843101501465
    8. '*' → logprob: -7.644843101501465
    9. ' >=' → logprob: -8.769843101501465
    10. ' in' → logprob: -9.019843101501465

Token 624: ' be' (ID: 413)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.017548048868775368
    2. '<=' → logprob: -4.642548084259033
    3. ' not' → logprob: -5.517548084259033
    4. ' be' → logprob: -5.767548084259033
    5. ' <' → logprob: -8.392547607421875
    6. 'not' → logprob: -8.767547607421875
    7. 's' → logprob: -10.267547607421875
    8. ')' → logprob: -10.392547607421875
    9. '```' → logprob: -10.517547607421875
    10. 'le' → logprob: -10.892547607421875

Token 625: ' <=' (ID: 5017)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.45011523365974426
    2. '<=' → logprob: -1.9501152038574219
    3. ' length' → logprob: -2.950115203857422
    4. 'min' → logprob: -3.075115203857422
    5. 'no' → logprob: -3.325115203857422
    6. ' no' → logprob: -3.325115203857422
    7. 'len' → logprob: -4.075115203857422
    8. 'max' → logprob: -4.450115203857422
    9. 'less' → logprob: -5.075115203857422
    10. ' <=' → logprob: -5.200115203857422

Token 626: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.26668742299079895
    2. ' max' → logprob: -1.5166873931884766
    3. 'no' → logprob: -4.891687393188477
    4. ' no' → logprob: -5.016687393188477
    5. 'length' → logprob: -8.141687393188477
    6. ' length' → logprob: -8.891687393188477
    7. 'min' → logprob: -11.266687393188477
    8. ' ' → logprob: -11.266687393188477
    9. '                   ' → logprob: -12.016687393188477
    10. ' maximal' → logprob: -12.141687393188477

Token 627: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -4.4849443838757e-06
    2. ' _' → logprob: -13.250004768371582
    3. '_length' → logprob: -13.875004768371582
    4. '_' → logprob: -14.875004768371582
    5. '```' → logprob: -14.875004768371582
    6. '_dir' → logprob: -15.000004768371582
    7. 'len' → logprob: -15.750004768371582
    8. '_LEN' → logprob: -16.625003814697266
    9. '_max' → logprob: -16.625003814697266
    10. '_no' → logprob: -16.625003814697266

Token 628: '_dir' (ID: 9526)
  Prédit: '_dir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dir' → logprob: -0.5540955066680908
    2. '_no' → logprob: -2.054095506668091
    3. ' and' → logprob: -2.304095506668091
    4. '                   ' → logprob: -2.304095506668091
    5. '               ' → logprob: -3.179095506668091
    6. 'and' → logprob: -3.929095506668091
    7. ' or' → logprob: -4.054095268249512
    8. ' if' → logprob: -5.929095268249512
    9. ' no' → logprob: -5.929095268249512
    10. 'dir' → logprob: -6.054095268249512

Token 629: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.024580882862210274
    2. '                    
' → logprob: -4.774580955505371
    3. ' and' → logprob: -5.149580955505371
    4. '
' → logprob: -5.649580955505371
    5. '<|end|>' → logprob: -5.899580955505371
    6. ',' → logprob: -6.274580955505371
    7. '               ' → logprob: -8.274580955505371
    8. '                    ' → logprob: -8.399580955505371
    9. '<|end|>' → logprob: -8.524580955505371
    10. ')' → logprob: -8.524580955505371

Token 630: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0027215410955250263
    2. '
' → logprob: -6.752721309661865
    3. '                    
' → logprob: -6.752721309661865
    4. '<|end|>' → logprob: -8.627721786499023
    5. '               ' → logprob: -9.502721786499023
    6. '```' → logprob: -10.502721786499023
    7. '<|end|>' → logprob: -10.877721786499023
    8. '                   
' → logprob: -11.127721786499023
    9. ',' → logprob: -11.502721786499023
    10. '                  ' → logprob: -11.502721786499023

Token 631: ' #' (ID: 1069)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.18767324090003967
    2. ' if' → logprob: -1.9376732110977173
    3. 'if' → logprob: -4.062673091888428
    4. '
' → logprob: -5.437673091888428
    5. '                    
' → logprob: -5.562673091888428
    6. '               ' → logprob: -7.312673091888428
    7. ' 
' → logprob: -8.687673568725586
    8. '   ' → logprob: -9.062673568725586
    9. '           ' → logprob: -9.312673568725586
    10. '                    ' → logprob: -9.312673568725586

Token 632: ' Save' (ID: 15564)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.9031561613082886
    2. 'if' → logprob: -1.1531561613082886
    3. ' if' → logprob: -1.2781561613082886
    4. '
' → logprob: -8.403156280517578
    5. '                    
' → logprob: -9.153156280517578
    6. '               ' → logprob: -9.528156280517578
    7. '   ' → logprob: -10.278156280517578
    8. '           ' → logprob: -10.903156280517578
    9. ' key' → logprob: -11.278156280517578
    10. '                    ' → logprob: -11.528156280517578

Token 633: ' all' (ID: 722)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.8594164252281189
    2. 's' → logprob: -1.2344164848327637
    3. ' (' → logprob: -2.3594164848327637
    4. ' if' → logprob: -2.6094164848327637
    5. '(s' → logprob: -2.8594164848327637
    6. 'if' → logprob: -3.6094164848327637
    7. '(' → logprob: -4.984416484832764
    8. '_key' → logprob: -5.359416484832764
    9. ' =' → logprob: -5.859416484832764
    10. '
' → logprob: -5.984416484832764

Token 634: ' found' (ID: 2491)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.6340712308883667
    2. 's' → logprob: -1.6340712308883667
    3. '                   ' → logprob: -2.5090713500976562
    4. ' if' → logprob: -2.5090713500976562
    5. ' s' → logprob: -3.3840713500976562
    6. ' (' → logprob: -3.6340713500976562
    7. 'if' → logprob: -4.009071350097656
    8. ' sequences' → logprob: -4.384071350097656
    9. '
' → logprob: -5.384071350097656
    10. '(' → logprob: -5.884071350097656

Token 635: ' strings' (ID: 18279)
  Prédit: ' sequences'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sequences' → logprob: -0.8847381472587585
    2. 's' → logprob: -1.3847382068634033
    3. '(s' → logprob: -1.6347382068634033
    4. ' s' → logprob: -2.6347382068634033
    5. '                   ' → logprob: -4.134737968444824
    6. ' (' → logprob: -4.384737968444824
    7. ' in' → logprob: -4.634737968444824
    8. '_sequences' → logprob: -4.884737968444824
    9. ' =' → logprob: -5.509737968444824
    10. ' spells' → logprob: -5.634737968444824

Token 636: ' with' (ID: 483)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00398246617987752
    2. '                    
' → logprob: -6.5039825439453125
    3. '
' → logprob: -6.6289825439453125
    4. ',' → logprob: -7.1289825439453125
    5. '               ' → logprob: -9.378982543945312
    6. ',
' → logprob: -10.378982543945312
    7. ' and' → logprob: -10.628982543945312
    8. ' if' → logprob: -10.628982543945312
    9. '           ' → logprob: -10.878982543945312
    10. ':' → logprob: -10.878982543945312

Token 637: ' their' (ID: 1043)
  Prédit: 'found'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'found' → logprob: -1.0461523532867432
    2. 'length' → logprob: -1.6711523532867432
    3. ' their' → logprob: -1.7961523532867432
    4. ' length' → logprob: -1.9211523532867432
    5. ' found' → logprob: -2.546152353286743
    6. 'their' → logprob: -3.421152353286743
    7. 'len' → logprob: -4.171152114868164
    8. 's' → logprob: -5.921152114868164
    9. '(found' → logprob: -5.921152114868164
    10. '(length' → logprob: -6.171152114868164

Token 638: ' counts' (ID: 28991)
  Prédit: ' length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' length' → logprob: -0.7955214381217957
    2. 'length' → logprob: -2.0455214977264404
    3. ' count' → logprob: -2.5455214977264404
    4. 'count' → logprob: -2.5455214977264404
    5. ' positions' → logprob: -2.5455214977264404
    6. 'positions' → logprob: -2.6705214977264404
    7. ' occurrences' → logprob: -3.1705214977264404
    8. ' counts' → logprob: -4.545521259307861
    9. 'found' → logprob: -4.795521259307861
    10. ' lengths' → logprob: -5.045521259307861

Token 639: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.009136121720075607
    2. '
' → logprob: -5.634136199951172
    3. '                    
' → logprob: -5.634136199951172
    4. ' if' → logprob: -7.884136199951172
    5. '   ' → logprob: -8.384136199951172
    6. '                    ' → logprob: -8.634136199951172
    7. '               ' → logprob: -8.634136199951172
    8. ',' → logprob: -9.134136199951172
    9. '                  ' → logprob: -9.134136199951172
    10. ' =' → logprob: -9.134136199951172

Token 640: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.016781823709607124
    2. ' s' → logprob: -5.516781806945801
    3. '                    
' → logprob: -5.766781806945801
    4. ' if' → logprob: -6.141781806945801
    5. '
' → logprob: -6.891781806945801
    6. '               ' → logprob: -7.016781806945801
    7. 's' → logprob: -7.141781806945801
    8. ' 
' → logprob: -7.141781806945801
    9. 'if' → logprob: -7.266781806945801
    10. '   ' → logprob: -7.391781806945801

Token 641: ' found' (ID: 2491)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5407557487487793
    2. ' if' → logprob: -1.0407557487487793
    3. 'if' → logprob: -3.0407557487487793
    4. ' found' → logprob: -5.165755748748779
    5. ' key' → logprob: -5.290755748748779
    6. 'found' (adapté à ' found') → logprob: -5.915755748748779
    7. '                    
' → logprob: -7.040755748748779
    8. '
' → logprob: -7.040755748748779
    9. '   ' → logprob: -8.165756225585938
    10. 'key' → logprob: -8.415756225585938

Token 642: '.setdefault' (ID: 113053)
  Prédit: '[s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -0.03944184631109238
    2. '.setdefault' → logprob: -3.2894418239593506
    3. '_key' → logprob: -7.66444206237793
    4. '[(' → logprob: -7.91444206237793
    5. 's' → logprob: -8.03944206237793
    6. '_s' → logprob: -9.41444206237793
    7. '.s' → logprob: -10.16444206237793
    8. '.get' → logprob: -10.41444206237793
    9. '[' → logprob: -10.66444206237793
    10. '.' → logprob: -10.91444206237793

Token 643: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -1.9743012671824545e-05
    2. 's' → logprob: -11.000020027160645
    3. ' (' → logprob: -13.375020027160645
    4. '(' → logprob: -13.625020027160645
    5. '((' → logprob: -16.500019073486328
    6. '
' → logprob: -17.000019073486328
    7. '(
' → logprob: -17.125019073486328
    8. '```' → logprob: -18.250019073486328
    9. ' s' → logprob: -19.000019073486328
    10. '   ' → logprob: -19.375019073486328

Token 644: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.165027217415627e-05
    2. ' ,' → logprob: -10.750021934509277
    3. '0' → logprob: -16.00002098083496
    4. ',
' → logprob: -16.75002098083496
    5. '[],' → logprob: -20.12502098083496
    6. '(),' → logprob: -20.25002098083496
    7. '1' → logprob: -20.25002098083496
    8. '，' → logprob: -20.62502098083496
    9. '‌,' → logprob: -21.37502098083496
    10. ',
' → logprob: -21.62502098083496

Token 645: ' set' (ID: 920)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.020491553470492363
    2. 'found' → logprob: -4.020491600036621
    3. ' ' → logprob: -6.270491600036621
    4. ' found' → logprob: -7.770491600036621
    5. '[]' → logprob: -11.645491600036621
    6. '[])' → logprob: -12.520491600036621
    7. '(found' → logprob: -12.645491600036621
    8. ')' → logprob: -13.520491600036621
    9. '	found' → logprob: -13.520491600036621
    10. '[])
' → logprob: -13.770491600036621

Token 646: '()).' (ID: 9503)
  Prédit: '()).'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()).' → logprob: -0.006029046140611172
    2. '((' → logprob: -5.75602912902832
    3. '()' → logprob: -6.63102912902832
    4. '())' → logprob: -6.75602912902832
    5. '())
' → logprob: -8.88102912902832
    6. ').' → logprob: -9.38102912902832
    7. '().' → logprob: -10.13102912902832
    8. '(),' → logprob: -10.38102912902832
    9. '()
' → logprob: -11.38102912902832
    10. '([(' → logprob: -11.50602912902832

Token 647: 'add' (ID: 964)
  Prédit: 'add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -1.4140441635390744e-05
    2. ' add' → logprob: -11.250014305114746
    3. 'update' → logprob: -14.500014305114746
    4. 'append' → logprob: -15.500014305114746
    5. '.add' → logprob: -15.500014305114746
    6. '(add' → logprob: -16.87501335144043
    7. '```' → logprob: -18.25001335144043
    8. '
' → logprob: -19.62501335144043
    9. ')add' → logprob: -20.00001335144043
    10. '_add' → logprob: -20.25001335144043

Token 648: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.07236635684967041
    2. '(x' → logprob: -2.822366237640381
    3. '(' → logprob: -4.572366237640381
    4. ' (' → logprob: -11.822366714477539
    5. '(y' → logprob: -13.572366714477539
    6. '(s' → logprob: -13.947366714477539
    7. '(len' → logprob: -14.822366714477539
    8. '(i' → logprob: -15.072366714477539
    9. '(tuple' → logprob: -15.322366714477539
    10. '(t' → logprob: -15.947366714477539

Token 649: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.015123027376830578
    2. '(x' → logprob: -4.265122890472412
    3. ' x' → logprob: -7.640122890472412
    4. 'dx' → logprob: -8.14012336730957
    5. ' (' → logprob: -9.51512336730957
    6. '(dx' → logprob: -9.51512336730957
    7. '(' → logprob: -10.39012336730957
    8. ' dx' → logprob: -13.39012336730957
    9. ',x' → logprob: -13.89012336730957
    10. ')x' → logprob: -13.89012336730957

Token 650: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3573836088180542
    2. ',y' → logprob: -1.2323836088180542
    3. ' ,' → logprob: -4.732383728027344
    4. ',
' → logprob: -9.607383728027344
    5. ' ' → logprob: -11.607383728027344
    6. '
' → logprob: -11.982383728027344
    7. '   ' → logprob: -12.607383728027344
    8. '+y' → logprob: -14.232383728027344
    9. ',j' → logprob: -14.357383728027344
    10. ' ,
' → logprob: -14.357383728027344

Token 651: ',' (ID: 11)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.07169771194458008
    2. ',' → logprob: -2.82169771194458
    3. ')' → logprob: -4.94669771194458
    4. '                   ' → logprob: -7.07169771194458
    5. '))
' → logprob: -7.69669771194458
    6. ',d' → logprob: -8.196697235107422
    7. ' ))' → logprob: -8.446697235107422
    8. ' ,' → logprob: -8.571697235107422
    9. '                       ' → logprob: -9.071697235107422
    10. '               ' → logprob: -9.321697235107422

Token 652: 'dx' (ID: 22100)
  Prédit: 'dx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.00013131031300872564
    2. ' dx' → logprob: -9.500131607055664
    3. '(dx' → logprob: -9.875131607055664
    4. '   ' → logprob: -13.375131607055664
    5. '(' → logprob: -13.750131607055664
    6. ' ' → logprob: -14.000131607055664
    7. 'length' → logprob: -14.250131607055664
    8. 'direction' → logprob: -15.000131607055664
    9. '  ' → logprob: -15.625131607055664
    10. ')' → logprob: -16.500131607055664

Token 653: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00038467496051453054
    2. ' ,' → logprob: -7.87538480758667
    3. ',d' → logprob: -12.875384330749512
    4. ',
' → logprob: -13.500384330749512
    5. 'dy' → logprob: -14.750384330749512
    6. '),' → logprob: -16.250385284423828
    7. ')' → logprob: -17.125385284423828
    8. ' dy' → logprob: -17.250385284423828
    9. '   ' → logprob: -17.375385284423828
    10. '))' → logprob: -17.625385284423828

Token 654: 'dy' (ID: 7593)
  Prédit: 'dy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -2.15310683415737e-05
    2. ' dy' → logprob: -10.750021934509277
    3. '   ' → logprob: -20.37502098083496
    4. '
' → logprob: -20.62502098083496
    5. ' ' → logprob: -21.25002098083496
    6. '.dy' → logprob: -21.25002098083496
    7. 'dx' → logprob: -21.87502098083496
    8. 'Dy' → logprob: -22.12502098083496
    9. '  ' → logprob: -22.25002098083496
    10. 'd' → logprob: -22.75002098083496

Token 655: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.01472866628319025
    2. ')' → logprob: -4.264728546142578
    3. '))
' → logprob: -8.014728546142578
    4. '                   ' → logprob: -8.514728546142578
    5. ')))' → logprob: -11.139728546142578
    6. ' ))' → logprob: -11.639728546142578
    7. '})' → logprob: -13.139728546142578
    8. ')}' → logprob: -13.139728546142578
    9. '                       ' → logprob: -13.639728546142578
    10. ',' → logprob: -13.889728546142578

Token 656: '   ' (ID: 271)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.06689732521772385
    2. '<|end|>' → logprob: -3.316897392272949
    3. '               ' → logprob: -4.191897392272949
    4. '<|end|>' → logprob: -5.816897392272949
    5. '                    
' → logprob: -5.941897392272949
    6. '```' → logprob: -6.066897392272949
    7. '       ' → logprob: -6.941897392272949
    8. '           ' → logprob: -7.191897392272949
    9. 'if' → logprob: -7.816897392272949
    10. '
' → logprob: -7.941897392272949

Token 657: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08390773087739944
    2. '
' → logprob: -3.2089078426361084
    3. 'for' → logprob: -3.8339078426361084
    4. ' for' → logprob: -4.708907604217529
    5. '                   ' → logprob: -5.458907604217529
    6. '<|end|>' → logprob: -5.833907604217529
    7. '    
' → logprob: -7.083907604217529
    8. ' ' → logprob: -7.708907604217529
    9. '       ' → logprob: -8.333908081054688
    10. '                    
' → logprob: -8.958908081054688

Token 658: ' We' (ID: 1416)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.044532716274261475
    2. '   ' → logprob: -3.4195327758789062
    3. ' for' → logprob: -4.544532775878906
    4. '#' → logprob: -9.419532775878906
    5. '
' → logprob: -9.794532775878906
    6. 'max' → logprob: -10.294532775878906
    7. 'duplicates' → logprob: -11.419532775878906
    8. ' ' → logprob: -11.669532775878906
    9. '```' → logprob: -12.669532775878906
    10. 'result' → logprob: -13.419532775878906

Token 659: ' must' (ID: 2804)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16580674052238464
    2. ' for' → logprob: -2.415806770324707
    3. 'for' → logprob: -2.790806770324707
    4. ' ' → logprob: -6.915806770324707
    5. '
' → logprob: -7.040806770324707
    6. '    
' → logprob: -9.040806770324707
    7. '  ' → logprob: -9.915806770324707
    8. '       ' → logprob: -10.665806770324707
    9. '  
' → logprob: -11.415806770324707
    10. 'def' → logprob: -11.665806770324707

Token 660: ' check' (ID: 2371)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03909604251384735
    2. 'for' → logprob: -3.7890961170196533
    3. ' for' → logprob: -4.414095878601074
    4. ' ' → logprob: -7.164095878601074
    5. '  ' → logprob: -7.664095878601074
    6. 'continue' → logprob: -7.664095878601074
    7. 'return' → logprob: -8.039095878601074
    8. '
' → logprob: -8.164095878601074
    9. 'iterate' → logprob: -8.164095878601074
    10. 'filter' → logprob: -8.664095878601074

Token 661: ' strings' (ID: 18279)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.35158681869506836
    2. 'for' → logprob: -1.4765868186950684
    3. '   ' → logprob: -2.7265868186950684
    4. ' ' → logprob: -6.726586818695068
    5. ' duplicates' → logprob: -7.726586818695068
    6. ' sequences' → logprob: -8.101587295532227
    7. 'duplicates' → logprob: -8.476587295532227
    8. ' s' → logprob: -8.976587295532227
    9. ' which' → logprob: -9.226587295532227
    10. 's' → logprob: -9.851587295532227

Token 662: ' that' (ID: 484)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07760410010814667
    2. ' for' → logprob: -2.702604055404663
    3. 'for' → logprob: -5.577604293823242
    4. ',' → logprob: -6.577604293823242
    5. ' that' → logprob: -6.577604293823242
    6. '
' → logprob: -7.452604293823242
    7. ' =' → logprob: -9.202604293823242
    8. ' in' → logprob: -9.827604293823242
    9. ' with' → logprob: -10.202604293823242
    10. ' ' → logprob: -10.452604293823242

Token 663: ' appear' (ID: 7680)
  Prédit: ' have'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' have' → logprob: -0.48488718271255493
    2. ' for' → logprob: -1.6098871231079102
    3. 'for' → logprob: -2.85988712310791
    4. ' ' → logprob: -2.98488712310791
    5. 'have' → logprob: -3.98488712310791
    6. ' appear' → logprob: -4.23488712310791
    7. '   ' → logprob: -4.23488712310791
    8. 'len' → logprob: -4.60988712310791
    9. 'appear' → logprob: -5.73488712310791
    10. ' are' → logprob: -5.98488712310791

Token 664: ' more' (ID: 945)
  Prédit: 'at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.35567378997802734
    2. ' at' → logprob: -1.4806737899780273
    3. 'in' → logprob: -3.2306737899780273
    4. 'more' → logprob: -3.7306737899780273
    5. ' more' → logprob: -5.605673789978027
    6. ' in' → logprob: -6.105673789978027
    7. '   ' → logprob: -6.730673789978027
    8. '>=' → logprob: -7.605673789978027
    9. ' ' → logprob: -8.230673789978027
    10. 'multiple' → logprob: -9.105673789978027

Token 665: ' than' (ID: 1572)
  Prédit: 'than'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'than' → logprob: -0.0026461677625775337
    2. ' than' → logprob: -6.002645969390869
    3. '   ' → logprob: -9.377646446228027
    4. '2' → logprob: -10.002646446228027
    5. 'or' → logprob: -11.627646446228027
    6. '_than' → logprob: -11.752646446228027
    7. '```' → logprob: -12.002646446228027
    8. '       ' → logprob: -12.127646446228027
    9. '
' → logprob: -12.752646446228027
    10. '1' → logprob: -12.877646446228027

Token 666: ' once' (ID: 4730)
  Prédit: 'once'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'once' → logprob: -0.0795503482222557
    2. ' once' → logprob: -2.579550266265869
    3. '1' → logprob: -7.454550266265869
    4. 'one' → logprob: -9.829550743103027
    5. 'Once' → logprob: -11.704550743103027
    6. ' ' → logprob: -12.079550743103027
    7. '_once' → logprob: -12.204550743103027
    8. ' one' → logprob: -12.204550743103027
    9. '2' → logprob: -13.954550743103027
    10. '   ' → logprob: -13.954550743103027

Token 667: ' with' (ID: 483)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1378513127565384
    2. '
' → logprob: -2.1378512382507324
    3. ' for' → logprob: -4.887851238250732
    4. '    
' → logprob: -6.262851238250732
    5. 'for' → logprob: -7.012851238250732
    6. '<|end|>' → logprob: -8.51285171508789
    7. '  
' → logprob: -8.76285171508789
    8. '```' → logprob: -10.01285171508789
    9. '<|end|>' → logprob: -10.51285171508789
    10. ',' → logprob: -10.63785171508789

Token 668: ' different' (ID: 2647)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.39503324031829834
    2. 'found' → logprob: -2.395033359527588
    3. 'count' → logprob: -2.895033359527588
    4. ' length' → logprob: -3.145033359527588
    5. 'length' → logprob: -3.270033359527588
    6. ' len' → logprob: -3.270033359527588
    7. ' count' → logprob: -3.770033359527588
    8. ' found' → logprob: -4.645033359527588
    9. 'for' → logprob: -4.770033359527588
    10. ' at' → logprob: -4.895033359527588

Token 669: ' (' (ID: 350)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.6812677979469299
    2. 'dire' → logprob: -1.4312677383422852
    3. ' directions' → logprob: -2.306267738342285
    4. ' positions' → logprob: -2.431267738342285
    5. 'params' → logprob: -4.056267738342285
    6. 'parameters' → logprob: -4.306267738342285
    7. 'keys' → logprob: -4.806267738342285
    8. ' parameters' → logprob: -5.056267738342285
    9. 'direction' → logprob: -5.931267738342285
    10. ' keys' → logprob: -6.056267738342285

Token 670: 'start' (ID: 5236)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.5939798951148987
    2. 'x' → logprob: -0.9689798951148987
    3. ' positions' → logprob: -3.593979835510254
    4. 'positions' → logprob: -4.593979835510254
    5. ' (' → logprob: -4.718979835510254
    6. ')' → logprob: -5.468979835510254
    7. ',x' → logprob: -5.593979835510254
    8. ')x' → logprob: -5.593979835510254
    9. '(x' → logprob: -5.843979835510254
    10. '
' → logprob: -5.968979835510254

Token 671: ' or' (ID: 503)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7453020811080933
    2. 'positions' → logprob: -1.1203020811080933
    3. '_positions' → logprob: -2.745302200317383
    4. ' positions' → logprob: -3.370302200317383
    5. ' ,' → logprob: -3.870302200317383
    6. 's' → logprob: -3.995302200317383
    7. ')' → logprob: -3.995302200317383
    8. '_,' → logprob: -4.245302200317383
    9. '   ' → logprob: -4.745302200317383
    10. ',x' → logprob: -5.120302200317383

Token 672: ' direction' (ID: 9262)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'direction' → logprob: -0.577511191368103
    2. ' direction' → logprob: -0.827511191368103
    3. 'dire' → logprob: -7.452511310577393
    4. ' directions' → logprob: -7.827511310577393
    5. ')' → logprob: -8.202510833740234
    6. 'dir' → logprob: -8.827510833740234
    7. 'dx' → logprob: -10.327510833740234
    8. 'delta' → logprob: -10.577510833740234
    9. '   ' → logprob: -10.702510833740234
    10. ' ' → logprob: -10.702510833740234

Token 673: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.04119551554322243
    2. ')' → logprob: -3.4161956310272217
    3. '):
' → logprob: -5.541195392608643
    4. '   ' → logprob: -6.166195392608643
    5. ')

' → logprob: -7.666195392608643
    6. 's' → logprob: -8.1661958694458
    7. ')s' → logprob: -8.6661958694458
    8. '):

' → logprob: -8.7911958694458
    9. ' )
' → logprob: -9.1661958694458
    10. ').
' → logprob: -9.5411958694458

Token 674: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2542429566383362
    2. '
' → logprob: -2.1292428970336914
    3. ' for' → logprob: -2.3792428970336914
    4. 'for' → logprob: -4.504242897033691
    5. '```' → logprob: -6.754242897033691
    6. ' ' → logprob: -8.004242897033691
    7. '    
' → logprob: -8.629242897033691
    8. '<|end|>' → logprob: -10.129242897033691
    9. '  
' → logprob: -10.379242897033691
    10. '``' → logprob: -10.504242897033691

Token 675: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016673976555466652
    2. ' for' → logprob: -4.891674041748047
    3. 'for' → logprob: -4.891674041748047
    4. '
' → logprob: -6.641674041748047
    5. 'result' → logprob: -9.516674041748047
    6. '    
' → logprob: -9.766674041748047
    7. ' result' → logprob: -10.391674041748047
    8. ' ' → logprob: -11.516674041748047
    9. '```' → logprob: -11.641674041748047
    10. 'duplicates' → logprob: -12.016674041748047

Token 676: ' allowing' (ID: 16246)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9407879710197449
    2. 'for' → logprob: -0.9407879710197449
    3. ' for' → logprob: -1.5657880306243896
    4. 'result' → logprob: -5.1907877922058105
    5. ' result' → logprob: -6.3157877922058105
    6. '
' → logprob: -7.0657877922058105
    7. 'duplicates' → logprob: -7.4407877922058105
    8. ' ' → logprob: -7.6907877922058105
    9. '```' → logprob: -8.315788269042969
    10. ' duplicates' → logprob: -8.440788269042969

Token 677: ' shared' (ID: 9599)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5921483635902405
    2. '   ' → logprob: -1.4671483039855957
    3. 'for' → logprob: -1.7171483039855957
    4. '
' → logprob: -4.217148303985596
    5. ' sequences' → logprob: -4.467148303985596
    6. ' ' → logprob: -6.342148303985596
    7. ' duplicates' → logprob: -6.467148303985596
    8. 'over' → logprob: -6.967148303985596
    9. ' overlapping' → logprob: -7.592148303985596
    10. ' them' → logprob: -7.717148303985596

Token 678: ' squares' (ID: 57269)
  Prédit: ' sequences'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sequences' → logprob: -0.9148645997047424
    2. 'positions' → logprob: -1.9148645401000977
    3. ' positions' → logprob: -2.2898645401000977
    4. ' substr' → logprob: -2.4148645401000977
    5. '
' → logprob: -3.1648645401000977
    6. ' parts' → logprob: -3.4148645401000977
    7. ' characters' → logprob: -3.7898645401000977
    8. '#' → logprob: -3.7898645401000977
    9. 'characters' → logprob: -3.9148645401000977
    10. 'length' → logprob: -4.414864540100098

Token 679: ' between' (ID: 2870)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6027534008026123
    2. '
' → logprob: -1.2277534008026123
    3. 'for' → logprob: -2.3527534008026123
    4. ' for' → logprob: -2.8527534008026123
    5. '    
' → logprob: -5.602753639221191
    6. '```' → logprob: -6.352753639221191
    7. '<|end|>' → logprob: -7.727753639221191
    8. '  
' → logprob: -7.852753639221191
    9. ' ' → logprob: -8.727753639221191
    10. '``' → logprob: -9.102753639221191

Token 680: ' two' (ID: 1920)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'se' → logprob: -1.4281929731369019
    2. 'different' → logprob: -1.4281929731369019
    3. ' sequences' → logprob: -1.8031929731369019
    4. 'for' → logprob: -2.1781930923461914
    5. ' different' → logprob: -2.5531930923461914
    6. 'strings' → logprob: -3.4281930923461914
    7. ' for' → logprob: -3.5531930923461914
    8. 'found' → logprob: -4.303193092346191
    9. ' them' → logprob: -4.428193092346191
    10. 'tokens' → logprob: -4.553193092346191

Token 681: ' sequences' (ID: 45665)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.868520200252533
    2. 'different' → logprob: -1.4935202598571777
    3. ' sequences' → logprob: -2.1185202598571777
    4. 'strings' → logprob: -2.4935202598571777
    5. 'found' → logprob: -3.1185202598571777
    6. 'or' → logprob: -3.2435202598571777
    7. 'distinct' → logprob: -3.8685202598571777
    8. ' different' → logprob: -4.118520259857178
    9. ' strings' → logprob: -5.243520259857178
    10. ' or' → logprob: -5.243520259857178

Token 682: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.162301704287529
    2. '
' → logprob: -2.537301778793335
    3. 'for' → logprob: -3.162301778793335
    4. ' for' → logprob: -3.787301778793335
    5. '    
' → logprob: -6.037301540374756
    6. '```' → logprob: -6.537301540374756
    7. '<|end|>' → logprob: -6.662301540374756
    8. '  
' → logprob: -8.537302017211914
    9. '<|end|>' → logprob: -8.537302017211914
    10. '``' → logprob: -9.662302017211914

Token 683: ' but' (ID: 889)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5393260717391968
    2. '   ' → logprob: -1.2893260717391968
    3. 'for' → logprob: -2.0393261909484863
    4. ' but' → logprob: -5.289326190948486
    5. '
' → logprob: -5.414326190948486
    6. '#' → logprob: -7.039326190948486
    7. 'but' → logprob: -7.789326190948486
    8. ' #' → logprob: -8.414325714111328
    9. ' ' → logprob: -9.414325714111328
    10. '    
' → logprob: -10.039325714111328

Token 684: ' sequences' (ID: 45665)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.1334778219461441
    2. 'not' → logprob: -3.0084779262542725
    3. ' only' → logprob: -3.5084779262542725
    4. ' different' → logprob: -4.883477687835693
    5. ' no' → logprob: -5.008477687835693
    6. 'different' → logprob: -5.133477687835693
    7. ' sequences' → logprob: -5.383477687835693
    8. 'only' → logprob: -5.633477687835693
    9. ' the' → logprob: -5.758477687835693
    10. '   ' → logprob: -6.008477687835693

Token 685: ' themselves' (ID: 9247)
  Prédit: ' must'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' must' → logprob: -0.5236702561378479
    2. ' that' → logprob: -1.6486701965332031
    3. '
' → logprob: -2.898670196533203
    4. 'must' → logprob: -3.148670196533203
    5. 'that' → logprob: -3.648670196533203
    6. ' with' → logprob: -3.898670196533203
    7. '   ' → logprob: -4.148670196533203
    8. 'with' → logprob: -4.523670196533203
    9. ' for' → logprob: -4.773670196533203
    10. ' continue' → logprob: -4.898670196533203

Token 686: ' no' (ID: 860)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2969394028186798
    2. ' must' → logprob: -2.5469393730163574
    3. ' for' → logprob: -3.7969393730163574
    4. '
' → logprob: -3.7969393730163574
    5. 'for' → logprob: -3.7969393730163574
    6. ' are' → logprob: -3.9219393730163574
    7. 'must' → logprob: -3.9219393730163574
    8. ' that' → logprob: -4.046939373016357
    9. ' =' → logprob: -4.046939373016357
    10. '                   ' → logprob: -5.046939373016357

Token 687: ' overlap' (ID: 56631)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.3572339117527008
    2. '_overlap' → logprob: -1.9822338819503784
    3. ' overlap' → logprob: -2.357234001159668
    4. 'over' → logprob: -3.357234001159668
    5. 'long' → logprob: -4.232234001159668
    6. '   ' → logprob: -4.857234001159668
    7. ' longer' → logprob: -5.482234001159668
    8. '
' → logprob: -6.232234001159668
    9. ' overlaps' → logprob: -6.857234001159668
    10. ' overlapping' → logprob: -7.107234001159668

Token 688: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13567079603672028
    2. '
' → logprob: -2.2606709003448486
    3. '    
' → logprob: -4.7606706619262695
    4. ' for' → logprob: -5.1356706619262695
    5. 'for' → logprob: -5.6356706619262695
    6. '<|end|>' → logprob: -6.0106706619262695
    7. '<|end|>' → logprob: -7.0106706619262695
    8. '  
' → logprob: -7.5106706619262695
    9. '```' → logprob: -8.76067066192627
    10. ' ' → logprob: -9.38567066192627

Token 689: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39151647686958313
    2. 'for' → logprob: -1.3915164470672607
    3. ' for' → logprob: -3.0165164470672607
    4. '
' → logprob: -3.7665164470672607
    5. '```' → logprob: -6.39151668548584
    6. '    
' → logprob: -7.01651668548584
    7. ' ' → logprob: -8.01651668548584
    8. '  
' → logprob: -9.01651668548584
    9. '``' → logprob: -9.89151668548584
    10. 'result' → logprob: -11.01651668548584

Token 690: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14279958605766296
    2. 'for' → logprob: -2.5177996158599854
    3. '
' → logprob: -3.5177996158599854
    4. ' for' → logprob: -3.8927996158599854
    5. '    
' → logprob: -6.267799377441406
    6. '```' → logprob: -8.017799377441406
    7. ' ' → logprob: -9.767799377441406
    8. '  
' → logprob: -10.267799377441406
    9. ' 
' → logprob: -11.017799377441406
    10. '<|end|>' → logprob: -11.517799377441406

Token 691: ' So' (ID: 2632)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4656094014644623
    2. '
' → logprob: -1.0906094312667847
    3. 'for' → logprob: -3.965609312057495
    4. ' for' → logprob: -4.715609550476074
    5. '    
' → logprob: -4.840609550476074
    6. 'result' → logprob: -9.590609550476074
    7. '```' → logprob: -9.590609550476074
    8. ' 
' → logprob: -9.715609550476074
    9. '

' → logprob: -9.965609550476074
    10. '  
' → logprob: -10.215609550476074

Token 692: ' count' (ID: 3605)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.43962737917900085
    2. ' for' → logprob: -1.5646274089813232
    3. 'for' → logprob: -1.9396274089813232
    4. '
' → logprob: -6.064627170562744
    5. ' ' → logprob: -8.189627647399902
    6. ' result' → logprob: -10.064627647399902
    7. '    
' → logprob: -10.064627647399902
    8. 'result' → logprob: -10.939627647399902
    9. 'def' → logprob: -11.064627647399902
    10. ' max' → logprob: -11.564627647399902

Token 693: ' how' (ID: 1495)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6216517090797424
    2. ' for' → logprob: -1.3716516494750977
    3. '   ' → logprob: -2.4966516494750977
    4. ' =' → logprob: -2.4966516494750977
    5. '=' → logprob: -4.246651649475098
    6. '
' → logprob: -4.621651649475098
    7. 'count' → logprob: -5.246651649475098
    8. 's' → logprob: -5.746651649475098
    9. ' s' → logprob: -6.996651649475098
    10. ' ' → logprob: -6.996651649475098

Token 694: ' many' (ID: 1991)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8996803760528564
    2. ' for' → logprob: -1.0246803760528564
    3. ' many' → logprob: -2.1496803760528564
    4. 's' → logprob: -3.1496803760528564
    5. 'many' → logprob: -3.5246803760528564
    6. ' s' → logprob: -5.274680137634277
    7. ' keys' → logprob: -5.274680137634277
    8. ' only' → logprob: -5.399680137634277
    9. ' can' → logprob: -5.524680137634277
    10. '   ' → logprob: -5.524680137634277

Token 695: ' distinct' (ID: 16913)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8783424496650696
    2. 'for' → logprob: -0.8783424496650696
    3. 's' → logprob: -2.628342390060425
    4. ' sequences' → logprob: -3.753342390060425
    5. ' s' → logprob: -3.878342390060425
    6. 'keys' → logprob: -4.378342628479004
    7. 'strings' → logprob: -4.503342628479004
    8. ' keys' → logprob: -4.753342628479004
    9. 'se' → logprob: -5.253342628479004
    10. ' strings' → logprob: -5.503342628479004

Token 696: ' (' (ID: 350)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.1821637153625488
    2. 'positions' → logprob: -1.5571637153625488
    3. 'se' → logprob: -1.9321637153625488
    4. 'strings' → logprob: -2.307163715362549
    5. 'keys' → logprob: -2.682163715362549
    6. ' sequences' → logprob: -2.932163715362549
    7. ' keys' → logprob: -3.932163715362549
    8. ' positions' → logprob: -3.932163715362549
    9. ' s' → logprob: -4.182163715362549
    10. ' strings' → logprob: -4.682163715362549

Token 697: 'x' (ID: 87)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.36285462975502014
    2. ' s' → logprob: -1.7378545999526978
    3. 'found' → logprob: -3.4878547191619873
    4. 'start' → logprob: -3.9878547191619873
    5. ' start' → logprob: -4.612854480743408
    6. 'len' → logprob: -4.737854480743408
    7. '(x' → logprob: -4.737854480743408
    8. ' (' → logprob: -4.987854480743408
    9. ' sequences' → logprob: -4.987854480743408
    10. ' found' → logprob: -5.237854480743408

Token 698: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.008877855725586414
    2. ',' → logprob: -4.758877754211426
    3. ' ,' → logprob: -8.508877754211426
    4. ',d' → logprob: -11.008877754211426
    5. 'y' → logprob: -11.133877754211426
    6. ',s' → logprob: -11.758877754211426
    7. ',
' → logprob: -12.008877754211426
    8. 's' → logprob: -12.133877754211426
    9. '
' → logprob: -12.383877754211426
    10. ')' → logprob: -13.383877754211426

Token 699: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06045597046613693
    2. ')' → logprob: -3.5604560375213623
    3. ',d' → logprob: -3.8104560375213623
    4. ' ,' → logprob: -5.560455799102783
    5. '
' → logprob: -7.060455799102783
    6. '),' → logprob: -7.060455799102783
    7. ',
' → logprob: -7.435455799102783
    8. 's' → logprob: -7.810455799102783
    9. '   ' → logprob: -8.060456275939941
    10. ',s' → logprob: -8.435456275939941

Token 700: 'dx' (ID: 22100)
  Prédit: 'dx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.0007015953888185322
    2. ' dx' → logprob: -7.625701427459717
    3. '
' → logprob: -9.625701904296875
    4. ')' → logprob: -10.000701904296875
    5. '   ' → logprob: -10.125701904296875
    6. '(dx' → logprob: -11.125701904296875
    7. 'def' → logprob: -11.375701904296875
    8. ' ' → logprob: -12.000701904296875
    9. ',' → logprob: -12.125701904296875
    10. '```' → logprob: -12.375701904296875

Token 701: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.21430787444114685
    2. ')' → logprob: -1.7143079042434692
    3. ',d' → logprob: -4.71430778503418
    4. 's' → logprob: -6.46430778503418
    5. '
' → logprob: -7.58930778503418
    6. ' ,' → logprob: -7.71430778503418
    7. ',s' → logprob: -8.08930778503418
    8. ',
' → logprob: -8.21430778503418
    9. ')s' → logprob: -8.21430778503418
    10. '),' → logprob: -9.33930778503418

Token 702: 'dy' (ID: 7593)
  Prédit: 'dy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -6.392202976712724e-06
    2. ' dy' → logprob: -12.000006675720215
    3. ')' → logprob: -16.1250057220459
    4. '
' → logprob: -17.0000057220459
    5. 'dz' → logprob: -17.7500057220459
    6. '   ' → logprob: -18.8750057220459
    7. 'Dy' → logprob: -19.3750057220459
    8. '

' → logprob: -19.5000057220459
    9. 'd' → logprob: -19.7500057220459
    10. 'dx' → logprob: -20.1250057220459

Token 703: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004509988706558943
    2. ')s' → logprob: -5.629509925842285
    3. 's' → logprob: -7.754509925842285
    4. ')
' → logprob: -9.129509925842285
    5. ' )' → logprob: -9.254509925842285
    6. '   ' → logprob: -9.254509925842285
    7. ' ' → logprob: -10.379509925842285
    8. '
' → logprob: -10.504509925842285
    9. ')set' → logprob: -10.504509925842285
    10. 'sets' → logprob: -10.754509925842285

Token 704: ' appear' (ID: 7680)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8993768095970154
    2. ' =' → logprob: -1.2743768692016602
    3. 'items' → logprob: -2.77437686920166
    4. 'appear' → logprob: -2.77437686920166
    5. ' for' → logprob: -3.27437686920166
    6. '=' → logprob: -3.27437686920166
    7. 'for' → logprob: -4.02437686920166
    8. ')' → logprob: -4.27437686920166
    9. 'values' → logprob: -4.64937686920166
    10. '
' → logprob: -4.64937686920166

Token 705: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20729488134384155
    2. ' for' → logprob: -2.7072949409484863
    3. 'for' → logprob: -2.8322949409484863
    4. '
' → logprob: -3.2072949409484863
    5. '                   ' → logprob: -4.582294940948486
    6. ',' → logprob: -5.207294940948486
    7. ',
' → logprob: -6.082294940948486
    8. ' in' → logprob: -6.832294940948486
    9. 's' → logprob: -8.332294464111328
    10. 'in' → logprob: -8.332294464111328

Token 706: ' each' (ID: 2454)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.11363419890403748
    2. ' s' → logprob: -3.1136341094970703
    3. 'found' → logprob: -3.4886341094970703
    4. 'each' → logprob: -3.7386341094970703
    5. ' each' → logprob: -5.48863410949707
    6. ' found' → logprob: -5.98863410949707
    7. 'the' → logprob: -6.86363410949707
    8. ' the' → logprob: -7.61363410949707
    9. 'that' → logprob: -8.98863410949707
    10. ' that' → logprob: -9.23863410949707

Token 707: ' string' (ID: 1621)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.936229944229126
    2. 'string' → logprob: -1.311229944229126
    3. ' string' → logprob: -2.311229944229126
    4. ' s' → logprob: -2.311229944229126
    5. ' sequence' → logprob: -2.311229944229126
    6. 'sequence' → logprob: -3.436229944229126
    7. ' key' → logprob: -5.936229705810547
    8. '(s' → logprob: -6.061229705810547
    9. 'token' → logprob: -7.186229705810547
    10. ' token' → logprob: -7.186229705810547

Token 708: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013632715679705143
    2. '
' → logprob: -4.388632774353027
    3. 'for' → logprob: -7.263632774353027
    4. ' for' → logprob: -9.013632774353027
    5. '    
' → logprob: -9.013632774353027
    6. '<|end|>' → logprob: -10.013632774353027
    7. ',' → logprob: -10.513632774353027
    8. 'def' → logprob: -10.763632774353027
    9. '<|end|>' → logprob: -11.013632774353027
    10. 'count' → logprob: -11.388632774353027

Token 709: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021263720467686653
    2. '
' → logprob: -4.271263599395752
    3. 'for' → logprob: -6.021263599395752
    4. ' for' → logprob: -6.271263599395752
    5. '```' → logprob: -7.021263599395752
    6. '    
' → logprob: -7.021263599395752
    7. '<|end|>' → logprob: -7.146263599395752
    8. '  
' → logprob: -9.77126407623291
    9. '<|end|>' → logprob: -10.14626407623291
    10. ' ' → logprob: -10.14626407623291

Token 710: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.038636915385723114
    2. 'for' → logprob: -3.6636369228363037
    3. ' for' → logprob: -5.163636684417725
    4. '
' → logprob: -5.163636684417725
    5. 'result' → logprob: -8.038637161254883
    6. '    
' → logprob: -8.538637161254883
    7. '```' → logprob: -9.163637161254883
    8. ' ' → logprob: -9.663637161254883
    9. 'count' → logprob: -10.538637161254883
    10. ' result' → logprob: -11.163637161254883

Token 711: ' Actually' (ID: 50557)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0219639390707016
    2. 'for' → logprob: -4.021964073181152
    3. ' for' → logprob: -5.771964073181152
    4. '
' → logprob: -7.646964073181152
    5. 'result' → logprob: -9.646964073181152
    6. '    
' → logprob: -10.021964073181152
    7. 'max' → logprob: -10.271964073181152
    8. '```' → logprob: -10.396964073181152
    9. 'count' → logprob: -11.896964073181152
    10. 'possible' → logprob: -12.271964073181152

Token 712: ' done' (ID: 4167)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3886833190917969
    2. 'for' → logprob: -1.6386833190917969
    3. '   ' → logprob: -2.138683319091797
    4. '
' → logprob: -5.263683319091797
    5. ' ' → logprob: -7.138683319091797
    6. ' result' → logprob: -7.263683319091797
    7. 'result' → logprob: -7.513683319091797
    8. 'max' → logprob: -7.763683319091797
    9. ' max' → logprob: -8.138683319091797
    10. ' duplicates' → logprob: -8.138683319091797

Token 713: ' in' (ID: 306)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3239322304725647
    2. '
' → logprob: -1.32393217086792
    3. 'for' → logprob: -5.07393217086792
    4. ' for' → logprob: -5.82393217086792
    5. '    
' → logprob: -6.82393217086792
    6. 'def' → logprob: -9.823932647705078
    7. '

' → logprob: -10.073932647705078
    8. '
' → logprob: -10.323932647705078
    9. '<|end|>' → logprob: -10.448932647705078
    10. '```' → logprob: -10.698932647705078

Token 714: ' found' (ID: 2491)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.874837338924408
    2. 'the' → logprob: -1.3748373985290527
    3. ' the' → logprob: -1.9998373985290527
    4. '
' → logprob: -2.8748373985290527
    5. 'found' → logprob: -2.8748373985290527
    6. '```' → logprob: -3.8748373985290527
    7. 'def' → logprob: -5.124837398529053
    8. ' found' → logprob: -5.249837398529053
    9. 'if' → logprob: -5.249837398529053
    10. 'this' → logprob: -5.374837398529053

Token 715: ' dict' (ID: 11878)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11732403188943863
    2. '
' → logprob: -2.242324113845825
    3. '    
' → logprob: -6.117323875427246
    4. 'for' → logprob: -6.492323875427246
    5. ' for' → logprob: -7.367323875427246
    6. '  
' → logprob: -10.367323875427246
    7. '

' → logprob: -10.992323875427246
    8. '
' → logprob: -11.242323875427246
    9. '```' → logprob: -11.242323875427246
    10. '<|end|>' → logprob: -11.617323875427246

Token 716: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0591331347823143
    2. '
' → logprob: -2.9341330528259277
    3. 'for' → logprob: -6.309133052825928
    4. '    
' → logprob: -6.309133052825928
    5. ' for' → logprob: -7.559133052825928
    6. '
' → logprob: -11.309133529663086
    7. '<|end|>' → logprob: -11.309133529663086
    8. '  
' → logprob: -11.434133529663086
    9. '        
' → logprob: -11.809133529663086
    10. 'def' → logprob: -12.059133529663086

Token 717: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0024575800634920597
    2. '
' → logprob: -6.502457618713379
    3. 'for' → logprob: -7.752457618713379
    4. '    
' → logprob: -7.752457618713379
    5. ' for' → logprob: -9.627457618713379
    6. '```' → logprob: -11.002457618713379
    7. '<|end|>' → logprob: -12.502457618713379
    8. '  
' → logprob: -13.377457618713379
    9. '       ' → logprob: -13.752457618713379
    10. '        
' → logprob: -13.877457618713379

Token 718: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07250805199146271
    2. '
' → logprob: -2.9475080966949463
    3. 'for' → logprob: -4.572507858276367
    4. ' for' → logprob: -5.322507858276367
    5. '    
' → logprob: -6.197507858276367
    6. '```' → logprob: -9.072507858276367
    7. ' 
' → logprob: -10.697507858276367
    8. '  
' → logprob: -10.947507858276367
    9. 'max' → logprob: -11.072507858276367
    10. '        
' → logprob: -11.697507858276367

Token 719: ' Select' (ID: 13482)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1373312622308731
    2. 'c' → logprob: -2.887331247329712
    3. ' for' → logprob: -3.387331247329712
    4. '   ' → logprob: -4.262331485748291
    5. 'res' → logprob: -4.762331485748291
    6. 'max' → logprob: -5.887331485748291
    7. '#' → logprob: -6.137331485748291
    8. 'result' → logprob: -6.137331485748291
    9. ' candidates' → logprob: -6.387331485748291
    10. 'duplicates' → logprob: -6.637331485748291

Token 720: ' those' (ID: 2617)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6016802787780762
    2. ' s' → logprob: -1.6016802787780762
    3. ' for' → logprob: -2.351680278778076
    4. 's' → logprob: -2.476680278778076
    5. 'for' → logprob: -2.976680278778076
    6. '(s' → logprob: -5.101680278778076
    7. ' ' → logprob: -6.601680278778076
    8. ' candidates' → logprob: -6.601680278778076
    9. '(' → logprob: -6.726680278778076
    10. ' (' → logprob: -7.101680278778076

Token 721: ' with' (ID: 483)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6953952312469482
    2. ' =' → logprob: -1.9453952312469482
    3. 's' → logprob: -2.5703952312469482
    4. '   ' → logprob: -2.6953952312469482
    5. ' s' → logprob: -2.8203952312469482
    6. ' strings' → logprob: -3.4453952312469482
    7. ' candidates' → logprob: -3.8203952312469482
    8. ' with' → logprob: -4.445395469665527
    9. 'for' → logprob: -4.445395469665527
    10. ' keys' → logprob: -4.445395469665527

Token 722: ' at' (ID: 540)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.4500076174736023
    2. 'max' → logprob: -1.075007677078247
    3. 'length' → logprob: -4.825007438659668
    4. ' max' → logprob: -4.950007438659668
    5. ' len' → logprob: -5.325007438659668
    6. ' length' → logprob: -8.075007438659668
    7. '   ' → logprob: -8.575007438659668
    8. 'count' → logprob: -8.950007438659668
    9. 'maximum' → logprob: -9.200007438659668
    10. 'any' → logprob: -9.825007438659668

Token 723: ' least' (ID: 5153)
  Prédit: 'least'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'least' → logprob: -0.0009262301027774811
    2. ' least' → logprob: -7.0009260177612305
    3. 'len' → logprob: -11.75092601776123
    4. '   ' → logprob: -13.12592601776123
    5. 'lest' → logprob: -13.87592601776123
    6. 'lease' → logprob: -13.87592601776123
    7. 'east' → logprob: -13.87592601776123
    8. 'Least' → logprob: -14.37592601776123
    9. 'length' → logprob: -14.87592601776123
    10. '
' → logprob: -15.25092601776123

Token 724: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.011141437105834484
    2. ' ' → logprob: -4.511141300201416
    3. ' two' → logprob: -9.511141777038574
    4. 'len' → logprob: -11.511141777038574
    5. 'two' → logprob: -11.761141777038574
    6. '   ' → logprob: -14.011141777038574
    7. ' len' → logprob: -14.386141777038574
    8. '  ' → logprob: -16.261140823364258
    9. 'length' → logprob: -16.261140823364258
    10. '3' → logprob: -16.886140823364258

Token 725: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00033045929740183055
    2. ' ' → logprob: -8.125330924987793
    3. 'two' → logprob: -10.875330924987793
    4. ' two' → logprob: -11.750330924987793
    5. 'len' → logprob: -11.875330924987793
    6. '   ' → logprob: -14.875330924987793
    7. '1' → logprob: -16.000329971313477
    8. 'length' → logprob: -16.500329971313477
    9. '3' → logprob: -16.500329971313477
    10. ' len' → logprob: -17.375329971313477

Token 726: ' distinct' (ID: 16913)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.69225013256073
    2. 'for' → logprob: -0.94225013256073
    3. '   ' → logprob: -3.0672502517700195
    4. '
' → logprob: -3.5672502517700195
    5. ' occurrences' → logprob: -4.3172502517700195
    6. 'occ' → logprob: -5.0672502517700195
    7. ' sequences' → logprob: -5.6922502517700195
    8. 'positions' → logprob: -6.4422502517700195
    9. 'found' → logprob: -6.5672502517700195
    10. 's' → logprob: -6.9422502517700195

Token 727: ' positions' (ID: 15897)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.10785288363695145
    2. ' positions' → logprob: -2.7328529357910156
    3. ' occurrences' → logprob: -4.357852935791016
    4. 'locations' → logprob: -4.857852935791016
    5. 'occ' → logprob: -4.982852935791016
    6. 'instances' → logprob: -6.107852935791016
    7. 'entries' → logprob: -6.357852935791016
    8. 'appear' → logprob: -6.482852935791016
    9. ' locations' → logprob: -6.732852935791016
    10. ' sequences' → logprob: -7.357852935791016

Token 728: '/d' (ID: 6662)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11581245809793472
    2. '
' → logprob: -2.2408125400543213
    3. 'result' → logprob: -7.115812301635742
    4. 'for' → logprob: -7.240812301635742
    5. '    
' → logprob: -7.240812301635742
    6. ' and' → logprob: -8.740812301635742
    7. 'and' → logprob: -9.115812301635742
    8. ' for' → logprob: -9.240812301635742
    9. 'results' → logprob: -9.365812301635742
    10. '
' → logprob: -9.990812301635742

Token 729: 'irections' (ID: 119283)
  Prédit: 'irections'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'irections' → logprob: -0.000511091377120465
    2. 'x' → logprob: -8.625511169433594
    3. 'ifferent' → logprob: -9.250511169433594
    4. 'ir' → logprob: -10.000511169433594
    5. 'irs' → logprob: -10.125511169433594
    6. 'ire' → logprob: -10.375511169433594
    7. 'e' → logprob: -11.000511169433594
    8. '
' → logprob: -11.125511169433594
    9. 'ist' → logprob: -11.375511169433594
    10. 'es' → logprob: -11.500511169433594

Token 730: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6419124007225037
    2. '
' → logprob: -0.7669124007225037
    3. '    
' → logprob: -5.016912460327148
    4. 'for' → logprob: -7.016912460327148
    5. 'result' → logprob: -7.266912460327148
    6. ' for' → logprob: -8.016912460327148
    7. '<|end|>' → logprob: -9.141912460327148
    8. '  
' → logprob: -9.266912460327148
    9. '
' → logprob: -9.516912460327148
    10. 'results' → logprob: -9.641912460327148

Token 731: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0022954940795898438
    2. '
' → logprob: -6.37729549407959
    3. 'for' → logprob: -8.00229549407959
    4. ' for' → logprob: -8.62729549407959
    5. '    
' → logprob: -10.25229549407959
    6. 'result' → logprob: -10.50229549407959
    7. ' result' → logprob: -12.37729549407959
    8. 'results' → logprob: -13.25229549407959
    9. '```' → logprob: -13.37729549407959
    10. ' candidates' → logprob: -13.87729549407959

Token 732: ' candidates' (ID: 18116)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13203971087932587
    2. 'for' → logprob: -2.257039785385132
    3. ' for' → logprob: -4.632039546966553
    4. 'c' → logprob: -4.882039546966553
    5. 'result' → logprob: -7.507039546966553
    6. ' candidates' → logprob: -7.882039546966553
    7. '```' → logprob: -8.382040023803711
    8. 'max' → logprob: -8.882040023803711
    9. 'long' → logprob: -9.757040023803711
    10. '
' → logprob: -9.882040023803711

Token 733: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2519338130950928
    2. ' =' → logprob: -1.5019338130950928
    3. '=[' → logprob: -13.126934051513672
    4. ' =[' → logprob: -13.751934051513672
    5. '=[]' → logprob: -14.251934051513672
    6. ' ' → logprob: -14.751934051513672
    7. '   ' → logprob: -15.251934051513672
    8. '=
' → logprob: -16.751934051513672
    9. '=[]
' → logprob: -16.876934051513672
    10. '＝' → logprob: -17.126934051513672

Token 734: ' [' (ID: 723)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.9182599186897278
    2. '{k' → logprob: -0.9182599186897278
    3. '{s' → logprob: -2.418259859085083
    4. ' {' → logprob: -2.418259859085083
    5. '[s' → logprob: -4.418260097503662
    6. '[k' → logprob: -5.418260097503662
    7. ' [' → logprob: -5.543260097503662
    8. '{x' → logprob: -6.418260097503662
    9. '   ' → logprob: -7.418260097503662
    10. '{name' → logprob: -8.293259620666504

Token 735: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2580135762691498
    2. '(s' → logprob: -1.5080136060714722
    3. 'k' → logprob: -5.758013725280762
    4. '(k' → logprob: -6.133013725280762
    5. '(key' → logprob: -8.758013725280762
    6. 'key' → logprob: -8.758013725280762
    7. ' s' → logprob: -8.758013725280762
    8. ' (' → logprob: -9.008013725280762
    9. '(' → logprob: -9.258013725280762
    10. '[s' → logprob: -11.133013725280762

Token 736: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.20141783356666565
    2. 'for' → logprob: -1.7014178037643433
    3. ' ' → logprob: -13.326417922973633
    4. '   ' → logprob: -13.576417922973633
    5. 's' → logprob: -14.076417922973633
    6. '    ' → logprob: -15.076417922973633
    7. '```' → logprob: -16.201417922973633
    8. ' s' → logprob: -16.201417922973633
    9. '  ' → logprob: -16.826417922973633
    10. '
' → logprob: -16.826417922973633

Token 737: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.029751067981123924
    2. ' s' → logprob: -3.5297510623931885
    3. '_s' → logprob: -15.27975082397461
    4. ',' → logprob: -15.90475082397461
    5. '(s' → logprob: -16.27975082397461
    6. '	s' → logprob: -16.90475082397461
    7. ',s' → logprob: -17.27975082397461
    8. ' ' → logprob: -18.15475082397461
    9. '`s' → logprob: -18.65475082397461
    10. ' (' → logprob: -19.02975082397461

Token 738: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5463730692863464
    2. ',' → logprob: -1.2963731288909912
    3. ',s' → logprob: -2.171373128890991
    4. 's' → logprob: -4.046372890472412
    5. 'in' → logprob: -4.296372890472412
    6. ' s' → logprob: -6.421372890472412
    7. ' ,' → logprob: -7.421372890472412
    8. ',count' → logprob: -10.67137336730957
    9. ',in' → logprob: -11.04637336730957
    10. ' ' → logprob: -11.42137336730957

Token 739: ' spots' (ID: 25522)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.442640483379364
    2. 'pos' → logprob: -1.3176405429840088
    3. 'poses' → logprob: -2.817640542984009
    4. ' positions' → logprob: -3.692640542984009
    5. 'v' → logprob: -7.06764030456543
    6. 'occ' → logprob: -7.31764030456543
    7. 'ps' → logprob: -7.44264030456543
    8. ' pos' → logprob: -7.56764030456543
    9. 'loc' → logprob: -7.69264030456543
    10. 'pts' → logprob: -7.69264030456543

Token 740: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03367508947849274
    2. 'in' → logprob: -3.408675193786621
    3. ',' → logprob: -10.658675193786621
    4. ' ' → logprob: -12.533675193786621
    5. 's' → logprob: -13.533675193786621
    6. '
' → logprob: -15.283675193786621
    7. 'set' → logprob: -15.533675193786621
    8. ')' → logprob: -16.408674240112305
    9. '	in' → logprob: -16.658674240112305
    10. '   ' → logprob: -16.783674240112305

Token 741: ' found' (ID: 2491)
  Prédit: 'spots'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'spots' → logprob: -0.47116002440452576
    2. ' spots' → logprob: -1.2211600542068481
    3. 'found' → logprob: -2.7211599349975586
    4. ' found' → logprob: -4.221159934997559
    5. '(found' → logprob: -8.721159934997559
    6. 'spot' → logprob: -10.221159934997559
    7. '(' → logprob: -10.596159934997559
    8. '[' → logprob: -10.971159934997559
    9. '(sp' → logprob: -11.221159934997559
    10. ' (' → logprob: -11.346159934997559

Token 742: '.items' (ID: 19607)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.06009862944483757
    2. ' in' → logprob: -3.185098648071289
    3. 'if' → logprob: -4.310098648071289
    4. '.items' → logprob: -6.310098648071289
    5. 'items' → logprob: -6.935098648071289
    6. ' ' → logprob: -8.560098648071289
    7. ' items' → logprob: -8.560098648071289
    8. '()' → logprob: -8.685098648071289
    9. '   ' → logprob: -9.685098648071289
    10. 'in' → logprob: -9.685098648071289

Token 743: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.005598714575171471
    2. ' if' → logprob: -5.380598545074463
    3. 'if' → logprob: -7.380598545074463
    4. '   ' → logprob: -8.005599021911621
    5. ' ()' → logprob: -11.255599021911621
    6. '       ' → logprob: -12.755599021911621
    7. '    ' → logprob: -13.255599021911621
    8. ' ' → logprob: -13.255599021911621
    9. '()]' → logprob: -14.255599021911621
    10. '  ' → logprob: -14.880599021911621

Token 744: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.10033261030912399
    2. 'if' → logprob: -2.350332498550415
    3. '   ' → logprob: -9.100332260131836
    4. '       ' → logprob: -12.225332260131836
    5. ' ' → logprob: -12.475332260131836
    6. '    ' → logprob: -12.975332260131836
    7. '           ' → logprob: -13.850332260131836
    8. '	if' → logprob: -14.100332260131836
    9. '  ' → logprob: -14.600332260131836
    10. '        ' → logprob: -14.975332260131836

Token 745: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.10020720958709717
    2. ' len' → logprob: -2.3502073287963867
    3. '(len' → logprob: -14.600207328796387
    4. '   ' → logprob: -16.60020637512207
    5. '	len' → logprob: -18.22520637512207
    6. ' ' → logprob: -18.72520637512207
    7. '    ' → logprob: -19.22520637512207
    8. '
' → logprob: -20.85020637512207
    9. ',len' → logprob: -20.85020637512207
    10. '  ' → logprob: -20.97520637512207

Token 746: '(sp' (ID: 33591)
  Prédit: '(sp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sp' → logprob: -0.00011725161311915144
    2. '(' → logprob: -9.750117301940918
    3. ' (' → logprob: -9.750117301940918
    4. '(
' → logprob: -15.250117301940918
    5. '(sl' → logprob: -15.750117301940918
    6. 'spots' → logprob: -16.1251163482666
    7. ' spots' → logprob: -16.8751163482666
    8. '(s' → logprob: -16.8751163482666
    9. '
' → logprob: -17.1251163482666
    10. '>' → logprob: -17.7501163482666

Token 747: 'ots' (ID: 2677)
  Prédit: 'ots'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ots' → logprob: -5.1689596148207784e-05
    2. '>' → logprob: -11.500051498413086
    3. 'pots' → logprob: -11.500051498413086
    4. 'ot' → logprob: -11.875051498413086
    5. 'orts' → logprob: -12.125051498413086
    6. ' ots' → logprob: -12.250051498413086
    7. '{' → logprob: -12.625051498413086
    8. '```' → logprob: -13.000051498413086
    9. '(' → logprob: -13.750051498413086
    10. 'spots' → logprob: -13.875051498413086

Token 748: ')' (ID: 8)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.9459409713745117
    2. ')' → logprob: -1.1959409713745117
    3. ' >=' → logprob: -1.3209409713745117
    4. '>' → logprob: -3.6959409713745117
    5. ')>=' → logprob: -4.195940971374512
    6. ' >' → logprob: -6.195940971374512
    7. ' )' → logprob: -8.445940971374512
    8. ')>' → logprob: -8.820940971374512
    9. ']>=' → logprob: -9.945940971374512
    10. ' ' → logprob: -10.820940971374512

Token 749: ' >' (ID: 1424)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.39654287695884705
    2. ' >=' → logprob: -1.1465429067611694
    3. '>' → logprob: -4.771543025970459
    4. ' >' → logprob: -6.771543025970459
    5. ' ' → logprob: -12.6465425491333
    6. ')>=' → logprob: -12.6465425491333
    7. '≥' → logprob: -13.1465425491333
    8. '   ' → logprob: -13.5215425491333
    9. ']>=' → logprob: -13.7715425491333
    10. ' ' → logprob: -15.1465425491333

Token 750: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.167648876318708e-05
    2. ' ' → logprob: -10.125041961669922
    3. '=' → logprob: -13.625041961669922
    4. '
' → logprob: -16.250041961669922
    5. '```' → logprob: -16.625041961669922
    6. '>' → logprob: -16.750041961669922
    7. '   ' → logprob: -17.625041961669922
    8. '۱' → logprob: -19.250041961669922
    9. '{
' → logprob: -19.500041961669922
    10. '{' → logprob: -19.500041961669922

Token 751: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.41866585687967e-06
    2. ' ' → logprob: -12.000008583068848
    3. '=' → logprob: -13.250008583068848
    4. '
' → logprob: -15.750008583068848
    5. '```' → logprob: -16.75000762939453
    6. '   ' → logprob: -16.87500762939453
    7. '{' → logprob: -17.37500762939453
    8. '>' → logprob: -17.87500762939453
    9. '{
' → logprob: -18.25000762939453
    10. '' → logprob: -18.87500762939453

Token 752: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.07358743995428085
    2. ' and' → logprob: -2.823587417602539
    3. 'and' → logprob: -4.573587417602539
    4. ' ]' → logprob: -7.573587417602539
    5. ']
' → logprob: -7.948587417602539
    6. '   ' → logprob: -8.073587417602539
    7. ']

' → logprob: -10.823587417602539
    8. ' if' → logprob: -11.073587417602539
    9. 'if' → logprob: -12.698587417602539
    10. ')' → logprob: -12.698587417602539

Token 753: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009942247532308102
    2. '<|end|>' → logprob: -5.009942054748535
    3. '```' → logprob: -6.884942054748535
    4. '
' → logprob: -7.384942054748535
    5. '    
' → logprob: -8.134942054748535
    6. '_candidates' → logprob: -8.134942054748535
    7. ' candidates' → logprob: -8.384942054748535
    8. 'for' → logprob: -8.759942054748535
    9. ' for' → logprob: -8.884942054748535
    10. '<|end|>' → logprob: -9.134942054748535

Token 754: ' if' (ID: 538)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.2763051390647888
    2. '   ' → logprob: -1.5263051986694336
    3. 'if' (adapté à ' if') → logprob: -4.026305198669434
    4. 'for' → logprob: -5.901305198669434
    5. '
' → logprob: -6.651305198669434
    6. ' if' → logprob: -6.776305198669434
    7. ' candidates' → logprob: -7.026305198669434
    8. ' for' → logprob: -9.276305198669434
    9. ' c' → logprob: -10.526305198669434
    10. '_candidates' → logprob: -11.026305198669434

Token 755: ' not' (ID: 625)
  Prédit: ' candidates'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' candidates' → logprob: -0.5846664905548096
    2. ' not' → logprob: -0.8346664905548096
    3. 'c' → logprob: -4.9596662521362305
    4. 'not' → logprob: -6.4596662521362305
    5. ' len' → logprob: -10.08466625213623
    6. ' ' → logprob: -10.08466625213623
    7. ' c' → logprob: -11.33466625213623
    8. ' max' → logprob: -12.08466625213623
    9. 'len' → logprob: -12.70966625213623
    10. '_candidates' → logprob: -13.83466625213623

Token 756: ' candidates' (ID: 18116)
  Prédit: ' candidates'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' candidates' → logprob: -0.5759398937225342
    2. 'c' → logprob: -0.8259398937225342
    3. '_candidates' → logprob: -15.700940132141113
    4. ' c' → logprob: -16.200939178466797
    5. ' candidats' → logprob: -16.575939178466797
    6. 'cand' → logprob: -17.700939178466797
    7. ' ' → logprob: -17.700939178466797
    8. 'candidate' → logprob: -17.950939178466797
    9. ' candidatos' → logprob: -19.200939178466797
    10. 'andidates' → logprob: -19.325939178466797

Token 757: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004528861492872238
    2. ':
' → logprob: -5.629528999328613
    3. ':return' → logprob: -7.004528999328613
    4. ' :' → logprob: -11.254528999328613
    5. '   ' → logprob: -13.004528999328613
    6. 'return' → logprob: -13.129528999328613
    7. '==' → logprob: -13.754528999328613
    8. '=' → logprob: -14.879528999328613
    9. '):' → logprob: -15.129528999328613
    10. ' return' → logprob: -15.504528999328613

Token 758: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015370632521808147
    2. '   ' → logprob: -4.265370845794678
    3. ' return' → logprob: -7.015370845794678
    4. 'return' → logprob: -8.39037036895752
    5. '
' → logprob: -9.64037036895752
    6. ',' → logprob: -12.51537036895752
    7. '    ' → logprob: -13.39037036895752
    8. '    
' → logprob: -13.39037036895752
    9. '<|end|>' → logprob: -13.39037036895752
    10. '        
' → logprob: -13.64037036895752

Token 759: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.09794719517230988
    2. '       ' → logprob: -2.972947120666504
    3. ' return' → logprob: -3.347947120666504
    4. '   ' → logprob: -4.972947120666504
    5. '	return' → logprob: -9.847947120666504
    6. ':return' → logprob: -12.097947120666504
    7. '
' → logprob: -12.347947120666504
    8. '{return' → logprob: -13.097947120666504
    9. '    ' → logprob: -13.472947120666504
    10. ' ' → logprob: -13.597947120666504

Token 760: ' "' (ID: 392)
  Prédit: ' None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.12746639549732208
    2. 'None' → logprob: -2.1274664402008057
    3. '
' → logprob: -8.377466201782227
    4. ' ' → logprob: -8.627466201782227
    5. ' 
' → logprob: -10.377466201782227
    6. '0' → logprob: -10.502466201782227
    7. '"' → logprob: -10.502466201782227
    8. '""' → logprob: -11.002466201782227
    9. '   ' → logprob: -12.252466201782227
    10. ' ""
' → logprob: -12.502466201782227

Token 761: '0' (ID: 15)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.9625878930091858
    2. '"' → logprob: -1.087587833404541
    3. '""' → logprob: -1.962587833404541
    4. 'None' → logprob: -2.712587833404541
    5. '"-' → logprob: -3.587587833404541
    6. 'NONE' → logprob: -3.587587833404541
    7. '"No' → logprob: -4.837587833404541
    8. 'NO' → logprob: -5.212587833404541
    9. '''' → logprob: -6.337587833404541
    10. 'No' → logprob: -6.837587833404541

Token 762: '"
' (ID: 1092)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.522287905216217
    2. '"

' → logprob: -1.2722878456115723
    3. '"
' → logprob: -2.1472878456115723
    4. '\n' → logprob: -4.647287845611572
    5. '"


' → logprob: -9.64728832244873
    6. '"

' → logprob: -9.64728832244873
    7. '")' → logprob: -10.27228832244873
    8. '"
' → logprob: -10.39728832244873
    9. '",' → logprob: -10.52228832244873
    10. '"\' → logprob: -11.64728832244873

Token 763: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.40208181738853455
    2. '   ' → logprob: -1.152081847190857
    3. '    
' → logprob: -4.2770819664001465
    4. '\n' → logprob: -8.027081489562988
    5. '  
' → logprob: -8.152081489562988
    6. ' 
' → logprob: -8.277081489562988
    7. '

' → logprob: -9.652081489562988
    8. '
' → logprob: -10.152081489562988
    9. 'return' → logprob: -10.152081489562988
    10. '<|end|>' → logprob: -10.152081489562988

Token 764: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3534771203994751
    2. '   ' → logprob: -2.1034770011901855
    3. 'max' → logprob: -2.3534770011901855
    4. ' max' → logprob: -3.2284770011901855
    5. ' candidates' → logprob: -3.7284770011901855
    6. 'c' → logprob: -4.8534770011901855
    7. '    
' → logprob: -5.6034770011901855
    8. ' 
' → logprob: -6.4784770011901855
    9. 'candidate' → logprob: -6.9784770011901855
    10. '```' → logprob: -7.8534770011901855

Token 765: ' longest' (ID: 37511)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.2883588671684265
    2. 'c' → logprob: -1.7883589267730713
    3. ' max' → logprob: -2.6633589267730713
    4. '   ' → logprob: -5.413358688354492
    5. 'long' → logprob: -5.538358688354492
    6. ' candidates' → logprob: -6.413358688354492
    7. 'best' → logprob: -6.538358688354492
    8. 'return' → logprob: -7.538358688354492
    9. ' longest' → logprob: -7.913358688354492
    10. 'length' → logprob: -8.288358688354492

Token 766: ' length' (ID: 5517)
  Prédit: '_len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_len' → logprob: -0.6822751760482788
    2. '_length' → logprob: -0.9322751760482788
    3. '_candidate' → logprob: -2.4322752952575684
    4. ' =' → logprob: -5.557275295257568
    5. '_candidates' → logprob: -6.182275295257568
    6. '_c' → logprob: -6.307275295257568
    7. '_' → logprob: -6.432275295257568
    8. '_s' → logprob: -6.557275295257568
    9. 'len' → logprob: -7.307275295257568
    10. 'candidate' → logprob: -7.307275295257568

Token 767: ' strings' (ID: 18279)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3927750587463379
    2. ' =' → logprob: -1.142775058746338
    3. '   ' → logprob: -6.142775058746338
    4. '=max' → logprob: -6.142775058746338
    5. '_length' → logprob: -7.142775058746338
    6. '_len' → logprob: -7.642775058746338
    7. 'max' → logprob: -8.89277458190918
    8. 's' → logprob: -10.39277458190918
    9. 'length' → logprob: -10.39277458190918
    10. '=len' → logprob: -10.51777458190918

Token 768: ' only' (ID: 1606)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.28888481855392456
    2. '=' → logprob: -1.4138848781585693
    3. '_candidates' → logprob: -5.41388463973999
    4. '   ' → logprob: -6.53888463973999
    5. '_length' → logprob: -7.66388463973999
    6. '=c' → logprob: -8.038885116577148
    7. '_len' → logprob: -8.288885116577148
    8. '=max' → logprob: -8.913885116577148
    9. '
' → logprob: -9.163885116577148
    10. 'c' → logprob: -9.413885116577148

Token 769: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6156160235404968
    2. ' =' → logprob: -1.8656160831451416
    3. '_candidates' → logprob: -1.9906160831451416
    4. '   ' → logprob: -2.4906160831451416
    5. '_length' → logprob: -3.6156160831451416
    6. '=' → logprob: -4.4906158447265625
    7. '_len' → logprob: -4.6156158447265625
    8. ' candidates' → logprob: -4.8656158447265625
    9. 'length' → logprob: -4.8656158447265625
    10. 'c' → logprob: -5.2406158447265625

Token 770: '   ' (ID: 271)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.33713868260383606
    2. '   ' → logprob: -1.7121386528015137
    3. ' max' → logprob: -2.4621386528015137
    4. 'length' → logprob: -4.462138652801514
    5. 'c' → logprob: -5.462138652801514
    6. ' length' → logprob: -6.462138652801514
    7. ' longest' → logprob: -6.962138652801514
    8. 'long' → logprob: -7.087138652801514
    9. 'maxlength' → logprob: -7.337138652801514
    10. '
' → logprob: -8.587139129638672

Token 771: ' longest' (ID: 37511)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.03203786537051201
    2. 'c' → logprob: -3.7820379734039307
    3. ' max' → logprob: -5.407037734985352
    4. 'length' → logprob: -5.782037734985352
    5. '   ' → logprob: -7.157037734985352
    6. 'maxlength' → logprob: -8.532037734985352
    7. 'long' → logprob: -9.157037734985352
    8. ' candidates' → logprob: -10.282037734985352
    9. ' length' → logprob: -10.407037734985352
    10. 'cand' → logprob: -11.032037734985352

Token 772: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -0.2552584409713745
    2. ' =' → logprob: -2.255258560180664
    3. '_length' → logprob: -2.505258560180664
    4. '=' → logprob: -3.255258560180664
    5. 'len' → logprob: -9.255258560180664
    6. 'length' → logprob: -10.755258560180664
    7. '   ' → logprob: -10.755258560180664
    8. '=len' → logprob: -11.255258560180664
    9. '_candidates' → logprob: -11.630258560180664
    10. '_' → logprob: -11.755258560180664

Token 773: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3135959506034851
    2. '=' → logprob: -1.3135960102081299
    3. '=max' → logprob: -8.06359577178955
    4. 's' → logprob: -11.68859577178955
    5. '_candidates' → logprob: -12.18859577178955
    6. '   ' → logprob: -13.43859577178955
    7. 'max' → logprob: -14.06359577178955
    8. '_=' → logprob: -14.31359577178955
    9. '=int' → logprob: -14.56359577178955
    10. ' candidates' → logprob: -14.56359577178955

Token 774: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.008614808320999146
    2. ' max' → logprob: -4.758615016937256
    3. '   ' → logprob: -15.758614540100098
    4. 'len' → logprob: -16.008615493774414
    5. '0' → logprob: -17.883615493774414
    6. '	max' → logprob: -18.758615493774414
    7. '(max' → logprob: -19.008615493774414
    8. '=max' → logprob: -19.258615493774414
    9. 'maximum' → logprob: -20.633615493774414
    10. 'min' → logprob: -20.883615493774414

Token 775: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -3.082895273109898e-05
    2. 'len' → logprob: -10.500030517578125
    3. '(map' → logprob: -12.750030517578125
    4. '([' → logprob: -16.000030517578125
    5. '(' → logprob: -16.125030517578125
    6. '[len' → logprob: -16.250030517578125
    7. '=len' → logprob: -18.000030517578125
    8. ' len' → logprob: -19.500030517578125
    9. '	len' → logprob: -19.875030517578125
    10. 'map' → logprob: -20.125030517578125

Token 776: '(s' (ID: 1858)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.1603541076183319
    2. '(s' → logprob: -1.9103541374206543
    3. '(candidate' → logprob: -9.160353660583496
    4. 'c' → logprob: -11.410353660583496
    5. 's' → logprob: -11.785353660583496
    6. '(' → logprob: -13.410353660583496
    7. '_candidates' → logprob: -14.035353660583496
    8. 'cand' → logprob: -14.160353660583496
    9. '(max' → logprob: -14.535353660583496
    10. '(
' → logprob: -14.660353660583496

Token 777: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11799630522727966
    2. '(s' → logprob: -2.6179962158203125
    3. ' for' → logprob: -3.4929962158203125
    4. 'for' → logprob: -4.9929962158203125
    5. ' )' → logprob: -7.6179962158203125
    6. '(c' → logprob: -8.492996215820312
    7. 's' → logprob: -8.492996215820312
    8. '()' → logprob: -10.367996215820312
    9. '   ' → logprob: -10.742996215820312
    10. '(' → logprob: -10.742996215820312

Token 778: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.03585715591907501
    2. 'for' → logprob: -3.4108572006225586
    3. ')' → logprob: -6.160857200622559
    4. '(s' → logprob: -10.285857200622559
    5. ' ' → logprob: -11.035857200622559
    6. 'c' → logprob: -11.410857200622559
    7. '   ' → logprob: -11.535857200622559
    8. ' )' → logprob: -12.285857200622559
    9. ' candidates' → logprob: -12.785857200622559
    10. '(c' → logprob: -12.910857200622559

Token 779: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.22994866967201233
    2. 'c' → logprob: -1.72994863986969
    3. ' s' → logprob: -3.7299487590789795
    4. ' candidates' → logprob: -5.6049485206604
    5. ' c' → logprob: -7.9799485206604
    6. '_candidates' → logprob: -9.729948997497559
    7. 'candidate' → logprob: -10.979948997497559
    8. 'cand' → logprob: -11.229948997497559
    9. ' candidats' → logprob: -11.729948997497559
    10. 'Candidates' → logprob: -12.479948997497559

Token 780: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.15550784766674042
    2. 'in' → logprob: -2.030507802963257
    3. 's' → logprob: -4.530508041381836
    4. ' s' → logprob: -6.280508041381836
    5. '(s' → logprob: -10.405508041381836
    6. ' ' → logprob: -10.405508041381836
    7. '<|end|>' → logprob: -11.780508041381836
    8. '_s' → logprob: -11.905508041381836
    9. '=' → logprob: -12.280508041381836
    10. ')' → logprob: -12.530508041381836

Token 781: ' candidates' (ID: 18116)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.000553151941858232
    2. ' candidates' → logprob: -7.500553131103516
    3. 'candidate' → logprob: -15.750553131103516
    4. '_candidates' → logprob: -16.750553131103516
    5. ' candidats' → logprob: -18.125553131103516
    6. '
' → logprob: -18.125553131103516
    7. ' c' → logprob: -18.500553131103516
    8. 'cand' → logprob: -18.625553131103516
    9. '   ' → logprob: -18.875553131103516
    10. 'andidates' → logprob: -19.000553131103516

Token 782: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01687512919306755
    2. ')
' → logprob: -4.891875267028809
    3. '
' → logprob: -5.641875267028809
    4. '<|end|>' → logprob: -6.016875267028809
    5. '   ' → logprob: -6.766875267028809
    6. '<|end|>' → logprob: -6.891875267028809
    7. '+' → logprob: -7.266875267028809
    8. ')+' → logprob: -8.641875267028809
    9. ' +' → logprob: -9.391875267028809
    10. '  
' → logprob: -11.141875267028809

Token 783: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018511608242988586
    2. '
' → logprob: -4.268511772155762
    3. 'for' → logprob: -6.893511772155762
    4. '<|end|>' → logprob: -6.893511772155762
    5. ' for' → logprob: -7.143511772155762
    6. '```' → logprob: -7.393511772155762
    7. 'return' → logprob: -8.768511772155762
    8. ' candidates' → logprob: -9.143511772155762
    9. '    
' → logprob: -9.393511772155762
    10. '<|end|>' → logprob: -9.518511772155762

Token 784: ' longest' (ID: 37511)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.06278657913208
    2. 'c' → logprob: -1.18778657913208
    3. 'long' → logprob: -1.81278657913208
    4. ' longest' → logprob: -2.31278657913208
    5. ' candidates' → logprob: -2.93778657913208
    6. 'for' → logprob: -4.43778657913208
    7. ' for' → logprob: -4.68778657913208
    8. ' long' → logprob: -5.06278657913208
    9. 'final' → logprob: -5.81278657913208
    10. 'candidate' → logprob: -7.06278657913208

Token 785: '_candidates' (ID: 186937)
  Prédit: '_strings'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_strings' → logprob: -1.181099534034729
    2. '_candidates' → logprob: -1.181099534034729
    3. 's' → logprob: -1.306099534034729
    4. '_s' → logprob: -2.9310994148254395
    5. '_str' → logprob: -3.8060994148254395
    6. '_len' → logprob: -4.5560994148254395
    7. ' =' → logprob: -4.6810994148254395
    8. '_sp' → logprob: -5.0560994148254395
    9. '_spell' → logprob: -5.1810994148254395
    10. '=' → logprob: -5.3060994148254395

Token 786: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01815919391810894
    2. '=' → logprob: -4.01815938949585
    3. ' =[' → logprob: -11.643158912658691
    4. '=[' → logprob: -15.143158912658691
    5. ' =
' → logprob: -16.143159866333008
    6. '=[]' → logprob: -17.018159866333008
    7. '=[
' → logprob: -17.393159866333008
    8. '   ' → logprob: -17.768159866333008
    9. 's' → logprob: -18.018159866333008
    10. '=
' → logprob: -18.518159866333008

Token 787: ' [' (ID: 723)
  Prédit: '[s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -0.008810742758214474
    2. ' [' → logprob: -4.758810520172119
    3. '[' → logprob: -9.008810997009277
    4. '[x' → logprob: -10.633810997009277
    5. '[t' → logprob: -10.883810997009277
    6. '[
' → logprob: -11.758810997009277
    7. '[i' → logprob: -12.008810997009277
    8. '[k' → logprob: -12.633810997009277
    9. '[e' → logprob: -13.008810997009277
    10. '[str' → logprob: -13.133810997009277

Token 788: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -9.088346359931165e-07
    2. ' s' → logprob: -14.125000953674316
    3. 'c' → logprob: -16.125
    4. '   ' → logprob: -17.75
    5. '(s' → logprob: -18.5
    6. '[s' → logprob: -19.125
    7. '`s' → logprob: -20.125
    8. '{s' → logprob: -20.5
    9. '```' → logprob: -20.75
    10. '           ' → logprob: -21.375

Token 789: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.023252932354807854
    2. 'for' → logprob: -3.7732529640197754
    3. ' ' → logprob: -12.648252487182617
    4. '   ' → logprob: -13.148252487182617
    5. ' in' → logprob: -13.648252487182617
    6. ' s' → logprob: -15.023252487182617
    7. '    ' → logprob: -15.273252487182617
    8. '	for' → logprob: -15.523252487182617
    9. '  ' → logprob: -15.898252487182617
    10. '
' → logprob: -16.398252487182617

Token 790: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.006715370807796717
    2. ' s' → logprob: -5.006715297698975
    3. '_s' → logprob: -18.506715774536133
    4. ' in' → logprob: -20.006715774536133
    5. '	s' → logprob: -20.256715774536133
    6. ' ' → logprob: -20.506715774536133
    7. '(s' → logprob: -20.881715774536133
    8. ' ' → logprob: -21.756715774536133
    9. ',' → logprob: -22.381715774536133
    10. '>s' → logprob: -22.506715774536133

Token 791: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02338477037847042
    2. 'in' → logprob: -3.7733848094940186
    3. 's' → logprob: -9.398385047912598
    4. ' s' → logprob: -9.898385047912598
    5. ' ' → logprob: -12.148385047912598
    6. '  ' → logprob: -14.523385047912598
    7. ' ' → logprob: -15.773385047912598
    8. ',' → logprob: -16.64838409423828
    9. '   ' → logprob: -17.02338409423828
    10. '
' → logprob: -17.27338409423828

Token 792: ' candidates' (ID: 18116)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.001726349350064993
    2. ' candidates' → logprob: -6.376726150512695
    3. 'candidate' → logprob: -11.626726150512695
    4. 's' → logprob: -12.751726150512695
    5. 'cand' → logprob: -12.751726150512695
    6. 'found' → logprob: -13.126726150512695
    7. ' c' → logprob: -13.501726150512695
    8. '[c' → logprob: -13.626726150512695
    9. '_candidates' → logprob: -13.626726150512695
    10. '   ' → logprob: -14.126726150512695

Token 793: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.014164566993713379
    2. 'if' → logprob: -4.264164447784424
    3. '   ' → logprob: -14.389164924621582
    4. '	if' → logprob: -15.014164924621582
    5. ' ' → logprob: -15.514164924621582
    6. '<|end|>' → logprob: -18.014163970947266
    7. '    ' → logprob: -18.264163970947266
    8. '  ' → logprob: -18.389163970947266
    9. 'If' → logprob: -19.014163970947266
    10. ',' → logprob: -19.264163970947266

Token 794: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.005233882926404476
    2. ' len' → logprob: -5.2552337646484375
    3. '(len' → logprob: -16.755233764648438
    4. '   ' → logprob: -17.005233764648438
    5. '	len' → logprob: -19.380233764648438
    6. '=len' → logprob: -21.130233764648438
    7. '[len' → logprob: -21.880233764648438
    8. ' ' → logprob: -22.005233764648438
    9. '  ' → logprob: -22.005233764648438
    10. 'length' → logprob: -22.255233764648438

Token 795: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -2.1008713702030946e-06
    2. '(' → logprob: -13.250001907348633
    3. 's' → logprob: -15.625001907348633
    4. ' (' → logprob: -16.625001907348633
    5. '(
' → logprob: -17.000001907348633
    6. ' s' → logprob: -22.250001907348633
    7. '((' → logprob: -22.625001907348633
    8. '
' → logprob: -23.125001907348633
    9. '(str' → logprob: -23.375001907348633
    10. '(x' → logprob: -23.375001907348633

Token 796: ')' (ID: 8)
  Prédit: ')=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')==' → logprob: -0.6448346376419067
    2. ')' → logprob: -1.3948346376419067
    3. '==' → logprob: -1.6448346376419067
    4. ' ==' → logprob: -3.394834518432617
    5. ']==' → logprob: -7.269834518432617
    6. '()==' → logprob: -10.019834518432617
    7. ' )' → logprob: -10.769834518432617
    8. '=' → logprob: -11.394834518432617
    9. '   ' → logprob: -12.894834518432617
    10. '()' → logprob: -13.269834518432617

Token 797: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.04859611392021179
    2. ' ==' → logprob: -3.048596143722534
    3. ']==' → logprob: -12.798596382141113
    4. ')==' → logprob: -12.923596382141113
    5. '()==' → logprob: -13.298596382141113
    6. '=' → logprob: -13.923596382141113
    7. '===' → logprob: -14.798596382141113
    8. '==
' → logprob: -15.048596382141113
    9. ' ' → logprob: -16.173595428466797
    10. '```' → logprob: -16.673595428466797

Token 798: ' longest' (ID: 37511)
  Prédit: 'long'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'long' → logprob: -0.00020377879263833165
    2. ' longest' → logprob: -8.500204086303711
    3. ' long' → logprob: -16.12520408630371
    4. '(long' → logprob: -16.25020408630371
    5. 'length' → logprob: -17.62520408630371
    6. 'Longest' → logprob: -19.00020408630371
    7. '<long' → logprob: -19.87520408630371
    8. 'lo' → logprob: -20.87520408630371
    9. '   ' → logprob: -20.87520408630371
    10. '-long' → logprob: -21.00020408630371

Token 799: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -2.2723104848410003e-05
    2. 'en' → logprob: -11.625022888183594
    3. 'len' → logprob: -11.750022888183594
    4. 'est' → logprob: -13.250022888183594
    5. '(len' → logprob: -14.000022888183594
    6. 'st' → logprob: -14.125022888183594
    7. '[len' → logprob: -14.375022888183594
    8. '=len' → logprob: -14.750022888183594
    9. 't' → logprob: -14.875022888183594
    10. 'g' → logprob: -15.000022888183594

Token 800: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.026047831401228905
    2. ']
' → logprob: -3.776047945022583
    3. '   ' → logprob: -5.901047706604004
    4. ' ]' → logprob: -10.401047706604004
    5. ']

' → logprob: -11.526047706604004
    6. 'return' → logprob: -11.776047706604004
    7. ']
' → logprob: -12.276047706604004
    8. ')' → logprob: -12.776047706604004
    9. ' ]
' → logprob: -12.776047706604004
    10. ')]' → logprob: -13.276047706604004

Token 801: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0024904031306505203
    2. '
' → logprob: -7.252490520477295
    3. 'for' → logprob: -7.502490520477295
    4. ' for' → logprob: -7.752490520477295
    5. 'return' → logprob: -8.002490043640137
    6. 'results' → logprob: -8.252490043640137
    7. ' return' → logprob: -9.502490043640137
    8. ' if' → logprob: -10.252490043640137
    9. ' results' → logprob: -10.252490043640137
    10. 'result' → logprob: -10.877490043640137

Token 802: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1320601850748062
    2. 'return' → logprob: -2.1320602893829346
    3. ' return' → logprob: -6.6320600509643555
    4. 'for' → logprob: -6.6320600509643555
    5. 'if' → logprob: -7.0070600509643555
    6. 'long' → logprob: -7.2570600509643555
    7. '
' → logprob: -8.132060050964355
    8. ' if' → logprob: -8.257060050964355
    9. ' for' → logprob: -9.007060050964355
    10. 'result' → logprob: -9.382060050964355

Token 803: ' lex' (ID: 37772)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.1337222009897232
    2. 'for' → logprob: -3.0087223052978516
    3. ' return' → logprob: -3.1337223052978516
    4. '   ' → logprob: -3.7587223052978516
    5. ' for' → logprob: -5.383722305297852
    6. 'long' → logprob: -6.258722305297852
    7. 'results' → logprob: -6.633722305297852
    8. 'if' → logprob: -7.758722305297852
    9. 'result' → logprob: -8.258722305297852
    10. ' results' → logprob: -9.008722305297852

Token 804: ' smallest' (ID: 42173)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.7055860757827759
    2. 'ic' → logprob: -0.8305860757827759
    3. 'min' → logprob: -3.4555859565734863
    4. 'sort' → logprob: -3.4555859565734863
    5. '   ' → logprob: -6.205585956573486
    6. ' sorted' → logprob: -6.705585956573486
    7. '=' → logprob: -7.205585956573486
    8. 'ical' → logprob: -7.455585956573486
    9. '(sorted' → logprob: -7.580585956573486
    10. ' =' → logprob: -7.955585956573486

Token 805: '
' (ID: 198)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.08792468160390854
    2. 'result' → logprob: -3.2129247188568115
    3. ' return' → logprob: -4.212924480438232
    4. '
' → logprob: -4.587924480438232
    5. 'answer' → logprob: -4.712924480438232
    6. '   ' → logprob: -4.837924480438232
    7. 'long' → logprob: -6.337924480438232
    8. ' result' → logprob: -9.58792495727539
    9. 'res' → logprob: -9.71292495727539
    10. ' answer' → logprob: -10.33792495727539

Token 806: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.11516618728637695
    2. '   ' → logprob: -3.740166187286377
    3. 'result' → logprob: -3.740166187286377
    4. ' return' → logprob: -3.865166187286377
    5. 'answer' → logprob: -4.240166187286377
    6. 'long' → logprob: -4.365166187286377
    7. '
' → logprob: -4.365166187286377
    8. ' answer' → logprob: -8.865165710449219
    9. ' result' → logprob: -9.115165710449219
    10. ' longest' → logprob: -9.740165710449219

Token 807: ' spell' (ID: 29176)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.015276946127414703
    2. ' return' → logprob: -5.140276908874512
    3. 'long' → logprob: -5.140276908874512
    4. '   ' → logprob: -6.265276908874512
    5. 'result' → logprob: -6.765276908874512
    6. 'answer' → logprob: -7.890276908874512
    7. 'best' → logprob: -12.515276908874512
    8. ' longest' → logprob: -12.640276908874512
    9. '
' → logprob: -12.765276908874512
    10. 'res' → logprob: -13.015276908874512

Token 808: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.016057714819908142
    2. '=' → logprob: -4.14105749130249
    3. 's' → logprob: -10.891057968139648
    4. '_' → logprob: -13.391057968139648
    5. ' ="' → logprob: -14.516057968139648
    6. '   ' → logprob: -14.891057968139648
    7. '=s' → logprob: -14.891057968139648
    8. '_=' → logprob: -15.391057968139648
    9. ' ' → logprob: -15.516057968139648
    10. 'ical' → logprob: -16.01605796813965

Token 809: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.4740803837776184
    2. 'min' → logprob: -0.9740803837776184
    3. ' sorted' → logprob: -13.349080085754395
    4. 'sorted' → logprob: -13.349080085754395
    5. '(min' → logprob: -17.22408103942871
    6. '	min' → logprob: -18.09908103942871
    7. 'max' → logprob: -18.09908103942871
    8. ' max' → logprob: -19.59908103942871
    9. '=min' → logprob: -19.72408103942871
    10. ' ' → logprob: -20.22408103942871

Token 810: '(long' (ID: 22019)
  Prédit: '(long'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(long' → logprob: -3.128163257315464e-07
    2. '(' → logprob: -15.75
    3. 'long' → logprob: -15.75
    4. '(
' → logprob: -19.75
    5. '(l' → logprob: -19.875
    6. ',long' → logprob: -20.125
    7. '(Long' → logprob: -20.125
    8. '(lo' → logprob: -20.125
    9. '<long' → logprob: -20.75
    10. ' (' → logprob: -20.75

Token 811: 'est' (ID: 376)
  Prédit: 'est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.00014072739577386528
    2. '_candidates' → logprob: -9.375141143798828
    3. 'ests' → logprob: -10.500141143798828
    4. '(c' → logprob: -11.875141143798828
    5. 'gest' → logprob: -12.375141143798828
    6. 'ent' → logprob: -12.750141143798828
    7. 'ist' → logprob: -13.250141143798828
    8. '[' → logprob: -13.500141143798828
    9. 'c' → logprob: -13.500141143798828
    10. '
' → logprob: -14.000141143798828

Token 812: '_candidates' (ID: 186937)
  Prédit: '_candidates'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_candidates' → logprob: -4.227250610711053e-05
    2. '_len' → logprob: -10.250041961669922
    3. '(c' → logprob: -13.125041961669922
    4. 'c' → logprob: -14.125041961669922
    5. '_candidate' → logprob: -14.125041961669922
    6. ')' → logprob: -14.500041961669922
    7. '(_' → logprob: -14.500041961669922
    8. '_long' → logprob: -14.875041961669922
    9. '
' → logprob: -15.375041961669922
    10. '_c' → logprob: -15.375041961669922

Token 813: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004955274052917957
    2. '()' → logprob: -5.504955291748047
    3. '())' → logprob: -7.129955291748047
    4. ' )' → logprob: -9.754955291748047
    5. ')
' → logprob: -11.629955291748047
    6. '   ' → logprob: -12.629955291748047
    7. '()
' → logprob: -12.879955291748047
    8. '(' → logprob: -14.129955291748047
    9. ' ' → logprob: -14.504955291748047
    10. ')return' → logprob: -15.129955291748047

Token 814: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0764063373208046
    2. '   ' → logprob: -2.701406240463257
    3. 'return' → logprob: -5.951406478881836
    4. ' return' → logprob: -6.076406478881836
    5. '<|end|>' → logprob: -6.826406478881836
    6. '    
' → logprob: -8.951406478881836
    7. '	return' → logprob: -9.076406478881836
    8. '
' → logprob: -9.701406478881836
    9. '  
' → logprob: -10.076406478881836
    10. ':return' → logprob: -10.951406478881836

Token 815: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.01908743567764759
    2. '   ' → logprob: -4.019087314605713
    3. ' return' → logprob: -7.019087314605713
    4. '
' → logprob: -10.144087791442871
    5. '	return' → logprob: -13.144087791442871
    6. ':return' → logprob: -14.644087791442871
    7. '{return' → logprob: -14.644087791442871
    8. '```' → logprob: -16.019086837768555
    9. '    
' → logprob: -16.519086837768555
    10. '@return' → logprob: -17.144086837768555

Token 816: ' spell' (ID: 29176)
  Prédit: 'spell'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'spell' → logprob: -0.5759450793266296
    2. ' spell' → logprob: -0.8259450793266296
    3. 'sp' → logprob: -12.325944900512695
    4. '_spell' → logprob: -14.950944900512695
    5. ' ' → logprob: -15.700944900512695
    6. '"' → logprob: -15.700944900512695
    7. '(sp' → logprob: -15.950944900512695
    8. 'spel' → logprob: -16.200944900512695
    9. ' spelling' → logprob: -16.450944900512695
    10. 'Spell' → logprob: -16.450944900512695

Token 817: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 818: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 819: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -9.519893501419574e-05
    2. 'main' → logprob: -9.87509536743164
    3. ' solve' → logprob: -10.12509536743164
    4. ' process' → logprob: -13.87509536743164
    5. ' run' → logprob: -14.00009536743164
    6. ' find' → logprob: -14.50009536743164
    7. ' solution' → logprob: -14.62509536743164
    8. ' parse' → logprob: -15.50009536743164
    9. ' read' → logprob: -15.62509536743164
    10. ' input' → logprob: -16.37509536743164

Token 820: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0003597760514821857
    2. ' ():' → logprob: -8.500359535217285
    3. '():
' → logprob: -8.875359535217285
    4. '()' → logprob: -12.000359535217285
    5. '_' → logprob: -12.250359535217285
    6. '()>' → logprob: -12.375359535217285
    7. '():
' → logprob: -14.625359535217285
    8. '(' → logprob: -15.500359535217285
    9. '():

' → logprob: -15.500359535217285
    10. '()">' → logprob: -15.500359535217285

Token 821: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08865968137979507
    2. 'import' → logprob: -2.8386597633361816
    3. ' import' → logprob: -3.9636597633361816
    4. ' input' → logprob: -5.463659763336182
    5. '```' → logprob: -6.588659763336182
    6. 'input' → logprob: -6.838659763336182
    7. ' readline' → logprob: -8.713659286499023
    8. 'n' → logprob: -9.338659286499023
    9. ' sys' → logprob: -9.588659286499023
    10. ' grid' → logprob: -9.713659286499023

Token 822: ' input' (ID: 3422)
  Prédit: ' import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.13925999402999878
    2. ' n' → logprob: -2.7642600536346436
    3. 'import' → logprob: -3.3892600536346436
    4. 'n' → logprob: -3.6392600536346436
    5. '   ' → logprob: -5.7642598152160645
    6. ' input' → logprob: -5.8892598152160645
    7. ' t' → logprob: -7.2642598152160645
    8. 't' → logprob: -8.389260292053223
    9. 'input' (adapté à ' input') → logprob: -9.764260292053223
    10. ' T' → logprob: -10.639260292053223

Token 823: ' =' (ID: 314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.01594509556889534
    2. '_data' → logprob: -4.640944957733154
    3. '_line' → logprob: -5.890944957733154
    4. ' =' → logprob: -6.515944957733154
    5. '_lines' → logprob: -7.515944957733154
    6. '=' → logprob: -7.640944957733154
    7. 'data' → logprob: -8.015945434570312
    8. '().' → logprob: -8.640945434570312
    9. '_' → logprob: -8.890945434570312
    10. '()
' → logprob: -9.765945434570312

Token 824: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.25241878628730774
    2. 'sys' → logprob: -1.5024187564849854
    3. ' input' → logprob: -8.252418518066406
    4. 'input' → logprob: -8.502418518066406
    5. '(sys' → logprob: -11.377418518066406
    6. '=sys' → logprob: -11.502418518066406
    7. '	sys' → logprob: -12.877418518066406
    8. ' lambda' → logprob: -14.127418518066406
    9. 'lambda' → logprob: -14.377418518066406
    10. '```' → logprob: -15.502418518066406

Token 825: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0006889634532853961
    2. '.' → logprob: -7.5006890296936035
    3. '.readline' → logprob: -9.500688552856445
    4. '.stdout' → logprob: -10.500688552856445
    5. '.argv' → logprob: -10.750688552856445
    6. '.std' → logprob: -12.000688552856445
    7. ' .' → logprob: -12.875688552856445
    8. 'stdin' → logprob: -13.375688552856445
    9. '.input' → logprob: -13.750688552856445
    10. ' stdin' → logprob: -15.625688552856445

Token 826: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0034831815864890814
    2. 'read' → logprob: -5.878483295440674
    3. '.' → logprob: -8.128482818603516
    4. '=' → logprob: -9.378482818603516
    5. '.readlines' → logprob: -9.378482818603516
    6. '_read' → logprob: -9.878482818603516
    7. '.read' → logprob: -9.878482818603516
    8. ' =' → logprob: -10.003482818603516
    9. ' readline' → logprob: -10.503482818603516
    10. 'buffer' → logprob: -12.128482818603516

Token 827: '
' (ID: 198)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.04773465543985367
    2. '()
' → logprob: -3.2977347373962402
    3. '().' → logprob: -4.67273473739624
    4. '   ' → logprob: -8.922734260559082
    5. '
' → logprob: -10.047734260559082
    6. 'def' → logprob: -10.172734260559082
    7. '()\' → logprob: -10.172734260559082
    8. '()

' → logprob: -10.922734260559082
    9. '())' → logprob: -12.047734260559082
    10. '();' → logprob: -13.047734260559082

Token 828: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007665659300982952
    2. '
' → logprob: -5.632665634155273
    3. 'h' → logprob: -6.257665634155273
    4. '```' → logprob: -7.507665634155273
    5. '()' → logprob: -7.632665634155273
    6. 'n' → logprob: -7.882665634155273
    7. '    
' → logprob: -8.007665634155273
    8. 'while' → logprob: -9.632665634155273
    9. '(h' → logprob: -9.632665634155273
    10. ' h' → logprob: -10.007665634155273

Token 829: ' while' (ID: 2049)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.5640587210655212
    2. ' t' → logprob: -1.439058780670166
    3. 'n' → logprob: -2.314058780670166
    4. ' n' → logprob: -3.064058780670166
    5. '   ' → logprob: -3.189058780670166
    6. 'h' → logprob: -5.564058780670166
    7. ' h' → logprob: -6.314058780670166
    8. 'T' → logprob: -6.939058780670166
    9. ' T' → logprob: -7.939058780670166
    10. '
' → logprob: -9.064058303833008

Token 830: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.1269545704126358
    2. ' True' → logprob: -2.1269545555114746
    3. '(True' → logprob: -10.626955032348633
    4. '   ' → logprob: -13.626955032348633
    5. '1' → logprob: -14.626955032348633
    6. 'true' → logprob: -15.626955032348633
    7. 'line' → logprob: -15.751955032348633
    8. '
' → logprob: -16.001955032348633
    9. '=True' → logprob: -16.626955032348633
    10. ' ' → logprob: -16.876955032348633

Token 831: ':
' (ID: 734)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.08182374387979507
    2. '():
' → logprob: -2.7068238258361816
    3. ':' → logprob: -4.956823825836182
    4. '   ' → logprob: -5.831823825836182
    5. '       ' → logprob: -7.206823825836182
    6. ':
' → logprob: -7.581823825836182
    7. '()' → logprob: -8.956823348999023
    8. ' ():' → logprob: -8.956823348999023
    9. ' line' → logprob: -9.081823348999023
    10. '().' → logprob: -9.706823348999023

Token 832: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14797315001487732
    2. '   ' → logprob: -2.27297306060791
    3. ' line' → logprob: -3.39797306060791
    4. 'line' → logprob: -7.14797306060791
    5. '	line' → logprob: -9.39797306060791
    6. '(line' → logprob: -10.02297306060791
    7. '```' → logprob: -10.14797306060791
    8. '    ' → logprob: -10.39797306060791
    9. '           ' → logprob: -10.39797306060791
    10. '#line' → logprob: -10.77297306060791

Token 833: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' (adapté à ' line') → logprob: -0.0006531051476486027
    2. ' line' → logprob: -7.500653266906738
    3. '   ' → logprob: -9.250653266906738
    4. 'n' → logprob: -13.375653266906738
    5. '	line' → logprob: -13.750653266906738
    6. 'l' → logprob: -13.875653266906738
    7. 'h' → logprob: -15.625653266906738
    8. '_line' → logprob: -16.375652313232422
    9. 'header' → logprob: -16.625652313232422
    10. 'Line' → logprob: -17.125652313232422

Token 834: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47412776947021484
    2. '=' → logprob: -0.9741277694702148
    3. '=line' → logprob: -10.349127769470215
    4. '   ' → logprob: -11.724127769470215
    5. '.strip' → logprob: -12.599127769470215
    6. '()' → logprob: -13.474127769470215
    7. 's' → logprob: -13.849127769470215
    8. ' ' → logprob: -14.099127769470215
    9. '(' → logprob: -14.599127769470215
    10. '=input' → logprob: -14.724127769470215

Token 835: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.26456305384635925
    2. ' input' → logprob: -1.5145630836486816
    3. 'sys' → logprob: -4.764563083648682
    4. ' sys' → logprob: -5.514563083648682
    5. '(input' → logprob: -16.889562606811523
    6. '(sys' → logprob: -16.889562606811523
    7. '=input' → logprob: -16.889562606811523
    8. 'line' → logprob: -17.764562606811523
    9. '=sys' → logprob: -17.764562606811523
    10. '   ' → logprob: -18.264562606811523

Token 836: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.16119486093521118
    2. '().' → logprob: -1.9111948013305664
    3. '()
' → logprob: -8.036194801330566
    4. '.strip' → logprob: -8.286194801330566
    5. '=' → logprob: -9.036194801330566
    6. 'strip' → logprob: -9.661194801330566
    7. 'rstrip' → logprob: -9.786194801330566
    8. '.readline' → logprob: -10.161194801330566
    9. '.rstrip' → logprob: -10.911194801330566
    10. 'line' → logprob: -11.036194801330566

Token 837: '       ' (ID: 309)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.9746543765068054
    2. '   ' → logprob: -1.3496544361114502
    3. '<|end|>' → logprob: -1.4746544361114502
    4. '       ' → logprob: -2.72465443611145
    5. '.strip' → logprob: -3.97465443611145
    6. ' =' → logprob: -4.224654197692871
    7. 'if' → logprob: -4.599654197692871
    8. '=' → logprob: -4.974654197692871
    9. '.rstrip' → logprob: -5.349654197692871
    10. '<|end|>' → logprob: -5.474654197692871

Token 838: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.37148207426071167
    2. '       ' → logprob: -1.7464821338653564
    3. 'if' (adapté à ' if') → logprob: -1.9964821338653564
    4. '	if' → logprob: -9.621481895446777
    5. '   ' → logprob: -11.371481895446777
    6. 'If' → logprob: -11.746481895446777
    7. ' line' → logprob: -13.871481895446777
    8. '        
' → logprob: -14.496481895446777
    9. '           ' → logprob: -14.996481895446777
    10. '<|end|>' → logprob: -15.121481895446777

Token 839: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.016221584752202034
    2. 'not' → logprob: -4.266221523284912
    3. ' line' → logprob: -6.266221523284912
    4. 'line' → logprob: -8.76622200012207
    5. '#line' → logprob: -14.51622200012207
    6. '(line' → logprob: -16.14122200012207
    7. '[line' → logprob: -16.51622200012207
    8. '=line' → logprob: -16.64122200012207
    9. '	not' → logprob: -17.26622200012207
    10. ' ' → logprob: -18.39122200012207

Token 840: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.006715370807796717
    2. ' line' → logprob: -5.006715297698975
    3. '(line' → logprob: -17.631715774536133
    4. '#line' → logprob: -17.631715774536133
    5. '	line' → logprob: -18.881715774536133
    6. '[line' → logprob: -20.756715774536133
    7. '=line' → logprob: -20.881715774536133
    8. '
' → logprob: -22.506715774536133
    9. 'Line' → logprob: -23.756715774536133
    10. '_line' → logprob: -24.131715774536133

Token 841: ':
' (ID: 734)
  Prédit: '.strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.6618760824203491
    2. ':' → logprob: -1.1618760824203491
    3. ':
' → logprob: -1.7868760824203491
    4. '.' → logprob: -6.161876201629639
    5. '.rstrip' → logprob: -7.536876201629639
    6. ':return' → logprob: -8.03687572479248
    7. '.readline' → logprob: -8.41187572479248
    8. '.startswith' → logprob: -8.53687572479248
    9. ' or' → logprob: -9.16187572479248
    10. ')' → logprob: -9.78687572479248

Token 842: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.351118266582489
    2. '           ' → logprob: -1.2261183261871338
    3. ' break' → logprob: -6.601118087768555
    4. '   ' → logprob: -7.351118087768555
    5. 'break' → logprob: -9.101118087768555
    6. '.strip' → logprob: -9.351118087768555
    7. ':' → logprob: -9.351118087768555
    8. ',' → logprob: -9.476118087768555
    9. ' or' → logprob: -9.851118087768555
    10. '<|end|>' → logprob: -10.226118087768555

Token 843: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.4328131675720215
    2. '       ' → logprob: -1.5578131675720215
    3. ' break' → logprob: -2.0578131675720215
    4. '           ' → logprob: -5.1828131675720215
    5. 'return' → logprob: -5.4328131675720215
    6. '   ' → logprob: -6.3078131675720215
    7. '	break' → logprob: -7.3078131675720215
    8. ' return' → logprob: -8.55781364440918
    9. ' ' → logprob: -9.05781364440918
    10. '               ' → logprob: -9.30781364440918

Token 844: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001321669202297926
    2. '<|end|>' → logprob: -7.251321792602539
    3. '        
' → logprob: -8.001321792602539
    4. '   ' → logprob: -8.376321792602539
    5. ',' → logprob: -11.251321792602539
    6. '           ' → logprob: -12.251321792602539
    7. '```' → logprob: -12.626321792602539
    8. ' ' → logprob: -12.876321792602539
    9. '=' → logprob: -13.126321792602539
    10. '  
' → logprob: -13.376321792602539

Token 845: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00158056674990803
    2. '<|end|>' → logprob: -6.626580715179443
    3. '   ' → logprob: -9.001580238342285
    4. '        
' → logprob: -9.251580238342285
    5. ',' → logprob: -12.376580238342285
    6. '```' → logprob: -12.501580238342285
    7. 'n' → logprob: -12.626580238342285
    8. ' ' → logprob: -12.751580238342285
    9. '           ' → logprob: -13.001580238342285
    10. 'tokens' → logprob: -13.064080238342285

Token 846: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' (adapté à ' h') → logprob: -0.019296294078230858
    2. ' h' → logprob: -4.019296169281006
    3. 'hw' → logprob: -7.394296169281006
    4. 'n' → logprob: -9.019296646118164
    5. ' parts' → logprob: -9.019296646118164
    6. '   ' → logprob: -9.144296646118164
    7. 'H' → logprob: -9.769296646118164
    8. 'line' → logprob: -10.269296646118164
    9. ' hw' → logprob: -10.644296646118164
    10. '       ' → logprob: -10.644296646118164

Token 847: ',w' (ID: 49598)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007650283630937338
    2. ',w' → logprob: -5.382650375366211
    3. '=' → logprob: -6.132650375366211
    4. ' =' → logprob: -7.507650375366211
    5. ' ,' → logprob: -8.257650375366211
    6. ',h' → logprob: -11.257650375366211
    7. 'w' → logprob: -12.257650375366211
    8. '<|end|>' → logprob: -12.507650375366211
    9. ',
' → logprob: -12.757650375366211
    10. ',int' → logprob: -12.757650375366211

Token 848: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10022899508476257
    2. ' =' → logprob: -2.350229024887085
    3. '=line' → logprob: -10.850229263305664
    4. '=int' → logprob: -13.725229263305664
    5. ',' → logprob: -13.850229263305664
    6. '=input' → logprob: -14.975229263305664
    7. '＝' → logprob: -15.475229263305664
    8. ' ' → logprob: -16.975229263305664
    9. '<|end|>' → logprob: -16.975229263305664
    10. '=

' → logprob: -17.350229263305664

Token 849: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.25193527340888977
    2. 'map' → logprob: -1.5019352436065674
    3. '[' → logprob: -12.751935005187988
    4. ' line' → logprob: -13.626935005187988
    5. '	map' → logprob: -14.251935005187988
    6. '(map' → logprob: -14.501935005187988
    7. 'line' → logprob: -14.751935005187988
    8. '   ' → logprob: -15.626935005187988
    9. ' [' → logprob: -16.001935958862305
    10. ' ' → logprob: -16.001935958862305

Token 850: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0006727590807713568
    2. '(str' → logprob: -7.375672817230225
    3. 'int' → logprob: -10.375672340393066
    4. '(lambda' → logprob: -11.500672340393066
    5. '(' → logprob: -12.750672340393066
    6. 'str' → logprob: -13.625672340393066
    7. '=int' → logprob: -15.000672340393066
    8. '[int' → logprob: -15.500672340393066
    9. '(line' → logprob: -15.875672340393066
    10. '<int' → logprob: -17.000673294067383

Token 851: ',line' (ID: 171132)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.0041561610996723175
    2. ',line' → logprob: -6.379156112670898
    3. ',' → logprob: -7.004156112670898
    4. '[line' → logprob: -8.004156112670898
    5. '(),' → logprob: -8.129156112670898
    6. '=line' → logprob: -8.129156112670898
    7. 'line' → logprob: -8.754156112670898
    8. ')' → logprob: -8.754156112670898
    9. '#line' → logprob: -8.879156112670898
    10. ' line' → logprob: -10.004156112670898

Token 852: '.split' (ID: 10347)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.6714504957199097
    2. '.split' → logprob: -0.9214504957199097
    3. '.strip' → logprob: -2.421450614929199
    4. '.' → logprob: -6.796450614929199
    5. '.readline' → logprob: -6.921450614929199
    6. ' .' → logprob: -9.4214506149292
    7. '.rstrip' → logprob: -9.7964506149292
    8. 'split' → logprob: -11.0464506149292
    9. ')' → logprob: -11.2964506149292
    10. '   ' → logprob: -12.2964506149292

Token 853: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.03487792983651161
    2. '()' → logprob: -4.034877777099609
    3. ')' → logprob: -4.659877777099609
    4. '(','' → logprob: -5.784877777099609
    5. '(' → logprob: -5.909877777099609
    6. '('' → logprob: -6.784877777099609
    7. '(',' → logprob: -9.28487777709961
    8. '("' → logprob: -10.53487777709961
    9. '(",' → logprob: -10.65987777709961
    10. '(),' → logprob: -10.90987777709961

Token 854: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0044248937629163265
    2. 'if' → logprob: -6.254425048828125
    3. 'grid' → logprob: -6.629425048828125
    4. ' if' → logprob: -7.504425048828125
    5. '   ' → logprob: -7.754425048828125
    6. '```' → logprob: -9.504425048828125
    7. '<|end|>' → logprob: -9.879425048828125
    8. '	grid' → logprob: -10.754425048828125
    9. ' grid' → logprob: -11.004425048828125
    10. '        
' → logprob: -11.754425048828125

Token 855: ' if' (ID: 538)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.10032873600721359
    2. 'if' (adapté à ' if') → logprob: -2.3503286838531494
    3. ' grid' → logprob: -9.85032844543457
    4. ' if' → logprob: -10.10032844543457
    5. '       ' → logprob: -10.60032844543457
    6. '```' → logprob: -13.47532844543457
    7. '	grid' → logprob: -14.22532844543457
    8. '   ' → logprob: -14.47532844543457
    9. 'break' → logprob: -15.35032844543457
    10. '        
' → logprob: -16.10032844543457

Token 856: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -4.56102097814437e-05
    2. ' h' → logprob: -10.000045776367188
    3. '(h' → logprob: -15.750045776367188
    4. '   ' → logprob: -19.125045776367188
    5. '	h' → logprob: -20.250045776367188
    6. ' (' → logprob: -21.125045776367188
    7. '(' → logprob: -21.750045776367188
    8. '[h' → logprob: -22.625045776367188
    9. '<h' → logprob: -23.000045776367188
    10. ' ' → logprob: -23.375045776367188

Token 857: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6931775808334351
    2. ' ==' → logprob: -0.6931775808334351
    3. '=' → logprob: -11.818177223205566
    4. '()==' → logprob: -12.068177223205566
    5. '===' → logprob: -12.318177223205566
    6. ' ' → logprob: -12.568177223205566
    7. ')==' → logprob: -12.818177223205566
    8. '<|end|>' → logprob: -13.568177223205566
    9. '0' → logprob: -13.693177223205566
    10. '```' → logprob: -13.818177223205566

Token 858: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.4391956685576588e-05
    2. ' ' → logprob: -10.625024795532227
    3. '
' → logprob: -20.750024795532227
    4. '=' → logprob: -21.375024795532227
    5. '۰' → logprob: -21.375024795532227
    6. '<|end|>' → logprob: -21.500024795532227
    7. '   ' → logprob: -22.250024795532227
    8. '  ' → logprob: -23.250024795532227
    9. 'and' → logprob: -23.875024795532227
    10. ' ' → logprob: -24.250024795532227

Token 859: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. '۰' → logprob: -19.625001907348633
    4. 'w' → logprob: -21.750001907348633
    5. '０' → logprob: -21.750001907348633
    6. '০' → logprob: -22.875001907348633
    7. '   ' → logprob: -23.500001907348633
    8. '  ' → logprob: -23.625001907348633
    9. '=' → logprob: -23.750001907348633
    10. 'o' → logprob: -24.000001907348633

Token 860: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.009775333106517792
    2. 'and' → logprob: -4.634775161743164
    3. '	and' → logprob: -11.509775161743164
    4. '   ' → logprob: -12.384775161743164
    5. ' or' → logprob: -12.884775161743164
    6. ' ' → logprob: -13.259775161743164
    7. '<|end|>' → logprob: -15.509775161743164
    8. ' ' → logprob: -15.509775161743164
    9. ' и' → logprob: -16.384775161743164
    10. '  ' → logprob: -16.384775161743164

Token 861: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.0485873706638813
    2. ' w' → logprob: -3.0485873222351074
    3. '	w' → logprob: -18.548587799072266
    4. '<w' → logprob: -21.423587799072266
    5. '   ' → logprob: -21.673587799072266
    6. ' ' → logprob: -22.173587799072266
    7. ' ' → logprob: -22.548587799072266
    8. '  ' → logprob: -23.298587799072266
    9. 'W' → logprob: -24.048587799072266
    10. '    ' → logprob: -24.048587799072266

Token 862: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.17976143956184387
    2. '==' → logprob: -1.8047614097595215
    3. ')==' → logprob: -12.30476188659668
    4. '<|end|>' → logprob: -12.55476188659668
    5. '()==' → logprob: -13.42976188659668
    6. ' =' → logprob: -13.55476188659668
    7. '=' → logprob: -13.80476188659668
    8. ' ' → logprob: -13.92976188659668
    9. ']==' → logprob: -13.92976188659668
    10. ' ===' → logprob: -14.30476188659668

Token 863: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001398929744027555
    2. ' ' → logprob: -8.875140190124512
    3. '<|end|>' → logprob: -17.500139236450195
    4. '   ' → logprob: -19.250139236450195
    5. '  ' → logprob: -20.125139236450195
    6. '```' → logprob: -20.750139236450195
    7. '۰' → logprob: -20.875139236450195
    8. '=' → logprob: -21.125139236450195
    9. '<|end|>' → logprob: -21.125139236450195
    10. ' ' → logprob: -21.625139236450195

Token 864: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.75000286102295
    3. '<|end|>' → logprob: -18.500003814697266
    4. '```' → logprob: -21.125003814697266
    5. '۰' → logprob: -21.250003814697266
    6. '   ' → logprob: -22.000003814697266
    7. '<|end|>' → logprob: -22.625003814697266
    8. '  ' → logprob: -22.875003814697266
    9. '=' → logprob: -23.375003814697266
    10. '
' → logprob: -23.750003814697266

Token 865: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.21718870103359222
    2. ':' → logprob: -2.217188596725464
    3. ':
' → logprob: -2.467188596725464
    4. '       ' → logprob: -7.342188835144043
    5. '   ' → logprob: -7.467188835144043
    6. '	       ' → logprob: -9.967188835144043
    7. '		' → logprob: -10.092188835144043
    8. '          ' → logprob: -10.467188835144043
    9. ',' → logprob: -10.967188835144043
    10. '	   ' → logprob: -11.092188835144043

Token 866: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.34885814785957336
    2. '       ' → logprob: -1.223858118057251
    3. '   ' → logprob: -8.098857879638672
    4. '	       ' → logprob: -10.348857879638672
    5. '		' → logprob: -10.598857879638672
    6. '	   ' → logprob: -11.598857879638672
    7. '<|end|>' → logprob: -11.598857879638672
    8. '	' → logprob: -11.973857879638672
    9. '               ' → logprob: -11.973857879638672
    10. '```' → logprob: -12.348857879638672

Token 867: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.8067646026611328
    2. 'break' (adapté à ' break') → logprob: -1.0567646026611328
    3. '           ' → logprob: -1.8067646026611328
    4. 'return' → logprob: -3.556764602661133
    5. ' return' → logprob: -4.556764602661133
    6. '       ' → logprob: -6.681764602661133
    7. '	break' → logprob: -7.056764602661133
    8. '               ' → logprob: -7.431764602661133
    9. '   ' → logprob: -8.931764602661133
    10. '_break' → logprob: -10.806764602661133

Token 868: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006827684701420367
    2. '   ' → logprob: -8.125682830810547
    3. '<|end|>' → logprob: -8.625682830810547
    4. '```' → logprob: -9.500682830810547
    5. '        
' → logprob: -9.875682830810547
    6. '	' → logprob: -10.500682830810547
    7. 'grid' → logprob: -11.125682830810547
    8. '	   ' → logprob: -11.500682830810547
    9. '	grid' → logprob: -11.625682830810547
    10. '
' → logprob: -13.125682830810547

Token 869: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07373937964439392
    2. '   ' → logprob: -3.3237392902374268
    3. 'grid' → logprob: -3.9487392902374268
    4. '	grid' → logprob: -4.323739528656006
    5. '<|end|>' → logprob: -6.448739528656006
    6. '```' → logprob: -8.323739051818848
    7. '        
' → logprob: -9.073739051818848
    8. ' grid' → logprob: -9.073739051818848
    9. '(grid' → logprob: -9.198739051818848
    10. '	' → logprob: -9.823739051818848

Token 870: ' grid' (ID: 10586)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' (adapté à ' grid') → logprob: -0.018376212567090988
    2. '       ' → logprob: -4.018376350402832
    3. ' grid' → logprob: -8.518376350402832
    4. '	grid' → logprob: -11.143376350402832
    5. '   ' → logprob: -11.893376350402832
    6. '```' → logprob: -12.893376350402832
    7. '.grid' → logprob: -14.518376350402832
    8. '(grid' → logprob: -14.643376350402832
    9. '        
' → logprob: -14.643376350402832
    10. '_grid' → logprob: -15.143376350402832

Token 871: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.024794531986117363
    2. '=' → logprob: -3.774794578552246
    3. '   ' → logprob: -6.524794578552246
    4. ' =
' → logprob: -11.149794578552246
    5. '=[]' → logprob: -11.274794578552246
    6. '[' → logprob: -11.274794578552246
    7. '    ' → logprob: -12.024794578552246
    8. '[]' → logprob: -12.024794578552246
    9. '[:]' → logprob: -12.024794578552246
    10. ' ' → logprob: -12.399794578552246

Token 872: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0025025326758623123
    2. '[input' → logprob: -6.50250244140625
    3. ' [' → logprob: -8.50250244140625
    4. '[line' → logprob: -8.75250244140625
    5. '[int' → logprob: -9.25250244140625
    6. '[str' → logprob: -9.25250244140625
    7. '[data' → logprob: -10.00250244140625
    8. '[class' → logprob: -10.25250244140625
    9. '[user' → logprob: -10.50250244140625
    10. '[row' → logprob: -10.62750244140625

Token 873: 'input' (ID: 2586)
  Prédit: 'input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.03828085958957672
    2. 'list' → logprob: -3.288280963897705
    3. ' input' → logprob: -8.788280487060547
    4. 'sys' → logprob: -9.413280487060547
    5. ' list' → logprob: -12.288280487060547
    6. '[input' → logprob: -14.538280487060547
    7. ' sys' → logprob: -16.788280487060547
    8. '<input' → logprob: -17.038280487060547
    9. '   ' → logprob: -17.163280487060547
    10. '(input' → logprob: -17.913280487060547

Token 874: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0007108822464942932
    2. '()' → logprob: -7.250710964202881
    3. '()
' → logprob: -15.250710487365723
    4. ' ().' → logprob: -15.875710487365723
    5. '()[' → logprob: -15.875710487365723
    6. 'rstrip' → logprob: -16.12571144104004
    7. '.rstrip' → logprob: -16.37571144104004
    8. '.strip' → logprob: -16.50071144104004
    9. '.readline' → logprob: -16.62571144104004
    10. '()]' → logprob: -17.00071144104004

Token 875: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.6931474208831787
    2. 'rstrip' → logprob: -0.6931474208831787
    3. ' strip' → logprob: -15.818147659301758
    4. 'r' → logprob: -16.193147659301758
    5. '.rstrip' → logprob: -16.818147659301758
    6. 'read' → logprob: -17.943147659301758
    7. '_strip' → logprob: -18.568147659301758
    8. '(strip' → logprob: -18.568147659301758
    9. '.strip' → logprob: -20.068147659301758
    10. 'str' → logprob: -20.693147659301758

Token 876: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0008648915681988001
    2. '()]' → logprob: -7.1258649826049805
    3. '())' → logprob: -10.37586498260498
    4. 'for' → logprob: -11.62586498260498
    5. '().' → logprob: -12.25086498260498
    6. ')' → logprob: -12.37586498260498
    7. '()\' → logprob: -12.87586498260498
    8. ' for' → logprob: -13.00086498260498
    9. '()[' → logprob: -13.50086498260498
    10. '()
' → logprob: -13.50086498260498

Token 877: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.14605635404586792
    2. 'for' → logprob: -2.0210564136505127
    3. '()' → logprob: -5.771056175231934
    4. ')' → logprob: -9.771056175231934
    5. '       ' → logprob: -9.771056175231934
    6. '	for' → logprob: -9.771056175231934
    7. '           ' → logprob: -10.521056175231934
    8. ']' → logprob: -10.771056175231934
    9. '<|end|>' → logprob: -11.021056175231934
    10. '   ' → logprob: -11.771056175231934

Token 878: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.001058890949934721
    2. ' _' → logprob: -6.876059055328369
    3. ' range' → logprob: -11.126058578491211
    4. '_i' → logprob: -12.376058578491211
    5. 'range' → logprob: -12.751058578491211
    6. '_range' → logprob: -12.751058578491211
    7. 'i' → logprob: -14.751058578491211
    8. ' i' → logprob: -15.126058578491211
    9. ' in' → logprob: -15.376058578491211
    10. '   ' → logprob: -16.25105857849121

Token 879: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.045455340296030045
    2. ' range' → logprob: -3.2954554557800293
    3. ' in' → logprob: -5.295455455780029
    4. 'in' → logprob: -6.045455455780029
    5. '	range' → logprob: -13.920454978942871
    6. '(range' → logprob: -14.420454978942871
    7. '   ' → logprob: -14.545454978942871
    8. ' ' → logprob: -14.795454978942871
    9. '_range' → logprob: -15.045454978942871
    10. '  ' → logprob: -15.295454978942871

Token 880: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -7.941850526549388e-06
    2. ' range' → logprob: -11.750007629394531
    3. '   ' → logprob: -21.75000762939453
    4. '	range' → logprob: -22.12500762939453
    5. '(range' → logprob: -22.75000762939453
    6. ' ' → logprob: -23.12500762939453
    7. '  ' → logprob: -23.75000762939453
    8. '    ' → logprob: -24.37500762939453
    9. '```' → logprob: -24.50000762939453
    10. 'r' → logprob: -25.62500762939453

Token 881: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.2519305646419525
    2. 'h' → logprob: -1.501930594444275
    3. ' h' → logprob: -13.626930236816406
    4. '	h' → logprob: -15.876930236816406
    5. ' (' → logprob: -17.126930236816406
    6. '<h' → logprob: -17.501930236816406
    7. '(' → logprob: -17.626930236816406
    8. ',h' → logprob: -18.126930236816406
    9. '[h' → logprob: -18.876930236816406
    10. '   ' → logprob: -19.126930236816406

Token 882: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.04111567139625549
    2. ']' → logprob: -3.2911157608032227
    3. ')' → logprob: -5.791115760803223
    4. '       ' → logprob: -12.541115760803223
    5. '   ' → logprob: -13.041115760803223
    6. '()]' → logprob: -13.166115760803223
    7. ']
' → logprob: -13.541115760803223
    8. ' ]' → logprob: -13.541115760803223
    9. ')]
' → logprob: -13.916115760803223
    10. ')],' → logprob: -14.041115760803223

Token 883: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07002846896648407
    2. '   ' → logprob: -3.07002854347229
    3. '<|end|>' → logprob: -4.570028305053711
    4. 'result' → logprob: -5.070028305053711
    5. '```' → logprob: -6.445028305053711
    6. 'print' → logprob: -6.820028305053711
    7. '
' → logprob: -7.570028305053711
    8. 'spell' → logprob: -7.945028305053711
    9. '        
' → logprob: -8.195028305053711
    10. '<|end|>' → logprob: -9.445028305053711

Token 884: ' ans' (ID: 3345)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.9279193878173828
    2. 'spell' → logprob: -0.9279193878173828
    3. 'print' → logprob: -2.302919387817383
    4. 'res' → logprob: -3.052919387817383
    5. ' result' → logprob: -3.677919387817383
    6. '   ' → logprob: -4.427919387817383
    7. '       ' → logprob: -4.552919387817383
    8. ' spell' → logprob: -5.177919387817383
    9. ' res' → logprob: -6.052919387817383
    10. ' print' → logprob: -6.302919387817383

Token 885: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07890003174543381
    2. '=' → logprob: -2.578900098800659
    3. '<|end|>' → logprob: -13.203900337219238
    4. ' ' → logprob: -13.953900337219238
    5. ' +=' → logprob: -13.953900337219238
    6. ')' → logprob: -13.953900337219238
    7. '=True' → logprob: -14.203900337219238
    8. '＝' → logprob: -14.453900337219238
    9. ',' → logprob: -14.453900337219238
    10. '.' → logprob: -14.578900337219238

Token 886: ' find' (ID: 1646)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.029750484973192215
    2. ' find' → logprob: -3.5297505855560303
    3. '(find' → logprob: -17.02975082397461
    4. '	find' → logprob: -18.27975082397461
    5. '=find' → logprob: -19.52975082397461
    6. '_find' → logprob: -22.90475082397461
    7. '.find' → logprob: -22.90475082397461
    8. '   ' → logprob: -23.65475082397461
    9. ')find' → logprob: -23.65475082397461
    10. 'finder' → logprob: -26.15475082397461

Token 887: '_long' (ID: 42288)
  Prédit: '_long'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_long' → logprob: -1.0280383548888494e-06
    2. 'long' → logprob: -14.000000953674316
    3. '_' → logprob: -16.375001907348633
    4. '```' → logprob: -17.125001907348633
    5. '_lon' → logprob: -17.500001907348633
    6. 'Longest' → logprob: -17.750001907348633
    7. '_Long' → logprob: -18.125001907348633
    8. '\' → logprob: -18.125001907348633
    9. '
' → logprob: -18.250001907348633
    10. '_LONG' → logprob: -18.500001907348633

Token 888: 'est' (ID: 376)
  Prédit: 'est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.0005399276851676404
    2. 'gest' → logprob: -8.000539779663086
    3. 'st' → logprob: -9.000539779663086
    4. 'test' → logprob: -10.125539779663086
    5. 'ests' → logprob: -11.500539779663086
    6. 'spell' → logprob: -11.625539779663086
    7. '_spell' → logprob: -11.875539779663086
    8. 'thest' → logprob: -12.625539779663086
    9. 'es' → logprob: -13.750539779663086
    10. 't' → logprob: -14.125539779663086

Token 889: '_spell' (ID: 186925)
  Prédit: '_spell'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_spell' → logprob: -2.4868770196917467e-05
    2. '_' → logprob: -11.125024795532227
    3. '_sp' → logprob: -12.500024795532227
    4. 'spell' → logprob: -12.625024795532227
    5. '```' → logprob: -13.750024795532227
    6. '"_' → logprob: -15.000024795532227
    7. '\' → logprob: -15.500024795532227
    8. '_ans' → logprob: -15.625024795532227
    9. '_s' → logprob: -15.750024795532227
    10. '_spin' → logprob: -16.000024795532227

Token 890: '(grid' (ID: 51818)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.4746720790863037
    2. '(grid' → logprob: -0.9746720790863037
    3. '(' → logprob: -7.474672317504883
    4. '(sp' → logprob: -10.974672317504883
    5. '(answer' → logprob: -12.724672317504883
    6. '(
' → logprob: -12.974672317504883
    7. '(Grid' → logprob: -13.224672317504883
    8. '(gr' → logprob: -13.474672317504883
    9. '(grammar' → logprob: -15.474672317504883
    10. '(ast' → logprob: -15.599672317504883

Token 891: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002991160727106035
    2. ',h' → logprob: -8.125299453735352
    3. ' ,' → logprob: -13.625299453735352
    4. ')' → logprob: -14.250299453735352
    5. '(' → logprob: -14.625299453735352
    6. '(h' → logprob: -14.750299453735352
    7. '   ' → logprob: -15.875299453735352
    8. ',w' → logprob: -16.62529945373535
    9. ',g' → logprob: -17.25029945373535
    10. ',H' → logprob: -17.37529945373535

Token 892: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.0002613358374219388
    2. ' h' → logprob: -8.250261306762695
    3. '	h' → logprob: -19.250261306762695
    4. '   ' → logprob: -20.500261306762695
    5. ')' → logprob: -21.250261306762695
    6. '_h' → logprob: -21.375261306762695
    7. '
' → logprob: -21.500261306762695
    8. '<h' → logprob: -21.875261306762695
    9. ',h' → logprob: -22.250261306762695
    10. '```' → logprob: -23.250261306762695

Token 893: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07897229492664337
    2. ',w' → logprob: -2.578972339630127
    3. ' ,' → logprob: -9.453971862792969
    4. '   ' → logprob: -12.953971862792969
    5. 'w' → logprob: -13.953971862792969
    6. '       ' → logprob: -14.328971862792969
    7. ' w' → logprob: -15.953971862792969
    8. ',
' → logprob: -16.20397186279297
    9. ')' → logprob: -17.57897186279297
    10. '	' → logprob: -17.82897186279297

Token 894: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.07888978719711304
    2. ' w' → logprob: -2.578889846801758
    3. '```' → logprob: -19.203889846801758
    4. ' ' → logprob: -19.703889846801758
    5. '	w' → logprob: -19.828889846801758
    6. '
' → logprob: -19.828889846801758
    7. '   ' → logprob: -19.828889846801758
    8. ' ' → logprob: -21.328889846801758
    9. '    ' → logprob: -21.453889846801758
    10. '<w' → logprob: -21.578889846801758

Token 895: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0010411443654447794
    2. ')
' → logprob: -6.876040935516357
    3. '   ' → logprob: -12.876041412353516
    4. ',' → logprob: -12.876041412353516
    5. ' )' → logprob: -13.626041412353516
    6. '       ' → logprob: -14.126041412353516
    7. ')
' → logprob: -14.501041412353516
    8. '))' → logprob: -15.001041412353516
    9. ')`' → logprob: -16.126041412353516
    10. '),' → logprob: -17.001041412353516

Token 896: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1441226750612259
    2. 'print' → logprob: -2.01912260055542
    3. '   ' → logprob: -7.01912260055542
    4. ' print' → logprob: -8.144123077392578
    5. '<|end|>' → logprob: -8.769123077392578
    6. '	print' → logprob: -10.144123077392578
    7. '```' → logprob: -10.269123077392578
    8. '        
' → logprob: -11.269123077392578
    9. '
' → logprob: -12.144123077392578
    10. '           ' → logprob: -12.769123077392578

Token 897: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -1.9361264946837764e-07
    2. ' print' → logprob: -16.25
    3. '       ' → logprob: -17.125
    4. '```' → logprob: -17.875
    5. '	print' → logprob: -21.125
    6. '   ' → logprob: -21.5
    7. '
' → logprob: -21.625
    8. '``' → logprob: -21.875
    9. '#print' → logprob: -22.625
    10. 'printf' → logprob: -23.375

Token 898: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -1.1472419600977446e-06
    2. 'ans' → logprob: -13.750000953674316
    3. '(' → logprob: -17.875001907348633
    4. '	ans' → logprob: -18.750001907348633
    5. '(answer' → logprob: -20.625001907348633
    6. ' ans' → logprob: -21.000001907348633
    7. '(err' → logprob: -22.125001907348633
    8. '_ans' → logprob: -22.250001907348633
    9. 'Ans' → logprob: -22.375001907348633
    10. '()' → logprob: -22.500001907348633

Token 899: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.36574100604048e-06
    2. '())' → logprob: -13.125004768371582
    3. '()' → logprob: -13.625004768371582
    4. ')`' → logprob: -15.125004768371582
    5. '   ' → logprob: -15.375004768371582
    6. ' )' → logprob: -15.625004768371582
    7. '`)' → logprob: -15.625004768371582
    8. '")' → logprob: -16.250003814697266
    9. ')
' → logprob: -16.750003814697266
    10. '))' → logprob: -17.375003814697266

Token 900: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0004303116293158382
    2. ' if' → logprob: -8.7504301071167
    3. 'main' → logprob: -8.8754301071167
    4. '<|end|>' → logprob: -9.6254301071167
    5. '```' → logprob: -10.0004301071167
    6. '#' → logprob: -11.0004301071167
    7. '
' → logprob: -13.2504301071167
    8. '<|end|>' → logprob: -15.0004301071167
    9. '\' → logprob: -15.6254301071167
    10. '[' → logprob: -15.6254301071167

Token 901: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.5768042206764221
    2. ' __' → logprob: -0.8268042206764221
    3. '_name' → logprob: -7.326804161071777
    4. '_' → logprob: -8.951804161071777
    5. 'name' → logprob: -10.076804161071777
    6. '___' → logprob: -10.451804161071777
    7. 'Name' → logprob: -13.326804161071777
    8. ' ' → logprob: -13.951804161071777
    9. ' ' → logprob: -14.076804161071777
    10. '_main' → logprob: -14.576804161071777

Token 902: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.006113178562372923
    2. '==' → logprob: -5.381113052368164
    3. ' ==' → logprob: -6.756113052368164
    4. 'name' → logprob: -9.006113052368164
    5. '__.__' → logprob: -9.756113052368164
    6. '.__' → logprob: -10.256113052368164
    7. '=="' → logprob: -10.506113052368164
    8. '__.' → logprob: -11.131113052368164
    9. '```' → logprob: -11.256113052368164
    10. '[' → logprob: -11.256113052368164

Token 903: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.00012678056373260915
    2. '__.__' → logprob: -9.250126838684082
    3. '==' → logprob: -10.500126838684082
    4. '__.' → logprob: -13.500126838684082
    5. '__["' → logprob: -14.625126838684082
    6. '=="' → logprob: -14.625126838684082
    7. ' ==' → logprob: -15.375126838684082
    8. '___' → logprob: -15.500126838684082
    9. '__('' → logprob: -16.000125885009766
    10. '__[' → logprob: -16.875125885009766

Token 904: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.14604739844799042
    2. '==' → logprob: -2.021047353744507
    3. ' ==' → logprob: -6.271047592163086
    4. '=="' → logprob: -6.646047592163086
    5. '=='' → logprob: -9.021047592163086
    6. '=' → logprob: -10.771047592163086
    7. '_' → logprob: -11.771047592163086
    8. '==
' → logprob: -12.021047592163086
    9. '__.__' → logprob: -12.146047592163086
    10. '===' → logprob: -12.896047592163086

Token 905: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.011063262820243835
    2. ''' → logprob: -4.511063098907471
    3. '__' → logprob: -11.136063575744629
    4. ' "__' → logprob: -14.261063575744629
    5. '"name' → logprob: -16.261062622070312
    6. '"user' → logprob: -17.636062622070312
    7. '"class' → logprob: -18.386062622070312
    8. ' '__' → logprob: -18.511062622070312
    9. '("__' → logprob: -18.636062622070312
    10. '"os' → logprob: -19.136062622070312

Token 906: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0016644697170704603
    2. '__' → logprob: -6.626664638519287
    3. 'name' → logprob: -8.001664161682129
    4. 'built' → logprob: -13.876664161682129
    5. '_main' → logprob: -14.251664161682129
    6. '"' → logprob: -14.376664161682129
    7. ''' → logprob: -14.626664161682129
    8. ' main' → logprob: -14.751664161682129
    9. '{' → logprob: -16.001665115356445
    10. 'builtin' → logprob: -16.626665115356445

Token 907: '__":
' (ID: 49892)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.4777913987636566
    2. '__":
' → logprob: -0.977791428565979
    3. '__':
' → logprob: -5.8527913093566895
    4. '__.__' → logprob: -7.7277913093566895
    5. '__["' → logprob: -8.477791786193848
    6. '__.' → logprob: -8.852791786193848
    7. '__:' → logprob: -11.602791786193848
    8. '__("' → logprob: -11.852791786193848
    9. '__[' → logprob: -12.102791786193848
    10. '__
' → logprob: -12.477791786193848

Token 908: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.008310305885970592
    2. ' main' → logprob: -5.008310317993164
    3. '	main' → logprob: -6.758310317993164
    4. '   ' → logprob: -7.758310317993164
    5. '_main' → logprob: -12.633310317993164
    6. '    
' → logprob: -14.258310317993164
    7. '
' → logprob: -14.633310317993164
    8. '(main' → logprob: -14.758310317993164
    9. '```' → logprob: -15.633310317993164
    10. '.main' → logprob: -16.133310317993164

Token 909: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: 0.0
    2. ' main' → logprob: -18.75
    3. '	main' → logprob: -22.5
    4. '   ' → logprob: -24.875
    5. '.main' → logprob: -26.875
    6. '(main' → logprob: -27.0
    7. '_main' → logprob: -28.0
    8. 'import' → logprob: -30.0
    9. '
' → logprob: -30.25
    10. '```' → logprob: -30.625

Token 910: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 908
Tokens correctement prédits (1ère position, stricte): 407
Tokens correctement prédits (1ère position, avec adaptation): 428
Tokens correctement prédits (top 10): 737
Précision stricte (1ère position): 44.82%
Précision adaptée (1ère position): 47.14%
Précision (top 10): 81.17%
================================================================================
