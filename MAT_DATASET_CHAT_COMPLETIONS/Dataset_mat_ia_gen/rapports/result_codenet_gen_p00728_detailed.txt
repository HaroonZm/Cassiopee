================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:19:43
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Solution complète en Python pour le problème ICPC Score Totalizer
# Explications détaillées dans les commentaires

def icpc_score_totalizer():
    while True:
        # Lire le nombre de juges pour un candidat
        n = input().strip()
        if n == '0':  # Condition d'arrêt : fin des données
            break
        
        n = int(n)
        scores = []
        
        # Lire les scores des juges
        for _ in range(n):
            score = int(input().strip())
            scores.append(score)
        
        # Trouver la plus haute et la plus basse note
        max_score = max(scores)
        min_score = min(scores)
        
        # Supprimer UNE occurrence de la plus haute note
        scores.remove(max_score)
        
        # Supprimer UNE occurrence de la plus basse note
        scores.remove(min_score)
        
        # Calculer la moyenne des scores restants
        # Attention : la division doit être truncée (int)
        average = sum(scores) // len(scores)
        
        # Afficher le résultat pour ce candidat
        print(average)

# Appeler la fonction principale
icpc_score_totalizer()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Solution' (ID: 20858)
  → Token d'amorce (pas de prédiction)

Token 2: ' complète' (ID: 75660)
  → Token d'amorce (pas de prédiction)

Token 3: ' en' (ID: 469)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.19659672677516937
    2. '```' → logprob: -2.321596622467041
    3. ' :' → logprob: -2.821596622467041
    4. '\n' → logprob: -4.696596622467041
    5. '#' → logprob: -5.196596622467041
    6. ' ```' → logprob: -6.821596622467041
    7. '\' → logprob: -7.071596622467041
    8. 'def' → logprob: -7.071596622467041
    9. '``' → logprob: -7.446596622467041
    10. '
' → logprob: -8.0715970993042

Token 4: ' Python' (ID: 26534)
  Prédit: 'python'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'python' → logprob: -0.07435164600610733
    2. 'Python' → logprob: -2.6993515491485596
    3. 'fr' → logprob: -5.949351787567139
    4. '```' → logprob: -7.449351787567139
    5. 'py' → logprob: -7.699351787567139
    6. ' Python' → logprob: -7.949351787567139
    7. ' python' → logprob: -8.69935131072998
    8. '#' → logprob: -8.94935131072998
    9. 'French' → logprob: -10.44935131072998
    10. ' français' → logprob: -10.82435131072998

Token 5: ' pour' (ID: 1930)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2996176779270172
    2. '```' → logprob: -1.6746176481246948
    3. 'def' → logprob: -3.6746177673339844
    4. ' :' → logprob: -4.049617767333984
    5. '#' → logprob: -4.174617767333984
    6. '\' → logprob: -5.174617767333984
    7. ':def' → logprob: -6.299617767333984
    8. '\n' → logprob: -6.424617767333984
    9. '``' → logprob: -6.549617767333984
    10. '`' → logprob: -7.674617767333984

Token 6: ' le' (ID: 505)
  Prédit: ' résoudre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' résoudre' → logprob: -1.521314263343811
    2. ' la' → logprob: -1.896314263343811
    3. '```' → logprob: -2.0213141441345215
    4. ' l' → logprob: -2.1463141441345215
    5. ' le' → logprob: -2.3963141441345215
    6. ' créer' → logprob: -2.5213141441345215
    7. 'l' → logprob: -3.1463141441345215
    8. ' traiter' → logprob: -3.8963141441345215
    9. 'le' → logprob: -4.0213141441345215
    10. ' gérer' → logprob: -4.1463141441345215

Token 7: ' problème' (ID: 35630)
  Prédit: ' tri'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tri' → logprob: -1.4585773944854736
    2. '#' → logprob: -1.7085773944854736
    3. 'pro' → logprob: -1.7085773944854736
    4. 'tri' → logprob: -1.9585773944854736
    5. ' problème' → logprob: -2.5835773944854736
    6. ' trie' → logprob: -3.8335773944854736
    7. ' code' → logprob: -3.8335773944854736
    8. ' #' → logprob: -3.9585773944854736
    9. ' probl' → logprob: -4.4585771560668945
    10. 's' → logprob: -4.5835771560668945

Token 8: ' IC' (ID: 30492)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.23821505904197693
    2. ' :' → logprob: -1.8632150888442993
    3. '```' → logprob: -3.1132149696350098
    4. '#' → logprob: -4.86321496963501
    5. '\' → logprob: -6.36321496963501
    6. '.' → logprob: -7.86321496963501
    7. 's' → logprob: -8.238215446472168
    8. '\n' → logprob: -8.363215446472168
    9. '`' → logprob: -8.363215446472168
    10. ' ' → logprob: -8.488215446472168

Token 9: 'PC' (ID: 7349)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7605509161949158
    2. '#' → logprob: -1.1355509757995605
    3. '```' → logprob: -2.2605509757995605
    4. ' :' → logprob: -2.6355509757995605
    5. '\' → logprob: -4.6355509757995605
    6. ''''' → logprob: -5.3855509757995605
    7. '.' → logprob: -5.5105509757995605
    8. '"""' → logprob: -6.1355509757995605
    9. '`' → logprob: -6.2605509757995605
    10. '``' → logprob: -6.7605509757995605

Token 10: ' Score' (ID: 30731)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5456394553184509
    2. '#' → logprob: -1.1706395149230957
    3. '```' → logprob: -3.1706395149230957
    4. '\n' → logprob: -4.045639514923096
    5. '\' → logprob: -4.295639514923096
    6. ' :' → logprob: -4.420639514923096
    7. 'def' → logprob: -5.420639514923096
    8. '<|end|>' → logprob: -5.545639514923096
    9. '
' → logprob: -6.170639514923096
    10. ''''' → logprob: -6.170639514923096

Token 11: ' Total' (ID: 17565)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14522960782051086
    2. '#' → logprob: -3.3952295780181885
    3. '\' → logprob: -3.7702295780181885
    4. ' :' → logprob: -4.020229816436768
    5. 'def' → logprob: -4.270229816436768
    6. 's' → logprob: -4.270229816436768
    7. '\n' → logprob: -4.395229816436768
    8. '```' → logprob: -4.520229816436768
    9. ''''' → logprob: -6.395229816436768
    10. '"""' → logprob: -6.645229816436768

Token 12: 'izer' (ID: 4492)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0985143780708313
    2. '#' → logprob: -3.0985143184661865
    3. ' :' → logprob: -4.348514556884766
    4. 'def' → logprob: -4.473514556884766
    5. '\' → logprob: -4.598514556884766
    6. '```' → logprob: -4.848514556884766
    7. '\n' → logprob: -6.348514556884766
    8. 's' → logprob: -6.348514556884766
    9. ''''' → logprob: -7.348514556884766
    10. '.' → logprob: -7.848514556884766

Token 13: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4461700916290283
    2. '#' → logprob: -1.6961700916290283
    3. '\' → logprob: -2.9461700916290283
    4. '\n' → logprob: -2.9461700916290283
    5. '```' → logprob: -3.5711700916290283
    6. 'def' → logprob: -3.8211700916290283
    7. '
' → logprob: -5.446169853210449
    8. ' :' → logprob: -5.446169853210449
    9. ''''' → logprob: -6.196169853210449
    10. 's' → logprob: -6.196169853210449

Token 14: '#' (ID: 2)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5373736023902893
    2. '```' → logprob: -1.5373735427856445
    3. '#' → logprob: -2.9123735427856445
    4. '\' → logprob: -3.1623735427856445
    5. 'def' → logprob: -3.2873735427856445
    6. '\n' → logprob: -3.6623735427856445
    7. '
' → logprob: -4.7873735427856445
    8. 'import' → logprob: -4.9123735427856445
    9. ' :' → logprob: -4.9123735427856445
    10. 's' → logprob: -5.2873735427856445

Token 15: ' Exp' (ID: 15004)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.013728788122534752
    2. 'import' → logprob: -5.763728618621826
    3. ' ```' → logprob: -5.763728618621826
    4. ' 
' → logprob: -6.638728618621826
    5. ' #' → logprob: -7.138728618621826
    6. ' \' → logprob: -7.388728618621826
    7. '```' → logprob: -7.388728618621826
    8. '\' → logprob: -7.513728618621826
    9. ' 

' → logprob: -7.638728618621826
    10. ' import' → logprob: -7.763728618621826

Token 16: 'lications' (ID: 17986)
  Prédit: 'lication'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lication' → logprob: -0.2855580449104309
    2. 'l' → logprob: -2.410557985305786
    3. '#' → logprob: -2.910557985305786
    4. 'lications' → logprob: -3.285557985305786
    5. 'é' → logprob: -3.660557985305786
    6. 'érience' → logprob: -4.535558223724365
    7. 'ort' → logprob: -5.035558223724365
    8. 'lic' → logprob: -5.160558223724365
    9. 'lan' → logprob: -5.785558223724365
    10. 'licit' → logprob: -6.035558223724365

Token 17: ' déta' (ID: 99673)
  Prédit: ' :'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.21572890877723694
    2. ':' → logprob: -1.8407288789749146
    3. '#' → logprob: -3.465728998184204
    4. 's' → logprob: -6.840728759765625
    5. ' #' → logprob: -6.840728759765625
    6. ' ' → logprob: -7.340728759765625
    7. '```' → logprob: -8.465728759765625
    8. ' ' → logprob: -8.715728759765625
    9. ' :
' → logprob: -8.840728759765625
    10. ',' → logprob: -9.340728759765625

Token 18: 'illées' (ID: 185332)
  Prédit: 'ées'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.6566054821014404
    2. '#' → logprob: -1.2816054821014404
    3. 'é' → logprob: -2.0316054821014404
    4. 'ations' → logprob: -3.6566054821014404
    5. 'ation' → logprob: -4.0316057205200195
    6. 'r' → logprob: -4.7816057205200195
    7. 'nées' → logprob: -6.2816057205200195
    8. 's' → logprob: -6.4066057205200195
    9. ' ' → logprob: -6.4066057205200195
    10. 'ée' → logprob: -6.5316057205200195

Token 19: ' dans' (ID: 2671)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.16164860129356384
    2. ':' → logprob: -2.7866485118865967
    3. ' :' → logprob: -3.1616485118865967
    4. ' ' → logprob: -4.786648750305176
    5. '```' → logprob: -4.786648750305176
    6. '\' → logprob: -5.161648750305176
    7. '\n' → logprob: -5.286648750305176
    8. '
' → logprob: -5.286648750305176
    9. ' #' → logprob: -5.661648750305176
    10. '

' → logprob: -6.286648750305176

Token 20: ' les' (ID: 1341)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -1.1299785375595093
    2. 'le' → logprob: -1.3799785375595093
    3. ' la' → logprob: -1.7549785375595093
    4. '#' → logprob: -2.629978656768799
    5. ' l' → logprob: -3.004978656768799
    6. 'l' → logprob: -3.379978656768799
    7. 'les' → logprob: -3.629978656768799
    8. ' les' → logprob: -3.754978656768799
    9. 'la' → logprob: -4.379978656768799
    10. ' ' → logprob: -4.504978656768799

Token 21: ' commentaires' (ID: 67971)
  Prédit: 'comment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comment' → logprob: -0.6343365907669067
    2. ' commentaires' → logprob: -1.6343365907669067
    3. '#' → logprob: -2.259336471557617
    4. 'l' → logprob: -3.509336471557617
    5. 'pro' → logprob: -3.884336471557617
    6. 'comments' → logprob: -3.884336471557617
    7. 'Commentaires' → logprob: -4.009336471557617
    8. 'en' → logprob: -4.384336471557617
    9. '```' → logprob: -4.759336471557617
    10. 'f' → logprob: -4.884336471557617

Token 22: '

' (ID: 279)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.560737669467926
    2. '
' → logprob: -1.9357376098632812
    3. '\n' → logprob: -2.0607376098632812
    4. '\' → logprob: -2.6857376098632812
    5. 'import' → logprob: -3.4357376098632812
    6. 'def' → logprob: -3.9357376098632812
    7. '```' → logprob: -4.310737609863281
    8. ':' → logprob: -4.935737609863281
    9. '

' → logprob: -5.435737609863281
    10. 'd' → logprob: -6.060737609863281

Token 23: 'def' (ID: 1314)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.6355167627334595
    2. 'import' → logprob: -1.8855167627334595
    3. '#' → logprob: -2.01051664352417
    4. 'def' → logprob: -2.13551664352417
    5. '```' → logprob: -3.88551664352417
    6. '\' → logprob: -4.26051664352417
    7. '\n' → logprob: -4.63551664352417
    8. 'n' → logprob: -5.13551664352417
    9. 'i' → logprob: -5.38551664352417
    10. 'class' → logprob: -6.13551664352417

Token 24: ' ic' (ID: 26007)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9842809438705444
    2. ' calculate' → logprob: -0.9842809438705444
    3. ' total' → logprob: -1.6092809438705444
    4. ' score' → logprob: -4.109281063079834
    5. ' ic' → logprob: -4.359281063079834
    6. ' compute' → logprob: -5.234281063079834
    7. ' ' → logprob: -5.359281063079834
    8. ' sum' → logprob: -6.234281063079834
    9. ' add' → logprob: -6.359281063079834
    10. ' solve' → logprob: -6.734281063079834

Token 25: 'pc' (ID: 6344)
  Prédit: 'pc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pc' → logprob: -0.14470645785331726
    2. 'p' → logprob: -2.0197064876556396
    3. 'def' → logprob: -6.7697062492370605
    4. '_pc' → logprob: -7.6447062492370605
    5. '_score' → logprob: -9.269706726074219
    6. '_p' → logprob: -9.269706726074219
    7. 'c' → logprob: -10.019706726074219
    8. 'ps' → logprob: -11.144706726074219
    9. 'pd' → logprob: -11.144706726074219
    10. 'pct' → logprob: -11.144706726074219

Token 26: '_score' (ID: 22555)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7004716992378235
    2. '_score' → logprob: -0.7004716992378235
    3. '_s' → logprob: -5.325471878051758
    4. '_sc' → logprob: -6.575471878051758
    5. '_scores' → logprob: -7.450471878051758
    6. '_S' → logprob: -9.075471878051758
    7. '_total' → logprob: -9.450471878051758
    8. '_solver' → logprob: -9.575471878051758
    9. '_sum' → logprob: -9.700471878051758
    10. ' _' → logprob: -9.825471878051758

Token 27: '_total' (ID: 23814)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.478943407535553
    2. '_total' → logprob: -0.978943407535553
    3. '(' → logprob: -6.728943347930908
    4. 's' → logprob: -7.353943347930908
    5. '(total' → logprob: -7.728943347930908
    6. 'total' → logprob: -8.228943824768066
    7. '_optimizer' → logprob: -8.478943824768066
    8. '_:' → logprob: -8.603943824768066
    9. '(s' → logprob: -8.603943824768066
    10. '_tot' → logprob: -8.853943824768066

Token 28: 'izer' (ID: 4492)
  Prédit: 'izer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'izer' → logprob: -0.10734203457832336
    2. '_' → logprob: -2.357342004776001
    3. '(' → logprob: -5.60734224319458
    4. 'ize' → logprob: -6.60734224319458
    5. '(_' → logprob: -7.10734224319458
    6. 'iz' → logprob: -7.98234224319458
    7. 'IZER' → logprob: -8.357341766357422
    8. '_(' → logprob: -8.982341766357422
    9. '()' → logprob: -9.357341766357422
    10. '```' → logprob: -9.482341766357422

Token 29: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0007269674097187817
    2. '_' → logprob: -7.50072717666626
    3. '():' → logprob: -10.000726699829102
    4. '()' → logprob: -10.500726699829102
    5. ' (' → logprob: -10.625726699829102
    6. ':' → logprob: -10.625726699829102
    7. '("("' → logprob: -11.750726699829102
    8. '(
' → logprob: -12.250726699829102
    9. '_parent' → logprob: -12.625726699829102
    10. '```' → logprob: -12.625726699829102

Token 30: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8010530471801758
    2. ':' → logprob: -1.9260530471801758
    3. '   ' → logprob: -1.9260530471801758
    4. '\' → logprob: -2.426053047180176
    5. '(' → logprob: -2.801053047180176
    6. '\n' → logprob: -4.051053047180176
    7. '(
' → logprob: -4.176053047180176
    8. '    
' → logprob: -4.176053047180176
    9. ' 
' → logprob: -4.176053047180176
    10. ':
' → logprob: -4.551053047180176

Token 31: ' while' (ID: 2049)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6165229678153992
    2. ' pass' → logprob: -1.241523027420044
    3. 'n' → logprob: -2.616523027420044
    4. '    ' → logprob: -3.741523027420044
    5. '
' → logprob: -3.991523027420044
    6. 'pass' → logprob: -3.991523027420044
    7. '\n' → logprob: -5.241522789001465
    8. ' n' → logprob: -5.366522789001465
    9. '    
' → logprob: -5.491522789001465
    10. ' ' → logprob: -5.491522789001465

Token 32: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.00020509003661572933
    2. 'True' → logprob: -8.500205039978027
    3. ' ' → logprob: -14.125205039978027
    4. '(True' → logprob: -15.000205039978027
    5. ' not' → logprob: -15.500205039978027
    6. ' true' → logprob: -16.000205993652344
    7. ' input' → logprob: -16.375205993652344
    8. '=True' → logprob: -17.500205993652344
    9. '_true' → logprob: -17.500205993652344
    10. '_' → logprob: -18.375205993652344

Token 33: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.015414048917591572
    2. ' :' → logprob: -4.265414237976074
    3. '():' → logprob: -7.140414237976074
    4. ':
' → logprob: -8.890414237976074
    5. '):' → logprob: -9.015414237976074
    6. '       ' → logprob: -9.640414237976074
    7. '   ' → logprob: -10.015414237976074
    8. ',' → logprob: -10.390414237976074
    9. ' :
' → logprob: -11.015414237976074
    10. ':**' → logprob: -11.265414237976074

Token 34: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0028199704829603434
    2. '        
' → logprob: -7.252820014953613
    3. '    ' → logprob: -7.377820014953613
    4. '   ' → logprob: -7.377820014953613
    5. ' ' → logprob: -7.502820014953613
    6. '<|end|>' → logprob: -9.752820014953613
    7. '      ' → logprob: -10.002820014953613
    8. '        ' → logprob: -10.627820014953613
    9. '     ' → logprob: -10.877820014953613
    10. '        
        
' → logprob: -11.002820014953613

Token 35: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8271134495735168
    2. ' line' → logprob: -1.202113389968872
    3. 'line' → logprob: -2.327113389968872
    4. ' ligne' → logprob: -2.577113389968872
    5. ' try' → logprob: -3.077113389968872
    6. 'ligne' → logprob: -4.077113628387451
    7. 'try' → logprob: -4.952113628387451
    8. '       ' → logprob: -4.952113628387451
    9. ' n' → logprob: -6.077113628387451
    10. 'n' → logprob: -6.577113628387451

Token 36: ' Lire' (ID: 57624)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -1.2315094470977783
    2. 'line' → logprob: -1.8565094470977783
    3. '   ' → logprob: -1.9815094470977783
    4. ' try' → logprob: -2.2315094470977783
    5. 'ligne' → logprob: -2.6065094470977783
    6. ' ligne' → logprob: -2.7315094470977783
    7. 'data' → logprob: -3.1065094470977783
    8. 'try' → logprob: -3.3565094470977783
    9. ' data' → logprob: -3.7315094470977783
    10. 'input' → logprob: -4.231509208679199

Token 37: ' le' (ID: 505)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.9567763805389404
    2. ' ' → logprob: -2.0817763805389404
    3. ' une' → logprob: -2.0817763805389404
    4. ' input' → logprob: -2.0817763805389404
    5. '   ' → logprob: -2.8317763805389404
    6. '    ' → logprob: -3.4567763805389404
    7. 'input' → logprob: -3.5817763805389404
    8. 's' → logprob: -3.9567763805389404
    9. ' l' → logprob: -4.0817766189575195
    10. ' line' → logprob: -4.0817766189575195

Token 38: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.32897382974624634
    2. ' input' → logprob: -1.9539737701416016
    3. 's' → logprob: -3.4539737701416016
    4. 'nombre' → logprob: -3.5789737701416016
    5. ' try' → logprob: -4.078973770141602
    6. '   ' → logprob: -4.578973770141602
    7. 'n' → logprob: -4.703973770141602
    8. 'input' → logprob: -4.703973770141602
    9. ' line' → logprob: -4.828973770141602
    10. ' n' → logprob: -5.328973770141602

Token 39: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.6847088932991028
    2. ' d' → logprob: -1.684708833694458
    3. ' ' → logprob: -2.559708833694458
    4. ' =' → logprob: -3.059708833694458
    5. ' des' → logprob: -3.559708833694458
    6. '_de' → logprob: -3.934708833694458
    7. 's' → logprob: -4.059709072113037
    8. '_' → logprob: -4.059709072113037
    9. '    ' → logprob: -4.184709072113037
    10. '   ' → logprob: -4.309709072113037

Token 40: ' jug' (ID: 18737)
  Prédit: ' équipes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' équipes' → logprob: -0.08446957170963287
    2. 'équ' → logprob: -3.3344695568084717
    3. ' equipes' → logprob: -4.334469795227051
    4. 'é' → logprob: -4.584469795227051
    5. ' test' → logprob: -6.084469795227051
    6. 'pro' → logprob: -6.084469795227051
    7. ' ' → logprob: -6.209469795227051
    8. ' teams' → logprob: -6.334469795227051
    9. 'equ' → logprob: -6.584469795227051
    10. ' équipe' → logprob: -6.584469795227051

Token 41: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.0779065191745758
    2. 'e' → logprob: -2.702906608581543
    3. 'eurs' → logprob: -4.952906608581543
    4. 'ements' → logprob: -7.202906608581543
    5. 'ges' → logprob: -9.952906608581543
    6. 'ees' → logprob: -10.702906608581543
    7. '#' → logprob: -11.202906608581543
    8. '```' → logprob: -11.827906608581543
    9. 'ge' → logprob: -12.077906608581543
    10. 'ege' → logprob: -12.202906608581543

Token 42: ' pour' (ID: 1930)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03475796803832054
    2. '=' → logprob: -4.6597580909729
    3. ' ' → logprob: -5.5347580909729
    4. ' :' → logprob: -5.7847580909729
    5. ':' → logprob: -5.9097580909729
    6. ' n' → logprob: -6.4097580909729
    7. ' ,' → logprob: -6.4097580909729
    8. ',' → logprob: -6.6597580909729
    9. '       ' → logprob: -6.7847580909729
    10. ' (' → logprob: -6.7847580909729

Token 43: ' un' (ID: 537)
  Prédit: ' chaque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.166265070438385
    2. ' ' → logprob: -2.7912650108337402
    3. ' l' → logprob: -3.2912650108337402
    4. ' input' → logprob: -3.6662650108337402
    5. ' la' → logprob: -4.41626501083374
    6. ' le' → logprob: -5.54126501083374
    7. ' each' → logprob: -5.79126501083374
    8. ' une' → logprob: -5.91626501083374
    9. ' un' → logprob: -6.29126501083374
    10. ' )' → logprob: -7.16626501083374

Token 44: ' candidat' (ID: 97443)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.00719411950558424
    2. 'a' → logprob: -6.2571940422058105
    3. ' e' → logprob: -6.2571940422058105
    4. ' ' → logprob: -6.7571940422058105
    5. ' input' → logprob: -7.8821940422058105
    6. 'é' → logprob: -8.007194519042969
    7. ' tournoi' → logprob: -8.882194519042969
    8. ' é' → logprob: -9.007194519042969
    9. ' concours' → logprob: -9.132194519042969
    10. ' test' → logprob: -9.507194519042969

Token 45: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.4527971744537354
    2. 'n' → logprob: -1.8277971744537354
    3. '(n' → logprob: -2.0777971744537354
    4. ' ' → logprob: -2.3277971744537354
    5. ' n' → logprob: -2.5777971744537354
    6. '   ' → logprob: -3.3277971744537354
    7. ' =' → logprob: -3.7027971744537354
    8. ':' → logprob: -3.8277971744537354
    9. '<|end|>' → logprob: -3.8277971744537354
    10. 's' → logprob: -3.9527971744537354

Token 46: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5639757513999939
    2. 'n' → logprob: -1.1889758110046387
    3. ' n' → logprob: -2.5639758110046387
    4. '   ' → logprob: -4.313975811004639
    5. ' try' → logprob: -4.438975811004639
    6. 'try' → logprob: -5.438975811004639
    7. 'input' → logprob: -5.563975811004639
    8. '(n' → logprob: -6.063975811004639
    9. '    ' → logprob: -6.438975811004639
    10. 's' → logprob: -6.438975811004639

Token 47: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.49509289860725403
    2. 'try' → logprob: -1.6200928688049316
    3. ' n' → logprob: -2.6200928688049316
    4. ' try' → logprob: -2.7450928688049316
    5. 'jug' → logprob: -4.120092868804932
    6. '   ' → logprob: -4.370092868804932
    7. 'j' → logprob: -4.870092868804932
    8. 'line' → logprob: -5.745092868804932
    9. 'nb' → logprob: -5.745092868804932
    10. ' judges' → logprob: -5.995092868804932

Token 48: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006015775725245476
    2. '=' → logprob: -5.131015777587891
    3. ' ' → logprob: -9.50601577758789
    4. '=int' → logprob: -12.13101577758789
    5. ' =
' → logprob: -13.25601577758789
    6. '  ' → logprob: -13.25601577758789
    7. '=input' → logprob: -13.25601577758789
    8. ' ' → logprob: -13.88101577758789
    9. '   ' → logprob: -15.75601577758789
    10. ',' → logprob: -15.75601577758789

Token 49: ' input' (ID: 3422)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.011156638152897358
    2. 'int' → logprob: -4.5111565589904785
    3. ' input' → logprob: -9.386157035827637
    4. ' ' → logprob: -10.886157035827637
    5. 'input' → logprob: -12.761157035827637
    6. '=int' → logprob: -13.261157035827637
    7. ' in' → logprob: -14.761157035827637
    8. '	int' → logprob: -15.261157035827637
    9. ' ' → logprob: -15.261157035827637
    10. '(int' → logprob: -15.386157035827637

Token 50: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6427841782569885
    2. '()' → logprob: -0.7677841782569885
    3. '('' → logprob: -5.017784118652344
    4. '("("' → logprob: -6.142784118652344
    5. '("' → logprob: -7.142784118652344
    6. '("")' → logprob: -8.017784118652344
    7. '().' → logprob: -10.142784118652344
    8. ' ()' → logprob: -10.642784118652344
    9. ' ' → logprob: -10.892784118652344
    10. '(">' → logprob: -11.142784118652344

Token 51: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -2.4391956685576588e-05
    2. 'rstrip' → logprob: -10.625024795532227
    3. 'split' → logprob: -17.125024795532227
    4. 'isdigit' → logprob: -17.250024795532227
    5. ' strip' → logprob: -17.375024795532227
    6. 'str' → logprob: -18.250024795532227
    7. '(strip' → logprob: -19.125024795532227
    8. '.strip' → logprob: -19.500024795532227
    9. '_strip' → logprob: -19.500024795532227
    10. 'stri' → logprob: -20.125024795532227

Token 52: '()
' (ID: 1234)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 53: '       ' (ID: 309)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.1503942012786865
    2. 'if' → logprob: -1.2753942012786865
    3. '<|end|>' → logprob: -1.5253942012786865
    4. '
' → logprob: -2.7753942012786865
    5. ')' → logprob: -3.4003942012786865
    6. '<|end|>' → logprob: -3.7753942012786865
    7. '       ' → logprob: -4.150394439697266
    8. ':' → logprob: -4.650394439697266
    9. '   ' → logprob: -4.900394439697266
    10. ' ' → logprob: -4.900394439697266

Token 54: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.3045605719089508
    2. ' if' → logprob: -1.6795605421066284
    3. '
' → logprob: -3.179560661315918
    4. '\n' → logprob: -3.804560661315918
    5. ')' → logprob: -6.179560661315918
    6. ' ' → logprob: -6.304560661315918
    7. '<|end|>' → logprob: -6.304560661315918
    8. '       ' → logprob: -7.179560661315918
    9. '=' → logprob: -7.429560661315918
    10. ' =' → logprob: -7.429560661315918

Token 55: ' n' (ID: 297)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.4328339993953705
    2. ' n' → logprob: -1.0578340291976929
    3. ' ' → logprob: -6.307834148406982
    4. 'n' → logprob: -6.557834148406982
    5. 'not' → logprob: -7.057834148406982
    6. '	n' → logprob: -11.682833671569824
    7. ' ' → logprob: -11.807833671569824
    8. '	not' → logprob: -12.932833671569824
    9. '  ' → logprob: -13.057833671569824
    10. ' n't' → logprob: -13.682833671569824

Token 56: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.026452288031578064
    2. '==' → logprob: -3.6514523029327393
    3. ' =' → logprob: -9.65145206451416
    4. '=' → logprob: -9.90145206451416
    5. ' ' → logprob: -11.15145206451416
    6. ' ===' → logprob: -12.27645206451416
    7. ')' → logprob: -12.40145206451416
    8. '()==' → logprob: -12.90145206451416
    9. ']==' → logprob: -13.15145206451416
    10. ')==' → logprob: -13.15145206451416

Token 57: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.7863606810569763
    2. '"' → logprob: -1.536360740661621
    3. '''' → logprob: -1.911360740661621
    4. ' '' → logprob: -2.286360740661621
    5. '""' → logprob: -3.286360740661621
    6. ' ''' → logprob: -3.536360740661621
    7. ' "' → logprob: -4.786360740661621
    8. ' ""' → logprob: -5.661360740661621
    9. ' ' → logprob: -8.286360740661621
    10. '0' → logprob: -8.411360740661621

Token 58: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.020686699077486992
    2. ''' → logprob: -3.895686626434326
    3. '"' → logprob: -9.770687103271484
    4. '''' → logprob: -10.270687103271484
    5. ' ' → logprob: -10.395687103271484
    6. '#' → logprob: -12.395687103271484
    7. 'EOF' → logprob: -12.520687103271484
    8. ''#' → logprob: -12.520687103271484
    9. 'END' → logprob: -13.020687103271484
    10. ''''' → logprob: -13.145687103271484

Token 59: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.01497542392462492
    2. ''' → logprob: -4.264975547790527
    3. '':
' → logprob: -7.264975547790527
    4. '':
' → logprob: -9.514975547790527
    5. ''):' → logprob: -11.264975547790527
    6. '":' → logprob: -11.764975547790527
    7. ':' → logprob: -12.139975547790527
    8. '\n' → logprob: -12.139975547790527
    9. '':'' → logprob: -13.889975547790527
    10. ''):
' → logprob: -13.889975547790527

Token 60: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13829168677330017
    2. '           ' → logprob: -2.388291597366333
    3. ' break' → logprob: -3.638291597366333
    4. ' ' → logprob: -5.763291835784912
    5. '<|end|>' → logprob: -5.763291835784912
    6. '        ' → logprob: -6.138291835784912
    7. 'break' → logprob: -7.013291835784912
    8. '   ' → logprob: -8.013291358947754
    9. '
' → logprob: -8.263291358947754
    10. '\n' → logprob: -8.513291358947754

Token 61: ' #' (ID: 1069)
  Prédit: ' break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' break' → logprob: -1.0107488632202148
    2. '       ' → logprob: -1.2607488632202148
    3. '           ' → logprob: -1.3857488632202148
    4. 'break' → logprob: -2.510748863220215
    5. '
' → logprob: -4.010748863220215
    6. '	break' → logprob: -6.385748863220215
    7. '\n' → logprob: -8.010748863220215
    8. '   ' → logprob: -8.635748863220215
    9. '
' → logprob: -8.885748863220215
    10. 'return' → logprob: -8.885748863220215

Token 62: ' Condition' (ID: 30255)
  Prédit: ' break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.10216905176639557
    2. 'break' → logprob: -2.6021690368652344
    3. '           ' → logprob: -3.9771690368652344
    4. '       ' → logprob: -5.602169036865234
    5. '	break' → logprob: -7.977169036865234
    6. '   ' → logprob: -9.852169036865234
    7. '
' → logprob: -9.852169036865234
    8. '_break' → logprob: -10.602169036865234
    9. 'Break' → logprob: -10.852169036865234
    10. ' ' → logprob: -10.977169036865234

Token 63: ' d' (ID: 272)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.04363902658224106
    2. '   ' → logprob: -4.543639183044434
    3. ' break' → logprob: -4.668639183044434
    4. ' for' → logprob: -5.293639183044434
    5. '    ' → logprob: -5.418639183044434
    6. ' d' → logprob: -5.793639183044434
    7. '  ' → logprob: -6.043639183044434
    8. '<|end|>' → logprob: -6.168639183044434
    9. '_break' → logprob: -6.293639183044434
    10. '       ' → logprob: -7.418639183044434

Token 64: ''arrêt' (ID: 186362)
  Prédit: ''arrêt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''arrêt' → logprob: -0.19789649546146393
    2. ' arrêt' → logprob: -2.0728964805603027
    3. '’arrêt' → logprob: -3.1978964805603027
    4. '<|end|>' → logprob: -5.447896480560303
    5. ' fin' → logprob: -6.072896480560303
    6. ' arr' → logprob: -6.572896480560303
    7. ' stop' → logprob: -6.572896480560303
    8. 'arr' → logprob: -7.072896480560303
    9. ' stopping' → logprob: -8.322896957397461
    10. ' ar' → logprob: -8.447896957397461

Token 65: ' :' (ID: 712)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6144640445709229
    2. '       ' → logprob: -1.3644640445709229
    3. '
' → logprob: -1.9894640445709229
    4. ':' → logprob: -3.239464044570923
    5. '<|end|>' → logprob: -4.239463806152344
    6. ':
' → logprob: -4.989463806152344
    7. '\n' → logprob: -6.239463806152344
    8. '<|end|>' → logprob: -6.864463806152344
    9. ' break' → logprob: -7.114463806152344
    10. '   ' → logprob: -7.614463806152344

Token 66: ' fin' (ID: 2131)
  Prédit: ' break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.00545857846736908
    2. 'break' → logprob: -5.880458354949951
    3. ' ' → logprob: -6.130458354949951
    4. '	break' → logprob: -9.00545883178711
    5. ' ' → logprob: -9.00545883178711
    6. '       ' → logprob: -9.38045883178711
    7. '        ' → logprob: -9.88045883178711
    8. '    ' → logprob: -10.00545883178711
    9. '   ' → logprob: -11.50545883178711
    10. '_break' → logprob: -11.50545883178711

Token 67: ' des' (ID: 731)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 68: ' données' (ID: 30580)
  Prédit: ' données'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' données' → logprob: -0.3852396607398987
    2. ' entr' → logprob: -1.510239601135254
    3. 'entr' → logprob: -2.760239601135254
    4. 'd' → logprob: -3.885239601135254
    5. 'entrée' → logprob: -4.885239601135254
    6. ' input' → logprob: -6.635239601135254
    7. 'entrant' → logprob: -6.635239601135254
    8. 'ent' → logprob: -7.760239601135254
    9. ' inputs' → logprob: -7.760239601135254
    10. 'don' → logprob: -7.760239601135254

Token 69: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6455544233322144
    2. '           ' → logprob: -1.1455544233322144
    3. '
' → logprob: -3.020554542541504
    4. ':' → logprob: -3.645554542541504
    5. '   ' → logprob: -4.020554542541504
    6. '\n' → logprob: -4.020554542541504
    7. ')' → logprob: -4.520554542541504
    8. ' break' → logprob: -4.645554542541504
    9. '<|end|>' → logprob: -4.770554542541504
    10. '<|end|>' → logprob: -5.645554542541504

Token 70: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1612558364868164
    2. '           ' → logprob: -1.9112558364868164
    3. ' break' → logprob: -8.036255836486816
    4. '   ' → logprob: -8.286255836486816
    5. ':' → logprob: -9.411255836486816
    6. '      ' → logprob: -9.411255836486816
    7. '<|end|>' → logprob: -9.911255836486816
    8. '        ' → logprob: -10.161255836486816
    9. '          ' → logprob: -10.411255836486816
    10. '	break' → logprob: -10.786255836486816

Token 71: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.7124021649360657
    2. 'break' (adapté à ' break') → logprob: -0.7124021649360657
    3. '       ' → logprob: -4.21240234375
    4. 'return' → logprob: -6.21240234375
    5. '           ' → logprob: -6.46240234375
    6. '	break' → logprob: -7.58740234375
    7. ' return' → logprob: -9.46240234375
    8. '               ' → logprob: -9.96240234375
    9. '```' → logprob: -10.96240234375
    10. '
' → logprob: -11.21240234375

Token 72: '
        
' (ID: 20417)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10346748679876328
    2. '<|end|>' → logprob: -2.8534674644470215
    3. '       ' → logprob: -3.3534674644470215
    4. '<|end|>' → logprob: -5.9784674644470215
    5. 'n' → logprob: -6.9784674644470215
    6. ')' → logprob: -7.4784674644470215
    7. '        
' → logprob: -7.7284674644470215
    8. '\n' → logprob: -8.22846794128418
    9. ')n' → logprob: -8.47846794128418
    10. '
' → logprob: -8.85346794128418

Token 73: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.048317406326532364
    2. 'n' → logprob: -3.1733174324035645
    3. ' n' → logprob: -5.7983174324035645
    4. '   ' → logprob: -6.4233174324035645
    5. '        
' → logprob: -8.173316955566406
    6. '      ' → logprob: -9.798316955566406
    7. '    ' → logprob: -9.923316955566406
    8. ')n' → logprob: -10.423316955566406
    9. '        ' → logprob: -10.548316955566406
    10. '           ' → logprob: -10.798316955566406

Token 74: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.004843526985496283
    2. ' n' → logprob: -6.379843711853027
    3. 'try' → logprob: -6.379843711853027
    4. '       ' → logprob: -6.879843711853027
    5. 'scores' → logprob: -8.004843711853027
    6. ' try' → logprob: -10.504843711853027
    7. '   ' → logprob: -10.879843711853027
    8. 'score' → logprob: -11.504843711853027
    9. 'num' → logprob: -12.504843711853027
    10. ' scores' → logprob: -12.754843711853027

Token 75: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00465761125087738
    2. '=' → logprob: -5.379657745361328
    3. '=int' → logprob: -10.379657745361328
    4. ' ' → logprob: -12.379657745361328
    5. '<|end|>' → logprob: -14.004657745361328
    6. ' =
' → logprob: -14.629657745361328
    7. '<|end|>' → logprob: -15.504657745361328
    8. ' ' → logprob: -15.629657745361328
    9. '```' → logprob: -15.879657745361328
    10. 'int' → logprob: -16.504657745361328

Token 76: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.4740770161151886
    2. ' int' → logprob: -0.9740769863128662
    3. '=int' → logprob: -18.849077224731445
    4. '[int' → logprob: -20.974077224731445
    5. '(int' → logprob: -21.099077224731445
    6. '<int' → logprob: -21.349077224731445
    7. ':int' → logprob: -22.099077224731445
    8. ' ' → logprob: -22.099077224731445
    9. '	int' → logprob: -22.474077224731445
    10. ']int' → logprob: -22.599077224731445

Token 77: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0005535095697268844
    2. '(' → logprob: -7.500553607940674
    3. ' (' → logprob: -14.500553131103516
    4. '(
' → logprob: -17.125553131103516
    5. ')n' → logprob: -17.875553131103516
    6. ')' → logprob: -18.750553131103516
    7. 'n' → logprob: -19.625553131103516
    8. '()' → logprob: -20.000553131103516
    9. '(s' → logprob: -20.250553131103516
    10. ' n' → logprob: -20.250553131103516

Token 78: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00014025058771949261
    2. ' )' → logprob: -9.000140190124512
    3. ')
' → logprob: -11.500140190124512
    4. '       ' → logprob: -12.625140190124512
    5. '))' → logprob: -14.000140190124512
    6. '   ' → logprob: -14.000140190124512
    7. ')n' → logprob: -14.625140190124512
    8. ')#' → logprob: -15.625140190124512
    9. ' ' → logprob: -15.750140190124512
    10. '#' → logprob: -15.875140190124512

Token 79: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04024463891983032
    2. 'scores' → logprob: -4.0402445793151855
    3. '        
' → logprob: -4.2902445793151855
    4. ' scores' → logprob: -6.1652445793151855
    5. 's' → logprob: -6.6652445793151855
    6. ')' → logprob: -7.0402445793151855
    7. '   ' → logprob: -7.2902445793151855
    8. '_scores' → logprob: -7.7902445793151855
    9. '```' → logprob: -7.9152445793151855
    10. '
' → logprob: -7.9152445793151855

Token 80: ' scores' (ID: 18923)
  Prédit: 'scores'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'scores' (adapté à ' scores') → logprob: -0.2716800272464752
    2. '       ' → logprob: -1.6466799974441528
    3. 'points' → logprob: -4.646679878234863
    4. ' scores' → logprob: -4.646679878234863
    5. '        
' → logprob: -4.771679878234863
    6. '
' → logprob: -5.521679878234863
    7. 'score' → logprob: -5.896679878234863
    8. '#' → logprob: -6.146679878234863
    9. 'notes' → logprob: -6.396679878234863
    10. 's' → logprob: -6.896679878234863

Token 81: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.003205161774531007
    2. '=' → logprob: -5.753205299377441
    3. 's' → logprob: -11.128205299377441
    4. '=[]' → logprob: -12.003205299377441
    5. '_' → logprob: -13.003205299377441
    6. ' ' → logprob: -13.128205299377441
    7. '_scores' → logprob: -14.378205299377441
    8. '_list' → logprob: -14.878205299377441
    9. ' =[' → logprob: -15.503205299377441
    10. '[]' → logprob: -15.628205299377441

Token 82: ' []
' (ID: 8911)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.1622866988182068
    2. '[]' → logprob: -2.0372867584228516
    3. ' [' → logprob: -4.162286758422852
    4. '[' → logprob: -5.662286758422852
    5. ' ' → logprob: -8.662286758422852
    6. ' list' → logprob: -9.287286758422852
    7. 'list' → logprob: -9.537286758422852
    8. '[list' → logprob: -11.787286758422852
    9. ' []
' → logprob: -12.037286758422852
    10. '[]>' → logprob: -12.412286758422852

Token 83: '        
' (ID: 3564)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8003560900688171
    2. ' for' → logprob: -1.175356149673462
    3. '<|end|>' → logprob: -2.175356149673462
    4. 'for' → logprob: -2.300356149673462
    5. '	for' → logprob: -4.050355911254883
    6. '   ' → logprob: -5.425355911254883
    7. '<|end|>' → logprob: -6.050355911254883
    8. ' ' → logprob: -6.675355911254883
    9. '	' → logprob: -7.675355911254883
    10. '	   ' → logprob: -7.800355911254883

Token 84: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2214817851781845
    2. 'for' → logprob: -1.8464818000793457
    3. ' for' → logprob: -3.2214818000793457
    4. '   ' → logprob: -7.221481800079346
    5. '	for' → logprob: -8.471481323242188
    6. '	   ' → logprob: -11.096481323242188
    7. '    ' → logprob: -11.971481323242188
    8. ' ' → logprob: -11.971481323242188
    9. '	' → logprob: -12.096481323242188
    10. '      ' → logprob: -13.221481323242188

Token 85: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0009125363430939615
    2. ' for' → logprob: -7.000912666320801
    3. '   ' → logprob: -14.2509126663208
    4. '       ' → logprob: -15.5009126663208
    5. '	for' → logprob: -16.000911712646484
    6. ' ' → logprob: -17.125911712646484
    7. 'f' → logprob: -17.625911712646484
    8. '
' → logprob: -19.375911712646484
    9. '    ' → logprob: -19.625911712646484
    10. '  ' → logprob: -19.875911712646484

Token 86: ' Lire' (ID: 57624)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.02325887233018875
    2. ' for' → logprob: -3.773258924484253
    3. '   ' → logprob: -11.273259162902832
    4. '	for' → logprob: -15.773259162902832
    5. '       ' → logprob: -16.273258209228516
    6. 'pour' → logprob: -16.523258209228516
    7. '    ' → logprob: -16.648258209228516
    8. 'For' → logprob: -16.773258209228516
    9. 'from' → logprob: -17.023258209228516
    10. 'fo' → logprob: -17.023258209228516

Token 87: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.18940114974975586
    2. '()' → logprob: -2.814401149749756
    3. 'scores' → logprob: -3.814401149749756
    4. ' n' → logprob: -4.189401149749756
    5. '(' → logprob: -4.439401149749756
    6. 'les' → logprob: -4.564401149749756
    7. ' for' → logprob: -4.564401149749756
    8. '(n' → logprob: -4.939401149749756
    9. ' scores' → logprob: -5.064401149749756
    10. ' ' → logprob: -5.064401149749756

Token 88: ' scores' (ID: 18923)
  Prédit: 'scores'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'scores' → logprob: -0.7154918909072876
    2. ' scores' → logprob: -1.0904918909072876
    3. ' ' → logprob: -2.715491771697998
    4. 'n' → logprob: -3.090491771697998
    5. '_' → logprob: -4.215491771697998
    6. 's' → logprob: -4.215491771697998
    7. '_scores' → logprob: -4.840491771697998
    8. ' n' → logprob: -5.215491771697998
    9. 'score' → logprob: -5.340491771697998
    10. ' notes' → logprob: -6.215491771697998

Token 89: ' des' (ID: 731)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7046846151351929
    2. ' for' → logprob: -1.3296846151351929
    3. '	for' → logprob: -2.7046847343444824
    4. '       ' → logprob: -3.2046847343444824
    5. '   ' → logprob: -3.3296847343444824
    6. '    ' → logprob: -3.8296847343444824
    7. ' ' → logprob: -3.9546847343444824
    8. '	' → logprob: -4.204684734344482
    9. '        ' → logprob: -4.829684734344482
    10. ' pour' → logprob: -5.079684734344482

Token 90: ' jug' (ID: 18737)
  Prédit: ' jug'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' jug' → logprob: -0.546532154083252
    2. 'jug' → logprob: -1.171532154083252
    3. ' juge' → logprob: -2.921532154083252
    4. ' n' → logprob: -3.671532154083252
    5. ' ' → logprob: -4.796532154083252
    6. ' judges' → logprob: -4.921532154083252
    7. 'n' → logprob: -5.171532154083252
    8. ' j' → logprob: -5.171532154083252
    9. ' ju' → logprob: -6.546532154083252
    10. ' ' → logprob: -7.546532154083252

Token 91: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.0003422567679081112
    2. 'e' → logprob: -8.00034236907959
    3. 'ges' → logprob: -12.25034236907959
    4. 'eurs' → logprob: -13.62534236907959
    5. '```' → logprob: -15.00034236907959
    6. 'eg' → logprob: -15.50034236907959
    7. 'ge' → logprob: -15.75034236907959
    8. '``' → logprob: -16.250341415405273
    9. '#' → logprob: -17.375341415405273
    10. 'ers' → logprob: -18.000341415405273

Token 92: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.0152649879455566
    2. '       ' → logprob: -1.2652649879455566
    3. '   ' → logprob: -2.3902649879455566
    4. '	for' → logprob: -2.3902649879455566
    5. 'for' → logprob: -2.8902649879455566
    6. '    ' → logprob: -3.0152649879455566
    7. ' ' → logprob: -3.5152649879455566
    8. '	' → logprob: -4.640264987945557
    9. '<|end|>' → logprob: -5.640264987945557
    10. '	   ' → logprob: -5.765264987945557

Token 93: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.46478065848350525
    2. 'for' → logprob: -1.9647806882858276
    3. '	for' → logprob: -2.464780569076538
    4. ' ' → logprob: -2.964780569076538
    5. '       ' → logprob: -3.589780569076538
    6. '    ' → logprob: -3.964780569076538
    7. '   ' → logprob: -4.089780807495117
    8. '	' → logprob: -4.839780807495117
    9. ' 	' → logprob: -5.339780807495117
    10. '<|end|>' → logprob: -5.339780807495117

Token 94: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5429524779319763
    2. 'for' (adapté à ' for') → logprob: -1.042952537536621
    3. '	for' → logprob: -3.042952537536621
    4. ' ' → logprob: -4.542952537536621
    5. '       ' → logprob: -5.792952537536621
    6. ' ' → logprob: -6.292952537536621
    7. '	' → logprob: -6.917952537536621
    8. ' 
' → logprob: -7.167952537536621
    9. '   ' → logprob: -7.917952537536621
    10. '    ' → logprob: -8.417952537536621

Token 95: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.8014775514602661
    2. ' i' → logprob: -0.9264775514602661
    3. ' ' → logprob: -1.9264775514602661
    4. '_' → logprob: -4.676477432250977
    5. ' ‌' → logprob: -8.301477432250977
    6. 'i' → logprob: -9.801477432250977
    7. ' ▁' → logprob: -10.176477432250977
    8. ' I' → logprob: -10.426477432250977
    9. '  ' → logprob: -11.176477432250977
    10. '_i' → logprob: -11.926477432250977

Token 96: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.8324257731437683
    2. ' i' → logprob: -1.082425832748413
    3. ' ' → logprob: -1.707425832748413
    4. '  ' → logprob: -3.582425832748413
    5. ' _' → logprob: -4.207425594329834
    6. 'in' → logprob: -7.082425594329834
    7. ' n' → logprob: -7.707425594329834
    8. '_' → logprob: -7.832425594329834
    9. 'i' → logprob: -8.457426071166992
    10. '   ' → logprob: -9.707426071166992

Token 97: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.003204092849045992
    2. ' range' → logprob: -5.753203868865967
    3. 'ange' → logprob: -11.628204345703125
    4. '(range' → logprob: -12.628204345703125
    5. '```' → logprob: -12.628204345703125
    6. 'rang' → logprob: -12.878204345703125
    7. 'n' → logprob: -13.753204345703125
    8. ' ' → logprob: -13.878204345703125
    9. '	range' → logprob: -13.878204345703125
    10. 'ran' → logprob: -14.003204345703125

Token 98: '(n' (ID: 2406)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.5387566089630127
    2. '(' → logprob: -1.1637566089630127
    3. ' n' → logprob: -2.6637566089630127
    4. '(n' → logprob: -3.9137566089630127
    5. ' ' → logprob: -4.913756370544434
    6. ' range' → logprob: -5.413756370544434
    7. ' )' → logprob: -6.663756370544434
    8. ')' → logprob: -7.788756370544434
    9. ' (
' → logprob: -8.413756370544434
    10. '(
' → logprob: -8.663756370544434

Token 99: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.009154429659247398
    2. ' ):' → logprob: -4.884154319763184
    3. '):
' → logprob: -7.259154319763184
    4. ')' → logprob: -7.259154319763184
    5. ':' → logprob: -9.759154319763184
    6. ' )' → logprob: -10.259154319763184
    7. '   ' → logprob: -10.884154319763184
    8. ' ):
' → logprob: -11.634154319763184
    9. ' :' → logprob: -11.884154319763184
    10. '):
' → logprob: -12.009154319763184

Token 100: '           ' (ID: 352)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8877363801002502
    2. '    ' → logprob: -1.1377363204956055
    3. '           ' → logprob: -2.1377363204956055
    4. '   ' → logprob: -2.6377363204956055
    5. ':' → logprob: -3.7627363204956055
    6. '```' → logprob: -4.3877363204956055
    7. '       ' → logprob: -4.7627363204956055
    8. ' ```' → logprob: -5.6377363204956055
    9. ' ' → logprob: -5.7627363204956055
    10. '     
' → logprob: -5.7627363204956055

Token 101: ' score' (ID: 8429)
  Prédit: ' score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' score' → logprob: -0.11982768774032593
    2. 'score' (adapté à ' score') → logprob: -2.3698277473449707
    3. ' scores' → logprob: -4.869827747344971
    4. ' s' → logprob: -5.119827747344971
    5. 'scores' → logprob: -5.744827747344971
    6. '           ' → logprob: -6.994827747344971
    7. 's' → logprob: -7.869827747344971
    8. '            
' → logprob: -7.869827747344971
    9. '   ' → logprob: -8.369827270507812
    10. '	score' → logprob: -8.369827270507812

Token 102: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05722644552588463
    2. 's' → logprob: -2.9322264194488525
    3. '=' → logprob: -6.182226657867432
    4. '_' → logprob: -8.682226181030273
    5. ' ' → logprob: -9.432226181030273
    6. ' s' → logprob: -11.682226181030273
    7. '_s' → logprob: -12.307226181030273
    8. ',' → logprob: -12.807226181030273
    9. '_=' → logprob: -13.682226181030273
    10. '.' → logprob: -13.932226181030273

Token 103: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.16371574997901917
    2. ' float' → logprob: -1.9137157201766968
    3. 'int' → logprob: -5.788715839385986
    4. 'float' → logprob: -8.413715362548828
    5. ' input' → logprob: -9.038715362548828
    6. ' ' → logprob: -9.538715362548828
    7. '	int' → logprob: -12.538715362548828
    8. '	float' → logprob: -13.413715362548828
    9. 'input' → logprob: -13.788715362548828
    10. '  ' → logprob: -13.788715362548828

Token 104: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.038125261664390564
    2. '(' → logprob: -3.2881252765655518
    3. 'input' → logprob: -10.538125038146973
    4. '()' → logprob: -10.538125038146973
    5. ' (' → logprob: -10.913125038146973
    6. ' input' → logprob: -12.163125038146973
    7. '(
' → logprob: -12.288125038146973
    8. '(in' → logprob: -15.038125038146973
    9. ' ' → logprob: -15.163125038146973
    10. '(inp' → logprob: -15.163125038146973

Token 105: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.03292527049779892
    2. '()' → logprob: -3.5329253673553467
    3. '().' → logprob: -5.782925128936768
    4. '()))' → logprob: -10.032925605773926
    5. ')' → logprob: -11.032925605773926
    6. ' ())' → logprob: -11.157925605773926
    7. '())
' → logprob: -11.532925605773926
    8. '();)' → logprob: -13.407925605773926
    9. '())

' → logprob: -13.657925605773926
    10. '()>' → logprob: -14.157925605773926

Token 106: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -1.1472419600977446e-06
    2. ')' → logprob: -14.625000953674316
    3. 'rstrip' → logprob: -15.000000953674316
    4. ' strip' → logprob: -15.125000953674316
    5. '.strip' → logprob: -16.875001907348633
    6. '(strip' → logprob: -17.250001907348633
    7. '_strip' → logprob: -17.375001907348633
    8. 'split' → logprob: -17.750001907348633
    9. '))' → logprob: -18.250001907348633
    10. 'str' → logprob: -18.750001907348633

Token 107: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.025800645351409912
    2. ')' → logprob: -4.275800704956055
    3. '())
' → logprob: -4.775800704956055
    4. '()' → logprob: -5.775800704956055
    5. ')
' → logprob: -11.400800704956055
    6. '())
' → logprob: -11.650800704956055
    7. '()))' → logprob: -12.275800704956055
    8. '()
' → logprob: -12.275800704956055
    9. '))' → logprob: -13.150800704956055
    10. ' )' → logprob: -13.650800704956055

Token 108: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -8.804671233519912e-05
    2. '       ' → logprob: -10.37508773803711
    3. ')' → logprob: -11.00008773803711
    4. '<|end|>' → logprob: -11.62508773803711
    5. 'scores' → logprob: -11.87508773803711
    6. '            
' → logprob: -11.87508773803711
    7. ',' → logprob: -12.50008773803711
    8. '
' → logprob: -12.75008773803711
    9. ' scores' → logprob: -13.12508773803711
    10. '   ' → logprob: -13.75008773803711

Token 109: ' scores' (ID: 18923)
  Prédit: ' scores'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' scores' → logprob: -0.055202145129442215
    2. 'scores' (adapté à ' scores') → logprob: -2.9302022457122803
    3. '_scores' → logprob: -9.43020248413086
    4. '    ' → logprob: -9.68020248413086
    5. ' ' → logprob: -10.43020248413086
    6. 's' → logprob: -10.43020248413086
    7. '           ' → logprob: -10.55520248413086
    8. '   ' → logprob: -10.68020248413086
    9. '       ' → logprob: -10.80520248413086
    10. ' 
' → logprob: -10.80520248413086

Token 110: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.25194576382637024
    2. '.' → logprob: -1.5019457340240479
    3. ' .' → logprob: -11.376945495605469
    4. '.extend' → logprob: -13.251945495605469
    5. '.setdefault' → logprob: -13.501945495605469
    6. '.app' → logprob: -14.376945495605469
    7. '.add' → logprob: -14.376945495605469
    8. ').' → logprob: -15.501945495605469
    9. '.ap' → logprob: -15.501945495605469
    10. '.Append' → logprob: -15.626945495605469

Token 111: '(score' (ID: 70244)
  Prédit: '(score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(score' → logprob: -0.048589304089546204
    2. '(' → logprob: -3.0485892295837402
    3. '(scores' → logprob: -13.548589706420898
    4. ' (' → logprob: -15.548589706420898
    5. '(
' → logprob: -16.1735897064209
    6. '(sc' → logprob: -16.6735897064209
    7. '(s' → logprob: -17.2985897064209
    8. 'score' → logprob: -17.2985897064209
    9. '(schedule' → logprob: -17.5485897064209
    10. '((' → logprob: -17.5485897064209

Token 112: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.921253225300461e-05
    2. ')
' → logprob: -10.000069618225098
    3. ' )' → logprob: -10.750069618225098
    4. '
' → logprob: -14.250069618225098
    5. '   ' → logprob: -15.125069618225098
    6. ' ' → logprob: -15.125069618225098
    7. '       ' → logprob: -15.250069618225098
    8. '<|end|>' → logprob: -15.500069618225098
    9. ')

' → logprob: -15.625069618225098
    10. ')return' → logprob: -16.50006866455078

Token 113: '        
' (ID: 3564)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.22535152733325958
    2. '<|end|>' → logprob: -1.9753515720367432
    3. ' 
' → logprob: -3.975351572036743
    4. '        
' → logprob: -4.225351333618164
    5. '    
' → logprob: -4.725351333618164
    6. ' ' → logprob: -5.850351333618164
    7. '       ' → logprob: -6.225351333618164
    8. '#' → logprob: -6.350351333618164
    9. 's' → logprob: -6.600351333618164
    10. '
        
' → logprob: -6.725351333618164

Token 114: '       ' (ID: 309)
  Prédit: '        
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '        
' → logprob: -0.6948482990264893
    2. '       ' → logprob: -0.8198482990264893
    3. '
' → logprob: -3.4448482990264893
    4. '   ' → logprob: -5.06984806060791
    5. 'scores' → logprob: -5.31984806060791
    6. '    
' → logprob: -5.44484806060791
    7. ' scores' → logprob: -5.56984806060791
    8. ' 
' → logprob: -5.94484806060791
    9. '#' → logprob: -6.31984806060791
    10. '        ' → logprob: -7.06984806060791

Token 115: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.521592378616333
    2. 'scores' → logprob: -1.271592378616333
    3. ' #' → logprob: -3.146592378616333
    4. '       ' → logprob: -3.771592378616333
    5. '        
' → logprob: -4.396592140197754
    6. ' scores' → logprob: -4.521592140197754
    7. '
' → logprob: -4.771592140197754
    8. 'max' → logprob: -5.396592140197754
    9. 's' → logprob: -5.521592140197754
    10. ' 
' → logprob: -6.021592140197754

Token 116: ' Trou' (ID: 58947)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8167511224746704
    2. 'scores' → logprob: -0.8167511224746704
    3. ' scores' → logprob: -2.441751003265381
    4. ' #' → logprob: -4.566751003265381
    5. 'if' → logprob: -5.066751003265381
    6. ' if' → logprob: -5.191751003265381
    7. 'sorted' → logprob: -6.066751003265381
    8. 'score' → logprob: -7.379251003265381
    9. ' sorted' → logprob: -7.691751003265381
    10. '       ' → logprob: -7.754251003265381

Token 117: 'ver' (ID: 445)
  Prédit: 'ver'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ver' → logprob: -0.014126014895737171
    2. 've' → logprob: -4.389125823974609
    3. 'er' → logprob: -7.389125823974609
    4. 'v' → logprob: -8.13912582397461
    5. 'ter' → logprob: -8.13912582397461
    6. '#' → logprob: -8.88912582397461
    7. 'r' → logprob: -9.26412582397461
    8. '   ' → logprob: -9.88912582397461
    9. 'ner' → logprob: -10.51412582397461
    10. 'vez' → logprob: -10.63912582397461

Token 118: ' la' (ID: 557)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0952479839324951
    2. ' le' → logprob: -1.4702479839324951
    3. ' la' → logprob: -2.095247983932495
    4. '_le' → logprob: -2.220247983932495
    5. 's' → logprob: -2.970247983932495
    6. ' ' → logprob: -3.095247983932495
    7. ' l' → logprob: -3.595247983932495
    8. ' les' → logprob: -3.970247983932495
    9. 'le' → logprob: -3.970247983932495
    10. ' the' → logprob: -4.720248222351074

Token 119: ' plus' (ID: 2932)
  Prédit: ' somme'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' somme' → logprob: -1.7122867107391357
    2. 'm' → logprob: -1.8372867107391357
    3. 's' → logprob: -1.9622867107391357
    4. ' plus' → logprob: -2.3372867107391357
    5. 'me' → logprob: -2.4622867107391357
    6. 'max' → logprob: -2.8372867107391357
    7. 'min' → logprob: -3.0872867107391357
    8. 'plus' → logprob: -3.2122867107391357
    9. 'minimum' → logprob: -3.5872867107391357
    10. ' note' → logprob: -3.7122867107391357

Token 120: ' haute' (ID: 49646)
  Prédit: 'pet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pet' → logprob: -0.9304982423782349
    2. ' petite' → logprob: -0.9304982423782349
    3. ' basse' → logprob: -2.3054981231689453
    4. ' petit' → logprob: -3.4304981231689453
    5. ' faible' → logprob: -3.6804981231689453
    6. ' grande' → logprob: -3.9304981231689453
    7. ' pet' → logprob: -4.055498123168945
    8. 'b' → logprob: -4.805498123168945
    9. ' ' → logprob: -6.180498123168945
    10. ' haute' → logprob: -6.555498123168945

Token 121: ' et' (ID: 859)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 122: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.007133754901587963
    2. ' the' → logprob: -6.507133960723877
    3. 'la' → logprob: -6.507133960723877
    4. ' lowest' → logprob: -6.632133960723877
    5. '<|end|>' → logprob: -6.757133960723877
    6. '#' → logprob: -7.632133960723877
    7. ' ' → logprob: -7.757133960723877
    8. 'lowest' → logprob: -8.132133483886719
    9. 'the' → logprob: -8.882133483886719
    10. ' plus' → logprob: -10.132133483886719

Token 123: ' plus' (ID: 2932)
  Prédit: ' plus'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' plus' → logprob: -0.4346679151058197
    2. 'plus' → logprob: -1.059667944908142
    3. 'moins' → logprob: -5.309668064117432
    4. 'b' → logprob: -8.559667587280273
    5. ' moindre' → logprob: -8.559667587280273
    6. 'mo' → logprob: -8.809667587280273
    7. 'lowest' → logprob: -8.934667587280273
    8. ' moins' → logprob: -9.184667587280273
    9. '<|end|>' → logprob: -9.934667587280273
    10. '```' → logprob: -10.184667587280273

Token 124: ' basse' (ID: 110686)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.004150818567723036
    2. ' basse' → logprob: -6.129150867462158
    3. 'fa' → logprob: -6.754150867462158
    4. 'bas' → logprob: -8.379150390625
    5. 'low' → logprob: -8.504150390625
    6. 'pet' → logprob: -8.879150390625
    7. '```' → logprob: -9.504150390625
    8. ' faible' → logprob: -9.879150390625
    9. '<|end|>' → logprob: -11.504150390625
    10. 'ba' → logprob: -11.504150390625

Token 125: ' note' (ID: 7477)
  Prédit: ' score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' score' → logprob: -0.5945214629173279
    2. ' note' → logprob: -1.9695215225219727
    3. 'score' → logprob: -2.0945215225219727
    4. '<|end|>' → logprob: -2.3445215225219727
    5. 's' → logprob: -4.094521522521973
    6. ' valeur' → logprob: -4.344521522521973
    7. ' scores' → logprob: -4.469521522521973
    8. ' ' → logprob: -4.719521522521973
    9. '_score' → logprob: -4.844521522521973
    10. 'note' → logprob: -5.219521522521973

Token 126: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.483950674533844
    2. ',' → logprob: -2.108950614929199
    3. '        
' → logprob: -2.233950614929199
    4. '<|end|>' → logprob: -2.483950614929199
    5. '.' → logprob: -4.233950614929199
    6. 's' → logprob: -4.358950614929199
    7. ':' → logprob: -4.733950614929199
    8. ' ,' → logprob: -4.858950614929199
    9. 'scores' → logprob: -5.483950614929199
    10. '   ' → logprob: -5.608950614929199

Token 127: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3199004530906677
    2. '        
' → logprob: -2.3199005126953125
    3. 'scores' → logprob: -2.6949005126953125
    4. ',' → logprob: -3.0699005126953125
    5. 's' → logprob: -3.9449005126953125
    6. ' scores' → logprob: -4.5699005126953125
    7. '(scores' → logprob: -4.6949005126953125
    8. ' ,' → logprob: -5.3199005126953125
    9. '<|end|>' → logprob: -5.8199005126953125
    10. '        ' → logprob: -6.1949005126953125

Token 128: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.8702316880226135
    2. 'highest' → logprob: -1.2452316284179688
    3. ' max' → logprob: -2.2452316284179688
    4. ' highest' → logprob: -2.3702316284179688
    5. 'high' → logprob: -2.7452316284179688
    6. ' high' → logprob: -3.8702316284179688
    7. 'min' → logprob: -6.745231628417969
    8. 'best' → logprob: -6.995231628417969
    9. 'top' → logprob: -6.995231628417969
    10. ' top' → logprob: -7.120231628417969

Token 129: '_score' (ID: 22555)
  Prédit: '_score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_score' → logprob: -0.079111747443676
    2. '_' → logprob: -2.5791118144989014
    3. '_scores' → logprob: -9.82911205291748
    4. '_s' → logprob: -10.07911205291748
    5. '_note' → logprob: -10.07911205291748
    6. '_val' → logprob: -10.45411205291748
    7. 'score' → logprob: -10.95411205291748
    8. '(scores' → logprob: -11.82911205291748
    9. 's' → logprob: -11.95411205291748
    10. '_index' → logprob: -12.07911205291748

Token 130: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02975570224225521
    2. '=' → logprob: -3.5297555923461914
    3. ' ' → logprob: -12.904755592346191
    4. ',' → logprob: -13.529755592346191
    5. '   ' → logprob: -14.529755592346191
    6. '=max' → logprob: -14.904755592346191
    7. '  ' → logprob: -15.654755592346191
    8. ' ' → logprob: -15.779755592346191
    9. 's' → logprob: -15.904755592346191
    10. '=s' → logprob: -16.654756546020508

Token 131: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.5759397745132446
    2. ' max' → logprob: -0.8259397745132446
    3. '	max' → logprob: -15.825940132141113
    4. '(max' → logprob: -15.950940132141113
    5. '=max' → logprob: -17.450939178466797
    6. ',max' → logprob: -17.825939178466797
    7. '[max' → logprob: -18.700939178466797
    8. '   ' → logprob: -18.950939178466797
    9. ' ' → logprob: -19.575939178466797
    10. '_max' → logprob: -19.950939178466797

Token 132: '(scores' (ID: 154090)
  Prédit: '(scores'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(scores' → logprob: -0.0011743901995941997
    2. '(' → logprob: -6.751174449920654
    3. '(score' → logprob: -13.376173973083496
    4. 'scores' → logprob: -13.626173973083496
    5. '(s' → logprob: -14.376173973083496
    6. '(sc' → logprob: -15.251173973083496
    7. '(
' → logprob: -15.251173973083496
    8. ' scores' → logprob: -15.876173973083496
    9. ' (' → logprob: -16.376174926757812
    10. '(numbers' → logprob: -17.001174926757812

Token 133: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005960680078715086
    2. ')
' → logprob: -5.130960464477539
    3. ' )' → logprob: -10.505960464477539
    4. ' )
' → logprob: -12.880960464477539
    5. ')
' → logprob: -13.505960464477539
    6. ')

' → logprob: -14.505960464477539
    7. ' ' → logprob: -16.00596046447754
    8. ')#' → logprob: -16.88096046447754
    9. '),' → logprob: -18.00596046447754
    10. '   ' → logprob: -18.00596046447754

Token 134: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 135: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' (adapté à ' min') → logprob: -0.023251067847013474
    2. ' min' → logprob: -3.7732510566711426
    3. '	min' → logprob: -12.8982515335083
    4. '_min' → logprob: -13.7732515335083
    5. '(min' → logprob: -14.5232515335083
    6. '[min' → logprob: -14.7732515335083
    7. '.min' → logprob: -15.1482515335083
    8. '       ' → logprob: -15.6482515335083
    9. 'max' → logprob: -16.023250579833984
    10. '   ' → logprob: -16.148250579833984

Token 136: '_score' (ID: 22555)
  Prédit: '_score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_score' → logprob: -0.05928458273410797
    2. '_scores' → logprob: -2.9342846870422363
    3. '(scores' → logprob: -5.559284687042236
    4. '_' → logprob: -8.059284210205078
    5. 'scores' → logprob: -8.684284210205078
    6. '(' → logprob: -10.809284210205078
    7. 'score' → logprob: -11.559284210205078
    8. '(score' → logprob: -11.934284210205078
    9. 's' → logprob: -12.184284210205078
    10. '(_' → logprob: -12.184284210205078

Token 137: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0263022743165493
    2. '=' → logprob: -3.6513023376464844
    3. ' ' → logprob: -14.026302337646484
    4. ' =
' → logprob: -14.401302337646484
    5. '<|end|>' → logprob: -16.276302337646484
    6. ')' → logprob: -16.401302337646484
    7. 'scores' → logprob: -16.401302337646484
    8. '(scores' → logprob: -16.776302337646484
    9. '_scores' → logprob: -16.776302337646484
    10. ' scores' → logprob: -16.901302337646484

Token 138: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.1602274775505066
    2. 'min' → logprob: -1.9102275371551514
    3. '(min' → logprob: -12.78522777557373
    4. '	min' → logprob: -15.78522777557373
    5. 'max' → logprob: -16.035226821899414
    6. ' max' → logprob: -16.535226821899414
    7. ' ' → logprob: -16.660226821899414
    8. ' scores' → logprob: -17.160226821899414
    9. ',min' → logprob: -17.535226821899414
    10. 'm' → logprob: -17.660226821899414

Token 139: '(scores' (ID: 154090)
  Prédit: '(scores'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(scores' → logprob: -3.070975071750581e-05
    2. '(s' → logprob: -11.375030517578125
    3. '(' → logprob: -11.625030517578125
    4. ' (' → logprob: -12.250030517578125
    5. 'scores' → logprob: -12.375030517578125
    6. '(score' → logprob: -14.250030517578125
    7. ' scores' → logprob: -15.375030517578125
    8. '(sc' → logprob: -16.250030517578125
    9. '_scores' → logprob: -17.000030517578125
    10. '(samples' → logprob: -17.500030517578125

Token 140: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0014218994183465838
    2. ')
' → logprob: -6.626421928405762
    3. 'scores' → logprob: -9.751421928405762
    4. ')

' → logprob: -11.876421928405762
    5. '_scores' → logprob: -12.001421928405762
    6. ' scores' → logprob: -12.376421928405762
    7. '(scores' → logprob: -12.376421928405762
    8. ' )' → logprob: -12.501421928405762
    9. '<|end|>' → logprob: -12.501421928405762
    10. '       ' → logprob: -12.626421928405762

Token 141: '        
' (ID: 3564)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.8510853052139282
    2. '
' → logprob: -1.6010853052139282
    3. '    
' → logprob: -2.3510851860046387
    4. '        
' → logprob: -2.6010851860046387
    5. '<|end|>' → logprob: -2.8510851860046387
    6. '  
' → logprob: -3.2260851860046387
    7. '#' → logprob: -3.3510851860046387
    8. ')' → logprob: -4.351085186004639
    9. '       ' → logprob: -4.601085186004639
    10. '   
' → logprob: -4.851085186004639

Token 142: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7688064575195312
    2. '        
' → logprob: -1.0188064575195312
    3. ' 
' → logprob: -2.8938064575195312
    4. '#' → logprob: -3.2688064575195312
    5. ' total' → logprob: -3.7688064575195312
    6. 'total' → logprob: -4.518806457519531
    7. '        ' → logprob: -4.643806457519531
    8. '    
' → logprob: -5.143806457519531
    9. ' #' → logprob: -5.268806457519531
    10. '     
' → logprob: -5.643806457519531

Token 143: ' #' (ID: 1069)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.565004289150238
    2. '#' (adapté à ' #') → logprob: -1.0650043487548828
    3. 'sum' → logprob: -3.315004348754883
    4. ' total' → logprob: -3.440004348754883
    5. '        
' → logprob: -5.565004348754883
    6. ' #' → logprob: -5.940004348754883
    7. 'valid' → logprob: -5.940004348754883
    8. '
' → logprob: -6.440004348754883
    9. '       ' → logprob: -6.440004348754883
    10. 'score' → logprob: -6.565004348754883

Token 144: ' Sup' (ID: 13606)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.1452686786651611
    2. ' scores' → logprob: -1.3952686786651611
    3. ' total' → logprob: -1.6452686786651611
    4. 'scores' → logprob: -1.8952686786651611
    5. 'total' → logprob: -3.395268678665161
    6. ' #' → logprob: -3.645268678665161
    7. ' Calcul' → logprob: -4.645268440246582
    8. 'Calcul' → logprob: -5.770268440246582
    9. '
' → logprob: -6.145268440246582
    10. ' somme' → logprob: -6.395268440246582

Token 145: 'primer' (ID: 55821)
  Prédit: 'primer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'primer' → logprob: -0.0037708666641265154
    2. 'pr' → logprob: -6.37877082824707
    3. 'prime' → logprob: -7.37877082824707
    4. 'prim' → logprob: -8.00377082824707
    5. 'p' → logprob: -8.50377082824707
    6. 'r' → logprob: -9.00377082824707
    7. '   ' → logprob: -9.37877082824707
    8. ' primer' → logprob: -9.37877082824707
    9. 'press' → logprob: -9.37877082824707
    10. '#' → logprob: -9.75377082824707

Token 146: ' UNE' (ID: 132768)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.9732319116592407
    2. ' scores' → logprob: -1.4732319116592407
    3. 'scores' → logprob: -1.5982319116592407
    4. 'max' → logprob: -1.7232319116592407
    5. ' the' → logprob: -5.348231792449951
    6. ' la' → logprob: -6.223231792449951
    7. ' one' → logprob: -6.723231792449951
    8. ' les' → logprob: -6.848231792449951
    9. '(scores' → logprob: -7.348231792449951
    10. 's' → logprob: -8.09823226928711

Token 147: ' occurrence' (ID: 55807)
  Prédit: ' occurrence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' occurrence' → logprob: -0.2717270851135254
    2. ' instance' → logprob: -2.1467270851135254
    3. ' occur' → logprob: -2.8967270851135254
    4. 'occ' → logprob: -4.146727085113525
    5. ' fois' → logprob: -4.271727085113525
    6. 'occur' → logprob: -4.271727085113525
    7. ' max' → logprob: -4.646727085113525
    8. 'max' → logprob: -5.396727085113525
    9. ' occurrences' → logprob: -6.146727085113525
    10. 'instance' → logprob: -6.521727085113525

Token 148: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.11059744656085968
    2. ' max' → logprob: -3.7355973720550537
    3. '<|end|>' → logprob: -3.8605973720550537
    4. ' des' → logprob: -3.9855973720550537
    5. ' du' → logprob: -4.360597610473633
    6. ' of' → logprob: -4.610597610473633
    7. ' ' → logprob: -4.985597610473633
    8. 'max' → logprob: -5.985597610473633
    9. '    ' → logprob: -6.485597610473633
    10. ' maximale' → logprob: -6.610597610473633

Token 149: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.6840516328811646
    2. ' max' → logprob: -1.0590516328811646
    3. 'max' → logprob: -2.059051513671875
    4. 'la' → logprob: -4.184051513671875
    5. ' l' → logprob: -6.059051513671875
    6. 'l' → logprob: -6.934051513671875
    7. ' the' → logprob: -7.434051513671875
    8. ' ' → logprob: -7.559051513671875
    9. ' chaque' → logprob: -7.559051513671875
    10. ' each' → logprob: -8.934051513671875

Token 150: ' plus' (ID: 2932)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.28363198041915894
    2. ' max' → logprob: -1.4086320400238037
    3. 'min' → logprob: -6.408631801605225
    4. ' min' → logprob: -7.658631801605225
    5. ' plus' → logprob: -9.408632278442383
    6. 'plus' → logprob: -9.408632278442383
    7. ' maximum' → logprob: -9.908632278442383
    8. ' ' → logprob: -10.908632278442383
    9. ' highest' → logprob: -10.908632278442383
    10. ' maxi' → logprob: -11.158632278442383

Token 151: ' haute' (ID: 49646)
  Prédit: ' haute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' haute' → logprob: -0.05508764088153839
    2. ' haut' → logprob: -3.8050875663757324
    3. 'haut' → logprob: -4.305087566375732
    4. 'ha' → logprob: -4.555087566375732
    5. ' high' → logprob: -5.555087566375732
    6. ' basse' → logprob: -6.930087566375732
    7. ' élevée' → logprob: -7.055087566375732
    8. 'high' → logprob: -7.680087566375732
    9. ' ha' → logprob: -7.805087566375732
    10. ' ' → logprob: -8.68008804321289

Token 152: ' note' (ID: 7477)
  Prédit: ' note'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' note' → logprob: -0.8461691737174988
    2. ' score' → logprob: -1.0961692333221436
    3. 'score' → logprob: -2.3461692333221436
    4. ' et' → logprob: -2.9711692333221436
    5. '_score' → logprob: -3.2211692333221436
    6. '<|end|>' → logprob: -3.9711692333221436
    7. ' and' → logprob: -4.2211689949035645
    8. ' ' → logprob: -5.3461689949035645
    9. '_note' → logprob: -5.8461689949035645
    10. 'note' → logprob: -6.7211689949035645

Token 153: '
' (ID: 198)
  Prédit: 'scores'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'scores' → logprob: -0.07068701833486557
    2. ' scores' → logprob: -2.8206870555877686
    3. 's' → logprob: -6.1956868171691895
    4. '(scores' → logprob: -6.1956868171691895
    5. ',' → logprob: -6.4456868171691895
    6. '.' → logprob: -6.9456868171691895
    7. ' ' → logprob: -7.4456868171691895
    8. ')' → logprob: -7.6956868171691895
    9. '   ' → logprob: -8.570687294006348
    10. ' ,' → logprob: -8.570687294006348

Token 154: '       ' (ID: 309)
  Prédit: 'scores'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'scores' → logprob: -0.21516335010528564
    2. ' scores' → logprob: -1.8401633501052856
    3. 's' → logprob: -4.340163230895996
    4. '       ' → logprob: -4.465163230895996
    5. '<|end|>' → logprob: -5.590163230895996
    6. '(scores' → logprob: -5.840163230895996
    7. ',' → logprob: -6.590163230895996
    8. '   ' → logprob: -7.715163230895996
    9. ')' → logprob: -7.715163230895996
    10. ' ,' → logprob: -8.590163230895996

Token 155: ' scores' (ID: 18923)
  Prédit: 'scores'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'scores' (adapté à ' scores') → logprob: -0.6326078176498413
    2. ' scores' → logprob: -0.7576078176498413
    3. '   ' → logprob: -12.757607460021973
    4. '(scores' → logprob: -13.007607460021973
    5. 's' → logprob: -13.632607460021973
    6. 'score' → logprob: -14.382607460021973
    7. '_scores' → logprob: -14.632607460021973
    8. ' ' → logprob: -15.632607460021973
    9. '       ' → logprob: -15.757607460021973
    10. ' for' → logprob: -16.13260841369629

Token 156: '.remove' (ID: 7986)
  Prédit: '.remove'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.remove' → logprob: -0.03805170953273773
    2. '.' → logprob: -3.2880516052246094
    3. ' .' → logprob: -11.91305160522461
    4. 'remove' → logprob: -13.16305160522461
    5. '.Remove' → logprob: -13.78805160522461
    6. ' remove' → logprob: -14.53805160522461
    7. '.delete' → logprob: -17.41305160522461
    8. ').' → logprob: -17.41305160522461
    9. '.s' → logprob: -17.53805160522461
    10. '.rem' → logprob: -17.53805160522461

Token 157: '(max' (ID: 17178)
  Prédit: '(max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.003553504589945078
    2. '(' → logprob: -5.87855339050293
    3. 'max' → logprob: -7.25355339050293
    4. ' max' → logprob: -10.50355339050293
    5. ' (' → logprob: -11.50355339050293
    6. '(min' → logprob: -13.12855339050293
    7. '(
' → logprob: -14.12855339050293
    8. ',max' → logprob: -15.25355339050293
    9. '	max' → logprob: -16.00355339050293
    10. '_max' → logprob: -17.50355339050293

Token 158: '_score' (ID: 22555)
  Prédit: '_score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_score' → logprob: -1.1756367712223437e-05
    2. 'score' → logprob: -12.125011444091797
    3. '_scores' → logprob: -12.375011444091797
    4. '_' → logprob: -14.375011444091797
    5. '(score' → logprob: -14.375011444091797
    6. '_max' → logprob: -15.375011444091797
    7. '_s' → logprob: -15.750011444091797
    8. '(max' → logprob: -16.000011444091797
    9. ')' → logprob: -16.375011444091797
    10. 'max' → logprob: -16.875011444091797

Token 159: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.817902173381299e-05
    2. ')
' → logprob: -9.25009822845459
    3. ' )' → logprob: -13.62509822845459
    4. ')

' → logprob: -14.62509822845459
    5. '       ' → logprob: -15.25009822845459
    6. '   ' → logprob: -17.250097274780273
    7. ')
' → logprob: -18.375097274780273
    8. '<|end|>' → logprob: -18.750097274780273
    9. '),' → logprob: -19.125097274780273
    10. '))' → logprob: -19.125097274780273

Token 160: '        
' (ID: 3564)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 161: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.47081348299980164
    2. '#' → logprob: -1.345813512802124
    3. 'scores' → logprob: -2.220813512802124
    4. '        
' → logprob: -5.220813274383545
    5. 's' → logprob: -7.345813274383545
    6. ' #' → logprob: -8.220813751220703
    7. ' scores' → logprob: -8.720813751220703
    8. '   ' → logprob: -9.720813751220703
    9. '<|end|>' → logprob: -10.220813751220703
    10. ' ' → logprob: -11.220813751220703

Token 162: ' #' (ID: 1069)
  Prédit: 'scores'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'scores' → logprob: -0.4784560799598694
    2. '#' (adapté à ' #') → logprob: -0.9784560799598694
    3. '       ' → logprob: -5.603456020355225
    4. 's' → logprob: -8.353456497192383
    5. '   ' → logprob: -8.853456497192383
    6. ' #' → logprob: -8.978456497192383
    7. '        
' → logprob: -9.603456497192383
    8. ' scores' → logprob: -9.978456497192383
    9. '```' → logprob: -10.978456497192383
    10. ' ' → logprob: -11.228456497192383

Token 163: ' Sup' (ID: 13606)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3410700261592865
    2. 'scores' → logprob: -1.3410700559616089
    3. 'Sup' → logprob: -3.8410699367523193
    4. '       ' → logprob: -6.466070175170898
    5. 'sup' → logprob: -6.591070175170898
    6. ' #' → logprob: -7.216070175170898
    7. ' scores' → logprob: -7.341070175170898
    8. ' Sup' → logprob: -7.466070175170898
    9. '   ' → logprob: -7.591070175170898
    10. 'Supp' → logprob: -8.841070175170898

Token 164: 'primer' (ID: 55821)
  Prédit: 'primer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'primer' → logprob: -0.008748125284910202
    2. 'r' → logprob: -5.1337480545043945
    3. 'pr' → logprob: -7.0087480545043945
    4. 'prime' → logprob: -7.5087480545043945
    5. 'prima' → logprob: -7.6337480545043945
    6. 'primir' → logprob: -8.258748054504395
    7. 'prim' → logprob: -8.383748054504395
    8. 'rim' → logprob: -9.383748054504395
    9. 'p' → logprob: -9.758748054504395
    10. 'prem' → logprob: -10.133748054504395

Token 165: ' UNE' (ID: 132768)
  Prédit: 'scores'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'scores' → logprob: -1.0237491130828857
    2. 'min' → logprob: -1.1487491130828857
    3. '(scores' → logprob: -1.5237491130828857
    4. '(min' → logprob: -2.7737491130828857
    5. 'one' → logprob: -3.5237491130828857
    6. ' min' → logprob: -4.773749351501465
    7. ' one' → logprob: -5.773749351501465
    8. ' scores' → logprob: -6.398749351501465
    9. '(' → logprob: -9.023749351501465
    10. 's' → logprob: -9.273749351501465

Token 166: ' occurrence' (ID: 55807)
  Prédit: 'occ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'occ' → logprob: -0.03486515209078789
    2. ' occurrence' → logprob: -4.284865379333496
    3. 'scores' → logprob: -4.534865379333496
    4. 'occur' → logprob: -5.284865379333496
    5. '(scores' → logprob: -6.659865379333496
    6. ' scores' → logprob: -6.659865379333496
    7. ' occurrences' → logprob: -8.159865379333496
    8. 'space' → logprob: -8.409865379333496
    9. ' (' → logprob: -8.784865379333496
    10. '_occ' → logprob: -8.784865379333496

Token 167: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.013745245523750782
    2. ' of' → logprob: -4.638745307922363
    3. ' du' → logprob: -6.388745307922363
    4. '(' → logprob: -6.888745307922363
    5. 'de' → logprob: -6.888745307922363
    6. ' (' → logprob: -9.513745307922363
    7. 'del' → logprob: -11.013745307922363
    8. 'min' → logprob: -11.138745307922363
    9. '(s' → logprob: -11.138745307922363
    10. 's' → logprob: -11.263745307922363

Token 168: ' la' (ID: 557)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.040982943028211594
    2. ' min' → logprob: -3.790982961654663
    3. '(min' → logprob: -4.040982723236084
    4. '[min' → logprob: -15.165983200073242
    5. '(' → logprob: -15.415983200073242
    6. 'max' → logprob: -16.040983200073242
    7. ' (' → logprob: -16.415983200073242
    8. '	min' → logprob: -16.665983200073242
    9. 'm' → logprob: -17.040983200073242
    10. ',min' → logprob: -17.540983200073242

Token 169: ' plus' (ID: 2932)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.013316339813172817
    2. 'plus' → logprob: -4.6383161544799805
    3. ' min' → logprob: -6.2633161544799805
    4. ' plus' → logprob: -6.8883161544799805
    5. 'lowest' → logprob: -7.5133161544799805
    6. 'moins' → logprob: -10.38831615447998
    7. '(min' → logprob: -10.88831615447998
    8. ' lowest' → logprob: -11.01331615447998
    9. '	min' → logprob: -12.13831615447998
    10. '[min' → logprob: -12.76331615447998

Token 170: ' basse' (ID: 110686)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.07384822517633438
    2. ' basse' → logprob: -3.073848247528076
    3. 'bas' → logprob: -3.948848247528076
    4. 'min' → logprob: -6.198848247528076
    5. 'low' → logprob: -6.698848247528076
    6. '_' → logprob: -6.823848247528076
    7. '_b' → logprob: -7.823848247528076
    8. '_score' → logprob: -8.323847770690918
    9. ' faible' → logprob: -8.323847770690918
    10. 'ba' → logprob: -9.448847770690918

Token 171: ' note' (ID: 7477)
  Prédit: '_score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_score' → logprob: -0.11725194752216339
    2. '_note' → logprob: -2.4922518730163574
    3. '(' → logprob: -4.117251873016357
    4. '_' → logprob: -5.367251873016357
    5. 'score' → logprob: -5.367251873016357
    6. '(min' → logprob: -6.742251873016357
    7. '(note' → logprob: -7.992251873016357
    8. 'note' → logprob: -8.242252349853516
    9. '(_' → logprob: -8.742252349853516
    10. 's' → logprob: -9.867252349853516

Token 172: '
' (ID: 198)
  Prédit: 'scores'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'scores' → logprob: -0.028674472123384476
    2. ' scores' → logprob: -4.278674602508545
    3. '(scores' → logprob: -4.403674602508545
    4. 's' → logprob: -7.153674602508545
    5. '(
' → logprob: -7.528674602508545
    6. '   ' → logprob: -7.903674602508545
    7. '       ' → logprob: -8.903674125671387
    8. ')
' → logprob: -9.653674125671387
    9. 'score' → logprob: -9.903674125671387
    10. ')' → logprob: -10.153674125671387

Token 173: '       ' (ID: 309)
  Prédit: 'scores'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'scores' → logprob: -3.531315314830863e-06
    2. ' scores' → logprob: -13.250003814697266
    3. '       ' → logprob: -13.750003814697266
    4. '(scores' → logprob: -14.625003814697266
    5. '   ' → logprob: -15.750003814697266
    6. 'score' → logprob: -17.250003814697266
    7. 's' → logprob: -17.875003814697266
    8. 'votes' → logprob: -19.375003814697266
    9. '        
' → logprob: -19.375003814697266
    10. '```' → logprob: -19.500003814697266

Token 174: ' scores' (ID: 18923)
  Prédit: 'scores'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'scores' (adapté à ' scores') → logprob: -0.000698972842656076
    2. 'min' → logprob: -8.000699043273926
    3. ' scores' → logprob: -8.000699043273926
    4. '(scores' → logprob: -10.750699043273926
    5. ' min' → logprob: -12.750699043273926
    6. 's' → logprob: -13.000699043273926
    7. 'score' → logprob: -14.250699043273926
    8. '   ' → logprob: -15.000699043273926
    9. '(min' → logprob: -15.750699043273926
    10. '(s' → logprob: -16.50069808959961

Token 175: '.remove' (ID: 7986)
  Prédit: '.remove'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.remove' → logprob: -0.0067170290276408195
    2. '.' → logprob: -5.006717205047607
    3. 'remove' → logprob: -13.38171672821045
    4. ' .' → logprob: -16.256717681884766
    5. '.
' → logprob: -18.006717681884766
    6. '.Remove' → logprob: -18.381717681884766
    7. ' remove' → logprob: -18.506717681884766
    8. '	remove' → logprob: -20.256717681884766
    9. '.erase' → logprob: -21.006717681884766
    10. '(remove' → logprob: -21.006717681884766

Token 176: '(min' (ID: 26035)
  Prédit: '(min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(min' → logprob: -0.0040799472481012344
    2. '(' → logprob: -5.504079818725586
    3. '(max' → logprob: -13.754079818725586
    4. '(low' → logprob: -15.254079818725586
    5. ' (' → logprob: -16.754079818725586
    6. '("("' → logprob: -17.004079818725586
    7. '(
' → logprob: -17.129079818725586
    8. '(m' → logprob: -17.254079818725586
    9. '(mi' → logprob: -17.754079818725586
    10. '('' → logprob: -18.004079818725586

Token 177: '_score' (ID: 22555)
  Prédit: '_score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_score' → logprob: -0.162132129073143
    2. '(min' → logprob: -1.9121321439743042
    3. 'score' → logprob: -6.412132263183594
    4. '(' → logprob: -9.537132263183594
    5. 'min' → logprob: -9.662132263183594
    6. '(max' → logprob: -10.287132263183594
    7. '_scores' → logprob: -10.537132263183594
    8. '(score' → logprob: -11.037132263183594
    9. 'Score' → logprob: -11.287132263183594
    10. 'scores' → logprob: -11.287132263183594

Token 178: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005551783833652735
    2. ')
' → logprob: -7.500555038452148
    3. ')

' → logprob: -13.625555038452148
    4. ' )' → logprob: -15.250555038452148
    5. '   ' → logprob: -15.750555038452148
    6. '
' → logprob: -15.750555038452148
    7. ')
' → logprob: -16.25055503845215
    8. '       ' → logprob: -16.37555503845215
    9. '#' → logprob: -17.25055503845215
    10. '),' → logprob: -17.25055503845215

Token 179: '        
' (ID: 3564)
  Prédit: '        
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '        
' → logprob: -0.6049067974090576
    2. '       ' → logprob: -1.3549067974090576
    3. ' 
' → logprob: -2.3549067974090576
    4. '    
' → logprob: -3.2299067974090576
    5. 'result' → logprob: -4.229907035827637
    6. '
' → logprob: -4.479907035827637
    7. 's' → logprob: -5.104907035827637
    8. 'sum' → logprob: -5.104907035827637
    9. '  
' → logprob: -5.229907035827637
    10. ' sum' → logprob: -5.479907035827637

Token 180: '       ' (ID: 309)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.1252385973930359
    2. '       ' → logprob: -3.0002386569976807
    3. 'result' → logprob: -3.1252386569976807
    4. 'print' → logprob: -4.250238418579102
    5. '        
' → logprob: -5.375238418579102
    6. ' total' → logprob: -6.125238418579102
    7. 'sum' → logprob: -6.750238418579102
    8. 'score' → logprob: -7.375238418579102
    9. '   ' → logprob: -7.750238418579102
    10. '    
' → logprob: -8.375238418579102

Token 181: ' #' (ID: 1069)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.06885974854230881
    2. 'print' → logprob: -3.318859815597534
    3. 'result' → logprob: -3.568859815597534
    4. '#' (adapté à ' #') → logprob: -6.568859577178955
    5. 'score' → logprob: -8.068860054016113
    6. 'sum' → logprob: -9.068860054016113
    7. ' total' → logprob: -9.068860054016113
    8. '       ' → logprob: -9.693860054016113
    9. '        
' → logprob: -9.818860054016113
    10. 'final' → logprob: -10.193860054016113

Token 182: ' Calcul' (ID: 57243)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.5714384913444519
    2. ' total' → logprob: -1.1964385509490967
    3. 'print' → logprob: -2.4464385509490967
    4. '#' → logprob: -3.8214385509490967
    5. 'result' → logprob: -4.321438312530518
    6. ' print' → logprob: -5.071438312530518
    7. ' result' → logprob: -6.696438312530518
    8. ' #' → logprob: -6.946438312530518
    9. 'sum' → logprob: -6.946438312530518
    10. 'score' → logprob: -7.071438312530518

Token 183: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.09107239544391632
    2. '       ' → logprob: -2.7160723209381104
    3. 'total' → logprob: -4.0910725593566895
    4. ' total' → logprob: -6.3410725593566895
    5. '   ' → logprob: -7.0910725593566895
    6. 'sum' → logprob: -8.216072082519531
    7. '_total' → logprob: -8.341072082519531
    8. 'result' → logprob: -8.466072082519531
    9. 'score' → logprob: -8.841072082519531
    10. 's' → logprob: -9.341072082519531

Token 184: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.11334695667028427
    2. ' total' → logprob: -2.988347053527832
    3. ' le' → logprob: -3.113347053527832
    4. ' the' → logprob: -5.488347053527832
    5. 'total' → logprob: -5.488347053527832
    6. 'la' → logprob: -6.738347053527832
    7. 'le' → logprob: -7.238347053527832
    8. 's' → logprob: -7.363347053527832
    9. ' l' → logprob: -7.863347053527832
    10. ' result' → logprob: -7.988347053527832

Token 185: ' moyenne' (ID: 57480)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4234659969806671
    2. 'total' → logprob: -1.9234659671783447
    3. ' somme' → logprob: -2.1734659671783447
    4. 'sum' → logprob: -2.7984659671783447
    5. 'score' → logprob: -4.923466205596924
    6. 'm' → logprob: -4.923466205596924
    7. 'som' → logprob: -5.423466205596924
    8. ' total' → logprob: -5.673466205596924
    9. 'print' → logprob: -6.548466205596924
    10. ' sum' → logprob: -8.298465728759766

Token 186: ' des' (ID: 731)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.1803780794143677
    2. ' total' → logprob: -1.9303780794143677
    3. ' result' → logprob: -2.055377960205078
    4. 'total' → logprob: -2.055377960205078
    5. ' =' → logprob: -2.305377960205078
    6. '       ' → logprob: -3.430377960205078
    7. '(' → logprob: -3.680377960205078
    8. ' (' → logprob: -3.680377960205078
    9. 'score' → logprob: -4.305377960205078
    10. '=' → logprob: -4.430377960205078

Token 187: ' scores' (ID: 18923)
  Prédit: ' scores'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' scores' → logprob: -0.28371331095695496
    2. 'scores' → logprob: -1.4087133407592773
    3. ' notes' → logprob: -6.283713340759277
    4. 'score' → logprob: -8.158713340759277
    5. 'notes' → logprob: -9.408713340759277
    6. '(scores' → logprob: -9.783713340759277
    7. ' points' → logprob: -10.033713340759277
    8. ' remaining' → logprob: -10.158713340759277
    9. ' score' → logprob: -10.283713340759277
    10. ' rest' → logprob: -10.408713340759277

Token 188: ' rest' (ID: 2867)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -1.2235307693481445
    2. ' total' → logprob: -1.3485307693481445
    3. 'result' → logprob: -1.5985307693481445
    4. '       ' → logprob: -2.4735307693481445
    5. ' result' → logprob: -2.8485307693481445
    6. ' if' → logprob: -4.3485307693481445
    7. ' moyenne' → logprob: -4.4735307693481445
    8. 's' → logprob: -4.5985307693481445
    9. 'remaining' → logprob: -4.5985307693481445
    10. 'average' → logprob: -4.8485307693481445

Token 189: 'ants' (ID: 2027)
  Prédit: 'ants'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ants' → logprob: -0.00019781860464718193
    2. 'ant' → logprob: -8.625197410583496
    3. 'antes' → logprob: -12.250197410583496
    4. 'aux' → logprob: -12.750197410583496
    5. 'e' → logprob: -12.875197410583496
    6. '   ' → logprob: -13.000197410583496
    7. 'a' → logprob: -13.875197410583496
    8. 'es' → logprob: -14.000197410583496
    9. 'ents' → logprob: -14.250197410583496
    10. 'ante' → logprob: -14.375197410583496

Token 190: '
' (ID: 198)
  Prédit: ' total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.4606289267539978
    2. ' sum' → logprob: -2.0856289863586426
    3. ' result' → logprob: -2.4606289863586426
    4. '       ' → logprob: -3.2106289863586426
    5. 'sum' → logprob: -3.7106289863586426
    6. ' average' → logprob: -3.9606289863586426
    7. 'total' → logprob: -4.085628986358643
    8. 'result' → logprob: -4.210628986358643
    9. '        
' → logprob: -4.335628986358643
    10. ' 
' → logprob: -4.960628986358643

Token 191: '       ' (ID: 309)
  Prédit: ' total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.7113257646560669
    2. '       ' → logprob: -1.086325764656067
    3. 'total' → logprob: -3.0863256454467773
    4. ' result' → logprob: -3.0863256454467773
    5. ' sum' → logprob: -3.8363256454467773
    6. 'result' → logprob: -4.086325645446777
    7. '        
' → logprob: -4.461325645446777
    8. 'sum' → logprob: -4.711325645446777
    9. ' average' → logprob: -5.336325645446777
    10. ' if' → logprob: -5.586325645446777

Token 192: ' #' (ID: 1069)
  Prédit: 'average'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'average' → logprob: -0.47543203830718994
    2. 'total' → logprob: -1.85043203830719
    3. ' average' → logprob: -2.6004319190979004
    4. ' total' → logprob: -2.7254319190979004
    5. 'if' → logprob: -3.6004319190979004
    6. ' if' → logprob: -3.7254319190979004
    7. ' moyenne' → logprob: -4.1004319190979
    8. 'remaining' → logprob: -5.6004319190979
    9. 'result' → logprob: -6.1004319190979
    10. 'avg' → logprob: -6.1004319190979

Token 193: ' Attention' (ID: 81932)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.2875056266784668
    2. 'total' → logprob: -1.4125056266784668
    3. ' if' → logprob: -1.9125056266784668
    4. 'average' → logprob: -1.9125056266784668
    5. ' total' → logprob: -2.037505626678467
    6. ' average' → logprob: -4.037505626678467
    7. 'remaining' → logprob: -4.287505626678467
    8. 'sum' → logprob: -5.162505626678467
    9. 'result' → logprob: -5.287505626678467
    10. ' remaining' → logprob: -5.662505626678467

Token 194: ' :' (ID: 712)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.595547080039978
    2. '       ' → logprob: -1.720547080039978
    3. '   ' → logprob: -1.970547080039978
    4. ' à' → logprob: -3.7205471992492676
    5. 'if' → logprob: -3.8455471992492676
    6. ':' → logprob: -3.9705471992492676
    7. ',' → logprob: -4.345547199249268
    8. ' ' → logprob: -4.470547199249268
    9. ' si' → logprob: -4.470547199249268
    10. '    ' → logprob: -4.595547199249268

Token 195: ' la' (ID: 557)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.16020919382572174
    2. 'if' → logprob: -2.0352091789245605
    3. ' s' → logprob: -6.0352091789245605
    4. ' total' → logprob: -6.4102091789245605
    5. ' remaining' → logprob: -6.5352091789245605
    6. 'sum' → logprob: -6.5352091789245605
    7. ' sum' → logprob: -6.7852091789245605
    8. '       ' → logprob: -6.7852091789245605
    9. ' si' → logprob: -7.0352091789245605
    10. '   ' → logprob: -7.1602091789245605

Token 196: ' division' (ID: 21629)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.4926285147666931
    2. 'if' → logprob: -2.242628574371338
    3. ' somme' → logprob: -2.367628574371338
    4. ' moyenne' → logprob: -2.742628574371338
    5. ' if' → logprob: -3.367628574371338
    6. ' len' → logprob: -3.367628574371338
    7. 'm' → logprob: -3.742628574371338
    8. 'sum' → logprob: -4.867628574371338
    9. 's' → logprob: -4.992628574371338
    10. '   ' → logprob: -5.117628574371338

Token 197: ' doit' (ID: 21822)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '/' → logprob: -0.2581730782985687
    2. ' /' → logprob: -1.5081731081008911
    3. ' len' → logprob: -6.008172988891602
    4. 'len' → logprob: -6.883172988891602
    5. ' ' → logprob: -7.383172988891602
    6. '=' → logprob: -8.008172988891602
    7. ' ' → logprob: -8.008172988891602
    8. ' =' → logprob: -8.133172988891602
    9. ' /=' → logprob: -9.008172988891602
    10. '   ' → logprob: -9.133172988891602

Token 198: ' être' (ID: 9104)
  Prédit: ' être'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' être' → logprob: -0.19356973469257355
    2. ' be' → logprob: -2.8185696601867676
    3. ' rester' → logprob: -2.9435696601867676
    4. 'être' → logprob: -3.4435696601867676
    5. ' etre' → logprob: -4.443569660186768
    6. ' ' → logprob: -4.943569660186768
    7. ' /' → logprob: -5.693569660186768
    8. ' toujours' → logprob: -6.443569660186768
    9. ' rest' → logprob: -6.818569660186768
    10. '/' → logprob: -6.943569660186768

Token 199: ' trunc' (ID: 132880)
  Prédit: ' float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.7402287721633911
    2. ' flott' → logprob: -1.4902287721633911
    3. 'float' → logprob: -1.6152287721633911
    4. ' /' → logprob: -2.8652286529541016
    5. '/' → logprob: -3.6152286529541016
    6. ' ' → logprob: -5.365228652954102
    7. 'exact' → logprob: -6.240228652954102
    8. ' exacte' → logprob: -6.365228652954102
    9. '```' → logprob: -6.740228652954102
    10. ' en' → logprob: -7.490228652954102

Token 200: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.009221171028912067
    2. 'ee' → logprob: -5.009221076965332
    3. 'ated' → logprob: -7.134221076965332
    4. 'e' → logprob: -7.509221076965332
    5. 'é' → logprob: -7.884221076965332
    6. 'ante' → logprob: -8.009221076965332
    7. 'ate' → logprob: -9.384221076965332
    8. 'int' → logprob: -9.384221076965332
    9. 'ating' → logprob: -9.759221076965332
    10. '```' → logprob: -10.884221076965332

Token 201: ' (' (ID: 350)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '//' → logprob: -0.29937371611595154
    2. ' //' → logprob: -1.924373745918274
    3. '       ' → logprob: -3.4243736267089844
    4. ' ' → logprob: -3.6743736267089844
    5. 'int' → logprob: -4.299373626708984
    6. '   ' → logprob: -4.799373626708984
    7. '    ' → logprob: -5.174373626708984
    8. '  ' → logprob: -5.549373626708984
    9. 'import' → logprob: -5.674373626708984
    10. '        ' → logprob: -5.924373626708984

Token 202: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.07709821313619614
    2. '//' → logprob: -3.3270981311798096
    3. ')' → logprob: -4.827098369598389
    4. ' ' → logprob: -5.202098369598389
    5. 'integer' → logprob: -5.202098369598389
    6. ' int' → logprob: -5.327098369598389
    7. ' vers' → logprob: -5.577098369598389
    8. ' integer' → logprob: -5.577098369598389
    9. '   ' → logprob: -6.702098369598389
    10. ' //' → logprob: -6.952098369598389

Token 203: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.27516114711761475
    2. '(' → logprob: -1.6501611471176147
    3. '()' → logprob: -3.1501612663269043
    4. '())' → logprob: -6.775161266326904
    5. 'division' → logprob: -7.275161266326904
    6. ' )' → logprob: -7.400161266326904
    7. '(
' → logprob: -7.400161266326904
    8. 'e' → logprob: -7.525161266326904
    9. ' division' → logprob: -8.275160789489746
    10. 's' → logprob: -8.650160789489746

Token 204: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.542988121509552
    2. 'result' → logprob: -1.6679880619049072
    3. ' result' → logprob: -1.6679880619049072
    4. '        
' → logprob: -4.542988300323486
    5. '   ' → logprob: -4.792988300323486
    6. '    ' → logprob: -5.667988300323486
    7. ' total' → logprob: -5.792988300323486
    8. ' ' → logprob: -6.042988300323486
    9. ' 
' → logprob: -6.042988300323486
    10. '     
' → logprob: -6.417988300323486

Token 205: ' average' (ID: 7848)
  Prédit: ' total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -1.0447769165039062
    2. ' average' → logprob: -1.0447769165039062
    3. 'average' (adapté à ' average') → logprob: -2.1697769165039062
    4. 'total' → logprob: -2.7947769165039062
    5. ' result' → logprob: -2.7947769165039062
    6. 'result' → logprob: -3.5447769165039062
    7. ' avg' → logprob: -5.044776916503906
    8. 'avg' → logprob: -5.419776916503906
    9. ' moyenne' → logprob: -5.419776916503906
    10. 'sum' → logprob: -5.544776916503906

Token 206: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6939969658851624
    2. ' =' → logprob: -0.6939969658851624
    3. '_' → logprob: -7.318996906280518
    4. '_score' → logprob: -8.943997383117676
    5. '=int' → logprob: -10.943997383117676
    6. '_scores' → logprob: -11.443997383117676
    7. ' ' → logprob: -11.693997383117676
    8. 's' → logprob: -12.193997383117676
    9. '_=' → logprob: -12.318997383117676
    10. '_val' → logprob: -12.818997383117676

Token 207: ' sum' (ID: 4215)
  Prédit: ' sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.0760042667388916
    2. ' int' → logprob: -3.3260042667388916
    3. 'sum' → logprob: -3.4510042667388916
    4. 'int' → logprob: -5.2010040283203125
    5. ' ' → logprob: -11.076004028320312
    6. '  ' → logprob: -12.326004028320312
    7. '   ' → logprob: -13.076004028320312
    8. '(sum' → logprob: -13.201004028320312
    9. '	sum' → logprob: -13.451004028320312
    10. '    ' → logprob: -15.326004028320312

Token 208: '(scores' (ID: 154090)
  Prédit: '(scores'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(scores' → logprob: -0.011063147336244583
    2. '(' → logprob: -4.511063098907471
    3. '(s' → logprob: -11.636063575744629
    4. '(score' → logprob: -12.386063575744629
    5. 'scores' → logprob: -14.636063575744629
    6. '(sum' → logprob: -14.636063575744629
    7. ' (' → logprob: -15.011063575744629
    8. '(
' → logprob: -15.011063575744629
    9. '(sc' → logprob: -15.636063575744629
    10. '(ss' → logprob: -16.636062622070312

Token 209: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1915503293275833
    2. ' //' → logprob: -1.816550374031067
    3. '//' → logprob: -5.316550254821777
    4. ' )' → logprob: -5.441550254821777
    5. ')//' → logprob: -6.066550254821777
    6. ' ' → logprob: -8.941550254821777
    7. ' ' → logprob: -10.316550254821777
    8. '```' → logprob: -12.691550254821777
    9. '`' → logprob: -13.441550254821777
    10. '#' → logprob: -13.691550254821777

Token 210: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.016607847064733505
    2. '//' → logprob: -4.141607761383057
    3. ' ' → logprob: -7.516607761383057
    4. ' ' → logprob: -11.141608238220215
    5. '```' → logprob: -12.266608238220215
    6. ')' → logprob: -12.391608238220215
    7. ' //
' → logprob: -13.641608238220215
    8. '`' → logprob: -14.266608238220215
    9. '   ' → logprob: -14.391608238220215
    10. '  ' → logprob: -14.391608238220215

Token 211: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.08277707546949387
    2. '(len' → logprob: -2.5827770233154297
    3. ' len' → logprob: -5.58277702331543
    4. ' (' → logprob: -9.58277702331543
    5. '(' → logprob: -10.20777702331543
    6. '(n' → logprob: -11.95777702331543
    7. ' ' → logprob: -12.95777702331543
    8. '[len' → logprob: -13.70777702331543
    9. '	len' → logprob: -14.45777702331543
    10. 'max' → logprob: -14.95777702331543

Token 212: '(scores' (ID: 154090)
  Prédit: '(scores'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(scores' → logprob: -4.644463479053229e-05
    2. '(' → logprob: -10.125046730041504
    3. 'scores' → logprob: -12.125046730041504
    4. ' (' → logprob: -14.500046730041504
    5. '(score' → logprob: -15.500046730041504
    6. ' scores' → logprob: -16.000045776367188
    7. '(samples' → logprob: -17.250045776367188
    8. 's' → logprob: -17.625045776367188
    9. '(sc' → logprob: -18.750045776367188
    10. '(numbers' → logprob: -19.000045776367188

Token 213: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.008129963040119e-06
    2. ')
' → logprob: -13.000003814697266
    3. ' )' → logprob: -13.750003814697266
    4. '))' → logprob: -14.625003814697266
    5. '<|end|>' → logprob: -17.000003814697266
    6. '}' → logprob: -17.125003814697266
    7. ')`' → logprob: -17.375003814697266
    8. ')

' → logprob: -17.375003814697266
    9. ')>' → logprob: -17.750003814697266
    10. ')))' → logprob: -17.750003814697266

Token 214: '        
' (ID: 3564)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.023094292730093002
    2. 'print' → logprob: -4.148094177246094
    3. '        
' → logprob: -5.398094177246094
    4. '   ' → logprob: -6.898094177246094
    5. '<|end|>' → logprob: -7.148094177246094
    6. '
' → logprob: -7.773094177246094
    7. '    
' → logprob: -8.773094177246094
    8. ' print' → logprob: -9.648094177246094
    9. '  
' → logprob: -10.523094177246094
    10. '	print' → logprob: -11.523094177246094

Token 215: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09577573090791702
    2. 'print' → logprob: -2.595775842666626
    3. '   ' → logprob: -4.095775604248047
    4. ' print' → logprob: -9.845775604248047
    5. '        
' → logprob: -10.595775604248047
    6. '    
' → logprob: -11.095775604248047
    7. '	print' → logprob: -12.345775604248047
    8. '
' → logprob: -13.470775604248047
    9. '```' → logprob: -13.595775604248047
    10. '<|end|>' → logprob: -14.470775604248047

Token 216: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.4259644558478612e-05
    2. '       ' → logprob: -11.250014305114746
    3. ' print' → logprob: -13.750014305114746
    4. '        
' → logprob: -17.75001335144043
    5. '```' → logprob: -18.25001335144043
    6. '   ' → logprob: -18.37501335144043
    7. '	print' → logprob: -18.62501335144043
    8. '
' → logprob: -18.87501335144043
    9. 'pr' → logprob: -20.12501335144043
    10. '#print' → logprob: -20.50001335144043

Token 217: ' Aff' (ID: 13741)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.3213025744771585e-05
    2. ' print' → logprob: -10.375033378601074
    3. '       ' → logprob: -14.000033378601074
    4. '   ' → logprob: -14.250033378601074
    5. 'Print' → logprob: -15.250033378601074
    6. 'pr' → logprob: -16.500032424926758
    7. '#' → logprob: -16.750032424926758
    8. 'prin' → logprob: -17.250032424926758
    9. '#print' → logprob: -17.250032424926758
    10. '```' → logprob: -18.000032424926758

Token 218: 'icher' (ID: 13617)
  Prédit: 'icher'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icher' → logprob: -0.00023882099776528776
    2. 'iche' → logprob: -8.875238418579102
    3. 'ic' → logprob: -9.875238418579102
    4. '#' → logprob: -10.750238418579102
    5. 'i' → logprob: -11.625238418579102
    6. 'ichage' → logprob: -11.750238418579102
    7. 'ich' → logprob: -12.750238418579102
    8. '   ' → logprob: -13.750238418579102
    9. 'ichier' → logprob: -13.750238418579102
    10. 'cher' → logprob: -13.875238418579102

Token 219: ' le' (ID: 505)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0009230116847902536
    2. 'average' → logprob: -7.000923156738281
    3. ' average' → logprob: -11.500923156738281
    4. '(f' → logprob: -14.000923156738281
    5. '("' → logprob: -15.000923156738281
    6. ' (' → logprob: -15.875923156738281
    7. '('' → logprob: -16.62592315673828
    8. '(
' → logprob: -17.12592315673828
    9. '(avg' → logprob: -18.12592315673828
    10. '_average' → logprob: -18.25092315673828

Token 220: ' résultat' (ID: 62556)
  Prédit: 'average'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'average' → logprob: -0.02981853485107422
    2. ' average' → logprob: -3.529818534851074
    3. 'result' → logprob: -9.779818534851074
    4. ' result' → logprob: -12.279818534851074
    5. 'score' → logprob: -13.029818534851074
    6. 'verage' → logprob: -13.654818534851074
    7. '_average' → logprob: -13.779818534851074
    8. ' score' → logprob: -14.404818534851074
    9. ' resultat' → logprob: -14.529818534851074
    10. 'answer' → logprob: -14.904818534851074

Token 221: ' pour' (ID: 1930)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3197171688079834
    2. 'print' → logprob: -1.3197171688079834
    3. ' print' → logprob: -5.0697174072265625
    4. '   ' → logprob: -8.819717407226562
    5. '	print' → logprob: -13.569717407226562
    6. '```' → logprob: -14.694717407226562
    7. '        
' → logprob: -14.819717407226562
    8. ' ' → logprob: -15.819717407226562
    9. '
' → logprob: -15.944717407226562
    10. '      ' → logprob: -16.444717407226562

Token 222: ' ce' (ID: 2357)
  Prédit: ' chaque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.16639891266822815
    2. 'c' → logprob: -2.9163990020751953
    3. ' candidat' → logprob: -3.1663990020751953
    4. ' each' → logprob: -4.666399002075195
    5. '_' → logprob: -4.666399002075195
    6. ' le' → logprob: -4.791399002075195
    7. 'each' → logprob: -4.916399002075195
    8. ' candidate' → logprob: -5.666399002075195
    9. 'candidate' → logprob: -5.666399002075195
    10. ' ' → logprob: -6.041399002075195

Token 223: ' candidat' (ID: 97443)
  Prédit: ' candidat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' candidat' → logprob: -0.004551527090370655
    2. 'c' → logprob: -5.504551410675049
    3. ' test' → logprob: -8.629551887512207
    4. ' candidate' → logprob: -9.754551887512207
    5. ' candidats' → logprob: -10.004551887512207
    6. ' cas' → logprob: -10.004551887512207
    7. ' score' → logprob: -10.379551887512207
    8. ' participant' → logprob: -10.879551887512207
    9. ' tour' → logprob: -11.504551887512207
    10. 'e' → logprob: -11.629551887512207

Token 224: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6390402317047119
    2. '       ' → logprob: -1.139040231704712
    3. ' print' → logprob: -1.889040231704712
    4. '   ' → logprob: -7.139039993286133
    5. '	print' → logprob: -11.014039993286133
    6. '        
' → logprob: -11.639039993286133
    7. '(print' → logprob: -11.639039993286133
    8. '    
' → logprob: -12.014039993286133
    9. '
' → logprob: -12.014039993286133
    10. ' 
' → logprob: -12.514039993286133

Token 225: '       ' (ID: 309)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.029936540871858597
    2. '       ' → logprob: -3.7799365520477295
    3. ' print' → logprob: -5.02993631362915
    4. '   ' → logprob: -9.154936790466309
    5. '        
' → logprob: -11.529936790466309
    6. '```' → logprob: -11.779936790466309
    7. '
' → logprob: -12.529936790466309
    8. '    
' → logprob: -13.654936790466309
    9. '	print' → logprob: -14.779936790466309
    10. '``' → logprob: -15.154936790466309

Token 226: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -3.5716304410016164e-05
    2. ' print' → logprob: -10.250035285949707
    3. '       ' → logprob: -15.625035285949707
    4. '   ' → logprob: -16.375036239624023
    5. 'pr' → logprob: -17.750036239624023
    6. '```' → logprob: -18.250036239624023
    7. 'prin' → logprob: -20.375036239624023
    8. '	print' → logprob: -20.875036239624023
    9. 'prit' → logprob: -22.125036239624023
    10. 'pri' → logprob: -22.250036239624023

Token 227: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0021750046871602535
    2. '(f' → logprob: -6.5021748542785645
    3. '("' → logprob: -7.7521748542785645
    4. '('' → logprob: -8.502175331115723
    5. '()' → logprob: -10.627175331115723
    6. '(int' → logprob: -11.752175331115723
    7. ' (' → logprob: -13.002175331115723
    8. 'average' → logprob: -13.252175331115723
    9. '((' → logprob: -13.627175331115723
    10. '(avg' → logprob: -14.627175331115723

Token 228: 'average' (ID: 33570)
  Prédit: 'average'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'average' → logprob: -4.842555426876061e-06
    2. ' average' → logprob: -12.250004768371582
    3. '(' → logprob: -17.3750057220459
    4. 'f' → logprob: -19.1250057220459
    5. 'int' → logprob: -20.3750057220459
    6. 'avg' → logprob: -20.6250057220459
    7. '平均' → logprob: -21.1250057220459
    8. '{' → logprob: -21.2500057220459
    9. '   ' → logprob: -21.6250057220459
    10. '"' → logprob: -21.8750057220459

Token 229: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.512236498361744e-07
    2. ' )' → logprob: -15.375000953674316
    3. ')
' → logprob: -16.125
    4. '()' → logprob: -16.375
    5. '())' → logprob: -17.0
    6. ')`' → logprob: -17.375
    7. '))' → logprob: -18.0
    8. '')' → logprob: -18.25
    9. '   ' → logprob: -19.125
    10. ')}' → logprob: -19.5

Token 230: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 231: ' App' (ID: 2583)
  Prédit: 'ic'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ic' → logprob: -0.008629591204226017
    2. 'if' → logprob: -4.75862979888916
    3. '#' → logprob: -11.25862979888916
    4. '(ic' → logprob: -14.13362979888916
    5. ' ic' → logprob: -14.50862979888916
    6. '/ic' → logprob: -14.63362979888916
    7. '```' → logprob: -15.88362979888916
    8. 'icc' → logprob: -16.383628845214844
    9. '_ic' → logprob: -16.758628845214844
    10. '.ic' → logprob: -16.883628845214844

Token 232: 'eler' (ID: 6998)
  Prédit: 'el'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'el' → logprob: -0.03337467089295387
    2. 'eler' → logprob: -3.783374786376953
    3. '_' → logprob: -4.908374786376953
    4. '#' → logprob: -7.533374786376953
    5. '_ic' → logprob: -8.158374786376953
    6. 'l' → logprob: -8.158374786376953
    7. 'e' → logprob: -8.408374786376953
    8. 'elé' → logprob: -8.408374786376953
    9. '()' → logprob: -8.533374786376953
    10. '__' → logprob: -8.658374786376953

Token 233: ' la' (ID: 557)
  Prédit: 'ic'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ic' → logprob: -0.0007174347410909832
    2. '(ic' → logprob: -7.250717639923096
    3. '(' → logprob: -11.875717163085938
    4. ' ic' → logprob: -15.125717163085938
    5. '()' → logprob: -15.750717163085938
    6. '_ic' → logprob: -15.875717163085938
    7. '(
' → logprob: -17.250717163085938
    8. 'ics' → logprob: -17.875717163085938
    9. 'icc' → logprob: -18.500717163085938
    10. 'oc' → logprob: -19.500717163085938

Token 234: ' fonction' (ID: 17610)
  Prédit: 'ic'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ic' → logprob: -9.088346359931165e-07
    2. ' ic' → logprob: -15.125000953674316
    3. 'if' → logprob: -15.500000953674316
    4. '(ic' → logprob: -16.125
    5. 'def' → logprob: -16.875
    6. '_ic' → logprob: -17.125
    7. 'function' → logprob: -17.375
    8. 'ici' → logprob: -19.0
    9. 'icmp' → logprob: -19.0
    10. 'ics' → logprob: -19.75

Token 235: ' principale' (ID: 68926)
  Prédit: 'ic'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ic' → logprob: -4.954393079970032e-05
    2. '
' → logprob: -10.000049591064453
    3. 'if' → logprob: -12.625049591064453
    4. '(ic' → logprob: -15.125049591064453
    5. '```' → logprob: -15.750049591064453
    6. '

' → logprob: -16.000049591064453
    7. '(
' → logprob: -16.500049591064453
    8. '
' → logprob: -17.500049591064453
    9. '  
' → logprob: -17.625049591064453
    10. '()
' → logprob: -17.625049591064453

Token 236: '
' (ID: 198)
  Prédit: 'ic'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ic' → logprob: -0.0002632430987432599
    2. '
' → logprob: -8.250263214111328
    3. 'if' → logprob: -13.875263214111328
    4. '(ic' → logprob: -15.000263214111328
    5. '

' → logprob: -15.125263214111328
    6. ' ic' → logprob: -15.500263214111328
    7. '
' → logprob: -16.125263214111328
    8. '_ic' → logprob: -16.750263214111328
    9. 'icmp' → logprob: -17.250263214111328
    10. 'ics' → logprob: -17.625263214111328

Token 237: 'ic' (ID: 291)
  Prédit: 'ic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ic' → logprob: 0.0
    2. 'if' → logprob: -20.75
    3. '(ic' → logprob: -22.75
    4. 'icmp' → logprob: -23.0
    5. ' ic' → logprob: -23.125
    6. '_ic' → logprob: -25.125
    7. '```' → logprob: -25.25
    8. 'ics' → logprob: -25.875
    9. 'icc' → logprob: -26.125
    10. '/ic' → logprob: -26.25

Token 238: 'pc' (ID: 6344)
  Prédit: 'pc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pc' → logprob: -0.0002036595979006961
    2. 'p' → logprob: -8.500204086303711
    3. ' pc' → logprob: -16.12520408630371
    4. '_pc' → logprob: -18.00020408630371
    5. '	pc' → logprob: -18.37520408630371
    6. '.pc' → logprob: -18.75020408630371
    7. 'pct' → logprob: -18.87520408630371
    8. 'pcs' → logprob: -18.87520408630371
    9. 'cp' → logprob: -19.37520408630371
    10. 'pcb' → logprob: -19.37520408630371

Token 239: '_score' (ID: 22555)
  Prédit: '_score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_score' → logprob: -0.00010545044642640278
    2. '_' → logprob: -9.250105857849121
    3. '_scores' → logprob: -12.500105857849121
    4. '_sc' → logprob: -13.000105857849121
    5. '_s' → logprob: -13.125105857849121
    6. '_code' → logprob: -14.125105857849121
    7. '_ic' → logprob: -16.125104904174805
    8. 'score' → logprob: -16.500104904174805
    9. '_S' → logprob: -16.625104904174805
    10. ' _' → logprob: -16.625104904174805

Token 240: '_total' (ID: 23814)
  Prédit: '_score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_score' → logprob: -0.2572271227836609
    2. '_total' → logprob: -1.5072271823883057
    3. '_' → logprob: -5.257226943969727
    4. '_s' → logprob: -10.132226943969727
    5. '_scores' → logprob: -11.632226943969727
    6. '_t' → logprob: -11.882226943969727
    7. '_tot' → logprob: -12.507226943969727
    8. '_code' → logprob: -12.507226943969727
    9. ' _' → logprob: -12.632226943969727
    10. '_to' → logprob: -13.007226943969727

Token 241: 'izer' (ID: 4492)
  Prédit: 'izer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'izer' → logprob: -2.45848218582978e-06
    2. 'ize' → logprob: -14.12500286102295
    3. 'iz' → logprob: -14.25000286102295
    4. 'IZER' → logprob: -14.25000286102295
    5. '_' → logprob: -16.125001907348633
    6. 'er' → logprob: -16.375001907348633
    7. 'izers' → logprob: -16.875001907348633
    8. 'zer' → logprob: -17.125001907348633
    9. 'i' → logprob: -17.500001907348633
    10. 'alyzer' → logprob: -17.750001907348633

Token 242: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6176795959472656
    2. '<|end|>' → logprob: -0.8676795959472656
    3. '
' → logprob: -4.367679595947266
    4. '#' → logprob: -4.492679595947266
    5. '(' → logprob: -5.117679595947266
    6. ')' → logprob: -5.617679595947266
    7. '```' → logprob: -5.742679595947266
    8. '\n' → logprob: -6.117679595947266
    9. '<|end|>' → logprob: -7.242679595947266
    10. '()
' → logprob: -7.492679595947266


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 240
Tokens correctement prédits (1ère position, stricte): 88
Tokens correctement prédits (1ère position, avec adaptation): 98
Tokens correctement prédits (top 10): 170
Précision stricte (1ère position): 36.67%
Précision adaptée (1ère position): 40.83%
Précision (top 10): 70.83%
================================================================================
