================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:17:52
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
t=int(input())
def expect(mvals, mprobs):
    return sum(v*r for v,r in zip(mvals,mprobs))/(sum(mprobs))
dices=[]
for _ in range(t):
    n,m=map(int,input().split())
    vals=[]
    probs=[]
    for __ in range(m):
        v,r=input().split()
        vals.append(int(v))
        probs.append(float(r))
    dices.append((vals,probs))
p,q=map(int,input().split())
pv=[]
pr=[]
for _ in range(q):
    v,r=input().split()
    pv.append(int(v))
    pr.append(float(r))
boss_exp=expect(pv,pr)
for vals,probs in dices:
    e=expect(vals,probs)
    if e-boss_exp>1e-7:
        print("YES")
        break
else:
    print("NO")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 't' (ID: 83)
  → Token d'amorce (pas de prédiction)

Token 1: '=int' (ID: 37431)
  → Token d'amorce (pas de prédiction)

Token 2: '(input' (ID: 10054)
  → Token d'amorce (pas de prédiction)

Token 3: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5462284684181213
    2. ')' → logprob: -0.9212284684181213
    3. '()' → logprob: -4.046228408813477
    4. '())' → logprob: -6.046228408813477
    5. '```' → logprob: -7.296228408813477
    6. '")' → logprob: -7.671228408813477
    7. '(
' → logprob: -8.171228408813477
    8. '')' → logprob: -8.296228408813477
    9. '))' → logprob: -8.671228408813477
    10. ''' → logprob: -8.796228408813477

Token 4: 'def' (ID: 1314)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.025053948163986206
    2. 'for' → logprob: -4.775053977966309
    3. '\' → logprob: -5.775053977966309
    4. '
' → logprob: -5.900053977966309
    5. '\r' → logprob: -6.150053977966309
    6. '#' → logprob: -6.150053977966309
    7. ')' → logprob: -6.275053977966309
    8. 'if' → logprob: -7.400053977966309
    9. '*' → logprob: -7.525053977966309
    10. 'i' → logprob: -7.650053977966309

Token 5: ' expect' (ID: 2665)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.013917953707277775
    2. ' space' → logprob: -5.013917922973633
    3. ' f' → logprob: -6.013917922973633
    4. ' factorial' → logprob: -6.263917922973633
    5. ' main' → logprob: -7.013917922973633
    6. ' my' → logprob: -7.263917922973633
    7. ' function' → logprob: -8.513917922973633
    8. ' func' → logprob: -8.888917922973633
    9. ' r' → logprob: -9.388917922973633
    10. ' a' → logprob: -9.388917922973633

Token 6: '(m' (ID: 2145)
  Prédit: 'ed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.0002434699417790398
    2. 'ation' → logprob: -9.125243186950684
    3. '(' → logprob: -10.000243186950684
    4. 'ing' → logprob: -10.375243186950684
    5. '(ed' → logprob: -11.125243186950684
    6. 'e' → logprob: -11.500243186950684
    7. 'ected' → logprob: -11.875243186950684
    8. '_ed' → logprob: -11.875243186950684
    9. ':' → logprob: -12.750243186950684
    10. '_' → logprob: -12.750243186950684

Token 7: 'vals' (ID: 44567)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2666838467121124
    2. ')' → logprob: -1.76668381690979
    3. ',' → logprob: -3.39168381690979
    4. 'e' → logprob: -4.141684055328369
    5. '_' → logprob: -4.891684055328369
    6. 'a' → logprob: -6.641684055328369
    7. ':' → logprob: -6.641684055328369
    8. '(' → logprob: -7.391684055328369
    9. ')):' → logprob: -7.516684055328369
    10. '):
' → logprob: -8.016683578491211

Token 8: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.11307688802480698
    2. ',' → logprob: -2.61307692527771
    3. ')' → logprob: -3.48807692527771
    4. '[' → logprob: -6.738076686859131
    5. ':' → logprob: -6.988076686859131
    6. '(' → logprob: -7.613076686859131
    7. ' ):' → logprob: -9.113077163696289
    8. ',m' → logprob: -9.863077163696289
    9. '[]):' → logprob: -9.988077163696289
    10. ')):' → logprob: -11.113077163696289

Token 9: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -1.0214588642120361
    2. 'm' → logprob: -1.8964588642120361
    3. ' n' → logprob: -2.271458864212036
    4. ' t' → logprob: -3.458958864212036
    5. 'n' → logprob: -3.583958864212036
    6. ' x' → logprob: -4.083958625793457
    7. ' val' → logprob: -4.208958625793457
    8. ' p' → logprob: -4.271458625793457
    9. ' k' → logprob: -4.396458625793457
    10. 't' → logprob: -4.521458625793457

Token 10: 'pro' (ID: 823)
  Prédit: 'ean'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ean' → logprob: -0.9795812964439392
    2. '):' → logprob: -1.854581356048584
    3. 'ax' → logprob: -2.104581356048584
    4. 'e' → logprob: -2.229581356048584
    5. 'in' → logprob: -2.729581356048584
    6. 'a' → logprob: -2.729581356048584
    7. 'argin' → logprob: -4.104581356048584
    8. 'atch' → logprob: -4.229581356048584
    9. 'len' → logprob: -4.604581356048584
    10. '=' → logprob: -4.729581356048584

Token 11: 'bs' (ID: 6229)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.043679412454366684
    2. 'bs' → logprob: -3.6686794757843018
    3. 'd' → logprob: -4.418679237365723
    4. 'p' → logprob: -5.918679237365723
    5. 'ba' → logprob: -7.043679237365723
    6. 'm' → logprob: -7.418679237365723
    7. ')' → logprob: -8.168679237365723
    8. 'f' → logprob: -8.918679237365723
    9. '=' → logprob: -9.418679237365723
    10. 'duct' → logprob: -9.918679237365723

Token 12: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006888470146805048
    2. ')' → logprob: -5.006888389587402
    3. ',' → logprob: -8.881888389587402
    4. ':' → logprob: -11.631888389587402
    5. '):
' → logprob: -12.256888389587402
    6. ''):' → logprob: -12.381888389587402
    7. ')):' → logprob: -12.506888389587402
    8. '[' → logprob: -12.631888389587402
    9. ' ):' → logprob: -13.506888389587402
    10. '[]):' → logprob: -13.631888389587402

Token 13: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10041078925132751
    2. '   ' → logprob: -2.7254106998443604
    3. ' ' → logprob: -4.6004109382629395
    4. '):' → logprob: -4.8504109382629395
    5. '```' → logprob: -5.8504109382629395
    6. ')' → logprob: -5.9754109382629395
    7. ':
' → logprob: -6.7254109382629395
    8. '    ' → logprob: -7.1004109382629395
    9. ' :' → logprob: -7.1004109382629395
    10. '\' → logprob: -7.3504109382629395

Token 14: ' return' (ID: 622)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8578557968139648
    2. '   ' → logprob: -1.6078557968139648
    3. 'r' → logprob: -2.982855796813965
    4. 'n' → logprob: -2.982855796813965
    5. ' return' → logprob: -3.482855796813965
    6. '    ' → logprob: -3.482855796813965
    7. ' 
' → logprob: -3.857855796813965
    8. ' p' → logprob: -3.857855796813965
    9. 'p' → logprob: -4.107855796813965
    10. 'i' → logprob: -4.107855796813965

Token 15: ' sum' (ID: 4215)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.24660615622997284
    2. ' m' → logprob: -2.4966061115264893
    3. ' sum' → logprob: -2.9966061115264893
    4. 'sum' → logprob: -3.2466061115264893
    5. '[' → logprob: -4.496606349945068
    6. '  ' → logprob: -4.746606349945068
    7. ' max' → logprob: -4.996606349945068
    8. '(' → logprob: -5.371606349945068
    9. ' (' → logprob: -5.746606349945068
    10. ' [' → logprob: -5.996606349945068

Token 16: '(v' (ID: 6932)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0015675919130444527
    2. '(m' → logprob: -6.751567363739014
    3. ' (' → logprob: -8.001567840576172
    4. '((' → logprob: -11.126567840576172
    5. '([' → logprob: -11.251567840576172
    6. '(
' → logprob: -11.501567840576172
    7. ' m' → logprob: -12.376567840576172
    8. ')' → logprob: -12.751567840576172
    9. '(s' → logprob: -12.751567840576172
    10. ' ' → logprob: -12.876567840576172

Token 17: '*r' (ID: 92096)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.30158641934394836
    2. ' *' → logprob: -1.676586389541626
    3. '*p' → logprob: -2.676586389541626
    4. '*v' → logprob: -6.426586627960205
    5. '*m' → logprob: -6.801586627960205
    6. '*w' → logprob: -6.801586627960205
    7. '*s' → logprob: -8.676586151123047
    8. '*q' → logprob: -9.051586151123047
    9. '*b' → logprob: -9.426586151123047
    10. '*l' → logprob: -9.426586151123047

Token 18: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1035425141453743
    2. ' ' → logprob: -2.3535425662994385
    3. 'for' → logprob: -6.978542327880859
    4. ')' → logprob: -7.478542327880859
    5. 'o' → logprob: -7.478542327880859
    6. '  ' → logprob: -8.35354232788086
    7. 'v' → logprob: -8.47854232788086
    8. ' v' → logprob: -8.85354232788086
    9. ' )' → logprob: -8.97854232788086
    10. ',' → logprob: -9.22854232788086

Token 19: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.11295828968286514
    2. 'v' → logprob: -2.2379581928253174
    3. ',v' → logprob: -9.737957954406738
    4. '	v' → logprob: -10.112957954406738
    5. ' ' → logprob: -10.987957954406738
    6. ',' → logprob: -11.612957954406738
    7. '(v' → logprob: -11.987957954406738
    8. '  ' → logprob: -13.487957954406738
    9. ' (' → logprob: -14.487957954406738
    10. '_v' → logprob: -14.862957954406738

Token 20: ',r' (ID: 33654)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6341614127159119
    2. ',r' → logprob: -0.7591614127159119
    3. ' ,' → logprob: -6.634161472320557
    4. ',v' → logprob: -9.259160995483398
    5. ' in' → logprob: -9.634160995483398
    6. ',w' → logprob: -10.259160995483398
    7. ' r' → logprob: -11.384160995483398
    8. ',p' → logprob: -11.634160995483398
    9. ',m' → logprob: -11.759160995483398
    10. 'r' → logprob: -12.384160995483398

Token 21: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.018258577212691307
    2. 'in' → logprob: -4.018258571624756
    3. ',' → logprob: -10.018259048461914
    4. ' ' → logprob: -11.018259048461914
    5. ' zip' → logprob: -11.143259048461914
    6. ')' → logprob: -11.393259048461914
    7. 'zip' → logprob: -12.518259048461914
    8. '<|end|>' → logprob: -12.518259048461914
    9. '   ' → logprob: -12.893259048461914
    10. ' ,' → logprob: -13.643259048461914

Token 22: ' zip' (ID: 16216)
  Prédit: ' zip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' zip' → logprob: -0.018182365223765373
    2. 'zip' → logprob: -4.018182277679443
    3. ' m' → logprob: -11.143182754516602
    4. 'm' → logprob: -11.268182754516602
    5. '(zip' → logprob: -12.268182754516602
    6. '.zip' → logprob: -15.643182754516602
    7. ' ' → logprob: -15.768182754516602
    8. ' zipped' → logprob: -16.2681827545166
    9. '_zip' → logprob: -16.8931827545166
    10. '```' → logprob: -17.8931827545166

Token 23: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.0007168424781411886
    2. '(' → logprob: -7.250716686248779
    3. ' (' → logprob: -12.000717163085938
    4. '(
' → logprob: -14.875717163085938
    5. ' m' → logprob: -16.000717163085938
    6. ')' → logprob: -16.375717163085938
    7. '<|end|>' → logprob: -16.500717163085938
    8. '(s' → logprob: -17.500717163085938
    9. ',m' → logprob: -17.875717163085938
    10. 'm' → logprob: -17.875717163085938

Token 24: 'vals' (ID: 44567)
  Prédit: 'vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vals' → logprob: -4.5252596464706585e-05
    2. ' vals' → logprob: -11.000044822692871
    3. 'val' → logprob: -11.250044822692871
    4. 'pro' → logprob: -12.125044822692871
    5. 'v' → logprob: -12.375044822692871
    6. '(vals' → logprob: -13.000044822692871
    7. '_vals' → logprob: -13.750044822692871
    8. ')' → logprob: -14.625044822692871
    9. 'al' → logprob: -15.000044822692871
    10. 'va' → logprob: -15.000044822692871

Token 25: ',m' (ID: 26648)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014987876638770103
    2. ',m' → logprob: -4.264987945556641
    3. ' ,' → logprob: -7.139987945556641
    4. 'm' → logprob: -10.63998794555664
    5. '   ' → logprob: -13.26498794555664
    6. ' m' → logprob: -13.76498794555664
    7. ' ' → logprob: -14.13998794555664
    8. '),' → logprob: -14.26498794555664
    9. ')' → logprob: -14.38998794555664
    10. 's' → logprob: -15.01498794555664

Token 26: 'pro' (ID: 823)
  Prédit: 'pro'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pro' → logprob: -0.0002390594017924741
    2. 'ro' → logprob: -8.375239372253418
    3. 'prob' → logprob: -13.500239372253418
    4. 'm' → logprob: -13.875239372253418
    5. '	pro' → logprob: -14.000239372253418
    6. ' pro' → logprob: -14.000239372253418
    7. 'Pro' → logprob: -14.125239372253418
    8. ')' → logprob: -14.250239372253418
    9. 'vals' → logprob: -14.500239372253418
    10. '_probs' → logprob: -14.625239372253418

Token 27: 'bs' (ID: 6229)
  Prédit: 'bs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bs' → logprob: -1.3902033970225602e-05
    2. 'b' → logprob: -12.125014305114746
    3. 'ps' → logprob: -13.500014305114746
    4. ' bs' → logprob: -13.500014305114746
    5. 'bps' → logprob: -13.750014305114746
    6. '(bs' → logprob: -14.000014305114746
    7. '_bs' → logprob: -14.375014305114746
    8. '```' → logprob: -15.000014305114746
    9. 'ds' → logprob: -15.250014305114746
    10. 's' → logprob: -15.250014305114746

Token 28: '))/(' (ID: 181103)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0032240566797554493
    2. ')' → logprob: -5.753223896026611
    3. ')))' → logprob: -10.12822437286377
    4. '))
' → logprob: -12.62822437286377
    5. '   ' → logprob: -13.87822437286377
    6. ' ))' → logprob: -14.50322437286377
    7. ' ' → logprob: -14.87822437286377
    8. '))+' → logprob: -15.25322437286377
    9. '),' → logprob: -15.62822437286377
    10. '))-' → logprob: -15.87822437286377

Token 29: 'sum' (ID: 12298)
  Prédit: 'sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.02725721336901188
    2. ' sum' → logprob: -3.652257204055786
    3. 'len' → logprob: -7.402257442474365
    4. ')' → logprob: -9.277256965637207
    5. 'm' → logprob: -9.277256965637207
    6. '   ' → logprob: -9.652256965637207
    7. ' len' → logprob: -10.527256965637207
    8. ' ' → logprob: -11.152256965637207
    9. '  ' → logprob: -11.152256965637207
    10. '(sum' → logprob: -11.152256965637207

Token 30: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.0001617035741219297
    2. '(r' → logprob: -9.250162124633789
    3. '(' → logprob: -10.000162124633789
    4. 'm' → logprob: -11.500162124633789
    5. ' (' → logprob: -12.375162124633789
    6. ')' → logprob: -13.125162124633789
    7. ')m' → logprob: -13.375162124633789
    8. ' m' → logprob: -13.500162124633789
    9. '(s' → logprob: -15.250162124633789
    10. '(pro' → logprob: -16.00016212463379

Token 31: 'pro' (ID: 823)
  Prédit: 'pro'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pro' → logprob: -0.00020795092859771103
    2. 'm' → logprob: -9.750207901000977
    3. 'ro' → logprob: -9.875207901000977
    4. 'r' → logprob: -10.000207901000977
    5. ' pro' → logprob: -11.000207901000977
    6. 'vals' → logprob: -11.250207901000977
    7. '(pro' → logprob: -12.500207901000977
    8. 'Pro' → logprob: -12.750207901000977
    9. 'p' → logprob: -12.875207901000977
    10. 'prob' → logprob: -13.000207901000977

Token 32: 'bs' (ID: 6229)
  Prédit: 'bs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bs' → logprob: -0.3970232605934143
    2. 's' → logprob: -1.1470232009887695
    3. 'ps' → logprob: -5.8970232009887695
    4. ')' → logprob: -6.6470232009887695
    5. 'pro' → logprob: -6.7720232009887695
    6. 'b' → logprob: -7.0220232009887695
    7. 'fs' → logprob: -7.1470232009887695
    8. '_probs' → logprob: -7.1470232009887695
    9. 'cs' → logprob: -8.14702320098877
    10. 'ms' → logprob: -8.14702320098877

Token 33: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.16043847799301147
    2. ')' → logprob: -1.9104385375976562
    3. ')))' → logprob: -9.035438537597656
    4. ' ))' → logprob: -10.160438537597656
    5. '))
' → logprob: -10.910438537597656
    6. ' )' → logprob: -11.035438537597656
    7. ')>' → logprob: -11.410438537597656
    8. ')
' → logprob: -12.535438537597656
    9. '))

' → logprob: -12.785438537597656
    10. ')

' → logprob: -14.410438537597656

Token 34: 'd' (ID: 67)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.1637548208236694
    2. ')' → logprob: -1.2887548208236694
    3. '<|end|>' → logprob: -1.9137548208236694
    4. '*' → logprob: -2.538754940032959
    5. '
' → logprob: -2.788754940032959
    6. '\' → logprob: -3.288754940032959
    7. '+' → logprob: -3.413754940032959
    8. '(' → logprob: -3.538754940032959
    9. '```' → logprob: -5.413754940032959
    10. '(
' → logprob: -6.038754940032959

Token 35: 'ices' (ID: 1386)
  Prédit: 'ef'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ef' → logprob: -0.06853987276554108
    2. 'e' → logprob: -3.31853985786438
    3. 'f' → logprob: -3.69353985786438
    4. '=' → logprob: -6.693540096282959
    5. 'print' → logprob: -7.318540096282959
    6. 'if' → logprob: -8.0685396194458
    7. 'i' → logprob: -8.1935396194458
    8. 'efs' → logprob: -8.1935396194458
    9. '[i' → logprob: -8.3185396194458
    10. 'r' → logprob: -8.4435396194458

Token 36: '=[]
' (ID: 63466)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2399471402168274
    2. '=' → logprob: -1.6149470806121826
    3. ')' → logprob: -4.989947319030762
    4. '_' → logprob: -5.864947319030762
    5. 's' → logprob: -6.489947319030762
    6. '=[]' → logprob: -6.739947319030762
    7. '[' → logprob: -7.614947319030762
    8. '.' → logprob: -7.989947319030762
    9. '_count' → logprob: -8.489947319030762
    10. '=[' → logprob: -8.989947319030762

Token 37: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.004628176800906658
    2. ' for' → logprob: -6.0046281814575195
    3. 'n' → logprob: -7.2546281814575195
    4. '[' → logprob: -7.7546281814575195
    5. '_' → logprob: -7.7546281814575195
    6. '=' → logprob: -8.37962818145752
    7. 't' → logprob: -8.87962818145752
    8. 'd' → logprob: -10.12962818145752
    9. ' =' → logprob: -10.25462818145752
    10. ' ' → logprob: -10.75462818145752

Token 38: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.445283979177475
    2. ' i' → logprob: -1.1952840089797974
    3. '_' → logprob: -2.945283889770508
    4. 'i' → logprob: -5.695283889770508
    5. ' ' → logprob: -7.570283889770508
    6. '_i' → logprob: -9.070283889770508
    7. ' d' → logprob: -9.195283889770508
    8. ' die' → logprob: -11.195283889770508
    9. ' dice' → logprob: -11.445283889770508
    10. 'd' → logprob: -11.945283889770508

Token 39: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.026417454704642296
    2. 'in' → logprob: -3.6514174938201904
    3. ' ' → logprob: -9.27641773223877
    4. 'n' → logprob: -11.90141773223877
    5. '	in' → logprob: -12.15141773223877
    6. 'range' → logprob: -12.65141773223877
    7. 'd' → logprob: -13.65141773223877
    8. 'import' → logprob: -13.77641773223877
    9. 's' → logprob: -13.77641773223877
    10. '_' → logprob: -14.40141773223877

Token 40: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.1602255403995514
    2. ' range' → logprob: -1.910225510597229
    3. 'ran' → logprob: -14.785225868225098
    4. '(range' → logprob: -14.910225868225098
    5. '	range' → logprob: -15.535225868225098
    6. 'rang' → logprob: -15.660225868225098
    7. 'd' → logprob: -16.53522491455078
    8. '_range' → logprob: -16.78522491455078
    9. ' xrange' → logprob: -16.78522491455078
    10. 't' → logprob: -17.03522491455078

Token 41: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.01432216539978981
    2. '(' → logprob: -4.264322280883789
    3. ' (' → logprob: -9.264322280883789
    4. ' t' → logprob: -10.139322280883789
    5. 't' → logprob: -11.389322280883789
    6. '(range' → logprob: -11.889322280883789
    7. '(d' → logprob: -13.264322280883789
    8. '(int' → logprob: -13.264322280883789
    9. '(s' → logprob: -13.514322280883789
    10. '(n' → logprob: -14.389322280883789

Token 42: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0731339380145073
    2. ')' → logprob: -2.698133945465088
    3. ' ):' → logprob: -6.323133945465088
    4. '):
' → logprob: -7.198133945465088
    5. ' )' → logprob: -8.19813346862793
    6. ':' → logprob: -8.57313346862793
    7. ')d' → logprob: -9.94813346862793
    8. ',' → logprob: -10.19813346862793
    9. ')>' → logprob: -10.82313346862793
    10. '+' → logprob: -10.94813346862793

Token 43: '   ' (ID: 271)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.039721325039863586
    2. ' d' → logprob: -4.289721488952637
    3. ' s' → logprob: -4.789721488952637
    4. ' m' → logprob: -5.539721488952637
    5. 'n' → logprob: -5.914721488952637
    6. ' dice' → logprob: -5.914721488952637
    7. ' dices' → logprob: -6.664721488952637
    8. ' a' → logprob: -6.789721488952637
    9. ' nd' → logprob: -6.914721488952637
    10. ' ' → logprob: -7.539721488952637

Token 44: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.12630905210971832
    2. ' n' → logprob: -2.2513091564178467
    3. 'm' → logprob: -6.001308917999268
    4. 'd' → logprob: -6.251308917999268
    5. 'k' → logprob: -6.376308917999268
    6. 'a' → logprob: -6.626308917999268
    7. 's' → logprob: -7.001308917999268
    8. '_' → logprob: -7.001308917999268
    9. 'x' → logprob: -7.626308917999268
    10. 'l' → logprob: -7.751308917999268

Token 45: ',m' (ID: 26648)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.36022961139678955
    2. '=int' → logprob: -1.8602296113967896
    3. ' =' → logprob: -2.1102294921875
    4. ',' → logprob: -3.7352294921875
    5. ',m' → logprob: -7.8602294921875
    6. ',int' → logprob: -8.1102294921875
    7. ',n' → logprob: -8.6102294921875
    8. ',d' → logprob: -8.7352294921875
    9. '=input' → logprob: -8.7352294921875
    10. ' ,' → logprob: -9.2352294921875

Token 46: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011829666793346405
    2. ' =' → logprob: -4.511829853057861
    3. '=input' → logprob: -7.636829853057861
    4. '=int' → logprob: -8.386829376220703
    5. ',' → logprob: -10.761829376220703
    6. '=list' → logprob: -11.136829376220703
    7. ',k' → logprob: -12.636829376220703
    8. '=s' → logprob: -12.761829376220703
    9. '=i' → logprob: -12.886829376220703
    10. ',s' → logprob: -13.261829376220703

Token 47: 'map' (ID: 3726)
  Prédit: ' map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.31336426734924316
    2. 'map' → logprob: -1.3133642673492432
    3. 'input' → logprob: -10.313364028930664
    4. ' input' → logprob: -10.688364028930664
    5. ' list' → logprob: -10.813364028930664
    6. 'list' → logprob: -11.188364028930664
    7. ' ' → logprob: -12.438364028930664
    8. ' [' → logprob: -12.688364028930664
    9. '[' → logprob: -12.938364028930664
    10. '	map' → logprob: -13.438364028930664

Token 48: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0005487450980581343
    2. '(' → logprob: -7.625548839569092
    3. '(input' → logprob: -10.125548362731934
    4. '(lambda' → logprob: -12.125548362731934
    5. 'int' → logprob: -12.250548362731934
    6. '(str' → logprob: -12.625548362731934
    7. '<int' → logprob: -13.000548362731934
    8. '[int' → logprob: -13.375548362731934
    9. '(map' → logprob: -13.625548362731934
    10. '(list' → logprob: -14.125548362731934

Token 49: ',input' (ID: 123014)
  Prédit: ',input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.017002293840050697
    2. ',' → logprob: -4.517002105712891
    3. 'input' → logprob: -5.517002105712891
    4. '(input' → logprob: -6.267002105712891
    5. '(' → logprob: -11.39200210571289
    6. ' input' → logprob: -12.76700210571289
    7. '```' → logprob: -13.26700210571289
    8. '<input' → logprob: -13.51700210571289
    9. ' ,' → logprob: -13.76700210571289
    10. '=input' → logprob: -14.14200210571289

Token 50: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.129266067640856e-05
    2. '()' → logprob: -11.250020980834961
    3. '.split' → logprob: -12.750020980834961
    4. '.' → logprob: -13.125020980834961
    5. ' ().' → logprob: -13.750020980834961
    6. 'split' → logprob: -14.125020980834961
    7. ')' → logprob: -14.500020980834961
    8. '(' → logprob: -14.875020980834961
    9. '   ' → logprob: -15.250020980834961
    10. ' .' → logprob: -15.875020980834961

Token 51: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -3.011373155459296e-05
    2. 'strip' → logprob: -10.625030517578125
    3. ' split' → logprob: -13.000030517578125
    4. 'rstrip' → logprob: -13.250030517578125
    5. '(split' → logprob: -13.375030517578125
    6. 'spl' → logprob: -16.375030517578125
    7. ')' → logprob: -17.250030517578125
    8. '().' → logprob: -18.000030517578125
    9. '```' → logprob: -18.375030517578125
    10. '.split' → logprob: -18.875030517578125

Token 52: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6507967114448547
    2. '())' → logprob: -0.9007967114448547
    3. '))' → logprob: -2.77579665184021
    4. '()))' → logprob: -5.025796890258789
    5. '()' → logprob: -5.775796890258789
    6. '(' → logprob: -9.775796890258789
    7. '())
' → logprob: -11.150796890258789
    8. '),' → logprob: -11.150796890258789
    9. '('' → logprob: -11.275796890258789
    10. ')`' → logprob: -11.650796890258789

Token 53: '   ' (ID: 271)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.5632657408714294
    2. ' dices' → logprob: -1.5632658004760742
    3. '   ' → logprob: -2.313265800476074
    4. ')' → logprob: -2.938265800476074
    5. '<|end|>' → logprob: -3.813265800476074
    6. ' d' → logprob: -4.813265800476074
    7. '[' → logprob: -5.313265800476074
    8. '    ' → logprob: -5.688265800476074
    9. ' 
' → logprob: -5.938265800476074
    10. ' dice' → logprob: -5.938265800476074

Token 54: ' vals' (ID: 58985)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.27561652660369873
    2. 'm' → logprob: -2.1506166458129883
    3. 'pro' → logprob: -2.9006166458129883
    4. 'p' → logprob: -4.025616645812988
    5. 'dice' → logprob: -4.025616645812988
    6. 'vals' (adapté à ' vals') → logprob: -4.650616645812988
    7. 'faces' → logprob: -5.650616645812988
    8. 's' → logprob: -5.650616645812988
    9. 'prob' → logprob: -6.025616645812988
    10. ' dices' → logprob: -6.150616645812988

Token 55: '=[]
' (ID: 63466)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08550093322992325
    2. ' =' → logprob: -3.210500955581665
    3. ',' → logprob: -3.710500955581665
    4. '=[]' → logprob: -4.210500717163086
    5. '=[' → logprob: -6.585500717163086
    6. '=list' → logprob: -7.710500717163086
    7. '   ' → logprob: -9.585500717163086
    8. ' =[' → logprob: -9.585500717163086
    9. '=[],' → logprob: -9.710500717163086
    10. ',n' → logprob: -10.585500717163086

Token 56: '   ' (ID: 271)
  Prédit: 'pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pro' → logprob: -0.7269114255905151
    2. 'for' → logprob: -0.8519114255905151
    3. '   ' → logprob: -3.7269115447998047
    4. '_probs' → logprob: -4.101911544799805
    5. 'prob' → logprob: -4.226911544799805
    6. 'p' → logprob: -4.476911544799805
    7. ' probs' → logprob: -4.601911544799805
    8. ' for' → logprob: -4.976911544799805
    9. 's' → logprob: -6.476911544799805
    10. 'vals' → logprob: -7.101911544799805

Token 57: ' probs' (ID: 167628)
  Prédit: 'pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pro' → logprob: -0.015365121886134148
    2. 'for' → logprob: -4.390365123748779
    3. 'prob' → logprob: -7.265365123748779
    4. 'm' → logprob: -7.515365123748779
    5. 'ps' → logprob: -7.640365123748779
    6. 'freq' → logprob: -8.515364646911621
    7. 'p' → logprob: -9.015364646911621
    8. 'vals' → logprob: -9.265364646911621
    9. 'pr' → logprob: -9.390364646911621
    10. '_probs' → logprob: -9.515364646911621

Token 58: '=[]
' (ID: 63466)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.49953073263168335
    2. '=[]' → logprob: -0.9995307326316833
    3. ' =' → logprob: -4.249530792236328
    4. '.append' → logprob: -4.749530792236328
    5. '.' → logprob: -6.499530792236328
    6. '=[' → logprob: -8.499530792236328
    7. '.=' → logprob: -9.374530792236328
    8. '=[]
' → logprob: -9.499530792236328
    9. '.extend' → logprob: -9.749530792236328
    10. '=input' → logprob: -9.874530792236328

Token 59: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.27735114097595215
    2. 'for' → logprob: -1.9023511409759521
    3. '   ' → logprob: -2.777351140975952
    4. '<|end|>' → logprob: -3.777351140975952
    5. '	for' → logprob: -5.652351379394531
    6. ' 
' → logprob: -6.652351379394531
    7. '    
' → logprob: -7.027351379394531
    8. ' ' → logprob: -7.027351379394531
    9. '
' → logprob: -8.152351379394531
    10. '  
' → logprob: -8.277351379394531

Token 60: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0004137496289331466
    2. 'line' → logprob: -9.25041389465332
    3. 'p' → logprob: -9.75041389465332
    4. 'd' → logprob: -10.00041389465332
    5. '_' → logprob: -10.25041389465332
    6. ' for' → logprob: -10.37541389465332
    7. 's' → logprob: -10.62541389465332
    8. '   ' → logprob: -10.75041389465332
    9. 'total' → logprob: -10.87541389465332
    10. 'vals' → logprob: -10.87541389465332

Token 61: ' __' (ID: 2516)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.13012930750846863
    2. '_' → logprob: -2.130129337310791
    3. ' __' → logprob: -6.505129337310791
    4. ' i' → logprob: -7.005129337310791
    5. '_i' → logprob: -8.380128860473633
    6. '__' → logprob: -8.505128860473633
    7. ' ' → logprob: -8.880128860473633
    8. 'i' → logprob: -9.630128860473633
    9. '_j' → logprob: -9.630128860473633
    10. ' j' → logprob: -9.755128860473633

Token 62: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02068447880446911
    2. 'in' → logprob: -3.8956844806671143
    3. '_' → logprob: -9.145684242248535
    4. ' ' → logprob: -10.895684242248535
    5. ' _' → logprob: -12.145684242248535
    6. 'range' → logprob: -12.895684242248535
    7. '    ' → logprob: -13.145684242248535
    8. '   ' → logprob: -13.145684242248535
    9. '_in' → logprob: -13.895684242248535
    10. 'n' → logprob: -14.145684242248535

Token 63: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.002477081725373864
    2. ' range' → logprob: -6.002477169036865
    3. 'm' → logprob: -15.127476692199707
    4. ' ' → logprob: -15.377476692199707
    5. 'input' → logprob: -15.877476692199707
    6. '   ' → logprob: -16.127477645874023
    7. '  ' → logprob: -16.377477645874023
    8. 'r' → logprob: -16.502477645874023
    9. '[' → logprob: -16.627477645874023
    10. '(range' → logprob: -16.627477645874023

Token 64: '(m' (ID: 2145)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.044889625161886215
    2. 'n' → logprob: -3.4198896884918213
    3. '(m' → logprob: -4.669889450073242
    4. 'm' → logprob: -6.669889450073242
    5. ' n' → logprob: -8.294889450073242
    6. '(' → logprob: -8.544889450073242
    7. ' (' → logprob: -9.919889450073242
    8. '   ' → logprob: -10.419889450073242
    9. '	n' → logprob: -11.794889450073242
    10. ' m' → logprob: -13.169889450073242

Token 65: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.003825252642855048
    2. '):
' → logprob: -5.6288251876831055
    3. ')' → logprob: -9.253825187683105
    4. '   ' → logprob: -10.128825187683105
    5. '+' → logprob: -10.503825187683105
    6. ':' → logprob: -10.628825187683105
    7. '):
' → logprob: -10.878825187683105
    8. ' ):' → logprob: -11.503825187683105
    9. '-' → logprob: -12.878825187683105
    10. '       ' → logprob: -13.378825187683105

Token 66: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010448353365063667
    2. '   ' → logprob: -4.885448455810547
    3. 'v' → logprob: -6.885448455810547
    4. 'p' → logprob: -7.885448455810547
    5. ' vals' → logprob: -8.135448455810547
    6. ' v' → logprob: -8.635448455810547
    7. 'vals' → logprob: -9.010448455810547
    8. 'x' → logprob: -9.135448455810547
    9. 'tokens' → logprob: -9.260448455810547
    10. '```' → logprob: -9.635448455810547

Token 67: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.034780073910951614
    2. 'a' → logprob: -4.534780025482178
    3. 'x' → logprob: -4.534780025482178
    4. 'p' → logprob: -5.034780025482178
    5. '   ' → logprob: -6.159780025482178
    6. ' v' → logprob: -6.159780025482178
    7. 'k' → logprob: -7.409780025482178
    8. 'val' → logprob: -8.034780502319336
    9. 'l' → logprob: -8.159780502319336
    10. 'vi' → logprob: -9.409780502319336

Token 68: ',r' (ID: 33654)
  Prédit: ',p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',p' → logprob: -0.015901213511824608
    2. ',' → logprob: -4.2659010887146
    3. ',r' → logprob: -7.6409010887146
    4. '=' → logprob: -8.640901565551758
    5. ',l' → logprob: -8.765901565551758
    6. ',w' → logprob: -8.890901565551758
    7. ',a' → logprob: -9.015901565551758
    8. 'p' → logprob: -9.265901565551758
    9. ' ,' → logprob: -9.890901565551758
    10. '_,' → logprob: -9.890901565551758

Token 69: '=input' (ID: 87911)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.007361463736742735
    2. '=input' → logprob: -5.38236141204834
    3. ' =' → logprob: -6.00736141204834
    4. '=int' → logprob: -9.00736141204834
    5. '=list' → logprob: -9.13236141204834
    6. ',' → logprob: -10.63236141204834
    7. '=line' → logprob: -11.88236141204834
    8. '=float' → logprob: -12.63236141204834
    9. ' ' → logprob: -13.00736141204834
    10. '=in' → logprob: -13.50736141204834

Token 70: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.4987974029500037e-05
    2. '()' → logprob: -10.625024795532227
    3. ' ().' → logprob: -14.500024795532227
    4. '.split' → logprob: -17.375024795532227
    5. '("").' → logprob: -17.750024795532227
    6. '('').' → logprob: -17.875024795532227
    7. '(' → logprob: -18.625024795532227
    8. '()).' → logprob: -19.625024795532227
    9. 'split' → logprob: -19.750024795532227
    10. '()
' → logprob: -19.750024795532227

Token 71: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.018353858962655067
    2. 'strip' → logprob: -4.0183539390563965
    3. 'rstrip' → logprob: -8.643353462219238
    4. ' split' → logprob: -11.018353462219238
    5. 'plit' → logprob: -12.768353462219238
    6. 's' → logprob: -12.893353462219238
    7. 'spl' → logprob: -13.268353462219238
    8. 'rs' → logprob: -13.393353462219238
    9. ' ' → logprob: -14.643353462219238
    10. '```' → logprob: -14.643353462219238

Token 72: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0019145958358421922
    2. '(' → logprob: -6.6269145011901855
    3. '('' → logprob: -8.376914978027344
    4. ')' → logprob: -8.876914978027344
    5. '())' → logprob: -9.626914978027344
    6. '()
' → logprob: -10.126914978027344
    7. '()[' → logprob: -10.751914978027344
    8. '<|end|>' → logprob: -11.001914978027344
    9. '(','' → logprob: -11.251914978027344
    10. '()]' → logprob: -11.751914978027344

Token 73: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.33120131492614746
    2. '<|end|>' → logprob: -1.5812013149261475
    3. '   ' → logprob: -3.2062013149261475
    4. ',' → logprob: -5.206201553344727
    5. 'vals' → logprob: -5.456201553344727
    6. '<|end|>' → logprob: -5.706201553344727
    7. 'v' → logprob: -5.831201553344727
    8. ',v' → logprob: -5.956201553344727
    9. ')' → logprob: -6.081201553344727
    10. ' probs' → logprob: -6.081201553344727

Token 74: ' vals' (ID: 58985)
  Prédit: ' vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vals' → logprob: -0.5913923978805542
    2. 'v' → logprob: -1.4663923978805542
    3. 'vals' (adapté à ' vals') → logprob: -1.9663923978805542
    4. ' v' → logprob: -2.8413925170898438
    5. ' probs' → logprob: -4.341392517089844
    6. ' val' → logprob: -6.716392517089844
    7. 'val' → logprob: -7.216392517089844
    8. 'pro' → logprob: -7.216392517089844
    9. '       ' → logprob: -7.341392517089844
    10. '   ' → logprob: -8.591392517089844

Token 75: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.007628988474607468
    2. '.' → logprob: -4.882628917694092
    3. '.app' → logprob: -11.38262939453125
    4. ' .' → logprob: -12.25762939453125
    5. '.extend' → logprob: -12.25762939453125
    6. '.ap' → logprob: -14.00762939453125
    7. 'append' → logprob: -15.25762939453125
    8. '<|end|>' → logprob: -16.00762939453125
    9. '.push' → logprob: -16.13262939453125
    10. ').' → logprob: -16.25762939453125

Token 76: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.030121387913823128
    2. '(float' → logprob: -3.530121326446533
    3. '(' → logprob: -7.905121326446533
    4. 'int' → logprob: -14.155121803283691
    5. '(v' → logprob: -14.530121803283691
    6. '(i' → logprob: -15.280121803283691
    7. '(eval' → logprob: -15.905121803283691
    8. '((' → logprob: -16.030120849609375
    9. '(in' → logprob: -16.280120849609375
    10. '[int' → logprob: -16.780120849609375

Token 77: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -1.4974866644479334e-05
    2. '(' → logprob: -11.250015258789062
    3. '(r' → logprob: -14.500015258789062
    4. ')v' → logprob: -14.500015258789062
    5. ')(' → logprob: -14.750015258789062
    6. ')' → logprob: -15.250015258789062
    7. 'v' → logprob: -15.375015258789062
    8. ' (' → logprob: -18.000015258789062
    9. '	v' → logprob: -18.250015258789062
    10. '(
' → logprob: -18.625015258789062

Token 78: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.3748491406440735
    2. ')' → logprob: -1.8748490810394287
    3. '))
' → logprob: -1.8748490810394287
    4. ')
' → logprob: -5.499849319458008
    5. '))
' → logprob: -6.874849319458008
    6. '))

' → logprob: -7.624849319458008
    7. ')
' → logprob: -9.874849319458008
    8. '),' → logprob: -9.874849319458008
    9. ' ))
' → logprob: -10.624849319458008
    10. ' ))' → logprob: -10.749849319458008

Token 79: '       ' (ID: 309)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.8797057867050171
    2. ' float' → logprob: -1.129705786705017
    3. '       ' → logprob: -1.379705786705017
    4. 'int' → logprob: -5.004705905914307
    5. ',float' → logprob: -6.504705905914307
    6. '=float' → logprob: -7.504705905914307
    7. '<|end|>' → logprob: -7.754705905914307
    8. '        ' → logprob: -8.129705429077148
    9. '(float' → logprob: -8.754705429077148
    10. ')' → logprob: -9.004705429077148

Token 80: ' probs' (ID: 167628)
  Prédit: 'pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pro' → logprob: -0.00047702479059807956
    2. ' probs' → logprob: -8.250476837158203
    3. 'prob' → logprob: -8.625476837158203
    4. 'r' → logprob: -11.000476837158203
    5. 'float' → logprob: -11.750476837158203
    6. '       ' → logprob: -12.625476837158203
    7. '_probs' → logprob: -13.000476837158203
    8. 'p' → logprob: -13.250476837158203
    9. '           ' → logprob: -13.875476837158203
    10. 'import' → logprob: -14.125476837158203

Token 81: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0009128939709626138
    2. '.' → logprob: -7.000912666320801
    3. '.extend' → logprob: -14.2509126663208
    4. '.app' → logprob: -14.6259126663208
    5. 'append' → logprob: -17.250913619995117
    6. '.Append' → logprob: -17.500913619995117
    7. '+.' → logprob: -17.500913619995117
    8. '.push' → logprob: -17.500913619995117
    9. ' .' → logprob: -17.750913619995117
    10. '.add' → logprob: -17.875913619995117

Token 82: '(float' (ID: 17830)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.16342665255069733
    2. '(float' → logprob: -1.9134266376495361
    3. 'int' → logprob: -6.163426876068115
    4. ' float' → logprob: -7.038426876068115
    5. '(int' → logprob: -8.663426399230957
    6. 'flo' → logprob: -11.163426399230957
    7. '=float' → logprob: -11.913426399230957
    8. '	float' → logprob: -12.288426399230957
    9. '(' → logprob: -12.288426399230957
    10. '   ' → logprob: -12.663426399230957

Token 83: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -1.9504606825648807e-05
    2. '(' → logprob: -11.250019073486328
    3. 'r' → logprob: -12.500019073486328
    4. ' (' → logprob: -13.125019073486328
    5. ')' → logprob: -14.750019073486328
    6. ')(' → logprob: -15.750019073486328
    7. ' ' → logprob: -16.250019073486328
    8. '	r' → logprob: -16.500019073486328
    9. '(
' → logprob: -16.875019073486328
    10. '   ' → logprob: -17.250019073486328

Token 84: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.20311351120471954
    2. ')' → logprob: -1.7031135559082031
    3. '))
' → logprob: -6.578113555908203
    4. ')
' → logprob: -8.328113555908203
    5. ')))' → logprob: -10.578113555908203
    6. ' ))' → logprob: -10.953113555908203
    7. '   ' → logprob: -11.328113555908203
    8. ' )' → logprob: -12.453113555908203
    9. '))

' → logprob: -12.578113555908203
    10. '       ' → logprob: -14.578113555908203

Token 85: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004177410155534744
    2. 'd' → logprob: -6.379177570343018
    3. ' d' → logprob: -6.754177570343018
    4. '
' → logprob: -7.754177570343018
    5. '    
' → logprob: -8.87917709350586
    6. ' dices' → logprob: -8.87917709350586
    7. '<|end|>' → logprob: -8.87917709350586
    8. 's' → logprob: -9.00417709350586
    9. '       ' → logprob: -10.12917709350586
    10. ')' → logprob: -10.37917709350586

Token 86: ' dices' (ID: 165143)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.2867349088191986
    2. '   ' → logprob: -1.661734938621521
    3. ' d' → logprob: -3.4117348194122314
    4. 'e' → logprob: -5.1617350578308105
    5. 'p' → logprob: -5.5367350578308105
    6. 'expected' → logprob: -5.7867350578308105
    7. 'expect' → logprob: -6.0367350578308105
    8. ' p' → logprob: -6.2867350578308105
    9. 'print' → logprob: -6.4117350578308105
    10. 'ex' → logprob: -6.6617350578308105

Token 87: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.007698433008044958
    2. '.' → logprob: -4.8826985359191895
    3. ' .' → logprob: -10.132698059082031
    4. '.extend' → logprob: -10.257698059082031
    5. '.ap' → logprob: -12.257698059082031
    6. '.push' → logprob: -12.382698059082031
    7. '.app' → logprob: -12.882698059082031
    8. '.setdefault' → logprob: -13.632698059082031
    9. '.add' → logprob: -13.757698059082031
    10. 'append' → logprob: -14.132698059082031

Token 88: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.3972671627998352
    2. '(expect' → logprob: -1.3972671031951904
    3. '(vals' → logprob: -2.8972671031951904
    4. '(' → logprob: -3.7722671031951904
    5. '([' → logprob: -7.0222673416137695
    6. '(expected' → logprob: -7.5222673416137695
    7. '(values' → logprob: -7.8972673416137695
    8. '(tuple' → logprob: -9.52226734161377
    9. '(prob' → logprob: -9.64726734161377
    10. '(sum' → logprob: -9.77226734161377

Token 89: 'vals' (ID: 44567)
  Prédit: 'vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vals' → logprob: -0.002036179881542921
    2. ' vals' → logprob: -6.502036094665527
    3. '(vals' → logprob: -8.002036094665527
    4. 'val' → logprob: -9.377036094665527
    5. '   ' → logprob: -9.877036094665527
    6. 'expect' → logprob: -10.752036094665527
    7. 'n' → logprob: -11.627036094665527
    8. '[' → logprob: -11.877036094665527
    9. 'values' → logprob: -12.127036094665527
    10. ' ' → logprob: -12.502036094665527

Token 90: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00034928982495330274
    2. ' ,' → logprob: -8.000349044799805
    3. ',
' → logprob: -11.875349044799805
    4. ',

' → logprob: -13.875349044799805
    5. ',p' → logprob: -14.375349044799805
    6. ',d' → logprob: -14.625349044799805
    7. 'pro' → logprob: -14.750349044799805
    8. ',re' → logprob: -15.000349044799805
    9. '‌,' → logprob: -15.125349044799805
    10. ',n' → logprob: -15.250349044799805

Token 91: 'pro' (ID: 823)
  Prédit: 'pro'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pro' → logprob: -0.12704327702522278
    2. ' probs' → logprob: -2.1270432472229004
    3. 'prob' → logprob: -9.877043724060059
    4. '_probs' → logprob: -10.502043724060059
    5. ' ' → logprob: -10.877043724060059
    6. '   ' → logprob: -12.627043724060059
    7. ' pro' → logprob: -12.752043724060059
    8. 'pr' → logprob: -13.127043724060059
    9. 'Pro' → logprob: -13.627043724060059
    10. '    ' → logprob: -13.627043724060059

Token 92: 'bs' (ID: 6229)
  Prédit: 'bs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bs' → logprob: -0.00010402000043541193
    2. 'ps' → logprob: -10.625103950500488
    3. 's' → logprob: -10.750103950500488
    4. 'b' → logprob: -11.375103950500488
    5. 'ds' → logprob: -11.625103950500488
    6. ' bs' → logprob: -11.750103950500488
    7. 'qs' → logprob: -12.375103950500488
    8. 'bbs' → logprob: -12.375103950500488
    9. 'bps' → logprob: -12.625103950500488
    10. '_bs' → logprob: -12.750103950500488

Token 93: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.023253746330738068
    2. '))' → logprob: -3.7732536792755127
    3. ')
' → logprob: -11.773253440856934
    4. '))
' → logprob: -15.023253440856934
    5. ')))' → logprob: -16.39825439453125
    6. ' )' → logprob: -17.27325439453125
    7. ')`' → logprob: -18.02325439453125
    8. ')}' → logprob: -18.27325439453125
    9. ')

' → logprob: -18.52325439453125
    10. '),' → logprob: -18.64825439453125

Token 94: 'p' (ID: 79)
  Prédit: 'expected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'expected' → logprob: -0.9420497417449951
    2. 'for' → logprob: -1.8170497417449951
    3. 'e' → logprob: -1.9420497417449951
    4. 'result' → logprob: -2.442049741744995
    5. 'expect' → logprob: -2.442049741744995
    6. 'r' → logprob: -3.067049741744995
    7. 'res' → logprob: -3.567049741744995
    8. 'results' → logprob: -3.692049741744995
    9. 'n' → logprob: -5.692049980163574
    10. 'd' → logprob: -5.817049980163574

Token 95: ',q' (ID: 86188)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.003401213325560093
    2. 'rob' → logprob: -6.503401279449463
    3. 'ro' → logprob: -6.878401279449463
    4. 'rof' → logprob: -8.378400802612305
    5. '=' → logprob: -8.878400802612305
    6. 'l' → logprob: -9.753400802612305
    7. 'd' → logprob: -10.128400802612305
    8. 'o' → logprob: -10.253400802612305
    9. 'ros' → logprob: -10.253400802612305
    10. 'e' → logprob: -10.628400802612305

Token 96: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02328380011022091
    2. ' =' → logprob: -3.7732837200164795
    3. ',' → logprob: -11.148283958435059
    4. '=input' → logprob: -11.898283958435059
    5. ' ' → logprob: -12.648283958435059
    6. '=p' → logprob: -12.898283958435059
    7. '=[]' → logprob: -13.398283958435059
    8. '=
' → logprob: -13.523283958435059
    9. ')' → logprob: -13.648283958435059
    10. '<|end|>' → logprob: -13.773283958435059

Token 97: 'map' (ID: 3726)
  Prédit: 'map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.0674649104475975
    2. 'd' → logprob: -3.692464828491211
    3. '1' → logprob: -4.442464828491211
    4. '0' → logprob: -4.567464828491211
    5. 'input' → logprob: -4.942464828491211
    6. ' map' → logprob: -5.067464828491211
    7. 'list' → logprob: -5.817464828491211
    8. 'int' → logprob: -7.817464828491211
    9. 't' → logprob: -8.692464828491211
    10. ' ' → logprob: -8.942464828491211

Token 98: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00023655613767914474
    2. 'int' → logprob: -8.500236511230469
    3. '[int' → logprob: -11.250236511230469
    4. '(' → logprob: -12.000236511230469
    5. '<int' → logprob: -12.250236511230469
    6. '```' → logprob: -12.875236511230469
    7. '(str' → logprob: -13.500236511230469
    8. '(lambda' → logprob: -13.625236511230469
    9. '=int' → logprob: -13.875236511230469
    10. ']int' → logprob: -14.375236511230469

Token 99: ',input' (ID: 123014)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.000504062045365572
    2. '=input' → logprob: -8.625504493713379
    3. 'input' → logprob: -8.875504493713379
    4. ',input' → logprob: -9.125504493713379
    5. ')' → logprob: -10.125504493713379
    6. '()' → logprob: -10.875504493713379
    7. '(' → logprob: -11.875504493713379
    8. ' input' → logprob: -12.375504493713379
    9. ' (' → logprob: -13.625504493713379
    10. '())' → logprob: -13.625504493713379

Token 100: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00893622636795044
    2. '()' → logprob: -4.883936405181885
    3. '())' → logprob: -6.633936405181885
    4. ')' → logprob: -11.508935928344727
    5. '()
' → logprob: -13.258935928344727
    6. '());' → logprob: -14.383935928344727
    7. '()[' → logprob: -14.883935928344727
    8. '()>' → logprob: -15.258935928344727
    9. '()]' → logprob: -15.383935928344727
    10. '())
' → logprob: -15.758935928344727

Token 101: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -6.704273118884885e-07
    2. ' split' → logprob: -14.625000953674316
    3. 'strip' → logprob: -16.625
    4. '(split' → logprob: -18.25
    5. ')' → logprob: -18.875
    6. 'spl' → logprob: -19.125
    7. 'plit' → logprob: -19.25
    8. '.split' → logprob: -20.875
    9. '_split' → logprob: -21.375
    10. 'rstrip' → logprob: -21.5

Token 102: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.35197702050209045
    2. ')' → logprob: -1.601976990699768
    3. '()' → logprob: -2.3519771099090576
    4. '())
' → logprob: -11.851977348327637
    5. '))' → logprob: -12.351977348327637
    6. '()))' → logprob: -12.976977348327637
    7. ' ())' → logprob: -12.976977348327637
    8. '();)' → logprob: -13.101977348327637
    9. '(' → logprob: -13.726977348327637
    10. '(),' → logprob: -14.601977348327637

Token 103: 'pv' (ID: 57708)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.9537456631660461
    2. 'res' → logprob: -2.2037456035614014
    3. 'expected' → logprob: -2.7037456035614014
    4. 'p' → logprob: -2.9537456035614014
    5. 'r' → logprob: -3.3287456035614014
    6. 'd' → logprob: -3.3287456035614014
    7. 'e' → logprob: -3.7037456035614014
    8. 'm' → logprob: -3.7037456035614014
    9. '#' → logprob: -3.7037456035614014
    10. 'n' → logprob: -4.0787458419799805

Token 104: '=[]
' (ID: 63466)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.30262458324432373
    2. '=' → logprob: -1.6776245832443237
    3. 's' → logprob: -2.9276247024536133
    4. '=[]' → logprob: -5.052624702453613
    5. ',p' → logprob: -5.302624702453613
    6. ' =' → logprob: -5.677624702453613
    7. '[' → logprob: -6.427624702453613
    8. ',s' → logprob: -7.052624702453613
    9. '_' → logprob: -7.802624702453613
    10. ',v' → logprob: -8.052624702453613

Token 105: 'pr' (ID: 638)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.02148730866611004
    2. 'q' → logprob: -4.646487236022949
    3. 'p' → logprob: -5.646487236022949
    4. 'pq' → logprob: -6.771487236022949
    5. 'vals' → logprob: -7.021487236022949
    6. 'pv' → logprob: -7.021487236022949
    7. 'dq' → logprob: -7.146487236022949
    8. '[]' → logprob: -7.271487236022949
    9. 'd' → logprob: -7.896487236022949
    10. '[' → logprob: -8.02148723602295

Token 106: '=[]
' (ID: 63466)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.056580495089292526
    2. '=[]' → logprob: -3.0565805435180664
    3. 'o' → logprob: -5.681580543518066
    4. 'ob' → logprob: -6.931580543518066
    5. 's' → logprob: -7.306580543518066
    6. '=[]
' → logprob: -7.431580543518066
    7. '<|end|>' → logprob: -7.681580543518066
    8. ' =' → logprob: -7.931580543518066
    9. 'os' → logprob: -7.931580543518066
    10. '[]' → logprob: -8.181580543518066

Token 107: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00017529279284644872
    2. 'p' → logprob: -9.375175476074219
    3. 'prev' → logprob: -10.625175476074219
    4. 'vals' → logprob: -11.000175476074219
    5. 'i' → logprob: -11.250175476074219
    6. 'v' → logprob: -12.250175476074219
    7. ' for' → logprob: -12.500175476074219
    8. 'idx' → logprob: -12.875175476074219
    9. 'last' → logprob: -12.875175476074219
    10. 'from' → logprob: -13.000175476074219

Token 108: ' _' (ID: 1175)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -1.288071870803833
    2. ' vals' → logprob: -1.538071870803833
    3. '_' → logprob: -1.913071870803833
    4. ' dice' → logprob: -2.038071870803833
    5. ' _' → logprob: -2.663071870803833
    6. ' d' → logprob: -2.913071870803833
    7. 'i' → logprob: -3.663071870803833
    8. 'dice' → logprob: -4.288071632385254
    9. ' val' → logprob: -4.413071632385254
    10. 'd' → logprob: -4.413071632385254

Token 109: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.07903729379177094
    2. ' in' → logprob: -2.5790371894836426
    3. ' ' → logprob: -9.2040376663208
    4. 'range' → logprob: -10.3290376663208
    5. 'n' → logprob: -12.3290376663208
    6. '  ' → logprob: -13.2040376663208
    7. 'i' → logprob: -13.3290376663208
    8. 'inthe' → logprob: -13.9540376663208
    9. 'p' → logprob: -14.0790376663208
    10. 'inp' → logprob: -14.5790376663208

Token 110: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.02651195414364338
    2. ' range' → logprob: -3.6515119075775146
    3. 'd' → logprob: -8.526512145996094
    4. '(range' → logprob: -12.776512145996094
    5. 'dice' → logprob: -13.401512145996094
    6. 'p' → logprob: -13.401512145996094
    7. ' ' → logprob: -13.526512145996094
    8. 'ran' → logprob: -13.776512145996094
    9. '	range' → logprob: -14.026512145996094
    10. ' d' → logprob: -14.151512145996094

Token 111: '(q' (ID: 21479)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.06583006680011749
    2. '(q' → logprob: -2.8158299922943115
    3. '(t' → logprob: -6.690830230712891
    4. '(' → logprob: -6.690830230712891
    5. '(n' → logprob: -7.565830230712891
    6. 'p' → logprob: -7.940830230712891
    7. 'q' → logprob: -8.81583023071289
    8. '((' → logprob: -9.69083023071289
    9. ' (' → logprob: -9.69083023071289
    10. '(
' → logprob: -9.81583023071289

Token 112: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.013560166582465172
    2. '):
' → logprob: -4.3885602951049805
    3. ')' → logprob: -7.2635602951049805
    4. ' ):' → logprob: -8.63856029510498
    5. ':' → logprob: -8.76356029510498
    6. ' ):
' → logprob: -13.01356029510498
    7. '   ' → logprob: -13.51356029510498
    8. '():' → logprob: -13.51356029510498
    9. ':
' → logprob: -13.63856029510498
    10. '+' → logprob: -13.63856029510498

Token 113: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007252346258610487
    2. 'v' → logprob: -5.382252216339111
    3. ' v' → logprob: -6.632252216339111
    4. 'p' → logprob: -8.00725269317627
    5. ' pv' → logprob: -9.00725269317627
    6. ' p' → logprob: -9.13225269317627
    7. 'pv' → logprob: -9.13225269317627
    8. 'vals' → logprob: -9.25725269317627
    9. ' vals' → logprob: -9.25725269317627
    10. 'x' → logprob: -10.00725269317627

Token 114: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.39960166811943054
    2. 'p' → logprob: -2.399601697921753
    3. 'vals' → logprob: -2.524601697921753
    4. 'pv' → logprob: -3.149601697921753
    5. 'm' → logprob: -3.774601697921753
    6. 'x' → logprob: -4.274601459503174
    7. 'a' → logprob: -4.524601459503174
    8. 'd' → logprob: -4.899601459503174
    9. 'i' → logprob: -4.899601459503174
    10. ' v' → logprob: -5.149601459503174

Token 115: ',r' (ID: 33654)
  Prédit: ',r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',r' → logprob: -0.22096063196659088
    2. ',p' → logprob: -2.0959606170654297
    3. ',' → logprob: -2.5959606170654297
    4. 'p' → logprob: -8.59596061706543
    5. 'r' → logprob: -8.72096061706543
    6. ',s' → logprob: -9.22096061706543
    7. ',w' → logprob: -9.34596061706543
    8. ' ,' → logprob: -10.47096061706543
    9. ',a' → logprob: -10.59596061706543
    10. ',q' → logprob: -10.72096061706543

Token 116: '=input' (ID: 87911)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1602603793144226
    2. '=input' → logprob: -1.9102604389190674
    3. '=user' → logprob: -11.660260200500488
    4. '=int' → logprob: -11.785260200500488
    5. '=line' → logprob: -11.910260200500488
    6. ' =' → logprob: -12.035260200500488
    7. '=
' → logprob: -13.160260200500488
    8. '=in' → logprob: -13.160260200500488
    9. '=s' → logprob: -14.285260200500488
    10. '=_' → logprob: -14.410260200500488

Token 117: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -6.778209353797138e-05
    2. '()' → logprob: -9.625067710876465
    3. ' ().' → logprob: -13.750067710876465
    4. '.' → logprob: -14.625067710876465
    5. '.split' → logprob: -17.12506866455078
    6. '(' → logprob: -17.37506866455078
    7. 'split' → logprob: -17.50006866455078
    8. '>().' → logprob: -17.87506866455078
    9. '().'' → logprob: -17.87506866455078
    10. '()
' → logprob: -18.25006866455078

Token 118: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.981667537620524e-06
    2. ' split' → logprob: -13.875001907348633
    3. 'spl' → logprob: -14.250001907348633
    4. 'strip' → logprob: -15.250001907348633
    5. '.split' → logprob: -17.500001907348633
    6. '(split' → logprob: -18.125001907348633
    7. '().' → logprob: -18.250001907348633
    8. 's' → logprob: -18.375001907348633
    9. '_split' → logprob: -19.375001907348633
    10. ' ' → logprob: -19.750001907348633

Token 119: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.29754433035850525
    2. '<|end|>' → logprob: -1.5475443601608276
    3. '   ' → logprob: -3.797544240951538
    4. ')' → logprob: -4.672544479370117
    5. '()
' → logprob: -5.297544479370117
    6. '       ' → logprob: -6.297544479370117
    7. '()[' → logprob: -6.922544479370117
    8. '<|end|>' → logprob: -7.047544479370117
    9. '().' → logprob: -7.297544479370117
    10. '(' → logprob: -8.047544479370117

Token 120: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03375254198908806
    2. '<|end|>' → logprob: -3.40875244140625
    3. '       ' → logprob: -10.03375244140625
    4. '<|end|>' → logprob: -11.28375244140625
    5. ' ' → logprob: -11.53375244140625
    6. ')' → logprob: -11.65875244140625
    7. '  ' → logprob: -11.78375244140625
    8. 'v' → logprob: -12.53375244140625
    9. '	pro' → logprob: -12.65875244140625
    10. '```' → logprob: -12.78375244140625

Token 121: ' pv' (ID: 63543)
  Prédit: 'pv'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pv' (adapté à ' pv') → logprob: -0.004068190231919289
    2. 'v' → logprob: -6.004068374633789
    3. '   ' → logprob: -7.004068374633789
    4. 'pr' → logprob: -8.129068374633789
    5. 'val' → logprob: -8.629068374633789
    6. 'vals' → logprob: -9.629068374633789
    7. 'p' → logprob: -10.004068374633789
    8. 'vp' → logprob: -10.504068374633789
    9. ' pv' → logprob: -10.879068374633789
    10. 'vv' → logprob: -10.879068374633789

Token 122: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.03809003159403801
    2. '.' → logprob: -3.2880899906158447
    3. 'append' → logprob: -10.288089752197266
    4. '.app' → logprob: -12.663089752197266
    5. ' .' → logprob: -13.288089752197266
    6. ').' → logprob: -13.538089752197266
    7. '.Append' → logprob: -13.538089752197266
    8. 'app' → logprob: -13.913089752197266
    9. '.extend' → logprob: -13.913089752197266
    10. '.push' → logprob: -14.038089752197266

Token 123: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.1610361635684967
    2. '(float' → logprob: -1.9110361337661743
    3. 'int' → logprob: -7.286036014556885
    4. 'float' → logprob: -9.036036491394043
    5. '(' → logprob: -12.411036491394043
    6. '[int' → logprob: -13.286036491394043
    7. ' (' → logprob: -14.536036491394043
    8. '=int' → logprob: -15.536036491394043
    9. ',int' → logprob: -15.536036491394043
    10. ',float' → logprob: -15.536036491394043

Token 124: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.000867156486492604
    2. '(' → logprob: -7.2508673667907715
    3. ')(' → logprob: -9.000866889953613
    4. ')' → logprob: -10.500866889953613
    5. ' (' → logprob: -12.875866889953613
    6. 'v' → logprob: -13.250866889953613
    7. ')v' → logprob: -13.875866889953613
    8. ' ' → logprob: -14.625866889953613
    9. '(r' → logprob: -15.875866889953613
    10. '   ' → logprob: -16.12586784362793

Token 125: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.016077304258942604
    2. ')
' → logprob: -4.141077518463135
    3. ' )' → logprob: -10.391077041625977
    4. ' )
' → logprob: -11.766077041625977
    5. ')

' → logprob: -13.641077041625977
    6. ')
' → logprob: -14.016077041625977
    7. '   ' → logprob: -14.016077041625977
    8. '),' → logprob: -14.766077041625977
    9. '))' → logprob: -15.016077041625977
    10. ')v' → logprob: -15.016077041625977

Token 126: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 127: ' pr' (ID: 550)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'float' → logprob: -4.0484450437361374e-05
    2. ' float' → logprob: -10.125040054321289
    3. '(float' → logprob: -16.00004005432129
    4. '=float' → logprob: -16.50004005432129
    5. '	float' → logprob: -16.62504005432129
    6. '   ' → logprob: -17.75004005432129
    7. ',float' → logprob: -18.87504005432129
    8. '<float' → logprob: -19.00004005432129
    9. '  ' → logprob: -19.37504005432129
    10. '
' → logprob: -19.62504005432129

Token 128: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0008375041070394218
    2. 'append' → logprob: -7.500837326049805
    3. '.' → logprob: -8.250837326049805
    4. '.Append' → logprob: -11.500837326049805
    5. ' .' → logprob: -13.125837326049805
    6. '.app' → logprob: -13.125837326049805
    7. '.extend' → logprob: -13.375837326049805
    8. 'Append' → logprob: -13.750837326049805
    9. '<|end|>' → logprob: -13.875837326049805
    10. '	append' → logprob: -14.000837326049805

Token 129: '(float' (ID: 17830)
  Prédit: '(float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(float' → logprob: -0.0004372254479676485
    2. 'float' → logprob: -7.750437259674072
    3. '(' → logprob: -12.250436782836914
    4. ' (' → logprob: -14.000436782836914
    5. ' float' → logprob: -14.375436782836914
    6. '=float' → logprob: -15.875436782836914
    7. '<float' → logprob: -16.125436782836914
    8. '(int' → logprob: -17.375436782836914
    9. '	float' → logprob: -17.375436782836914
    10. ',float' → logprob: -17.625436782836914

Token 130: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.00022320532298181206
    2. '(' → logprob: -8.750223159790039
    3. ')' → logprob: -10.375223159790039
    4. ' (' → logprob: -10.500223159790039
    5. 'r' → logprob: -12.250223159790039
    6. ' r' → logprob: -14.250223159790039
    7. ')(' → logprob: -15.125223159790039
    8. ' )' → logprob: -15.875223159790039
    9. ' ' → logprob: -16.00022315979004
    10. '(
' → logprob: -17.25022315979004

Token 131: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.003656960790976882
    2. ')' → logprob: -5.62865686416626
    3. '))
' → logprob: -9.878657341003418
    4. ' ))' → logprob: -13.003657341003418
    5. ')))' → logprob: -13.128657341003418
    6. ')
' → logprob: -15.128657341003418
    7. '))

' → logprob: -15.378657341003418
    8. ''))' → logprob: -15.628657341003418
    9. '()))' → logprob: -15.753657341003418
    10. '));' → logprob: -16.2536563873291

Token 132: 'boss' (ID: 59174)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.7151265740394592
    2. 'ans' → logprob: -2.5901265144348145
    3. 'res' → logprob: -2.7151265144348145
    4. 'def' → logprob: -2.8401265144348145
    5. 'expected' → logprob: -3.0901265144348145
    6. 'expect' → logprob: -3.3401265144348145
    7. 'ex' → logprob: -3.4651265144348145
    8. 'result' → logprob: -3.7151265144348145
    9. 'exp' → logprob: -3.7151265144348145
    10. 'e' → logprob: -3.9651265144348145

Token 133: '_exp' (ID: 30306)
  Prédit: '_vals'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_vals' → logprob: -0.21927547454833984
    2. '=' → logprob: -2.71927547454834
    3. 's' → logprob: -3.34427547454834
    4. '_' → logprob: -4.46927547454834
    5. '_expected' → logprob: -4.46927547454834
    6. 'vals' → logprob: -4.46927547454834
    7. '_values' → logprob: -4.59427547454834
    8. '_expect' → logprob: -4.59427547454834
    9. '_probs' → logprob: -4.59427547454834
    10. '_p' → logprob: -5.09427547454834

Token 134: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2523120045661926
    2. 'ect' → logprob: -1.5023119449615479
    3. '=[]' → logprob: -9.002311706542969
    4. 'ected' → logprob: -9.377311706542969
    5. ' =' → logprob: -10.252311706542969
    6. '=p' → logprob: -11.252311706542969
    7. '```' → logprob: -11.502311706542969
    8. 'ects' → logprob: -11.877311706542969
    9. 'expect' → logprob: -12.002311706542969
    10. '=(' → logprob: -12.002311706542969

Token 135: 'expect' (ID: 34366)
  Prédit: 'expect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expect' → logprob: -0.0012067806674167514
    2. ' expect' → logprob: -7.376206874847412
    3. 'sum' → logprob: -7.876206874847412
    4. '0' → logprob: -9.251206398010254
    5. '(expect' → logprob: -9.501206398010254
    6. 'expected' → logprob: -12.001206398010254
    7. '[]' → logprob: -12.376206398010254
    8. '[' → logprob: -12.751206398010254
    9. 'p' → logprob: -12.876206398010254
    10. '1' → logprob: -13.001206398010254

Token 136: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.11847057938575745
    2. '(d' → logprob: -2.4934706687927246
    3. '(' → logprob: -3.9934706687927246
    4. '(vals' → logprob: -4.618470668792725
    5. '(pro' → logprob: -8.368470191955566
    6. '((' → logprob: -8.868470191955566
    7. '<|end|>' → logprob: -9.493470191955566
    8. '(m' → logprob: -9.868470191955566
    9. '(pr' → logprob: -9.993470191955566
    10. '(v' → logprob: -10.368470191955566

Token 137: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0032753876876085997
    2. '(v' → logprob: -6.503275394439697
    3. ',v' → logprob: -6.628275394439697
    4. ',' → logprob: -9.253274917602539
    5. '(vals' → logprob: -9.253274917602539
    6. '[v' → logprob: -9.503274917602539
    7. '(p' → logprob: -9.753274917602539
    8. 'd' → logprob: -10.128274917602539
    9. ')' → logprob: -10.878274917602539
    10. 'V' → logprob: -11.378274917602539

Token 138: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003936152206733823
    2. ' ,' → logprob: -8.125393867492676
    3. ',p' → logprob: -9.250393867492676
    4. ',[' → logprob: -14.625393867492676
    5. '[' → logprob: -15.125393867492676
    6. '(pr' → logprob: -15.625393867492676
    7. ',
' → logprob: -15.875393867492676
    8. ')' → logprob: -16.00039291381836
    9. ',s' → logprob: -16.25039291381836
    10. ',b' → logprob: -17.25039291381836

Token 139: 'pr' (ID: 638)
  Prédit: 'pr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.005233882926404476
    2. ' pr' → logprob: -5.2552337646484375
    3. '	pr' → logprob: -16.005233764648438
    4. '(pr' → logprob: -19.130233764648438
    5. ' ' → logprob: -19.630233764648438
    6. '_pr' → logprob: -19.880233764648438
    7. ')' → logprob: -20.130233764648438
    8. 'prs' → logprob: -20.130233764648438
    9. 'Pr' → logprob: -20.505233764648438
    10. '   ' → logprob: -20.755233764648438

Token 140: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.278864359250292e-05
    2. ')
' → logprob: -9.750072479248047
    3. ')p' → logprob: -12.125072479248047
    4. ')*' → logprob: -13.125072479248047
    5. ')+' → logprob: -13.125072479248047
    6. ' )' → logprob: -13.500072479248047
    7. ')

' → logprob: -13.625072479248047
    8. ')**' → logprob: -14.375072479248047
    9. '))' → logprob: -14.875072479248047
    10. ')#' → logprob: -15.250072479248047

Token 141: 'for' (ID: 1938)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.7204205393791199
    2. 'res' → logprob: -1.9704205989837646
    3. 'def' → logprob: -2.5954205989837646
    4. 'for' → logprob: -2.8454205989837646
    5. 'ans' → logprob: -2.8454205989837646
    6. 'from' → logprob: -3.4704205989837646
    7. 'max' → logprob: -3.7204205989837646
    8. 'total' → logprob: -3.7204205989837646
    9. 'results' → logprob: -3.8454205989837646
    10. 'import' → logprob: -3.8454205989837646

Token 142: ' vals' (ID: 58985)
  Prédit: ' vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vals' → logprob: -0.7112004160881042
    2. ' i' → logprob: -1.211200475692749
    3. ' _' → logprob: -2.836200475692749
    4. ' dice' → logprob: -2.961200475692749
    5. ' (' → logprob: -3.336200475692749
    6. ' dices' → logprob: -3.586200475692749
    7. 'vals' → logprob: -5.08620023727417
    8. ' range' → logprob: -5.33620023727417
    9. '(vals' → logprob: -5.46120023727417
    10. ' idx' → logprob: -5.71120023727417

Token 143: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003528622619342059
    2. ',_' → logprob: -8.00035285949707
    3. ' ,' → logprob: -11.62535285949707
    4. ',p' → logprob: -12.25035285949707
    5. ',d' → logprob: -13.12535285949707
    6. ',in' → logprob: -15.25035285949707
    7. ',de' → logprob: -15.62535285949707
    8. ',n' → logprob: -15.75035285949707
    9. ' in' → logprob: -16.00035285949707
    10. ',val' → logprob: -16.00035285949707

Token 144: 'pro' (ID: 823)
  Prédit: 'pro'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pro' → logprob: -0.004685376305133104
    2. ' probs' → logprob: -5.379685401916504
    3. 'pr' → logprob: -10.254685401916504
    4. 'prob' → logprob: -10.879685401916504
    5. '_probs' → logprob: -11.504685401916504
    6. ' ' → logprob: -15.004685401916504
    7. '	pro' → logprob: -15.504685401916504
    8. ' pro' → logprob: -15.754685401916504
    9. 'Pro' → logprob: -16.504684448242188
    10. '
' → logprob: -16.629684448242188

Token 145: 'bs' (ID: 6229)
  Prédit: 'bs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bs' → logprob: -1.3306015716807451e-05
    2. 's' → logprob: -12.00001335144043
    3. 'ps' → logprob: -12.37501335144043
    4. 'bps' → logprob: -13.62501335144043
    5. ' bs' → logprob: -14.25001335144043
    6. 'b' → logprob: -15.12501335144043
    7. '(bs' → logprob: -15.62501335144043
    8. 'qs' → logprob: -16.75001335144043
    9. 'ds' → logprob: -16.87501335144043
    10. 'fs' → logprob: -16.87501335144043

Token 146: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06270365417003632
    2. 'in' → logprob: -2.8127036094665527
    3. ':' → logprob: -7.312703609466553
    4. ',' → logprob: -10.812704086303711
    5. 's' → logprob: -11.062704086303711
    6. '<|end|>' → logprob: -11.687704086303711
    7. ' ' → logprob: -11.812704086303711
    8. ' :' → logprob: -12.312704086303711
    9. 'inth' → logprob: -13.312704086303711
    10. ' ,' → logprob: -13.312704086303711

Token 147: ' dices' (ID: 165143)
  Prédit: ' dices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dices' → logprob: -0.029777219519019127
    2. 'd' → logprob: -3.5297772884368896
    3. ' dice' → logprob: -11.029777526855469
    4. ' d' → logprob: -12.654777526855469
    5. 'dice' → logprob: -13.154777526855469
    6. ' ' → logprob: -13.654777526855469
    7. ' diced' → logprob: -13.779777526855469
    8. 's' → logprob: -13.904777526855469
    9. '   ' → logprob: -14.029777526855469
    10. '	d' → logprob: -15.529777526855469

Token 148: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -8.73314929776825e-05
    2. ':
' → logprob: -9.62508773803711
    3. ' :' → logprob: -12.00008773803711
    4. '<|end|>' → logprob: -12.12508773803711
    5. ',' → logprob: -12.62508773803711
    6. ':**' → logprob: -13.37508773803711
    7. '[' → logprob: -13.62508773803711
    8. ':

' → logprob: -14.12508773803711
    9. '):' → logprob: -14.25008773803711
    10. '.' → logprob: -15.25008773803711

Token 149: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.000526107382029295
    2. '<|end|>' → logprob: -8.250526428222656
    3. ' if' → logprob: -9.250526428222656
    4. '    
' → logprob: -9.750526428222656
    5. '
' → logprob: -10.625526428222656
    6. ',' → logprob: -10.875526428222656
    7. ':' → logprob: -11.375526428222656
    8. ')' → logprob: -11.375526428222656
    9. 'print' → logprob: -11.875526428222656
    10. 'if' → logprob: -12.250526428222656

Token 150: ' e' (ID: 319)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24652034044265747
    2. ' if' → logprob: -2.9965202808380127
    3. 'exp' → logprob: -3.1215202808380127
    4. 'if' → logprob: -3.4965202808380127
    5. 'v' → logprob: -3.8715202808380127
    6. 'e' (adapté à ' e') → logprob: -3.9965202808380127
    7. 'print' → logprob: -4.496520519256592
    8. 'ex' → logprob: -4.871520519256592
    9. ' exp' → logprob: -4.871520519256592
    10. 'expected' → logprob: -4.996520519256592

Token 151: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38159501552581787
    2. 'x' → logprob: -1.6315950155258179
    3. ' =' → logprob: -2.5065951347351074
    4. 'xp' → logprob: -3.2565951347351074
    5. '_' → logprob: -7.131595134735107
    6. '_=' → logprob: -7.881595134735107
    7. '=_' → logprob: -9.00659465789795
    8. 's' → logprob: -10.25659465789795
    9. '=x' → logprob: -10.50659465789795
    10. '=get' → logprob: -10.88159465789795

Token 152: 'expect' (ID: 34366)
  Prédit: 'expect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expect' → logprob: -0.0001831565605243668
    2. ' expect' → logprob: -8.62518310546875
    3. '(expect' → logprob: -13.12518310546875
    4. 'abs' → logprob: -14.12518310546875
    5. 'expected' → logprob: -15.75018310546875
    6. 'sum' → logprob: -16.00018310546875
    7. '	expect' → logprob: -16.50018310546875
    8. ' ' → logprob: -16.62518310546875
    9. 'e' → logprob: -16.75018310546875
    10. '.expect' → logprob: -17.00018310546875

Token 153: '(vals' (ID: 167053)
  Prédit: '(vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(vals' → logprob: -0.023968983441591263
    2. '(' → logprob: -3.7739689350128174
    3. '(values' → logprob: -7.7739691734313965
    4. '(val' → logprob: -8.648968696594238
    5. '<|end|>' → logprob: -9.148968696594238
    6. '(vars' → logprob: -11.523968696594238
    7. '(pro' → logprob: -12.273968696594238
    8. '(nums' → logprob: -13.898968696594238
    9. '(
' → logprob: -14.148968696594238
    10. ' (' → logprob: -14.273968696594238

Token 154: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.3915141355246305e-05
    2. ' ,' → logprob: -10.75002384185791
    3. '   ' → logprob: -14.00002384185791
    4. ',
' → logprob: -14.50002384185791
    5. 'pro' → logprob: -15.37502384185791
    6. ')' → logprob: -16.250024795532227
    7. ',s' → logprob: -16.375024795532227
    8. ',p' → logprob: -16.500024795532227
    9. '(pro' → logprob: -16.625024795532227
    10. 'Pro' → logprob: -17.250024795532227

Token 155: 'pro' (ID: 823)
  Prédit: 'pro'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pro' → logprob: -0.00016659092216286808
    2. ' probs' → logprob: -8.750166893005371
    3. '_probs' → logprob: -12.250166893005371
    4. 'pr' → logprob: -13.375166893005371
    5. 'prob' → logprob: -13.500166893005371
    6. ')' → logprob: -16.000165939331055
    7. ' ' → logprob: -16.250165939331055
    8. '   ' → logprob: -16.750165939331055
    9. 'Pro' → logprob: -17.125165939331055
    10. '  ' → logprob: -17.500165939331055

Token 156: 'bs' (ID: 6229)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.31373080611228943
    2. 'bs' → logprob: -1.3137308359146118
    3. 'ds' → logprob: -8.68873119354248
    4. 'ps' → logprob: -8.81373119354248
    5. 'obs' → logprob: -10.31373119354248
    6. '_probs' → logprob: -10.43873119354248
    7. 'cs' → logprob: -10.56373119354248
    8. 'fs' → logprob: -11.56373119354248
    9. 'os' → logprob: -11.68873119354248
    10. 'ms' → logprob: -11.81373119354248

Token 157: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16034740209579468
    2. ')
' → logprob: -1.9103474617004395
    3. ')
' → logprob: -10.410346984863281
    4. ')

' → logprob: -10.785346984863281
    5. '   ' → logprob: -10.910346984863281
    6. ')>' → logprob: -10.910346984863281
    7. '>' → logprob: -12.035346984863281
    8. ')*' → logprob: -12.160346984863281
    9. ' )' → logprob: -12.160346984863281
    10. ' )
' → logprob: -12.285346984863281

Token 158: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5194344520568848
    2. 'if' → logprob: -1.2694344520568848
    3. ' if' → logprob: -2.1444344520568848
    4. '<|end|>' → logprob: -5.519434452056885
    5. 'print' → logprob: -6.644434452056885
    6. '
' → logprob: -7.019434452056885
    7. '+' → logprob: -8.769433975219727
    8. ' ' → logprob: -9.019433975219727
    9. ')' → logprob: -9.144433975219727
    10. '    ' → logprob: -9.269433975219727

Token 159: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.5308972001075745
    2. ' if' → logprob: -1.5308971405029297
    3. 'print' → logprob: -1.6558971405029297
    4. ' print' → logprob: -5.40589714050293
    5. '   ' → logprob: -9.40589714050293
    6. '
' → logprob: -10.40589714050293
    7. ' ' → logprob: -10.53089714050293
    8. 'p' → logprob: -11.90589714050293
    9. ' 
' → logprob: -12.65589714050293
    10. 'i' → logprob: -13.03089714050293

Token 160: ' e' (ID: 319)
  Prédit: ' e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' e' → logprob: -0.009675461798906326
    2. 'e' → logprob: -4.7596755027771
    3. ' abs' → logprob: -7.2596755027771
    4. ' ' → logprob: -8.134675025939941
    5. 'abs' → logprob: -10.134675025939941
    6. ' p' → logprob: -11.634675025939941
    7. '	e' → logprob: -12.384675025939941
    8. '   ' → logprob: -12.634675025939941
    9. ' ' → logprob: -13.322175025939941
    10. '  ' → logprob: -13.822175025939941

Token 161: '-b' (ID: 2118)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.24580460786819458
    2. '>' → logprob: -2.49580454826355
    3. ' >=' → logprob: -2.62080454826355
    4. ' <' → logprob: -3.24580454826355
    5. '>=' → logprob: -4.370804786682129
    6. '<' → logprob: -5.245804786682129
    7. '<p' → logprob: -5.745804786682129
    8. ' <=' → logprob: -6.745804786682129
    9. ' ' → logprob: -6.995804786682129
    10. '<=' → logprob: -8.995804786682129

Token 162: 'oss' (ID: 2907)
  Prédit: 'oss'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oss' → logprob: -1.8670179997570813e-05
    2. 'os' → logprob: -11.625019073486328
    3. 'boss' → logprob: -12.000019073486328
    4. 'ossz' → logprob: -14.125019073486328
    5. '>' → logprob: -14.250019073486328
    6. '0' → logprob: -14.625019073486328
    7. 'o' → logprob: -15.500019073486328
    8. 'ost' → logprob: -15.875019073486328
    9. '>=' → logprob: -16.000019073486328
    10. 'ess' → logprob: -16.250019073486328

Token 163: '_exp' (ID: 30306)
  Prédit: '_exp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_exp' → logprob: -0.007972479797899723
    2. '_expect' → logprob: -5.257972717285156
    3. '_ex' → logprob: -6.882972717285156
    4. '_' → logprob: -7.007972717285156
    5. '_expected' → logprob: -7.757972717285156
    6. '_e' → logprob: -8.507972717285156
    7. 'exp' → logprob: -9.382972717285156
    8. '>' → logprob: -10.507972717285156
    9. '_prob' → logprob: -11.632972717285156
    10. '_expr' → logprob: -11.882972717285156

Token 164: '>' (ID: 29)
  Prédit: '>'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.41039279103279114
    2. ' >' → logprob: -1.5353927612304688
    3. '>=' → logprob: -2.4103927612304688
    4. ' >=' → logprob: -3.5353927612304688
    5. '<=' → logprob: -7.285392761230469
    6. '<' → logprob: -7.410392761230469
    7. ' <' → logprob: -7.910392761230469
    8. ' <=' → logprob: -8.285392761230469
    9. ' ' → logprob: -8.535392761230469
    10. '<|end|>' → logprob: -10.035392761230469

Token 165: '1' (ID: 16)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.6670844554901123
    2. '0' → logprob: -0.7920844554901123
    3. ' p' → logprob: -4.042084693908691
    4. ' ' → logprob: -4.667084693908691
    5. '1' → logprob: -5.042084693908691
    6. '10' → logprob: -9.292084693908691
    7. '-' → logprob: -9.417084693908691
    8. '=' → logprob: -9.917084693908691
    9. 'float' → logprob: -10.417084693908691
    10. '.' → logprob: -10.542084693908691

Token 166: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.007230931427329779
    2. '0' → logprob: -5.132230758666992
    3. '.' → logprob: -7.007230758666992
    4. 'E' → logprob: -8.507230758666992
    5. '-' → logprob: -10.132230758666992
    6. ' ' → logprob: -10.257230758666992
    7. '-e' → logprob: -10.382230758666992
    8. ':' → logprob: -10.882230758666992
    9. '00' → logprob: -11.382230758666992
    10. ':
' → logprob: -11.882230758666992

Token 167: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -4.4849443838757e-06
    2. '9' → logprob: -13.625004768371582
    3. '6' → logprob: -14.125004768371582
    4. ' -' → logprob: -14.375004768371582
    5. '3' → logprob: -14.750004768371582
    6. '5' → logprob: -15.250004768371582
    7. '(-' → logprob: -15.375004768371582
    8. '4' → logprob: -15.750004768371582
    9. '   ' → logprob: -16.000003814697266
    10. '0' → logprob: -16.125003814697266

Token 168: '7' (ID: 22)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.5778915286064148
    2. '6' → logprob: -2.0778915882110596
    3. '8' → logprob: -2.0778915882110596
    4. '7' → logprob: -2.0778915882110596
    5. '5' → logprob: -3.2028915882110596
    6. '10' → logprob: -4.4528913497924805
    7. '4' → logprob: -5.5778913497924805
    8. '3' → logprob: -5.7028913497924805
    9. '-' → logprob: -6.3278913497924805
    10. '12' → logprob: -6.4528913497924805

Token 169: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.009899521246552467
    2. ':
' → logprob: -4.634899616241455
    3. ' :' → logprob: -9.009899139404297
    4. ' :
' → logprob: -11.509899139404297
    5. ' and' → logprob: -12.634899139404297
    6. ' print' → logprob: -12.759899139404297
    7. '   ' → logprob: -13.759899139404297
    8. 'print' → logprob: -14.634899139404297
    9. ':

' → logprob: -14.634899139404297
    10. ' or' → logprob: -14.634899139404297

Token 170: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08471998572349548
    2. ' print' → logprob: -3.4597198963165283
    3. 'print' → logprob: -3.5847198963165283
    4. '   ' → logprob: -3.8347198963165283
    5. '1' → logprob: -9.70971965789795
    6. '    ' → logprob: -9.95971965789795
    7. '     ' → logprob: -9.95971965789795
    8. '           ' → logprob: -10.08471965789795
    9. ' +' → logprob: -10.20971965789795
    10. '0' → logprob: -10.20971965789795

Token 171: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00047773998812772334
    2. 'p' → logprob: -8.12547779083252
    3. ' print' → logprob: -9.12547779083252
    4. '   ' → logprob: -10.50047779083252
    5. 'pr' → logprob: -11.12547779083252
    6. 'printf' → logprob: -11.75047779083252
    7. '1' → logprob: -12.25047779083252
    8. '       ' → logprob: -12.37547779083252
    9. '
' → logprob: -13.37547779083252
    10. '           ' → logprob: -13.75047779083252

Token 172: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.00877954438328743
    2. '(' → logprob: -5.008779525756836
    3. '('' → logprob: -6.758779525756836
    4. '(e' → logprob: -8.258779525756836
    5. '(vals' → logprob: -8.258779525756836
    6. '(True' → logprob: -9.008779525756836
    7. '(":' → logprob: -9.383779525756836
    8. '("+' → logprob: -9.758779525756836
    9. '"' → logprob: -10.133779525756836
    10. '(int' → logprob: -11.633779525756836

Token 173: 'YES' (ID: 31958)
  Prédit: 'YES'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'YES' → logprob: -0.2668227255344391
    2. 'Yes' → logprob: -2.1418228149414062
    3. '"' → logprob: -3.2668228149414062
    4. 'WIN' → logprob: -4.391822814941406
    5. 'vals' → logprob: -4.891822814941406
    6. '1' → logprob: -5.141822814941406
    7. 'NO' → logprob: -5.141822814941406
    8. 'LOSE' → logprob: -5.391822814941406
    9. 'yes' → logprob: -5.766822814941406
    10. '"D' → logprob: -5.766822814941406

Token 174: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.020648395642638206
    2. '")
' → logprob: -3.89564847946167
    3. ' ")' → logprob: -9.270648002624512
    4. ')' → logprob: -12.145648002624512
    5. '")
' → logprob: -13.020648002624512
    6. ' ")
' → logprob: -13.270648002624512
    7. ')")' → logprob: -13.770648002624512
    8. '"' → logprob: -14.270648002624512
    9. '")

' → logprob: -14.895648002624512
    10. ')
' → logprob: -14.895648002624512

Token 175: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003057449823245406
    2. 'else' → logprob: -6.253057479858398
    3. ' else' → logprob: -7.003057479858398
    4. '<|end|>' → logprob: -8.878057479858398
    5. '       ' → logprob: -10.128057479858398
    6. '	else' → logprob: -11.503057479858398
    7. 'elif' → logprob: -11.503057479858398
    8. ')' → logprob: -12.003057479858398
    9. '<|end|>' → logprob: -13.003057479858398
    10. ' ' → logprob: -13.003057479858398

Token 176: ' break' (ID: 2338)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.2518218755722046
    2. '   ' → logprob: -2.001821994781494
    3. 'break' (adapté à ' break') → logprob: -3.376821994781494
    4. 'exit' → logprob: -3.501821994781494
    5. '       ' → logprob: -4.001821994781494
    6. 'continue' → logprob: -6.501821994781494
    7. ' break' → logprob: -7.001821994781494
    8. ' else' → logprob: -7.126821994781494
    9. 'elif' → logprob: -7.376821994781494
    10. '	break' → logprob: -8.501821517944336

Token 177: '
' (ID: 198)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -7.896309739408025e-07
    2. ' else' → logprob: -14.375000953674316
    3. '#else' → logprob: -15.750000953674316
    4. '```' → logprob: -17.75
    5. '}else' → logprob: -18.25
    6. '   ' → logprob: -19.875
    7. '<|end|>' → logprob: -20.0
    8. 'Else' → logprob: -20.625
    9. 'print' → logprob: -21.0
    10. 'continue' → logprob: -21.125

Token 178: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -7.896309739408025e-07
    2. ' else' → logprob: -14.250000953674316
    3. '#else' → logprob: -16.0
    4. '}else' → logprob: -18.75
    5. '```' → logprob: -18.875
    6. '   ' → logprob: -20.375
    7. 'continue' → logprob: -20.375
    8. 'Else' → logprob: -21.125
    9. '<|end|>' → logprob: -21.125
    10. 'elses' → logprob: -21.25

Token 179: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16534830629825592
    2. ':
' → logprob: -1.9153482913970947
    3. '   ' → logprob: -5.290348529815674
    4. ' :
' → logprob: -10.165348052978516
    5. ' :' → logprob: -11.415348052978516
    6. '    ' → logprob: -11.415348052978516
    7. '       ' → logprob: -12.665348052978516
    8. ':

' → logprob: -13.040348052978516
    9. ':
' → logprob: -14.165348052978516
    10. '    
' → logprob: -14.290348052978516

Token 180: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14876972138881683
    2. 'print' → logprob: -2.1487696170806885
    3. '       ' → logprob: -3.8987696170806885
    4. '"' → logprob: -6.773769855499268
    5. ' print' → logprob: -8.77376937866211
    6. ' ' → logprob: -11.02376937866211
    7. '  ' → logprob: -11.64876937866211
    8. '	print' → logprob: -12.27376937866211
    9. '```' → logprob: -12.64876937866211
    10. '    ' → logprob: -13.02376937866211

Token 181: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -7.3458322731312364e-06
    2. '   ' → logprob: -12.000007629394531
    3. ' print' → logprob: -13.750007629394531
    4. '	print' → logprob: -19.12500762939453
    5. '       ' → logprob: -20.50000762939453
    6. 'printf' → logprob: -22.75000762939453
    7. '    ' → logprob: -22.87500762939453
    8. '  ' → logprob: -23.00000762939453
    9. '```' → logprob: -23.25000762939453
    10. ' ' → logprob: -23.25000762939453

Token 182: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0007102862582542002
    2. '(' → logprob: -7.250710487365723
    3. '('' → logprob: -15.625710487365723
    4. '(
' → logprob: -15.625710487365723
    5. '"' → logprob: -18.250709533691406
    6. '("")' → logprob: -18.375709533691406
    7. '()' → logprob: -18.750709533691406
    8. ' ("' → logprob: -19.250709533691406
    9. '(

' → logprob: -19.250709533691406
    10. '("("' → logprob: -19.250709533691406

Token 183: 'NO' (ID: 14695)
  Prédit: 'NO'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'NO' → logprob: -3.309382373117842e-05
    2. '"' → logprob: -10.500033378601074
    3. '"No' → logprob: -12.250033378601074
    4. '"N' → logprob: -14.250033378601074
    5. 'no' → logprob: -17.125032424926758
    6. '
' → logprob: -17.500032424926758
    7. '(NO' → logprob: -17.625032424926758
    8. 'N' → logprob: -17.875032424926758
    9. 'NOT' → logprob: -18.000032424926758
    10. '""' → logprob: -18.000032424926758

Token 184: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.0044005634263157845
    2. ')")' → logprob: -6.004400730133057
    3. ')' → logprob: -6.254400730133057
    4. '")
' → logprob: -14.379400253295898
    5. '}")' → logprob: -15.254400253295898
    6. '')' → logprob: -16.3794002532959
    7. ')"' → logprob: -16.6294002532959
    8. ')")
' → logprob: -17.6294002532959
    9. '()' → logprob: -17.8794002532959
    10. '`)' → logprob: -18.5044002532959


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 182
Tokens correctement prédits (1ère position, stricte): 90
Tokens correctement prédits (1ère position, avec adaptation): 98
Tokens correctement prédits (top 10): 154
Précision stricte (1ère position): 49.45%
Précision adaptée (1ère position): 53.85%
Précision (top 10): 84.62%
================================================================================
