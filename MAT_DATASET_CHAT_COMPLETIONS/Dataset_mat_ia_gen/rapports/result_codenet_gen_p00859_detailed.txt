================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:04:39
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

class UnionFind:
    def __init__(self, n):
        # Initialisation d'un tableau parent pour union-find
        self.parent = list(range(n))
        self.rank = [0] * n  # Pour optimiser les unions
    
    def find(self, x):
        # Recherche récursive avec compression de chemin
        if self.parent[x] != x:
            self.parent[x] = self.find(self.parent[x])
        return self.parent[x]
    
    def union(self, x, y):
        # Union par rang entre deux composantes
        rx, ry = self.find(x), self.find(y)
        if rx == ry:
            return False  # Ils sont déjà dans la même composante
        if self.rank[rx] < self.rank[ry]:
            self.parent[rx] = ry
        elif self.rank[ry] < self.rank[rx]:
            self.parent[ry] = rx
        else:
            self.parent[ry] = rx
            self.rank[rx] += 1
        return True

def can_build_spanning_tree(edges, n, start, end):
    """
    Teste si on peut construire un arbre couvrant avec des arêtes entre indices start et end inclus.
    On essaie de connecter tous les sommets en utilisant uniquement ces arêtes.
    """
    uf = UnionFind(n)
    count = 0  # Compte le nombre d'arêtes ajoutées
    for i in range(start, end + 1):
        a, b, _ = edges[i]
        if uf.union(a, b):
            count += 1
            if count == n - 1:  # Arbre couvrant complet
                return True
    return False

def find_min_slimness(n, edges):
    """
    Recherche la plus petite différence entre poids max et min d'un arbre couvrant.
    """
    edges.sort(key=lambda x: x[2])  # Tri par poids croissant
    
    m = len(edges)
    min_slimness = None
    
    # On essaie d'utiliser une approche deux pointeurs sur l'intervalle d'arêtes triées.
    # L'intervalle représente les arêtes dont les poids sont entre edges[i] et edges[j].
    j = 0
    for i in range(m):
        # Avance j pour trouver un intervalle où un arbre couvrant est possible
        while j < m and not can_build_spanning_tree(edges, n, i, j):
            j += 1
        if j == m:
            # Plus possible de trouver un intervalle à partir de i
            break
        # Si on peut construire un arbre couvrant entre i et j, on calcule la taille de l'intervalle de poids
        diff = edges[j][2] - edges[i][2]
        if min_slimness is None or diff < min_slimness:
            min_slimness = diff
    
    if min_slimness is None:
        return -1
    else:
        return min_slimness

def main():
    input = sys.stdin.readline
    while True:
        line = input().strip()
        if line == '':
            break
        n, m = map(int, line.split())
        if n == 0 and m == 0:
            break
        
        edges = []
        for _ in range(m):
            a, b, w = map(int, input().split())
            # Stockage en indice 0-based
            edges.append((a - 1, b - 1, w))
        
        if n == 1:
            # Un seul sommet, pas d'arête, slimness = 0
            print(0)
            continue
        
        # Si pas assez d'arêtes pour un arbre couvrant
        if m < n - 1:
            print(-1)
            continue
        
        # Recherche de la plus petite slimness possible
        result = find_min_slimness(n, edges)
        print(result)

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'class' (ID: 1444)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0673331767320633
    2. '\n' → logprob: -3.442333221435547
    3. 'import' → logprob: -3.817333221435547
    4. '<|end|>' → logprob: -5.942333221435547
    5. '\' → logprob: -6.317333221435547
    6. 'newline' → logprob: -6.692333221435547
    7. ',' → logprob: -6.942333221435547
    8. '' → logprob: -7.442333221435547
    9. '
' → logprob: -7.692333221435547
    10. '<|end|>' → logprob: -7.692333221435547

Token 4: ' Union' (ID: 14746)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0023662515450268984
    2. ' My' → logprob: -6.502366065979004
    3. ' Space' → logprob: -8.502366065979004
    4. ' A' → logprob: -8.502366065979004
    5. ' System' → logprob: -9.002366065979004
    6. ' C' → logprob: -9.127366065979004
    7. ' User' → logprob: -10.127366065979004
    8. '  ' → logprob: -10.377366065979004
    9. ' ' → logprob: -11.002366065979004
    10. ' I' → logprob: -11.377366065979004

Token 5: 'Find' (ID: 11437)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6384252309799194
    2. '[' → logprob: -0.8884252309799194
    3. '(' → logprob: -3.013425350189209
    4. 'T' → logprob: -6.138425350189209
    5. ' :' → logprob: -6.638425350189209
    6. 'A' → logprob: -6.763425350189209
    7. '(Type' → logprob: -7.013425350189209
    8. 'Type' → logprob: -7.138425350189209
    9. '[int' → logprob: -7.263425350189209
    10. 'Find' → logprob: -7.513425350189209

Token 6: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.018575385212898254
    2. '(' → logprob: -4.518575191497803
    3. '():' → logprob: -5.018575191497803
    4. '```' → logprob: -8.143575668334961
    5. '[' → logprob: -8.893575668334961
    6. '<|end|>' → logprob: -9.268575668334961
    7. '):' → logprob: -10.018575668334961
    8. '(object' → logprob: -10.393575668334961
    9. '(U' → logprob: -10.643575668334961
    10. '{' → logprob: -10.643575668334961

Token 7: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6012069582939148
    2. '():' → logprob: -1.1012070178985596
    3. '(' → logprob: -2.6012070178985596
    4. '```' → logprob: -3.8512070178985596
    5. '()' → logprob: -4.3512067794799805
    6. '   ' → logprob: -4.9762067794799805
    7. '(object' → logprob: -6.3512067794799805
    8. '(
' → logprob: -7.7262067794799805
    9. '<|end|>' → logprob: -8.10120677947998
    10. 'object' → logprob: -8.72620677947998

Token 8: ' def' (ID: 1056)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6540169715881348
    2. '   ' → logprob: -1.1540169715881348
    3. 'def' (adapté à ' def') → logprob: -2.5290169715881348
    4. '(' → logprob: -3.2790169715881348
    5. ' def' → logprob: -4.029016971588135
    6. 'class' → logprob: -4.529016971588135
    7. '```' → logprob: -4.904016971588135
    8. '():' → logprob: -5.779016971588135
    9. '(object' → logprob: -6.029016971588135
    10. '    ' → logprob: -6.779016971588135

Token 9: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.005303012207150459
    2. ' init' → logprob: -5.255302906036377
    3. ' _' → logprob: -10.005303382873535
    4. 'init' → logprob: -11.130303382873535
    5. '__' → logprob: -12.755303382873535
    6. ' ' → logprob: -13.005303382873535
    7. ' ' → logprob: -13.880303382873535
    8. ' Init' → logprob: -14.005303382873535
    9. '_init' → logprob: -14.380303382873535
    10. ' ___' → logprob: -14.380303382873535

Token 10: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: 0.0
    2. ' init' → logprob: -17.75
    3. 'ini' → logprob: -18.875
    4. 'int' → logprob: -19.375
    5. '_init' → logprob: -19.375
    6. 'in' → logprob: -21.0
    7. 'innit' → logprob: -21.625
    8. 'inite' → logprob: -22.25
    9. '	init' → logprob: -22.25
    10. 'i' → logprob: -23.0

Token 11: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.09479286521673203
    2. '__' → logprob: -2.4697928428649902
    3. '(' → logprob: -5.46979284286499
    4. '__(
' → logprob: -7.59479284286499
    5. '(self' → logprob: -7.71979284286499
    6. '__((' → logprob: -7.96979284286499
    7. '__('' → logprob: -9.469793319702148
    8. ' (' → logprob: -9.844793319702148
    9. '_' → logprob: -9.969793319702148
    10. '```' → logprob: -10.094793319702148

Token 12: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.306760805164231e-05
    2. ' self' → logprob: -11.25001335144043
    3. ')' → logprob: -17.25001335144043
    4. '(self' → logprob: -17.75001335144043
    5. ',self' → logprob: -17.87501335144043
    6. 'parent' → logprob: -19.00001335144043
    7. '	self' → logprob: -19.25001335144043
    8. ' ' → logprob: -19.25001335144043
    9. '0' → logprob: -20.37501335144043
    10. '-self' → logprob: -20.62501335144043

Token 13: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0476192943751812
    2. ' ,' → logprob: -3.672619342803955
    3. 'self' → logprob: -5.047619342803955
    4. ',self' → logprob: -5.172619342803955
    5. '(self' → logprob: -5.297619342803955
    6. ')' → logprob: -6.172619342803955
    7. ' self' → logprob: -7.422619342803955
    8. '(' → logprob: -7.547619342803955
    9. ' )' → logprob: -7.797619342803955
    10. ' ' → logprob: -9.422618865966797

Token 14: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.010031355544924736
    2. 'n' → logprob: -4.760031223297119
    3. ' self' → logprob: -7.010031223297119
    4. ' size' → logprob: -8.135031700134277
    5. 'self' → logprob: -8.885031700134277
    6. ' parent' → logprob: -10.010031700134277
    7. 'size' → logprob: -11.385031700134277
    8. '   ' → logprob: -11.885031700134277
    9. ' elements' → logprob: -11.885031700134277
    10. ' num' → logprob: -13.135031700134277

Token 15: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03370806202292442
    2. ')' → logprob: -3.408708095550537
    3. ' ):' → logprob: -10.533707618713379
    4. ':' → logprob: -10.783707618713379
    5. '):
' → logprob: -12.158707618713379
    6. ',' → logprob: -12.533707618713379
    7. ')n' → logprob: -13.533707618713379
    8. ')：' → logprob: -13.908707618713379
    9. '   ' → logprob: -14.158707618713379
    10. ' )' → logprob: -14.283707618713379

Token 16: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010292617604136467
    2. 'self' → logprob: -5.2602925300598145
    3. '    ' → logprob: -6.2602925300598145
    4. '        ' → logprob: -6.7602925300598145
    5. '   ' → logprob: -7.8852925300598145
    6. '_' → logprob: -8.260293006896973
    7. ')' → logprob: -8.510293006896973
    8. '```' → logprob: -8.510293006896973
    9. '     ' → logprob: -8.760293006896973
    10. 'n' → logprob: -8.760293006896973

Token 17: ' #' (ID: 1069)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.6335044503211975
    2. ' self' → logprob: -0.7585044503211975
    3. '       ' → logprob: -7.258504390716553
    4. ' [' → logprob: -10.258504867553711
    5. '[self' → logprob: -10.258504867553711
    6. '        ' → logprob: -10.633504867553711
    7. '[]' → logprob: -11.008504867553711
    8. '0' → logprob: -11.133504867553711
    9. '   ' → logprob: -11.133504867553711
    10. '[' → logprob: -11.258504867553711

Token 18: ' Initial' (ID: 9209)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5798302888870239
    2. ' self' → logprob: -0.8298302888870239
    3. ' parent' → logprob: -6.329830169677734
    4. '       ' → logprob: -6.829830169677734
    5. 'parent' → logprob: -6.954830169677734
    6. ' ' → logprob: -10.829830169677734
    7. '        ' → logprob: -11.204830169677734
    8. '   ' → logprob: -11.829830169677734
    9. '    ' → logprob: -11.829830169677734
    10. 'super' → logprob: -12.329830169677734

Token 19: 'isation' (ID: 6993)
  Prédit: 'ize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ize' → logprob: -0.025036854669451714
    2. 'ization' → logprob: -4.025036811828613
    3. 'ized' → logprob: -6.150036811828613
    4. 'iz' → logprob: -6.775036811828613
    5. 'i' → logprob: -7.025036811828613
    6. 'izing' → logprob: -7.650036811828613
    7. 'ly' → logprob: -7.900036811828613
    8. '   ' → logprob: -8.025036811828613
    9. ' ' → logprob: -8.025036811828613
    10. 'izer' → logprob: -8.400036811828613

Token 20: ' d' (ID: 272)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04778546094894409
    2. '       ' → logprob: -3.297785520553589
    3. ')' → logprob: -6.17278528213501
    4. 'self' → logprob: -6.42278528213501
    5. '):' → logprob: -6.42278528213501
    6. '   ' → logprob: -6.79778528213501
    7. ',' → logprob: -6.92278528213501
    8. ' :' → logprob: -7.04778528213501
    9. '(self' → logprob: -7.79778528213501
    10. ' self' → logprob: -8.047785758972168

Token 21: ''un' (ID: 9788)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.49302878975868225
    2. 'es' → logprob: -1.1180287599563599
    3. ''' → logprob: -3.3680288791656494
    4. 'u' → logprob: -3.9930288791656494
    5. ''un' → logprob: -5.49302864074707
    6. 'el' → logprob: -6.99302864074707
    7. ''u' → logprob: -7.11802864074707
    8. ' e' → logprob: -7.24302864074707
    9. ''une' → logprob: -7.49302864074707
    10. ''es' → logprob: -7.74302864074707

Token 22: ' tableau' (ID: 67053)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.04490910470485687
    2. ' parent' → logprob: -4.4199090003967285
    3. 'a' → logprob: -4.9199090003967285
    4. 'es' → logprob: -5.0449090003967285
    5. 's' → logprob: -5.2949090003967285
    6. 'parent' → logprob: -5.4199090003967285
    7. ' tableau' → logprob: -5.4199090003967285
    8. 'ion' → logprob: -7.2949090003967285
    9. ' e' → logprob: -7.4199090003967285
    10. 'f' → logprob: -7.6699090003967285

Token 23: ' parent' (ID: 5980)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.43796905875205994
    2. ' de' → logprob: -1.8129690885543823
    3. ' self' → logprob: -3.0629689693450928
    4. ' des' → logprob: -3.5629689693450928
    5. ' [' → logprob: -3.8129689693450928
    6. '_' → logprob: -3.8129689693450928
    7. ' of' → logprob: -4.062969207763672
    8. ' parent' → logprob: -4.687969207763672
    9. ' d' → logprob: -4.812969207763672
    10. '[]' → logprob: -5.187969207763672

Token 24: ' pour' (ID: 1930)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.40356990694999695
    2. ' =' → logprob: -1.2785699367523193
    3. '[' → logprob: -3.0285699367523193
    4. '_' → logprob: -6.40356969833374
    5. '   ' → logprob: -7.40356969833374
    6. '=[' → logprob: -7.52856969833374
    7. 's' → logprob: -7.90356969833374
    8. ',' → logprob: -7.90356969833374
    9. '[self' → logprob: -8.153570175170898
    10. '[:]' → logprob: -8.153570175170898

Token 25: ' union' (ID: 22208)
  Prédit: ' chaque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.08638426661491394
    2. ' range' → logprob: -3.2113842964172363
    3. ' each' → logprob: -4.336384296417236
    4. ' représ' → logprob: -4.461384296417236
    5. 'range' → logprob: -5.086384296417236
    6. 'each' → logprob: -6.086384296417236
    7. ' stock' → logprob: -6.211384296417236
    8. ' ' → logprob: -6.711384296417236
    9. '    ' → logprob: -7.211384296417236
    10. 're' → logprob: -7.336384296417236

Token 26: '-find' (ID: 168817)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2208749055862427
    2. '[' → logprob: -1.7208749055862427
    3. 's' → logprob: -2.595874786376953
    4. ':' → logprob: -2.720874786376953
    5. '[]' → logprob: -2.720874786376953
    6. '[-' → logprob: -3.095874786376953
    7. '```' → logprob: -3.595874786376953
    8. ' :' → logprob: -3.720874786376953
    9. ' =' → logprob: -3.720874786376953
    10. '_' → logprob: -3.720874786376953

Token 27: '
' (ID: 198)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.334022045135498
    2. ':' → logprob: -1.959022045135498
    3. '   ' → logprob: -1.959022045135498
    4. '[self' → logprob: -1.959022045135498
    5. '       ' → logprob: -2.334022045135498
    6. ' =' → logprob: -2.459022045135498
    7. '(self' → logprob: -3.209022045135498
    8. 'self' → logprob: -4.084022045135498
    9. ',' → logprob: -4.084022045135498
    10. ' self' → logprob: -4.209022045135498

Token 28: '       ' (ID: 309)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.385658621788025
    2. '       ' → logprob: -1.385658621788025
    3. '[self' → logprob: -1.885658621788025
    4. '   ' → logprob: -2.3856587409973145
    5. 'self' → logprob: -2.7606587409973145
    6. ' self' → logprob: -3.0106587409973145
    7. '(self' → logprob: -3.5106587409973145
    8. ' =' → logprob: -3.6356587409973145
    9. ':' → logprob: -3.6356587409973145
    10. ' [' → logprob: -3.7606587409973145

Token 29: ' self' (ID: 1051)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -1.1948728561401367
    2. ' self' → logprob: -1.1948728561401367
    3. '[' → logprob: -1.5698728561401367
    4. 'self' (adapté à ' self') → logprob: -1.8198728561401367
    5. '[self' → logprob: -4.569872856140137
    6. ' parent' → logprob: -5.194872856140137
    7. 'parent' → logprob: -6.069872856140137
    8. '   ' → logprob: -6.194872856140137
    9. ' ' → logprob: -6.319872856140137
    10. '[parent' → logprob: -7.194872856140137

Token 30: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -0.009662589058279991
    2. '.' → logprob: -5.509662628173828
    3. '._' → logprob: -5.634662628173828
    4. '.parents' → logprob: -6.509662628173828
    5. ' .' → logprob: -7.884662628173828
    6. '.p' → logprob: -10.009662628173828
    7. '.Parent' → logprob: -10.884662628173828
    8. '_parent' → logprob: -11.009662628173828
    9. 'parent' → logprob: -11.759662628173828
    10. '.user' → logprob: -12.759662628173828

Token 31: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20180116593837738
    2. '=' → logprob: -1.7018011808395386
    3. '[' → logprob: -7.951801300048828
    4. '[:]' → logprob: -11.451801300048828
    5. ' =[' → logprob: -11.451801300048828
    6. '=[' → logprob: -12.451801300048828
    7. ' ' → logprob: -12.451801300048828
    8. '=[]' → logprob: -13.076801300048828
    9. 's' → logprob: -13.951801300048828
    10. ']' → logprob: -14.076801300048828

Token 32: ' list' (ID: 1562)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.6100944876670837
    2. 'list' → logprob: -1.1100945472717285
    3. ' list' → logprob: -2.3600945472717285
    4. ' [' → logprob: -3.6100945472717285
    5. '[' → logprob: -5.2350945472717285
    6. '[-' → logprob: -8.48509407043457
    7. '[n' → logprob: -9.73509407043457
    8. '[parent' → logprob: -10.61009407043457
    9. '[List' → logprob: -10.86009407043457
    10. '[node' → logprob: -11.11009407043457

Token 33: '(range' (ID: 50017)
  Prédit: '(range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -2.629921436891891e-05
    2. '(' → logprob: -10.75002670288086
    3. 'range' → logprob: -12.75002670288086
    4. '([' → logprob: -13.50002670288086
    5. '[' → logprob: -15.75002670288086
    6. '	range' → logprob: -16.37502670288086
    7. '<|end|>' → logprob: -16.62502670288086
    8. ' range' → logprob: -16.87502670288086
    9. '(
' → logprob: -17.00002670288086
    10. '(

' → logprob: -17.62502670288086

Token 34: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00023119196703191847
    2. '(' → logprob: -8.37523078918457
    3. ')n' → logprob: -14.87523078918457
    4. 'n' → logprob: -15.37523078918457
    5. ')(' → logprob: -17.37523078918457
    6. ')' → logprob: -17.37523078918457
    7. ' (' → logprob: -17.87523078918457
    8. '	n' → logprob: -17.87523078918457
    9. ' n' → logprob: -18.12523078918457
    10. ',n' → logprob: -19.62523078918457

Token 35: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -3.4881879400927573e-05
    2. ')' → logprob: -11.000035285949707
    3. '))
' → logprob: -11.125035285949707
    4. ')))' → logprob: -12.875035285949707
    5. ' ))' → logprob: -14.250035285949707
    6. '()))' → logprob: -16.12503433227539
    7. '))

' → logprob: -17.25003433227539
    8. '       ' → logprob: -17.50003433227539
    9. ''))' → logprob: -17.62503433227539
    10. '+' → logprob: -17.75003433227539

Token 36: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8911314010620117
    2. '       ' → logprob: -1.1411314010620117
    3. '<|end|>' → logprob: -2.5161314010620117
    4. ')' → logprob: -2.7661314010620117
    5. '\n' → logprob: -3.6411314010620117
    6. '    
' → logprob: -3.8911314010620117
    7. '
' → logprob: -4.141131401062012
    8. '\' → logprob: -4.266131401062012
    9. ' 
' → logprob: -4.391131401062012
    10. ' ' → logprob: -4.516131401062012

Token 37: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.56388920545578
    2. ')' → logprob: -1.0638892650604248
    3. '   ' → logprob: -2.813889265060425
    4. ' ' → logprob: -4.813889026641846
    5. '
' → logprob: -5.313889026641846
    6. '<|end|>' → logprob: -5.938889026641846
    7. '\n' → logprob: -5.938889026641846
    8. '```' → logprob: -6.563889026641846
    9. ' )' → logprob: -6.938889026641846
    10. ')
' → logprob: -7.063889026641846

Token 38: '.rank' (ID: 96793)
  Prédit: '.parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -0.11168166249990463
    2. '.rank' → logprob: -3.2366816997528076
    3. '.size' → logprob: -3.3616816997528076
    4. '.' → logprob: -3.6116816997528076
    5. ' .' → logprob: -6.3616814613342285
    6. '.union' → logprob: -6.4866814613342285
    7. '.parents' → logprob: -7.9866814613342285
    8. '.children' → logprob: -8.486681938171387
    9. '.root' → logprob: -9.361681938171387
    10. '.child' → logprob: -9.736681938171387

Token 39: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0024843348655849695
    2. '=' → logprob: -6.252484321594238
    3. ' ' → logprob: -8.002484321594238
    4. '  ' → logprob: -9.502484321594238
    5. '[' → logprob: -9.627484321594238
    6. 's' → logprob: -9.752484321594238
    7. '<|end|>' → logprob: -11.752484321594238
    8. '   ' → logprob: -12.502484321594238
    9. ' =[' → logprob: -12.877484321594238
    10. '[:]' → logprob: -13.127484321594238

Token 40: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.5785419940948486
    2. '[' → logprob: -0.8285419940948486
    3. '[n' → logprob: -5.9535417556762695
    4. '[int' → logprob: -14.45354175567627
    5. ' ' → logprob: -14.82854175567627
    6. '0' → logprob: -14.95354175567627
    7. '([' → logprob: -15.45354175567627
    8. ' n' → logprob: -15.57854175567627
    9. 'n' → logprob: -15.57854175567627
    10. '[num' → logprob: -15.82854175567627

Token 41: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. '1' → logprob: -17.375
    3. ' ' → logprob: -17.75
    4. '   ' → logprob: -21.5
    5. '۰' → logprob: -22.375
    6. '０' → logprob: -24.75
    7. '٠' → logprob: -25.0
    8. '(' → logprob: -25.25
    9. '```' → logprob: -25.75
    10. '3' → logprob: -25.875

Token 42: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.015556336380541325
    2. ')' → logprob: -4.765556335449219
    3. ' ]' → logprob: -5.015556335449219
    4. ']*' → logprob: -9.015556335449219
    5. ' )' → logprob: -9.515556335449219
    6. ' for' → logprob: -10.515556335449219
    7. ' ' → logprob: -10.765556335449219
    8. ',' → logprob: -11.015556335449219
    9. '])' → logprob: -11.640556335449219
    10. ')]' → logprob: -12.390556335449219

Token 43: ' *' (ID: 425)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 44: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0011703446507453918
    2. ' n' → logprob: -6.7511701583862305
    3. '	n' → logprob: -16.001171112060547
    4. '   ' → logprob: -18.626171112060547
    5. '(n' → logprob: -18.626171112060547
    6. ')n' → logprob: -20.376171112060547
    7. ' н' → logprob: -22.126171112060547
    8. '    ' → logprob: -22.251171112060547
    9. '  ' → logprob: -22.251171112060547
    10. '_n' → logprob: -22.501171112060547

Token 45: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1627832055091858
    2. '<|end|>' → logprob: -2.162783145904541
    3. '   ' → logprob: -4.162783145904541
    4. '    
' → logprob: -4.787783145904541
    5. ' 
' → logprob: -5.787783145904541
    6. '\n' → logprob: -6.162783145904541
    7. '

' → logprob: -6.662783145904541
    8. '' → logprob: -7.037783145904541
    9. '       ' → logprob: -7.287783145904541
    10. 'n' → logprob: -7.412783145904541

Token 46: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06524927169084549
    2. '   ' → logprob: -3.81524920463562
    3. '    
' → logprob: -4.065249443054199
    4. ' 
' → logprob: -4.565249443054199
    5. '

' → logprob: -5.315249443054199
    6. 'n' → logprob: -6.440249443054199
    7. '' → logprob: -6.815249443054199
    8. '   
' → logprob: -6.940249443054199
    9. '\n' → logprob: -6.940249443054199
    10. ' ' → logprob: -7.065249443054199

Token 47: ' Pour' (ID: 13931)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 48: ' optimiser' (ID: 195777)
  Prédit: ' gérer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' gérer' → logprob: -0.13211344182491302
    2. ' l' → logprob: -3.632113456726074
    3. ' optimiser' → logprob: -3.632113456726074
    4. 'optim' → logprob: -4.007113456726074
    5. 'l' → logprob: -4.007113456726074
    6. ' gestion' → logprob: -4.507113456726074
    7. ' la' → logprob: -5.132113456726074
    8. ' ind' → logprob: -6.132113456726074
    9. ' faciliter' → logprob: -6.257113456726074
    10. ' maintenir' → logprob: -6.382113456726074

Token 49: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.13021814823150635
    2. 'les' → logprob: -2.630218029022217
    3. ' l' → logprob: -3.380218029022217
    4. 'l' → logprob: -4.630218029022217
    5. ' la' → logprob: -5.505218029022217
    6. ' union' → logprob: -7.630218029022217
    7. 'union' → logprob: -8.005218505859375
    8. 'la' → logprob: -8.005218505859375
    9. '<|end|>' → logprob: -8.505218505859375
    10. ' find' → logprob: -8.630218505859375

Token 50: ' unions' (ID: 63953)
  Prédit: ' recherches'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' recherches' → logprob: -1.187455415725708
    2. ' opérations' → logprob: -1.562455415725708
    3. 'f' → logprob: -1.687455415725708
    4. ' f' → logprob: -2.062455415725708
    5. 'un' → logprob: -3.687455415725708
    6. 're' → logprob: -4.062455177307129
    7. 'op' → logprob: -4.062455177307129
    8. 'union' → logprob: -4.187455177307129
    9. 'fusion' → logprob: -4.562455177307129
    10. ' ' → logprob: -4.812455177307129

Token 51: '
    
' (ID: 15698)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.26433977484703064
    2. '   ' → logprob: -2.1393396854400635
    3. 'def' → logprob: -3.1393396854400635
    4. '

' → logprob: -3.2643396854400635
    5. '<|end|>' → logprob: -4.389339923858643
    6. '    
' → logprob: -4.639339923858643
    7. ' def' → logprob: -5.014339923858643
    8. '```' → logprob: -7.014339923858643
    9. '<|end|>' → logprob: -7.014339923858643
    10. 'newline' → logprob: -8.014339447021484

Token 52: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.24290820956230164
    2. '   ' → logprob: -1.992908239364624
    3. ' def' → logprob: -2.742908239364624
    4. '    
' → logprob: -4.617908000946045
    5. '
' → logprob: -5.867908000946045
    6. '<|end|>' → logprob: -7.742908000946045
    7. '

' → logprob: -8.617908477783203
    8. '        
' → logprob: -8.617908477783203
    9. ' ' → logprob: -8.617908477783203
    10. '    

' → logprob: -8.742908477783203

Token 53: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.01141265593469143
    2. ' def' → logprob: -5.011412620544434
    3. '   ' → logprob: -5.386412620544434
    4. '
' → logprob: -10.261412620544434
    5. '    
' → logprob: -10.386412620544434
    6. ' ' → logprob: -11.011412620544434
    7. ' 
' → logprob: -12.261412620544434
    8. 'de' → logprob: -12.386412620544434
    9. '	def' → logprob: -12.386412620544434
    10. '```' → logprob: -13.261412620544434

Token 54: ' find' (ID: 1646)
  Prédit: ' find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' find' → logprob: -0.0008420264348387718
    2. ' ' → logprob: -7.375842094421387
    3. 'find' → logprob: -8.500842094421387
    4. '_find' → logprob: -12.375842094421387
    5. ' union' → logprob: -12.750842094421387
    6. '	find' → logprob: -13.250842094421387
    7. ' f' → logprob: -13.500842094421387
    8. ' def' → logprob: -14.375842094421387
    9. '  ' → logprob: -14.625842094421387
    10. ' fin' → logprob: -15.000842094421387

Token 55: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.14308281242847443
    2. '(self' → logprob: -2.018082857131958
    3. ' (' → logprob: -8.018082618713379
    4. '(s' → logprob: -10.518082618713379
    5. 'self' → logprob: -11.143082618713379
    6. '(x' → logprob: -11.393082618713379
    7. ' ' → logprob: -12.768082618713379
    8. '(a' → logprob: -13.018082618713379
    9. '(
' → logprob: -13.018082618713379
    10. '(

' → logprob: -13.268082618713379

Token 56: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5487203001976013
    2. ')' → logprob: -1.548720359802246
    3. '(x' → logprob: -2.048720359802246
    4. '(self' → logprob: -2.673720359802246
    5. ' )' → logprob: -5.798720359802246
    6. '(node' → logprob: -5.798720359802246
    7. '(a' → logprob: -6.298720359802246
    8. ' (' → logprob: -6.798720359802246
    9. ',' → logprob: -7.048720359802246
    10. 'self' → logprob: -7.548720359802246

Token 57: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.029914675280451775
    2. ' x' → logprob: -3.529914617538452
    3. 'self' → logprob: -8.904914855957031
    4. ' self' → logprob: -10.654914855957031
    5. 'i' → logprob: -13.529914855957031
    6. 'p' → logprob: -14.154914855957031
    7. 'node' → logprob: -14.404914855957031
    8. ' node' → logprob: -14.654914855957031
    9. 'a' → logprob: -14.654914855957031
    10. 'u' → logprob: -14.779914855957031

Token 58: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.001999058062210679
    2. ')' → logprob: -6.2519989013671875
    3. ' ):' → logprob: -9.876998901367188
    4. '):
' → logprob: -11.251998901367188
    5. ':' → logprob: -12.376998901367188
    6. '   ' → logprob: -14.001998901367188
    7. ' )' → logprob: -14.751998901367188
    8. '():' → logprob: -14.876998901367188
    9. '       ' → logprob: -16.126998901367188
    10. ' ' → logprob: -16.126998901367188

Token 59: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06688963621854782
    2. '       ' → logprob: -2.941889524459839
    3. '):' → logprob: -4.691889762878418
    4. ' :' → logprob: -6.941889762878418
    5. ':
' → logprob: -7.316889762878418
    6. '
' → logprob: -7.566889762878418
    7. '   ' → logprob: -8.566889762878418
    8. ')' → logprob: -8.941889762878418
    9. '):
' → logprob: -9.066889762878418
    10. '    ' → logprob: -10.316889762878418

Token 60: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5392978191375732
    2. ':' → logprob: -1.0392978191375732
    3. '
' → logprob: -3.6642978191375732
    4. 'if' → logprob: -4.539298057556152
    5. '   ' → logprob: -4.789298057556152
    6. ' if' → logprob: -5.414298057556152
    7. ':
' → logprob: -5.414298057556152
    8. '):' → logprob: -5.914298057556152
    9. ' :' → logprob: -6.164298057556152
    10. '```' → logprob: -6.664298057556152

Token 61: ' Recherche' (ID: 114815)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.20190520584583282
    2. 'if' → logprob: -1.7019052505493164
    3. '       ' → logprob: -7.701905250549316
    4. '   ' → logprob: -10.951905250549316
    5. ' while' → logprob: -11.451905250549316
    6. '    ' → logprob: -12.451905250549316
    7. 'while' → logprob: -12.826905250549316
    8. 'self' → logprob: -13.326905250549316
    9. ' self' → logprob: -14.201905250549316
    10. ' return' → logprob: -14.451905250549316

Token 62: ' réc' (ID: 36254)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.21314138174057007
    2. '(x' → logprob: -1.9631414413452148
    3. ' (' → logprob: -3.963141441345215
    4. ' ' → logprob: -4.338141441345215
    5. '(self' → logprob: -4.838141441345215
    6. ')' → logprob: -5.088141441345215
    7. '_' → logprob: -6.463141441345215
    8. '   ' → logprob: -6.838141441345215
    9. ',' → logprob: -6.963141441345215
    10. 'self' → logprob: -7.963141441345215

Token 63: 'ursive' (ID: 30543)
  Prédit: 'ursive'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursive' → logprob: -0.023602288216352463
    2. 'urs' → logprob: -3.898602247238159
    3. 'ur' → logprob: -6.023602485656738
    4. 'urse' → logprob: -9.023602485656738
    5. 'u' → logprob: -9.148602485656738
    6. 'ursion' → logprob: -9.273602485656738
    7. '   ' → logprob: -9.273602485656738
    8. 'ursively' → logprob: -9.273602485656738
    9. 'urrent' → logprob: -10.773602485656738
    10. '    ' → logprob: -11.023602485656738

Token 64: ' avec' (ID: 3937)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.536535918712616
    2. '       ' → logprob: -2.0365359783172607
    3. ' self' → logprob: -2.5365359783172607
    4. '   ' → logprob: -3.0365359783172607
    5. ':' → logprob: -3.1615359783172607
    6. 'self' → logprob: -3.5365359783172607
    7. ' x' → logprob: -4.161535739898682
    8. ' ' → logprob: -4.286535739898682
    9. ' :' → logprob: -4.411535739898682
    10. '(self' → logprob: -5.161535739898682

Token 65: ' compression' (ID: 41811)
  Prédit: ' compression'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' compression' → logprob: -0.505481481552124
    2. ' path' → logprob: -1.130481481552124
    3. 'compression' → logprob: -3.255481481552124
    4. 'path' → logprob: -3.630481481552124
    5. ' la' → logprob: -5.255481719970703
    6. 'l' → logprob: -7.505481719970703
    7. ' l' → logprob: -7.505481719970703
    8. ' compress' → logprob: -7.630481719970703
    9. ' chemin' → logprob: -7.755481719970703
    10. ' ' → logprob: -8.005481719970703

Token 66: ' de' (ID: 334)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.6728420853614807
    2. ' ' → logprob: -2.297842025756836
    3. ' des' → logprob: -2.422842025756836
    4. ' de' → logprob: -2.547842025756836
    5. ')' → logprob: -3.297842025756836
    6. '(' → logprob: -3.297842025756836
    7. '   ' → logprob: -3.422842025756836
    8. ' (' → logprob: -3.922842025756836
    9. 'des' → logprob: -4.547842025756836
    10. ' of' → logprob: -4.797842025756836

Token 67: ' chemin' (ID: 45035)
  Prédit: ' chemin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chemin' → logprob: -0.22740529477596283
    2. 'parent' → logprob: -2.352405309677124
    3. 'che' → logprob: -3.352405309677124
    4. 'le' → logprob: -3.852405309677124
    5. 'path' → logprob: -4.227405071258545
    6. ' parent' → logprob: -4.727405071258545
    7. 'l' → logprob: -4.977405071258545
    8. ' la' → logprob: -5.352405071258545
    9. ' path' → logprob: -5.852405071258545
    10. ' ' → logprob: -5.852405071258545

Token 68: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.187138631939888
    2. ':' → logprob: -2.187138557434082
    3. '   ' → logprob: -3.187138557434082
    4. '(' → logprob: -5.437138557434082
    5. ':
' → logprob: -6.062138557434082
    6. '(x' → logprob: -6.437138557434082
    7. '        
' → logprob: -6.562138557434082
    8. '
' → logprob: -6.937138557434082
    9. ' ' → logprob: -6.937138557434082
    10. ' :' → logprob: -7.312138557434082

Token 69: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.39691129326820374
    2. '       ' → logprob: -1.2719112634658813
    3. '
' → logprob: -4.271911144256592
    4. '   ' → logprob: -4.771911144256592
    5. ':
' → logprob: -4.896911144256592
    6. ' :' → logprob: -5.021911144256592
    7. ' 
' → logprob: -6.396911144256592
    8. '        
' → logprob: -6.396911144256592
    9. ' :
' → logprob: -6.771911144256592
    10. ' ' → logprob: -7.021911144256592

Token 70: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.2016327977180481
    2. ' if' → logprob: -1.7016327381134033
    3. '       ' → logprob: -8.451632499694824
    4. '   ' → logprob: -13.076632499694824
    5. 'return' → logprob: -13.326632499694824
    6. '	if' → logprob: -14.576632499694824
    7. 'self' → logprob: -14.701632499694824
    8. '```' → logprob: -14.826632499694824
    9. 'while' → logprob: -15.826632499694824
    10. ' return' → logprob: -16.20163345336914

Token 71: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.011087201535701752
    2. 'self' → logprob: -4.511087417602539
    3. ' x' → logprob: -11.011087417602539
    4. ' ' → logprob: -11.386087417602539
    5. '	self' → logprob: -11.886087417602539
    6. 'x' → logprob: -12.386087417602539
    7. ' ' → logprob: -15.511087417602539
    8. '(self' → logprob: -16.38608741760254
    9. '_self' → logprob: -16.63608741760254
    10. '   ' → logprob: -17.01108741760254

Token 72: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -8.65707261255011e-06
    2. '.' → logprob: -12.000008583068848
    3. 'parent' → logprob: -13.625008583068848
    4. ' .' → logprob: -13.750008583068848
    5. '.user' → logprob: -17.125009536743164
    6. '	parent' → logprob: -17.250009536743164
    7. '.parents' → logprob: -17.625009536743164
    8. '.root' → logprob: -18.000009536743164
    9. '.child' → logprob: -18.625009536743164
    10. '.x' → logprob: -18.625009536743164

Token 73: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -7.541112427134067e-05
    2. '[' → logprob: -9.500075340270996
    3. ' [' → logprob: -15.250075340270996
    4. 'x' → logprob: -16.750076293945312
    5. '[node' → logprob: -17.000076293945312
    6. '[
' → logprob: -17.250076293945312
    7. '[self' → logprob: -17.500076293945312
    8. '[i' → logprob: -18.500076293945312
    9. '[int' → logprob: -18.625076293945312
    10. ' x' → logprob: -18.625076293945312

Token 74: ']' (ID: 60)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.29250866174697876
    2. ']' → logprob: -1.917508602142334
    3. '!=' → logprob: -2.417508602142334
    4. ']!=' → logprob: -4.167508602142334
    5. ' ]' → logprob: -7.042508602142334
    6. ')' → logprob: -7.542508602142334
    7. ')!=' → logprob: -7.542508602142334
    8. ' ' → logprob: -10.167509078979492
    9. ' )' → logprob: -11.792509078979492
    10. '[' → logprob: -12.167509078979492

Token 75: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.25196781754493713
    2. ' !=' → logprob: -1.5019677877426147
    3. ']!=' → logprob: -10.876967430114746
    4. '==' → logprob: -11.501967430114746
    5. ')!=' → logprob: -12.376967430114746
    6. '()!=' → logprob: -13.376967430114746
    7. ' ==' → logprob: -13.876967430114746
    8. '!==' → logprob: -13.876967430114746
    9. ' ' → logprob: -14.251967430114746
    10. '!='' → logprob: -14.876967430114746

Token 76: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.1002068892121315
    2. 'x' → logprob: -2.3502068519592285
    3. '	x' → logprob: -15.225207328796387
    4. ' ' → logprob: -16.47520637512207
    5. ' ' → logprob: -18.60020637512207
    6. ')x' → logprob: -19.22520637512207
    7. '   ' → logprob: -20.72520637512207
    8. 'self' → logprob: -20.97520637512207
    9. '>x' → logprob: -20.97520637512207
    10. ''x' → logprob: -21.10020637512207

Token 77: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005593468667939305
    2. ':
' → logprob: -7.500559329986572
    3. ' :' → logprob: -12.37555980682373
    4. ':return' → logprob: -13.87555980682373
    5. '):' → logprob: -14.25055980682373
    6. ':**' → logprob: -16.125558853149414
    7. ':
' → logprob: -16.375558853149414
    8. ',' → logprob: -16.500558853149414
    9. ' :
' → logprob: -17.375558853149414
    10. ':def' → logprob: -17.750558853149414

Token 78: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04588009789586067
    2. ':
' → logprob: -3.170880079269409
    3. '       ' → logprob: -6.545880317687988
    4. '           ' → logprob: -6.920880317687988
    5. ' :' → logprob: -8.170880317687988
    6. ':return' → logprob: -9.420880317687988
    7. ' :
' → logprob: -10.420880317687988
    8. '   ' → logprob: -11.170880317687988
    9. ':
' → logprob: -11.670880317687988
    10. ':\' → logprob: -11.670880317687988

Token 79: ' self' (ID: 1051)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7064433693885803
    2. '
' → logprob: -1.9564433097839355
    3. ' self' → logprob: -1.9564433097839355
    4. '           ' → logprob: -2.0814433097839355
    5. 'self' (adapté à ' self') → logprob: -2.7064433097839355
    6. '            ' → logprob: -4.8314433097839355
    7. ' 
' → logprob: -5.0814433097839355
    8. ' =' → logprob: -5.9564433097839355
    9. ' ' → logprob: -6.2064433097839355
    10. '       ' → logprob: -6.2064433097839355

Token 80: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -0.002218891866505146
    2. '.' → logprob: -6.127218723297119
    3. 'parent' → logprob: -10.502219200134277
    4. ' .' → logprob: -12.377219200134277
    5. '.find' → logprob: -14.752219200134277
    6. '_parent' → logprob: -15.127219200134277
    7. '	parent' → logprob: -15.502219200134277
    8. '.Parent' → logprob: -15.877219200134277
    9. '.user' → logprob: -16.00221824645996
    10. ').' → logprob: -16.12721824645996

Token 81: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.00017982252757064998
    2. '[' → logprob: -8.6251802444458
    3. 'x' → logprob: -16.125179290771484
    4. ' [' → logprob: -17.250179290771484
    5. '[self' → logprob: -17.250179290771484
    6. '```' → logprob: -17.875179290771484
    7. '[user' → logprob: -18.125179290771484
    8. '[
' → logprob: -18.625179290771484
    9. '[int' → logprob: -18.875179290771484
    10. '[class' → logprob: -19.250179290771484

Token 82: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0027191643603146076
    2. '[x' → logprob: -6.252719402313232
    3. ' =' → logprob: -7.752719402313232
    4. ']=' → logprob: -8.877718925476074
    5. ' ]' → logprob: -9.252718925476074
    6. '=' → logprob: -9.627718925476074
    7. ')' → logprob: -9.877718925476074
    8. '[' → logprob: -12.377718925476074
    9. ' ' → logprob: -13.502718925476074
    10. '   ' → logprob: -13.752718925476074

Token 83: ' =' (ID: 314)
  Prédit: '[x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.7742994427680969
    2. ' =' → logprob: -1.3992993831634521
    3. '=' → logprob: -1.5242993831634521
    4. '[' → logprob: -2.649299383163452
    5. ']' → logprob: -5.899299621582031
    6. ' x' → logprob: -8.149299621582031
    7. '=x' → logprob: -8.524299621582031
    8. ' ' → logprob: -8.899299621582031
    9. ')' → logprob: -9.274299621582031
    10. 'x' → logprob: -10.024299621582031

Token 84: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.47407791018486023
    2. ' self' → logprob: -0.9740779399871826
    3. '(self' → logprob: -14.224078178405762
    4. '	self' → logprob: -16.599077224731445
    5. '[self' → logprob: -16.849077224731445
    6. 's' → logprob: -17.474077224731445
    7. ' ' → logprob: -17.849077224731445
    8. 'elf' → logprob: -17.974077224731445
    9. '    ' → logprob: -18.099077224731445
    10. '   ' → logprob: -18.349077224731445

Token 85: '.find' (ID: 4231)
  Prédit: '.find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.find' → logprob: -0.00037442712346091866
    2. '.' → logprob: -8.250374794006348
    3. ' .' → logprob: -10.250374794006348
    4. '.parent' → logprob: -10.500374794006348
    5. 'find' → logprob: -10.625374794006348
    6. '.findall' → logprob: -10.625374794006348
    7. ').' → logprob: -14.625374794006348
    8. '.f' → logprob: -15.250374794006348
    9. '.
' → logprob: -15.250374794006348
    10. 'parent' → logprob: -15.875374794006348

Token 86: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.07890113443136215
    2. '(' → logprob: -2.5789010524749756
    3. '(x' → logprob: -11.953901290893555
    4. '(
' → logprob: -12.703901290893555
    5. '(s' → logprob: -13.953901290893555
    6. '(parent' → logprob: -14.703901290893555
    7. '(

' → logprob: -15.328901290893555
    8. ' (' → logprob: -15.828901290893555
    9. '(this' → logprob: -16.203901290893555
    10. '((' → logprob: -16.328901290893555

Token 87: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -4.7159857786027715e-05
    2. 'parent' → logprob: -10.125046730041504
    3. '.' → logprob: -12.250046730041504
    4. '[x' → logprob: -14.000046730041504
    5. ' .' → logprob: -14.375046730041504
    6. ' parent' → logprob: -14.875046730041504
    7. '_parent' → logprob: -15.875046730041504
    8. ')' → logprob: -16.37504768371582
    9. '	parent' → logprob: -16.50004768371582
    10. '.
' → logprob: -16.50004768371582

Token 88: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.00037037418223917484
    2. '[' → logprob: -8.000370025634766
    3. 'x' → logprob: -10.875370025634766
    4. '(x' → logprob: -11.500370025634766
    5. '[
' → logprob: -12.750370025634766
    6. '[self' → logprob: -13.500370025634766
    7. ' x' → logprob: -14.625370025634766
    8. ' [' → logprob: -15.000370025634766
    9. '```' → logprob: -15.125370025634766
    10. ')' → logprob: -16.125370025634766

Token 89: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008064138819463551
    2. '[x' → logprob: -7.8758063316345215
    3. '))' → logprob: -8.12580680847168
    4. '])' → logprob: -9.37580680847168
    5. ' )' → logprob: -10.50080680847168
    6. ')x' → logprob: -11.75080680847168
    7. ')
' → logprob: -12.37580680847168
    8. ']' → logprob: -13.00080680847168
    9. ')`' → logprob: -14.12580680847168
    10. '       ' → logprob: -14.12580680847168

Token 90: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05600636079907417
    2. '       ' → logprob: -3.30600643157959
    3. 'return' → logprob: -5.18100643157959
    4. '\n' → logprob: -5.43100643157959
    5. ' return' → logprob: -5.80600643157959
    6. '    
' → logprob: -6.68100643157959
    7. '        
' → logprob: -6.93100643157959
    8. '  
' → logprob: -7.18100643157959
    9. ' 
' → logprob: -7.55600643157959
    10. '   
' → logprob: -8.30600643157959

Token 91: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7407729029655457
    2. 'return' (adapté à ' return') → logprob: -1.4907729625701904
    3. ' return' → logprob: -2.3657729625701904
    4. '\n' → logprob: -2.6157729625701904
    5. '
' → logprob: -2.7407729625701904
    6. '    
' → logprob: -4.115772724151611
    7. '   ' → logprob: -4.240772724151611
    8. ' 
' → logprob: -4.490772724151611
    9. '        
' → logprob: -5.240772724151611
    10. '\' → logprob: -5.240772724151611

Token 92: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.6931546330451965
    2. 'self' → logprob: -0.6931546330451965
    3. 'x' → logprob: -12.818154335021973
    4. '(self' → logprob: -12.818154335021973
    5. ' x' → logprob: -14.068154335021973
    6. ' ' → logprob: -14.443154335021973
    7. ' ' → logprob: -14.943154335021973
    8. '	self' → logprob: -15.568154335021973
    9. 's' → logprob: -16.19315528869629
    10. '   ' → logprob: -17.19315528869629

Token 93: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -2.8921695047756657e-05
    2. 'parent' → logprob: -11.000028610229492
    3. '.' → logprob: -11.375028610229492
    4. '_parent' → logprob: -15.750028610229492
    5. '[parent' → logprob: -15.750028610229492
    6. ' .' → logprob: -16.000028610229492
    7. '.x' → logprob: -16.375028610229492
    8. '	parent' → logprob: -16.500028610229492
    9. ' parent' → logprob: -16.625028610229492
    10. '.p' → logprob: -16.750028610229492

Token 94: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.0011793931480497122
    2. '[' → logprob: -6.751179218292236
    3. '[
' → logprob: -12.001179695129395
    4. ' [' → logprob: -13.001179695129395
    5. '```' → logprob: -15.876179695129395
    6. '[s' → logprob: -16.376178741455078
    7. 'x' → logprob: -16.501178741455078
    8. '[self' → logprob: -16.501178741455078
    9. '(x' → logprob: -16.626178741455078
    10. '   ' → logprob: -16.751178741455078

Token 95: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -6.630610641877865e-06
    2. ')
' → logprob: -12.375006675720215
    3. '}' → logprob: -13.500006675720215
    4. ' )' → logprob: -14.125006675720215
    5. '<|end|>' → logprob: -16.7500057220459
    6. ']' → logprob: -16.8750057220459
    7. ')}' → logprob: -17.5000057220459
    8. ')return' → logprob: -17.6250057220459
    9. '）' → logprob: -17.7500057220459
    10. '   ' → logprob: -18.3750057220459

Token 96: '    
' (ID: 1944)
  Prédit: '    
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    
' → logprob: -0.3116759657859802
    2. '
' → logprob: -1.936676025390625
    3. '   ' → logprob: -2.936676025390625
    4. ' 
' → logprob: -3.561676025390625
    5. '  
' → logprob: -4.186676025390625
    6. '<|end|>' → logprob: -4.186676025390625
    7. '   
' → logprob: -4.811676025390625
    8. '```' → logprob: -6.936676025390625
    9. ' ' → logprob: -7.686676025390625
    10. '        
' → logprob: -7.811676025390625

Token 97: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2949109673500061
    2. '    
' → logprob: -1.6699109077453613
    3. 'def' → logprob: -3.0449109077453613
    4. ' def' → logprob: -4.294910907745361
    5. '   
' → logprob: -6.294910907745361
    6. '  
' → logprob: -6.794910907745361
    7. '        
' → logprob: -7.419910907745361
    8. '```' → logprob: -7.419910907745361
    9. ' 
' → logprob: -7.669910907745361
    10. '
' → logprob: -7.669910907745361

Token 98: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -6.630610641877865e-06
    2. ' def' → logprob: -12.125006675720215
    3. '   ' → logprob: -14.250006675720215
    4. 'union' → logprob: -14.875006675720215
    5. '    
' → logprob: -16.5000057220459
    6. '
' → logprob: -19.1250057220459
    7. '	def' → logprob: -19.1250057220459
    8. 'de' → logprob: -19.3750057220459
    9. ' ' → logprob: -19.7500057220459
    10. '  
' → logprob: -19.8750057220459

Token 99: ' union' (ID: 22208)
  Prédit: ' union'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' union' → logprob: -0.008644120767712593
    2. 'union' → logprob: -4.758644104003906
    3. ' unite' → logprob: -10.508644104003906
    4. '_union' → logprob: -14.008644104003906
    5. '	union' → logprob: -14.383644104003906
    6. ' ' → logprob: -14.508644104003906
    7. '.union' → logprob: -15.383644104003906
    8. ' Union' → logprob: -16.508644104003906
    9. 'un' → logprob: -17.133644104003906
    10. ' unions' → logprob: -17.258644104003906

Token 100: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.20152921974658966
    2. '(self' → logprob: -1.7015292644500732
    3. ' (' → logprob: -9.201529502868652
    4. '(
' → logprob: -11.951529502868652
    5. '(s' → logprob: -12.451529502868652
    6. '(x' → logprob: -13.326529502868652
    7. ')' → logprob: -13.826529502868652
    8. ')(' → logprob: -14.451529502868652
    9. '(sel' → logprob: -15.076529502868652
    10. '(

' → logprob: -15.201529502868652

Token 101: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014990227296948433
    2. ' ,' → logprob: -4.514990329742432
    3. '(' → logprob: -6.139990329742432
    4. ')' → logprob: -6.639990329742432
    5. '(x' → logprob: -8.139989852905273
    6. '(self' → logprob: -9.639989852905273
    7. ' (' → logprob: -9.764989852905273
    8. ' ' → logprob: -10.264989852905273
    9. 'self' → logprob: -11.889989852905273
    10. ' )' → logprob: -12.264989852905273

Token 102: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.20516477525234222
    2. ' x' → logprob: -1.7051647901535034
    3. 'self' → logprob: -5.955164909362793
    4. ' self' → logprob: -7.455164909362793
    5. 'a' → logprob: -8.330164909362793
    6. 'u' → logprob: -8.455164909362793
    7. ' u' → logprob: -9.705164909362793
    8. ')' → logprob: -10.580164909362793
    9. ' a' → logprob: -10.830164909362793
    10. ' ' → logprob: -12.330164909362793

Token 103: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0206720617134124e-05
    2. ' ,' → logprob: -11.50001049041748
    3. ',
' → logprob: -17.625009536743164
    4. ')' → logprob: -19.125009536743164
    5. ',

' → logprob: -19.250009536743164
    6. '_,' → logprob: -19.500009536743164
    7. '‌,' → logprob: -19.500009536743164
    8. ',x' → logprob: -19.875009536743164
    9. ',b' → logprob: -20.375009536743164
    10. ',y' → logprob: -21.250009536743164

Token 104: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.3868713676929474
    2. 'y' → logprob: -1.136871337890625
    3. ' ' → logprob: -15.636871337890625
    4. '	y' → logprob: -16.136871337890625
    5. '   ' → logprob: -16.511871337890625
    6. '    ' → logprob: -17.261871337890625
    7. ' ' → logprob: -18.261871337890625
    8. ',' → logprob: -18.636871337890625
    9. ',y' → logprob: -19.136871337890625
    10. '  ' → logprob: -19.136871337890625

Token 105: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -7.350386295001954e-05
    2. ')' → logprob: -10.000073432922363
    3. '):
' → logprob: -10.750073432922363
    4. ' ):' → logprob: -12.000073432922363
    5. ':' → logprob: -15.000073432922363
    6. '):
' → logprob: -16.50007438659668
    7. ' ' → logprob: -18.25007438659668
    8. ')：' → logprob: -18.37507438659668
    9. '   ' → logprob: -18.62507438659668
    10. '):

' → logprob: -18.75007438659668

Token 106: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014171270653605461
    2. ':' → logprob: -4.889171123504639
    3. '(' → logprob: -5.889171123504639
    4. '   ' → logprob: -6.639171123504639
    5. ')' → logprob: -7.514171123504639
    6. '        ' → logprob: -8.139171600341797
    7. '(self' → logprob: -8.139171600341797
    8. '()' → logprob: -8.139171600341797
    9. '):' → logprob: -8.639171600341797
    10. '        
' → logprob: -9.264171600341797

Token 107: ' #' (ID: 1069)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.34992483258247375
    2. ' x' → logprob: -1.2249248027801514
    3. '
' → logprob: -7.8499250411987305
    4. '       ' → logprob: -7.9749250411987305
    5. 'root' → logprob: -8.22492504119873
    6. ' 
' → logprob: -8.84992504119873
    7. '        ' → logprob: -8.97492504119873
    8. ' root' → logprob: -9.47492504119873
    9. '	x' → logprob: -10.72492504119873
    10. '   ' → logprob: -11.22492504119873

Token 108: ' Union' (ID: 14746)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.6787703633308411
    2. 'x' → logprob: -1.0537703037261963
    3. ' root' → logprob: -2.3037703037261963
    4. ' x' → logprob: -3.6787703037261963
    5. '   ' → logprob: -4.803770542144775
    6. 'px' → logprob: -5.178770542144775
    7. ' px' → logprob: -6.053770542144775
    8. 'rx' → logprob: -6.803770542144775
    9. ' rx' → logprob: -7.053770542144775
    10. '       ' → logprob: -8.053770065307617

Token 109: ' par' (ID: 686)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.015868594869971275
    2. '       ' → logprob: -5.140868663787842
    3. '(self' → logprob: -5.390868663787842
    4. '(x' → logprob: -6.140868663787842
    5. ')' → logprob: -6.890868663787842
    6. ' (' → logprob: -7.140868663787842
    7. '   ' → logprob: -7.390868663787842
    8. '(
' → logprob: -8.015868186950684
    9. ',' → logprob: -8.390868186950684
    10. ':' → logprob: -9.640868186950684

Token 110: ' rang' (ID: 32287)
  Prédit: 'rank'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rank' → logprob: -0.07062025368213654
    2. 'rang' → logprob: -2.82062029838562
    3. ' rank' → logprob: -4.820620059967041
    4. ' rang' → logprob: -7.945620059967041
    5. '_rank' → logprob: -9.8206205368042
    6. 'r' → logprob: -9.9456205368042
    7. 'ran' → logprob: -10.8206205368042
    8. ' ' → logprob: -10.9456205368042
    9. '   ' → logprob: -11.3206205368042
    10. '
' → logprob: -11.3206205368042

Token 111: ' entre' (ID: 3853)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7973281145095825
    2. '(' → logprob: -1.0473281145095825
    3. '(x' → logprob: -1.6723281145095825
    4. '(self' → logprob: -4.922327995300293
    5. '(
' → logprob: -6.297327995300293
    6. ',' → logprob: -7.297327995300293
    7. ' (' → logprob: -8.172327995300293
    8. '   ' → logprob: -8.422327995300293
    9. ':' → logprob: -8.547327995300293
    10. ')' → logprob: -9.547327995300293

Token 112: ' deux' (ID: 10301)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.6432459354400635
    2. 'self' → logprob: -0.7682459354400635
    3. ' x' → logprob: -5.143245697021484
    4. 'x' → logprob: -5.768245697021484
    5. ')' → logprob: -6.768245697021484
    6. ' )' → logprob: -8.643245697021484
    7. '	self' → logprob: -9.768245697021484
    8. ' ' → logprob: -10.018245697021484
    9. '(self' → logprob: -10.018245697021484
    10. ' les' → logprob: -10.768245697021484

Token 113: ' compos' (ID: 14635)
  Prédit: ' rac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' rac' → logprob: -0.9901350736618042
    2. 'élé' → logprob: -1.6151350736618042
    3. 'rac' → logprob: -1.7401350736618042
    4. ' ' → logprob: -2.3651351928710938
    5. ' éléments' → logprob: -2.3651351928710938
    6. ' elements' → logprob: -4.490135192871094
    7. '   ' → logprob: -4.740135192871094
    8. 'r' → logprob: -4.740135192871094
    9. 'elements' → logprob: -5.240135192871094
    10. 'sets' → logprob: -5.615135192871094

Token 114: 'antes' (ID: 5193)
  Prédit: 'ants'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ants' → logprob: -0.28445523977279663
    2. 'antes' → logprob: -1.5344552993774414
    3. 'ant' → logprob: -4.159455299377441
    4. 'a' → logprob: -4.659455299377441
    5. ' ants' → logprob: -5.659455299377441
    6. 'ante' → logprob: -6.534455299377441
    7. 'an' → logprob: -7.284455299377441
    8. 's' → logprob: -8.159455299377441
    9. 'ents' → logprob: -8.159455299377441
    10. '_' → logprob: -8.534455299377441

Token 115: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11609238386154175
    2. '(' → logprob: -3.2410924434661865
    3. ':' → logprob: -3.4910924434661865
    4. '(x' → logprob: -4.116092205047607
    5. '   ' → logprob: -4.616092205047607
    6. ')' → logprob: -5.241092205047607
    7. ' (' → logprob: -5.616092205047607
    8. '(
' → logprob: -7.116092205047607
    9. ' :' → logprob: -7.241092205047607
    10. '        
' → logprob: -7.616092205047607

Token 116: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00029160623671486974
    2. ' x' → logprob: -9.50029182434082
    3. '   ' → logprob: -10.00029182434082
    4. '(x' → logprob: -10.00029182434082
    5. 'x' → logprob: -10.25029182434082
    6. '        
' → logprob: -10.75029182434082
    7. '
' → logprob: -11.25029182434082
    8. 'self' → logprob: -11.50029182434082
    9. ' (' → logprob: -11.62529182434082
    10. 'def' → logprob: -12.00029182434082

Token 117: ' rx' (ID: 37623)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.8546673059463501
    2. 'root' → logprob: -0.8546673059463501
    3. ' root' → logprob: -2.3546671867370605
    4. ' x' → logprob: -3.1046671867370605
    5. '   ' → logprob: -4.8546671867370605
    6. 'rx' (adapté à ' rx') → logprob: -7.2296671867370605
    7. '       ' → logprob: -8.229667663574219
    8. ' rx' → logprob: -8.354667663574219
    9. 'xr' → logprob: -8.604667663574219
    10. 'px' → logprob: -9.104667663574219

Token 118: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07151872664690018
    2. '=' → logprob: -2.696518659591675
    3. 'x' → logprob: -7.321518898010254
    4. ',' → logprob: -7.446518898010254
    5. '_x' → logprob: -8.821518898010254
    6. ' ' → logprob: -8.946518898010254
    7. '_' → logprob: -10.696518898010254
    8. ' ==' → logprob: -11.071518898010254
    9. ')' → logprob: -11.321518898010254
    10. '   ' → logprob: -13.321518898010254

Token 119: ' ry' (ID: 23218)
  Prédit: ' ry'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ry' → logprob: -0.0918169617652893
    2. 'ry' → logprob: -3.2168169021606445
    3. ' y' → logprob: -3.4668169021606445
    4. ' =' → logprob: -4.7168169021606445
    5. ' ' → logprob: -5.7168169021606445
    6. 'y' → logprob: -5.9668169021606445
    7. ' r' → logprob: -7.5918169021606445
    8. ' self' → logprob: -7.7168169021606445
    9. 'r' → logprob: -8.216816902160645
    10. '=' → logprob: -9.341816902160645

Token 120: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02324594371020794
    2. '=' → logprob: -3.7732460498809814
    3. ' ' → logprob: -15.398245811462402
    4. '=self' → logprob: -16.27324676513672
    5. ',' → logprob: -16.64824676513672
    6. ')' → logprob: -16.89824676513672
    7. ' =
' → logprob: -17.02324676513672
    8. ' =)' → logprob: -18.02324676513672
    9. ' ' → logprob: -18.64824676513672
    10. '  ' → logprob: -18.64824676513672

Token 121: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.160269632935524
    2. 'self' → logprob: -1.9102696180343628
    3. '(self' → logprob: -10.035269737243652
    4. ' ' → logprob: -14.160269737243652
    5. '[self' → logprob: -15.035269737243652
    6. '=self' → logprob: -15.660269737243652
    7. '
' → logprob: -15.910269737243652
    8. '	self' → logprob: -16.160268783569336
    9. ' 
' → logprob: -17.035268783569336
    10. ' ' → logprob: -17.035268783569336

Token 122: '.find' (ID: 4231)
  Prédit: '.find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.find' → logprob: -0.10094499588012695
    2. '.' → logprob: -2.350944995880127
    3. 'find' → logprob: -7.600944995880127
    4. '.findall' → logprob: -9.475944519042969
    5. '.parent' → logprob: -9.850944519042969
    6. ' .' → logprob: -10.475944519042969
    7. '.
' → logprob: -10.850944519042969
    8. ').' → logprob: -11.350944519042969
    9. '.)' → logprob: -11.850944519042969
    10. ')find' → logprob: -12.100944519042969

Token 123: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.12692853808403015
    2. '(' → logprob: -2.1269285678863525
    3. '(
' → logprob: -15.626928329467773
    4. ' (' → logprob: -15.626928329467773
    5. '((' → logprob: -17.001928329467773
    6. '(y' → logprob: -17.126928329467773
    7. ')' → logprob: -17.251928329467773
    8. 'x' → logprob: -18.251928329467773
    9. '()' → logprob: -18.376928329467773
    10. '(`' → logprob: -18.376928329467773

Token 124: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.00044556602369993925
    2. ')' → logprob: -7.875445365905762
    3. ' ),' → logprob: -9.750445365905762
    4. ',' → logprob: -11.875445365905762
    5. ')
' → logprob: -17.125446319580078
    6. ',),' → logprob: -18.125446319580078
    7. '),(' → logprob: -18.125446319580078
    8. ' ' → logprob: -18.750446319580078
    9. ' )' → logprob: -19.000446319580078
    10. '),
' → logprob: -19.000446319580078

Token 125: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.06218435615301132
    2. 'self' → logprob: -2.8121843338012695
    3. ' ' → logprob: -8.93718433380127
    4. 'y' → logprob: -10.43718433380127
    5. ' y' → logprob: -10.81218433380127
    6. '        ' → logprob: -11.93718433380127
    7. ' ' → logprob: -12.06218433380127
    8. '(self' → logprob: -12.31218433380127
    9. '<|end|>' → logprob: -12.31218433380127
    10. ' 
' → logprob: -12.43718433380127

Token 126: '.find' (ID: 4231)
  Prédit: '.find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.find' → logprob: -0.004045987036079168
    2. '.' → logprob: -5.6290459632873535
    3. 'find' → logprob: -8.004046440124512
    4. ' .' → logprob: -9.629046440124512
    5. ').' → logprob: -10.754046440124512
    6. '.
' → logprob: -12.004046440124512
    7. '.findall' → logprob: -12.129046440124512
    8. ')' → logprob: -13.004046440124512
    9. '(find' → logprob: -13.004046440124512
    10. ')find' → logprob: -13.504046440124512

Token 127: '(y' (ID: 14684)
  Prédit: '(y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.0003820524725597352
    2. '(' → logprob: -7.875381946563721
    3. ' (' → logprob: -13.375382423400879
    4. ')' → logprob: -15.250382423400879
    5. '(x' → logprob: -16.375381469726562
    6. '(
' → logprob: -17.125381469726562
    7. ' ' → logprob: -18.000381469726562
    8. 'y' → logprob: -18.000381469726562
    9. ')(' → logprob: -19.250381469726562
    10. '((' → logprob: -19.750381469726562

Token 128: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0010380487656220794
    2. ')
' → logprob: -6.876038074493408
    3. ' )' → logprob: -12.87603759765625
    4. ')
' → logprob: -13.37603759765625
    5. '<|end|>' → logprob: -14.50103759765625
    6. ')return' → logprob: -15.62603759765625
    7. '       ' → logprob: -16.12603759765625
    8. ')

' → logprob: -16.12603759765625
    9. '),' → logprob: -16.87603759765625
    10. '))' → logprob: -17.00103759765625

Token 129: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.007278861477971077
    2. '<|end|>' → logprob: -5.882278919219971
    3. ' 
' → logprob: -6.757278919219971
    4. '  
' → logprob: -6.882278919219971
    5. '       ' → logprob: -7.382278919219971
    6. 'if' → logprob: -7.757278919219971
    7. ' if' → logprob: -7.757278919219971
    8. '    
' → logprob: -8.007278442382812
    9. ')' → logprob: -9.507278442382812
    10. '        
' → logprob: -9.632278442382812

Token 130: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.7226914167404175
    2. ' if' → logprob: -0.7226914167404175
    3. '
' → logprob: -3.847691535949707
    4. '       ' → logprob: -5.597691535949707
    5. ' 
' → logprob: -6.347691535949707
    6. '        ' → logprob: -6.597691535949707
    7. ' ' → logprob: -7.597691535949707
    8. '        
' → logprob: -8.472691535949707
    9. '    ' → logprob: -9.347691535949707
    10. '	if' → logprob: -9.847691535949707

Token 131: ' rx' (ID: 37623)
  Prédit: ' rx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rx' → logprob: -0.0002658655575942248
    2. 'rx' → logprob: -8.250266075134277
    3. ' ' → logprob: -13.000266075134277
    4. '(rx' → logprob: -13.250266075134277
    5. ' ry' → logprob: -15.375266075134277
    6. ' ' → logprob: -16.87526512145996
    7. '_rx' → logprob: -17.00026512145996
    8. ' rv' → logprob: -17.25026512145996
    9. '  ' → logprob: -17.75026512145996
    10. ' r' → logprob: -17.75026512145996

Token 132: ' ==' (ID: 951)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.2423950433731079
    2. '!=' → logprob: -1.992395043373108
    3. ' ==' → logprob: -2.7423949241638184
    4. '==' → logprob: -4.242394924163818
    5. ' ' → logprob: -9.867395401000977
    6. '=' → logprob: -10.617395401000977
    7. ' ' → logprob: -12.117395401000977
    8. ']!=' → logprob: -13.117395401000977
    9. '	' → logprob: -13.367395401000977
    10. ')!=' → logprob: -13.492395401000977

Token 133: ' ry' (ID: 23218)
  Prédit: 'ry'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ry' → logprob: -0.6931495666503906
    2. ' ry' → logprob: -0.6931495666503906
    3. ' ' → logprob: -13.69314956665039
    4. 'ryd' → logprob: -15.31814956665039
    5. 'ryl' → logprob: -15.69314956665039
    6. '
' → logprob: -15.69314956665039
    7. '   ' → logprob: -16.44314956665039
    8. 'rying' → logprob: -16.56814956665039
    9. 'ryw' → logprob: -16.69314956665039
    10. 'rys' → logprob: -16.69314956665039

Token 134: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0015716375783085823
    2. ':return' → logprob: -6.6265716552734375
    3. ' :' → logprob: -8.626571655273438
    4. ':
' → logprob: -9.626571655273438
    5. '):' → logprob: -15.626571655273438
    6. ' :
' → logprob: -16.876571655273438
    7. ' return' → logprob: -16.876571655273438
    8. ':**' → logprob: -17.376571655273438
    9. 'return' → logprob: -17.626571655273438
    10. ')' → logprob: -17.751571655273438

Token 135: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009614535607397556
    2. '
' → logprob: -5.50961446762085
    3. ':' → logprob: -5.88461446762085
    4. ':return' → logprob: -6.88461446762085
    5. ' return' → logprob: -7.13461446762085
    6. 'return' → logprob: -7.25961446762085
    7. '       ' → logprob: -8.884614944458008
    8. '   ' → logprob: -10.384614944458008
    9. ':
' → logprob: -11.259614944458008
    10. '	return' → logprob: -11.884614944458008

Token 136: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.2884667217731476
    2. 'return' (adapté à ' return') → logprob: -1.7884666919708252
    3. '
' → logprob: -2.538466691970825
    4. '           ' → logprob: -5.788466930389404
    5. '       ' → logprob: -7.163466930389404
    6. ' 
' → logprob: -8.288466453552246
    7. ':return' → logprob: -8.413466453552246
    8. '	return' → logprob: -10.163466453552246
    9. '   ' → logprob: -10.913466453552246
    10. '               ' → logprob: -12.288466453552246

Token 137: ' False' (ID: 7983)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04640645161271095
    2. ' 
' → logprob: -3.5464065074920654
    3. '        
' → logprob: -4.296406269073486
    4. ' True' → logprob: -6.671406269073486
    5. '       ' → logprob: -7.796406269073486
    6. '  
' → logprob: -7.921406269073486
    7. 'True' → logprob: -7.921406269073486
    8. '    
' → logprob: -8.296406745910645
    9. '     
' → logprob: -9.796406745910645
    10. '         
' → logprob: -9.921406745910645

Token 138: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0023371162824332714
    2. '       ' → logprob: -7.1273369789123535
    3. '        
' → logprob: -7.7523369789123535
    4. '  
' → logprob: -8.252337455749512
    5. '<|end|>' → logprob: -8.252337455749512
    6. ' 
' → logprob: -8.502337455749512
    7. '    
' → logprob: -8.627337455749512
    8. '\n' → logprob: -9.127337455749512
    9. '
' → logprob: -10.502337455749512
    10. '   
' → logprob: -11.252337455749512

Token 139: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.014071004465222359
    2. '       ' → logprob: -4.889070987701416
    3. '  
' → logprob: -6.139070987701416
    4. '        
' → logprob: -6.264070987701416
    5. '    
' → logprob: -6.889070987701416
    6. '<|end|>' → logprob: -7.639070987701416
    7. ' 
' → logprob: -8.389071464538574
    8. '\n' → logprob: -8.514071464538574
    9. '   
' → logprob: -8.639071464538574
    10. '
' → logprob: -9.514071464538574

Token 140: ' Ils' (ID: 31199)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.4871901273727417
    2. ' False' → logprob: -1.2371901273727417
    3. 'False' → logprob: -2.7371902465820312
    4. 'True' → logprob: -3.4871902465820312
    5. '       ' → logprob: -10.112190246582031
    6. ' return' → logprob: -10.862190246582031
    7. ' None' → logprob: -10.987190246582031
    8. '    ' → logprob: -11.112190246582031
    9. '
' → logprob: -12.362190246582031
    10. ' ' → logprob: -12.987190246582031

Token 141: ' sont' (ID: 5242)
  Prédit: ' sont'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sont' → logprob: -0.07279816269874573
    2. ' are' → logprob: -3.322798252105713
    3. ' return' → logprob: -4.822798252105713
    4. ' restent' → logprob: -4.947798252105713
    5. ' continue' → logprob: -5.697798252105713
    6. ' appart' → logprob: -5.822798252105713
    7. ' ne' → logprob: -5.947798252105713
    8. 's' → logprob: -6.447798252105713
    9. ' ont' → logprob: -6.572798252105713
    10. ' already' → logprob: -7.072798252105713

Token 142: ' déjà' (ID: 21229)
  Prédit: 'dé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dé' → logprob: -0.6503065824508667
    2. ' déjà' → logprob: -0.7753065824508667
    3. ' already' → logprob: -5.025306701660156
    4. ' dé' → logprob: -5.525306701660156
    5. 'already' → logprob: -5.900306701660156
    6. ' deja' → logprob: -6.275306701660156
    7. 'd' → logprob: -6.525306701660156
    8. 'de' → logprob: -8.025306701660156
    9. 'dans' → logprob: -8.150306701660156
    10. ' d' → logprob: -9.400306701660156

Token 143: ' dans' (ID: 2671)
  Prédit: 'dans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dans' → logprob: -1.1038684844970703
    2. 'un' → logprob: -1.2288684844970703
    3. 'connect' → logprob: -1.2288684844970703
    4. ' dans' → logprob: -3.3538684844970703
    5. ' un' → logprob: -3.6038684844970703
    6. ' connect' → logprob: -4.47886848449707
    7. 'unis' → logprob: -5.60386848449707
    8. 'union' → logprob: -5.60386848449707
    9. 'conn' → logprob: -7.60386848449707
    10. ' in' → logprob: -7.97886848449707

Token 144: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.177109956741333
    2. 'la' → logprob: -1.927109956741333
    3. ' the' → logprob: -4.552109718322754
    4. ' ' → logprob: -6.302109718322754
    5. 'the' → logprob: -6.302109718322754
    6. 'le' → logprob: -6.302109718322754
    7. '   ' → logprob: -8.677109718322754
    8. ' ' → logprob: -8.927109718322754
    9. 'l' → logprob: -9.052109718322754
    10. 'leur' → logprob: -9.552109718322754

Token 145: ' même' (ID: 9679)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.041681595146656036
    2. ' même' → logprob: -3.2916815280914307
    3. '   ' → logprob: -7.29168176651001
    4. '```' → logprob: -7.54168176651001
    5. '  ' → logprob: -7.91668176651001
    6. ' ' → logprob: -8.166681289672852
    7. 'mme' → logprob: -8.166681289672852
    8. ' ' → logprob: -8.291681289672852
    9. '
' → logprob: -8.666681289672852
    10. 'mem' → logprob: -8.916681289672852

Token 146: ' compos' (ID: 14635)
  Prédit: ' compos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' compos' → logprob: -0.05026204511523247
    2. 'com' → logprob: -3.050261974334717
    3. ' ' → logprob: -6.800261974334717
    4. 'component' → logprob: -8.175262451171875
    5. '   ' → logprob: -9.675262451171875
    6. ' communauté' → logprob: -9.675262451171875
    7. ' component' → logprob: -10.050262451171875
    8. 'classe' → logprob: -10.550262451171875
    9. ' comp' → logprob: -11.050262451171875
    10. 'comp' → logprob: -11.050262451171875

Token 147: 'ante' (ID: 2116)
  Prédit: 'ante'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ante' → logprob: -0.0015499753644689918
    2. 'ant' → logprob: -6.751550197601318
    3. ' ante' → logprob: -8.87654972076416
    4. 'on' → logprob: -10.12654972076416
    5. 'an' → logprob: -10.12654972076416
    6. 'a' → logprob: -10.75154972076416
    7. '   ' → logprob: -11.00154972076416
    8. 'anted' → logprob: -11.37654972076416
    9. 'Ante' → logprob: -11.50154972076416
    10. 'anten' → logprob: -11.50154972076416

Token 148: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0074704475700855255
    2. '       ' → logprob: -5.382470607757568
    3. '        
' → logprob: -7.132470607757568
    4. '<|end|>' → logprob: -7.257470607757568
    5. '  
' → logprob: -7.382470607757568
    6. '    
' → logprob: -8.00747013092041
    7. '\n' → logprob: -8.75747013092041
    8. ' 
' → logprob: -9.38247013092041
    9. '
' → logprob: -10.13247013092041
    10. '   
' → logprob: -10.75747013092041

Token 149: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.26437827944755554
    2. '       ' → logprob: -1.889378309249878
    3. '        
' → logprob: -2.639378309249878
    4. '    
' → logprob: -5.014378070831299
    5. ' 
' → logprob: -6.264378070831299
    6. '  
' → logprob: -7.389378070831299
    7. '   
' → logprob: -8.514378547668457
    8. '       
' → logprob: -8.639378547668457
    9. '
' → logprob: -10.264378547668457
    10. '     
' → logprob: -10.389378547668457

Token 150: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.031647343188524246
    2. 'if' (adapté à ' if') → logprob: -3.5316474437713623
    3. '       ' → logprob: -6.281647205352783
    4. '    ' → logprob: -12.031647682189941
    5. '        ' → logprob: -12.156647682189941
    6. '   ' → logprob: -12.281647682189941
    7. '	if' → logprob: -12.781647682189941
    8. '        
' → logprob: -12.781647682189941
    9. ' elif' → logprob: -13.781647682189941
    10. '
' → logprob: -14.031647682189941

Token 151: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.1602369248867035
    2. 'self' → logprob: -1.9102369546890259
    3. '	self' → logprob: -11.785237312316895
    4. '(self' → logprob: -13.035237312316895
    5. ' ' → logprob: -13.910237312316895
    6. '[self' → logprob: -14.285237312316895
    7. '   ' → logprob: -14.785237312316895
    8. 's' → logprob: -14.910237312316895
    9. ':self' → logprob: -16.035236358642578
    10. ' ' → logprob: -16.035236358642578

Token 152: '.rank' (ID: 96793)
  Prédit: '.rank'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.rank' → logprob: -3.173704271830502e-06
    2. 'rank' → logprob: -13.50000286102295
    3. '.' → logprob: -14.12500286102295
    4. '.r' → logprob: -14.50000286102295
    5. ' .' → logprob: -14.87500286102295
    6. ' rank' → logprob: -17.000003814697266
    7. '.parent' → logprob: -17.500003814697266
    8. '
' → logprob: -18.125003814697266
    9. '.rate' → logprob: -19.500003814697266
    10. '(rank' → logprob: -19.875003814697266

Token 153: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.7432603272027336e-06
    2. ' [' → logprob: -13.375001907348633
    3. ' rx' → logprob: -16.625001907348633
    4. '(rx' → logprob: -17.250001907348633
    5. 'rx' → logprob: -17.625001907348633
    6. ' ' → logprob: -19.000001907348633
    7. '[
' → logprob: -19.625001907348633
    8. '[self' → logprob: -20.875001907348633
    9. '```' → logprob: -21.000001907348633
    10. '_rx' → logprob: -21.000001907348633

Token 154: 'rx' (ID: 26910)
  Prédit: 'rx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rx' → logprob: -1.8312570318812504e-05
    2. ' rx' → logprob: -11.000018119812012
    3. '[' → logprob: -13.500018119812012
    4. '(rx' → logprob: -16.250019073486328
    5. '_rx' → logprob: -17.750019073486328
    6. ']' → logprob: -17.875019073486328
    7. 'ry' → logprob: -18.000019073486328
    8. ' ' → logprob: -18.125019073486328
    9. 'tx' → logprob: -18.500019073486328
    10. 'Rx' → logprob: -19.375019073486328

Token 155: ']' (ID: 60)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.31983402371406555
    2. '<' → logprob: -1.3198339939117432
    3. ']' → logprob: -5.069834232330322
    4. ']<' → logprob: -8.819833755493164
    5. ' ' → logprob: -9.569833755493164
    6. ' ]' → logprob: -10.694833755493164
    7. '>' → logprob: -11.569833755493164
    8. ')' → logprob: -12.194833755493164
    9. '[' → logprob: -12.444833755493164
    10. ' >' → logprob: -13.819833755493164

Token 156: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.01816949062049389
    2. '<' → logprob: -4.018169403076172
    3. ' ' → logprob: -11.018169403076172
    4. ' >' → logprob: -14.018169403076172
    5. '<class' → logprob: -15.018169403076172
    6. '>' → logprob: -15.143169403076172
    7. '[' → logprob: -15.268169403076172
    8. '<int' → logprob: -15.393169403076172
    9. ' ' → logprob: -15.643169403076172
    10. '<size' → logprob: -15.893169403076172

Token 157: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.12693262100219727
    2. 'self' → logprob: -2.1269326210021973
    3. '	self' → logprob: -12.876932144165039
    4. ' ' → logprob: -14.251932144165039
    5. '
' → logprob: -15.126932144165039
    6. '=self' → logprob: -15.376932144165039
    7. '[self' → logprob: -15.376932144165039
    8. '    ' → logprob: -15.751932144165039
    9. '   ' → logprob: -16.12693214416504
    10. '(self' → logprob: -16.25193214416504

Token 158: '.rank' (ID: 96793)
  Prédit: '.rank'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.rank' → logprob: -0.5420591831207275
    2. 'rank' → logprob: -0.9170591831207275
    3. ' rank' → logprob: -4.042058944702148
    4. '_rank' → logprob: -6.792058944702148
    5. ' .' → logprob: -10.542058944702148
    6. '.' → logprob: -11.042058944702148
    7. '[' → logprob: -11.417058944702148
    8. 'Rank' → logprob: -12.167058944702148
    9. '(rank' → logprob: -12.417058944702148
    10. 'self' → logprob: -12.667058944702148

Token 159: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.2200749754119897e-06
    2. ' ry' → logprob: -13.375001907348633
    3. ' [' → logprob: -14.750001907348633
    4. 'ry' → logprob: -16.250001907348633
    5. '[
' → logprob: -17.000001907348633
    6. '```' → logprob: -18.500001907348633
    7. '[r' → logprob: -19.250001907348633
    8. '   ' → logprob: -19.500001907348633
    9. ' ' → logprob: -19.500001907348633
    10. '][' → logprob: -19.750001907348633

Token 160: 'ry' (ID: 1102)
  Prédit: 'ry'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ry' → logprob: -2.816093228830141e-06
    2. ' ry' → logprob: -12.87500286102295
    3. '[' → logprob: -17.375001907348633
    4. '
' → logprob: -17.500001907348633
    5. ']' → logprob: -17.500001907348633
    6. 'ryl' → logprob: -19.250001907348633
    7. '

' → logprob: -19.375001907348633
    8. 'rying' → logprob: -19.375001907348633
    9. 'ryd' → logprob: -19.500001907348633
    10. 'RY' → logprob: -19.625001907348633

Token 161: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5309915542602539
    2. ']:' → logprob: -0.9059915542602539
    3. '):' → logprob: -5.530991554260254
    4. ']:
' → logprob: -6.155991554260254
    5. ':
' → logprob: -6.780991554260254
    6. ']' → logprob: -8.530991554260254
    7. ' :' → logprob: -8.905991554260254
    8. '):
' → logprob: -9.280991554260254
    9. '}:' → logprob: -9.655991554260254
    10. '>:' → logprob: -9.655991554260254

Token 162: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.230369433760643
    2. ':
' → logprob: -1.8553694486618042
    3. '           ' → logprob: -3.8553693294525146
    4. '       ' → logprob: -4.605369567871094
    5. ')' → logprob: -5.105369567871094
    6. 'parent' → logprob: -6.355369567871094
    7. '):' → logprob: -6.480369567871094
    8. '
' → logprob: -6.730369567871094
    9. '):
' → logprob: -6.855369567871094
    10. 'self' → logprob: -7.105369567871094

Token 163: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.4741007089614868
    2. ' self' → logprob: -0.9741007089614868
    3. '           ' → logprob: -11.599101066589355
    4. '	self' → logprob: -12.474101066589355
    5. '[self' → logprob: -12.599101066589355
    6. '
' → logprob: -12.724101066589355
    7. 'parent' → logprob: -13.724101066589355
    8. '       ' → logprob: -13.724101066589355
    9. '_self' → logprob: -14.849101066589355
    10. '=self' → logprob: -15.224101066589355

Token 164: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -9.114600834436715e-05
    2. '.' → logprob: -10.000091552734375
    3. 'parent' → logprob: -10.125091552734375
    4. ' .' → logprob: -13.750091552734375
    5. '[parent' → logprob: -13.750091552734375
    6. '	parent' → logprob: -14.000091552734375
    7. '.parents' → logprob: -14.375091552734375
    8. ',parent' → logprob: -14.750091552734375
    9. '_parent' → logprob: -15.000091552734375
    10. 'Parent' → logprob: -15.625091552734375

Token 165: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.128163257315464e-07
    2. ' [' → logprob: -15.625
    3. '[r' → logprob: -16.625
    4. '```' → logprob: -17.625
    5. '[x' → logprob: -17.75
    6. '(rx' → logprob: -18.5
    7. 'rx' → logprob: -18.875
    8. '[self' → logprob: -19.625
    9. ' rx' → logprob: -19.875
    10. '][' → logprob: -19.875

Token 166: 'rx' (ID: 26910)
  Prédit: 'rx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rx' → logprob: -3.941161776310764e-05
    2. ' rx' → logprob: -10.500039100646973
    3. 'ry' → logprob: -11.375039100646973
    4. '[' → logprob: -15.000039100646973
    5. '_rx' → logprob: -16.87504005432129
    6. 'Rx' → logprob: -17.25004005432129
    7. '(rx' → logprob: -17.25004005432129
    8. 'tx' → logprob: -17.75004005432129
    9. 'rv' → logprob: -18.12504005432129
    10. ' ' → logprob: -19.50004005432129

Token 167: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0020869735162705183
    2. ']=' → logprob: -6.377087116241455
    3. ' ]' → logprob: -7.877087116241455
    4. '=' → logprob: -12.502086639404297
    5. ' =' → logprob: -13.627086639404297
    6. '[' → logprob: -15.627086639404297
    7. ')' → logprob: -15.877086639404297
    8. ']+=' → logprob: -16.002086639404297
    9. ']
' → logprob: -16.752086639404297
    10. ']==' → logprob: -17.752086639404297

Token 168: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38687199354171753
    2. '=' → logprob: -1.1368720531463623
    3. '=s' → logprob: -15.511872291564941
    4. '=y' → logprob: -15.636872291564941
    5. ' ' → logprob: -15.761872291564941
    6. '＝' → logprob: -16.636871337890625
    7. ' =
' → logprob: -16.636871337890625
    8. '=x' → logprob: -17.011871337890625
    9. ']=' → logprob: -17.386871337890625
    10. '=r' → logprob: -17.511871337890625

Token 169: ' ry' (ID: 23218)
  Prédit: 'ry'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ry' → logprob: -0.31326204538345337
    2. ' ry' → logprob: -1.3132619857788086
    3. ' ' → logprob: -16.063262939453125
    4. ' ' → logprob: -16.563262939453125
    5. ' y' → logprob: -17.813262939453125
    6. 'Ry' → logprob: -18.438262939453125
    7. 'ryd' → logprob: -18.438262939453125
    8. ' 
' → logprob: -18.563262939453125
    9. ' Ry' → logprob: -18.688262939453125
    10. '
' → logprob: -18.688262939453125

Token 170: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.29781049489974976
    2. 'else' → logprob: -1.5478105545043945
    3. '
' → logprob: -3.5478105545043945
    4. ' else' → logprob: -4.1728105545043945
    5. 'elif' → logprob: -8.547810554504395
    6. '    
' → logprob: -8.672810554504395
    7. '        
' → logprob: -9.047810554504395
    8. '  
' → logprob: -10.047810554504395
    9. '   ' → logprob: -10.172810554504395
    10. 'return' → logprob: -11.297810554504395

Token 171: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4318523705005646
    2. 'else' → logprob: -1.1818523406982422
    3. ' else' → logprob: -3.556852340698242
    4. '
' → logprob: -4.181852340698242
    5. '   ' → logprob: -9.556852340698242
    6. '    
' → logprob: -10.056852340698242
    7. '        
' → logprob: -10.931852340698242
    8. 'elif' → logprob: -11.181852340698242
    9. '           ' → logprob: -11.931852340698242
    10. '	else' → logprob: -12.056852340698242

Token 172: ' elif' (ID: 9497)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.20183661580085754
    2. ' else' → logprob: -1.7018365859985352
    3. '       ' → logprob: -7.826836585998535
    4. 'elif' (adapté à ' elif') → logprob: -10.826836585998535
    5. '   ' → logprob: -12.951836585998535
    6. '	else' → logprob: -13.576836585998535
    7. ' elif' → logprob: -14.201836585998535
    8. '_else' → logprob: -16.57683753967285
    9. '
' → logprob: -17.20183753967285
    10. 'els' → logprob: -17.32683753967285

Token 173: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.47408682107925415
    2. 'self' → logprob: -0.9740868210792542
    3. '	self' → logprob: -12.59908676147461
    4. ' ' → logprob: -13.22408676147461
    5. '(self' → logprob: -13.22408676147461
    6. '[self' → logprob: -13.59908676147461
    7. '   ' → logprob: -14.59908676147461
    8. ' ' → logprob: -14.97408676147461
    9. '    ' → logprob: -16.09908676147461
    10. 's' → logprob: -16.22408676147461

Token 174: '.rank' (ID: 96793)
  Prédit: '.rank'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.rank' → logprob: -6.869017852295656e-06
    2. 'rank' → logprob: -12.000006675720215
    3. ' rank' → logprob: -14.875006675720215
    4. ' .' → logprob: -15.875006675720215
    5. '.' → logprob: -16.12500762939453
    6. '_rank' → logprob: -19.37500762939453
    7. '(rank' → logprob: -19.37500762939453
    8. '.r' → logprob: -19.75000762939453
    9. '.parent' → logprob: -19.87500762939453
    10. 'Rank' → logprob: -21.25000762939453

Token 175: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.3856492842023727e-06
    2. ' [' → logprob: -13.750000953674316
    3. '[
' → logprob: -16.000001907348633
    4. '[r' → logprob: -16.875001907348633
    5. '```' → logprob: -18.125001907348633
    6. ' ' → logprob: -18.375001907348633
    7. '(rx' → logprob: -18.375001907348633
    8. '
' → logprob: -18.750001907348633
    9. '

' → logprob: -18.750001907348633
    10. '>[' → logprob: -19.750001907348633

Token 176: 'ry' (ID: 1102)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.03410342335700989
    2. 'ry' → logprob: -3.7841033935546875
    3. 'rx' → logprob: -4.5341033935546875
    4. ' ry' → logprob: -9.784103393554688
    5. ' rx' → logprob: -12.534103393554688
    6. ' [' → logprob: -13.159103393554688
    7. 'r' → logprob: -15.534103393554688
    8. ' ' → logprob: -16.034103393554688
    9. '[
' → logprob: -16.159103393554688
    10. '   ' → logprob: -16.409103393554688

Token 177: ']' (ID: 60)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.008366227149963379
    2. '<' → logprob: -5.008366107940674
    3. '[' → logprob: -6.508366107940674
    4. ']' → logprob: -9.383366584777832
    5. ']<' → logprob: -10.383366584777832
    6. ' >' → logprob: -10.758366584777832
    7. '>' → logprob: -12.133366584777832
    8. ' ' → logprob: -12.633366584777832
    9. ' [' → logprob: -12.633366584777832
    10. ' <
' → logprob: -12.758366584777832

Token 178: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.033685699105262756
    2. '<' → logprob: -3.4086856842041016
    3. ' >' → logprob: -10.283685684204102
    4. '>' → logprob: -12.908685684204102
    5. '[' → logprob: -13.033685684204102
    6. ' <
' → logprob: -14.783685684204102
    7. ' ' → logprob: -15.408685684204102
    8. '<int' → logprob: -16.2836856842041
    9. '<class' → logprob: -16.6586856842041
    10. ']' → logprob: -16.9086856842041

Token 179: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.4869846701622009
    2. 'self' → logprob: -0.9869846701622009
    3. ' rx' → logprob: -4.486984729766846
    4. 'rx' → logprob: -6.736984729766846
    5. '[self' → logprob: -8.486984252929688
    6. '[' → logprob: -8.861984252929688
    7. ' ry' → logprob: -10.986984252929688
    8. ' ' → logprob: -12.611984252929688
    9. '	self' → logprob: -12.736984252929688
    10. '=self' → logprob: -13.236984252929688

Token 180: '.rank' (ID: 96793)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00020389800192788243
    2. 'rx' → logprob: -9.125204086303711
    3. 'rank' → logprob: -9.375204086303711
    4. ' [' → logprob: -12.000204086303711
    5. ' rx' → logprob: -12.750204086303711
    6. ' rank' → logprob: -15.000204086303711
    7. 'Rank' → logprob: -15.625204086303711
    8. '[
' → logprob: -15.750204086303711
    9. '```' → logprob: -15.875204086303711
    10. '.rank' → logprob: -16.37520408630371

Token 181: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.7697225252486533e-06
    2. '       ' → logprob: -13.250003814697266
    3. '```' → logprob: -14.000003814697266
    4. ' [' → logprob: -14.500003814697266
    5. '][' → logprob: -16.000003814697266
    6. '   ' → logprob: -16.125003814697266
    7. ')[' → logprob: -16.750003814697266
    8. '[
' → logprob: -16.875003814697266
    9. ']' → logprob: -16.875003814697266
    10. '}[' → logprob: -17.625003814697266

Token 182: 'rx' (ID: 26910)
  Prédit: 'rx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rx' → logprob: -0.0005710251862183213
    2. ' rx' → logprob: -7.500571250915527
    3. '[' → logprob: -11.000571250915527
    4. 'x' → logprob: -14.500571250915527
    5. '_rx' → logprob: -15.375571250915527
    6. 'tx' → logprob: -15.875571250915527
    7. 'Rx' → logprob: -16.12557029724121
    8. '(rx' → logprob: -16.12557029724121
    9. '
' → logprob: -16.25057029724121
    10. ' ' → logprob: -16.37557029724121

Token 183: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02157399244606495
    2. ':
' → logprob: -3.896574020385742
    3. '):' → logprob: -8.021574020385742
    4. '       ' → logprob: -8.021574020385742
    5. '):
' → logprob: -8.771574020385742
    6. ' :' → logprob: -8.896574020385742
    7. ']:' → logprob: -9.896574020385742
    8. ' :
' → logprob: -11.271574020385742
    9. ']:
' → logprob: -12.146574020385742
    10. '           ' → logprob: -12.271574020385742

Token 184: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2741715908050537
    2. ':' → logprob: -1.5241715908050537
    3. ':
' → logprob: -4.274171829223633
    4. '       ' → logprob: -5.024171829223633
    5. 'self' → logprob: -7.399171829223633
    6. '   ' → logprob: -7.899171829223633
    7. ' self' → logprob: -8.399171829223633
    8. ' :' → logprob: -9.899171829223633
    9. ':self' → logprob: -10.399171829223633
    10. '               ' → logprob: -10.649171829223633

Token 185: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.19373032450675964
    2. ' self' → logprob: -1.818730354309082
    3. '           ' → logprob: -4.443730354309082
    4. '       ' → logprob: -6.693730354309082
    5. '
' → logprob: -7.693730354309082
    6. '[self' → logprob: -8.318730354309082
    7. '	self' → logprob: -9.943730354309082
    8. '               ' → logprob: -10.568730354309082
    9. '   ' → logprob: -10.568730354309082
    10. '(self' → logprob: -10.693730354309082

Token 186: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -6.897412822581828e-05
    2. 'parent' → logprob: -9.625068664550781
    3. '.' → logprob: -13.500068664550781
    4. '[parent' → logprob: -13.625068664550781
    5. '	parent' → logprob: -16.00006866455078
    6. ' parent' → logprob: -16.25006866455078
    7. '_parent' → logprob: -16.87506866455078
    8. ' .' → logprob: -17.00006866455078
    9. ',parent' → logprob: -17.87506866455078
    10. '.Parent' → logprob: -18.87506866455078

Token 187: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.9361264946837764e-07
    2. ' [' → logprob: -15.75
    3. '   ' → logprob: -19.25
    4. '       ' → logprob: -19.75
    5. 'ry' → logprob: -20.375
    6. '```' → logprob: -20.625
    7. '[r' → logprob: -20.875
    8. ' ry' → logprob: -21.0
    9. '﻿' → logprob: -21.125
    10. '[root' → logprob: -21.375

Token 188: 'ry' (ID: 1102)
  Prédit: 'ry'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ry' → logprob: -0.009042556397616863
    2. 'rx' → logprob: -4.759042739868164
    3. ' ry' → logprob: -7.759042739868164
    4. '[' → logprob: -14.259042739868164
    5. ' rx' → logprob: -15.759042739868164
    6. '   ' → logprob: -15.884042739868164
    7. ' ' → logprob: -17.509042739868164
    8. 'Ry' → logprob: -17.759042739868164
    9. '     ' → logprob: -18.384042739868164
    10. '
' → logprob: -18.509042739868164

Token 189: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.08930779993534088
    2. '=' → logprob: -3.4643077850341797
    3. ' =' → logprob: -3.5893077850341797
    4. ']=' → logprob: -3.8393077850341797
    5. ' ]' → logprob: -5.33930778503418
    6. '[' → logprob: -8.58930778503418
    7. ')' → logprob: -10.71430778503418
    8. ')=' → logprob: -13.08930778503418
    9. ' ' → logprob: -13.46430778503418
    10. ' )' → logprob: -14.08930778503418

Token 190: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04858771339058876
    2. ' =' → logprob: -3.0485877990722656
    3. ']=' → logprob: -15.923587799072266
    4. '[' → logprob: -16.673587799072266
    5. ']' → logprob: -17.173587799072266
    6. ')' → logprob: -17.298587799072266
    7. ')=' → logprob: -17.923587799072266
    8. '=
' → logprob: -18.673587799072266
    9. '=

' → logprob: -19.173587799072266
    10. '=s' → logprob: -19.298587799072266

Token 191: ' rx' (ID: 37623)
  Prédit: 'rx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rx' → logprob: -0.2519293427467346
    2. ' rx' → logprob: -1.5019292831420898
    3. '_rx' → logprob: -16.251930236816406
    4. '(rx' → logprob: -16.251930236816406
    5. '.rx' → logprob: -17.126930236816406
    6. 'tx' → logprob: -18.126930236816406
    7. 'Rx' → logprob: -18.251930236816406
    8. ' ' → logprob: -18.376930236816406
    9. 'r' → logprob: -18.501930236816406
    10. 'rv' → logprob: -18.751930236816406

Token 192: '
' (ID: 198)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.26606807112693787
    2. '       ' → logprob: -1.5160681009292603
    3. ' else' → logprob: -4.266067981719971
    4. '	else' → logprob: -13.516068458557129
    5. '_else' → logprob: -15.266068458557129
    6. 's' → logprob: -15.391068458557129
    7. '   ' → logprob: -15.641068458557129
    8. 'Else' → logprob: -15.891068458557129
    9. '```' → logprob: -15.891068458557129
    10. '      ' → logprob: -16.266067504882812

Token 193: '       ' (ID: 309)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.21627898514270782
    2. '       ' → logprob: -1.7162790298461914
    3. ' else' → logprob: -4.216279029846191
    4. '	else' → logprob: -14.216279029846191
    5. '```' → logprob: -14.716279029846191
    6. '   ' → logprob: -14.841279029846191
    7. '
' → logprob: -15.091279029846191
    8. '_else' → logprob: -15.341279029846191
    9. ':
' → logprob: -16.091278076171875
    10. 'Else' → logprob: -17.091278076171875

Token 194: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.03627295419573784
    2. ' else' → logprob: -3.5362730026245117
    3. '       ' → logprob: -5.036273002624512
    4. '	else' → logprob: -12.911273002624512
    5. '   ' → logprob: -14.286273002624512
    6. '_else' → logprob: -15.536273002624512
    7. ':
' → logprob: -17.661272048950195
    8. ' ' → logprob: -18.036272048950195
    9. 'els' → logprob: -18.036272048950195
    10. '      ' → logprob: -18.161272048950195

Token 195: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3869805634021759
    2. ':' → logprob: -1.1369805335998535
    3. ' :
' → logprob: -10.136981010437012
    4. ':
' → logprob: -10.636981010437012
    5. '       ' → logprob: -10.761981010437012
    6. '           ' → logprob: -11.386981010437012
    7. ' :' → logprob: -11.761981010437012
    8. '   ' → logprob: -12.761981010437012
    9. ':

' → logprob: -13.511981010437012
    10. '{
' → logprob: -15.386981010437012

Token 196: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0024332129396498203
    2. '       ' → logprob: -6.3774333000183105
    3. '   ' → logprob: -7.8774333000183105
    4. ' self' → logprob: -8.127432823181152
    5. 'self' → logprob: -10.377432823181152
    6. '               ' → logprob: -11.627432823181152
    7. '          ' → logprob: -12.627432823181152
    8. ':
' → logprob: -12.627432823181152
    9. ' ' → logprob: -13.502432823181152
    10. '
' → logprob: -13.627432823181152

Token 197: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.2127235233783722
    2. ' self' → logprob: -1.7127234935760498
    3. '           ' → logprob: -4.587723731994629
    4. '       ' → logprob: -6.962723731994629
    5. '   ' → logprob: -9.462723731994629
    6. '
' → logprob: -11.587723731994629
    7. '	self' → logprob: -11.837723731994629
    8. '[self' → logprob: -12.087723731994629
    9. 's' → logprob: -12.212723731994629
    10. ' ' → logprob: -12.337723731994629

Token 198: '.parent' (ID: 17454)
  Prédit: '.rank'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.rank' → logprob: -0.07891634106636047
    2. '.parent' → logprob: -2.578916311264038
    3. '.' → logprob: -11.203916549682617
    4. 'rank' → logprob: -12.078916549682617
    5. 'parent' → logprob: -12.703916549682617
    6. ' .' → logprob: -13.453916549682617
    7. '.r' → logprob: -13.953916549682617
    8. '_rank' → logprob: -14.703916549682617
    9. '[parent' → logprob: -14.953916549682617
    10. 'Rank' → logprob: -15.203916549682617

Token 199: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.704273118884885e-07
    2. '[self' → logprob: -14.750000953674316
    3. ' [' → logprob: -16.5
    4. '```' → logprob: -16.875
    5. '       ' → logprob: -18.0
    6. '[root' → logprob: -18.125
    7. ' ry' → logprob: -18.5
    8. '[r' → logprob: -19.0
    9. '[assembly' → logprob: -19.25
    10. '

' → logprob: -19.625

Token 200: 'ry' (ID: 1102)
  Prédit: 'ry'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ry' → logprob: -1.981667537620524e-06
    2. ' ry' → logprob: -13.625001907348633
    3. 'rx' → logprob: -14.875001907348633
    4. '   ' → logprob: -15.500001907348633
    5. '[' → logprob: -16.375001907348633
    6. '
' → logprob: -17.250001907348633
    7. '

' → logprob: -17.375001907348633
    8. '       ' → logprob: -18.750001907348633
    9. '
' → logprob: -18.875001907348633
    10. '  ' → logprob: -19.125001907348633

Token 201: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.21025331318378448
    2. '=' → logprob: -2.0852532386779785
    3. ' =' → logprob: -2.8352532386779785
    4. ']=' → logprob: -5.2102532386779785
    5. ' ]' → logprob: -7.3352532386779785
    6. ')' → logprob: -7.5852532386779785
    7. '[' → logprob: -11.460253715515137
    8. ')=' → logprob: -11.960253715515137
    9. ' )' → logprob: -13.585253715515137
    10. ' ' → logprob: -14.210253715515137

Token 202: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25192946195602417
    2. '=' → logprob: -1.501929521560669
    3. ' =
' → logprob: -15.12692928314209
    4. ')' → logprob: -16.751930236816406
    5. '=
' → logprob: -17.126930236816406
    6. '＝' → logprob: -17.126930236816406
    7. ' ' → logprob: -17.376930236816406
    8. '=s' → logprob: -18.126930236816406
    9. '=int' → logprob: -18.626930236816406
    10. ')=' → logprob: -18.626930236816406

Token 203: ' rx' (ID: 37623)
  Prédit: 'rx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rx' → logprob: -0.01814994215965271
    2. ' rx' → logprob: -4.0181498527526855
    3. '(rx' → logprob: -16.893150329589844
    4. '_rx' → logprob: -17.393150329589844
    5. '.rx' → logprob: -18.393150329589844
    6. 'rs' → logprob: -18.768150329589844
    7. 'rv' → logprob: -18.893150329589844
    8. 'tx' → logprob: -19.268150329589844
    9. '
' → logprob: -19.393150329589844
    10. 'Rx' → logprob: -19.518150329589844

Token 204: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.46563634276390076
    2. '       ' → logprob: -1.3406363725662231
    3. '
' → logprob: -2.2156362533569336
    4. '<|end|>' → logprob: -7.965636253356934
    5. '               ' → logprob: -8.590636253356934
    6. ' 
' → logprob: -8.715636253356934
    7. '        
' → logprob: -8.840636253356934
    8. '
' → logprob: -9.090636253356934
    9. '  
' → logprob: -9.090636253356934
    10. '    
' → logprob: -9.340636253356934

Token 205: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.27599337697029114
    2. '           ' → logprob: -1.7759933471679688
    3. '
' → logprob: -2.6509933471679688
    4. '        
' → logprob: -7.775993347167969
    5. '    
' → logprob: -8.275993347167969
    6. '   ' → logprob: -8.775993347167969
    7. ' 
' → logprob: -9.025993347167969
    8. '            
' → logprob: -9.525993347167969
    9. '
' → logprob: -9.775993347167969
    10. '\n' → logprob: -10.150993347167969

Token 206: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0005532711511477828
    2. ' self' → logprob: -7.500553131103516
    3. '           ' → logprob: -15.250553131103516
    4. '       ' → logprob: -17.000553131103516
    5. '   ' → logprob: -18.250553131103516
    6. '
' → logprob: -18.750553131103516
    7. '	self' → logprob: -19.750553131103516
    8. 's' → logprob: -20.375553131103516
    9. '[self' → logprob: -20.625553131103516
    10. '               ' → logprob: -20.750553131103516

Token 207: '.rank' (ID: 96793)
  Prédit: '.rank'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.rank' → logprob: -5.512236498361744e-07
    2. '.' → logprob: -14.875000953674316
    3. ' .' → logprob: -16.25
    4. 'rank' → logprob: -17.75
    5. '.
' → logprob: -20.625
    6. '.r' → logprob: -20.75
    7. ' rank' → logprob: -21.0
    8. '(rank' → logprob: -21.0
    9. '.rate' → logprob: -21.625
    10. '.score' → logprob: -23.0

Token 208: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.9361264946837764e-07
    2. ' [' → logprob: -17.125
    3. '[r' → logprob: -17.5
    4. '(rx' → logprob: -17.5
    5. '[self' → logprob: -18.375
    6. '[x' → logprob: -19.125
    7. ' rx' → logprob: -19.375
    8. 'rx' → logprob: -19.5
    9. '[ix' → logprob: -19.75
    10. '```' → logprob: -20.0

Token 209: 'rx' (ID: 26910)
  Prédit: 'rx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rx' → logprob: -1.2664456789934775e-06
    2. ' rx' → logprob: -14.125000953674316
    3. '[' → logprob: -15.125000953674316
    4. '(rx' → logprob: -16.625001907348633
    5. '_rx' → logprob: -17.125001907348633
    6. 'Rx' → logprob: -19.125001907348633
    7. 'x' → logprob: -19.500001907348633
    8. ' ' → logprob: -20.000001907348633
    9. '.rx' → logprob: -20.125001907348633
    10. 'rv' → logprob: -20.250001907348633

Token 210: ']' (ID: 60)
  Prédit: ']+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']+=' → logprob: -0.8749765753746033
    2. ']' → logprob: -1.249976634979248
    3. '+=' → logprob: -1.749976634979248
    4. ' +=' → logprob: -2.124976634979248
    5. '+' → logprob: -6.499976634979248
    6. ' ]' → logprob: -6.874976634979248
    7. '[' → logprob: -7.374976634979248
    8. ']+' → logprob: -8.87497615814209
    9. ')' → logprob: -9.99997615814209
    10. '+]' → logprob: -10.74997615814209

Token 211: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.011115610599517822
    2. ' +=' → logprob: -4.511115550994873
    3. ']+=' → logprob: -10.136116027832031
    4. '+' → logprob: -10.511116027832031
    5. '+='' → logprob: -15.261116027832031
    6. '[' → logprob: -15.261116027832031
    7. '=' → logprob: -15.511116027832031
    8. '+="' → logprob: -16.38611602783203
    9. '+=(' → logprob: -16.76111602783203
    10. '++' → logprob: -18.38611602783203

Token 212: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00033546582562848926
    2. ' ' → logprob: -8.000335693359375
    3. '   ' → logprob: -17.125335693359375
    4. '
' → logprob: -18.250335693359375
    5. '  ' → logprob: -20.000335693359375
    6. ' ' → logprob: -20.250335693359375
    7. '```' → logprob: -21.125335693359375
    8. '	' → logprob: -22.125335693359375
    9. '    ' → logprob: -22.750335693359375
    10. '１' → logprob: -22.875335693359375

Token 213: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.375001907348633
    3. '
' → logprob: -21.000001907348633
    4. '```' → logprob: -21.375001907348633
    5. '   ' → logprob: -21.500001907348633
    6. '  ' → logprob: -22.625001907348633
    7. '１' → logprob: -22.875001907348633
    8. ' ' → logprob: -23.875001907348633
    9. '۱' → logprob: -23.875001907348633
    10. '

' → logprob: -23.875001907348633

Token 214: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0650208592414856
    2. '<|end|>' → logprob: -3.315020799636841
    3. '\n' → logprob: -4.06502103805542
    4. 'def' → logprob: -5.69002103805542
    5. '

' → logprob: -5.69002103805542
    6. '    
' → logprob: -7.44002103805542
    7. '' → logprob: -7.81502103805542
    8. 'n' → logprob: -8.190020561218262
    9. '   ' → logprob: -8.190020561218262
    10. 'return' → logprob: -8.815020561218262

Token 215: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.045591894537210464
    2. '

' → logprob: -3.9205918312072754
    3. 'def' → logprob: -4.170591831207275
    4. '<|end|>' → logprob: -5.545591831207275
    5. '    
' → logprob: -6.420591831207275
    6. '\n' → logprob: -6.545591831207275
    7. '   ' → logprob: -7.045591831207275
    8. '


' → logprob: -8.295592308044434
    9. 'newline' → logprob: -8.545592308044434
    10. '' → logprob: -8.670592308044434

Token 216: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.9344176054000854
    2. '
' → logprob: -1.3094176054000854
    3. '       ' → logprob: -1.5594176054000854
    4. ' return' → logprob: -2.684417724609375
    5. '\n' → logprob: -3.934417724609375
    6. '   ' → logprob: -4.059417724609375
    7. ' 
' → logprob: -4.434417724609375
    8. '    
' → logprob: -6.309417724609375
    9. ' ' → logprob: -6.684417724609375
    10. ' True' → logprob: -6.809417724609375

Token 217: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.07888978719711304
    2. ' True' → logprob: -2.578889846801758
    3. '(True' → logprob: -18.953889846801758
    4. ' Tru' → logprob: -20.578889846801758
    5. ' ' → logprob: -20.703889846801758
    6. '=True' → logprob: -20.828889846801758
    7. 'Tr' → logprob: -21.203889846801758
    8. '
' → logprob: -21.828889846801758
    9. 'False' → logprob: -22.078889846801758
    10. 'None' → logprob: -22.328889846801758

Token 218: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7328516244888306
    2. '

' → logprob: -0.9828516244888306
    3. '<|end|>' → logprob: -2.357851505279541
    4. 'def' → logprob: -3.107851505279541
    5. 'n' → logprob: -6.982851505279541
    6. '    
' → logprob: -7.107851505279541
    7. '<|end|>' → logprob: -7.232851505279541
    8. '\n' → logprob: -7.232851505279541
    9. '


' → logprob: -7.357851505279541
    10. '
    
' → logprob: -7.607851505279541

Token 219: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.18247373402118683
    2. '
' → logprob: -1.8074737787246704
    3. 'class' → logprob: -7.057473659515381
    4. '

' → logprob: -7.557473659515381
    5. '```' → logprob: -7.682473659515381
    6. '\n' → logprob: -8.307474136352539
    7. 'import' → logprob: -8.557474136352539
    8. 'n' → logprob: -9.182474136352539
    9. '  
' → logprob: -9.682474136352539
    10. '#' → logprob: -9.682474136352539

Token 220: ' can' (ID: 665)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.021892905235290527
    2. ' kr' → logprob: -3.89689302444458
    3. ' solve' → logprob: -7.02189302444458
    4. 'main' → logprob: -8.396892547607422
    5. 'kr' → logprob: -9.771892547607422
    6. ' mst' → logprob: -10.271892547607422
    7. '	main' → logprob: -10.396892547607422
    8. ' read' → logprob: -10.396892547607422
    9. ' Kr' → logprob: -10.896892547607422
    10. ' parse' → logprob: -10.896892547607422

Token 221: '_build' (ID: 49774)
  Prédit: '_connect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_connect' → logprob: -0.2222464382648468
    2. '_' → logprob: -1.9722464084625244
    3. '_merge' → logprob: -4.7222466468811035
    4. '_jump' → logprob: -4.7222466468811035
    5. '_union' → logprob: -5.3472466468811035
    6. '_visit' → logprob: -5.4722466468811035
    7. '_construct' → logprob: -5.5972466468811035
    8. '_use' → logprob: -5.9722466468811035
    9. '_build' → logprob: -5.9722466468811035
    10. '_complete' → logprob: -5.9722466468811035

Token 222: '_sp' (ID: 18491)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.4111790060997009
    2. '(' → logprob: -2.1611790657043457
    3. '_bridge' → logprob: -3.1611790657043457
    4. '_' → logprob: -3.4111790657043457
    5. '_ro' → logprob: -3.4111790657043457
    6. '_network' → logprob: -3.6611790657043457
    7. '(graph' → logprob: -3.7861790657043457
    8. '_graph' → logprob: -4.161179065704346
    9. '(grid' → logprob: -4.786179065704346
    10. '_tree' → logprob: -4.911179065704346

Token 223: 'anning' (ID: 6674)
  Prédit: 'anning'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'anning' → logprob: -0.0012608295073732734
    2. 'an' → logprob: -7.001260757446289
    3. 'anner' → logprob: -8.376260757446289
    4. 'ann' → logprob: -9.751260757446289
    5. '

' → logprob: -11.751260757446289
    6. '"' → logprob: -12.126260757446289
    7. '   ' → logprob: -12.126260757446289
    8. 'anne' → logprob: -12.126260757446289
    9. 'aning' → logprob: -12.376260757446289
    10. '```' → logprob: -12.376260757446289

Token 224: '_tree' (ID: 27118)
  Prédit: '_tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tree' → logprob: -0.01255238801240921
    2. 'tree' → logprob: -4.387552261352539
    3. '_f' → logprob: -11.262552261352539
    4. 'forest' → logprob: -11.387552261352539
    5. '_t' → logprob: -11.887552261352539
    6. '_' → logprob: -12.887552261352539
    7. '```' → logprob: -12.887552261352539
    8. ' tree' → logprob: -13.262552261352539
    9. 'tre' → logprob: -13.637552261352539
    10. 'Tree' → logprob: -14.262552261352539

Token 225: '(edges' (ID: 185298)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.008941426873207092
    2. '(' → logprob: -5.633941650390625
    3. '(graph' → logprob: -5.883941650390625
    4. '(num' → logprob: -6.508941650390625
    5. '(edges' → logprob: -7.758941650390625
    6. '(nodes' → logprob: -8.008941650390625
    7. '(N' → logprob: -9.383941650390625
    8. '(node' → logprob: -10.008941650390625
    9. ' (' → logprob: -10.508941650390625
    10. '(number' → logprob: -10.633941650390625

Token 226: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.967624019831419e-05
    2. ',n' → logprob: -10.125060081481934
    3. ' ,' → logprob: -10.875060081481934
    4. ':' → logprob: -15.500060081481934
    5. '):' → logprob: -15.500060081481934
    6. '(n' → logprob: -16.375059127807617
    7. ',num' → logprob: -18.000059127807617
    8. ',
' → logprob: -18.125059127807617
    9. '[n' → logprob: -18.625059127807617
    10. 'n' → logprob: -19.250059127807617

Token 227: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.38708242774009705
    2. ' n' → logprob: -1.1370824575424194
    3. 'num' → logprob: -8.63708209991455
    4. ' num' → logprob: -11.01208209991455
    5. '   ' → logprob: -11.63708209991455
    6. ' ' → logprob: -12.76208209991455
    7. '	n' → logprob: -14.01208209991455
    8. 'k' → logprob: -14.13708209991455
    9. '```' → logprob: -14.38708209991455
    10. 'node' → logprob: -14.51208209991455

Token 228: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002828530967235565
    2. ')' → logprob: -6.127828598022461
    3. ',' → logprob: -7.752828598022461
    4. '):
' → logprob: -8.877828598022461
    5. ' ):' → logprob: -9.627828598022461
    6. ':' → logprob: -12.252828598022461
    7. '):
' → logprob: -14.127828598022461
    8. '=' → logprob: -14.877828598022461
    9. ')):' → logprob: -14.877828598022461
    10. '):

' → logprob: -15.002828598022461

Token 229: ' start' (ID: 1604)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.21052412688732147
    2. 'm' → logprob: -1.835524082183838
    3. ' k' → logprob: -4.210524082183838
    4. ' m' → logprob: -5.210524082183838
    5. 'max' → logprob: -5.335524082183838
    6. 'threshold' → logprob: -7.085524082183838
    7. ')' → logprob: -7.210524082183838
    8. 'limit' → logprob: -7.585524082183838
    9. ' max' → logprob: -7.710524082183838
    10. 'required' → logprob: -7.960524082183838

Token 230: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1010877713561058
    2. '_node' → logprob: -3.226087808609009
    3. ',' → logprob: -3.726087808609009
    4. ')' → logprob: -3.976087808609009
    5. ' ):' → logprob: -5.47608757019043
    6. '_edge' → logprob: -5.85108757019043
    7. '_' → logprob: -6.35108757019043
    8. '_vertex' → logprob: -6.47608757019043
    9. '):
' → logprob: -6.85108757019043
    10. '_nodes' → logprob: -7.72608757019043

Token 231: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.2243504673242569
    2. ' end' → logprob: -1.8493504524230957
    3. 'k' → logprob: -4.724350452423096
    4. 'target' → logprob: -4.849350452423096
    5. 'm' → logprob: -5.849350452423096
    6. 'visited' → logprob: -6.099350452423096
    7. 'limit' → logprob: -6.349350452423096
    8. ' target' → logprob: -6.474350452423096
    9. '   ' → logprob: -6.599350452423096
    10. 'edges' → logprob: -6.724350452423096

Token 232: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0013286912580952048
    2. ')' → logprob: -7.376328468322754
    3. ',' → logprob: -7.376328468322754
    4. ' ):' → logprob: -9.626328468322754
    5. '):
' → logprob: -11.751328468322754
    6. ':' → logprob: -13.501328468322754
    7. '   ' → logprob: -15.876328468322754
    8. '):
' → logprob: -16.62632942199707
    9. ')：' → logprob: -16.62632942199707
    10. '=' → logprob: -16.75132942199707

Token 233: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07284791767597198
    2. '   ' → logprob: -3.072847843170166
    3. '(edges' → logprob: -4.822847843170166
    4. '):' → logprob: -5.072847843170166
    5. '():' → logprob: -5.447847843170166
    6. ':
' → logprob: -6.072847843170166
    7. ',' → logprob: -6.572847843170166
    8. '(' → logprob: -7.322847843170166
    9. ' edges' → logprob: -8.697848320007324
    10. ' :' → logprob: -8.697848320007324

Token 234: ' """
' (ID: 7037)
  Prédit: ' uf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' uf' → logprob: -0.045650552958250046
    2. 'uf' → logprob: -3.1706504821777344
    3. '   ' → logprob: -6.045650482177734
    4. ' union' → logprob: -9.045650482177734
    5. ' edges' → logprob: -10.045650482177734
    6. '```' → logprob: -10.920650482177734
    7. ' if' → logprob: -11.045650482177734
    8. ' u' → logprob: -11.045650482177734
    9. '
' → logprob: -11.670650482177734
    10. ' d' → logprob: -11.795650482177734

Token 235: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.112514927983284
    2. '    ' → logprob: -3.1125149726867676
    3. '#' → logprob: -3.7375149726867676
    4. ' #' → logprob: -4.487514972686768
    5. ' for' → logprob: -5.237514972686768
    6. ' edges' → logprob: -5.237514972686768
    7. ' if' → logprob: -5.612514972686768
    8. 'def' → logprob: -6.112514972686768
    9. ' def' → logprob: -6.362514972686768
    10. ' """' → logprob: -6.362514972686768

Token 236: ' Test' (ID: 4674)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12863066792488098
    2. '#' → logprob: -3.3786306381225586
    3. ' edges' → logprob: -4.003630638122559
    4. ' uf' → logprob: -4.003630638122559
    5. 'uf' → logprob: -4.128630638122559
    6. ' used' → logprob: -4.503630638122559
    7. ' #' → logprob: -4.878630638122559
    8. ' sorted' → logprob: -6.753630638122559
    9. '"""
' → logprob: -6.753630638122559
    10. ' visited' → logprob: -6.753630638122559

Token 237: 'e' (ID: 68)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.660851240158081
    2. '   ' → logprob: -1.660851240158081
    3. 'e' → logprob: -2.035851240158081
    4. ' des' → logprob: -2.160851240158081
    5. ' ' → logprob: -4.53585147857666
    6. 'er' → logprob: -4.53585147857666
    7. ' whether' → logprob: -4.78585147857666
    8. 'if' → logprob: -5.03585147857666
    9. 'd' → logprob: -6.41085147857666
    10. ' de' → logprob: -6.53585147857666

Token 238: ' si' (ID: 1784)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.13961577415466309
    2. ' ' → logprob: -2.764615774154663
    3. ' si' → logprob: -3.514615774154663
    4. '   ' → logprob: -4.139616012573242
    5. ' whether' → logprob: -4.264616012573242
    6. ' la' → logprob: -6.139616012573242
    7. '  ' → logprob: -6.639616012573242
    8. ' ' → logprob: -7.514616012573242
    9. '    ' → logprob: -7.639616012573242
    10. '_' → logprob: -7.764616012573242

Token 239: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.5006800889968872
    2. ' il' → logprob: -1.3756800889968872
    3. ' there' → logprob: -2.6256799697875977
    4. ' la' → logprob: -4.500679969787598
    5. ' une' → logprob: -4.625679969787598
    6. ' all' → logprob: -4.750679969787598
    7. ' a' → logprob: -5.125679969787598
    8. ' edges' → logprob: -5.250679969787598
    9. ' it' → logprob: -5.500679969787598
    10. 'on' → logprob: -5.750679969787598

Token 240: ' peut' (ID: 9216)
  Prédit: ' peut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' peut' → logprob: -0.6355612277984619
    2. 'pe' → logprob: -0.7605612277984619
    3. ' peux' → logprob: -6.385560989379883
    4. 'a' → logprob: -8.385560989379883
    5. 'p' → logprob: -8.510560989379883
    6. 'can' → logprob: -8.510560989379883
    7. ' can' → logprob: -8.760560989379883
    8. ' pe' → logprob: -9.010560989379883
    9. 'pour' → logprob: -9.260560989379883
    10. 'def' → logprob: -10.260560989379883

Token 241: ' construire' (ID: 92473)
  Prédit: ' construire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' construire' → logprob: -0.0156285110861063
    2. ' créer' → logprob: -5.640628337860107
    3. ' connecter' → logprob: -5.890628337860107
    4. ' rel' → logprob: -6.640628337860107
    5. ' construir' → logprob: -6.640628337860107
    6. '   ' → logprob: -6.890628337860107
    7. ' ' → logprob: -7.390628337860107
    8. 'con' → logprob: -7.765628337860107
    9. '_' → logprob: -7.765628337860107
    10. ' form' → logprob: -8.015628814697266

Token 242: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.17708219587802887
    2. ' une' → logprob: -2.4270823001861572
    3. ' spanning' → logprob: -2.8020823001861572
    4. 'un' → logprob: -4.802082061767578
    5. 'une' → logprob: -5.427082061767578
    6. ' a' → logprob: -7.552082061767578
    7. ' ' → logprob: -10.177082061767578
    8. 'a' → logprob: -10.552082061767578
    9. '   ' → logprob: -10.677082061767578
    10. 'sp' → logprob: -11.052082061767578

Token 243: ' arbre' (ID: 164180)
  Prédit: ' arbre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' arbre' → logprob: -0.1953938901424408
    2. ' spanning' → logprob: -2.5703938007354736
    3. 'ar' → logprob: -2.9453938007354736
    4. 'sp' → logprob: -3.5703938007354736
    5. '```' → logprob: -5.320394039154053
    6. 'arb' → logprob: -5.570394039154053
    7. '   ' → logprob: -6.070394039154053
    8. ' ' → logprob: -6.320394039154053
    9. 'tree' → logprob: -6.695394039154053
    10. ' arbres' → logprob: -7.070394039154053

Token 244: ' couvr' (ID: 129883)
  Prédit: ' couvr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' couvr' → logprob: -0.14698165655136108
    2. '   ' → logprob: -2.896981716156006
    3. ' de' → logprob: -3.271981716156006
    4. 'de' → logprob: -4.021981716156006
    5. ' rec' → logprob: -4.896981716156006
    6. ' ' → logprob: -5.146981716156006
    7. ' eng' → logprob: -5.896981716156006
    8. ' spanning' → logprob: -6.271981716156006
    9. 'd' → logprob: -6.771981716156006
    10. '  ' → logprob: -7.146981716156006

Token 245: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.0023733926936984062
    2. 'ir' → logprob: -6.877373218536377
    3. 'nant' → logprob: -7.127373218536377
    4. 'ante' → logprob: -8.752373695373535
    5. 'er' → logprob: -9.002373695373535
    6. 'rant' → logprob: -10.377373695373535
    7. 'ner' → logprob: -10.502373695373535
    8. '
' → logprob: -10.752373695373535
    9. 'a' → logprob: -11.002373695373535
    10. 'an' → logprob: -11.127373695373535

Token 246: ' avec' (ID: 3937)
  Prédit: ' avec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' avec' → logprob: -1.0306793451309204
    2. ' en' → logprob: -1.4056793451309204
    3. ' couvr' → logprob: -1.7806793451309204
    4. ' qui' → logprob: -3.030679225921631
    5. ' utilisant' → logprob: -3.280679225921631
    6. ' contenant' → logprob: -4.030679225921631
    7. ' with' → logprob: -4.280679225921631
    8. ' inclu' → logprob: -4.405679225921631
    9. ' spanning' → logprob: -4.530679225921631
    10. ' complet' → logprob: -4.530679225921631

Token 247: ' des' (ID: 731)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'une' → logprob: -1.8891465663909912
    2. 'l' → logprob: -2.139146566390991
    3. ' les' → logprob: -2.264146566390991
    4. ' edges' → logprob: -2.389146566390991
    5. 'les' → logprob: -3.014146566390991
    6. ' des' → logprob: -3.139146566390991
    7. ' l' → logprob: -3.264146566390991
    8. ' only' → logprob: -3.389146566390991
    9. 'edges' → logprob: -3.389146566390991
    10. ' toutes' → logprob: -3.389146566390991

Token 248: ' ar' (ID: 646)
  Prédit: 'ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.035937197506427765
    2. 'arest' → logprob: -4.410937309265137
    3. 'are' → logprob: -4.660937309265137
    4. ' ar' → logprob: -4.910937309265137
    5. 'edges' → logprob: -5.910937309265137
    6. '```' → logprob: -6.535937309265137
    7. ' are' → logprob: -8.035937309265137
    8. ' edges' → logprob: -8.160937309265137
    9. 'arr' → logprob: -8.285937309265137
    10. 'arri' → logprob: -8.410937309265137

Token 249: 'êtes' (ID: 23720)
  Prédit: 'êtes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êtes' → logprob: -0.02692469023168087
    2. 'cs' → logprob: -3.9019246101379395
    3. 'tes' → logprob: -6.1519246101379395
    4. 'ê' → logprob: -6.7769246101379395
    5. 'etes' → logprob: -7.2769246101379395
    6. 'êts' → logprob: -7.6519246101379395
    7. 'e' → logprob: -8.401925086975098
    8. 'g' → logprob: -8.401925086975098
    9. 'r' → logprob: -8.401925086975098
    10. 'bres' → logprob: -8.401925086975098

Token 250: ' entre' (ID: 3853)
  Prédit: 'strict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strict' → logprob: -1.7888554334640503
    2. 'dont' → logprob: -1.7888554334640503
    3. ' uniquement' → logprob: -1.9138554334640503
    4. 'ayant' → logprob: -2.28885555267334
    5. ' ayant' → logprob: -2.41385555267334
    6. ' de' → logprob: -2.91385555267334
    7. ' dont' → logprob: -3.16385555267334
    8. ' entre' → logprob: -3.53885555267334
    9. 'entre' → logprob: -4.16385555267334
    10. 'de' → logprob: -4.16385555267334

Token 251: ' indices' (ID: 30378)
  Prédit: ' start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' start' → logprob: -0.6347128748893738
    2. 'start' → logprob: -0.7597128748893738
    3. 'le' → logprob: -7.5097126960754395
    4. 'les' → logprob: -7.7597126960754395
    5. '[start' → logprob: -8.384713172912598
    6. ' le' → logprob: -8.759713172912598
    7. ' les' → logprob: -9.134713172912598
    8. '(start' → logprob: -9.509713172912598
    9. ' des' → logprob: -9.634713172912598
    10. '=start' → logprob: -9.759713172912598

Token 252: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.1026628389954567
    2. ' start' → logprob: -2.3526628017425537
    3. '[start' → logprob: -6.227663040161133
    4. '(start' → logprob: -8.852663040161133
    5. '   ' → logprob: -9.352663040161133
    6. 'de' → logprob: -9.852663040161133
    7. '[' → logprob: -9.852663040161133
    8. 'min' → logprob: -10.477663040161133
    9. '```' → logprob: -10.852663040161133
    10. '=start' → logprob: -11.102663040161133

Token 253: ' et' (ID: 859)
  Prédit: ' et'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' et' → logprob: -0.47841736674308777
    2. 'et' → logprob: -1.8534173965454102
    3. '+' → logprob: -2.60341739654541
    4. ' and' → logprob: -2.85341739654541
    5. ' ' → logprob: -3.72841739654541
    6. '=' → logprob: -3.72841739654541
    7. ',' → logprob: -4.35341739654541
    8. ' +' → logprob: -4.85341739654541
    9. '   ' → logprob: -5.22841739654541
    10. 'and' → logprob: -5.22841739654541

Token 254: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.3132764399051666
    2. ' end' → logprob: -1.3132764101028442
    3. ' ' → logprob: -12.563276290893555
    4. ' ' → logprob: -12.813276290893555
    5. '	end' → logprob: -13.188276290893555
    6. '   ' → logprob: -13.313276290893555
    7. '=end' → logprob: -14.063276290893555
    8. ' edges' → logprob: -14.188276290893555
    9. '(end' → logprob: -14.438276290893555
    10. 'edges' → logprob: -14.438276290893555

Token 255: ' inclus' (ID: 11891)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32402852177619934
    2. ' inclus' → logprob: -2.199028491973877
    3. ')' → logprob: -2.574028491973877
    4. ' (' → logprob: -3.324028491973877
    5. '(in' → logprob: -3.949028491973877
    6. '"""' → logprob: -4.824028491973877
    7. ',' → logprob: -5.074028491973877
    8. '):' → logprob: -5.199028491973877
    9. '(' → logprob: -6.074028491973877
    10. 'in' → logprob: -6.574028491973877

Token 256: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.080582395195961
    2. ':' → logprob: -2.9555823802948
    3. '):' → logprob: -3.9555823802948
    4. ',' → logprob: -6.080582618713379
    5. ')' → logprob: -6.205582618713379
    6. '.' → logprob: -7.330582618713379
    7. ' :' → logprob: -7.580582618713379
    8. '):
' → logprob: -8.705582618713379
    9. '  ' → logprob: -9.330582618713379
    10. '    
' → logprob: -9.580582618713379

Token 257: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001719923340715468
    2. ')' → logprob: -7.126719951629639
    3. ':' → logprob: -8.37671947479248
    4. '    
' → logprob: -8.62671947479248
    5. '"""' → logprob: -8.62671947479248
    6. '
' → logprob: -9.00171947479248
    7. '):' → logprob: -9.62671947479248
    8. ' """' → logprob: -10.12671947479248
    9. '\n' → logprob: -10.25171947479248
    10. 'def' → logprob: -11.37671947479248

Token 258: ' On' (ID: 2160)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005182435852475464
    2. ' uf' → logprob: -8.500517845153809
    3. 'uf' → logprob: -9.250517845153809
    4. '    
' → logprob: -10.000517845153809
    5. '    ' → logprob: -10.125517845153809
    6. '
' → logprob: -10.125517845153809
    7. ' union' → logprob: -10.375517845153809
    8. '```' → logprob: -10.500517845153809
    9. 'union' → logprob: -11.500517845153809
    10. ' u' → logprob: -13.000517845153809

Token 259: ' essa' (ID: 19417)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03295191377401352
    2. '    ' → logprob: -4.157951831817627
    3. ' for' → logprob: -4.782951831817627
    4. ' edges' → logprob: -6.532951831817627
    5. ' current' → logprob: -6.782951831817627
    6. 'for' → logprob: -7.157951831817627
    7. ' a' → logprob: -7.282951831817627
    8. 'def' → logprob: -7.407951831817627
    9. ' parent' → logprob: -7.907951831817627
    10. ' range' → logprob: -8.157952308654785

Token 260: 'ie' (ID: 396)
  Prédit: 'ie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.018837349489331245
    2. 'y' → logprob: -4.3938374519348145
    3. 'ye' → logprob: -5.1438374519348145
    4. 'e' → logprob: -9.143836975097656
    5. 'i' → logprob: -9.393836975097656
    6. 'iye' → logprob: -9.768836975097656
    7. 'aye' → logprob: -10.018836975097656
    8. '\' → logprob: -10.893836975097656
    9. 'yer' → logprob: -10.893836975097656
    10. 'ies' → logprob: -11.268836975097656

Token 261: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.6330138444900513
    2. ' d' → logprob: -1.2580138444900513
    3. 'd' → logprob: -2.5080137252807617
    4. 'de' → logprob: -3.0080137252807617
    5. '   ' → logprob: -3.5080137252807617
    6. '    ' → logprob: -4.258013725280762
    7. ' ' → logprob: -5.633013725280762
    8. 'def' → logprob: -6.133013725280762
    9. 't' → logprob: -7.133013725280762
    10. ' ' → logprob: -7.133013725280762

Token 262: ' connecter' (ID: 85351)
  Prédit: ' construire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' construire' → logprob: -0.5976662039756775
    2. 'union' → logprob: -2.4726662635803223
    3. 'import' → logprob: -2.8476662635803223
    4. ' utiliser' → logprob: -3.2226662635803223
    5. ' union' → logprob: -3.3476662635803223
    6. 'util' → logprob: -3.5976662635803223
    7. 'con' → logprob: -3.5976662635803223
    8. ' créer' → logprob: -3.7226662635803223
    9. '   ' → logprob: -3.8476662635803223
    10. ' unir' → logprob: -4.972666263580322

Token 263: ' tous' (ID: 10688)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -1.0321348905563354
    2. 'all' → logprob: -1.6571348905563354
    3. ' tous' → logprob: -1.6571348905563354
    4. ' toutes' → logprob: -1.9071348905563354
    5. 't' → logprob: -2.532135009765625
    6. 'n' → logprob: -4.657135009765625
    7. 'tout' → logprob: -4.657135009765625
    8. 'les' → logprob: -5.407135009765625
    9. ' les' → logprob: -6.157135009765625
    10. '   ' → logprob: -6.282135009765625

Token 264: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.3900998830795288
    2. 'les' → logprob: -1.1400998830795288
    3. '   ' → logprob: -7.015100002288818
    4. ' the' → logprob: -7.015100002288818
    5. ' ' → logprob: -8.51509952545166
    6. 'the' → logprob: -8.64009952545166
    7. ' nodes' → logprob: -8.76509952545166
    8. 'le' → logprob: -8.89009952545166
    9. 'n' → logprob: -9.01509952545166
    10. 'nodes' → logprob: -9.14009952545166

Token 265: ' somm' (ID: 44830)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6101523637771606
    2. 'no' → logprob: -2.235152244567871
    3. ' noe' → logprob: -2.235152244567871
    4. 'som' → logprob: -2.485152244567871
    5. 'nodes' → logprob: -2.610152244567871
    6. ' somm' → logprob: -3.110152244567871
    7. 'n' → logprob: -3.485152244567871
    8. ' nodes' → logprob: -5.860152244567871
    9. ' n' → logprob: -5.860152244567871
    10. 'vertices' → logprob: -6.360152244567871

Token 266: 'ets' (ID: 1719)
  Prédit: 'ets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ets' → logprob: -5.455048449221067e-05
    2. 'es' → logprob: -11.250054359436035
    3. 'ètres' → logprob: -11.750054359436035
    4. 'è' → logprob: -11.750054359436035
    5. 'êts' → logprob: -11.875054359436035
    6. 'et' → logprob: -12.250054359436035
    7. '   ' → logprob: -12.250054359436035
    8. 'ètes' → logprob: -12.375054359436035
    9. 'etes' → logprob: -13.500054359436035
    10. 'ts' → logprob: -14.625054359436035

Token 267: ' en' (ID: 469)
  Prédit: ' avec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' avec' → logprob: -0.2953712046146393
    2. '   ' → logprob: -2.2953712940216064
    3. 'avec' → logprob: -2.7953712940216064
    4. ' en' → logprob: -3.2953712940216064
    5. ' with' → logprob: -4.295371055603027
    6. ' entre' → logprob: -5.045371055603027
    7. ' de' → logprob: -5.295371055603027
    8. ' via' → logprob: -5.295371055603027
    9. 'en' → logprob: -5.420371055603027
    10. 'dans' → logprob: -5.545371055603027

Token 268: ' utilisant' (ID: 92474)
  Prédit: 'util'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'util' → logprob: -0.6928905248641968
    2. ' utilisant' → logprob: -0.8178905248641968
    3. 'range' → logprob: -4.567890644073486
    4. '   ' → logprob: -4.817890644073486
    5. 'une' → logprob: -5.442890644073486
    6. 'n' → logprob: -5.442890644073486
    7. 'using' → logprob: -5.692890644073486
    8. ' range' → logprob: -5.817890644073486
    9. 'union' → logprob: -5.942890644073486
    10. ' n' → logprob: -5.942890644073486

Token 269: ' uniquement' (ID: 65527)
  Prédit: ' edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.38887354731559753
    2. 'edges' → logprob: -2.01387357711792
    3. ' les' → logprob: -2.63887357711792
    4. ' only' → logprob: -2.88887357711792
    5. ' des' → logprob: -3.88887357711792
    6. ' uniquement' → logprob: -4.13887357711792
    7. 'les' → logprob: -4.26387357711792
    8. 'only' → logprob: -5.38887357711792
    9. ' seulement' → logprob: -6.26387357711792
    10. 'des' → logprob: -6.63887357711792

Token 270: ' ces' (ID: 10532)
  Prédit: ' edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.156660258769989
    2. 'edges' → logprob: -2.531660318374634
    3. ' les' → logprob: -2.906660318374634
    4. 'les' → logprob: -5.156660079956055
    5. ' des' → logprob: -5.406660079956055
    6. '(edges' → logprob: -8.406660079956055
    7. '   ' → logprob: -10.031660079956055
    8. 'des' → logprob: -10.031660079956055
    9. ' the' → logprob: -10.156660079956055
    10. '_edges' → logprob: -10.281660079956055

Token 271: ' ar' (ID: 646)
  Prédit: ' edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.11746194213628769
    2. 'edges' → logprob: -2.867461919784546
    3. ' ar' → logprob: -3.242461919784546
    4. 'ar' → logprob: -4.242462158203125
    5. '_edges' → logprob: -8.742462158203125
    6. '(edges' → logprob: -9.367462158203125
    7. ' edge' → logprob: -9.992462158203125
    8. ' are' → logprob: -10.367462158203125
    9. 'are' → logprob: -10.367462158203125
    10. ' des' → logprob: -10.992462158203125

Token 272: 'êtes' (ID: 23720)
  Prédit: 'êtes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êtes' → logprob: -0.06343988329172134
    2. 'ges' → logprob: -3.6884398460388184
    3. 'edges' → logprob: -4.313439846038818
    4. 'g' → logprob: -4.813439846038818
    5. 'tes' → logprob: -5.063439846038818
    6. 'êts' → logprob: -6.438439846038818
    7. 'cs' → logprob: -6.688439846038818
    8. 'ches' → logprob: -7.313439846038818
    9. 'es' → logprob: -7.438439846038818
    10. 'ètes' → logprob: -7.688439846038818

Token 273: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0010142299579456449
    2. 'def' → logprob: -8.00101375579834
    3. ',' → logprob: -8.25101375579834
    4. '.' → logprob: -8.62601375579834
    5. '    
' → logprob: -9.25101375579834
    6. ':' → logprob: -10.62601375579834
    7. '
' → logprob: -11.12601375579834
    8. 'union' → logprob: -11.25101375579834
    9. ' union' → logprob: -11.50101375579834
    10. 'import' → logprob: -11.50101375579834

Token 274: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0012422556756064296
    2. '    
' → logprob: -7.376242160797119
    3. '
' → logprob: -7.626242160797119
    4. ')' → logprob: -10.001242637634277
    5. 'uf' → logprob: -10.376242637634277
    6. '    ' → logprob: -11.501242637634277
    7. ' uf' → logprob: -11.876242637634277
    8. '   
' → logprob: -12.126242637634277
    9. '  
' → logprob: -12.751242637634277
    10. '   ' → logprob: -12.751242637634277

Token 275: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0016713724471628666
    2. '    
' → logprob: -7.501671314239502
    3. 'uf' → logprob: -8.12667179107666
    4. ')' → logprob: -8.75167179107666
    5. '
' → logprob: -8.75167179107666
    6. ' uf' → logprob: -8.87667179107666
    7. '    ' → logprob: -9.12667179107666
    8. '   ' → logprob: -9.87667179107666
    9. '```' → logprob: -10.12667179107666
    10. 'union' → logprob: -10.87667179107666

Token 276: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013464661315083504
    2. ' uf' → logprob: -4.638464450836182
    3. 'uf' → logprob: -5.638464450836182
    4. '    
' → logprob: -10.01346492767334
    5. '   ' → logprob: -10.38846492767334
    6. '    ' → logprob: -11.51346492767334
    7. '```' → logprob: -11.51346492767334
    8. 'ufs' → logprob: -11.76346492767334
    9. '   ' → logprob: -11.88846492767334
    10. ' union' → logprob: -12.01346492767334

Token 277: ' uf' (ID: 35772)
  Prédit: 'uf'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uf' (adapté à ' uf') → logprob: -0.3327171504497528
    2. ' uf' → logprob: -1.3327171802520752
    3. '   ' → logprob: -3.957717180252075
    4. 'ufs' → logprob: -9.082716941833496
    5. 'union' → logprob: -12.207716941833496
    6. ' ' → logprob: -12.207716941833496
    7. 'u' → logprob: -12.207716941833496
    8. '  ' → logprob: -12.582716941833496
    9. 'ufi' → logprob: -12.582716941833496
    10. '.uf' → logprob: -12.582716941833496

Token 278: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.012511532753705978
    2. '=' → logprob: -4.387511730194092
    3. ' ' → logprob: -13.887511253356934
    4. '	' → logprob: -15.137511253356934
    5. '   ' → logprob: -15.137511253356934
    6. ' ' → logprob: -16.01251220703125
    7. '.' → logprob: -16.13751220703125
    8. '  ' → logprob: -17.13751220703125
    9. '    ' → logprob: -17.13751220703125
    10. ',' → logprob: -17.26251220703125

Token 279: ' Union' (ID: 14746)
  Prédit: 'Union'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Union' → logprob: -0.3132631182670593
    2. ' Union' → logprob: -1.313263177871704
    3. '   ' → logprob: -15.063262939453125
    4. ''Union' → logprob: -15.313262939453125
    5. ' ' → logprob: -15.563262939453125
    6. '_union' → logprob: -16.063262939453125
    7. ' union' → logprob: -16.188262939453125
    8. 'Uni' → logprob: -16.438262939453125
    9. ' ' → logprob: -16.813262939453125
    10. 'Unity' → logprob: -16.813262939453125

Token 280: 'Find' (ID: 11437)
  Prédit: 'Find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Find' → logprob: -3.128163257315464e-07
    2. '-' → logprob: -16.5
    3. 'Union' → logprob: -17.5
    4. '[' → logprob: -17.75
    5. 'F' → logprob: -17.75
    6. '-F' → logprob: -18.0
    7. ' Find' → logprob: -18.375
    8. 'Fill' → logprob: -18.5
    9. 'Fin' → logprob: -18.5
    10. '   ' → logprob: -18.875

Token 281: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -2.9040898880339228e-05
    2. 'n' → logprob: -10.500028610229492
    3. '(' → logprob: -13.500028610229492
    4. '(
' → logprob: -17.125028610229492
    5. ')n' → logprob: -17.500028610229492
    6. '[n' → logprob: -17.625028610229492
    7. ' n' → logprob: -17.875028610229492
    8. ' (' → logprob: -19.375028610229492
    9. '
' → logprob: -19.625028610229492
    10. '	n' → logprob: -20.875028610229492

Token 282: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004093597177416086
    2. ')
' → logprob: -5.504093647003174
    3. ' )' → logprob: -11.629093170166016
    4. ')
' → logprob: -12.129093170166016
    5. ')

' → logprob: -14.254093170166016
    6. ' )
' → logprob: -16.004093170166016
    7. '))' → logprob: -17.379093170166016
    8. '),' → logprob: -17.504093170166016
    9. ')return' → logprob: -18.379093170166016
    10. ').' → logprob: -18.629093170166016

Token 283: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08549118787050247
    2. 'for' → logprob: -3.085491180419922
    3. ' for' → logprob: -3.335491180419922
    4. '    
' → logprob: -7.835491180419922
    5. 'count' → logprob: -9.335491180419922
    6. 'connected' → logprob: -10.210491180419922
    7. '	for' → logprob: -10.335491180419922
    8. ' connected' → logprob: -10.710491180419922
    9. '  ' → logprob: -11.085491180419922
    10. '
' → logprob: -11.585491180419922

Token 284: ' count' (ID: 3605)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.09183131903409958
    2. ' for' → logprob: -2.4668312072753906
    3. '   ' → logprob: -6.466831207275391
    4. 'count' (adapté à ' count') → logprob: -6.716831207275391
    5. ' count' → logprob: -9.71683120727539
    6. 'connected' → logprob: -10.84183120727539
    7. '	for' → logprob: -11.09183120727539
    8. ' connected' → logprob: -11.96683120727539
    9. '    
' → logprob: -12.21683120727539
    10. ' ' → logprob: -12.46683120727539

Token 285: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0034810397773981094
    2. '=' → logprob: -5.878480911254883
    3. '_' → logprob: -8.003480911254883
    4. '_connected' → logprob: -8.503480911254883
    5. '_union' → logprob: -9.503480911254883
    6. '_edges' → logprob: -10.003480911254883
    7. '_connections' → logprob: -12.003480911254883
    8. '_components' → logprob: -12.128480911254883
    9. '   ' → logprob: -13.253480911254883
    10. ' ' → logprob: -14.628480911254883

Token 286: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1797713190317154
    2. ' ' → logprob: -1.8047713041305542
    3. '1' → logprob: -11.429771423339844
    4. ' n' → logprob: -12.554771423339844
    5. ' start' → logprob: -12.929771423339844
    6. 'start' → logprob: -12.929771423339844
    7. 'end' → logprob: -13.679771423339844
    8. '   ' → logprob: -13.679771423339844
    9. '  ' → logprob: -14.117271423339844
    10. 'n' → logprob: -14.179771423339844

Token 287: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0010834212880581617
    2. '1' → logprob: -7.0010833740234375
    3. ' ' → logprob: -9.251083374023438
    4. 'n' → logprob: -9.626083374023438
    5. 'start' → logprob: -11.876083374023438
    6. '   ' → logprob: -14.251083374023438
    7. '2' → logprob: -14.501083374023438
    8. 'len' → logprob: -14.876083374023438
    9. ' n' → logprob: -15.126083374023438
    10. 'end' → logprob: -15.313583374023438

Token 288: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.13671869039535522
    2. '   ' → logprob: -3.26171875
    3. ' for' → logprob: -3.26171875
    4. 'for' → logprob: -3.88671875
    5. '    
' → logprob: -4.01171875
    6. '  
' → logprob: -5.38671875
    7. '<|end|>' → logprob: -5.38671875
    8. ' 
' → logprob: -7.38671875
    9. '   
' → logprob: -7.51171875
    10. '' → logprob: -7.88671875

Token 289: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03659766912460327
    2. 'for' → logprob: -3.411597728729248
    3. ' for' → logprob: -6.286597728729248
    4. '    
' → logprob: -7.286597728729248
    5. '   ' → logprob: -9.53659725189209
    6. '
' → logprob: -9.66159725189209
    7. '  
' → logprob: -9.78659725189209
    8. ' 
' → logprob: -9.91159725189209
    9. '   
' → logprob: -10.03659725189209
    10. '<|end|>' → logprob: -10.28659725189209

Token 290: ' Comp' (ID: 5211)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3918207585811615
    2. 'for' → logprob: -1.1418207883834839
    3. 'components' → logprob: -6.641820907592773
    4. ' connected' → logprob: -6.766820907592773
    5. ' components' → logprob: -7.516820907592773
    6. 'connected' → logprob: -7.641820907592773
    7. ' edges' → logprob: -7.766820907592773
    8. ' unions' → logprob: -7.891820907592773
    9. 'union' → logprob: -8.766820907592773
    10. '   ' → logprob: -9.266820907592773

Token 291: 'te' (ID: 411)
  Prédit: 'onent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'onent' → logprob: -1.1511482000350952
    2. 'teur' → logprob: -1.6511482000350952
    3. 'on' → logprob: -1.9011482000350952
    4. 'te' → logprob: -2.1511483192443848
    5. 'os' → logprob: -3.1511483192443848
    6. 'ut' → logprob: -3.5261483192443848
    7. 't' → logprob: -3.6511483192443848
    8. '   ' → logprob: -3.7761483192443848
    9. 'ted' → logprob: -4.651148319244385
    10. 'té' → logprob: -4.901148319244385

Token 292: ' le' (ID: 505)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.18586663901805878
    2. ' les' → logprob: -2.185866594314575
    3. ' for' → logprob: -4.185866832733154
    4. 'les' → logprob: -4.435866832733154
    5. '_edges' → logprob: -5.060866832733154
    6. ' edges' → logprob: -5.560866832733154
    7. 'des' → logprob: -5.560866832733154
    8. ' the' → logprob: -5.935866832733154
    9. 'for' → logprob: -6.435866832733154
    10. '   ' → logprob: -6.435866832733154

Token 293: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.16551543772220612
    2. 'nombre' → logprob: -1.915515422821045
    3. 's' → logprob: -6.540515422821045
    4. ' number' → logprob: -6.665515422821045
    5. ' nombres' → logprob: -6.915515422821045
    6. 'number' → logprob: -7.290515422821045
    7. 'e' → logprob: -8.415515899658203
    8. 'nb' → logprob: -8.665515899658203
    9. 'edges' → logprob: -9.665515899658203
    10. 'n' → logprob: -10.040515899658203

Token 294: ' d' (ID: 272)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.6191060543060303
    2. ' d' → logprob: -1.6191060543060303
    3. ' de' → logprob: -1.7441060543060303
    4. 'd' → logprob: -3.4941060543060303
    5. 'des' → logprob: -3.9941060543060303
    6. ' ' → logprob: -4.744106292724609
    7. ' of' → logprob: -4.744106292724609
    8. '<|end|>' → logprob: -4.744106292724609
    9. 'de' → logprob: -5.244106292724609
    10. '   ' → logprob: -5.744106292724609

Token 295: ''ar' (ID: 54307)
  Prédit: 'ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.8725358247756958
    2. '_' → logprob: -1.6225358247756958
    3. ' edges' → logprob: -2.1225357055664062
    4. '_edges' → logprob: -2.4975357055664062
    5. 'edges' → logprob: -2.4975357055664062
    6. ' ar' → logprob: -3.1225357055664062
    7. '_ar' → logprob: -4.872535705566406
    8. ' ' → logprob: -4.997535705566406
    9. 's' → logprob: -4.997535705566406
    10. '<|end|>' → logprob: -5.122535705566406

Token 296: 'êtes' (ID: 23720)
  Prédit: 'êtes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êtes' → logprob: -0.004850649740546942
    2. 'tes' → logprob: -5.8798508644104
    3. 'ètes' → logprob: -7.3798508644104
    4. 'ê' → logprob: -8.254850387573242
    5. 'etes' → logprob: -8.254850387573242
    6. 'êt' → logprob: -8.379850387573242
    7. 'c' → logprob: -8.754850387573242
    8. 'êts' → logprob: -8.879850387573242
    9. 'cs' → logprob: -9.129850387573242
    10. 'ête' → logprob: -9.879850387573242

Token 297: ' ajout' (ID: 64605)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.0290518999099731
    2. 'for' → logprob: -1.2790518999099731
    3. ' =' → logprob: -2.4040517807006836
    4. '=' → logprob: -2.5290517807006836
    5. '   ' → logprob: -3.5290517807006836
    6. ' connected' → logprob: -3.6540517807006836
    7. 'connected' → logprob: -4.154051780700684
    8. ' used' → logprob: -4.279051780700684
    9. 'used' → logprob: -4.404051780700684
    10. 'union' → logprob: -4.529051780700684

Token 298: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.16620570421218872
    2. 'es' → logprob: -3.041205644607544
    3. 'é' → logprob: -3.916205644607544
    4. '   ' → logprob: -4.166205883026123
    5. 'ed' → logprob: -4.416205883026123
    6. 'és' → logprob: -4.416205883026123
    7. ')' → logprob: -4.916205883026123
    8. ' ' → logprob: -5.291205883026123
    9. '=' → logprob: -5.416205883026123
    10. 'e' → logprob: -5.541205883026123

Token 299: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.24569542706012726
    2. ' for' → logprob: -2.2456953525543213
    3. 'for' → logprob: -2.6206953525543213
    4. '   ' → logprob: -3.8706953525543213
    5. '    
' → logprob: -4.3706955909729
    6. '\n' → logprob: -6.4956955909729
    7. '<|end|>' → logprob: -6.4956955909729
    8. '  
' → logprob: -7.1206955909729
    9. '
' → logprob: -7.3706955909729
    10. '' → logprob: -7.6206955909729

Token 300: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4466877579689026
    2. '
' → logprob: -1.8216876983642578
    3. ' for' → logprob: -2.071687698364258
    4. 'for' → logprob: -3.321687698364258
    5. '    
' → logprob: -3.446687698364258
    6. '  
' → logprob: -6.196687698364258
    7. ' 
' → logprob: -6.946687698364258
    8. '	for' → logprob: -7.446687698364258
    9. '   
' → logprob: -7.696687698364258
    10. '\n' → logprob: -8.696687698364258

Token 301: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3435222804546356
    2. 'for' (adapté à ' for') → logprob: -1.343522310256958
    3. '   ' → logprob: -3.593522310256958
    4. '
' → logprob: -6.343522071838379
    5. '    
' → logprob: -8.093522071838379
    6. '	for' → logprob: -8.718522071838379
    7. ' 
' → logprob: -10.593522071838379
    8. ' ' → logprob: -11.218522071838379
    9. '  ' → logprob: -11.718522071838379
    10. '    ' → logprob: -12.218522071838379

Token 302: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.020600393414497375
    2. ' i' → logprob: -3.8956003189086914
    3. 'edge' → logprob: -10.395600318908691
    4. 'index' → logprob: -12.395600318908691
    5. 'idx' → logprob: -12.395600318908691
    6. ' edge' → logprob: -12.395600318908691
    7. 'e' → logprob: -12.395600318908691
    8. '   ' → logprob: -12.520600318908691
    9. '```' → logprob: -12.895600318908691
    10. 'u' → logprob: -13.145600318908691

Token 303: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.018311593681573868
    2. 'in' → logprob: -4.018311500549316
    3. ',' → logprob: -9.393311500549316
    4. ' ' → logprob: -9.768311500549316
    5. ' i' → logprob: -12.143311500549316
    6. '	in' → logprob: -12.518311500549316
    7. 'range' → logprob: -12.643311500549316
    8. ' ,' → logprob: -13.143311500549316
    9. '   ' → logprob: -13.393311500549316
    10. '  ' → logprob: -14.018311500549316

Token 304: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.002476016292348504
    2. ' range' → logprob: -6.002476215362549
    3. '	range' → logprob: -16.00247573852539
    4. '   ' → logprob: -16.12747573852539
    5. 'rang' → logprob: -16.25247573852539
    6. '(range' → logprob: -18.00247573852539
    7. ' ' → logprob: -18.62747573852539
    8. 'ange' → logprob: -18.87747573852539
    9. '
' → logprob: -20.25247573852539
    10. '  ' → logprob: -20.37747573852539

Token 305: '(start' (ID: 20008)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.12861011922359467
    2. '(start' → logprob: -2.128610134124756
    3. ' start' → logprob: -6.628610134124756
    4. '	start' → logprob: -8.003609657287598
    5. '[start' → logprob: -11.003609657287598
    6. '   ' → logprob: -12.878609657287598
    7. '=start' → logprob: -12.878609657287598
    8. ',start' → logprob: -13.753609657287598
    9. ':start' → logprob: -14.378609657287598
    10. 'star' → logprob: -14.628609657287598

Token 306: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004124942235648632
    2. ' ,' → logprob: -6.129125118255615
    3. ',end' → logprob: -6.254125118255615
    4. '   ' → logprob: -11.379124641418457
    5. ',
' → logprob: -14.129124641418457
    6. ' ' → logprob: -14.129124641418457
    7. '+' → logprob: -14.254124641418457
    8. '    ' → logprob: -14.879124641418457
    9. 'end' → logprob: -15.379124641418457
    10. '       ' → logprob: -15.379124641418457

Token 307: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.10020893067121506
    2. ' end' → logprob: -2.3502089977264404
    3. '   ' → logprob: -13.60020923614502
    4. '(end' → logprob: -14.22520923614502
    5. '	end' → logprob: -16.225208282470703
    6. '=end' → logprob: -16.225208282470703
    7. '
' → logprob: -17.850208282470703
    8. '    ' → logprob: -17.975208282470703
    9. '[end' → logprob: -18.100208282470703
    10. ':end' → logprob: -18.100208282470703

Token 308: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6975136399269104
    2. ' +' → logprob: -0.6975136399269104
    3. '):' → logprob: -5.447513580322266
    4. '):
' → logprob: -10.822513580322266
    5. ' ):' → logprob: -10.947513580322266
    6. '   ' → logprob: -11.697513580322266
    7. ')' → logprob: -12.947513580322266
    8. ' ' → logprob: -14.447513580322266
    9. '+:' → logprob: -15.072513580322266
    10. ' ):
' → logprob: -15.822513580322266

Token 309: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0031781906727701426
    2. ' ' → logprob: -5.753178119659424
    3. ')' → logprob: -14.878178596496582
    4. '   ' → logprob: -16.253177642822266
    5. '
' → logprob: -17.253177642822266
    6. '```' → logprob: -17.878177642822266
    7. '  ' → logprob: -19.003177642822266
    8. '):
' → logprob: -19.378177642822266
    9. ' )' → logprob: -20.378177642822266
    10. '):' → logprob: -20.628177642822266

Token 310: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.955703818472102e-05
    2. ' ' → logprob: -9.750059127807617
    3. ')' → logprob: -13.875059127807617
    4. '
' → logprob: -16.625059127807617
    5. '   ' → logprob: -16.875059127807617
    6. '```' → logprob: -17.875059127807617
    7. '):
' → logprob: -17.875059127807617
    8. '  ' → logprob: -19.000059127807617
    9. ' )' → logprob: -19.125059127807617
    10. '),' → logprob: -19.937559127807617

Token 311: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0004331725067459047
    2. ' ):' → logprob: -8.750432968139648
    3. '):
' → logprob: -8.875432968139648
    4. ':' → logprob: -9.000432968139648
    5. ')' → logprob: -11.500432968139648
    6. '):
' → logprob: -14.500432968139648
    7. ' :' → logprob: -15.375432968139648
    8. ',' → logprob: -15.500432968139648
    9. '   ' → logprob: -15.500432968139648
    10. ' ' → logprob: -16.62543296813965

Token 312: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0030632726848125458
    2. ' if' → logprob: -6.503063201904297
    3. ',' → logprob: -7.003063201904297
    4. '        
' → logprob: -8.378063201904297
    5. ' edges' → logprob: -9.003063201904297
    6. 'if' → logprob: -9.253063201904297
    7. ' x' → logprob: -9.503063201904297
    8. 'edges' → logprob: -10.253063201904297
    9. 'x' → logprob: -11.128063201904297
    10. '(edges' → logprob: -11.503063201904297

Token 313: ' a' (ID: 261)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.2364947646856308
    2. '       ' → logprob: -2.236494779586792
    3. ' u' → logprob: -2.611494779586792
    4. 'if' → logprob: -4.611494541168213
    5. 'x' → logprob: -4.736494541168213
    6. ' if' → logprob: -4.861494541168213
    7. 'edge' → logprob: -6.736494541168213
    8. '   ' → logprob: -6.736494541168213
    9. ' x' → logprob: -7.736494541168213
    10. 'e' → logprob: -8.111495018005371

Token 314: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001742650754749775
    2. ',b' → logprob: -6.376742839813232
    3. ' ,' → logprob: -10.251742362976074
    4. 'b' → logprob: -12.501742362976074
    5. '_,' → logprob: -14.876742362976074
    6. ',v' → logprob: -15.126742362976074
    7. ',a' → logprob: -16.00174331665039
    8. ',d' → logprob: -16.50174331665039
    9. 's' → logprob: -16.87674331665039
    10. ',y' → logprob: -16.87674331665039

Token 315: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.3868725001811981
    2. ' b' → logprob: -1.1368725299835205
    3. ',' → logprob: -14.011872291564941
    4. ',b' → logprob: -15.761872291564941
    5. '   ' → logprob: -15.886872291564941
    6. ' ' → logprob: -16.261873245239258
    7. '<|end|>' → logprob: -16.386873245239258
    8. '	b' → logprob: -16.886873245239258
    9. '    ' → logprob: -17.136873245239258
    10. '    
' → logprob: -17.261873245239258

Token 316: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06688906997442245
    2. ' =' → logprob: -2.8168890476226807
    3. ',' → logprob: -5.31688928604126
    4. '   ' → logprob: -15.441888809204102
    5. ')' → logprob: -15.566888809204102
    6. ' ,' → logprob: -15.816888809204102
    7. '       ' → logprob: -15.941888809204102
    8. ')=' → logprob: -15.941888809204102
    9. '    ' → logprob: -16.3168888092041
    10. '=edge' → logprob: -16.4418888092041

Token 317: ' _' (ID: 1175)
  Prédit: ' edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.7144025564193726
    2. ' w' → logprob: -2.089402675628662
    3. 'w' → logprob: -2.464402675628662
    4. '_' → logprob: -2.464402675628662
    5. 'c' → logprob: -2.964402675628662
    6. ' c' → logprob: -3.214402675628662
    7. ' _' → logprob: -3.339402675628662
    8. ' cost' → logprob: -3.589402675628662
    9. ' weight' → logprob: -3.839402675628662
    10. 'edges' → logprob: -3.964402675628662

Token 318: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14267782866954803
    2. '=' → logprob: -2.0176777839660645
    3. ',' → logprob: -13.267678260803223
    4. '=edge' → logprob: -14.892678260803223
    5. ')' → logprob: -15.392678260803223
    6. ')=' → logprob: -16.392677307128906
    7. ' ' → logprob: -16.642677307128906
    8. '   ' → logprob: -17.955177307128906
    9. '<|end|>' → logprob: -18.017677307128906
    10. ' =
' → logprob: -18.205177307128906

Token 319: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.008616935461759567
    2. ' edges' → logprob: -4.758616924285889
    3. '.edges' → logprob: -13.758617401123047
    4. '   ' → logprob: -14.133617401123047
    5. '(edges' → logprob: -14.883617401123047
    6. 'edge' → logprob: -16.383617401123047
    7. '_edges' → logprob: -17.008617401123047
    8. 'Edges' → logprob: -18.383617401123047
    9. '
' → logprob: -18.508617401123047
    10. '       ' → logprob: -19.383617401123047

Token 320: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.856408536899835e-05
    2. '[' → logprob: -10.500028610229492
    3. ' [' → logprob: -14.875028610229492
    4. 'i' → logprob: -15.500028610229492
    5. '   ' → logprob: -15.500028610229492
    6. '[
' → logprob: -16.250028610229492
    7. ' i' → logprob: -17.250028610229492
    8. '[a' → logprob: -17.500028610229492
    9. ']' → logprob: -17.625028610229492
    10. ')[' → logprob: -17.750028610229492

Token 321: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001748126931488514
    2. ']' → logprob: -6.501748085021973
    3. ')
' → logprob: -9.126748085021973
    4. '<|end|>' → logprob: -9.626748085021973
    5. '])' → logprob: -11.001748085021973
    6. '[' → logprob: -11.126748085021973
    7. ' )' → logprob: -11.251748085021973
    8. ')]' → logprob: -11.751748085021973
    9. '       ' → logprob: -11.751748085021973
    10. '   ' → logprob: -12.501748085021973

Token 322: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00017231269157491624
    2. ' if' → logprob: -9.62517261505127
    3. '        
' → logprob: -10.00017261505127
    4. 'if' → logprob: -10.50017261505127
    5. 'uf' → logprob: -10.87517261505127
    6. ' uf' → logprob: -12.12517261505127
    7. '   ' → logprob: -13.00017261505127
    8. '
' → logprob: -13.50017261505127
    9. '      ' → logprob: -14.25017261505127
    10. '           ' → logprob: -14.25017261505127

Token 323: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.7099837064743042
    2. ' if' → logprob: -1.3349837064743042
    3. 'uf' → logprob: -1.7099837064743042
    4. '       ' → logprob: -3.0849838256835938
    5. ' uf' → logprob: -4.584983825683594
    6. '   ' → logprob: -4.834983825683594
    7. 'ufi' → logprob: -9.584983825683594
    8. '        
' → logprob: -9.709983825683594
    9. 'ufs' → logprob: -10.084983825683594
    10. '	if' → logprob: -10.334983825683594

Token 324: ' uf' (ID: 35772)
  Prédit: 'uf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uf' → logprob: -0.0021899950224906206
    2. ' uf' → logprob: -6.127190113067627
    3. '   ' → logprob: -13.377189636230469
    4. 'not' → logprob: -13.502189636230469
    5. ' ' → logprob: -14.252189636230469
    6. '  ' → logprob: -14.877189636230469
    7. 'ufi' → logprob: -15.252189636230469
    8. 'ufs' → logprob: -15.377189636230469
    9. ' not' → logprob: -15.502189636230469
    10. '    ' → logprob: -16.75218963623047

Token 325: '.union' (ID: 140875)
  Prédit: '.union'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.union' → logprob: -0.00017839208885561675
    2. '.' → logprob: -8.750178337097168
    3. ' .' → logprob: -11.375178337097168
    4. 'union' → logprob: -11.875178337097168
    5. '.un' → logprob: -13.875178337097168
    6. '	union' → logprob: -15.875178337097168
    7. '.uniform' → logprob: -16.375179290771484
    8. ' union' → logprob: -16.500179290771484
    9. '.find' → logprob: -16.625179290771484
    10. ').' → logprob: -16.875179290771484

Token 326: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -4.961759259458631e-06
    2. '(' → logprob: -12.250004768371582
    3. '(
' → logprob: -16.6250057220459
    4. ' (' → logprob: -18.2500057220459
    5. '(ai' → logprob: -18.3750057220459
    6. '(A' → logprob: -19.2500057220459
    7. '<|end|>' → logprob: -19.5000057220459
    8. '((' → logprob: -19.7500057220459
    9. '(an' → logprob: -20.1250057220459
    10. '(ab' → logprob: -20.3750057220459

Token 327: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002621789462864399
    2. ',b' → logprob: -6.252621650695801
    3. ' ,' → logprob: -7.502621650695801
    4. 'b' → logprob: -8.8776216506958
    5. ',
' → logprob: -14.0026216506958
    6. ' b' → logprob: -14.7526216506958
    7. '       ' → logprob: -15.8776216506958
    8. '(b' → logprob: -16.627622604370117
    9. '‌,' → logprob: -16.752622604370117
    10. 'a' → logprob: -16.877622604370117

Token 328: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.009757270105183125
    2. ' b' → logprob: -4.634757041931152
    3. '   ' → logprob: -14.509757041931152
    4. ' ' → logprob: -15.259757041931152
    5. '       ' → logprob: -15.384757041931152
    6. ')b' → logprob: -15.384757041931152
    7. '    ' → logprob: -16.88475799560547
    8. '	b' → logprob: -17.13475799560547
    9. '
' → logprob: -17.50975799560547
    10. ')' → logprob: -17.63475799560547

Token 329: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.20144394040107727
    2. '):' → logprob: -1.7014439105987549
    3. '):
' → logprob: -11.201443672180176
    4. '       ' → logprob: -11.576443672180176
    5. ':' → logprob: -12.951443672180176
    6. ')' → logprob: -13.201443672180176
    7. '   ' → logprob: -13.826443672180176
    8. ' ):
' → logprob: -14.076443672180176
    9. ':
' → logprob: -14.701443672180176
    10. '):

' → logprob: -14.826443672180176

Token 330: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00016742534353397787
    2. '
' → logprob: -9.500167846679688
    3. 'count' → logprob: -9.750167846679688
    4. '       ' → logprob: -10.500167846679688
    5. '            
' → logprob: -13.125167846679688
    6. ' count' → logprob: -13.750167846679688
    7. '               ' → logprob: -13.750167846679688
    8. '          ' → logprob: -14.375167846679688
    9. '```' → logprob: -14.500167846679688
    10. '		' → logprob: -15.125167846679688

Token 331: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.3369554579257965
    2. ' count' → logprob: -1.9619554281234741
    3. '           ' → logprob: -2.2119555473327637
    4. '               ' → logprob: -3.5869555473327637
    5. '       ' → logprob: -4.836955547332764
    6. '   ' → logprob: -8.086955070495605
    7. '	count' → logprob: -10.086955070495605
    8. '
' → logprob: -11.586955070495605
    9. ',count' → logprob: -12.836955070495605
    10. '  ' → logprob: -12.961955070495605

Token 332: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.4741118848323822
    2. '+=' → logprob: -0.9741119146347046
    3. '   ' → logprob: -10.849111557006836
    4. '    ' → logprob: -11.474111557006836
    5. ']+=' → logprob: -13.224111557006836
    6. '       ' → logprob: -13.974111557006836
    7. '           ' → logprob: -14.224111557006836
    8. '+' → logprob: -14.349111557006836
    9. '        ' → logprob: -14.599111557006836
    10. '```' → logprob: -15.474111557006836

Token 333: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0019286326132714748
    2. ' ' → logprob: -6.251928806304932
    3. '   ' → logprob: -17.376928329467773
    4. '<|end|>' → logprob: -19.001928329467773
    5. '  ' → logprob: -19.501928329467773
    6. '
' → logprob: -19.751928329467773
    7. ' ' → logprob: -19.751928329467773
    8. '```' → logprob: -20.001928329467773
    9. '2' → logprob: -22.564428329467773
    10. '    ' → logprob: -22.626928329467773

Token 334: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '   ' → logprob: -20.625001907348633
    4. '```' → logprob: -21.250001907348633
    5. '
' → logprob: -21.375001907348633
    6. '<|end|>' → logprob: -21.625001907348633
    7. '۱' → logprob: -22.625001907348633
    8. '  ' → logprob: -22.937501907348633
    9. '１' → logprob: -23.125001907348633
    10. '১' → logprob: -23.437501907348633

Token 335: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5760815739631653
    2. '
' → logprob: -0.9510815739631653
    3. '       ' → logprob: -3.5760815143585205
    4. '    
' → logprob: -3.8260815143585205
    5. '  
' → logprob: -7.4510817527771
    6. '           ' → logprob: -8.076081275939941
    7. '        
' → logprob: -8.326081275939941
    8. ' 
' → logprob: -8.451081275939941
    9. '   
' → logprob: -8.451081275939941
    10. '    ' → logprob: -9.326081275939941

Token 336: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007384304888546467
    2. '
' → logprob: -5.007384300231934
    3. ' if' → logprob: -7.632384300231934
    4. '    
' → logprob: -9.382384300231934
    5. '       ' → logprob: -10.382384300231934
    6. ' return' → logprob: -10.507384300231934
    7. 'if' → logprob: -10.507384300231934
    8. 'return' → logprob: -12.257384300231934
    9. ' 
' → logprob: -13.132384300231934
    10. '   ' → logprob: -13.132384300231934

Token 337: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.3160734474658966
    2. ' if' → logprob: -1.5660734176635742
    3. '       ' → logprob: -3.566073417663574
    4. '           ' → logprob: -3.566073417663574
    5. '   ' → logprob: -5.191073417663574
    6. '
' → logprob: -11.191073417663574
    7. '	if' → logprob: -12.441073417663574
    8. '    ' → logprob: -12.691073417663574
    9. '     ' → logprob: -13.441073417663574
    10. ' ' → logprob: -13.441073417663574

Token 338: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -1.4855663721391466e-05
    2. ' count' → logprob: -11.125015258789062
    3. '	count' → logprob: -18.500015258789062
    4. 'c' → logprob: -18.625015258789062
    5. '   ' → logprob: -18.625015258789062
    6. 'cou' → logprob: -18.750015258789062
    7. ' ' → logprob: -19.250015258789062
    8. '
' → logprob: -20.500015258789062
    9. 'ount' → logprob: -20.625015258789062
    10. 'co' → logprob: -21.000015258789062

Token 339: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.029772015288472176
    2. ' ==' → logprob: -3.5297720432281494
    3. '==
' → logprob: -11.02977180480957
    4. '=' → logprob: -12.90477180480957
    5. '==(' → logprob: -14.15477180480957
    6. '===' → logprob: -14.27977180480957
    7. ']==' → logprob: -14.40477180480957
    8. '>=' → logprob: -14.52977180480957
    9. ')==' → logprob: -15.52977180480957
    10. '	' → logprob: -16.52977180480957

Token 340: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0040785204619169235
    2. ' n' → logprob: -5.504078388214111
    3. '	n' → logprob: -16.379077911376953
    4. '
' → logprob: -17.004077911376953
    5. '   ' → logprob: -18.379077911376953
    6. '(n' → logprob: -18.629077911376953
    7. ' ' → logprob: -19.379077911376953
    8. '<n' → logprob: -20.629077911376953
    9. '_n' → logprob: -21.004077911376953
    10. '

' → logprob: -21.879077911376953

Token 341: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.3868900537490845
    2. '-' → logprob: -1.1368900537490845
    3. '   ' → logprob: -11.261890411376953
    4. ' ' → logprob: -13.011890411376953
    5. ' ' → logprob: -13.386890411376953
    6. '
' → logprob: -13.636890411376953
    7. '       ' → logprob: -15.261890411376953
    8. '  ' → logprob: -15.261890411376953
    9. '```' → logprob: -15.511890411376953
    10. '	' → logprob: -15.636890411376953

Token 342: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.061967797577381134
    2. ' ' → logprob: -2.8119678497314453
    3. '   ' → logprob: -16.686967849731445
    4. '  ' → logprob: -16.936967849731445
    5. ' ' → logprob: -17.436967849731445
    6. '```' → logprob: -18.811967849731445
    7. '2' → logprob: -19.936967849731445
    8. '
' → logprob: -20.061967849731445
    9. '<|end|>' → logprob: -20.311967849731445
    10. '    ' → logprob: -20.311967849731445

Token 343: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.014684110297821e-06
    2. ' ' → logprob: -11.625008583068848
    3. '
' → logprob: -18.375009536743164
    4. '```' → logprob: -18.625009536743164
    5. '   ' → logprob: -19.000009536743164
    6. '<|end|>' → logprob: -20.062509536743164
    7. '  ' → logprob: -20.187509536743164
    8. '

' → logprob: -20.375009536743164
    9. '۱' → logprob: -20.625009536743164
    10. '১' → logprob: -20.750009536743164

Token 344: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06409864872694016
    2. ':
' → logprob: -3.189098596572876
    3. '               ' → logprob: -4.189098834991455
    4. '           ' → logprob: -5.939098834991455
    5. '       ' → logprob: -6.189098834991455
    6. ':return' → logprob: -6.939098834991455
    7. ' :' → logprob: -11.314098358154297
    8. '   ' → logprob: -11.564098358154297
    9. ',' → logprob: -12.064098358154297
    10. '):' → logprob: -12.189098358154297

Token 345: ' ' (ID: 220)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.013525117188692093
    2. '
' → logprob: -4.763525009155273
    3. '           ' → logprob: -5.763525009155273
    4. ' return' → logprob: -6.763525009155273
    5. 'return' → logprob: -8.388525009155273
    6. '       ' → logprob: -8.638525009155273
    7. '                
' → logprob: -9.513525009155273
    8. ' 
' → logprob: -9.638525009155273
    9. '            
' → logprob: -10.888525009155273
    10. '  
' → logprob: -11.263525009155273

Token 346: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1917320042848587
    2. 'return' → logprob: -1.9417320489883423
    3. ' return' → logprob: -3.6917319297790527
    4. '           ' → logprob: -5.191731929779053
    5. '
' → logprob: -7.941731929779053
    6. '       ' → logprob: -8.816732406616211
    7. '   ' → logprob: -12.191732406616211
    8. '	return' → logprob: -12.566732406616211
    9. ':return' → logprob: -12.816732406616211
    10. '
' → logprob: -13.441732406616211

Token 347: ' Ar' (ID: 1754)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.17153894901275635
    2. '               ' → logprob: -2.546538829803467
    3. 'return' → logprob: -2.546538829803467
    4. '           ' → logprob: -7.171538829803467
    5. '       ' → logprob: -9.296539306640625
    6. ' break' → logprob: -10.171539306640625
    7. '
' → logprob: -11.671539306640625
    8. 'break' → logprob: -11.921539306640625
    9. ' ' → logprob: -12.921539306640625
    10. '	return' → logprob: -12.921539306640625

Token 348: 'bre' (ID: 9945)
  Prédit: 'bre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bre' → logprob: -0.004844596143811941
    2. 'bres' → logprob: -5.379844665527344
    3. 'bo' → logprob: -9.504844665527344
    4. 'b' → logprob: -9.504844665527344
    5. 'e' → logprob: -10.254844665527344
    6. 'Bre' → logprob: -11.879844665527344
    7. 'ête' → logprob: -12.504844665527344
    8. 'r' → logprob: -12.629844665527344
    9. 'êtes' → logprob: -13.004844665527344
    10. 'bor' → logprob: -13.004844665527344

Token 349: ' couvr' (ID: 129883)
  Prédit: ' couvr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' couvr' → logprob: -0.5018336772918701
    2. '           ' → logprob: -1.1268336772918701
    3. '       ' → logprob: -3.25183367729187
    4. ' couvre' → logprob: -5.126833915710449
    5. '<|end|>' → logprob: -5.376833915710449
    6. '   ' → logprob: -5.376833915710449
    7. ' couverture' → logprob: -5.751833915710449
    8. ' complet' → logprob: -5.876833915710449
    9. ' cou' → logprob: -6.126833915710449
    10. ' couvert' → logprob: -6.126833915710449

Token 350: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.00023238400171976537
    2. 't' → logprob: -9.250232696533203
    3. 'iant' → logprob: -10.125232696533203
    4. '
' → logprob: -11.250232696533203
    5. '#' → logprob: -11.500232696533203
    6. 'i' → logprob: -11.625232696533203
    7. 'nt' → logprob: -11.750232696533203
    8. 'ent' → logprob: -11.750232696533203
    9. 'int' → logprob: -11.875232696533203
    10. 'ing' → logprob: -11.875232696533203

Token 351: ' complet' (ID: 5127)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.22851762175559998
    2. '               ' → logprob: -1.8535176515579224
    3. ' return' → logprob: -4.103517532348633
    4. ' possible' → logprob: -4.603517532348633
    5. '       ' → logprob: -4.728517532348633
    6. ' complet' → logprob: -6.228517532348633
    7. '.' → logprob: -6.228517532348633
    8. 'return' → logprob: -6.228517532348633
    9. ':' → logprob: -7.103517532348633
    10. '
' → logprob: -7.603517532348633

Token 352: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.015698105096817017
    2. '           ' → logprob: -4.390697956085205
    3. '
' → logprob: -6.015697956085205
    4. '       ' → logprob: -7.640697956085205
    5. ' return' → logprob: -9.890698432922363
    6. ':' → logprob: -10.015698432922363
    7. '                
' → logprob: -10.265698432922363
    8. 'return' → logprob: -10.640698432922363
    9. '            
' → logprob: -10.765698432922363
    10. ',' → logprob: -11.015698432922363

Token 353: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.09339119493961334
    2. '           ' → logprob: -2.468391180038452
    3. ' return' → logprob: -5.593391418457031
    4. 'return' → logprob: -7.593391418457031
    5. '       ' → logprob: -8.968391418457031
    6. '
' → logprob: -9.468391418457031
    7. '   ' → logprob: -13.093391418457031
    8. '              ' → logprob: -13.343391418457031
    9. '            
' → logprob: -13.593391418457031
    10. '             ' → logprob: -13.968391418457031

Token 354: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.06080780178308487
    2. '               ' → logprob: -3.310807704925537
    3. ' return' → logprob: -3.810807704925537
    4. '           ' → logprob: -8.060808181762695
    5. '   ' → logprob: -11.185808181762695
    6. '
' → logprob: -11.185808181762695
    7. '       ' → logprob: -11.435808181762695
    8. '	return' → logprob: -11.685808181762695
    9. '                   ' → logprob: -11.685808181762695
    10. '                
' → logprob: -13.310808181762695

Token 355: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -4.5491004129871726e-05
    2. ' True' → logprob: -10.000045776367188
    3. '(True' → logprob: -17.000045776367188
    4. '   ' → logprob: -17.625045776367188
    5. 'true' → logprob: -19.500045776367188
    6. '
' → logprob: -19.750045776367188
    7. 'False' → logprob: -20.750045776367188
    8. '=True' → logprob: -20.875045776367188
    9. '1' → logprob: -21.250045776367188
    10. 'TRUE' → logprob: -21.625045776367188

Token 356: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -5.6100132496794686e-05
    2. '
' → logprob: -10.750056266784668
    3. '    
' → logprob: -10.875056266784668
    4. '       ' → logprob: -12.000056266784668
    5. 'return' → logprob: -12.375056266784668
    6. ' return' → logprob: -12.750056266784668
    7. '    ' → logprob: -14.375056266784668
    8. '  
' → logprob: -14.875056266784668
    9. '  ' → logprob: -15.000056266784668
    10. ',' → logprob: -15.750056266784668

Token 357: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00034237600630149245
    2. 'return' → logprob: -8.00034236907959
    3. ' return' → logprob: -12.12534236907959
    4. '
' → logprob: -14.37534236907959
    5. '       ' → logprob: -14.37534236907959
    6. '    
' → logprob: -15.87534236907959
    7. '	return' → logprob: -16.125343322753906
    8. '```' → logprob: -17.375343322753906
    9. '  ' → logprob: -17.500343322753906
    10. '    ' → logprob: -18.500343322753906

Token 358: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.01160840131342411
    2. '   ' → logprob: -4.511608600616455
    3. ' return' → logprob: -7.511608600616455
    4. '
' → logprob: -12.136608123779297
    5. ' ' → logprob: -13.011608123779297
    6. '  ' → logprob: -13.261608123779297
    7. '	return' → logprob: -13.386608123779297
    8. 'eturn' → logprob: -14.136608123779297
    9. '       ' → logprob: -14.386608123779297
    10. '    
' → logprob: -14.636608123779297

Token 359: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.12692810595035553
    2. ' False' → logprob: -2.1269280910491943
    3. '(False' → logprob: -18.376928329467773
    4. '_false' → logprob: -21.251928329467773
    5. '.False' → logprob: -22.126928329467773
    6. '=False' → logprob: -22.251928329467773
    7. 'false' → logprob: -22.376928329467773
    8. ' ' → logprob: -23.501928329467773
    9. ' false' → logprob: -23.501928329467773
    10. 'True' → logprob: -24.126928329467773

Token 360: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9081047177314758
    2. '<|end|>' → logprob: -1.158104658126831
    3. '

' → logprob: -1.658104658126831
    4. 'def' → logprob: -2.408104658126831
    5. '<|end|>' → logprob: -6.40810489654541
    6. '```' → logprob: -8.65810489654541
    7. '


' → logprob: -9.03310489654541
    8. '  
' → logprob: -10.28310489654541
    9. '\n' → logprob: -10.65810489654541
    10. '    
' → logprob: -10.78310489654541

Token 361: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.9361264946837764e-07
    2. 'from' → logprob: -16.875
    3. '```' → logprob: -16.875
    4. 'import' → logprob: -17.0
    5. ' def' → logprob: -17.25
    6. 'de' → logprob: -17.375
    7. '#' → logprob: -19.625
    8. '
' → logprob: -19.75
    9. ':def' → logprob: -20.25
    10. '	def' → logprob: -20.625

Token 362: ' find' (ID: 1646)
  Prédit: ' find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' find' → logprob: -0.870039701461792
    2. ' main' → logprob: -1.495039701461792
    3. ' binary' → logprob: -1.870039701461792
    4. 'binary' → logprob: -2.995039701461792
    5. ' longest' → logprob: -3.495039701461792
    6. ' minimal' → logprob: -3.620039701461792
    7. ' can' → logprob: -4.495039939880371
    8. ' minimum' → logprob: -4.620039939880371
    9. 'find' → logprob: -4.745039939880371
    10. 'main' → logprob: -4.870039939880371

Token 363: '_min' (ID: 15950)
  Prédit: '_max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -1.031040906906128
    2. '_sp' → logprob: -1.281040906906128
    3. '_' → logprob: -1.906040906906128
    4. '_min' → logprob: -1.906040906906128
    5. '_best' → logprob: -3.781040906906128
    6. '_span' → logprob: -4.781041145324707
    7. '_valid' → logprob: -5.406041145324707
    8. '(' → logprob: -5.406041145324707
    9. '_opt' → logprob: -5.906041145324707
    10. '_low' → logprob: -6.031041145324707

Token 364: '_s' (ID: 1278)
  Prédit: '_sp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sp' → logprob: -1.1069726943969727
    2. '_max' → logprob: -1.3569726943969727
    3. 'imum' → logprob: -1.8569726943969727
    4. '_cost' → logprob: -2.8569726943969727
    5. '_range' → logprob: -3.2319726943969727
    6. 'imal' → logprob: -3.2319726943969727
    7. '_interval' → logprob: -3.9819726943969727
    8. '_difference' → logprob: -3.9819726943969727
    9. '_diff' → logprob: -4.356972694396973
    10. '_span' → logprob: -4.356972694396973

Token 365: 'lim' (ID: 5406)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.0039466619491577
    2. 't' → logprob: -1.1289466619491577
    3. 'pan' → logprob: -1.3789466619491577
    4. 'egment' → logprob: -3.1289467811584473
    5. 'pent' → logprob: -5.753946781158447
    6. 'ub' → logprob: -6.003946781158447
    7. 'lack' → logprob: -6.003946781158447
    8. 'pand' → logprob: -6.503946781158447
    9. 'peed' → logprob: -7.378946781158447
    10. 'eg' → logprob: -7.753946781158447

Token 366: 'ness' (ID: 2816)
  Prédit: 'ness'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ness' → logprob: -0.01860499195754528
    2. 'span' → logprob: -5.268604755401611
    3. '_tree' → logprob: -6.018604755401611
    4. 'ity' → logprob: -6.268604755401611
    5. '_span' → logprob: -6.393604755401611
    6. 'tree' → logprob: -6.518604755401611
    7. 'n' → logprob: -6.643604755401611
    8. 'm' → logprob: -6.893604755401611
    9. '_range' → logprob: -7.018604755401611
    10. '_index' → logprob: -8.14360523223877

Token 367: '(n' (ID: 2406)
  Prédit: '(edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(edges' → logprob: -0.006115898489952087
    2. '(' → logprob: -5.506115913391113
    3. ' (' → logprob: -6.256115913391113
    4. '(ed' → logprob: -9.506115913391113
    5. '(edge' → logprob: -11.006115913391113
    6. '():' → logprob: -12.131115913391113
    7. '_edges' → logprob: -12.381115913391113
    8. '(lines' → logprob: -13.631115913391113
    9. '(range' → logprob: -13.631115913391113
    10. '(vertices' → logprob: -14.006115913391113

Token 368: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.771655115589965e-05
    2. ' ,' → logprob: -11.000018119812012
    3. ',
' → logprob: -14.875018119812012
    4. '‌,' → logprob: -15.250018119812012
    5. 'edges' → logprob: -16.625017166137695
    6. ',n' → logprob: -17.000017166137695
    7. ',e' → logprob: -17.125017166137695
    8. '_edges' → logprob: -17.250017166137695
    9. '(edges' → logprob: -17.375017166137695
    10. 's' → logprob: -17.375017166137695

Token 369: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.31350037455558777
    2. ' edges' → logprob: -1.3135004043579102
    3. 'm' → logprob: -8.68850040435791
    4. ' m' → logprob: -10.56350040435791
    5. '   ' → logprob: -11.68850040435791
    6. '(edges' → logprob: -11.93850040435791
    7. 'weights' → logprob: -12.06350040435791
    8. 'edge' → logprob: -12.06350040435791
    9. 'ed' → logprob: -12.68850040435791
    10. ' ' → logprob: -13.56350040435791

Token 370: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3486287593841553
    2. '):' → logprob: -1.2236287593841553
    3. '):
' → logprob: -9.223628997802734
    4. ')' → logprob: -10.723628997802734
    5. ',n' → logprob: -10.973628997802734
    6. ':' → logprob: -10.973628997802734
    7. '   ' → logprob: -11.223628997802734
    8. ' ):' → logprob: -11.473628997802734
    9. ' ,' → logprob: -13.223628997802734
    10. '):
' → logprob: -13.723628997802734

Token 371: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02408944070339203
    2. ':' → logprob: -3.7740893363952637
    3. ':
' → logprob: -7.399089336395264
    4. 'def' → logprob: -9.649089813232422
    5. 'edges' → logprob: -10.024089813232422
    6. ' edges' → logprob: -10.649089813232422
    7. '```' → logprob: -10.899089813232422
    8. '(edges' → logprob: -11.024089813232422
    9. ',' → logprob: -11.399089813232422
    10. 'n' → logprob: -11.524089813232422

Token 372: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4326993525028229
    2. ' edges' → logprob: -1.1826993227005005
    3. 'edges' → logprob: -3.18269944190979
    4. ' left' → logprob: -6.557699203491211
    5. 'left' → logprob: -7.807699203491211
    6. ' sorted' → logprob: -8.307699203491211
    7. ' low' → logprob: -8.307699203491211
    8. '
' → logprob: -8.682699203491211
    9. 'n' → logprob: -9.182699203491211
    10. ' n' → logprob: -9.182699203491211

Token 373: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5681008696556091
    2. '    ' → logprob: -1.443100929260254
    3. ' n' → logprob: -1.943100929260254
    4. 'n' → logprob: -3.318100929260254
    5. ' 
' → logprob: -5.193100929260254
    6. ' """
' → logprob: -5.443100929260254
    7. '     
' → logprob: -6.568100929260254
    8. '
' → logprob: -6.693100929260254
    9. ' #' → logprob: -6.693100929260254
    10. ' indent' → logprob: -6.818100929260254

Token 374: ' Recherche' (ID: 114815)
  Prédit: ' edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.3274897336959839
    2. ' low' → logprob: -2.4524898529052734
    3. ' left' → logprob: -2.7024898529052734
    4. '   ' → logprob: -3.2024898529052734
    5. 'edges' → logprob: -3.5774898529052734
    6. ' sorted' → logprob: -4.452489852905273
    7. '#' → logprob: -4.452489852905273
    8. 'left' → logprob: -4.702489852905273
    9. 'low' → logprob: -4.827489852905273
    10. 'def' → logprob: -5.702489852905273

Token 375: ' la' (ID: 557)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4260280132293701
    2. ' de' → logprob: -1.5510280132293701
    3. ' la' → logprob: -3.42602801322937
    4. ' l' → logprob: -3.92602801322937
    5. 'def' → logprob: -4.426028251647949
    6. ' n' → logprob: -4.801028251647949
    7. ' d' → logprob: -4.926028251647949
    8. ' len' → logprob: -4.926028251647949
    9. ' low' → logprob: -4.926028251647949
    10. ' le' → logprob: -5.426028251647949

Token 376: ' plus' (ID: 2932)
  Prédit: ' minimal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' minimal' → logprob: -0.7068372368812561
    2. ' minimum' → logprob: -2.2068371772766113
    3. 'minimum' → logprob: -2.3318371772766113
    4. 'min' → logprob: -2.4568371772766113
    5. ' smallest' → logprob: -2.8318371772766113
    6. 'minimal' → logprob: -3.4568371772766113
    7. ' minimale' → logprob: -3.8318371772766113
    8. ' best' → logprob: -4.206837177276611
    9. 'best' → logprob: -4.331837177276611
    10. 'm' → logprob: -4.706837177276611

Token 377: ' petite' (ID: 28119)
  Prédit: 'pet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pet' → logprob: -0.06602894514799118
    2. ' petite' → logprob: -2.9410288333892822
    3. 'small' → logprob: -6.191029071807861
    4. ' small' → logprob: -6.441029071807861
    5. '-' → logprob: -6.691029071807861
    6. ' pet' → logprob: -6.816029071807861
    7. ' petit' → logprob: -6.816029071807861
    8. ' faible' → logprob: -6.941029071807861
    9. 'cour' → logprob: -7.691029071807861
    10. '```' → logprob: -8.066028594970703

Token 378: ' différence' (ID: 79196)
  Prédit: ' différence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' différence' → logprob: -1.2054423093795776
    2. ' valeur' → logprob: -1.8304423093795776
    3. 'diff' → logprob: -2.330442428588867
    4. 'val' → logprob: -2.705442428588867
    5. ' plage' → logprob: -2.705442428588867
    6. ' marge' → logprob: -2.830442428588867
    7. 'difference' → logprob: -3.080442428588867
    8. ' largeur' → logprob: -3.080442428588867
    9. ' difference' → logprob: -3.330442428588867
    10. 's' → logprob: -3.705442428588867

Token 379: ' entre' (ID: 3853)
  Prédit: ' possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' possible' → logprob: -0.5800754427909851
    2. ' de' → logprob: -1.5800755023956299
    3. 'possible' → logprob: -2.45507550239563
    4. 'de' → logprob: -3.20507550239563
    5. ' entre' → logprob: -3.45507550239563
    6. ' between' → logprob: -3.45507550239563
    7. 'entre' → logprob: -4.205075263977051
    8. '_possible' → logprob: -4.330075263977051
    9. '_' → logprob: -4.580075263977051
    10. 'between' → logprob: -6.830075263977051

Token 380: ' poids' (ID: 56058)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.17568162083625793
    2. 'le' → logprob: -2.0506815910339355
    3. 'la' → logprob: -4.6756815910339355
    4. 'de' → logprob: -5.0506815910339355
    5. ' les' → logprob: -5.0506815910339355
    6. 'po' → logprob: -5.5506815910339355
    7. 'des' → logprob: -6.3006815910339355
    8. 'l' → logprob: -6.8006815910339355
    9. ' deux' → logprob: -7.1756815910339355
    10. 'long' → logprob: -7.5506815910339355

Token 381: ' max' (ID: 2999)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.07805691659450531
    2. ' minimale' → logprob: -3.953056812286377
    3. '   ' → logprob: -4.203056812286377
    4. 'des' → logprob: -4.453056812286377
    5. ' (' → logprob: -4.828056812286377
    6. '_min' → logprob: -5.703056812286377
    7. '(' → logprob: -6.203056812286377
    8. ' entre' → logprob: -6.203056812286377
    9. 'min' → logprob: -6.578056812286377
    10. ' possible' → logprob: -6.703056812286377

Token 382: ' et' (ID: 859)
  Prédit: ' et'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' et' → logprob: -0.19523689150810242
    2. 'et' → logprob: -1.9452369213104248
    3. ' and' → logprob: -4.695236682891846
    4. '   ' → logprob: -4.695236682891846
    5. '_' → logprob: -5.070236682891846
    6. ' ' → logprob: -5.445236682891846
    7. '_et' → logprob: -6.445236682891846
    8. '=' → logprob: -6.695236682891846
    9. ' =' → logprob: -7.070236682891846
    10. 'and' → logprob: -7.570236682891846

Token 383: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.5589216947555542
    2. ' poids' → logprob: -1.5589216947555542
    3. 'po' → logprob: -1.6839216947555542
    4. ' min' → logprob: -3.6839218139648438
    5. ' minimum' → logprob: -5.808921813964844
    6. ' le' → logprob: -6.308921813964844
    7. 'minimum' → logprob: -6.808921813964844
    8. 'le' → logprob: -7.058921813964844
    9. ' ' → logprob: -9.933921813964844
    10. ' minimal' → logprob: -10.183921813964844

Token 384: ' d' (ID: 272)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.06548433005809784
    2. '   ' → logprob: -3.9404842853546143
    3. ' possible' → logprob: -4.190484523773193
    4. ' d' → logprob: -4.690484523773193
    5. ' de' → logprob: -4.940484523773193
    6. ' entre' → logprob: -5.940484523773193
    7. 'possible' → logprob: -5.940484523773193
    8. ' ' → logprob: -6.315484523773193
    9. 'des' → logprob: -6.565484523773193
    10. ' pour' → logprob: -7.315484523773193

Token 385: ''un' (ID: 9788)
  Prédit: ''une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''une' → logprob: -0.2413935512304306
    2. ''' → logprob: -2.241393566131592
    3. ''un' → logprob: -2.491393566131592
    4. 'es' → logprob: -4.241393566131592
    5. 'e' → logprob: -5.241393566131592
    6. ' les' → logprob: -6.866393566131592
    7. '’une' → logprob: -7.116393566131592
    8. ' une' → logprob: -7.366393566131592
    9. ' '' → logprob: -8.116393089294434
    10. '_' → logprob: -8.241393089294434

Token 386: ' arbre' (ID: 164180)
  Prédit: ' interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' interval' → logprob: -1.1975374221801758
    2. 'ensemble' → logprob: -1.4475374221801758
    3. 'interval' → logprob: -1.6975374221801758
    4. ' sous' → logprob: -2.822537422180176
    5. ' segment' → logprob: -2.822537422180176
    6. ' ensemble' → logprob: -2.822537422180176
    7. 's' → logprob: -3.822537422180176
    8. 'ar' → logprob: -4.072537422180176
    9. 'segment' → logprob: -4.072537422180176
    10. '```' → logprob: -4.822537422180176

Token 387: ' couvr' (ID: 129883)
  Prédit: ' couvr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' couvr' → logprob: -0.24438594281673431
    2. 'c' → logprob: -1.7443859577178955
    3. '   ' → logprob: -3.2443859577178955
    4. '_c' → logprob: -6.869385719299316
    5. 'cou' → logprob: -7.244385719299316
    6. ' cou' → logprob: -7.369385719299316
    7. ' possible' → logprob: -8.369385719299316
    8. ' couvert' → logprob: -9.369385719299316
    9. ' ' → logprob: -9.744385719299316
    10. '    
' → logprob: -9.994385719299316

Token 388: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.02074672095477581
    2. 'ing' → logprob: -4.02074670791626
    3. 'is' → logprob: -7.52074670791626
    4. 'p' → logprob: -7.89574670791626
    5. 'iant' → logprob: -8.520747184753418
    6. 'pant' → logprob: -8.895747184753418
    7. 'g' → logprob: -9.145747184753418
    8. 'isant' → logprob: -9.145747184753418
    9. 'rant' → logprob: -9.395747184753418
    10. 'gant' → logprob: -9.395747184753418

Token 389: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1482564210891724
    2. ' possible' → logprob: -1.1482564210891724
    3. ' couvr' → logprob: -2.148256301879883
    4. 'possible' → logprob: -2.648256301879883
    5. 'pond' → logprob: -2.773256301879883
    6. ' spanning' → logprob: -3.273256301879883
    7. ' pond' → logprob: -4.023256301879883
    8. 'sp' → logprob: -4.648256301879883
    9. ' (' → logprob: -4.898256301879883
    10. ' en' → logprob: -5.023256301879883

Token 390: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007811574032530189
    2. '
' → logprob: -7.750781059265137
    3. '    
' → logprob: -8.750781059265137
    4. '```' → logprob: -9.375781059265137
    5. '    ' → logprob: -9.750781059265137
    6. 'n' → logprob: -10.500781059265137
    7. '   
' → logprob: -12.500781059265137
    8. ' 
' → logprob: -12.625781059265137
    9. ' n' → logprob: -12.750781059265137
    10. '     
' → logprob: -13.625781059265137

Token 391: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.000555416801944375
    2. ' n' → logprob: -8.625555038452148
    3. '    
' → logprob: -8.625555038452148
    4. '
' → logprob: -9.375555038452148
    5. 'n' → logprob: -9.750555038452148
    6. ' for' → logprob: -11.000555038452148
    7. '    ' → logprob: -11.250555038452148
    8. '```' → logprob: -11.500555038452148
    9. '   
' → logprob: -13.250555038452148
    10. '     
' → logprob: -13.375555038452148

Token 392: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06446843594312668
    2. ' edges' → logprob: -3.4394683837890625
    3. ' left' → logprob: -4.3144683837890625
    4. ' n' → logprob: -5.0644683837890625
    5. 'edges' → logprob: -5.9394683837890625
    6. 'left' → logprob: -6.3144683837890625
    7. 'n' → logprob: -6.4394683837890625
    8. ' min' → logprob: -6.8144683837890625
    9. ' low' → logprob: -6.9394683837890625
    10. ' l' → logprob: -7.8144683837890625

Token 393: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' (adapté à ' edges') → logprob: -0.34558549523353577
    2. ' edges' → logprob: -1.3455854654312134
    3. 'left' → logprob: -4.095585346221924
    4. ' left' → logprob: -5.470585346221924
    5. '   ' → logprob: -6.095585346221924
    6. 'result' → logprob: -6.345585346221924
    7. 'l' → logprob: -6.470585346221924
    8. 'min' → logprob: -6.595585346221924
    9. 'res' → logprob: -7.220585346221924
    10. 'sorted' → logprob: -7.345585346221924

Token 394: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.012806987389922142
    2. '=' → logprob: -4.5128068923950195
    3. '.' → logprob: -6.7628068923950195
    4. ' =' → logprob: -7.5128068923950195
    5. '_sorted' → logprob: -10.13780689239502
    6. '.sorted' → logprob: -12.01280689239502
    7. '=.' → logprob: -12.76280689239502
    8. 'sorted' → logprob: -13.51280689239502
    9. '   ' → logprob: -13.51280689239502
    10. ' .' → logprob: -14.13780689239502

Token 395: '(key' (ID: 8932)
  Prédit: '(key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(key' → logprob: -0.06215713173151016
    2. '()' → logprob: -2.812157154083252
    3. '(' → logprob: -8.687156677246094
    4. '(reverse' → logprob: -10.937156677246094
    5. '()
' → logprob: -13.562156677246094
    6. 'key' → logprob: -13.937156677246094
    7. '(lambda' → logprob: -14.562156677246094
    8. ' ()' → logprob: -16.062156677246094
    9. '(
' → logprob: -16.937156677246094
    10. ',key' → logprob: -17.437156677246094

Token 396: '=lambda' (ID: 64865)
  Prédit: '=lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -0.011048882268369198
    2. '=' → logprob: -4.511048793792725
    3. 'lambda' → logprob: -13.886049270629883
    4. '=
' → logprob: -17.011049270629883
    5. '=item' → logprob: -18.386049270629883
    6. '＝' → logprob: -18.386049270629883
    7. ' =' → logprob: -18.386049270629883
    8. ' lambda' → logprob: -18.886049270629883
    9. '=_' → logprob: -19.011049270629883
    10. '(lambda' → logprob: -19.261049270629883

Token 397: ' x' (ID: 1215)
  Prédit: ' e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' e' → logprob: -0.577702522277832
    2. ' edge' → logprob: -1.702702522277832
    3. 'e' → logprob: -1.952702522277832
    4. ' x' → logprob: -2.577702522277832
    5. 'edge' → logprob: -3.827702522277832
    6. 'x' → logprob: -4.077702522277832
    7. ' edges' → logprob: -11.077702522277832
    8. ':' → logprob: -11.577702522277832
    9. ' weight' → logprob: -11.702702522277832
    10. ' w' → logprob: -11.827702522277832

Token 398: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00023727134976070374
    2. ' :' → logprob: -8.500237464904785
    3. ':x' → logprob: -10.375237464904785
    4. '[' → logprob: -13.375237464904785
    5. ':
' → logprob: -14.125237464904785
    6. ' x' → logprob: -16.00023651123047
    7. 'x' → logprob: -16.62523651123047
    8. '   ' → logprob: -17.87523651123047
    9. ' ' → logprob: -18.12523651123047
    10. ' ' → logprob: -19.00023651123047

Token 399: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.01416350994259119
    2. ' x' → logprob: -4.264163494110107
    3. ')x' → logprob: -17.139163970947266
    4. '	x' → logprob: -17.889163970947266
    5. '[' → logprob: -18.514163970947266
    6. '(x' → logprob: -19.389163970947266
    7. '_' → logprob: -19.764163970947266
    8. '   ' → logprob: -19.764163970947266
    9. ')' → logprob: -20.389163970947266
    10. ' ' → logprob: -21.264163970947266

Token 400: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.641841820150148e-05
    2. ':' → logprob: -10.62502670288086
    3. ' [' → logprob: -14.00002670288086
    4. '[-' → logprob: -14.12502670288086
    5. '3' → logprob: -15.62502670288086
    6. '0' → logprob: -15.75002670288086
    7. ')[' → logprob: -16.62502670288086
    8. '1' → logprob: -17.12502670288086
    9. ')' → logprob: -17.50002670288086
    10. '[
' → logprob: -17.75002670288086

Token 401: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00016682932619005442
    2. 'weight' → logprob: -9.750166893005371
    3. '[' → logprob: -10.000166893005371
    4. '0' → logprob: -10.750166893005371
    5. '-' → logprob: -11.000166893005371
    6. '1' → logprob: -11.875166893005371
    7. '```' → logprob: -12.625166893005371
    8. '
' → logprob: -12.812666893005371
    9. 'weights' → logprob: -13.375166893005371
    10. '(' → logprob: -13.437666893005371

Token 402: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00030042731668800116
    2. ' )' → logprob: -8.125300407409668
    3. '))' → logprob: -13.125300407409668
    4. '])' → logprob: -13.875300407409668
    5. ')
' → logprob: -14.000300407409668
    6. '),' → logprob: -16.375301361083984
    7. ')#' → logprob: -16.375301361083984
    8. ')`' → logprob: -16.625301361083984
    9. '})' → logprob: -17.000301361083984
    10. '):' → logprob: -17.250301361083984

Token 403: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21410107612609863
    2. '
' → logprob: -1.7141010761260986
    3. '    
' → logprob: -4.4641008377075195
    4. 'n' → logprob: -7.5891008377075195
    5. ',' → logprob: -8.71410083770752
    6. '```' → logprob: -8.71410083770752
    7. '   
' → logprob: -9.46410083770752
    8. ' n' → logprob: -10.21410083770752
    9. '  
' → logprob: -10.33910083770752
    10. ' 
' → logprob: -10.71410083770752

Token 404: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.005705638788640499
    2. '   ' → logprob: -5.255705833435059
    3. '    
' → logprob: -8.130705833435059
    4. 'start' → logprob: -9.755705833435059
    5. '   
' → logprob: -10.630705833435059
    6. '  
' → logprob: -10.880705833435059
    7. ',' → logprob: -11.005705833435059
    8. '
' → logprob: -11.255705833435059
    9. '```' → logprob: -11.380705833435059
    10. ',
' → logprob: -11.630705833435059

Token 405: ' Tri' (ID: 25062)
  Prédit: ' left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' left' → logprob: -0.5172473788261414
    2. 'left' → logprob: -1.1422474384307861
    3. ' n' → logprob: -4.142247200012207
    4. ' l' → logprob: -4.142247200012207
    5. 'n' → logprob: -4.642247200012207
    6. ' for' → logprob: -4.767247200012207
    7. ' low' → logprob: -4.892247200012207
    8. ' start' → logprob: -5.142247200012207
    9. 'start' → logprob: -5.142247200012207
    10. 'low' → logprob: -5.392247200012207

Token 406: ' par' (ID: 686)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.01397167518734932
    2. '(' → logprob: -5.51397180557251
    3. '(edges' → logprob: -5.76397180557251
    4. '(lambda' → logprob: -5.88897180557251
    5. 'def' → logprob: -6.63897180557251
    6. 'edges' → logprob: -7.13897180557251
    7. '_edges' → logprob: -7.51397180557251
    8. '<|end|>' → logprob: -8.763971328735352
    9. 'des' → logprob: -8.888971328735352
    10. '();' → logprob: -8.888971328735352

Token 407: ' poids' (ID: 56058)
  Prédit: 'po'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'po' → logprob: -0.5059675574302673
    2. ' poids' → logprob: -1.755967617034912
    3. 'lambda' → logprob: -2.130967617034912
    4. 'le' → logprob: -2.505967617034912
    5. ' le' → logprob: -4.255967617034912
    6. ' lambda' → logprob: -4.880967617034912
    7. 'weight' → logprob: -7.005967617034912
    8. ' po' → logprob: -7.630967617034912
    9. 'x' → logprob: -8.005967140197754
    10. 'la' → logprob: -9.130967140197754

Token 408: ' cro' (ID: 11270)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08059405535459518
    2. '
' → logprob: -2.580594062805176
    3. '    
' → logprob: -6.455594062805176
    4. ',' → logprob: -9.830594062805176
    5. 'n' → logprob: -10.705594062805176
    6. '```' → logprob: -11.330594062805176
    7. ' for' → logprob: -11.580594062805176
    8. '   
' → logprob: -11.830594062805176
    9. '  
' → logprob: -12.205594062805176
    10. ',
' → logprob: -12.205594062805176

Token 409: 'issant' (ID: 31359)
  Prédit: 'issante'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'issante' → logprob: -0.5813944339752197
    2. 'issant' → logprob: -0.8313944339752197
    3. 'issance' → logprob: -5.956394195556641
    4. 'iss' → logprob: -6.456394195556641
    5. 'is' → logprob: -7.581394195556641
    6. 'ss' → logprob: -8.33139419555664
    7. 'issement' → logprob: -8.58139419555664
    8. 'issants' → logprob: -9.45639419555664
    9. 't' → logprob: -9.83139419555664
    10. 'issent' → logprob: -10.08139419555664

Token 410: '
    
' (ID: 15698)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.36534491181373596
    2. '   ' → logprob: -1.2403448820114136
    3. '    
' → logprob: -4.990345001220703
    4. 'n' → logprob: -5.115345001220703
    5. '```' → logprob: -6.740345001220703
    6. ' n' → logprob: -7.115345001220703
    7. '   
' → logprob: -7.365345001220703
    8. ',' → logprob: -7.740345001220703
    9. '  
' → logprob: -8.115345001220703
    10. ' 
' → logprob: -8.615345001220703

Token 411: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07094766944646835
    2. 'left' → logprob: -3.4459476470947266
    3. 'i' → logprob: -4.445947647094727
    4. 'n' → logprob: -4.820947647094727
    5. ' left' → logprob: -4.820947647094727
    6. 'j' → logprob: -6.070947647094727
    7. 'l' → logprob: -6.445947647094727
    8. 'for' → logprob: -6.820947647094727
    9. ' n' → logprob: -6.820947647094727
    10. 'min' → logprob: -7.320947647094727

Token 412: ' m' (ID: 284)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.5441668629646301
    2. 'res' → logprob: -1.6691668033599854
    3. 'min' → logprob: -1.6691668033599854
    4. 'result' → logprob: -3.7941668033599854
    5. 'ans' → logprob: -5.1691670417785645
    6. 'answer' → logprob: -5.4191670417785645
    7. 'j' → logprob: -5.9191670417785645
    8. ' left' → logprob: -6.0441670417785645
    9. 'best' → logprob: -6.2941670417785645
    10. 'm' (adapté à ' m') → logprob: -7.0441670417785645

Token 413: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04883443936705589
    2. '=' → logprob: -3.0488343238830566
    3. '=int' → logprob: -9.673834800720215
    4. '=n' → logprob: -10.048834800720215
    5. ',' → logprob: -10.298834800720215
    6. '   ' → logprob: -10.423834800720215
    7. '=len' → logprob: -10.673834800720215
    8. 'in' → logprob: -11.298834800720215
    9. 'ax' → logprob: -11.298834800720215
    10. '  ' → logprob: -11.673834800720215

Token 414: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.005233763717114925
    2. ' len' → logprob: -5.2552337646484375
    3. '(len' → logprob: -19.005233764648438
    4. '[len' → logprob: -21.005233764648438
    5. '=len' → logprob: -22.380233764648438
    6. '	len' → logprob: -22.880233764648438
    7. '   ' → logprob: -24.130233764648438
    8. 'Len' → logprob: -24.880233764648438
    9. ',len' → logprob: -24.880233764648438
    10. ' ' → logprob: -25.505233764648438

Token 415: '(edges' (ID: 185298)
  Prédit: '(edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(edges' → logprob: -4.723352049040841e-06
    2. 'edges' → logprob: -12.375004768371582
    3. '(' → logprob: -15.250004768371582
    4. ' edges' → logprob: -15.875004768371582
    5. '(
' → logprob: -18.625003814697266
    6. '(vertices' → logprob: -19.500003814697266
    7. '(edge' → logprob: -19.625003814697266
    8. '(events' → logprob: -20.375003814697266
    9. '(points' → logprob: -20.500003814697266
    10. '_edges' → logprob: -21.000003814697266

Token 416: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00020938136731274426
    2. ')
' → logprob: -8.50020980834961
    3. '   ' → logprob: -12.62520980834961
    4. ' )' → logprob: -13.00020980834961
    5. ')
' → logprob: -16.12520980834961
    6. ')

' → logprob: -16.50020980834961
    7. ' ' → logprob: -17.50020980834961
    8. ')n' → logprob: -17.50020980834961
    9. '))' → logprob: -17.62520980834961
    10. '),' → logprob: -17.87520980834961

Token 417: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13867302238941193
    2. ' res' → logprob: -4.013672828674316
    3. 'result' → logprob: -4.013672828674316
    4. ' left' → logprob: -4.013672828674316
    5. ' result' → logprob: -4.138672828674316
    6. '
' → logprob: -4.138672828674316
    7. 'left' → logprob: -4.388672828674316
    8. 'min' → logprob: -4.638672828674316
    9. 'res' → logprob: -5.013672828674316
    10. '    
' → logprob: -5.763672828674316

Token 418: ' min' (ID: 1349)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.47642412781715393
    2. 'result' → logprob: -2.351424217224121
    3. 'min' (adapté à ' min') → logprob: -2.351424217224121
    4. ' res' → logprob: -2.601424217224121
    5. 'left' → logprob: -2.851424217224121
    6. 'answer' → logprob: -4.226424217224121
    7. 'ans' → logprob: -4.351424217224121
    8. ' left' → logprob: -4.601424217224121
    9. ' result' → logprob: -4.726424217224121
    10. 'j' → logprob: -5.726424217224121

Token 419: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.09250859916210175
    2. '_diff' → logprob: -2.842508554458618
    3. '_' → logprob: -3.592508554458618
    4. '_sl' → logprob: -6.092508792877197
    5. '_difference' → logprob: -8.467508316040039
    6. '_d' → logprob: -10.342508316040039
    7. '_
' → logprob: -11.967508316040039
    8. '_delta' → logprob: -12.092508316040039
    9. '_value' → logprob: -12.217508316040039
    10. '_width' → logprob: -12.967508316040039

Token 420: 'lim' (ID: 5406)
  Prédit: 'lim'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lim' → logprob: -0.03514993190765381
    2. 'l' → logprob: -3.4101500511169434
    3. 'limit' → logprob: -7.785150051116943
    4. 'li' → logprob: -8.660149574279785
    5. '_l' → logprob: -8.660149574279785
    6. '_' → logprob: -8.785149574279785
    7. '_lim' → logprob: -8.785149574279785
    8. 'lime' → logprob: -9.285149574279785
    9. '=' → logprob: -9.660149574279785
    10. '_limit' → logprob: -9.785149574279785

Token 421: 'ness' (ID: 2816)
  Prédit: 'ness'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ness' → logprob: -8.017927029868588e-05
    2. ' =' → logprob: -10.375080108642578
    3. 'n' → logprob: -10.875080108642578
    4. '=' → logprob: -11.000080108642578
    5. ' ness' → logprob: -12.625080108642578
    6. 'm' → logprob: -13.250080108642578
    7. 'min' → logprob: -13.375080108642578
    8. '_n' → logprob: -14.000080108642578
    9. 'mest' → logprob: -14.250080108642578
    10. 'iness' → logprob: -14.250080108642578

Token 422: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014163747429847717
    2. '=' → logprob: -4.264163970947266
    3. ' ' → logprob: -15.764163970947266
    4. ',' → logprob: -17.639163970947266
    5. ' ' → logprob: -18.014163970947266
    6. '=float' → logprob: -18.014163970947266
    7. '=int' → logprob: -18.889163970947266
    8. '=None' → logprob: -19.139163970947266
    9. ' =
' → logprob: -19.514163970947266
    10. '＝' → logprob: -19.639163970947266

Token 423: ' None' (ID: 4662)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.011238683015108109
    2. 'sys' → logprob: -4.5112385749816895
    3. 'edges' → logprob: -9.261239051818848
    4. '10' → logprob: -9.386239051818848
    5. ' float' → logprob: -11.511239051818848
    6. 'int' → logprob: -13.511239051818848
    7. 'flo' → logprob: -15.636239051818848
    8. 'm' → logprob: -15.761239051818848
    9. ' sys' → logprob: -15.886239051818848
    10. ' edges' → logprob: -17.38623809814453

Token 424: '
    
' (ID: 15698)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.011268273927271366
    2. '    
' → logprob: -4.886268138885498
    3. '   ' → logprob: -5.761268138885498
    4. '  
' → logprob: -9.136268615722656
    5. 'for' → logprob: -9.261268615722656
    6. ' 
' → logprob: -9.511268615722656
    7. '
' → logprob: -9.761268615722656
    8. ' for' → logprob: -9.761268615722656
    9. ',' → logprob: -10.386268615722656
    10. '
    
' → logprob: -10.511268615722656

Token 425: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5865180492401123
    2. 'left' → logprob: -1.5865180492401123
    3. ' left' → logprob: -2.5865180492401123
    4. 'j' → logprob: -2.5865180492401123
    5. 'for' → logprob: -3.5865180492401123
    6. 'i' → logprob: -3.8365180492401123
    7. 'l' → logprob: -3.9615180492401123
    8. ' j' → logprob: -4.586518287658691
    9. ' for' → logprob: -5.336518287658691
    10. ' i' → logprob: -6.086518287658691

Token 426: ' #' (ID: 1069)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.11573102325201035
    2. 'left' → logprob: -2.8657310009002686
    3. 'right' → logprob: -3.8657310009002686
    4. 'end' → logprob: -4.115731239318848
    5. 'start' → logprob: -4.990731239318848
    6. 'for' → logprob: -5.365731239318848
    7. 'i' → logprob: -5.865731239318848
    8. 'l' → logprob: -7.740731239318848
    9. ' j' → logprob: -9.115731239318848
    10. '   ' → logprob: -9.365731239318848

Token 427: ' On' (ID: 2160)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.09183164685964584
    2. 'left' → logprob: -3.341831684112549
    3. 'start' → logprob: -4.091831684112549
    4. 'right' → logprob: -4.216831684112549
    5. 'end' → logprob: -4.466831684112549
    6. 'i' → logprob: -5.341831684112549
    7. 'for' → logprob: -5.716831684112549
    8. 'l' → logprob: -7.216831684112549
    9. ' j' → logprob: -7.966831684112549
    10. 'r' → logprob: -8.96683120727539

Token 428: ' essa' (ID: 19417)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.32260406017303467
    2. ' for' → logprob: -1.3226040601730347
    3. 'i' → logprob: -4.947604179382324
    4. ' i' → logprob: -6.197604179382324
    5. '   ' → logprob: -9.322604179382324
    6. 'def' → logprob: -10.447604179382324
    7. ' =' → logprob: -10.822604179382324
    8. ' in' → logprob: -12.697604179382324
    9. 'in' → logprob: -12.697604179382324
    10. 's' → logprob: -12.697604179382324

Token 429: 'ie' (ID: 396)
  Prédit: 'ie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.7513366937637329
    2. 'ye' → logprob: -1.126336693763733
    3. 'y' → logprob: -1.626336693763733
    4. 'aye' → logprob: -5.126336574554443
    5. 'yage' → logprob: -8.376337051391602
    6. 'i' → logprob: -8.626337051391602
    7. 'eye' → logprob: -8.876337051391602
    8. 'uie' → logprob: -8.876337051391602
    9. 'yer' → logprob: -9.001337051391602
    10. 'yez' → logprob: -9.251337051391602

Token 430: ' d' (ID: 272)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3241494596004486
    2. ' i' → logprob: -1.699149489402771
    3. 'for' → logprob: -2.5741493701934814
    4. '   ' → logprob: -4.0741496086120605
    5. 'i' → logprob: -7.1991496086120605
    6. ' de' → logprob: -11.574149131774902
    7. ' range' → logprob: -11.824149131774902
    8. 'range' → logprob: -12.449149131774902
    9. ' ' → logprob: -12.699149131774902
    10. ' j' → logprob: -12.824149131774902

Token 431: ''utiliser' (ID: 133355)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.693023681640625
    2. 'for' → logprob: -1.193023681640625
    3. 'ef' → logprob: -2.443023681640625
    4. 'i' → logprob: -3.068023681640625
    5. 'e' → logprob: -3.693023681640625
    6. ' range' → logprob: -4.068023681640625
    7. ' for' → logprob: -4.693023681640625
    8. '   ' → logprob: -5.193023681640625
    9. 'or' → logprob: -6.193023681640625
    10. 'r' → logprob: -7.818023681640625

Token 432: ' une' (ID: 2463)
  Prédit: ' deux'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' deux' → logprob: -0.554544985294342
    2. ' two' → logprob: -1.5545449256896973
    3. 'two' → logprob: -2.4295449256896973
    4. 'i' → logprob: -3.1795449256896973
    5. ' un' → logprob: -3.8045449256896973
    6. 'de' → logprob: -4.179544925689697
    7. 'for' → logprob: -4.679544925689697
    8. 'une' → logprob: -4.679544925689697
    9. ' i' → logprob: -4.804544925689697
    10. 'start' → logprob: -5.304544925689697

Token 433: ' approche' (ID: 102373)
  Prédit: 'fen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fen' → logprob: -0.005335028283298016
    2. ' fen' → logprob: -6.380334854125977
    3. 'window' → logprob: -6.380334854125977
    4. 'j' → logprob: -7.255334854125977
    5. ' fenêtre' → logprob: -7.380334854125977
    6. 'double' → logprob: -8.880334854125977
    7. 'for' → logprob: -9.380334854125977
    8. 'left' → logprob: -9.505334854125977
    9. 'two' → logprob: -9.755334854125977
    10. 'i' → logprob: -9.755334854125977

Token 434: ' deux' (ID: 10301)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.18960906565189362
    2. ' de' → logprob: -2.8146090507507324
    3. ' par' → logprob: -3.1896090507507324
    4. ' two' → logprob: -4.064609050750732
    5. 'two' → logprob: -4.689609050750732
    6. 'à' → logprob: -4.814609050750732
    7. ' en' → logprob: -4.939609050750732
    8. ' à' → logprob: -5.064609050750732
    9. 'en' → logprob: -5.314609050750732
    10. ' gl' → logprob: -5.564609050750732

Token 435: ' poin' (ID: 37259)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.003688197582960129
    2. '_p' → logprob: -6.253688335418701
    3. '   ' → logprob: -7.503688335418701
    4. ' ' → logprob: -8.003687858581543
    5. '
' → logprob: -8.253687858581543
    6. '	p' → logprob: -9.003687858581543
    7. '-p' → logprob: -9.003687858581543
    8. ' ' → logprob: -9.378687858581543
    9. ' poin' → logprob: -9.753687858581543
    10. ' pointers' → logprob: -9.878687858581543

Token 436: 'teurs' (ID: 77729)
  Prédit: 'ters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ters' → logprob: -0.009821255691349506
    2. 'ter' → logprob: -5.25982141494751
    3. 'n' → logprob: -6.38482141494751
    4. 't' → logprob: -6.38482141494751
    5. 'teurs' → logprob: -7.50982141494751
    6. 'trs' → logprob: -8.259820938110352
    7. '   ' → logprob: -9.509820938110352
    8. '
' → logprob: -9.509820938110352
    9. '```' → logprob: -9.884820938110352
    10. 'ts' → logprob: -10.009820938110352

Token 437: ' sur' (ID: 1512)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1272476762533188
    2. ' i' → logprob: -3.1272475719451904
    3. 'i' → logprob: -3.7522475719451904
    4. 'start' → logprob: -3.8772475719451904
    5. 'left' → logprob: -4.3772478103637695
    6. '
' → logprob: -5.1272478103637695
    7. ' left' → logprob: -5.3772478103637695
    8. ' start' → logprob: -5.5022478103637695
    9. '    
' → logprob: -6.1272478103637695
    10. ',' → logprob: -7.2522478103637695

Token 438: ' l' (ID: 305)
  Prédit: ' edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.6130978465080261
    2. 'edges' → logprob: -0.8630978465080261
    3. '   ' → logprob: -4.488097667694092
    4. 'range' → logprob: -4.738097667694092
    5. ' les' → logprob: -5.238097667694092
    6. 'les' → logprob: -5.988097667694092
    7. 'the' → logprob: -6.238097667694092
    8. ' la' → logprob: -6.238097667694092
    9. 'la' → logprob: -7.238097667694092
    10. 'l' → logprob: -7.363097667694092

Token 439: ''' (ID: 6)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.36311957240104675
    2. 'edges' → logprob: -1.9881196022033691
    3. 'a' → logprob: -2.613119602203369
    4. 'e' → logprob: -2.738119602203369
    5. ' edges' → logprob: -3.988119602203369
    6. ''ensemble' → logprob: -5.238119602203369
    7. ''' → logprob: -6.363119602203369
    8. 's' → logprob: -6.613119602203369
    9. 'les' → logprob: -6.613119602203369
    10. '_edges' → logprob: -7.863119602203369

Token 440: 'interval' (ID: 37558)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.036393653601408005
    2. ' edges' → logprob: -3.536393642425537
    3. 'indices' → logprob: -6.036393642425537
    4. 'array' → logprob: -6.661393642425537
    5. 'ar' → logprob: -7.286393642425537
    6. 'po' → logprob: -8.036394119262695
    7. 'arr' → logprob: -8.036394119262695
    8. 's' → logprob: -8.286394119262695
    9. 'range' → logprob: -8.286394119262695
    10. 'weights' → logprob: -9.036394119262695

Token 441: 'le' (ID: 282)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.043777886778116226
    2. 've' → logprob: -3.5437779426574707
    3. 'ce' → logprob: -5.668777942657471
    4. 'v' → logprob: -5.793777942657471
    5. 'val' → logprob: -6.043777942657471
    6. '[' → logprob: -7.043777942657471
    7. 'ge' → logprob: -7.168777942657471
    8. 'es' → logprob: -7.168777942657471
    9. 'vale' → logprob: -7.668777942657471
    10. 'de' → logprob: -7.918777942657471

Token 442: ' d' (ID: 272)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -1.133801817893982
    2. '   ' → logprob: -2.2588019371032715
    3. 'start' → logprob: -2.2588019371032715
    4. ' left' → logprob: -2.3838019371032715
    5. 'left' → logprob: -2.3838019371032715
    6. 'de' → logprob: -2.5088019371032715
    7. 'i' → logprob: -2.5088019371032715
    8. 's' → logprob: -3.2588019371032715
    9. ' de' → logprob: -3.5088019371032715
    10. ' start' → logprob: -4.2588019371032715

Token 443: ''ar' (ID: 54307)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -1.049392819404602
    2. 'e' → logprob: -1.299392819404602
    3. 'ar' → logprob: -2.2993927001953125
    4. 'edges' → logprob: -2.2993927001953125
    5. ''ar' → logprob: -2.2993927001953125
    6. ''' → logprob: -2.9243927001953125
    7. 'les' → logprob: -5.4243927001953125
    8. ' edges' → logprob: -6.0493927001953125
    9. 'indices' → logprob: -6.1743927001953125
    10. 'ex' → logprob: -6.4243927001953125

Token 444: 'êtes' (ID: 23720)
  Prédit: 'êtes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êtes' → logprob: -0.11384346336126328
    2. 'r' → logprob: -2.3638434410095215
    3. 'cs' → logprob: -4.6138434410095215
    4. 'c' → logprob: -6.8638434410095215
    5. 'g' → logprob: -7.7388434410095215
    6. 'tes' → logprob: -7.9888434410095215
    7. 'ches' → logprob: -7.9888434410095215
    8. 'bres' → logprob: -8.11384391784668
    9. 'ête' → logprob: -8.48884391784668
    10. 'êt' → logprob: -9.23884391784668

Token 445: ' tri' (ID: 12665)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0303054116666317
    2. ' i' → logprob: -4.2803053855896
    3. ' left' → logprob: -5.4053053855896
    4. 'i' → logprob: -5.5303053855896
    5. 'left' → logprob: -5.7803053855896
    6. ' for' → logprob: -6.9053053855896
    7. 'start' → logprob: -7.0303053855896
    8. ' l' → logprob: -7.2803053855896
    9. 'l' → logprob: -7.7803053855896
    10. ' start' → logprob: -7.7803053855896

Token 446: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.3015269935131073
    2. 'é' → logprob: -2.0515270233154297
    3. 'angé' → logprob: -2.9265270233154297
    4. 'ang' → logprob: -3.5515270233154297
    5. 'ée' → logprob: -3.9265270233154297
    6. '   ' → logprob: -4.92652702331543
    7. 'év' → logprob: -5.30152702331543
    8. 'e' → logprob: -5.67652702331543
    9. 'è' → logprob: -5.80152702331543
    10. 'ed' → logprob: -6.30152702331543

Token 447: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07680505514144897
    2. ' i' → logprob: -3.9518051147460938
    3. 'left' → logprob: -4.201805114746094
    4. 'start' → logprob: -4.701805114746094
    5. 'i' → logprob: -4.951805114746094
    6. '
' → logprob: -5.451805114746094
    7. ' left' → logprob: -5.576805114746094
    8. 'j' → logprob: -5.701805114746094
    9. ',' → logprob: -5.701805114746094
    10. ' for' → logprob: -5.951805114746094

Token 448: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07402059435844421
    2. ' i' → logprob: -3.5740206241607666
    3. '
' → logprob: -3.8240206241607666
    4. ' for' → logprob: -4.1990203857421875
    5. '    
' → logprob: -5.9490203857421875
    6. 'i' → logprob: -6.3240203857421875
    7. 'for' → logprob: -7.0740203857421875
    8. ' start' → logprob: -8.074020385742188
    9. 'start' → logprob: -8.699020385742188
    10. ' 
' → logprob: -9.199020385742188

Token 449: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.977312445640564
    2. ' left' → logprob: -1.352312445640564
    3. 'left' → logprob: -1.602312445640564
    4. 'l' → logprob: -2.9773125648498535
    5. 'i' → logprob: -3.1023125648498535
    6. ' i' → logprob: -3.8523125648498535
    7. ' l' → logprob: -4.1023125648498535
    8. 'j' → logprob: -4.1023125648498535
    9. ' j' → logprob: -5.2273125648498535
    10. 'start' → logprob: -5.4773125648498535

Token 450: ' L' (ID: 451)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.5043801665306091
    2. 'left' → logprob: -1.754380226135254
    3. ' left' → logprob: -2.629380226135254
    4. 'start' → logprob: -2.754380226135254
    5. ' j' → logprob: -3.004380226135254
    6. 'right' → logprob: -4.254380226135254
    7. 'i' → logprob: -4.879380226135254
    8. 'end' → logprob: -5.129380226135254
    9. '   ' → logprob: -5.629380226135254
    10. ' start' → logprob: -5.879380226135254

Token 451: ''' (ID: 6)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.47748926281929016
    2. 'i' → logprob: -1.6024892330169678
    3. 'left' → logprob: -2.8524892330169678
    4. 'eft' → logprob: -3.3524892330169678
    5. '   ' → logprob: -3.4774892330169678
    6. ' j' → logprob: -4.102489471435547
    7. 'start' → logprob: -4.227489471435547
    8. ' left' → logprob: -4.727489471435547
    9. 'e' → logprob: -5.102489471435547
    10. ' i' → logprob: -5.852489471435547

Token 452: 'interval' (ID: 37558)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.15984828770160675
    2. 'left' → logprob: -2.034848213195801
    3. 'start' → logprob: -5.409848213195801
    4. 'j' → logprob: -5.784848213195801
    5. '   ' → logprob: -6.159848213195801
    6. ' i' → logprob: -6.534848213195801
    7. ' left' → logprob: -7.034848213195801
    8. 'for' → logprob: -7.409848213195801
    9. 'a' → logprob: -7.409848213195801
    10. 'l' → logprob: -7.784848213195801

Token 453: 'le' (ID: 282)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.038129959255456924
    2. 'le' → logprob: -4.288129806518555
    3. 'aire' → logprob: -4.788129806518555
    4. '   ' → logprob: -4.913129806518555
    5. 'val' → logprob: -6.538129806518555
    6. '=' → logprob: -6.663129806518555
    7. 'er' → logprob: -7.163129806518555
    8. '       ' → logprob: -7.163129806518555
    9. ' =' → logprob: -7.163129806518555
    10. '_' → logprob: -7.538129806518555

Token 454: ' représente' (ID: 88912)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0807173252105713
    2. 'start' → logprob: -1.7057173252105713
    3. ' start' → logprob: -2.0807173252105713
    4. ' [' → logprob: -2.4557173252105713
    5. '[' → logprob: -2.9557173252105713
    6. 's' → logprob: -3.0807173252105713
    7. '[start' → logprob: -3.0807173252105713
    8. ' for' → logprob: -3.2057173252105713
    9. ' i' → logprob: -4.080717086791992
    10. ' left' → logprob: -4.580717086791992

Token 455: ' les' (ID: 1341)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.6423472762107849
    2. 'la' → logprob: -1.6423473358154297
    3. 'le' → logprob: -2.5173473358154297
    4. ' le' → logprob: -2.7673473358154297
    5. 'les' → logprob: -2.7673473358154297
    6. ' l' → logprob: -3.5173473358154297
    7. ' les' → logprob: -4.14234733581543
    8. 'l' → logprob: -4.76734733581543
    9. ' une' → logprob: -4.76734733581543
    10. ' un' → logprob: -5.26734733581543

Token 456: ' ar' (ID: 646)
  Prédit: ' indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' indices' → logprob: -0.4353956878185272
    2. 'indices' → logprob: -1.0603957176208496
    3. 'de' → logprob: -6.68539571762085
    4. 'index' → logprob: -7.06039571762085
    5. 'indexes' → logprob: -7.18539571762085
    6. ' poids' → logprob: -7.43539571762085
    7. 'ar' → logprob: -7.56039571762085
    8. ' born' → logprob: -7.56039571762085
    9. 'indice' → logprob: -7.93539571762085
    10. ' edges' → logprob: -8.060395240783691

Token 457: 'êtes' (ID: 23720)
  Prédit: 'êtes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êtes' → logprob: -0.003059111535549164
    2. 'cs' → logprob: -7.128058910369873
    3. 'êts' → logprob: -7.253058910369873
    4. 'ê' → logprob: -7.503058910369873
    5. 'ètes' → logprob: -8.253059387207031
    6. 'tes' → logprob: -8.753059387207031
    7. 'c' → logprob: -8.878059387207031
    8. 'etes' → logprob: -8.878059387207031
    9. 'êt' → logprob: -9.753059387207031
    10. 'ç' → logprob: -10.378059387207031

Token 458: ' dont' (ID: 11562)
  Prédit: '[start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[start' → logprob: -0.5390087366104126
    2. '[' → logprob: -1.5390087366104126
    3. '[i' → logprob: -1.9140087366104126
    4. '[left' → logprob: -4.289008617401123
    5. '   ' → logprob: -5.414008617401123
    6. '[min' → logprob: -5.539008617401123
    7. ' [' → logprob: -5.664008617401123
    8. 'start' → logprob: -5.664008617401123
    9. '[selected' → logprob: -6.039008617401123
    10. ' sélection' → logprob: -6.289008617401123

Token 459: ' les' (ID: 1341)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.551470935344696
    2. 'les' → logprob: -0.926470935344696
    3. ' le' → logprob: -4.426470756530762
    4. ' les' → logprob: -4.926470756530762
    5. 'po' → logprob: -5.426470756530762
    6. 'la' → logprob: -6.301470756530762
    7. 'on' → logprob: -6.926470756530762
    8. 'l' → logprob: -7.551470756530762
    9. ' on' → logprob: -7.926470756530762
    10. 'weights' → logprob: -8.801470756530762

Token 460: ' poids' (ID: 56058)
  Prédit: 'po'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'po' → logprob: -0.008923230692744255
    2. ' poids' → logprob: -5.508923053741455
    3. 'weights' → logprob: -6.008923053741455
    4. 'indices' → logprob: -6.383923053741455
    5. 'pond' → logprob: -8.883923530578613
    6. 'indexes' → logprob: -9.008923530578613
    7. 'weight' → logprob: -9.633923530578613
    8. ' indices' → logprob: -9.758923530578613
    9. 'ponder' → logprob: -9.883923530578613
    10. 'index' → logprob: -9.883923530578613

Token 461: ' sont' (ID: 5242)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.27895331382751465
    2. ' sont' → logprob: -1.7789533138275146
    3. 'diff' → logprob: -2.9039533138275146
    4. 'var' → logprob: -4.153953552246094
    5. ' vont' → logprob: -6.653953552246094
    6. 'se' → logprob: -6.778953552246094
    7. ' se' → logprob: -8.278953552246094
    8. ' var' → logprob: -8.403953552246094
    9. '```' → logprob: -8.403953552246094
    10. '#' → logprob: -8.903953552246094

Token 462: ' entre' (ID: 3853)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.48629963397979736
    2. ' compris' → logprob: -2.361299514770508
    3. 'cons' → logprob: -2.611299514770508
    4. 'entre' → logprob: -2.736299514770508
    5. 'dans' → logprob: -2.736299514770508
    6. 'strict' → logprob: -2.986299514770508
    7. 'cont' → logprob: -5.486299514770508
    8. 'compr' → logprob: -5.736299514770508
    9. 'prises' → logprob: -5.986299514770508
    10. ' comprises' → logprob: -5.986299514770508

Token 463: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.0067225913517177105
    2. ' edges' → logprob: -5.006722450256348
    3. '   ' → logprob: -12.506722450256348
    4. 'les' → logprob: -13.131722450256348
    5. '(edges' → logprob: -14.256722450256348
    6. '```' → logprob: -15.506722450256348
    7. ' ' → logprob: -15.881722450256348
    8. '_edges' → logprob: -15.881722450256348
    9. '.edges' → logprob: -16.506723403930664
    10. 'l' → logprob: -16.506723403930664

Token 464: '[i' (ID: 1768)
  Prédit: '[left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[left' → logprob: -0.517325222492218
    2. '[start' → logprob: -1.0173251628875732
    3. '[i' → logprob: -3.8923251628875732
    4. '[' → logprob: -4.142325401306152
    5. '[l' → logprob: -5.517325401306152
    6. '[right' → logprob: -7.392325401306152
    7. '[end' → logprob: -7.892325401306152
    8. 'start' → logprob: -8.142325401306152
    9. 'left' → logprob: -8.392325401306152
    10. '[min' → logprob: -9.017325401306152

Token 465: ']' (ID: 60)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00028052396373823285
    2. ' ][' → logprob: -9.000280380249023
    3. ']' → logprob: -9.375280380249023
    4. '[' → logprob: -9.625280380249023
    5. '   ' → logprob: -12.500280380249023
    6. ']][' → logprob: -14.375280380249023
    7. 'and' → logprob: -15.125280380249023
    8. '"][' → logprob: -15.250280380249023
    9. ''][' → logprob: -15.500280380249023
    10. ' ' → logprob: -16.000280380249023

Token 466: ' et' (ID: 859)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.000629279064014554
    2. ' et' → logprob: -8.000629425048828
    3. 'and' → logprob: -8.875629425048828
    4. 'et' → logprob: -10.000629425048828
    5. ' and' → logprob: -10.125629425048828
    6. 's' → logprob: -10.625629425048828
    7. '[i' → logprob: -11.375629425048828
    8. ' [' → logprob: -11.625629425048828
    9. '   ' → logprob: -11.875629425048828
    10. '```' → logprob: -11.875629425048828

Token 467: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.1430409848690033
    2. ' edges' → logprob: -2.018040895462036
    3. '   ' → logprob: -8.018040657043457
    4. ' ' → logprob: -11.643040657043457
    5. '(edges' → logprob: -11.643040657043457
    6. ' ' → logprob: -12.643040657043457
    7. '.edges' → logprob: -12.893040657043457
    8. '  ' → logprob: -12.893040657043457
    9. '
' → logprob: -13.643040657043457
    10. 'ed' → logprob: -13.643040657043457

Token 468: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0068464456126093864
    2. '[i' → logprob: -5.0068464279174805
    3. '[m' → logprob: -9.88184642791748
    4. '[' → logprob: -10.00684642791748
    5. '
' → logprob: -11.25684642791748
    6. '[
' → logprob: -11.63184642791748
    7. '```' → logprob: -12.88184642791748
    8. ' [' → logprob: -13.13184642791748
    9. '[min' → logprob: -13.13184642791748
    10. '   ' → logprob: -13.25684642791748

Token 469: '].
' (ID: 49887)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04172160476446152
    2. '])' → logprob: -4.041721820831299
    3. ']:' → logprob: -4.666721820831299
    4. '].' → logprob: -4.791721820831299
    5. ']):' → logprob: -6.291721820831299
    6. '],' → logprob: -6.916721820831299
    7. '][' → logprob: -7.166721820831299
    8. '[' → logprob: -7.541721820831299
    9. ' ]' → logprob: -8.16672134399414
    10. ']:
' → logprob: -8.29172134399414

Token 470: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008673192001879215
    2. ' for' → logprob: -5.133673191070557
    3. ' i' → logprob: -6.758673191070557
    4. 'i' → logprob: -7.758673191070557
    5. 'for' → logprob: -7.758673191070557
    6. '    
' → logprob: -8.008673667907715
    7. '
' → logprob: -8.258673667907715
    8. 'j' → logprob: -10.133673667907715
    9. ' j' → logprob: -10.508673667907715
    10. '```' → logprob: -10.508673667907715

Token 471: ' j' (ID: 441)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12145581096410751
    2. ' i' → logprob: -3.2464559078216553
    3. ' for' → logprob: -3.6214559078216553
    4. 'i' → logprob: -4.246455669403076
    5. ' j' → logprob: -4.246455669403076
    6. 'j' (adapté à ' j') → logprob: -4.496455669403076
    7. 'for' → logprob: -5.246455669403076
    8. '
' → logprob: -5.746455669403076
    9. '    
' → logprob: -7.996455669403076
    10. ' ' → logprob: -10.246456146240234

Token 472: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.575945258140564
    2. ' =' → logprob: -0.825945258140564
    3. ',' → logprob: -12.825944900512695
    4. '   ' → logprob: -13.950944900512695
    5. ' ' → logprob: -14.325944900512695
    6. '  ' → logprob: -14.700944900512695
    7. '=i' → logprob: -15.325944900512695
    8. '=j' → logprob: -15.575944900512695
    9. 'import' → logprob: -15.950944900512695
    10. ')' → logprob: -16.200944900512695

Token 473: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.4391956685576588e-05
    2. ' ' → logprob: -10.625024795532227
    3. '   ' → logprob: -18.125024795532227
    4. '1' → logprob: -19.625024795532227
    5. '  ' → logprob: -19.625024795532227
    6. '=' → logprob: -21.125024795532227
    7. '-' → logprob: -21.500024795532227
    8. '۰' → logprob: -22.000024795532227
    9. '    ' → logprob: -22.562524795532227
    10. '[' → logprob: -22.625024795532227

Token 474: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.494741632603109e-05
    2. ' ' → logprob: -9.37508487701416
    3. '1' → logprob: -16.875085830688477
    4. 'i' → logprob: -19.250085830688477
    5. '   ' → logprob: -19.937585830688477
    6. '-' → logprob: -20.000085830688477
    7. '  ' → logprob: -20.562585830688477
    8. '۰' → logprob: -20.562585830688477
    9. '00' → logprob: -20.687585830688477
    10. 'j' → logprob: -20.687585830688477

Token 475: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4706331491470337
    2. ' for' → logprob: -1.4706331491470337
    3. 'for' → logprob: -2.095633029937744
    4. '   ' → logprob: -4.095633029937744
    5. '    
' → logprob: -5.720633029937744
    6. '  
' → logprob: -6.595633029937744
    7. '	for' → logprob: -7.845633029937744
    8. '<|end|>' → logprob: -7.970633029937744
    9. ' 
' → logprob: -8.345633506774902
    10. '   
' → logprob: -8.595633506774902

Token 476: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6324167251586914
    2. 'for' → logprob: -0.8824167251586914
    3. '   ' → logprob: -3.0074167251586914
    4. '
' → logprob: -5.257416725158691
    5. '	for' → logprob: -9.007416725158691
    6. '    
' → logprob: -9.132416725158691
    7. ' 
' → logprob: -10.632416725158691
    8. '  
' → logprob: -11.007416725158691
    9. ' ' → logprob: -12.382416725158691
    10. '   
' → logprob: -12.882416725158691

Token 477: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.03872912749648094
    2. ' for' → logprob: -3.288729190826416
    3. '   ' → logprob: -7.288729190826416
    4. '    
' → logprob: -13.163728713989258
    5. '
' → logprob: -13.663728713989258
    6. '	for' → logprob: -14.788728713989258
    7. 'import' → logprob: -15.538728713989258
    8. 'min' → logprob: -15.913728713989258
    9. ' ' → logprob: -16.163728713989258
    10. 'None' → logprob: -16.288728713989258

Token 478: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.061968810856342316
    2. ' i' → logprob: -2.8119688034057617
    3. '	i' → logprob: -13.811968803405762
    4. 'j' → logprob: -15.936968803405762
    5. '   ' → logprob: -17.561969757080078
    6. ' ' → logprob: -18.061969757080078
    7. '\' → logprob: -18.561969757080078
    8. '```' → logprob: -18.811969757080078
    9. ' ' → logprob: -19.311969757080078
    10. '`' → logprob: -19.811969757080078

Token 479: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.016043754294514656
    2. 'in' → logprob: -4.141043663024902
    3. ' ' → logprob: -12.266043663024902
    4. '	in' → logprob: -13.016043663024902
    5. '   ' → logprob: -13.766043663024902
    6. ',' → logprob: -14.516043663024902
    7. 'import' → logprob: -15.516043663024902
    8. 'range' → logprob: -16.14104461669922
    9. ' 
' → logprob: -16.39104461669922
    10. '_in' → logprob: -16.51604461669922

Token 480: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.029750484973192215
    2. ' range' → logprob: -3.5297505855560303
    3. '(range' → logprob: -17.15475082397461
    4. '0' → logprob: -18.40475082397461
    5. ' ' → logprob: -18.40475082397461
    6. '   ' → logprob: -18.65475082397461
    7. '	range' → logprob: -18.90475082397461
    8. 'in' → logprob: -19.15475082397461
    9. 'rang' → logprob: -20.15475082397461
    10. 'r' → logprob: -21.27975082397461

Token 481: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.049043647944927216
    2. 'm' → logprob: -3.049043655395508
    3. ' m' → logprob: -8.299043655395508
    4. '(' → logprob: -8.549043655395508
    5. ' (' → logprob: -12.674043655395508
    6. '   ' → logprob: -13.049043655395508
    7. '(n' → logprob: -13.174043655395508
    8. '(j' → logprob: -13.299043655395508
    9. ')m' → logprob: -13.424043655395508
    10. '(
' → logprob: -14.049043655395508

Token 482: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2258138805627823
    2. '):
' → logprob: -1.600813865661621
    3. ' ):' → logprob: -8.725813865661621
    4. ')' → logprob: -9.475813865661621
    5. ',' → logprob: -9.725813865661621
    6. '   ' → logprob: -9.975813865661621
    7. ':' → logprob: -10.725813865661621
    8. '):
' → logprob: -11.350813865661621
    9. ' ):
' → logprob: -11.475813865661621
    10. '):

' → logprob: -12.600813865661621

Token 483: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04527181759476662
    2. '<|end|>' → logprob: -3.420271873474121
    3. '        
' → logprob: -5.045271873474121
    4. ' while' → logprob: -6.420271873474121
    5. '	   ' → logprob: -7.045271873474121
    6. ' ' → logprob: -7.295271873474121
    7. '    ' → logprob: -8.170271873474121
    8. '	       ' → logprob: -8.420271873474121
    9. '   ' → logprob: -8.545271873474121
    10. '<|end|>' → logprob: -8.670271873474121

Token 484: ' #' (ID: 1069)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.03713906556367874
    2. '       ' → logprob: -3.7871391773223877
    3. ' while' → logprob: -4.287138938903809
    4. '   ' → logprob: -10.037138938903809
    5. '	while' → logprob: -11.787138938903809
    6. '        
' → logprob: -14.537138938903809
    7. 'for' → logprob: -14.662138938903809
    8. '
' → logprob: -14.787138938903809
    9. 'While' → logprob: -15.537138938903809
    10. '           ' → logprob: -15.912138938903809

Token 485: ' Av' (ID: 7541)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -8.006006828509271e-05
    2. ' while' → logprob: -9.500080108642578
    3. '       ' → logprob: -12.250080108642578
    4. '   ' → logprob: -15.750080108642578
    5. '	while' → logprob: -16.125080108642578
    6. '        
' → logprob: -16.500080108642578
    7. '           ' → logprob: -18.000080108642578
    8. 'import' → logprob: -18.500080108642578
    9. 'While' → logprob: -18.500080108642578
    10. 'for' → logprob: -18.875080108642578

Token 486: 'ance' (ID: 766)
  Prédit: 'ance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ance' → logprob: -0.2842099666595459
    2. 'ancer' → logprob: -1.409209966659546
    3. 'er' → logprob: -7.159210205078125
    4. 'anc' → logprob: -7.534210205078125
    5. 'oir' → logprob: -8.034210205078125
    6. 'anç' → logprob: -8.284210205078125
    7. 'ancé' → logprob: -8.409210205078125
    8. 'ancée' → logprob: -8.534210205078125
    9. 'ances' → logprob: -8.659210205078125
    10. 'ec' → logprob: -8.659210205078125

Token 487: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.8107883930206299
    2. ' j' → logprob: -0.8107883930206299
    3. 'r' → logprob: -2.56078839302063
    4. '       ' → logprob: -3.93578839302063
    5. '   ' → logprob: -5.060788154602051
    6. '(j' → logprob: -6.560788154602051
    7. 's' → logprob: -7.060788154602051
    8. 'er' → logprob: -7.060788154602051
    9. ' while' → logprob: -7.310788154602051
    10. 'while' → logprob: -7.685788154602051

Token 488: ' pour' (ID: 1930)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.13024954497814178
    2. ' while' → logprob: -2.630249500274658
    3. '=' → logprob: -3.630249500274658
    4. ' =' → logprob: -4.255249500274658
    5. ' +=' → logprob: -5.630249500274658
    6. '+=' → logprob: -6.130249500274658
    7. '
' → logprob: -6.755249500274658
    8. '>=' → logprob: -7.130249500274658
    9. '	while' → logprob: -7.630249500274658
    10. '       ' → logprob: -7.880249500274658

Token 489: ' trouver' (ID: 23195)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'can' → logprob: -1.2514725923538208
    2. 'while' → logprob: -1.3764725923538208
    3. ' while' → logprob: -1.3764725923538208
    4. ' can' → logprob: -2.0014724731445312
    5. ' trouver' → logprob: -3.6264724731445312
    6. ' j' → logprob: -3.7514724731445312
    7. ' find' → logprob: -4.626472473144531
    8. 'j' → logprob: -5.376472473144531
    9. ' pouvoir' → logprob: -6.001472473144531
    10. 'm' → logprob: -6.376472473144531

Token 490: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.2190515249967575
    2. ' j' → logprob: -2.8440515995025635
    3. ' while' → logprob: -3.8440515995025635
    4. ' une' → logprob: -3.8440515995025635
    5. ' True' → logprob: -3.8440515995025635
    6. ' a' → logprob: -4.094051361083984
    7. 'j' → logprob: -4.594051361083984
    8. ' au' → logprob: -4.594051361083984
    9. 'while' → logprob: -4.594051361083984
    10. '<|end|>' → logprob: -4.969051361083984

Token 491: ' interval' (ID: 17116)
  Prédit: ' spanning'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' spanning' → logprob: -0.8806671500205994
    2. 'ar' → logprob: -1.7556672096252441
    3. ' arbre' → logprob: -2.005667209625244
    4. 'span' → logprob: -2.505667209625244
    5. 'interval' → logprob: -2.630667209625244
    6. 'sp' → logprob: -3.755667209625244
    7. ' interval' → logprob: -4.005667209625244
    8. 's' → logprob: -4.380667209625244
    9. 'j' → logprob: -4.380667209625244
    10. 'ensemble' → logprob: -4.630667209625244

Token 492: 'le' (ID: 282)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06020110473036766
    2. ' j' → logprob: -4.435201168060303
    3. 'le' → logprob: -5.060201168060303
    4. 'range' → logprob: -5.310201168060303
    5. 'v' → logprob: -5.560201168060303
    6. ',' → logprob: -5.560201168060303
    7. '=' → logprob: -5.685201168060303
    8. 'e' → logprob: -5.935201168060303
    9. 'er' → logprob: -5.935201168060303
    10. 'ère' → logprob: -6.185201168060303

Token 493: ' où' (ID: 15113)
  Prédit: ' où'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' où' → logprob: -1.016422152519226
    2. ' where' → logprob: -1.141422152519226
    3. ' while' → logprob: -2.3914222717285156
    4. '       ' → logprob: -2.7664222717285156
    5. 'while' → logprob: -2.8914222717285156
    6. 'où' → logprob: -2.8914222717285156
    7. 'where' → logprob: -4.266422271728516
    8. ' valid' → logprob: -4.891422271728516
    9. '   ' → logprob: -5.141422271728516
    10. '           ' → logprob: -5.141422271728516

Token 494: ' un' (ID: 537)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'can' → logprob: -0.11285552382469177
    2. ' can' → logprob: -2.2378554344177246
    3. ' i' → logprob: -11.862855911254883
    4. ' ' → logprob: -12.237855911254883
    5. '   ' → logprob: -12.612855911254883
    6. 'i' → logprob: -12.862855911254883
    7. ' not' → logprob: -12.987855911254883
    8. 'find' → logprob: -12.987855911254883
    9. '	can' → logprob: -13.112855911254883
    10. ' find' → logprob: -13.487855911254883

Token 495: ' arbre' (ID: 164180)
  Prédit: 'ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.7472494840621948
    2. ' arbre' → logprob: -1.3722494840621948
    3. ' spanning' → logprob: -1.3722494840621948
    4. 'sp' → logprob: -4.622249603271484
    5. 'can' → logprob: -5.247249603271484
    6. ' can' → logprob: -6.497249603271484
    7. 'span' → logprob: -7.247249603271484
    8. ' arbres' → logprob: -7.497249603271484
    9. 'arb' → logprob: -7.747249603271484
    10. '   ' → logprob: -8.747249603271484

Token 496: ' couvr' (ID: 129883)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.06441725045442581
    2. ' couvr' → logprob: -3.4394173622131348
    3. '       ' → logprob: -3.5644173622131348
    4. 'cou' → logprob: -6.439417362213135
    5. '_c' → logprob: -9.439416885375977
    6. ' cou' → logprob: -9.439416885375977
    7. '   ' → logprob: -9.814416885375977
    8. 'de' → logprob: -10.814416885375977
    9. 'sp' → logprob: -10.939416885375977
    10. ' couvre' → logprob: -11.189416885375977

Token 497: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.0009821972344070673
    2. 'er' → logprob: -8.125982284545898
    3. 'ent' → logprob: -8.125982284545898
    4. 'ir' → logprob: -8.375982284545898
    5. 'ing' → logprob: -9.875982284545898
    6. '   ' → logprob: -10.625982284545898
    7. 're' → logprob: -10.750982284545898
    8. 'r' → logprob: -11.500982284545898
    9. 'int' → logprob: -12.375982284545898
    10. 'é' → logprob: -12.375982284545898

Token 498: ' est' (ID: 893)
  Prédit: ' peut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' peut' → logprob: -0.4796769320964813
    2. 'pe' → logprob: -1.4796769618988037
    3. ' est' → logprob: -2.6046769618988037
    4. 'est' → logprob: -3.6046769618988037
    5. 'can' → logprob: -3.7296769618988037
    6. ' can' → logprob: -3.9796769618988037
    7. ' is' → logprob: -6.104676723480225
    8. '   ' → logprob: -6.479676723480225
    9. 'possible' → logprob: -6.854676723480225
    10. ' ' → logprob: -6.979676723480225

Token 499: ' possible' (ID: 4149)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.021286480128765106
    2. ' possible' → logprob: -4.021286487579346
    3. 'construct' → logprob: -6.021286487579346
    4. '   ' → logprob: -8.271286010742188
    5. 'con' → logprob: -8.771286010742188
    6. 'poss' → logprob: -9.646286010742188
    7. ' construit' → logprob: -9.771286010742188
    8. 'form' → logprob: -10.021286010742188
    9. 'const' → logprob: -10.021286010742188
    10. 'p' → logprob: -10.271286010742188

Token 500: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0032472279854118824
    2. ' while' → logprob: -6.003247261047363
    3. 'while' → logprob: -7.253247261047363
    4. '        
' → logprob: -9.878247261047363
    5. '
' → logprob: -12.503247261047363
    6. ',' → logprob: -12.753247261047363
    7. '           ' → logprob: -13.378247261047363
    8. '	while' → logprob: -13.628247261047363
    9. '      ' → logprob: -14.878247261047363
    10. '   ' → logprob: -15.003247261047363

Token 501: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0062067704275250435
    2. ' while' → logprob: -5.13120698928833
    3. 'while' → logprob: -8.631206512451172
    4. '        
' → logprob: -10.131206512451172
    5. '<|end|>' → logprob: -10.131206512451172
    6. '           ' → logprob: -12.381206512451172
    7. '	while' → logprob: -12.381206512451172
    8. ',' → logprob: -12.756206512451172
    9. '   ' → logprob: -13.506206512451172
    10. ' ' → logprob: -13.506206512451172

Token 502: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.01894953101873398
    2. ' while' → logprob: -4.018949508666992
    3. '       ' → logprob: -7.143949508666992
    4. '	while' → logprob: -12.018949508666992
    5. '        
' → logprob: -13.518949508666992
    6. '   ' → logprob: -14.018949508666992
    7. '           ' → logprob: -14.143949508666992
    8. 'While' → logprob: -15.143949508666992
    9. '            
' → logprob: -15.893949508666992
    10. 'j' → logprob: -15.893949508666992

Token 503: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.008657949976623058
    2. ' j' → logprob: -4.758657932281494
    3. 'not' → logprob: -10.258658409118652
    4. ' not' → logprob: -12.258658409118652
    5. '(j' → logprob: -13.008658409118652
    6. '	j' → logprob: -14.383658409118652
    7. ' ' → logprob: -15.758658409118652
    8. '$j' → logprob: -16.258657455444336
    9. '   ' → logprob: -16.321157455444336
    10. '_j' → logprob: -16.821157455444336

Token 504: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.5830725431442261
    2. '<' → logprob: -0.8330725431442261
    3. '<m' → logprob: -4.958072662353516
    4. '<n' → logprob: -9.458072662353516
    5. '<len' → logprob: -13.458072662353516
    6. '<s' → logprob: -14.958072662353516
    7. '<M' → logprob: -15.583072662353516
    8. '<w' → logprob: -15.708072662353516
    9. '<size' → logprob: -15.958072662353516
    10. '<p' → logprob: -16.083072662353516

Token 505: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -2.4391956685576588e-05
    2. ' m' → logprob: -10.625024795532227
    3. '   ' → logprob: -18.125024795532227
    4. '	m' → logprob: -21.125024795532227
    5. ' ' → logprob: -21.750024795532227
    6. '<m' → logprob: -22.250024795532227
    7. ')m' → logprob: -22.375024795532227
    8. '
' → logprob: -23.000024795532227
    9. '=m' → logprob: -23.125024795532227
    10. '  ' → logprob: -23.750024795532227

Token 506: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.5759432315826416
    2. 'and' → logprob: -0.8259432315826416
    3. ' ' → logprob: -12.950942993164062
    4. '   ' → logprob: -13.825942993164062
    5. '  ' → logprob: -16.575942993164062
    6. 'm' → logprob: -16.700942993164062
    7. '    ' → logprob: -16.700942993164062
    8. ' и' → logprob: -17.200942993164062
    9. '       ' → logprob: -17.575942993164062
    10. '     ' → logprob: -17.575942993164062

Token 507: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.00977497547864914
    2. ' not' → logprob: -4.634775161743164
    3. '   ' → logprob: -11.259775161743164
    4. '
' → logprob: -13.384775161743164
    5. 'can' → logprob: -13.384775161743164
    6. '!' → logprob: -13.634775161743164
    7. '(not' → logprob: -14.009775161743164
    8. 'n' → logprob: -15.134775161743164
    9. 'no' → logprob: -15.384775161743164
    10. '       ' → logprob: -16.009775161743164

Token 508: ' can' (ID: 665)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'can' → logprob: -0.0015024791937321424
    2. ' can' → logprob: -6.501502513885498
    3. '	can' → logprob: -16.751502990722656
    4. '(can' → logprob: -17.751502990722656
    5. '   ' → logprob: -18.501502990722656
    6. '_can' → logprob: -19.376502990722656
    7. '.can' → logprob: -19.751502990722656
    8. ' ' → logprob: -21.001502990722656
    9. ')' → logprob: -21.126502990722656
    10. '
' → logprob: -21.376502990722656

Token 509: '_build' (ID: 49774)
  Prédit: '_build'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_build' → logprob: -1.8624639324116288e-06
    2. 'build' → logprob: -14.500001907348633
    3. '_can' → logprob: -14.500001907348633
    4. '_' → logprob: -15.250001907348633
    5. '_b' → logprob: -15.250001907348633
    6. '```' → logprob: -16.750001907348633
    7. '\' → logprob: -17.125001907348633
    8. ' _' → logprob: -17.250001907348633
    9. '_find' → logprob: -17.750001907348633
    10. '_BUILD' → logprob: -18.125001907348633

Token 510: '_sp' (ID: 18491)
  Prédit: '_sp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sp' → logprob: -0.00014442270912695676
    2. 'sp' → logprob: -8.875144004821777
    3. '(sp' → logprob: -13.500144004821777
    4. '_st' → logprob: -13.625144004821777
    5. 's' → logprob: -14.250144004821777
    6. ' spanning' → logprob: -14.750144004821777
    7. '_span' → logprob: -15.250144004821777
    8. '_s' → logprob: -15.875144004821777
    9. 'a' → logprob: -16.125144958496094
    10. '_sl' → logprob: -16.250144958496094

Token 511: 'anning' (ID: 6674)
  Prédit: 'anning'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'anning' → logprob: -0.009229680523276329
    2. 'an' → logprob: -4.88422966003418
    3. 'aning' → logprob: -6.50922966003418
    4. ' spanning' → logprob: -11.00922966003418
    5. '   ' → logprob: -11.00922966003418
    6. 'ann' → logprob: -11.13422966003418
    7. 'ning' → logprob: -11.25922966003418
    8. '
' → logprob: -11.38422966003418
    9. '```' → logprob: -11.63422966003418
    10. 'anding' → logprob: -11.63422966003418

Token 512: '_tree' (ID: 27118)
  Prédit: '_tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tree' → logprob: -0.0007193420315161347
    2. 'tree' → logprob: -7.2507195472717285
    3. 'ree' → logprob: -12.62571907043457
    4. '_t' → logprob: -13.75071907043457
    5. '-tree' → logprob: -14.12571907043457
    6. '_TREE' → logprob: -14.12571907043457
    7. 'tre' → logprob: -14.25071907043457
    8. ' tree' → logprob: -14.25071907043457
    9. '   ' → logprob: -14.37571907043457
    10. '_' → logprob: -15.37571907043457

Token 513: '(edges' (ID: 185298)
  Prédit: '(edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(edges' → logprob: -1.3856492842023727e-06
    2. 'edges' → logprob: -13.625000953674316
    3. '(' → logprob: -17.000001907348633
    4. ' edges' → logprob: -18.000001907348633
    5. '(events' → logprob: -18.500001907348633
    6. '(vertices' → logprob: -18.500001907348633
    7. '(entries' → logprob: -18.625001907348633
    8. '(
' → logprob: -18.750001907348633
    9. ' (' → logprob: -19.125001907348633
    10. '(errors' → logprob: -19.500001907348633

Token 514: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01823984831571579
    2. '(edges' → logprob: -4.018239974975586
    3. ' ,' → logprob: -9.893239974975586
    4. '(' → logprob: -11.018239974975586
    5. ',n' → logprob: -12.393239974975586
    6. '(ed' → logprob: -12.643239974975586
    7. 'edges' → logprob: -12.893239974975586
    8. '   ' → logprob: -13.018239974975586
    9. ',
' → logprob: -13.018239974975586
    10. '(n' → logprob: -13.393239974975586

Token 515: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -7.517272024415433e-05
    2. ' n' → logprob: -9.500075340270996
    3. '   ' → logprob: -15.750075340270996
    4. '	n' → logprob: -16.87507438659668
    5. '
' → logprob: -17.75007438659668
    6. ')n' → logprob: -17.75007438659668
    7. '```' → logprob: -18.87507438659668
    8. '    ' → logprob: -20.00007438659668
    9. ',' → logprob: -20.12507438659668
    10. '<|end|>' → logprob: -20.25007438659668

Token 516: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.93579563125968e-05
    2. ',j' → logprob: -9.500089645385742
    3. ' ,' → logprob: -11.750089645385742
    4. ',i' → logprob: -12.875089645385742
    5. ',
' → logprob: -13.375089645385742
    6. 'j' → logprob: -14.000089645385742
    7. '   ' → logprob: -14.000089645385742
    8. '       ' → logprob: -15.875089645385742
    9. '```' → logprob: -16.000089645385742
    10. '-' → logprob: -16.500089645385742

Token 517: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00015979631280060858
    2. ' i' → logprob: -8.750160217285156
    3. '   ' → logprob: -13.875160217285156
    4. 'j' → logprob: -15.875160217285156
    5. '	i' → logprob: -15.875160217285156
    6. '    ' → logprob: -16.750160217285156
    7. '
' → logprob: -17.750160217285156
    8. '     ' → logprob: -18.250160217285156
    9. ' ' → logprob: -18.250160217285156
    10. '  ' → logprob: -18.625160217285156

Token 518: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00016158436483237892
    2. ',j' → logprob: -8.875161170959473
    3. ' ,' → logprob: -10.875161170959473
    4. ',
' → logprob: -13.250161170959473
    5. 'j' → logprob: -14.250161170959473
    6. '   ' → logprob: -15.375161170959473
    7. '
' → logprob: -18.12516212463379
    8. ')' → logprob: -18.12516212463379
    9. '```' → logprob: -18.25016212463379
    10. ' ' → logprob: -18.25016212463379

Token 519: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -5.2524021157296374e-05
    2. ' j' → logprob: -9.875052452087402
    3. '	j' → logprob: -14.125052452087402
    4. '   ' → logprob: -16.00005340576172
    5. '[j' → logprob: -16.37505340576172
    6. '$j' → logprob: -18.50005340576172
    7. '*j' → logprob: -19.25005340576172
    8. '_j' → logprob: -20.12505340576172
    9. '
' → logprob: -20.12505340576172
    10. ':j' → logprob: -20.25005340576172

Token 520: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.3869687616825104
    2. '):' → logprob: -1.136968731880188
    3. '):
' → logprob: -10.386968612670898
    4. ')' → logprob: -10.761968612670898
    5. ' ):' → logprob: -11.011968612670898
    6. ' ):
' → logprob: -11.011968612670898
    7. ':' → logprob: -12.011968612670898
    8. '       ' → logprob: -12.761968612670898
    9. '   ' → logprob: -13.261968612670898
    10. '):

' → logprob: -13.886968612670898

Token 521: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.033382054418325424
    2. '       ' → logprob: -3.533381938934326
    3. 'j' → logprob: -6.033381938934326
    4. ':
' → logprob: -7.033381938934326
    5. ':' → logprob: -8.658382415771484
    6. ' j' → logprob: -9.908382415771484
    7. '
' → logprob: -10.408382415771484
    8. '   ' → logprob: -10.533382415771484
    9. '```' → logprob: -11.283382415771484
    10. '               ' → logprob: -11.408382415771484

Token 522: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' (adapté à ' j') → logprob: -0.006738462019711733
    2. ' j' → logprob: -5.006738662719727
    3. '           ' → logprob: -11.131738662719727
    4. '	j' → logprob: -11.881738662719727
    5. '   ' → logprob: -13.881738662719727
    6. '       ' → logprob: -14.756738662719727
    7. '
' → logprob: -16.506738662719727
    8. '               ' → logprob: -16.631738662719727
    9. '            
' → logprob: -18.506738662719727
    10. ' ' → logprob: -18.881738662719727

Token 523: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.038102082908153534
    2. ' +=' → logprob: -3.288102149963379
    3. '+' → logprob: -9.788102149963379
    4. '=' → logprob: -13.038102149963379
    5. ']+=' → logprob: -13.163102149963379
    6. ' ' → logprob: -16.163101196289062
    7. '+="' → logprob: -16.413101196289062
    8. ' +' → logprob: -16.413101196289062
    9. '+='' → logprob: -16.913101196289062
    10. ')' → logprob: -17.038101196289062

Token 524: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. '   ' → logprob: -19.0000057220459
    4. '```' → logprob: -22.1250057220459
    5. '  ' → logprob: -22.2500057220459
    6. '１' → logprob: -23.6250057220459
    7. '
' → logprob: -23.7500057220459
    8. '۱' → logprob: -24.1250057220459
    9. ' ' → logprob: -24.5000057220459
    10. '    ' → logprob: -24.5000057220459

Token 525: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. '   ' → logprob: -19.5
    4. '```' → logprob: -19.75
    5. '  ' → logprob: -21.75
    6. '
' → logprob: -22.125
    7. '１' → logprob: -22.375
    8. '१' → logprob: -23.0
    9. '۱' → logprob: -23.125
    10. '১' → logprob: -23.25

Token 526: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01473748218268156
    2. '
' → logprob: -4.514737606048584
    3. '        
' → logprob: -5.639737606048584
    4. '<|end|>' → logprob: -9.514737129211426
    5. '  
' → logprob: -11.514737129211426
    6. '       
' → logprob: -12.139737129211426
    7. '
' → logprob: -12.389737129211426
    8. '            
' → logprob: -12.514737129211426
    9. 'if' → logprob: -12.514737129211426
    10. '           ' → logprob: -12.514737129211426

Token 527: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00060307263629511
    2. '
' → logprob: -7.875603199005127
    3. '        
' → logprob: -8.500602722167969
    4. '<|end|>' → logprob: -11.500602722167969
    5. 'if' → logprob: -12.250602722167969
    6. '```' → logprob: -13.375602722167969
    7. '           ' → logprob: -13.750602722167969
    8. '   ' → logprob: -14.250602722167969
    9. ' if' → logprob: -14.750602722167969
    10. '            
' → logprob: -15.625602722167969

Token 528: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.39815208315849304
    2. 'if' (adapté à ' if') → logprob: -1.1481521129608154
    3. ' if' → logprob: -4.773151874542236
    4. '   ' → logprob: -5.898151874542236
    5. ' ' → logprob: -11.523152351379395
    6. '	if' → logprob: -12.648152351379395
    7. '           ' → logprob: -13.523152351379395
    8. '	' → logprob: -13.773152351379395
    9. '```' → logprob: -14.398152351379395
    10. '     ' → logprob: -14.523152351379395

Token 529: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0031866247300058603
    2. ' j' → logprob: -5.7531867027282715
    3. '   ' → logprob: -11.753186225891113
    4. '       ' → logprob: -14.628186225891113
    5. '
' → logprob: -15.253186225891113
    6. '	j' → logprob: -16.00318717956543
    7. '           ' → logprob: -16.37818717956543
    8. '    ' → logprob: -16.50318717956543
    9. '     ' → logprob: -17.37818717956543
    10. '  ' → logprob: -17.75318717956543

Token 530: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.2414802610874176
    2. '==' → logprob: -1.7414802312850952
    3. ' <' → logprob: -4.241480350494385
    4. ' >=' → logprob: -4.366480350494385
    5. '>=' → logprob: -4.616480350494385
    6. '<' → logprob: -6.741480350494385
    7. '<m' → logprob: -6.866480350494385
    8. '<n' → logprob: -10.616479873657227
    9. '==
' → logprob: -11.116479873657227
    10. '<|end|>' → logprob: -12.116479873657227

Token 531: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -1.676292231422849e-05
    2. ' m' → logprob: -11.000017166137695
    3. '   ' → logprob: -18.750017166137695
    4. ' ' → logprob: -20.125017166137695
    5. 'len' → logprob: -20.875017166137695
    6. '	m' → logprob: -20.875017166137695
    7. '
' → logprob: -21.000017166137695
    8. '  ' → logprob: -21.375017166137695
    9. '    ' → logprob: -21.875017166137695
    10. 'м' → logprob: -23.625017166137695

Token 532: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.25979581475257874
    2. ':' → logprob: -2.134795904159546
    3. ':
' → logprob: -2.384795904159546
    4. '       ' → logprob: -4.009795665740967
    5. '   ' → logprob: -9.009796142578125
    6. '               ' → logprob: -9.634796142578125
    7. ' or' → logprob: -10.884796142578125
    8. ':
' → logprob: -11.134796142578125
    9. ' :' → logprob: -11.384796142578125
    10. '          ' → logprob: -11.884796142578125

Token 533: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0003054301778320223
    2. '       ' → logprob: -8.25030517578125
    3. '
' → logprob: -10.62530517578125
    4. ' break' → logprob: -11.25030517578125
    5. 'break' → logprob: -12.87530517578125
    6. '               ' → logprob: -13.75030517578125
    7. '		' → logprob: -14.00030517578125
    8. '            
' → logprob: -14.50030517578125
    9. '          ' → logprob: -15.00030517578125
    10. '        
' → logprob: -15.12530517578125

Token 534: ' #' (ID: 1069)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.20299206674098969
    2. '           ' → logprob: -1.9529920816421509
    3. ' break' → logprob: -3.2029919624328613
    4. '       ' → logprob: -6.952991962432861
    5. '	break' → logprob: -8.45299243927002
    6. '               ' → logprob: -10.57799243927002
    7. '   ' → logprob: -11.07799243927002
    8. '
' → logprob: -11.70299243927002
    9. '_break' → logprob: -13.07799243927002
    10. '	       ' → logprob: -13.20299243927002

Token 535: ' Plus' (ID: 11899)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.11040627211332321
    2. '           ' → logprob: -2.3604061603546143
    3. ' break' → logprob: -4.610406398773193
    4. '       ' → logprob: -8.610405921936035
    5. '	break' → logprob: -11.985405921936035
    6. '#' → logprob: -12.735405921936035
    7. '               ' → logprob: -12.985405921936035
    8. '
' → logprob: -13.110405921936035
    9. '   ' → logprob: -13.360405921936035
    10. 'return' → logprob: -13.985405921936035

Token 536: ' possible' (ID: 4149)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.8787510991096497
    2. 'auc' → logprob: -1.5037510395050049
    3. 'de' → logprob: -1.6287510395050049
    4. 'd' → logprob: -3.003751039505005
    5. ' besoin' → logprob: -3.003751039505005
    6. ' possible' → logprob: -3.253751039505005
    7. ' de' → logprob: -4.753751277923584
    8. ' aucune' → logprob: -5.253751277923584
    9. ' aucun' → logprob: -5.503751277923584
    10. ' rien' → logprob: -5.878751277923584

Token 537: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.7809988856315613
    2. 'de' → logprob: -1.030998945236206
    3. '       ' → logprob: -1.780998945236206
    4. '    ' → logprob: -5.280998706817627
    5. 'd' → logprob: -5.530998706817627
    6. '   ' → logprob: -5.780998706817627
    7. 'break' → logprob: -6.655998706817627
    8. ' ' → logprob: -6.905998706817627
    9. ' d' → logprob: -7.280998706817627
    10. '        ' → logprob: -7.655998706817627

Token 538: ' trouver' (ID: 23195)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.06716900318861008
    2. 'contin' → logprob: -2.942168951034546
    3. ' trouver' → logprob: -5.317169189453125
    4. 'con' → logprob: -6.067169189453125
    5. 'break' → logprob: -6.317169189453125
    6. ' construire' → logprob: -7.317169189453125
    7. ' continuer' → logprob: -7.567169189453125
    8. 'continue' → logprob: -8.067169189453125
    9. 'former' → logprob: -8.192169189453125
    10. 'p' → logprob: -8.817169189453125

Token 539: ' un' (ID: 537)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.023086251690983772
    2. ' un' → logprob: -4.148086071014404
    3. 'd' → logprob: -5.023086071014404
    4. 'de' → logprob: -8.398086547851562
    5. 'une' → logprob: -8.898086547851562
    6. ' d' → logprob: -10.523086547851562
    7. ' une' → logprob: -11.523086547851562
    8. ' de' → logprob: -11.648086547851562
    9. ''un' → logprob: -11.898086547851562
    10. '```' → logprob: -11.898086547851562

Token 540: ' interval' (ID: 17116)
  Prédit: 'ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.5345216989517212
    2. 'interval' → logprob: -0.9095216989517212
    3. ' interval' → logprob: -5.034521579742432
    4. 'span' → logprob: -6.784521579742432
    5. 'i' → logprob: -6.909521579742432
    6. ' arbre' → logprob: -6.909521579742432
    7. 'j' → logprob: -8.28452205657959
    8. '```' → logprob: -8.40952205657959
    9. 's' → logprob: -8.53452205657959
    10. ' ar' → logprob: -9.03452205657959

Token 541: 'le' (ID: 282)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.23077668249607086
    2. 'val' → logprob: -1.9807766675949097
    3. 'le' → logprob: -3.230776786804199
    4. 'al' → logprob: -4.355776786804199
    5. 'v' → logprob: -5.605776786804199
    6. 'aire' → logprob: -5.855776786804199
    7. 'vale' → logprob: -6.105776786804199
    8. '```' → logprob: -6.105776786804199
    9. 'ale' → logprob: -6.730776786804199
    10. 'au' → logprob: -7.230776786804199

Token 542: ' à' (ID: 1221)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4769892394542694
    2. '           ' → logprob: -0.9769892692565918
    3. '               ' → logprob: -7.726989269256592
    4. '   ' → logprob: -7.976989269256592
    5. ' avec' → logprob: -7.976989269256592
    6. ',' → logprob: -8.351988792419434
    7. ' break' → logprob: -8.601988792419434
    8. ' valid' → logprob: -8.726988792419434
    9. ' utile' → logprob: -8.726988792419434
    10. ' à' → logprob: -8.976988792419434

Token 543: ' partir' (ID: 12100)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.031364455819129944
    2. ' partir' → logprob: -4.031364440917969
    3. 'i' → logprob: -4.781364440917969
    4. 'c' → logprob: -6.906364440917969
    5. 'ce' → logprob: -7.406364440917969
    6. 'cou' → logprob: -7.781364440917969
    7. 'g' → logprob: -7.781364440917969
    8. 'cet' → logprob: -8.031364440917969
    9. 'j' → logprob: -8.156364440917969
    10. 'par' → logprob: -8.156364440917969

Token 544: ' de' (ID: 334)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.02690635621547699
    2. ' i' → logprob: -4.276906490325928
    3. 'de' → logprob: -5.026906490325928
    4. ' de' → logprob: -5.276906490325928
    5. '[i' → logprob: -7.151906490325928
    6. 'ici' → logprob: -9.27690601348877
    7. ' ici' → logprob: -9.65190601348877
    8. '=i' → logprob: -11.15190601348877
    9. '(i' → logprob: -12.02690601348877
    10. '{i' → logprob: -12.15190601348877

Token 545: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -4.596781946020201e-05
    2. ' i' → logprob: -10.000045776367188
    3. 'ici' → logprob: -15.250045776367188
    4. 'this' → logprob: -16.250045776367188
    5. ' ici' → logprob: -16.375045776367188
    6. '   ' → logprob: -16.625045776367188
    7. ' ' → logprob: -17.625045776367188
    8. '[i' → logprob: -18.125045776367188
    9. '
' → logprob: -18.500045776367188
    10. '       ' → logprob: -18.750045776367188

Token 546: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008730510249733925
    2. '           ' → logprob: -4.758730411529541
    3. '
' → logprob: -9.5087308883667
    4. '   ' → logprob: -11.3837308883667
    5. '        
' → logprob: -11.7587308883667
    6. '      ' → logprob: -12.0087308883667
    7. '        ' → logprob: -12.3837308883667
    8. ',' → logprob: -12.7587308883667
    9. '     ' → logprob: -13.2587308883667
    10. '               ' → logprob: -13.3837308883667

Token 547: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0025039594620466232
    2. '       ' → logprob: -6.002503871917725
    3. '
' → logprob: -10.627504348754883
    4. '   ' → logprob: -13.752504348754883
    5. '          ' → logprob: -14.252504348754883
    6. '               ' → logprob: -14.502504348754883
    7. ' break' → logprob: -14.627504348754883
    8. '        
' → logprob: -15.377504348754883
    9. '	       ' → logprob: -15.502504348754883
    10. '		' → logprob: -15.752504348754883

Token 548: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.016053255647420883
    2. '       ' → logprob: -4.766053199768066
    3. ' break' → logprob: -5.016053199768066
    4. '           ' → logprob: -7.266053199768066
    5. '	break' → logprob: -9.516053199768066
    6. '   ' → logprob: -12.141053199768066
    7. '
' → logprob: -13.891053199768066
    8. '_break' → logprob: -14.516053199768066
    9. 'return' → logprob: -14.766053199768066
    10. '               ' → logprob: -15.141053199768066

Token 549: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13186953961849213
    2. '
' → logprob: -2.1318695545196533
    3. '        
' → logprob: -5.381869316101074
    4. '<|end|>' → logprob: -8.381869316101074
    5. '  
' → logprob: -10.131869316101074
    6. ' 
' → logprob: -11.506869316101074
    7. '    
' → logprob: -11.756869316101074
    8. '       
' → logprob: -12.006869316101074
    9. '
' → logprob: -12.256869316101074
    10. '            
' → logprob: -12.381869316101074

Token 550: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011460267007350922
    2. '
' → logprob: -4.636460304260254
    3. '        
' → logprob: -6.761460304260254
    4. '   ' → logprob: -8.136460304260254
    5. '    
' → logprob: -9.386460304260254
    6. '<|end|>' → logprob: -9.636460304260254
    7. '  
' → logprob: -10.636460304260254
    8. '           ' → logprob: -11.136460304260254
    9. '' → logprob: -11.261460304260254
    10. ' 
' → logprob: -11.761460304260254

Token 551: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04243641719222069
    2. ' current' → logprob: -4.042436599731445
    3. 'current' → logprob: -4.042436599731445
    4. 'diff' → logprob: -6.042436599731445
    5. '        
' → logprob: -6.292436599731445
    6. 'weight' → logprob: -7.667436599731445
    7. '
' → logprob: -7.667436599731445
    8. ' if' → logprob: -8.292436599731445
    9. ' diff' → logprob: -8.917436599731445
    10. 's' → logprob: -9.042436599731445

Token 552: ' Si' (ID: 7832)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.5657736659049988
    2. 'diff' → logprob: -1.5657737255096436
    3. ' current' → logprob: -3.0657737255096436
    4. 'weight' → logprob: -3.0657737255096436
    5. 'sl' → logprob: -3.4407737255096436
    6. '       ' → logprob: -3.6907737255096436
    7. '   ' → logprob: -3.8157737255096436
    8. 'curr' → logprob: -3.9407737255096436
    9. 'candidate' → logprob: -4.9407734870910645
    10. 'min' → logprob: -5.4407734870910645

Token 553: ' on' (ID: 402)
  Prédit: ' min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.07139241695404053
    2. 'min' → logprob: -2.69639253616333
    3. ' edges' → logprob: -6.82139253616333
    4. '   ' → logprob: -9.446392059326172
    5. ' ' → logprob: -9.946392059326172
    6. 'edges' → logprob: -10.196392059326172
    7. '_min' → logprob: -10.321392059326172
    8. ' i' → logprob: -10.571392059326172
    9. ' not' → logprob: -11.133892059326172
    10. '_' → logprob: -11.258892059326172

Token 554: ' peut' (ID: 9216)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.46990662813186646
    2. ' a' → logprob: -2.0949065685272217
    3. ' peut' → logprob: -2.8449065685272217
    4. 'a' → logprob: -3.3449065685272217
    5. ' min' → logprob: -3.4699065685272217
    6. 'est' → logprob: -3.7199065685272217
    7. ' est' → logprob: -3.8449065685272217
    8. ' is' → logprob: -4.219906806945801
    9. ' has' → logprob: -4.844906806945801
    10. 's' → logprob: -4.969906806945801

Token 555: ' construire' (ID: 92473)
  Prédit: ' construire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' construire' → logprob: -0.04701715335249901
    2. '       ' → logprob: -3.4220170974731445
    3. ' build' → logprob: -6.0470170974731445
    4. 'build' → logprob: -6.4220170974731445
    5. '           ' → logprob: -6.4220170974731445
    6. ' construir' → logprob: -6.5470170974731445
    7. ' calcul' → logprob: -6.6720170974731445
    8. ' trouver' → logprob: -6.7970170974731445
    9. '   ' → logprob: -7.1720170974731445
    10. ' constru' → logprob: -7.2970170974731445

Token 556: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.04381600394845009
    2. 'un' → logprob: -3.168816089630127
    3. '           ' → logprob: -8.543815612792969
    4. ' une' → logprob: -8.543815612792969
    5. '   ' → logprob: -8.793815612792969
    6. '       ' → logprob: -9.293815612792969
    7. ' l' → logprob: -9.543815612792969
    8. ' ' → logprob: -10.918815612792969
    9. ',' → logprob: -11.043815612792969
    10. '_un' → logprob: -11.043815612792969

Token 557: ' arbre' (ID: 164180)
  Prédit: 'ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.07958382368087769
    2. ' arbre' → logprob: -2.5795838832855225
    3. ' spanning' → logprob: -8.454584121704102
    4. 'sp' → logprob: -9.079584121704102
    5. 'arb' → logprob: -9.204584121704102
    6. 'tree' → logprob: -9.454584121704102
    7. 'span' → logprob: -10.204584121704102
    8. '   ' → logprob: -10.454584121704102
    9. '#' → logprob: -10.704584121704102
    10. ' ' → logprob: -10.954584121704102

Token 558: ' couvr' (ID: 129883)
  Prédit: ' couvr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' couvr' → logprob: -0.2681873142719269
    2. '       ' → logprob: -1.5181872844696045
    3. 'c' → logprob: -5.143187522888184
    4. ',' → logprob: -5.768187522888184
    5. 'cou' → logprob: -5.768187522888184
    6. '           ' → logprob: -7.143187522888184
    7. ' cou' → logprob: -7.393187522888184
    8. 'cover' → logprob: -7.518187522888184
    9. '_c' → logprob: -7.768187522888184
    10. ' couvert' → logprob: -7.893187522888184

Token 559: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -1.652451464906335e-05
    2. 'cant' → logprob: -12.625016212463379
    3. 'ent' → logprob: -13.000016212463379
    4. 'int' → logprob: -13.125016212463379
    5. 'ing' → logprob: -13.375016212463379
    6. 'rant' → logprob: -13.625016212463379
    7. 'vant' → logprob: -13.625016212463379
    8. '#' → logprob: -13.750016212463379
    9. '{' → logprob: -14.125016212463379
    10. 'nt' → logprob: -14.875016212463379

Token 560: ' entre' (ID: 3853)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11908634752035141
    2. ':' → logprob: -2.369086265563965
    3. '       ' → logprob: -4.244086265563965
    4. '           ' → logprob: -5.994086265563965
    5. ':
' → logprob: -6.869086265563965
    6. '   ' → logprob: -8.244086265563965
    7. ',
' → logprob: -8.244086265563965
    8. ' avec' → logprob: -9.494086265563965
    9. ' ,' → logprob: -9.744086265563965
    10. ' with' → logprob: -10.244086265563965

Token 561: ' i' (ID: 575)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.14797048270702362
    2. 'i' → logprob: -2.27297043800354
    3. ' edges' → logprob: -3.39797043800354
    4. ' i' → logprob: -7.147970676422119
    5. 'les' → logprob: -8.772970199584961
    6. '   ' → logprob: -10.147970199584961
    7. ' les' → logprob: -10.397970199584961
    8. 'indices' → logprob: -10.772970199584961
    9. '#' → logprob: -11.397970199584961
    10. 'weights' → logprob: -11.647970199584961

Token 562: ' et' (ID: 859)
  Prédit: ' et'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' et' → logprob: -0.017584362998604774
    2. 'et' → logprob: -4.267584323883057
    3. ',' → logprob: -6.267584323883057
    4. ' and' → logprob: -6.767584323883057
    5. ' ' → logprob: -8.392584800720215
    6. 'and' → logprob: -9.517584800720215
    7. ' и' → logprob: -10.892584800720215
    8. ' ' → logprob: -11.392584800720215
    9. ' ,' → logprob: -11.642584800720215
    10. '   ' → logprob: -11.767584800720215

Token 563: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.03804631531238556
    2. ' j' → logprob: -3.288046360015869
    3. '   ' → logprob: -13.288045883178711
    4. '       ' → logprob: -13.538045883178711
    5. '           ' → logprob: -14.288045883178711
    6. ' ' → logprob: -15.163045883178711
    7. '	j' → logprob: -15.163045883178711
    8. '    ' → logprob: -15.288045883178711
    9. ' ' → logprob: -16.03804588317871
    10. '
' → logprob: -16.28804588317871

Token 564: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004050382878631353
    2. '       ' → logprob: -6.379050254821777
    3. ',' → logprob: -6.629050254821777
    4. '           ' → logprob: -7.379050254821777
    5. ':
' → logprob: -8.504050254821777
    6. ' :' → logprob: -8.879050254821777
    7. '{' → logprob: -10.379050254821777
    8. '   ' → logprob: -11.629050254821777
    9. '):' → logprob: -12.129050254821777
    10. ':
' → logprob: -13.004050254821777

Token 565: ' on' (ID: 402)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05228870362043381
    2. ' current' → logprob: -3.552288770675659
    3. '           ' → logprob: -5.17728853225708
    4. ' weight' → logprob: -5.17728853225708
    5. 'diff' → logprob: -6.05228853225708
    6. 'weight' → logprob: -6.17728853225708
    7. ' diff' → logprob: -6.30228853225708
    8. 'current' → logprob: -6.42728853225708
    9. ' min' → logprob: -7.42728853225708
    10. ' poids' → logprob: -7.67728853225708

Token 566: ' calc' (ID: 25691)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6020600199699402
    2. 'min' → logprob: -1.602060079574585
    3. '#' → logprob: -2.977060079574585
    4. 'update' → logprob: -3.227060079574585
    5. ' #' → logprob: -3.352060079574585
    6. 'calc' → logprob: -3.602060079574585
    7. '           ' → logprob: -3.852060079574585
    8. ' peut' → logprob: -4.102059841156006
    9. ' calc' → logprob: -4.477059841156006
    10. 'can' → logprob: -4.977059841156006

Token 567: 'ule' (ID: 1601)
  Prédit: 'ule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ule' → logprob: -0.0011467679869383574
    2. 'cule' → logprob: -6.8761467933654785
    3. 'ulate' → logprob: -10.00114631652832
    4. 'ul' → logprob: -10.12614631652832
    5. 'uler' → logprob: -11.62614631652832
    6. 'ulte' → logprob: -12.12614631652832
    7. 'ulé' → logprob: -12.62614631652832
    8. 'l' → logprob: -13.25114631652832
    9. 'ules' → logprob: -13.62614631652832
    10. 'cul' → logprob: -13.75114631652832

Token 568: ' la' (ID: 557)
  Prédit: ' edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.5009163022041321
    2. 'edges' → logprob: -1.3759162425994873
    3. ' la' → logprob: -2.5009162425994873
    4. ' l' → logprob: -4.000916481018066
    5. 'l' → logprob: -4.125916481018066
    6. 'diff' → logprob: -4.500916481018066
    7. 'le' → logprob: -5.750916481018066
    8. 'la' → logprob: -6.000916481018066
    9. 's' → logprob: -6.125916481018066
    10. '   ' → logprob: -6.875916481018066

Token 569: ' taille' (ID: 41644)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.23377549648284912
    2. 'sl' → logprob: -2.1087756156921387
    3. 'difference' → logprob: -3.1087756156921387
    4. 's' → logprob: -3.4837756156921387
    5. 'min' → logprob: -5.733775615692139
    6. 'current' → logprob: -5.983775615692139
    7. ' slim' → logprob: -7.108775615692139
    8. '   ' → logprob: -7.233775615692139
    9. 'candidate' → logprob: -7.483775615692139
    10. 'weight' → logprob: -7.608775615692139

Token 570: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.9408504962921143
    2. 'de' → logprob: -1.5658504962921143
    3. '           ' → logprob: -1.8158504962921143
    4. 'd' → logprob: -2.4408504962921143
    5. 'diff' → logprob: -2.8158504962921143
    6. '       ' → logprob: -2.9408504962921143
    7. '   ' → logprob: -4.315850257873535
    8. ' d' → logprob: -5.315850257873535
    9. 's' → logprob: -5.440850257873535
    10. 'min' → logprob: -6.190850257873535

Token 571: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.007873606868088245
    2. ' l' → logprob: -4.88287353515625
    3. 'interval' → logprob: -8.38287353515625
    4. 'la' → logprob: -10.63287353515625
    5. ' interval' → logprob: -11.63287353515625
    6. 'cet' → logprob: -13.50787353515625
    7. 'lap' → logprob: -13.75787353515625
    8. ' la' → logprob: -14.25787353515625
    9. 'c' → logprob: -14.50787353515625
    10. '	l' → logprob: -15.00787353515625

Token 572: ''' (ID: 6)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.0847008153796196
    2. ' interval' → logprob: -2.5847008228302
    3. 'inter' → logprob: -6.334700584411621
    4. ' plage' → logprob: -7.084700584411621
    5. '_interval' → logprob: -7.084700584411621
    6. 'pl' → logprob: -7.459700584411621
    7. 'po' → logprob: -7.459700584411621
    8. '_' → logprob: -8.584700584411621
    9. 's' → logprob: -8.959700584411621
    10. '-' → logprob: -9.084700584411621

Token 573: 'interval' (ID: 37558)
  Prédit: 'interval'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.0005888947052881122
    2. ' interval' → logprob: -7.500588893890381
    3. 'inter' → logprob: -10.500589370727539
    4. '_interval' → logprob: -12.125589370727539
    5. ' intervalo' → logprob: -14.125589370727539
    6. 'éc' → logprob: -14.375589370727539
    7. 'pl' → logprob: -14.500589370727539
    8. '(interval' → logprob: -15.625589370727539
    9. ' plage' → logprob: -15.750589370727539
    10. '-' → logprob: -16.12558937072754

Token 574: 'le' (ID: 282)
  Prédit: 'le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.0054009538143873215
    2. 'val' → logprob: -6.005401134490967
    3. 'e' → logprob: -6.380401134490967
    4. 'l' → logprob: -7.380401134490967
    5. 'v' → logprob: -8.380400657653809
    6. 've' → logprob: -9.755400657653809
    7. 'te' → logprob: -9.880400657653809
    8. 'ette' → logprob: -10.380400657653809
    9. 'lle' → logprob: -10.380400657653809
    10. 'w' → logprob: -10.505400657653809

Token 575: ' de' (ID: 334)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00041875618626363575
    2. ',' → logprob: -8.250418663024902
    3. 's' → logprob: -10.000418663024902
    4. '        
' → logprob: -10.125418663024902
    5. '           ' → logprob: -10.875418663024902
    6. ' s' → logprob: -11.375418663024902
    7. '   ' → logprob: -11.625418663024902
    8. '	' → logprob: -11.875418663024902
    9. ' ' → logprob: -12.750418663024902
    10. ':' → logprob: -12.875418663024902

Token 576: ' poids' (ID: 56058)
  Prédit: 'po'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'po' → logprob: -0.018341675400733948
    2. ' poids' → logprob: -4.018341541290283
    3. ' po' → logprob: -9.018342018127441
    4. 'weights' → logprob: -10.268342018127441
    5. 'pois' → logprob: -11.393342018127441
    6. 'l' → logprob: -11.893342018127441
    7. 'weight' → logprob: -12.393342018127441
    8. 'pes' → logprob: -13.268342018127441
    9. '```' → logprob: -13.393342018127441
    10. 'edges' → logprob: -13.518342018127441

Token 577: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002288471907377243
    2. ',' → logprob: -6.627288341522217
    3. '           ' → logprob: -8.002288818359375
    4. ' =' → logprob: -8.752288818359375
    5. '        
' → logprob: -9.377288818359375
    6. ':' → logprob: -9.502288818359375
    7. 's' → logprob: -9.627288818359375
    8. '=' → logprob: -10.502288818359375
    9. '               ' → logprob: -10.752288818359375
    10. '	' → logprob: -11.002288818359375

Token 578: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00023250321100931615
    2. ',' → logprob: -9.750232696533203
    3. '   ' → logprob: -9.750232696533203
    4. '           ' → logprob: -10.250232696533203
    5. '        
' → logprob: -10.375232696533203
    6. ' s' → logprob: -11.125232696533203
    7. 's' → logprob: -12.125232696533203
    8. ' if' → logprob: -12.500232696533203
    9. 'diff' → logprob: -12.625232696533203
    10. '	' → logprob: -12.875232696533203

Token 579: ' diff' (ID: 8868)
  Prédit: 'weight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'weight' → logprob: -1.2090392112731934
    2. 'diff' (adapté à ' diff') → logprob: -1.4590392112731934
    3. 'current' → logprob: -1.5840392112731934
    4. ' current' → logprob: -2.4590392112731934
    5. ' weight' → logprob: -2.8340392112731934
    6. '       ' → logprob: -2.8340392112731934
    7. 'curr' → logprob: -3.9590392112731934
    8. ' diff' → logprob: -4.584039211273193
    9. '           ' → logprob: -5.334039211273193
    10. 'sl' → logprob: -5.459039211273193

Token 580: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03365307301282883
    2. '=' → logprob: -3.4086530208587646
    3. '_' → logprob: -12.408653259277344
    4. 's' → logprob: -13.533653259277344
    5. '_=' → logprob: -14.158653259277344
    6. ' ' → logprob: -14.658653259277344
    7. '   ' → logprob: -15.658653259277344
    8. ' ' → logprob: -15.908653259277344
    9. ' =
' → logprob: -16.158653259277344
    10. '＝' → logprob: -16.658653259277344

Token 581: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.023247340694069862
    2. ' edges' → logprob: -3.773247241973877
    3. '(edges' → logprob: -13.898247718811035
    4. '   ' → logprob: -14.273247718811035
    5. '.edges' → logprob: -15.773247718811035
    6. 'edge' → logprob: -15.898247718811035
    7. '_edges' → logprob: -17.77324676513672
    8. 'Edges' → logprob: -18.02324676513672
    9. '       ' → logprob: -18.02324676513672
    10. 'ed' → logprob: -18.52324676513672

Token 582: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -1.0280383548888494e-06
    2. '[' → logprob: -13.875000953674316
    3. '[
' → logprob: -17.875001907348633
    4. '[i' → logprob: -19.250001907348633
    5. ' [' → logprob: -19.875001907348633
    6. 'j' → logprob: -20.000001907348633
    7. '[q' → logprob: -20.125001907348633
    8. '[s' → logprob: -21.000001907348633
    9. '```' → logprob: -21.500001907348633
    10. '[js' → logprob: -21.625001907348633

Token 583: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.10023244470357895
    2. '][' → logprob: -2.3502323627471924
    3. ')[' → logprob: -10.975232124328613
    4. '   ' → logprob: -13.475232124328613
    5. ' [' → logprob: -13.600232124328613
    6. ' ][' → logprob: -13.725232124328613
    7. '}[' → logprob: -13.725232124328613
    8. '```' → logprob: -13.850232124328613
    9. ''][' → logprob: -14.100232124328613
    10. ']' → logprob: -14.225232124328613

Token 584: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -15.125000953674316
    3. '
' → logprob: -16.125
    4. '   ' → logprob: -17.0
    5. '```' → logprob: -17.0
    6. '-' → logprob: -17.5
    7. '  ' → logprob: -18.875
    8. '

' → logprob: -19.125
    9. ' -' → logprob: -19.3125
    10. '[' → logprob: -19.4375

Token 585: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.1002078503370285
    2. '-' → logprob: -2.350207805633545
    3. ' ' → logprob: -15.350208282470703
    4. ' ' → logprob: -15.725208282470703
    5. '<|end|>' → logprob: -15.725208282470703
    6. ' -
' → logprob: -15.850208282470703
    7. '-
' → logprob: -15.850208282470703
    8. ')' → logprob: -16.100208282470703
    9. ']' → logprob: -16.600208282470703
    10. '```' → logprob: -16.850208282470703

Token 586: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.3868715465068817
    2. '-' → logprob: -1.136871576309204
    3. ' ' → logprob: -15.761871337890625
    4. '-
' → logprob: -16.011871337890625
    5. ' ' → logprob: -16.886871337890625
    6. '   ' → logprob: -17.261871337890625
    7. ' -
' → logprob: -17.511871337890625
    8. '−' → logprob: -17.761871337890625
    9. '```' → logprob: -18.136871337890625
    10. '‌' → logprob: -18.261871337890625

Token 587: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.0001234428636962548
    2. ' edges' → logprob: -9.000123023986816
    3. '   ' → logprob: -18.375123977661133
    4. '.edges' → logprob: -18.500123977661133
    5. '(edges' → logprob: -18.625123977661133
    6. '_edges' → logprob: -20.250123977661133
    7. 'edge' → logprob: -20.750123977661133
    8. 'Edges' → logprob: -20.875123977661133
    9. '       ' → logprob: -20.875123977661133
    10. ' ' → logprob: -21.875123977661133

Token 588: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.1008713702030946e-06
    2. '[j' → logprob: -14.375001907348633
    3. '[' → logprob: -14.500001907348633
    4. 'i' → logprob: -14.500001907348633
    5. 's' → logprob: -15.375001907348633
    6. '[
' → logprob: -16.375001907348633
    7. '
' → logprob: -16.875001907348633
    8. '[s' → logprob: -17.625001907348633
    9. 'edges' → logprob: -17.750001907348633
    10. '```' → logprob: -18.000001907348633

Token 589: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0009626734536141157
    2. '[' → logprob: -7.125962734222412
    3. ' ][' → logprob: -8.875962257385254
    4. ']' → logprob: -11.125962257385254
    5. '   ' → logprob: -14.250962257385254
    6. ')[' → logprob: -14.250962257385254
    7. '"][' → logprob: -15.250962257385254
    8. '
' → logprob: -15.250962257385254
    9. 's' → logprob: -15.375962257385254
    10. ' ' → logprob: -15.500962257385254

Token 590: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.214019307051785e-05
    2. '[' → logprob: -11.000032424926758
    3. ' ' → logprob: -11.250032424926758
    4. '0' → logprob: -13.750032424926758
    5. '   ' → logprob: -15.125032424926758
    6. '
' → logprob: -15.250032424926758
    7. '```' → logprob: -15.250032424926758
    8. '][' → logprob: -15.437532424926758
    9. '(' → logprob: -17.000032424926758
    10. '1' → logprob: -17.312532424926758

Token 591: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09539230167865753
    2. '<|end|>' → logprob: -2.8453922271728516
    3. '       ' → logprob: -3.4703922271728516
    4. '
' → logprob: -7.720392227172852
    5. ']' → logprob: -7.720392227172852
    6. ')
' → logprob: -8.220392227172852
    7. '<|end|>' → logprob: -8.470392227172852
    8. ' )' → logprob: -9.095392227172852
    9. '   ' → logprob: -9.220392227172852
    10. '}' → logprob: -10.470392227172852

Token 592: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014578535221517086
    2. ' if' → logprob: -4.764578342437744
    3. 'if' → logprob: -5.139578342437744
    4. '   ' → logprob: -9.764578819274902
    5. '           ' → logprob: -10.889578819274902
    6. '	if' → logprob: -12.389578819274902
    7. '	' → logprob: -12.889578819274902
    8. ',' → logprob: -13.764578819274902
    9. '        
' → logprob: -14.764578819274902
    10. '	   ' → logprob: -15.139578819274902

Token 593: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.22699344158172607
    2. 'if' (adapté à ' if') → logprob: -2.2269935607910156
    3. '       ' → logprob: -2.3519935607910156
    4. '   ' → logprob: -10.851993560791016
    5. '	if' → logprob: -10.976993560791016
    6. '
' → logprob: -12.851993560791016
    7. '           ' → logprob: -13.351993560791016
    8. ' ' → logprob: -14.851993560791016
    9. '	' → logprob: -14.851993560791016
    10. ' ' → logprob: -14.976993560791016

Token 594: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.5759468674659729
    2. 'min' → logprob: -0.8259468674659729
    3. '(min' → logprob: -11.825946807861328
    4. ' (' → logprob: -16.575946807861328
    5. '	min' → logprob: -17.075946807861328
    6. '   ' → logprob: -17.450946807861328
    7. '_min' → logprob: -19.450946807861328
    8. '[min' → logprob: -20.075946807861328
    9. ' ' → logprob: -20.575946807861328
    10. '=min' → logprob: -20.700946807861328

Token 595: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -1.3856492842023727e-06
    2. '_' → logprob: -13.625000953674316
    3. '_diff' → logprob: -16.000001907348633
    4. '_d' → logprob: -18.375001907348633
    5. '\' → logprob: -19.000001907348633
    6. ' _' → logprob: -19.625001907348633
    7. 'diff' → logprob: -21.250001907348633
    8. 's' → logprob: -21.500001907348633
    9. '_
' → logprob: -21.500001907348633
    10. '__' → logprob: -21.750001907348633

Token 596: 'lim' (ID: 5406)
  Prédit: 'lim'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lim' → logprob: -0.1241593286395073
    2. '_s' → logprob: -2.749159336090088
    3. 'min' → logprob: -3.124159336090088
    4. 'sl' → logprob: -5.249159336090088
    5. '_min' → logprob: -6.999159336090088
    6. '_sl' → logprob: -7.249159336090088
    7. '_l' → logprob: -7.374159336090088
    8. 'l' → logprob: -8.12415885925293
    9. 'limit' → logprob: -9.12415885925293
    10. '.slim' → logprob: -9.12415885925293

Token 597: 'ness' (ID: 2816)
  Prédit: 'ness'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ness' → logprob: 0.0
    2. 'min' → logprob: -17.25
    3. 'n' → logprob: -17.875
    4. '_' → logprob: -19.375
    5. '_n' → logprob: -19.75
    6. ' ness' → logprob: -20.25
    7. 'eness' → logprob: -20.625
    8. 'nes' → logprob: -21.125
    9. 'ens' → logprob: -21.25
    10. '   ' → logprob: -21.375

Token 598: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.011048528365790844
    2. 'is' → logprob: -4.511048316955566
    3. '	is' → logprob: -15.011048316955566
    4. ' ' → logprob: -15.261048316955566
    5. 'i' → logprob: -16.136049270629883
    6. ' i' → logprob: -17.136049270629883
    7. '==' → logprob: -18.011049270629883
    8. '[' → logprob: -18.761049270629883
    9. '   ' → logprob: -19.011049270629883
    10. '=' → logprob: -19.011049270629883

Token 599: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0011705794604495168
    2. ' None' → logprob: -6.751170635223389
    3. '=None' → logprob: -15.75117015838623
    4. 'not' → logprob: -16.501171112060547
    5. 'none' → logprob: -16.876171112060547
    6. '_None' → logprob: -17.001171112060547
    7. 'N' → logprob: -17.376171112060547
    8. '(None' → logprob: -19.126171112060547
    9. 'No' → logprob: -19.876171112060547
    10. '   ' → logprob: -19.876171112060547

Token 600: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.0007200572872534394
    2. 'or' → logprob: -7.250720024108887
    3. '	or' → logprob: -11.875720024108887
    4. '           ' → logprob: -13.125720024108887
    5. '       ' → logprob: -15.625720024108887
    6. ' ' → logprob: -15.875720024108887
    7. '   ' → logprob: -16.000720977783203
    8. '          ' → logprob: -16.125720977783203
    9. ' или' → logprob: -16.250720977783203
    10. '        ' → logprob: -16.750720977783203

Token 601: ' diff' (ID: 8868)
  Prédit: ' diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' diff' → logprob: -0.5760077834129333
    2. 'diff' → logprob: -0.8260077834129333
    3. '	diff' → logprob: -9.826007843017578
    4. '           ' → logprob: -11.951007843017578
    5. '       ' → logprob: -13.076007843017578
    6. '        ' → logprob: -13.326007843017578
    7. '   ' → logprob: -14.076007843017578
    8. '    ' → logprob: -14.576007843017578
    9. '(diff' → logprob: -14.701007843017578
    10. ' dif' → logprob: -14.701007843017578

Token 602: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.04858805239200592
    2. '<' → logprob: -3.0485880374908447
    3. '<int' → logprob: -15.673587799072266
    4. '<|end|>' → logprob: -15.798587799072266
    5. '<size' → logprob: -17.548587799072266
    6. ' ' → logprob: -17.548587799072266
    7. '<class' → logprob: -17.798587799072266
    8. '<const' → logprob: -17.798587799072266
    9. '<std' → logprob: -17.923587799072266
    10. '[' → logprob: -17.923587799072266

Token 603: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.00861456897109747
    2. ' min' → logprob: -4.758614540100098
    3. '	min' → logprob: -17.133615493774414
    4. '   ' → logprob: -18.133615493774414
    5. '_min' → logprob: -18.633615493774414
    6. '           ' → logprob: -20.508615493774414
    7. 'm' → logprob: -20.633615493774414
    8. '.min' → logprob: -20.758615493774414
    9. 'mini' → logprob: -20.758615493774414
    10. '=min' → logprob: -20.883615493774414

Token 604: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -1.9361264946837764e-07
    2. '_' → logprob: -16.5
    3. '_min' → logprob: -16.75
    4. '_diff' → logprob: -17.75
    5. 's' → logprob: -18.5
    6. '\' → logprob: -18.875
    7. '_sl' → logprob: -19.625
    8. 'min' → logprob: -20.125
    9. ')' → logprob: -20.5
    10. '   ' → logprob: -20.5

Token 605: 'lim' (ID: 5406)
  Prédit: 'lim'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lim' → logprob: -0.00010580805974313989
    2. 'sl' → logprob: -10.000105857849121
    3. 'l' → logprob: -10.375105857849121
    4. '_s' → logprob: -11.250105857849121
    5. '_l' → logprob: -11.875105857849121
    6. 's' → logprob: -13.375105857849121
    7. 'lin' → logprob: -13.750105857849121
    8. 'lime' → logprob: -13.875105857849121
    9. 'im' → logprob: -14.125105857849121
    10. 'pl' → logprob: -14.500105857849121

Token 606: 'ness' (ID: 2816)
  Prédit: 'ness'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ness' → logprob: -0.005239445250481367
    2. 'ess' → logprob: -5.255239486694336
    3. 'ens' → logprob: -12.255239486694336
    4. '_s' → logprob: -15.130239486694336
    5. 's' → logprob: -15.380239486694336
    6. '_' → logprob: -15.380239486694336
    7. 'less' → logprob: -16.630239486694336
    8. 'ss' → logprob: -16.755239486694336
    9. 'ress' → logprob: -17.130239486694336
    10. ' ness' → logprob: -17.880239486694336

Token 607: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0009323021513409913
    2. ':
' → logprob: -7.000932216644287
    3. '       ' → logprob: -11.500932693481445
    4. '):' → logprob: -12.375932693481445
    5. '           ' → logprob: -13.125932693481445
    6. '=' → logprob: -13.500932693481445
    7. ':
' → logprob: -14.125932693481445
    8. '   ' → logprob: -14.375932693481445
    9. ')' → logprob: -14.500932693481445
    10. '):
' → logprob: -14.875932693481445

Token 608: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.014865272678434849
    2. '       ' → logprob: -4.264865398406982
    3. ':' → logprob: -7.389865398406982
    4. ':
' → logprob: -10.389864921569824
    5. '               ' → logprob: -10.889864921569824
    6. '	       ' → logprob: -11.514864921569824
    7. '		' → logprob: -12.014864921569824
    8. ' min' → logprob: -12.639864921569824
    9. '   ' → logprob: -12.889864921569824
    10. '          ' → logprob: -13.514864921569824

Token 609: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' (adapté à ' min') → logprob: -0.3084745705127716
    2. ' min' → logprob: -1.8084745407104492
    3. '           ' → logprob: -2.308474540710449
    4. '               ' → logprob: -6.183474540710449
    5. '   ' → logprob: -10.30847454071045
    6. '       ' → logprob: -11.55847454071045
    7. '	min' → logprob: -12.55847454071045
    8. '                   ' → logprob: -13.18347454071045
    9. '_min' → logprob: -13.55847454071045
    10. ',min' → logprob: -14.43347454071045

Token 610: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: 0.0
    2. '_' → logprob: -17.875
    3. '\' → logprob: -20.0
    4. ' _' → logprob: -20.25
    5. '_sl' → logprob: -21.0
    6. '_min' → logprob: -22.125
    7. 's' → logprob: -22.625
    8. '=_' → logprob: -22.875
    9. '_d' → logprob: -23.5
    10. '=' → logprob: -23.875

Token 611: 'lim' (ID: 5406)
  Prédit: 'lim'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lim' → logprob: -0.023333877325057983
    2. 'sl' → logprob: -4.02333402633667
    3. '_s' → logprob: -6.14833402633667
    4. 's' → logprob: -6.27333402633667
    5. 'l' → logprob: -7.02333402633667
    6. 'im' → logprob: -10.148333549499512
    7. ' slim' → logprob: -10.398333549499512
    8. 'lin' → logprob: -10.523333549499512
    9. '_l' → logprob: -10.648333549499512
    10. 'il' → logprob: -10.648333549499512

Token 612: 'ness' (ID: 2816)
  Prédit: 'ness'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ness' → logprob: -1.652451464906335e-05
    2. 'ess' → logprob: -11.250016212463379
    3. 's' → logprob: -13.125016212463379
    4. 'ens' → logprob: -14.125016212463379
    5. '_s' → logprob: -14.750016212463379
    6. 'ss' → logprob: -15.750016212463379
    7. 'cess' → logprob: -16.750017166137695
    8. 'less' → logprob: -17.125017166137695
    9. '_' → logprob: -17.125017166137695
    10. 'nes' → logprob: -18.125017166137695

Token 613: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20141343772411346
    2. '=' → logprob: -1.7014133930206299
    3. '＝' → logprob: -16.701414108276367
    4. ' =
' → logprob: -18.701414108276367
    5. ' ' → logprob: -19.076414108276367
    6. '=
' → logprob: -19.201414108276367
    7. '=

' → logprob: -19.201414108276367
    8. '=d' → logprob: -19.451414108276367
    9. '=cut' → logprob: -20.451414108276367
    10. ',' → logprob: -20.451414108276367

Token 614: ' diff' (ID: 8868)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.029750604182481766
    2. ' diff' → logprob: -3.5297505855560303
    3. '	diff' → logprob: -15.90475082397461
    4. 'dif' → logprob: -19.90475082397461
    5. '(diff' → logprob: -20.02975082397461
    6. 'd' → logprob: -21.27975082397461
    7. ' dif' → logprob: -21.27975082397461
    8. '_diff' → logprob: -21.52975082397461
    9. 'difference' → logprob: -22.15475082397461
    10. '.diff' → logprob: -23.02975082397461

Token 615: '
    
' (ID: 15698)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4884793758392334
    2. '    
' → logprob: -1.6134793758392334
    3. '   ' → logprob: -1.7384793758392334
    4. 'return' → logprob: -5.3634796142578125
    5. '  
' → logprob: -5.4884796142578125
    6. ' return' → logprob: -6.7384796142578125
    7. '   
' → logprob: -7.6134796142578125
    8. ' 
' → logprob: -7.8634796142578125
    9. '<|end|>' → logprob: -8.363479614257812
    10. '        
' → logprob: -8.863479614257812

Token 616: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.47447583079338074
    2. '   ' → logprob: -0.9744758605957031
    3. ' return' → logprob: -7.849475860595703
    4. '    
' → logprob: -12.099475860595703
    5. '
' → logprob: -13.224475860595703
    6. '	return' → logprob: -14.224475860595703
    7. '       ' → logprob: -14.974475860595703
    8. '  ' → logprob: -15.849475860595703
    9. ' ' → logprob: -15.849475860595703
    10. 'ret' → logprob: -17.099475860595703

Token 617: ' if' (ID: 538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.2014956921339035
    2. '   ' → logprob: -1.70149564743042
    3. ' return' → logprob: -9.451496124267578
    4. '	return' → logprob: -12.826496124267578
    5. '    
' → logprob: -14.701496124267578
    6. '       ' → logprob: -15.201496124267578
    7. '```' → logprob: -15.451496124267578
    8. 'if' (adapté à ' if') → logprob: -16.076496124267578
    9. ' ' → logprob: -16.826496124267578
    10. 'ret' → logprob: -17.201496124267578

Token 618: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.014163863845169544
    2. 'min' → logprob: -4.264163970947266
    3. '	min' → logprob: -16.389163970947266
    4. 'm' → logprob: -17.389163970947266
    5. '   ' → logprob: -17.389163970947266
    6. ' m' → logprob: -17.514163970947266
    7. ' ' → logprob: -17.639163970947266
    8. ' ' → logprob: -18.514163970947266
    9. 'n' → logprob: -18.764163970947266
    10. ' None' → logprob: -18.889163970947266

Token 619: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -5.512236498361744e-07
    2. '_' → logprob: -14.875000953674316
    3. '_min' → logprob: -15.750000953674316
    4. 's' → logprob: -18.625
    5. 'min' → logprob: -19.25
    6. '_sl' → logprob: -19.625
    7. '_
' → logprob: -20.25
    8. '\' → logprob: -20.25
    9. '_m' → logprob: -21.375
    10. '=' → logprob: -21.5

Token 620: 'lim' (ID: 5406)
  Prédit: 'lim'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lim' → logprob: -0.07454660534858704
    2. 'l' → logprob: -2.8245465755462646
    3. 'min' → logprob: -4.574546813964844
    4. 's' → logprob: -6.824546813964844
    5. 'sl' → logprob: -7.699546813964844
    6. 'lin' → logprob: -8.574546813964844
    7. '_s' → logprob: -9.324546813964844
    8. 'limit' → logprob: -9.699546813964844
    9. 'len' → logprob: -9.949546813964844
    10. '_l' → logprob: -10.199546813964844

Token 621: 'ness' (ID: 2816)
  Prédit: 'ness'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ness' → logprob: -1.700132997939363e-05
    2. 'ess' → logprob: -11.000017166137695
    3. 'ens' → logprob: -15.500017166137695
    4. 'eness' → logprob: -17.125017166137695
    5. '_s' → logprob: -19.000017166137695
    6. '_' → logprob: -19.500017166137695
    7. 's' → logprob: -19.500017166137695
    8. 'less' → logprob: -19.625017166137695
    9. '-' → logprob: -20.250017166137695
    10. 'ence' → logprob: -20.375017166137695

Token 622: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.008614808320999146
    2. 'is' → logprob: -4.758615016937256
    3. '	is' → logprob: -16.258615493774414
    4. ' ' → logprob: -16.508615493774414
    5. '==' → logprob: -17.133615493774414
    6. ')is' → logprob: -18.633615493774414
    7. ' ==' → logprob: -19.258615493774414
    8. '   ' → logprob: -19.383615493774414
    9. ')' → logprob: -19.383615493774414
    10. 'Is' → logprob: -20.133615493774414

Token 623: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0015042672166600823
    2. ' None' → logprob: -6.501504421234131
    3. 'not' → logprob: -13.376503944396973
    4. '0' → logprob: -15.376503944396973
    5. '   ' → logprob: -16.62650489807129
    6. ' not' → logprob: -17.62650489807129
    7. 'none' → logprob: -18.37650489807129
    8. '_None' → logprob: -18.37650489807129
    9. 'Not' → logprob: -19.50150489807129
    10. '=None' → logprob: -19.87650489807129

Token 624: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3708874583244324
    2. ':
' → logprob: -1.2458875179290771
    3. '   ' → logprob: -4.245887279510498
    4. '       ' → logprob: -5.120887279510498
    5. ':return' → logprob: -6.370887279510498
    6. 'return' → logprob: -8.995887756347656
    7. ' return' → logprob: -11.120887756347656
    8. ' :' → logprob: -11.495887756347656
    9. ':
' → logprob: -11.495887756347656
    10. ')' → logprob: -12.120887756347656

Token 625: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07455357909202576
    2. '   ' → logprob: -2.8245534896850586
    3. ' return' → logprob: -4.699553489685059
    4. 'return' → logprob: -5.699553489685059
    5. '
' → logprob: -11.199553489685059
    6. '	return' → logprob: -11.449553489685059
    7. '    ' → logprob: -11.699553489685059
    8. '    
' → logprob: -11.949553489685059
    9. ':return' → logprob: -12.574553489685059
    10. '        
' → logprob: -12.699553489685059

Token 626: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.1541089117527008
    2. ' return' → logprob: -2.029109001159668
    3. '   ' → logprob: -4.529109001159668
    4. '       ' → logprob: -7.904109001159668
    5. '
' → logprob: -8.904109001159668
    6. 'print' → logprob: -10.154109001159668
    7. '	return' → logprob: -11.154109001159668
    8. '    
' → logprob: -12.029109001159668
    9. 'eturn' → logprob: -12.779109001159668
    10. ' print' → logprob: -13.029109001159668

Token 627: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.048594869673252106
    2. ' -' → logprob: -3.0485949516296387
    3. 'None' → logprob: -12.42359447479248
    4. ' None' → logprob: -13.79859447479248
    5. '0' → logprob: -13.92359447479248
    6. ' ' → logprob: -14.92359447479248
    7. '-f' → logprob: -15.04859447479248
    8. 'False' → logprob: -15.17359447479248
    9. '-s' → logprob: -15.54859447479248
    10. '"' → logprob: -16.548595428466797

Token 628: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -19.75
    3. '2' → logprob: -20.5
    4. '-' → logprob: -21.625
    5. '```' → logprob: -22.0
    6. '１' → logprob: -22.375
    7. '۱' → logprob: -23.0
    8. '   ' → logprob: -23.25
    9. '4' → logprob: -23.5
    10. '01' → logprob: -23.5

Token 629: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10755220800638199
    2. '
' → logprob: -2.7325522899627686
    3. '    
' → logprob: -3.8575522899627686
    4. 'return' → logprob: -4.2325520515441895
    5. ' return' → logprob: -6.8575520515441895
    6. '   
' → logprob: -9.357552528381348
    7. '  
' → logprob: -9.607552528381348
    8. '<|end|>' → logprob: -10.607552528381348
    9. '  ' → logprob: -11.107552528381348
    10. '        
' → logprob: -11.607552528381348

Token 630: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005146674811840057
    2. '    
' → logprob: -8.37551498413086
    3. '
' → logprob: -8.50051498413086
    4. 'return' → logprob: -9.62551498413086
    5. ' return' → logprob: -11.37551498413086
    6. '       ' → logprob: -14.12551498413086
    7. '<|end|>' → logprob: -14.12551498413086
    8. '  
' → logprob: -14.87551498413086
    9. '	return' → logprob: -15.25051498413086
    10. '        
' → logprob: -15.25051498413086

Token 631: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12863728404045105
    2. 'return' → logprob: -2.1286373138427734
    3. ' return' → logprob: -6.628637313842773
    4. '    
' → logprob: -8.128637313842773
    5. '
' → logprob: -9.378637313842773
    6. 'else' (adapté à ' else') → logprob: -13.378637313842773
    7. '	return' → logprob: -13.378637313842773
    8. '       ' → logprob: -13.753637313842773
    9. '  ' → logprob: -14.628637313842773
    10. '   
' → logprob: -14.753637313842773

Token 632: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005237548612058163
    2. ':' → logprob: -5.880237579345703
    3. ':
' → logprob: -6.755237579345703
    4. ' return' → logprob: -7.255237579345703
    5. ':return' → logprob: -8.005237579345703
    6. 'return' → logprob: -8.755237579345703
    7. '   ' → logprob: -9.880237579345703
    8. '	return' → logprob: -12.505237579345703
    9. '      ' → logprob: -12.755237579345703
    10. '	   ' → logprob: -13.880237579345703

Token 633: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0017737116431817412
    2. 'return' → logprob: -7.001773834228516
    3. ' return' → logprob: -7.126773834228516
    4. '   ' → logprob: -9.751773834228516
    5. '	return' → logprob: -16.001773834228516
    6. '           ' → logprob: -16.251773834228516
    7. '{return' → logprob: -16.751773834228516
    8. '      ' → logprob: -17.251773834228516
    9. '     ' → logprob: -18.126773834228516
    10. '	   ' → logprob: -18.251773834228516

Token 634: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.00012713817704934627
    2. ' return' → logprob: -9.500126838684082
    3. '   ' → logprob: -10.250126838684082
    4. '       ' → logprob: -11.000126838684082
    5. '
' → logprob: -15.875126838684082
    6. '	return' → logprob: -16.3751277923584
    7. '{return' → logprob: -19.5001277923584
    8. '        
' → logprob: -20.1251277923584
    9. '    
' → logprob: -20.1251277923584
    10. '```' → logprob: -20.3751277923584

Token 635: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0015023599844425917
    2. ' min' → logprob: -6.501502513885498
    3. '	min' → logprob: -20.126502990722656
    4. '   ' → logprob: -21.876502990722656
    5. '_min' → logprob: -23.251502990722656
    6. 'int' → logprob: -23.626502990722656
    7. 'm' → logprob: -23.876502990722656
    8. '(min' → logprob: -24.251502990722656
    9. 'mini' → logprob: -24.376502990722656
    10. '[min' → logprob: -24.626502990722656

Token 636: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -2.935296834039036e-06
    2. 'min' → logprob: -12.87500286102295
    3. '_min' → logprob: -15.62500286102295
    4. '(min' → logprob: -16.500003814697266
    5. '_' → logprob: -17.000003814697266
    6. '\' → logprob: -18.000003814697266
    7. 's' → logprob: -18.250003814697266
    8. '[min' → logprob: -18.875003814697266
    9. '=min' → logprob: -19.500003814697266
    10. ' min' → logprob: -19.875003814697266

Token 637: 'lim' (ID: 5406)
  Prédit: 'lim'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lim' → logprob: -0.007480975706130266
    2. 'l' → logprob: -5.132481098175049
    3. 's' → logprob: -7.507481098175049
    4. 'im' → logprob: -7.632481098175049
    5. 'min' → logprob: -8.50748062133789
    6. 'lin' → logprob: -9.00748062133789
    7. 'sl' → logprob: -10.50748062133789
    8. 'len' → logprob: -10.63248062133789
    9. 'lime' → logprob: -11.13248062133789
    10. 'li' → logprob: -11.25748062133789

Token 638: 'ness' (ID: 2816)
  Prédit: 'ness'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ness' → logprob: -1.306760805164231e-05
    2. 'ess' → logprob: -11.25001335144043
    3. 'ens' → logprob: -17.25001335144043
    4. 's' → logprob: -19.00001335144043
    5. 'cess' → logprob: -19.37501335144043
    6. '_' → logprob: -19.87501335144043
    7. '_s' → logprob: -20.12501335144043
    8. ' ness' → logprob: -20.87501335144043
    9. 'less' → logprob: -21.00001335144043
    10. 'nes' → logprob: -21.25001335144043

Token 639: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 640: 'def' (ID: 1314)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.031748849898576736
    2. 'if' → logprob: -3.7817487716674805
    3. '```' → logprob: -5.6567487716674805
    4. 'n' → logprob: -6.0317487716674805
    5. '<|end|>' → logprob: -6.0317487716674805
    6. 'def' → logprob: -9.28174877166748
    7. ' if' → logprob: -11.03174877166748
    8. 'print' → logprob: -11.65674877166748
    9. '#if' → logprob: -11.90674877166748
    10. 'import' → logprob: -12.03174877166748

Token 641: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.0001487140398239717
    2. 'main' → logprob: -9.50014877319336
    3. ' solve' → logprob: -9.75014877319336
    4. ' parse' → logprob: -12.12514877319336
    5. ' read' → logprob: -13.00014877319336
    6. ' ' → logprob: -13.25014877319336
    7. ' process' → logprob: -14.00014877319336
    8. '	main' → logprob: -14.25014877319336
    9. ' solution' → logprob: -14.37514877319336
    10. ' sys' → logprob: -14.37514877319336

Token 642: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -1.8193366486229934e-05
    2. ' ():' → logprob: -11.000018119812012
    3. '():
' → logprob: -13.625018119812012
    4. '()' → logprob: -15.625018119812012
    5. '():
' → logprob: -17.250019073486328
    6. '()>' → logprob: -18.500019073486328
    7. '(' → logprob: -18.625019073486328
    8. '():

' → logprob: -18.750019073486328
    9. '(":' → logprob: -20.000019073486328
    10. '()">' → logprob: -20.375019073486328

Token 643: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05070305988192558
    2. ' n' → logprob: -4.175703048706055
    3. ' import' → logprob: -4.300703048706055
    4. 'n' → logprob: -4.425703048706055
    5. 'import' → logprob: -5.300703048706055
    6. ' input' → logprob: -5.800703048706055
    7. 'input' → logprob: -8.550703048706055
    8. '	n' → logprob: -9.050703048706055
    9. ' readline' → logprob: -9.675703048706055
    10. '```' → logprob: -10.300703048706055

Token 644: ' input' (ID: 3422)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.3293832242488861
    2. 'n' → logprob: -2.079383134841919
    3. ' input' → logprob: -2.204383134841919
    4. '   ' → logprob: -3.204383134841919
    5. ' import' → logprob: -5.829383373260498
    6. 'input' (adapté à ' input') → logprob: -6.579383373260498
    7. 'import' → logprob: -8.70438289642334
    8. ' t' → logprob: -8.95438289642334
    9. 't' → logprob: -9.57938289642334
    10. '	n' → logprob: -11.45438289642334

Token 645: ' =' (ID: 314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.8561093211174011
    2. '_data' → logprob: -0.8561093211174011
    3. '=' → logprob: -2.856109380722046
    4. '_line' → logprob: -2.856109380722046
    5. ' =' → logprob: -3.856109380722046
    6. '_' → logprob: -4.731109142303467
    7. '_lines' → logprob: -5.731109142303467
    8. 'data' → logprob: -6.606109142303467
    9. '_=' → logprob: -8.106109619140625
    10. '().' → logprob: -9.106109619140625

Token 646: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.004078758880496025
    2. ' sys' → logprob: -5.5040788650512695
    3. '=sys' → logprob: -15.50407886505127
    4. '	sys' → logprob: -15.75407886505127
    5. '(sys' → logprob: -16.879077911376953
    6. 'lambda' → logprob: -21.254077911376953
    7. '```' → logprob: -22.504077911376953
    8. 'input' → logprob: -22.754077911376953
    9. '_sys' → logprob: -22.754077911376953
    10. '/sys' → logprob: -23.254077911376953

Token 647: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0005093070212751627
    2. '.' → logprob: -7.625509262084961
    3. '.readline' → logprob: -11.750509262084961
    4. '.stdout' → logprob: -11.875509262084961
    5. '.argv' → logprob: -12.500509262084961
    6. '.std' → logprob: -13.500509262084961
    7. '.input' → logprob: -15.000509262084961
    8. 'stdin' → logprob: -15.000509262084961
    9. '.st' → logprob: -15.250509262084961
    10. '.​' → logprob: -15.625509262084961

Token 648: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0006826493190601468
    2. 'read' → logprob: -7.375682830810547
    3. '.read' → logprob: -10.125682830810547
    4. ' readline' → logprob: -11.875682830810547
    5. '.readlines' → logprob: -12.000682830810547
    6. '_read' → logprob: -13.375682830810547
    7. '.' → logprob: -14.750682830810547
    8. 'buffer' → logprob: -15.000682830810547
    9. 'rea' → logprob: -15.875682830810547
    10. 'reader' → logprob: -16.375682830810547

Token 649: '
' (ID: 198)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0664619505405426
    2. '()
' → logprob: -3.6914620399475098
    3. '().' → logprob: -3.8164620399475098
    4. '   ' → logprob: -4.06646203994751
    5. '()\' → logprob: -8.816461563110352
    6. ' ()' → logprob: -10.816461563110352
    7. '()
' → logprob: -11.316461563110352
    8. '
' → logprob: -11.566461563110352
    9. '    
' → logprob: -12.066461563110352
    10. '()

' → logprob: -12.191461563110352

Token 650: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024211503565311432
    2. 'n' → logprob: -3.7742114067077637
    3. ' n' → logprob: -7.399211406707764
    4. '    
' → logprob: -8.524211883544922
    5. '	n' → logprob: -8.899211883544922
    6. '
' → logprob: -11.774211883544922
    7. '    ' → logprob: -12.649211883544922
    8. '(n' → logprob: -13.149211883544922
    9. '   ' → logprob: -13.274211883544922
    10. '```' → logprob: -14.274211883544922

Token 651: ' while' (ID: 2049)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0006000961875542998
    2. '   ' → logprob: -7.5005998611450195
    3. 't' → logprob: -10.50059986114502
    4. '    
' → logprob: -11.62559986114502
    5. ' n' → logprob: -11.87559986114502
    6. 'num' → logprob: -13.00059986114502
    7. 'nt' → logprob: -14.87559986114502
    8. 'T' → logprob: -15.50059986114502
    9. '	n' → logprob: -15.50059986114502
    10. 'N' → logprob: -15.75059986114502

Token 652: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.10025443881750107
    2. 'True' → logprob: -2.350254535675049
    3. '(True' → logprob: -9.97525405883789
    4. '1' → logprob: -14.10025405883789
    5. ' ' → logprob: -15.72525405883789
    6. '=True' → logprob: -15.85025405883789
    7. 'true' → logprob: -16.47525405883789
    8. ' line' → logprob: -16.85025405883789
    9. '   ' → logprob: -16.97525405883789
    10. '_true' → logprob: -17.47525405883789

Token 653: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.19036038219928741
    2. '   ' → logprob: -1.815360426902771
    3. ':
' → logprob: -4.9403605461120605
    4. '       ' → logprob: -6.0653605461120605
    5. '():' → logprob: -7.5653605461120605
    6. ' :' → logprob: -8.190360069274902
    7. '():
' → logprob: -9.690360069274902
    8. ',' → logprob: -9.940360069274902
    9. '<|end|>' → logprob: -10.690360069274902
    10. '    
' → logprob: -11.190360069274902

Token 654: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02793201059103012
    2. ' line' → logprob: -3.6529319286346436
    3. '       ' → logprob: -6.527932167053223
    4. 'line' → logprob: -9.027932167053223
    5. '	line' → logprob: -11.152932167053223
    6. ' try' → logprob: -11.277932167053223
    7. 'n' → logprob: -11.902932167053223
    8. 'try' → logprob: -12.777932167053223
    9. '   ' → logprob: -12.902932167053223
    10. ' n' → logprob: -13.027932167053223

Token 655: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' (adapté à ' line') → logprob: -0.5111780762672424
    2. ' line' → logprob: -1.0111780166625977
    3. '   ' → logprob: -3.7611780166625977
    4. 'n' → logprob: -4.511178016662598
    5. 'l' → logprob: -6.511178016662598
    6. ' n' → logprob: -7.886178016662598
    7. '	line' → logprob: -9.136178016662598
    8. ' l' → logprob: -9.636178016662598
    9. 'data' → logprob: -10.136178016662598
    10. 'ligne' → logprob: -11.136178016662598

Token 656: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16022889316082
    2. '=' → logprob: -1.9102288484573364
    3. '=line' → logprob: -12.285228729248047
    4. '=input' → logprob: -17.160228729248047
    5. '＝' → logprob: -17.410228729248047
    6. 'line' → logprob: -17.785228729248047
    7. ' ' → logprob: -18.285228729248047
    8. ' =
' → logprob: -18.410228729248047
    9. '=
' → logprob: -19.035228729248047
    10. 's' → logprob: -19.035228729248047

Token 657: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.06248597800731659
    2. ' input' → logprob: -3.312485933303833
    3. 'sys' → logprob: -3.812485933303833
    4. ' sys' → logprob: -6.187486171722412
    5. '(sys' → logprob: -18.43748664855957
    6. '=sys' → logprob: -18.56248664855957
    7. ' ' → logprob: -19.06248664855957
    8. '=input' → logprob: -19.18748664855957
    9. 'stdin' → logprob: -19.18748664855957
    10. '	input' → logprob: -19.18748664855957

Token 658: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.20338259637355804
    2. '().' → logprob: -1.7033826112747192
    3. '()
' → logprob: -6.32838249206543
    4. '.strip' → logprob: -8.70338249206543
    5. '()
' → logprob: -12.07838249206543
    6. 'strip' → logprob: -12.57838249206543
    7. '()

' → logprob: -12.70338249206543
    8. '(' → logprob: -13.70338249206543
    9. '.rstrip' → logprob: -13.82838249206543
    10. '=' → logprob: -14.82838249206543

Token 659: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.00020354038861114532
    2. 'rstrip' → logprob: -8.500203132629395
    3. ' strip' → logprob: -17.00020408630371
    4. 'split' → logprob: -19.25020408630371
    5. '.strip' → logprob: -20.00020408630371
    6. '(strip' → logprob: -20.25020408630371
    7. '_strip' → logprob: -20.37520408630371
    8. 'decode' → logprob: -20.75020408630371
    9. '-strip' → logprob: -21.75020408630371
    10. 'stripe' → logprob: -21.87520408630371

Token 660: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.47191786766052246
    2. '       ' → logprob: -1.3469178676605225
    3. '()
' → logprob: -2.3469178676605225
    4. '<|end|>' → logprob: -4.971918106079102
    5. '   ' → logprob: -5.096918106079102
    6. '=' → logprob: -6.846918106079102
    7. '<|end|>' → logprob: -6.846918106079102
    8. '        
' → logprob: -7.096918106079102
    9. ',' → logprob: -7.221918106079102
    10. ')' → logprob: -7.471918106079102

Token 661: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008645887486636639
    2. ' if' → logprob: -5.508646011352539
    3. 'if' → logprob: -5.883646011352539
    4. '   ' → logprob: -6.758646011352539
    5. '<|end|>' → logprob: -7.633646011352539
    6. '      ' → logprob: -11.008646011352539
    7. '        
' → logprob: -11.133646011352539
    8. ',' → logprob: -11.258646011352539
    9. '<|end|>' → logprob: -11.258646011352539
    10. '	if' → logprob: -11.383646011352539

Token 662: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -7.612634362885728e-05
    2. ' if' → logprob: -9.500076293945312
    3. '       ' → logprob: -13.625076293945312
    4. '   ' → logprob: -17.625076293945312
    5. '        
' → logprob: -18.000076293945312
    6. '
' → logprob: -18.000076293945312
    7. '           ' → logprob: -18.875076293945312
    8. 'If' → logprob: -19.250076293945312
    9. '	if' → logprob: -19.375076293945312
    10. ';if' → logprob: -21.125076293945312

Token 663: ' line' (ID: 2543)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.024463504552841187
    2. 'not' → logprob: -3.774463415145874
    3. ' line' → logprob: -7.024463653564453
    4. 'line' → logprob: -8.024463653564453
    5. '#line' → logprob: -18.024463653564453
    6. ' ' → logprob: -18.024463653564453
    7. '	not' → logprob: -18.774463653564453
    8. '!' → logprob: -19.024463653564453
    9. '	line' → logprob: -19.149463653564453
    10. '=line' → logprob: -19.399463653564453

Token 664: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.006755752023309469
    2. ' ==' → logprob: -5.006755828857422
    3. '=' → logprob: -10.631755828857422
    4. '()==' → logprob: -11.631755828857422
    5. '===' → logprob: -12.256755828857422
    6. ']==' → logprob: -13.881755828857422
    7. '==
' → logprob: -14.381755828857422
    8. '=='' → logprob: -14.881755828857422
    9. ')==' → logprob: -14.881755828857422
    10. '=="' → logprob: -14.881755828857422

Token 665: ' '':
' (ID: 125614)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''' → logprob: -0.6401812434196472
    2. '""' → logprob: -1.140181303024292
    3. '"":' → logprob: -2.390181303024292
    4. '"' → logprob: -2.890181303024292
    5. ''' → logprob: -5.140181064605713
    6. ' "":
' → logprob: -13.140181541442871
    7. ' '':
' → logprob: -13.765181541442871
    8. ' ""' → logprob: -14.515181541442871
    9. '":' → logprob: -15.015181541442871
    10. '"",' → logprob: -15.015181541442871

Token 666: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.043309055268764496
    2. '       ' → logprob: -3.168308973312378
    3. '   ' → logprob: -9.543309211730957
    4. '		' → logprob: -9.918309211730957
    5. '	   ' → logprob: -9.918309211730957
    6. ':' → logprob: -10.293309211730957
    7. '          ' → logprob: -11.043309211730957
    8. '	       ' → logprob: -11.043309211730957
    9. ',' → logprob: -11.293309211730957
    10. 'break' → logprob: -11.418309211730957

Token 667: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.013337520882487297
    2. ' break' → logprob: -4.7633376121521
    3. '           ' → logprob: -5.7633376121521
    4. '       ' → logprob: -6.6383376121521
    5. 'return' → logprob: -8.513337135314941
    6. '	break' → logprob: -9.763337135314941
    7. '               ' → logprob: -13.888337135314941
    8. '
' → logprob: -14.138337135314941
    9. '_break' → logprob: -14.263337135314941
    10. '   ' → logprob: -14.388337135314941

Token 668: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002626904286444187
    2. '        
' → logprob: -6.627626895904541
    3. '<|end|>' → logprob: -6.877626895904541
    4. '
' → logprob: -8.7526273727417
    5. 'n' → logprob: -10.5026273727417
    6. '  
' → logprob: -10.8776273727417
    7. ',' → logprob: -11.2526273727417
    8. '      ' → logprob: -11.6276273727417
    9. '   ' → logprob: -11.6276273727417
    10. '    
' → logprob: -11.8776273727417

Token 669: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001864499063231051
    2. '        
' → logprob: -6.626864433288574
    3. '<|end|>' → logprob: -8.251864433288574
    4. '   ' → logprob: -9.001864433288574
    5. 'n' → logprob: -9.751864433288574
    6. '
' → logprob: -10.501864433288574
    7. '  
' → logprob: -11.001864433288574
    8. '    
' → logprob: -11.126864433288574
    9. '      ' → logprob: -11.876864433288574
    10. ',' → logprob: -12.251864433288574

Token 670: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.0011566509492695332
    2. ' n' → logprob: -7.001156806945801
    3. '   ' → logprob: -8.6261568069458
    4. '       ' → logprob: -11.0011568069458
    5. 'parts' → logprob: -11.1261568069458
    6. '        
' → logprob: -11.3761568069458
    7. 'N' → logprob: -11.8761568069458
    8. ' parts' → logprob: -11.8761568069458
    9. '
' → logprob: -12.5011568069458
    10. '	n' → logprob: -13.3761568069458

Token 671: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.697387966094539e-05
    2. ',m' → logprob: -9.625086784362793
    3. ' ,' → logprob: -12.250086784362793
    4. '=' → logprob: -12.375086784362793
    5. ' =' → logprob: -13.000086784362793
    6. 'm' → logprob: -13.125086784362793
    7. ',k' → logprob: -13.250086784362793
    8. '‌,' → logprob: -14.125086784362793
    9. ',num' → logprob: -14.125086784362793
    10. '<|end|>' → logprob: -14.125086784362793

Token 672: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0004275699320714921
    2. ' m' → logprob: -8.00042724609375
    3. 'k' → logprob: -9.50042724609375
    4. 'p' → logprob: -11.62542724609375
    5. 'q' → logprob: -11.87542724609375
    6. 'd' → logprob: -14.75042724609375
    7. 'w' → logprob: -15.50042724609375
    8. 'l' → logprob: -15.87542724609375
    9. 't' → logprob: -16.25042724609375
    10. 'r' → logprob: -16.25042724609375

Token 673: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5760200619697571
    2. ' =' → logprob: -0.8260200619697571
    3. ',' → logprob: -9.451020240783691
    4. ')' → logprob: -14.451020240783691
    5. '<|end|>' → logprob: -14.701020240783691
    6. ' ' → logprob: -14.826020240783691
    7. '＝' → logprob: -15.826020240783691
    8. '    ' → logprob: -15.826020240783691
    9. '=int' → logprob: -16.326019287109375
    10. '  ' → logprob: -16.951019287109375

Token 674: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.16022422909736633
    2. 'map' → logprob: -1.910224199295044
    3. '	map' → logprob: -17.16022491455078
    4. 'line' → logprob: -18.78522491455078
    5. ' line' → logprob: -18.91022491455078
    6. '(map' → logprob: -19.03522491455078
    7. ' ' → logprob: -19.03522491455078
    8. 'list' → logprob: -20.16022491455078
    9. 'm' → logprob: -20.28522491455078
    10. '_map' → logprob: -20.53522491455078

Token 675: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0007653143256902695
    2. '(' → logprob: -7.250765323638916
    3. 'int' → logprob: -10.750764846801758
    4. '(str' → logprob: -11.000764846801758
    5. '(lambda' → logprob: -11.125764846801758
    6. '[int' → logprob: -13.750764846801758
    7. '<int' → logprob: -14.750764846801758
    8. '=int' → logprob: -15.000764846801758
    9. '(in' → logprob: -15.250764846801758
    10. '(eval' → logprob: -16.000764846801758

Token 676: ',' (ID: 11)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.0006236801855266094
    2. ',line' → logprob: -8.12562370300293
    3. 'line' → logprob: -9.00062370300293
    4. ',' → logprob: -9.37562370300293
    5. ')' → logprob: -10.12562370300293
    6. '(' → logprob: -10.50062370300293
    7. '=line' → logprob: -10.50062370300293
    8. '#line' → logprob: -11.75062370300293
    9. '[line' → logprob: -12.12562370300293
    10. '(str' → logprob: -12.37562370300293

Token 677: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.00020354038861114532
    2. ' line' → logprob: -8.500203132629395
    3. 'str' → logprob: -17.12520408630371
    4. 'lambda' → logprob: -19.00020408630371
    5. 'input' → logprob: -19.75020408630371
    6. '(line' → logprob: -20.00020408630371
    7. 'list' → logprob: -20.00020408630371
    8. '=line' → logprob: -20.25020408630371
    9. '	line' → logprob: -20.37520408630371
    10. ')' → logprob: -20.50020408630371

Token 678: '.split' (ID: 10347)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.5885774493217468
    2. '.split' → logprob: -0.8385774493217468
    3. '.' → logprob: -4.4635772705078125
    4. '.strip' → logprob: -7.2135772705078125
    5. ' .' → logprob: -8.213577270507812
    6. 'split' → logprob: -11.338577270507812
    7. ')' → logprob: -12.463577270507812
    8. '.Split' → logprob: -12.463577270507812
    9. '.readline' → logprob: -12.713577270507812
    10. '()' → logprob: -13.213577270507812

Token 679: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.017887573689222336
    2. '()' → logprob: -4.267887592315674
    3. ')' → logprob: -5.892887592315674
    4. '('' → logprob: -7.517887592315674
    5. '(' → logprob: -7.892887592315674
    6. '())
' → logprob: -10.392887115478516
    7. '(','' → logprob: -11.767887115478516
    8. '()
' → logprob: -14.392887115478516
    9. '(',' → logprob: -14.517887115478516
    10. ' )' → logprob: -14.767887115478516

Token 680: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0029471551533788443
    2. '   ' → logprob: -6.7529473304748535
    3. '<|end|>' → logprob: -7.1279473304748535
    4. '        
' → logprob: -7.5029473304748535
    5. 'edges' → logprob: -8.377946853637695
    6. ' edges' → logprob: -9.377946853637695
    7. '```' → logprob: -10.752946853637695
    8. ' if' → logprob: -11.002946853637695
    9. 'if' → logprob: -11.002946853637695
    10. '    
' → logprob: -11.252946853637695

Token 681: ' if' (ID: 538)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.0010646054288372397
    2. ' edges' → logprob: -6.876064777374268
    3. 'if' (adapté à ' if') → logprob: -10.87606430053711
    4. '       ' → logprob: -12.00106430053711
    5. '(edges' → logprob: -13.00106430053711
    6. '_edges' → logprob: -13.62606430053711
    7. '        
' → logprob: -13.75106430053711
    8. '```' → logprob: -13.87606430053711
    9. '.edges' → logprob: -14.50106430053711
    10. 'points' → logprob: -16.00106430053711

Token 682: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.5759416818618774
    2. 'n' → logprob: -0.8259416818618774
    3. '	n' → logprob: -13.825942039489746
    4. ' ' → logprob: -14.575942039489746
    5. '(n' → logprob: -15.075942039489746
    6. ' not' → logprob: -15.200942039489746
    7. 'not' → logprob: -16.20094108581543
    8. ' ' → logprob: -17.20094108581543
    9. '   ' → logprob: -17.82594108581543
    10. ' ' → logprob: -18.07594108581543

Token 683: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.16023315489292145
    2. '==' → logprob: -1.9102331399917603
    3. ' ' → logprob: -12.785233497619629
    4. '=' → logprob: -13.285233497619629
    5. ' <=' → logprob: -13.660233497619629
    6. '<=' → logprob: -14.035233497619629
    7. ' =' → logprob: -14.910233497619629
    8. '   ' → logprob: -15.035233497619629
    9. '==
' → logprob: -15.035233497619629
    10. ')==' → logprob: -15.160233497619629

Token 684: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. 'm' → logprob: -17.125001907348633
    4. '۰' → logprob: -19.375001907348633
    5. '  ' → logprob: -20.875001907348633
    6. '```' → logprob: -21.000001907348633
    7. '   ' → logprob: -21.125001907348633
    8. '０' → logprob: -21.250001907348633
    9. '
' → logprob: -21.625001907348633
    10. ' ' → logprob: -21.750001907348633

Token 685: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. 'm' → logprob: -16.375
    4. '۰' → logprob: -19.75
    5. '```' → logprob: -20.125
    6. '-' → logprob: -21.1875
    7. '０' → logprob: -21.1875
    8. 's' → logprob: -21.25
    9. 'n' → logprob: -21.375
    10. '  ' → logprob: -21.5625

Token 686: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.25193464756011963
    2. 'and' → logprob: -1.5019346475601196
    3. '	and' → logprob: -12.376935005187988
    4. ' ' → logprob: -14.126935005187988
    5. ' or' → logprob: -15.501935005187988
    6. '   ' → logprob: -15.876935005187988
    7. ':' → logprob: -16.126934051513672
    8. '<|end|>' → logprob: -17.376934051513672
    9. '  ' → logprob: -17.626934051513672
    10. ' ' → logprob: -17.751934051513672

Token 687: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.07889056205749512
    2. ' m' → logprob: -2.578890562057495
    3. '	m' → logprob: -14.453890800476074
    4. '   ' → logprob: -15.078890800476074
    5. '  ' → logprob: -17.578889846801758
    6. ' ' → logprob: -17.828889846801758
    7. '    ' → logprob: -18.703889846801758
    8. ' ' → logprob: -18.828889846801758
    9. ')m' → logprob: -22.703889846801758
    10. '   ' → logprob: -22.828889846801758

Token 688: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5759549736976624
    2. ' ==' → logprob: -0.8259549736976624
    3. '=' → logprob: -11.825955390930176
    4. '0' → logprob: -12.825955390930176
    5. '<|end|>' → logprob: -12.950955390930176
    6. ' ' → logprob: -14.200955390930176
    7. ')==' → logprob: -14.450955390930176
    8. ' =' → logprob: -14.825955390930176
    9. '===' → logprob: -15.075955390930176
    10. '[' → logprob: -15.075955390930176

Token 689: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.157039049663581e-05
    2. ' ' → logprob: -9.875051498413086
    3. '۰' → logprob: -19.625051498413086
    4. '<|end|>' → logprob: -19.875051498413086
    5. '  ' → logprob: -20.000051498413086
    6. '   ' → logprob: -21.312551498413086
    7. '০' → logprob: -21.687551498413086
    8. '<|end|>' → logprob: -22.000051498413086
    9. ' ' → logprob: -22.125051498413086
    10. '=' → logprob: -22.562551498413086

Token 690: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '۰' → logprob: -19.000001907348633
    4. '<|end|>' → logprob: -20.500001907348633
    5. '০' → logprob: -20.750001907348633
    6. '<|end|>' → logprob: -21.500001907348633
    7. '०' → logprob: -21.750001907348633
    8. '  ' → logprob: -21.875001907348633
    9. '０' → logprob: -22.250001907348633
    10. '```' → logprob: -22.500001907348633

Token 691: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4858700931072235
    2. ':
' → logprob: -0.9858701229095459
    3. '           ' → logprob: -4.485869884490967
    4. '       ' → logprob: -7.735869884490967
    5. '   ' → logprob: -11.985870361328125
    6. ':
' → logprob: -12.610870361328125
    7. ':return' → logprob: -12.610870361328125
    8. '          ' → logprob: -13.610870361328125
    9. ' :
' → logprob: -13.735870361328125
    10. '):
' → logprob: -14.110870361328125

Token 692: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -3.190178904333152e-05
    2. '		' → logprob: -10.750031471252441
    3. '	       ' → logprob: -12.750031471252441
    4. '       ' → logprob: -12.875031471252441
    5. ' break' → logprob: -13.500031471252441
    6. 'break' → logprob: -13.625031471252441
    7. '          ' → logprob: -14.250031471252441
    8. '<|end|>' → logprob: -14.625031471252441
    9. '   ' → logprob: -15.000031471252441
    10. '               ' → logprob: -15.750031471252441

Token 693: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.43004757165908813
    2. 'break' (adapté à ' break') → logprob: -1.1800475120544434
    3. ' break' → logprob: -3.1800475120544434
    4. 'return' → logprob: -7.805047512054443
    5. '               ' → logprob: -8.930047988891602
    6. '	break' → logprob: -9.430047988891602
    7. '		' → logprob: -10.305047988891602
    8. ' return' → logprob: -11.805047988891602
    9. '	       ' → logprob: -11.930047988891602
    10. '       ' → logprob: -12.680047988891602

Token 694: '
        
' (ID: 20417)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004564226604998112
    2. 'edges' → logprob: -6.25456428527832
    3. '        
' → logprob: -6.62956428527832
    4. '<|end|>' → logprob: -7.50456428527832
    5. ' edges' → logprob: -7.87956428527832
    6. '
' → logprob: -8.50456428527832
    7. '   ' → logprob: -9.87956428527832
    8. '```' → logprob: -10.00456428527832
    9. '(edges' → logprob: -10.87956428527832
    10. '    
' → logprob: -10.87956428527832

Token 695: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09296493232250214
    2. 'edges' → logprob: -2.5929648876190186
    3. ' edges' → logprob: -4.342965126037598
    4. '   ' → logprob: -6.967965126037598
    5. '        
' → logprob: -10.967965126037598
    6. '```' → logprob: -11.592965126037598
    7. 'graph' → logprob: -12.717965126037598
    8. '_edges' → logprob: -13.342965126037598
    9. '(edges' → logprob: -13.592965126037598
    10. '.edges' → logprob: -13.842965126037598

Token 696: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' (adapté à ' edges') → logprob: -0.00016074994346126914
    2. ' edges' → logprob: -8.750161170959473
    3. '       ' → logprob: -13.500161170959473
    4. 'graph' → logprob: -14.875161170959473
    5. 'edge' → logprob: -16.125160217285156
    6. '(edges' → logprob: -16.125160217285156
    7. '.edges' → logprob: -16.500160217285156
    8. '   ' → logprob: -16.625160217285156
    9. '_edges' → logprob: -17.000160217285156
    10. '```' → logprob: -17.375160217285156

Token 697: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132726848125458
    2. ' =' → logprob: -1.3132727146148682
    3. '=[]' → logprob: -11.563272476196289
    4. '   ' → logprob: -13.938272476196289
    5. '    ' → logprob: -15.688272476196289
    6. '=[]
' → logprob: -15.813272476196289
    7. ',' → logprob: -16.56327247619629
    8. '＝' → logprob: -17.18827247619629
    9. '        ' → logprob: -17.56327247619629
    10. '       ' → logprob: -17.68827247619629

Token 698: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.00042268994729965925
    2. '[' → logprob: -8.250422477722168
    3. '[]
' → logprob: -8.750422477722168
    4. ' []' → logprob: -13.500422477722168
    5. '[int' → logprob: -14.375422477722168
    6. '[]}' → logprob: -15.750422477722168
    7. '[]>' → logprob: -16.000423431396484
    8. '[]

' → logprob: -16.125423431396484
    9. '[str' → logprob: -16.500423431396484
    10. '[]=' → logprob: -16.750423431396484

Token 699: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0026062142569571733
    2. ' for' → logprob: -6.127606391906738
    3. '<|end|>' → logprob: -8.127606391906738
    4. 'for' → logprob: -9.502606391906738
    5. '   ' → logprob: -11.127606391906738
    6. '        
' → logprob: -11.502606391906738
    7. '	' → logprob: -11.877606391906738
    8. '	for' → logprob: -12.252606391906738
    9. '	   ' → logprob: -12.502606391906738
    10. '```' → logprob: -12.752606391906738

Token 700: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.017160620540380478
    2. '       ' → logprob: -4.767160415649414
    3. ' for' → logprob: -4.767160415649414
    4. '   ' → logprob: -12.392160415649414
    5. '	for' → logprob: -14.017160415649414
    6. '        
' → logprob: -16.392160415649414
    7. ' ' → logprob: -16.642160415649414
    8. '
' → logprob: -17.642160415649414
    9. '	   ' → logprob: -19.017160415649414
    10. '           ' → logprob: -19.642160415649414

Token 701: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.2233183042553719e-05
    2. '_i' → logprob: -12.125012397766113
    3. '_in' → logprob: -13.125012397766113
    4. ' _' → logprob: -14.000012397766113
    5. '_range' → logprob: -14.125012397766113
    6. '_edges' → logprob: -15.375012397766113
    7. '_edge' → logprob: -16.375011444091797
    8. '_tokens' → logprob: -16.625011444091797
    9. '_ans' → logprob: -16.750011444091797
    10. '_iter' → logprob: -16.875011444091797

Token 702: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.38695061206817627
    2. 'in' → logprob: -1.1369506120681763
    3. '_' → logprob: -10.511950492858887
    4. ' ' → logprob: -11.011950492858887
    5. 'range' → logprob: -11.011950492858887
    6. 'i' → logprob: -11.386950492858887
    7. '  ' → logprob: -12.261950492858887
    8. ' _' → logprob: -13.886950492858887
    9. '	in' → logprob: -14.136950492858887
    10. ' i' → logprob: -14.636950492858887

Token 703: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -7.941850526549388e-06
    2. ' range' → logprob: -11.750007629394531
    3. '	range' → logprob: -19.50000762939453
    4. 'rang' → logprob: -20.37500762939453
    5. 'ange' → logprob: -20.62500762939453
    6. '(range' → logprob: -21.00000762939453
    7. '
' → logprob: -21.12500762939453
    8. 'r' → logprob: -21.25000762939453
    9. '_' → logprob: -21.50000762939453
    10. '   ' → logprob: -21.75000762939453

Token 704: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.005317481700330973
    2. 'm' → logprob: -5.255317687988281
    3. ' m' → logprob: -9.630317687988281
    4. '	m' → logprob: -11.505317687988281
    5. ' (' → logprob: -12.630317687988281
    6. '(' → logprob: -12.755317687988281
    7. '   ' → logprob: -14.630317687988281
    8. ',m' → logprob: -15.005317687988281
    9. ',' → logprob: -15.130317687988281
    10. ')m' → logprob: -15.630317687988281

Token 705: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.09351898729801178
    2. '):
' → logprob: -2.4685189723968506
    3. ':' → logprob: -5.96851921081543
    4. '       ' → logprob: -7.21851921081543
    5. ')' → logprob: -7.96851921081543
    6. '   ' → logprob: -8.34351921081543
    7. ',' → logprob: -8.59351921081543
    8. '<|end|>' → logprob: -8.84351921081543
    9. '):
' → logprob: -9.21851921081543
    10. '():' → logprob: -10.21851921081543

Token 706: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008699782192707062
    2. '	       ' → logprob: -5.258699893951416
    3. '	   ' → logprob: -7.258699893951416
    4. '   ' → logprob: -7.258699893951416
    5. '    	   ' → logprob: -7.633699893951416
    6. '		   ' → logprob: -8.008699417114258
    7. '       ' → logprob: -8.883699417114258
    8. '<|end|>' → logprob: -9.008699417114258
    9. '    	' → logprob: -9.133699417114258
    10. 'a' → logprob: -9.133699417114258

Token 707: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.007476125378161669
    2. 'u' → logprob: -5.007476329803467
    3. ' a' → logprob: -7.257476329803467
    4. ' u' → logprob: -9.882475852966309
    5. '   ' → logprob: -13.007475852966309
    6. '	a' → logprob: -13.382475852966309
    7. 'x' → logprob: -14.257475852966309
    8. '	u' → logprob: -16.507476806640625
    9. '    
' → logprob: -18.382476806640625
    10. '       ' → logprob: -18.507476806640625

Token 708: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010099569335579872
    2. ',b' → logprob: -4.760099411010742
    3. ' ,' → logprob: -6.635099411010742
    4. 'b' → logprob: -8.760099411010742
    5. ' b' → logprob: -11.885099411010742
    6. '<|end|>' → logprob: -13.635099411010742
    7. '_,' → logprob: -14.010099411010742
    8. ',B' → logprob: -14.135099411010742
    9. '‌,' → logprob: -14.385099411010742
    10. ' ' → logprob: -14.385099411010742

Token 709: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.06196768581867218
    2. ' b' → logprob: -2.811967611312866
    3. '	b' → logprob: -18.811967849731445
    4. ',b' → logprob: -19.061967849731445
    5. ' ' → logprob: -20.311967849731445
    6. ' ' → logprob: -21.061967849731445
    7. '>b' → logprob: -21.186967849731445
    8. ' 
' → logprob: -21.686967849731445
    9. ',' → logprob: -21.811967849731445
    10. '    ' → logprob: -22.061967849731445

Token 710: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00031425125780515373
    2. '=' → logprob: -8.375314712524414
    3. ' ,' → logprob: -9.750314712524414
    4. ' =' → logprob: -11.375314712524414
    5. ',c' → logprob: -11.750314712524414
    6. '<|end|>' → logprob: -13.250314712524414
    7. ',w' → logprob: -14.375314712524414
    8. 'c' → logprob: -14.375314712524414
    9. ',v' → logprob: -14.500314712524414
    10. ',b' → logprob: -15.250314712524414

Token 711: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.05710485205054283
    2. 'c' → logprob: -2.9321048259735107
    3. ' w' → logprob: -6.18210506439209
    4. 'p' → logprob: -9.05710506439209
    5. ' c' → logprob: -10.43210506439209
    6. 'weight' → logprob: -12.30710506439209
    7. 'wt' → logprob: -14.05710506439209
    8. 'd' → logprob: -14.43210506439209
    9. 'k' → logprob: -14.68210506439209
    10. 'cost' → logprob: -15.05710506439209

Token 712: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10020667314529419
    2. ' =' → logprob: -2.3502066135406494
    3. ',' → logprob: -18.10020637512207
    4. '    ' → logprob: -18.72520637512207
    5. ' ' → logprob: -18.72520637512207
    6. '   ' → logprob: -18.72520637512207
    7. '＝' → logprob: -18.72520637512207
    8. ')' → logprob: -19.35020637512207
    9. '=sys' → logprob: -19.35020637512207
    10. '=line' → logprob: -19.47520637512207

Token 713: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.0067154900170862675
    2. ' map' → logprob: -5.006715297698975
    3. '	map' → logprob: -15.881715774536133
    4. '    ' → logprob: -19.256715774536133
    5. '   ' → logprob: -20.006715774536133
    6. 'm' → logprob: -20.006715774536133
    7. '(map' → logprob: -20.256715774536133
    8. ' ' → logprob: -21.131715774536133
    9. 'ma' → logprob: -21.506715774536133
    10. '_map' → logprob: -21.756715774536133

Token 714: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00020699729793705046
    2. 'int' → logprob: -8.50020694732666
    3. '[int' → logprob: -13.12520694732666
    4. ',int' → logprob: -14.37520694732666
    5. '=int' → logprob: -14.50020694732666
    6. '<int' → logprob: -15.75020694732666
    7. ' int' → logprob: -16.875207901000977
    8. '(str' → logprob: -17.250207901000977
    9. '```' → logprob: -17.250207901000977
    10. '(' → logprob: -17.375207901000977

Token 715: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.4709662199020386
    2. ',input' → logprob: -1.0959662199020386
    3. ',' → logprob: -3.845966339111328
    4. 'input' → logprob: -4.345966339111328
    5. '(sys' → logprob: -5.720966339111328
    6. ')' → logprob: -6.095966339111328
    7. 'sys' → logprob: -7.470966339111328
    8. '(' → logprob: -7.720966339111328
    9. '=input' → logprob: -8.095966339111328
    10. ' input' → logprob: -9.220966339111328

Token 716: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -3.833878508885391e-05
    2. ' input' → logprob: -10.250038146972656
    3. 'sys' → logprob: -12.750038146972656
    4. ' sys' → logprob: -21.125038146972656
    5. '	input' → logprob: -21.750038146972656
    6. '   ' → logprob: -24.000038146972656
    7. '(input' → logprob: -24.125038146972656
    8. '_input' → logprob: -24.250038146972656
    9. '=input' → logprob: -24.750038146972656
    10. 'Input' → logprob: -25.125038146972656

Token 717: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.0206720617134124e-05
    2. '()' → logprob: -11.50001049041748
    3. '()
' → logprob: -18.125009536743164
    4. '(' → logprob: -18.375009536743164
    5. ' ().' → logprob: -19.125009536743164
    6. '().__' → logprob: -19.500009536743164
    7. '())' → logprob: -20.375009536743164
    8. '.readline' → logprob: -20.875009536743164
    9. ')' → logprob: -21.375009536743164
    10. '().
' → logprob: -21.750009536743164

Token 718: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.01815134845674038
    2. 'strip' → logprob: -4.01815128326416
    3. 'rstrip' → logprob: -13.89315128326416
    4. '().' → logprob: -15.01815128326416
    5. ' split' → logprob: -16.518152236938477
    6. '(split' → logprob: -17.143152236938477
    7. ' strip' → logprob: -18.643152236938477
    8. '.split' → logprob: -18.768152236938477
    9. 'sys' → logprob: -18.893152236938477
    10. 'read' → logprob: -19.143152236938477

Token 719: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7038883566856384
    2. '())' → logprob: -0.7038883566856384
    3. '())
' → logprob: -4.953888416290283
    4. '()' → logprob: -6.203888416290283
    5. ')
' → logprob: -6.453888416290283
    6. '(' → logprob: -11.078887939453125
    7. '()
' → logprob: -12.078887939453125
    8. '())
' → logprob: -13.078887939453125
    9. ' )' → logprob: -13.453887939453125
    10. '   ' → logprob: -13.453887939453125

Token 720: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005084725562483072
    2. '<|end|>' → logprob: -8.625508308410645
    3. ' edges' → logprob: -9.125508308410645
    4. 'edges' → logprob: -9.250508308410645
    5. '       ' → logprob: -10.000508308410645
    6. '            
' → logprob: -10.500508308410645
    7. '	       ' → logprob: -11.625508308410645
    8. '               ' → logprob: -11.875508308410645
    9. '(edges' → logprob: -11.875508308410645
    10. '   ' → logprob: -12.125508308410645

Token 721: ' #' (ID: 1069)
  Prédit: ' edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.7050427794456482
    2. 'edges' → logprob: -0.7050427794456482
    3. '           ' → logprob: -4.455042839050293
    4. '       ' → logprob: -8.955042839050293
    5. '(edges' → logprob: -10.580042839050293
    6. '.edges' → logprob: -10.705042839050293
    7. '   ' → logprob: -11.205042839050293
    8. '_edges' → logprob: -12.330042839050293
    9. 'a' → logprob: -12.955042839050293
    10. '	       ' → logprob: -13.205042839050293

Token 722: ' Stock' (ID: 16382)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.012627247720956802
    2. 'a' → logprob: -4.887627124786377
    3. ' edges' → logprob: -5.387627124786377
    4. '#' → logprob: -7.887627124786377
    5. '           ' → logprob: -10.387627601623535
    6. ' a' → logprob: -11.137627601623535
    7. '   ' → logprob: -12.012627601623535
    8. '       ' → logprob: -12.887627601623535
    9. '.edges' → logprob: -13.262627601623535
    10. ' #' → logprob: -13.887627601623535

Token 723: 'age' (ID: 477)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.0032018350902944803
    2. '.append' → logprob: -5.878201961517334
    3. '       ' → logprob: -9.003201484680176
    4. '           ' → logprob: -9.128201484680176
    5. 'age' → logprob: -9.253201484680176
    6. 'é' → logprob: -11.003201484680176
    7. '=' → logprob: -11.628201484680176
    8. '   ' → logprob: -11.753201484680176
    9. 'edges' → logprob: -11.878201484680176
    10. 'erez' → logprob: -12.003201484680176

Token 724: ' en' (ID: 469)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7676445841789246
    2. 'edges' → logprob: -0.8926445841789246
    3. '(edges' → logprob: -2.1426446437835693
    4. ' edges' → logprob: -4.76764440536499
    5. '       ' → logprob: -8.892644882202148
    6. '_edges' → logprob: -9.517644882202148
    7. '.edges' → logprob: -9.642644882202148
    8. '               ' → logprob: -10.017644882202148
    9. '   ' → logprob: -10.517644882202148
    10. '	       ' → logprob: -10.642644882202148

Token 725: ' indice' (ID: 90848)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.054777104407548904
    2. 'zero' → logprob: -3.554777145385742
    3. 'z' → logprob: -4.804777145385742
    4. 'a' → logprob: -5.429777145385742
    5. '(a' → logprob: -5.554777145385742
    6. '(' → logprob: -5.679777145385742
    7. 'format' → logprob: -6.554777145385742
    8. '#' → logprob: -6.804777145385742
    9. 'edges' → logprob: -7.054777145385742
    10. ' zéro' → logprob: -7.429777145385742

Token 726: ' ' (ID: 220)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.07655917853116989
    2. ' a' → logprob: -3.451559066772461
    3. '0' → logprob: -3.826559066772461
    4. '           ' → logprob: -5.076559066772461
    5. '=' → logprob: -5.576559066772461
    6. '-' → logprob: -5.576559066772461
    7. ' =' → logprob: -6.451559066772461
    8. ',' → logprob: -6.701559066772461
    9. ' ' → logprob: -7.201559066772461
    10. '(a' → logprob: -7.451559066772461

Token 727: '0' (ID: 15)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.023357287049293518
    2. '0' → logprob: -3.898357391357422
    3. ' a' → logprob: -6.398357391357422
    4. '=' → logprob: -8.023357391357422
    5. 'zero' → logprob: -8.773357391357422
    6. '(a' → logprob: -9.148357391357422
    7. ' zero' → logprob: -9.523357391357422
    8. 'edges' → logprob: -9.523357391357422
    9. '   ' → logprob: -9.773357391357422
    10. ',' → logprob: -9.898357391357422

Token 728: '-based' (ID: 8235)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6666065454483032
    2. ',' → logprob: -0.9166065454483032
    3. ' a' → logprob: -3.9166064262390137
    4. ' ,' → logprob: -4.166606426239014
    5. '           ' → logprob: -4.166606426239014
    6. '-based' → logprob: -4.791606426239014
    7. '=' → logprob: -5.291606426239014
    8. '0' → logprob: -5.291606426239014
    9. ',a' → logprob: -5.791606426239014
    10. '-' → logprob: -5.791606426239014

Token 729: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.012187260203063488
    2. ',' → logprob: -5.762187480926514
    3. 'edges' → logprob: -5.762187480926514
    4. '(edges' → logprob: -6.012187480926514
    5. ' edges' → logprob: -6.137187480926514
    6. 'a' → logprob: -7.262187480926514
    7. '       ' → logprob: -9.262187004089355
    8. ',a' → logprob: -9.387187004089355
    9. '<|end|>' → logprob: -9.762187004089355
    10. '          ' → logprob: -10.137187004089355

Token 730: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0027676676400005817
    2. ' edges' → logprob: -6.752767562866211
    3. 'edges' → logprob: -7.002767562866211
    4. '(edges' → logprob: -7.877767562866211
    5. ',' → logprob: -9.252767562866211
    6. '       ' → logprob: -9.752767562866211
    7. '<|end|>' → logprob: -10.127767562866211
    8. 'a' → logprob: -10.377767562866211
    9. '   ' → logprob: -10.877767562866211
    10. '            
' → logprob: -11.377767562866211

Token 731: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' (adapté à ' edges') → logprob: -0.13560448586940765
    2. ' edges' → logprob: -2.1356043815612793
    3. 'a' → logprob: -5.385604381561279
    4. '           ' → logprob: -5.635604381561279
    5. ' a' → logprob: -7.760604381561279
    6. '   ' → logprob: -10.010604858398438
    7. '       ' → logprob: -12.510604858398438
    8. '(edges' → logprob: -12.885604858398438
    9. 'edge' → logprob: -13.135604858398438
    10. '_edges' → logprob: -13.260604858398438

Token 732: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -5.3358446166384965e-05
    2. '.' → logprob: -9.875053405761719
    3. '.app' → logprob: -14.000053405761719
    4. 'append' → logprob: -14.250053405761719
    5. '.ap' → logprob: -15.375053405761719
    6. ' .' → logprob: -17.12505340576172
    7. '.Append' → logprob: -17.50005340576172
    8. '.extend' → logprob: -18.25005340576172
    9. '.a' → logprob: -18.37505340576172
    10. ').' → logprob: -18.75005340576172

Token 733: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.12711571156978607
    2. '(a' → logprob: -2.1271157264709473
    3. '(' → logprob: -8.627115249633789
    4. ' (' → logprob: -12.002115249633789
    5. '   ' → logprob: -13.502115249633789
    6. ' ((' → logprob: -14.877115249633789
    7. '(
' → logprob: -15.377115249633789
    8. '([' → logprob: -16.25211524963379
    9. '[(' → logprob: -16.87711524963379
    10. '  ' → logprob: -17.00211524963379

Token 734: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.9361264946837764e-07
    2. ' a' → logprob: -15.625
    3. '	a' → logprob: -20.0
    4. ')a' → logprob: -20.125
    5. '(a' → logprob: -20.5
    6. '#a' → logprob: -20.625
    7. '   ' → logprob: -21.625
    8. 'а' → logprob: -22.75
    9. '_a' → logprob: -22.75
    10. '[a' → logprob: -23.0

Token 735: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6931568384170532
    2. ' -' → logprob: -0.6931568384170532
    3. ' ' → logprob: -11.943157196044922
    4. ' ' → logprob: -13.693157196044922
    5. ',' → logprob: -14.443157196044922
    6. '   ' → logprob: -14.818157196044922
    7. '	' → logprob: -15.193157196044922
    8. '
' → logprob: -15.193157196044922
    9. '-
' → logprob: -16.318157196044922
    10. '[' → logprob: -16.568157196044922

Token 736: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '   ' → logprob: -19.500001907348633
    4. '```' → logprob: -21.125001907348633
    5. '<|end|>' → logprob: -22.125001907348633
    6. ',' → logprob: -22.750001907348633
    7. '           ' → logprob: -22.750001907348633
    8. '۱' → logprob: -23.125001907348633
    9. '１' → logprob: -23.375001907348633
    10. '	' → logprob: -23.625001907348633

Token 737: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '   ' → logprob: -20.625001907348633
    4. ',' → logprob: -20.625001907348633
    5. '
' → logprob: -20.750001907348633
    6. '```' → logprob: -20.750001907348633
    7. '=' → logprob: -21.500001907348633
    8. '১' → logprob: -21.875001907348633
    9. '<|end|>' → logprob: -21.875001907348633
    10. '１' → logprob: -21.875001907348633

Token 738: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00030161935137584805
    2. ' ,' → logprob: -8.500301361083984
    3. ',b' → logprob: -9.250301361083984
    4. ',
' → logprob: -13.125301361083984
    5. 'b' → logprob: -17.125301361083984
    6. '‌,' → logprob: -18.125301361083984
    7. '<|end|>' → logprob: -19.000301361083984
    8. '),' → logprob: -19.125301361083984
    9. ' ,
' → logprob: -19.125301361083984
    10. ')' → logprob: -19.125301361083984

Token 739: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0019286326132714748
    2. ' b' → logprob: -6.251928806304932
    3. '   ' → logprob: -18.251928329467773
    4. '    ' → logprob: -19.126928329467773
    5. '	b' → logprob: -20.251928329467773
    6. ')b' → logprob: -21.251928329467773
    7. '  ' → logprob: -22.251928329467773
    8. '       ' → logprob: -23.126928329467773
    9. ' ' → logprob: -23.251928329467773
    10. '        ' → logprob: -23.251928329467773

Token 740: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.20142501592636108
    2. '-' → logprob: -1.7014250755310059
    3. ' ' → logprob: -11.951424598693848
    4. '<|end|>' → logprob: -12.951424598693848
    5. '   ' → logprob: -13.826424598693848
    6. '1' → logprob: -14.701424598693848
    7. '[' → logprob: -15.326424598693848
    8. ')' → logprob: -15.701424598693848
    9. '-
' → logprob: -15.701424598693848
    10. ',' → logprob: -15.826424598693848

Token 741: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.5597102396423e-05
    2. ' ' → logprob: -10.250035285949707
    3. '   ' → logprob: -16.750036239624023
    4. ')' → logprob: -16.875036239624023
    5. '2' → logprob: -17.125036239624023
    6. '```' → logprob: -17.250036239624023
    7. '<|end|>' → logprob: -17.375036239624023
    8. '-' → logprob: -17.500036239624023
    9. '۱' → logprob: -17.562536239624023
    10. '  ' → logprob: -18.312536239624023

Token 742: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1517960956552997e-05
    2. ' ' → logprob: -11.375011444091797
    3. '   ' → logprob: -18.000011444091797
    4. '-' → logprob: -18.250011444091797
    5. '```' → logprob: -18.500011444091797
    6. '2' → logprob: -19.000011444091797
    7. '0' → logprob: -19.000011444091797
    8. ')' → logprob: -19.687511444091797
    9. '۱' → logprob: -19.812511444091797
    10. '  ' → logprob: -19.875011444091797

Token 743: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.157039049663581e-05
    2. ',w' → logprob: -10.375051498413086
    3. ' ,' → logprob: -10.875051498413086
    4. ',
' → logprob: -14.000051498413086
    5. 'w' → logprob: -14.500051498413086
    6. '),' → logprob: -17.875051498413086
    7. '   ' → logprob: -18.625051498413086
    8. '```' → logprob: -18.875051498413086
    9. ')' → logprob: -19.250051498413086
    10. '       ' → logprob: -19.500051498413086

Token 744: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.0007101670489646494
    2. ' w' → logprob: -7.2507100105285645
    3. '	w' → logprob: -16.625709533691406
    4. '           ' → logprob: -17.750709533691406
    5. '   ' → logprob: -17.750709533691406
    6. '    ' → logprob: -17.875709533691406
    7. ' ' → logprob: -19.375709533691406
    8. '       ' → logprob: -19.375709533691406
    9. '            ' → logprob: -19.500709533691406
    10. '_w' → logprob: -19.875709533691406

Token 745: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -6.623244553338736e-05
    2. ')' → logprob: -9.875065803527832
    3. '))
' → logprob: -11.250065803527832
    4. ' ))' → logprob: -13.375065803527832
    5. '));' → logprob: -16.37506675720215
    6. ')))' → logprob: -17.00006675720215
    7. '),' → logprob: -17.25006675720215
    8. '   ' → logprob: -17.75006675720215
    9. '))

' → logprob: -18.00006675720215
    10. '       ' → logprob: -18.50006675720215

Token 746: '        
' (ID: 3564)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.42286190390586853
    2. '<|end|>' → logprob: -1.797861933708191
    3. '   ' → logprob: -2.1728618144989014
    4. '        
' → logprob: -3.5478618144989014
    5. '    
' → logprob: -3.9228618144989014
    6. '
' → logprob: -4.7978620529174805
    7. '```' → logprob: -6.0478620529174805
    8. 'result' → logprob: -6.6728620529174805
    9. 'edges' → logprob: -6.9228620529174805
    10. '  
' → logprob: -7.0478620529174805

Token 747: '       ' (ID: 309)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.6266023516654968
    2. '       ' → logprob: -1.3766024112701416
    3. '   ' → logprob: -1.8766024112701416
    4. 'print' → logprob: -3.0016024112701416
    5. ' result' → logprob: -4.8766021728515625
    6. 'res' → logprob: -6.6266021728515625
    7. '```' → logprob: -7.7516021728515625
    8. ' print' → logprob: -7.8766021728515625
    9. '
' → logprob: -8.876602172851562
    10. '    
' → logprob: -9.251602172851562

Token 748: ' if' (ID: 538)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.08546186238527298
    2. 'res' → logprob: -2.5854618549346924
    3. 'print' → logprob: -5.5854620933532715
    4. 'ans' → logprob: -6.5854620933532715
    5. 'answer' → logprob: -6.5854620933532715
    6. 'sl' → logprob: -10.460461616516113
    7. 'min' → logprob: -11.960461616516113
    8. ' result' → logprob: -13.960461616516113
    9. '   ' → logprob: -14.460461616516113
    10. 'rés' → logprob: -14.460461616516113

Token 749: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7114959955215454
    2. ' n' → logprob: -0.7114959955215454
    3. 'm' → logprob: -5.586495876312256
    4. ' find' → logprob: -5.586495876312256
    5. 'find' → logprob: -6.211495876312256
    6. 'len' → logprob: -6.461495876312256
    7. ' m' → logprob: -6.461495876312256
    8. ' (' → logprob: -6.586495876312256
    9. ' len' → logprob: -6.836495876312256
    10. '(n' → logprob: -7.461495876312256

Token 750: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0570925734937191
    2. ' ==' → logprob: -2.9320926666259766
    3. '<=' → logprob: -6.182092666625977
    4. '<' → logprob: -9.557092666625977
    5. ' <=' → logprob: -9.932092666625977
    6. '=' → logprob: -11.807092666625977
    7. '-' → logprob: -12.682092666625977
    8. '>' → logprob: -12.682092666625977
    9. '===' → logprob: -12.682092666625977
    10. ' <' → logprob: -13.432092666625977

Token 751: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.650518920039758e-06
    2. ' ' → logprob: -13.250003814697266
    3. '0' → logprob: -13.375003814697266
    4. '=' → logprob: -16.125003814697266
    5. '   ' → logprob: -16.500003814697266
    6. '```' → logprob: -17.750003814697266
    7. '2' → logprob: -17.875003814697266
    8. '
' → logprob: -18.625003814697266
    9. '  ' → logprob: -19.875003814697266
    10. '１' → logprob: -20.625003814697266

Token 752: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1279553291387856e-05
    2. '0' → logprob: -11.625011444091797
    3. ' ' → logprob: -14.125011444091797
    4. '   ' → logprob: -14.750011444091797
    5. '
' → logprob: -15.000011444091797
    6. '```' → logprob: -15.250011444091797
    7. '=' → logprob: -15.375011444091797
    8. '2' → logprob: -15.500011444091797
    9. '    
' → logprob: -17.875011444091797
    10. '

' → logprob: -17.937511444091797

Token 753: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0184012483805418
    2. ':
' → logprob: -4.018401145935059
    3. ':return' → logprob: -8.393401145935059
    4. ' and' → logprob: -12.018401145935059
    5. ':
' → logprob: -12.393401145935059
    6. '       ' → logprob: -12.768401145935059
    7. 'and' → logprob: -12.768401145935059
    8. '           ' → logprob: -13.268401145935059
    9. '==' → logprob: -13.518401145935059
    10. '   ' → logprob: -14.018401145935059

Token 754: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5094600915908813
    2. '       ' → logprob: -1.0094600915908813
    3. 'print' → logprob: -3.634459972381592
    4. ':' → logprob: -5.634459972381592
    5. ' print' → logprob: -6.009459972381592
    6. ':
' → logprob: -6.259459972381592
    7. '   ' → logprob: -9.25946044921875
    8. '        
' → logprob: -9.50946044921875
    9. ',' → logprob: -9.88446044921875
    10. '	       ' → logprob: -9.88446044921875

Token 755: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.000636308453977108
    2. '       ' → logprob: -8.000636100769043
    3. ' print' → logprob: -8.500636100769043
    4. '           ' → logprob: -9.250636100769043
    5. '   ' → logprob: -14.125636100769043
    6. '	print' → logprob: -15.000636100769043
    7. '```' → logprob: -15.250636100769043
    8. '               ' → logprob: -16.87563705444336
    9. '
' → logprob: -17.12563705444336
    10. '        
' → logprob: -18.00063705444336

Token 756: ' Un' (ID: 1367)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.45848218582978e-06
    2. ' print' → logprob: -13.25000286102295
    3. '       ' → logprob: -14.75000286102295
    4. '           ' → logprob: -15.50000286102295
    5. '```' → logprob: -19.000001907348633
    6. '	print' → logprob: -19.625001907348633
    7. '   ' → logprob: -19.875001907348633
    8. '
' → logprob: -22.750001907348633
    9. 'Print' → logprob: -23.250001907348633
    10. '#' → logprob: -23.500001907348633

Token 757: ' seul' (ID: 33041)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.040282659232616425
    2. 'ique' → logprob: -3.415282726287842
    3. ' print' → logprob: -5.040282726287842
    4. 'iquement' → logprob: -9.665282249450684
    5. '       ' → logprob: -9.915282249450684
    6. '#' → logprob: -12.040282249450684
    7. 'e' → logprob: -12.165282249450684
    8. '
' → logprob: -12.415282249450684
    9. 'ité' → logprob: -12.790282249450684
    10. '   ' → logprob: -12.790282249450684

Token 758: ' sommet' (ID: 130502)
  Prédit: 'som'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'som' → logprob: -0.08627151697874069
    2. ' sommet' → logprob: -2.5862715244293213
    3. 's' → logprob: -5.211271286010742
    4. 'print' → logprob: -7.336271286010742
    5. 'no' → logprob: -7.336271286010742
    6. '```' → logprob: -8.461271286010742
    7. 'vertex' → logprob: -9.086271286010742
    8. 'summ' → logprob: -9.711271286010742
    9. 'n' → logprob: -9.961271286010742
    10. '   ' → logprob: -10.336271286010742

Token 759: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5617037415504456
    2. ':
' → logprob: -1.8117036819458008
    3. ':' → logprob: -1.9367036819458008
    4. 'print' → logprob: -2.186703681945801
    5. '           ' → logprob: -4.936703681945801
    6. ' print' → logprob: -6.686703681945801
    7. ',' → logprob: -7.436703681945801
    8. ':return' → logprob: -8.1867036819458
    9. '
' → logprob: -8.8117036819458
    10. '```' → logprob: -9.3117036819458

Token 760: ' pas' (ID: 2173)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.006451150868088007
    2. '       ' → logprob: -5.25645112991333
    3. ' print' → logprob: -6.75645112991333
    4. '           ' → logprob: -9.881451606750488
    5. '	print' → logprob: -14.006451606750488
    6. '               ' → logprob: -14.631451606750488
    7. '   ' → logprob: -15.131451606750488
    8. '#' → logprob: -15.131451606750488
    9. '0' → logprob: -16.006450653076172
    10. '
' → logprob: -16.256450653076172

Token 761: ' d' (ID: 272)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.33207523822784424
    2. ' besoin' → logprob: -1.7070752382278442
    3. ' de' → logprob: -2.4570751190185547
    4. '       ' → logprob: -5.082075119018555
    5. 'd' → logprob: -5.207075119018555
    6. '   ' → logprob: -6.957075119018555
    7. '#' → logprob: -6.957075119018555
    8. 'bes' → logprob: -7.457075119018555
    9. 'need' → logprob: -7.707075119018555
    10. ' ' → logprob: -8.207075119018555

Token 762: ''ar' (ID: 54307)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.044943537563085556
    2. 'ar' → logprob: -4.294943332672119
    3. 'es' → logprob: -4.544943332672119
    4. ''ar' → logprob: -4.669943332672119
    5. 'edges' → logprob: -5.419943332672119
    6. 'éc' → logprob: -6.169943332672119
    7. 'ark' → logprob: -7.294943332672119
    8. 'ec' → logprob: -7.544943332672119
    9. 'é' → logprob: -7.544943332672119
    10. 'ifference' → logprob: -8.169943809509277

Token 763: 'ête' (ID: 16808)
  Prédit: 'ête'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ête' → logprob: -0.43497538566589355
    2. 'êtes' → logprob: -1.0599753856658936
    3. 'c' → logprob: -6.184975624084473
    4. 'te' → logprob: -6.809975624084473
    5. 'tes' → logprob: -6.809975624084473
    6. 'ê' → logprob: -7.809975624084473
    7. 'e' → logprob: -8.309975624084473
    8. 'cs' → logprob: -8.309975624084473
    9. '^' → logprob: -8.559975624084473
    10. 'r' → logprob: -8.809975624084473

Token 764: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1138736754655838
    2. '           ' → logprob: -2.2388737201690674
    3. 'print' → logprob: -7.238873481750488
    4. ',' → logprob: -8.488873481750488
    5. ' print' → logprob: -9.363873481750488
    6. '   ' → logprob: -11.113873481750488
    7. '        
' → logprob: -12.113873481750488
    8. '
' → logprob: -12.363873481750488
    9. '               ' → logprob: -12.988873481750488
    10. '	       ' → logprob: -12.988873481750488

Token 765: ' slim' (ID: 31795)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.02060133032500744
    2. '       ' → logprob: -4.020601272583008
    3. ' print' → logprob: -6.020601272583008
    4. '           ' → logprob: -10.895601272583008
    5. '	print' → logprob: -13.895601272583008
    6. '   ' → logprob: -15.020601272583008
    7. '        
' → logprob: -15.395601272583008
    8. '
' → logprob: -16.145601272583008
    9. '```' → logprob: -16.145601272583008
    10. '	   ' → logprob: -18.020601272583008

Token 766: 'ness' (ID: 2816)
  Prédit: 'ness'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ness' → logprob: -0.00014704519708175212
    2. 'm' → logprob: -10.125146865844727
    3. 'n' → logprob: -10.750146865844727
    4. '=' → logprob: -11.125146865844727
    5. 'mess' → logprob: -11.250146865844727
    6. 'mest' → logprob: -11.375146865844727
    7. 'min' → logprob: -11.625146865844727
    8. ' ness' → logprob: -11.625146865844727
    9. '0' → logprob: -11.875146865844727
    10. ' =' → logprob: -12.375146865844727

Token 767: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2014443278312683
    2. ' =' → logprob: -1.701444387435913
    3. '0' → logprob: -10.701444625854492
    4. ':' → logprob: -12.951444625854492
    5. ' ' → logprob: -13.076444625854492
    6. 'print' → logprob: -13.576444625854492
    7. ' is' → logprob: -13.826444625854492
    8. 's' → logprob: -15.326444625854492
    9. '=
' → logprob: -15.451444625854492
    10. '   ' → logprob: -15.576444625854492

Token 768: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.500003814697266
    3. ' ' → logprob: -19.000003814697266
    4. '   ' → logprob: -19.875003814697266
    5. '۰' → logprob: -20.375003814697266
    6. '           ' → logprob: -21.375003814697266
    7. '
' → logprob: -21.750003814697266
    8. '```' → logprob: -21.875003814697266
    9. '=' → logprob: -22.250003814697266
    10. 'zero' → logprob: -22.375003814697266

Token 769: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.125001907348633
    3. '   ' → logprob: -20.625001907348633
    4. '۰' → logprob: -20.750001907348633
    5. ' ' → logprob: -20.875001907348633
    6. '000' → logprob: -21.500001907348633
    7. '00' → logprob: -22.125001907348633
    8. '  ' → logprob: -22.375001907348633
    9. 'zero' → logprob: -22.625001907348633
    10. '০' → logprob: -22.875001907348633

Token 770: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016624143347144127
    2. '           ' → logprob: -4.1416239738464355
    3. 'print' → logprob: -7.5166239738464355
    4. '
' → logprob: -10.891624450683594
    5. '        
' → logprob: -11.891624450683594
    6. ' print' → logprob: -11.891624450683594
    7. '   ' → logprob: -12.141624450683594
    8. ',' → logprob: -12.266624450683594
    9. '            
' → logprob: -14.141624450683594
    10. '               ' → logprob: -14.516624450683594

Token 771: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16049879789352417
    2. '       ' → logprob: -1.910498857498169
    3. 'print' → logprob: -8.28549861907959
    4. ' print' → logprob: -11.28549861907959
    5. '
' → logprob: -12.03549861907959
    6. '   ' → logprob: -13.16049861907959
    7. '        
' → logprob: -13.91049861907959
    8. ',' → logprob: -15.16049861907959
    9. '		' → logprob: -15.41049861907959
    10. '               ' → logprob: -16.035499572753906

Token 772: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -1.0564331205387134e-05
    2. ' print' → logprob: -11.50001049041748
    3. '           ' → logprob: -15.12501049041748
    4. '       ' → logprob: -16.375011444091797
    5. '```' → logprob: -18.250011444091797
    6. '
' → logprob: -18.875011444091797
    7. '	print' → logprob: -20.125011444091797
    8. '   ' → logprob: -21.375011444091797
    9. '        
' → logprob: -23.000011444091797
    10. '            
' → logprob: -23.375011444091797

Token 773: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0005535095697268844
    2. '0' → logprob: -7.500553607940674
    3. '(
' → logprob: -15.000553131103516
    4. ' (' → logprob: -16.500553131103516
    5. '("' → logprob: -19.250553131103516
    6. '('' → logprob: -20.250553131103516
    7. ' ' → logprob: -20.750553131103516
    8. '()' → logprob: -22.000553131103516
    9. '(

' → logprob: -22.125553131103516
    10. '   ' → logprob: -22.375553131103516

Token 774: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -17.5
    3. '"' → logprob: -21.25
    4. ')' → logprob: -21.25
    5. '   ' → logprob: -21.625
    6. '۰' → logprob: -23.5
    7. '(' → logprob: -23.875
    8. '`' → logprob: -24.125
    9. '０' → logprob: -24.25
    10. ''' → logprob: -24.625

Token 775: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9890654683113098
    2. ')
' → logprob: -0.9890654683113098
    3. '           ' → logprob: -1.489065408706665
    4. '       ' → logprob: -3.489065408706665
    5. '   ' → logprob: -11.489065170288086
    6. ')return' → logprob: -11.739065170288086
    7. '               ' → logprob: -11.864065170288086
    8. ')
' → logprob: -12.614065170288086
    9. 'continue' → logprob: -12.989065170288086
    10. '		' → logprob: -13.864065170288086

Token 776: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3134995996952057
    2. '       ' → logprob: -1.3134995698928833
    3. 'continue' → logprob: -8.563499450683594
    4. 'else' → logprob: -11.188499450683594
    5. '<|end|>' → logprob: -11.313499450683594
    6. ' continue' → logprob: -11.688499450683594
    7. '   ' → logprob: -11.938499450683594
    8. '               ' → logprob: -13.313499450683594
    9. '	       ' → logprob: -14.063499450683594
    10. '_continue' → logprob: -14.438499450683594

Token 777: ' continue' (ID: 4901)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.021306432783603668
    2. '       ' → logprob: -4.02130651473999
    3. 'continue' (adapté à ' continue') → logprob: -5.77130651473999
    4. ' continue' → logprob: -10.396306037902832
    5. 'else' → logprob: -12.896306037902832
    6. '   ' → logprob: -13.396306037902832
    7. '               ' → logprob: -14.771306037902832
    8. '_continue' → logprob: -15.646306037902832
    9. 'contin' → logprob: -16.14630699157715
    10. '		' → logprob: -16.14630699157715

Token 778: '
        
' (ID: 20417)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01618616096675396
    2. '        
' → logprob: -4.141186237335205
    3. '    
' → logprob: -9.891185760498047
    4. '<|end|>' → logprob: -10.391185760498047
    5. '
' → logprob: -10.891185760498047
    6. '  
' → logprob: -11.141185760498047
    7. '   ' → logprob: -11.391185760498047
    8. '      ' → logprob: -11.641185760498047
    9. '       
' → logprob: -11.891185760498047
    10. '        
        
' → logprob: -13.266185760498047

Token 779: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06321229040622711
    2. 'result' → logprob: -2.8132123947143555
    3. ' result' → logprob: -7.5632123947143555
    4. '   ' → logprob: -7.8132123947143555
    5. 'res' → logprob: -8.313212394714355
    6. '        
' → logprob: -9.938212394714355
    7. 'print' → logprob: -11.813212394714355
    8. 'rest' → logprob: -12.563212394714355
    9. '    
' → logprob: -12.813212394714355
    10. 'answer' → logprob: -13.188212394714355

Token 780: ' #' (ID: 1069)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.10322389006614685
    2. 'res' → logprob: -2.3532238006591797
    3. 'answer' → logprob: -6.60322380065918
    4. 'ans' → logprob: -7.35322380065918
    5. 'sl' → logprob: -7.72822380065918
    6. 'print' → logprob: -8.22822380065918
    7. 'min' → logprob: -8.35322380065918
    8. '   ' → logprob: -10.10322380065918
    9. ' result' → logprob: -11.35322380065918
    10. '       ' → logprob: -12.22822380065918

Token 781: ' Si' (ID: 7832)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.16256213188171387
    2. 'res' → logprob: -1.9125621318817139
    3. 'answer' → logprob: -6.537562370300293
    4. 'ans' → logprob: -7.662562370300293
    5. 'min' → logprob: -8.412562370300293
    6. 'sl' → logprob: -8.912562370300293
    7. ' result' → logprob: -10.662562370300293
    8. '   ' → logprob: -10.912562370300293
    9. ' res' → logprob: -11.537562370300293
    10. 'rés' → logprob: -12.787562370300293

Token 782: ' pas' (ID: 2173)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'find' → logprob: -1.247323751449585
    2. 'not' → logprob: -1.497323751449585
    3. 'can' → logprob: -2.122323751449585
    4. 'n' → logprob: -2.122323751449585
    5. ' not' → logprob: -2.497323751449585
    6. 'm' → logprob: -2.872323751449585
    7. 'min' → logprob: -3.372323751449585
    8. ' find' → logprob: -3.747323751449585
    9. 'len' → logprob: -4.247323989868164
    10. ' n' → logprob: -4.622323989868164

Token 783: ' assez' (ID: 33376)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'can' → logprob: -0.03445107862353325
    2. ' can' → logprob: -3.4094510078430176
    3. 'possible' → logprob: -8.034451484680176
    4. 'find' → logprob: -8.784451484680176
    5. 'able' → logprob: -10.034451484680176
    6. '   ' → logprob: -10.284451484680176
    7. ' possible' → logprob: -10.284451484680176
    8. '(can' → logprob: -10.409451484680176
    9. ' edges' → logprob: -10.784451484680176
    10. 'edges' → logprob: -10.784451484680176

Token 784: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.007064862176775932
    2. ' d' → logprob: -5.6320648193359375
    3. '       ' → logprob: -5.7570648193359375
    4. 'de' → logprob: -8.757064819335938
    5. '   ' → logprob: -9.507064819335938
    6. 'edges' → logprob: -11.132064819335938
    7. '           ' → logprob: -11.382064819335938
    8. '_edges' → logprob: -11.507064819335938
    9. 'ar' → logprob: -11.882064819335938
    10. '        ' → logprob: -12.882064819335938

Token 785: ''ar' (ID: 54307)
  Prédit: ''ar'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''ar' → logprob: -0.5823606848716736
    2. 'edges' → logprob: -1.9573607444763184
    3. 'ar' → logprob: -2.2073607444763184
    4. '_edges' → logprob: -2.3323607444763184
    5. ''' → logprob: -2.5823607444763184
    6. 'es' → logprob: -4.957360744476318
    7. ' edges' → logprob: -6.082360744476318
    8. 'e' → logprob: -6.082360744476318
    9. 'arest' → logprob: -7.332360744476318
    10. ''es' → logprob: -7.457360744476318

Token 786: 'êtes' (ID: 23720)
  Prédit: 'êtes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êtes' → logprob: -0.00024275471514556557
    2. 'tes' → logprob: -9.000243186950684
    3. 'cs' → logprob: -9.500243186950684
    4. 'ètes' → logprob: -11.000243186950684
    5. 'etes' → logprob: -11.875243186950684
    6. 'ête' → logprob: -12.375243186950684
    7. 'g' → logprob: -12.500243186950684
    8. '^' → logprob: -13.125243186950684
    9. 'ê' → logprob: -13.375243186950684
    10. 'es' → logprob: -13.500243186950684

Token 787: ' pour' (ID: 1930)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2741018831729889
    2. 'or' → logprob: -2.149101972579956
    3. 'if' → logprob: -2.399101972579956
    4. ' or' → logprob: -3.524101972579956
    5. '   ' → logprob: -7.399101734161377
    6. ' if' → logprob: -7.524101734161377
    7. ':' → logprob: -7.524101734161377
    8. 'for' → logprob: -7.524101734161377
    9. '           ' → logprob: -8.024102210998535
    10. '(' → logprob: -10.024102210998535

Token 788: ' un' (ID: 537)
  Prédit: 'connect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'connect' → logprob: -0.056516945362091064
    2. 'former' → logprob: -4.056517124176025
    3. 'rel' → logprob: -4.056517124176025
    4. 'conn' → logprob: -4.181517124176025
    5. 'con' → logprob: -6.056517124176025
    6. 'constit' → logprob: -7.181517124176025
    7. '   ' → logprob: -7.306517124176025
    8. 'assembler' → logprob: -8.556516647338867
    9. ' connecter' → logprob: -8.681516647338867
    10. 'un' → logprob: -9.056516647338867

Token 789: ' arbre' (ID: 164180)
  Prédit: 'ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.04990772157907486
    2. ' arbre' → logprob: -3.049907684326172
    3. 'arb' → logprob: -6.924907684326172
    4. '   ' → logprob: -8.674907684326172
    5. ''ar' → logprob: -10.424907684326172
    6. 'a' → logprob: -10.549907684326172
    7. ' ' → logprob: -10.799907684326172
    8. 'e' → logprob: -11.299907684326172
    9. '```' → logprob: -11.674907684326172
    10. 'aré' → logprob: -11.799907684326172

Token 790: ' couvr' (ID: 129883)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.9408707022666931
    2. ' couvr' → logprob: -0.9408707022666931
    3. '       ' → logprob: -1.940870761871338
    4. '   ' → logprob: -2.815870761871338
    5. ' couvrir' → logprob: -4.565870761871338
    6. 'cou' → logprob: -6.065870761871338
    7. 'cover' → logprob: -7.065870761871338
    8. '           ' → logprob: -7.440870761871338
    9. '_c' → logprob: -7.690870761871338
    10. ' covering' → logprob: -8.69087028503418

Token 791: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.002202474744990468
    2. 'ent' → logprob: -7.00220251083374
    3. 'nant' → logprob: -7.75220251083374
    4. 'ir' → logprob: -7.87720251083374
    5. 'er' → logprob: -8.752202033996582
    6. 'nt' → logprob: -9.127202033996582
    7. 'ing' → logprob: -9.627202033996582
    8. 'n' → logprob: -9.877202033996582
    9. 'int' → logprob: -10.627202033996582
    10. 't' → logprob: -11.252202033996582

Token 792: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04355297237634659
    2. 'if' → logprob: -3.418552875518799
    3. ' or' → logprob: -5.293552875518799
    4. ':' → logprob: -5.918552875518799
    5. ' if' → logprob: -6.918552875518799
    6. 'or' → logprob: -7.418552875518799
    7. '           ' → logprob: -8.793553352355957
    8. '   ' → logprob: -8.793553352355957
    9. ',' → logprob: -9.168553352355957
    10. ':
' → logprob: -9.793553352355957

Token 793: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008609615033492446
    2. 'if' → logprob: -7.875861167907715
    3. ' if' → logprob: -8.250861167907715
    4. ',' → logprob: -9.125861167907715
    5. '   ' → logprob: -10.125861167907715
    6. ' or' → logprob: -10.125861167907715
    7. ':' → logprob: -11.000861167907715
    8. ' and' → logprob: -11.750861167907715
    9. '           ' → logprob: -12.875861167907715
    10. 'and' → logprob: -13.500861167907715

Token 794: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.07940446585416794
    2. '       ' → logprob: -2.579404354095459
    3. ' if' → logprob: -7.579404354095459
    4. '   ' → logprob: -12.579404830932617
    5. '	if' → logprob: -16.204404830932617
    6. '```' → logprob: -16.829404830932617
    7. 'elif' → logprob: -16.954404830932617
    8. '           ' → logprob: -17.329404830932617
    9. 'print' → logprob: -17.454404830932617
    10. ' ' → logprob: -17.704404830932617

Token 795: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -8.180258191714529e-06
    2. ' m' → logprob: -11.750008583068848
    3. 'len' → logprob: -16.50000762939453
    4. '   ' → logprob: -17.00000762939453
    5. '	m' → logprob: -17.75000762939453
    6. '       ' → logprob: -21.00000762939453
    7. '(m' → logprob: -21.37500762939453
    8. '  ' → logprob: -21.62500762939453
    9. '    ' → logprob: -22.37500762939453
    10. 'n' → logprob: -22.37500762939453

Token 796: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.03807775676250458
    2. '<' → logprob: -3.2880778312683105
    3. '<n' → logprob: -10.413077354431152
    4. ' ' → logprob: -12.663077354431152
    5. '<m' → logprob: -13.788077354431152
    6. '[' → logprob: -14.413077354431152
    7. ' <
' → logprob: -15.163077354431152
    8. '<int' → logprob: -15.538077354431152
    9. '<num' → logprob: -15.663077354431152
    10. '<
' → logprob: -16.28807830810547

Token 797: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.10023190826177597
    2. ' n' → logprob: -2.350231885910034
    3. '(n' → logprob: -10.975232124328613
    4. '{' → logprob: -12.350232124328613
    5. '	n' → logprob: -13.850232124328613
    6. ' (' → logprob: -13.850232124328613
    7. '(' → logprob: -14.100232124328613
    8. ' ' → logprob: -14.725232124328613
    9. '   ' → logprob: -16.100231170654297
    10. '_n' → logprob: -16.100231170654297

Token 798: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3132769465446472
    2. ' -' → logprob: -1.313277006149292
    3. '   ' → logprob: -11.188277244567871
    4. ' ' → logprob: -14.688277244567871
    5. '       ' → logprob: -15.063277244567871
    6. ' ' → logprob: -15.188277244567871
    7. '−' → logprob: -15.563277244567871
    8. '–' → logprob: -16.938276290893555
    9. '1' → logprob: -17.063276290893555
    10. ':' → logprob: -17.188276290893555

Token 799: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. '```' → logprob: -19.625
    4. '   ' → logprob: -19.875
    5. '
' → logprob: -20.5
    6. '۱' → logprob: -21.125
    7. '１' → logprob: -21.375
    8. '১' → logprob: -22.125
    9. '<|end|>' → logprob: -22.75
    10. '१' → logprob: -23.0

Token 800: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.375
    3. '```' → logprob: -21.125
    4. '۱' → logprob: -21.25
    5. '
' → logprob: -21.5
    6. '１' → logprob: -21.625
    7. '   ' → logprob: -21.625
    8. '১' → logprob: -22.75
    9. '﻿' → logprob: -23.125
    10. '2' → logprob: -23.125

Token 801: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2538014054298401
    2. ':
' → logprob: -1.5038013458251953
    3. '       ' → logprob: -6.378801345825195
    4. '   ' → logprob: -9.503801345825195
    5. '           ' → logprob: -9.628801345825195
    6. ' or' → logprob: -11.253801345825195
    7. 'print' → logprob: -11.878801345825195
    8. '):
' → logprob: -13.003801345825195
    9. '```' → logprob: -13.128801345825195
    10. ':return' → logprob: -13.503801345825195

Token 802: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005632608663290739
    2. '       ' → logprob: -5.630632400512695
    3. 'print' → logprob: -6.255632400512695
    4. ' print' → logprob: -9.380632400512695
    5. '```' → logprob: -11.255632400512695
    6. ':
' → logprob: -12.380632400512695
    7. '   ' → logprob: -12.505632400512695
    8. '	       ' → logprob: -13.630632400512695
    9. ',' → logprob: -13.755632400512695
    10. '          ' → logprob: -14.255632400512695

Token 803: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.028183652088046074
    2. '       ' → logprob: -3.778183698654175
    3. '           ' → logprob: -5.903183460235596
    4. ' print' → logprob: -6.153183460235596
    5. '```' → logprob: -10.153183937072754
    6. '   ' → logprob: -10.528183937072754
    7. ' ' → logprob: -13.403183937072754
    8. '	print' → logprob: -14.278183937072754
    9. '               ' → logprob: -14.778183937072754
    10. '``' → logprob: -16.403182983398438

Token 804: '(-' (ID: 8087)
  Prédit: '(-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.07901261746883392
    2. '-' → logprob: -2.579012632369995
    3. '(' → logprob: -9.079012870788574
    4. '("-' → logprob: -11.954012870788574
    5. '("' → logprob: -13.454012870788574
    6. '()-' → logprob: -15.579012870788574
    7. ' -' → logprob: -15.579012870788574
    8. '0' → logprob: -15.829012870788574
    9. '('' → logprob: -15.954012870788574
    10. '(
' → logprob: -16.079011917114258

Token 805: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.5
    3. '   ' → logprob: -20.125
    4. '
' → logprob: -20.875
    5. '１' → logprob: -21.875
    6. '       ' → logprob: -22.125
    7. '2' → logprob: -22.125
    8. '```' → logprob: -22.25
    9. '    
' → logprob: -22.75
    10. ')' → logprob: -22.9375

Token 806: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.11055688560009003
    2. '           ' → logprob: -2.3605568408966064
    3. ')' → logprob: -4.6105570793151855
    4. '       ' → logprob: -7.9855570793151855
    5. ')
' → logprob: -12.860556602478027
    6. '               ' → logprob: -13.110556602478027
    7. '   ' → logprob: -13.485556602478027
    8. '		' → logprob: -13.735556602478027
    9. ' )
' → logprob: -13.860556602478027
    10. '')
' → logprob: -14.985556602478027

Token 807: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0002314303710591048
    2. '       ' → logprob: -8.500231742858887
    3. 'continue' → logprob: -11.250231742858887
    4. ' continue' → logprob: -12.375231742858887
    5. '   ' → logprob: -12.500231742858887
    6. '	       ' → logprob: -13.000231742858887
    7. '		' → logprob: -13.250231742858887
    8. '               ' → logprob: -13.625231742858887
    9. '
' → logprob: -14.875231742858887
    10. '	   ' → logprob: -15.000231742858887

Token 808: ' continue' (ID: 4901)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0004240011621732265
    2. '       ' → logprob: -8.5004243850708
    3. 'continue' (adapté à ' continue') → logprob: -8.6254243850708
    4. ' continue' → logprob: -10.3754243850708
    5. '		' → logprob: -12.7504243850708
    6. '   ' → logprob: -13.2504243850708
    7. '
' → logprob: -13.3754243850708
    8. '	       ' → logprob: -13.3754243850708
    9. '               ' → logprob: -14.3754243850708
    10. '	continue' → logprob: -14.6254243850708

Token 809: '
        
' (ID: 20417)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09299556910991669
    2. '        
' → logprob: -2.4679956436157227
    3. '<|end|>' → logprob: -5.592995643615723
    4. '    
' → logprob: -8.842995643615723
    5. '
' → logprob: -9.842995643615723
    6. '   ' → logprob: -10.592995643615723
    7. '  
' → logprob: -10.967995643615723
    8. '       
' → logprob: -11.092995643615723
    9. '```' → logprob: -11.217995643615723
    10. '           ' → logprob: -11.217995643615723

Token 810: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1471424102783203
    2. 'result' → logprob: -2.0221424102783203
    3. ' result' → logprob: -5.77214241027832
    4. 'res' → logprob: -6.89714241027832
    5. '   ' → logprob: -8.77214241027832
    6. 'rest' → logprob: -9.02214241027832
    7. '        
' → logprob: -11.27214241027832
    8. ' res' → logprob: -11.64714241027832
    9. '<|end|>' → logprob: -11.89714241027832
    10. '```' → logprob: -12.14714241027832

Token 811: ' #' (ID: 1069)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.024841155856847763
    2. 'res' → logprob: -3.774841070175171
    3. 'answer' → logprob: -7.14984130859375
    4. 'print' → logprob: -8.14984130859375
    5. '       ' → logprob: -8.27484130859375
    6. ' result' → logprob: -9.27484130859375
    7. 'ans' → logprob: -9.52484130859375
    8. 'sl' → logprob: -9.64984130859375
    9. '```' → logprob: -11.02484130859375
    10. '   ' → logprob: -11.89984130859375

Token 812: ' Recherche' (ID: 114815)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.07409431785345078
    2. 'res' → logprob: -2.699094295501709
    3. 'answer' → logprob: -5.824094295501709
    4. 'ans' → logprob: -7.199094295501709
    5. ' result' → logprob: -8.574094772338867
    6. 'sl' → logprob: -8.574094772338867
    7. 'min' → logprob: -10.824094772338867
    8. '   ' → logprob: -10.949094772338867
    9. ' res' → logprob: -11.449094772338867
    10. 'print' → logprob: -11.449094772338867

Token 813: ' de' (ID: 334)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.028040051460266113
    2. 'result' → logprob: -3.6530399322509766
    3. 'print' → logprob: -7.153039932250977
    4. '   ' → logprob: -7.653039932250977
    5. '_result' → logprob: -8.028039932250977
    6. ' result' → logprob: -9.903039932250977
    7. '           ' → logprob: -10.403039932250977
    8. '(' → logprob: -10.778039932250977
    9. 'for' → logprob: -11.528039932250977
    10. '=' → logprob: -12.028039932250977

Token 814: ' la' (ID: 557)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.009554436430335045
    2. 'print' → logprob: -4.884554386138916
    3. 'find' → logprob: -6.384554386138916
    4. ' min' → logprob: -9.009554862976074
    5. 'minimal' → logprob: -10.634554862976074
    6. 'the' → logprob: -10.759554862976074
    7. 'result' → logprob: -10.884554862976074
    8. 'minimum' → logprob: -11.509554862976074
    9. '=min' → logprob: -11.509554862976074
    10. '(min' → logprob: -11.634554862976074

Token 815: ' plus' (ID: 2932)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.5216559171676636
    2. 'print' → logprob: -1.2716559171676636
    3. 'min' → logprob: -2.271656036376953
    4. 'res' → logprob: -4.146656036376953
    5. 'sl' → logprob: -5.521656036376953
    6. 'rés' → logprob: -6.396656036376953
    7. 'answer' → logprob: -6.771656036376953
    8. 'solution' → logprob: -9.021656036376953
    9. 'minimum' → logprob: -9.896656036376953
    10. 'val' → logprob: -10.646656036376953

Token 816: ' petite' (ID: 28119)
  Prédit: 'pet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pet' → logprob: -0.012547565624117851
    2. ' petite' → logprob: -5.512547492980957
    3. 'min' → logprob: -5.637547492980957
    4. 'small' → logprob: -5.887547492980957
    5. 'pro' → logprob: -7.637547492980957
    6. '```' → logprob: -7.762547492980957
    7. 'b' → logprob: -8.387547492980957
    8. '-' → logprob: -8.637547492980957
    9. '   ' → logprob: -8.887547492980957
    10. '
' → logprob: -9.137547492980957

Token 817: ' slim' (ID: 31795)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.13832271099090576
    2. ' différence' → logprob: -2.8883228302001953
    3. 'sl' → logprob: -3.3883228302001953
    4. 'difference' → logprob: -4.013322830200195
    5. ' slim' → logprob: -5.138322830200195
    6. 's' → logprob: -5.138322830200195
    7. '   ' → logprob: -6.013322830200195
    8. ' difference' → logprob: -6.638322830200195
    9. '_s' → logprob: -7.138322830200195
    10. 'd' → logprob: -7.138322830200195

Token 818: 'ness' (ID: 2816)
  Prédit: 'ness'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ness' → logprob: 0.0
    2. 'n' → logprob: -18.75
    3. 'nes' → logprob: -18.875
    4. 'teness' → logprob: -19.0
    5. 'nest' → logprob: -19.5
    6. 'iness' → logprob: -19.875
    7. '_' → logprob: -20.0
    8. 'min' → logprob: -20.0
    9. '```' → logprob: -20.0
    10. ' ness' → logprob: -20.125

Token 819: ' possible' (ID: 4149)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3667791187763214
    2. 'print' → logprob: -1.366779088973999
    3. 'result' → logprob: -2.991779088973999
    4. ' result' → logprob: -7.116779327392578
    5. ' print' → logprob: -7.366779327392578
    6. '   ' → logprob: -8.491779327392578
    7. '<|end|>' → logprob: -9.116779327392578
    8. 'res' → logprob: -10.741779327392578
    9. ',' → logprob: -10.866779327392578
    10. 's' → logprob: -11.241779327392578

Token 820: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01971738412976265
    2. 'print' → logprob: -4.019717216491699
    3. '   ' → logprob: -6.894717216491699
    4. 'result' → logprob: -7.894717216491699
    5. ' print' → logprob: -8.8947172164917
    6. ' result' → logprob: -10.6447172164917
    7. '        
' → logprob: -11.5197172164917
    8. '```' → logprob: -12.2697172164917
    9. '<|end|>' → logprob: -13.2697172164917
    10. '    
' → logprob: -14.2697172164917

Token 821: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012871825136244297
    2. '   ' → logprob: -4.762871742248535
    3. 'print' → logprob: -5.512871742248535
    4. ' print' → logprob: -9.137871742248535
    5. 'result' → logprob: -9.387871742248535
    6. ' result' → logprob: -11.012871742248535
    7. '<|end|>' → logprob: -13.137871742248535
    8. '        
' → logprob: -13.637871742248535
    9. '```' → logprob: -13.762871742248535
    10. '           ' → logprob: -14.887871742248535

Token 822: ' result' (ID: 1534)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.08057161420583725
    2. 'result' (adapté à ' result') → logprob: -2.5805716514587402
    3. ' print' → logprob: -7.08057165145874
    4. 'res' → logprob: -7.45557165145874
    5. ' result' → logprob: -8.830571174621582
    6. '       ' → logprob: -9.330571174621582
    7. 'sl' → logprob: -11.455571174621582
    8. '   ' → logprob: -11.830571174621582
    9. 'answer' → logprob: -12.580571174621582
    10. 'ans' → logprob: -13.455571174621582

Token 823: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12692853808403015
    2. '=' → logprob: -2.1269285678863525
    3. ' ' → logprob: -15.876928329467773
    4. '＝' → logprob: -16.501928329467773
    5. ')' → logprob: -16.876928329467773
    6. ' ' → logprob: -17.376928329467773
    7. ',' → logprob: -17.501928329467773
    8. 's' → logprob: -17.751928329467773
    9. '=int' → logprob: -17.751928329467773
    10. ' =
' → logprob: -17.751928329467773

Token 824: ' find' (ID: 1646)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.01416350994259119
    2. ' find' → logprob: -4.264163494110107
    3. '(find' → logprob: -18.764163970947266
    4. '	find' → logprob: -19.264163970947266
    5. '=find' → logprob: -20.264163970947266
    6. '_find' → logprob: -22.764163970947266
    7. '   ' → logprob: -23.389163970947266
    8. '.find' → logprob: -23.764163970947266
    9. ')find' → logprob: -23.889163970947266
    10. '
' → logprob: -24.139163970947266

Token 825: '_min' (ID: 15950)
  Prédit: '_min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -9.088346359931165e-07
    2. '_max' → logprob: -14.750000953674316
    3. '_' → logprob: -15.500000953674316
    4. '_m' → logprob: -16.0
    5. ' _' → logprob: -17.0
    6. 'min' → logprob: -18.125
    7. '(_' → logprob: -18.875
    8. '```' → logprob: -19.125
    9. '_find' → logprob: -19.25
    10. '_low' → logprob: -19.5

Token 826: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -9.088346359931165e-07
    2. '_min' → logprob: -14.375000953674316
    3. '_sl' → logprob: -15.750000953674316
    4. '_' → logprob: -17.875
    5. 's' → logprob: -18.375
    6. '_find' → logprob: -18.375
    7. '\' → logprob: -18.75
    8. '```' → logprob: -19.0
    9. '(_' → logprob: -19.125
    10. ' _' → logprob: -19.375

Token 827: 'lim' (ID: 5406)
  Prédit: 'lim'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lim' → logprob: -2.2246291337069124e-05
    2. 'l' → logprob: -11.375021934509277
    3. 'лим' → logprob: -13.125021934509277
    4. 'lims' → logprob: -13.250021934509277
    5. 'lime' → logprob: -13.375021934509277
    6. 'sl' → logprob: -13.750021934509277
    7. 'limit' → logprob: -15.125021934509277
    8. '
' → logprob: -15.125021934509277
    9. '{"' → logprob: -15.125021934509277
    10. '{' → logprob: -15.250021934509277

Token 828: 'ness' (ID: 2816)
  Prédit: 'ness'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ness' → logprob: 0.0
    2. '_' → logprob: -17.875
    3. '_s' → logprob: -18.125
    4. 's' → logprob: -19.125
    5. 'nes' → logprob: -19.125
    6. 'ens' → logprob: -19.375
    7. 'ess' → logprob: -19.5
    8. 'eness' → logprob: -19.5
    9. '_n' → logprob: -19.75
    10. 'less' → logprob: -19.75

Token 829: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.6240566083070007e-06
    2. '(' → logprob: -14.000001907348633
    3. ' (' → logprob: -14.375001907348633
    4. 'n' → logprob: -17.125001907348633
    5. '```' → logprob: -17.375001907348633
    6. '(len' → logprob: -17.625001907348633
    7. '
' → logprob: -17.625001907348633
    8. '(
' → logprob: -17.750001907348633
    9. '(N' → logprob: -19.625001907348633
    10. '   ' → logprob: -19.750001907348633

Token 830: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.36574100604048e-06
    2. '(edges' → logprob: -12.750004768371582
    3. ',
' → logprob: -13.625004768371582
    4. ' ,' → logprob: -16.125003814697266
    5. ',n' → logprob: -16.750003814697266
    6. ',exports' → logprob: -17.875003814697266
    7. '‌,' → logprob: -18.250003814697266
    8. 'edges' → logprob: -18.375003814697266
    9. ',

' → logprob: -19.250003814697266
    10. '```' → logprob: -19.500003814697266

Token 831: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.005234475247561932
    2. ' edges' → logprob: -5.255234241485596
    3. '(edges' → logprob: -14.755234718322754
    4. '.edges' → logprob: -16.005233764648438
    5. '   ' → logprob: -16.505233764648438
    6. '_edges' → logprob: -16.880233764648438
    7. '       ' → logprob: -17.255233764648438
    8. 'Edges' → logprob: -18.255233764648438
    9. 'edge' → logprob: -18.630233764648438
    10. '[' → logprob: -18.880233764648438

Token 832: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005244668107479811
    2. ')
' → logprob: -5.255244731903076
    3. '   ' → logprob: -11.630244255065918
    4. ')
' → logprob: -13.880244255065918
    5. '       ' → logprob: -14.880244255065918
    6. ')n' → logprob: -15.130244255065918
    7. ' )' → logprob: -16.005245208740234
    8. '(n' → logprob: -16.255245208740234
    9. ')

' → logprob: -16.380245208740234
    10. ',' → logprob: -16.755245208740234

Token 833: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.32659173011779785
    2. '   ' → logprob: -1.3265917301177979
    3. 'print' → logprob: -4.326591491699219
    4. '```' → logprob: -11.076591491699219
    5. ' print' → logprob: -11.951591491699219
    6. '    
' → logprob: -13.076591491699219
    7. '        
' → logprob: -13.326591491699219
    8. '           ' → logprob: -13.576591491699219
    9. '	print' → logprob: -13.951591491699219
    10. '
' → logprob: -14.576591491699219

Token 834: ' print' (ID: 2123)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5764766335487366
    2. 'print' (adapté à ' print') → logprob: -0.8264766335487366
    3. '   ' → logprob: -7.576476573944092
    4. ' print' → logprob: -10.70147705078125
    5. '```' → logprob: -13.45147705078125
    6. '	print' → logprob: -15.32647705078125
    7. '
' → logprob: -15.95147705078125
    8. '        
' → logprob: -16.45147705078125
    9. '           ' → logprob: -17.07647705078125
    10. 'printf' → logprob: -17.20147705078125

Token 835: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -1.1756367712223437e-05
    2. '(' → logprob: -11.375011444091797
    3. '(results' → logprob: -15.500011444091797
    4. '(res' → logprob: -16.875011444091797
    5. 'result' → logprob: -17.625011444091797
    6. '(resultado' → logprob: -18.000011444091797
    7. '=result' → logprob: -19.000011444091797
    8. ' (' → logprob: -19.125011444091797
    9. ',result' → logprob: -20.000011444091797
    10. '()' → logprob: -20.375011444091797

Token 836: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1472419600977446e-06
    2. ')
' → logprob: -14.375000953674316
    3. ' )' → logprob: -14.750000953674316
    4. '())' → logprob: -16.875001907348633
    5. '   ' → logprob: -17.250001907348633
    6. ')`' → logprob: -17.250001907348633
    7. ')}' → logprob: -17.750001907348633
    8. '`)' → logprob: -18.500001907348633
    9. '))' → logprob: -18.625001907348633
    10. '()' → logprob: -19.000001907348633

Token 837: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00011641718447208405
    2. '```' → logprob: -9.625116348266602
    3. ' if' → logprob: -10.125116348266602
    4. '<|end|>' → logprob: -11.750116348266602
    5. '    
' → logprob: -14.250116348266602
    6. '  
' → logprob: -14.750116348266602
    7. '
' → logprob: -15.000116348266602
    8. '        
' → logprob: -15.125116348266602
    9. '#' → logprob: -15.625116348266602
    10. '``' → logprob: -15.875116348266602

Token 838: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.20145133137702942
    2. '__' → logprob: -1.701451301574707
    3. 'name' → logprob: -10.451451301574707
    4. ' ' → logprob: -12.576451301574707
    5. '_name' → logprob: -12.951451301574707
    6. '___' → logprob: -13.826451301574707
    7. 'Name' → logprob: -13.951451301574707
    8. '_' → logprob: -15.201451301574707
    9. '​' → logprob: -15.451451301574707
    10. ' ' → logprob: -15.451451301574707

Token 839: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.00037192381569184363
    2. ' __' → logprob: -9.125371932983398
    3. '==' → logprob: -9.250371932983398
    4. ' ==' → logprob: -9.500371932983398
    5. '__.__' → logprob: -10.250371932983398
    6. '_' → logprob: -10.875371932983398
    7. '.__' → logprob: -11.625371932983398
    8. '__.' → logprob: -11.750371932983398
    9. '__[' → logprob: -12.375371932983398
    10. '___' → logprob: -12.750371932983398

Token 840: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.00018458699923940003
    2. '__.__' → logprob: -8.625185012817383
    3. '==' → logprob: -12.750185012817383
    4. '__.' → logprob: -14.000185012817383
    5. '__
' → logprob: -14.375185012817383
    6. '____' → logprob: -14.875185012817383
    7. ' ==' → logprob: -15.625185012817383
    8. '__["' → logprob: -16.250185012817383
    9. '___' → logprob: -17.375185012817383
    10. '=="' → logprob: -17.375185012817383

Token 841: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.26404568552970886
    2. '==' → logprob: -1.6390457153320312
    3. ' ==' → logprob: -3.7640457153320312
    4. '=="' → logprob: -4.264045715332031
    5. '=='' → logprob: -7.514045715332031
    6. '__.__' → logprob: -10.139045715332031
    7. '==
' → logprob: -11.014045715332031
    8. '=' → logprob: -11.764045715332031
    9. '===' → logprob: -12.389045715332031
    10. '_' → logprob: -12.389045715332031

Token 842: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.10027578473091125
    2. ''' → logprob: -2.350275754928589
    3. '__' → logprob: -9.600275993347168
    4. ' "__' → logprob: -13.600275993347168
    5. ' '__' → logprob: -16.22527503967285
    6. ''"' → logprob: -17.35027503967285
    7. '"name' → logprob: -17.35027503967285
    8. '"'' → logprob: -18.10027503967285
    9. '"user' → logprob: -18.35027503967285
    10. '"class' → logprob: -18.72527503967285

Token 843: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.3903172016143799
    2. '__' → logprob: -1.1403172016143799
    3. '"' → logprob: -6.140316963195801
    4. ''' → logprob: -7.640316963195801
    5. 'name' → logprob: -8.1403169631958
    6. '__":
' → logprob: -8.7653169631958
    7. '```' → logprob: -8.7653169631958
    8. '==' → logprob: -10.1403169631958
    9. '_main' → logprob: -10.3903169631958
    10. '__':
' → logprob: -10.7653169631958

Token 844: '__":
' (ID: 49892)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.5780473351478577
    2. '__":
' → logprob: -0.8280473351478577
    3. '__':
' → logprob: -6.828047275543213
    4. '__.__' → logprob: -7.703047275543213
    5. '__.' → logprob: -7.828047275543213
    6. '__["' → logprob: -8.828047752380371
    7. '__:' → logprob: -11.703047752380371
    8. '__
' → logprob: -11.953047752380371
    9. '__
' → logprob: -12.203047752380371
    10. '.__' → logprob: -13.453047752380371

Token 845: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6000185012817383
    2. 'main' → logprob: -0.8500185012817383
    3. ' main' → logprob: -3.8500185012817383
    4. '	main' → logprob: -6.100018501281738
    5. '__' → logprob: -8.600018501281738
    6. '_main' → logprob: -10.225018501281738
    7. '   ' → logprob: -11.225018501281738
    8. '(main' → logprob: -11.475018501281738
    9. '    
' → logprob: -12.100018501281738
    10. '```' → logprob: -12.100018501281738

Token 846: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -1.9361264946837764e-07
    2. ' main' → logprob: -16.25
    3. '	main' → logprob: -21.5
    4. '   ' → logprob: -24.625
    5. '.main' → logprob: -26.5
    6. '_main' → logprob: -27.625
    7. '(main' → logprob: -27.875
    8. ' ' → logprob: -29.5
    9. 'Main' → logprob: -30.0
    10. 'mainwindow' → logprob: -30.125

Token 847: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 845
Tokens correctement prédits (1ère position, stricte): 345
Tokens correctement prédits (1ère position, avec adaptation): 381
Tokens correctement prédits (top 10): 689
Précision stricte (1ère position): 40.83%
Précision adaptée (1ère position): 45.09%
Précision (top 10): 81.54%
================================================================================
